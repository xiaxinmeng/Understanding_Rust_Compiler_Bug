{"sha": "d758e847c4ce6eda350809463cd87307c7e9c19c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDc1OGU4NDdjNGNlNmVkYTM1MDgwOTQ2M2NkODczMDdjN2U5YzE5Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-06-30T00:51:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-06-30T00:51:44Z"}, "message": "Enable implicitly declared move constructor/operator= (N3053).\n\ngcc/cp/\n\t* class.c (add_implicitly_declared_members): A class with no\n\texplicitly declared copy or move constructor gets both declared\n\timplicitly, and similarly for operator=.\n\t(check_bases): A type with no copy ctor does not inhibit\n\ta const copy ctor in a derived class.\n\t(check_field_decl): Likewise.\n\t(check_bases_and_members): A nonexistent copy ctor/op= is non-trivial.\n\t* tree.c (type_has_nontrivial_copy_init): Adjust semantics.\n\t(trivially_copyable_p): Likewise.\n\t* call.c (convert_like_real): Use type_has_nontrivial_copy_init.\n\t* class.c (finish_struct_bits): Likewise.\n\t* tree.c (build_target_expr_with_type): Likewise.\n\t* typeck2.c (store_init_value): Likewise.\nlibstdc++-v3/\n\t* include/bits/unordered_map.h: Explicitly default copy constructors.\n\t* include/bits/unordered_set.h: Likewise.\n\nFrom-SVN: r161582", "tree": {"sha": "232413e607b8465ed633e240d607739a6cbba07c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/232413e607b8465ed633e240d607739a6cbba07c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d758e847c4ce6eda350809463cd87307c7e9c19c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d758e847c4ce6eda350809463cd87307c7e9c19c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d758e847c4ce6eda350809463cd87307c7e9c19c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d758e847c4ce6eda350809463cd87307c7e9c19c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "54ca9930b79c8f759919fdbe671ff24ce4141b0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54ca9930b79c8f759919fdbe671ff24ce4141b0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54ca9930b79c8f759919fdbe671ff24ce4141b0c"}], "stats": {"total": 2145, "additions": 1168, "deletions": 977}, "files": [{"sha": "e0646a1d9a012a69c3379d2b96c13b4eee77859b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -1,5 +1,21 @@\n 2010-06-29  Jason Merrill  <jason@redhat.com>\n \n+\tEnable implicitly declared move constructor/operator= (N3053).\n+\t* class.c (add_implicitly_declared_members): A class with no\n+\texplicitly declared copy or move constructor gets both declared\n+\timplicitly, and similarly for operator=.\n+\t(check_bases): A type with no copy ctor does not inhibit\n+\ta const copy ctor in a derived class.  It does mean the derived\n+\tone is non-trivial.\n+\t(check_field_decl): Likewise.\n+\t(check_bases_and_members): A nonexistent copy ctor/op= is non-trivial.\n+\t* tree.c (type_has_nontrivial_copy_init): Adjust semantics.\n+\t(trivially_copyable_p): Likewise.\n+\t* call.c (convert_like_real): Use type_has_nontrivial_copy_init.\n+\t* class.c (finish_struct_bits): Likewise.\n+\t* tree.c (build_target_expr_with_type): Likewise.\n+\t* typeck2.c (store_init_value): Likewise.\n+\n \tEnable implicitly deleted functions (N2346)\n \t* class.c (check_bases_and_members): Adjust lambda flags.\n \t* method.c (implicitly_declare_fn): Set DECL_DELETED_FN if appropriate."}, {"sha": "7e632d0f1b3edb1c9dcd3193d72d5cb2f42f2f26", "filename": "gcc/cp/call.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -5197,7 +5197,7 @@ convert_like_real (conversion *convs, tree expr, tree fn, int argnum,\n \t       OK.  */\n \t    if ((lvalue & clk_packed)\n \t\t&& CLASS_TYPE_P (type)\n-\t\t&& !TYPE_HAS_TRIVIAL_COPY_CTOR (type))\n+\t\t&& type_has_nontrivial_copy_init (type))\n \t      {\n \t\tif (complain & tf_error)\n \t\t  error (\"cannot bind packed field %qE to %qT\",\n@@ -5905,7 +5905,7 @@ build_over_call (struct z_candidate *cand, int flags, tsubst_flags_t complain)\n \t  if (TREE_CODE (arg) == TARGET_EXPR)\n \t    return arg;\n \t  else if (trivial)\n-\t    return build_target_expr_with_type (arg, DECL_CONTEXT (fn));\n+\t    return force_target_expr (DECL_CONTEXT (fn), arg);\n \t}\n       else if (TREE_CODE (arg) == TARGET_EXPR || trivial)\n \t{"}, {"sha": "a2ed86334b5ba53d91d15fcf21833e84df45638b", "filename": "gcc/cp/class.c", "status": "modified", "additions": 25, "deletions": 15, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -1282,7 +1282,8 @@ check_bases (tree t,\n \t assignment operators that take const references, then the\n \t derived class cannot have such a member automatically\n \t generated.  */\n-      if (! TYPE_HAS_CONST_COPY_CTOR (basetype))\n+      if (TYPE_HAS_COPY_CTOR (basetype)\n+\t  && ! TYPE_HAS_CONST_COPY_CTOR (basetype))\n \t*cant_have_const_ctor_p = 1;\n       if (TYPE_HAS_COPY_ASSIGN (basetype)\n \t  && !TYPE_HAS_CONST_COPY_ASSIGN (basetype))\n@@ -1312,8 +1313,10 @@ check_bases (tree t,\n       TYPE_HAS_NONTRIVIAL_DESTRUCTOR (t)\n \t|= TYPE_HAS_NONTRIVIAL_DESTRUCTOR (basetype);\n       TYPE_HAS_COMPLEX_COPY_ASSIGN (t)\n-\t|= TYPE_HAS_COMPLEX_COPY_ASSIGN (basetype);\n-      TYPE_HAS_COMPLEX_COPY_CTOR (t) |= TYPE_HAS_COMPLEX_COPY_CTOR (basetype);\n+\t|= (TYPE_HAS_COMPLEX_COPY_ASSIGN (basetype)\n+\t    || !TYPE_HAS_COPY_ASSIGN (basetype));\n+      TYPE_HAS_COMPLEX_COPY_CTOR (t) |= (TYPE_HAS_COMPLEX_COPY_CTOR (basetype)\n+\t\t\t\t\t || !TYPE_HAS_COPY_CTOR (basetype));\n       TYPE_HAS_COMPLEX_MOVE_ASSIGN (t)\n \t|= TYPE_HAS_COMPLEX_MOVE_ASSIGN (basetype);\n       TYPE_HAS_COMPLEX_MOVE_CTOR (t) |= TYPE_HAS_COMPLEX_MOVE_CTOR (basetype);\n@@ -1545,7 +1548,8 @@ finish_struct_bits (tree t)\n      mode to be BLKmode, and force its TREE_ADDRESSABLE bit to be\n      nonzero.  This will cause it to be passed by invisible reference\n      and prevent it from being returned in a register.  */\n-  if (! TYPE_HAS_TRIVIAL_COPY_CTOR (t) || TYPE_HAS_NONTRIVIAL_DESTRUCTOR (t))\n+  if (type_has_nontrivial_copy_init (t)\n+      || TYPE_HAS_NONTRIVIAL_DESTRUCTOR (t))\n     {\n       tree variants;\n       DECL_MODE (TYPE_MAIN_DECL (t)) = BLKmode;\n@@ -2647,27 +2651,28 @@ add_implicitly_declared_members (tree t,\n \n      If a class definition does not explicitly declare a copy\n      constructor, one is declared implicitly.  */\n-  if (! TYPE_HAS_COPY_CTOR (t) && ! TYPE_FOR_JAVA (t))\n+  if (! TYPE_HAS_COPY_CTOR (t) && ! TYPE_FOR_JAVA (t)\n+      && !type_has_move_constructor (t))\n     {\n       TYPE_HAS_COPY_CTOR (t) = 1;\n       TYPE_HAS_CONST_COPY_CTOR (t) = !cant_have_const_cctor;\n       CLASSTYPE_LAZY_COPY_CTOR (t) = 1;\n+      if (cxx_dialect >= cxx0x)\n+\tCLASSTYPE_LAZY_MOVE_CTOR (t) = 1;\n     }\n \n-  /* Currently only lambdas get a lazy move ctor, but N3053 adds them for\n-     other classes.  */\n-  if (LAMBDA_TYPE_P (t))\n-    CLASSTYPE_LAZY_MOVE_CTOR (t) = 1;\n-\n   /* If there is no assignment operator, one will be created if and\n      when it is needed.  For now, just record whether or not the type\n      of the parameter to the assignment operator will be a const or\n      non-const reference.  */\n-  if (!TYPE_HAS_COPY_ASSIGN (t) && !TYPE_FOR_JAVA (t))\n+  if (!TYPE_HAS_COPY_ASSIGN (t) && !TYPE_FOR_JAVA (t)\n+      && !type_has_move_assign (t))\n     {\n       TYPE_HAS_COPY_ASSIGN (t) = 1;\n       TYPE_HAS_CONST_COPY_ASSIGN (t) = !cant_have_const_assignment;\n       CLASSTYPE_LAZY_COPY_ASSIGN (t) = 1;\n+      if (cxx_dialect >= cxx0x)\n+\tCLASSTYPE_LAZY_MOVE_ASSIGN (t) = 1;\n     }\n \n   /* We can't be lazy about declaring functions that might override\n@@ -2863,18 +2868,23 @@ check_field_decl (tree field,\n \t  TYPE_NEEDS_CONSTRUCTING (t) |= TYPE_NEEDS_CONSTRUCTING (type);\n \t  TYPE_HAS_NONTRIVIAL_DESTRUCTOR (t)\n \t    |= TYPE_HAS_NONTRIVIAL_DESTRUCTOR (type);\n-\t  TYPE_HAS_COMPLEX_COPY_ASSIGN (t) |= TYPE_HAS_COMPLEX_COPY_ASSIGN (type);\n-\t  TYPE_HAS_COMPLEX_COPY_CTOR (t) |= TYPE_HAS_COMPLEX_COPY_CTOR (type);\n+\t  TYPE_HAS_COMPLEX_COPY_ASSIGN (t)\n+\t    |= (TYPE_HAS_COMPLEX_COPY_ASSIGN (type)\n+\t\t|| !TYPE_HAS_COPY_ASSIGN (type));\n+\t  TYPE_HAS_COMPLEX_COPY_CTOR (t) |= (TYPE_HAS_COMPLEX_COPY_CTOR (type)\n+\t\t\t\t\t     || !TYPE_HAS_COPY_CTOR (type));\n \t  TYPE_HAS_COMPLEX_MOVE_ASSIGN (t) |= TYPE_HAS_COMPLEX_MOVE_ASSIGN (type);\n \t  TYPE_HAS_COMPLEX_MOVE_CTOR (t) |= TYPE_HAS_COMPLEX_MOVE_CTOR (type);\n \t  TYPE_HAS_COMPLEX_DFLT (t) |= (!TYPE_HAS_DEFAULT_CONSTRUCTOR (type)\n \t\t\t\t\t|| TYPE_HAS_COMPLEX_DFLT (type));\n \t}\n \n-      if (!TYPE_HAS_CONST_COPY_CTOR (type))\n+      if (TYPE_HAS_COPY_CTOR (type)\n+\t  && !TYPE_HAS_CONST_COPY_CTOR (type))\n \t*cant_have_const_ctor = 1;\n \n-      if (!TYPE_HAS_CONST_COPY_ASSIGN (type))\n+      if (TYPE_HAS_COPY_ASSIGN (type)\n+\t  && !TYPE_HAS_CONST_COPY_ASSIGN (type))\n \t*no_const_asn_ref = 1;\n     }\n   if (DECL_INITIAL (field) != NULL_TREE)"}, {"sha": "6d1ff10ea17fa47a3ec8ed5b3c3c677a95807923", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -479,7 +479,7 @@ build_target_expr_with_type (tree init, tree type)\n \n   if (TREE_CODE (init) == TARGET_EXPR)\n     return init;\n-  else if (CLASS_TYPE_P (type) && !TYPE_HAS_TRIVIAL_COPY_CTOR (type)\n+  else if (CLASS_TYPE_P (type) && type_has_nontrivial_copy_init (type)\n \t   && !VOID_TYPE_P (TREE_TYPE (init))\n \t   && TREE_CODE (init) != COND_EXPR\n \t   && TREE_CODE (init) != CONSTRUCTOR\n@@ -497,7 +497,8 @@ build_target_expr_with_type (tree init, tree type)\n \n /* Like the above function, but without the checking.  This function should\n    only be used by code which is deliberately trying to subvert the type\n-   system, such as call_builtin_trap.  */\n+   system, such as call_builtin_trap.  Or build_over_call, to avoid\n+   infinite recursion.  */\n \n tree\n force_target_expr (tree type, tree init)\n@@ -2368,15 +2369,22 @@ type_has_nontrivial_default_init (const_tree t)\n     return 0;\n }\n \n-/* Returns true iff copying an object of type T is non-trivial.  */\n+/* Returns true iff copying an object of type T (including via move\n+   constructor) is non-trivial.  That is, T has no non-trivial copy\n+   constructors and no non-trivial move constructors.  */\n \n bool\n type_has_nontrivial_copy_init (const_tree t)\n {\n   t = strip_array_types (CONST_CAST_TREE (t));\n \n   if (CLASS_TYPE_P (t))\n-    return TYPE_HAS_COMPLEX_COPY_CTOR (t);\n+    {\n+      gcc_assert (COMPLETE_TYPE_P (t));\n+      return ((TYPE_HAS_COPY_CTOR (t)\n+\t       && TYPE_HAS_COMPLEX_COPY_CTOR (t))\n+\t      || TYPE_HAS_COMPLEX_MOVE_CTOR (t));\n+    }\n   else\n     return 0;\n }\n@@ -2390,8 +2398,12 @@ trivially_copyable_p (const_tree t)\n   t = strip_array_types (CONST_CAST_TREE (t));\n \n   if (CLASS_TYPE_P (t))\n-    return (TYPE_HAS_TRIVIAL_COPY_CTOR (t)\n-\t    && TYPE_HAS_TRIVIAL_COPY_ASSIGN (t)\n+    return ((!TYPE_HAS_COPY_CTOR (t)\n+\t     || !TYPE_HAS_COMPLEX_COPY_CTOR (t))\n+\t    && !TYPE_HAS_COMPLEX_MOVE_CTOR (t)\n+\t    && (!TYPE_HAS_COPY_ASSIGN (t)\n+\t\t|| !TYPE_HAS_COMPLEX_COPY_ASSIGN (t))\n+\t    && !TYPE_HAS_COMPLEX_MOVE_ASSIGN (t)\n \t    && TYPE_HAS_TRIVIAL_DESTRUCTOR (t));\n   else\n     return scalarish_type_p (t);"}, {"sha": "f62bbb5d950afadd1c73cc45df5adc390313b956", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -714,7 +714,7 @@ store_init_value (tree decl, tree init, int flags)\n \n   if (MAYBE_CLASS_TYPE_P (type))\n     {\n-      gcc_assert (TYPE_HAS_TRIVIAL_COPY_CTOR (type)\n+      gcc_assert (!type_has_nontrivial_copy_init (type)\n \t\t  || TREE_CODE (init) == CONSTRUCTOR);\n \n       if (TREE_CODE (init) == TREE_LIST)"}, {"sha": "67f0d7d223a66c25f60908a2cedbda8aacfa3df6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -1,5 +1,34 @@\n 2010-06-29  Jason Merrill  <jason@redhat.com>\n \n+\tEnable implicitly declared move constructor/operator= (N3053).\n+\t* g++.dg/cpp0x/implicit3.C: New.\n+\t* g++.dg/cpp0x/implicit4.C: New.\n+\t* g++.dg/cpp0x/implicit5.C: New.\n+\t* g++.dg/cpp0x/implicit-copy.C: Adjust.\n+\t* g++.dg/cpp0x/not_special.C: Adjust.\n+\t* g++.dg/cpp0x/rv-trivial-bug.C: Adjust.\n+\t* g++.dg/cpp0x/rv1n.C: Adjust.\n+\t* g++.dg/cpp0x/rv1p.C: Adjust.\n+\t* g++.dg/cpp0x/rv2n.C: Adjust.\n+\t* g++.dg/cpp0x/rv2p.C: Adjust.\n+\t* g++.dg/cpp0x/rv3n.C: Adjust.\n+\t* g++.dg/cpp0x/rv3p.C: Adjust.\n+\t* g++.dg/cpp0x/rv4n.C: Adjust.\n+\t* g++.dg/cpp0x/rv4p.C: Adjust.\n+\t* g++.dg/cpp0x/rv5n.C: Adjust.\n+\t* g++.dg/cpp0x/rv5p.C: Adjust.\n+\t* g++.dg/cpp0x/rv6n.C: Adjust.\n+\t* g++.dg/cpp0x/rv6p.C: Adjust.\n+\t* g++.dg/cpp0x/rv7n.C: Adjust.\n+\t* g++.dg/cpp0x/rv7p.C: Adjust.\n+\t* g++.dg/cpp0x/rv8p.C: Adjust.\n+\t* g++.dg/gomp/pr26690-1.C: Adjust.\n+\t* g++.dg/other/error20.C: Adjust.\n+\t* g++.dg/other/error31.C: Adjust.\n+\t* g++.dg/parse/error19.C: Adjust.\n+\t* g++.dg/template/qualttp5.C: Adjust.\n+\t* g++.old-deja/g++.law/ctors5.C: Adjust.\n+\n \tEnable implicitly deleted functions (N2346)\n \t* g++.dg/cpp0x/defaulted17.C: New.\n \t* g++.dg/cpp0x/implicit1.C: New."}, {"sha": "861fe201f108a1a8aafbe9d44d47914a9ab6bb82", "filename": "gcc/testsuite/g++.dg/cpp0x/implicit-copy.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit-copy.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit-copy.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit-copy.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -3,13 +3,13 @@ struct S\n {\n   S();\n private:\n-  S(S const &&);\n-  S & operator=(S const &&);\n+  S(S const &&);\t\t// { dg-error \"\" }\n+  S & operator=(S const &&);\t// { dg-error \"\" }\n };\n \n void f()\n {\n   S a;\n-  S b(a);\n-  a = b;\n+  S b(a);\t\t\t// { dg-error \"\" }\n+  a = b;\t\t\t// { dg-error \"\" }\n }"}, {"sha": "a43eca708c0395614d52a8b223ff5777dfb52fbf", "filename": "gcc/testsuite/g++.dg/cpp0x/implicit3.C", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit3.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -0,0 +1,56 @@\n+// Basic runtime test for implicit move constructor\n+// { dg-do run }\n+// { dg-options -std=c++0x }\n+\n+int m;\n+\n+struct A\n+{\n+  A() = default;\n+  A(A&&) { ++m; }\n+  A& operator=(A&&) { ++m; return *this; }\n+};\n+\n+struct B\n+{\n+  B() = default;\n+  B(const B&);\n+  B(B&&) { ++m; }\n+  B& operator=(const B&);\n+  B& operator=(B&&) { ++m; return *this; }\n+};\n+\n+struct C\n+{\n+  C() = default;\n+  C(C&);\n+  C(C&&) { ++m; }\n+  C& operator=(C&);\n+  C& operator=(C&&) { ++m; return *this; }\n+};\n+\n+struct D: public A, public B\n+{\n+  C c;\n+  int i;\n+};\n+\n+struct E: public A, public B\n+{\n+  C c;\n+  int i;\n+  E() = default;\n+  E(E&&) = default;\n+  E& operator=(E&&) = default;\n+};\n+\n+int main()\n+{\n+  D d1;\n+  D d2 (static_cast<D&&>(d1));\n+  d1 = static_cast<D&&>(d2);\n+  E e1;\n+  E e2 (static_cast<E&&>(e1));\n+  e1 = static_cast<E&&>(e2);\n+  return m != 12;\n+}"}, {"sha": "75606a3ce7e4ea3e33165ca0c1ee1e486cbee181", "filename": "gcc/testsuite/g++.dg/cpp0x/implicit4.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit4.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -0,0 +1,20 @@\n+// Test that a base with only a move constructor causes the implicit copy\n+// constructor to be deleted.\n+// { dg-options \"-std=c++0x\" }\n+\n+struct A\n+{\n+  A();\t\t\t\t// { dg-message \"A::A\" }\n+  A(A&&);\t\t\t// { dg-message \"A::A\" }\n+};\n+\n+struct B: A\t\t\t// { dg-error \"implicit|no match\" }\n+{\n+};\n+\n+int main()\n+{\n+  B b1;\n+  B b2(b1);\t\t    // { dg-error \"deleted function .B::B.const\" }\n+  B b3(static_cast<B&&>(b1));\n+}"}, {"sha": "f25c08530db0e50c4003ec169455a76bbbe1d9fa", "filename": "gcc/testsuite/g++.dg/cpp0x/implicit5.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fimplicit5.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -0,0 +1,19 @@\n+// Test that the default B copy constructor calls the A member template\n+// constructor.\n+// { dg-options -std=c++0x }\n+\n+struct A\n+{\n+  A() = default;\n+  A(A&&) = default;\n+  template <class T>\n+  A(const T& t) { t.i; }\t// { dg-error \"no member\" }\n+};\n+\n+struct B: A { };\n+\n+int main()\n+{\n+  B b;\n+  B b2(b);\n+}"}, {"sha": "6d73bd086caaea9f2a2f66b0aafc9f4118718dfb", "filename": "gcc/testsuite/g++.dg/cpp0x/not_special.C", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnot_special.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnot_special.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fnot_special.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -1,11 +1,9 @@\n // I, Howard Hinnant, hereby place this code in the public domain.\n \n-// Test that move constructor and move assignement are not special.\n-//   That is, their presence should not inhibit compiler generated\n-//   copy ctor or assignment.  Rather they should overload with the\n-//   compiler generated special members.\n+// Test that move constructor and move assignement are special.\n+//   That is, their presence should inhibit compiler generated\n+//   copy ctor or assignment.\n \n-// { dg-do run }\n // { dg-options \"-std=c++0x\" }\n \n #include <assert.h>\n@@ -30,20 +28,20 @@ struct derived\n     : base\n {\n     derived() {}\n-    derived(derived&&) {}\n-    derived& operator=(derived&&) {return *this;}\n+    derived(derived&&) {}\t\t\t  // { dg-error \"argument 1\" }\n+    derived& operator=(derived&&) {return *this;} // { dg-error \"argument 1\" }\n };\n \n int test1()\n {\n     derived d;\n     derived d2(static_cast<derived&&>(d));  // should not call base::(const base&)\n     assert(copy == 0);\n-    derived d3(d);                          // should     call base::(const base&)\n+    derived d3(d);\t\t// { dg-error \"lvalue\" }\n     assert(copy == 1);\n     d2 = static_cast<derived&&>(d);         // should not call base::operator=\n     assert(assign == 0);\n-    d3 = d;                                 // should     call base::operator=\n+    d3 = d;\t\t\t// { dg-error \"lvalue\" }\n     assert(assign == 1);\n     return 0;\n }"}, {"sha": "2765b5f3c30e57a4f8c8b37b6a8cac1c761e0aec", "filename": "gcc/testsuite/g++.dg/cpp0x/rv-trivial-bug.C", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-trivial-bug.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-trivial-bug.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv-trivial-bug.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -1,4 +1,3 @@\n-// { dg-do \"run\" }\n // { dg-options \"-std=c++0x\" }\n // PR c++/33235\n #include <cassert>\n@@ -9,19 +8,19 @@ int move_assign = 0;\n struct base2\n {\n     base2() {}\n-    base2(base2&&) {++move_construct;}\n-    base2& operator=(base2&&) {++move_assign; return *this;}\n+    base2(base2&&) {++move_construct;} // { dg-error \"argument 1\" }\n+    base2& operator=(base2&&) {++move_assign; return *this;} // { dg-error \"argument 1\" }\n };\n \n int test2()\n {\n     base2 b;\n-    base2 b2(b);\n+    base2 b2(b);\t\t// { dg-error \"lvalue\" }\n     assert(move_construct == 0);\n     base2 b3(static_cast<base2&&>(b));\n     base2 b4 = static_cast<base2&&>(b);\n     assert(move_construct == 2);\n-    b = b2;\n+    b = b2;\t\t\t// { dg-error \"lvalue\" }\n     assert(move_assign == 0);\n     b = static_cast<base2&&>(b2);\n     assert(move_assign == 1);"}, {"sha": "5224d3eb70e82c1c0abc73ec72e568d00b8eb33c", "filename": "gcc/testsuite/g++.dg/cpp0x/rv1n.C", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv1n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv1n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv1n.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -20,7 +20,7 @@ struct eight {char x[8];};\n struct A\n {\n     A();\n-    A(const volatile A&&);\n+    A(const volatile A&&);\t// { dg-error \"argument 1\" }\n };\n \n                A    source();\n@@ -35,9 +35,9 @@ one   sink_1_1(               A&);  // { dg-error \"\" }\n int test1_1()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a;\t// { dg-error \"cannot bind\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a;\t// { dg-error \"cannot bind\" }\n     sink_1_1(ca);           // { dg-error \"invalid initialization\" }\n     sink_1_1(va);           // { dg-error \"invalid initialization\" }\n     sink_1_1(cva);          // { dg-error \"invalid initialization\" }\n@@ -53,9 +53,9 @@ two   sink_1_2(const          A&);  // { dg-error \"\" }\n int test1_2()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_1_2(va);           // { dg-error \"invalid initialization\" }\n     sink_1_2(cva);          // { dg-error \"invalid initialization\" }\n     sink_1_2(v_source());   // { dg-error \"invalid initialization\" }\n@@ -68,9 +68,9 @@ three sink_1_3(volatile       A&);  // { dg-error \"\" }\n int test1_3()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_1_3(ca);           // { dg-error \"invalid initialization\" }\n     sink_1_3(cva);          // { dg-error \"invalid initialization\" }\n     sink_1_3(source());     // { dg-error \"invalid initialization\" }\n@@ -85,9 +85,9 @@ four  sink_1_4(const volatile A&);  // { dg-error \"\" }\n int test1_4()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_1_4(source());     // { dg-error \"invalid initialization\" }\n     sink_1_4(c_source());   // { dg-error \"invalid initialization\" }\n     sink_1_4(v_source());   // { dg-error \"invalid initialization\" }\n@@ -100,9 +100,9 @@ five  sink_1_5(               A&&);  // { dg-error \"\" }\n int test1_5()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_1_5(a);\t\t// { dg-error \"lvalue\" }\n     sink_1_5(ca);           // { dg-error \"invalid initialization\" }\n     sink_1_5(va);           // { dg-error \"invalid initialization\" }\n@@ -118,9 +118,9 @@ six   sink_1_6(const          A&&);  // { dg-error \"\" }\n int test1_6()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_1_6(a);\t\t// { dg-error \"lvalue\" }\n     sink_1_6(ca);\t\t// { dg-error \"lvalue\" }\n     sink_1_6(va);           // { dg-error \"invalid initialization\" }\n@@ -135,9 +135,9 @@ seven sink_1_7(volatile       A&&);  // { dg-error \"\" }\n int test1_7()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_1_7(a);\t    // { dg-error \"lvalue\" }\n     sink_1_7(ca);           // { dg-error \"invalid initialization\" }\n     sink_1_7(va);\t    // { dg-error \"lvalue\" }\n@@ -152,9 +152,9 @@ eight sink_1_8(const volatile A&&); // { dg-error \"\" }\n int test1_8()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_1_8(a);\t\t// { dg-error \"lvalue\" }\n     sink_1_8(ca);\t\t// { dg-error \"lvalue\" }\n     sink_1_8(va);\t\t// { dg-error \"lvalue\" }"}, {"sha": "4990165a4657a471e7f588595f8089e9bda617b1", "filename": "gcc/testsuite/g++.dg/cpp0x/rv1p.C", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv1p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv1p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv1p.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -35,9 +35,9 @@ one   sink_1_1(               A&);\n int test1_1()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_1_1(a))           == 1> t1;\n     return 0;\n }\n@@ -47,9 +47,9 @@ two   sink_1_2(const          A&);\n int test1_2()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_1_2(a))           == 2> t1;\n     sa<sizeof(sink_1_2(ca))          == 2> t2;\n     sa<sizeof(sink_1_2(source()))    == 2> t5;\n@@ -62,9 +62,9 @@ three sink_1_3(volatile       A&);\n int test1_3()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_1_3(a))           == 3> t1;\n     sa<sizeof(sink_1_3(va))          == 3> t3;\n     return 0;\n@@ -75,9 +75,9 @@ four  sink_1_4(const volatile A&);\n int test1_4()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_1_4(a))           == 4> t1;\n     sa<sizeof(sink_1_4(ca))          == 4> t2;\n     sa<sizeof(sink_1_4(va))          == 4> t3;\n@@ -90,9 +90,9 @@ five  sink_1_5(               A&&);\n int test1_5()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_1_5(source()))    == 5> t5;\n     return 0;\n }\n@@ -102,9 +102,9 @@ six   sink_1_6(const          A&&);\n int test1_6()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_1_6(source()))    == 6> t5;\n     sa<sizeof(sink_1_6(c_source()))  == 6> t6;\n     return 0;\n@@ -115,9 +115,9 @@ seven sink_1_7(volatile       A&&);\n int test1_7()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_1_7(source()))    == 7> t5;\n     sa<sizeof(sink_1_7(v_source()))  == 7> t7;\n     return 0;\n@@ -128,9 +128,9 @@ eight sink_1_8(const volatile A&&);\n int test1_8()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_1_8(source()))    == 8> t5;\n     sa<sizeof(sink_1_8(c_source()))  == 8> t6;\n     sa<sizeof(sink_1_8(v_source()))  == 8> t7;"}, {"sha": "a5c51778e347658c6c7751b3c94e00c4172ad4f2", "filename": "gcc/testsuite/g++.dg/cpp0x/rv2n.C", "status": "modified", "additions": 55, "deletions": 55, "changes": 110, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2n.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -20,7 +20,7 @@ struct eight {char x[8];};\n struct A\n {\n     A();\n-    A(const volatile A&&);\n+    A(const volatile A&&);\t// { dg-error \"argument 1\" }\n };\n \n                A    source();\n@@ -36,9 +36,9 @@ two   sink_2_12(const          A&);  // { dg-message \"note|argument\" }\n int test2_12()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_12(va);           // { dg-error \"no match\" }\n     sink_2_12(cva);          // { dg-error \"no match\" }\n     sink_2_12(v_source());   // { dg-error \"no match\" }\n@@ -52,9 +52,9 @@ three sink_2_13(volatile       A&);  // { dg-message \"note|argument\" }\n int test2_13()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_13(ca);           // { dg-error \"no match\" }\n     sink_2_13(cva);          // { dg-error \"no match\" }\n     sink_2_13(source());     // { dg-error \"no match\" }\n@@ -70,9 +70,9 @@ four  sink_2_14(const volatile A&);  // { dg-message \"note|argument\" }\n int test2_14()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_14(source());     // { dg-error \"no match\" }\n     sink_2_14(c_source());   // { dg-error \"no match\" }\n     sink_2_14(v_source());   // { dg-error \"no match\" }\n@@ -86,9 +86,9 @@ five  sink_2_15(               A&&);  // { dg-message \"note|argument\" }\n int test2_15()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n    sink_2_15(ca);           // { dg-error \"no match\" }\n    sink_2_15(va);           // { dg-error \"no match\" }\n    sink_2_15(cva);          // { dg-error \"no match\" }\n@@ -104,9 +104,9 @@ six   sink_2_16(const          A&&);  // { dg-message \"note|argument\" }\n int test2_16()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_16(ca);\t     // { dg-error \"lvalue\" }\n     sink_2_16(va);           // { dg-error \"no match\" }\n     sink_2_16(cva);          // { dg-error \"no match\" }\n@@ -121,9 +121,9 @@ seven sink_2_17(volatile       A&&);  // { dg-message \"note|argument\" }\n int test2_17()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_17(ca);           // { dg-error \"no match\" }\n     sink_2_17(va);           // { dg-error \"lvalue\" }\n     sink_2_17(cva);          // { dg-error \"no match\" }\n@@ -138,9 +138,9 @@ eight sink_2_18(const volatile A&&); // { dg-error \"argument\" }\n int test2_18()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_18(ca);\t\t// { dg-error \"lvalue\" }\n     sink_2_18(va);\t\t// { dg-error \"lvalue\" }\n     sink_2_18(cva);\t\t// { dg-error \"lvalue\" }\n@@ -152,9 +152,9 @@ three sink_2_23(volatile       A&);  // { dg-message \"note|argument\" }\n int test2_23()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_23(a);            // { dg-error \"ambiguous\" }\n     sink_2_23(cva);          // { dg-error \"no match\" }\n     sink_2_23(v_source());   // { dg-error \"no match\" }\n@@ -168,9 +168,9 @@ four  sink_2_24(const volatile A&);  // { dg-message \"note|argument\" }\n int test2_24()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_24(v_source());   // { dg-error \"no match\" }\n     sink_2_24(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -182,9 +182,9 @@ four  sink_2_34(const volatile A&);  // { dg-message \"note|argument\" }\n int test2_34()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_34(source());     // { dg-error \"no match\" }\n     sink_2_34(c_source());   // { dg-error \"no match\" }\n     sink_2_34(v_source());   // { dg-error \"no match\" }\n@@ -198,9 +198,9 @@ five  sink_2_25(               A&&);  // { dg-message \"note|argument\" }\n int test2_25()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n    sink_2_25(va);           // { dg-error \"no match\" }\n    sink_2_25(cva);          // { dg-error \"no match\" }\n    sink_2_25(v_source());   // { dg-error \"no match\" }\n@@ -214,9 +214,9 @@ six   sink_2_26(const          A&&);  // { dg-message \"note|argument\" }\n int test2_26()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_26(va);           // { dg-error \"no match\" }\n     sink_2_26(cva);          // { dg-error \"no match\" }\n     sink_2_26(v_source());   // { dg-error \"no match\" }\n@@ -230,9 +230,9 @@ seven sink_2_27(volatile       A&&);  // { dg-message \"note|argument\" }\n int test2_27()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_27(va);\t     // { dg-error \"lvalue\" }\n     sink_2_27(cva);          // { dg-error \"no match\" }\n     sink_2_27(cv_source());  // { dg-error \"no match\" }\n@@ -245,9 +245,9 @@ eight sink_2_28(const volatile A&&); // { dg-error \"argument\" }\n int test2_28()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_28(va);\t\t// { dg-error \"lvalue\" }\n     sink_2_28(cva);\t\t// { dg-error \"lvalue\" }\n }\n@@ -258,9 +258,9 @@ five  sink_2_35(               A&&);  // { dg-message \"note|argument\" }\n int test2_35()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_35(ca);           // { dg-error \"no match\" }\n     sink_2_35(cva);          // { dg-error \"no match\" }\n     sink_2_35(c_source());   // { dg-error \"no match\" }\n@@ -275,9 +275,9 @@ six   sink_2_36(const          A&&);  // { dg-message \"note|argument\" }\n int test2_36()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_36(ca);\t\t// { dg-error \"lvalue\" }\n     sink_2_36(cva);          // { dg-error \"no match\" }\n     sink_2_36(v_source());   // { dg-error \"no match\" }\n@@ -291,9 +291,9 @@ seven sink_2_37(volatile       A&&);  // { dg-message \"note|argument\" }\n int test2_37()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_37(ca);           // { dg-error \"no match\" }\n     sink_2_37(cva);          // { dg-error \"no match\" }\n     sink_2_37(c_source());   // { dg-error \"no match\" }\n@@ -307,9 +307,9 @@ eight sink_2_38(const volatile A&&); // { dg-error \"argument\" }\n int test2_38()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_38(ca);\t\t// { dg-error \"lvalue\" }\n     sink_2_38(cva);\t\t// { dg-error \"lvalue\" }\n }\n@@ -320,9 +320,9 @@ five  sink_2_45(               A&&);  // { dg-message \"note|argument\" }\n int test2_45()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_45(c_source());   // { dg-error \"no match\" }\n     sink_2_45(v_source());   // { dg-error \"no match\" }\n     sink_2_45(cv_source());  // { dg-error \"no match\" }\n@@ -335,9 +335,9 @@ six   sink_2_46(const          A&&);  // { dg-message \"note|argument\" }\n int test2_46()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_46(v_source());   // { dg-error \"no match\" }\n     sink_2_46(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -349,9 +349,9 @@ seven sink_2_47(volatile       A&&);  // { dg-message \"note|argument\" }\n int test2_47()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_47(c_source());   // { dg-error \"no match\" }\n     sink_2_47(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -363,9 +363,9 @@ six   sink_2_56(const          A&&);  // { dg-message \"note|argument\" }\n int test2_56()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_56(a);\t\t// { dg-error \"lvalue\" }\n     sink_2_56(ca);\t\t// { dg-error \"lvalue\" }\n     sink_2_56(va);           // { dg-error \"no match\" }\n@@ -381,9 +381,9 @@ seven sink_2_57(volatile       A&&);  // { dg-message \"note|argument\" }\n int test2_57()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_57(a);\t\t// { dg-error \"lvalue\" }\n     sink_2_57(va);\t\t// { dg-error \"lvalue\" }\n     sink_2_57(ca);           // { dg-error \"no match\" }\n@@ -399,9 +399,9 @@ eight sink_2_58(const volatile A&&); // { dg-error \"argument\" }\n int test2_58()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_58(a);\t\t// { dg-error \"lvalue\" }\n     sink_2_58(ca);\t\t// { dg-error \"lvalue\" }\n     sink_2_58(va);\t\t// { dg-error \"lvalue\" }\n@@ -414,9 +414,9 @@ seven sink_2_67(volatile       A&&);  // { dg-message \"note|argument\" }\n int test2_67()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_67(a);            // { dg-error \"ambiguous\" }\n     sink_2_67(ca);\t     // { dg-error \"lvalue\" }\n     sink_2_67(va);\t     // { dg-error \"lvalue\" }\n@@ -432,9 +432,9 @@ eight sink_2_68(const volatile A&&); // { dg-error \"argument\" }\n int test2_68()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_68(a);\t\t// { dg-error \"lvalue\" }\n     sink_2_68(ca);\t\t// { dg-error \"lvalue\" }\n     sink_2_68(va);\t\t// { dg-error \"lvalue\" }\n@@ -447,9 +447,9 @@ eight sink_2_78(const volatile A&&); // { dg-error \"argument\" }\n int test2_78()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_2_78(a);\t\t// { dg-error \"lvalue\" }\n     sink_2_78(ca);\t\t// { dg-error \"lvalue\" }\n     sink_2_78(va);\t\t// { dg-error \"lvalue\" }"}, {"sha": "4ed9238a1a1d4d734be48fc1d7987c0604339ba1", "filename": "gcc/testsuite/g++.dg/cpp0x/rv2p.C", "status": "modified", "additions": 56, "deletions": 56, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2p.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -36,9 +36,9 @@ two   sink_2_12(const          A&);\n int test2_12()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_12(a))           == 1> t1;\n     sa<sizeof(sink_2_12(ca))          == 2> t2;\n     sa<sizeof(sink_2_12(source()))    == 2> t5;\n@@ -52,9 +52,9 @@ three sink_2_13(volatile       A&);\n int test2_13()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_13(a))           == 1> t1;\n     sa<sizeof(sink_2_13(va))          == 3> t3;\n     return 0;\n@@ -66,9 +66,9 @@ four  sink_2_14(const volatile A&);\n int test2_14()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_14(a))           == 1> t1;\n     sa<sizeof(sink_2_14(ca))          == 4> t2;\n     sa<sizeof(sink_2_14(va))          == 4> t3;\n@@ -82,9 +82,9 @@ five  sink_2_15(               A&&);\n int test2_15()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_15(a))           == 1> t1;\n     sa<sizeof(sink_2_15(source()))    == 5> t5;\n     return 0;\n@@ -96,9 +96,9 @@ six   sink_2_16(const          A&&);\n int test2_16()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_16(a))           == 1> t1;\n     sa<sizeof(sink_2_16(source()))    == 6> t5;\n     sa<sizeof(sink_2_16(c_source()))  == 6> t6;\n@@ -111,9 +111,9 @@ seven sink_2_17(volatile       A&&);\n int test2_17()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_17(a))           == 1> t1;\n     sa<sizeof(sink_2_17(source()))    == 7> t5;\n     sa<sizeof(sink_2_17(v_source()))  == 7> t7;\n@@ -126,9 +126,9 @@ eight sink_2_18(const volatile A&&);\n int test2_18()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_18(a))           == 1> t1;\n     sa<sizeof(sink_2_18(source()))    == 8> t5;\n     sa<sizeof(sink_2_18(c_source()))  == 8> t6;\n@@ -143,9 +143,9 @@ three sink_2_23(volatile       A&);\n int test2_23()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_23(ca))          == 2> t2;\n     sa<sizeof(sink_2_23(va))          == 3> t3;\n     sa<sizeof(sink_2_23(source()))    == 2> t5;\n@@ -159,9 +159,9 @@ four  sink_2_24(const volatile A&);\n int test2_24()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_24(a))           == 2> t1;\n     sa<sizeof(sink_2_24(ca))          == 2> t2;\n     sa<sizeof(sink_2_24(va))          == 4> t3;\n@@ -179,9 +179,9 @@ five  sink_2_25(               A&&);\n int test2_25()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_25(a))           == 2> t1;\n     sa<sizeof(sink_2_25(ca))          == 2> t2;\n     sa<sizeof(sink_2_25(source()))    == 5> t5;\n@@ -195,9 +195,9 @@ six   sink_2_26(const          A&&);\n int test2_26()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_26(a))           == 2> t1;\n     sa<sizeof(sink_2_26(ca))          == 2> t2;\n     sa<sizeof(sink_2_26(source()))    == 6> t5;\n@@ -211,9 +211,9 @@ seven sink_2_27(volatile       A&&);\n int test2_27()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_27(a))           == 2> t1;\n     sa<sizeof(sink_2_27(ca))          == 2> t2;\n     sa<sizeof(sink_2_27(source()))    == 7> t5;\n@@ -228,9 +228,9 @@ eight sink_2_28(const volatile A&&);\n int test2_28()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_28(a))           == 2> t1;\n     sa<sizeof(sink_2_28(ca))          == 2> t2;\n     sa<sizeof(sink_2_28(source()))    == 8> t5;\n@@ -246,9 +246,9 @@ four  sink_2_34(const volatile A&);\n int test2_34()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_34(a))           == 3> t1;\n     sa<sizeof(sink_2_34(ca))          == 4> t2;\n     sa<sizeof(sink_2_34(va))          == 3> t3;\n@@ -266,9 +266,9 @@ five  sink_2_35(               A&&);\n int test2_35()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_35(a))           == 3> t1;\n     sa<sizeof(sink_2_35(va))          == 3> t3;\n     sa<sizeof(sink_2_35(source()))    == 5> t5;\n@@ -281,9 +281,9 @@ six   sink_2_36(const          A&&);\n int test2_36()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_36(a))           == 3> t1;\n     sa<sizeof(sink_2_36(va))          == 3> t3;\n     sa<sizeof(sink_2_36(source()))    == 6> t5;\n@@ -297,9 +297,9 @@ seven sink_2_37(volatile       A&&);\n int test2_37()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_37(a))           == 3> t1;\n     sa<sizeof(sink_2_37(va))          == 3> t3;\n     sa<sizeof(sink_2_37(source()))    == 7> t5;\n@@ -313,9 +313,9 @@ eight sink_2_38(const volatile A&&);\n int test2_38()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_38(a))           == 3> t1;\n     sa<sizeof(sink_2_38(va))          == 3> t3;\n     sa<sizeof(sink_2_38(source()))    == 8> t5;\n@@ -331,9 +331,9 @@ five  sink_2_45(               A&&);\n int test2_45()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_45(a))           == 4> t1;\n     sa<sizeof(sink_2_45(ca))          == 4> t2;\n     sa<sizeof(sink_2_45(va))          == 4> t3;\n@@ -351,9 +351,9 @@ six   sink_2_46(const          A&&);\n int test2_46()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_46(a))           == 4> t1;\n     sa<sizeof(sink_2_46(ca))          == 4> t2;\n     sa<sizeof(sink_2_46(va))          == 4> t3;\n@@ -371,9 +371,9 @@ seven sink_2_47(volatile       A&&);\n int test2_47()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_47(a))           == 4> t1;\n     sa<sizeof(sink_2_47(ca))          == 4> t2;\n     sa<sizeof(sink_2_47(va))          == 4> t3;\n@@ -391,9 +391,9 @@ eight sink_2_48(const volatile A&&);\n int test2_48()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_48(a))           == 4> t1;\n     sa<sizeof(sink_2_48(ca))          == 4> t2;\n     sa<sizeof(sink_2_48(va))          == 4> t3;\n@@ -411,9 +411,9 @@ six   sink_2_56(const          A&&);\n int test2_56()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_56(source()))    == 5> t5;\n     sa<sizeof(sink_2_56(c_source()))  == 6> t6;\n     return 0;\n@@ -425,9 +425,9 @@ seven sink_2_57(volatile       A&&);\n int test2_57()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_57(source()))    == 5> t5;\n     sa<sizeof(sink_2_57(v_source()))  == 7> t7;\n     return 0;\n@@ -439,9 +439,9 @@ eight sink_2_58(const volatile A&&);\n int test2_58()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_58(source()))    == 5> t5;\n     sa<sizeof(sink_2_58(c_source()))  == 8> t6;\n     sa<sizeof(sink_2_58(v_source()))  == 8> t7;\n@@ -455,9 +455,9 @@ seven sink_2_67(volatile       A&&);\n int test2_67()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_67(c_source()))  == 6> t6;\n     sa<sizeof(sink_2_67(v_source()))  == 7> t7;\n     return 0;\n@@ -469,9 +469,9 @@ eight sink_2_68(const volatile A&&);\n int test2_68()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_68(source()))    == 6> t5;\n     sa<sizeof(sink_2_68(c_source()))  == 6> t6;\n     sa<sizeof(sink_2_68(v_source()))  == 8> t7;\n@@ -485,9 +485,9 @@ eight sink_2_78(const volatile A&&);\n int test2_78()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_2_78(source()))    == 7> t5;\n     sa<sizeof(sink_2_78(c_source()))  == 8> t6;\n     sa<sizeof(sink_2_78(v_source()))  == 7> t7;"}, {"sha": "cacbdb395e70ce2495c78f4e3257b0cc9a58106e", "filename": "gcc/testsuite/g++.dg/cpp0x/rv3n.C", "status": "modified", "additions": 101, "deletions": 101, "changes": 202, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3n.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -20,7 +20,7 @@ struct eight {char x[8];};\n struct A\n {\n     A();\n-    A(const volatile A&&);\n+    A(const volatile A&&);\t// { dg-error \"argument 1\" }\n };\n \n                A    source();\n@@ -37,9 +37,9 @@ three sink_3_123(volatile       A&);  // { dg-message \"note\" }\n int test3_123()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_123(cva);          // { dg-error \"no match\" }\n     sink_3_123(v_source());   // { dg-error \"no match\" }\n     sink_3_123(cv_source());  // { dg-error \"no match\" }\n@@ -57,9 +57,9 @@ four  sink_3_124(const volatile A&);  // { dg-message \"note\" }\n int test3_124()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_124(v_source());   // { dg-error \"no match\" }\n     sink_3_124(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -68,9 +68,9 @@ int test3_124()\n int test3_125()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_125(va);           // { dg-error \"no match\" }\n     sink_3_125(cva);          // { dg-error \"no match\" }\n     sink_3_125(v_source());   // { dg-error \"no match\" }\n@@ -85,9 +85,9 @@ six   sink_3_126(const          A&&);  // { dg-message \"note\" }\n int test3_126()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_126(va);           // { dg-error \"no match\" }\n     sink_3_126(cva);          // { dg-error \"no match\" }\n     sink_3_126(v_source());   // { dg-error \"no match\" }\n@@ -102,9 +102,9 @@ seven sink_3_127(volatile       A&&);  // { dg-message \"\" }\n int test3_127()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_127(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_127(cva);          // { dg-error \"no match\" }\n     sink_3_127(cv_source());  // { dg-error \"no match\" }\n@@ -118,9 +118,9 @@ eight sink_3_128(const volatile A&&); // { dg-message \"\" }\n int test3_128()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n \n     sink_3_128(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_128(cva);\t\t// { dg-error \"lvalue\" }\n@@ -133,9 +133,9 @@ four  sink_3_134(const volatile A&);  // { dg-message \"note\" }\n int test3_134()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_134(source());     // { dg-error \"no match\" }\n     sink_3_134(c_source());   // { dg-error \"no match\" }\n     sink_3_134(v_source());   // { dg-error \"no match\" }\n@@ -150,9 +150,9 @@ five  sink_3_135(               A&&);  // { dg-message \"note\" }\n int test3_135()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_135(ca);           // { dg-error \"no match\" }\n     sink_3_135(cva);          // { dg-error \"no match\" }\n     sink_3_135(c_source());   // { dg-error \"no match\" }\n@@ -168,9 +168,9 @@ six   sink_3_136(const          A&&);  // { dg-message \"\" }\n int test3_136()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_136(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_136(cva);          // { dg-error \"no match\" }\n     sink_3_136(v_source());   // { dg-error \"no match\" }\n@@ -185,9 +185,9 @@ seven sink_3_137(volatile       A&&);  // { dg-message \"note\" }\n int test3_137()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_137(ca);           // { dg-error \"no match\" }\n     sink_3_137(cva);          // { dg-error \"no match\" }\n     sink_3_137(c_source());   // { dg-error \"no match\" }\n@@ -202,9 +202,9 @@ eight sink_3_138(const volatile A&&); // { dg-message \"\" }\n int test3_138()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_138(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_138(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -217,9 +217,9 @@ five  sink_3_145(               A&&);  // { dg-message \"note\" }\n int test3_145()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_145(c_source());   // { dg-error \"no match\" }\n     sink_3_145(v_source());   // { dg-error \"no match\" }\n     sink_3_145(cv_source());  // { dg-error \"no match\" }\n@@ -233,9 +233,9 @@ six   sink_3_146(const          A&&);  // { dg-message \"note\" }\n int test3_146()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_146(v_source());   // { dg-error \"no match\" }\n     sink_3_146(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -248,9 +248,9 @@ seven sink_3_147(volatile       A&&);  // { dg-message \"note\" }\n int test3_147()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_147(c_source());   // { dg-error \"no match\" }\n     sink_3_147(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -263,9 +263,9 @@ six   sink_3_156(const          A&&);  // { dg-message \"\" }\n int test3_156()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_156(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_156(va);           // { dg-error \"no match\" }\n     sink_3_156(cva);          // { dg-error \"no match\" }\n@@ -281,9 +281,9 @@ seven sink_3_157(volatile       A&&);  // { dg-message \"\" }\n int test3_157()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_157(ca);           // { dg-error \"no match\" }\n     sink_3_157(va);\t      // { dg-error \"lvalue\" }\n     sink_3_157(cva);          // { dg-error \"no match\" }\n@@ -299,9 +299,9 @@ eight sink_3_158(const volatile A&&); // { dg-message \"\" }\n int test3_158()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_158(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_158(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_158(cva);\t\t// { dg-error \"lvalue\" }\n@@ -315,9 +315,9 @@ seven sink_3_167(volatile       A&&);  // { dg-message \"\" }\n int test3_167()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_167(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_167(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_167(cva);          // { dg-error \"no match\" }\n@@ -333,9 +333,9 @@ eight sink_3_168(const volatile A&&); // { dg-message \"\" }\n int test3_168()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_168(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_168(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_168(cva);\t\t// { dg-error \"lvalue\" }\n@@ -349,9 +349,9 @@ eight sink_3_178(const volatile A&&); // { dg-message \"\" }\n int test3_178()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_178(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_178(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_178(cva);\t\t// { dg-error \"lvalue\" }\n@@ -365,9 +365,9 @@ four  sink_3_234(const volatile A&);  // { dg-message \"note\" }\n int test3_234()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_234(a);            // { dg-error \"ambiguous\" }\n     sink_3_234(v_source());   // { dg-error \"no match\" }\n     sink_3_234(cv_source());  // { dg-error \"no match\" }\n@@ -381,9 +381,9 @@ five  sink_3_235(               A&&);  // { dg-message \"note\" }\n int test3_235()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_235(a);            // { dg-error \"ambiguous\" }\n     sink_3_235(cva);          // { dg-error \"no match\" }\n     sink_3_235(v_source());   // { dg-error \"no match\" }\n@@ -398,9 +398,9 @@ six   sink_3_236(const          A&&);  // { dg-message \"note\" }\n int test3_236()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_236(a);            // { dg-error \"ambiguous\" }\n     sink_3_236(cva);          // { dg-error \"no match\" }\n     sink_3_236(v_source());   // { dg-error \"no match\" }\n@@ -415,9 +415,9 @@ seven sink_3_237(volatile       A&&);  // { dg-message \"note\" }\n int test3_237()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_237(a);            // { dg-error \"ambiguous\" }\n     sink_3_237(cva);          // { dg-error \"no match\" }\n     sink_3_237(cv_source());  // { dg-error \"no match\" }\n@@ -431,9 +431,9 @@ eight sink_3_238(const volatile A&&);  // { dg-message \"\" }\n int test3_238()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_238(a);  // { dg-error \"ambiguous\" }\n     sink_3_238(cva); // { dg-error \"lvalue\" }\n     return 0;\n@@ -446,9 +446,9 @@ five  sink_3_245(               A&&);  // { dg-message \"note\" }\n int test3_245()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_245(v_source());   // { dg-error \"no match\" }\n     sink_3_245(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -461,9 +461,9 @@ six   sink_3_246(const          A&&);  // { dg-message \"note\" }\n int test3_246()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_246(v_source());   // { dg-error \"no match\" }\n     sink_3_246(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -476,9 +476,9 @@ seven sink_3_247(volatile       A&&);  // { dg-message \"note\" }\n int test3_247()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_247(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n@@ -490,9 +490,9 @@ six   sink_3_256(const          A&&);  // { dg-message \"note\" }\n int test3_256()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_256(va);           // { dg-error \"no match\" }\n     sink_3_256(cva);          // { dg-error \"no match\" }\n     sink_3_256(v_source());   // { dg-error \"no match\" }\n@@ -507,9 +507,9 @@ seven sink_3_257(volatile       A&&);  // { dg-message \"\" }\n int test3_257()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_257(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_257(cva);          // { dg-error \"no match\" }\n     sink_3_257(cv_source());  // { dg-error \"no match\" }\n@@ -523,9 +523,9 @@ eight sink_3_258(const volatile A&&); // { dg-message \"\" }\n int test3_258()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_258(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_258(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -538,9 +538,9 @@ seven sink_3_267(volatile       A&&);  // { dg-message \"\" }\n int test3_267()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_267(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_267(cva);          // { dg-error \"no match\" }\n     sink_3_267(source());     // { dg-error \"ambiguous\" }\n@@ -555,9 +555,9 @@ eight sink_3_268(const volatile A&&); // { dg-message \"\" }\n int test3_268()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_268(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_268(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -570,9 +570,9 @@ eight sink_3_278(const volatile A&&); // { dg-message \"\" }\n int test3_278()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_278(va);\t\t// { dg-error \"lvalue\" }\n     sink_3_278(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -585,9 +585,9 @@ five  sink_3_345(               A&&);  // { dg-message \"note\" }\n int test3_345()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_345(c_source());   // { dg-error \"no match\" }\n     sink_3_345(v_source());   // { dg-error \"no match\" }\n     sink_3_345(cv_source());  // { dg-error \"no match\" }\n@@ -601,9 +601,9 @@ six   sink_3_346(const          A&&);  // { dg-message \"note\" }\n int test3_346()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_346(v_source());   // { dg-error \"no match\" }\n     sink_3_346(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -616,9 +616,9 @@ seven sink_3_347(volatile       A&&);  // { dg-message \"note\" }\n int test3_347()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_347(c_source());   // { dg-error \"no match\" }\n     sink_3_347(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -631,9 +631,9 @@ six   sink_3_356(const          A&&);  // { dg-message \"\" }\n int test3_356()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_356(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_356(cva);          // { dg-error \"no match\" }\n     sink_3_356(v_source());   // { dg-error \"no match\" }\n@@ -648,9 +648,9 @@ seven sink_3_357(volatile       A&&);  // { dg-message \"note\" }\n int test3_357()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_357(ca);           // { dg-error \"no match\" }\n     sink_3_357(cva);          // { dg-error \"no match\" }\n     sink_3_357(c_source());   // { dg-error \"no match\" }\n@@ -665,9 +665,9 @@ eight sink_3_358(const volatile A&&); // { dg-message \"\" }\n int test3_358()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_358(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_358(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -680,9 +680,9 @@ seven sink_3_367(volatile       A&&);  // { dg-message \"note\" }\n int test3_367()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_367(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_367(cva);          // { dg-error \"no match\" }\n     sink_3_367(source());     // { dg-error \"ambiguous\" }\n@@ -697,9 +697,9 @@ eight sink_3_368(const volatile A&&); // { dg-message \"\" }\n int test3_368()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_368(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_368(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -712,9 +712,9 @@ eight sink_3_378(const volatile A&&); // { dg-message \"\" }\n int test3_378()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_378(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_378(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -727,9 +727,9 @@ six   sink_3_456(const          A&&);  // { dg-message \"note\" }\n int test3_456()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_456(v_source());   // { dg-error \"no match\" }\n     sink_3_456(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -742,9 +742,9 @@ seven sink_3_457(volatile       A&&);  // { dg-message \"note\" }\n int test3_457()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_457(c_source());   // { dg-error \"no match\" }\n     sink_3_457(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -757,9 +757,9 @@ seven sink_3_467(volatile       A&&);  // { dg-message \"note\" }\n int test3_467()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_467(source());     // { dg-error \"ambiguous\" }\n     sink_3_467(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -772,9 +772,9 @@ seven sink_3_567(volatile       A&&);  // { dg-message \"\" }\n int test3_567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_567(a);\t\t// { dg-error \"lvalue\" }\n     sink_3_567(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_567(va);\t\t// { dg-error \"lvalue\" }\n@@ -790,9 +790,9 @@ eight sink_3_568(const volatile A&&); // { dg-message \"\" }\n int test3_568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_568(a);\t\t// { dg-error \"lvalue\" }\n     sink_3_568(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_568(va);\t\t// { dg-error \"lvalue\" }\n@@ -807,9 +807,9 @@ eight sink_3_578(const volatile A&&); // { dg-message \"\" }\n int test3_578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_578(a);\t\t// { dg-error \"lvalue\" }\n     sink_3_578(ca);\t\t// { dg-error \"lvalue\" }\n     sink_3_578(va);\t\t// { dg-error \"lvalue\" }\n@@ -824,9 +824,9 @@ eight sink_3_678(const volatile A&&);  // { dg-message \"\" }\n int test3_678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_3_678(a);          // { dg-error \"ambiguous\" }\n     sink_3_678(ca);\t    // { dg-error \"lvalue\" }\n     sink_3_678(va);\t    // { dg-error \"lvalue\" }"}, {"sha": "5f59920bba6be6a7a6053d2ed2cadb8063394c69", "filename": "gcc/testsuite/g++.dg/cpp0x/rv3p.C", "status": "modified", "additions": 112, "deletions": 112, "changes": 224, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3p.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -37,9 +37,9 @@ three sink_3_123(volatile       A&);\n int test3_123()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_123(a))           == 1> t1;\n     sa<sizeof(sink_3_123(ca))          == 2> t2;\n     sa<sizeof(sink_3_123(va))          == 3> t3;\n@@ -55,9 +55,9 @@ four  sink_3_124(const volatile A&);\n int test3_124()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_124(a))           == 1> t1;\n     sa<sizeof(sink_3_124(ca))          == 2> t2;\n     sa<sizeof(sink_3_124(va))          == 4> t3;\n@@ -74,9 +74,9 @@ five  sink_3_125(               A&&);\n int test3_125()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_125(a))           == 1> t1;\n     sa<sizeof(sink_3_125(ca))          == 2> t2;\n     sa<sizeof(sink_3_125(source()))    == 5> t5;\n@@ -91,9 +91,9 @@ six   sink_3_126(const          A&&);\n int test3_126()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_126(a))           == 1> t1;\n     sa<sizeof(sink_3_126(ca))          == 2> t2;\n     sa<sizeof(sink_3_126(source()))    == 6> t5;\n@@ -108,9 +108,9 @@ seven sink_3_127(volatile       A&&);\n int test3_127()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_127(a))           == 1> t1;\n     sa<sizeof(sink_3_127(ca))          == 2> t2;\n     sa<sizeof(sink_3_127(source()))    == 7> t5;\n@@ -126,9 +126,9 @@ eight sink_3_128(const volatile A&&);\n int test3_128()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_128(a))           == 1> t1;\n     sa<sizeof(sink_3_128(ca))          == 2> t2;\n     sa<sizeof(sink_3_128(source()))    == 8> t5;\n@@ -145,9 +145,9 @@ four  sink_3_134(const volatile A&);\n int test3_134()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_134(a))           == 1> t1;\n     sa<sizeof(sink_3_134(ca))          == 4> t2;\n     sa<sizeof(sink_3_134(va))          == 3> t3;\n@@ -162,9 +162,9 @@ five  sink_3_135(               A&&);\n int test3_135()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_135(a))           == 1> t1;\n     sa<sizeof(sink_3_135(va))          == 3> t3;\n     sa<sizeof(sink_3_135(source()))    == 5> t5;\n@@ -178,9 +178,9 @@ six   sink_3_136(const          A&&);\n int test3_136()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_136(a))           == 1> t1;\n     sa<sizeof(sink_3_136(va))          == 3> t3;\n     sa<sizeof(sink_3_136(source()))    == 6> t5;\n@@ -195,9 +195,9 @@ seven sink_3_137(volatile       A&&);\n int test3_137()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_137(a))           == 1> t1;\n     sa<sizeof(sink_3_137(va))          == 3> t3;\n     sa<sizeof(sink_3_137(source()))    == 7> t5;\n@@ -212,9 +212,9 @@ eight sink_3_138(const volatile A&&);\n int test3_138()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_138(a))           == 1> t1;\n     sa<sizeof(sink_3_138(va))          == 3> t3;\n     sa<sizeof(sink_3_138(source()))    == 8> t5;\n@@ -231,9 +231,9 @@ five  sink_3_145(               A&&);\n int test3_145()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_145(a))           == 1> t1;\n     sa<sizeof(sink_3_145(ca))          == 4> t2;\n     sa<sizeof(sink_3_145(va))          == 4> t3;\n@@ -249,9 +249,9 @@ six   sink_3_146(const          A&&);\n int test3_146()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_146(a))           == 1> t1;\n     sa<sizeof(sink_3_146(ca))          == 4> t2;\n     sa<sizeof(sink_3_146(va))          == 4> t3;\n@@ -268,9 +268,9 @@ seven sink_3_147(volatile       A&&);\n int test3_147()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_147(a))           == 1> t1;\n     sa<sizeof(sink_3_147(ca))          == 4> t2;\n     sa<sizeof(sink_3_147(va))          == 4> t3;\n@@ -287,9 +287,9 @@ eight sink_3_148(const volatile A&&);\n int test3_148()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_148(a))           == 1> t1;\n     sa<sizeof(sink_3_148(ca))          == 4> t2;\n     sa<sizeof(sink_3_148(va))          == 4> t3;\n@@ -308,9 +308,9 @@ six   sink_3_156(const          A&&);\n int test3_156()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_156(a))           == 1> t1;\n     sa<sizeof(sink_3_156(source()))    == 5> t5;\n     sa<sizeof(sink_3_156(c_source()))  == 6> t6;\n@@ -324,9 +324,9 @@ seven sink_3_157(volatile       A&&);\n int test3_157()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_157(a))           == 1> t1;\n     sa<sizeof(sink_3_157(source()))    == 5> t5;\n     sa<sizeof(sink_3_157(v_source()))  == 7> t7;\n@@ -340,9 +340,9 @@ eight sink_3_158(const volatile A&&);\n int test3_158()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_158(a))           == 1> t1;\n     sa<sizeof(sink_3_158(source()))    == 5> t5;\n     sa<sizeof(sink_3_158(c_source()))  == 8> t6;\n@@ -358,9 +358,9 @@ seven sink_3_167(volatile       A&&);\n int test3_167()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_167(a))           == 1> t1;\n     sa<sizeof(sink_3_167(c_source()))  == 6> t6;\n     sa<sizeof(sink_3_167(v_source()))  == 7> t7;\n@@ -374,9 +374,9 @@ eight sink_3_168(const volatile A&&);\n int test3_168()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_168(a))           == 1> t1;\n     sa<sizeof(sink_3_168(source()))    == 6> t5;\n     sa<sizeof(sink_3_168(c_source()))  == 6> t6;\n@@ -392,9 +392,9 @@ eight sink_3_178(const volatile A&&);\n int test3_178()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_178(a))           == 1> t1;\n     sa<sizeof(sink_3_178(source()))    == 7> t5;\n     sa<sizeof(sink_3_178(c_source()))  == 8> t6;\n@@ -410,9 +410,9 @@ four  sink_3_234(const volatile A&);\n int test3_234()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_234(ca))          == 2> t2;\n     sa<sizeof(sink_3_234(va))          == 3> t3;\n     sa<sizeof(sink_3_234(cva))         == 4> t4;\n@@ -428,9 +428,9 @@ five  sink_3_235(               A&&);\n int test3_235()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_235(ca))          == 2> t2;\n     sa<sizeof(sink_3_235(va))          == 3> t3;\n     sa<sizeof(sink_3_235(source()))    == 5> t5;\n@@ -445,9 +445,9 @@ six   sink_3_236(const          A&&);\n int test3_236()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_236(ca))          == 2> t2;\n     sa<sizeof(sink_3_236(va))          == 3> t3;\n     sa<sizeof(sink_3_236(source()))    == 6> t5;\n@@ -462,9 +462,9 @@ seven sink_3_237(volatile       A&&);\n int test3_237()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_237(ca))          == 2> t2;\n     sa<sizeof(sink_3_237(va))          == 3> t3;\n     sa<sizeof(sink_3_237(source()))    == 7> t5;\n@@ -480,9 +480,9 @@ eight sink_3_238(const volatile A&&);\n int test3_238()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_238(ca))          == 2> t2;\n     sa<sizeof(sink_3_238(va))          == 3> t3;\n     sa<sizeof(sink_3_238(source()))    == 8> t5;\n@@ -499,9 +499,9 @@ five  sink_3_245(               A&&);\n int test3_245()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_245(a))           == 2> t1;\n     sa<sizeof(sink_3_245(ca))          == 2> t2;\n     sa<sizeof(sink_3_245(va))          == 4> t3;\n@@ -518,9 +518,9 @@ six   sink_3_246(const          A&&);\n int test3_246()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_246(a))           == 2> t1;\n     sa<sizeof(sink_3_246(ca))          == 2> t2;\n     sa<sizeof(sink_3_246(va))          == 4> t3;\n@@ -537,9 +537,9 @@ seven sink_3_247(volatile       A&&);\n int test3_247()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_247(a))           == 2> t1;\n     sa<sizeof(sink_3_247(ca))          == 2> t2;\n     sa<sizeof(sink_3_247(va))          == 4> t3;\n@@ -557,9 +557,9 @@ eight sink_3_248(const volatile A&&);\n int test3_248()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_248(a))           == 2> t1;\n     sa<sizeof(sink_3_248(ca))          == 2> t2;\n     sa<sizeof(sink_3_248(va))          == 4> t3;\n@@ -578,9 +578,9 @@ six   sink_3_256(const          A&&);\n int test3_256()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_256(a))           == 2> t1;\n     sa<sizeof(sink_3_256(ca))          == 2> t2;\n     sa<sizeof(sink_3_256(source()))    == 5> t5;\n@@ -595,9 +595,9 @@ seven sink_3_257(volatile       A&&);\n int test3_257()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_257(a))           == 2> t1;\n     sa<sizeof(sink_3_257(ca))          == 2> t2;\n     sa<sizeof(sink_3_257(source()))    == 5> t5;\n@@ -613,9 +613,9 @@ eight sink_3_258(const volatile A&&);\n int test3_258()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_258(a))           == 2> t1;\n     sa<sizeof(sink_3_258(ca))          == 2> t2;\n     sa<sizeof(sink_3_258(source()))    == 5> t5;\n@@ -632,9 +632,9 @@ seven sink_3_267(volatile       A&&);\n int test3_267()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_267(a))           == 2> t1;\n     sa<sizeof(sink_3_267(ca))          == 2> t2;\n     sa<sizeof(sink_3_267(c_source()))  == 6> t6;\n@@ -649,9 +649,9 @@ eight sink_3_268(const volatile A&&);\n int test3_268()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_268(a))           == 2> t1;\n     sa<sizeof(sink_3_268(ca))          == 2> t2;\n     sa<sizeof(sink_3_268(source()))    == 6> t5;\n@@ -668,9 +668,9 @@ eight sink_3_278(const volatile A&&);\n int test3_278()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_278(a))           == 2> t1;\n     sa<sizeof(sink_3_278(ca))          == 2> t2;\n     sa<sizeof(sink_3_278(source()))    == 7> t5;\n@@ -687,9 +687,9 @@ five  sink_3_345(               A&&);\n int test3_345()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_345(a))           == 3> t1;\n     sa<sizeof(sink_3_345(ca))          == 4> t2;\n     sa<sizeof(sink_3_345(va))          == 3> t3;\n@@ -705,9 +705,9 @@ six   sink_3_346(const          A&&);\n int test3_346()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_346(a))           == 3> t1;\n     sa<sizeof(sink_3_346(ca))          == 4> t2;\n     sa<sizeof(sink_3_346(va))          == 3> t3;\n@@ -724,9 +724,9 @@ seven sink_3_347(volatile       A&&);\n int test3_347()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_347(a))           == 3> t1;\n     sa<sizeof(sink_3_347(ca))          == 4> t2;\n     sa<sizeof(sink_3_347(va))          == 3> t3;\n@@ -743,9 +743,9 @@ eight sink_3_348(const volatile A&&);\n int test3_348()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_348(a))           == 3> t1;\n     sa<sizeof(sink_3_348(ca))          == 4> t2;\n     sa<sizeof(sink_3_348(va))          == 3> t3;\n@@ -764,9 +764,9 @@ six   sink_3_356(const          A&&);\n int test3_356()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_356(a))           == 3> t1;\n     sa<sizeof(sink_3_356(va))          == 3> t3;\n     sa<sizeof(sink_3_356(source()))    == 5> t5;\n@@ -781,9 +781,9 @@ seven sink_3_357(volatile       A&&);\n int test3_357()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_357(a))           == 3> t1;\n     sa<sizeof(sink_3_357(va))          == 3> t3;\n     sa<sizeof(sink_3_357(source()))    == 5> t5;\n@@ -798,9 +798,9 @@ eight sink_3_358(const volatile A&&);\n int test3_358()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_358(a))           == 3> t1;\n     sa<sizeof(sink_3_358(va))          == 3> t3;\n     sa<sizeof(sink_3_358(source()))    == 5> t5;\n@@ -817,9 +817,9 @@ seven sink_3_367(volatile       A&&);\n int test3_367()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_367(a))           == 3> t1;\n     sa<sizeof(sink_3_367(va))          == 3> t3;\n     sa<sizeof(sink_3_367(c_source()))  == 6> t6;\n@@ -834,9 +834,9 @@ eight sink_3_368(const volatile A&&);\n int test3_368()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_368(a))           == 3> t1;\n     sa<sizeof(sink_3_368(va))          == 3> t3;\n     sa<sizeof(sink_3_368(source()))    == 6> t5;\n@@ -853,9 +853,9 @@ eight sink_3_378(const volatile A&&);\n int test3_378()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_378(a))           == 3> t1;\n     sa<sizeof(sink_3_378(va))          == 3> t3;\n     sa<sizeof(sink_3_378(source()))    == 7> t5;\n@@ -872,9 +872,9 @@ six   sink_3_456(const          A&&);\n int test3_456()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_456(a))           == 4> t1;\n     sa<sizeof(sink_3_456(ca))          == 4> t2;\n     sa<sizeof(sink_3_456(va))          == 4> t3;\n@@ -891,9 +891,9 @@ seven sink_3_457(volatile       A&&);\n int test3_457()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_457(a))           == 4> t1;\n     sa<sizeof(sink_3_457(ca))          == 4> t2;\n     sa<sizeof(sink_3_457(va))          == 4> t3;\n@@ -910,9 +910,9 @@ eight sink_3_458(const volatile A&&);\n int test3_458()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_458(a))           == 4> t1;\n     sa<sizeof(sink_3_458(ca))          == 4> t2;\n     sa<sizeof(sink_3_458(va))          == 4> t3;\n@@ -931,9 +931,9 @@ seven sink_3_467(volatile       A&&);\n int test3_467()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_467(a))           == 4> t1;\n     sa<sizeof(sink_3_467(ca))          == 4> t2;\n     sa<sizeof(sink_3_467(va))          == 4> t3;\n@@ -950,9 +950,9 @@ eight sink_3_468(const volatile A&&);\n int test3_468()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_468(a))           == 4> t1;\n     sa<sizeof(sink_3_468(ca))          == 4> t2;\n     sa<sizeof(sink_3_468(va))          == 4> t3;\n@@ -971,9 +971,9 @@ eight sink_3_478(const volatile A&&);\n int test3_478()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_478(a))           == 4> t1;\n     sa<sizeof(sink_3_478(ca))          == 4> t2;\n     sa<sizeof(sink_3_478(va))          == 4> t3;\n@@ -992,9 +992,9 @@ seven sink_3_567(volatile       A&&);\n int test3_567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_567(source()))    == 5> t5;\n     sa<sizeof(sink_3_567(c_source()))  == 6> t6;\n     sa<sizeof(sink_3_567(v_source()))  == 7> t7;\n@@ -1008,9 +1008,9 @@ eight sink_3_568(const volatile A&&);\n int test3_568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_568(source()))    == 5> t5;\n     sa<sizeof(sink_3_568(c_source()))  == 6> t6;\n     sa<sizeof(sink_3_568(v_source()))  == 8> t7;\n@@ -1025,9 +1025,9 @@ eight sink_3_578(const volatile A&&);\n int test3_578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_578(source()))    == 5> t5;\n     sa<sizeof(sink_3_578(c_source()))  == 8> t6;\n     sa<sizeof(sink_3_578(v_source()))  == 7> t7;\n@@ -1042,9 +1042,9 @@ eight sink_3_678(const volatile A&&);\n int test3_678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_3_678(c_source()))  == 6> t6;\n     sa<sizeof(sink_3_678(v_source()))  == 7> t7;\n     sa<sizeof(sink_3_678(cv_source())) == 8> t8;"}, {"sha": "524885f1d6079d97fc93e1d4f1ed438999238c20", "filename": "gcc/testsuite/g++.dg/cpp0x/rv4n.C", "status": "modified", "additions": 115, "deletions": 115, "changes": 230, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4n.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -20,7 +20,7 @@ struct eight {char x[8];};\n struct A\n {\n     A();\n-    A(const volatile A&&);\n+    A(const volatile A&&);\t// { dg-error \"argument 1\" }\n };\n \n                A    source();\n@@ -38,9 +38,9 @@ four  sink_4_1234(const volatile A&);  // { dg-message \"note\" }\n int test4_1234()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1234(v_source());   // { dg-error \"no match\" }\n     sink_4_1234(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -54,9 +54,9 @@ five  sink_4_1235(               A&&);  // { dg-message \"note\" }\n int test4_1235()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1235(cva);          // { dg-error \"no match\" }\n     sink_4_1235(v_source());   // { dg-error \"no match\" }\n     sink_4_1235(cv_source());  // { dg-error \"no match\" }\n@@ -71,9 +71,9 @@ six   sink_4_1236(const          A&&);  // { dg-message \"note\" }\n int test4_1236()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1236(cva);          // { dg-error \"no match\" }\n     sink_4_1236(v_source());   // { dg-error \"no match\" }\n     sink_4_1236(cv_source());  // { dg-error \"no match\" }\n@@ -88,9 +88,9 @@ seven sink_4_1237(volatile       A&&);  // { dg-message \"note\" }\n int test4_1237()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1237(cva);          // { dg-error \"no match\" }\n     sink_4_1237(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -104,9 +104,9 @@ eight sink_4_1238(const volatile A&&); // { dg-message \"\" }\n int test4_1238()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1238(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n }\n@@ -119,9 +119,9 @@ five  sink_4_1245(               A&&);  // { dg-message \"note\" }\n int test4_1245()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1245(v_source());   // { dg-error \"no match\" }\n     sink_4_1245(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -135,9 +135,9 @@ six   sink_4_1246(const          A&&);  // { dg-message \"note\" }\n int test4_1246()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1246(v_source());   // { dg-error \"no match\" }\n     sink_4_1246(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -151,9 +151,9 @@ seven sink_4_1247(volatile       A&&);  // { dg-message \"note\" }\n int test4_1247()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1247(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n@@ -166,9 +166,9 @@ six   sink_4_1256(const          A&&);  // { dg-message \"note\" }\n int test4_1256()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1256(va);           // { dg-error \"no match\" }\n     sink_4_1256(cva);          // { dg-error \"no match\" }\n     sink_4_1256(v_source());   // { dg-error \"no match\" }\n@@ -184,9 +184,9 @@ seven sink_4_1257(volatile       A&&);  // { dg-message \"\" }\n int test4_1257()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1257(va);\t\t// { dg-error \"lvalue\" }\n     sink_4_1257(cva);          // { dg-error \"no match\" }\n     sink_4_1257(cv_source());  // { dg-error \"no match\" }\n@@ -201,9 +201,9 @@ eight sink_4_1258(const volatile A&&); // { dg-message \"\" }\n int test4_1258()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1258(va);\t\t// { dg-error \"lvalue\" }\n     sink_4_1258(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -217,9 +217,9 @@ seven sink_4_1267(volatile       A&&);  // { dg-message \"\" }\n int test4_1267()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1267(va);\t\t// { dg-error \"lvalue\" }\n     sink_4_1267(cva);          // { dg-error \"no match\" }\n     sink_4_1267(source());     // { dg-error \"ambiguous\" }\n@@ -235,9 +235,9 @@ eight sink_4_1268(const volatile A&&); // { dg-message \"\" }\n int test4_1268()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1268(va);\t\t// { dg-error \"lvalue\" }\n     sink_4_1268(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -251,9 +251,9 @@ eight sink_4_1278(const volatile A&&); // { dg-message \"\" }\n int test4_1278()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1278(va);\t\t// { dg-error \"lvalue\" }\n     sink_4_1278(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -267,9 +267,9 @@ five  sink_4_1345(               A&&);  // { dg-message \"note\" }\n int test4_1345()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1345(c_source());   // { dg-error \"no match\" }\n     sink_4_1345(v_source());   // { dg-error \"no match\" }\n     sink_4_1345(cv_source());  // { dg-error \"no match\" }\n@@ -284,9 +284,9 @@ six   sink_4_1346(const          A&&);  // { dg-message \"note\" }\n int test4_1346()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1346(v_source());   // { dg-error \"no match\" }\n     sink_4_1346(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -300,9 +300,9 @@ seven sink_4_1347(volatile       A&&);  // { dg-message \"note\" }\n int test4_1347()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1347(c_source());   // { dg-error \"no match\" }\n     sink_4_1347(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -316,9 +316,9 @@ six   sink_4_1356(const          A&&);  // { dg-message \"\" }\n int test4_1356()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1356(ca);\t\t// { dg-error \"lvalue\" }\n     sink_4_1356(cva);          // { dg-error \"no match\" }\n     sink_4_1356(v_source());   // { dg-error \"no match\" }\n@@ -334,9 +334,9 @@ seven sink_4_1357(volatile       A&&);  // { dg-message \"note\" }\n int test4_1357()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1357(ca);           // { dg-error \"no match\" }\n     sink_4_1357(cva);          // { dg-error \"no match\" }\n     sink_4_1357(c_source());   // { dg-error \"no match\" }\n@@ -352,9 +352,9 @@ eight sink_4_1358(const volatile A&&); // { dg-message \"\" }\n int test4_1358()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1358(ca);\t\t// { dg-error \"lvalue\" }\n     sink_4_1358(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -368,9 +368,9 @@ seven sink_4_1367(volatile       A&&);  // { dg-message \"note\" }\n int test4_1367()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1367(ca);\t\t// { dg-error \"lvalue\" }\n     sink_4_1367(cva);          // { dg-error \"no match\" }\n     sink_4_1367(source());     // { dg-error \"ambiguous\" }\n@@ -386,9 +386,9 @@ eight sink_4_1368(const volatile A&&); // { dg-message \"\" }\n int test4_1368()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1368(ca);\t\t// { dg-error \"lvalue\" }\n     sink_4_1368(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -402,9 +402,9 @@ eight sink_4_1378(const volatile A&&); // { dg-message \"\" }\n int test4_1378()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1378(ca);\t\t// { dg-error \"lvalue\" }\n     sink_4_1378(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -418,9 +418,9 @@ six   sink_4_1456(const          A&&);  // { dg-message \"note\" }\n int test4_1456()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1456(v_source());   // { dg-error \"no match\" }\n     sink_4_1456(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -434,9 +434,9 @@ seven sink_4_1457(volatile       A&&);  // { dg-message \"note\" }\n int test4_1457()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1457(c_source());   // { dg-error \"no match\" }\n     sink_4_1457(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -450,9 +450,9 @@ seven sink_4_1467(volatile       A&&);  // { dg-message \"note\" }\n int test4_1467()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1467(source());     // { dg-error \"ambiguous\" }\n     sink_4_1467(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -466,9 +466,9 @@ seven sink_4_1567(volatile       A&&);  // { dg-message \"\" }\n int test4_1567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1567(ca);\t       // { dg-error \"lvalue\" }\n     sink_4_1567(va);\t       // { dg-error \"lvalue\" }\n     sink_4_1567(cva);          // { dg-error \"no match\" }\n@@ -484,9 +484,9 @@ eight sink_4_1568(const volatile A&&); // { dg-message \"\" }\n int test4_1568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1568(ca);\t\t// { dg-error \"lvalue\" }\n     sink_4_1568(va);\t\t// { dg-error \"lvalue\" }\n     sink_4_1568(cva);\t\t// { dg-error \"lvalue\" }\n@@ -501,9 +501,9 @@ eight sink_4_1578(const volatile A&&); // { dg-message \"\" }\n int test4_1578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1578(ca);\t\t// { dg-error \"lvalue\" }\n     sink_4_1578(va);\t\t// { dg-error \"lvalue\" }\n     sink_4_1578(cva);\t\t// { dg-error \"lvalue\" }\n@@ -518,9 +518,9 @@ eight sink_4_1678(const volatile A&&);  // { dg-message \"\" }\n int test4_1678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_1678(ca);\t\t// { dg-error \"lvalue\" }\n     sink_4_1678(va);\t\t// { dg-error \"lvalue\" }\n     sink_4_1678(cva);\t\t// { dg-error \"lvalue\" }\n@@ -536,9 +536,9 @@ five  sink_4_2345(               A&&);  // { dg-message \"note\" }\n int test4_2345()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2345(a);            // { dg-error \"ambiguous\" }\n     sink_4_2345(v_source());   // { dg-error \"no match\" }\n     sink_4_2345(cv_source());  // { dg-error \"no match\" }\n@@ -553,9 +553,9 @@ six   sink_4_2346(const          A&&);  // { dg-message \"note\" }\n int test4_2346()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2346(a);            // { dg-error \"ambiguous\" }\n     sink_4_2346(v_source());   // { dg-error \"no match\" }\n     sink_4_2346(cv_source());  // { dg-error \"no match\" }\n@@ -570,9 +570,9 @@ seven sink_4_2347(volatile       A&&);  // { dg-message \"note\" }\n int test4_2347()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2347(a);            // { dg-error \"ambiguous\" }\n     sink_4_2347(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -586,9 +586,9 @@ eight sink_4_2348(const volatile A&&);  // { dg-message \"note\" }\n int test4_2348()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2348(a);  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -601,9 +601,9 @@ six   sink_4_2356(const          A&&);  // { dg-message \"note\" }\n int test4_2356()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2356(a);            // { dg-error \"ambiguous\" }\n     sink_4_2356(cva);          // { dg-error \"no match\" }\n     sink_4_2356(v_source());   // { dg-error \"no match\" }\n@@ -619,9 +619,9 @@ seven sink_4_2357(volatile       A&&);  // { dg-message \"note\" }\n int test4_2357()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2357(a);            // { dg-error \"ambiguous\" }\n     sink_4_2357(cva);          // { dg-error \"no match\" }\n     sink_4_2357(cv_source());  // { dg-error \"no match\" }\n@@ -636,9 +636,9 @@ eight sink_4_2358(const volatile A&&);  // { dg-message \"\" }\n int test4_2358()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2358(a);  // { dg-error \"ambiguous\" }\n     sink_4_2358(cva); // { dg-error \"lvalue\" }\n     return 0;\n@@ -652,9 +652,9 @@ seven sink_4_2367(volatile       A&&);  // { dg-message \"note\" }\n int test4_2367()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2367(a);            // { dg-error \"ambiguous\" }\n     sink_4_2367(cva);          // { dg-error \"no match\" }\n     sink_4_2367(source());     // { dg-error \"ambiguous\" }\n@@ -670,9 +670,9 @@ eight sink_4_2368(const volatile A&&);  // { dg-message \"\" }\n int test4_2368()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2368(a);  // { dg-error \"ambiguous\" }\n     sink_4_2368(cva); // { dg-error \"lvalue\" }\n     return 0;\n@@ -686,9 +686,9 @@ eight sink_4_2378(const volatile A&&);  // { dg-message \"\" }\n int test4_2378()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2378(a);  // { dg-error \"ambiguous\" }\n     sink_4_2378(cva); // { dg-error \"lvalue\" }\n     return 0;\n@@ -702,9 +702,9 @@ six   sink_4_2456(const          A&&);  // { dg-message \"note\" }\n int test4_2456()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2456(v_source());   // { dg-error \"no match\" }\n     sink_4_2456(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -718,9 +718,9 @@ seven sink_4_2457(volatile       A&&);  // { dg-message \"note\" }\n int test4_2457()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2457(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n@@ -733,9 +733,9 @@ seven sink_4_2467(volatile       A&&);  // { dg-message \"note\" }\n int test4_2467()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2467(source());     // { dg-error \"ambiguous\" }\n     sink_4_2467(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -749,9 +749,9 @@ seven sink_4_2567(volatile       A&&);  // { dg-message \"\" }\n int test4_2567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2567(va);\t\t// { dg-error \"lvalue\" }\n     sink_4_2567(cva);          // { dg-error \"no match\" }\n     sink_4_2567(cv_source());  // { dg-error \"no match\" }\n@@ -766,9 +766,9 @@ eight sink_4_2568(const volatile A&&); // { dg-message \"\" }\n int test4_2568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2568(va); // { dg-error \"lvalue\" }\n     sink_4_2568(cva); // { dg-error \"lvalue\" }\n     return 0;\n@@ -782,9 +782,9 @@ eight sink_4_2578(const volatile A&&); // { dg-message \"\" }\n int test4_2578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2578(va); // { dg-error \"lvalue\" }\n     sink_4_2578(cva); // { dg-error \"lvalue\" }\n     return 0;\n@@ -798,9 +798,9 @@ eight sink_4_2678(const volatile A&&);  // { dg-message \"\" }\n int test4_2678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_2678(va); // { dg-error \"lvalue\" }\n     sink_4_2678(cva); // { dg-error \"lvalue\" }\n     sink_4_2678(source());  // { dg-error \"ambiguous\" }\n@@ -815,9 +815,9 @@ six   sink_4_3456(const          A&&);  // { dg-message \"note\" }\n int test4_3456()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_3456(v_source());   // { dg-error \"no match\" }\n     sink_4_3456(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -831,9 +831,9 @@ seven sink_4_3457(volatile       A&&);  // { dg-message \"note\" }\n int test4_3457()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_3457(c_source());   // { dg-error \"no match\" }\n     sink_4_3457(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -847,9 +847,9 @@ seven sink_4_3467(volatile       A&&);  // { dg-message \"note\" }\n int test4_3467()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_3467(source());     // { dg-error \"ambiguous\" }\n     sink_4_3467(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -863,9 +863,9 @@ seven sink_4_3567(volatile       A&&);  // { dg-message \"note\" }\n int test4_3567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_3567(ca);\t\t// { dg-error \"lvalue\" }\n     sink_4_3567(cva);          // { dg-error \"no match\" }\n     sink_4_3567(cv_source());  // { dg-error \"no match\" }\n@@ -880,9 +880,9 @@ eight sink_4_3568(const volatile A&&); // { dg-message \"\" }\n int test4_3568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_3568(ca); // { dg-error \"lvalue\" }\n     sink_4_3568(cva); // { dg-error \"lvalue\" }\n     return 0;\n@@ -896,9 +896,9 @@ eight sink_4_3578(const volatile A&&); // { dg-message \"\" }\n int test4_3578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_3578(ca); // { dg-error \"lvalue\" }\n     sink_4_3578(cva); // { dg-error \"lvalue\" }\n     return 0;\n@@ -912,9 +912,9 @@ eight sink_4_3678(const volatile A&&);  // { dg-message \"\" }\n int test4_3678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_3678(ca);\t\t// { dg-error \"lvalue\" }\n     sink_4_3678(cva);\t\t// { dg-error \"lvalue\" }\n     sink_4_3678(source());  // { dg-error \"ambiguous\" }\n@@ -929,9 +929,9 @@ seven sink_4_4567(volatile       A&&);  // { dg-message \"note\" }\n int test4_4567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_4567(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n@@ -944,9 +944,9 @@ eight sink_4_4678(const volatile A&&);  // { dg-message \"note\" }\n int test4_4678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_4678(source());  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -959,9 +959,9 @@ eight sink_4_5678(const volatile A&&); // { dg-message \"\" }\n int test4_5678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_4_5678(a);\t\t// { dg-error \"lvalue\" }\n     sink_4_5678(ca);\t\t// { dg-error \"lvalue\" }\n     sink_4_5678(va);\t\t// { dg-error \"lvalue\" }"}, {"sha": "33a90f854d169c6602e87817770d475c25dfa5cc", "filename": "gcc/testsuite/g++.dg/cpp0x/rv4p.C", "status": "modified", "additions": 140, "deletions": 140, "changes": 280, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4p.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -38,9 +38,9 @@ four  sink_4_1234(const volatile A&);\n int test4_1234()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1234(a))           == 1> t1;\n     sa<sizeof(sink_4_1234(ca))          == 2> t2;\n     sa<sizeof(sink_4_1234(va))          == 3> t3;\n@@ -58,9 +58,9 @@ five  sink_4_1235(               A&&);\n int test4_1235()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1235(a))           == 1> t1;\n     sa<sizeof(sink_4_1235(ca))          == 2> t2;\n     sa<sizeof(sink_4_1235(va))          == 3> t3;\n@@ -77,9 +77,9 @@ six   sink_4_1236(const          A&&);\n int test4_1236()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1236(a))           == 1> t1;\n     sa<sizeof(sink_4_1236(ca))          == 2> t2;\n     sa<sizeof(sink_4_1236(va))          == 3> t3;\n@@ -96,9 +96,9 @@ seven sink_4_1237(volatile       A&&);\n int test4_1237()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1237(a))           == 1> t1;\n     sa<sizeof(sink_4_1237(ca))          == 2> t2;\n     sa<sizeof(sink_4_1237(va))          == 3> t3;\n@@ -116,9 +116,9 @@ eight sink_4_1238(const volatile A&&);\n int test4_1238()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1238(a))           == 1> t1;\n     sa<sizeof(sink_4_1238(ca))          == 2> t2;\n     sa<sizeof(sink_4_1238(va))          == 3> t3;\n@@ -137,9 +137,9 @@ five  sink_4_1245(               A&&);\n int test4_1245()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1245(a))           == 1> t1;\n     sa<sizeof(sink_4_1245(ca))          == 2> t2;\n     sa<sizeof(sink_4_1245(va))          == 4> t3;\n@@ -157,9 +157,9 @@ six   sink_4_1246(const          A&&);\n int test4_1246()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1246(a))           == 1> t1;\n     sa<sizeof(sink_4_1246(ca))          == 2> t2;\n     sa<sizeof(sink_4_1246(va))          == 4> t3;\n@@ -177,9 +177,9 @@ seven sink_4_1247(volatile       A&&);\n int test4_1247()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1247(a))           == 1> t1;\n     sa<sizeof(sink_4_1247(ca))          == 2> t2;\n     sa<sizeof(sink_4_1247(va))          == 4> t3;\n@@ -198,9 +198,9 @@ eight sink_4_1248(const volatile A&&);\n int test4_1248()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1248(a))           == 1> t1;\n     sa<sizeof(sink_4_1248(ca))          == 2> t2;\n     sa<sizeof(sink_4_1248(va))          == 4> t3;\n@@ -220,9 +220,9 @@ six   sink_4_1256(const          A&&);\n int test4_1256()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1256(a))           == 1> t1;\n     sa<sizeof(sink_4_1256(ca))          == 2> t2;\n     sa<sizeof(sink_4_1256(source()))    == 5> t5;\n@@ -238,9 +238,9 @@ seven sink_4_1257(volatile       A&&);\n int test4_1257()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1257(a))           == 1> t1;\n     sa<sizeof(sink_4_1257(ca))          == 2> t2;\n     sa<sizeof(sink_4_1257(source()))    == 5> t5;\n@@ -257,9 +257,9 @@ eight sink_4_1258(const volatile A&&);\n int test4_1258()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1258(a))           == 1> t1;\n     sa<sizeof(sink_4_1258(ca))          == 2> t2;\n     sa<sizeof(sink_4_1258(source()))    == 5> t5;\n@@ -277,9 +277,9 @@ seven sink_4_1267(volatile       A&&);\n int test4_1267()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1267(a))           == 1> t1;\n     sa<sizeof(sink_4_1267(ca))          == 2> t2;\n     sa<sizeof(sink_4_1267(c_source()))  == 6> t6;\n@@ -295,9 +295,9 @@ eight sink_4_1268(const volatile A&&);\n int test4_1268()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1268(a))           == 1> t1;\n     sa<sizeof(sink_4_1268(ca))          == 2> t2;\n     sa<sizeof(sink_4_1268(source()))    == 6> t5;\n@@ -315,9 +315,9 @@ eight sink_4_1278(const volatile A&&);\n int test4_1278()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1278(a))           == 1> t1;\n     sa<sizeof(sink_4_1278(ca))          == 2> t2;\n     sa<sizeof(sink_4_1278(source()))    == 7> t5;\n@@ -335,9 +335,9 @@ five  sink_4_1345(               A&&);\n int test4_1345()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1345(a))           == 1> t1;\n     sa<sizeof(sink_4_1345(ca))          == 4> t2;\n     sa<sizeof(sink_4_1345(va))          == 3> t3;\n@@ -354,9 +354,9 @@ six   sink_4_1346(const          A&&);\n int test4_1346()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1346(a))           == 1> t1;\n     sa<sizeof(sink_4_1346(ca))          == 4> t2;\n     sa<sizeof(sink_4_1346(va))          == 3> t3;\n@@ -374,9 +374,9 @@ seven sink_4_1347(volatile       A&&);\n int test4_1347()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1347(a))           == 1> t1;\n     sa<sizeof(sink_4_1347(ca))          == 4> t2;\n     sa<sizeof(sink_4_1347(va))          == 3> t3;\n@@ -394,9 +394,9 @@ eight sink_4_1348(const volatile A&&);\n int test4_1348()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1348(a))           == 1> t1;\n     sa<sizeof(sink_4_1348(ca))          == 4> t2;\n     sa<sizeof(sink_4_1348(va))          == 3> t3;\n@@ -416,9 +416,9 @@ six   sink_4_1356(const          A&&);\n int test4_1356()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1356(a))           == 1> t1;\n     sa<sizeof(sink_4_1356(va))          == 3> t3;\n     sa<sizeof(sink_4_1356(source()))    == 5> t5;\n@@ -434,9 +434,9 @@ seven sink_4_1357(volatile       A&&);\n int test4_1357()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1357(a))           == 1> t1;\n     sa<sizeof(sink_4_1357(va))          == 3> t3;\n     sa<sizeof(sink_4_1357(source()))    == 5> t5;\n@@ -452,9 +452,9 @@ eight sink_4_1358(const volatile A&&);\n int test4_1358()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1358(a))           == 1> t1;\n     sa<sizeof(sink_4_1358(va))          == 3> t3;\n     sa<sizeof(sink_4_1358(source()))    == 5> t5;\n@@ -472,9 +472,9 @@ seven sink_4_1367(volatile       A&&);\n int test4_1367()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1367(a))           == 1> t1;\n     sa<sizeof(sink_4_1367(va))          == 3> t3;\n     sa<sizeof(sink_4_1367(c_source()))  == 6> t6;\n@@ -490,9 +490,9 @@ eight sink_4_1368(const volatile A&&);\n int test4_1368()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1368(a))           == 1> t1;\n     sa<sizeof(sink_4_1368(va))          == 3> t3;\n     sa<sizeof(sink_4_1368(source()))    == 6> t5;\n@@ -510,9 +510,9 @@ eight sink_4_1378(const volatile A&&);\n int test4_1378()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1378(a))           == 1> t1;\n     sa<sizeof(sink_4_1378(va))          == 3> t3;\n     sa<sizeof(sink_4_1378(source()))    == 7> t5;\n@@ -530,9 +530,9 @@ six   sink_4_1456(const          A&&);\n int test4_1456()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1456(a))           == 1> t1;\n     sa<sizeof(sink_4_1456(ca))          == 4> t2;\n     sa<sizeof(sink_4_1456(va))          == 4> t3;\n@@ -550,9 +550,9 @@ seven sink_4_1457(volatile       A&&);\n int test4_1457()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1457(a))           == 1> t1;\n     sa<sizeof(sink_4_1457(ca))          == 4> t2;\n     sa<sizeof(sink_4_1457(va))          == 4> t3;\n@@ -570,9 +570,9 @@ eight sink_4_1458(const volatile A&&);\n int test4_1458()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1458(a))           == 1> t1;\n     sa<sizeof(sink_4_1458(ca))          == 4> t2;\n     sa<sizeof(sink_4_1458(va))          == 4> t3;\n@@ -592,9 +592,9 @@ seven sink_4_1467(volatile       A&&);\n int test4_1467()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1467(a))           == 1> t1;\n     sa<sizeof(sink_4_1467(ca))          == 4> t2;\n     sa<sizeof(sink_4_1467(va))          == 4> t3;\n@@ -612,9 +612,9 @@ eight sink_4_1468(const volatile A&&);\n int test4_1468()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1468(a))           == 1> t1;\n     sa<sizeof(sink_4_1468(ca))          == 4> t2;\n     sa<sizeof(sink_4_1468(va))          == 4> t3;\n@@ -634,9 +634,9 @@ eight sink_4_1478(const volatile A&&);\n int test4_1478()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1478(a))           == 1> t1;\n     sa<sizeof(sink_4_1478(ca))          == 4> t2;\n     sa<sizeof(sink_4_1478(va))          == 4> t3;\n@@ -656,9 +656,9 @@ seven sink_4_1567(volatile       A&&);\n int test4_1567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1567(a))           == 1> t1;\n     sa<sizeof(sink_4_1567(source()))    == 5> t5;\n     sa<sizeof(sink_4_1567(c_source()))  == 6> t6;\n@@ -674,9 +674,9 @@ eight sink_4_1568(const volatile A&&);\n int test4_1568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1568(a))           == 1> t1;\n     sa<sizeof(sink_4_1568(source()))    == 5> t5;\n     sa<sizeof(sink_4_1568(c_source()))  == 6> t6;\n@@ -693,9 +693,9 @@ eight sink_4_1578(const volatile A&&);\n int test4_1578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1578(a))           == 1> t1;\n     sa<sizeof(sink_4_1578(source()))    == 5> t5;\n     sa<sizeof(sink_4_1578(c_source()))  == 8> t6;\n@@ -712,9 +712,9 @@ eight sink_4_1678(const volatile A&&);\n int test4_1678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_1678(a))           == 1> t1;\n     sa<sizeof(sink_4_1678(c_source()))  == 6> t6;\n     sa<sizeof(sink_4_1678(v_source()))  == 7> t7;\n@@ -730,9 +730,9 @@ five  sink_4_2345(               A&&);\n int test4_2345()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2345(ca))          == 2> t2;\n     sa<sizeof(sink_4_2345(va))          == 3> t3;\n     sa<sizeof(sink_4_2345(cva))         == 4> t4;\n@@ -749,9 +749,9 @@ six   sink_4_2346(const          A&&);\n int test4_2346()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2346(ca))          == 2> t2;\n     sa<sizeof(sink_4_2346(va))          == 3> t3;\n     sa<sizeof(sink_4_2346(cva))         == 4> t4;\n@@ -768,9 +768,9 @@ seven sink_4_2347(volatile       A&&);\n int test4_2347()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2347(ca))          == 2> t2;\n     sa<sizeof(sink_4_2347(va))          == 3> t3;\n     sa<sizeof(sink_4_2347(cva))         == 4> t4;\n@@ -788,9 +788,9 @@ eight sink_4_2348(const volatile A&&);\n int test4_2348()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2348(ca))          == 2> t2;\n     sa<sizeof(sink_4_2348(va))          == 3> t3;\n     sa<sizeof(sink_4_2348(cva))         == 4> t4;\n@@ -809,9 +809,9 @@ six   sink_4_2356(const          A&&);\n int test4_2356()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2356(ca))          == 2> t2;\n     sa<sizeof(sink_4_2356(va))          == 3> t3;\n     sa<sizeof(sink_4_2356(source()))    == 5> t5;\n@@ -827,9 +827,9 @@ seven sink_4_2357(volatile       A&&);\n int test4_2357()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2357(ca))          == 2> t2;\n     sa<sizeof(sink_4_2357(va))          == 3> t3;\n     sa<sizeof(sink_4_2357(source()))    == 5> t5;\n@@ -846,9 +846,9 @@ eight sink_4_2358(const volatile A&&);\n int test4_2358()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2358(ca))          == 2> t2;\n     sa<sizeof(sink_4_2358(va))          == 3> t3;\n     sa<sizeof(sink_4_2358(source()))    == 5> t5;\n@@ -866,9 +866,9 @@ seven sink_4_2367(volatile       A&&);\n int test4_2367()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2367(ca))          == 2> t2;\n     sa<sizeof(sink_4_2367(va))          == 3> t3;\n     sa<sizeof(sink_4_2367(c_source()))  == 6> t6;\n@@ -884,9 +884,9 @@ eight sink_4_2368(const volatile A&&);\n int test4_2368()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2368(ca))          == 2> t2;\n     sa<sizeof(sink_4_2368(va))          == 3> t3;\n     sa<sizeof(sink_4_2368(source()))    == 6> t5;\n@@ -904,9 +904,9 @@ eight sink_4_2378(const volatile A&&);\n int test4_2378()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2378(ca))          == 2> t2;\n     sa<sizeof(sink_4_2378(va))          == 3> t3;\n     sa<sizeof(sink_4_2378(source()))    == 7> t5;\n@@ -924,9 +924,9 @@ six   sink_4_2456(const          A&&);\n int test4_2456()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2456(a))           == 2> t1;\n     sa<sizeof(sink_4_2456(ca))          == 2> t2;\n     sa<sizeof(sink_4_2456(va))          == 4> t3;\n@@ -944,9 +944,9 @@ seven sink_4_2457(volatile       A&&);\n int test4_2457()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2457(a))           == 2> t1;\n     sa<sizeof(sink_4_2457(ca))          == 2> t2;\n     sa<sizeof(sink_4_2457(va))          == 4> t3;\n@@ -965,9 +965,9 @@ eight sink_4_2458(const volatile A&&);\n int test4_2458()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2458(a))           == 2> t1;\n     sa<sizeof(sink_4_2458(ca))          == 2> t2;\n     sa<sizeof(sink_4_2458(va))          == 4> t3;\n@@ -987,9 +987,9 @@ seven sink_4_2467(volatile       A&&);\n int test4_2467()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2467(a))           == 2> t1;\n     sa<sizeof(sink_4_2467(ca))          == 2> t2;\n     sa<sizeof(sink_4_2467(va))          == 4> t3;\n@@ -1007,9 +1007,9 @@ eight sink_4_2468(const volatile A&&);\n int test4_2468()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2468(a))           == 2> t1;\n     sa<sizeof(sink_4_2468(ca))          == 2> t2;\n     sa<sizeof(sink_4_2468(va))          == 4> t3;\n@@ -1029,9 +1029,9 @@ eight sink_4_2478(const volatile A&&);\n int test4_2478()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2478(a))           == 2> t1;\n     sa<sizeof(sink_4_2478(ca))          == 2> t2;\n     sa<sizeof(sink_4_2478(va))          == 4> t3;\n@@ -1051,9 +1051,9 @@ seven sink_4_2567(volatile       A&&);\n int test4_2567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2567(a))           == 2> t1;\n     sa<sizeof(sink_4_2567(ca))          == 2> t2;\n     sa<sizeof(sink_4_2567(source()))    == 5> t5;\n@@ -1070,9 +1070,9 @@ eight sink_4_2568(const volatile A&&);\n int test4_2568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2568(a))           == 2> t1;\n     sa<sizeof(sink_4_2568(ca))          == 2> t2;\n     sa<sizeof(sink_4_2568(source()))    == 5> t5;\n@@ -1090,9 +1090,9 @@ eight sink_4_2578(const volatile A&&);\n int test4_2578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2578(a))           == 2> t1;\n     sa<sizeof(sink_4_2578(ca))          == 2> t2;\n     sa<sizeof(sink_4_2578(source()))    == 5> t5;\n@@ -1110,9 +1110,9 @@ eight sink_4_2678(const volatile A&&);\n int test4_2678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_2678(a))           == 2> t1;\n     sa<sizeof(sink_4_2678(ca))          == 2> t2;\n     sa<sizeof(sink_4_2678(c_source()))  == 6> t6;\n@@ -1129,9 +1129,9 @@ six   sink_4_3456(const          A&&);\n int test4_3456()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_3456(a))           == 3> t1;\n     sa<sizeof(sink_4_3456(ca))          == 4> t2;\n     sa<sizeof(sink_4_3456(va))          == 3> t3;\n@@ -1149,9 +1149,9 @@ seven sink_4_3457(volatile       A&&);\n int test4_3457()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_3457(a))           == 3> t1;\n     sa<sizeof(sink_4_3457(ca))          == 4> t2;\n     sa<sizeof(sink_4_3457(va))          == 3> t3;\n@@ -1169,9 +1169,9 @@ eight sink_4_3458(const volatile A&&);\n int test4_3458()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_3458(a))           == 3> t1;\n     sa<sizeof(sink_4_3458(ca))          == 4> t2;\n     sa<sizeof(sink_4_3458(va))          == 3> t3;\n@@ -1191,9 +1191,9 @@ seven sink_4_3467(volatile       A&&);\n int test4_3467()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_3467(a))           == 3> t1;\n     sa<sizeof(sink_4_3467(ca))          == 4> t2;\n     sa<sizeof(sink_4_3467(va))          == 3> t3;\n@@ -1211,9 +1211,9 @@ eight sink_4_3468(const volatile A&&);\n int test4_3468()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_3468(a))           == 3> t1;\n     sa<sizeof(sink_4_3468(ca))          == 4> t2;\n     sa<sizeof(sink_4_3468(va))          == 3> t3;\n@@ -1233,9 +1233,9 @@ eight sink_4_3478(const volatile A&&);\n int test4_3478()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_3478(a))           == 3> t1;\n     sa<sizeof(sink_4_3478(ca))          == 4> t2;\n     sa<sizeof(sink_4_3478(va))          == 3> t3;\n@@ -1255,9 +1255,9 @@ seven sink_4_3567(volatile       A&&);\n int test4_3567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_3567(a))           == 3> t1;\n     sa<sizeof(sink_4_3567(va))          == 3> t3;\n     sa<sizeof(sink_4_3567(source()))    == 5> t5;\n@@ -1274,9 +1274,9 @@ eight sink_4_3568(const volatile A&&);\n int test4_3568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_3568(a))           == 3> t1;\n     sa<sizeof(sink_4_3568(va))          == 3> t3;\n     sa<sizeof(sink_4_3568(source()))    == 5> t5;\n@@ -1294,9 +1294,9 @@ eight sink_4_3578(const volatile A&&);\n int test4_3578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_3578(a))           == 3> t1;\n     sa<sizeof(sink_4_3578(va))          == 3> t3;\n     sa<sizeof(sink_4_3578(source()))    == 5> t5;\n@@ -1314,9 +1314,9 @@ eight sink_4_3678(const volatile A&&);\n int test4_3678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_3678(a))           == 3> t1;\n     sa<sizeof(sink_4_3678(va))          == 3> t3;\n     sa<sizeof(sink_4_3678(c_source()))  == 6> t6;\n@@ -1333,9 +1333,9 @@ seven sink_4_4567(volatile       A&&);\n int test4_4567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_4567(a))           == 4> t1;\n     sa<sizeof(sink_4_4567(ca))          == 4> t2;\n     sa<sizeof(sink_4_4567(va))          == 4> t3;\n@@ -1354,9 +1354,9 @@ eight sink_4_4568(const volatile A&&);\n int test4_4568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_4568(a))           == 4> t1;\n     sa<sizeof(sink_4_4568(ca))          == 4> t2;\n     sa<sizeof(sink_4_4568(va))          == 4> t3;\n@@ -1376,9 +1376,9 @@ eight sink_4_4578(const volatile A&&);\n int test4_4578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_4578(a))           == 4> t1;\n     sa<sizeof(sink_4_4578(ca))          == 4> t2;\n     sa<sizeof(sink_4_4578(va))          == 4> t3;\n@@ -1398,9 +1398,9 @@ eight sink_4_4678(const volatile A&&);\n int test4_4678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_4678(a))           == 4> t1;\n     sa<sizeof(sink_4_4678(ca))          == 4> t2;\n     sa<sizeof(sink_4_4678(va))          == 4> t3;\n@@ -1419,9 +1419,9 @@ eight sink_4_5678(const volatile A&&);\n int test4_5678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_4_5678(source()))    == 5> t5;\n     sa<sizeof(sink_4_5678(c_source()))  == 6> t6;\n     sa<sizeof(sink_4_5678(v_source()))  == 7> t7;"}, {"sha": "92ec1d925e1f85a43a87aee7f791594e9056b9d2", "filename": "gcc/testsuite/g++.dg/cpp0x/rv5n.C", "status": "modified", "additions": 85, "deletions": 85, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5n.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -20,7 +20,7 @@ struct eight {char x[8];};\n struct A\n {\n     A();\n-    A(const volatile A&&);\n+    A(const volatile A&&);\t// { dg-error \"argument 1\" }\n };\n \n                A    source();\n@@ -39,9 +39,9 @@ five  sink_5_12345(               A&&);  // { dg-message \"note\" }\n int test5_12345()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12345(v_source());   // { dg-error \"no match\" }\n     sink_5_12345(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -56,9 +56,9 @@ six   sink_5_12346(const          A&&);  // { dg-message \"note\" }\n int test5_12346()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12346(v_source());   // { dg-error \"no match\" }\n     sink_5_12346(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -73,9 +73,9 @@ seven sink_5_12347(volatile       A&&);  // { dg-message \"note\" }\n int test5_12347()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12347(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n@@ -89,9 +89,9 @@ six   sink_5_12356(const          A&&);  // { dg-message \"note\" }\n int test5_12356()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12356(cva);          // { dg-error \"no match\" }\n     sink_5_12356(v_source());   // { dg-error \"no match\" }\n     sink_5_12356(cv_source());  // { dg-error \"no match\" }\n@@ -107,9 +107,9 @@ seven sink_5_12357(volatile       A&&);  // { dg-message \"note\" }\n int test5_12357()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12357(cva);          // { dg-error \"no match\" }\n     sink_5_12357(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -124,9 +124,9 @@ eight sink_5_12358(const volatile A&&); // { dg-message \"\" }\n int test5_12358()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12358(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n }\n@@ -140,9 +140,9 @@ seven sink_5_12367(volatile       A&&);  // { dg-message \"note\" }\n int test5_12367()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12367(cva);          // { dg-error \"no match\" }\n     sink_5_12367(source());     // { dg-error \"ambiguous\" }\n     sink_5_12367(cv_source());  // { dg-error \"no match\" }\n@@ -158,9 +158,9 @@ eight sink_5_12368(const volatile A&&); // { dg-message \"\" }\n int test5_12368()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12368(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n }\n@@ -174,9 +174,9 @@ eight sink_5_12378(const volatile A&&); // { dg-message \"\" }\n int test5_12378()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12378(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n }\n@@ -190,9 +190,9 @@ six   sink_5_12456(const          A&&);  // { dg-message \"note\" }\n int test5_12456()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12456(v_source());   // { dg-error \"no match\" }\n     sink_5_12456(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -207,9 +207,9 @@ seven sink_5_12457(volatile       A&&);  // { dg-message \"note\" }\n int test5_12457()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12457(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n@@ -223,9 +223,9 @@ seven sink_5_12467(volatile       A&&);  // { dg-message \"note\" }\n int test5_12467()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12467(source());     // { dg-error \"ambiguous\" }\n     sink_5_12467(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -240,9 +240,9 @@ seven sink_5_12567(volatile       A&&);  // { dg-message \"\" }\n int test5_12567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12567(va);\t\t// { dg-error \"lvalue\" }\n     sink_5_12567(cva);          // { dg-error \"no match\" }\n     sink_5_12567(cv_source());  // { dg-error \"no match\" }\n@@ -258,9 +258,9 @@ eight sink_5_12568(const volatile A&&); // { dg-message \"\" }\n int test5_12568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12568(va);\t\t// { dg-error \"lvalue\" }\n     sink_5_12568(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -275,9 +275,9 @@ eight sink_5_12578(const volatile A&&); // { dg-message \"\" }\n int test5_12578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12578(va);\t\t// { dg-error \"lvalue\" }\n     sink_5_12578(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -292,9 +292,9 @@ eight sink_5_12678(const volatile A&&);  // { dg-message \"\" }\n int test5_12678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_12678(va);\t\t// { dg-error \"lvalue\" }\n     sink_5_12678(cva);\t\t// { dg-error \"lvalue\" }\n     sink_5_12678(source());  // { dg-error \"ambiguous\" }\n@@ -310,9 +310,9 @@ six   sink_5_13456(const          A&&);  // { dg-message \"note\" }\n int test5_13456()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_13456(v_source());   // { dg-error \"no match\" }\n     sink_5_13456(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -327,9 +327,9 @@ seven sink_5_13457(volatile       A&&);  // { dg-message \"note\" }\n int test5_13457()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_13457(c_source());   // { dg-error \"no match\" }\n     sink_5_13457(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -344,9 +344,9 @@ seven sink_5_13467(volatile       A&&);  // { dg-message \"note\" }\n int test5_13467()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_13467(source());     // { dg-error \"ambiguous\" }\n     sink_5_13467(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -361,9 +361,9 @@ seven sink_5_13567(volatile       A&&);  // { dg-message \"note\" }\n int test5_13567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_13567(ca);\t\t// { dg-error \"lvalue\" }\n     sink_5_13567(cva);          // { dg-error \"no match\" }\n     sink_5_13567(cv_source());  // { dg-error \"no match\" }\n@@ -379,9 +379,9 @@ eight sink_5_13568(const volatile A&&); // { dg-message \"\" }\n int test5_13568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_13568(ca);\t\t// { dg-error \"lvalue\" }\n     sink_5_13568(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -396,9 +396,9 @@ eight sink_5_13578(const volatile A&&); // { dg-message \"\" }\n int test5_13578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_13578(ca);\t\t// { dg-error \"lvalue\" }\n     sink_5_13578(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -413,9 +413,9 @@ eight sink_5_13678(const volatile A&&);  // { dg-message \"\" }\n int test5_13678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_13678(ca);\t\t// { dg-error \"lvalue\" }\n     sink_5_13678(cva);\t\t// { dg-error \"lvalue\" }\n     sink_5_13678(source());  // { dg-error \"ambiguous\" }\n@@ -431,9 +431,9 @@ seven sink_5_14567(volatile       A&&);  // { dg-message \"note\" }\n int test5_14567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_14567(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n@@ -447,9 +447,9 @@ eight sink_5_14678(const volatile A&&);  // { dg-message \"note\" }\n int test5_14678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_14678(source());  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -463,9 +463,9 @@ eight sink_5_15678(const volatile A&&); // { dg-message \"\" }\n int test5_15678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_15678(ca);\t\t// { dg-error \"lvalue\" }\n     sink_5_15678(va);\t\t// { dg-error \"lvalue\" }\n     sink_5_15678(cva);\t\t// { dg-error \"lvalue\" }\n@@ -481,9 +481,9 @@ six   sink_5_23456(const          A&&);  // { dg-message \"note\" }\n int test5_23456()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23456(a);            // { dg-error \"ambiguous\" }\n     sink_5_23456(v_source());   // { dg-error \"no match\" }\n     sink_5_23456(cv_source());  // { dg-error \"no match\" }\n@@ -499,9 +499,9 @@ seven sink_5_23457(volatile       A&&);  // { dg-message \"note\" }\n int test5_23457()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23457(a);            // { dg-error \"ambiguous\" }\n     sink_5_23457(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -516,9 +516,9 @@ eight sink_5_23458(const volatile A&&);  // { dg-message \"note\" }\n int test5_23458()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23458(a);  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -532,9 +532,9 @@ seven sink_5_23467(volatile       A&&);  // { dg-message \"note\" }\n int test5_23467()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23467(a);            // { dg-error \"ambiguous\" }\n     sink_5_23467(source());     // { dg-error \"ambiguous\" }\n     sink_5_23467(cv_source());  // { dg-error \"no match\" }\n@@ -550,9 +550,9 @@ eight sink_5_23468(const volatile A&&);  // { dg-message \"note\" }\n int test5_23468()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23468(a);  // { dg-error \"ambiguous\" }\n    return 0;\n }\n@@ -566,9 +566,9 @@ eight sink_5_23478(const volatile A&&);  // { dg-message \"note\" }\n int test5_23478()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23478(a);  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -582,9 +582,9 @@ seven sink_5_23567(volatile       A&&);  // { dg-message \"note\" }\n int test5_23567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23567(a);            // { dg-error \"ambiguous\" }\n     sink_5_23567(cva);          // { dg-error \"no match\" }\n     sink_5_23567(cv_source());  // { dg-error \"no match\" }\n@@ -600,9 +600,9 @@ eight sink_5_23568(const volatile A&&);  // { dg-message \"\" }\n int test5_23568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23568(cva); // { dg-error \"lvalue\" }\n     sink_5_23568(a);  // { dg-error \"ambiguous\" }\n     return 0;\n@@ -617,9 +617,9 @@ eight sink_5_23578(const volatile A&&);  // { dg-message \"\" }\n int test5_23578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23578(cva); // { dg-error \"lvalue\" }\n     sink_5_23578(a);  // { dg-error \"ambiguous\" }\n     return 0;\n@@ -634,9 +634,9 @@ eight sink_5_23678(const volatile A&&);  // { dg-message \"\" }\n int test5_23678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_23678(a);         // { dg-error \"ambiguous\" }\n     sink_5_23678(cva);\t     // { dg-error \"lvalue\" }\n     sink_5_23678(source());  // { dg-error \"ambiguous\" }\n@@ -652,9 +652,9 @@ seven sink_5_24567(volatile       A&&);  // { dg-message \"note\" }\n int test5_24567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_24567(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n@@ -668,9 +668,9 @@ eight sink_5_24678(const volatile A&&);  // { dg-message \"note\" }\n int test5_24678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_24678(source());  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -684,9 +684,9 @@ eight sink_5_25678(const volatile A&&); // { dg-message \"\" }\n int test5_25678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_25678(va);\t\t// { dg-error \"lvalue\" }\n     sink_5_25678(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -701,9 +701,9 @@ seven sink_5_34567(volatile       A&&);  // { dg-message \"note\" }\n int test5_34567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_34567(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n@@ -717,9 +717,9 @@ eight sink_5_34678(const volatile A&&);  // { dg-message \"note\" }\n int test5_34678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_34678(source());  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -733,9 +733,9 @@ eight sink_5_35678(const volatile A&&); // { dg-message \"\" }\n int test5_35678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_5_35678(ca);\t\t// { dg-error \"lvalue\" }\n     sink_5_35678(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;"}, {"sha": "cd12028fc9354edcd56ec7e56c9b0f582454e7ba", "filename": "gcc/testsuite/g++.dg/cpp0x/rv5p.C", "status": "modified", "additions": 112, "deletions": 112, "changes": 224, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5p.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -39,9 +39,9 @@ five  sink_5_12345(               A&&);\n int test5_12345()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12345(a))           == 1> t1;\n     sa<sizeof(sink_5_12345(ca))          == 2> t2;\n     sa<sizeof(sink_5_12345(va))          == 3> t3;\n@@ -60,9 +60,9 @@ six   sink_5_12346(const          A&&);\n int test5_12346()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12346(a))           == 1> t1;\n     sa<sizeof(sink_5_12346(ca))          == 2> t2;\n     sa<sizeof(sink_5_12346(va))          == 3> t3;\n@@ -81,9 +81,9 @@ seven sink_5_12347(volatile       A&&);\n int test5_12347()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12347(a))           == 1> t1;\n     sa<sizeof(sink_5_12347(ca))          == 2> t2;\n     sa<sizeof(sink_5_12347(va))          == 3> t3;\n@@ -103,9 +103,9 @@ eight sink_5_12348(const volatile A&&);\n int test5_12348()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12348(a))           == 1> t1;\n     sa<sizeof(sink_5_12348(ca))          == 2> t2;\n     sa<sizeof(sink_5_12348(va))          == 3> t3;\n@@ -126,9 +126,9 @@ six   sink_5_12356(const          A&&);\n int test5_12356()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12356(a))           == 1> t1;\n     sa<sizeof(sink_5_12356(ca))          == 2> t2;\n     sa<sizeof(sink_5_12356(va))          == 3> t3;\n@@ -146,9 +146,9 @@ seven sink_5_12357(volatile       A&&);\n int test5_12357()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12357(a))           == 1> t1;\n     sa<sizeof(sink_5_12357(ca))          == 2> t2;\n     sa<sizeof(sink_5_12357(va))          == 3> t3;\n@@ -167,9 +167,9 @@ eight sink_5_12358(const volatile A&&);\n int test5_12358()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12358(a))           == 1> t1;\n     sa<sizeof(sink_5_12358(ca))          == 2> t2;\n     sa<sizeof(sink_5_12358(va))          == 3> t3;\n@@ -189,9 +189,9 @@ seven sink_5_12367(volatile       A&&);\n int test5_12367()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12367(a))           == 1> t1;\n     sa<sizeof(sink_5_12367(ca))          == 2> t2;\n     sa<sizeof(sink_5_12367(va))          == 3> t3;\n@@ -209,9 +209,9 @@ eight sink_5_12368(const volatile A&&);\n int test5_12368()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12368(a))           == 1> t1;\n     sa<sizeof(sink_5_12368(ca))          == 2> t2;\n     sa<sizeof(sink_5_12368(va))          == 3> t3;\n@@ -231,9 +231,9 @@ eight sink_5_12378(const volatile A&&);\n int test5_12378()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12378(a))           == 1> t1;\n     sa<sizeof(sink_5_12378(ca))          == 2> t2;\n     sa<sizeof(sink_5_12378(va))          == 3> t3;\n@@ -253,9 +253,9 @@ six   sink_5_12456(const          A&&);\n int test5_12456()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12456(a))           == 1> t1;\n     sa<sizeof(sink_5_12456(ca))          == 2> t2;\n     sa<sizeof(sink_5_12456(va))          == 4> t3;\n@@ -274,9 +274,9 @@ seven sink_5_12457(volatile       A&&);\n int test5_12457()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12457(a))           == 1> t1;\n     sa<sizeof(sink_5_12457(ca))          == 2> t2;\n     sa<sizeof(sink_5_12457(va))          == 4> t3;\n@@ -296,9 +296,9 @@ eight sink_5_12458(const volatile A&&);\n int test5_12458()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12458(a))           == 1> t1;\n     sa<sizeof(sink_5_12458(ca))          == 2> t2;\n     sa<sizeof(sink_5_12458(va))          == 4> t3;\n@@ -319,9 +319,9 @@ seven sink_5_12467(volatile       A&&);\n int test5_12467()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12467(a))           == 1> t1;\n     sa<sizeof(sink_5_12467(ca))          == 2> t2;\n     sa<sizeof(sink_5_12467(va))          == 4> t3;\n@@ -340,9 +340,9 @@ eight sink_5_12468(const volatile A&&);\n int test5_12468()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12468(a))           == 1> t1;\n     sa<sizeof(sink_5_12468(ca))          == 2> t2;\n     sa<sizeof(sink_5_12468(va))          == 4> t3;\n@@ -363,9 +363,9 @@ eight sink_5_12478(const volatile A&&);\n int test5_12478()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12478(a))           == 1> t1;\n     sa<sizeof(sink_5_12478(ca))          == 2> t2;\n     sa<sizeof(sink_5_12478(va))          == 4> t3;\n@@ -386,9 +386,9 @@ seven sink_5_12567(volatile       A&&);\n int test5_12567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12567(a))           == 1> t1;\n     sa<sizeof(sink_5_12567(ca))          == 2> t2;\n     sa<sizeof(sink_5_12567(source()))    == 5> t5;\n@@ -406,9 +406,9 @@ eight sink_5_12568(const volatile A&&);\n int test5_12568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12568(a))           == 1> t1;\n     sa<sizeof(sink_5_12568(ca))          == 2> t2;\n     sa<sizeof(sink_5_12568(source()))    == 5> t5;\n@@ -427,9 +427,9 @@ eight sink_5_12578(const volatile A&&);\n int test5_12578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12578(a))           == 1> t1;\n     sa<sizeof(sink_5_12578(ca))          == 2> t2;\n     sa<sizeof(sink_5_12578(source()))    == 5> t5;\n@@ -448,9 +448,9 @@ eight sink_5_12678(const volatile A&&);\n int test5_12678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_12678(a))           == 1> t1;\n     sa<sizeof(sink_5_12678(ca))          == 2> t2;\n     sa<sizeof(sink_5_12678(c_source()))  == 6> t6;\n@@ -468,9 +468,9 @@ six   sink_5_13456(const          A&&);\n int test5_13456()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_13456(a))           == 1> t1;\n     sa<sizeof(sink_5_13456(ca))          == 4> t2;\n     sa<sizeof(sink_5_13456(va))          == 3> t3;\n@@ -489,9 +489,9 @@ seven sink_5_13457(volatile       A&&);\n int test5_13457()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_13457(a))           == 1> t1;\n     sa<sizeof(sink_5_13457(ca))          == 4> t2;\n     sa<sizeof(sink_5_13457(va))          == 3> t3;\n@@ -510,9 +510,9 @@ eight sink_5_13458(const volatile A&&);\n int test5_13458()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_13458(a))           == 1> t1;\n     sa<sizeof(sink_5_13458(ca))          == 4> t2;\n     sa<sizeof(sink_5_13458(va))          == 3> t3;\n@@ -533,9 +533,9 @@ seven sink_5_13467(volatile       A&&);\n int test5_13467()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_13467(a))           == 1> t1;\n     sa<sizeof(sink_5_13467(ca))          == 4> t2;\n     sa<sizeof(sink_5_13467(va))          == 3> t3;\n@@ -554,9 +554,9 @@ eight sink_5_13468(const volatile A&&);\n int test5_13468()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_13468(a))           == 1> t1;\n     sa<sizeof(sink_5_13468(ca))          == 4> t2;\n     sa<sizeof(sink_5_13468(va))          == 3> t3;\n@@ -577,9 +577,9 @@ eight sink_5_13478(const volatile A&&);\n int test5_13478()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_13478(a))           == 1> t1;\n     sa<sizeof(sink_5_13478(ca))          == 4> t2;\n     sa<sizeof(sink_5_13478(va))          == 3> t3;\n@@ -600,9 +600,9 @@ seven sink_5_13567(volatile       A&&);\n int test5_13567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_13567(a))           == 1> t1;\n     sa<sizeof(sink_5_13567(va))          == 3> t3;\n     sa<sizeof(sink_5_13567(source()))    == 5> t5;\n@@ -620,9 +620,9 @@ eight sink_5_13568(const volatile A&&);\n int test5_13568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_13568(a))           == 1> t1;\n     sa<sizeof(sink_5_13568(va))          == 3> t3;\n     sa<sizeof(sink_5_13568(source()))    == 5> t5;\n@@ -641,9 +641,9 @@ eight sink_5_13578(const volatile A&&);\n int test5_13578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_13578(a))           == 1> t1;\n     sa<sizeof(sink_5_13578(va))          == 3> t3;\n     sa<sizeof(sink_5_13578(source()))    == 5> t5;\n@@ -662,9 +662,9 @@ eight sink_5_13678(const volatile A&&);\n int test5_13678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_13678(a))           == 1> t1;\n     sa<sizeof(sink_5_13678(va))          == 3> t3;\n     sa<sizeof(sink_5_13678(c_source()))  == 6> t6;\n@@ -682,9 +682,9 @@ seven sink_5_14567(volatile       A&&);\n int test5_14567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_14567(a))           == 1> t1;\n     sa<sizeof(sink_5_14567(ca))          == 4> t2;\n     sa<sizeof(sink_5_14567(va))          == 4> t3;\n@@ -704,9 +704,9 @@ eight sink_5_14568(const volatile A&&);\n int test5_14568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_14568(a))           == 1> t1;\n     sa<sizeof(sink_5_14568(ca))          == 4> t2;\n     sa<sizeof(sink_5_14568(va))          == 4> t3;\n@@ -727,9 +727,9 @@ eight sink_5_14578(const volatile A&&);\n int test5_14578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_14578(a))           == 1> t1;\n     sa<sizeof(sink_5_14578(ca))          == 4> t2;\n     sa<sizeof(sink_5_14578(va))          == 4> t3;\n@@ -750,9 +750,9 @@ eight sink_5_14678(const volatile A&&);\n int test5_14678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_14678(a))           == 1> t1;\n     sa<sizeof(sink_5_14678(ca))          == 4> t2;\n     sa<sizeof(sink_5_14678(va))          == 4> t3;\n@@ -772,9 +772,9 @@ eight sink_5_15678(const volatile A&&);\n int test5_15678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_15678(a))           == 1> t1;\n     sa<sizeof(sink_5_15678(source()))    == 5> t5;\n     sa<sizeof(sink_5_15678(c_source()))  == 6> t6;\n@@ -792,9 +792,9 @@ six   sink_5_23456(const          A&&);\n int test5_23456()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_23456(ca))          == 2> t2;\n     sa<sizeof(sink_5_23456(va))          == 3> t3;\n     sa<sizeof(sink_5_23456(cva))         == 4> t4;\n@@ -812,9 +812,9 @@ seven sink_5_23457(volatile       A&&);\n int test5_23457()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_23457(ca))          == 2> t2;\n     sa<sizeof(sink_5_23457(va))          == 3> t3;\n     sa<sizeof(sink_5_23457(cva))         == 4> t4;\n@@ -833,9 +833,9 @@ eight sink_5_23458(const volatile A&&);\n int test5_23458()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_23458(ca))          == 2> t2;\n     sa<sizeof(sink_5_23458(va))          == 3> t3;\n     sa<sizeof(sink_5_23458(cva))         == 4> t4;\n@@ -855,9 +855,9 @@ seven sink_5_23467(volatile       A&&);\n int test5_23467()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_23467(ca))          == 2> t2;\n     sa<sizeof(sink_5_23467(va))          == 3> t3;\n     sa<sizeof(sink_5_23467(cva))         == 4> t4;\n@@ -875,9 +875,9 @@ eight sink_5_23468(const volatile A&&);\n int test5_23468()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_23468(ca))          == 2> t2;\n     sa<sizeof(sink_5_23468(va))          == 3> t3;\n     sa<sizeof(sink_5_23468(cva))         == 4> t4;\n@@ -897,9 +897,9 @@ eight sink_5_23478(const volatile A&&);\n int test5_23478()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_23478(ca))          == 2> t2;\n     sa<sizeof(sink_5_23478(va))          == 3> t3;\n     sa<sizeof(sink_5_23478(cva))         == 4> t4;\n@@ -919,9 +919,9 @@ seven sink_5_23567(volatile       A&&);\n int test5_23567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_23567(ca))          == 2> t2;\n     sa<sizeof(sink_5_23567(va))          == 3> t3;\n     sa<sizeof(sink_5_23567(source()))    == 5> t5;\n@@ -939,9 +939,9 @@ eight sink_5_23568(const volatile A&&);\n int test5_23568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_23568(ca))          == 2> t2;\n     sa<sizeof(sink_5_23568(va))          == 3> t3;\n     sa<sizeof(sink_5_23568(source()))    == 5> t5;\n@@ -960,9 +960,9 @@ eight sink_5_23578(const volatile A&&);\n int test5_23578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_23578(ca))          == 2> t2;\n     sa<sizeof(sink_5_23578(va))          == 3> t3;\n     sa<sizeof(sink_5_23578(source()))    == 5> t5;\n@@ -981,9 +981,9 @@ eight sink_5_23678(const volatile A&&);\n int test5_23678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_23678(ca))          == 2> t2;\n     sa<sizeof(sink_5_23678(va))          == 3> t3;\n     sa<sizeof(sink_5_23678(c_source()))  == 6> t6;\n@@ -1001,9 +1001,9 @@ seven sink_5_24567(volatile       A&&);\n int test5_24567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_24567(a))           == 2> t1;\n     sa<sizeof(sink_5_24567(ca))          == 2> t2;\n     sa<sizeof(sink_5_24567(va))          == 4> t3;\n@@ -1023,9 +1023,9 @@ eight sink_5_24568(const volatile A&&);\n int test5_24568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_24568(a))           == 2> t1;\n     sa<sizeof(sink_5_24568(ca))          == 2> t2;\n     sa<sizeof(sink_5_24568(va))          == 4> t3;\n@@ -1046,9 +1046,9 @@ eight sink_5_24578(const volatile A&&);\n int test5_24578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_24578(a))           == 2> t1;\n     sa<sizeof(sink_5_24578(ca))          == 2> t2;\n     sa<sizeof(sink_5_24578(va))          == 4> t3;\n@@ -1069,9 +1069,9 @@ eight sink_5_24678(const volatile A&&);\n int test5_24678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_24678(a))           == 2> t1;\n     sa<sizeof(sink_5_24678(ca))          == 2> t2;\n     sa<sizeof(sink_5_24678(va))          == 4> t3;\n@@ -1091,9 +1091,9 @@ eight sink_5_25678(const volatile A&&);\n int test5_25678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_25678(a))           == 2> t1;\n     sa<sizeof(sink_5_25678(ca))          == 2> t2;\n     sa<sizeof(sink_5_25678(source()))    == 5> t5;\n@@ -1112,9 +1112,9 @@ seven sink_5_34567(volatile       A&&);\n int test5_34567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_34567(a))           == 3> t1;\n     sa<sizeof(sink_5_34567(ca))          == 4> t2;\n     sa<sizeof(sink_5_34567(va))          == 3> t3;\n@@ -1134,9 +1134,9 @@ eight sink_5_34568(const volatile A&&);\n int test5_34568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_34568(a))           == 3> t1;\n     sa<sizeof(sink_5_34568(ca))          == 4> t2;\n     sa<sizeof(sink_5_34568(va))          == 3> t3;\n@@ -1157,9 +1157,9 @@ eight sink_5_34578(const volatile A&&);\n int test5_34578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_34578(a))           == 3> t1;\n     sa<sizeof(sink_5_34578(ca))          == 4> t2;\n     sa<sizeof(sink_5_34578(va))          == 3> t3;\n@@ -1180,9 +1180,9 @@ eight sink_5_34678(const volatile A&&);\n int test5_34678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_34678(a))           == 3> t1;\n     sa<sizeof(sink_5_34678(ca))          == 4> t2;\n     sa<sizeof(sink_5_34678(va))          == 3> t3;\n@@ -1202,9 +1202,9 @@ eight sink_5_35678(const volatile A&&);\n int test5_35678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_35678(a))           == 3> t1;\n     sa<sizeof(sink_5_35678(va))          == 3> t3;\n     sa<sizeof(sink_5_35678(source()))    == 5> t5;\n@@ -1223,9 +1223,9 @@ eight sink_5_45678(const volatile A&&);\n int test5_45678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_5_45678(a))           == 4> t1;\n     sa<sizeof(sink_5_45678(ca))          == 4> t2;\n     sa<sizeof(sink_5_45678(va))          == 4> t3;"}, {"sha": "6a81f66fa5c19a5f3541159e7cb47b9549036a35", "filename": "gcc/testsuite/g++.dg/cpp0x/rv6n.C", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6n.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -20,7 +20,7 @@ struct eight {char x[8];};\n struct A\n {\n     A();\n-    A(const volatile A&&);\n+    A(const volatile A&&);\t// { dg-error \"argument 1\" }\n };\n \n                A    source();\n@@ -40,9 +40,9 @@ six   sink_6_123456(const          A&&);  // { dg-message \"note\" }\n int test6_123456()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_123456(v_source());   // { dg-error \"no match\" }\n     sink_6_123456(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -58,9 +58,9 @@ seven sink_6_123457(volatile       A&&);  // { dg-message \"note\" }\n int test6_123457()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_123457(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n@@ -75,9 +75,9 @@ eight sink_6_235678(const volatile A&&);  // { dg-message \"\" }\n int test6_235678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_235678(a);  // { dg-error \"ambiguous\" }\n     sink_6_235678(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -93,9 +93,9 @@ eight sink_6_234678(const volatile A&&);  // { dg-message \"note\" }\n int test6_234678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_234678(a);         // { dg-error \"ambiguous\" }\n     sink_6_234678(source());  // { dg-error \"ambiguous\" }\n     return 0;\n@@ -111,9 +111,9 @@ eight sink_6_234578(const volatile A&&);  // { dg-message \"note\" }\n int test6_234578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_234578(a);  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -128,9 +128,9 @@ eight sink_6_234568(const volatile A&&);  // { dg-message \"note\" }\n int test6_234568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_234568(a);  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -145,9 +145,9 @@ seven sink_6_234567(volatile       A&&);  // { dg-message \"note\" }\n int test6_234567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_234567(a);            // { dg-error \"ambiguous\" }\n     sink_6_234567(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -163,9 +163,9 @@ eight sink_6_134678(const volatile A&&);  // { dg-message \"note\" }\n int test6_134678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_134678(source());  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -180,9 +180,9 @@ eight sink_6_124678(const volatile A&&);  // { dg-message \"note\" }\n int test6_124678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_124678(source());  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -197,9 +197,9 @@ eight sink_6_123678(const volatile A&&);  // { dg-message \"\" }\n int test6_123678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_123678(cva);\t\t// { dg-error \"lvalue\" }\n     sink_6_123678(source());  // { dg-error \"ambiguous\" }\n     return 0;\n@@ -215,9 +215,9 @@ seven sink_6_123567(volatile       A&&);  // { dg-message \"note\" }\n int test6_123567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_123567(cva);          // { dg-error \"no match\" }\n     sink_6_123567(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -233,9 +233,9 @@ eight sink_6_123568(const volatile A&&); // { dg-message \"\" }\n int test6_123568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_123568(cva); // { dg-error \"lvalue\" }\n     return 0;\n }\n@@ -250,9 +250,9 @@ eight sink_6_123578(const volatile A&&); // { dg-message \"\" }\n int test6_123578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_123578(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n }\n@@ -267,9 +267,9 @@ seven sink_6_123467(volatile       A&&);  // { dg-message \"note\" }\n int test6_123467()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_123467(source());     // { dg-error \"ambiguous\" }\n     sink_6_123467(cv_source());  // { dg-error \"no match\" }\n     return 0;\n@@ -285,9 +285,9 @@ seven sink_6_124567(volatile       A&&);  // { dg-message \"note\" }\n int test6_124567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_124567(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n@@ -302,9 +302,9 @@ eight sink_6_125678(const volatile A&&); // { dg-message \"\" }\n int test6_125678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_125678(va);\t\t// { dg-error \"lvalue\" }\n     sink_6_125678(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;\n@@ -320,9 +320,9 @@ seven sink_6_134567(volatile       A&&);  // { dg-message \"note\" }\n int test6_134567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_134567(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n@@ -337,9 +337,9 @@ eight sink_6_135678(const volatile A&&); // { dg-message \"\" }\n int test6_135678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_6_135678(ca);\t\t// { dg-error \"lvalue\" }\n     sink_6_135678(cva);\t\t// { dg-error \"lvalue\" }\n     return 0;"}, {"sha": "bb17d7929feb463e55076d8118c1fa02cf7f6978", "filename": "gcc/testsuite/g++.dg/cpp0x/rv6p.C", "status": "modified", "additions": 56, "deletions": 56, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6p.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -40,9 +40,9 @@ six   sink_6_123456(const          A&&);\n int test6_123456()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_123456(a))           == 1> t1;\n     sa<sizeof(sink_6_123456(ca))          == 2> t2;\n     sa<sizeof(sink_6_123456(va))          == 3> t3;\n@@ -62,9 +62,9 @@ seven sink_6_123457(volatile       A&&);\n int test6_123457()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_123457(a))           == 1> t1;\n     sa<sizeof(sink_6_123457(ca))          == 2> t2;\n     sa<sizeof(sink_6_123457(va))          == 3> t3;\n@@ -85,9 +85,9 @@ eight sink_6_123458(const volatile A&&);\n int test6_123458()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_123458(a))           == 1> t1;\n     sa<sizeof(sink_6_123458(ca))          == 2> t2;\n     sa<sizeof(sink_6_123458(va))          == 3> t3;\n@@ -109,9 +109,9 @@ seven sink_6_123467(volatile       A&&);\n int test6_123467()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_123467(a))           == 1> t1;\n     sa<sizeof(sink_6_123467(ca))          == 2> t2;\n     sa<sizeof(sink_6_123467(va))          == 3> t3;\n@@ -131,9 +131,9 @@ eight sink_6_123468(const volatile A&&);\n int test6_123468()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_123468(a))           == 1> t1;\n     sa<sizeof(sink_6_123468(ca))          == 2> t2;\n     sa<sizeof(sink_6_123468(va))          == 3> t3;\n@@ -155,9 +155,9 @@ eight sink_6_123478(const volatile A&&);\n int test6_123478()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_123478(a))           == 1> t1;\n     sa<sizeof(sink_6_123478(ca))          == 2> t2;\n     sa<sizeof(sink_6_123478(va))          == 3> t3;\n@@ -179,9 +179,9 @@ seven sink_6_123567(volatile       A&&);\n int test6_123567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_123567(a))           == 1> t1;\n     sa<sizeof(sink_6_123567(ca))          == 2> t2;\n     sa<sizeof(sink_6_123567(va))          == 3> t3;\n@@ -201,9 +201,9 @@ eight sink_6_123568(const volatile A&&);\n int test6_123568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_123568(a))           == 1> t1;\n     sa<sizeof(sink_6_123568(ca))          == 2> t2;\n     sa<sizeof(sink_6_123568(va))          == 3> t3;\n@@ -224,9 +224,9 @@ eight sink_6_123578(const volatile A&&);\n int test6_123578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_123578(a))           == 1> t1;\n     sa<sizeof(sink_6_123578(ca))          == 2> t2;\n     sa<sizeof(sink_6_123578(va))          == 3> t3;\n@@ -247,9 +247,9 @@ eight sink_6_123678(const volatile A&&);\n int test6_123678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_123678(a))           == 1> t1;\n     sa<sizeof(sink_6_123678(ca))          == 2> t2;\n     sa<sizeof(sink_6_123678(va))          == 3> t3;\n@@ -269,9 +269,9 @@ seven sink_6_124567(volatile       A&&);\n int test6_124567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_124567(a))           == 1> t1;\n     sa<sizeof(sink_6_124567(ca))          == 2> t2;\n     sa<sizeof(sink_6_124567(va))          == 4> t3;\n@@ -292,9 +292,9 @@ eight sink_6_124568(const volatile A&&);\n int test6_124568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_124568(a))           == 1> t1;\n     sa<sizeof(sink_6_124568(ca))          == 2> t2;\n     sa<sizeof(sink_6_124568(va))          == 4> t3;\n@@ -316,9 +316,9 @@ eight sink_6_124578(const volatile A&&);\n int test6_124578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_124578(a))           == 1> t1;\n     sa<sizeof(sink_6_124578(ca))          == 2> t2;\n     sa<sizeof(sink_6_124578(va))          == 4> t3;\n@@ -340,9 +340,9 @@ eight sink_6_124678(const volatile A&&);\n int test6_124678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_124678(a))           == 1> t1;\n     sa<sizeof(sink_6_124678(ca))          == 2> t2;\n     sa<sizeof(sink_6_124678(va))          == 4> t3;\n@@ -363,9 +363,9 @@ eight sink_6_125678(const volatile A&&);\n int test6_125678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_125678(a))           == 1> t1;\n     sa<sizeof(sink_6_125678(ca))          == 2> t2;\n     sa<sizeof(sink_6_125678(source()))    == 5> t5;\n@@ -385,9 +385,9 @@ seven sink_6_134567(volatile       A&&);\n int test6_134567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_134567(a))           == 1> t1;\n     sa<sizeof(sink_6_134567(ca))          == 4> t2;\n     sa<sizeof(sink_6_134567(va))          == 3> t3;\n@@ -408,9 +408,9 @@ eight sink_6_134568(const volatile A&&);\n int test6_134568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_134568(a))           == 1> t1;\n     sa<sizeof(sink_6_134568(ca))          == 4> t2;\n     sa<sizeof(sink_6_134568(va))          == 3> t3;\n@@ -432,9 +432,9 @@ eight sink_6_134578(const volatile A&&);\n int test6_134578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_134578(a))           == 1> t1;\n     sa<sizeof(sink_6_134578(ca))          == 4> t2;\n     sa<sizeof(sink_6_134578(va))          == 3> t3;\n@@ -456,9 +456,9 @@ eight sink_6_134678(const volatile A&&);\n int test6_134678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_134678(a))           == 1> t1;\n     sa<sizeof(sink_6_134678(ca))          == 4> t2;\n     sa<sizeof(sink_6_134678(va))          == 3> t3;\n@@ -479,9 +479,9 @@ eight sink_6_135678(const volatile A&&);\n int test6_135678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_135678(a))           == 1> t1;\n     sa<sizeof(sink_6_135678(va))          == 3> t3;\n     sa<sizeof(sink_6_135678(source()))    == 5> t5;\n@@ -501,9 +501,9 @@ eight sink_6_145678(const volatile A&&);\n int test6_145678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_145678(a))           == 1> t1;\n     sa<sizeof(sink_6_145678(ca))          == 4> t2;\n     sa<sizeof(sink_6_145678(va))          == 4> t3;\n@@ -525,9 +525,9 @@ seven sink_6_234567(volatile       A&&);\n int test6_234567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_234567(ca))          == 2> t2;\n     sa<sizeof(sink_6_234567(va))          == 3> t3;\n     sa<sizeof(sink_6_234567(cva))         == 4> t4;\n@@ -547,9 +547,9 @@ eight sink_6_234568(const volatile A&&);\n int test6_234568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_234568(ca))          == 2> t2;\n     sa<sizeof(sink_6_234568(va))          == 3> t3;\n     sa<sizeof(sink_6_234568(cva))         == 4> t4;\n@@ -570,9 +570,9 @@ eight sink_6_234578(const volatile A&&);\n int test6_234578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_234578(ca))          == 2> t2;\n     sa<sizeof(sink_6_234578(va))          == 3> t3;\n     sa<sizeof(sink_6_234578(cva))         == 4> t4;\n@@ -593,9 +593,9 @@ eight sink_6_234678(const volatile A&&);\n int test6_234678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_234678(ca))          == 2> t2;\n     sa<sizeof(sink_6_234678(va))          == 3> t3;\n     sa<sizeof(sink_6_234678(cva))         == 4> t4;\n@@ -615,9 +615,9 @@ eight sink_6_235678(const volatile A&&);\n int test6_235678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_235678(ca))          == 2> t2;\n     sa<sizeof(sink_6_235678(va))          == 3> t3;\n     sa<sizeof(sink_6_235678(source()))    == 5> t5;\n@@ -637,9 +637,9 @@ eight sink_6_245678(const volatile A&&);\n int test6_245678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_245678(a))           == 2> t1;\n     sa<sizeof(sink_6_245678(ca))          == 2> t2;\n     sa<sizeof(sink_6_245678(va))          == 4> t3;\n@@ -661,9 +661,9 @@ eight sink_6_345678(const volatile A&&);\n int test6_345678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_6_345678(a))           == 3> t1;\n     sa<sizeof(sink_6_345678(ca))          == 4> t2;\n     sa<sizeof(sink_6_345678(va))          == 3> t3;"}, {"sha": "94254b5824b953c261969dd2ff774bff705e8e28", "filename": "gcc/testsuite/g++.dg/cpp0x/rv7n.C", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7n.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -20,7 +20,7 @@ struct eight {char x[8];};\n struct A\n {\n     A();\n-    A(const volatile A&&);\n+    A(const volatile A&&);\t// { dg-error \"argument 1\" }\n };\n \n                A    source();\n@@ -41,9 +41,9 @@ seven sink_7_1234567(volatile       A&&);  // { dg-message \"note\" }\n int test7_1234567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_7_1234567(cv_source());  // { dg-error \"no match\" }\n     return 0;\n }\n@@ -59,9 +59,9 @@ eight sink_7_1235678(const volatile A&&); // { dg-message \"\" }\n int test7_1235678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_7_1235678(cva);\t// { dg-error \"lvalue\" }\n     return 0;\n }\n@@ -77,9 +77,9 @@ eight sink_7_2345678(const volatile A&&);  // { dg-message \"note\" }\n int test7_2345678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_7_2345678(a);  // { dg-error \"ambiguous\" }\n     return 0;\n }\n@@ -95,9 +95,9 @@ eight sink_7_1234678(const volatile A&&);  // { dg-message \"note\" }\n int test7_1234678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca = a; // { dg-error \"lvalue\" }\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva = a; // { dg-error \"lvalue\" }\n     sink_7_1234678(source());  // { dg-error \"ambiguous\" }\n     return 0;\n }"}, {"sha": "710f1cf048daac51bdd641a6175be2bfddf9726a", "filename": "gcc/testsuite/g++.dg/cpp0x/rv7p.C", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7p.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -41,9 +41,9 @@ seven sink_7_1234567(volatile       A&&);\n int test7_1234567()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_7_1234567(a))           == 1> t1;\n     sa<sizeof(sink_7_1234567(ca))          == 2> t2;\n     sa<sizeof(sink_7_1234567(va))          == 3> t3;\n@@ -65,9 +65,9 @@ eight sink_7_1234568(const volatile A&&);\n int test7_1234568()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_7_1234568(a))           == 1> t1;\n     sa<sizeof(sink_7_1234568(ca))          == 2> t2;\n     sa<sizeof(sink_7_1234568(va))          == 3> t3;\n@@ -90,9 +90,9 @@ eight sink_7_1234578(const volatile A&&);\n int test7_1234578()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_7_1234578(a))           == 1> t1;\n     sa<sizeof(sink_7_1234578(ca))          == 2> t2;\n     sa<sizeof(sink_7_1234578(va))          == 3> t3;\n@@ -115,9 +115,9 @@ eight sink_7_1234678(const volatile A&&);\n int test7_1234678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_7_1234678(a))           == 1> t1;\n     sa<sizeof(sink_7_1234678(ca))          == 2> t2;\n     sa<sizeof(sink_7_1234678(va))          == 3> t3;\n@@ -139,9 +139,9 @@ eight sink_7_1235678(const volatile A&&);\n int test7_1235678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_7_1235678(a))           == 1> t1;\n     sa<sizeof(sink_7_1235678(ca))          == 2> t2;\n     sa<sizeof(sink_7_1235678(va))          == 3> t3;\n@@ -163,9 +163,9 @@ eight sink_7_1245678(const volatile A&&);\n int test7_1245678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_7_1245678(a))           == 1> t1;\n     sa<sizeof(sink_7_1245678(ca))          == 2> t2;\n     sa<sizeof(sink_7_1245678(va))          == 4> t3;\n@@ -188,9 +188,9 @@ eight sink_7_1345678(const volatile A&&);\n int test7_1345678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_7_1345678(a))           == 1> t1;\n     sa<sizeof(sink_7_1345678(ca))          == 4> t2;\n     sa<sizeof(sink_7_1345678(va))          == 3> t3;\n@@ -213,9 +213,9 @@ eight sink_7_2345678(const volatile A&&);\n int test7_2345678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_7_2345678(ca))          == 2> t2;\n     sa<sizeof(sink_7_2345678(va))          == 3> t3;\n     sa<sizeof(sink_7_2345678(cva))         == 4> t4;"}, {"sha": "8ee993854b8d3e8e53ac1ffd5fadb688314fc742", "filename": "gcc/testsuite/g++.dg/cpp0x/rv8p.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv8p.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv8p.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv8p.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -42,9 +42,9 @@ eight sink_8_12345678(const volatile A&&);\n int test8_12345678()\n {\n                    A a;\n-    const          A ca = a;\n+    const          A ca;\n           volatile A va;\n-    const volatile A cva = a;\n+    const volatile A cva;\n     sa<sizeof(sink_8_12345678(a))           == 1> t1;\n     sa<sizeof(sink_8_12345678(ca))          == 2> t2;\n     sa<sizeof(sink_8_12345678(va))          == 3> t3;"}, {"sha": "71f1eb311ee4779c44e88d7f0117da0f5eb9612d", "filename": "gcc/testsuite/g++.dg/gomp/pr26690-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr26690-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr26690-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr26690-1.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -1,7 +1,7 @@\n // PR c++/26690\n // { dg-do compile }\n \n-struct A\t\t\t// { dg-message \"A::A\\\\(const A&\\\\)\" }\n+struct A\t\t\t// { dg-message \"A::A\" }\n {\n   A (int);\t\t\t\t// { dg-message \"candidates\" }\n };"}, {"sha": "e546b3726e363a5235c3950d72a30caa11d31626", "filename": "gcc/testsuite/g++.dg/other/error20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror20.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -1,7 +1,7 @@\n // PR c++/34275\n // { dg-do compile }\n \n-struct A\t\t\t// { dg-message \"candidate is\" }\n+struct A\t\t\t// { dg-message \"operator=\" }\n {\n   virtual A foo ();\n };"}, {"sha": "d3e3e09a37c07dd09e5c6bae88cddd01c767ed76", "filename": "gcc/testsuite/g++.dg/other/error31.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror31.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -3,7 +3,7 @@\n // { dg-options \"\" }\n // { dg-bogus \"not supported by\" \"\" { target *-*-* } 0 }\n \n-struct A {};\t\t// { dg-message \"note: candidate is\" }\n+struct A {};\t\t// { dg-message \"operator=\" }\n \n void\n foo ()"}, {"sha": "3b7e7175b17a400a1c14c1a14d1401ea89c0918d", "filename": "gcc/testsuite/g++.dg/parse/error19.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror19.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-fshow-column -fmessage-length=0   -ansi -pedantic-errors -Wno-long-long \" }\n // PR C++/17867\n \n-struct A\t\t\t// { dg-message \"8:candidate is:\" }\n+struct A\t\t\t// { dg-message \"8:operator=\" }\n {\n   A(int);\n };"}, {"sha": "c3ebd8c82f627c8b32d75837a1ebffcd42895f8b", "filename": "gcc/testsuite/g++.dg/template/qualttp5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp5.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -4,7 +4,7 @@\n \n template <class U> struct A\n {\n-\ttemplate <class T> class B {}; // { dg-message \"candidate is\" }\n+\ttemplate <class T> class B {}; // { dg-message \"operator=\" }\n };\n \n template <template <class> class TT> void f()"}, {"sha": "7b2c782b30b7c1e66fff471f2faf8a6c2b76e91d", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors5.C?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -5,7 +5,7 @@\n // Subject: bug in handling static const object of the enclosing class\n // Date: Tue, 1 Sep 92 10:38:44 EDT\n \n-class X\t      // { dg-message \"7:X::X\\\\(const X&\\\\)\" } implicit constructor\n+class X\t      // { dg-message \"7:X::X\" } implicit constructor\n {\n   private:\n     int x;"}, {"sha": "dfb651e96a1fa182d92f0d16dd785062c37db1b9", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -1,5 +1,9 @@\n 2010-06-29  Jason Merrill  <jason@redhat.com>\n \n+\tEnable implicitly declared move constructor/operator= (N3053).\n+\t* include/bits/unordered_map.h: Explicitly default copy constructors.\n+\t* include/bits/unordered_set.h: Likewise.\n+\n \t* 19_diagnostics/error_category/cons/copy_neg.cc: Adjust expected\n \terrors, use dg-prune-output.\n \t* 20_util/function/cmp/cmp_neg.cc: Likewise."}, {"sha": "80b970c8cf5e994eb0e4ec4859bca6c9ce0f1f18", "filename": "libstdc++-v3/include/bits/unordered_map.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_map.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_map.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_map.h?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -82,6 +82,8 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t\t__eql, std::_Select1st<std::pair<const _Key, _Tp> >(), __a)\n \t{ }\n \n+      __unordered_map(const __unordered_map& __x) = default;\n+\n       __unordered_map(__unordered_map&& __x)\n       : _Base(std::forward<_Base>(__x)) { }\n     };\n@@ -137,6 +139,8 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t\t__eql, std::_Select1st<std::pair<const _Key, _Tp> >(), __a)\n         { }\n \n+      __unordered_multimap(const __unordered_multimap& __x) = default;\n+\n       __unordered_multimap(__unordered_multimap&& __x)\n       : _Base(std::forward<_Base>(__x)) { }\n     };\n@@ -246,6 +250,8 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t: _Base(__f, __l, __n, __hf, __eql, __a)\n         { }\n \n+      unordered_map(const unordered_map& __x) = default;\n+\n       unordered_map(unordered_map&& __x)\n       : _Base(std::forward<_Base>(__x)) { }\n \n@@ -257,6 +263,9 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t: _Base(__l.begin(), __l.end(), __n, __hf, __eql, __a)\n       { }\n \n+      unordered_map&\n+      operator=(const unordered_map& __x) = default;\n+\n       unordered_map&\n       operator=(unordered_map&& __x)\n       {\n@@ -328,6 +337,8 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t: _Base(__f, __l, __n, __hf, __eql, __a)\n         { }\n \n+      unordered_multimap(const unordered_multimap& __x) = default;\n+\n       unordered_multimap(unordered_multimap&& __x)\n       : _Base(std::forward<_Base>(__x)) { }\n \n@@ -339,6 +350,9 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t: _Base(__l.begin(), __l.end(), __n, __hf, __eql, __a)\n       { }\n \n+      unordered_multimap&\n+      operator=(const unordered_multimap& __x) = default;\n+\n       unordered_multimap&\n       operator=(unordered_multimap&& __x)\n       {"}, {"sha": "8682f2d723725224f8ee4a006c4b80df1722bb23", "filename": "libstdc++-v3/include/bits/unordered_set.h", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d758e847c4ce6eda350809463cd87307c7e9c19c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_set.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d758e847c4ce6eda350809463cd87307c7e9c19c/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_set.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Funordered_set.h?ref=d758e847c4ce6eda350809463cd87307c7e9c19c", "patch": "@@ -82,6 +82,8 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t\tstd::_Identity<_Value>(), __a)\n         { }\n \n+      __unordered_set(const __unordered_set& __x) = default;\n+\n       __unordered_set(__unordered_set&& __x)\n       : _Base(std::forward<_Base>(__x)) { }\n     };\n@@ -135,6 +137,8 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t\tstd::_Identity<_Value>(), __a)\n         { }\n \n+      __unordered_multiset(const __unordered_multiset& __x) = default;\n+\n       __unordered_multiset(__unordered_multiset&& __x)\n       : _Base(std::forward<_Base>(__x)) { }\n     };\n@@ -239,6 +243,8 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t: _Base(__f, __l, __n, __hf, __eql, __a)\n         { }\n \n+      unordered_set(const unordered_set& __x) = default;\n+\n       unordered_set(unordered_set&& __x)\n       : _Base(std::forward<_Base>(__x)) { }\n \n@@ -250,6 +256,9 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t: _Base(__l.begin(), __l.end(), __n, __hf, __eql, __a)\n       { }\n \n+      unordered_set&\n+      operator=(const unordered_set& __x) = default;\n+\n       unordered_set&\n       operator=(unordered_set&& __x)\n       {\n@@ -318,6 +327,8 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t: _Base(__f, __l, __n, __hf, __eql, __a)\n         { }\n \n+      unordered_multiset(const unordered_multiset& __x) = default;\n+\n       unordered_multiset(unordered_multiset&& __x)\n       : _Base(std::forward<_Base>(__x)) { }\n \n@@ -329,6 +340,9 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n \t: _Base(__l.begin(), __l.end(), __n, __hf, __eql, __a)\n       { }\n \n+      unordered_multiset&\n+      operator=(const unordered_multiset& __x) = default;\n+\n       unordered_multiset&\n       operator=(unordered_multiset&& __x)\n       {"}]}