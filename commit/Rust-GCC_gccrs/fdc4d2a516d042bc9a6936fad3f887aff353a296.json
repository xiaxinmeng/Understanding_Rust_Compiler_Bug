{"sha": "fdc4d2a516d042bc9a6936fad3f887aff353a296", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRjNGQyYTUxNmQwNDJiYzlhNjkzNmZhZDNmODg3YWZmMzUzYTI5Ng==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-07-09T00:16:27Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-07-09T00:16:27Z"}, "message": "Daily bump.", "tree": {"sha": "aa0aefd8accc4837feef7e7f414de5bcc1e696f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa0aefd8accc4837feef7e7f414de5bcc1e696f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdc4d2a516d042bc9a6936fad3f887aff353a296", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdc4d2a516d042bc9a6936fad3f887aff353a296", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdc4d2a516d042bc9a6936fad3f887aff353a296", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdc4d2a516d042bc9a6936fad3f887aff353a296/comments", "author": null, "committer": null, "parents": [{"sha": "79d3378c7d73814442eb468c562ab8aa572f9c43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d3378c7d73814442eb468c562ab8aa572f9c43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79d3378c7d73814442eb468c562ab8aa572f9c43"}], "stats": {"total": 345, "additions": 344, "deletions": 1}, "files": [{"sha": "48bb23c7a8f6f4f5df2304c5ec4552f0f602c26e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc4d2a516d042bc9a6936fad3f887aff353a296/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc4d2a516d042bc9a6936fad3f887aff353a296/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fdc4d2a516d042bc9a6936fad3f887aff353a296", "patch": "@@ -1,3 +1,73 @@\n+2021-07-08  Jeff Law  <jeffreyalaw@gmail.com>\n+\n+\t* config/h8300/shiftrotate.md (variable shifts): Expose condition\n+\tcode handling for the test before the loop.\n+\n+2021-07-08  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/101066\n+\t* ipa-sra.c (class isra_call_summary): New member\n+\tm_before_any_store, initialize it in the constructor.\n+\t(isra_call_summary::dump): Dump the new field.\n+\t(ipa_sra_call_summaries::duplicate): Copy it.\n+\t(process_scan_results): Set it.\n+\t(isra_write_edge_summary): Stream it.\n+\t(isra_read_edge_summary): Likewise.\n+\t(param_splitting_across_edge): Only override\n+\tsafe_to_import_accesses if m_before_any_store is set.\n+\n+2021-07-08  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR bootstrap/101374\n+\t* gimple-array-bounds.cc (array_bounds_checker::check_mem_ref):\n+\tUse Object Size Type 0 instead of 1.\n+\n+2021-07-08  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vect-loop.c (vectorizable_reduction): Remove always-true\n+\tif condition.\n+\n+2021-07-08  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* match.pd: Simplify an extend-operate-truncate sequence involving\n+\ta POLY_INT_CST.\n+\n+2021-07-08  Roger Sayle  <roger@nextmovesoftware.com>\n+\t    Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/40210\n+\t* match.pd (bswap optimizations): Simplify (bswap(x)>>C1)&C2 as\n+\t(x>>C3)&C2 when possible.  Simplify bswap(x)>>C1 as ((T)x)>>C2\n+\twhen possible.  Simplify bswap(x)&C1 as (x>>C2)&C1 when 0<=C1<=255.\n+\n+2021-07-08  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/100637\n+\t* config/i386/i386-expand.c (ix86_expand_sse_unpack):\n+\tHandle V4QI mode.\n+\t* config/i386/mmx.md (V_32): New mode iterator.\n+\t(mov<V_32:mode>): Use V_32 mode iterator.\n+\t(*mov<V_32:mode>_internal): Ditto.\n+\t(*push<V_32:mode>2_rex64): Ditto.\n+\t(*push<V_32:mode>2): Ditto.\n+\t(movmisalign<V_32:mode>): Ditto.\n+\t(mmx_<any_shiftrt:insn>v1si3): New insn pattern.\n+\t(sse4_1_<any_extend:code>v2qiv2hi2): Ditto.\n+\t(vec_unpacks_lo_v4qi): New expander.\n+\t(vec_unpacks_hi_v4qi): Ditto.\n+\t(vec_unpacku_lo_v4qi): Ditto.\n+\t(vec_unpacku_hi_v4qi): Ditto.\n+\t* config/i386/i386.h (VALID_SSE2_REG_MODE): Add V1SImode.\n+\t(VALID_INT_MODE_P): Ditto.\n+\n+2021-07-08  Michael Meissner  <meissner@linux.ibm.com>\n+\n+\tPR target/100809\n+\t* config/rs6000/rs6000.md (udivti3): New insn.\n+\t(divti3): New insn.\n+\t(umodti3): New insn.\n+\t(modti3): New insn.\n+\n 2021-07-07  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/100137"}, {"sha": "23a1b2582b820766fc34858a44c7504357f9cc7d", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc4d2a516d042bc9a6936fad3f887aff353a296/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc4d2a516d042bc9a6936fad3f887aff353a296/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=fdc4d2a516d042bc9a6936fad3f887aff353a296", "patch": "@@ -1 +1 @@\n-20210708\n+20210709"}, {"sha": "e513e5b01c18a9004fad283a85aac9c0535868ba", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 201, "deletions": 0, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc4d2a516d042bc9a6936fad3f887aff353a296/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc4d2a516d042bc9a6936fad3f887aff353a296/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fdc4d2a516d042bc9a6936fad3f887aff353a296", "patch": "@@ -1,3 +1,204 @@\n+2021-07-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Assignment): Clear Current_Assignment at\n+\texit.\n+\t(Analyze_Target_Name): Prevent AST climbing from going too far.\n+\n+2021-07-08  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch5.adb (Analyze_Target_Name): Properly reject a\n+\tTarget_Name when it appears outside of an assignment statement,\n+\tor within the left-hand side of one.\n+\n+2021-07-08  Bob Duff  <duff@adacore.com>\n+\n+\t* einfo-utils.ads, einfo-utils.adb (Unknown_Alignment,\n+\tUnknown_Component_Bit_Offset, Unknown_Component_Size,\n+\tUnknown_Esize, Unknown_Normalized_First_Bit,\n+\tUnknown_Normalized_Position, Unknown_Normalized_Position_Max,\n+\tUnknown_RM_Size): Remove these functions.\n+\t* exp_pakd.adb, exp_util.adb, fe.h, freeze.adb, layout.adb,\n+\trepinfo.adb, sem_ch13.adb, sem_ch3.adb, sem_util.adb: Remove\n+\tcalls to these functions; do \"not Known_...\" instead.\n+\t* gcc-interface/decl.c, gcc-interface/trans.c\n+\t(Unknown_Alignment, Unknown_Component_Size, Unknown_Esize,\n+\tUnknown_RM_Size): Remove calls to these functions; do\n+\t\"!Known_...\" instead.\n+\n+2021-07-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_dbug.adb (Get_Encoded_Name): Do not encode names of discrete\n+\ttypes with custom bounds, except with -fgnat-encodings=all.\n+\t* exp_pakd.adb (Create_Packed_Array_Impl_Type): Adjust comment.\n+\n+2021-07-08  Bob Duff  <duff@adacore.com>\n+\n+\t* comperr.adb (Compiler_Abort): Call Sinput.Unlock, because if\n+\tthis is called late, then Source_Dump would crash otherwise.\n+\t* debug.adb: Correct documentation of the -gnatd.9 switch.\n+\t* exp_ch4.adb (Expand_Allocator_Expression): Add a comment.\n+\t* exp_ch6.adb: Minor comment fixes.  Add assertion.\n+\t* exp_ch6.ads (Is_Build_In_Place_Result_Type): Correct comment.\n+\t* exp_ch7.adb, checks.ads: Minor comment fixes.\n+\n+2021-07-08  Doug Rupp  <rupp@adacore.com>\n+\n+\t* sigtramp-vxworks-target.inc: Rename to...\n+\t* sigtramp-vxworks-target.h: ... this.\n+\t* sigtramp-vxworks.c, Makefile.rtl: Likewise.\n+\n+2021-07-08  Ghjuvan Lacambre  <lacambre@adacore.com>\n+\n+\t* lib-writ.ads: Mention SCOs dependency as reason for duplicates.\n+\t* lib.ads (Units): Update documentation to mention duplicated\n+\tunits.\n+\n+2021-07-08  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* style.adb (Missing_Overriding): Do not emit message when\n+\tparent of subprogram is a full type declaration.\n+\n+2021-07-08  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* par-ch5.adb (P_Iterator_Specification): Add support for access\n+\tdefinition in loop parameter.\n+\t* sem_ch5.adb (Check_Subtype_Indication): Renamed...\n+\t(Check_Subtype_Definition): ... into this and check for conformance\n+\ton access definitions, and improve error messages.\n+\t(Analyze_Iterator_Specification): Add support for access definition\n+\tin loop parameter.\n+\n+2021-07-08  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_util.ads, sem_util.adb\n+\t(Apply_Compile_Time_Constraint_Error): New parameter\n+\tEmit_Message.\n+\t* sem_ch4.adb (Analyze_Selected_Component): Disable warning\n+\twithin an instance.\n+\n+2021-07-08  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* exp_imgv.adb: Add with and use clause for Restrict and Rident.\n+\t(Build_Enumeration_Image_Tables): Do not generate the hash function\n+\tif the No_Implicit_Loops restriction is active.\n+\n+2021-07-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_ch12.adb, sem_ch6.adb, sem_ch9.adb, sprint.adb: Simplify\n+\tchecks for non-empty lists.\n+\n+2021-07-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* par-ch10.adb (Unit_Display): Remove redundant condition; fix\n+\twhitespace.\n+\n+2021-07-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* lib-load.adb (Load): Replace early return with goto to properly\n+\trestore context on failure.\n+\n+2021-07-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* lib-writ.adb (Ensure_System_Dependency): Simplify condition.\n+\n+2021-07-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* lib-load.adb (Load_Unit): Fix style in comment.\n+\t* par-load.adb (Load): Likewise.\n+\t* scng.adb (Initialize_Scanner): Fix whitespace.\n+\n+2021-07-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* par-load.adb (Load): Don't remove unit, but flag it as\n+\terroneous and return.\n+\n+2021-07-08  Ghjuvan Lacambre  <lacambre@adacore.com>\n+\n+\t* exp_prag.adb (Expand_Pragma_Inspection_Point): Fix error\n+\tmessage.\n+\n+2021-07-08  Yannick Moy  <moy@adacore.com>\n+\n+\t* layout.adb (Layout_Type): Do not call Number_Dimensions if the\n+\ttype does not have First_Index set.\n+\n+2021-07-08  Ghjuvan Lacambre  <lacambre@adacore.com>\n+\n+\t* exp_prag.adb (Expand_Pragma_Inspection_Point): After expansion\n+\tof the Inspection_Point pragma, check if referenced entities\n+\tthat have a freeze node are already frozen. If they aren't, emit\n+\ta warning and turn the pragma into a no-op.\n+\n+2021-07-08  Yannick Moy  <moy@adacore.com>\n+\n+\t* layout.adb (Layout_Type): Add guard before calling Expr_Value.\n+\n+2021-07-08  Yannick Moy  <moy@adacore.com>\n+\n+\t* layout.adb (Layout_Type): Special case when RM_Size and Esize\n+\tcan be computed for packed arrays.\n+\n+2021-07-08  Steve Baird  <baird@adacore.com>\n+\n+\t* rtsfind.ads, rtsfind.adb: Add support for finding the packages\n+\tSystem.Atomic_Operations and\n+\tSystem.Atomic_Operations.Test_And_Set and the declarations\n+\twithin that latter package of the type Test_And_Set_Flag and the\n+\tfunction Atomic_Test_And_Set.\n+\t* exp_ch11.adb (Expand_N_Exception_Declaration): If an exception\n+\tis declared other than at library level, then we need to call\n+\tRegister_Exception the first time (and only the first time) the\n+\tdeclaration is elaborated.  In order to decide whether to\n+\tperform this call for a given elaboration of the declaration, we\n+\tused to unconditionally use a (library-level) Boolean variable.\n+\tNow we instead use a variable of type\n+\tSystem.Atomic_Operations.Test_And_Set.Test_And_Set_Flag unless\n+\teither that type is unavailable or a No_Tasking restriction is\n+\tin effect (in which case we use a Boolean variable as before).\n+\n+2021-07-08  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gcc-interface/system.ads: Add No_Tasking restriction.\n+\n+2021-07-08  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* libgnat/a-cohama.ads: Introduce an equality operator over\n+\tcursors.\n+\t* libgnat/a-cohase.ads: Ditto.\n+\t* libgnat/a-cohama.adb: Add body for \"=\" over cursors.\n+\t(Insert): Do not set the Position component of the cursor that\n+\tdenotes the inserted element.\n+\t* libgnat/a-cohase.adb: Ditto.\n+\n+2021-07-08  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* libgnat/a-cbdlli.adb, libgnat/a-cbhama.adb,\n+\tlibgnat/a-cbhase.adb, libgnat/a-cbmutr.adb,\n+\tlibgnat/a-cborma.adb, libgnat/a-cborse.adb,\n+\tlibgnat/a-cobove.adb, libgnat/a-textio.adb,\n+\tlibgnat/a-witeio.adb, libgnat/a-ztexio.adb: Make code compatible\n+\twith No_Dynamic_Accessibility_Checks restriction.\n+\n+2021-07-08  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* debug.adb, sem_util.adb: Revert meaning of -gnatd_b.\n+\t* sem_res.adb: Minor reformatting.\n+\n+2021-07-08  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* make.adb, osint.adb: Make code compatible with\n+\tNo_Dynamic_Accessibility_Checks restriction.\n+\n+2021-07-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* lib-writ.adb (Ensure_System_Dependency): Replace search in\n+\tLib.Units with a search in Lib.Unit_Names.\n+\n+2021-07-08  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sinput-l.adb (Load_File): Simplify foreword manipulation with\n+\tconcatenation; similar for filename with preprocessed output.\n+\n 2021-07-07  Dmitriy Anisimkov  <anisimko@adacore.com>\n \n \t* s-oscons-tmplt.c (MSG_WAITALL): Remove wrong #ifdef"}, {"sha": "4386e5df1aba469d1aaa844051e3f8fc47889ed4", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc4d2a516d042bc9a6936fad3f887aff353a296/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc4d2a516d042bc9a6936fad3f887aff353a296/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fdc4d2a516d042bc9a6936fad3f887aff353a296", "patch": "@@ -1,3 +1,24 @@\n+2021-07-08  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR bootstrap/101372\n+\t* module.cc (identifier): Suppress warning.\n+\t(module_state::read_macro_maps): Remove warning suppression.\n+\t(module_state::install_macros): Ditto.\n+\n+2021-07-08  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/101087\n+\t* cp-tree.h (unevaluated_p): New.\n+\t* except.c (check_noexcept_r): Use it.  Don't walk into\n+\tunevaluated operands.\n+\n+2021-07-08  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR bootstrap/101374\n+\t* module.cc (module_state::read_macro_maps): Temporarily disable\n+\t-Warray-bounds.\n+\t(module_state::install_macros): Same.\n+\n 2021-07-06  Martin Sebor  <msebor@redhat.com>\n \n \t* error.c (cp_printer):  Remove support for %G and %K."}, {"sha": "cdd33760d542bf4b4e6fa9106f61b242f8397e88", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdc4d2a516d042bc9a6936fad3f887aff353a296/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdc4d2a516d042bc9a6936fad3f887aff353a296/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fdc4d2a516d042bc9a6936fad3f887aff353a296", "patch": "@@ -1,3 +1,54 @@\n+2021-07-08  Martin Sebor  <msebor@redhat.com>\n+\n+\t* gcc.dg/Wstringop-overflow-43.c: Remove an xfail.\n+\n+2021-07-08  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR testsuite/100451\n+\t* g++.dg/warn/Warray-bounds-20.C: Adjust expected output for LP32.\n+\n+2021-07-08  Martin Sebor  <msebor@redhat.com>\n+\n+\t* g++.dg/warn/Warray-bounds-11.C: Avoid including <new>.\n+\t* g++.dg/warn/Warray-bounds-13.C: Same.\n+\n+2021-07-08  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/101087\n+\t* g++.dg/cpp0x/noexcept70.C: New test.\n+\n+2021-07-08  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/101066\n+\t* gcc.dg/ipa/pr101066.c: New test.\n+\n+2021-07-08  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR bootstrap/101374\n+\t* c-c++-common/Warray-bounds-3.c: Xfail assertion.\n+\t* c-c++-common/Warray-bounds-4.c: Same.\n+\n+2021-07-08  Christophe Lyon  <christophe.lyon@foss.st.om>\n+\n+\t* gcc.dg/debug/pr57351.c: Require arm_arch_v7a_ok\n+\teffective-target.\n+\n+2021-07-08  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* gcc.target/aarch64/sve/acle/general/cntb_1.c: New test.\n+\n+2021-07-08  Roger Sayle  <roger@nextmovesoftware.com>\n+\t    Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/40210\n+\t* gcc.dg/builtin-bswap-13.c: New test.\n+\t* gcc.dg/builtin-bswap-14.c: New test.\n+\n+2021-07-08  Michael Meissner  <meissner@linux.ibm.com>\n+\n+\tPR target/100809\n+\t* gcc.target/powerpc/p10-vdivq-vmodq.c: New test.\n+\n 2021-07-07  David Malcolm  <dmalcolm@redhat.com>\n \n \t* gcc.dg/analyzer/pattern-test-2.c: Update expected results."}]}