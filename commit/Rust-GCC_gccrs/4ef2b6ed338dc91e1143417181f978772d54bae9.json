{"sha": "4ef2b6ed338dc91e1143417181f978772d54bae9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVmMmI2ZWQzMzhkYzkxZTExNDM0MTcxODFmOTc4NzcyZDU0YmFlOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard@codesourcery.com", "date": "2007-05-16T06:43:36Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-05-16T06:43:36Z"}, "message": "revert: configure.ac (gcc_gxx_include_dir): Use $(libsubdir_to_prefix).\n\ngcc/\n\tRevert:\n\n\t2007-05-12  Richard Sandiford  <richard@codesourcery.com>\n\n\t* configure.ac (gcc_gxx_include_dir): Use $(libsubdir_to_prefix).\n\t(gcc_tooldir): Likewise.\n\t* configure: Regenerate.\n\t* Makefile.in (libsubdir_to_prefix): New variable, based on the\n\told configure.ac gcc_tooldir setting.\n\t(prefix_to_exec_prefix): New variable.\n\t(DRIVER_DEFINES): Use $(libsubdir_to_prefix)$(prefix_to_exec_prefix)\n\trather than $(unlibsubdir)/../ to derive TOOLDIR_BASE_PREFIX.\n\nFrom-SVN: r124760", "tree": {"sha": "5f4fe514ca446c48467629008ad6d9d9ab87fc10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f4fe514ca446c48467629008ad6d9d9ab87fc10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ef2b6ed338dc91e1143417181f978772d54bae9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ef2b6ed338dc91e1143417181f978772d54bae9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ef2b6ed338dc91e1143417181f978772d54bae9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ef2b6ed338dc91e1143417181f978772d54bae9/comments", "author": null, "committer": null, "parents": [{"sha": "7433458d871f6bfe2169b9d7d04fec64bb142924", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7433458d871f6bfe2169b9d7d04fec64bb142924", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7433458d871f6bfe2169b9d7d04fec64bb142924"}], "stats": {"total": 125, "additions": 90, "deletions": 35}, "files": [{"sha": "9b670759d66ea1b7af1fcb5adba4f9642a07daa4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef2b6ed338dc91e1143417181f978772d54bae9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef2b6ed338dc91e1143417181f978772d54bae9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ef2b6ed338dc91e1143417181f978772d54bae9", "patch": "@@ -1,3 +1,18 @@\n+2007-05-16  Richard Sandiford  <richard@codesourcery.com>\n+\n+\tRevert:\n+\n+\t2007-05-12  Richard Sandiford  <richard@codesourcery.com>\n+\n+\t* configure.ac (gcc_gxx_include_dir): Use $(libsubdir_to_prefix).\n+\t(gcc_tooldir): Likewise.\n+\t* configure: Regenerate.\n+\t* Makefile.in (libsubdir_to_prefix): New variable, based on the\n+\told configure.ac gcc_tooldir setting.\n+\t(prefix_to_exec_prefix): New variable.\n+\t(DRIVER_DEFINES): Use $(libsubdir_to_prefix)$(prefix_to_exec_prefix)\n+\trather than $(unlibsubdir)/../ to derive TOOLDIR_BASE_PREFIX.\n+\n 2007-05-14  Janis Johnson  <janis187@us.ibm.com>\n \n \t* c-typeck.c (build_binary_op): Return early for error."}, {"sha": "8330a888030cf86799d01356d9dc89549603bc2b", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 31, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef2b6ed338dc91e1143417181f978772d54bae9/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef2b6ed338dc91e1143417181f978772d54bae9/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=4ef2b6ed338dc91e1143417181f978772d54bae9", "patch": "@@ -461,36 +461,6 @@ libexecdir = @libexecdir@\n libsubdir = $(libdir)/gcc/$(target_noncanonical)/$(version)\n # Directory in which the compiler finds executables\n libexecsubdir = $(libexecdir)/gcc/$(target_noncanonical)/$(version)\n-# $(prefix), expressed as a path relative to $(libsubdir).\n-#\n-# An explanation of the sed strings:\n-#  -e 's|^$(prefix)||'   matches and eliminates 'prefix' from 'exec_prefix'\n-#  -e 's|/$$||'          match a trailing forward slash and eliminates it\n-#  -e 's|^[^/]|/|'       forces the string to start with a forward slash (*)\n-#  -e 's|/[^/]*|../|g'   replaces each occurrence of /<directory> with ../\n-#\n-# (*) Note this pattern overwrites the first character of the string\n-# with a forward slash if one is not already present.  This is not a\n-# problem because the exact names of the sub-directories concerned is\n-# unimportant, just the number of them matters.\n-#\n-# The practical upshot of these patterns is like this:\n-#\n-#  prefix     exec_prefix        result\n-#  ------     -----------        ------\n-#   /foo        /foo/bar          ../\n-#   /foo/       /foo/bar          ../\n-#   /foo        /foo/bar/         ../\n-#   /foo/       /foo/bar/         ../\n-#   /foo        /foo/bar/ugg      ../../\n-libsubdir_to_prefix = \\\n-  $(unlibsubdir)/`echo \"$(libdir)\" | \\\n-    sed -e 's|^$(prefix)||' -e 's|/$$||' -e 's|^[^/]|/|' \\\n-        -e 's|/[^/]*|../|g'`\n-# $(exec_prefix), expressed as a path relative to $(prefix).\n-prefix_to_exec_prefix = \\\n-  `echo \"$(exec_prefix)\" | \\\n-   sed -e 's|^$(prefix)||' -e 's|^/||' -e '/./s|$$|/|'`\n # Used to produce a relative $(gcc_tooldir) in gcc.o\n unlibsubdir = ../../..\n # Directory in which to find other cross-compilation tools and headers.\n@@ -1808,7 +1778,7 @@ DRIVER_DEFINES = \\\n   -DDEFAULT_TARGET_VERSION=\\\"$(version)\\\" \\\n   -DDEFAULT_TARGET_MACHINE=\\\"$(target_noncanonical)\\\" \\\n   -DSTANDARD_BINDIR_PREFIX=\\\"$(bindir)/\\\" \\\n-  -DTOOLDIR_BASE_PREFIX=\\\"$(libsubdir_to_prefix)$(prefix_to_exec_prefix)\\\" \\\n+  -DTOOLDIR_BASE_PREFIX=\\\"$(unlibsubdir)/../\\\" \\\n   @TARGET_SYSTEM_ROOT_DEFINE@ \\\n   $(VALGRIND_DRIVER_DEFINES) \\\n   `test \"X$${SHLIB_LINK}\" = \"X\" || test \"@enable_shared@\" != \"yes\" || echo \"-DENABLE_SHARED_LIBGCC\"` \\"}, {"sha": "b3aa2b09ce72a382452b347584bd0c8d861dadeb", "filename": "gcc/configure", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef2b6ed338dc91e1143417181f978772d54bae9/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef2b6ed338dc91e1143417181f978772d54bae9/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=4ef2b6ed338dc91e1143417181f978772d54bae9", "patch": "@@ -1688,7 +1688,7 @@ if test x${gcc_gxx_include_dir} = x; then\n     if test x$host != x$target; then\n        libstdcxx_incdir=\"$target_alias/$libstdcxx_incdir\"\n     fi\n-    gcc_gxx_include_dir=\"\\$(libsubdir)/\\$(libsubdir_to_prefix)$libstdcxx_incdir\"\n+    gcc_gxx_include_dir=\"\\$(libsubdir)/\\$(unlibsubdir)/..\\`echo \\$(exec_prefix) | sed -e 's|^\\$(prefix)||' -e 's|/[^/]*|/..|g'\\`/$libstdcxx_incdir\"\n   fi\n fi\n \n@@ -16835,7 +16835,40 @@ if test \"x$subdirs\" != x; then\n fi\n echo \"source ${srcdir}/gdbinit.in\" >> .gdbinit\n \n-gcc_tooldir='$(libsubdir)/$(libsubdir_to_prefix)$(target_noncanonical)'\n+# If $(exec_prefix) exists and is not the same as $(prefix), then compute an\n+# absolute path for gcc_tooldir based on inserting the number of up-directory\n+# movements required to get from $(exec_prefix) to $(prefix) into the basic\n+# $(libsubdir)/@(unlibsubdir) based path.\n+# Don't set gcc_tooldir to tooldir since that's only passed in by the toplevel\n+# make and thus we'd get different behavior depending on where we built the\n+# sources.\n+if test x$exec_prefix = xNONE -o x$exec_prefix = x$prefix; then\n+    gcc_tooldir='$(libsubdir)/$(unlibsubdir)/../$(target_noncanonical)'\n+else\n+# An explanation of the sed strings:\n+#  -e 's|^\\$(prefix)||'   matches and eliminates 'prefix' from 'exec_prefix'\n+#  -e 's|/$||'            match a trailing forward slash and eliminates it\n+#  -e 's|^[^/]|/|'        forces the string to start with a forward slash (*)\n+#  -e 's|/[^/]*|../|g'    replaces each occurrence of /<directory> with ../\n+#\n+# (*) Note this pattern overwrites the first character of the string\n+# with a forward slash if one is not already present.  This is not a\n+# problem because the exact names of the sub-directories concerned is\n+# unimportant, just the number of them matters.\n+#\n+# The practical upshot of these patterns is like this:\n+#\n+#  prefix     exec_prefix        result\n+#  ------     -----------        ------\n+#   /foo        /foo/bar          ../\n+#   /foo/       /foo/bar          ../\n+#   /foo        /foo/bar/         ../\n+#   /foo/       /foo/bar/         ../\n+#   /foo        /foo/bar/ugg      ../../\n+#\n+    dollar='$$'\n+    gcc_tooldir=\"\\$(libsubdir)/\\$(unlibsubdir)/\\`echo \\$(exec_prefix) | sed -e 's|^\\$(prefix)||' -e 's|/\\$(dollar)||' -e 's|^[^/]|/|' -e 's|/[^/]*|../|g'\\`\\$(target_noncanonical)\"\n+fi\n \n \n "}, {"sha": "708ce1681a3fd239af3fd328a8d3cbe1ad87fc28", "filename": "gcc/configure.ac", "status": "modified", "additions": 39, "deletions": 2, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ef2b6ed338dc91e1143417181f978772d54bae9/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ef2b6ed338dc91e1143417181f978772d54bae9/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=4ef2b6ed338dc91e1143417181f978772d54bae9", "patch": "@@ -141,7 +141,9 @@ if test x${gcc_gxx_include_dir} = x; then\n     if test x$host != x$target; then\n        libstdcxx_incdir=\"$target_alias/$libstdcxx_incdir\"\n     fi\n-    gcc_gxx_include_dir=\"\\$(libsubdir)/\\$(libsubdir_to_prefix)$libstdcxx_incdir\"\n+changequote(<<, >>)dnl\n+    gcc_gxx_include_dir=\"\\$(libsubdir)/\\$(unlibsubdir)/..\\`echo \\$(exec_prefix) | sed -e 's|^\\$(prefix)||' -e 's|/[^/]*|/..|g'\\`/$libstdcxx_incdir\"\n+changequote([, ])dnl\n   fi\n fi\n \n@@ -3679,7 +3681,42 @@ if test \"x$subdirs\" != x; then\n fi\n echo \"source ${srcdir}/gdbinit.in\" >> .gdbinit\n \n-gcc_tooldir='$(libsubdir)/$(libsubdir_to_prefix)$(target_noncanonical)'\n+# If $(exec_prefix) exists and is not the same as $(prefix), then compute an\n+# absolute path for gcc_tooldir based on inserting the number of up-directory\n+# movements required to get from $(exec_prefix) to $(prefix) into the basic\n+# $(libsubdir)/@(unlibsubdir) based path.\n+# Don't set gcc_tooldir to tooldir since that's only passed in by the toplevel\n+# make and thus we'd get different behavior depending on where we built the\n+# sources.\n+if test x$exec_prefix = xNONE -o x$exec_prefix = x$prefix; then\n+    gcc_tooldir='$(libsubdir)/$(unlibsubdir)/../$(target_noncanonical)'\n+else\n+changequote(<<, >>)dnl\n+# An explanation of the sed strings:\n+#  -e 's|^\\$(prefix)||'   matches and eliminates 'prefix' from 'exec_prefix'\n+#  -e 's|/$||'            match a trailing forward slash and eliminates it\n+#  -e 's|^[^/]|/|'        forces the string to start with a forward slash (*)\n+#  -e 's|/[^/]*|../|g'    replaces each occurrence of /<directory> with ../\n+#\n+# (*) Note this pattern overwrites the first character of the string\n+# with a forward slash if one is not already present.  This is not a\n+# problem because the exact names of the sub-directories concerned is\n+# unimportant, just the number of them matters.\n+#\n+# The practical upshot of these patterns is like this:\n+#\n+#  prefix     exec_prefix        result\n+#  ------     -----------        ------\n+#   /foo        /foo/bar          ../\n+#   /foo/       /foo/bar          ../\n+#   /foo        /foo/bar/         ../\n+#   /foo/       /foo/bar/         ../\n+#   /foo        /foo/bar/ugg      ../../\n+#\n+    dollar='$$'\n+    gcc_tooldir=\"\\$(libsubdir)/\\$(unlibsubdir)/\\`echo \\$(exec_prefix) | sed -e 's|^\\$(prefix)||' -e 's|/\\$(dollar)||' -e 's|^[^/]|/|' -e 's|/[^/]*|../|g'\\`\\$(target_noncanonical)\"\n+changequote([, ])dnl\n+fi\n AC_SUBST(gcc_tooldir)\n AC_SUBST(dollar)\n "}]}