{"sha": "f43856dba0e8a230d91cd6af164bcb2b8aa2a4d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjQzODU2ZGJhMGU4YTIzMGQ5MWNkNmFmMTY0YmNiMmI4YWEyYTRkOQ==", "commit": {"author": {"name": "Jan-Benedict Glaw", "email": "jbglaw@lug-owl.de", "date": "2014-01-19T15:52:20Z"}, "committer": {"name": "Jan-Benedict Glaw", "email": "jbglaw@gcc.gnu.org", "date": "2014-01-19T15:52:20Z"}, "message": "Since started...\n\nSince started, the VAX backend doesn't compile with config-list.mk\nbecause one of VAX's macros doesn't use its argument:\n\ng++ -c   -g -O2 -DIN_GCC  -DCROSS_DIRECTORY_STRUCTURE  -fno-exceptions -fno-rtti -fasynchronous-unwind-tables -W -Wall -Wno-narrowing -Wwrite-strings -Wcast-qual -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings -Werror -fno-common  -DHAVE_CONFIG_H -I. -I. -I../../../gcc/gcc -I../../../gcc/gcc/. -I../../../gcc/gcc/../include -I../../../gcc/gcc/../libcpp/include -I/opt/cfarm/mpc/include  -I../../../gcc/gcc/../libdecnumber -I../../../gcc/gcc/../libdecnumber/dpd -I../libdecnumber -I../../../gcc/gcc/../libbacktrace    -o loop-invariant.o -MT loop-invariant.o -MMD -MP -MF ./.deps/loop-invariant.TPo ../../../gcc/gcc/loop-invariant.c\n../../../gcc/gcc/loop-invariant.c: In function \u2018bool check_dependency(basic_block, df_ref, bitmap)\u2019:../../../gcc/gcc/loop-invariant.c:789:20: error: unused variable \u2018regno\u2019 [-Werror=unused-variable]       unsigned int regno = DF_REF_REGNO (use);\n                    ^\ncc1plus: all warnings being treated as errors\nmake[2]: *** [loop-invariant.o] Error 1\n\n\nThis should fix it:\n\n\n2014-01-15  Jan-Benedict Glaw  <jbglaw@lug-owl.de>\n\n\t* config/vax/vax.h (FUNCTION_ARG_REGNO_P): Fix unused variable warning.\n\n[BR]: http://gcc.gnu.org/ml/gcc-patches/2014-01/msg00882.html\n\nFrom-SVN: r206775", "tree": {"sha": "17f8ffa7a24bc43d4ab74618e08384426d691ac0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17f8ffa7a24bc43d4ab74618e08384426d691ac0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f43856dba0e8a230d91cd6af164bcb2b8aa2a4d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f43856dba0e8a230d91cd6af164bcb2b8aa2a4d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f43856dba0e8a230d91cd6af164bcb2b8aa2a4d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f43856dba0e8a230d91cd6af164bcb2b8aa2a4d9/comments", "author": {"login": "jbglaw", "id": 7965297, "node_id": "MDQ6VXNlcjc5NjUyOTc=", "avatar_url": "https://avatars.githubusercontent.com/u/7965297?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbglaw", "html_url": "https://github.com/jbglaw", "followers_url": "https://api.github.com/users/jbglaw/followers", "following_url": "https://api.github.com/users/jbglaw/following{/other_user}", "gists_url": "https://api.github.com/users/jbglaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbglaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbglaw/subscriptions", "organizations_url": "https://api.github.com/users/jbglaw/orgs", "repos_url": "https://api.github.com/users/jbglaw/repos", "events_url": "https://api.github.com/users/jbglaw/events{/privacy}", "received_events_url": "https://api.github.com/users/jbglaw/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "efc90043e6875c3e9ec19d16fb20c6a082bff5da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efc90043e6875c3e9ec19d16fb20c6a082bff5da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efc90043e6875c3e9ec19d16fb20c6a082bff5da"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "9be0644027333c9ffe8bb46b02e19495bb575c5a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f43856dba0e8a230d91cd6af164bcb2b8aa2a4d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f43856dba0e8a230d91cd6af164bcb2b8aa2a4d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f43856dba0e8a230d91cd6af164bcb2b8aa2a4d9", "patch": "@@ -1,3 +1,7 @@\n+2014-01-19  Jan-Benedict Glaw  <jbglaw@lug-owl.de>\n+\n+\t* config/vax/vax.h (FUNCTION_ARG_REGNO_P): Fix unused variable warning.\n+\n 2014-01-18  Uros Bizjak  <ubizjak@gmail.com>\n \t    H.J. Lu  <hongjiu.lu@intel.com>\n "}, {"sha": "6c008d87c846fc523f815d5d97c3eb6e388abeca", "filename": "gcc/config/vax/vax.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f43856dba0e8a230d91cd6af164bcb2b8aa2a4d9/gcc%2Fconfig%2Fvax%2Fvax.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f43856dba0e8a230d91cd6af164bcb2b8aa2a4d9/gcc%2Fconfig%2Fvax%2Fvax.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.h?ref=f43856dba0e8a230d91cd6af164bcb2b8aa2a4d9", "patch": "@@ -295,7 +295,7 @@ enum reg_class { NO_REGS, ALL_REGS, LIM_REG_CLASSES };\n /* 1 if N is a possible register number for function argument passing.\n    On the VAX, no registers are used in this way.  */\n \n-#define FUNCTION_ARG_REGNO_P(N) 0\n+#define FUNCTION_ARG_REGNO_P(N) ((void) (N), 0)\n \f\n /* Define a data type for recording info about an argument list\n    during the scan of that argument list.  This data type should"}]}