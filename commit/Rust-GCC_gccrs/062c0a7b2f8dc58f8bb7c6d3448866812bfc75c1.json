{"sha": "062c0a7b2f8dc58f8bb7c6d3448866812bfc75c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYyYzBhN2IyZjhkYzU4ZjhiYjdjNmQzNDQ4ODY2ODEyYmZjNzVjMQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "krebbel@linux.ibm.com", "date": "2018-04-24T12:18:26Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2018-04-24T12:18:26Z"}, "message": "re PR tree-optimization/85478 (ICE with single element vector)\n\nFix PR85478\n\ngcc/ChangeLog:\n\n2018-04-24  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\tPR tree-optimization/85478\n\t* tree-vect-loop.c (vect_analyze_loop_2): Do not call\n\tvect_grouped_store_supported for single element vectors.\n\ngcc/testsuite/ChangeLog:\n\n2018-04-24  Andreas Krebbel  <krebbel@linux.ibm.com>\n\n\tPR tree-optimization/85478\n\t* g++.dg/pr85478.C: New test.\n\nFrom-SVN: r259593", "tree": {"sha": "b116ed1346fa4438cf90a3e37d1bd17de2f8163d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b116ed1346fa4438cf90a3e37d1bd17de2f8163d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/062c0a7b2f8dc58f8bb7c6d3448866812bfc75c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/062c0a7b2f8dc58f8bb7c6d3448866812bfc75c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/062c0a7b2f8dc58f8bb7c6d3448866812bfc75c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/062c0a7b2f8dc58f8bb7c6d3448866812bfc75c1/comments", "author": {"login": "Andreas-Krebbel", "id": 38103320, "node_id": "MDQ6VXNlcjM4MTAzMzIw", "avatar_url": "https://avatars.githubusercontent.com/u/38103320?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Andreas-Krebbel", "html_url": "https://github.com/Andreas-Krebbel", "followers_url": "https://api.github.com/users/Andreas-Krebbel/followers", "following_url": "https://api.github.com/users/Andreas-Krebbel/following{/other_user}", "gists_url": "https://api.github.com/users/Andreas-Krebbel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Andreas-Krebbel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Andreas-Krebbel/subscriptions", "organizations_url": "https://api.github.com/users/Andreas-Krebbel/orgs", "repos_url": "https://api.github.com/users/Andreas-Krebbel/repos", "events_url": "https://api.github.com/users/Andreas-Krebbel/events{/privacy}", "received_events_url": "https://api.github.com/users/Andreas-Krebbel/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4149dd37d914325fd275675b29d39049612b0a76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4149dd37d914325fd275675b29d39049612b0a76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4149dd37d914325fd275675b29d39049612b0a76"}], "stats": {"total": 62, "additions": 60, "deletions": 2}, "files": [{"sha": "dcf0d0b9a4352eb18cbb4f208dac15399a301f72", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062c0a7b2f8dc58f8bb7c6d3448866812bfc75c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062c0a7b2f8dc58f8bb7c6d3448866812bfc75c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=062c0a7b2f8dc58f8bb7c6d3448866812bfc75c1", "patch": "@@ -1,3 +1,9 @@\n+2018-04-24  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\tPR tree-optimization/85478\n+\t* tree-vect-loop.c (vect_analyze_loop_2): Do not call\n+\tvect_grouped_store_supported for single element vectors.\n+\n 2018-04-24  Richard Biener  <rguenther@suse.de>\n \n \tPR target/85491"}, {"sha": "8c92593cac91e5fb57fa7229f290ae82b8dcd099", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062c0a7b2f8dc58f8bb7c6d3448866812bfc75c1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062c0a7b2f8dc58f8bb7c6d3448866812bfc75c1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=062c0a7b2f8dc58f8bb7c6d3448866812bfc75c1", "patch": "@@ -1,3 +1,8 @@\n+2018-04-24  Andreas Krebbel  <krebbel@linux.ibm.com>\n+\n+\tPR tree-optimization/85478\n+\t* g++.dg/pr85478.C: New test.\n+\n 2018-04-23  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* g++.dg/torture/pr85496.C: New test."}, {"sha": "4eb4f2487c9aeaaf98239493831adc0426b973e4", "filename": "gcc/testsuite/g++.dg/pr85478.C", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062c0a7b2f8dc58f8bb7c6d3448866812bfc75c1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr85478.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062c0a7b2f8dc58f8bb7c6d3448866812bfc75c1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr85478.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr85478.C?ref=062c0a7b2f8dc58f8bb7c6d3448866812bfc75c1", "patch": "@@ -0,0 +1,46 @@\n+/* { dg-do compile { target { s390*-*-* } } } */\n+/* { dg-options \"-O3 -march=arch12 -std=c++11 -Wno-return-type\" } */\n+\n+struct a {\n+  enum { b };\n+};\n+struct c {\n+  template <typename d, typename e> static void f(d g, e h) {\n+    d i;\n+    for (; i != g; ++h, ++i)\n+      *h = *i;\n+  }\n+};\n+template <int, typename d, typename e> void j(d g, e h) { c::f(g, h); }\n+template <int k, typename d, typename e> void l(d g, e h) { j<k>(g, h); }\n+template <typename d, typename e> void aa(d g, e h) { l<a::b>(g, h); }\n+template <typename> class ab;\n+template <> struct ab<float> {\n+  _Complex m() { return n; }\n+  _Complex n;\n+};\n+template <> struct ab<long double> {\n+  ab(ab<float> g) : n(g.m()) {}\n+  _Complex long double n;\n+};\n+template <int ac, typename o> class p {\n+public:\n+  template <typename q> p &operator=(const p<ac, q> &);\n+  o *ad;\n+};\n+template <typename o> class r : public p<2, o> {};\n+template <int ac, typename o>\n+template <typename q>\n+p<ac, o> &p<ac, o>::operator=(const p<ac, q> &g) {\n+  aa(&g.ad[0], &ad[0]);\n+}\n+template <typename ae> class s : public r<ae> {\n+  template <typename t> s &operator=(const s<t> &);\n+};\n+template <typename ae>\n+template <typename t>\n+s<ae> &s<ae>::operator=(const s<t> &g) {\n+  p<2, ae>::operator=(g);\n+}\n+template s<ab<long double>> &s<ab<long double>>::\n+operator=(const s<ab<float>> &);"}, {"sha": "4ce721ed4786e61fd9d3239707e285a72aecc0c6", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/062c0a7b2f8dc58f8bb7c6d3448866812bfc75c1/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/062c0a7b2f8dc58f8bb7c6d3448866812bfc75c1/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=062c0a7b2f8dc58f8bb7c6d3448866812bfc75c1", "patch": "@@ -2492,8 +2492,9 @@ vect_analyze_loop_2 (loop_vec_info loop_vinfo, bool &fatal)\n       unsigned int size = STMT_VINFO_GROUP_SIZE (vinfo);\n       tree vectype = STMT_VINFO_VECTYPE (vinfo);\n       if (! vect_store_lanes_supported (vectype, size, false)\n-\t  && ! vect_grouped_store_supported (vectype, size))\n-\treturn false;\n+\t && ! known_eq (TYPE_VECTOR_SUBPARTS (vectype), 1U)\n+\t && ! vect_grouped_store_supported (vectype, size))\n+       return false;\n       FOR_EACH_VEC_ELT (SLP_INSTANCE_LOADS (instance), j, node)\n \t{\n \t  vinfo = vinfo_for_stmt (SLP_TREE_SCALAR_STMTS (node)[0]);"}]}