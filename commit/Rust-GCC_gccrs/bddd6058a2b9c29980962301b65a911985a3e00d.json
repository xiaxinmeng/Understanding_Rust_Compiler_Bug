{"sha": "bddd6058a2b9c29980962301b65a911985a3e00d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRkZDYwNThhMmI5YzI5OTgwOTYyMzAxYjY1YTkxMTk4NWEzZTAwZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T12:54:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-20T12:54:27Z"}, "message": "[multiple changes]\n\n2009-04-20  Nicolas Roche  <roche@adacore.com>\n\n\t* sysdep.c (__gnat_localtime_tzoff): on Windows, manipulated times are\n\tunsigned long long. So compare local_time and utc_time before computing\n\tthe difference.\n\n2009-04-20  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* sem_ch3.adb (Build_Derived_Private_Type): Insert the declaration\n\tof the Underlying_Record_View before that of the derived type.\n\n\t* exp_ch3.adb (Expand_Record_Extension): Do not special-case types\n\twith unknown discriminants with regard to the parent subtype.\n\nFrom-SVN: r146410", "tree": {"sha": "ecad736fcc71b3ccb622d267bcd774d938e18c8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecad736fcc71b3ccb622d267bcd774d938e18c8f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bddd6058a2b9c29980962301b65a911985a3e00d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bddd6058a2b9c29980962301b65a911985a3e00d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bddd6058a2b9c29980962301b65a911985a3e00d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bddd6058a2b9c29980962301b65a911985a3e00d/comments", "author": null, "committer": null, "parents": [{"sha": "a3c39f83ee9d05fa4ee14288ce1758eb4bb7f912", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3c39f83ee9d05fa4ee14288ce1758eb4bb7f912", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3c39f83ee9d05fa4ee14288ce1758eb4bb7f912"}], "stats": {"total": 41, "additions": 25, "deletions": 16}, "files": [{"sha": "e49b99269667cececfa883f8ce0b3f1e9e0c099c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bddd6058a2b9c29980962301b65a911985a3e00d/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bddd6058a2b9c29980962301b65a911985a3e00d/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=bddd6058a2b9c29980962301b65a911985a3e00d", "patch": "@@ -1,3 +1,22 @@\n+2009-04-20  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch8.adb (Analyze_Object_Renaming): Proper checks on incorrect\n+\tnull exclusion qualifiers for object renaming declarations.\n+\n+2009-04-20  Nicolas Roche  <roche@adacore.com>\n+\n+\t* sysdep.c (__gnat_localtime_tzoff): on Windows, manipulated times are\n+\tunsigned long long. So compare local_time and utc_time before computing\n+\tthe difference.\n+\n+2009-04-20  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* sem_ch3.adb (Build_Derived_Private_Type): Insert the declaration\n+\tof the Underlying_Record_View before that of the derived type.\n+\n+\t* exp_ch3.adb (Expand_Record_Extension): Do not special-case types\n+\twith unknown discriminants with regard to the parent subtype.\n+\n 2009-04-20  Bob Duff  <duff@adacore.com>\n \n \t* sem.adb (Semantics, Walk_Library_Items): Include dependents of bodies"}, {"sha": "ae7d7a9c7e1394c8db133ef55e81cba30f9b5035", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bddd6058a2b9c29980962301b65a911985a3e00d/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bddd6058a2b9c29980962301b65a911985a3e00d/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=bddd6058a2b9c29980962301b65a911985a3e00d", "patch": "@@ -3892,16 +3892,6 @@ package body Exp_Ch3 is\n          Par_Subtype := Process_Subtype (New_Copy_Tree (Indic), Def);\n       end if;\n \n-      --  If this is an extension of a type with unknown discriminants, use\n-      --  full view to provide proper discriminants to gigi.\n-\n-      if Has_Unknown_Discriminants (Par_Subtype)\n-        and then Is_Private_Type (Par_Subtype)\n-        and then Present (Full_View (Par_Subtype))\n-      then\n-         Par_Subtype := Full_View (Par_Subtype);\n-      end if;\n-\n       Set_Parent_Subtype (T, Par_Subtype);\n \n       Comp_Decl :="}, {"sha": "db0d12c11662fa15623609cc2a104c31d3d4fdc4", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bddd6058a2b9c29980962301b65a911985a3e00d/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bddd6058a2b9c29980962301b65a911985a3e00d/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=bddd6058a2b9c29980962301b65a911985a3e00d", "patch": "@@ -5557,10 +5557,7 @@ package body Sem_Ch3 is\n                  (N, Parent_Type, Derived_Type, Derive_Subps);\n \n                --  Build anonymous completion, as a derivation from the full\n-               --  view of the parent. Because it is used as a placeholder\n-               --  to convey information to the back-end, it must be declared\n-               --  after the original type so the back-end knows that it needs\n-               --  to disregard the declaration.\n+               --  view of the parent.\n \n                Decl :=\n                  Make_Full_Type_Declaration (Loc,\n@@ -5588,7 +5585,7 @@ package body Sem_Ch3 is\n \n                Install_Private_Declarations (Par_Scope);\n                Install_Visible_Declarations (Par_Scope);\n-               Insert_After (N, Decl);\n+               Insert_Before (N, Decl);\n \n                --  Mark entity as an underlying record view before analysis,\n                --  to avoid generating the list of its primitive operations"}, {"sha": "fd4dfad97dbdf19bc2c20b4982000c6282a0f78f", "filename": "gcc/ada/sysdep.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bddd6058a2b9c29980962301b65a911985a3e00d/gcc%2Fada%2Fsysdep.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bddd6058a2b9c29980962301b65a911985a3e00d/gcc%2Fada%2Fsysdep.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsysdep.c?ref=bddd6058a2b9c29980962301b65a911985a3e00d", "patch": "@@ -787,7 +787,10 @@ __gnat_localtime_tzoff (const time_t *timer, long *off)\n      /* An error occurs so return invalid_tzoff.  */\n      *off = __gnat_invalid_tzoff;\n   else\n-     *off = (long) ((local_time.ull_time - utc_time.ull_time) / 10000000ULL);\n+     if (local_time.ull_time > utc_time.ull_time)\n+        *off = (long) ((local_time.ull_time - utc_time.ull_time) / 10000000ULL);\n+     else\n+        *off = - (long) ((utc_time.ull_time - local_time.ull_time) / 10000000ULL);\n \n   (*Unlock_Task) ();\n }"}]}