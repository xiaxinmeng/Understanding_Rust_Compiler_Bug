{"sha": "e07ab2feaf8f83bfab64ef0746b4fb8ee65033d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA3YWIyZmVhZjhmODNiZmFiNjRlZjA3NDZiNGZiOGVlNjUwMzNkMw==", "commit": {"author": {"name": "Marc Glisse", "email": "marc.glisse@inria.fr", "date": "2016-05-04T05:38:18Z"}, "committer": {"name": "Marc Glisse", "email": "glisse@gcc.gnu.org", "date": "2016-05-04T05:38:18Z"}, "message": "Remove duplicate (A & B) OP (C & B) in match.pd.\n\n2016-05-04  Marc Glisse  <marc.glisse@inria.fr>\n\n\t* match.pd ((A | B) & (A | C)): Generalize to BIT_XOR_EXPR.  Mark\n\tas commutative.  Check both conversions are NOP.\n\t((A & B) OP (C & B)): Remove.\n\nFrom-SVN: r235858", "tree": {"sha": "90949559170da664351679fa8ded68ef59b5e99d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90949559170da664351679fa8ded68ef59b5e99d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e07ab2feaf8f83bfab64ef0746b4fb8ee65033d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e07ab2feaf8f83bfab64ef0746b4fb8ee65033d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e07ab2feaf8f83bfab64ef0746b4fb8ee65033d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e07ab2feaf8f83bfab64ef0746b4fb8ee65033d3/comments", "author": {"login": "mglisse", "id": 10097863, "node_id": "MDQ6VXNlcjEwMDk3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/10097863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mglisse", "html_url": "https://github.com/mglisse", "followers_url": "https://api.github.com/users/mglisse/followers", "following_url": "https://api.github.com/users/mglisse/following{/other_user}", "gists_url": "https://api.github.com/users/mglisse/gists{/gist_id}", "starred_url": "https://api.github.com/users/mglisse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mglisse/subscriptions", "organizations_url": "https://api.github.com/users/mglisse/orgs", "repos_url": "https://api.github.com/users/mglisse/repos", "events_url": "https://api.github.com/users/mglisse/events{/privacy}", "received_events_url": "https://api.github.com/users/mglisse/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0777ce6f2efd582e6ad8902b3a5458e21fbc8a16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0777ce6f2efd582e6ad8902b3a5458e21fbc8a16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0777ce6f2efd582e6ad8902b3a5458e21fbc8a16"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "6461fc196b79b7a25474b1e808a2c6d5d05a0591", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e07ab2feaf8f83bfab64ef0746b4fb8ee65033d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e07ab2feaf8f83bfab64ef0746b4fb8ee65033d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e07ab2feaf8f83bfab64ef0746b4fb8ee65033d3", "patch": "@@ -1,3 +1,9 @@\n+2016-05-04  Marc Glisse  <marc.glisse@inria.fr>\n+\n+\t* match.pd ((A | B) & (A | C)): Generalize to BIT_XOR_EXPR.  Mark\n+\tas commutative.  Check both conversions are NOP.\n+\t((A & B) OP (C & B)): Remove.\n+\n 2016-05-04  Alan Modra  <amodra@gmail.com>\n \n \t* combine.c (simplify_set): Correct WORD_REGISTER_OPERATIONS test."}, {"sha": "ee2aee3723453bdf4005185ac4fa2693462f7f7f", "filename": "gcc/match.pd", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e07ab2feaf8f83bfab64ef0746b4fb8ee65033d3/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e07ab2feaf8f83bfab64ef0746b4fb8ee65033d3/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=e07ab2feaf8f83bfab64ef0746b4fb8ee65033d3", "patch": "@@ -685,11 +685,12 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n    constants are involved.  For example, convert\n      (A | B) & (A | C) into A | (B & C)\n    Further simplification will occur if B and C are constants.  */\n-(for op (bit_and bit_ior)\n-     rop (bit_ior bit_and)\n+(for op (bit_and bit_ior bit_xor)\n+     rop (bit_ior bit_and bit_and)\n  (simplify\n-  (op (convert? (rop:c @0 @1)) (convert? (rop @0 @2)))\n-  (if (tree_nop_conversion_p (type, TREE_TYPE (@0)))\n+  (op (convert? (rop:c @0 @1)) (convert? (rop:c @0 @2)))\n+  (if (tree_nop_conversion_p (type, TREE_TYPE (@1))\n+       && tree_nop_conversion_p (type, TREE_TYPE (@2)))\n    (rop (convert @0) (op (convert @1) (convert @2))))))\n \n \n@@ -787,12 +788,6 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n   (bitop:c (rbitop:c (bit_not @0) @1) @0)\n   (bitop @0 @1)))\n \n-/* Simplify (A & B) OP0 (C & B) to (A OP0 C) & B. */\n-(for bitop (bit_and bit_ior bit_xor)\n- (simplify\n-  (bitop (bit_and:c @0 @1) (bit_and @2 @1))\n-  (bit_and (bitop @0 @2) @1)))\n-\n /* (x | CST1) & CST2 -> (x & CST2) | (CST1 & CST2) */\n (simplify\n   (bit_and (bit_ior @0 CONSTANT_CLASS_P@1) CONSTANT_CLASS_P@2)"}]}