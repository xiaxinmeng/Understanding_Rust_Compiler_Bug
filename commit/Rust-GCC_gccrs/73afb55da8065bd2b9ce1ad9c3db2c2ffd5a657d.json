{"sha": "73afb55da8065bd2b9ce1ad9c3db2c2ffd5a657d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNhZmI1NWRhODA2NWJkMmI5Y2UxYWQ5YzNkYjJjMmZmZDVhNjU3ZA==", "commit": {"author": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2013-11-06T20:26:35Z"}, "committer": {"name": "Oleg Endo", "email": "olegendo@gcc.gnu.org", "date": "2013-11-06T20:26:35Z"}, "message": "re PR rtl-optimization/30807 (postreload bug (might be generic in trunk))\n\n\tPR target/30807\n\t* gcc.target/sh/torture/pr30807.c: New.\n\nFrom-SVN: r204473", "tree": {"sha": "b5dd87ca8439173f15679486799bb79f1c901380", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b5dd87ca8439173f15679486799bb79f1c901380"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73afb55da8065bd2b9ce1ad9c3db2c2ffd5a657d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73afb55da8065bd2b9ce1ad9c3db2c2ffd5a657d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73afb55da8065bd2b9ce1ad9c3db2c2ffd5a657d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73afb55da8065bd2b9ce1ad9c3db2c2ffd5a657d/comments", "author": null, "committer": null, "parents": [{"sha": "71b71b96f05daefae87b3f5b65b7252987fb6eab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71b71b96f05daefae87b3f5b65b7252987fb6eab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71b71b96f05daefae87b3f5b65b7252987fb6eab"}], "stats": {"total": 223, "additions": 223, "deletions": 0}, "files": [{"sha": "992989e35fc0d38ac8a3e03ec80acc13d4c9ff20", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73afb55da8065bd2b9ce1ad9c3db2c2ffd5a657d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73afb55da8065bd2b9ce1ad9c3db2c2ffd5a657d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=73afb55da8065bd2b9ce1ad9c3db2c2ffd5a657d", "patch": "@@ -1,3 +1,8 @@\n+2013-11-06  Oleg Endo  <olegendo@gcc.gnu.org>\n+\n+\tPR target/30807\n+\t* gcc.target/sh/torture/pr30807.c: New.\n+\n 2013-11-06  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/11006"}, {"sha": "c9cc771b685bf10d8be509fec0a8e74f626456b8", "filename": "gcc/testsuite/gcc.target/sh/torture/pr30807.c", "status": "added", "additions": 218, "deletions": 0, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73afb55da8065bd2b9ce1ad9c3db2c2ffd5a657d/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Ftorture%2Fpr30807.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73afb55da8065bd2b9ce1ad9c3db2c2ffd5a657d/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Ftorture%2Fpr30807.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fsh%2Ftorture%2Fpr30807.c?ref=73afb55da8065bd2b9ce1ad9c3db2c2ffd5a657d", "patch": "@@ -0,0 +1,218 @@\n+/* { dg-do compile }  */\n+/* { dg-additional-options \"-fpic -std=c99\" }  */\n+/* { dg-skip-if \"\" { \"sh*-*-*\" } { \"-m5*\" } { \"\" } }  */\n+\n+typedef unsigned int size_t;\n+typedef struct\n+{\n+  unsigned long __val[(1024 / (8 * sizeof (unsigned long)))];\n+}  __sigset_t;\n+struct __jmp_buf_tag\n+{\n+  __sigset_t __saved_mask;\n+};\n+typedef struct __jmp_buf_tag sigjmp_buf[1];\n+struct stat\n+{\n+  long long st_dev;\n+  unsigned short int __pad1;\n+  int tm_isdst;\n+  long int tm_gmtoff;\n+  char *tm_zone;\n+};\n+\n+typedef size_t STRLEN;\n+typedef struct op OP;\n+typedef struct cop COP;\n+typedef struct interpreter PerlInterpreter;\n+typedef struct sv SV;\n+typedef struct av AV;\n+typedef struct cv CV;\n+typedef struct gp GP;\n+typedef struct gv GV;\n+typedef struct xpv XPV;\n+typedef struct xpvio XPVIO;\n+typedef union any ANY;\n+typedef unsigned char U8;\n+typedef long I32;\n+typedef unsigned long U32;\n+typedef U32 line_t;\n+typedef struct _PerlIO PerlIOl;\n+typedef PerlIOl *PerlIO;\n+struct sv\n+{\n+  void *sv_any;\n+  U32 sv_flags;\n+  union\n+  {\n+    char *svu_pv;\n+  } sv_u;\n+};\n+struct gv\n+{\n+  U32 sv_flags;\n+  union\n+  {\n+    GP *svu_gp;\n+  } sv_u;\n+};\n+struct io\n+{\n+  XPVIO *sv_any;\n+};\n+struct xpv\n+{\n+  STRLEN xpv_cur;\n+};\n+struct xpvio\n+{\n+  PerlIO *xio_ofp;\n+};\n+struct gp\n+{\n+  SV *gp_sv;\n+  struct io *gp_io;\n+};\n+struct jmpenv\n+{\n+  struct jmpenv *je_prev;\n+  sigjmp_buf je_buf;\n+  int je_ret;\n+};\n+typedef struct jmpenv JMPENV;\n+struct cop\n+{\n+  line_t cop_line;\n+  struct refcounted_he *cop_hints_hash;\n+};\n+struct interpreter\n+{\n+  SV **Istack_sp;\n+  OP *Iop;\n+  SV **Icurpad;\n+  SV **Istack_base;\n+  SV **Istack_max;\n+  I32 *Iscopestack;\n+  I32 Iscopestack_ix;\n+  I32 Iscopestack_max;\n+  ANY *Isavestack;\n+  I32 Isavestack_ix;\n+  I32 Isavestack_max;\n+  SV **Itmps_stack;\n+  I32 Itmps_ix;\n+  I32 Itmps_floor;\n+  I32 Itmps_max;\n+  I32 Imodcount;\n+  I32 *Imarkstack;\n+  I32 *Imarkstack_ptr;\n+  I32 *Imarkstack_max;\n+  SV *ISv;\n+  XPV *IXpv;\n+  STRLEN Ina;\n+  struct stat Istatbuf;\n+  struct stat Istatcache;\n+  OP *Irestartop;\n+  COP *volatile Icurcop;\n+  JMPENV *Itop_env;\n+  U8 Iexit_flags;\n+  I32 Istatusvalue;\n+  I32 Istatusvalue_posix;\n+  GV *Istderrgv;\n+  GV *Ierrgv;\n+  AV *Ibeginav;\n+  AV *Iunitcheckav;\n+  COP Icompiling;\n+  char Isavebegin;\n+  volatile U32 Idebug;\n+  AV *Ibeginav_save;\n+  AV *Icheckav_save;\n+  AV *Iunitcheckav_save;\n+};\n+\n+void S_my_exit_jump (PerlInterpreter *my_perl __attribute__((unused)))\n+  __attribute__((noreturn));\n+\n+int Perl_av_len (PerlInterpreter*, AV*);\n+void Perl_av_create_and_push (PerlInterpreter*, AV**, SV*);\n+int __sigsetjmp (sigjmp_buf env, int savemask);\n+void Perl_sv_2pv_flags (PerlInterpreter*, SV*, STRLEN*, int);\n+void Perl_deb (PerlInterpreter*,\n+\t       const char*, const char*, int, const char*, int);\n+void Perl_croak (PerlInterpreter*, const char*, void*);\n+void foo (void);\n+\n+void\n+Perl_call_list (PerlInterpreter *my_perl __attribute__((unused)),\n+\t\tI32 oldscope, AV *paramList)\n+{\n+  SV *atsv;\n+  CV *cv;\n+  STRLEN len;\n+  int ret;\n+  JMPENV cur_env;\n+  GV *shplep;\n+  volatile line_t oldline;\n+\n+  oldline = (my_perl->Icurcop) ? my_perl->Icurcop->cop_line : 0;\n+\n+  while (Perl_av_len (my_perl, paramList) >= 0)\n+    {\n+      if (my_perl->Isavebegin)\n+\t{\n+\t  if (paramList == my_perl->Ibeginav)\n+\t    {\n+\t      Perl_av_create_and_push (my_perl, &my_perl->Ibeginav_save,\n+\t\t\t\t       (SV*) cv);\n+\t      Perl_av_create_and_push(my_perl, &my_perl->Icheckav_save,\n+\t\t\t\t      (SV*) cv);\n+\t    }\n+\t  else if (paramList == my_perl->Iunitcheckav)\n+\t    Perl_av_create_and_push(my_perl, &my_perl->Iunitcheckav_save,\n+\t\t\t\t    (SV*) cv);\n+\t}\n+\n+      cur_env.je_ret = __sigsetjmp (cur_env.je_buf, 0);\n+\n+      switch (ret)\n+\t{\n+\tcase 0:\n+\t  shplep = (GV *) my_perl->Ierrgv;\n+\t  *my_perl->Imarkstack_ptr = my_perl->Istack_sp - my_perl->Istack_base;\n+\t  atsv = shplep->sv_u.svu_gp->gp_sv;\n+\t  if (atsv->sv_flags & 0x00000400 == 0x00000400)\n+\t    len = ((XPV*) ((SV *) atsv)->sv_any)->xpv_cur;\n+\t  else\n+\t    Perl_sv_2pv_flags (my_perl, atsv, &len, 2|32);\n+\n+\t  if (len)\n+\t    {\n+\t      my_perl->Icurcop = &my_perl->Icompiling;\n+\t      while (my_perl->Iscopestack_ix > oldscope)\n+\t\t{\n+\t\t  if (my_perl->Idebug & 0x00000004)\n+\t\t    Perl_deb (my_perl, \"scope\", \"LEAVE\",\n+\t\t\t      my_perl->Iscopestack_ix, \"perl.c\", 5166);\n+\t\t  (my_perl->Itop_env) = cur_env.je_prev;\n+\t\t}\n+\n+\t      Perl_croak (my_perl, \"%\"\"-p\"\"\", (void*) atsv);\n+\t    }\n+\n+\tcase 1:\n+\t  my_perl->Istatusvalue = 1;\n+\t  my_perl->Istatusvalue_posix = 1;\n+\tcase 2:\n+\t  while (my_perl->Iscopestack_ix > oldscope)\n+\t    if (my_perl->Idebug & 0x00000004)\n+\t      foo ();\n+\t  my_perl->Icurcop = &my_perl->Icompiling;\n+\t  my_perl->Icurcop->cop_line = oldline;\n+\t  if (my_perl->Idebug & 0x00000004)\n+\t    foo ();\n+\t  S_my_exit_jump (my_perl);\n+\tcase 3:\n+\t  if (my_perl->Irestartop)\n+\t    foo ();\n+\t}\n+    }\n+}"}]}