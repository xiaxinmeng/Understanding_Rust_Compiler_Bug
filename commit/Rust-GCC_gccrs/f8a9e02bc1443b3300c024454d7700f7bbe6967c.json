{"sha": "f8a9e02bc1443b3300c024454d7700f7bbe6967c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjhhOWUwMmJjMTQ0M2IzMzAwYzAyNDQ1NGQ3NzAwZjdiYmU2OTY3Yw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-23T13:13:48Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-02-23T13:13:48Z"}, "message": "(choose_reload_regs): If EQUIV is a SUBREG, make a new REG.\n\nFrom-SVN: r6612", "tree": {"sha": "660eb66fa52670087f52393ee88807d2535bf165", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/660eb66fa52670087f52393ee88807d2535bf165"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f8a9e02bc1443b3300c024454d7700f7bbe6967c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a9e02bc1443b3300c024454d7700f7bbe6967c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f8a9e02bc1443b3300c024454d7700f7bbe6967c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f8a9e02bc1443b3300c024454d7700f7bbe6967c/comments", "author": null, "committer": null, "parents": [{"sha": "fdff8c6d8831291ce820748667f08eb3b05f1987", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdff8c6d8831291ce820748667f08eb3b05f1987", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdff8c6d8831291ce820748667f08eb3b05f1987"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "ac75a5181e12a922ebc889096850814ccf622e75", "filename": "gcc/reload1.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f8a9e02bc1443b3300c024454d7700f7bbe6967c/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f8a9e02bc1443b3300c024454d7700f7bbe6967c/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=f8a9e02bc1443b3300c024454d7700f7bbe6967c", "patch": "@@ -5044,9 +5044,12 @@ choose_reload_regs (insn, avoid_return_reg)\n \t\t    regno = REGNO (equiv);\n \t\t  else if (GET_CODE (equiv) == SUBREG)\n \t\t    {\n-\t\t      regno = REGNO (SUBREG_REG (equiv));\n-\t\t      if (regno < FIRST_PSEUDO_REGISTER)\n-\t\t\tregno += SUBREG_WORD (equiv);\n+\t\t      /* This must be a SUBREG of a hard register.\n+\t\t\t Make a new REG since this might be used in an\n+\t\t\t address and not all machines support SUBREGs\n+\t\t\t there.  */\n+\t\t      regno = REGNO (SUBREG_REG (equiv)) + SUBREG_WORD (equiv);\n+\t\t      equiv = gen_rtx (REG, reload_mode[r], regno);\n \t\t    }\n \t\t  else\n \t\t    abort ();"}]}