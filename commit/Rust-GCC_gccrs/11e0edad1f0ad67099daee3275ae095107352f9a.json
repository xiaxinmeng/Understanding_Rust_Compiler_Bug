{"sha": "11e0edad1f0ad67099daee3275ae095107352f9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFlMGVkYWQxZjBhZDY3MDk5ZGFlZTMyNzVhZTA5NTEwNzM1MmY5YQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2008-09-11T12:20:42Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2008-09-11T12:20:42Z"}, "message": "ifcvt.c (check_cond_move_block): Make regs argument pointer to vector pointer.\n\n\t* ifcvt.c (check_cond_move_block): Make regs argument pointer to vector pointer.\n\t(cond_move_process_if_block): Update call.\n\nFrom-SVN: r140278", "tree": {"sha": "697703d06b90b5706022b8a181fa8a6ad679564e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/697703d06b90b5706022b8a181fa8a6ad679564e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11e0edad1f0ad67099daee3275ae095107352f9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11e0edad1f0ad67099daee3275ae095107352f9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11e0edad1f0ad67099daee3275ae095107352f9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11e0edad1f0ad67099daee3275ae095107352f9a/comments", "author": null, "committer": null, "parents": [{"sha": "d3492572d5a42d7cb1208050fd4a24d9972db141", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3492572d5a42d7cb1208050fd4a24d9972db141", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3492572d5a42d7cb1208050fd4a24d9972db141"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "12eb46c93922284c009b5d7402497a64553bc38b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11e0edad1f0ad67099daee3275ae095107352f9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11e0edad1f0ad67099daee3275ae095107352f9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11e0edad1f0ad67099daee3275ae095107352f9a", "patch": "@@ -1,3 +1,8 @@\n+2008-09-11  Jan Hubicka  <jh@suse.cz>\n+\n+\t* ifcvt.c (check_cond_move_block): Make regs argument pointer to vector pointer.\n+\t(cond_move_process_if_block): Update call.\n+\n 2008-09-11  Jan Hubicka  <jh@suse.cz>\n \n \t* toplev.c (dump_memory_report): Call dump_vec_loc_statistics."}, {"sha": "66a65a4a7ab34b817150271ac6ea20b016eb0d2d", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11e0edad1f0ad67099daee3275ae095107352f9a/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11e0edad1f0ad67099daee3275ae095107352f9a/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=11e0edad1f0ad67099daee3275ae095107352f9a", "patch": "@@ -2459,7 +2459,7 @@ noce_process_if_block (struct noce_if_info *if_info)\n    REGS.  COND is the condition we will test.  */\n \n static int\n-check_cond_move_block (basic_block bb, rtx *vals, VEC (int, heap) *regs, rtx cond)\n+check_cond_move_block (basic_block bb, rtx *vals, VEC (int, heap) **regs, rtx cond)\n {\n   rtx insn;\n \n@@ -2520,7 +2520,7 @@ check_cond_move_block (basic_block bb, rtx *vals, VEC (int, heap) *regs, rtx con\n \n       vals[REGNO (dest)] = src;\n \n-      VEC_safe_push (int, heap, regs, REGNO (dest));\n+      VEC_safe_push (int, heap, *regs, REGNO (dest));\n     }\n \n   return TRUE;\n@@ -2621,8 +2621,8 @@ cond_move_process_if_block (struct noce_if_info *if_info)\n   memset (else_vals, 0, size);\n \n   /* Make sure the blocks are suitable.  */\n-  if (!check_cond_move_block (then_bb, then_vals, then_regs, cond)\n-      || (else_bb && !check_cond_move_block (else_bb, else_vals, else_regs, cond)))\n+  if (!check_cond_move_block (then_bb, then_vals, &then_regs, cond)\n+      || (else_bb && !check_cond_move_block (else_bb, else_vals, &else_regs, cond)))\n     {\n       VEC_free (int, heap, then_regs);\n       VEC_free (int, heap, else_regs);"}]}