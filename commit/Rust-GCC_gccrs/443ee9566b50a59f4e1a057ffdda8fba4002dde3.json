{"sha": "443ee9566b50a59f4e1a057ffdda8fba4002dde3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQzZWU5NTY2YjUwYTU5ZjRlMWEwNTdmZmRkYThmYmE0MDAyZGRlMw==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2018-05-24T13:04:16Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-24T13:04:16Z"}, "message": "[Ada] Fix references to Backend_Layout configuration parameter\n\nApparently the Backend_Layout target configuration parameter was renamed to\nFrontend_Layout a long time ago (and their meanings are opposite). However,\nsome comments were still referencing the no longer existing Backend_Layout.\nThis patch fixes such references.\n\nNo test provided, because only comments has been modified.\n\n2018-05-24  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* layout.ads, repinfo.ads: Fix references to renamed Backend_Layout\n\tconfiguration parameter.\n\nFrom-SVN: r260642", "tree": {"sha": "f829534b366b9a4a2135552e77174fc698a281e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f829534b366b9a4a2135552e77174fc698a281e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/443ee9566b50a59f4e1a057ffdda8fba4002dde3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/443ee9566b50a59f4e1a057ffdda8fba4002dde3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/443ee9566b50a59f4e1a057ffdda8fba4002dde3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/443ee9566b50a59f4e1a057ffdda8fba4002dde3/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3cac09db8dfb0d910c8c50a7e86826833eeb61f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cac09db8dfb0d910c8c50a7e86826833eeb61f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cac09db8dfb0d910c8c50a7e86826833eeb61f8"}], "stats": {"total": 21, "additions": 13, "deletions": 8}, "files": [{"sha": "c6ff69047eddcfaed7e5c78d4a88a6ebd9db9fa9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/443ee9566b50a59f4e1a057ffdda8fba4002dde3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/443ee9566b50a59f4e1a057ffdda8fba4002dde3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=443ee9566b50a59f4e1a057ffdda8fba4002dde3", "patch": "@@ -1,3 +1,8 @@\n+2018-05-24  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* layout.ads, repinfo.ads: Fix references to renamed Backend_Layout\n+\tconfiguration parameter.\n+\n 2018-05-24  Doug Rupp  <rupp@adacore.com>\n \n \t* argv-lynxos178-raven-cert.c: New file."}, {"sha": "db9428bd5940999ba95ea97d85330a6d977418a0", "filename": "gcc/ada/layout.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/443ee9566b50a59f4e1a057ffdda8fba4002dde3/gcc%2Fada%2Flayout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/443ee9566b50a59f4e1a057ffdda8fba4002dde3/gcc%2Fada%2Flayout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.ads?ref=443ee9566b50a59f4e1a057ffdda8fba4002dde3", "patch": "@@ -26,7 +26,7 @@\n --  This package does front-end layout of types and objects. The result is\n --  to annotate the tree with information on size and alignment of types\n --  and objects. How much layout is performed depends on the setting of the\n---  target dependent parameter Backend_Layout.\n+--  target dependent parameter Frontend_Layout.\n \n with Types; use Types;\n \n@@ -40,9 +40,9 @@ package Layout is\n    procedure Layout_Type (E : Entity_Id);\n    --  This procedure may set or adjust the fields Esize, RM_Size and\n    --  Alignment in the non-generic type or subtype entity E. If the\n-   --  Backend_Layout switch is False, then it is guaranteed that all\n+   --  Frontend_Layout switch is True, then it is guaranteed that all\n    --  three fields will be properly set on return. Regardless of the\n-   --  Backend_Layout value, it is guaranteed that all discrete types\n+   --  Frontend_Layout value, it is guaranteed that all discrete types\n    --  will have both Esize and RM_Size fields set on return (since\n    --  these are static values). Note that Layout_Type is not called\n    --  for generic types, since these play no part in code generation,\n@@ -53,7 +53,7 @@ package Layout is\n    --  a loop parameter (E_Loop_Parameter), or a formal parameter of\n    --  a non-generic subprogram (E_In_Parameter, E_In_Out_Parameter,\n    --  or E_Out_Parameter). This procedure may set or adjust the\n-   --  Esize and Alignment fields of E. If Backend_Layout is False,\n+   --  Esize and Alignment fields of E. If Frontend_Layout is True,\n    --  then it is guaranteed that both fields will be properly set\n    --  on return. If the Esize is still unknown in the latter case,\n    --  it means that the object must be allocated dynamically, since"}, {"sha": "c0dd60125d1792c3f42961bba08750f9135d1ad9", "filename": "gcc/ada/repinfo.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/443ee9566b50a59f4e1a057ffdda8fba4002dde3/gcc%2Fada%2Frepinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/443ee9566b50a59f4e1a057ffdda8fba4002dde3/gcc%2Fada%2Frepinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.ads?ref=443ee9566b50a59f4e1a057ffdda8fba4002dde3", "patch": "@@ -56,13 +56,13 @@ package Repinfo is\n    --       for example in the case where representation clauses or\n    --       pragmas specify the values.\n \n-   --    2. If Backend_Layout is True, then the backend is responsible\n+   --    2. If Frontend_Layout is False, then the backend is responsible\n    --       for layout of all types and objects not laid out by the\n    --       front end. This includes all dynamic values, and also\n    --       static values (e.g. record sizes) when not set by the\n    --       front end.\n \n-   --    3. If Backend_Layout is False, then the front end lays out\n+   --    3. If Frontend_Layout is True, then the front end lays out\n    --       all data, according to target dependent size and alignment\n    --       information, creating dynamic inlinable functions where\n    --       needed in the case of sizes not known till runtime.\n@@ -71,7 +71,7 @@ package Repinfo is\n    -- Back-Annotation by Gigi --\n    -----------------------------\n \n-   --  The following interface is used by gigi if Backend_Layout is True\n+   --  The following interface is used by gigi if Frontend_Layout is False\n \n    --  As part of the processing in gigi, the types are laid out and\n    --  appropriate values computed for the sizes and component positions\n@@ -209,7 +209,7 @@ package Repinfo is\n    -- Front-End Interface for Dynamic Size/Offset Values --\n    --------------------------------------------------------\n \n-   --  If Backend_Layout is False, then the front-end deals with all\n+   --  If Frontend_Layout is True, then the front-end deals with all\n    --  dynamic size and offset fields. There are two cases:\n \n    --    1. The value can be computed at the time of type freezing, and"}]}