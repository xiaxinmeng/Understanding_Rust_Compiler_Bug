{"sha": "d8a6c3ebebadc9b806ef5685cdbb65d918b6c1b7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhhNmMzZWJlYmFkYzliODA2ZWY1Njg1Y2RiYjY1ZDkxOGI2YzFiNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-19T23:02:29Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-03-19T23:02:29Z"}, "message": "(attrib): Use `identifier' instead of `IDENTIFIER' since names that\nare (e.g.) typedef names are still OK.\n\nFrom-SVN: r6828", "tree": {"sha": "048e143d0f633012f63a84b5410aac747fda511c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/048e143d0f633012f63a84b5410aac747fda511c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8a6c3ebebadc9b806ef5685cdbb65d918b6c1b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a6c3ebebadc9b806ef5685cdbb65d918b6c1b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8a6c3ebebadc9b806ef5685cdbb65d918b6c1b7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8a6c3ebebadc9b806ef5685cdbb65d918b6c1b7/comments", "author": null, "committer": null, "parents": [{"sha": "eedd251f1608d01afb674f50dace11523a6ebfe5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eedd251f1608d01afb674f50dace11523a6ebfe5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eedd251f1608d01afb674f50dace11523a6ebfe5"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "88ddf87f0a1fae1276dc55fbe62f2992876414c5", "filename": "gcc/c-parse.in", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8a6c3ebebadc9b806ef5685cdbb65d918b6c1b7/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8a6c3ebebadc9b806ef5685cdbb65d918b6c1b7/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=d8a6c3ebebadc9b806ef5685cdbb65d918b6c1b7", "patch": "@@ -1064,14 +1064,14 @@ attribute_list\n     ;\n \n attrib\n-    : IDENTIFIER\n+    : identifier\n \t{ if (strcmp (IDENTIFIER_POINTER ($1), \"packed\")\n \t      && strcmp (IDENTIFIER_POINTER ($1), \"noreturn\"))\n \t    warning (\"`%s' attribute directive ignored\",\n \t\t     IDENTIFIER_POINTER ($1));\n \t  $$ = $1; }\n     | TYPE_QUAL\n-    | IDENTIFIER '(' IDENTIFIER ')'\n+    | identifier '(' identifier ')'\n \t{ /* If not \"mode (m)\" or \"aligned\", then issue warning. \n \t     If \"aligned\", this will later produce an error in decl_attributes\n \t     since an identifier is not a valid constant, but we want to give\n@@ -1086,7 +1086,7 @@ attrib\n \t    }\n \t  else\n \t    $$ = tree_cons ($1, $3, NULL_TREE); }\n-    | IDENTIFIER '(' expr_no_commas ')'\n+    | identifier '(' expr_no_commas ')'\n \t{ /* if not \"aligned(n)\", then issue warning */\n \t  if (strcmp (IDENTIFIER_POINTER ($1), \"aligned\") != 0)\n \t    {\n@@ -1096,7 +1096,7 @@ attrib\n \t    }\n \t  else\n \t    $$ = tree_cons ($1, $3, NULL_TREE); }\n-    | IDENTIFIER '(' IDENTIFIER ',' expr_no_commas ',' expr_no_commas ')'\n+    | identifier '(' identifier ',' expr_no_commas ',' expr_no_commas ')'\n \t{ /* if not \"format(...)\", then issue warning */\n \t  if (strcmp (IDENTIFIER_POINTER ($1), \"format\") != 0)\n \t    {\n@@ -1110,7 +1110,7 @@ attrib\n \t\t\t\t       tree_cons ($5, $7, NULL_TREE),\n \t\t\t\t       NULL_TREE),\n \t\t\t    NULL_TREE); }\n-    | IDENTIFIER '(' STRING ')'\n+    | identifier '(' STRING ')'\n \t{ /* If not \"section (name)\", then issue warning.  */\n \t  if (strcmp (IDENTIFIER_POINTER ($1), \"section\") != 0)\n \t    {"}]}