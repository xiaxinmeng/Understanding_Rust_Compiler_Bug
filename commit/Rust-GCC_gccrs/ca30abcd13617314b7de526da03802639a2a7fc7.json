{"sha": "ca30abcd13617314b7de526da03802639a2a7fc7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EzMGFiY2QxMzYxNzMxNGI3ZGU1MjZkYTAzODAyNjM5YTJhN2ZjNw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-01-26T21:34:16Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-01-26T21:34:16Z"}, "message": "re PR c++/68949 (Implicit initialization of array member silently miscompiling.)\n\n\tPR c++/68949\n\n\t* constexpr.c (register_constexpr_fundef): Keep the un-massaged body.\n\t(cxx_eval_call_expression): Don't look through clones.\n\t* optimize.c (maybe_clone_body): Clear DECL_SAVED_TREE of the alias.\n\t* semantics.c (expand_or_defer_fn_1): Keep DECL_SAVED_TREE of\n\tmaybe-in-charge *tor.\n\nFrom-SVN: r232848", "tree": {"sha": "39f30693c0fcb67ca9098ca43ad7fe4576d05c26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39f30693c0fcb67ca9098ca43ad7fe4576d05c26"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca30abcd13617314b7de526da03802639a2a7fc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca30abcd13617314b7de526da03802639a2a7fc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca30abcd13617314b7de526da03802639a2a7fc7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca30abcd13617314b7de526da03802639a2a7fc7/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2d63bc398f7221edbec3e3f1d4ecbacac87cb3a5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d63bc398f7221edbec3e3f1d4ecbacac87cb3a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d63bc398f7221edbec3e3f1d4ecbacac87cb3a5"}], "stats": {"total": 64, "additions": 47, "deletions": 17}, "files": [{"sha": "0c490d5b9a050b637ceda6ffb4b3909a1759bbd0", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca30abcd13617314b7de526da03802639a2a7fc7/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca30abcd13617314b7de526da03802639a2a7fc7/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ca30abcd13617314b7de526da03802639a2a7fc7", "patch": "@@ -1,3 +1,12 @@\n+2016-01-26  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/68949\n+\t* constexpr.c (register_constexpr_fundef): Keep the un-massaged body.\n+\t(cxx_eval_call_expression): Don't look through clones.\n+\t* optimize.c (maybe_clone_body): Clear DECL_SAVED_TREE of the alias.\n+\t* semantics.c (expand_or_defer_fn_1): Keep DECL_SAVED_TREE of\n+\tmaybe-in-charge *tor.\n+\n 2016-01-26  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/68782"}, {"sha": "bbb8ccf4e696fceaa7d9c3b16ac56ceca131b2c7", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 5, "deletions": 14, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca30abcd13617314b7de526da03802639a2a7fc7/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca30abcd13617314b7de526da03802639a2a7fc7/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=ca30abcd13617314b7de526da03802639a2a7fc7", "patch": "@@ -769,23 +769,23 @@ register_constexpr_fundef (tree fun, tree body)\n   if (!is_valid_constexpr_fn (fun, !DECL_GENERATED_P (fun)))\n     return NULL;\n \n-  body = massage_constexpr_body (fun, body);\n-  if (body == NULL_TREE || body == error_mark_node)\n+  tree massaged = massage_constexpr_body (fun, body);\n+  if (massaged == NULL_TREE || massaged == error_mark_node)\n     {\n       if (!DECL_CONSTRUCTOR_P (fun))\n \terror (\"body of constexpr function %qD not a return-statement\", fun);\n       return NULL;\n     }\n \n-  if (!potential_rvalue_constant_expression (body))\n+  if (!potential_rvalue_constant_expression (massaged))\n     {\n       if (!DECL_GENERATED_P (fun))\n-\trequire_potential_rvalue_constant_expression (body);\n+\trequire_potential_rvalue_constant_expression (massaged);\n       return NULL;\n     }\n \n   if (DECL_CONSTRUCTOR_P (fun)\n-      && cx_check_missing_mem_inits (fun, body, !DECL_GENERATED_P (fun)))\n+      && cx_check_missing_mem_inits (fun, massaged, !DECL_GENERATED_P (fun)))\n     return NULL;\n \n   /* Create the constexpr function table if necessary.  */\n@@ -1340,15 +1340,6 @@ cxx_eval_call_expression (const constexpr_ctx *ctx, tree t,\n     {\n       if (!result || result == error_mark_node)\n \t{\n-\t  if (DECL_SAVED_TREE (fun) == NULL_TREE\n-\t      && (DECL_CONSTRUCTOR_P (fun) || DECL_DESTRUCTOR_P (fun)))\n-\t    /* The maybe-in-charge 'tor had its DECL_SAVED_TREE\n-\t       cleared, try a clone.  */\n-\t    for (fun = DECL_CHAIN (fun);\n-\t\t fun && DECL_CLONED_FUNCTION_P (fun);\n-\t\t fun = DECL_CHAIN (fun))\n-\t      if (DECL_SAVED_TREE (fun))\n-\t\tbreak;\n \t  gcc_assert (DECL_SAVED_TREE (fun));\n \t  tree parms, res;\n "}, {"sha": "6f80b3d6d842c8616477391bf8c0d3775ef101b8", "filename": "gcc/cp/optimize.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca30abcd13617314b7de526da03802639a2a7fc7/gcc%2Fcp%2Foptimize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca30abcd13617314b7de526da03802639a2a7fc7/gcc%2Fcp%2Foptimize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Foptimize.c?ref=ca30abcd13617314b7de526da03802639a2a7fc7", "patch": "@@ -646,6 +646,8 @@ maybe_clone_body (tree fn)\n \t{\n \t  if (expand_or_defer_fn_1 (clone))\n \t    emit_associated_thunks (clone);\n+\t  /* We didn't generate a body, so remove the empty one.  */\n+\t  DECL_SAVED_TREE (clone) = NULL_TREE;\n \t}\n       else\n \texpand_or_defer_fn (clone);"}, {"sha": "95c4f19f84a1c1d3a692084415d6ebffdf81c37a", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca30abcd13617314b7de526da03802639a2a7fc7/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca30abcd13617314b7de526da03802639a2a7fc7/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=ca30abcd13617314b7de526da03802639a2a7fc7", "patch": "@@ -4163,9 +4163,8 @@ expand_or_defer_fn_1 (tree fn)\n       /* We don't want to process FN again, so pretend we've written\n \t it out, even though we haven't.  */\n       TREE_ASM_WRITTEN (fn) = 1;\n-      /* If this is an instantiation of a constexpr function, keep\n-\t DECL_SAVED_TREE for explain_invalid_constexpr_fn.  */\n-      if (!is_instantiation_of_constexpr (fn))\n+      /* If this is a constexpr function, keep DECL_SAVED_TREE.  */\n+      if (!DECL_DECLARED_CONSTEXPR_P (fn))\n \tDECL_SAVED_TREE (fn) = NULL_TREE;\n       return false;\n     }"}, {"sha": "a59e6f5df144b9b5fd2971f6e681cc4f6e0d847a", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-array15.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca30abcd13617314b7de526da03802639a2a7fc7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca30abcd13617314b7de526da03802639a2a7fc7/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-array15.C?ref=ca30abcd13617314b7de526da03802639a2a7fc7", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/68949\n+// { dg-do run { target c++11 } }\n+\n+struct Sub {\n+    int i;\n+\n+    constexpr Sub() : i(-1) {} // remove constexpr and it works as expected\n+    Sub(Sub&& rhs); // remove this constructor and it works as epxected.\n+};\n+\n+// v-- move this inline and it works as expected\n+// v-- remove ': Sub()' and it works as expected\n+Sub::Sub(Sub&& rhs) : Sub() { int tmp = i; i = rhs.i; rhs.i = tmp; }\n+\n+struct Class {\n+    // v-- remove '[1]' and it works as expected\n+    // v-- add '= {}' and it works as expected\n+    Sub s[1];\n+\n+    // v-- add ': s{}' and it works as expected\n+    // v-- removing this constructor makes it work as expected\n+    Class() {}\n+};\n+\n+int main() {\n+    Class c;\n+    if (c.s[0].i != -1)\n+      __builtin_abort();\n+}"}]}