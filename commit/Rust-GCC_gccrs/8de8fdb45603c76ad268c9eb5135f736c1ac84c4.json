{"sha": "8de8fdb45603c76ad268c9eb5135f736c1ac84c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRlOGZkYjQ1NjAzYzc2YWQyNjhjOWViNTEzNWY3MzZjMWFjODRjNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-07-10T21:35:04Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-07-10T21:35:04Z"}, "message": "pt.c (find_parameter_packs_r): Handle variable templates.\n\n\t* pt.c (find_parameter_packs_r): Handle variable templates.\n\t(variable_template_specialization_p): New.\n\t* cp-tree.h: Declare it.\n\nFrom-SVN: r225692", "tree": {"sha": "3b2bb50f893c0743734c07ed5cc02f3ddd79bc57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b2bb50f893c0743734c07ed5cc02f3ddd79bc57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8de8fdb45603c76ad268c9eb5135f736c1ac84c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8de8fdb45603c76ad268c9eb5135f736c1ac84c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8de8fdb45603c76ad268c9eb5135f736c1ac84c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8de8fdb45603c76ad268c9eb5135f736c1ac84c4/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "55b467a057d1ad5176a89413c6168aed84865c6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55b467a057d1ad5176a89413c6168aed84865c6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55b467a057d1ad5176a89413c6168aed84865c6c"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "130e35863fcaffb26caaca5622ad21bc0e118556", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8de8fdb45603c76ad268c9eb5135f736c1ac84c4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8de8fdb45603c76ad268c9eb5135f736c1ac84c4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8de8fdb45603c76ad268c9eb5135f736c1ac84c4", "patch": "@@ -1,5 +1,9 @@\n 2015-07-10  Jason Merrill  <jason@redhat.com>\n \n+\t* pt.c (find_parameter_packs_r): Handle variable templates.\n+\t(variable_template_specialization_p): New.\n+\t* cp-tree.h: Declare it.\n+\n \t* parser.c (cp_parser_template_id): SET_EXPR_LOCATION.\n \n 2015-07-10  Eric Botcazou  <ebotcazou@adacore.com>"}, {"sha": "8450e9b31c1d4eb8ff1cffd37cf8fdbfede80d73", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8de8fdb45603c76ad268c9eb5135f736c1ac84c4/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8de8fdb45603c76ad268c9eb5135f736c1ac84c4/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=8de8fdb45603c76ad268c9eb5135f736c1ac84c4", "patch": "@@ -5771,6 +5771,7 @@ extern bool reregister_specialization\t\t(tree, tree, tree);\n extern tree instantiate_non_dependent_expr\t(tree);\n extern tree instantiate_non_dependent_expr_sfinae (tree, tsubst_flags_t);\n extern tree instantiate_non_dependent_expr_internal (tree, tsubst_flags_t);\n+extern bool variable_template_specialization_p  (tree);\n extern bool alias_type_or_template_p            (tree);\n extern bool alias_template_specialization_p     (const_tree);\n extern bool dependent_alias_template_spec_p     (const_tree);"}, {"sha": "8c72a6194e26bc5f39f532653a0b4f16dbd68c46", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8de8fdb45603c76ad268c9eb5135f736c1ac84c4/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8de8fdb45603c76ad268c9eb5135f736c1ac84c4/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=8de8fdb45603c76ad268c9eb5135f736c1ac84c4", "patch": "@@ -3245,6 +3245,13 @@ find_parameter_packs_r (tree *tp, int *walk_subtrees, void* data)\n \t\t\tppd, ppd->visited);\n \t  *walk_subtrees = 0;\n \t}\n+      else if (variable_template_specialization_p (t))\n+\t{\n+\t  cp_walk_tree (&DECL_TI_ARGS (t),\n+\t\t\tfind_parameter_packs_r,\n+\t\t\tppd, ppd->visited);\n+\t  *walk_subtrees = 0;\n+\t}\n       break;\n \n     case BASES:\n@@ -5351,6 +5358,17 @@ instantiate_non_dependent_expr (tree expr)\n   return instantiate_non_dependent_expr_sfinae (expr, tf_error);\n }\n \n+/* True iff T is a specialization of a variable template.  */\n+\n+bool\n+variable_template_specialization_p (tree t)\n+{\n+  if (!VAR_P (t) || !DECL_LANG_SPECIFIC (t) || !DECL_TEMPLATE_INFO (t))\n+    return false;\n+  tree tmpl = DECL_TI_TEMPLATE (t);\n+  return variable_template_p (tmpl);\n+}\n+\n /* Return TRUE iff T is a type alias, a TEMPLATE_DECL for an alias\n    template declaration, or a TYPE_DECL for an alias declaration.  */\n "}, {"sha": "53c6db2b974f15024195dd202668093b1850d615", "filename": "gcc/testsuite/g++.dg/cpp1y/var-templ33.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8de8fdb45603c76ad268c9eb5135f736c1ac84c4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ33.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8de8fdb45603c76ad268c9eb5135f736c1ac84c4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ33.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Fvar-templ33.C?ref=8de8fdb45603c76ad268c9eb5135f736c1ac84c4", "patch": "@@ -0,0 +1,20 @@\n+// Test for variable templates in pack expansion\n+// { dg-do compile { target c++14 } }\n+\n+template <int I> const int Val = I;\n+\n+constexpr int f () { return 0; }\n+template <class T, class ...Ts>\n+constexpr int f(T t, Ts... ts)\n+{\n+  return t + f(ts...);\n+}\n+\n+template <int... Is>\n+constexpr int g()\n+{\n+  return f(Val<Is>...);\n+}\n+\n+#define SA(X) static_assert((X),#X)\n+SA((g<1,2,3,4>() == 1+2+3+4));"}]}