{"sha": "e2cce0cf908143d436dbcc16ce5f81a49845e893", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJjY2UwY2Y5MDgxNDNkNDM2ZGJjYzE2Y2U1ZjgxYTQ5ODQ1ZTg5Mw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-16T11:44:16Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-16T11:44:16Z"}, "message": "(distribute_notes): When output an insn to hold a REG_DEAD note,\n\nupdate basic_block_head if necessary.\n\nFrom-SVN: r8658", "tree": {"sha": "4fc1a724309cbf32aa5292c6201c5e169fd1710d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4fc1a724309cbf32aa5292c6201c5e169fd1710d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2cce0cf908143d436dbcc16ce5f81a49845e893", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2cce0cf908143d436dbcc16ce5f81a49845e893", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2cce0cf908143d436dbcc16ce5f81a49845e893", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2cce0cf908143d436dbcc16ce5f81a49845e893/comments", "author": null, "committer": null, "parents": [{"sha": "6060a79633cdde2801b51dbef337d0ce675b9950", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6060a79633cdde2801b51dbef337d0ce675b9950", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6060a79633cdde2801b51dbef337d0ce675b9950"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "fb82ea8120466968f3a276cf4c052fbe63458d61", "filename": "gcc/combine.c", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2cce0cf908143d436dbcc16ce5f81a49845e893/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2cce0cf908143d436dbcc16ce5f81a49845e893/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=e2cce0cf908143d436dbcc16ce5f81a49845e893", "patch": "@@ -10576,9 +10576,16 @@ distribute_notes (notes, from_insn, i3, i2, elim_i2, elim_i1)\n \t\t put the death node there.  This prevents problems with\n \t\t call-state tracking in caller-save.c.  */\n \t      if (REG_NOTE_KIND (note) == REG_DEAD && place == 0 && tem != 0)\n-\t\tplace\n-\t\t  = emit_insn_after (gen_rtx (USE, VOIDmode, XEXP (note, 0)),\n-\t\t\t\t     tem);\n+\t\t{\n+\t\t  place\n+\t\t    = emit_insn_after (gen_rtx (USE, VOIDmode, XEXP (note, 0)),\n+\t\t\t\t       tem);\n+\n+\t\t  /* If this insn was emitted between blocks, then update\n+\t\t     basic_block_head of the current block to include it.  */\n+\t\t  if (basic_block_end[this_basic_block - 1] == tem)\n+\t\t    basic_block_head[this_basic_block] = place;\n+\t\t}\n \t    }\n \n \t  /* If the register is set or already dead at PLACE, we needn't do"}]}