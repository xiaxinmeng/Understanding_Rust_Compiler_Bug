{"sha": "67c55b229337d388a9f583e4b1e5e95392c7f01f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdjNTViMjI5MzM3ZDM4OGE5ZjU4M2U0YjFlNWU5NTM5MmM3ZjAxZg==", "commit": {"author": {"name": "Paul Brook", "email": "paul@codesourcery.com", "date": "2004-04-05T23:02:22Z"}, "committer": {"name": "Paul Brook", "email": "pbrook@gcc.gnu.org", "date": "2004-04-05T23:02:22Z"}, "message": "re PR c++/2123 (Array initializer)\n\n\tPR2123\n\t* g++.gd/expr/anew1.C: XFAIL and make reproducible.  Call abort on\n\tfailure and exit(0) on success.\n\t* g++.gd/expr/anew2.C: Ditto.\n\t* g++.gd/expr/anew3.C: Ditto.\n\t* g++.gd/expr/anew4.C: Ditto.\n\nFrom-SVN: r80440", "tree": {"sha": "910c2dbd54068ad191baa0fd53802f0a8dfdbf83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/910c2dbd54068ad191baa0fd53802f0a8dfdbf83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67c55b229337d388a9f583e4b1e5e95392c7f01f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67c55b229337d388a9f583e4b1e5e95392c7f01f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67c55b229337d388a9f583e4b1e5e95392c7f01f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67c55b229337d388a9f583e4b1e5e95392c7f01f/comments", "author": null, "committer": null, "parents": [{"sha": "268d3b183239c33181a6531b86b3ad911d56147d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/268d3b183239c33181a6531b86b3ad911d56147d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/268d3b183239c33181a6531b86b3ad911d56147d"}], "stats": {"total": 73, "additions": 57, "deletions": 16}, "files": [{"sha": "0fcc366c937cfb488bcee804c340105311795503", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c55b229337d388a9f583e4b1e5e95392c7f01f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c55b229337d388a9f583e4b1e5e95392c7f01f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=67c55b229337d388a9f583e4b1e5e95392c7f01f", "patch": "@@ -1,3 +1,12 @@\n+2004-04-05  Paul Brook  <paul@codesourcery.com>\n+\n+\tPR2123\n+\t* g++.gd/expr/anew1.C: XFAIL and make reproducible.  Call abort on\n+\tfailure and exit(0) on success.\n+\t* g++.gd/expr/anew2.C: Ditto.\n+\t* g++.gd/expr/anew3.C: Ditto.\n+\t* g++.gd/expr/anew4.C: Ditto. \n+\n 2004-04-05  Nathan Sidwell  <nathan@codesourcery.com>\n \n \tPR c++/3518"}, {"sha": "9e0d0ec601f9512c50426152307fc9c6cb9243f1", "filename": "gcc/testsuite/g++.dg/expr/anew1.C", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c55b229337d388a9f583e4b1e5e95392c7f01f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fanew1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c55b229337d388a9f583e4b1e5e95392c7f01f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fanew1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fanew1.C?ref=67c55b229337d388a9f583e4b1e5e95392c7f01f", "patch": "@@ -1,12 +1,20 @@\n-// { dg-do run }\n+// { dg-do run { xfail *-*-* } }\n+// XFAILed until PR2123 is fixed\n // PR 11228: array operator new, with zero-initialization and a variable sized array.\n // Regression test for PR \n // Author: Matt Austern <austern@apple.com>\n \n \n+#include <new>\n+#include <stdlib.h>\n+#include <string.h>\n+\n int* allocate(int n)\n {\n-  return new int[n]();\n+  void *p;\n+  p = malloc(n * sizeof (int));\n+  memset (p, 0xff, n * sizeof(int));\n+  return new (p) int[n]();\n }\n \n int main()\n@@ -15,6 +23,6 @@ int main()\n   int* p = allocate(n);\n   for (int i = 0; i < n; ++i)\n     if (p[i] != 0)\n-      return 1;\n-  return 0;\n+      abort ();\n+  exit (0);\n }"}, {"sha": "aa11eef149ca50057f8038bdc6f5bca0760f1264", "filename": "gcc/testsuite/g++.dg/expr/anew2.C", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c55b229337d388a9f583e4b1e5e95392c7f01f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fanew2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c55b229337d388a9f583e4b1e5e95392c7f01f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fanew2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fanew2.C?ref=67c55b229337d388a9f583e4b1e5e95392c7f01f", "patch": "@@ -1,12 +1,20 @@\n-// { dg-do run }\n+// { dg-do run { xfail *-*-* } }\n+// XFAILed until PR2123 is fixed\n // PR 11228: array operator new, with zero-initialization and a variable sized array.\n // Regression test for PR \n // Author: Matt Austern <austern@apple.com>\n \n \n+#include <new>\n+#include <stdlib.h>\n+#include <string.h>\n+\n double* allocate(int n)\n {\n-  return new double[n]();\n+  void *p;\n+  p = malloc(n * sizeof (double));\n+  memset (p, 0xff, n * sizeof(double));\n+  return new (p) double[n]();\n }\n \n int main()\n@@ -15,6 +23,6 @@ int main()\n   double* p = allocate(n);\n   for (int i = 0; i < n; ++i)\n     if (p[i] != 0.0)\n-      return 1;\n-  return 0;\n+      abort ();\n+  exit (0);\n }"}, {"sha": "c8ab44183ca5fa0a84347251b82de43719e7cfcf", "filename": "gcc/testsuite/g++.dg/expr/anew3.C", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c55b229337d388a9f583e4b1e5e95392c7f01f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fanew3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c55b229337d388a9f583e4b1e5e95392c7f01f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fanew3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fanew3.C?ref=67c55b229337d388a9f583e4b1e5e95392c7f01f", "patch": "@@ -1,8 +1,13 @@\n-// { dg-do run }\n+// { dg-do run { xfail *-*-* } }\n+// XFAILed until PR2123 is fixed\n // PR 11228: array operator new, with zero-initialization and a variable sized array.\n // Regression test for PR \n // Author: Matt Austern <austern@apple.com>\n \n+#include <new>\n+#include <stdlib.h>\n+#include <string.h>\n+\n struct X\n {\n   int a;\n@@ -11,7 +16,10 @@ struct X\n \n X* allocate(int n)\n {\n-  return new X[n]();\n+  void *p;\n+  p = malloc(n * sizeof (X));\n+  memset (p, 0xff, n * sizeof(X));\n+  return new (p) X[n]();\n }\n \n int main()\n@@ -20,6 +28,6 @@ int main()\n   X* p = allocate(n);\n   for (int i = 0; i < n; ++i)\n     if (p[i].a != 0 || p[i].b != 0.0)\n-      return 1;\n-  return 0;\n+      abort ();\n+  exit (0);\n }"}, {"sha": "d86d52514121768447eda7b542a0fe30c612ed87", "filename": "gcc/testsuite/g++.dg/expr/anew4.C", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c55b229337d388a9f583e4b1e5e95392c7f01f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fanew4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c55b229337d388a9f583e4b1e5e95392c7f01f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fanew4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fanew4.C?ref=67c55b229337d388a9f583e4b1e5e95392c7f01f", "patch": "@@ -1,8 +1,13 @@\n-// { dg-do run }\n+// { dg-do run { xfail *-*-* } }\n+// XFAILed until PR2123 is fixed\n // PR 11228: array operator new, with zero-initialization and a variable sized array.\n // Regression test for PR \n // Author: Matt Austern <austern@apple.com>\n \n+#include <new>\n+#include <stdlib.h>\n+#include <string.h>\n+\n struct B\n {\n   B();\n@@ -23,7 +28,10 @@ struct D : public B\n \n D* allocate(int n)\n {\n-  return new D[n]();\n+  void *p;\n+  p = malloc(n * sizeof (D));\n+  memset (p, 0xff, n * sizeof(D));\n+  return new (p) D[n]();\n }\n \n int main()\n@@ -32,6 +40,6 @@ int main()\n   D* p = allocate(n);\n   for (int i = 0; i < n; ++i)\n     if (p[i].n != 137 || p[i].x != 0)\n-      return 1;\n-  return 0;\n+      abort ();\n+  exit (0);\n }"}]}