{"sha": "dbd9f7c93235d87f9e10993eca014ca450b81852", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJkOWY3YzkzMjM1ZDg3ZjllMTA5OTNlY2EwMTRjYTQ1MGI4MTg1Mg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-04-12T16:12:50Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-04-12T16:12:50Z"}, "message": "Fix typo\n\nFrom-SVN: r33113", "tree": {"sha": "187adca7234b2c97d4f9f23a7040a0bff0d83946", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/187adca7234b2c97d4f9f23a7040a0bff0d83946"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbd9f7c93235d87f9e10993eca014ca450b81852", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbd9f7c93235d87f9e10993eca014ca450b81852", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbd9f7c93235d87f9e10993eca014ca450b81852", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbd9f7c93235d87f9e10993eca014ca450b81852/comments", "author": null, "committer": null, "parents": [{"sha": "aa7647ee68375317380cdbc2c208213a99f797de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa7647ee68375317380cdbc2c208213a99f797de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa7647ee68375317380cdbc2c208213a99f797de"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0c398b3feeb14612755ec9358de30419d7f5bca3", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbd9f7c93235d87f9e10993eca014ca450b81852/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbd9f7c93235d87f9e10993eca014ca450b81852/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=dbd9f7c93235d87f9e10993eca014ca450b81852", "patch": "@@ -3149,7 +3149,7 @@ build_delete (type, addr, auto_delete, flags, use_global_delete)\n       else\n \tpassed_auto_delete = auto_delete;\n \n-      expr = build_dtor_call (ref, passed_auto_delete, NULL_TREE, flags);\n+      expr = build_dtor_call (ref, passed_auto_delete, flags);\n       if (do_delete)\n \texpr = build (COMPOUND_EXPR, void_type_node, expr, do_delete);\n "}]}