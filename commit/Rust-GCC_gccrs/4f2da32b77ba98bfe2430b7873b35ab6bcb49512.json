{"sha": "4f2da32b77ba98bfe2430b7873b35ab6bcb49512", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGYyZGEzMmI3N2JhOThiZmUyNDMwYjc4NzNiMzVhYjZiY2I0OTUxMg==", "commit": {"author": {"name": "Kenneth Zadeck", "email": "zadeck@naturalbridge.com", "date": "2009-11-04T23:17:54Z"}, "committer": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2009-11-04T23:17:54Z"}, "message": "df-scan.c (df-uses-record): Add case zero_extract of mem.\n\n2009-11-04  Kenneth Zadeck  <zadeck@naturalbridge.com>\n\n\t* df-scan.c (df-uses-record): Add case zero_extract of mem.\n\nFrom-SVN: r153924", "tree": {"sha": "a3da37c593fe5498cc998681f5fb2a44272ca10f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3da37c593fe5498cc998681f5fb2a44272ca10f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f2da32b77ba98bfe2430b7873b35ab6bcb49512", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f2da32b77ba98bfe2430b7873b35ab6bcb49512", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f2da32b77ba98bfe2430b7873b35ab6bcb49512", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f2da32b77ba98bfe2430b7873b35ab6bcb49512/comments", "author": {"login": "zadeck", "id": 42682403, "node_id": "MDQ6VXNlcjQyNjgyNDAz", "avatar_url": "https://avatars.githubusercontent.com/u/42682403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zadeck", "html_url": "https://github.com/zadeck", "followers_url": "https://api.github.com/users/zadeck/followers", "following_url": "https://api.github.com/users/zadeck/following{/other_user}", "gists_url": "https://api.github.com/users/zadeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/zadeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zadeck/subscriptions", "organizations_url": "https://api.github.com/users/zadeck/orgs", "repos_url": "https://api.github.com/users/zadeck/repos", "events_url": "https://api.github.com/users/zadeck/events{/privacy}", "received_events_url": "https://api.github.com/users/zadeck/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cb5f2074802fe0ca5668b6ec3f86cbaf01840637", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb5f2074802fe0ca5668b6ec3f86cbaf01840637", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb5f2074802fe0ca5668b6ec3f86cbaf01840637"}], "stats": {"total": 25, "additions": 21, "deletions": 4}, "files": [{"sha": "905978d7bde3ca40e4de7f9b6323d328e645511d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f2da32b77ba98bfe2430b7873b35ab6bcb49512/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f2da32b77ba98bfe2430b7873b35ab6bcb49512/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f2da32b77ba98bfe2430b7873b35ab6bcb49512", "patch": "@@ -1,3 +1,7 @@\n+2009-11-04  Kenneth Zadeck  <zadeck@naturalbridge.com>\n+\n+\t* df-scan.c (df-uses-record): Add case zero_extract of mem.\n+\t\n 2009-11-04  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR target/10127"}, {"sha": "101234b55bc37b785794080d253a928e28bcd2d9", "filename": "gcc/df-scan.c", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f2da32b77ba98bfe2430b7873b35ab6bcb49512/gcc%2Fdf-scan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f2da32b77ba98bfe2430b7873b35ab6bcb49512/gcc%2Fdf-scan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-scan.c?ref=4f2da32b77ba98bfe2430b7873b35ab6bcb49512", "patch": "@@ -3248,10 +3248,23 @@ df_uses_record (enum df_ref_class cl, struct df_collection_rec *collection_rec,\n \t\t    width = INTVAL (XEXP (dst, 1));\n \t\t    offset = INTVAL (XEXP (dst, 2));\n \t\t    mode = GET_MODE (dst);\n-\t\t    df_uses_record (DF_REF_EXTRACT, collection_rec, &XEXP (dst, 0), \n-\t\t\t\tDF_REF_REG_USE, bb, insn_info, \n-\t\t\t\tDF_REF_READ_WRITE | DF_REF_ZERO_EXTRACT, \n-\t\t\t\twidth, offset, mode);\n+\t\t    if (GET_CODE (XEXP (dst,0)) == MEM)\n+\t\t      {\n+\t\t\t/* Handle the case of zero_extract(mem(...)) in the set dest.\n+\t\t\t   This special case is allowed only if the mem is a single byte and \n+\t\t\t   is useful to set a bitfield in memory.  */\n+\t\t\tdf_uses_record (DF_REF_EXTRACT, collection_rec, &XEXP (XEXP (dst,0), 0),\n+\t\t\t\t\tDF_REF_REG_MEM_STORE, bb, insn_info,\n+\t\t\t\t\tDF_REF_ZERO_EXTRACT,\n+\t\t\t\t\twidth, offset, mode);\n+\t\t      }\n+\t\t    else\n+\t\t      {\n+\t\t\tdf_uses_record (DF_REF_EXTRACT, collection_rec, &XEXP (dst, 0), \n+\t\t\t\t\tDF_REF_REG_USE, bb, insn_info, \n+\t\t\t\t\tDF_REF_READ_WRITE | DF_REF_ZERO_EXTRACT, \n+\t\t\t\t\twidth, offset, mode);\n+\t\t      }\n \t\t  }\n \t\telse \n \t\t  {"}]}