{"sha": "b26f6ed7b9a08fb2eaaeed16e6dc3c33b6bfd12e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjI2ZjZlZDdiOWEwOGZiMmVhYWVlZDE2ZTZkYzNjMzNiNmJmZDEyZQ==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2007-06-13T22:06:15Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2007-06-13T22:06:15Z"}, "message": "i386.c (override_options): If we've specified an arch then don't use TARGET_SUBTARGET_ISA_DEFAULTs.\n\n2007-06-13  Eric Christopher  <echristo@apple.com>\n\n        * config/i386/i386.c (override_options): If we've specified\n        an arch then don't use TARGET_SUBTARGET_ISA_DEFAULTs.\n\nFrom-SVN: r125685", "tree": {"sha": "fd89a9abe73d01a31f7e09264d0af59ecf88ccb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fd89a9abe73d01a31f7e09264d0af59ecf88ccb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b26f6ed7b9a08fb2eaaeed16e6dc3c33b6bfd12e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b26f6ed7b9a08fb2eaaeed16e6dc3c33b6bfd12e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b26f6ed7b9a08fb2eaaeed16e6dc3c33b6bfd12e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b26f6ed7b9a08fb2eaaeed16e6dc3c33b6bfd12e/comments", "author": null, "committer": null, "parents": [{"sha": "59be80716a573cde48aadcfeabefde101bdd4a26", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59be80716a573cde48aadcfeabefde101bdd4a26", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59be80716a573cde48aadcfeabefde101bdd4a26"}], "stats": {"total": 31, "additions": 21, "deletions": 10}, "files": [{"sha": "59247af9cc86cef5f491b3c0091fde7418f6148a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b26f6ed7b9a08fb2eaaeed16e6dc3c33b6bfd12e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b26f6ed7b9a08fb2eaaeed16e6dc3c33b6bfd12e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b26f6ed7b9a08fb2eaaeed16e6dc3c33b6bfd12e", "patch": "@@ -1,8 +1,13 @@\n+2007-06-13  Eric Christopher  <echristo@apple.com>\n+\n+\t* config/i386/i386.c (override_options): If we've specified\n+\tan arch then don't use TARGET_SUBTARGET_ISA_DEFAULTs.\n+\n 2007-06-13  Bob Wilson  <bob.wilson@acm.org>\n-\t\n+\n \t* df-scan.c (df_get_entry_block_def_set): Check if STATIC_CHAIN_REGNUM\n \tis defined.\n-\t\n+\n 2007-06-13  Bernd Schmidt  <bernd.schmidt@analog.com>\n \n \t* config/bfin/bfin.h (EH_RETURN_HANDLER_RTX): Use gen_frame_mem.\n@@ -141,7 +146,7 @@\n \tobject file.\n \t(make_gcov_file_name): Do not generate long names if input_name is\n \tNULL.\n-\t(output_lines): If merging results do not display graph, data and \n+\t(output_lines): If merging results do not display graph, data and\n \truns informations.\n \tChecking source file modification is done in find_source.\n \n@@ -178,11 +183,11 @@\n \tRequest walking the subtrees only, leaving the current is_lhs/val_only\n \tuntouched.\n \t(convert_non_local_reference): Likewise.\n-\t\n+\n 2007-06-12  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* config/m68k/m68k-devices.def (52221, 52223, 5253): New.\n-\t\n+\n 2007-06-12  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/15353\n@@ -226,7 +231,7 @@\n \tdf_process_deferred_rescans, df_notes_rescan): Fixed spelling of\n \tword \"deferred\".\n \t* df-core.c: Ditto.\n-\t\n+\n 2007-06-11  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* Merge dataflow-branch into mainline (see ChangeLog.dataflow)\n@@ -414,7 +419,7 @@\n \t(__divsi3, __umodsi3, __modsi3): Likewise.\n \t(__ashldi3, __ashrdi3, __lshrdi3): New.\n \t* config/xtensa/t-xtensa (LIB1ASMFUNCS): Add DImode shift functions.\n-\t\n+\n 2007-06-08  Harsha Jagasia <harsha.jagasia@amd.com>\n \t    Tony Linthicum <tony.linthicum@amd.com>\n \n@@ -456,7 +461,7 @@\n \t(vectorizable_load): Call vect_model_load_cost during analysis phase.\n \t(vectorizable_store): Call vect_model_store_cost during analysis phase.\n \t(vectorizable_call, vectorizable_assignment, vectorizable_operation,\n-\tvectorizable_promotion, vectorizable_demotion): Call \n+\tvectorizable_promotion, vectorizable_demotion): Call\n \tvect_model_simple_cost during analysis phase.\n \n 2007-06-08  Simon Baldwin  <simonb@google.com>\n@@ -502,7 +507,7 @@\n \tPR target/29953\n \t* config/sh/sh.md (doloop_end): New pattern and splitter.\n \t* loop-iv.c (simple_rhs_p): Check for hardware registers.\n-\t\n+\n 2007-06-08  Zdenek Dvorak  <dvorakz@suse.cz>\n \n \tPR middle-end/32209\n@@ -626,7 +631,7 @@\n \t* rtl.h (push_to_sequence2): New.\n \t* emit-rtl.c (push_to_sequence2): New.\n \t* function.c (assign_parm_data_all): Add new fields.\n-\t(assign_parm_setup_block): Call push_to_sequence2 instead of \n+\t(assign_parm_setup_block): Call push_to_sequence2 instead of\n \tpush_to_sequence.\n \t(assign_parm_setup_reg): Ditto.\n \t(assign_parm_setup_stack): Ditto."}, {"sha": "83e1262260fddee19eabe7435a539950f0738b42", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b26f6ed7b9a08fb2eaaeed16e6dc3c33b6bfd12e/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b26f6ed7b9a08fb2eaaeed16e6dc3c33b6bfd12e/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=b26f6ed7b9a08fb2eaaeed16e6dc3c33b6bfd12e", "patch": "@@ -1706,6 +1706,7 @@ override_options (void)\n {\n   int i;\n   int ix86_tune_defaulted = 0;\n+  int ix86_arch_specified = 0;\n   unsigned int ix86_arch_mask, ix86_tune_mask;\n \n   /* Comes from final.c -- no real reason to change it.  */\n@@ -1953,6 +1954,9 @@ override_options (void)\n \n   if (!ix86_arch_string)\n     ix86_arch_string = TARGET_64BIT ? \"x86-64\" : \"i386\";\n+  else\n+    ix86_arch_specified = 1;\n+  \n   if (!strcmp (ix86_arch_string, \"generic\"))\n     error (\"generic CPU can be used only for -mtune= switch\");\n   if (!strncmp (ix86_arch_string, \"generic\", 7))\n@@ -2230,6 +2234,7 @@ override_options (void)\n       /* Enable by default the SSE and MMX builtins.  Do allow the user to\n \t explicitly disable any of these.  In particular, disabling SSE and\n \t MMX for kernel code is extremely useful.  */\n+      if (!ix86_arch_specified)\n       ix86_isa_flags\n \t|= ((OPTION_MASK_ISA_SSE2 | OPTION_MASK_ISA_SSE | OPTION_MASK_ISA_MMX\n \t     | TARGET_SUBTARGET64_ISA_DEFAULT) & ~ix86_isa_flags_explicit);\n@@ -2241,6 +2246,7 @@ override_options (void)\n     {\n       target_flags |= TARGET_SUBTARGET32_DEFAULT & ~target_flags_explicit;\n \n+      if (!ix86_arch_specified)\n       ix86_isa_flags\n \t|= TARGET_SUBTARGET32_ISA_DEFAULT & ~ix86_isa_flags_explicit;\n "}]}