{"sha": "c41491973b05547236fe0bb82ae2419607c6f3ef", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQxNDkxOTczYjA1NTQ3MjM2ZmUwYmI4MmFlMjQxOTYwN2M2ZjNlZg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-02-18T12:56:15Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-02-18T12:56:15Z"}, "message": "re PR tree-optimization/89296 (tree copy-header masking uninitialized warning)\n\n2019-02-18  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/89296\n\t* tree-ssa-loop-ch.c (ch_base::copy_headers): Restrict setting\n\tof no-warning flag to cases that might emit the bogus warning.\n\n\t* gcc.dg/uninit-pr89296.c: New testcase.\n\nFrom-SVN: r268986", "tree": {"sha": "3628650112627d97bfe1a979978983c6ac2c71fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3628650112627d97bfe1a979978983c6ac2c71fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c41491973b05547236fe0bb82ae2419607c6f3ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c41491973b05547236fe0bb82ae2419607c6f3ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c41491973b05547236fe0bb82ae2419607c6f3ef", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c41491973b05547236fe0bb82ae2419607c6f3ef/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "022049403b80be13a495d8411aac2d0aacdf1a27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/022049403b80be13a495d8411aac2d0aacdf1a27", "html_url": "https://github.com/Rust-GCC/gccrs/commit/022049403b80be13a495d8411aac2d0aacdf1a27"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "bf74a0af23438dc3063d0b9e9bb0b604b96f9415", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c41491973b05547236fe0bb82ae2419607c6f3ef/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c41491973b05547236fe0bb82ae2419607c6f3ef/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c41491973b05547236fe0bb82ae2419607c6f3ef", "patch": "@@ -1,3 +1,9 @@\n+2019-02-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/89296\n+\t* tree-ssa-loop-ch.c (ch_base::copy_headers): Restrict setting\n+\tof no-warning flag to cases that might emit the bogus warning.\n+\n 2019-02-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR bootstrap/88714"}, {"sha": "2a68cf239218a35eea71d563d6ac028264ca86b8", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c41491973b05547236fe0bb82ae2419607c6f3ef/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c41491973b05547236fe0bb82ae2419607c6f3ef/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c41491973b05547236fe0bb82ae2419607c6f3ef", "patch": "@@ -1,3 +1,8 @@\n+2019-02-18  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/89296\n+\t* gcc.dg/uninit-pr89296.c: New testcase.\n+\n 2019-02-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/89369"}, {"sha": "9d81b32b9792586878eaf6e24ecfc65ea89fad9e", "filename": "gcc/testsuite/gcc.dg/uninit-pr89296.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c41491973b05547236fe0bb82ae2419607c6f3ef/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr89296.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c41491973b05547236fe0bb82ae2419607c6f3ef/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr89296.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Funinit-pr89296.c?ref=c41491973b05547236fe0bb82ae2419607c6f3ef", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -Wuninitialized\" } */\n+\n+int get_a_value ();\n+void printk(const char *);\n+void test_func()\n+{\n+    int loop;\n+    while (!loop) {             /* { dg-warning \"is used uninitialized\" } */\n+\tloop = get_a_value();\n+\tprintk(\"...\");\n+    }\n+}"}, {"sha": "f65e2b505675153295702e01366a90e04ef4087e", "filename": "gcc/tree-ssa-loop-ch.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c41491973b05547236fe0bb82ae2419607c6f3ef/gcc%2Ftree-ssa-loop-ch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c41491973b05547236fe0bb82ae2419607c6f3ef/gcc%2Ftree-ssa-loop-ch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-loop-ch.c?ref=c41491973b05547236fe0bb82ae2419607c6f3ef", "patch": "@@ -452,11 +452,23 @@ ch_base::copy_headers (function *fun)\n \t\t{\n \t\t  gimple *stmt = gsi_stmt (bsi);\n \t\t  if (gimple_code (stmt) == GIMPLE_COND)\n-\t\t    gimple_set_no_warning (stmt, true);\n+\t\t    {\n+\t\t      tree lhs = gimple_cond_lhs (stmt);\n+\t\t      if (gimple_cond_code (stmt) != EQ_EXPR\n+\t\t\t  && gimple_cond_code (stmt) != NE_EXPR\n+\t\t\t  && INTEGRAL_TYPE_P (TREE_TYPE (lhs))\n+\t\t\t  && TYPE_OVERFLOW_UNDEFINED (TREE_TYPE (lhs)))\n+\t\t\tgimple_set_no_warning (stmt, true);\n+\t\t    }\n \t\t  else if (is_gimple_assign (stmt))\n \t\t    {\n \t\t      enum tree_code rhs_code = gimple_assign_rhs_code (stmt);\n-\t\t      if (TREE_CODE_CLASS (rhs_code) == tcc_comparison)\n+\t\t      tree rhs1 = gimple_assign_rhs1 (stmt);\n+\t\t      if (TREE_CODE_CLASS (rhs_code) == tcc_comparison\n+\t\t\t  && rhs_code != EQ_EXPR\n+\t\t\t  && rhs_code != NE_EXPR\n+\t\t\t  && INTEGRAL_TYPE_P (TREE_TYPE (rhs1))\n+\t\t\t  && TYPE_OVERFLOW_UNDEFINED (TREE_TYPE (rhs1)))\n \t\t\tgimple_set_no_warning (stmt, true);\n \t\t    }\n \t\t}"}]}