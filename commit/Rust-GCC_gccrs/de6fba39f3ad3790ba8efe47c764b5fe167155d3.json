{"sha": "de6fba39f3ad3790ba8efe47c764b5fe167155d3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU2ZmJhMzlmM2FkMzc5MGJhOGVmZTQ3Yzc2NGI1ZmUxNjcxNTVkMw==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2014-11-21T15:33:27Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2014-11-21T15:33:27Z"}, "message": "re PR rtl-optimization/63952 (bootstrap failure (ICE in prepare_cmp_insn) on s390x in libjava)\n\n\tPR rtl-optimization/63952\n\t* optabs.c (prepare_cmp_insn): Do not call can_compare_p for CCmode.\n\t* config/s390/s390.md (\"cbranchcc4\"): Accept any s390_comparison.\n\tRemove incorrect TARGET_HARD_FLOAT check and no-op expander code.\n\nFrom-SVN: r217929", "tree": {"sha": "137a6922a0e69c0f98212f3b1b7adbf7f2e13d08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/137a6922a0e69c0f98212f3b1b7adbf7f2e13d08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de6fba39f3ad3790ba8efe47c764b5fe167155d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6fba39f3ad3790ba8efe47c764b5fe167155d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de6fba39f3ad3790ba8efe47c764b5fe167155d3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6fba39f3ad3790ba8efe47c764b5fe167155d3/comments", "author": null, "committer": null, "parents": [{"sha": "4190ea38047f64e87940fc747d108a6bfdaa809f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4190ea38047f64e87940fc747d108a6bfdaa809f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4190ea38047f64e87940fc747d108a6bfdaa809f"}], "stats": {"total": 25, "additions": 16, "deletions": 9}, "files": [{"sha": "9e0926120d020c49dea595de473c07e9941152f9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6fba39f3ad3790ba8efe47c764b5fe167155d3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6fba39f3ad3790ba8efe47c764b5fe167155d3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de6fba39f3ad3790ba8efe47c764b5fe167155d3", "patch": "@@ -1,3 +1,10 @@\n+2014-11-21  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n+\n+\tPR rtl-optimization/63952\n+\t* optabs.c (prepare_cmp_insn): Do not call can_compare_p for CCmode.\n+\t* config/s390/s390.md (\"cbranchcc4\"): Accept any s390_comparison.\n+\tRemove incorrect TARGET_HARD_FLOAT check and no-op expander code.\n+\n 2014-11-21  Ilya Tocar  <ilya.tocar@intel.com>\n \n \t* common/config/i386/i386-common.c (OPTION_MASK_ISA_AVX512IFMA_SET,"}, {"sha": "6ba6564746979e63efb7999f8a9803f7bc9300ea", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6fba39f3ad3790ba8efe47c764b5fe167155d3/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6fba39f3ad3790ba8efe47c764b5fe167155d3/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=de6fba39f3ad3790ba8efe47c764b5fe167155d3", "patch": "@@ -8142,16 +8142,13 @@\n \n (define_expand \"cbranchcc4\"\n   [(set (pc)\n-        (if_then_else (match_operator 0 \"s390_eqne_operator\"\n+        (if_then_else (match_operator 0 \"s390_comparison\"\n         \t       [(match_operand 1 \"cc_reg_operand\" \"\")\n-                        (match_operand 2 \"const0_operand\" \"\")])\n+                        (match_operand 2 \"const_int_operand\" \"\")])\n \t\t      (label_ref (match_operand 3 \"\" \"\"))\n                       (pc)))]\n-  \"TARGET_HARD_FLOAT\"\n-  \"s390_emit_jump (operands[3],\n-    s390_emit_compare (GET_CODE (operands[0]), operands[1], operands[2]));\n-   DONE;\")\n-\n+  \"\"\n+  \"\")\n \n \n ;;"}, {"sha": "f8d584eeeb11a2c19d8c8d887a0ff18aed5f56b4", "filename": "gcc/optabs.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6fba39f3ad3790ba8efe47c764b5fe167155d3/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6fba39f3ad3790ba8efe47c764b5fe167155d3/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=de6fba39f3ad3790ba8efe47c764b5fe167155d3", "patch": "@@ -4167,8 +4167,11 @@ prepare_cmp_insn (rtx x, rtx y, enum rtx_code comparison, rtx size,\n \n   if (GET_MODE_CLASS (mode) == MODE_CC)\n     {\n-      gcc_assert (can_compare_p (comparison, CCmode, ccp_jump));\n-      *ptest = gen_rtx_fmt_ee (comparison, VOIDmode, x, y);\n+      enum insn_code icode = optab_handler (cbranch_optab, CCmode);\n+      test = gen_rtx_fmt_ee (comparison, VOIDmode, x, y);\n+      gcc_assert (icode != CODE_FOR_nothing\n+                  && insn_operand_matches (icode, 0, test));\n+      *ptest = test;\n       return;\n     }\n "}]}