{"sha": "44689c1277c1dbe4cd31fc104b66187b8139bd5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ2ODljMTI3N2MxZGJlNGNkMzFmYzEwNGI2NjE4N2I4MTM5YmQ1Zg==", "commit": {"author": {"name": "Martin v. L\u00f6wis", "email": "loewis@informatik.hu-berlin.de", "date": "1999-03-17T00:28:43Z"}, "committer": {"name": "Martin v. L\u00f6wis", "email": "loewis@gcc.gnu.org", "date": "1999-03-17T00:28:43Z"}, "message": "parse.y (named_complex_class_head_sans_basetype): Do nothing for error_mark_node.\n\n\t* parse.y (named_complex_class_head_sans_basetype):\n\tDo nothing for error_mark_node.\n\t(maybe_base_class_list): Likewise.\n\t* decl.c (start_decl): Check for error_mark_node as a type.\n\tDetected by g++.brendan/array-refs.C.\n\t(start_decl_1): Likewise. Detected by g++.bugs/900322_01.C.\n\t(maybe_build_cleanup_1): Likewise. Detected by\n\tg++.jason/incomplete1.C.\n\t* tree.c (build_dummy_object): Use void_zero_node instead of the\n\terror_mark_node\n\t(is_dummy_object): Check for such a node.  Detected by\n\tg++.bob/inherit1.C\n\nFrom-SVN: r25812", "tree": {"sha": "97bd1caec07b315d4f5ce3649157de6268ef0b82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/97bd1caec07b315d4f5ce3649157de6268ef0b82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44689c1277c1dbe4cd31fc104b66187b8139bd5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44689c1277c1dbe4cd31fc104b66187b8139bd5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44689c1277c1dbe4cd31fc104b66187b8139bd5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44689c1277c1dbe4cd31fc104b66187b8139bd5f/comments", "author": null, "committer": null, "parents": [{"sha": "a4fe0b0995764a1c4aad964698c56a53f9b3fd2a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4fe0b0995764a1c4aad964698c56a53f9b3fd2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4fe0b0995764a1c4aad964698c56a53f9b3fd2a"}], "stats": {"total": 814, "additions": 423, "deletions": 391}, "files": [{"sha": "2e521b44c151129e271d65634098671df16803e3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44689c1277c1dbe4cd31fc104b66187b8139bd5f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44689c1277c1dbe4cd31fc104b66187b8139bd5f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=44689c1277c1dbe4cd31fc104b66187b8139bd5f", "patch": "@@ -1,3 +1,20 @@\n+1999-03-17  Martin von L\ufffdwis  <loewis@informatik.hu-berlin.de>\n+\n+\t* parse.y (named_complex_class_head_sans_basetype): \n+\tDo not push a scope for error_mark_node.\n+\t(maybe_base_class_list): Likewise.\n+\n+\t* decl.c (start_decl): Check for error_mark_node as a type.\n+\tDetected by g++.brendan/array-refs.C.\n+\t(start_decl_1): Likewise. Detected by g++.bugs/900322_01.C.\n+\t(maybe_build_cleanup_1): Likewise. Detected by\n+\tg++.jason/incomplete1.C.\n+\n+\t* tree.c (build_dummy_object): Use void_zero_node instead of the\n+\terror_mark_node\n+\t(is_dummy_object): Check for such a node.\n+\tDetected by g++.bob/inherit1.C\n+\n 1999-03-16  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* method.c (old_backref_index): Split out..."}, {"sha": "a416c2d7be9ca2df374a5b994c6dbb194b398903", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44689c1277c1dbe4cd31fc104b66187b8139bd5f/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44689c1277c1dbe4cd31fc104b66187b8139bd5f/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=44689c1277c1dbe4cd31fc104b66187b8139bd5f", "patch": "@@ -6873,6 +6873,9 @@ start_decl (declarator, declspecs, initialized, attributes, prefix_attributes)\n \n   type = TREE_TYPE (decl);\n \n+  if (type == error_mark_node)\n+    return NULL_TREE;\n+\n   /* Don't lose if destructors must be executed at file-level.  */\n   if (! processing_template_decl && TREE_STATIC (decl)\n       && TYPE_NEEDS_DESTRUCTOR (complete_type (type))\n@@ -7119,6 +7122,9 @@ start_decl_1 (decl)\n   tree type = TREE_TYPE (decl);\n   int initialized = (DECL_INITIAL (decl) != NULL_TREE);\n \n+  if (type == error_mark_node)\n+    return;\n+\n   /* If this type of object needs a cleanup, and control may\n      jump past it, make a new binding level so that it is cleaned\n      up only when it is initialized first.  */\n@@ -7133,9 +7139,7 @@ start_decl_1 (decl)\n     {\n       /* Don't allow initializations for incomplete types except for\n \t arrays which might be completed by the initialization.  */\n-      if (type == error_mark_node)\n-\t;\t\t\t/* Don't complain again.  */\n-      else if (TYPE_SIZE (complete_type (type)) != NULL_TREE)\n+      if (TYPE_SIZE (complete_type (type)) != NULL_TREE)\n \t;\t\t\t/* A complete type is ok.  */\n       else if (TREE_CODE (type) != ARRAY_TYPE)\n \t{\n@@ -14321,7 +14325,7 @@ maybe_build_cleanup_1 (decl, auto_delete)\n      tree decl, auto_delete;\n {\n   tree type = TREE_TYPE (decl);\n-  if (TYPE_NEEDS_DESTRUCTOR (type))\n+  if (type != error_mark_node && TYPE_NEEDS_DESTRUCTOR (type))\n     {\n       int temp = 0, flags = LOOKUP_NORMAL|LOOKUP_DESTRUCTOR;\n       tree rval;"}, {"sha": "35acd25a2ac1aa8e759da0b7cb4e6ecd7f14a537", "filename": "gcc/cp/parse.c", "status": "modified", "additions": 372, "deletions": 366, "changes": 738, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44689c1277c1dbe4cd31fc104b66187b8139bd5f/gcc%2Fcp%2Fparse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44689c1277c1dbe4cd31fc104b66187b8139bd5f/gcc%2Fcp%2Fparse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.c?ref=44689c1277c1dbe4cd31fc104b66187b8139bd5f", "patch": "@@ -693,44 +693,44 @@ static const short yyrline[] = { 0,\n   2099,  2103,  2107,  2114,  2118,  2121,  2124,  2130,  2142,  2144,\n   2147,  2167,  2169,  2172,  2174,  2179,  2181,  2183,  2185,  2187,\n   2189,  2193,  2201,  2204,  2206,  2210,  2216,  2221,  2226,  2228,\n-  2232,  2235,  2239,  2245,  2248,  2270,  2276,  2278,  2281,  2284,\n-  2286,  2290,  2292,  2296,  2301,  2307,  2310,  2311,  2332,  2355,\n-  2357,  2361,  2372,  2386,  2391,  2392,  2393,  2394,  2397,  2412,\n-  2417,  2423,  2425,  2430,  2432,  2434,  2436,  2438,  2440,  2443,\n-  2453,  2460,  2485,  2491,  2494,  2497,  2499,  2510,  2515,  2518,\n-  2523,  2526,  2533,  2543,  2546,  2553,  2563,  2565,  2568,  2570,\n-  2573,  2580,  2588,  2595,  2601,  2607,  2615,  2619,  2624,  2628,\n-  2631,  2640,  2642,  2646,  2649,  2654,  2658,  2664,  2675,  2678,\n-  2682,  2686,  2694,  2699,  2705,  2708,  2710,  2712,  2718,  2721,\n-  2723,  2725,  2727,  2731,  2734,  2752,  2762,  2764,  2765,  2769,\n-  2774,  2777,  2779,  2781,  2783,  2787,  2793,  2795,  2803,  2806,\n-  2808,  2810,  2812,  2816,  2819,  2822,  2824,  2826,  2828,  2832,\n-  2835,  2838,  2840,  2842,  2844,  2846,  2853,  2857,  2862,  2866,\n-  2871,  2873,  2877,  2880,  2882,  2885,  2887,  2888,  2891,  2893,\n-  2895,  2901,  2916,  2922,  2928,  2942,  2944,  2948,  2962,  2964,\n-  2966,  2970,  2976,  2989,  2991,  2995,  3008,  3014,  3016,  3017,\n-  3018,  3026,  3031,  3040,  3041,  3045,  3048,  3054,  3060,  3063,\n-  3065,  3067,  3069,  3073,  3077,  3081,  3084,  3089,  3092,  3094,\n-  3096,  3098,  3100,  3102,  3104,  3106,  3110,  3114,  3118,  3122,\n-  3123,  3125,  3127,  3129,  3131,  3133,  3135,  3137,  3139,  3147,\n-  3149,  3150,  3151,  3154,  3160,  3162,  3167,  3169,  3172,  3186,\n-  3189,  3192,  3196,  3199,  3206,  3208,  3211,  3213,  3215,  3218,\n-  3221,  3224,  3227,  3229,  3232,  3236,  3238,  3244,  3246,  3247,\n-  3249,  3254,  3256,  3258,  3260,  3262,  3265,  3266,  3268,  3271,\n-  3272,  3275,  3275,  3278,  3278,  3281,  3281,  3283,  3285,  3287,\n-  3289,  3295,  3301,  3304,  3307,  3313,  3315,  3317,  3321,  3323,\n-  3324,  3325,  3327,  3330,  3337,  3342,  3348,  3352,  3354,  3357,\n-  3359,  3362,  3366,  3368,  3371,  3373,  3376,  3393,  3399,  3407,\n-  3409,  3411,  3415,  3418,  3419,  3427,  3431,  3435,  3438,  3439,\n-  3445,  3448,  3451,  3453,  3457,  3462,  3465,  3475,  3480,  3481,\n-  3488,  3491,  3494,  3496,  3499,  3501,  3511,  3525,  3529,  3532,\n-  3534,  3538,  3542,  3545,  3548,  3550,  3554,  3556,  3563,  3570,\n-  3573,  3576,  3580,  3584,  3590,  3594,  3599,  3601,  3604,  3609,\n-  3615,  3626,  3629,  3631,  3635,  3640,  3642,  3649,  3652,  3654,\n-  3656,  3662,  3667,  3670,  3672,  3674,  3676,  3678,  3680,  3682,\n-  3684,  3686,  3688,  3690,  3692,  3694,  3696,  3698,  3700,  3702,\n-  3704,  3706,  3708,  3710,  3712,  3714,  3716,  3718,  3720,  3722,\n-  3724,  3726,  3728,  3730,  3732,  3735,  3737\n+  2232,  2235,  2239,  2245,  2251,  2276,  2282,  2284,  2287,  2290,\n+  2292,  2296,  2298,  2302,  2307,  2313,  2316,  2317,  2338,  2361,\n+  2363,  2367,  2378,  2392,  2397,  2398,  2399,  2400,  2403,  2418,\n+  2423,  2429,  2431,  2436,  2438,  2440,  2442,  2444,  2446,  2449,\n+  2459,  2466,  2491,  2497,  2500,  2503,  2505,  2516,  2521,  2524,\n+  2529,  2532,  2539,  2549,  2552,  2559,  2569,  2571,  2574,  2576,\n+  2579,  2586,  2594,  2601,  2607,  2613,  2621,  2625,  2630,  2634,\n+  2637,  2646,  2648,  2652,  2655,  2660,  2664,  2670,  2681,  2684,\n+  2688,  2692,  2700,  2705,  2711,  2714,  2716,  2718,  2724,  2727,\n+  2729,  2731,  2733,  2737,  2740,  2758,  2768,  2770,  2771,  2775,\n+  2780,  2783,  2785,  2787,  2789,  2793,  2799,  2801,  2809,  2812,\n+  2814,  2816,  2818,  2822,  2825,  2828,  2830,  2832,  2834,  2838,\n+  2841,  2844,  2846,  2848,  2850,  2852,  2859,  2863,  2868,  2872,\n+  2877,  2879,  2883,  2886,  2888,  2891,  2893,  2894,  2897,  2899,\n+  2901,  2907,  2922,  2928,  2934,  2948,  2950,  2954,  2968,  2970,\n+  2972,  2976,  2982,  2995,  2997,  3001,  3014,  3020,  3022,  3023,\n+  3024,  3032,  3037,  3046,  3047,  3051,  3054,  3060,  3066,  3069,\n+  3071,  3073,  3075,  3079,  3083,  3087,  3090,  3095,  3098,  3100,\n+  3102,  3104,  3106,  3108,  3110,  3112,  3116,  3120,  3124,  3128,\n+  3129,  3131,  3133,  3135,  3137,  3139,  3141,  3143,  3145,  3153,\n+  3155,  3156,  3157,  3160,  3166,  3168,  3173,  3175,  3178,  3192,\n+  3195,  3198,  3202,  3205,  3212,  3214,  3217,  3219,  3221,  3224,\n+  3227,  3230,  3233,  3235,  3238,  3242,  3244,  3250,  3252,  3253,\n+  3255,  3260,  3262,  3264,  3266,  3268,  3271,  3272,  3274,  3277,\n+  3278,  3281,  3281,  3284,  3284,  3287,  3287,  3289,  3291,  3293,\n+  3295,  3301,  3307,  3310,  3313,  3319,  3321,  3323,  3327,  3329,\n+  3330,  3331,  3333,  3336,  3343,  3348,  3354,  3358,  3360,  3363,\n+  3365,  3368,  3372,  3374,  3377,  3379,  3382,  3399,  3405,  3413,\n+  3415,  3417,  3421,  3424,  3425,  3433,  3437,  3441,  3444,  3445,\n+  3451,  3454,  3457,  3459,  3463,  3468,  3471,  3481,  3486,  3487,\n+  3494,  3497,  3500,  3502,  3505,  3507,  3517,  3531,  3535,  3538,\n+  3540,  3544,  3548,  3551,  3554,  3556,  3560,  3562,  3569,  3576,\n+  3579,  3582,  3586,  3590,  3596,  3600,  3605,  3607,  3610,  3615,\n+  3621,  3632,  3635,  3637,  3641,  3646,  3648,  3655,  3658,  3660,\n+  3662,  3668,  3673,  3676,  3678,  3680,  3682,  3684,  3686,  3688,\n+  3690,  3692,  3694,  3696,  3698,  3700,  3702,  3704,  3706,  3708,\n+  3710,  3712,  3714,  3716,  3718,  3720,  3722,  3724,  3726,  3728,\n+  3730,  3732,  3734,  3736,  3738,  3741,  3743\n };\n #endif\n \n@@ -3636,7 +3636,7 @@ static const short yycheck[] = {     4,\n     82,    83,    84\n };\n /* -*-C-*-  Note some compilers choke on comments on `#line' lines.  */\n-#line 3 \"/usr/lib/bison.simple\"\n+#line 3 \"/usr/local/share/bison.simple\"\n \n /* Skeleton output parser for bison,\n    Copyright (C) 1984, 1989, 1990 Free Software Foundation, Inc.\n@@ -3829,7 +3829,7 @@ __yy_memcpy (char *to, char *from, int count)\n #endif\n #endif\n \f\n-#line 196 \"/usr/lib/bison.simple\"\n+#line 196 \"/usr/local/share/bison.simple\"\n \n /* The user can define YYPARSE_PARAM as the name of an argument to be passed\n    into yyparse.  The argument should have type void *.\n@@ -6230,70 +6230,76 @@ case 503:\n     break;}\n case 504:\n #line 2246 \"parse.y\"\n-{ push_scope (CP_DECL_CONTEXT (yyvsp[0].ttype)); ;\n+{ \n+\t\t  if (yyvsp[0].ttype != error_mark_node)\n+\t\t    push_scope (CP_DECL_CONTEXT (yyvsp[0].ttype)); \n+\t\t;\n     break;}\n case 505:\n-#line 2248 \"parse.y\"\n+#line 2251 \"parse.y\"\n { \n-                  pop_scope (CP_DECL_CONTEXT (yyvsp[-2].ttype));\n-\t\t  yyval.ttype = TREE_TYPE (yyvsp[-2].ttype);\n-\t\t  if (current_aggr == union_type_node\n-\t\t      && TREE_CODE (yyval.ttype) != UNION_TYPE)\n-\t\t    cp_pedwarn (\"`union' tag used in declaring `%#T'\", yyval.ttype);\n-\t\t  else if (TREE_CODE (yyval.ttype) == UNION_TYPE\n-\t\t\t   && current_aggr != union_type_node)\n-\t\t    cp_pedwarn (\"non-`union' tag used in declaring `%#T'\", yyval.ttype);\n-\t\t  else if (TREE_CODE (yyval.ttype) == RECORD_TYPE)\n-\t\t    /* We might be specializing a template with a different\n-\t\t       class-key; deal.  */\n-\t\t    CLASSTYPE_DECLARED_CLASS (yyval.ttype) = (current_aggr\n-\t\t\t\t\t\t     == class_type_node);\n-\t\t  if (yyvsp[0].ttype)\n+\t\t  if (yyvsp[-2].ttype != error_mark_node)\n \t\t    {\n-\t\t      maybe_process_partial_specialization (yyval.ttype);\n-\t\t      xref_basetypes (current_aggr, yyvsp[-2].ttype, yyval.ttype, yyvsp[0].ttype); \n+\t\t      pop_scope (CP_DECL_CONTEXT (yyvsp[-2].ttype));\n+\t\t      yyval.ttype = TREE_TYPE (yyvsp[-2].ttype);\n+\t\t      if (current_aggr == union_type_node\n+\t\t\t  && TREE_CODE (yyval.ttype) != UNION_TYPE)\n+\t\t\tcp_pedwarn (\"`union' tag used in declaring `%#T'\", yyval.ttype);\n+\t\t      else if (TREE_CODE (yyval.ttype) == UNION_TYPE\n+\t\t\t       && current_aggr != union_type_node)\n+\t\t\tcp_pedwarn (\"non-`union' tag used in declaring `%#T'\", yyval.ttype);\n+\t\t      else if (TREE_CODE (yyval.ttype) == RECORD_TYPE)\n+\t\t\t/* We might be specializing a template with a different\n+\t\t\t   class-key; deal.  */\n+\t\t\tCLASSTYPE_DECLARED_CLASS (yyval.ttype) = (current_aggr\n+\t\t\t\t\t\t\t == class_type_node);\n+\t\t      if (yyvsp[0].ttype)\n+\t\t\t{\n+\t\t\t  maybe_process_partial_specialization (yyval.ttype);\n+\t\t\t  xref_basetypes (current_aggr, yyvsp[-2].ttype, yyval.ttype, yyvsp[0].ttype); \n+\t\t\t}\n \t\t    }\n \t\t;\n     break;}\n case 506:\n-#line 2272 \"parse.y\"\n+#line 2278 \"parse.y\"\n { yyval.ttype = xref_tag (yyval.ttype, make_anon_name (), 0);\n \t\t  yyungetc ('{', 1); ;\n     break;}\n case 509:\n-#line 2283 \"parse.y\"\n+#line 2289 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 510:\n-#line 2285 \"parse.y\"\n+#line 2291 \"parse.y\"\n { yyungetc(':', 1); yyval.ttype = NULL_TREE; ;\n     break;}\n case 511:\n-#line 2287 \"parse.y\"\n+#line 2293 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 513:\n-#line 2293 \"parse.y\"\n+#line 2299 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 514:\n-#line 2298 \"parse.y\"\n+#line 2304 \"parse.y\"\n { yyval.ttype = finish_base_specifier (access_default_node, yyvsp[0].ttype,\n \t\t\t\t\t      current_aggr \n \t\t\t\t\t      == signature_type_node); ;\n     break;}\n case 515:\n-#line 2302 \"parse.y\"\n+#line 2308 \"parse.y\"\n { yyval.ttype = finish_base_specifier (yyvsp[-2].ttype, yyvsp[0].ttype, \n \t\t\t\t\t      current_aggr \n \t\t\t\t\t      == signature_type_node); ;\n     break;}\n case 516:\n-#line 2309 \"parse.y\"\n+#line 2315 \"parse.y\"\n { if (yyval.ttype != error_mark_node) yyval.ttype = TYPE_MAIN_DECL (yyvsp[0].ttype); ;\n     break;}\n case 518:\n-#line 2312 \"parse.y\"\n+#line 2318 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6316,7 +6322,7 @@ case 518:\n \t\t;\n     break;}\n case 519:\n-#line 2333 \"parse.y\"\n+#line 2339 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6339,13 +6345,13 @@ case 519:\n \t\t;\n     break;}\n case 521:\n-#line 2358 \"parse.y\"\n+#line 2364 \"parse.y\"\n { if (yyvsp[-1].ttype != ridpointers[(int)RID_VIRTUAL])\n \t\t    cp_error (\"`%D' access\", yyvsp[-1].ttype);\n \t\t  yyval.ttype = access_default_virtual_node; ;\n     break;}\n case 522:\n-#line 2362 \"parse.y\"\n+#line 2368 \"parse.y\"\n {\n \t\t  if (yyvsp[-2].ttype != access_default_virtual_node)\n \t\t    error (\"multiple access specifiers\");\n@@ -6358,7 +6364,7 @@ case 522:\n \t\t;\n     break;}\n case 523:\n-#line 2373 \"parse.y\"\n+#line 2379 \"parse.y\"\n { if (yyvsp[-1].ttype != ridpointers[(int)RID_VIRTUAL])\n \t\t    cp_error (\"`%D' access\", yyvsp[-1].ttype);\n \t\t  else if (yyval.ttype == access_public_node)\n@@ -6372,11 +6378,11 @@ case 523:\n \t\t;\n     break;}\n case 524:\n-#line 2388 \"parse.y\"\n+#line 2394 \"parse.y\"\n { yyvsp[-1].ttype = begin_class_definition (yyvsp[-1].ttype); ;\n     break;}\n case 529:\n-#line 2399 \"parse.y\"\n+#line 2405 \"parse.y\"\n {\n \t\t  if (current_aggr == signature_type_node)\n \t\t    {\n@@ -6388,49 +6394,49 @@ case 529:\n                 ;\n     break;}\n case 530:\n-#line 2414 \"parse.y\"\n+#line 2420 \"parse.y\"\n { \n \t\t  finish_member_declaration (yyvsp[0].ttype);\n \t\t;\n     break;}\n case 531:\n-#line 2418 \"parse.y\"\n+#line 2424 \"parse.y\"\n { \n \t\t  finish_member_declaration (yyvsp[0].ttype);\n \t\t;\n     break;}\n case 533:\n-#line 2426 \"parse.y\"\n+#line 2432 \"parse.y\"\n { error (\"missing ';' before right brace\");\n \t\t  yyungetc ('}', 0); ;\n     break;}\n case 534:\n-#line 2431 \"parse.y\"\n+#line 2437 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 535:\n-#line 2433 \"parse.y\"\n+#line 2439 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 536:\n-#line 2435 \"parse.y\"\n+#line 2441 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 537:\n-#line 2437 \"parse.y\"\n+#line 2443 \"parse.y\"\n { yyval.ttype = finish_method (yyval.ttype); ;\n     break;}\n case 538:\n-#line 2439 \"parse.y\"\n+#line 2445 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 539:\n-#line 2441 \"parse.y\"\n+#line 2447 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype;\n \t\t  pedantic = yyvsp[-1].itype; ;\n     break;}\n case 540:\n-#line 2444 \"parse.y\"\n+#line 2450 \"parse.y\"\n {  \n \t\t  if (yyvsp[0].ttype)\n \t\t    yyval.ttype = finish_member_template_decl (yyvsp[0].ttype);\n@@ -6442,14 +6448,14 @@ case 540:\n \t\t;\n     break;}\n case 541:\n-#line 2454 \"parse.y\"\n+#line 2460 \"parse.y\"\n { \n \t\t  yyval.ttype = finish_member_class_template (yyvsp[-1].ftype.t); \n \t\t  finish_template_decl (yyvsp[-2].ttype);\n \t\t;\n     break;}\n case 542:\n-#line 2465 \"parse.y\"\n+#line 2471 \"parse.y\"\n {\n \t\t  /* Most of the productions for component_decl only\n \t\t     allow the creation of one new member, so we call\n@@ -6472,53 +6478,53 @@ case 542:\n \t\t;\n     break;}\n case 543:\n-#line 2486 \"parse.y\"\n+#line 2492 \"parse.y\"\n { \n \t\t  if (!yyvsp[0].itype)\n \t\t    grok_x_components (yyvsp[-1].ttype);\n \t\t  yyval.ttype = NULL_TREE; \n \t\t;\n     break;}\n case 544:\n-#line 2492 \"parse.y\"\n+#line 2498 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 545:\n-#line 2495 \"parse.y\"\n+#line 2501 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 546:\n-#line 2498 \"parse.y\"\n+#line 2504 \"parse.y\"\n { yyval.ttype = grokbitfield (NULL_TREE, NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 547:\n-#line 2500 \"parse.y\"\n+#line 2506 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 548:\n-#line 2511 \"parse.y\"\n+#line 2517 \"parse.y\"\n { tree specs, attrs;\n \t\t  split_specs_attrs (yyvsp[-4].ttype, &specs, &attrs);\n \t\t  yyval.ttype = grokfield (yyvsp[-3].ttype, specs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, attrs)); ;\n     break;}\n case 549:\n-#line 2516 \"parse.y\"\n+#line 2522 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, NULL_TREE, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, NULL_TREE)); ;\n     break;}\n case 550:\n-#line 2519 \"parse.y\"\n+#line 2525 \"parse.y\"\n { yyval.ttype = do_class_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 551:\n-#line 2525 \"parse.y\"\n+#line 2531 \"parse.y\"\n { yyval.itype = 0; ;\n     break;}\n case 552:\n-#line 2527 \"parse.y\"\n+#line 2533 \"parse.y\"\n { \n \t\t  if (PROCESSING_REAL_TEMPLATE_DECL_P ())\n \t\t    yyvsp[0].ttype = finish_member_template_decl (yyvsp[0].ttype);\n@@ -6527,7 +6533,7 @@ case 552:\n \t\t;\n     break;}\n case 553:\n-#line 2534 \"parse.y\"\n+#line 2540 \"parse.y\"\n { \n \t\t  check_multiple_declarators ();\n \t\t  if (PROCESSING_REAL_TEMPLATE_DECL_P ())\n@@ -6537,11 +6543,11 @@ case 553:\n \t\t;\n     break;}\n case 554:\n-#line 2545 \"parse.y\"\n+#line 2551 \"parse.y\"\n { yyval.itype = 0; ;\n     break;}\n case 555:\n-#line 2547 \"parse.y\"\n+#line 2553 \"parse.y\"\n { \n \t\t  if (PROCESSING_REAL_TEMPLATE_DECL_P ())\n \t\t    yyvsp[0].ttype = finish_member_template_decl (yyvsp[0].ttype);\n@@ -6550,7 +6556,7 @@ case 555:\n \t\t;\n     break;}\n case 556:\n-#line 2554 \"parse.y\"\n+#line 2560 \"parse.y\"\n { \n \t\t  check_multiple_declarators ();\n \t\t  if (PROCESSING_REAL_TEMPLATE_DECL_P ())\n@@ -6560,102 +6566,102 @@ case 556:\n \t\t;\n     break;}\n case 561:\n-#line 2575 \"parse.y\"\n+#line 2581 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 562:\n-#line 2581 \"parse.y\"\n+#line 2587 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 563:\n-#line 2590 \"parse.y\"\n+#line 2596 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 564:\n-#line 2596 \"parse.y\"\n+#line 2602 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 565:\n-#line 2602 \"parse.y\"\n+#line 2608 \"parse.y\"\n { split_specs_attrs (yyvsp[-4].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-4].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 566:\n-#line 2608 \"parse.y\"\n+#line 2614 \"parse.y\"\n { split_specs_attrs (yyvsp[-3].ttype, &current_declspecs,\n \t\t\t\t     &prefix_attributes);\n \t\t  yyvsp[-3].ttype = current_declspecs;\n \t\t  yyval.ttype = grokbitfield (NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 567:\n-#line 2617 \"parse.y\"\n+#line 2623 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 568:\n-#line 2620 \"parse.y\"\n+#line 2626 \"parse.y\"\n { yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 569:\n-#line 2626 \"parse.y\"\n+#line 2632 \"parse.y\"\n { yyval.ttype = grokfield (yyval.ttype, current_declspecs, yyvsp[0].ttype, yyvsp[-2].ttype,\n \t\t\t\t  build_tree_list (yyvsp[-1].ttype, prefix_attributes)); ;\n     break;}\n case 570:\n-#line 2629 \"parse.y\"\n+#line 2635 \"parse.y\"\n { yyval.ttype = grokbitfield (yyval.ttype, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 571:\n-#line 2632 \"parse.y\"\n+#line 2638 \"parse.y\"\n { yyval.ttype = grokbitfield (NULL_TREE, current_declspecs, yyvsp[-1].ttype);\n \t\t  cplus_decl_attributes (yyval.ttype, yyvsp[0].ttype, prefix_attributes); ;\n     break;}\n case 573:\n-#line 2643 \"parse.y\"\n+#line 2649 \"parse.y\"\n { TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype; yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 574:\n-#line 2648 \"parse.y\"\n+#line 2654 \"parse.y\"\n { yyval.ttype = build_enumerator (yyval.ttype, NULL_TREE, current_enum_type); ;\n     break;}\n case 575:\n-#line 2650 \"parse.y\"\n+#line 2656 \"parse.y\"\n { yyval.ttype = build_enumerator (yyval.ttype, yyvsp[0].ttype, current_enum_type); ;\n     break;}\n case 576:\n-#line 2656 \"parse.y\"\n+#line 2662 \"parse.y\"\n { yyval.ftype.t = build_decl_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 577:\n-#line 2659 \"parse.y\"\n+#line 2665 \"parse.y\"\n { yyval.ftype.t = build_decl_list (yyvsp[0].ftype.t, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 578:\n-#line 2666 \"parse.y\"\n+#line 2672 \"parse.y\"\n {\n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids array dimensions with parenthesized type in new\");\n@@ -6665,71 +6671,71 @@ case 578:\n \t\t;\n     break;}\n case 579:\n-#line 2677 \"parse.y\"\n+#line 2683 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 580:\n-#line 2679 \"parse.y\"\n+#line 2685 \"parse.y\"\n { yyval.ttype = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 581:\n-#line 2684 \"parse.y\"\n+#line 2690 \"parse.y\"\n { yyval.ftype.t = IDENTIFIER_AS_LIST (yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 582:\n-#line 2687 \"parse.y\"\n+#line 2693 \"parse.y\"\n { yyval.ftype.t = decl_tree_cons (NULL_TREE, yyvsp[0].ttype, yyvsp[-1].ftype.t); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 583:\n-#line 2696 \"parse.y\"\n+#line 2702 \"parse.y\"\n { yyval.itype = suspend_momentary (); ;\n     break;}\n case 584:\n-#line 2701 \"parse.y\"\n+#line 2707 \"parse.y\"\n { resume_momentary ((int) yyvsp[-1].itype); yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 585:\n-#line 2707 \"parse.y\"\n+#line 2713 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 586:\n-#line 2709 \"parse.y\"\n+#line 2715 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 587:\n-#line 2711 \"parse.y\"\n+#line 2717 \"parse.y\"\n { resume_momentary ((int) yyvsp[-1].itype); yyval.ttype = empty_parms (); ;\n     break;}\n case 588:\n-#line 2713 \"parse.y\"\n+#line 2719 \"parse.y\"\n { resume_momentary ((int) yyvsp[-3].itype); yyval.ttype = NULL_TREE; ;\n     break;}\n case 589:\n-#line 2720 \"parse.y\"\n+#line 2726 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 590:\n-#line 2722 \"parse.y\"\n+#line 2728 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 591:\n-#line 2724 \"parse.y\"\n+#line 2730 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 592:\n-#line 2726 \"parse.y\"\n+#line 2732 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 593:\n-#line 2728 \"parse.y\"\n+#line 2734 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 595:\n-#line 2736 \"parse.y\"\n+#line 2742 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -6748,7 +6754,7 @@ case 595:\n \t\t;\n     break;}\n case 596:\n-#line 2753 \"parse.y\"\n+#line 2759 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -6758,160 +6764,160 @@ case 596:\n \t\t;\n     break;}\n case 599:\n-#line 2766 \"parse.y\"\n+#line 2772 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 600:\n-#line 2771 \"parse.y\"\n+#line 2777 \"parse.y\"\n { yyval.ttype = get_type_decl (yyvsp[0].ttype); ;\n     break;}\n case 601:\n-#line 2776 \"parse.y\"\n+#line 2782 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 602:\n-#line 2778 \"parse.y\"\n+#line 2784 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 603:\n-#line 2780 \"parse.y\"\n+#line 2786 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 604:\n-#line 2782 \"parse.y\"\n+#line 2788 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 605:\n-#line 2784 \"parse.y\"\n+#line 2790 \"parse.y\"\n { push_nested_class (yyvsp[-1].ttype, 3);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype);\n \t\t  TREE_COMPLEXITY (yyval.ttype) = current_class_depth; ;\n     break;}\n case 608:\n-#line 2796 \"parse.y\"\n+#line 2802 \"parse.y\"\n {\n \t\t  /* Provide support for '(' attributes '*' declarator ')'\n \t\t     etc */\n \t\t  yyval.ttype = decl_tree_cons (yyvsp[-1].ttype, yyvsp[0].ttype, NULL_TREE);\n \t\t;\n     break;}\n case 609:\n-#line 2805 \"parse.y\"\n+#line 2811 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 610:\n-#line 2807 \"parse.y\"\n+#line 2813 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 611:\n-#line 2809 \"parse.y\"\n+#line 2815 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 612:\n-#line 2811 \"parse.y\"\n+#line 2817 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 613:\n-#line 2813 \"parse.y\"\n+#line 2819 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 615:\n-#line 2821 \"parse.y\"\n+#line 2827 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 616:\n-#line 2823 \"parse.y\"\n+#line 2829 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 617:\n-#line 2825 \"parse.y\"\n+#line 2831 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 618:\n-#line 2827 \"parse.y\"\n+#line 2833 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 619:\n-#line 2829 \"parse.y\"\n+#line 2835 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 621:\n-#line 2837 \"parse.y\"\n+#line 2843 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-2].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 622:\n-#line 2839 \"parse.y\"\n+#line 2845 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 623:\n-#line 2841 \"parse.y\"\n+#line 2847 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 624:\n-#line 2843 \"parse.y\"\n+#line 2849 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 625:\n-#line 2845 \"parse.y\"\n+#line 2851 \"parse.y\"\n { enter_scope_of (yyvsp[0].ttype); ;\n     break;}\n case 626:\n-#line 2847 \"parse.y\"\n+#line 2853 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  enter_scope_of (yyval.ttype);\n \t\t;\n     break;}\n case 627:\n-#line 2855 \"parse.y\"\n+#line 2861 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 628:\n-#line 2858 \"parse.y\"\n+#line 2864 \"parse.y\"\n { got_scope = NULL_TREE;\n  \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 629:\n-#line 2864 \"parse.y\"\n+#line 2870 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 630:\n-#line 2867 \"parse.y\"\n+#line 2873 \"parse.y\"\n { got_scope = NULL_TREE;\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 632:\n-#line 2874 \"parse.y\"\n+#line 2880 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 633:\n-#line 2879 \"parse.y\"\n+#line 2885 \"parse.y\"\n { yyval.ttype = build_functional_cast (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 634:\n-#line 2881 \"parse.y\"\n+#line 2887 \"parse.y\"\n { yyval.ttype = reparse_decl_as_expr (yyvsp[-3].ftype.t, yyvsp[-1].ttype); ;\n     break;}\n case 635:\n-#line 2883 \"parse.y\"\n+#line 2889 \"parse.y\"\n { yyval.ttype = reparse_absdcl_as_expr (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 640:\n-#line 2894 \"parse.y\"\n+#line 2900 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 641:\n-#line 2896 \"parse.y\"\n+#line 2902 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 642:\n-#line 2903 \"parse.y\"\n+#line 2909 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    {\n@@ -6927,31 +6933,31 @@ case 642:\n \t\t;\n     break;}\n case 643:\n-#line 2917 \"parse.y\"\n+#line 2923 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = TREE_TYPE (yyval.ttype);\n \t\t;\n     break;}\n case 644:\n-#line 2923 \"parse.y\"\n+#line 2929 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 645:\n-#line 2929 \"parse.y\"\n+#line 2935 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyvsp[-1].ttype)); ;\n     break;}\n case 647:\n-#line 2945 \"parse.y\"\n+#line 2951 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 648:\n-#line 2950 \"parse.y\"\n+#line 2956 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -6966,26 +6972,26 @@ case 648:\n \t\t;\n     break;}\n case 649:\n-#line 2963 \"parse.y\"\n+#line 2969 \"parse.y\"\n { yyval.ttype = TREE_TYPE (yyvsp[0].ttype); ;\n     break;}\n case 650:\n-#line 2965 \"parse.y\"\n+#line 2971 \"parse.y\"\n { yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 651:\n-#line 2967 \"parse.y\"\n+#line 2973 \"parse.y\"\n { yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[0].ttype); ;\n     break;}\n case 652:\n-#line 2972 \"parse.y\"\n+#line 2978 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    cp_error (\"`%T' is not a class or namespace\", yyvsp[0].ttype);\n \t\t;\n     break;}\n case 653:\n-#line 2977 \"parse.y\"\n+#line 2983 \"parse.y\"\n {\n \t\t  if (TREE_CODE_CLASS (TREE_CODE (yyvsp[-1].ttype)) == 't')\n \t\t    yyval.ttype = make_typename_type (yyvsp[-1].ttype, yyvsp[0].ttype);\n@@ -7000,15 +7006,15 @@ case 653:\n \t\t;\n     break;}\n case 654:\n-#line 2990 \"parse.y\"\n+#line 2996 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-2].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 655:\n-#line 2992 \"parse.y\"\n+#line 2998 \"parse.y\"\n { got_scope = yyval.ttype = make_typename_type (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 656:\n-#line 2997 \"parse.y\"\n+#line 3003 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyvsp[-1].ttype = lastiddecl;\n@@ -7022,31 +7028,31 @@ case 656:\n \t\t;\n     break;}\n case 657:\n-#line 3009 \"parse.y\"\n+#line 3015 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[-1].ttype) != IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype));\n \t\t;\n     break;}\n case 658:\n-#line 3015 \"parse.y\"\n+#line 3021 \"parse.y\"\n { got_scope = yyval.ttype = complete_type (TREE_TYPE (yyval.ttype)); ;\n     break;}\n case 661:\n-#line 3019 \"parse.y\"\n+#line 3025 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyval.ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = lastiddecl;\n \t\t  got_scope = yyval.ttype;\n \t\t;\n     break;}\n case 662:\n-#line 3028 \"parse.y\"\n+#line 3034 \"parse.y\"\n { yyval.ttype = build_min_nt (TEMPLATE_ID_EXPR, yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 663:\n-#line 3033 \"parse.y\"\n+#line 3039 \"parse.y\"\n {\n \t\t  if (TREE_CODE (yyvsp[0].ttype) == IDENTIFIER_NODE)\n \t\t    yyval.ttype = IDENTIFIER_GLOBAL_VALUE (yyvsp[0].ttype);\n@@ -7056,148 +7062,148 @@ case 663:\n \t\t;\n     break;}\n case 665:\n-#line 3042 \"parse.y\"\n+#line 3048 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 666:\n-#line 3047 \"parse.y\"\n+#line 3053 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 667:\n-#line 3049 \"parse.y\"\n+#line 3055 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; got_scope = NULL_TREE; ;\n     break;}\n case 668:\n-#line 3056 \"parse.y\"\n+#line 3062 \"parse.y\"\n { got_scope = void_type_node; ;\n     break;}\n case 669:\n-#line 3062 \"parse.y\"\n+#line 3068 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 670:\n-#line 3064 \"parse.y\"\n+#line 3070 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 671:\n-#line 3066 \"parse.y\"\n+#line 3072 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 672:\n-#line 3068 \"parse.y\"\n+#line 3074 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ttype, NULL_TREE); ;\n     break;}\n case 673:\n-#line 3070 \"parse.y\"\n+#line 3076 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 674:\n-#line 3074 \"parse.y\"\n+#line 3080 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 676:\n-#line 3083 \"parse.y\"\n+#line 3089 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 677:\n-#line 3085 \"parse.y\"\n+#line 3091 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 678:\n-#line 3091 \"parse.y\"\n+#line 3097 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 679:\n-#line 3093 \"parse.y\"\n+#line 3099 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 680:\n-#line 3095 \"parse.y\"\n+#line 3101 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 681:\n-#line 3097 \"parse.y\"\n+#line 3103 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 682:\n-#line 3099 \"parse.y\"\n+#line 3105 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 683:\n-#line 3101 \"parse.y\"\n+#line 3107 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, yyvsp[0].ttype); ;\n     break;}\n case 684:\n-#line 3103 \"parse.y\"\n+#line 3109 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[0].ftype.t, NULL_TREE); ;\n     break;}\n case 685:\n-#line 3105 \"parse.y\"\n+#line 3111 \"parse.y\"\n { yyval.ttype = make_reference_declarator (NULL_TREE, NULL_TREE); ;\n     break;}\n case 686:\n-#line 3107 \"parse.y\"\n+#line 3113 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[0].ttype, NULL_TREE);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-1].ttype, arg);\n \t\t;\n     break;}\n case 687:\n-#line 3111 \"parse.y\"\n+#line 3117 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 689:\n-#line 3120 \"parse.y\"\n+#line 3126 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 691:\n-#line 3124 \"parse.y\"\n+#line 3130 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 692:\n-#line 3126 \"parse.y\"\n+#line 3132 \"parse.y\"\n { yyval.ttype = make_call_declarator (yyval.ttype, empty_parms (), yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 693:\n-#line 3128 \"parse.y\"\n+#line 3134 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 694:\n-#line 3130 \"parse.y\"\n+#line 3136 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, yyval.ttype, NULL_TREE); ;\n     break;}\n case 695:\n-#line 3132 \"parse.y\"\n+#line 3138 \"parse.y\"\n { yyval.ttype = make_call_declarator (NULL_TREE, yyvsp[-3].ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 696:\n-#line 3134 \"parse.y\"\n+#line 3140 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 697:\n-#line 3136 \"parse.y\"\n+#line 3142 \"parse.y\"\n { set_quals_and_spec (yyval.ttype, yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 698:\n-#line 3138 \"parse.y\"\n+#line 3144 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, yyvsp[-1].ttype); ;\n     break;}\n case 699:\n-#line 3140 \"parse.y\"\n+#line 3146 \"parse.y\"\n { yyval.ttype = build_parse_node (ARRAY_REF, NULL_TREE, NULL_TREE); ;\n     break;}\n case 706:\n-#line 3163 \"parse.y\"\n+#line 3169 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids label declarations\"); ;\n     break;}\n case 709:\n-#line 3174 \"parse.y\"\n+#line 3180 \"parse.y\"\n { tree link;\n \t\t  for (link = yyvsp[-1].ttype; link; link = TREE_CHAIN (link))\n \t\t    {\n@@ -7208,266 +7214,266 @@ case 709:\n \t\t;\n     break;}\n case 710:\n-#line 3188 \"parse.y\"\n+#line 3194 \"parse.y\"\n {;\n     break;}\n case 712:\n-#line 3194 \"parse.y\"\n+#line 3200 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 713:\n-#line 3196 \"parse.y\"\n+#line 3202 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 714:\n-#line 3201 \"parse.y\"\n+#line 3207 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_if_stmt ();\n \t\t  cond_stmt_keyword = \"if\";\n \t\t;\n     break;}\n case 715:\n-#line 3206 \"parse.y\"\n+#line 3212 \"parse.y\"\n { finish_if_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 716:\n-#line 3208 \"parse.y\"\n+#line 3214 \"parse.y\"\n { yyval.ttype = finish_then_clause (yyvsp[-3].ttype); ;\n     break;}\n case 718:\n-#line 3213 \"parse.y\"\n+#line 3219 \"parse.y\"\n { yyval.ttype = begin_compound_stmt (0); ;\n     break;}\n case 719:\n-#line 3215 \"parse.y\"\n+#line 3221 \"parse.y\"\n { yyval.ttype = finish_compound_stmt (0, yyvsp[-1].ttype); ;\n     break;}\n case 720:\n-#line 3220 \"parse.y\"\n+#line 3226 \"parse.y\"\n {;\n     break;}\n case 722:\n-#line 3226 \"parse.y\"\n+#line 3232 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 723:\n-#line 3228 \"parse.y\"\n+#line 3234 \"parse.y\"\n { finish_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 724:\n-#line 3230 \"parse.y\"\n+#line 3236 \"parse.y\"\n { begin_else_clause (); ;\n     break;}\n case 725:\n-#line 3232 \"parse.y\"\n+#line 3238 \"parse.y\"\n { \n \t\t  finish_else_clause (yyvsp[-3].ttype); \n \t\t  finish_if_stmt ();\n \t\t;\n     break;}\n case 726:\n-#line 3237 \"parse.y\"\n+#line 3243 \"parse.y\"\n { finish_if_stmt (); ;\n     break;}\n case 727:\n-#line 3239 \"parse.y\"\n+#line 3245 \"parse.y\"\n {\n \t\t  yyval.ttype = begin_while_stmt ();\n \t\t  cond_stmt_keyword = \"while\";\n \t\t;\n     break;}\n case 728:\n-#line 3244 \"parse.y\"\n+#line 3250 \"parse.y\"\n { finish_while_stmt_cond (yyvsp[0].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 729:\n-#line 3246 \"parse.y\"\n+#line 3252 \"parse.y\"\n { finish_while_stmt (yyvsp[-3].ttype); ;\n     break;}\n case 730:\n-#line 3248 \"parse.y\"\n+#line 3254 \"parse.y\"\n { yyval.ttype = begin_do_stmt (); ;\n     break;}\n case 731:\n-#line 3250 \"parse.y\"\n+#line 3256 \"parse.y\"\n {\n \t\t  finish_do_body (yyvsp[-2].ttype);\n \t\t  cond_stmt_keyword = \"do\";\n \t\t;\n     break;}\n case 732:\n-#line 3255 \"parse.y\"\n+#line 3261 \"parse.y\"\n { finish_do_stmt (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 733:\n-#line 3257 \"parse.y\"\n+#line 3263 \"parse.y\"\n { yyval.ttype = begin_for_stmt (); ;\n     break;}\n case 734:\n-#line 3259 \"parse.y\"\n+#line 3265 \"parse.y\"\n { finish_for_init_stmt (yyvsp[-2].ttype); ;\n     break;}\n case 735:\n-#line 3261 \"parse.y\"\n+#line 3267 \"parse.y\"\n { finish_for_cond (yyvsp[-1].ttype, yyvsp[-5].ttype); ;\n     break;}\n case 736:\n-#line 3263 \"parse.y\"\n+#line 3269 \"parse.y\"\n { finish_for_expr (yyvsp[-1].ttype, yyvsp[-8].ttype); ;\n     break;}\n case 737:\n-#line 3265 \"parse.y\"\n+#line 3271 \"parse.y\"\n { finish_for_stmt (yyvsp[-3].ttype, yyvsp[-10].ttype); ;\n     break;}\n case 738:\n-#line 3267 \"parse.y\"\n+#line 3273 \"parse.y\"\n { begin_switch_stmt (); ;\n     break;}\n case 739:\n-#line 3269 \"parse.y\"\n+#line 3275 \"parse.y\"\n { yyval.ttype = finish_switch_cond (yyvsp[-1].ttype); ;\n     break;}\n case 740:\n-#line 3271 \"parse.y\"\n+#line 3277 \"parse.y\"\n { finish_switch_stmt (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 741:\n-#line 3273 \"parse.y\"\n+#line 3279 \"parse.y\"\n { finish_case_label (yyvsp[-1].ttype, NULL_TREE); ;\n     break;}\n case 743:\n-#line 3276 \"parse.y\"\n+#line 3282 \"parse.y\"\n { finish_case_label (yyvsp[-3].ttype, yyvsp[-1].ttype); ;\n     break;}\n case 745:\n-#line 3279 \"parse.y\"\n+#line 3285 \"parse.y\"\n { finish_case_label (NULL_TREE, NULL_TREE); ;\n     break;}\n case 747:\n-#line 3282 \"parse.y\"\n+#line 3288 \"parse.y\"\n { finish_break_stmt (); ;\n     break;}\n case 748:\n-#line 3284 \"parse.y\"\n+#line 3290 \"parse.y\"\n { finish_continue_stmt (); ;\n     break;}\n case 749:\n-#line 3286 \"parse.y\"\n+#line 3292 \"parse.y\"\n { finish_return_stmt (NULL_TREE); ;\n     break;}\n case 750:\n-#line 3288 \"parse.y\"\n+#line 3294 \"parse.y\"\n { finish_return_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 751:\n-#line 3290 \"parse.y\"\n+#line 3296 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 752:\n-#line 3296 \"parse.y\"\n+#line 3302 \"parse.y\"\n { \n \t\t  finish_asm_stmt (yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE,\n \t\t\t\t   NULL_TREE); \n \t\t;\n     break;}\n case 753:\n-#line 3302 \"parse.y\"\n+#line 3308 \"parse.y\"\n { finish_asm_stmt (yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype, NULL_TREE); ;\n     break;}\n case 754:\n-#line 3306 \"parse.y\"\n+#line 3312 \"parse.y\"\n { finish_asm_stmt (yyvsp[-10].ttype, yyvsp[-8].ttype, yyvsp[-6].ttype, yyvsp[-4].ttype, yyvsp[-2].ttype); ;\n     break;}\n case 755:\n-#line 3308 \"parse.y\"\n+#line 3314 \"parse.y\"\n { \n \t\t  if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids computed gotos\");\n \t\t  finish_goto_stmt (yyvsp[-1].ttype);\n \t\t;\n     break;}\n case 756:\n-#line 3314 \"parse.y\"\n+#line 3320 \"parse.y\"\n { finish_goto_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 757:\n-#line 3316 \"parse.y\"\n+#line 3322 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 758:\n-#line 3318 \"parse.y\"\n+#line 3324 \"parse.y\"\n { error (\"label must be followed by statement\");\n \t\t  yyungetc ('}', 0);\n \t\t  finish_stmt (); ;\n     break;}\n case 759:\n-#line 3322 \"parse.y\"\n+#line 3328 \"parse.y\"\n { finish_stmt (); ;\n     break;}\n case 762:\n-#line 3326 \"parse.y\"\n+#line 3332 \"parse.y\"\n { do_local_using_decl (yyvsp[0].ttype); ;\n     break;}\n case 764:\n-#line 3332 \"parse.y\"\n+#line 3338 \"parse.y\"\n {\n \t\t  if (! current_function_parms_stored)\n \t\t    store_parm_decls ();\n \t\t  expand_start_early_try_stmts ();\n \t\t;\n     break;}\n case 765:\n-#line 3338 \"parse.y\"\n+#line 3344 \"parse.y\"\n { \n                   expand_start_all_catch (); \n                 ;\n     break;}\n case 766:\n-#line 3342 \"parse.y\"\n+#line 3348 \"parse.y\"\n {\n \t\t  expand_end_all_catch ();\n \t\t  yyval.itype = yyvsp[-3].itype;\n \t\t;\n     break;}\n case 767:\n-#line 3350 \"parse.y\"\n+#line 3356 \"parse.y\"\n { yyval.ttype = begin_try_block (); ;\n     break;}\n case 768:\n-#line 3352 \"parse.y\"\n+#line 3358 \"parse.y\"\n { finish_try_block (yyvsp[-1].ttype); ;\n     break;}\n case 769:\n-#line 3354 \"parse.y\"\n+#line 3360 \"parse.y\"\n { finish_handler_sequence (yyvsp[-3].ttype); ;\n     break;}\n case 772:\n-#line 3364 \"parse.y\"\n+#line 3370 \"parse.y\"\n { yyval.ttype = begin_handler(); ;\n     break;}\n case 773:\n-#line 3366 \"parse.y\"\n+#line 3372 \"parse.y\"\n { finish_handler_parms (yyvsp[-1].ttype); ;\n     break;}\n case 774:\n-#line 3368 \"parse.y\"\n+#line 3374 \"parse.y\"\n { finish_handler (yyvsp[-3].ttype); ;\n     break;}\n case 777:\n-#line 3378 \"parse.y\"\n+#line 3384 \"parse.y\"\n { expand_start_catch_block (NULL_TREE, NULL_TREE); ;\n     break;}\n case 778:\n-#line 3394 \"parse.y\"\n+#line 3400 \"parse.y\"\n { check_for_new_type (\"inside exception declarations\", yyvsp[-1].ftype);\n \t\t  expand_start_catch_block (TREE_PURPOSE (yyvsp[-1].ftype.t),\n \t\t\t\t\t    TREE_VALUE (yyvsp[-1].ftype.t)); ;\n     break;}\n case 779:\n-#line 3401 \"parse.y\"\n+#line 3407 \"parse.y\"\n { tree label;\n \t\tdo_label:\n \t\t  label = define_label (input_filename, lineno, yyvsp[-1].ttype);\n@@ -7476,98 +7482,98 @@ case 779:\n \t\t;\n     break;}\n case 780:\n-#line 3408 \"parse.y\"\n+#line 3414 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 781:\n-#line 3410 \"parse.y\"\n+#line 3416 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 782:\n-#line 3412 \"parse.y\"\n+#line 3418 \"parse.y\"\n { goto do_label; ;\n     break;}\n case 783:\n-#line 3417 \"parse.y\"\n+#line 3423 \"parse.y\"\n { if (yyvsp[-1].ttype) cplus_expand_expr_stmt (yyvsp[-1].ttype); ;\n     break;}\n case 785:\n-#line 3420 \"parse.y\"\n+#line 3426 \"parse.y\"\n { if (pedantic)\n \t\t    pedwarn (\"ANSI C++ forbids compound statements inside for initializations\");\n \t\t;\n     break;}\n case 786:\n-#line 3429 \"parse.y\"\n+#line 3435 \"parse.y\"\n { emit_line_note (input_filename, lineno);\n \t\t  yyval.ttype = NULL_TREE; ;\n     break;}\n case 787:\n-#line 3432 \"parse.y\"\n+#line 3438 \"parse.y\"\n { emit_line_note (input_filename, lineno); ;\n     break;}\n case 788:\n-#line 3437 \"parse.y\"\n+#line 3443 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 790:\n-#line 3440 \"parse.y\"\n+#line 3446 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 791:\n-#line 3447 \"parse.y\"\n+#line 3453 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 794:\n-#line 3454 \"parse.y\"\n+#line 3460 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, yyvsp[0].ttype); ;\n     break;}\n case 795:\n-#line 3459 \"parse.y\"\n+#line 3465 \"parse.y\"\n { yyval.ttype = build_tree_list (yyval.ttype, yyvsp[-1].ttype); ;\n     break;}\n case 796:\n-#line 3464 \"parse.y\"\n+#line 3470 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyval.ttype, NULL_TREE); ;\n     break;}\n case 797:\n-#line 3466 \"parse.y\"\n+#line 3472 \"parse.y\"\n { yyval.ttype = tree_cons (NULL_TREE, yyvsp[0].ttype, yyval.ttype); ;\n     break;}\n case 798:\n-#line 3477 \"parse.y\"\n+#line 3483 \"parse.y\"\n {\n \t\t  yyval.ttype = empty_parms();\n \t\t;\n     break;}\n case 800:\n-#line 3482 \"parse.y\"\n+#line 3488 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE, yyvsp[0].ftype.t), 0);\n \t\t  check_for_new_type (\"inside parameter list\", yyvsp[0].ftype); ;\n     break;}\n case 801:\n-#line 3490 \"parse.y\"\n+#line 3496 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyval.ttype, 0); ;\n     break;}\n case 802:\n-#line 3492 \"parse.y\"\n+#line 3498 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 803:\n-#line 3495 \"parse.y\"\n+#line 3501 \"parse.y\"\n { yyval.ttype = finish_parmlist (yyvsp[-1].ttype, 1); ;\n     break;}\n case 804:\n-#line 3497 \"parse.y\"\n+#line 3503 \"parse.y\"\n { yyval.ttype = finish_parmlist (build_tree_list (NULL_TREE,\n \t\t\t\t\t\t\t yyvsp[-1].ftype.t), 1); ;\n     break;}\n case 805:\n-#line 3500 \"parse.y\"\n+#line 3506 \"parse.y\"\n { yyval.ttype = finish_parmlist (NULL_TREE, 1); ;\n     break;}\n case 806:\n-#line 3502 \"parse.y\"\n+#line 3508 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7579,7 +7585,7 @@ case 806:\n \t\t;\n     break;}\n case 807:\n-#line 3512 \"parse.y\"\n+#line 3518 \"parse.y\"\n {\n \t\t  /* This helps us recover from really nasty\n \t\t     parse errors, for example, a missing right\n@@ -7592,98 +7598,98 @@ case 807:\n \t\t;\n     break;}\n case 808:\n-#line 3527 \"parse.y\"\n+#line 3533 \"parse.y\"\n { maybe_snarf_defarg (); ;\n     break;}\n case 809:\n-#line 3529 \"parse.y\"\n+#line 3535 \"parse.y\"\n { yyval.ttype = yyvsp[0].ttype; ;\n     break;}\n case 812:\n-#line 3540 \"parse.y\"\n+#line 3546 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[0].ftype.t); ;\n     break;}\n case 813:\n-#line 3543 \"parse.y\"\n+#line 3549 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t); ;\n     break;}\n case 814:\n-#line 3546 \"parse.y\"\n+#line 3552 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[0].ftype);\n \t\t  yyval.ttype = chainon (yyval.ttype, yyvsp[0].ftype.t); ;\n     break;}\n case 815:\n-#line 3549 \"parse.y\"\n+#line 3555 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (NULL_TREE, yyvsp[0].ttype)); ;\n     break;}\n case 816:\n-#line 3551 \"parse.y\"\n+#line 3557 \"parse.y\"\n { yyval.ttype = chainon (yyval.ttype, build_tree_list (yyvsp[0].ttype, yyvsp[-2].ttype)); ;\n     break;}\n case 818:\n-#line 3557 \"parse.y\"\n+#line 3563 \"parse.y\"\n { check_for_new_type (\"in a parameter list\", yyvsp[-1].ftype);\n \t\t  yyval.ttype = build_tree_list (NULL_TREE, yyvsp[-1].ftype.t); ;\n     break;}\n case 819:\n-#line 3567 \"parse.y\"\n+#line 3573 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); ;\n     break;}\n case 820:\n-#line 3571 \"parse.y\"\n+#line 3577 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[-1].ftype.t, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 821:\n-#line 3574 \"parse.y\"\n+#line 3580 \"parse.y\"\n { yyval.ftype.t = build_tree_list (get_decl_list (yyvsp[-1].ftype.t), yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 822:\n-#line 3577 \"parse.y\"\n+#line 3583 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag; ;\n     break;}\n case 823:\n-#line 3581 \"parse.y\"\n+#line 3587 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[0].ftype.t);\n \t\t  yyval.ftype.t = build_tree_list (specs, NULL_TREE); \n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag; ;\n     break;}\n case 824:\n-#line 3585 \"parse.y\"\n+#line 3591 \"parse.y\"\n { tree specs = strip_attrs (yyvsp[-1].ttype);\n \t\t  yyval.ftype.t = build_tree_list (specs, yyvsp[0].ttype); \n \t\t  yyval.ftype.new_type_flag = 0; ;\n     break;}\n case 825:\n-#line 3592 \"parse.y\"\n+#line 3598 \"parse.y\"\n { yyval.ftype.t = build_tree_list (NULL_TREE, yyvsp[0].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[0].ftype.new_type_flag;  ;\n     break;}\n case 826:\n-#line 3595 \"parse.y\"\n+#line 3601 \"parse.y\"\n { yyval.ftype.t = build_tree_list (yyvsp[0].ttype, yyvsp[-1].ftype.t);\n \t\t  yyval.ftype.new_type_flag = yyvsp[-1].ftype.new_type_flag;  ;\n     break;}\n case 829:\n-#line 3606 \"parse.y\"\n+#line 3612 \"parse.y\"\n { see_typename (); ;\n     break;}\n case 830:\n-#line 3611 \"parse.y\"\n+#line 3617 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  yyval.ttype = build_tree_list (integer_type_node, NULL_TREE);\n \t\t;\n     break;}\n case 831:\n-#line 3616 \"parse.y\"\n+#line 3622 \"parse.y\"\n {\n \t\t  error (\"type specifier omitted for parameter\");\n \t\t  if (TREE_CODE (yyval.ttype) == SCOPE_REF\n@@ -7694,193 +7700,193 @@ case 831:\n \t\t;\n     break;}\n case 832:\n-#line 3628 \"parse.y\"\n+#line 3634 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 833:\n-#line 3630 \"parse.y\"\n+#line 3636 \"parse.y\"\n { yyval.ttype = yyvsp[-1].ttype; ;\n     break;}\n case 834:\n-#line 3632 \"parse.y\"\n+#line 3638 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, NULL_TREE); ;\n     break;}\n case 835:\n-#line 3637 \"parse.y\"\n+#line 3643 \"parse.y\"\n { yyval.ttype = build_decl_list (NULL_TREE, groktypename(yyvsp[0].ftype.t)); ;\n     break;}\n case 837:\n-#line 3643 \"parse.y\"\n+#line 3649 \"parse.y\"\n {\n \t\t  TREE_CHAIN (yyvsp[0].ttype) = yyval.ttype;\n \t\t  yyval.ttype = yyvsp[0].ttype;\n \t\t;\n     break;}\n case 838:\n-#line 3651 \"parse.y\"\n+#line 3657 \"parse.y\"\n { yyval.ttype = NULL_TREE; ;\n     break;}\n case 839:\n-#line 3653 \"parse.y\"\n+#line 3659 \"parse.y\"\n { yyval.ttype = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 840:\n-#line 3655 \"parse.y\"\n+#line 3661 \"parse.y\"\n { yyval.ttype = make_reference_declarator (yyvsp[-1].ttype, yyvsp[0].ttype); ;\n     break;}\n case 841:\n-#line 3657 \"parse.y\"\n+#line 3663 \"parse.y\"\n { tree arg = make_pointer_declarator (yyvsp[-1].ttype, yyvsp[0].ttype);\n \t\t  yyval.ttype = build_parse_node (SCOPE_REF, yyvsp[-2].ttype, arg);\n \t\t;\n     break;}\n case 842:\n-#line 3664 \"parse.y\"\n+#line 3670 \"parse.y\"\n { got_scope = NULL_TREE; ;\n     break;}\n case 843:\n-#line 3669 \"parse.y\"\n+#line 3675 \"parse.y\"\n { yyval.ttype = ansi_opname[MULT_EXPR]; ;\n     break;}\n case 844:\n-#line 3671 \"parse.y\"\n+#line 3677 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_DIV_EXPR]; ;\n     break;}\n case 845:\n-#line 3673 \"parse.y\"\n+#line 3679 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUNC_MOD_EXPR]; ;\n     break;}\n case 846:\n-#line 3675 \"parse.y\"\n+#line 3681 \"parse.y\"\n { yyval.ttype = ansi_opname[PLUS_EXPR]; ;\n     break;}\n case 847:\n-#line 3677 \"parse.y\"\n+#line 3683 \"parse.y\"\n { yyval.ttype = ansi_opname[MINUS_EXPR]; ;\n     break;}\n case 848:\n-#line 3679 \"parse.y\"\n+#line 3685 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_AND_EXPR]; ;\n     break;}\n case 849:\n-#line 3681 \"parse.y\"\n+#line 3687 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_IOR_EXPR]; ;\n     break;}\n case 850:\n-#line 3683 \"parse.y\"\n+#line 3689 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_XOR_EXPR]; ;\n     break;}\n case 851:\n-#line 3685 \"parse.y\"\n+#line 3691 \"parse.y\"\n { yyval.ttype = ansi_opname[BIT_NOT_EXPR]; ;\n     break;}\n case 852:\n-#line 3687 \"parse.y\"\n+#line 3693 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPOUND_EXPR]; ;\n     break;}\n case 853:\n-#line 3689 \"parse.y\"\n+#line 3695 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 854:\n-#line 3691 \"parse.y\"\n+#line 3697 \"parse.y\"\n { yyval.ttype = ansi_opname[LT_EXPR]; ;\n     break;}\n case 855:\n-#line 3693 \"parse.y\"\n+#line 3699 \"parse.y\"\n { yyval.ttype = ansi_opname[GT_EXPR]; ;\n     break;}\n case 856:\n-#line 3695 \"parse.y\"\n+#line 3701 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 857:\n-#line 3697 \"parse.y\"\n+#line 3703 \"parse.y\"\n { yyval.ttype = ansi_assopname[yyvsp[0].code]; ;\n     break;}\n case 858:\n-#line 3699 \"parse.y\"\n+#line 3705 \"parse.y\"\n { yyval.ttype = ansi_opname [MODIFY_EXPR]; ;\n     break;}\n case 859:\n-#line 3701 \"parse.y\"\n+#line 3707 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 860:\n-#line 3703 \"parse.y\"\n+#line 3709 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 861:\n-#line 3705 \"parse.y\"\n+#line 3711 \"parse.y\"\n { yyval.ttype = ansi_opname[POSTINCREMENT_EXPR]; ;\n     break;}\n case 862:\n-#line 3707 \"parse.y\"\n+#line 3713 \"parse.y\"\n { yyval.ttype = ansi_opname[PREDECREMENT_EXPR]; ;\n     break;}\n case 863:\n-#line 3709 \"parse.y\"\n+#line 3715 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ANDIF_EXPR]; ;\n     break;}\n case 864:\n-#line 3711 \"parse.y\"\n+#line 3717 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_ORIF_EXPR]; ;\n     break;}\n case 865:\n-#line 3713 \"parse.y\"\n+#line 3719 \"parse.y\"\n { yyval.ttype = ansi_opname[TRUTH_NOT_EXPR]; ;\n     break;}\n case 866:\n-#line 3715 \"parse.y\"\n+#line 3721 \"parse.y\"\n { yyval.ttype = ansi_opname[COND_EXPR]; ;\n     break;}\n case 867:\n-#line 3717 \"parse.y\"\n+#line 3723 \"parse.y\"\n { yyval.ttype = ansi_opname[yyvsp[0].code]; ;\n     break;}\n case 868:\n-#line 3719 \"parse.y\"\n+#line 3725 \"parse.y\"\n { yyval.ttype = ansi_opname[COMPONENT_REF]; ;\n     break;}\n case 869:\n-#line 3721 \"parse.y\"\n+#line 3727 \"parse.y\"\n { yyval.ttype = ansi_opname[MEMBER_REF]; ;\n     break;}\n case 870:\n-#line 3723 \"parse.y\"\n+#line 3729 \"parse.y\"\n { yyval.ttype = ansi_opname[CALL_EXPR]; ;\n     break;}\n case 871:\n-#line 3725 \"parse.y\"\n+#line 3731 \"parse.y\"\n { yyval.ttype = ansi_opname[ARRAY_REF]; ;\n     break;}\n case 872:\n-#line 3727 \"parse.y\"\n+#line 3733 \"parse.y\"\n { yyval.ttype = ansi_opname[NEW_EXPR]; ;\n     break;}\n case 873:\n-#line 3729 \"parse.y\"\n+#line 3735 \"parse.y\"\n { yyval.ttype = ansi_opname[DELETE_EXPR]; ;\n     break;}\n case 874:\n-#line 3731 \"parse.y\"\n+#line 3737 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_NEW_EXPR]; ;\n     break;}\n case 875:\n-#line 3733 \"parse.y\"\n+#line 3739 \"parse.y\"\n { yyval.ttype = ansi_opname[VEC_DELETE_EXPR]; ;\n     break;}\n case 876:\n-#line 3736 \"parse.y\"\n+#line 3742 \"parse.y\"\n { yyval.ttype = grokoptypename (yyvsp[-1].ftype.t, yyvsp[0].ttype); ;\n     break;}\n case 877:\n-#line 3738 \"parse.y\"\n+#line 3744 \"parse.y\"\n { yyval.ttype = ansi_opname[ERROR_MARK]; ;\n     break;}\n }\n    /* the action file gets copied in in place of this dollarsign */\n-#line 498 \"/usr/lib/bison.simple\"\n+#line 498 \"/usr/local/share/bison.simple\"\n \f\n   yyvsp -= yylen;\n   yyssp -= yylen;\n@@ -8076,7 +8082,7 @@ case 877:\n   yystate = yyn;\n   goto yynewstate;\n }\n-#line 3741 \"parse.y\"\n+#line 3747 \"parse.y\"\n \n \n #ifdef SPEW_DEBUG"}, {"sha": "8872d4c0bb80f5d2f1598c7ba15899c1e2861384", "filename": "gcc/cp/parse.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44689c1277c1dbe4cd31fc104b66187b8139bd5f/gcc%2Fcp%2Fparse.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44689c1277c1dbe4cd31fc104b66187b8139bd5f/gcc%2Fcp%2Fparse.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.h?ref=44689c1277c1dbe4cd31fc104b66187b8139bd5f", "patch": "@@ -87,4 +87,3 @@ typedef union {long itype; tree ttype; char *strtype; enum tree_code code; flagg\n \n \n extern YYSTYPE yylval;\n-#define YYEMPTY\t\t-2"}, {"sha": "30f60c7b6d02b9bda4cdb6ea1a16923fcf949429", "filename": "gcc/cp/parse.y", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44689c1277c1dbe4cd31fc104b66187b8139bd5f/gcc%2Fcp%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44689c1277c1dbe4cd31fc104b66187b8139bd5f/gcc%2Fcp%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparse.y?ref=44689c1277c1dbe4cd31fc104b66187b8139bd5f", "patch": "@@ -1,5 +1,5 @@\n /* YACC parser for C++ syntax.\n-   Copyright (C) 1988, 89, 93-97, 1998 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 89, 93-98, 1999 Free Software Foundation, Inc.\n    Hacked by Michael Tiemann (tiemann@cygnus.com)\n \n This file is part of GNU CC.\n@@ -2243,26 +2243,32 @@ named_class_head:\n                     xref_basetypes (current_aggr, $1, $<ttype>2, $3); \n \t\t}\n \t| named_complex_class_head_sans_basetype \n-                { push_scope (CP_DECL_CONTEXT ($1)); }\n+                { \n+\t\t  if ($1 != error_mark_node)\n+\t\t    push_scope (CP_DECL_CONTEXT ($1)); \n+\t\t}\n \t  maybe_base_class_list\n \t\t{ \n-                  pop_scope (CP_DECL_CONTEXT ($1));\n-\t\t  $$ = TREE_TYPE ($1);\n-\t\t  if (current_aggr == union_type_node\n-\t\t      && TREE_CODE ($$) != UNION_TYPE)\n-\t\t    cp_pedwarn (\"`union' tag used in declaring `%#T'\", $$);\n-\t\t  else if (TREE_CODE ($$) == UNION_TYPE\n-\t\t\t   && current_aggr != union_type_node)\n-\t\t    cp_pedwarn (\"non-`union' tag used in declaring `%#T'\", $$);\n-\t\t  else if (TREE_CODE ($$) == RECORD_TYPE)\n-\t\t    /* We might be specializing a template with a different\n-\t\t       class-key; deal.  */\n-\t\t    CLASSTYPE_DECLARED_CLASS ($$) = (current_aggr\n-\t\t\t\t\t\t     == class_type_node);\n-\t\t  if ($3)\n+\t\t  if ($1 != error_mark_node)\n \t\t    {\n-\t\t      maybe_process_partial_specialization ($$);\n-\t\t      xref_basetypes (current_aggr, $1, $$, $3); \n+\t\t      pop_scope (CP_DECL_CONTEXT ($1));\n+\t\t      $$ = TREE_TYPE ($1);\n+\t\t      if (current_aggr == union_type_node\n+\t\t\t  && TREE_CODE ($$) != UNION_TYPE)\n+\t\t\tcp_pedwarn (\"`union' tag used in declaring `%#T'\", $$);\n+\t\t      else if (TREE_CODE ($$) == UNION_TYPE\n+\t\t\t       && current_aggr != union_type_node)\n+\t\t\tcp_pedwarn (\"non-`union' tag used in declaring `%#T'\", $$);\n+\t\t      else if (TREE_CODE ($$) == RECORD_TYPE)\n+\t\t\t/* We might be specializing a template with a different\n+\t\t\t   class-key; deal.  */\n+\t\t\tCLASSTYPE_DECLARED_CLASS ($$) = (current_aggr\n+\t\t\t\t\t\t\t == class_type_node);\n+\t\t      if ($3)\n+\t\t\t{\n+\t\t\t  maybe_process_partial_specialization ($$);\n+\t\t\t  xref_basetypes (current_aggr, $1, $$, $3); \n+\t\t\t}\n \t\t    }\n \t\t}\n \t;"}, {"sha": "b1a8c4e92d44ae08cfcc4cc1b1bb7bfddaa10c0b", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44689c1277c1dbe4cd31fc104b66187b8139bd5f/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44689c1277c1dbe4cd31fc104b66187b8139bd5f/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=44689c1277c1dbe4cd31fc104b66187b8139bd5f", "patch": "@@ -2700,7 +2700,7 @@ tree\n build_dummy_object (type)\n      tree type;\n {\n-  tree decl = build1 (NOP_EXPR, build_pointer_type (type), error_mark_node);\n+  tree decl = build1 (NOP_EXPR, build_pointer_type (type), void_zero_node);\n   return build_indirect_ref (decl, NULL_PTR);\n }\n \n@@ -2743,7 +2743,7 @@ is_dummy_object (ob)\n   if (TREE_CODE (ob) == INDIRECT_REF)\n     ob = TREE_OPERAND (ob, 0);\n   return (TREE_CODE (ob) == NOP_EXPR\n-\t  && TREE_OPERAND (ob, 0) == error_mark_node);\n+\t  && TREE_OPERAND (ob, 0) == void_zero_node);\n }\n \n /* Returns 1 iff type T is a POD type, as defined in [basic.types].  */"}]}