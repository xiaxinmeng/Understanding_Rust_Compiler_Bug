{"sha": "ae01ced508fd6d5e9d624a6e225bef0741ebb736", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUwMWNlZDUwOGZkNmQ1ZTlkNjI0YTZlMjI1YmVmMDc0MWViYjczNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-02-24T20:13:57Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-02-24T20:13:57Z"}, "message": "re PR fortran/47878 (187.facerec miscompares)\n\n\tPR fortran/47878\n\t* io/transfer.c (read_sf): Call fbuf_getptr only at the end,\n\tand subtract n, dtp->u.p.sf_seen_eor and seen_comma from it.\n\n\t* gfortran.dg/pr47878.f90: New test.\n\nFrom-SVN: r170476", "tree": {"sha": "70db0376a7fb8a2f0f1238edba4f17781f849d1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70db0376a7fb8a2f0f1238edba4f17781f849d1a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae01ced508fd6d5e9d624a6e225bef0741ebb736", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae01ced508fd6d5e9d624a6e225bef0741ebb736", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae01ced508fd6d5e9d624a6e225bef0741ebb736", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae01ced508fd6d5e9d624a6e225bef0741ebb736/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "01bd5703f577e2c3331c27c623d7a37c85ca2ffa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01bd5703f577e2c3331c27c623d7a37c85ca2ffa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01bd5703f577e2c3331c27c623d7a37c85ca2ffa"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "5f8cd96b9bcb556c40d60d2f4656d201b5acfc6f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae01ced508fd6d5e9d624a6e225bef0741ebb736/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae01ced508fd6d5e9d624a6e225bef0741ebb736/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ae01ced508fd6d5e9d624a6e225bef0741ebb736", "patch": "@@ -1,3 +1,8 @@\n+2011-02-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/47878\n+\t* gfortran.dg/pr47878.f90: New test.\n+\n 2011-02-24  Richard Guenther  <rguenther@suse.de>\n \n \tPR testsuite/47801"}, {"sha": "9cc4a08603195f5c1ad87e45bad5593613671046", "filename": "gcc/testsuite/gfortran.dg/pr47878.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae01ced508fd6d5e9d624a6e225bef0741ebb736/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr47878.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae01ced508fd6d5e9d624a6e225bef0741ebb736/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr47878.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr47878.f90?ref=ae01ced508fd6d5e9d624a6e225bef0741ebb736", "patch": "@@ -0,0 +1,10 @@\n+! PR fortran/47878\n+! { dg-do run }\n+  integer :: a(5)\n+  open (99, recl = 40)\n+  write (99, '(5i3)') 1, 2, 3\n+  rewind (99)\n+  read (99, '(5i3)') a\n+  if (any (a.ne.(/1, 2, 3, 0, 0/))) call abort \n+  close (99, status = 'delete')\n+end"}, {"sha": "c7e1950b1c4c95d1c71276733fd70d7a51244a8c", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae01ced508fd6d5e9d624a6e225bef0741ebb736/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae01ced508fd6d5e9d624a6e225bef0741ebb736/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=ae01ced508fd6d5e9d624a6e225bef0741ebb736", "patch": "@@ -1,3 +1,9 @@\n+2011-02-24  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR fortran/47878\n+\t* io/transfer.c (read_sf): Call fbuf_getptr only at the end,\n+\tand subtract n, dtp->u.p.sf_seen_eor and seen_comma from it.\n+\n 2011-02-24  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR libfortran/47802"}, {"sha": "15f90e767aaa11e2d399858918a0a5d6adf2516d", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae01ced508fd6d5e9d624a6e225bef0741ebb736/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae01ced508fd6d5e9d624a6e225bef0741ebb736/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=ae01ced508fd6d5e9d624a6e225bef0741ebb736", "patch": "@@ -1,4 +1,4 @@\n-/* Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010\n+/* Copyright (C) 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n    Contributed by Andy Vaught\n    Namelist transfer functions contributed by Paul Thomas\n@@ -284,7 +284,6 @@ static char *\n read_sf (st_parameter_dt *dtp, int * length)\n {\n   static char *empty_string[0];\n-  char *base;\n   int q, q2;\n   int n, lorig, seen_comma;\n \n@@ -302,9 +301,6 @@ read_sf (st_parameter_dt *dtp, int * length)\n \n   /* Read data into format buffer and scan through it.  */\n   lorig = *length;\n-  base = fbuf_getptr (dtp->u.p.current_unit);\n-  if (base == NULL)\n-    return NULL;\n \n   while (n < *length)\n     {\n@@ -396,7 +392,12 @@ read_sf (st_parameter_dt *dtp, int * length)\n   if ((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0)\n     dtp->u.p.size_used += (GFC_IO_INT) n;\n \n-  return base;\n+  /* We can't call fbuf_getptr before the loop doing fbuf_getc, because\n+     fbuf_getc might reallocate the buffer.  So return current pointer\n+     minus all the advances, which is n plus up to two characters\n+     of newline or comma.  */\n+  return fbuf_getptr (dtp->u.p.current_unit)\n+\t - n - dtp->u.p.sf_seen_eor - seen_comma;\n }\n \n "}]}