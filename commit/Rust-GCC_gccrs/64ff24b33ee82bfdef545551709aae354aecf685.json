{"sha": "64ff24b33ee82bfdef545551709aae354aecf685", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjRmZjI0YjMzZWU4MmJmZGVmNTQ1NTUxNzA5YWFlMzU0YWVjZjY4NQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2012-12-20T08:13:21Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2012-12-20T08:13:21Z"}, "message": "re PR fortran/54818 (error: type mismatch in binary expression)\n\n2012-12-20  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/54818\n        * trans-intrinsic.c (gfc_conv_intrinsic_transfer): Ensure that\n        the string length is of type gfc_charlen_type_node.\n\n2012-12-20  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/54818\n        * gfortran.dg/transfer_intrinsic_4.f: New.\n\nFrom-SVN: r194628", "tree": {"sha": "5de530b655e61a697a99f2f57209b595f9a6e109", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5de530b655e61a697a99f2f57209b595f9a6e109"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/64ff24b33ee82bfdef545551709aae354aecf685", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64ff24b33ee82bfdef545551709aae354aecf685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/64ff24b33ee82bfdef545551709aae354aecf685", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/64ff24b33ee82bfdef545551709aae354aecf685/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d19a6672c9e798d7e5b18d4eabc355f2123ca2f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d19a6672c9e798d7e5b18d4eabc355f2123ca2f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d19a6672c9e798d7e5b18d4eabc355f2123ca2f0"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "5a72e8a8bdade41021acd54586023b1795372278", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64ff24b33ee82bfdef545551709aae354aecf685/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64ff24b33ee82bfdef545551709aae354aecf685/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=64ff24b33ee82bfdef545551709aae354aecf685", "patch": "@@ -1,3 +1,9 @@\n+2012-12-20  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54818\n+\t* trans-intrinsic.c (gfc_conv_intrinsic_transfer): Ensure that\n+\tthe string length is of type gfc_charlen_type_node.\n+\n 2012-12-19  Paul Thomas  <pault@gcc.gnu.org>\n \n \t* array.c (resolve_array_list): Apply C4106."}, {"sha": "b9d13ccaecd2e6376a48b69352d6ac0467c7bb2f", "filename": "gcc/fortran/trans-intrinsic.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64ff24b33ee82bfdef545551709aae354aecf685/gcc%2Ffortran%2Ftrans-intrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64ff24b33ee82bfdef545551709aae354aecf685/gcc%2Ffortran%2Ftrans-intrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-intrinsic.c?ref=64ff24b33ee82bfdef545551709aae354aecf685", "patch": "@@ -5662,7 +5662,7 @@ gfc_conv_intrinsic_transfer (gfc_se * se, gfc_expr * expr)\n       gfc_add_expr_to_block (&se->pre, tmp);\n \n       se->expr = tmpdecl;\n-      se->string_length = dest_word_len;\n+      se->string_length = fold_convert (gfc_charlen_type_node, dest_word_len);\n     }\n   else\n     {"}, {"sha": "5ff977cb1c05dd24a70607729c1be80df895ab93", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64ff24b33ee82bfdef545551709aae354aecf685/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64ff24b33ee82bfdef545551709aae354aecf685/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=64ff24b33ee82bfdef545551709aae354aecf685", "patch": "@@ -1,3 +1,8 @@\n+2012-12-20  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/54818\n+\t* gfortran.dg/transfer_intrinsic_4.f: New.\n+\n 2012-12-19  Paul Thomas  <pault@gcc.gnu.org>\n \n \t* gfortran.dg/unlimited_polymorphic_1.f03: New test."}, {"sha": "4173afdde1aef12ec17adf8c8ef8f10ac0d78ce0", "filename": "gcc/testsuite/gfortran.dg/transfer_intrinsic_4.f", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/64ff24b33ee82bfdef545551709aae354aecf685/gcc%2Ftestsuite%2Fgfortran.dg%2Ftransfer_intrinsic_4.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/64ff24b33ee82bfdef545551709aae354aecf685/gcc%2Ftestsuite%2Fgfortran.dg%2Ftransfer_intrinsic_4.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Ftransfer_intrinsic_4.f?ref=64ff24b33ee82bfdef545551709aae354aecf685", "patch": "@@ -0,0 +1,27 @@\n+! { dg-do compile }\n+!\n+! PR fortran/54818\n+!\n+! Contributed by  Scott Pakin\n+!\n+      subroutine broken ( name1, name2, bmix )\n+\n+      implicit none\n+\n+      integer, parameter :: i_knd  = kind( 1 )\n+      integer, parameter :: r_knd  = selected_real_kind( 13 )\n+\n+      character(len=8) :: dum\n+      character(len=8) :: blk\n+      real(r_knd), dimension(*) :: bmix, name1, name2\n+      integer(i_knd) :: j, idx1, n, i\n+      integer(i_knd), external :: nafix\n+\n+      write (*, 99002) name1(j),\n+     &     ( adjustl(\n+     &     transfer(name2(nafix(bmix(idx1+i),1)),dum)//blk\n+     &     //blk), bmix(idx1+i+1), i = 1, n, 2 )\n+\n+99002 format (' *', 10x, a8, 8x, 3(a24,1pe12.5,',',6x))\n+\n+      end subroutine broken"}]}