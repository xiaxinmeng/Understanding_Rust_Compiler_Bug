{"sha": "7771032e793152b7bb0ab1a9606e0d7383f8dcde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzc3MTAzMmU3OTMxNTJiN2JiMGFiMWE5NjA2ZTBkNzM4M2Y4ZGNkZQ==", "commit": {"author": {"name": "Dave Brolley", "email": "brolley@cygnus.com", "date": "1998-08-20T10:29:22Z"}, "committer": {"name": "Dave Brolley", "email": "brolley@gcc.gnu.org", "date": "1998-08-20T10:29:22Z"}, "message": "stor-layout.c (layout_type): Compute TYPE_SIZE_UNIT correctly for arrays of bits.\n\nThu Aug 20 13:15:11 1998  Dave Brolley  <brolley@cygnus.com>\n\t* stor-layout.c (layout_type): Compute TYPE_SIZE_UNIT correctly for\n\tarrays of bits.\n\t* cpplib.c (cpp_define): Handle macros with parameters.\n\nFrom-SVN: r21872", "tree": {"sha": "9ce1e3e1880ba47f3968473b011f4d1144753950", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ce1e3e1880ba47f3968473b011f4d1144753950"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7771032e793152b7bb0ab1a9606e0d7383f8dcde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7771032e793152b7bb0ab1a9606e0d7383f8dcde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7771032e793152b7bb0ab1a9606e0d7383f8dcde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7771032e793152b7bb0ab1a9606e0d7383f8dcde/comments", "author": null, "committer": null, "parents": [{"sha": "ee712d650b2b85b90fea38107993dde469f9a708", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee712d650b2b85b90fea38107993dde469f9a708", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee712d650b2b85b90fea38107993dde469f9a708"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "16292f4ea3aa78c6acc35b6b6effbc411bf5c288", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7771032e793152b7bb0ab1a9606e0d7383f8dcde/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7771032e793152b7bb0ab1a9606e0d7383f8dcde/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7771032e793152b7bb0ab1a9606e0d7383f8dcde", "patch": "@@ -1,3 +1,9 @@\n+Thu Aug 20 13:15:11 1998  Dave Brolley  <brolley@cygnus.com>\n+\n+\t* stor-layout.c (layout_type): Compute TYPE_SIZE_UNIT correctly for\n+\tarrays of bits.\n+\t* cpplib.c (cpp_define): Handle macros with parameters.\n+\n Wed Aug 19 21:33:19 1998  David Edelsohn  <edelsohn@mhpcc.edu>\n \n \t* rs6000.c (rs6000_output_load_toc_table): Use ld for 64-bit."}, {"sha": "b9ded523c1d022a92b81465fd547074cda852a21", "filename": "gcc/cpplib.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7771032e793152b7bb0ab1a9606e0d7383f8dcde/gcc%2Fcpplib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7771032e793152b7bb0ab1a9606e0d7383f8dcde/gcc%2Fcpplib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcpplib.c?ref=7771032e793152b7bb0ab1a9606e0d7383f8dcde", "patch": "@@ -534,6 +534,12 @@ cpp_define (pfile, str)\n     }\n   while (is_idchar[*++p])\n     ;\n+  if (*p == '(') {\n+    while (is_idchar[*++p] || *p == ',' || is_hor_space[*p])\n+      ;\n+    if (*p++ != ')')\n+      p = (U_CHAR *) str;\t\t\t/* Error */\n+  }\n   if (*p == 0)\n     {\n       buf = (U_CHAR *) alloca (p - buf + 4);"}, {"sha": "3c7cf23d7d37f3c59301ae34649fe874947a58c8", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7771032e793152b7bb0ab1a9606e0d7383f8dcde/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7771032e793152b7bb0ab1a9606e0d7383f8dcde/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=7771032e793152b7bb0ab1a9606e0d7383f8dcde", "patch": "@@ -834,8 +834,12 @@ layout_type (type)\n \t       size directly, rather than do some division thing below.\n \t       This optimization helps Fortran assumed-size arrays\n \t       (where the size of the array is determined at runtime)\n-\t       substantially.  */\n-\t    if (TYPE_SIZE_UNIT (element) != 0)\n+\t       substantially.\n+\t       Note that we can't do this in the case where the size of\n+\t       the elements is one bit since TYPE_SIZE_UNIT cannot be\n+\t       set correctly in that case.  */\n+\t    if (TYPE_SIZE_UNIT (element) != 0\n+\t\t&& element_size != integer_one_node)\n \t      {\n \t        TYPE_SIZE_UNIT (type)\n \t\t  = size_binop (MULT_EXPR, TYPE_SIZE_UNIT (element), length);"}]}