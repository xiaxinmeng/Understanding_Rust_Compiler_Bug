{"sha": "710465235b06be5b74b7fda1c8e2092b43d83e01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzEwNDY1MjM1YjA2YmU1Yjc0YjdmZGExYzhlMjA5MmI0M2Q4M2UwMQ==", "commit": {"author": {"name": "Dmitry Vyukov", "email": "dvyukov@google.com", "date": "2015-09-02T14:35:20Z"}, "committer": {"name": "Dmitry Vyukov", "email": "dvyukov@gcc.gnu.org", "date": "2015-09-02T14:35:20Z"}, "message": "libstdc++: fix data races in basic_string implementation\n\n        * include/bits/basic_string.h: Fix data races on _M_refcount.\n\nFrom-SVN: r227403", "tree": {"sha": "2c096aeba902ab17bf22e14e955a6fb2da815e01", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2c096aeba902ab17bf22e14e955a6fb2da815e01"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/710465235b06be5b74b7fda1c8e2092b43d83e01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/710465235b06be5b74b7fda1c8e2092b43d83e01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/710465235b06be5b74b7fda1c8e2092b43d83e01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/710465235b06be5b74b7fda1c8e2092b43d83e01/comments", "author": {"login": "dvyukov", "id": 1095328, "node_id": "MDQ6VXNlcjEwOTUzMjg=", "avatar_url": "https://avatars.githubusercontent.com/u/1095328?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dvyukov", "html_url": "https://github.com/dvyukov", "followers_url": "https://api.github.com/users/dvyukov/followers", "following_url": "https://api.github.com/users/dvyukov/following{/other_user}", "gists_url": "https://api.github.com/users/dvyukov/gists{/gist_id}", "starred_url": "https://api.github.com/users/dvyukov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dvyukov/subscriptions", "organizations_url": "https://api.github.com/users/dvyukov/orgs", "repos_url": "https://api.github.com/users/dvyukov/repos", "events_url": "https://api.github.com/users/dvyukov/events{/privacy}", "received_events_url": "https://api.github.com/users/dvyukov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7e4713f8872d775aebfcd7b342f799230552c373", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e4713f8872d775aebfcd7b342f799230552c373", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e4713f8872d775aebfcd7b342f799230552c373"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "9feeb55b91a78ad2391f7c8c335e2d2048c02004", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/710465235b06be5b74b7fda1c8e2092b43d83e01/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/710465235b06be5b74b7fda1c8e2092b43d83e01/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=710465235b06be5b74b7fda1c8e2092b43d83e01", "patch": "@@ -1,3 +1,7 @@\n+2015-09-02  Dmitry Vyukov  <dvyukov@google.com>\n+\n+\t* include/bits/basic_string.h: Fix data races on _M_refcount.\n+\n 2015-09-02  Sebastian Huber  <sebastian.huber@embedded-brains.de>\n \n \tPR libstdc++/67408"}, {"sha": "3ba6fc8fde545ecc9e618413234bd6073edde140", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/710465235b06be5b74b7fda1c8e2092b43d83e01/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/710465235b06be5b74b7fda1c8e2092b43d83e01/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=710465235b06be5b74b7fda1c8e2092b43d83e01", "patch": "@@ -2601,11 +2601,32 @@ _GLIBCXX_END_NAMESPACE_CXX11\n \n         bool\n \t_M_is_leaked() const _GLIBCXX_NOEXCEPT\n-        { return this->_M_refcount < 0; }\n+        {\n+#if defined(__GTHREADS)\n+          // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,\n+          // so we need to use an atomic load. However, _M_is_leaked\n+          // predicate does not change concurrently (i.e. the string is either\n+          // leaked or not), so a relaxed load is enough.\n+          return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;\n+#else\n+          return this->_M_refcount < 0;\n+#endif\n+        }\n \n         bool\n \t_M_is_shared() const _GLIBCXX_NOEXCEPT\n-        { return this->_M_refcount > 0; }\n+\t{\n+#if defined(__GTHREADS)\n+          // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,\n+          // so we need to use an atomic load. Another thread can drop last\n+          // but one reference concurrently with this check, so we need this\n+          // load to be acquire to synchronize with release fetch_and_add in\n+          // _M_dispose.\n+          return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;\n+#else\n+          return this->_M_refcount > 0;\n+#endif\n+        }\n \n         void\n \t_M_set_leaked() _GLIBCXX_NOEXCEPT\n@@ -2654,6 +2675,14 @@ _GLIBCXX_END_NAMESPACE_CXX11\n \t    {\n \t      // Be race-detector-friendly.  For more info see bits/c++config.\n \t      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);\n+              // Decrement of _M_refcount is acq_rel, because:\n+              // - all but last decrements need to release to synchronize with\n+              //   the last decrement that will delete the object.\n+              // - the last decrement needs to acquire to synchronize with\n+              //   all the previous decrements.\n+              // - last but one decrement needs to release to synchronize with\n+              //   the acquire load in _M_is_shared that will conclude that\n+              //   the object is not shared anymore.\n \t      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,\n \t\t\t\t\t\t\t -1) <= 0)\n \t\t{"}]}