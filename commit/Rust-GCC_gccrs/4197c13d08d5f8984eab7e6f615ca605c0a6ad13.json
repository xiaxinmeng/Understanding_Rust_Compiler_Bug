{"sha": "4197c13d08d5f8984eab7e6f615ca605c0a6ad13", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDE5N2MxM2QwOGQ1Zjg5ODRlYWI3ZTZmNjE1Y2E2MDVjMGE2YWQxMw==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-04-06T23:07:51Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-04-06T23:07:51Z"}, "message": "re PR libfortran/39664 (Revision 145571 breaks stdio)\n\n2009-04-06  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR libgfortran/39664\n\t* io/unix.c (raw_close): Don't close STDOUT_FILENO,\n\tSTDERR_FILENO nor STDIN_FILENO.\n\nFrom-SVN: r145636", "tree": {"sha": "92dbf267a9a5a57ff0a6436365b117a8cad0ad9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92dbf267a9a5a57ff0a6436365b117a8cad0ad9c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4197c13d08d5f8984eab7e6f615ca605c0a6ad13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4197c13d08d5f8984eab7e6f615ca605c0a6ad13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4197c13d08d5f8984eab7e6f615ca605c0a6ad13", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4197c13d08d5f8984eab7e6f615ca605c0a6ad13/comments", "author": null, "committer": null, "parents": [{"sha": "fe0a25ec79f35eb3ae2ecf31e4fd2ba91a6294fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe0a25ec79f35eb3ae2ecf31e4fd2ba91a6294fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe0a25ec79f35eb3ae2ecf31e4fd2ba91a6294fa"}], "stats": {"total": 47, "additions": 29, "deletions": 18}, "files": [{"sha": "b1a4e19f052bb8b11a349f165160ce8fa8efd578", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 23, "deletions": 17, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4197c13d08d5f8984eab7e6f615ca605c0a6ad13/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4197c13d08d5f8984eab7e6f615ca605c0a6ad13/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=4197c13d08d5f8984eab7e6f615ca605c0a6ad13", "patch": "@@ -1,3 +1,9 @@\n+2009-04-06  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR libgfortran/39664\n+\t* io/unix.c (raw_close): Don't close STDOUT_FILENO,\n+\tSTDERR_FILENO nor STDIN_FILENO.\n+\n 2009-04-06  David Edelsohn  <edelsohn@gnu.org>\n \t\n \t* io/io.h (struct stream): Rename truncate to trunc.\n@@ -14,7 +20,7 @@\n \n 2009-04-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n-        PR libfortran/37754\n+\tPR libfortran/37754\n \t* io/io.h (format_hash_entry): New structure for hash table.\n \t(format_hash_table): The hash table itself.\n \t(free_format_data): Revise function prototype.\n@@ -47,7 +53,7 @@\n \t\n 2009-04-05  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n-        PR libfortran/37754\n+\tPR libfortran/37754\n \t* io/transfer.c (formatted_transfer_scalar): Remove this function by\n \tfactoring it into two new functions, one for read and one for write,\n \teliminating all the conditionals for read or write mode.\n@@ -57,7 +63,7 @@\n \n 2009-04-05  Janne Blomqvist  <jb@gcc.gnu.org>\n \n-        PR libfortran/25561 libfortran/37754\n+\tPR libfortran/25561 libfortran/37754\n \t* io/io.h (struct stream): Define new stream interface function\n \tpointers, and inline functions for accessing it.\n \t(struct fbuf): Use int instead of size_t, remove flushed element.\n@@ -79,7 +85,7 @@\n \t(fbuf_read): New prototype.\n \t(fbuf_getc_refill): New prototype.\n \t(fbuf_getc): New inline function.\n-        * io/fbuf.c (fbuf_init): Use int, get rid of flushed.\n+\t* io/fbuf.c (fbuf_init): Use int, get rid of flushed.\n \t(fbuf_debug): New function.\n \t(fbuf_reset): Flush, and return position offset.\n \t(fbuf_alloc): Simplify, don't flush, just realloc.\n@@ -515,18 +521,18 @@\n \tPR libfortran/34670\n \t* intrinsics/reshape_generic.c:  Add bounds checking.\n \t* m4/reshape.m4:  Likewise.\n-        * generated/reshape_c10.c: Regenerated.\n-        * generated/reshape_c16.c: Regenerated.\n-        * generated/reshape_c4.c: Regenerated.\n-        * generated/reshape_c8.c: Regenerated.\n-        * generated/reshape_i16.c: Regenerated.\n-        * generated/reshape_i4.c: Regenerated.\n-        * generated/reshape_i8.c: Regenerated.\n-        * generated/reshape_r10.c: Regenerated.\n-        * generated/reshape_r16.c: Regenerated.\n-        * generated/reshape_r4.c: Regenerated.\n-        * generated/reshape_r8.c: Regenerated.\n-        * generated/spread_r4.c: Regenerated.\n+\t* generated/reshape_c10.c: Regenerated.\n+\t* generated/reshape_c16.c: Regenerated.\n+\t* generated/reshape_c4.c: Regenerated.\n+\t* generated/reshape_c8.c: Regenerated.\n+\t* generated/reshape_i16.c: Regenerated.\n+\t* generated/reshape_i4.c: Regenerated.\n+\t* generated/reshape_i8.c: Regenerated.\n+\t* generated/reshape_r10.c: Regenerated.\n+\t* generated/reshape_r16.c: Regenerated.\n+\t* generated/reshape_r4.c: Regenerated.\n+\t* generated/reshape_r8.c: Regenerated.\n+\t* generated/spread_r4.c: Regenerated.\n \n 2008-10-13  Jerry DeLisle  <jvdelisle@gcc.gnu.org\n \n@@ -550,7 +556,7 @@\n \tthan the sub-object.\n \n 2008-09-26  Peter O'Gorman  <pogma@thewrittenword.com>\n-            Steve Ellcey  <sje@cup.hp.com>\n+\t    Steve Ellcey  <sje@cup.hp.com>\n \n \t* configure: Regenerate for new libtool.\n \t* Makefile.in: Ditto."}, {"sha": "4f8cbb535c422ca68f014eea808fade3d218210c", "filename": "libgfortran/io/unix.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4197c13d08d5f8984eab7e6f615ca605c0a6ad13/libgfortran%2Fio%2Funix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4197c13d08d5f8984eab7e6f615ca605c0a6ad13/libgfortran%2Fio%2Funix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funix.c?ref=4197c13d08d5f8984eab7e6f615ca605c0a6ad13", "patch": "@@ -344,7 +344,12 @@ raw_close (unix_stream * s)\n {\n   int retval;\n   \n-  retval = close (s->fd);\n+  if (s->fd != STDOUT_FILENO\n+      && s->fd != STDERR_FILENO\n+      && s->fd != STDIN_FILENO)\n+    retval = close (s->fd);\n+  else\n+    retval = SUCCESS;\n   free_mem (s);\n   return retval;\n }"}]}