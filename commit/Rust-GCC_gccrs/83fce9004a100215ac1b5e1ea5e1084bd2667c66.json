{"sha": "83fce9004a100215ac1b5e1ea5e1084bd2667c66", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODNmY2U5MDA0YTEwMDIxNWFjMWI1ZTFlYTVlMTA4NGJkMjY2N2M2Ng==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-02-19T12:46:48Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-02-19T12:46:48Z"}, "message": "re PR tree-optimization/88074 (g++ hangs on math expression)\n\n2019-02-19  Richard Biener  <rguenther@suse.de>\n\n        PR middle-end/88074\n\t* toplev.c (do_compile): Initialize mpfr's exponent range\n\tbased on available float modes.\n\n\t* gcc.dg/pr88074.c: New testcase.\n\nFrom-SVN: r269015", "tree": {"sha": "f5ead5aa182afa6e2f6c8cbf55dc320c9ff25d6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5ead5aa182afa6e2f6c8cbf55dc320c9ff25d6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83fce9004a100215ac1b5e1ea5e1084bd2667c66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83fce9004a100215ac1b5e1ea5e1084bd2667c66", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83fce9004a100215ac1b5e1ea5e1084bd2667c66", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83fce9004a100215ac1b5e1ea5e1084bd2667c66/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "be200c5c41cd17948aca4932fe96aeae268c99fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be200c5c41cd17948aca4932fe96aeae268c99fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be200c5c41cd17948aca4932fe96aeae268c99fc"}], "stats": {"total": 49, "additions": 49, "deletions": 0}, "files": [{"sha": "3c9e17a5a97b04e560003ec769d7d02c7c77406c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83fce9004a100215ac1b5e1ea5e1084bd2667c66/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83fce9004a100215ac1b5e1ea5e1084bd2667c66/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=83fce9004a100215ac1b5e1ea5e1084bd2667c66", "patch": "@@ -1,3 +1,9 @@\n+2019-02-19  Richard Biener  <rguenther@suse.de>\n+\n+        PR middle-end/88074\n+\t* toplev.c (do_compile): Initialize mpfr's exponent range\n+\tbased on available float modes.\n+\n 2019-02-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* rtlanal.c (get_initial_register_offset): Fall back to the estimate"}, {"sha": "9e34716496a72000cb02b48ccb1c86ffebd034cf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83fce9004a100215ac1b5e1ea5e1084bd2667c66/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83fce9004a100215ac1b5e1ea5e1084bd2667c66/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=83fce9004a100215ac1b5e1ea5e1084bd2667c66", "patch": "@@ -1,3 +1,8 @@\n+2019-02-19  Richard Biener  <rguenther@suse.de>\n+\n+        PR middle-end/88074\n+\t* gcc.dg/pr88074.c: New testcase.\n+\n 2019-02-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/89303"}, {"sha": "9f64cc11424c90f7de6fd319ef745915d4d1c23b", "filename": "gcc/testsuite/gcc.dg/pr88074.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83fce9004a100215ac1b5e1ea5e1084bd2667c66/gcc%2Ftestsuite%2Fgcc.dg%2Fpr88074.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83fce9004a100215ac1b5e1ea5e1084bd2667c66/gcc%2Ftestsuite%2Fgcc.dg%2Fpr88074.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr88074.c?ref=83fce9004a100215ac1b5e1ea5e1084bd2667c66", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O\" } */\n+\n+#include <complex.h>\n+\n+int main()\n+{\n+  _Complex double x;\n+  __real x = 3.091e+8;\n+  __imag x = -4.045e+8;\n+  /* This used to spend huge amounts of compile-time inside mpc.  */\n+  volatile _Complex double y = ctan (x);\n+  return 0;\n+}"}, {"sha": "d8096ced677e8dc709fdd47dabfb5c8ab72e97f7", "filename": "gcc/toplev.c", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83fce9004a100215ac1b5e1ea5e1084bd2667c66/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83fce9004a100215ac1b5e1ea5e1084bd2667c66/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=83fce9004a100215ac1b5e1ea5e1084bd2667c66", "patch": "@@ -2153,6 +2153,30 @@ do_compile ()\n \telse\n \t  int_n_enabled_p[i] = false;\n \n+      /* Initialize mpfrs exponent range.  This is important to get\n+         underflow/overflow in a reasonable timeframe.  */\n+      machine_mode mode;\n+      int min_exp = -1;\n+      int max_exp = 1;\n+      FOR_EACH_MODE_IN_CLASS (mode, MODE_FLOAT)\n+\tif (SCALAR_FLOAT_MODE_P (mode))\n+\t  {\n+\t    const real_format *fmt = REAL_MODE_FORMAT (mode);\n+\t    if (fmt)\n+\t      {\n+\t\t/* fmt->emin - fmt->p + 1 should be enough but the\n+\t\t   back-and-forth dance in real_to_decimal_for_mode we\n+\t\t   do for checking fails due to rounding effects then.  */\n+\t\tif ((fmt->emin - fmt->p) < min_exp)\n+\t\t  min_exp = fmt->emin - fmt->p;\n+\t\tif (fmt->emax > max_exp)\n+\t\t  max_exp = fmt->emax;\n+\t      }\n+\t  }\n+      if (mpfr_set_emin (min_exp)\n+\t  || mpfr_set_emax (max_exp))\n+\tsorry (\"mpfr not configured to handle all float modes\");\n+\n       /* Set up the back-end if requested.  */\n       if (!no_backend)\n \tbackend_init ();"}]}