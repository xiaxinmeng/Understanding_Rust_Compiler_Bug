{"sha": "c221c627cb03585892bbcae2334c013b8fdf4b41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzIyMWM2MjdjYjAzNTg1ODkyYmJjYWUyMzM0YzAxM2I4ZmRmNGI0MQ==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain@sandoe.co.uk", "date": "2019-05-15T11:47:04Z"}, "committer": {"name": "Iain Sandoe", "email": "iains@gcc.gnu.org", "date": "2019-05-15T11:47:04Z"}, "message": "darwin, testsuite, powerpc - handle tests for new processors.\n\nIf we build Darwin with a modern assembler, then it might well\nrecognise insns that cannot be used on current Darwin systems.\n\nThe patch augments the tests for feature support for VSX,\npower8 and power9 to exclude Darwin even if the assembler can\nhandle the instructions.\n\n2019-05-15  Iain Sandoe  <iain@sandoe.co.uk>\n\n\t* lib/target-supports.exp \n\t(check_effective_target_powerpc_p8vector_ok): No support for Darwin.\n\t(check_effective_target_powerpc_p9vector_ok): Likewise.\n\t(check_effective_target_powerpc_float128_sw_ok): Likewise.\n\t(check_effective_target_powerpc_float128_hw_ok): Likewise.\n\t(check_effective_target_powerpc_vsx_ok): Likewise.\n\t* gcc.target/powerpc/bfp/bfp.exp: Don't try to run this for Darwin.\n\t* gcc.target/powerpc/dfp/dfp.exp: Likewise.\n\nFrom-SVN: r271205", "tree": {"sha": "c25ab3d9b8fbc0ae303a3ce3bccfbd90c17d1048", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c25ab3d9b8fbc0ae303a3ce3bccfbd90c17d1048"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c221c627cb03585892bbcae2334c013b8fdf4b41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c221c627cb03585892bbcae2334c013b8fdf4b41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c221c627cb03585892bbcae2334c013b8fdf4b41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c221c627cb03585892bbcae2334c013b8fdf4b41/comments", "author": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iains", "id": 4039407, "node_id": "MDQ6VXNlcjQwMzk0MDc=", "avatar_url": "https://avatars.githubusercontent.com/u/4039407?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iains", "html_url": "https://github.com/iains", "followers_url": "https://api.github.com/users/iains/followers", "following_url": "https://api.github.com/users/iains/following{/other_user}", "gists_url": "https://api.github.com/users/iains/gists{/gist_id}", "starred_url": "https://api.github.com/users/iains/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iains/subscriptions", "organizations_url": "https://api.github.com/users/iains/orgs", "repos_url": "https://api.github.com/users/iains/repos", "events_url": "https://api.github.com/users/iains/events{/privacy}", "received_events_url": "https://api.github.com/users/iains/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "595ffc073bf5b1753e3a18dfa704391ad5fad626", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/595ffc073bf5b1753e3a18dfa704391ad5fad626", "html_url": "https://github.com/Rust-GCC/gccrs/commit/595ffc073bf5b1753e3a18dfa704391ad5fad626"}], "stats": {"total": 53, "additions": 41, "deletions": 12}, "files": [{"sha": "e569939c65458c25bb1606cc09de845d452a4f61", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c221c627cb03585892bbcae2334c013b8fdf4b41/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c221c627cb03585892bbcae2334c013b8fdf4b41/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c221c627cb03585892bbcae2334c013b8fdf4b41", "patch": "@@ -1,3 +1,14 @@\n+2019-05-15  Iain Sandoe  <iain@sandoe.co.uk>\n+\n+\t* lib/target-supports.exp \n+\t(check_effective_target_powerpc_p8vector_ok): No support for Darwin.\n+\t(check_effective_target_powerpc_p9vector_ok): Likewise.\n+\t(check_effective_target_powerpc_float128_sw_ok): Likewise.\n+\t(check_effective_target_powerpc_float128_hw_ok): Likewise.\n+\t(check_effective_target_powerpc_vsx_ok): Likewise.\n+\t* gcc.target/powerpc/bfp/bfp.exp: Don't try to run this for Darwin.\n+\t* gcc.target/powerpc/dfp/dfp.exp: Likewise.\n+\n 2019-05-15  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* gcc.dg/pr87600.h: Add __POWERPC__ as an alternate test"}, {"sha": "ca6779af71d7e67f6f275f40ab9c0797f218b4a8", "filename": "gcc/testsuite/gcc.target/powerpc/bfp/bfp.exp", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c221c627cb03585892bbcae2334c013b8fdf4b41/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fbfp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c221c627cb03585892bbcae2334c013b8fdf4b41/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fbfp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fbfp%2Fbfp.exp?ref=c221c627cb03585892bbcae2334c013b8fdf4b41", "patch": "@@ -16,9 +16,11 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-# Exit immediately if this isn't a PowerPC target or if the target is aix.\n+# Exit immediately if this isn't a PowerPC target or if the target is\n+#\u00a0aix or Darwin.\n if { (![istarget powerpc*-*-*] && ![istarget rs6000-*-*])\n-     || [istarget \"powerpc*-*-aix*\"] } then {\n+     || [istarget \"powerpc*-*-aix*\"]\n+     || [istarget \"powerpc*-*-darwin*\"]  } then {\n   return\n }\n "}, {"sha": "ea0211a8d70a2d490f905a918c93e2d4327af163", "filename": "gcc/testsuite/gcc.target/powerpc/dfp/dfp.exp", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c221c627cb03585892bbcae2334c013b8fdf4b41/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdfp.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c221c627cb03585892bbcae2334c013b8fdf4b41/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdfp.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fdfp%2Fdfp.exp?ref=c221c627cb03585892bbcae2334c013b8fdf4b41", "patch": "@@ -16,8 +16,11 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-# Exit immediately if this isn't a PowerPC target.\n-if { ![istarget powerpc*-*-*] && ![istarget rs6000-*-*] } then {\n+# Exit immediately if this isn't a PowerPC target, also exit if we\n+# are on Darwin which doesn't support decimal float.\n+if { (![istarget powerpc*-*-*] && ![istarget rs6000-*-*])\n+    || [istarget \"powerpc*-*-darwin*\"]\n+} then {\n   return\n }\n "}, {"sha": "324a9fef96a37c2839f961aab34a3512bb3daf71", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c221c627cb03585892bbcae2334c013b8fdf4b41/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c221c627cb03585892bbcae2334c013b8fdf4b41/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=c221c627cb03585892bbcae2334c013b8fdf4b41", "patch": "@@ -5055,13 +5055,13 @@ proc check_effective_target_powerpc_p8vector_ok { } {\n \t     || [istarget powerpc*-*-aix5.2*] } {\n \t    return 0\n \t}\n+\t# Darwin doesn't run on power8, so far.\n+\tif { [istarget *-*-darwin*] } {\n+\t    return 0\n+\t}\n \treturn [check_no_compiler_messages powerpc_p8vector_ok object {\n \t    int main (void) {\n-#ifdef __MACH__\n-\t\tasm volatile (\"xxlorc vs0,vs0,vs0\");\n-#else\n \t\tasm volatile (\"xxlorc 0,0,0\");\n-#endif\n \t\treturn 0;\n \t    }\n \t} \"-mpower8-vector\"]\n@@ -5082,6 +5082,10 @@ proc check_effective_target_powerpc_p9vector_ok { } {\n \t     || [istarget powerpc*-*-aix5.2*] } {\n \t    return 0\n \t}\n+\t# Darwin doesn't run on power9, so far.\n+\tif { [istarget *-*-darwin*] } {\n+\t    return 0\n+\t}\n \treturn [check_no_compiler_messages powerpc_p9vector_ok object {\n \t    int main (void) {\n \t\tlong e = -1;\n@@ -5132,6 +5136,10 @@ proc check_effective_target_powerpc_float128_sw_ok { } {\n \t     || [istarget powerpc*-*-aix5.2*] } {\n \t    return 0\n \t}\n+\t# Darwin doesn't have VSX, so no soft support for float128.\n+\tif { [istarget *-*-darwin*] } {\n+\t    return 0\n+\t}\n \treturn [check_no_compiler_messages powerpc_float128_sw_ok object {\n \t\tvolatile __float128 x = 1.0q;\n \t\tvolatile __float128 y = 2.0q;\n@@ -5158,6 +5166,10 @@ proc check_effective_target_powerpc_float128_hw_ok { } {\n \t     || [istarget powerpc*-*-aix5.2*] } {\n \t    return 0\n \t}\n+\t# Darwin doesn't run on any machine with float128 h/w so far.\n+\tif { [istarget *-*-darwin*] } {\n+\t    return 0\n+\t}\n \treturn [check_no_compiler_messages powerpc_float128_hw_ok object {\n \t\tvolatile __float128 x = 1.0q;\n \t\tvolatile __float128 y = 2.0q;\n@@ -5214,13 +5226,14 @@ proc check_effective_target_powerpc_vsx_ok { } {\n \t     || [istarget powerpc*-*-aix6*] } {\n \t    return 0\n \t}\n+\t# Darwin doesn't have VSX, even if it's used with an assembler\n+\t#\u00a0which recognises the insns.\n+\tif { [istarget *-*-darwin*] } {\n+\t    return 0\n+\t}\n \treturn [check_no_compiler_messages powerpc_vsx_ok object {\n \t    int main (void) {\n-#ifdef __MACH__\n-\t\tasm volatile (\"xxlor vs0,vs0,vs0\");\n-#else\n \t\tasm volatile (\"xxlor 0,0,0\");\n-#endif\n \t\treturn 0;\n \t    }\n \t} \"-mvsx\"]"}]}