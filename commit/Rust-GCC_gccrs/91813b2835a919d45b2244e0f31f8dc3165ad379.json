{"sha": "91813b2835a919d45b2244e0f31f8dc3165ad379", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE4MTNiMjgzNWE5MTlkNDViMjI0NGUwZjMxZjhkYzMxNjVhZDM3OQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1999-03-19T08:50:14Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1999-03-19T08:50:14Z"}, "message": "Warning fixes:\n\n        * calls.c (initialize_argument_information): Mark parameters\n        `num_actuals' and `n_named_args' with ATTRIBUTE_UNUSED.\n        * dbxout.c (dbxout_start_new_source_file): Likewise for parameter\n        `filename'.\n        (dbxout_finish): Likewise for parameters `file' and `filename'.\n        (dbxout_prepare_symbol): Likewise for parameter `decl'.\n        (dbxout_begin_function): Likewise.\n        * explow.c (hard_function_value): Likewise for parameter `func'.\n        * function.c (locate_and_pad_parm): Likewise for parameter `fndecl'.\n        * expmed.c (expand_divmod): Omit unused argument to `expand_abs'.\n        * expr.c (expand_expr): Likewise.\n        * expr.h (expand_abs): Delete unused argument from prototype.\n        * optabs.c (expand_abs): Remove unused parameter `unsignedp'.\n        * sdbout.c (sdbout_init): Mark parameter `syms' with ATTRIBUTE_UNUSED.\n        (sdbout_end_block): Likewise for parameter `n'.\n        * toplev.c (debug_define): Likewise for parameters `lineno' and\n        `buffer'.\n        (debug_undef): Likewise.\n        * varasm.c (named_section): Likewise for parameter 'reloc'.\n        (assemble_external): Likewise for parameter `decl'.\n        (assemble_alias): Likewise for parameter `target'.\n\nFrom-SVN: r25858", "tree": {"sha": "d824bf4af7fa66f8308e7c315b05585e2503daf4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d824bf4af7fa66f8308e7c315b05585e2503daf4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91813b2835a919d45b2244e0f31f8dc3165ad379", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91813b2835a919d45b2244e0f31f8dc3165ad379", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91813b2835a919d45b2244e0f31f8dc3165ad379", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91813b2835a919d45b2244e0f31f8dc3165ad379/comments", "author": null, "committer": null, "parents": [{"sha": "c16c47fbf04fa8f4a89b78451c6c1db65feefba1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c16c47fbf04fa8f4a89b78451c6c1db65feefba1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c16c47fbf04fa8f4a89b78451c6c1db65feefba1"}], "stats": {"total": 80, "additions": 55, "deletions": 25}, "files": [{"sha": "bf6aa5c743d65fc59be3aa6447fa8a2b44a09e63", "filename": "gcc/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=91813b2835a919d45b2244e0f31f8dc3165ad379", "patch": "@@ -1,3 +1,34 @@\n+Fri Mar 19 11:19:31 1999  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* calls.c (initialize_argument_information): Mark parameters\n+\t`num_actuals' and `n_named_args' with ATTRIBUTE_UNUSED.\n+\n+\t* dbxout.c (dbxout_start_new_source_file): Likewise for parameter\n+\t`filename'.\n+\t(dbxout_finish): Likewise for parameters `file' and `filename'.\n+\t(dbxout_prepare_symbol): Likewise for parameter `decl'.\n+\t(dbxout_begin_function): Likewise.\n+\n+\t* explow.c (hard_function_value): Likewise for parameter `func'.\n+\n+\t* function.c (locate_and_pad_parm): Likewise for parameter `fndecl'.\n+\t\n+\t* expmed.c (expand_divmod): Omit unused argument to `expand_abs'.\n+\t* expr.c (expand_expr): Likewise.\n+\t* expr.h (expand_abs): Delete unused argument from prototype.\n+\t* optabs.c (expand_abs): Remove unused parameter `unsignedp'.\n+\n+\t* sdbout.c (sdbout_init): Mark parameter `syms' with ATTRIBUTE_UNUSED.\n+\t(sdbout_end_block): Likewise for parameter `n'.\n+\t\n+\t* toplev.c (debug_define): Likewise for parameters `lineno' and\n+\t`buffer'.\n+\t(debug_undef): Likewise.\n+\t\n+\t* varasm.c (named_section): Likewise for parameter 'reloc'.\n+\t(assemble_external): Likewise for parameter `decl'.\n+\t(assemble_alias): Likewise for parameter `target'.\n+\t\n Fri Mar 19 01:54:30 1999  Theodore Papadopoulo  <Theodore.Papadopoulo@sophia.inria.fr>\n \n \t* toplev.c (read_integral_parameter): Constify.  Better control of"}, {"sha": "af96b9b60fbf9a5c1100f092f90718b48a56a4f2", "filename": "gcc/calls.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=91813b2835a919d45b2244e0f31f8dc3165ad379", "patch": "@@ -868,10 +868,10 @@ initialize_argument_information (num_actuals, args, args_size, n_named_args,\n \t\t\t\t actparms, fndecl, args_so_far,\n \t\t\t\t reg_parm_stack_space, old_stack_level,\n \t\t\t\t old_pending_adj, must_preallocate, is_const)\n-     int num_actuals;\n+     int num_actuals ATTRIBUTE_UNUSED;\n      struct arg_data *args;\n      struct args_size *args_size;\n-     int n_named_args;\n+     int n_named_args ATTRIBUTE_UNUSED;\n      tree actparms;\n      tree fndecl;\n      CUMULATIVE_ARGS *args_so_far;"}, {"sha": "07122ecb97f0a7f3f4feea263481899b220a6405", "filename": "gcc/dbxout.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=91813b2835a919d45b2244e0f31f8dc3165ad379", "patch": "@@ -497,7 +497,7 @@ dbxout_typedefs (syms)\n \n void\n dbxout_start_new_source_file (filename)\n-     char *filename;\n+     char *filename ATTRIBUTE_UNUSED;\n {\n #ifdef DBX_USE_BINCL\n   struct dbx_file *n = (struct dbx_file *) xmalloc (sizeof *n);\n@@ -582,8 +582,8 @@ dbxout_source_line (file, filename, lineno)\n \n void\n dbxout_finish (file, filename)\n-     FILE *file;\n-     char *filename;\n+     FILE *file ATTRIBUTE_UNUSED;\n+     char *filename ATTRIBUTE_UNUSED;\n {\n #ifdef DBX_OUTPUT_MAIN_SOURCE_FILE_END\n   DBX_OUTPUT_MAIN_SOURCE_FILE_END (file, filename);\n@@ -2190,7 +2190,7 @@ dbxout_symbol_name (decl, suffix, letter)\n \n static void\n dbxout_prepare_symbol (decl)\n-     tree decl;\n+     tree decl ATTRIBUTE_UNUSED;\n {\n #ifdef WINNING_GDB\n   char *filename = DECL_SOURCE_FILE (decl);\n@@ -2683,7 +2683,7 @@ dbxout_really_begin_function (decl)\n \n void\n dbxout_begin_function (decl)\n-     tree decl;\n+     tree decl ATTRIBUTE_UNUSED;\n {\n #ifdef DBX_FUNCTION_FIRST\n   dbxout_really_begin_function (decl);"}, {"sha": "1c9280232660ccc0bbaebb12894a4107eb8b07fc", "filename": "gcc/explow.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Fexplow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Fexplow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexplow.c?ref=91813b2835a919d45b2244e0f31f8dc3165ad379", "patch": "@@ -1468,7 +1468,7 @@ probe_stack_range (first, size)\n rtx\n hard_function_value (valtype, func)\n      tree valtype;\n-     tree func;\n+     tree func ATTRIBUTE_UNUSED;\n {\n   rtx val = FUNCTION_VALUE (valtype, func);\n   if (GET_CODE (val) == REG"}, {"sha": "c0f0668a89c213801686ef70598a0b792d0a5c70", "filename": "gcc/expmed.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=91813b2835a919d45b2244e0f31f8dc3165ad379", "patch": "@@ -3784,8 +3784,8 @@ expand_divmod (rem_flag, code, mode, op0, op1, target, unsignedp)\n \t\tremainder = expand_binop (compute_mode, sub_optab, op0, tem,\n \t\t\t\t\t  remainder, 0, OPTAB_LIB_WIDEN);\n \t      }\n-\t    abs_rem = expand_abs (compute_mode, remainder, NULL_RTX, 0, 0);\n-\t    abs_op1 = expand_abs (compute_mode, op1, NULL_RTX, 0, 0);\n+\t    abs_rem = expand_abs (compute_mode, remainder, NULL_RTX, 0);\n+\t    abs_op1 = expand_abs (compute_mode, op1, NULL_RTX, 0);\n \t    tem = expand_shift (LSHIFT_EXPR, compute_mode, abs_rem,\n \t\t\t\tbuild_int_2 (1, 0), NULL_RTX, 1);\n \t    do_cmp_and_jump (tem, abs_op1, LTU, compute_mode, label);"}, {"sha": "0eb75b37440380aa98899f1ba75eaaac5273fd7e", "filename": "gcc/expr.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=91813b2835a919d45b2244e0f31f8dc3165ad379", "patch": "@@ -7205,7 +7205,7 @@ expand_expr (exp, target, tmode, modifier)\n       if (TREE_UNSIGNED (type))\n \treturn op0;\n \n-      return expand_abs (mode, op0, target, unsignedp,\n+      return expand_abs (mode, op0, target,\n \t\t\t safe_from_p (target, TREE_OPERAND (exp, 0), 1));\n \n     case MAX_EXPR:"}, {"sha": "ff08035698e3e2ecb876759b3c0eebac256d8402", "filename": "gcc/expr.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Fexpr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Fexpr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.h?ref=91813b2835a919d45b2244e0f31f8dc3165ad379", "patch": "@@ -599,7 +599,7 @@ extern int expand_twoval_binop PROTO((optab, rtx, rtx, rtx, rtx, int));\n extern rtx expand_unop PROTO((enum machine_mode, optab, rtx, rtx, int));\n \n /* Expand the absolute value operation.  */\n-extern rtx expand_abs PROTO((enum machine_mode, rtx, rtx, int, int));\n+extern rtx expand_abs PROTO((enum machine_mode, rtx, rtx, int));\n \n /* Expand the complex absolute value operation.  */\n extern rtx expand_complex_abs PROTO((enum machine_mode, rtx, rtx, int));"}, {"sha": "ac59c210a04febdb2ddaf07d2a7c9ee1a8f64e0f", "filename": "gcc/function.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=91813b2835a919d45b2244e0f31f8dc3165ad379", "patch": "@@ -4961,7 +4961,7 @@ locate_and_pad_parm (passed_mode, type, in_regs, fndecl,\n      enum machine_mode passed_mode;\n      tree type;\n      int in_regs;\n-     tree fndecl;\n+     tree fndecl ATTRIBUTE_UNUSED;\n      struct args_size *initial_offset_ptr;\n      struct args_size *offset_ptr;\n      struct args_size *arg_size_ptr;"}, {"sha": "f65c2bb3becc77ac1d536897749a6cb5ff18dd47", "filename": "gcc/optabs.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=91813b2835a919d45b2244e0f31f8dc3165ad379", "patch": "@@ -2109,14 +2109,13 @@ expand_unop (mode, unoptab, op0, target, unsignedp)\n    MODE is the mode of the operand; the mode of the result is\n    different but can be deduced from MODE.\n \n-   UNSIGNEDP is relevant if extension is needed.  */\n+ */\n \n rtx\n-expand_abs (mode, op0, target, unsignedp, safe)\n+expand_abs (mode, op0, target, safe)\n      enum machine_mode mode;\n      rtx op0;\n      rtx target;\n-     int unsignedp;\n      int safe;\n {\n   rtx temp, op1;"}, {"sha": "e8640ff6e0ce424bb6803da2b22694c960218960", "filename": "gcc/sdbout.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Fsdbout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Fsdbout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsdbout.c?ref=91813b2835a919d45b2244e0f31f8dc3165ad379", "patch": "@@ -338,7 +338,7 @@ void\n sdbout_init (asm_file, input_file_name, syms)\n      FILE *asm_file;\n      char *input_file_name;\n-     tree syms;\n+     tree syms ATTRIBUTE_UNUSED;\n {\n #ifdef MIPS_DEBUGGING_INFO\n   current_file = (struct sdb_file *) xmalloc (sizeof *current_file);\n@@ -1561,7 +1561,7 @@ void\n sdbout_end_block (file, line, n)\n      FILE *file;\n      int line;\n-     int n;\n+     int n ATTRIBUTE_UNUSED;\n {\n   MAKE_LINE_SAFE (line);\n "}, {"sha": "2177a62b666634651f425fa4f48737cb8cb76e21", "filename": "gcc/toplev.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=91813b2835a919d45b2244e0f31f8dc3165ad379", "patch": "@@ -5576,8 +5576,8 @@ debug_end_source_file (lineno)\n \n void\n debug_define (lineno, buffer)\n-     register unsigned lineno;\n-     register char *buffer;\n+     register unsigned lineno ATTRIBUTE_UNUSED;\n+     register char *buffer ATTRIBUTE_UNUSED;\n {\n #ifdef DWARF_DEBUGGING_INFO\n   if (debug_info_level == DINFO_LEVEL_VERBOSE\n@@ -5597,8 +5597,8 @@ debug_define (lineno, buffer)\n \n void\n debug_undef (lineno, buffer)\n-     register unsigned lineno;\n-     register char *buffer;\n+     register unsigned lineno ATTRIBUTE_UNUSED;\n+     register char *buffer ATTRIBUTE_UNUSED;\n {\n #ifdef DWARF_DEBUGGING_INFO\n   if (debug_info_level == DINFO_LEVEL_VERBOSE"}, {"sha": "456db0241f995d42bb1a721973f08eae8dad03e0", "filename": "gcc/varasm.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91813b2835a919d45b2244e0f31f8dc3165ad379/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=91813b2835a919d45b2244e0f31f8dc3165ad379", "patch": "@@ -264,7 +264,7 @@ void\n named_section (decl, name, reloc)\n      tree decl;\n      const char *name;\n-     int reloc;\n+     int reloc ATTRIBUTE_UNUSED;\n {\n   if (decl != NULL_TREE\n       && TREE_CODE_CLASS (TREE_CODE (decl)) != 'd')\n@@ -1611,7 +1611,7 @@ contains_pointers_p (type)\n \n void\n assemble_external (decl)\n-     tree decl;\n+     tree decl ATTRIBUTE_UNUSED;\n {\n #ifdef ASM_OUTPUT_EXTERNAL\n   if (TREE_CODE_CLASS (TREE_CODE (decl)) == 'd'\n@@ -4336,7 +4336,7 @@ weak_finish ()\n \n void\n assemble_alias (decl, target)\n-     tree decl, target;\n+     tree decl, target ATTRIBUTE_UNUSED;\n {\n   char *name;\n "}]}