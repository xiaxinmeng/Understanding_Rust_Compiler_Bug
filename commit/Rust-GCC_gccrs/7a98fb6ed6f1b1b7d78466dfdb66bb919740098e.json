{"sha": "7a98fb6ed6f1b1b7d78466dfdb66bb919740098e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2E5OGZiNmVkNmYxYjFiN2Q3ODQ2NmRmZGI2NmJiOTE5NzQwMDk4ZQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-07-05T16:37:40Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-07-05T16:37:40Z"}, "message": "[RTL ifcvt] PR rtl-optimization/71594: ICE in noce_emit_cmove due to mismatched source modes\n\n\tPR rtl-optimization/71594\n\t* ifcvt.c (noce_convert_multiple_sets): Wrap new_val or old_val\n\tinto subregs of appropriate mode before trying to emit a conditional\n\tmove.\n\n\t* gcc.dg/torture/pr71594.c: New test.\n\nFrom-SVN: r238013", "tree": {"sha": "0ba36dd360470fd0381b51efa94c83ba0c3fa0f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ba36dd360470fd0381b51efa94c83ba0c3fa0f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7a98fb6ed6f1b1b7d78466dfdb66bb919740098e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a98fb6ed6f1b1b7d78466dfdb66bb919740098e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7a98fb6ed6f1b1b7d78466dfdb66bb919740098e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7a98fb6ed6f1b1b7d78466dfdb66bb919740098e/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1e3d54b4299c69b4e40205dd7d6cabc888b307c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e3d54b4299c69b4e40205dd7d6cabc888b307c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e3d54b4299c69b4e40205dd7d6cabc888b307c5"}], "stats": {"total": 62, "additions": 62, "deletions": 0}, "files": [{"sha": "f189d6a6594eaae820889cabc517764af3dc0f78", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a98fb6ed6f1b1b7d78466dfdb66bb919740098e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a98fb6ed6f1b1b7d78466dfdb66bb919740098e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7a98fb6ed6f1b1b7d78466dfdb66bb919740098e", "patch": "@@ -1,3 +1,10 @@\n+2016-07-05  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR rtl-optimization/71594\n+\t* ifcvt.c (noce_convert_multiple_sets): Wrap new_val or old_val\n+\tinto subregs of appropriate mode before trying to emit a conditional\n+\tmove.\n+\n 2016-07-05  Jan Hubicka  <jh@suse.cz>\n \n \t* tree-scalar-evolution.c (iv_can_overflow_p): New function."}, {"sha": "f7f120e04b11dc4f25be969e0c183a36e067a61c", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a98fb6ed6f1b1b7d78466dfdb66bb919740098e/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a98fb6ed6f1b1b7d78466dfdb66bb919740098e/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=7a98fb6ed6f1b1b7d78466dfdb66bb919740098e", "patch": "@@ -3228,6 +3228,41 @@ noce_convert_multiple_sets (struct noce_if_info *if_info)\n       if (if_info->then_else_reversed)\n \tstd::swap (old_val, new_val);\n \n+\n+      /* We allow simple lowpart register subreg SET sources in\n+\t bb_ok_for_noce_convert_multiple_sets.  Be careful when processing\n+\t sequences like:\n+\t (set (reg:SI r1) (reg:SI r2))\n+\t (set (reg:HI r3) (subreg:HI (r1)))\n+\t For the second insn new_val or old_val (r1 in this example) will be\n+\t taken from the temporaries and have the wider mode which will not\n+\t match with the mode of the other source of the conditional move, so\n+\t we'll end up trying to emit r4:HI = cond ? (r1:SI) : (r3:HI).\n+\t Wrap the two cmove operands into subregs if appropriate to prevent\n+\t that.  */\n+      if (GET_MODE (new_val) != GET_MODE (temp))\n+\t{\n+\t  machine_mode src_mode = GET_MODE (new_val);\n+\t  machine_mode dst_mode = GET_MODE (temp);\n+\t  if (GET_MODE_SIZE (src_mode) <= GET_MODE_SIZE (dst_mode))\n+\t    {\n+\t      end_sequence ();\n+\t      return FALSE;\n+\t    }\n+\t  new_val = lowpart_subreg (dst_mode, new_val, src_mode);\n+\t}\n+      if (GET_MODE (old_val) != GET_MODE (temp))\n+\t{\n+\t  machine_mode src_mode = GET_MODE (old_val);\n+\t  machine_mode dst_mode = GET_MODE (temp);\n+\t  if (GET_MODE_SIZE (src_mode) <= GET_MODE_SIZE (dst_mode))\n+\t    {\n+\t      end_sequence ();\n+\t      return FALSE;\n+\t    }\n+\t  old_val = lowpart_subreg (dst_mode, old_val, src_mode);\n+\t}\n+\n       /* Actually emit the conditional move.  */\n       rtx temp_dest = noce_emit_cmove (if_info, temp, cond_code,\n \t\t\t\t       x, y, new_val, old_val);"}, {"sha": "13e3d68e0552c892a4aa4ff3963b40d93aaf5240", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a98fb6ed6f1b1b7d78466dfdb66bb919740098e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a98fb6ed6f1b1b7d78466dfdb66bb919740098e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7a98fb6ed6f1b1b7d78466dfdb66bb919740098e", "patch": "@@ -1,3 +1,8 @@\n+2016-07-05  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR rtl-optimization/71594\n+\t* gcc.dg/torture/pr71594.c: New test.\n+\n 2016-07-05  Jan Hubicka  <jh@suse.cz>\n \n \t* gcc.dg/tree-ssa/scev-14.c: new testcase."}, {"sha": "468a9f6891c92ff76520af0eee242f08b01ae0cf", "filename": "gcc/testsuite/gcc.dg/torture/pr71594.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7a98fb6ed6f1b1b7d78466dfdb66bb919740098e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71594.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7a98fb6ed6f1b1b7d78466dfdb66bb919740098e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71594.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71594.c?ref=7a98fb6ed6f1b1b7d78466dfdb66bb919740098e", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"--param max-rtl-if-conversion-insns=2\" } */\n+\n+unsigned short a;\n+int b, c;\n+int *d;\n+void fn1() {\n+  *d = 24;\n+  for (; *d <= 65;) {\n+    unsigned short *e = &a;\n+    b = (a &= 0 <= 0) < (c ?: (*e %= *d));\n+    for (; *d <= 83;)\n+      ;\n+  }\n+}"}]}