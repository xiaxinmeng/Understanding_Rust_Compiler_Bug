{"sha": "6c1f47ee4b24ebae655517ad3ea934856aae662d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMxZjQ3ZWU0YjI0ZWJhZTY1NTUxN2FkM2VhOTM0ODU2YWFlNjYyZA==", "commit": {"author": {"name": "Emmanuel Briot", "email": "briot@adacore.com", "date": "2007-12-13T10:28:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-12-13T10:28:39Z"}, "message": "prj.ads, prj.adb (Is_A_Language): Now takes a Name_Id instead of a string\n\n2007-12-06  Emmanuel Briot  <briot@adacore.com>\n\t    Vincent Celier  <celier@adacore.com>\n\n\t* prj.ads, prj.adb (Is_A_Language): Now takes a Name_Id instead of a\n\tstring\n\t(Must_Check_Configuration, Default_Language_Is_Ada): new flags in\n\tprj.ads\n\t(Hash): Move instantiation of System.HTable.Hash from spec to body\n\t(prj-nmsc.adb): Optimize calls to Name_Find when on case sensitive\n\tsystems, since we do not need to recompute the Name_Id for the canonical\n\tfile name.\n\t(Body_Suffix_Id_Of, Spec_Suffix_Id_Of): new version that takes a name_id\n\tas a parameter. This parameter is in fact always \"ada\" in all calls, and\n\twe were doing 160560 extra calls to Name_Find to convert it to Name_Ada\n\twhile loading a project with 40000 files\n\n\t* prj-attr.adb: Fix name of attribute Dependency_Driver\n\tChange the kind of indexing for attribute Root\n\n\t* prj-dect.adb (Parse_Declarative_Items): Allow redeclarations of\n\tvariables already declared, in case constructions.\n\n\t* prj-env.adb (Initialize): Reset Current_Source_Path_File and\n\tCurrent_Object_Path_File to No_Path.\n\n\t* prj-ext.adb (Initialize_Project_Path): In multi language mode, use\n\tADA_PROJECT_PATH if value of GPR_PROJECT_PATH is empty.\n\n\t* prj-makr.adb: new parameter Current_Dir\n\n\t* prj-nmsc.ads, prj-nmsc.adb (Find_Explicit_Sources): Do not look for\n\tAda sources when language is not Ada.\n\tChange Opt.Follow_Links to Opt.Follow_Links_For_Files.\n\t(Find_Excluded_Sources, Find_Explicit_Sources): new subprograms\n\t(Must_Check_Configuration, Default_Language_Is_Ada): new flags.\n\t(Locate_Directory): Always resolve links when computing Canonical_Path\n\t(Look_For_Sources): Make sure that Name_Buffer contains the file name\n\tin Source_Files before checking for the presence of a directory\n\tseparator.\n\tOptimize calls to Name_Find when on case sensitive systems.\n\t(Body_Suffix_Id_Of, Spec_Suffix_Id_Of): new version that takes a name_id\n\tas a parameter.\n\t(Prj.Nmsc.Check): new parameter Current_Dir\n\t(Check_Ada_Naming_Schemes): Restrictions on suffixes are relaxed. They\n\tcannot be empty and the spec suffix cannot be the same as the body or\n\tseparate suffix.\n\t(Get_Unit): When a file name can be of several unit kinds (spec, body or\n\tsubunit), always consider the longest suffix.\n\t(Check_Configuration): Do not issue an error if there is no compiler\n\tfor a language. Just issue a warning and ignore the sources for the\n\tlanguage.\n\t(Check_Library_Attributes): Only check Library_Dir if Library_Name is\n\tnot empty.\n\t(Check_Naming_Schemes.Maked_Unit): Only output message if high verbosity\n\t(Unit_Exceptions): New hash table\n\t(Check_Naming_Schemes): Check if a file that could be a unit because of\n\tthe naming scheme is not in fact a source because there is an exception\n\tfor the unit.\n\t(Look_For_Sources): Put the unit exceptions in hash table\n\tUnit_Exceptions\n\t(Get_Unit_Exceptions): Give initial value No_Source to local variable\n\tOther_Part to avoid exception when code is compiled with validity\n\tchecking.\n\t(Get_Sources_From_File): Check that there is no directory information\n\tin the file names.\n\t(Look_For_Sources): Check that there is no directory information in the\n\tlist of file names in Source_Files.\n\t(Look_For_Sources): In multi-language mode, do not allow exception file\n\tnames that are excluded.\n\t(Excluded_Sources_Htable): New hash table\n\t(Search_Directories.Check_File): New procedure to simplify\n\tSearch_Directories.\n\t(Search_Directories): Do not consider excluded sources\n\t(Look_For_Sources): Populate Excluded_Sources_Htable before calling\n\tSearch_Directories.\n\t(Get_Exceptions): Set component Lang_Kind of Source_Data\n\t(Get_Unit_Exceptions): Ditto\n\t(Search_Directories): Ditto\n\n\t* prj-pars.adb: new parameter Current_Dir\n\n\t* prj-part.ads, prj-part.adb: \n\tChange Opt.Follow_Links to Opt.Follow_Links_For_Files.\n\t(Opt.Follow_Links_For_Dirs): New flag\n\t(Project_Path_Name_Of): Cache information returned by this routine as\n\tLocate_Regular_File is a costly routine. The code to output a log\n\tinformation and the effective call to Locate_Regular_File is now\n\tfactorized into a routine (code clean-up).\n\t(Parse, Parse_Single_Project): new parameter Current_Dir\n\tWhen main project file cannot be found, indicate in the error\n\tmessage the project path that was used to do the search.\n\n\t* prj-proc.ads, prj-proc.adb (Opt.Follow_Links_For_Dirs): New flag\n\t(Prj.Proc.Process*): new parameter Current_Dir\n\n\t* switch-m.adb: Change Opt.Follow_Links to Opt.Follow_Links_For_Files\n\nFrom-SVN: r130846", "tree": {"sha": "f34d6aa77881e7af268ea3a8628eb9fef5c872a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f34d6aa77881e7af268ea3a8628eb9fef5c872a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c1f47ee4b24ebae655517ad3ea934856aae662d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c1f47ee4b24ebae655517ad3ea934856aae662d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c1f47ee4b24ebae655517ad3ea934856aae662d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c1f47ee4b24ebae655517ad3ea934856aae662d/comments", "author": {"login": "briot", "id": 42402, "node_id": "MDQ6VXNlcjQyNDAy", "avatar_url": "https://avatars.githubusercontent.com/u/42402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briot", "html_url": "https://github.com/briot", "followers_url": "https://api.github.com/users/briot/followers", "following_url": "https://api.github.com/users/briot/following{/other_user}", "gists_url": "https://api.github.com/users/briot/gists{/gist_id}", "starred_url": "https://api.github.com/users/briot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briot/subscriptions", "organizations_url": "https://api.github.com/users/briot/orgs", "repos_url": "https://api.github.com/users/briot/repos", "events_url": "https://api.github.com/users/briot/events{/privacy}", "received_events_url": "https://api.github.com/users/briot/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "800621e062382ae60c7416a2c24544d566d0f3b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/800621e062382ae60c7416a2c24544d566d0f3b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/800621e062382ae60c7416a2c24544d566d0f3b8"}], "stats": {"total": 4669, "additions": 2577, "deletions": 2092}, "files": [{"sha": "bb5cfb44f06971a2cbedbff516f91ae38c91aca3", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=6c1f47ee4b24ebae655517ad3ea934856aae662d", "patch": "@@ -66,7 +66,7 @@ package body Prj.Attr is\n    \"lVmain#\" &\n    \"LVlanguages#\" &\n    \"SVmain_language#\" &\n-   \"Laroots#\" &\n+   \"Lbroots#\" &\n    \"SVexternally_built#\" &\n \n    --  Directories\n@@ -178,7 +178,7 @@ package body Prj.Attr is\n    --  Configuration - Dependencies\n \n    \"Ladependency_switches#\" &\n-   \"Lacompute_dependency#\" &\n+   \"Ladependency_driver#\" &\n \n    --  Configuration - Search paths\n "}, {"sha": "7e367a7e1465ec630bb5e07909b0b047fcb7eb3a", "filename": "gcc/ada/prj-dect.adb", "status": "modified", "additions": 34, "deletions": 5, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-dect.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-dect.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-dect.adb?ref=6c1f47ee4b24ebae655517ad3ea934856aae662d", "patch": "@@ -790,9 +790,8 @@ package body Prj.Dect is\n       Declarations := Empty_Node;\n \n       loop\n-         --  We are always positioned at the token that precedes\n-         --  the first token of the declarative element.\n-         --  Scan past it\n+         --  We are always positioned at the token that precedes the first\n+         --  token of the declarative element. Scan past it.\n \n          Scan (In_Tree);\n \n@@ -802,8 +801,38 @@ package body Prj.Dect is\n             when Tok_Identifier =>\n \n                if In_Zone = In_Case_Construction then\n-                  Error_Msg (\"a variable cannot be declared here\",\n-                             Token_Ptr);\n+\n+                  --  Check if the variable has already been declared\n+\n+                  declare\n+                     The_Variable : Project_Node_Id := Empty_Node;\n+\n+                  begin\n+                     if Current_Package /= Empty_Node then\n+                        The_Variable :=\n+                          First_Variable_Of (Current_Package, In_Tree);\n+                     elsif Current_Project /= Empty_Node then\n+                        The_Variable :=\n+                          First_Variable_Of (Current_Project, In_Tree);\n+                     end if;\n+\n+                     while The_Variable /= Empty_Node\n+                       and then Name_Of (The_Variable, In_Tree) /=\n+                                Token_Name\n+                     loop\n+                        The_Variable := Next_Variable (The_Variable, In_Tree);\n+                     end loop;\n+\n+                     --  It is an error to declare a variable in a case\n+                     --  construction for the first time.\n+\n+                     if The_Variable = Empty_Node then\n+                        Error_Msg\n+                          (\"a variable cannot be declared \" &\n+                           \"for the first time here\",\n+                           Token_Ptr);\n+                     end if;\n+                  end;\n                end if;\n \n                Parse_Variable_Declaration"}, {"sha": "0ddbf9b62a940afb75666700c3af8ac6eff8efba", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=6c1f47ee4b24ebae655517ad3ea934856aae662d", "patch": "@@ -1331,21 +1331,22 @@ package body Prj.Env is\n             while Source /= No_Source loop\n                Src_Data := In_Tree.Sources.Table (Source);\n \n-               if Src_Data.Language_Name = Language and then\n-                 (not Src_Data.Locally_Removed) and then\n-                 Src_Data.Replaced_By = No_Source and then\n-                 Src_Data.Path /= No_Path\n+               if Src_Data.Language_Name = Language\n+                 and then not Src_Data.Locally_Removed\n+                 and then Src_Data.Replaced_By = No_Source\n+                 and then Src_Data.Path /= No_Path\n                then\n                   if Src_Data.Unit /= No_Name then\n                      Get_Name_String (Src_Data.Unit);\n \n                      if Src_Data.Kind = Spec then\n-                        Suffix := In_Tree.Languages_Data.Table\n-                          (Src_Data.Language).Config.Mapping_Spec_Suffix;\n-\n+                        Suffix :=\n+                          In_Tree.Languages_Data.Table\n+                            (Src_Data.Language).Config.Mapping_Spec_Suffix;\n                      else\n-                        Suffix := In_Tree.Languages_Data.Table\n-                          (Src_Data.Language).Config.Mapping_Body_Suffix;\n+                        Suffix :=\n+                          In_Tree.Languages_Data.Table\n+                            (Src_Data.Language).Config.Mapping_Body_Suffix;\n                      end if;\n \n                      if Suffix /= No_File then\n@@ -1956,6 +1957,8 @@ package body Prj.Env is\n    procedure Initialize is\n    begin\n       Fill_Mapping_File := True;\n+      Current_Source_Path_File := No_Path;\n+      Current_Object_Path_File := No_Path;\n    end Initialize;\n \n    ------------------------------------\n@@ -2323,10 +2326,10 @@ package body Prj.Env is\n                      --  except if we don't include library project and this\n                      --  is a library project.\n \n-                     if (Data.Library and then Including_Libraries)\n+                     if (Data.Library and Including_Libraries)\n                        or else\n                          (Data.Object_Directory /= No_Path\n-                          and then\n+                           and then\n                             (not Including_Libraries or else not Data.Library))\n                      then\n                         --  For a library project, add the library ALI"}, {"sha": "686ca51598936f01a54422b5834aa203ee9ace0a", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=6c1f47ee4b24ebae655517ad3ea934856aae662d", "patch": "@@ -66,7 +66,6 @@ package body Prj.Ext is\n    --  first for external reference in this table, before checking the\n    --  environment. Htable is emptied (reset) by procedure Reset.\n \n-   ---------\n    package Search_Directories is new Table.Table\n      (Table_Component_Type => Name_Id,\n       Table_Index_Type     => Natural,\n@@ -76,6 +75,7 @@ package body Prj.Ext is\n       Table_Name           => \"Prj.Ext.Search_Directories\");\n    --  The table for the directories specified with -aP switches\n \n+   ---------\n    -- Add --\n    ---------\n \n@@ -142,20 +142,18 @@ package body Prj.Ext is\n       Prj_Path        : String_Access := Gpr_Prj_Path;\n \n    begin\n-      if Get_Mode = Ada_Only then\n-         if Gpr_Prj_Path.all /= \"\" then\n-\n-            --  Warn if both environment variables are defined\n+      if Gpr_Prj_Path.all /= \"\" then\n \n-            if Ada_Prj_Path.all /= \"\" then\n-               Write_Line\n-                 (\"Warning: ADA_PROJECT_PATH is not taken into account\");\n-               Write_Line (\"         when GPR_PROJECT_PATH is defined\");\n-            end if;\n+         --  In Ada only mode, warn if both environment variables are defined\n \n-         else\n-            Prj_Path := Ada_Prj_Path;\n+         if Get_Mode = Ada_Only and then Ada_Prj_Path.all /= \"\" then\n+            Write_Line\n+              (\"Warning: ADA_PROJECT_PATH is not taken into account\");\n+            Write_Line (\"         when GPR_PROJECT_PATH is defined\");\n          end if;\n+\n+      else\n+         Prj_Path := Ada_Prj_Path;\n       end if;\n \n       --  The current directory is always first"}, {"sha": "336c676e748dba1a395a3cd1636f6550e37794a9", "filename": "gcc/ada/prj-makr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-makr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-makr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-makr.adb?ref=6c1f47ee4b24ebae655517ad3ea934856aae662d", "patch": "@@ -741,6 +741,7 @@ package body Prj.Makr is\n                Project_File_Name      => Output_Name (1 .. Output_Name_Last),\n                Always_Errout_Finalize => False,\n                Store_Comments         => True,\n+               Current_Directory      => Get_Current_Dir,\n                Packages_To_Check      => Packages_To_Check_By_Gnatname);\n \n             --  Fail if parsing was not successful"}, {"sha": "f6a37b657dd4072244d9d531be4b48b44679a248", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 2009, "deletions": 1789, "changes": 3798, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=6c1f47ee4b24ebae655517ad3ea934856aae662d"}, {"sha": "4efdf264c101f044eb9c33535e8b0f1252c982d8", "filename": "gcc/ada/prj-nmsc.ads", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-nmsc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-nmsc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.ads?ref=6c1f47ee4b24ebae655517ad3ea934856aae662d", "patch": "@@ -35,8 +35,8 @@ private package Prj.Nmsc is\n      (Project         : Project_Id;\n       In_Tree         : Project_Tree_Ref;\n       Report_Error    : Put_Line_Access;\n-      Follow_Links    : Boolean;\n-      When_No_Sources : Error_Warning);\n+      When_No_Sources : Error_Warning;\n+      Current_Dir     : String);\n    --  Check the object directory and the source directories\n    --\n    --  Check the library attributes, including the library directory if any\n@@ -53,10 +53,7 @@ private package Prj.Nmsc is\n    --  If Report_Error is null , use the standard error reporting mechanism\n    --  (Errout). Otherwise, report errors using Report_Error.\n    --\n-   --  If Follow_Links is False, it is assumed that the project doesn't contain\n-   --  any file duplicated through symbolic links (although the latter are\n-   --  still valid if they point to a file which is outside of the project),\n-   --  and that no directory has a name which is a valid source name.\n+   --  Current_Dir is for optimization purposes only, avoiding system calls.\n    --\n    --  When_No_Sources indicates what should be done when no sources of a\n    --  language are found in a project where this language is declared."}, {"sha": "fb277b4bc0f8c080c2ccd9a1ec4e167f5fb3d7c5", "filename": "gcc/ada/prj-pars.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-pars.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-pars.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-pars.adb?ref=6c1f47ee4b24ebae655517ad3ea934856aae662d", "patch": "@@ -24,8 +24,8 @@\n ------------------------------------------------------------------------------\n \n with Ada.Exceptions; use Ada.Exceptions;\n+with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n \n-with Opt;\n with Output;   use Output;\n with Prj.Err;  use Prj.Err;\n with Prj.Part;\n@@ -52,6 +52,7 @@ package body Prj.Pars is\n       Project_Node      : Project_Node_Id := Empty_Node;\n       The_Project       : Project_Id      := No_Project;\n       Success           : Boolean         := True;\n+      Current_Dir       : constant String := Get_Current_Dir;\n \n    begin\n       Prj.Tree.Initialize (Project_Node_Tree);\n@@ -64,7 +65,8 @@ package body Prj.Pars is\n          Project                => Project_Node,\n          Project_File_Name      => Project_File_Name,\n          Always_Errout_Finalize => False,\n-         Packages_To_Check      => Packages_To_Check);\n+         Packages_To_Check      => Packages_To_Check,\n+         Current_Directory      => Current_Dir);\n \n       --  If there were no error, process the tree\n \n@@ -76,9 +78,9 @@ package body Prj.Pars is\n             From_Project_Node      => Project_Node,\n             From_Project_Node_Tree => Project_Node_Tree,\n             Report_Error           => null,\n-            Follow_Links           => Opt.Follow_Links,\n             When_No_Sources        => When_No_Sources,\n-            Reset_Tree             => Reset_Tree);\n+            Reset_Tree             => Reset_Tree,\n+            Current_Dir            => Current_Dir);\n          Prj.Err.Finalize;\n \n          if not Success then"}, {"sha": "3c46138d60deaa327781b07ff9f55fb824eef116", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 126, "deletions": 84, "changes": 210, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=6c1f47ee4b24ebae655517ad3ea934856aae662d", "patch": "@@ -39,16 +39,14 @@ with Table;\n with Ada.Characters.Handling;    use Ada.Characters.Handling;\n with Ada.Exceptions;             use Ada.Exceptions;\n \n-with GNAT.Directory_Operations;  use GNAT.Directory_Operations;\n-\n with System.HTable;              use System.HTable;\n \n package body Prj.Part is\n \n    Buffer      : String_Access;\n    Buffer_Last : Natural := 0;\n \n-   Dir_Sep  : Character renames GNAT.OS_Lib.Directory_Separator;\n+   Dir_Sep : Character renames GNAT.OS_Lib.Directory_Separator;\n \n    ------------------------------------\n    -- Local Packages and Subprograms --\n@@ -116,6 +114,15 @@ package body Prj.Part is\n    --  need to have a virtual extending project, to avoid processing the same\n    --  project twice.\n \n+   package Projects_Paths is new System.HTable.Simple_HTable\n+     (Header_Num => Header_Num,\n+      Element    => Path_Name_Type,\n+      No_Element => No_Path,\n+      Key        => Name_Id,\n+      Hash       => Hash,\n+      Equal      => \"=\");\n+   --  Hash table to cache project path to avoid looking for them on the path\n+\n    procedure Create_Virtual_Extending_Project\n      (For_Project  : Project_Node_Id;\n       Main_Project : Project_Node_Id;\n@@ -153,7 +160,8 @@ package body Prj.Part is\n       From_Extended     : Extension_Origin;\n       In_Limited        : Boolean;\n       Packages_To_Check : String_List_Access;\n-      Depth             : Natural);\n+      Depth             : Natural;\n+      Current_Dir       : String);\n    --  Parse the imported projects that have been stored in table Withs,\n    --  if any. From_Extended is used for the call to Parse_Single_Project\n    --  below. When In_Limited is True, the importing path includes at least\n@@ -327,8 +335,7 @@ package body Prj.Part is\n    ----------------------------\n \n    function Immediate_Directory_Of\n-     (Path_Name : Path_Name_Type)\n-      return Path_Name_Type\n+     (Path_Name : Path_Name_Type) return Path_Name_Type\n    is\n    begin\n       Get_Name_String (Path_Name);\n@@ -366,7 +373,6 @@ package body Prj.Part is\n      (Proj                : Project_Node_Id;\n       In_Tree             : Project_Node_Tree_Ref;\n       Potentially_Virtual : Boolean)\n-\n    is\n       Declaration : Project_Node_Id := Empty_Node;\n       --  Node for the project declaration of Proj\n@@ -436,10 +442,9 @@ package body Prj.Part is\n       Project_File_Name      : String;\n       Always_Errout_Finalize : Boolean;\n       Packages_To_Check      : String_List_Access := All_Packages;\n-      Store_Comments         : Boolean := False)\n+      Store_Comments         : Boolean := False;\n+      Current_Directory      : String := \"\")\n    is\n-      Current_Directory : constant String := Get_Current_Dir;\n-\n       Dummy : Boolean;\n       pragma Warnings (Off, Dummy);\n \n@@ -454,6 +459,8 @@ package body Prj.Part is\n \n       Project := Empty_Node;\n \n+      Projects_Paths.Reset;\n+\n       if Current_Verbosity >= Medium then\n          Write_Str (\"GPR_PROJECT_PATH=\"\"\");\n          Write_Str (Project_Path);\n@@ -476,7 +483,9 @@ package body Prj.Part is\n \n          if Path_Name = \"\" then\n             Prj.Com.Fail\n-              (\"project file \"\"\", Project_File_Name, \"\"\" not found\");\n+              (\"project file \"\"\",\n+               Project_File_Name,\n+               \"\"\" not found in \" & Project_Path);\n             Project := Empty_Node;\n             return;\n          end if;\n@@ -490,7 +499,8 @@ package body Prj.Part is\n             From_Extended     => None,\n             In_Limited        => False,\n             Packages_To_Check => Packages_To_Check,\n-            Depth             => 0);\n+            Depth             => 0,\n+            Current_Dir       => Current_Directory);\n \n          --  If Project is an extending-all project, create the eventual\n          --  virtual extending projects and check that there are no illegally\n@@ -601,12 +611,10 @@ package body Prj.Part is\n      (In_Tree        : Project_Node_Tree_Ref;\n       Context_Clause : out With_Id)\n    is\n-      Current_With_Clause    : With_Id := No_With;\n-      Limited_With           : Boolean         := False;\n-\n-      Current_With : With_Record;\n-\n-      Current_With_Node : Project_Node_Id := Empty_Node;\n+      Current_With_Clause : With_Id := No_With;\n+      Limited_With        : Boolean := False;\n+      Current_With        : With_Record;\n+      Current_With_Node   : Project_Node_Id := Empty_Node;\n \n    begin\n       --  Assume no context clause\n@@ -704,7 +712,8 @@ package body Prj.Part is\n       From_Extended     : Extension_Origin;\n       In_Limited        : Boolean;\n       Packages_To_Check : String_List_Access;\n-      Depth             : Natural)\n+      Depth             : Natural;\n+      Current_Dir       : String)\n    is\n       Current_With_Clause : With_Id := Context_Clause;\n \n@@ -739,7 +748,8 @@ package body Prj.Part is\n             Resolved_Path : constant String :=\n                               Normalize_Pathname\n                                 (Imported_Path_Name,\n-                                 Resolve_Links => True,\n+                                 Directory     => Current_Dir,\n+                                 Resolve_Links => Opt.Follow_Links_For_Files,\n                                  Case_Sensitive => True);\n \n             Withed_Project : Project_Node_Id := Empty_Node;\n@@ -828,7 +838,8 @@ package body Prj.Part is\n                      From_Extended     => From_Extended,\n                      In_Limited        => Limited_With,\n                      Packages_To_Check => Packages_To_Check,\n-                     Depth             => Depth);\n+                     Depth             => Depth,\n+                     Current_Dir       => Current_Dir);\n \n                else\n                   Extends_All := Is_Extending_All (Withed_Project, In_Tree);\n@@ -887,7 +898,8 @@ package body Prj.Part is\n       From_Extended     : Extension_Origin;\n       In_Limited        : Boolean;\n       Packages_To_Check : String_List_Access;\n-      Depth             : Natural)\n+      Depth             : Natural;\n+      Current_Dir       : String)\n    is\n       Normed_Path_Name    : Path_Name_Type;\n       Canonical_Path_Name : Path_Name_Type;\n@@ -918,11 +930,15 @@ package body Prj.Part is\n \n       declare\n          Normed_Path    : constant String := Normalize_Pathname\n-                            (Path_Name, Resolve_Links => False,\n-                             Case_Sensitive           => True);\n+                            (Path_Name,\n+                             Directory      => Current_Dir,\n+                             Resolve_Links  => False,\n+                             Case_Sensitive => True);\n          Canonical_Path : constant String := Normalize_Pathname\n-                            (Normed_Path, Resolve_Links => True,\n-                             Case_Sensitive             => False);\n+                            (Normed_Path,\n+                             Directory      => Current_Dir,\n+                             Resolve_Links  => Opt.Follow_Links_For_Files,\n+                             Case_Sensitive => False);\n \n       begin\n          Name_Len := Normed_Path'Length;\n@@ -1224,16 +1240,17 @@ package body Prj.Part is\n                From_Extended     => From_Ext,\n                In_Limited        => In_Limited,\n                Packages_To_Check => Packages_To_Check,\n-               Depth             => Depth + 1);\n+               Depth             => Depth + 1,\n+               Current_Dir       => Current_Dir);\n             Set_First_With_Clause_Of (Project, In_Tree, Imported_Projects);\n          end;\n \n          if not In_Configuration then\n             declare\n                Name_And_Node : Tree_Private_Part.Project_Name_And_Node :=\n-                 Tree_Private_Part.Projects_Htable.Get_First\n-                   (In_Tree.Projects_HT);\n-               Project_Name : Name_Id := Name_And_Node.Name;\n+                                 Tree_Private_Part.Projects_Htable.Get_First\n+                                   (In_Tree.Projects_HT);\n+               Project_Name  : Name_Id := Name_And_Node.Name;\n \n             begin\n                --  Check if we already have a project with this name\n@@ -1340,7 +1357,8 @@ package body Prj.Part is\n                         From_Extended     => From_Ext,\n                         In_Limited        => In_Limited,\n                         Packages_To_Check => Packages_To_Check,\n-                        Depth             => Depth + 1);\n+                        Depth             => Depth + 1,\n+                        Current_Dir       => Current_Dir);\n                   end;\n \n                   --  A project that extends an extending-all project is also\n@@ -1561,9 +1579,9 @@ package body Prj.Part is\n \n    function Project_Name_From (Path_Name : String) return Name_Id is\n       Canonical : String (1 .. Path_Name'Length) := Path_Name;\n-      First : Natural := Canonical'Last;\n-      Last  : Natural := First;\n-      Index : Positive;\n+      First     : Natural := Canonical'Last;\n+      Last      : Natural := First;\n+      Index     : Positive;\n \n    begin\n       if Current_Verbosity = High then\n@@ -1694,7 +1712,35 @@ package body Prj.Part is\n      (Project_File_Name : String;\n       Directory         : String) return String\n    is\n-      Result : String_Access;\n+\n+      function Try_Path_Name (Path : String) return String_Access;\n+      pragma Inline (Try_Path_Name);\n+      --  Try the specified Path\n+\n+      -------------------\n+      -- Try_Path_Name --\n+      -------------------\n+\n+      function Try_Path_Name (Path : String) return String_Access is\n+      begin\n+         if Current_Verbosity = High then\n+            Write_Str  (\"   Trying \");\n+            Write_Str  (Path);\n+         end if;\n+\n+         return Locate_Regular_File\n+           (File_Name => Path,\n+            Path      => Project_Path);\n+      end Try_Path_Name;\n+\n+      --  Local Declarations\n+\n+      Result    : String_Access;\n+      Result_Id : Path_Name_Type;\n+      Has_Dot   : Boolean := False;\n+      Key       : Name_Id;\n+\n+   --  Start of processing for Project_Path_Name_Of\n \n    begin\n       if Current_Verbosity = High then\n@@ -1705,70 +1751,60 @@ package body Prj.Part is\n          Write_Line (\"\"\");\");\n       end if;\n \n-      if not Is_Absolute_Path (Project_File_Name) then\n-         --  First we try <directory>/<file_name>.<extension>\n+      --  Check the project cache\n \n-         if Current_Verbosity = High then\n-            Write_Str  (\"   Trying \");\n-            Write_Str  (Directory);\n-            Write_Char (Directory_Separator);\n-            Write_Str (Project_File_Name);\n-            Write_Line (Project_File_Extension);\n-         end if;\n+      Name_Len := Project_File_Name'Length;\n+      Name_Buffer (1 .. Name_Len) := Project_File_Name;\n+      Key := Name_Find;\n+      Result_Id := Projects_Paths.Get (Key);\n \n-         Result :=\n-           Locate_Regular_File\n-           (File_Name => Directory & Directory_Separator &\n-              Project_File_Name & Project_File_Extension,\n-            Path      => Project_Path);\n+      if Result_Id /= No_Path then\n+         return Get_Name_String (Result_Id);\n+      end if;\n \n-         --  Then we try <directory>/<file_name>\n+      --  Check if Project_File_Name contains an extension (a dot before a\n+      --  directory separator). If it is the case we do not try project file\n+      --  with an added extension as it is not possible to have multiple dots\n+      --  on a project file name.\n \n-         if Result = null then\n-            if Current_Verbosity = High then\n-               Write_Str  (\"   Trying \");\n-               Write_Str  (Directory);\n-               Write_Char (Directory_Separator);\n-               Write_Line (Project_File_Name);\n-            end if;\n-\n-            Result :=\n-              Locate_Regular_File\n-              (File_Name => Directory & Directory_Separator &\n-                 Project_File_Name,\n-               Path      => Project_Path);\n+      Check_Dot : for K in reverse Project_File_Name'Range loop\n+         if Project_File_Name (K) = '.' then\n+            Has_Dot := True;\n+            exit Check_Dot;\n          end if;\n-      end if;\n \n-      if Result = null then\n+         exit Check_Dot when Project_File_Name (K) = Directory_Separator\n+           or else Project_File_Name (K) = '/';\n+      end loop Check_Dot;\n \n-         --  Then we try <file_name>.<extension>\n+      if not Is_Absolute_Path (Project_File_Name) then\n \n-         if Current_Verbosity = High then\n-            Write_Str  (\"   Trying \");\n-            Write_Str (Project_File_Name);\n-            Write_Line (Project_File_Extension);\n+         --  First we try <directory>/<file_name>.<extension>\n+\n+         if not Has_Dot then\n+            Result := Try_Path_Name\n+              (Directory & Directory_Separator &\n+               Project_File_Name & Project_File_Extension);\n          end if;\n \n-         Result :=\n-           Locate_Regular_File\n-           (File_Name => Project_File_Name & Project_File_Extension,\n-            Path      => Project_Path);\n+         --  Then we try <directory>/<file_name>\n+\n+         if Result = null then\n+            Result := Try_Path_Name\n+              (Directory & Directory_Separator & Project_File_Name);\n+         end if;\n       end if;\n \n-      if Result = null then\n+      --  Then we try <file_name>.<extension>\n \n-         --  Then we try <file_name>\n+      if Result = null and then not Has_Dot then\n+         Result := Try_Path_Name (Project_File_Name & Project_File_Extension);\n+      end if;\n \n-         if Current_Verbosity = High then\n-            Write_Str  (\"   Trying \");\n-            Write_Line  (Project_File_Name);\n-         end if;\n+      --  Then we try <file_name>\n \n-         Result :=\n-           Locate_Regular_File\n-           (File_Name => Project_File_Name,\n-            Path      => Project_Path);\n+      if Result = null then\n+         Result := Try_Path_Name (Project_File_Name);\n       end if;\n \n       --  If we cannot find the project file, we return an empty string\n@@ -1781,10 +1817,16 @@ package body Prj.Part is\n             Final_Result : constant String :=\n                              GNAT.OS_Lib.Normalize_Pathname\n                                (Result.all,\n+                                Directory      => Directory,\n                                 Resolve_Links  => False,\n                                 Case_Sensitive => True);\n          begin\n             Free (Result);\n+            Name_Len := Final_Result'Length;\n+            Name_Buffer (1 .. Name_Len) := Final_Result;\n+            Result_Id := Name_Find;\n+\n+            Projects_Paths.Set (Key, Result_Id);\n             return Final_Result;\n          end;\n       end if;"}, {"sha": "8e366bc4fff1141fc49e8a6d60552fa41fda76f6", "filename": "gcc/ada/prj-part.ads", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-part.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-part.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.ads?ref=6c1f47ee4b24ebae655517ad3ea934856aae662d", "patch": "@@ -35,7 +35,8 @@ package Prj.Part is\n       Project_File_Name      : String;\n       Always_Errout_Finalize : Boolean;\n       Packages_To_Check      : String_List_Access := All_Packages;\n-      Store_Comments         : Boolean := False);\n+      Store_Comments         : Boolean := False;\n+      Current_Directory      : String := \"\");\n    --  Parse project file and all its imported project files and create a tree.\n    --  Return the node for the project (or Empty_Node if parsing failed). If\n    --  Always_Errout_Finalize is True, Errout.Finalize is called in all cases,\n@@ -44,6 +45,9 @@ package Prj.Part is\n    --  where any unknown attribute produces an error. For other packages, an\n    --  unknown attribute produces a warning. When Store_Comments is True,\n    --  comments are stored in the parse tree.\n+   --\n+   --  Current_Directory is used for optimization purposes only, avoiding extra\n+   --  system calls.\n \n    type Extension_Origin is (None, Extending_Simple, Extending_All);\n    --  Type of parameter From_Extended for procedures Parse_Single_Project and\n@@ -59,7 +63,8 @@ package Prj.Part is\n       From_Extended     : Extension_Origin;\n       In_Limited        : Boolean;\n       Packages_To_Check : String_List_Access;\n-      Depth             : Natural);\n+      Depth             : Natural;\n+      Current_Dir       : String);\n    --  Parse a project file.\n    --  Recursive procedure: it calls itself for imported and extended\n    --  projects. When From_Extended is not None, if the project has already"}, {"sha": "385e03536d5850125a5d2817d886f7f63c8b18eb", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=6c1f47ee4b24ebae655517ad3ea934856aae662d", "patch": "@@ -77,10 +77,11 @@ package body Prj.Proc is\n    procedure Check\n      (In_Tree         : Project_Tree_Ref;\n       Project         : Project_Id;\n-      Follow_Links    : Boolean;\n+      Current_Dir     : String;\n       When_No_Sources : Error_Warning);\n    --  Set all projects to not checked, then call Recursive_Check for the\n    --  main project Project. Project is set to No_Project if errors occurred.\n+   --  Current_Dir is for optimization purposes, avoiding extra system calls.\n \n    procedure Copy_Package_Declarations\n      (From    : Declarations;\n@@ -140,11 +141,12 @@ package body Prj.Proc is\n    procedure Recursive_Check\n      (Project         : Project_Id;\n       In_Tree         : Project_Tree_Ref;\n-      Follow_Links    : Boolean;\n+      Current_Dir     : String;\n       When_No_Sources : Error_Warning);\n    --  If Project is not marked as checked, mark it as checked, call\n    --  Check_Naming_Scheme for the project, then call itself for a\n    --  possible extended project and all the imported projects of Project.\n+   --  Current_Dir is for optimization purposes, avoiding extra system calls.\n \n    ---------\n    -- Add --\n@@ -258,7 +260,7 @@ package body Prj.Proc is\n    procedure Check\n      (In_Tree         : Project_Tree_Ref;\n       Project         : Project_Id;\n-      Follow_Links    : Boolean;\n+      Current_Dir     : String;\n       When_No_Sources : Error_Warning)\n    is\n    begin\n@@ -270,8 +272,7 @@ package body Prj.Proc is\n          In_Tree.Projects.Table (Index).Checked := False;\n       end loop;\n \n-      Recursive_Check\n-        (Project, In_Tree, Follow_Links, When_No_Sources);\n+      Recursive_Check (Project, In_Tree, Current_Dir, When_No_Sources);\n \n       --  Set the Other_Part field for the units\n \n@@ -1209,9 +1210,9 @@ package body Prj.Proc is\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Report_Error           : Put_Line_Access;\n-      Follow_Links           : Boolean := True;\n       When_No_Sources        : Error_Warning := Error;\n-      Reset_Tree             : Boolean := True)\n+      Reset_Tree             : Boolean := True;\n+      Current_Dir            : String := \"\")\n    is\n    begin\n       Process_Project_Tree_Phase_1\n@@ -1231,8 +1232,8 @@ package body Prj.Proc is\n             From_Project_Node      => From_Project_Node,\n             From_Project_Node_Tree => From_Project_Node_Tree,\n             Report_Error           => Report_Error,\n-            Follow_Links           => Follow_Links,\n-            When_No_Sources        => When_No_Sources);\n+            When_No_Sources        => When_No_Sources,\n+            Current_Dir            => Current_Dir);\n       end if;\n    end Process;\n \n@@ -2292,8 +2293,8 @@ package body Prj.Proc is\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Report_Error           : Put_Line_Access;\n-      Follow_Links           : Boolean := True;\n-      When_No_Sources        : Error_Warning := Error)\n+      When_No_Sources        : Error_Warning := Error;\n+      Current_Dir            : String)\n    is\n       Obj_Dir    : Path_Name_Type;\n       Extending  : Project_Id;\n@@ -2306,8 +2307,7 @@ package body Prj.Proc is\n       Success := True;\n \n       if Project /= No_Project then\n-         Check\n-           (In_Tree, Project, Follow_Links, When_No_Sources);\n+         Check (In_Tree, Project, Current_Dir, When_No_Sources);\n       end if;\n \n       --  If main project is an extending all project, set the object\n@@ -2428,7 +2428,7 @@ package body Prj.Proc is\n    procedure Recursive_Check\n      (Project         : Project_Id;\n       In_Tree         : Project_Tree_Ref;\n-      Follow_Links    : Boolean;\n+      Current_Dir     : String;\n       When_No_Sources : Error_Warning)\n    is\n       Data                  : Project_Data;\n@@ -2451,8 +2451,7 @@ package body Prj.Proc is\n          --  Call itself for a possible extended project.\n          --  (if there is no extended project, then nothing happens).\n \n-         Recursive_Check\n-           (Data.Extends, In_Tree, Follow_Links, When_No_Sources);\n+         Recursive_Check (Data.Extends, In_Tree, Current_Dir, When_No_Sources);\n \n          --  Call itself for all imported projects\n \n@@ -2461,7 +2460,7 @@ package body Prj.Proc is\n             Recursive_Check\n               (In_Tree.Project_Lists.Table\n                  (Imported_Project_List).Project,\n-               In_Tree, Follow_Links, When_No_Sources);\n+               In_Tree, Current_Dir, When_No_Sources);\n             Imported_Project_List :=\n               In_Tree.Project_Lists.Table\n                 (Imported_Project_List).Next;\n@@ -2474,7 +2473,8 @@ package body Prj.Proc is\n          end if;\n \n          Prj.Nmsc.Check\n-           (Project, In_Tree, Error_Report, Follow_Links, When_No_Sources);\n+           (Project, In_Tree, Error_Report, When_No_Sources,\n+            Current_Dir);\n       end if;\n    end Recursive_Check;\n "}, {"sha": "1074f3ad202e39d5ec3882e0822ca42cddb5d518", "filename": "gcc/ada/prj-proc.ads", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-proc.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj-proc.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.ads?ref=6c1f47ee4b24ebae655517ad3ea934856aae662d", "patch": "@@ -38,17 +38,14 @@ package Prj.Proc is\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Report_Error           : Put_Line_Access;\n-      Follow_Links           : Boolean := True;\n       When_No_Sources        : Error_Warning := Error;\n-      Reset_Tree             : Boolean := True);\n+      Reset_Tree             : Boolean := True;\n+      Current_Dir            : String := \"\");\n    --  Process a project file tree into project file data structures. If\n    --  Report_Error is null, use the error reporting mechanism. Otherwise,\n    --  report errors using Report_Error.\n    --\n-   --  If Follow_Links is False, it is assumed that the project doesn't contain\n-   --  any file duplicated through symbolic links (although the latter are\n-   --  still valid if they point to a file which is outside of the project),\n-   --  and that no directory has a name which is a valid source name.\n+   --  Current_Dir is for optimization purposes, avoiding extra system calls.\n    --\n    --  When_No_Sources indicates what should be done when no sources are found\n    --  in a project for a specified or implied language.\n@@ -79,8 +76,8 @@ package Prj.Proc is\n       From_Project_Node      : Project_Node_Id;\n       From_Project_Node_Tree : Project_Node_Tree_Ref;\n       Report_Error           : Put_Line_Access;\n-      Follow_Links           : Boolean := True;\n-      When_No_Sources        : Error_Warning := Error);\n+      When_No_Sources        : Error_Warning := Error;\n+      Current_Dir            : String);\n    --  See documentation of parameters in procedure Process above\n \n end Prj.Proc;"}, {"sha": "8f6e1a7e7537b4e37b8e707d0945584de72e02ab", "filename": "gcc/ada/prj.adb", "status": "modified", "additions": 90, "deletions": 63, "changes": 153, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.adb?ref=6c1f47ee4b24ebae655517ad3ea934856aae662d", "patch": "@@ -232,17 +232,36 @@ package body Prj is\n       Naming   : Naming_Data) return File_Name_Type\n    is\n       Language_Id : Name_Id;\n-      Element_Id  : Array_Element_Id;\n-      Element     : Array_Element;\n-      Suffix      : File_Name_Type := No_File;\n-      Lang        : Language_Index;\n \n    begin\n       Name_Len := 0;\n       Add_Str_To_Name_Buffer (Language);\n       To_Lower (Name_Buffer (1 .. Name_Len));\n       Language_Id := Name_Find;\n \n+      return\n+        Body_Suffix_Id_Of\n+          (In_Tree     => In_Tree,\n+           Language_Id => Language_Id,\n+           Naming      => Naming);\n+   end Body_Suffix_Id_Of;\n+\n+   -----------------------\n+   -- Body_Suffix_Id_Of --\n+   -----------------------\n+\n+   function Body_Suffix_Id_Of\n+     (In_Tree     : Project_Tree_Ref;\n+      Language_Id : Name_Id;\n+      Naming      : Naming_Data) return File_Name_Type\n+   is\n+      Element_Id : Array_Element_Id;\n+      Element    : Array_Element;\n+      Suffix     : File_Name_Type := No_File;\n+      Lang       : Language_Index;\n+\n+   begin\n+      --  ??? This seems to be only for Ada_Only mode...\n       Element_Id := Naming.Body_Suffix;\n       while Element_Id /= No_Array_Element loop\n          Element := In_Tree.Array_Elements.Table (Element_Id);\n@@ -526,8 +545,7 @@ package body Prj is\n             In_Tree.Projects.Table (Project).Seen := True;\n             Action (Project, With_State);\n \n-            List :=\n-              In_Tree.Projects.Table (Project).Imported_Projects;\n+            List := In_Tree.Projects.Table (Project).Imported_Projects;\n             while List /= Empty_Project_List loop\n                Recursive_Check (In_Tree.Project_Lists.Table (List).Project);\n                List := In_Tree.Project_Lists.Table (List).Next;\n@@ -560,6 +578,9 @@ package body Prj is\n    -- Hash --\n    ----------\n \n+   function Hash is new System.HTable.Hash (Header_Num => Header_Num);\n+   --  Used in implementation of other functions Hash below\n+\n    function Hash (Name : File_Name_Type) return Header_Num is\n    begin\n       return Hash (Get_Name_String (Name));\n@@ -644,25 +665,16 @@ package body Prj is\n    function Is_A_Language\n      (Tree          : Project_Tree_Ref;\n       Data          : Project_Data;\n-      Language_Name : String) return Boolean\n+      Language_Name : Name_Id) return Boolean\n    is\n-      Lang_Id : Name_Id;\n-\n    begin\n-      Name_Len := 0;\n-      Add_Str_To_Name_Buffer (Language_Name);\n-      To_Lower (Name_Buffer (1 .. Name_Len));\n-      Lang_Id := Name_Find;\n-\n       if Get_Mode = Ada_Only then\n          declare\n             List : Name_List_Index := Data.Languages;\n-\n          begin\n             while List /= No_Name_List loop\n-               if Tree.Name_Lists.Table (List).Name = Lang_Id then\n+               if Tree.Name_Lists.Table (List).Name = Language_Name then\n                   return True;\n-\n                else\n                   List := Tree.Name_Lists.Table (List).Next;\n                end if;\n@@ -671,15 +683,14 @@ package body Prj is\n \n       else\n          declare\n-            Lang_Ind  : Language_Index;\n+            Lang_Ind  : Language_Index := Data.First_Language_Processing;\n             Lang_Data : Language_Data;\n \n          begin\n-            Lang_Ind := Data.First_Language_Processing;\n             while Lang_Ind /= No_Language_Index loop\n                Lang_Data := Tree.Languages_Data.Table (Lang_Ind);\n \n-               if Lang_Data.Name = Lang_Id then\n+               if Lang_Data.Name = Language_Name then\n                   return True;\n                end if;\n \n@@ -734,10 +745,11 @@ package body Prj is\n \n          when others =>\n             declare\n-               Supp : Supp_Language;\n-               Supp_Index : Supp_Language_Index := In_Project.Supp_Languages;\n+               Supp       : Supp_Language;\n+               Supp_Index : Supp_Language_Index;\n \n             begin\n+               Supp_Index := In_Project.Supp_Languages;\n                while Supp_Index /= No_Supp_Language_Index loop\n                   Supp := In_Tree.Present_Languages.Table (Supp_Index);\n \n@@ -772,11 +784,11 @@ package body Prj is\n \n          when others =>\n             declare\n-               Supp : Supp_Language_Data;\n-               Supp_Index : Supp_Language_Index :=\n-                 In_Project.Supp_Language_Processing;\n+               Supp       : Supp_Language_Data;\n+               Supp_Index : Supp_Language_Index;\n \n             begin\n+               Supp_Index := In_Project.Supp_Language_Processing;\n                while Supp_Index /= No_Supp_Language_Index loop\n                   Supp := In_Tree.Supp_Languages.Table (Supp_Index);\n \n@@ -811,7 +823,6 @@ package body Prj is\n          Language_Id := Name_Find;\n \n          Lang := In_Tree.First_Language;\n-\n          while Lang /= No_Language_Index loop\n             if In_Tree.Languages_Data.Table (Lang).Name = Language_Id then\n                return\n@@ -870,12 +881,11 @@ package body Prj is\n       Name_Buffer (1 .. Name_Len) := To_Lower (Name_Buffer (1 .. Name_Len));\n       Lang := Name_Find;\n \n-      Suffix := In_Tree.Private_Part.Default_Naming.Spec_Suffix;\n-      Found := False;\n-\n       --  Look for an element of the spec sufix array indexed by the language\n       --  name. If one is found, put the default value.\n \n+      Suffix := In_Tree.Private_Part.Default_Naming.Spec_Suffix;\n+      Found := False;\n       while Suffix /= No_Array_Element and then not Found loop\n          Element := In_Tree.Array_Elements.Table (Suffix);\n \n@@ -911,12 +921,11 @@ package body Prj is\n            Array_Element_Table.Last (In_Tree.Array_Elements);\n       end if;\n \n-      Suffix := In_Tree.Private_Part.Default_Naming.Body_Suffix;\n-      Found := False;\n-\n       --  Look for an element of the body sufix array indexed by the language\n       --  name. If one is found, put the default value.\n \n+      Suffix := In_Tree.Private_Part.Default_Naming.Body_Suffix;\n+      Found := False;\n       while Suffix /= No_Array_Element and then not Found loop\n          Element := In_Tree.Array_Elements.Table (Suffix);\n \n@@ -1048,17 +1057,17 @@ package body Prj is\n \n          when others =>\n             declare\n-               Supp : Supp_Language;\n-               Supp_Index : Supp_Language_Index := In_Project.Supp_Languages;\n+               Supp       : Supp_Language;\n+               Supp_Index : Supp_Language_Index;\n \n             begin\n+               Supp_Index := In_Project.Supp_Languages;\n                while Supp_Index /= No_Supp_Language_Index loop\n-                  Supp := In_Tree.Present_Languages.Table\n-                                                                (Supp_Index);\n+                  Supp := In_Tree.Present_Languages.Table (Supp_Index);\n \n                   if Supp.Index = Language then\n-                     In_Tree.Present_Languages.Table\n-                                            (Supp_Index).Present := Present;\n+                     In_Tree.Present_Languages.Table (Supp_Index).Present :=\n+                       Present;\n                      return;\n                   end if;\n \n@@ -1069,8 +1078,8 @@ package body Prj is\n                         Next  => In_Project.Supp_Languages);\n                Present_Language_Table.Increment_Last\n                  (In_Tree.Present_Languages);\n-               Supp_Index := Present_Language_Table.Last\n-                 (In_Tree.Present_Languages);\n+               Supp_Index :=\n+                 Present_Language_Table.Last (In_Tree.Present_Languages);\n                In_Tree.Present_Languages.Table (Supp_Index) :=\n                  Supp;\n                In_Project.Supp_Languages := Supp_Index;\n@@ -1095,7 +1104,7 @@ package body Prj is\n \n          when others =>\n             declare\n-               Supp : Supp_Language_Data;\n+               Supp       : Supp_Language_Data;\n                Supp_Index : Supp_Language_Index;\n \n             begin\n@@ -1140,18 +1149,16 @@ package body Prj is\n \n          when others =>\n             declare\n-               Supp : Supp_Suffix;\n-               Supp_Index : Supp_Language_Index :=\n-                 In_Project.Naming.Supp_Suffixes;\n+               Supp       : Supp_Suffix;\n+               Supp_Index : Supp_Language_Index;\n \n             begin\n+               Supp_Index := In_Project.Naming.Supp_Suffixes;\n                while Supp_Index /= No_Supp_Language_Index loop\n-                  Supp := In_Tree.Supp_Suffixes.Table\n-                                                            (Supp_Index);\n+                  Supp := In_Tree.Supp_Suffixes.Table (Supp_Index);\n \n                   if Supp.Index = For_Language then\n-                     In_Tree.Supp_Suffixes.Table\n-                       (Supp_Index).Suffix := Suffix;\n+                     In_Tree.Supp_Suffixes.Table (Supp_Index).Suffix := Suffix;\n                      return;\n                   end if;\n \n@@ -1160,10 +1167,8 @@ package body Prj is\n \n                Supp := (Index => For_Language, Suffix => Suffix,\n                         Next  => In_Project.Naming.Supp_Suffixes);\n-               Supp_Suffix_Table.Increment_Last\n-                 (In_Tree.Supp_Suffixes);\n-               Supp_Index := Supp_Suffix_Table.Last\n-                 (In_Tree.Supp_Suffixes);\n+               Supp_Suffix_Table.Increment_Last (In_Tree.Supp_Suffixes);\n+               Supp_Index := Supp_Suffix_Table.Last (In_Tree.Supp_Suffixes);\n                In_Tree.Supp_Suffixes.Table (Supp_Index) := Supp;\n                In_Project.Naming.Supp_Suffixes := Supp_Index;\n             end;\n@@ -1224,6 +1229,14 @@ package body Prj is\n    procedure Set_Mode (New_Mode : Mode) is\n    begin\n       Current_Mode := New_Mode;\n+      case New_Mode is\n+         when Ada_Only =>\n+            Default_Language_Is_Ada := True;\n+            Must_Check_Configuration := False;\n+         when Multi_Language =>\n+            Default_Language_Is_Ada := False;\n+            Must_Check_Configuration := True;\n+      end case;\n    end Set_Mode;\n \n    ---------------------\n@@ -1283,19 +1296,36 @@ package body Prj is\n       Naming   : Naming_Data) return File_Name_Type\n    is\n       Language_Id : Name_Id;\n-      Element_Id  : Array_Element_Id;\n-      Element     : Array_Element;\n-      Suffix      : File_Name_Type := No_File;\n-      Lang        : Language_Index;\n \n    begin\n       Name_Len := 0;\n       Add_Str_To_Name_Buffer (Language);\n       To_Lower (Name_Buffer (1 .. Name_Len));\n       Language_Id := Name_Find;\n \n-      Element_Id := Naming.Spec_Suffix;\n+      return\n+        Spec_Suffix_Id_Of\n+          (In_Tree     => In_Tree,\n+           Language_Id => Language_Id,\n+           Naming      => Naming);\n+   end Spec_Suffix_Id_Of;\n+\n+   -----------------------\n+   -- Spec_Suffix_Id_Of --\n+   -----------------------\n \n+   function Spec_Suffix_Id_Of\n+     (In_Tree     : Project_Tree_Ref;\n+      Language_Id : Name_Id;\n+      Naming      : Naming_Data) return File_Name_Type\n+   is\n+      Element_Id : Array_Element_Id;\n+      Element    : Array_Element;\n+      Suffix     : File_Name_Type := No_File;\n+      Lang       : Language_Index;\n+\n+   begin\n+      Element_Id := Naming.Spec_Suffix;\n       while Element_Id /= No_Array_Element loop\n          Element := In_Tree.Array_Elements.Table (Element_Id);\n \n@@ -1308,7 +1338,6 @@ package body Prj is\n \n       if Current_Mode = Multi_Language then\n          Lang := In_Tree.First_Language;\n-\n          while Lang /= No_Language_Index loop\n             if In_Tree.Languages_Data.Table (Lang).Name = Language_Id then\n                Suffix :=\n@@ -1346,7 +1375,6 @@ package body Prj is\n       Language_Id := Name_Find;\n \n       Element_Id := Naming.Spec_Suffix;\n-\n       while Element_Id /= No_Array_Element loop\n          Element := In_Tree.Array_Elements.Table (Element_Id);\n \n@@ -1359,7 +1387,6 @@ package body Prj is\n \n       if Current_Mode = Multi_Language then\n          Lang := In_Tree.First_Language;\n-\n          while Lang /= No_Language_Index loop\n             if In_Tree.Languages_Data.Table (Lang).Name = Language_Id then\n                Suffix :=\n@@ -1416,11 +1443,11 @@ package body Prj is\n \n          when others =>\n             declare\n-               Supp : Supp_Suffix;\n-               Supp_Index : Supp_Language_Index :=\n-                 In_Project.Naming.Supp_Suffixes;\n+               Supp       : Supp_Suffix;\n+               Supp_Index : Supp_Language_Index;\n \n             begin\n+               Supp_Index := In_Project.Naming.Supp_Suffixes;\n                while Supp_Index /= No_Supp_Language_Index loop\n                   Supp := In_Tree.Supp_Suffixes.Table (Supp_Index);\n "}, {"sha": "b242c2cead89e200413df4f5a5999c5c0963514d", "filename": "gcc/ada/prj.ads", "status": "modified", "additions": 251, "deletions": 87, "changes": 338, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fprj.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj.ads?ref=6c1f47ee4b24ebae655517ad3ea934856aae662d", "patch": "@@ -62,6 +62,17 @@ package Prj is\n    procedure Set_Mode (New_Mode : Mode);\n    pragma Inline (Set_Mode);\n \n+   Default_Language_Is_Ada : Boolean := True;\n+   --  If no language was defined in the project or the configuration file, it\n+   --  is an error, unless this variable is True, in which case it defaults to\n+   --  Ada. Calling Set_Mode will reset this variable, default is for Ada_Only.\n+\n+   Must_Check_Configuration : Boolean := False;\n+   --  Whether the contents of the configuration file must be checked. This is\n+   --  in general only needed by gprbuild itself, since other applications can\n+   --  ignore such errors when they don't need to build directly. Calling\n+   --  Set_Mode will reset this variable, default is for Ada_Only.\n+\n    function In_Configuration return Boolean;\n    pragma Inline (In_Configuration);\n \n@@ -74,8 +85,8 @@ package Prj is\n \n    type Project_Tree_Data;\n    type Project_Tree_Ref is access all Project_Tree_Data;\n-   --  Reference to a project tree.\n-   --  Several project trees may exist in memory at the same time.\n+   --  Reference to a project tree. Several project trees may exist in memory\n+   --  at the same time.\n \n    No_Project_Tree : constant Project_Tree_Ref;\n \n@@ -260,24 +271,33 @@ package Prj is\n    --  The table that contains all packages\n \n    type Language_Index is new Nat;\n+   --  Index of language data\n \n    No_Language_Index : constant Language_Index := 0;\n+   --  Constant indicating that there is no language data\n \n    procedure Display_Language_Name\n      (In_Tree  : Project_Tree_Ref;\n       Language : Language_Index);\n+   --  Output the name of a language\n \n-   type Header_Num is range 0 .. 2047;\n-\n-   function Hash is new System.HTable.Hash (Header_Num => Header_Num);\n+   type Header_Num is range 0 .. 6150;\n+   --  Size for hash table below. The upper bound is an arbitrary value, the\n+   --  value here was chosen after testing to determine a good compromise\n+   --  between speed of access and memory usage.\n \n    function Hash (Name : Name_Id)        return Header_Num;\n    function Hash (Name : File_Name_Type) return Header_Num;\n    function Hash (Name : Path_Name_Type) return Header_Num;\n+   --  Used for computing hash values for names put into above hash table\n \n    type Language_Kind is (File_Based, Unit_Based);\n+   --  Type for the kind of language. All languages are file based, except Ada\n+   --  which is unit based.\n \n    type Dependency_File_Kind is (None, Makefile, ALI_File);\n+   --  Type of dependency to be checked: no dependency file, Makefile fragment\n+   --  or ALI file (for Ada).\n \n    Makefile_Dependency_Suffix : constant String := \".d\";\n    ALI_Dependency_Suffix      : constant String := \".ali\";\n@@ -345,8 +365,6 @@ package Prj is\n \n    No_Source : constant Source_Id := 0;\n \n-   --  All the fields in the below record should be commented ???\n-\n    type Language_Config is record\n       Kind : Language_Kind := File_Based;\n       --  Kind of language. All languages are file based, except Ada which is\n@@ -370,47 +388,104 @@ package Prj is\n       --  shared libraries. Specified in the configuration. When not specified,\n       --  there is no need for such switch.\n \n-      Runtime_Library_Dir : Name_Id := No_Name;\n+      Runtime_Library_Dir        : Name_Id := No_Name;\n+      --  Path name of the runtime library directory, if any\n \n       Mapping_File_Switches  : Name_List_Index := No_Name_List;\n       --  The option(s) to provide a mapping file to the compiler. Specified in\n-      --  the configuration. When not ???\n+      --  the configuration. When value is No_Name_List, there is no mapping\n+      --  file.\n+\n+      Mapping_Spec_Suffix        : File_Name_Type       := No_File;\n+      --  Placeholder representing the spec suffix in a mapping file\n+\n+      Mapping_Body_Suffix        : File_Name_Type       := No_File;\n+      --  Placeholder representing the body suffix in a mapping file\n+\n+      Config_File_Switches       : Name_List_Index      := No_Name_List;\n+      --  The option(s) to provide a config file to the compiler. Specified in\n+      --  the configuration. When value is No_Name_List, there is no config\n+      --  file.\n+\n+      Dependency_Kind            : Dependency_File_Kind := None;\n+      --  The kind of dependency to be checked: none, Makefile fragment or\n+      --  ALI file (for Ada).\n+\n+      Dependency_Option          : Name_List_Index      := No_Name_List;\n+      --  The option(s) to be used to create the dependency file. When value is\n+      --  No_Name_List, there is not such option(s).\n+\n+      Compute_Dependency         : Name_List_Index      := No_Name_List;\n+      --  Hold the value of attribute Dependency_Driver, if declared for the\n+      --  language.\n \n-      Mapping_Spec_Suffix  : File_Name_Type       := No_File;\n-      Mapping_Body_Suffix  : File_Name_Type       := No_File;\n-      Config_File_Switches : Name_List_Index      := No_Name_List;\n-      Dependency_Kind      : Dependency_File_Kind := None;\n-      Dependency_Option    : Name_List_Index      := No_Name_List;\n-      Compute_Dependency   : Name_List_Index      := No_Name_List;\n-      Include_Option       : Name_List_Index      := No_Name_List;\n+      Include_Option             : Name_List_Index      := No_Name_List;\n+      --  Hold the value of attribute Include_Switches, if declared for the\n+      --  language.\n \n       Include_Path : Name_Id := No_Name;\n-      --  Name of an environment variable\n+      --  Name of environment variable declared by attribute Include_Path for\n+      --  the language.\n \n       Include_Path_File : Name_Id := No_Name;\n-      --  Name of an environment variable\n+      --  Name of environment variable declared by attribute Include_Path_File\n+      --  for the language.\n \n       Objects_Path : Name_Id := No_Name;\n-      --  Name of an environment variable\n+      --  Name of environment variable declared by attribute Objects_Path for\n+      --  the language.\n \n       Objects_Path_File : Name_Id := No_Name;\n-      --  Name of an environment variable\n+      --  Name of environment variable declared by attribute Objects_Path_File\n+      --  for the language.\n+\n+      Config_Body                : Name_Id         := No_Name;\n+      --  The template for a pragma Source_File_Name(_Project) for a specific\n+      --  file name of a body.\n \n-      Config_Body           : Name_Id         := No_Name;\n       Config_Spec           : Name_Id         := No_Name;\n+      --  The template for a pragma Source_File_Name(_Project) for a specific\n+      --  file name of a spec.\n+\n       Config_Body_Pattern   : Name_Id         := No_Name;\n+      --  The template for a pragma Source_File_Name(_Project) for a naming\n+      --  body pattern.\n+\n       Config_Spec_Pattern   : Name_Id         := No_Name;\n-      Config_File_Unique    : Boolean         := False;\n-      Runtime_Project       : Path_Name_Type  := No_Path;\n-      Binder_Driver         : File_Name_Type  := No_File;\n-      Binder_Driver_Path    : Path_Name_Type  := No_Path;\n-      Binder_Required_Switches : Name_List_Index      := No_Name_List;\n-      Binder_Prefix         : Name_Id         := No_Name;\n-      Toolchain_Version     : Name_Id         := No_Name;\n-      Toolchain_Description : Name_Id         := No_Name;\n-      PIC_Option            : Name_Id         := No_Name;\n-      Objects_Generated     : Boolean         := True;\n+      --  The template for a pragma Source_File_Name(_Project) for a naming\n+      --  spec pattern.\n+\n+      Config_File_Unique         : Boolean         := False;\n+      --  Indicate if the config file specified to the compiler needs to be\n+      --  unique. If it is unique, then all config files are concatenated into\n+      --  a temp config file.\n+\n+      Binder_Driver              : File_Name_Type  := No_File;\n+      --  The name of the binder driver for the language, if any\n+\n+      Binder_Driver_Path         : Path_Name_Type  := No_Path;\n+      --  The path name of the binder driver\n+\n+      Binder_Required_Switches   : Name_List_Index      := No_Name_List;\n+      --  Hold the value of attribute Binder'Required_Switches for the language\n+\n+      Binder_Prefix              : Name_Id         := No_Name;\n+      --  Hold the value of attribute Binder'Prefixthe language\n+\n+      Toolchain_Version          : Name_Id         := No_Name;\n+      --  Hold the value of attribute Toolchain_Version for the language\n+\n+      Toolchain_Description      : Name_Id         := No_Name;\n+      --  Hold the value of attribute Toolchain_Description for the language\n+\n+      PIC_Option                 : Name_Id         := No_Name;\n+      --  Hold the value of attribute Compiler'PIC_Option for the language\n+\n+      Objects_Generated          : Boolean         := True;\n+      --  Indicates if objects are generated for the language\n+\n    end record;\n+   --  Record describing the configuration of a language\n \n    No_Language_Config : constant Language_Config :=\n                           (Kind                       => File_Based,\n@@ -437,7 +512,6 @@ package Prj is\n                            Config_Body_Pattern        => No_Name,\n                            Config_Spec_Pattern        => No_Name,\n                            Config_File_Unique         => False,\n-                           Runtime_Project            => No_Path,\n                            Binder_Driver              => No_File,\n                            Binder_Driver_Path         => No_Path,\n                            Binder_Required_Switches   => No_Name_List,\n@@ -493,30 +567,78 @@ package Prj is\n \n    type Source_Kind is (Spec, Impl, Sep);\n \n-   --  Following record needs full comments on every field ???\n-\n    type Source_Data is record\n       Project             : Project_Id            := No_Project;\n+      --  Project of the source\n+\n       Language_Name       : Name_Id               := No_Name;\n+      --  Name of the language of the source\n+\n       Language            : Language_Index        := No_Language_Index;\n+      --  Index of the language\n+\n+      Lang_Kind           : Language_Kind         := File_Based;\n+      --  Kind of the language\n+\n       Alternate_Languages : Alternate_Language_Id := No_Alternate_Language;\n+      --  List of languages a header file may also be, in addition of\n+      --  language Language_Name.\n+\n       Kind                : Source_Kind           := Spec;\n-      Dependency          : Dependency_File_Kind  := Makefile;\n+      --  Kind of the source: spec, body or subunit\n+\n+      Dependency          : Dependency_File_Kind  := None;\n+      --  Kind of dependency: none, Makefile fragment or ALI file\n+\n       Other_Part          : Source_Id             := No_Source;\n+      --  Source ID for the other part, if any: for a spec, indicates its body;\n+      --  for a body, indicates its spec.\n+\n       Unit                : Name_Id               := No_Name;\n+      --  Name of the unit, if language is unit based\n+\n       Index               : Int                   := 0;\n+      --  Index of the source in a multi unit source file\n+\n       Locally_Removed     : Boolean               := False;\n+      --  True if the source has been \"excluded\"\n+\n+      Get_Object          : Boolean               := False;\n+      --  Indicates that the object of the source should be put in the global\n+      --  archive. This is for Ada, when only the closure of a main needs to\n+      --  be compiled/recompiled.\n+\n       Replaced_By         : Source_Id             := No_Source;\n+\n       File                : File_Name_Type        := No_File;\n+      --  Canonical file name of the source\n+\n       Display_File        : File_Name_Type        := No_File;\n+      --  File name of the source, for display purposes\n+\n       Path                : Path_Name_Type        := No_Path;\n+      --  Canonical path name of the source\n+\n       Display_Path        : Path_Name_Type        := No_Path;\n+      --  Path name of the source, for display purposes\n+\n       Source_TS           : Time_Stamp_Type       := Empty_Time_Stamp;\n+      --  Time stamp of the source file\n+\n       Object_Project      : Project_Id            := No_Project;\n+      --  Project where the object file is\n+\n       Object_Exists       : Boolean               := True;\n+      --  True if an object file exists\n+\n       Object              : File_Name_Type        := No_File;\n+      --  File name of the object file\n+\n       Current_Object_Path : Path_Name_Type        := No_Path;\n+      --  Object path of an existing object file\n+\n       Object_Path         : Path_Name_Type        := No_Path;\n+      --  Object path of the real object file\n \n       Object_TS : Time_Stamp_Type := Empty_Time_Stamp;\n       --  Object file time stamp\n@@ -525,33 +647,49 @@ package Prj is\n       --  Dependency file simple name\n \n       Current_Dep_Path : Path_Name_Type := No_Path;\n+      --  Path name of an existing dependency file\n \n       Dep_Path : Path_Name_Type := No_Path;\n-      --  Dependency full path name\n+      --  Path name of the real dependency file\n \n       Dep_TS : Time_Stamp_Type := Empty_Time_Stamp;\n       --  Dependency file time stamp\n \n-      Switches         : File_Name_Type  := No_File;\n-      Switches_Path    : Path_Name_Type  := No_Path;\n-      Switches_TS      : Time_Stamp_Type := Empty_Time_Stamp;\n-      Naming_Exception : Boolean         := False;\n-      Next_In_Sources  : Source_Id       := No_Source;\n-      Next_In_Project  : Source_Id       := No_Source;\n-      Next_In_Lang     : Source_Id       := No_Source;\n+      Switches            : File_Name_Type  := No_File;\n+      --  File name of the switches file\n+\n+      Switches_Path       : Path_Name_Type  := No_Path;\n+      --  Path name of the switches file\n+\n+      Switches_TS         : Time_Stamp_Type := Empty_Time_Stamp;\n+      --  Switches file time stamp\n+\n+      Naming_Exception    : Boolean         := False;\n+      --  True if the source has an exceptional name\n+\n+      Next_In_Sources     : Source_Id       := No_Source;\n+      --  Link to another source in the project tree\n+\n+      Next_In_Project     : Source_Id       := No_Source;\n+      --  Link to another source in the project\n+\n+      Next_In_Lang        : Source_Id       := No_Source;\n+      --  Link to another source of the same language\n    end record;\n \n    No_Source_Data : constant Source_Data :=\n                       (Project             => No_Project,\n                        Language_Name       => No_Name,\n                        Language            => No_Language_Index,\n+                       Lang_Kind           => File_Based,\n                        Alternate_Languages => No_Alternate_Language,\n                        Kind                => Spec,\n-                       Dependency          => Makefile,\n+                       Dependency          => None,\n                        Other_Part          => No_Source,\n                        Unit                => No_Name,\n                        Index               => 0,\n                        Locally_Removed     => False,\n+                       Get_Object          => False,\n                        Replaced_By         => No_Source,\n                        File                => No_File,\n                        Display_File        => No_File,\n@@ -855,6 +993,11 @@ package Prj is\n       Language : String;\n       Naming   : Naming_Data) return File_Name_Type;\n \n+   function Spec_Suffix_Id_Of\n+     (In_Tree     : Project_Tree_Ref;\n+      Language_Id : Name_Id;\n+      Naming      : Naming_Data) return File_Name_Type;\n+\n    procedure Set_Spec_Suffix\n      (In_Tree  : Project_Tree_Ref;\n       Language : String;\n@@ -866,6 +1009,11 @@ package Prj is\n       Language : String;\n       Naming   : Naming_Data) return File_Name_Type;\n \n+   function Body_Suffix_Id_Of\n+     (In_Tree     : Project_Tree_Ref;\n+      Language_Id : Name_Id;\n+      Naming      : Naming_Data) return File_Name_Type;\n+\n    function Body_Suffix_Of\n      (In_Tree  : Project_Tree_Ref;\n       Language : String;\n@@ -1034,10 +1182,10 @@ package Prj is\n       --  True if the project is externally built. In such case, the Project\n       --  Manager will not modify anything in this project.\n \n-      Languages        : Name_List_Index := No_Name_List;\n+      Languages : Name_List_Index := No_Name_List;\n       --  The list of languages of the sources of this project\n \n-      Config           : Project_Configuration;\n+      Config : Project_Configuration;\n \n       First_Referred_By : Project_Id := No_Project;\n       --  The project, if any, that was the first to be known as importing or\n@@ -1141,7 +1289,7 @@ package Prj is\n       Ada_Sources : String_List_Id := Nil_String;\n       --  The list of all the Ada source file names (gnatmake only).\n \n-      Sources                 : String_List_Id := Nil_String;\n+      Sources : String_List_Id := Nil_String;\n       --  Identical to Ada_Sources. For upward compatibility of GPS.\n \n       First_Source : Source_Id := No_Source;\n@@ -1207,7 +1355,7 @@ package Prj is\n       --  The naming scheme of this project file\n \n       First_Language_Processing : Language_Index := No_Language_Index;\n-      --  Comment needed ???\n+      --  First index of the language data in the project\n \n       Decl : Declarations := No_Declarations;\n       --  The declarations (variables, attributes and packages) of this project\n@@ -1229,8 +1377,9 @@ package Prj is\n       --  use this field directly outside of the compiler, use\n       --  Prj.Env.Ada_Objects_Path instead.\n \n-      Objects_Path                  : String_Access := null;\n-      --  ???\n+      Objects_Path : String_Access := null;\n+      --  The cached value of the object dir path, used during the binding\n+      --  phase of gprbuild.\n \n       Objects_Path_File_With_Libs : Path_Name_Type := No_Path;\n       --  The cached value of the object path temp file (including library\n@@ -1247,13 +1396,13 @@ package Prj is\n       --  An indication that the configuration pragmas file is a temporary file\n       --  that must be deleted at the end.\n \n-      Linker_Name                    : File_Name_Type  := No_File;\n+      Linker_Name : File_Name_Type  := No_File;\n       --  Value of attribute Language_Processing'Linker in the project file\n \n-      Linker_Path                    : Path_Name_Type  := No_Path;\n+      Linker_Path : Path_Name_Type  := No_Path;\n       --  Path of linker when attribute Language_Processing'Linker is specified\n \n-      Minimum_Linker_Options         : Name_List_Index := No_Name_List;\n+      Minimum_Linker_Options : Name_List_Index := No_Name_List;\n       --  List of options specified in attribute\n       --  Language_Processing'Minimum_Linker_Options.\n \n@@ -1280,19 +1429,32 @@ package Prj is\n       --  True if there are comments in the project sources that cannot be kept\n       --  in the project tree.\n \n-      --  For gprmake\n+      ------------------\n+      --  For gprmake --\n+      ------------------\n \n       Langs          : Languages_In_Project := No_Languages;\n       Supp_Languages : Supp_Language_Index  := No_Supp_Language_Index;\n       --  Indicate the different languages of the source of this project\n \n-      Ada_Sources_Present   : Boolean := True;\n-      Other_Sources_Present : Boolean := True;\n-      First_Other_Source    : Other_Source_Id := No_Other_Source;\n-      Last_Other_Source     : Other_Source_Id := No_Other_Source;\n+      Ada_Sources_Present            : Boolean := True;\n+      --  True if there are Ada sources in the project\n+\n+      Other_Sources_Present          : Boolean := True;\n+      --  True if there are sources from languages other than Ada in the\n+      --  project.\n+\n+      First_Other_Source             : Other_Source_Id := No_Other_Source;\n+      --  First source of a language other than Ada\n+\n+      Last_Other_Source              : Other_Source_Id := No_Other_Source;\n+      --  Last source of a language other than Ada\n+\n       First_Lang_Processing : First_Language_Processing_Data :=\n-                                    Default_First_Language_Processing_Data;\n-      Supp_Language_Processing : Supp_Language_Index := No_Supp_Language_Index;\n+                                Default_First_Language_Processing_Data;\n+      Supp_Language_Processing : Supp_Language_Index :=\n+                                   No_Supp_Language_Index;\n+      --  Language configurations\n    end record;\n \n    function Empty_Project (Tree : Project_Tree_Ref) return Project_Data;\n@@ -1307,7 +1469,9 @@ package Prj is\n    function Is_A_Language\n      (Tree          : Project_Tree_Ref;\n       Data          : Project_Data;\n-      Language_Name : String) return Boolean;\n+      Language_Name : Name_Id) return Boolean;\n+   --  Whether Language_Name is one of the languages used for the project.\n+   --  Language_Name must be lower cased.\n \n    function There_Are_Ada_Sources\n      (In_Tree : Project_Tree_Ref;\n@@ -1329,12 +1493,12 @@ package Prj is\n \n    type File_Name_Data is record\n       Name         : File_Name_Type := No_File;\n-      Index        : Int        := 0;\n+      Index        : Int            := 0;\n       Display_Name : File_Name_Type := No_File;\n       Path         : Path_Name_Type := No_Path;\n       Display_Path : Path_Name_Type := No_Path;\n-      Project      : Project_Id := No_Project;\n-      Needs_Pragma : Boolean    := False;\n+      Project      : Project_Id     := No_Project;\n+      Needs_Pragma : Boolean        := False;\n    end record;\n    --  File and Path name of a spec or body\n \n@@ -1389,29 +1553,29 @@ package Prj is\n       record\n          --  Languages and sources of the project\n \n-         First_Language           : Language_Index  := No_Language_Index;\n+         First_Language : Language_Index  := No_Language_Index;\n          --\n \n-         First_Source             : Source_Id := No_Source;\n+         First_Source : Source_Id := No_Source;\n          --\n \n          --  Tables\n \n-         Languages_Data           : Language_Data_Table.Instance;\n-         Name_Lists               : Name_List_Table.Instance;\n-         String_Elements          : String_Element_Table.Instance;\n-         Variable_Elements        : Variable_Element_Table.Instance;\n-         Array_Elements           : Array_Element_Table.Instance;\n-         Arrays                   : Array_Table.Instance;\n-         Packages                 : Package_Table.Instance;\n-         Project_Lists            : Project_List_Table.Instance;\n-         Projects                 : Project_Table.Instance;\n-         Sources                  : Source_Data_Table.Instance;\n-         Alt_Langs                : Alternate_Language_Table.Instance;\n-         Units                    : Unit_Table.Instance;\n-         Units_HT                 : Units_Htable.Instance;\n-         Files_HT                 : Files_Htable.Instance;\n-         Source_Paths_HT          : Source_Paths_Htable.Instance;\n+         Languages_Data    : Language_Data_Table.Instance;\n+         Name_Lists        : Name_List_Table.Instance;\n+         String_Elements   : String_Element_Table.Instance;\n+         Variable_Elements : Variable_Element_Table.Instance;\n+         Array_Elements    : Array_Element_Table.Instance;\n+         Arrays            : Array_Table.Instance;\n+         Packages          : Package_Table.Instance;\n+         Project_Lists     : Project_List_Table.Instance;\n+         Projects          : Project_Table.Instance;\n+         Sources           : Source_Data_Table.Instance;\n+         Alt_Langs         : Alternate_Language_Table.Instance;\n+         Units             : Unit_Table.Instance;\n+         Units_HT          : Units_Htable.Instance;\n+         Files_HT          : Files_Htable.Instance;\n+         Source_Paths_HT   : Source_Paths_Htable.Instance;\n \n          --  For gprmake:\n \n@@ -1422,7 +1586,7 @@ package Prj is\n \n          --  Private part\n \n-         Private_Part             : Private_Project_Tree_Data;\n+         Private_Part : Private_Project_Tree_Data;\n       end record;\n    --  Data for a project tree\n \n@@ -1565,10 +1729,10 @@ private\n    Ignored : constant Variable_Kind := Single;\n \n    Nil_Variable_Value : constant Variable_Value :=\n-     (Project  => No_Project,\n-      Kind     => Undefined,\n-      Location => No_Location,\n-      Default  => False);\n+                          (Project  => No_Project,\n+                           Kind     => Undefined,\n+                           Location => No_Location,\n+                           Default  => False);\n \n    Virtual_Prefix : constant String := \"v$\";\n    --  The prefix for virtual extending projects. Because of the '$', which is\n@@ -1592,7 +1756,7 @@ private\n       Table_Low_Bound      => 1,\n       Table_Initial        => 5,\n       Table_Increment      => 100);\n-   --  Comment ???\n+   --  Table storing the naming data for gnatmake/gprmake\n \n    package Path_File_Table is new GNAT.Dynamic_Tables\n      (Table_Component_Type => Path_Name_Type,"}, {"sha": "208bb38f886232c03367cd86920a9d1b5e09f572", "filename": "gcc/ada/switch-m.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fswitch-m.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c1f47ee4b24ebae655517ad3ea934856aae662d/gcc%2Fada%2Fswitch-m.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.adb?ref=6c1f47ee4b24ebae655517ad3ea934856aae662d", "patch": "@@ -584,7 +584,7 @@ package body Switch.M is\n                      Bad_Switch (Switch_Chars);\n \n                   else\n-                     Follow_Links := True;\n+                     Follow_Links_For_Files := True;\n                   end if;\n \n                --  Processing for eS switch"}]}