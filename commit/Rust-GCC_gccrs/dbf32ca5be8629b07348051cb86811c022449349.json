{"sha": "dbf32ca5be8629b07348051cb86811c022449349", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJmMzJjYTViZTg2MjliMDczNDgwNTFjYjg2ODExYzAyMjQ0OTM0OQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-07-13T14:57:29Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-07-13T14:57:29Z"}, "message": "configure.ac: Don't create pth.\n\n\t* configure.ac: Don't create pth.\n\tCheck for library containing sched_yield.\n\t* configure: Regenerate.\n\t* config.h.in: Regenerate.\n\n\t* testsuite/lib/libmudflap.exp (libmudflap-init): Use\n\tmfconfig_libs in -static check.\n\nFrom-SVN: r176237", "tree": {"sha": "133760b21836feaabf58e9e01a0522ecb4834652", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/133760b21836feaabf58e9e01a0522ecb4834652"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbf32ca5be8629b07348051cb86811c022449349", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbf32ca5be8629b07348051cb86811c022449349", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbf32ca5be8629b07348051cb86811c022449349", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbf32ca5be8629b07348051cb86811c022449349/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "727a65e6fc07ea95309c875978c83c741359ad4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/727a65e6fc07ea95309c875978c83c741359ad4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/727a65e6fc07ea95309c875978c83c741359ad4e"}], "stats": {"total": 79, "additions": 67, "deletions": 12}, "files": [{"sha": "f981b1b169ff5b78d6dcd99c6636ce120dcab065", "filename": "libmudflap/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf32ca5be8629b07348051cb86811c022449349/libmudflap%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf32ca5be8629b07348051cb86811c022449349/libmudflap%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2FChangeLog?ref=dbf32ca5be8629b07348051cb86811c022449349", "patch": "@@ -1,3 +1,13 @@\n+2011-07-13  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* configure.ac: Don't create pth.\n+\tCheck for library containing sched_yield.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\n+\t* testsuite/lib/libmudflap.exp (libmudflap-init): Use\n+\tmfconfig_libs in -static check.\n+\n 2011-07-07  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \tPR libmudflap/49550"}, {"sha": "ffdd6721c01f4669d00dc0460296cb603004fd2b", "filename": "libmudflap/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf32ca5be8629b07348051cb86811c022449349/libmudflap%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf32ca5be8629b07348051cb86811c022449349/libmudflap%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfig.h.in?ref=dbf32ca5be8629b07348051cb86811c022449349", "patch": "@@ -126,6 +126,9 @@\n /* Define to 1 if you have the `dl' library (-ldl). */\n #undef HAVE_LIBDL\n \n+/* Define to 1 if you have the `rt' library (-lrt). */\n+#undef HAVE_LIBRT\n+\n /* Define to 1 if you have the `socket' library (-lsocket). */\n #undef HAVE_LIBSOCKET\n "}, {"sha": "3ce3979bda29b159b66969fbef50a8fceafc90b7", "filename": "libmudflap/configure", "status": "modified", "additions": 51, "deletions": 6, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf32ca5be8629b07348051cb86811c022449349/libmudflap%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf32ca5be8629b07348051cb86811c022449349/libmudflap%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfigure?ref=dbf32ca5be8629b07348051cb86811c022449349", "patch": "@@ -10986,12 +10986,6 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n fi\n \n \n-if test ! -d pth\n-then\n-  # libmudflapth objects are built in this subdirectory\n-  mkdir pth\n-fi\n-\n for ac_header in pthread.h\n do :\n   ac_fn_c_check_header_mongrel \"$LINENO\" \"pthread.h\" \"ac_cv_header_pthread_h\" \"$ac_includes_default\"\n@@ -11138,6 +11132,57 @@ fi\n \n fi\n \n+ac_fn_c_check_func \"$LINENO\" \"sched_yield\" \"ac_cv_func_sched_yield\"\n+if test \"x$ac_cv_func_sched_yield\" = x\"\"yes; then :\n+\n+else\n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sched_yield in -lrt\" >&5\n+$as_echo_n \"checking for sched_yield in -lrt... \" >&6; }\n+if test \"${ac_cv_lib_rt_sched_yield+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lrt  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char sched_yield ();\n+int\n+main ()\n+{\n+return sched_yield ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_rt_sched_yield=yes\n+else\n+  ac_cv_lib_rt_sched_yield=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_rt_sched_yield\" >&5\n+$as_echo \"$ac_cv_lib_rt_sched_yield\" >&6; }\n+if test \"x$ac_cv_lib_rt_sched_yield\" = x\"\"yes; then :\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBRT 1\n+_ACEOF\n+\n+  LIBS=\"-lrt $LIBS\"\n+\n+fi\n+\n+fi\n+\n \n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir"}, {"sha": "83aba5a5ba87750a8c52ec39bdf5176d6da78511", "filename": "libmudflap/configure.ac", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf32ca5be8629b07348051cb86811c022449349/libmudflap%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf32ca5be8629b07348051cb86811c022449349/libmudflap%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fconfigure.ac?ref=dbf32ca5be8629b07348051cb86811c022449349", "patch": "@@ -112,12 +112,6 @@ else\n fi\n AC_SUBST(MF_HAVE_UINTPTR_T)\n \n-if test ! -d pth\n-then\n-  # libmudflapth objects are built in this subdirectory\n-  mkdir pth\n-fi\n-\n AC_CHECK_HEADERS(pthread.h)\n \n AC_MSG_CHECKING([for thread model used by GCC])\n@@ -150,6 +144,7 @@ AC_SUBST(build_libmudflapth)\n AC_CHECK_LIB(dl, dlsym)\n \n AC_CHECK_FUNC(connect,, AC_CHECK_LIB(socket, connect))\n+AC_CHECK_FUNC(sched_yield,, AC_CHECK_LIB(rt, sched_yield))\n \n # Calculate toolexeclibdir\n # Also toolexecdir, though it's only used in toolexeclibdir"}, {"sha": "f9603553199cdc7d2b2a5e5d7b89856286cce2fd", "filename": "libmudflap/testsuite/lib/libmudflap.exp", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbf32ca5be8629b07348051cb86811c022449349/libmudflap%2Ftestsuite%2Flib%2Flibmudflap.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbf32ca5be8629b07348051cb86811c022449349/libmudflap%2Ftestsuite%2Flib%2Flibmudflap.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Ftestsuite%2Flib%2Flibmudflap.exp?ref=dbf32ca5be8629b07348051cb86811c022449349", "patch": "@@ -124,9 +124,11 @@ proc libmudflap-init { language } {\n \n     # If there is no static library then don't run tests with -static.\n     global tool\n+    global mfconfig_libs\n     set opts \"additional_flags=-static\"\n     lappend opts \"additional_flags=-fmudflap\"\n     lappend opts \"additional_flags=-lmudflap\"\n+    lappend opts \"libs=$mfconfig_libs\"\n     set src stlm[pid].c\n     set exe stlm[pid].x\n "}]}