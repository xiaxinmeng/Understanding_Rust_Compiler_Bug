{"sha": "de59d8bd163a4b2e50ab566441ab49d7212c3356", "node_id": "C_kwDOANBUbNoAKGRlNTlkOGJkMTYzYTRiMmU1MGFiNTY2NDQxYWI0OWQ3MjEyYzMzNTY", "commit": {"author": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2023-01-03T13:37:31Z"}, "committer": {"name": "Roger Sayle", "email": "roger@nextmovesoftware.com", "date": "2023-01-03T13:37:31Z"}, "message": "PR target/108229: A minor STV compute_convert_gain tweak on x86.\n\nThis patch addresses PR target/108229, which is a change in code\ngeneration during the STV pass, due to the recently approved patch\nto handle vec_select (reductions) in the vector unit.  The recent\nchange is innocent, but exposes a latent STV \"gain\" calculation issue\nthat is benign (or closely balanced) on most microarchitectures.\n\nThe issue is when STV considers converting PLUS with a MEM operand.\n\nOn TARGET_64BIT (m=1):\n\taddq 24(%rdi), %rdx\t\t// 4 bytes\nor with -m32 (m=2)\n        addl    24(%esi), %eax\t\t// 3 bytes\n        adcl    28(%esi), %edx\t\t// 3 bytes\nis being converted by STV to\n        vmovq   24(%rdi), %xmm5\t\t// 5 bytes\n        vpaddq  %xmm5, %xmm4, %xmm4\t// 4 bytes\n\nThe current code in general_scalar_chain::compute_convert_gain\nconsiders that scalar unit addition is replaced with a vector\nunit addition (usually about the same cost), but doesn't consider\nanything special about MEM operands, assuming that a scalar load\ngains/costs nothing compared to a vector load.  We can allow the\nbackend slightly better fine tuning by including in the gain\ncalculation that m scalar loads are being replaced by one vector\nload, and when optimizing for size including that we're increasing\ncode size (e.g. an extra vmovq instruction for a MEM operand).\n\nThis patch is a win on the CSiBE benchmark when compiled with -Os.\n\n2023-01-03  Roger Sayle  <roger@nextmovesoftware.com>\n\ngcc/ChangeLog\n\tPR target/108229\n\t* config/i386/i386-features.cc\n\t(general_scalar_chain::compute_convert_gain) <case PLUS>: Consider\n\tthe gain/cost of converting a MEM operand.", "tree": {"sha": "60fead982a817b50bdb0bec8b67d5ca5a14479aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60fead982a817b50bdb0bec8b67d5ca5a14479aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de59d8bd163a4b2e50ab566441ab49d7212c3356", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de59d8bd163a4b2e50ab566441ab49d7212c3356", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de59d8bd163a4b2e50ab566441ab49d7212c3356", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de59d8bd163a4b2e50ab566441ab49d7212c3356/comments", "author": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rogersayle", "id": 13512313, "node_id": "MDQ6VXNlcjEzNTEyMzEz", "avatar_url": "https://avatars.githubusercontent.com/u/13512313?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rogersayle", "html_url": "https://github.com/rogersayle", "followers_url": "https://api.github.com/users/rogersayle/followers", "following_url": "https://api.github.com/users/rogersayle/following{/other_user}", "gists_url": "https://api.github.com/users/rogersayle/gists{/gist_id}", "starred_url": "https://api.github.com/users/rogersayle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rogersayle/subscriptions", "organizations_url": "https://api.github.com/users/rogersayle/orgs", "repos_url": "https://api.github.com/users/rogersayle/repos", "events_url": "https://api.github.com/users/rogersayle/events{/privacy}", "received_events_url": "https://api.github.com/users/rogersayle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "226a498733e7919de72eb6f1bf3e16883ad159f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/226a498733e7919de72eb6f1bf3e16883ad159f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/226a498733e7919de72eb6f1bf3e16883ad159f6"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "f420f8339e8797c5a1602e360189ce4a636300dc", "filename": "gcc/config/i386/i386-features.cc", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de59d8bd163a4b2e50ab566441ab49d7212c3356/gcc%2Fconfig%2Fi386%2Fi386-features.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de59d8bd163a4b2e50ab566441ab49d7212c3356/gcc%2Fconfig%2Fi386%2Fi386-features.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-features.cc?ref=de59d8bd163a4b2e50ab566441ab49d7212c3356", "patch": "@@ -567,6 +567,14 @@ general_scalar_chain::compute_convert_gain ()\n \t      igain -= vector_const_cost (XEXP (src, 0));\n \t    if (CONST_INT_P (XEXP (src, 1)))\n \t      igain -= vector_const_cost (XEXP (src, 1));\n+\t    if (MEM_P (XEXP (src, 1)))\n+\t      {\n+\t\tif (optimize_insn_for_size_p ())\n+\t\t  igain -= COSTS_N_BYTES (m == 2 ? 3 : 5);\n+\t\telse\n+\t\t  igain += m * ix86_cost->int_load[2]\n+\t\t\t   - ix86_cost->sse_load[sse_cost_idx];\n+\t      }\n \t    break;\n \n \t  case NEG:"}]}