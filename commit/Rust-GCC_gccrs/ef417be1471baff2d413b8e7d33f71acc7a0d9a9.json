{"sha": "ef417be1471baff2d413b8e7d33f71acc7a0d9a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWY0MTdiZTE0NzFiYWZmMmQ0MTNiOGU3ZDMzZjcxYWNjN2EwZDlhOQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2011-09-06T13:31:15Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-09-06T13:31:15Z"}, "message": "sem_ch10.adb, [...] (Not_Impl_Defined_Unit): New name for Is_RM_Defined_Unit.\n\n2011-09-06  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch10.adb, impunit.ads, impunit.adb (Not_Impl_Defined_Unit): New\n\tname for Is_RM_Defined_Unit. Also several fixes to this unit.\n\nFrom-SVN: r178596", "tree": {"sha": "ed285c62dee34764677511710febf0b3cff8ac2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ed285c62dee34764677511710febf0b3cff8ac2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ef417be1471baff2d413b8e7d33f71acc7a0d9a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef417be1471baff2d413b8e7d33f71acc7a0d9a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef417be1471baff2d413b8e7d33f71acc7a0d9a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef417be1471baff2d413b8e7d33f71acc7a0d9a9/comments", "author": null, "committer": null, "parents": [{"sha": "5a7d7f9cf3bc2cacd798cae88a3de28bd1d7259d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a7d7f9cf3bc2cacd798cae88a3de28bd1d7259d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a7d7f9cf3bc2cacd798cae88a3de28bd1d7259d"}], "stats": {"total": 63, "additions": 39, "deletions": 24}, "files": [{"sha": "d08765cf1659d0f397b8d936738bc4ac046e1176", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef417be1471baff2d413b8e7d33f71acc7a0d9a9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef417be1471baff2d413b8e7d33f71acc7a0d9a9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ef417be1471baff2d413b8e7d33f71acc7a0d9a9", "patch": "@@ -1,3 +1,8 @@\n+2011-09-06  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch10.adb, impunit.ads, impunit.adb (Not_Impl_Defined_Unit): New\n+\tname for Is_RM_Defined_Unit. Also several fixes to this unit.\n+\n 2011-09-06  Robert Dewar  <dewar@adacore.com>\n \n \t* impunit.ads, impunit.adb (Is_RM_Defined_Unit): New function."}, {"sha": "be1d05744f90f32c9f24f25de0146aaacc8c53e7", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 22, "deletions": 18, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef417be1471baff2d413b8e7d33f71acc7a0d9a9/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef417be1471baff2d413b8e7d33f71acc7a0d9a9/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=ef417be1471baff2d413b8e7d33f71acc7a0d9a9", "patch": "@@ -826,11 +826,11 @@ package body Impunit is\n          return False;\n    end Is_Known_Unit;\n \n-   ------------------------\n-   -- Is_RM_Defined_Unit --\n-   ------------------------\n+   ---------------------------\n+   -- Not_Impl_Defined_Unit --\n+   ---------------------------\n \n-   function Is_RM_Defined_Unit (U : Unit_Number_Type) return Boolean is\n+   function Not_Impl_Defined_Unit (U : Unit_Number_Type) return Boolean is\n       Fname : constant File_Name_Type := Unit_File_Name (U);\n \n    begin\n@@ -848,21 +848,22 @@ package body Impunit is\n          return True;\n       end if;\n \n-      --  If length of file name is greater than 12, not RM-defined. The value\n-      --  12 here is an 8 char name with extension .ads.\n+      --  If length of file name is greater than 12, then it's a user unit\n+      --  and not a GNAT implementation defined unit.\n \n       if Name_Len > 12 then\n-         return False;\n+         return True;\n       end if;\n \n-      --  Not RM-defined if length of name greater than 12 (12 is 8 characters\n-      --  plus 4 for \".ads\" appended at the end).\n+      --  Implementation defined if unit in the gnat hierarchy\n \n-      if Length_Of_Name (Fname) > 12 then\n+      if (Name_Len = 8 and then Name_Buffer (1 .. 8) = \"gnat.ads\")\n+        or else (Name_Len > 2 and then Name_Buffer (1 .. 2) = \"g-\")\n+      then\n          return False;\n       end if;\n \n-      --  Not RM defined if file name does not start with a- s- i-\n+      --  Not implementation defined if file name does not start with a- s- i-\n \n       if Name_Len < 3\n         or else Name_Buffer (2) /= '-'\n@@ -872,14 +873,14 @@ package body Impunit is\n                    and then\n                  Name_Buffer (1) /= 's')\n       then\n-         return False;\n+         return True;\n       end if;\n \n-      --  Not RM defined if file name does not end in .ads. This can happen\n+      --  Not impl-defined if file name does not end in .ads. This can happen\n       --  when non-standard file names are being used.\n \n       if Name_Buffer (Name_Len - 3 .. Name_Len) /= \".ads\" then\n-         return False;\n+         return True;\n       end if;\n \n       --  Otherwise normalize file name to 8 characters\n@@ -891,7 +892,8 @@ package body Impunit is\n       end loop;\n \n       --  Check our lists of names, if we find a match, return corresponding\n-      --  indication of whether the file is RM defined.\n+      --  indication of whether the file is RM defined, respecting the RM\n+      --  version in which it is defined.\n \n       for J in Non_Imp_File_Names_95'Range loop\n          if Name_Buffer (1 .. 8) = Non_Imp_File_Names_95 (J).Fname then\n@@ -913,9 +915,11 @@ package body Impunit is\n          end if;\n       end loop;\n \n-      --  If no match in any of the lists, not RM defined\n+      --  If unit is in System, Ada or Interfaces hierarchies and did not match\n+      --  any entry in the list, means it is an internal implementation defined\n+      --  unit which the restriction should definition forbid.\n \n-      return False;\n-   end Is_RM_Defined_Unit;\n+      return True;\n+   end Not_Impl_Defined_Unit;\n \n end Impunit;"}, {"sha": "e5244938ef9b124f137779830a5964febf3db766", "filename": "gcc/ada/impunit.ads", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef417be1471baff2d413b8e7d33f71acc7a0d9a9/gcc%2Fada%2Fimpunit.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef417be1471baff2d413b8e7d33f71acc7a0d9a9/gcc%2Fada%2Fimpunit.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.ads?ref=ef417be1471baff2d413b8e7d33f71acc7a0d9a9", "patch": "@@ -72,10 +72,14 @@ package Impunit is\n    --  the known library units, and if so, returns True. If the name does not\n    --  match any known library unit, False is returned.\n \n-   function Is_RM_Defined_Unit (U : Unit_Number_Type) return Boolean;\n-   --  This function returns True if U represents a unit that is defined in\n-   --  the RM, as defined by the No_Implementation_Units restriction rules.\n-   --  It is used to implement this restriction, so if False is returned, it\n-   --  means that with'ing the unit violates the restriction.\n+   function Not_Impl_Defined_Unit (U : Unit_Number_Type) return Boolean;\n+   --  This function returns True if U represents a unit that is permitted by\n+   --  the restriction No_Implementation_Units (i.e. a unit in the Ada, System,\n+   --  and Interfaces hierarchies that is defined in the RM, or a user defined\n+   --  unit. It returns False if U represents a unit that is not permitted by\n+   --  this restriction, which includes units in these three hierarchies that\n+   --  are GNAT implementation defined. It also returns False for any units in\n+   --  the GNAT hierarchy, which is not strictly conforming, but so obviously\n+   --  useful that it is a reasonable deviation from the standard.\n \n end Impunit;"}, {"sha": "c6f18da4e54c20ccd434aac942b30d6cd13b8527", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ef417be1471baff2d413b8e7d33f71acc7a0d9a9/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ef417be1471baff2d413b8e7d33f71acc7a0d9a9/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=ef417be1471baff2d413b8e7d33f71acc7a0d9a9", "patch": "@@ -2380,7 +2380,9 @@ package body Sem_Ch10 is\n       --  Check No_Implementation_Units violation\n \n       if Restriction_Check_Required (No_Implementation_Units) then\n-         if not Is_RM_Defined_Unit (Get_Source_Unit (U)) then\n+         if Not_Impl_Defined_Unit (Get_Source_Unit (U)) then\n+            null;\n+         else\n             Check_Restriction (No_Implementation_Units, Nam);\n             Restriction_Violation := True;\n          end if;"}]}