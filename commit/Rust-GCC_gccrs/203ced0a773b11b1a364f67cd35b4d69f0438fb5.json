{"sha": "203ced0a773b11b1a364f67cd35b4d69f0438fb5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAzY2VkMGE3NzNiMTFiMWEzNjRmNjdjZDM1YjRkNjlmMDQzOGZiNQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2017-02-28T16:59:16Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2017-02-28T16:59:16Z"}, "message": "PR tree-optimization/79691 - -Wformat-truncation suppressed by (and only by) -Og\n\ngcc/ChangeLog:\n\n\tPR tree-optimization/79691\n\t* passes.def (pass_all_optimizations_g): Enable pass_sprintf_length.\n\ngcc/testsuite/ChangeLog:\n\n\tPR tree-optimization/79691\n\t* gcc.dg/tree-ssa/pr79691.c: New test.\n\nFrom-SVN: r245782", "tree": {"sha": "8b04d5b16abdfae3403d21fddc3784be07515613", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8b04d5b16abdfae3403d21fddc3784be07515613"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/203ced0a773b11b1a364f67cd35b4d69f0438fb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/203ced0a773b11b1a364f67cd35b4d69f0438fb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/203ced0a773b11b1a364f67cd35b4d69f0438fb5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/203ced0a773b11b1a364f67cd35b4d69f0438fb5/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a915b876abe5c82bb3efd0420ceb8d8f3faf988", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a915b876abe5c82bb3efd0420ceb8d8f3faf988", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a915b876abe5c82bb3efd0420ceb8d8f3faf988"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "3c6dbf414d2b0cc751fad4763f7e2eae5c355a11", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203ced0a773b11b1a364f67cd35b4d69f0438fb5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203ced0a773b11b1a364f67cd35b4d69f0438fb5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=203ced0a773b11b1a364f67cd35b4d69f0438fb5", "patch": "@@ -1,3 +1,8 @@\n+2017-02-28  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/79691\n+\t* passes.def (pass_all_optimizations_g): Enable pass_sprintf_length.\n+\n 2017-02-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/79729"}, {"sha": "6b0f05b07bdd063ed900c5d1a5e75bf5b758d494", "filename": "gcc/passes.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203ced0a773b11b1a364f67cd35b4d69f0438fb5/gcc%2Fpasses.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203ced0a773b11b1a364f67cd35b4d69f0438fb5/gcc%2Fpasses.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpasses.def?ref=203ced0a773b11b1a364f67cd35b4d69f0438fb5", "patch": "@@ -364,6 +364,7 @@ along with GCC; see the file COPYING3.  If not see\n       NEXT_PASS (pass_object_sizes);\n       /* Fold remaining builtins.  */\n       NEXT_PASS (pass_fold_builtins);\n+      NEXT_PASS (pass_sprintf_length, true);\n       /* Copy propagation also copy-propagates constants, this is necessary\n          to forward object-size and builtin folding results properly.  */\n       NEXT_PASS (pass_copy_prop);"}, {"sha": "3e14d498f6d8c62859d0251e04a81e6046e0642d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203ced0a773b11b1a364f67cd35b4d69f0438fb5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203ced0a773b11b1a364f67cd35b4d69f0438fb5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=203ced0a773b11b1a364f67cd35b4d69f0438fb5", "patch": "@@ -1,3 +1,8 @@\n+2017-02-28  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR tree-optimization/79691\n+\t* gcc.dg/tree-ssa/pr79691.c: New test.\n+\n 2017-02-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/79729"}, {"sha": "cef1ef192abdb606e3a3cb7ba216a2d03a08fffc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr79691.c", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/203ced0a773b11b1a364f67cd35b4d69f0438fb5/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79691.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/203ced0a773b11b1a364f67cd35b4d69f0438fb5/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79691.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr79691.c?ref=203ced0a773b11b1a364f67cd35b4d69f0438fb5", "patch": "@@ -0,0 +1,37 @@\n+/* PR tree-optimization/79691 - -Wformat-truncation suppressed by\n+   (and only by) -Og\n+\n+   { dg-compile }\n+   { dg-options \"-Og -Wall -fdump-tree-optimized\" } */\n+\n+char d[2];\n+\n+/* Verify -Wformat-overflow works.  */\n+void f1 (void)\n+{\n+  __builtin_sprintf (d, \"%i\", 123);   /* { dg-warning \"directive writing 3 bytes\" } */\n+}\n+\n+/* Verify -Wformat-truncation works.  */\n+void f2 (void)\n+{\n+  __builtin_snprintf (d, sizeof d, \"%i\", 1234);   /* { dg-warning \"output truncated writing 4 bytes\" } */\n+}\n+\n+/* Verify -fprintf-return-value works.  */\n+int f3 (void)\n+{\n+  return __builtin_snprintf (0, 0, \"%i\", 12345);\n+}\n+\n+/* Verify -fprintf-return-value results used for constant propagation.  */\n+int f4 (int i)\n+{\n+  int n1 = __builtin_snprintf (0, 0, \"%i\", 1234);\n+  int n2 = __builtin_snprintf (0, 0, \"%i\", 12345);\n+  return n1 + n2;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"sprintf\" 1 \"optimized\" } }\n+   { dg-final { scan-tree-dump-times \"snprintf\" 1 \"optimized\" } }\n+   { dg-final { scan-tree-dump \" = 9;\" \"optimized\" } } */"}]}