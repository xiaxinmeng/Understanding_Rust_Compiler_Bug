{"sha": "582021baa76be44ef884eebd0f7ab99599f4b890", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTgyMDIxYmFhNzZiZTQ0ZWY4ODRlZWJkMGY3YWI5OTU5OWY0Yjg5MA==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2009-10-28T10:17:29Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-10-28T10:17:29Z"}, "message": "re PR target/40741 (code size explosion for integer comparison)\n\n2009-10-28  Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR rtl-optimization/40741\n\t* config/arm/arm.c (thumb1_rtx_costs): IOR or XOR with\n\ta small constant is cheap.\n\t* config/arm/arm.md (andsi3, iorsi3): Try to place the result of\n\tforce_reg on the LHS.\n\t(xorsi3): Likewise, and split the XOR if the constant is complex\n\tand not in Thumb mode.\n\n2009-10-28  Paolo Bonzini  <bonzini@gnu.org>\n\n\tPR rtl-optimization/40741\n\t* gcc.target/arm/thumb-branch1.c: New.\n\nFrom-SVN: r153650", "tree": {"sha": "32ba5a71c0fa89fc4ecee255b75f7dee23b2b5cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32ba5a71c0fa89fc4ecee255b75f7dee23b2b5cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/582021baa76be44ef884eebd0f7ab99599f4b890", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/582021baa76be44ef884eebd0f7ab99599f4b890", "html_url": "https://github.com/Rust-GCC/gccrs/commit/582021baa76be44ef884eebd0f7ab99599f4b890", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/582021baa76be44ef884eebd0f7ab99599f4b890/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "15e2a6c05ec5a600a8263ba1812d5dead9ba4aaf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15e2a6c05ec5a600a8263ba1812d5dead9ba4aaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15e2a6c05ec5a600a8263ba1812d5dead9ba4aaf"}], "stats": {"total": 77, "additions": 69, "deletions": 8}, "files": [{"sha": "17793bf41a2d368ffc00daa8c89621fd96d2bf48", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582021baa76be44ef884eebd0f7ab99599f4b890/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582021baa76be44ef884eebd0f7ab99599f4b890/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=582021baa76be44ef884eebd0f7ab99599f4b890", "patch": "@@ -1,3 +1,13 @@\n+2009-10-28  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR rtl-optimization/40741\n+\t* config/arm/arm.c (thumb1_rtx_costs): IOR or XOR with\n+\ta small constant is cheap.\n+\t* config/arm/arm.md (andsi3, iorsi3): Try to place the result of\n+\tforce_reg on the LHS.\n+\t(xorsi3): Likewise, and split the XOR if the constant is complex\n+\tand not in Thumb mode.\n+\n 2009-10-28  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* expmed.c (emit_store_flag): Check costs before"}, {"sha": "c22cfec3216740b516d83d48daaafbee5805b750", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582021baa76be44ef884eebd0f7ab99599f4b890/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582021baa76be44ef884eebd0f7ab99599f4b890/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=582021baa76be44ef884eebd0f7ab99599f4b890", "patch": "@@ -6215,7 +6215,7 @@ thumb1_rtx_costs (rtx x, enum rtx_code code, enum rtx_code outer)\n       else if ((outer == PLUS || outer == COMPARE)\n \t       && INTVAL (x) < 256 && INTVAL (x) > -256)\n \treturn 0;\n-      else if (outer == AND\n+      else if ((outer == IOR || outer == XOR || outer == AND)\n \t       && INTVAL (x) < 256 && INTVAL (x) >= -256)\n \treturn COSTS_N_INSNS (1);\n       else if (outer == ASHIFT || outer == ASHIFTRT"}, {"sha": "fff41d896ca988f3ddb9440b5b18513a6d1a0828", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 42, "deletions": 7, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582021baa76be44ef884eebd0f7ab99599f4b890/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582021baa76be44ef884eebd0f7ab99599f4b890/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=582021baa76be44ef884eebd0f7ab99599f4b890", "patch": "@@ -1914,7 +1914,16 @@\n   else /* TARGET_THUMB1 */\n     {\n       if (GET_CODE (operands[2]) != CONST_INT)\n-        operands[2] = force_reg (SImode, operands[2]);\n+        {\n+          rtx tmp = force_reg (SImode, operands[2]);\n+\t  if (rtx_equal_p (operands[0], operands[1]))\n+\t    operands[2] = tmp;\n+\t  else\n+\t    {\n+              operands[2] = operands[1];\n+              operands[1] = tmp;\n+\t    }\n+        }\n       else\n         {\n           int i;\n@@ -2623,7 +2632,16 @@\n           DONE;\n \t}\n       else /* TARGET_THUMB1 */\n-\toperands [2] = force_reg (SImode, operands [2]);\n+        {\n+          rtx tmp = force_reg (SImode, operands[2]);\n+\t  if (rtx_equal_p (operands[0], operands[1]))\n+\t    operands[2] = tmp;\n+\t  else\n+\t    {\n+              operands[2] = operands[1];\n+              operands[1] = tmp;\n+\t    }\n+        }\n     }\n   \"\n )\n@@ -2731,12 +2749,29 @@\n (define_expand \"xorsi3\"\n   [(set (match_operand:SI         0 \"s_register_operand\" \"\")\n \t(xor:SI (match_operand:SI 1 \"s_register_operand\" \"\")\n-\t\t(match_operand:SI 2 \"arm_rhs_operand\"  \"\")))]\n+\t\t(match_operand:SI 2 \"reg_or_int_operand\" \"\")))]\n   \"TARGET_EITHER\"\n-  \"if (TARGET_THUMB1)\n-     if (GET_CODE (operands[2]) == CONST_INT)\n-       operands[2] = force_reg (SImode, operands[2]);\n-  \"\n+  \"if (GET_CODE (operands[2]) == CONST_INT)\n+    {\n+      if (TARGET_32BIT)\n+        {\n+          arm_split_constant (XOR, SImode, NULL_RTX,\n+\t                      INTVAL (operands[2]), operands[0], operands[1],\n+\t\t\t      optimize && can_create_pseudo_p ());\n+          DONE;\n+\t}\n+      else /* TARGET_THUMB1 */\n+        {\n+          rtx tmp = force_reg (SImode, operands[2]);\n+\t  if (rtx_equal_p (operands[0], operands[1]))\n+\t    operands[2] = tmp;\n+\t  else\n+\t    {\n+              operands[2] = operands[1];\n+              operands[1] = tmp;\n+\t    }\n+        }\n+    }\"\n )\n \n (define_insn \"*arm_xorsi3\""}, {"sha": "aa64dab4ef4fa5aed27c0a22b931f9409336faee", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582021baa76be44ef884eebd0f7ab99599f4b890/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582021baa76be44ef884eebd0f7ab99599f4b890/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=582021baa76be44ef884eebd0f7ab99599f4b890", "patch": "@@ -1,3 +1,8 @@\n+2009-10-28  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\tPR rtl-optimization/40741\n+\t* gcc.target/arm/thumb-branch1.c: New.\n+\n 2009-10-27  Jason Merrill  <jason@redhat.com>\n \n \t* g++.dg/cpp0x/lambda/lambda-conv.C: New."}, {"sha": "c479d162c99ba451326fbbf945253c162d22d9f0", "filename": "gcc/testsuite/gcc.target/arm/thumb-branch1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/582021baa76be44ef884eebd0f7ab99599f4b890/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb-branch1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/582021baa76be44ef884eebd0f7ab99599f4b890/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb-branch1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb-branch1.c?ref=582021baa76be44ef884eebd0f7ab99599f4b890", "patch": "@@ -0,0 +1,11 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -mthumb -march=armv5te\" } */\n+\n+int returnbool(int a, int b)\n+{\n+    if (a < b)\n+        return 1;\n+    return 0;\n+}\n+\n+/* { dg-final { scan-assembler-not \"eor\" } } */"}]}