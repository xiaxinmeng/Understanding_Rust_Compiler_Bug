{"sha": "3ce14752802766f1ec13cdf98672b78888229554", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NlMTQ3NTI4MDI3NjZmMWVjMTNjZGY5ODY3MmI3ODg4ODIyOTU1NA==", "commit": {"author": {"name": "Ramana Radhakrishnan", "email": "ramana.radhakrishnan@arm.com", "date": "2009-06-22T12:40:37Z"}, "committer": {"name": "Ramana Radhakrishnan", "email": "ramana@gcc.gnu.org", "date": "2009-06-22T12:40:37Z"}, "message": "Disable caller and callee super interworking.\n\n2009-06-22  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n\n\t* config/arm/arm.c (arm_override_options): Disable -mcaller-super-interworking\n\tand -mcallee-super-interworking.\n\t* doc/invoke.texi (ARM Options): Document this.\n\nFrom-SVN: r148790", "tree": {"sha": "d79ab89e16f3218d338e2b12e6aa60d56ce7957e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d79ab89e16f3218d338e2b12e6aa60d56ce7957e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3ce14752802766f1ec13cdf98672b78888229554", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ce14752802766f1ec13cdf98672b78888229554", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ce14752802766f1ec13cdf98672b78888229554", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ce14752802766f1ec13cdf98672b78888229554/comments", "author": null, "committer": null, "parents": [{"sha": "d88a51b1ca66baac89d59b5e379ef1b4f3f78eb4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d88a51b1ca66baac89d59b5e379ef1b4f3f78eb4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d88a51b1ca66baac89d59b5e379ef1b4f3f78eb4"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "ad04c15f01ab7a4078cdf8afd2dc02abc667887d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ce14752802766f1ec13cdf98672b78888229554/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ce14752802766f1ec13cdf98672b78888229554/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3ce14752802766f1ec13cdf98672b78888229554", "patch": "@@ -1,3 +1,9 @@\n+2009-06-22  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n+\n+       * config/arm/arm.c (arm_override_options): Disable -mcaller-super-interworking\n+       and -mcallee-super-interworking.\n+       * doc/invoke.texi (ARM Options): Document this.\n+\n 2009-06-22  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* config/arm/arm.c (arm_print_operand): Deal with HIGH."}, {"sha": "7922edf2a19d807404f234634c19549e730891f0", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ce14752802766f1ec13cdf98672b78888229554/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ce14752802766f1ec13cdf98672b78888229554/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=3ce14752802766f1ec13cdf98672b78888229554", "patch": "@@ -1613,6 +1613,14 @@ arm_override_options (void)\n       && (arm_fp_model == ARM_FP_MODEL_FPA))\n     error (\"FPA is unsupported in the AAPCS\");\n \n+  if (TARGET_AAPCS_BASED)\n+    if (TARGET_CALLER_INTERWORKING)\n+      error (\"AAPCS doesn't support -mcaller-super-interworking\");\n+    else\n+      if (TARGET_CALLEE_INTERWORKING)\n+\terror (\"AAPCS doesn't support -mcallee-super-interworking\");\n+  \n+\n   /* FPA and iWMMXt are incompatible because the insn encodings overlap.\n      VFP and iWMMXt can theoretically coexist, but it's unlikely such silicon\n      will ever exist.  GCC makes no attempt to support this combination.  */"}, {"sha": "ffd40501fb789cf67c67023b8b02320b2ad318c1", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3ce14752802766f1ec13cdf98672b78888229554/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3ce14752802766f1ec13cdf98672b78888229554/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=3ce14752802766f1ec13cdf98672b78888229554", "patch": "@@ -9439,14 +9439,17 @@ not call any other functions.)  The default is @option{-mno-apcs-leaf-frame}.\n Gives all externally visible functions in the file being compiled an ARM\n instruction set header which switches to Thumb mode before executing the\n rest of the function.  This allows these functions to be called from\n-non-interworking code.\n+non-interworking code. This option is not valid in AAPCS configurations\n+because interworking is enabled by default.\n \n @item -mcaller-super-interworking\n @opindex mcaller-super-interworking\n Allows calls via function pointers (including virtual functions) to\n execute correctly regardless of whether the target code has been\n compiled for interworking or not.  There is a small overhead in the cost\n-of executing a function pointer if this option is enabled.\n+of executing a function pointer if this option is enabled. This option \n+is not valid in AAPCS configurations because interworking is enabled\n+by default.\n \n @item -mtp=@var{name}\n @opindex mtp"}]}