{"sha": "ec3e68358fa934bd54bf6c93af37360b30dfff70", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWMzZTY4MzU4ZmE5MzRiZDU0YmY2YzkzYWYzNzM2MGIzMGRmZmY3MA==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-05-31T22:06:33Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-05-31T22:06:33Z"}, "message": "re PR c/15749 (--pedantic-errors behaves differently from --pedantic with C-compiler on Linux)\n\n\tPR c/15749\n\t* c-decl.c (grokdeclarator, finish_struct): Don't pedwarn for\n\tmisuses of structures with flexible array members if\n\tin_system_header.\n\ntestsuite:\n\t* gcc.dg/pr15749-1.c, gcc.dg/pr15749-1.h: New test.\n\nFrom-SVN: r82506", "tree": {"sha": "10179230ae3065bb71c868f953b6d2060666594b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10179230ae3065bb71c868f953b6d2060666594b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec3e68358fa934bd54bf6c93af37360b30dfff70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec3e68358fa934bd54bf6c93af37360b30dfff70", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec3e68358fa934bd54bf6c93af37360b30dfff70", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec3e68358fa934bd54bf6c93af37360b30dfff70/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4a90b847aac34b2cbede88ffeef45343214d066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4a90b847aac34b2cbede88ffeef45343214d066", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4a90b847aac34b2cbede88ffeef45343214d066"}], "stats": {"total": 52, "additions": 50, "deletions": 2}, "files": [{"sha": "5d10d0f8b7c9f38240efd23e63f5bc5ec5410d0a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec3e68358fa934bd54bf6c93af37360b30dfff70/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec3e68358fa934bd54bf6c93af37360b30dfff70/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ec3e68358fa934bd54bf6c93af37360b30dfff70", "patch": "@@ -1,3 +1,10 @@\n+2004-05-31  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\tPR c/15749\n+\t* c-decl.c (grokdeclarator, finish_struct): Don't pedwarn for\n+\tmisuses of structures with flexible array members if\n+\tin_system_header.\n+\n 2004-05-31  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \tPR target/15693"}, {"sha": "3a13664f7b3061bbf2bab7e5b22b8cafb9398f4e", "filename": "gcc/c-decl.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec3e68358fa934bd54bf6c93af37360b30dfff70/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec3e68358fa934bd54bf6c93af37360b30dfff70/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=ec3e68358fa934bd54bf6c93af37360b30dfff70", "patch": "@@ -3928,7 +3928,7 @@ grokdeclarator (tree declarator, tree declspecs,\n \t      type = error_mark_node;\n \t    }\n \n-\t  if (pedantic && flexible_array_type_p (type))\n+\t  if (pedantic && !in_system_header && flexible_array_type_p (type))\n \t    pedwarn (\"invalid use of structure with flexible array member\");\n \n \t  if (size == error_mark_node)\n@@ -5204,7 +5204,7 @@ finish_struct (tree t, tree fieldlist, tree attributes)\n \t    }\n \t}\n \n-      if (pedantic && TREE_CODE (t) == RECORD_TYPE\n+      if (pedantic && !in_system_header && TREE_CODE (t) == RECORD_TYPE\n \t  && flexible_array_type_p (TREE_TYPE (x)))\n \tpedwarn (\"%Jinvalid use of structure with flexible array member\", x);\n "}, {"sha": "a337797b1c8be2fc988aa8f4767f4b91efb3e814", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec3e68358fa934bd54bf6c93af37360b30dfff70/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec3e68358fa934bd54bf6c93af37360b30dfff70/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ec3e68358fa934bd54bf6c93af37360b30dfff70", "patch": "@@ -1,3 +1,8 @@\n+2004-05-31  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\tPR c/15749\n+\t* gcc.dg/pr15749-1.c, gcc.dg/pr15749-1.h: New test.\n+\n 2004-05-31  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* gcc.dg/sparc-trap-1.c: New test."}, {"sha": "e78816f80e9315d085ad928a44db189418e33f88", "filename": "gcc/testsuite/gcc.dg/pr15749-1.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec3e68358fa934bd54bf6c93af37360b30dfff70/gcc%2Ftestsuite%2Fgcc.dg%2Fpr15749-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec3e68358fa934bd54bf6c93af37360b30dfff70/gcc%2Ftestsuite%2Fgcc.dg%2Fpr15749-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr15749-1.c?ref=ec3e68358fa934bd54bf6c93af37360b30dfff70", "patch": "@@ -0,0 +1,8 @@\n+/* Flexible array misuses (that are accepted without -pedantic) should\n+   be OK in system headers even with -pedantic-errors.  PR 15749\n+   from Tuomo dot Tikkanen at nokia dot com.  */\n+/* Origin: Joseph Myers <jsm@polyomino.org.uk> */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=iso9899:1999 -pedantic-errors\" } */\n+\n+#include \"pr15749-1.h\""}, {"sha": "db4a259fe90313594c9bff69710eb065f13fba05", "filename": "gcc/testsuite/gcc.dg/pr15749-1.h", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec3e68358fa934bd54bf6c93af37360b30dfff70/gcc%2Ftestsuite%2Fgcc.dg%2Fpr15749-1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec3e68358fa934bd54bf6c93af37360b30dfff70/gcc%2Ftestsuite%2Fgcc.dg%2Fpr15749-1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr15749-1.h?ref=ec3e68358fa934bd54bf6c93af37360b30dfff70", "patch": "@@ -0,0 +1,28 @@\n+/* Similar to c99-flex-array-3.c, but a system header so should not\n+   have diagnostics even with -pedantic-errors.  */\n+\n+#pragma GCC system_header\n+\n+struct flex { int a; int b[]; };\n+union rf1 { struct flex a; int b; };\n+union rf2 { int a; struct flex b; };\n+union rf3 { int a; union rf1 b; };\n+union rf4 { union rf2 a; int b; };\n+\n+struct t0 { struct flex a; };\n+struct t1 { union rf1 a; };\n+struct t2 { union rf2 a; };\n+struct t3 { union rf3 a; };\n+struct t4 { union rf4 a; };\n+\n+void f0 (struct flex[]);\n+void f1 (union rf1[]);\n+void f2 (union rf2[]);\n+void f3 (union rf3[]);\n+void f4 (union rf4[]);\n+\n+struct flex a0[1];\n+union rf1 a1[1];\n+union rf2 a2[1];\n+union rf3 a3[1];\n+union rf4 a4[1];"}]}