{"sha": "17fd0b3077d12d62677849adaacd5e7a5d6720ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdmZDBiMzA3N2QxMmQ2MjY3Nzg0OWFkYWFjZDVlN2E1ZDY3MjBjYQ==", "commit": {"author": {"name": "Craig Burley", "email": "craig@jcb-sc.com", "date": "1999-05-10T15:20:39Z"}, "committer": {"name": "Craig Burley", "email": "burley@gcc.gnu.org", "date": "1999-05-10T15:20:39Z"}, "message": "fix various @xref's per proper style\n\nFrom-SVN: r26867", "tree": {"sha": "1f87db156a4181b84993ef3afc1be4b2aef06743", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1f87db156a4181b84993ef3afc1be4b2aef06743"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17fd0b3077d12d62677849adaacd5e7a5d6720ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17fd0b3077d12d62677849adaacd5e7a5d6720ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17fd0b3077d12d62677849adaacd5e7a5d6720ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17fd0b3077d12d62677849adaacd5e7a5d6720ca/comments", "author": null, "committer": null, "parents": [{"sha": "6f26283ae9655d1f0ccb8bc4231c0c2dc91aa176", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f26283ae9655d1f0ccb8bc4231c0c2dc91aa176", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f26283ae9655d1f0ccb8bc4231c0c2dc91aa176"}], "stats": {"total": 65, "additions": 31, "deletions": 34}, "files": [{"sha": "c0eea1858b7df4ba47fc14d862d6c4754287941c", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17fd0b3077d12d62677849adaacd5e7a5d6720ca/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17fd0b3077d12d62677849adaacd5e7a5d6720ca/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=17fd0b3077d12d62677849adaacd5e7a5d6720ca", "patch": "@@ -1,3 +1,9 @@\n+Mon May 10 18:14:28 1999  Craig Burley  <craig@jcb-sc.com>\n+\n+\t* g77.texi: Fix various @xref's per proper style.\n+\tGo ahead and use nested braces in @xref's, with care.\n+\t* g77install.texi: Fix @xref per proper style.\n+\n Mon May 10 17:38:39 1999  Craig Burley  <craig@jcb-sc.com>\n \n \t* news.texi: Doc upgrade to netlib libf2c as of today."}, {"sha": "36aa3eccf5ae54ffe69fb39e0a0291c8de0c0bdd", "filename": "gcc/f/g77.texi", "status": "modified", "additions": 23, "deletions": 32, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17fd0b3077d12d62677849adaacd5e7a5d6720ca/gcc%2Ff%2Fg77.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17fd0b3077d12d62677849adaacd5e7a5d6720ca/gcc%2Ff%2Fg77.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77.texi?ref=17fd0b3077d12d62677849adaacd5e7a5d6720ca", "patch": "@@ -2,7 +2,7 @@\n @c %**start of header\n @setfilename g77.info\n \n-@set last-update 1999-05-06\n+@set last-update 1999-05-10\n @set copyrights-g77 1995-1999\n \n @include root.texi\n@@ -855,7 +855,7 @@ continuing operation of the FSF offices, their workstations, their\n network connections, and so on, which are invaluable to volunteers.\n (Similarly, hiring Cygnus Support can help a project like GNU\n Fortran---Cygnus has been a long-time donor of equipment usage to the author\n-of GNU Fortran, and this too has been invaluable---@xref{Contributors}.)\n+of GNU Fortran, and this too has been invaluable---see @ref{Contributors}.)\n \n Currently, the only way to directly fund the author of GNU Fortran\n in his work on that project is to hire him for the work you want\n@@ -4477,8 +4477,9 @@ This permits long names to be used for @var{filename}.\n @cindex #\n @cindex preprocessor\n \n-@code{cpp} output-style @code{#} directives @xref{C Preprocessor\n-Output,,, cpp, The C Preprocessor}, are recognized by the compiler even\n+@code{cpp} output-style @code{#} directives\n+(@pxref{C Preprocessor Output,,, cpp, The C Preprocessor})\n+are recognized by the compiler even\n when the preprocessor isn't run on the input (as it is when compiling\n @samp{.F} files).  (Note the distinction between these @code{cpp}\n @code{#} @emph{output} directives and @code{#line} @emph{input}\n@@ -6050,13 +6051,7 @@ specifier is supported.\n For convenience this section collects a list (probably incomplete) of\n the Fortran 90 features supported by the GNU Fortran language, even if\n they are documented elsewhere.\n-@c makeinfo 1.68 objects to the nested parens\n-@ifnotinfo\n-@xref{Characters Lines Sequence,,{Characters, Lines, and Execution Sequence}},\n-@end ifnotinfo\n-@ifinfo\n-@xref{Characters Lines Sequence},\n-@end ifinfo\n+@xref{Characters Lines Sequence,,@asis{Characters, Lines, and Execution Sequence}},\n for information on additional fixed source form lexical issues.\n @cindex @samp{-ffree-form}\n Further, the free source form is supported through the\n@@ -6079,12 +6074,11 @@ Strings may have zero length and substrings of character constants are\n permitted.  Character constants may be enclosed in double quotes\n (@code{\"}) as well as single quotes.  @xref{Character Type}.\n @item Construct names\n-(Symbolic tags on blocks.)  @xref{Construct Names }.\n+(Symbolic tags on blocks.)  @xref{Construct Names}.\n @item @code{CYCLE} and @code{EXIT}\n @xref{CYCLE and EXIT,,The @code{CYCLE} and @code{EXIT} Statements}.\n @item @code{DOUBLE COMPLEX}\n-@xref{DOUBLE COMPLEX,,@code{DOUBLE COMPLEX} Statement\n-}.\n+@xref{DOUBLE COMPLEX,,@code{DOUBLE COMPLEX} Statement}.\n @item @code{DO WHILE}\n @xref{DO WHILE}.\n @item @code{END} decoration\n@@ -6116,8 +6110,8 @@ The operators @code{<}, @code{<=}, @code{==}, @code{/=}, @code{>} and\n @code{>=} may be used instead of @code{.LT.}, @code{.LE.}, @code{.EQ.},\n @code{.NE.}, @code{.GT.} and @code{.GE.} respectively.\n @item @code{SELECT CASE}\n-Not fully implemented.  @xref{SELECT CASE on CHARACTER Type,,\n-@code{SELECT CASE} on @code{CHARACTER} Type}.\n+Not fully implemented.\n+@xref{SELECT CASE on CHARACTER Type,, @code{SELECT CASE} on @code{CHARACTER} Type}.\n @item Specification statements\n A limited subset of the Fortran 90 syntax and semantics for variable\n declarations is supported, including @code{KIND}.  @xref{Kind Notation}.\n@@ -10449,13 +10443,15 @@ in your system's documentation.\n If your program depends on exact IEEE 754 floating-point handling it may\n help on some systems---specifically x86 or m68k hardware---to use\n the @samp{-ffloat-store} option or to reset the precision flag on the\n-floating-point unit @xref{Optimize Options}.\n+floating-point unit.\n+@xref{Optimize Options}.\n \n However, it might be better simply to put the FPU into double precision\n mode and not take the performance hit of @samp{-ffloat-store}.  On x86\n and m68k GNU systems you can do this with a technique similar to that\n-for turning on floating-point exceptions @xref{Floating-point Exception\n-Handling}.  The control word could be set to double precision by\n+for turning on floating-point exceptions\n+(@pxref{Floating-point Exception Handling}).\n+The control word could be set to double precision by\n replacing the @code{__setfpucw} call with one like this:\n @smallexample\n   __setfpucw ((_FPU_DEFAULT & ~_FPU_EXTENDED) | _FPU_DOUBLE);\n@@ -10464,8 +10460,8 @@ replacing the @code{__setfpucw} call with one like this:\n maths library, but we have no evidence of it causing trouble.)\n \n Some targets (such as the Alpha) may need special options for full IEEE\n-conformance @xref{Submodel Options,,Hardware Models and\n-Configurations,gcc,Using and Porting GNU CC}.\n+conformance.\n+@xref{Submodel Options,,Hardware Models and Configurations,gcc,Using and Porting GNU CC}.\n \n @node Inconsistent Calling Sequences\n @subsection Inconsistent Calling Sequences\n@@ -10475,16 +10471,11 @@ Configurations,gcc,Using and Porting GNU CC}.\n @cindex ix86 FPU stack\n @cindex x86 FPU stack\n Code containing inconsistent calling sequences in the same file is\n-normally rejected @xref{GLOBALS}.  (Use, say, @code{ftnchek} to ensure\n-consistency across source files\n-@c makeinfo 1.68 objects to the nested parens\n-@ifinfo\n-@xref{f2c Skeletons and Prototypes}.)\n-@end ifinfo\n-@ifnotinfo\n+normally rejected---see @ref{GLOBALS}.\n+(Use, say, @code{ftnchek} to ensure\n+consistency across source files.\n @xref{f2c Skeletons and Prototypes,,\n-{Generating Skeletons and Prototypes with @code{f2c}}}.)\n-@end ifnotinfo\n+Generating Skeletons and Prototypes with @code{f2c}}.)\n \n Mysterious errors, which may appear to be code generation problems, can\n appear specifically on the x86 architecture with some such\n@@ -10821,8 +10812,8 @@ possible workarounds for them, see\n directly from the @code{gcc} manual, with minor modifications\n to tailor it to users of @code{g77}.\n Anytime a bug seems to have more to do with the @code{gcc}\n-portion of @code{g77},\n-@xref{Trouble,,Known Causes of Trouble with GNU CC,\n+portion of @code{g77}, see\n+@ref{Trouble,,Known Causes of Trouble with GNU CC,\n gcc,Using and Porting GNU CC}.)\n \n @menu"}, {"sha": "440829736c801b5b2f208f1f34d877dae67b719e", "filename": "gcc/f/g77install.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17fd0b3077d12d62677849adaacd5e7a5d6720ca/gcc%2Ff%2Fg77install.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17fd0b3077d12d62677849adaacd5e7a5d6720ca/gcc%2Ff%2Fg77install.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77install.texi?ref=17fd0b3077d12d62677849adaacd5e7a5d6720ca", "patch": "@@ -9,7 +9,7 @@\n @c in the standalone derivations of this file (e.g. INSTALL).\n @set copyrights 1995-1999\n \n-@set last-update-install 1999-03-13\n+@set last-update-install 1999-05-10\n \n @include root.texi\n \n@@ -1624,7 +1624,7 @@ To save some disk space during installation, after Stage 2\n is built, you can type @samp{rm -fr stage1} to remove the\n binaries built during Stage 1.\n \n-Also, @xref{Installation,,Installing GNU CC,gcc,Using and Porting GNU CC},\n+Also, see @ref{Installation,,Installing GNU CC,gcc,Using and Porting GNU CC},\n for important information on building @code{gcc} that is\n not described in this @code{g77} manual.\n For example, explanations of diagnostic messages"}]}