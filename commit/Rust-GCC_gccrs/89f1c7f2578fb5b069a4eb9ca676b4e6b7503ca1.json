{"sha": "89f1c7f2578fb5b069a4eb9ca676b4e6b7503ca1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODlmMWM3ZjI1NzhmYjViMDY5YTRlYjljYTY3NmI0ZTZiNzUwM2NhMQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-18T16:59:12Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-08-18T16:59:12Z"}, "message": "(simplify_comparison): Rearrange conditional in SUBREG case.\n\nFrom-SVN: r1886", "tree": {"sha": "e8225a7520a2be4ee563ef446c244c9d6afb0d10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e8225a7520a2be4ee563ef446c244c9d6afb0d10"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89f1c7f2578fb5b069a4eb9ca676b4e6b7503ca1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89f1c7f2578fb5b069a4eb9ca676b4e6b7503ca1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89f1c7f2578fb5b069a4eb9ca676b4e6b7503ca1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89f1c7f2578fb5b069a4eb9ca676b4e6b7503ca1/comments", "author": null, "committer": null, "parents": [{"sha": "60d001174940244eb699c15cd14450306df9900d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60d001174940244eb699c15cd14450306df9900d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60d001174940244eb699c15cd14450306df9900d"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "f23ba1be7d594938c09433bcf1869f0b68e50a82", "filename": "gcc/combine.c", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89f1c7f2578fb5b069a4eb9ca676b4e6b7503ca1/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89f1c7f2578fb5b069a4eb9ca676b4e6b7503ca1/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=89f1c7f2578fb5b069a4eb9ca676b4e6b7503ca1", "patch": "@@ -7544,10 +7544,12 @@ simplify_comparison (code, pop0, pop1)\n \t  break;\n \n \tcase SUBREG:\n-\t  /* If the inner mode is smaller and we are extracting the low\n-\t     part, we can treat the SUBREG as if it were a ZERO_EXTEND.  */\n-\t  if (! subreg_lowpart_p (op0)\n-\t      || GET_MODE_BITSIZE (GET_MODE (SUBREG_REG (op0))) >= mode_width)\n+\t  /* If the inner mode is narrower and we are extracting the low part,\n+\t     we can treat the SUBREG as if it were a ZERO_EXTEND.  */\n+\t  if (subreg_lowpart_p (op0)\n+\t      && GET_MODE_BITSIZE (GET_MODE (SUBREG_REG (op0))) < mode_width)\n+\t    /* Fall through */ ;\n+\t  else\n \t    break;\n \n \t  /* ... fall through ... */"}]}