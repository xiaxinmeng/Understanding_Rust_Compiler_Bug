{"sha": "a34938bea3d8eeb9bc673b39e6c140825e1cbecf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTM0OTM4YmVhM2Q4ZWViOWJjNjczYjM5ZTZjMTQwODI1ZTFjYmVjZg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenth@gcc.gnu.org", "date": "2005-04-17T11:56:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2005-04-17T11:56:30Z"}, "message": "scanner.c (gfc_next_char_literal): Reset truncation flag for lines ending in a comment for both fixed and free form.\n\n2005-04-17  Richard Guenther  <rguenth@gcc.gnu.org>\n\n\t* scanner.c (gfc_next_char_literal): Reset truncation flag\n\tfor lines ending in a comment for both fixed and free form.\n\t(load_line): Do not set truncated flag if only truncating\n\tthe EOL marker.\n\n\t* gfortran.dg/wtruncate.f: New testcase.\n\t* gfortran.dg/wtruncate.f90: New testcase.\n\nFrom-SVN: r98269", "tree": {"sha": "f926b91f8476f6f75b7f2f5760cd828b24508fac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f926b91f8476f6f75b7f2f5760cd828b24508fac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a34938bea3d8eeb9bc673b39e6c140825e1cbecf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a34938bea3d8eeb9bc673b39e6c140825e1cbecf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a34938bea3d8eeb9bc673b39e6c140825e1cbecf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a34938bea3d8eeb9bc673b39e6c140825e1cbecf/comments", "author": null, "committer": null, "parents": [{"sha": "492f761a97ed76030567349ea2a0ad73c819a9f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/492f761a97ed76030567349ea2a0ad73c819a9f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/492f761a97ed76030567349ea2a0ad73c819a9f5"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "586469782f953e974dbe23bf0f08559a8fe025e7", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a34938bea3d8eeb9bc673b39e6c140825e1cbecf/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a34938bea3d8eeb9bc673b39e6c140825e1cbecf/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=a34938bea3d8eeb9bc673b39e6c140825e1cbecf", "patch": "@@ -1,3 +1,10 @@\n+2005-04-17  Richard Guenther  <rguenth@gcc.gnu.org>\n+\n+\t* scanner.c (gfc_next_char_literal): Reset truncation flag\n+\tfor lines ending in a comment for both fixed and free form.\n+\t(load_line): Do not set truncated flag if only truncating\n+\tthe EOL marker.\n+\n 2005-04-15  Richard Guenther  <rguenth@gcc.gnu.org>\n \n \tPR fortran/14569"}, {"sha": "69fa3a1e1865b6b212046ff37f762989e0351020", "filename": "gcc/fortran/scanner.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a34938bea3d8eeb9bc673b39e6c140825e1cbecf/gcc%2Ffortran%2Fscanner.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a34938bea3d8eeb9bc673b39e6c140825e1cbecf/gcc%2Ffortran%2Fscanner.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fscanner.c?ref=a34938bea3d8eeb9bc673b39e6c140825e1cbecf", "patch": "@@ -458,6 +458,9 @@ gfc_next_char_literal (int in_string)\n \t    }\n \t  while (c != '\\n');\n \n+\t  /* Avoid truncation warnings for comment ending lines.  */\n+\t  gfc_current_locus.lb->truncated = 0;\n+\n \t  goto done;\n \t}\n \n@@ -525,6 +528,9 @@ gfc_next_char_literal (int in_string)\n \t      c = next_char ();\n \t    }\n \t  while (c != '\\n');\n+\n+\t  /* Avoid truncation warnings for comment ending lines.  */\n+\t  gfc_current_locus.lb->truncated = 0;\n \t}\n \n       if (c != '\\n')\n@@ -758,13 +764,13 @@ load_line (FILE * input, char **pbuf)\n       else if (i >= buflen)\n \t{\t\t\t\n \t  /* Truncate the rest of the line.  */\n-\t  trunc_flag = 1;\n-\n \t  for (;;)\n \t    {\n \t      c = fgetc (input);\n \t      if (c == '\\n' || c == EOF)\n \t\tbreak;\n+\n+\t      trunc_flag = 1;\n \t    }\n \n \t  ungetc ('\\n', input);"}, {"sha": "023ccdd1fde6440eca7ec08857e64a181115bcf6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a34938bea3d8eeb9bc673b39e6c140825e1cbecf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a34938bea3d8eeb9bc673b39e6c140825e1cbecf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a34938bea3d8eeb9bc673b39e6c140825e1cbecf", "patch": "@@ -1,3 +1,8 @@\n+2005-04-17  Richard Guenther  <rguenth@gcc.gnu.org>\n+\n+\t* gfortran.dg/wtruncate.f: New testcase.\n+\t* gfortran.dg/wtruncate.f90: New testcase.\n+\n 2005-04-16  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/21025"}, {"sha": "b7cac5d3c76bb69e1e17bdd6b32ecb4f53d16b06", "filename": "gcc/testsuite/gfortran.dg/wtruncate.f", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a34938bea3d8eeb9bc673b39e6c140825e1cbecf/gcc%2Ftestsuite%2Fgfortran.dg%2Fwtruncate.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a34938bea3d8eeb9bc673b39e6c140825e1cbecf/gcc%2Ftestsuite%2Fgfortran.dg%2Fwtruncate.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwtruncate.f?ref=a34938bea3d8eeb9bc673b39e6c140825e1cbecf", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+! { dg-options \"-Wall\" }\n+\n+! This long comment line should not trigger a line-truncation warning with -Wall\n+\n+      PROGRAM foo\n+      WRITE (*,*) \"Test\"           ! Neither this comment which exceeds the 72 character limit, too\n+      WRITE (*,*) \"This exactly 72 character long soruce line not, too.\"\n+      END\n+"}, {"sha": "49b07d2b68ef6a01816a0a4e7bdc27825ef94702", "filename": "gcc/testsuite/gfortran.dg/wtruncate.f90", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a34938bea3d8eeb9bc673b39e6c140825e1cbecf/gcc%2Ftestsuite%2Fgfortran.dg%2Fwtruncate.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a34938bea3d8eeb9bc673b39e6c140825e1cbecf/gcc%2Ftestsuite%2Fgfortran.dg%2Fwtruncate.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fwtruncate.f90?ref=a34938bea3d8eeb9bc673b39e6c140825e1cbecf", "patch": "@@ -0,0 +1,10 @@\n+! { dg-do compile }\n+! { dg-options \"-Wall\" }\n+\n+! This long comment line should not trigger a line-truncation warning with -Wall even for free-form 132 character line limit (blah blah)\n+\n+      PROGRAM foo\n+      WRITE (*,*) \"Test\"           ! Neither this comment which exceeds the 132 character limit with some random words, too (blah blah)\n+      WRITE (*,*) \"This exactly 132 character long soruce line not, too.  How can people fill 132 characters without sensless stuff\"\n+      END\n+"}]}