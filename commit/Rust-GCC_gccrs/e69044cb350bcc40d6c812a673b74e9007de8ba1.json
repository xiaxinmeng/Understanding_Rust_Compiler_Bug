{"sha": "e69044cb350bcc40d6c812a673b74e9007de8ba1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY5MDQ0Y2IzNTBiY2M0MGQ2YzgxMmE2NzNiNzRlOTAwN2RlOGJhMQ==", "commit": {"author": {"name": "Ralf Wildenhues", "email": "Ralf.Wildenhues@gmx.de", "date": "2008-02-17T21:20:01Z"}, "committer": {"name": "Ralf Wildenhues", "email": "rwild@gcc.gnu.org", "date": "2008-02-17T21:20:01Z"}, "message": "re PR ada/15479 (Ada manual problems)\n\ngcc/ada/:\nPR documentation/15479\n* gnat_ugn.texi: In non-code, avoid space before colon.\n(Regular Expressions in gnatfind and gnatxref): Fix indentation.\n(Examples of gnatxref Usage): Use @command{vi} instead of\n@file{vi}.\n(Character Set Control): Do not use @code for UTF-8.\n(Validity Checking): Fix typo \"NaNs\" instead of \"NaN's\".  Do not\nuse @code for IEEE.\n* gnat_rm.texi (Aggregates with static bounds): Fix typo in code\nsample.\n* gnat_rm.texi, gnat_ugn.texi: Fix typos.  Bump copyright years.\n\nFrom-SVN: r132382", "tree": {"sha": "d4d43510b885fd461ebb2628969dd033936981b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d4d43510b885fd461ebb2628969dd033936981b5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e69044cb350bcc40d6c812a673b74e9007de8ba1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e69044cb350bcc40d6c812a673b74e9007de8ba1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e69044cb350bcc40d6c812a673b74e9007de8ba1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e69044cb350bcc40d6c812a673b74e9007de8ba1/comments", "author": null, "committer": null, "parents": [{"sha": "923158bee111f58152d9ce673d10656322460f5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/923158bee111f58152d9ce673d10656322460f5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/923158bee111f58152d9ce673d10656322460f5d"}], "stats": {"total": 104, "additions": 59, "deletions": 45}, "files": [{"sha": "fc40a9518fd6ffc519310194e6c9e3ce03c3c01a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e69044cb350bcc40d6c812a673b74e9007de8ba1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e69044cb350bcc40d6c812a673b74e9007de8ba1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=e69044cb350bcc40d6c812a673b74e9007de8ba1", "patch": "@@ -1,3 +1,17 @@\n+2008-02-17  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n+\n+\tPR documentation/15479\n+\t* gnat_ugn.texi: In non-code, avoid space before colon.\n+\t(Regular Expressions in gnatfind and gnatxref): Fix indentation.\n+\t(Examples of gnatxref Usage): Use @command{vi} instead of\n+\t@file{vi}.\n+\t(Character Set Control): Do not use @code for UTF-8.\n+\t(Validity Checking): Fix typo \"NaNs\" instead of \"NaN's\".  Do not\n+\tuse @code for IEEE.\n+\t* gnat_rm.texi (Aggregates with static bounds): Fix typo in code\n+\tsample.\n+\t* gnat_rm.texi, gnat_ugn.texi: Fix typos.  Bump copyright years.\n+\n 2008-02-11  Joel Sherrill <joel.sherrill@oarcorp.com>\n \n \tPR ada/35143"}, {"sha": "8bc0a67be135c8eebef0fa3e346f3ec9d63241ab", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e69044cb350bcc40d6c812a673b74e9007de8ba1/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e69044cb350bcc40d6c812a673b74e9007de8ba1/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=e69044cb350bcc40d6c812a673b74e9007de8ba1", "patch": "@@ -34,7 +34,7 @@\n @end direntry\n \n @copying\n-Copyright @copyright{} 1995-2007, Free Software Foundation\n+Copyright @copyright{} 1995-2007, 2008 Free Software Foundation\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.2\n@@ -1745,7 +1745,7 @@ region as the function to which they apply.\n pragma applies.  If more than one function name exists of this name in\n the declarative part you must use the @code{Parameter_Types} and\n @code{Result_Type} parameters is mandatory to achieve the required\n-unique designation.  @var{subtype_ mark}s in these parameters must\n+unique designation.  @var{subtype_mark}s in these parameters must\n exactly match the subtypes in the corresponding function specification,\n using positional notation to match parameters with subtype marks.\n The form with an @code{'Access} attribute can be used to match an\n@@ -3151,7 +3151,7 @@ the compiler as indicating that no body is logically present.\n \n This is particularly useful during maintenance when a package is modified in\n such a way that a body needed before is no longer needed. The provision of a\n-dummy body with a No_Body pragma ensures that there is no inteference from\n+dummy body with a No_Body pragma ensures that there is no interference from\n earlier versions of the package body.\n \n @node Pragma No_Return\n@@ -7157,7 +7157,7 @@ See separate section on source representation.\n length.  See 2.2(15).\n @end cartouche\n @noindent\n-The maximum line length is 255 characters an the maximum length of a\n+The maximum line length is 255 characters and the maximum length of a\n lexical element is also 255 characters.\n \n @sp 1\n@@ -7921,7 +7921,7 @@ or by rejecting any construct that would otherwise generate an implicit\n @code{for} loop. If this restriction is active, it is possible to build\n large array aggregates with all static components without generating an\n intermediate temporary, and without generating a loop to initialize individual\n-components..Otherwise, a loop is created for arrays larger than about 5000\n+components. Otherwise, a loop is created for arrays larger than about 5000\n scalar components.\n \n @item No_Initialize_Scalars\n@@ -8355,7 +8355,7 @@ pragma Linker_Options (\"-labc\" & ASCII.Nul & \"-ldef\");\n causes two separate arguments @code{-labc} and @code{-ldef} to be passed to the\n linker. The order of linker options is preserved for a given unit. The final\n list of options passed to the linker is in reverse order of the elaboration\n-order. For example, linker options fo a body always appear before the options\n+order. For example, linker options for a body always appear before the options\n from the corresponding package spec.\n \n @sp 1\n@@ -13360,7 +13360,7 @@ for hexadecimal literals.\n @cindex @code{GNAT.Decode_String} (@file{g-decstr.ads})\n @cindex Decoding strings\n @cindex String decoding\n-@cindex Wide chararacter encoding\n+@cindex Wide character encoding\n @cindex UTF-8\n @cindex Unicode\n \n@@ -13370,20 +13370,20 @@ character strings encoded as sequences of 8-bit characters using a specified\n encoding method. Includes validation routines, and also routines for stepping\n to next or previous encoded character in an encoded string.\n Useful in conjunction with Unicode character coding. Note there is a\n-preinstiation for UTF-8. See next entry.\n+preinstantiation for UTF-8. See next entry.\n \n @node GNAT.Decode_UTF8_String (g-deutst.ads)\n @section @code{GNAT.Decode_UTF8_String} (@file{g-deutst.ads})\n @cindex @code{GNAT.Decode_UTF8_String} (@file{g-deutst.ads})\n @cindex Decoding strings\n @cindex Decoding UTF-8 strings\n @cindex UTF-8 string decoding\n-@cindex Wide chararacter decoding\n+@cindex Wide character decoding\n @cindex UTF-8\n @cindex Unicode\n \n @noindent\n-A preinstantion of GNAT.Decode_Strings for UTF-8 encoding.\n+A preinstantiation of GNAT.Decode_Strings for UTF-8 encoding.\n \n @node GNAT.Directory_Operations (g-dirope.ads)\n @section @code{GNAT.Directory_Operations} (@file{g-dirope.ads})\n@@ -13441,28 +13441,28 @@ dynamic instances of the table, while an instantiation of\n @cindex @code{GNAT.Encode_String} (@file{g-encstr.ads})\n @cindex Encoding strings\n @cindex String encoding\n-@cindex Wide chararacter encoding\n+@cindex Wide character encoding\n @cindex UTF-8\n @cindex Unicode\n \n @noindent\n A generic package providing routines for encoding wide character and wide\n wide character strings as sequences of 8-bit characters using a specified\n encoding method. Useful in conjunction with Unicode character coding.\n-Note there is a preinstiation for UTF-8. See next entry.\n+Note there is a preinstantiation for UTF-8. See next entry.\n \n @node GNAT.Encode_UTF8_String (g-enutst.ads)\n @section @code{GNAT.Encode_UTF8_String} (@file{g-enutst.ads})\n @cindex @code{GNAT.Encode_UTF8_String} (@file{g-enutst.ads})\n @cindex Encoding strings\n @cindex Encoding UTF-8 strings\n @cindex UTF-8 string encoding\n-@cindex Wide chararacter encoding\n+@cindex Wide character encoding\n @cindex UTF-8\n @cindex Unicode\n \n @noindent\n-A preinstantion of GNAT.Encode_Strings for UTF-8 encoding.\n+A preinstantiation of GNAT.Encode_Strings for UTF-8 encoding.\n \n @node GNAT.Exception_Actions (g-excact.ads)\n @section @code{GNAT.Exception_Actions} (@file{g-excact.ads})\n@@ -14876,7 +14876,7 @@ generate the equivalent of\n        Cr_Var1 (4) := 11;\n \n        for I in Cr_Var2'range loop\n-          Cr_Var2 (I) := =-1;\n+          Cr_Var2 (I) := -1;\n        end loop;\n @end smallexample\n "}, {"sha": "504bc33163b185d3fdbbcb2187cebbb3ff9a8beb", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e69044cb350bcc40d6c812a673b74e9007de8ba1/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e69044cb350bcc40d6c812a673b74e9007de8ba1/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=e69044cb350bcc40d6c812a673b74e9007de8ba1", "patch": "@@ -117,7 +117,7 @@\n @c %**end of header\n \n @copying\n-Copyright @copyright{} 1995-2005, Free Software Foundation\n+Copyright @copyright{} 1995-2005, 2006, 2007, 2008 Free Software Foundation\n \n Permission is granted to copy, distribute and/or modify this document\n under the terms of the GNU Free Documentation License, Version 1.2\n@@ -5041,7 +5041,7 @@ This switch activates warnings for variables that are modified by using\n them as actuals for a call to a procedure with an out mode formal, where\n the resulting assigned value is never read. It is applicable in the case\n where there is more than one out mode formal. If there is only one out\n-mode formal, the waraning is issued by default (controlled by -gnatwu).\n+mode formal, the warning is issued by default (controlled by -gnatwu).\n The warning is suppressed for volatile\n variables and also for variables that are renamings of other variables\n or for which an address clause is given.\n@@ -5506,9 +5506,9 @@ are assigned component by component.\n @cindex @option{-gnatVf} (@command{gcc})\n In the absence of this switch, validity checking occurs only for discrete\n values. If @option{-gnatVf} is specified, then validity checking also applies\n-for floating-point values, and NaN's and infinities are considered invalid,\n+for floating-point values, and NaNs and infinities are considered invalid,\n as well as out of range values for constrained types. Note that this means\n-that standard @code{IEEE} infinity mode is not allowed. The exact contexts\n+that standard IEEE infinity mode is not allowed. The exact contexts\n in which floating-point values are checked depends on the setting of other\n options. For example,\n @option{^-gnatVif^VALIDITY_CHECKING=(IN_PARAMS,FLOATS)^} or\n@@ -6456,7 +6456,7 @@ For full details on these encoding\n methods see @ref{Wide Character Encodings}.\n Note that brackets coding is always accepted, even if one of the other\n options is specified, so for example @option{-gnatW8} specifies that both\n-brackets and @code{UTF-8} encodings will be recognized. The units that are\n+brackets and UTF-8 encodings will be recognized. The units that are\n with'ed directly or indirectly will be scanned using the specified\n representation scheme, and so if one of the non-brackets scheme is\n used, it must be used consistently throughout the program. However,\n@@ -9175,7 +9175,7 @@ $ gnatmake /SOURCE_SEARCH=@i{[INCLUDE_DIR]}\n @item\n Using @command{gnatmake} along with the\n @option{^-m (minimal recompilation)^/MINIMAL_RECOMPILATION^}\n-switch provides a mechanism for avoiding unnecessary rcompilations. Using\n+switch provides a mechanism for avoiding unnecessary recompilations. Using\n this switch,\n you can update the comments/format of your\n source files without having to recompile everything. Note, however, that\n@@ -11943,7 +11943,7 @@ reserved words currently used in project file syntax are:\n @end itemize\n \n @noindent\n-Comments in project files have the same syntax as in Ada, two consecutives\n+Comments in project files have the same syntax as in Ada, two consecutive\n hyphens through the end of the line.\n \n @node Packages\n@@ -14619,7 +14619,7 @@ the source path. If you specify directories, no result is produced.\n @end table\n \n @noindent\n-The switches can be :\n+The switches can be:\n @table @option\n @c !sort!\n @item --version\n@@ -15005,14 +15005,14 @@ specifies the command used to debug the application\n @noindent\n As specified in the section about @command{gnatfind}, the pattern can be a\n regular expression. Actually, there are to set of regular expressions\n-which are recognized by the program :\n+which are recognized by the program:\n \n @table @code\n @item globbing patterns\n These are the most usual regular expression. They are the same that you\n generally used in a Unix shell command line, or in a DOS session.\n \n-Here is a more formal grammar :\n+Here is a more formal grammar:\n @smallexample\n @group\n @iftex\n@@ -15023,7 +15023,7 @@ term   ::= elmt            -- matches elmt\n term   ::= elmt elmt       -- concatenation (elmt then elmt)\n term   ::= *               -- any string of 0 or more characters\n term   ::= ?               -- matches any character\n-term   ::= [char @{char@}] -- matches any character listed\n+term   ::= [char @{char@}]   -- matches any character listed\n term   ::= [char - char]   -- matches any character in range\n @end group\n @end smallexample\n@@ -15040,9 +15040,9 @@ reference manual style BNF is as follows\n @leftskip=.5cm\n @end iftex\n @group\n-regexp ::= term @{| term@} -- alternation (term or term ...)\n+regexp ::= term @{| term@}   -- alternation (term or term ...)\n \n-term ::= item @{item@}     -- concatenation (item then item)\n+term ::= item @{item@}       -- concatenation (item then item)\n \n item ::= elmt              -- match elmt\n item ::= elmt *            -- zero or more elmt's\n@@ -15063,7 +15063,7 @@ nschar ::= any character except ()[].*+?^^^\n @end group\n @end smallexample\n \n-Following are a few examples :\n+Following are a few examples:\n \n @table @samp\n @item abcde|fghi\n@@ -15074,7 +15074,7 @@ will match any string like 'abd', 'abcd', 'abccd', 'abcccd', and so on\n \n @item [a-z]+\n will match any string which has only lowercase characters in it (and at\n-least one character\n+least one character.\n \n @end table\n @end table\n@@ -15085,7 +15085,7 @@ least one character\n @subsection General Usage\n \n @noindent\n-For the following examples, we will consider the following units :\n+For the following examples, we will consider the following units:\n \n @smallexample @c ada\n @group\n@@ -15181,9 +15181,9 @@ of these.\n @subsection Using gnatxref with vi\n \n @code{gnatxref} can generate a tags file output, which can be used\n-directly from @file{vi}. Note that the standard version of @file{vi}\n+directly from @command{vi}. Note that the standard version of @command{vi}\n will not work properly with overloaded symbols. Consider using another\n-free implementation of @file{vi}, such as @file{vim}.\n+free implementation of @command{vi}, such as @command{vim}.\n \n @smallexample\n $ gnatxref -v gnatfind.adb > tags\n@@ -15193,7 +15193,7 @@ $ gnatxref -v gnatfind.adb > tags\n will generate the tags file for @code{gnatfind} itself (if the sources\n are in the search path!).\n \n-From @file{vi}, you can then use the command @samp{:tag @i{entity}}\n+From @command{vi}, you can then use the command @samp{:tag @i{entity}}\n (replacing @i{entity} by whatever you are looking for), and vi will\n display a new file with the corresponding declaration of entity.\n @end ifclear\n@@ -15581,7 +15581,7 @@ keyword @code{then} in IF statements on a separate line.\n @cindex @option{^--no-separate-loop-then^/NO_SEPARATE_LOOP_THEN^} (@command{gnatpp})\n @item ^--no-separate-loop-then^/NO_SEPARATE_LOOP_THEN^\n Do not place the keyword @code{loop} in FOR and WHILE loop statements and the\n-keyw0rd @code{then} in IF statements on a separate line. This option is\n+keyword @code{then} in IF statements on a separate line. This option is\n incompatible with @option{^--separate-loop-then^/SEPARATE_LOOP_THEN^} option.\n \n @cindex @option{^--use-on-new-line^/USE_ON_NEW_LINE^} (@command{gnatpp})\n@@ -16027,7 +16027,7 @@ many words in a line as possible).\n @noindent\n The @option{^-c5^/COMMENTS_LAYOUT=KEEP_SPECIAL^} switch specifies, that comments\n that has a special format (that is, a character that is neither a letter nor digit\n-not white space nor line break immediatelly following the leading @code{--} of\n+not white space nor line break immediately following the leading @code{--} of\n the comment) should be without any change moved from the argument source\n into reformatted source. This switch allows to preserve comments that are used\n as a special marks in the code (e.g. SPARK annotation).\n@@ -18721,7 +18721,7 @@ GLIB=...\n \n # The directories for the libraries\n # (This macro expands the list of CSC to the list of shared libraries, you\n-# could simply use the expanded form :\n+# could simply use the expanded form:\n # LIB_DIR=aa/lib/libaa.so bb/lib/libbb.so cc/lib/libcc.so\n LIB_DIR=$@{foreach dir,$@{CSC_LIST@},$@{dir@}/lib/lib$@{dir@}.so@}\n \n@@ -20289,7 +20289,7 @@ All forms for specifying a range (explicit ranges\n such as @code{A .. B}, subtype marks and @code{'Range} attributes) are flagged.\n An enumeration range is\n flagged even if contains exactly one enumeration value or no values at all. A\n-type derived fom an enumeration type is considered as an enumeration type.\n+type derived from an enumeration type is considered as an enumeration type.\n \n This rule helps prevent maintenance problems arising from adding an\n enumeration value to a type and having it implicitly handled by an existing\n@@ -20303,7 +20303,7 @@ This rule has no parameters.\n @cindex @code{Exceptions_As_Control_Flow} (for @command{gnatcheck})\n \n @noindent\n-Flag each place where an exception is explictly raised and handled in the\n+Flag each place where an exception is explicitly raised and handled in the\n same subprogram body. A @code{raise} statement in an exception handler,\n package body, task body or entry body is not flagged.\n \n@@ -20434,13 +20434,13 @@ affect the set of pragmas to be detected.\n Flag each procedure that can be rewritten as a function. A procedure can be\n converted into a function if it has exactly one parameter of mode @code{out}\n and no parameters of mode @code{in out}. Procedure declarations,\n-formal procedure declarations. and generic procedure declarations are always\n+formal procedure declarations, and generic procedure declarations are always\n checked. Procedure\n bodies and body stubs are flagged only if they do not have corresponding\n separate declarations. Procedure renamings and procedure instantiations are\n not flagged.\n \n-If a procedure can be rewritten as a fucntion, but its @code{out} parameter is\n+If a procedure can be rewritten as a function, but its @code{out} parameter is\n of a limited type, it is not flagged.\n \n Protected procedures are not flagged. Null procedures also are not flagged.\n@@ -20453,7 +20453,7 @@ This rule has no parameters.\n @cindex @code{Generics_In_Subprograms} rule (for @command{gnatcheck})\n \n @noindent\n-Flag each declaration of a generic unit in a supbrogram. Generic\n+Flag each declaration of a generic unit in a subprogram. Generic\n declarations in the bodies of generic subprograms are also flagged.\n A generic unit nested in another generic unit is not flagged.\n If a generic unit is\n@@ -21749,7 +21749,7 @@ You can pass it as many Ada files as you want. @code{gnathtml} will generate\n an html file for every ada file, and a global file called @file{index.htm}.\n This file is an index of every identifier defined in the files.\n \n-The available ^switches^options^ are the following ones :\n+The available ^switches^options^ are the following ones:\n \n @table @option\n @item -83\n@@ -21838,7 +21838,7 @@ Operating System via the Internet.\n \n On Unix systems, you  may want to modify  the  first line of  the script\n @code{gnathtml},  to explicitly  tell  the Operating  system  where Perl\n-is. The syntax of this line is :\n+is. The syntax of this line is:\n @smallexample\n #!full_path_name_to_perl\n @end smallexample\n@@ -27965,7 +27965,7 @@ For Body (\"File_Queries.Insert\") use \"file_queries-insert-2005.ada\";\n \n @noindent\n Note also that with project files it is desirable to use a different extension\n-than @file{ads} / @file{adb} for alternativee versions. Otherwise a naming\n+than @file{ads} / @file{adb} for alternative versions. Otherwise a naming\n conflict may arise through another commonly used feature: to declare as part\n of the project a set of directories containing all the sources obeying the\n default naming scheme."}]}