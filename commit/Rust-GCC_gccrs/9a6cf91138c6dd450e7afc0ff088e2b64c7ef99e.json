{"sha": "9a6cf91138c6dd450e7afc0ff088e2b64c7ef99e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWE2Y2Y5MTEzOGM2ZGQ0NTBlN2FmYzBmZjA4OGUyYjY0YzdlZjk5ZQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2005-02-15T17:18:07Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2005-02-15T17:18:07Z"}, "message": "gcse.c (canon_modify_mem_set_list_set): Kill unnecessary bitmap.\n\n        * gcse.c (canon_modify_mem_set_list_set): Kill unnecessary\n        bitmap.\n        (alloc_gcse_mem, free_gcse_mem): Corresponding changes.\n        (canon_list_insert, record_last_mem_set_info): Similarly.\n        (clear_modify_mem_tables): Similarly.\n\nFrom-SVN: r95067", "tree": {"sha": "b47127e8df7b389ace3e94cc56fc091de122aa4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b47127e8df7b389ace3e94cc56fc091de122aa4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9a6cf91138c6dd450e7afc0ff088e2b64c7ef99e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a6cf91138c6dd450e7afc0ff088e2b64c7ef99e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9a6cf91138c6dd450e7afc0ff088e2b64c7ef99e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9a6cf91138c6dd450e7afc0ff088e2b64c7ef99e/comments", "author": null, "committer": null, "parents": [{"sha": "bbbf49551a0b414d679cba3a24fec5513e0c78ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbbf49551a0b414d679cba3a24fec5513e0c78ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbbf49551a0b414d679cba3a24fec5513e0c78ba"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "534119cc97cfb1c9789011c325b2248c2b66cce0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a6cf91138c6dd450e7afc0ff088e2b64c7ef99e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a6cf91138c6dd450e7afc0ff088e2b64c7ef99e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9a6cf91138c6dd450e7afc0ff088e2b64c7ef99e", "patch": "@@ -1,3 +1,11 @@\n+2005-02-15  Jeff Law  <law@redhat.com>\n+\n+\t* gcse.c (canon_modify_mem_set_list_set): Kill unnecessary\n+\tbitmap.\n+\t(alloc_gcse_mem, free_gcse_mem): Corresponding changes.\n+\t(canon_list_insert, record_last_mem_set_info): Similarly.\n+\t(clear_modify_mem_tables): Similarly.\n+\n 2005-02-15  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* bitmap.c, bitmap.h, lambda-code.c, tree-dfa.c, tree-dump.c,"}, {"sha": "92a19dbd545f5daade47b71f8eb95c1b673fc6fe", "filename": "gcc/gcse.c", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9a6cf91138c6dd450e7afc0ff088e2b64c7ef99e/gcc%2Fgcse.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9a6cf91138c6dd450e7afc0ff088e2b64c7ef99e/gcc%2Fgcse.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcse.c?ref=9a6cf91138c6dd450e7afc0ff088e2b64c7ef99e", "patch": "@@ -500,7 +500,6 @@ static bitmap modify_mem_list_set;\n \n /* This array parallels modify_mem_list, but is kept canonicalized.  */\n static rtx * canon_modify_mem_list;\n-static bitmap canon_modify_mem_list_set;\n \n /* Various variables for statistics gathering.  */\n \n@@ -968,7 +967,6 @@ alloc_gcse_mem (rtx f)\n   modify_mem_list = gcalloc (last_basic_block, sizeof (rtx));\n   canon_modify_mem_list = gcalloc (last_basic_block, sizeof (rtx));\n   modify_mem_list_set = BITMAP_XMALLOC ();\n-  canon_modify_mem_list_set = BITMAP_XMALLOC ();\n }\n \n /* Free memory allocated by alloc_gcse_mem.  */\n@@ -984,7 +982,6 @@ free_gcse_mem (void)\n   sbitmap_vector_free (reg_set_in_block);\n   free_modify_mem_tables ();\n   BITMAP_XFREE (modify_mem_list_set);\n-  BITMAP_XFREE (canon_modify_mem_list_set);\n }\n \f\n /* Compute the local properties of each recorded expression.\n@@ -1951,7 +1948,6 @@ canon_list_insert (rtx dest ATTRIBUTE_UNUSED, rtx unused1 ATTRIBUTE_UNUSED,\n     alloc_EXPR_LIST (VOIDmode, dest_addr, canon_modify_mem_list[bb]);\n   canon_modify_mem_list[bb] =\n     alloc_EXPR_LIST (VOIDmode, dest, canon_modify_mem_list[bb]);\n-  bitmap_set_bit (canon_modify_mem_list_set, bb);\n }\n \n /* Record memory modification information for INSN.  We do not actually care\n@@ -1975,7 +1971,6 @@ record_last_mem_set_info (rtx insn)\n \t need to insert a pair of items, as canon_list_insert does.  */\n       canon_modify_mem_list[bb] =\n \talloc_INSN_LIST (insn, canon_modify_mem_list[bb]);\n-      bitmap_set_bit (canon_modify_mem_list_set, bb);\n     }\n   else\n     note_stores (PATTERN (insn), canon_list_insert, (void*) insn);\n@@ -2199,17 +2194,12 @@ clear_modify_mem_tables (void)\n   EXECUTE_IF_SET_IN_BITMAP (modify_mem_list_set, 0, i, bi)\n     {\n       free_INSN_LIST_list (modify_mem_list + i);\n-    }\n-  bitmap_clear (modify_mem_list_set);\n-\n-  EXECUTE_IF_SET_IN_BITMAP (canon_modify_mem_list_set, 0, i, bi)\n-    {\n       free_insn_expr_list_list (canon_modify_mem_list + i);\n     }\n-  bitmap_clear (canon_modify_mem_list_set);\n+  bitmap_clear (modify_mem_list_set);\n }\n \n-/* Release memory used by modify_mem_list_set and canon_modify_mem_list_set.  */\n+/* Release memory used by modify_mem_list_set.  */\n \n static void\n free_modify_mem_tables (void)"}]}