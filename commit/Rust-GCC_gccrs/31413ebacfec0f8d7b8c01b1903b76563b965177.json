{"sha": "31413ebacfec0f8d7b8c01b1903b76563b965177", "node_id": "C_kwDOANBUbNoAKDMxNDEzZWJhY2ZlYzBmOGQ3YjhjMDFiMTkwM2I3NjU2M2I5NjUxNzc", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-03-10T13:26:06Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-03-10T16:42:36Z"}, "message": "Add missing canonicalization of slices and raw pointer types\n\nWhen we intercept impl blocks for slices or raw pointers we must generate\nthe canonical path for this for name resolution this adds in the missing\nvisitors which will generate the path. Previously this was defaulting to\nempty path segments and then hitting an assertion when we append the\nempty segment.\n\nFixes #1005", "tree": {"sha": "cc5cec3321611bf31cdab3422a9c28eefb0f1916", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cc5cec3321611bf31cdab3422a9c28eefb0f1916"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31413ebacfec0f8d7b8c01b1903b76563b965177", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31413ebacfec0f8d7b8c01b1903b76563b965177", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31413ebacfec0f8d7b8c01b1903b76563b965177", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31413ebacfec0f8d7b8c01b1903b76563b965177/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77a49507446b67a6c207b4e4fec3639f536b9eca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77a49507446b67a6c207b4e4fec3639f536b9eca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77a49507446b67a6c207b4e4fec3639f536b9eca"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "c27501e1a29b972e3fd63e0e53647ebc53e83a64", "filename": "gcc/rust/resolve/rust-ast-resolve-type.cc", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31413ebacfec0f8d7b8c01b1903b76563b965177/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31413ebacfec0f8d7b8c01b1903b76563b965177/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.cc?ref=31413ebacfec0f8d7b8c01b1903b76563b965177", "patch": "@@ -167,6 +167,45 @@ ResolveTypeToCanonicalPath::visit (AST::ReferenceType &ref)\n   result = result.append (ident_seg);\n }\n \n+void\n+ResolveTypeToCanonicalPath::visit (AST::RawPointerType &ref)\n+{\n+  auto inner_type\n+    = ResolveTypeToCanonicalPath::resolve (*ref.get_type_pointed_to ().get (),\n+\t\t\t\t\t   include_generic_args_flag,\n+\t\t\t\t\t   type_resolve_generic_args_flag);\n+\n+  std::string segment_string (\"*\");\n+  switch (ref.get_pointer_type ())\n+    {\n+    case AST::RawPointerType::PointerType::MUT:\n+      segment_string += \"mut \";\n+      break;\n+\n+    case AST::RawPointerType::PointerType::CONST:\n+      segment_string += \"const \";\n+      break;\n+    }\n+\n+  segment_string += inner_type.get ();\n+\n+  auto ident_seg = CanonicalPath::new_seg (ref.get_node_id (), segment_string);\n+  result = result.append (ident_seg);\n+}\n+\n+void\n+ResolveTypeToCanonicalPath::visit (AST::SliceType &slice)\n+{\n+  auto inner_type\n+    = ResolveTypeToCanonicalPath::resolve (*slice.get_elem_type ().get (),\n+\t\t\t\t\t   include_generic_args_flag,\n+\t\t\t\t\t   type_resolve_generic_args_flag);\n+  std::string segment_string = \"[\" + inner_type.get () + \"]\";\n+  auto ident_seg\n+    = CanonicalPath::new_seg (slice.get_node_id (), segment_string);\n+  result = result.append (ident_seg);\n+}\n+\n void\n ResolveType::visit (AST::ReferenceType &type)\n {"}, {"sha": "6dcfb4495fc6c7847189be505cbd12655ba434f6", "filename": "gcc/rust/resolve/rust-ast-resolve-type.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31413ebacfec0f8d7b8c01b1903b76563b965177/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31413ebacfec0f8d7b8c01b1903b76563b965177/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fresolve%2Frust-ast-resolve-type.h?ref=31413ebacfec0f8d7b8c01b1903b76563b965177", "patch": "@@ -122,6 +122,10 @@ class ResolveTypeToCanonicalPath : public ResolverBase\n       }\n   }\n \n+  void visit (AST::SliceType &slice) override;\n+\n+  void visit (AST::RawPointerType &ptr) override;\n+\n   void visit (AST::ReferenceType &ref) override;\n \n   void visit (AST::TypePathSegmentGeneric &seg) override;"}, {"sha": "46c85eea91e8aba738f961e2e844ac67d099aee3", "filename": "gcc/testsuite/rust/compile/issue-1005.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31413ebacfec0f8d7b8c01b1903b76563b965177/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1005.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31413ebacfec0f8d7b8c01b1903b76563b965177/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1005.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1005.rs?ref=31413ebacfec0f8d7b8c01b1903b76563b965177", "patch": "@@ -0,0 +1,4 @@\n+// { dg-additional-options \"-w\" }\n+impl<T> *const T {\n+    fn test(self) {}\n+}"}]}