{"sha": "6886e18e758f87f7d409dccda8073a28dd883f3e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njg4NmUxOGU3NThmODdmN2Q0MDlkY2NkYTgwNzNhMjhkZDg4M2YzZQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-02-28T20:04:41Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-02-28T20:04:41Z"}, "message": "re PR libobjc/20252 (Libobjc build broken)\n\n2005-02-28  Andrew Pinski <pinskia@physics.uc.edu>\n\n        PR libobjc/20252\n        * Makefile.in (GTHREAD_FLAGS): Remove.\n        (ALL_CFLAGS): Remove usage of GTHREAD_FLAGS.\n        * thr-objc.c: Include config.h.\n        * configure.ac: Instead of looking at GCC's makefile, figure out if\n        GTHREAD_FLAGS should be defined by looking at the `thread model'\n        of the current gcc.\n        * configure: Regenerate.\n        * config.h.in: Regenerate.\n\nFrom-SVN: r95696", "tree": {"sha": "ca433912ca749c15300ad2f27fa98b4a4aa5786c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca433912ca749c15300ad2f27fa98b4a4aa5786c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6886e18e758f87f7d409dccda8073a28dd883f3e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6886e18e758f87f7d409dccda8073a28dd883f3e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6886e18e758f87f7d409dccda8073a28dd883f3e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6886e18e758f87f7d409dccda8073a28dd883f3e/comments", "author": null, "committer": null, "parents": [{"sha": "d436d3dea2af2288cf3bace09f693bf27caebe15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d436d3dea2af2288cf3bace09f693bf27caebe15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d436d3dea2af2288cf3bace09f693bf27caebe15"}], "stats": {"total": 76, "additions": 40, "deletions": 36}, "files": [{"sha": "1edd6682ae08f8e8a87206167b9b13040c248d33", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6886e18e758f87f7d409dccda8073a28dd883f3e/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6886e18e758f87f7d409dccda8073a28dd883f3e/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=6886e18e758f87f7d409dccda8073a28dd883f3e", "patch": "@@ -1,3 +1,15 @@\n+2005-02-28  Andrew Pinski <pinskia@physics.uc.edu>\n+\n+\tPR libobjc/20252\n+\t* Makefile.in (GTHREAD_FLAGS): Remove.\n+\t(ALL_CFLAGS): Remove usage of GTHREAD_FLAGS.\n+\t* thr-objc.c: Include config.h.\n+\t* configure.ac: Instead of looking at GCC's makefile, figure out if\n+\tGTHREAD_FLAGS should be defined by looking at the `thread model'\n+\tof the current gcc.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\n 2005-02-28  Paolo Bonzini  <bonzini@gnu.org>\n \n \tPR bootstrap/17383"}, {"sha": "3c091830ae41305779b0d85c1abda66eefaffd69", "filename": "libobjc/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6886e18e758f87f7d409dccda8073a28dd883f3e/libobjc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6886e18e758f87f7d409dccda8073a28dd883f3e/libobjc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FMakefile.in?ref=6886e18e758f87f7d409dccda8073a28dd883f3e", "patch": "@@ -72,9 +72,8 @@ RANLIB = @RANLIB@\n CC = @CC@\n CFLAGS = @CFLAGS@\n WARN_CFLAGS = -W -Wall -Wwrite-strings -Wstrict-prototypes\n-GTHREAD_FLAGS=@GTHREAD_FLAGS@\n ALL_CFLAGS = -I. -I$(srcdir) $(CPPFLAGS) $(DEFS) $(CFLAGS) $(WARN_CFLAGS) \\\n-\t$(GTHREAD_FLAGS) -DIN_GCC -DIN_TARGET_LIBS -fno-strict-aliasing\n+\t-DIN_GCC -DIN_TARGET_LIBS -fno-strict-aliasing\n \n # Libtool\n # The following strings describe the version of the obj-C library "}, {"sha": "51811a576b74b695e7e61e8d415e5807d66c7a6b", "filename": "libobjc/config.h.in", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6886e18e758f87f7d409dccda8073a28dd883f3e/libobjc%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6886e18e758f87f7d409dccda8073a28dd883f3e/libobjc%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfig.h.in?ref=6886e18e758f87f7d409dccda8073a28dd883f3e", "patch": "@@ -1,5 +1,8 @@\n /* config.h.in.  Generated from configure.ac by autoheader.  */\n \n+/* Define if the compiler has a thread header that is non single. */\n+#undef HAVE_GTHR_DEFAULT\n+\n /* Define to 1 if you have the <inttypes.h> header file. */\n #undef HAVE_INTTYPES_H\n "}, {"sha": "893645a7c68575f0dd0599496371c9959d826615", "filename": "libobjc/configure", "status": "modified", "additions": 14, "deletions": 22, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6886e18e758f87f7d409dccda8073a28dd883f3e/libobjc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6886e18e758f87f7d409dccda8073a28dd883f3e/libobjc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure?ref=6886e18e758f87f7d409dccda8073a28dd883f3e", "patch": "@@ -309,7 +309,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os build_subdir host_subdir target_subdir VERSION OBJC_BOEHM_GC toplevel_srcdir host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical glibcpp_srcdir gcc_version_trigger gcc_version_full gcc_version toolexecdir toolexeclibdir includedirname libext CC ac_ct_CC EXEEXT OBJEXT CFLAGS AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LN_S STRIP ac_ct_STRIP LIBTOOL SET_MAKE CPP CPPFLAGS EGREP GTHREAD_FLAGS LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os build_subdir host_subdir target_subdir VERSION OBJC_BOEHM_GC toplevel_srcdir host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical glibcpp_srcdir gcc_version_trigger gcc_version_full gcc_version toolexecdir toolexeclibdir includedirname libext CC ac_ct_CC EXEEXT OBJEXT CFLAGS AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LN_S STRIP ac_ct_STRIP LIBTOOL SET_MAKE CPP CPPFLAGS EGREP LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -5111,26 +5111,19 @@ done\n # Miscellanea\n # -----------\n \n-# Determine CFLAGS for gthread.\n-echo \"$as_me:$LINENO: checking for gthread cflags\" >&5\n-echo $ECHO_N \"checking for gthread cflags... $ECHO_C\" >&6\n-if test \"${objc_cv_gthread_flags+set}\" = set; then\n-  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n-else\n-  # we know we are compiled as a target library, so the toplevel build directory\n-# is ../..\n-if test -f ../../$host_subdir/gcc/Makefile\n-then\n-  objc_cv_gthread_flags=`grep \\^GTHREAD_FLAGS ../../$host_subdir/gcc/Makefile | awk -F= '{ print $2 }'`\n-else\n-  { { echo \"$as_me:$LINENO: error: not found\" >&5\n-echo \"$as_me: error: not found\" >&2;}\n-   { (exit 1); exit 1; }; }\n-fi\n+echo \"$as_me:$LINENO: checking for thread model used by GCC\" >&5\n+echo $ECHO_N \"checking for thread model used by GCC... $ECHO_C\" >&6\n+target_thread_file=`$CC -v 2>&1 | sed -n 's/^Thread model: //p'`\n+echo \"$as_me:$LINENO: result: $target_thread_file\" >&5\n+echo \"${ECHO_T}$target_thread_file\" >&6\n+\n+if test $target_thread_file != single; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_GTHR_DEFAULT 1\n+_ACEOF\n+\n fi\n-echo \"$as_me:$LINENO: result: $objc_cv_gthread_flags\" >&5\n-echo \"${ECHO_T}$objc_cv_gthread_flags\" >&6\n-GTHREAD_FLAGS=$objc_cv_gthread_flags\n \n \n echo \"$as_me:$LINENO: checking for exception model to use\" >&5\n@@ -5147,7 +5140,7 @@ if test \"${enable_sjlj_exceptions+set}\" = set; then\n   :\n else\n   cat > conftest.$ac_ext << EOF\n-#line 5150 \"configure\"\n+#line 5143 \"configure\"\n @interface Frob\n @end\n @implementation Frob\n@@ -5903,7 +5896,6 @@ s,@SET_MAKE@,$SET_MAKE,;t t\n s,@CPP@,$CPP,;t t\n s,@CPPFLAGS@,$CPPFLAGS,;t t\n s,@EGREP@,$EGREP,;t t\n-s,@GTHREAD_FLAGS@,$GTHREAD_FLAGS,;t t\n s,@LIBOBJS@,$LIBOBJS,;t t\n s,@LTLIBOBJS@,$LTLIBOBJS,;t t\n CEOF"}, {"sha": "8c554b50563fbffecf4d47f7a3ca6f9e46890086", "filename": "libobjc/configure.ac", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6886e18e758f87f7d409dccda8073a28dd883f3e/libobjc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6886e18e758f87f7d409dccda8073a28dd883f3e/libobjc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fconfigure.ac?ref=6886e18e758f87f7d409dccda8073a28dd883f3e", "patch": "@@ -218,18 +218,15 @@ AC_CHECK_HEADERS(sched.h)\n # Miscellanea\n # -----------\n \n-# Determine CFLAGS for gthread.\n-AC_CACHE_CHECK([for gthread cflags],objc_cv_gthread_flags,\n-[# we know we are compiled as a target library, so the toplevel build directory\n-# is ../..\n-if test -f ../../$host_subdir/gcc/Makefile\n-then\n-  objc_cv_gthread_flags=`grep \\^GTHREAD_FLAGS ../../$host_subdir/gcc/Makefile | awk -F= '{ print $2 }'`\n-else\n-  AC_MSG_ERROR([not found])\n-fi])\n-GTHREAD_FLAGS=$objc_cv_gthread_flags\n-AC_SUBST(GTHREAD_FLAGS)\n+AC_MSG_CHECKING([for thread model used by GCC])\n+target_thread_file=`$CC -v 2>&1 | sed -n 's/^Thread model: //p'`\n+AC_MSG_RESULT([$target_thread_file]) \n+\n+if test $target_thread_file != single; then\n+  AC_DEFINE(HAVE_GTHR_DEFAULT, 1,\n+        [Define if the compiler has a thread header that is non single.])\n+fi \n+\n \n AC_MSG_CHECKING([for exception model to use])\n AC_LANG_PUSH(C)"}, {"sha": "d954f937154619e2483bcab91c2fa167ebc29d94", "filename": "libobjc/thr-objc.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6886e18e758f87f7d409dccda8073a28dd883f3e/libobjc%2Fthr-objc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6886e18e758f87f7d409dccda8073a28dd883f3e/libobjc%2Fthr-objc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fthr-objc.c?ref=6886e18e758f87f7d409dccda8073a28dd883f3e", "patch": "@@ -24,6 +24,7 @@ Boston, MA 02111-1307, USA.  */\n    covered by the GNU General Public License.  */\n \n #define _LIBOBJC\n+#include \"config.h\"\n #include \"tconfig.h\"\n #include \"coretypes.h\"\n #include \"tm.h\""}]}