{"sha": "0591b9c6285d23a61461b2add592b054b5e84d01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDU5MWI5YzYyODVkMjNhNjE0NjFiMmFkZDU5MmIwNTRiNWU4NGQwMQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-04-04T20:28:11Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-04-04T20:28:11Z"}, "message": "(type_attribute): Use the TYPE_MAIN_VARIANT of the\ngiven type when calling `user_def_type_attribute'.\n\nFrom-SVN: r4005", "tree": {"sha": "616cd79741c3467ede8b3567c5d82a6b41c8bd84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/616cd79741c3467ede8b3567c5d82a6b41c8bd84"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0591b9c6285d23a61461b2add592b054b5e84d01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0591b9c6285d23a61461b2add592b054b5e84d01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0591b9c6285d23a61461b2add592b054b5e84d01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0591b9c6285d23a61461b2add592b054b5e84d01/comments", "author": null, "committer": null, "parents": [{"sha": "fff9ecff94a0142ddb4b888d4a85d757c0c2eab4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fff9ecff94a0142ddb4b888d4a85d757c0c2eab4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fff9ecff94a0142ddb4b888d4a85d757c0c2eab4"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "b2552a66d32b327675818b2e6a8efc52e0b2291c", "filename": "gcc/dwarfout.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0591b9c6285d23a61461b2add592b054b5e84d01/gcc%2Fdwarfout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0591b9c6285d23a61461b2add592b054b5e84d01/gcc%2Fdwarfout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarfout.c?ref=0591b9c6285d23a61461b2add592b054b5e84d01", "patch": "@@ -2827,7 +2827,16 @@ type_attribute (type, decl_const, decl_volatile)\n     if (root_type_modified)\n \tmod_u_d_type_attribute (type, decl_const, decl_volatile);\n     else\n-\tuser_def_type_attribute (type);\n+\t/* We have to get the TYPE_MAIN_VARIANT here (and pass that to the\n+\t   `user_def_type_attribute' routine) because the ..._TYPE node we\n+\t   have might simply be a *copy* of some original type node (where\n+\t   the copy was created to help us keep track of typedef names)\n+\t   and that copy might have a different TYPE_UID from the original\n+\t   ..._TYPE node.  (Note that when `equate_type_number_to_die_number'\n+\t   is labeling a given type DIE for future reference, it always and\n+\t   only creates labels for DIEs representing *main variants*, and it\n+\t   never even knows about non-main-variants.)  */\n+\tuser_def_type_attribute (TYPE_MAIN_VARIANT (type));\n }\n \n /* Given a tree pointer to a struct, class, union, or enum type node, return"}]}