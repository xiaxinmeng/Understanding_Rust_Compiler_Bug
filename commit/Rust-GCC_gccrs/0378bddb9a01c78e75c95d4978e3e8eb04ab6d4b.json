{"sha": "0378bddb9a01c78e75c95d4978e3e8eb04ab6d4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDM3OGJkZGI5YTAxYzc4ZTc1Yzk1ZDQ5NzhlM2U4ZWIwNGFiNmQ0Yg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2013-06-05T15:29:12Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2013-06-05T15:29:12Z"}, "message": "varasm.c (mark_decl_referenced): Revert the removal until targets are fixed.\n\n\t* varasm.c (mark_decl_referenced): Revert the removal until targets\n\tare fixed.\n\nFrom-SVN: r199699", "tree": {"sha": "0bf35bb18127d885aa49e476851292a5877cba99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0bf35bb18127d885aa49e476851292a5877cba99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0378bddb9a01c78e75c95d4978e3e8eb04ab6d4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0378bddb9a01c78e75c95d4978e3e8eb04ab6d4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0378bddb9a01c78e75c95d4978e3e8eb04ab6d4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0378bddb9a01c78e75c95d4978e3e8eb04ab6d4b/comments", "author": null, "committer": null, "parents": [{"sha": "8f8a20576a873e0ce7be126ce8008c347dd49a4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f8a20576a873e0ce7be126ce8008c347dd49a4a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f8a20576a873e0ce7be126ce8008c347dd49a4a"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "1eba4643cd1ecab14d57eeeb5923f95177ca89b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0378bddb9a01c78e75c95d4978e3e8eb04ab6d4b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0378bddb9a01c78e75c95d4978e3e8eb04ab6d4b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0378bddb9a01c78e75c95d4978e3e8eb04ab6d4b", "patch": "@@ -1,3 +1,8 @@\n+2013-06-05  Jan Hubicka  <jh@suse.cz>\n+\n+\t* varasm.c (mark_decl_referenced): Revert the removal until targets\n+\tare fixed.\n+\n 2013-06-05  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* config/rs6000/rs6000.c (print_operand, 'z'): Use DECL_PRESERVE_P\n@@ -31,7 +36,6 @@\n \t(function_and_variable_visibility): Clear forced_by_abi as needed.\n \t* trans-mem.c (ipa_tm_mark_forced_by_abi_node): New functoin.\n \t(ipa_tm_create_version_alias, ipa_tm_create_version): Update.\n-\t* varasm.c (mark_decl_referenced): Remove.\n \t* symtab.c (dump_symtab_base): Dump forced_by_abi.\n \t* varpool.c (decide_is_variable_needed): Remove.\n "}, {"sha": "c088ebf90080eb97182b6ca6c8d45c7623a5464c", "filename": "gcc/varasm.c", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0378bddb9a01c78e75c95d4978e3e8eb04ab6d4b/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0378bddb9a01c78e75c95d4978e3e8eb04ab6d4b/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=0378bddb9a01c78e75c95d4978e3e8eb04ab6d4b", "patch": "@@ -2244,6 +2244,33 @@ mark_referenced (tree id)\n   TREE_SYMBOL_REFERENCED (id) = 1;\n }\n \n+/* Set the symbol_referenced flag for DECL and notify callgraph.  */\n+void\n+mark_decl_referenced (tree decl)\n+{\n+  if (TREE_CODE (decl) == FUNCTION_DECL)\n+    {\n+      /* Extern inline functions don't become needed when referenced.\n+\t If we know a method will be emitted in other TU and no new\n+\t functions can be marked reachable, just use the external\n+\t definition.  */\n+      struct cgraph_node *node = cgraph_get_create_node (decl);\n+      if (!DECL_EXTERNAL (decl)\n+\t  && !node->symbol.definition)\n+\tcgraph_mark_force_output_node (node);\n+    }\n+  else if (TREE_CODE (decl) == VAR_DECL)\n+    {\n+      struct varpool_node *node = varpool_node_for_decl (decl);\n+      /* C++ frontend use mark_decl_references to force COMDAT variables\n+         to be output that might appear dead otherwise.  */\n+      node->symbol.force_output = true;\n+    }\n+  /* else do nothing - we can get various sorts of CST nodes here,\n+     which do not need to be marked.  */\n+}\n+\n+\n /* Follow the IDENTIFIER_TRANSPARENT_ALIAS chain starting at *ALIAS\n    until we find an identifier that is not itself a transparent alias.\n    Modify the alias passed to it by reference (and all aliases on the"}]}