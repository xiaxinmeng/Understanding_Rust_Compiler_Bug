{"sha": "b73aff3657492d5425e780ec650f2c00658a73de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjczYWZmMzY1NzQ5MmQ1NDI1ZTc4MGVjNjUwZjJjMDA2NThhNzNkZQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-08-23T13:03:07Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-08-23T13:03:07Z"}, "message": "s390: New directory.\n\n\t* gcc.target/s390: New directory.\n\t* gcc.target/s390/s390.exp: New file.\n\t* gcc.dg/20020926-1.c, gcc.dg/20030123-1.c, gcc.dg/20030129-1.c,\n\tgcc.dg/20040305-1.c, gcc.dg/20041109-1.c, gcc.dg/20041216-1.c,\n\tgcc.dg/20050409-1.c, gcc.dg/20050524-1.c, gcc.dg/20050824-1.c,\n\tgcc.dg/pr20927.c, gcc.dg/pr24624.c, gcc.dg/pr27661.c: Move to\n\tgcc.target/s390 directory.\n\nFrom-SVN: r127738", "tree": {"sha": "ac65269600d8683d641718fd2b8ccced85f3298d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac65269600d8683d641718fd2b8ccced85f3298d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b73aff3657492d5425e780ec650f2c00658a73de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b73aff3657492d5425e780ec650f2c00658a73de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b73aff3657492d5425e780ec650f2c00658a73de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b73aff3657492d5425e780ec650f2c00658a73de/comments", "author": null, "committer": null, "parents": [{"sha": "0cb58062b7fd2307ba67cdc32ad4113bea2265f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cb58062b7fd2307ba67cdc32ad4113bea2265f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cb58062b7fd2307ba67cdc32ad4113bea2265f3"}], "stats": {"total": 94, "additions": 73, "deletions": 21}, "files": [{"sha": "1fb55d54516029df0ef0b903731296ee553875c3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b73aff3657492d5425e780ec650f2c00658a73de", "patch": "@@ -1,3 +1,13 @@\n+2007-08-23  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gcc.target/s390: New directory.\n+\t* gcc.target/s390/s390.exp: New file.\n+\t* gcc.dg/20020926-1.c, gcc.dg/20030123-1.c, gcc.dg/20030129-1.c,\n+\tgcc.dg/20040305-1.c, gcc.dg/20041109-1.c, gcc.dg/20041216-1.c,\n+\tgcc.dg/20050409-1.c, gcc.dg/20050524-1.c, gcc.dg/20050824-1.c,\n+\tgcc.dg/pr20927.c, gcc.dg/pr24624.c, gcc.dg/pr27661.c: Move to\n+\tgcc.target/s390 directory.\n+\n 2007-08-23  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/32328\n@@ -145,7 +155,7 @@\n \n 2007-03-20  Pawel Sikora  <pluto@pld-linux.org>\n \n-        * g++.dg/warn/Wnvdtor-2.C: New testcase.\n+\t* g++.dg/warn/Wnvdtor-2.C: New testcase.\n \n 2007-08-20  Dorit Nuzman  <dorit@il.ibm.com>\n \n@@ -204,7 +214,7 @@\n \t* gcc.dg/vect/vect-outer-6.c: New test.\n \t* gcc.dg/vect/vect-outer-fir.c: New test.\n \t* gcc.dg/vect/vect-outer-fir-lb.c: New test.\n-\t* gcc.dg/vect/costmodel/ppc/costmodel-vect-outer-fir.c: New test.\t\n+\t* gcc.dg/vect/costmodel/ppc/costmodel-vect-outer-fir.c: New test.\n \n 2007-08-19  Dorit Nuzman  <dorit@il.ibm.com>\n \n@@ -254,7 +264,8 @@\n \tversioning for aliasing).\n \t* testsuite/gcc.dg/vect/vect-35.c: Likewise.\n \n-\t* testsuite/gcc.dg/vect/vect-iv-6.c: Fix test for vect_no_align targets.\n+\t* testsuite/gcc.dg/vect/vect-iv-6.c: Fix test for vect_no_align\n+\ttargets.\n \t* testsuite/gcc.dg/vect/vect-multitypes-11.c: Likewise.\n \n 2007-08-18  Tom Tromey  <tromey@redhat.com>\n@@ -580,8 +591,8 @@\n \n \tPR middle-end/32813\n \t* gfortran.fortran-torture/compile/emptyif-1.f90: New test.\n-\t* lib/fortran-torture.exp (fortran-torture): Use TORTURE_OPTIONS instead\n-\tof just -O.\n+\t* lib/fortran-torture.exp (fortran-torture): Use TORTURE_OPTIONS\n+\tinstead of just -O.\n \n 2007-08-08  Richard Sandiford  <richard@codesourcery.com>\n \n@@ -631,7 +642,7 @@\n \t* gfortran.dg/vect-5.f90: Likewise.\n \t* lib/target-supports.exp (check_effective_target_natural_alignment): \n \tReturn false for darwin. \n-\t(check_effective_target_vector_alignment_reachable_for_double): New.\t\n+\t(check_effective_target_vector_alignment_reachable_for_double): New.\n \n 2007-08-07  Andreas Krebbel  <krebbel1@de.ibm.com>\n \n@@ -694,7 +705,7 @@\n \t* gfortran.dg/isnan_1.f90: New test.\n \n 2007-08-05  Vladimir Yanovsky  <yanov@il.ibm.com>\n-            Revital Eres <eres@il.ibm.com>\n+\t    Revital Eres <eres@il.ibm.com>\n \n \t* gcc.dg/sms-antideps.c: New test.\n \n@@ -986,7 +997,7 @@\n \t* gfortran.dg/entry_11.f90: New test.\n \n 2007-07-29  Vladimir Yanovsky  <yanov@il.ibm.com>\n-            Revital Eres  <eres@il.ibm.com>\n+\t    Revital Eres  <eres@il.ibm.com>\n \n \t* gfortran.dg/sms-1.f90: New test.\n \n@@ -1433,7 +1444,7 @@\n 2007-07-16  Sandra Loosemore  <sandra@codesourcery.com>\n \t    David Ung  <davidu@mips.com>\n \n-        * gcc.target/mips/mips-sched-madd.c: New test case.\n+\t* gcc.target/mips/mips-sched-madd.c: New test case.\n \n 2007-07-15  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n "}, {"sha": "07106a623a553c05f8be553869884bc99e3ca4d0", "filename": "gcc/testsuite/gcc.target/s390/20020926-1.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20020926-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20020926-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20020926-1.c?ref=b73aff3657492d5425e780ec650f2c00658a73de", "patch": "@@ -1,7 +1,7 @@\n /* Make sure that LEGITIMIZE_ADDRESS is called to handle\n    negative displacements.  */\n \n-/* { dg-do compile { target s390-*-* } } */\n+/* { dg-do compile } */\n /* { dg-options \"-O2 -mesa\" } */\n \n int test (int *addr)", "previous_filename": "gcc/testsuite/gcc.dg/20020926-1.c"}, {"sha": "96ac6f76ced4758bcee72d9f2e331bb5815c62d9", "filename": "gcc/testsuite/gcc.target/s390/20030123-1.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20030123-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20030123-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20030123-1.c?ref=b73aff3657492d5425e780ec650f2c00658a73de", "patch": "@@ -1,6 +1,6 @@\n /* This used to ICE due to a reload bug on s390*.  */\n \n-/* { dg-do compile { target s390*-*-* } } */\n+/* { dg-do compile } */\n /* { dg-options \"-O2 -fno-omit-frame-pointer\" } */\n \n extern void *alloca (__SIZE_TYPE__);", "previous_filename": "gcc/testsuite/gcc.dg/20030123-1.c"}, {"sha": "1cbd8b4829755e3c3be88d906c77a0571f6ffcc0", "filename": "gcc/testsuite/gcc.target/s390/20030129-1.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20030129-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20030129-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20030129-1.c?ref=b73aff3657492d5425e780ec650f2c00658a73de", "patch": "@@ -1,6 +1,6 @@\n /* This used to ICE due to a reload bug on s390*.  */\n \n-/* { dg-do compile { target s390*-*-* } } */\n+/* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n int f (unsigned int);", "previous_filename": "gcc/testsuite/gcc.dg/20030129-1.c"}, {"sha": "a241f041c8f91c08bbe4d030dd4ca8fcef160f91", "filename": "gcc/testsuite/gcc.target/s390/20040305-1.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20040305-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20040305-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20040305-1.c?ref=b73aff3657492d5425e780ec650f2c00658a73de", "patch": "@@ -5,7 +5,7 @@\n    reordering which leads to an insn with wrong alias info.\n    The scheduler afterwards exchanges the mvc and st instructions \n    not recognizing the anti dependence.  */\n-/* { dg-do run { target s390-*-* } } */\n+/* { dg-do run } */\n /* { dg-options \"-O3 -mtune=z990 -fno-inline\" } */\n \n extern void exit (int);", "previous_filename": "gcc/testsuite/gcc.dg/20040305-1.c"}, {"sha": "bf768439cd1187e6efdd834e0ddb75cc3176310d", "filename": "gcc/testsuite/gcc.target/s390/20041109-1.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20041109-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20041109-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20041109-1.c?ref=b73aff3657492d5425e780ec650f2c00658a73de", "patch": "@@ -1,6 +1,6 @@\n /* This used to ICE due to a literal pool handling bug on s390x.  */\n \n-/* { dg-do compile { target s390*-*-* } } */\n+/* { dg-do compile } */\n /* { dg-options \"-O2 -fno-omit-frame-pointer\" } */\n \n static struct table { int x; } table[3];", "previous_filename": "gcc/testsuite/gcc.dg/20041109-1.c"}, {"sha": "492ee6c182bbcd2ddb88db051e6043f9dd2bd6cd", "filename": "gcc/testsuite/gcc.target/s390/20041216-1.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20041216-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20041216-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20041216-1.c?ref=b73aff3657492d5425e780ec650f2c00658a73de", "patch": "@@ -2,7 +2,7 @@\n    because stabs referred to an optimized-away literal pool\n    entry.  */\n \n-/* { dg-do run { target s390*-*-* } } */\n+/* { dg-do run } */\n /* { dg-options \"-O2 -fno-omit-frame-pointer -gstabs\" } */\n \n int main (void)", "previous_filename": "gcc/testsuite/gcc.dg/20041216-1.c"}, {"sha": "4763afad36ec8d36345f598d09781fae00f97ff5", "filename": "gcc/testsuite/gcc.target/s390/20050409-1.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20050409-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20050409-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20050409-1.c?ref=b73aff3657492d5425e780ec650f2c00658a73de", "patch": "@@ -1,6 +1,6 @@\n /* This used to ICE due to a regmove problem on s390.  */\n \n-/* { dg-do compile { target s390*-*-* } } */\n+/* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n ", "previous_filename": "gcc/testsuite/gcc.dg/20050409-1.c"}, {"sha": "7b94fd0f065d0c7fd8326e180192105bbc0c01b8", "filename": "gcc/testsuite/gcc.target/s390/20050524-1.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20050524-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20050524-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20050524-1.c?ref=b73aff3657492d5425e780ec650f2c00658a73de", "patch": "@@ -1,7 +1,7 @@\n /* This test case used to abort due to a reload bug with\n    elimination offsets.  */\n \n-/* { dg-do run { target s390*-*-* } } */\n+/* { dg-do run } */\n /* { dg-options \"-O2 -mpacked-stack\" } */\n \n extern void abort (void);", "previous_filename": "gcc/testsuite/gcc.dg/20050524-1.c"}, {"sha": "c24e1e26f2df856fe7ef737154c603803a2e0c68", "filename": "gcc/testsuite/gcc.target/s390/20050824-1.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20050824-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20050824-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2F20050824-1.c?ref=b73aff3657492d5425e780ec650f2c00658a73de", "patch": "@@ -1,7 +1,7 @@\n /* Make sure that the S/390 specific shift_count_operand\n    predicate work properly.  */\n \n-/* { dg-do compile { target s390*-*-* } } */\n+/* { dg-do compile } */\n /* { dg-options \"-O3\" } */\n \n unsigned long long", "previous_filename": "gcc/testsuite/gcc.dg/20050824-1.c"}, {"sha": "dbc990f151f6e0483da59fec42b4ab7c9ab7997d", "filename": "gcc/testsuite/gcc.target/s390/pr20927.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr20927.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr20927.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr20927.c?ref=b73aff3657492d5425e780ec650f2c00658a73de", "patch": "@@ -1,6 +1,6 @@\n /* This caused an ICE on s390x due to a reload inheritance bug.  */\n \n-/* { dg-do compile { target s390*-*-* } } */\n+/* { dg-do compile } */\n /* { dg-options \"-O2\" } */\n \n struct point { double x, y; };", "previous_filename": "gcc/testsuite/gcc.dg/pr20927.c"}, {"sha": "bc2070c4b799cf3fae99491ae4ea9e12bc3d0cc6", "filename": "gcc/testsuite/gcc.target/s390/pr24624.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr24624.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr24624.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr24624.c?ref=b73aff3657492d5425e780ec650f2c00658a73de", "patch": "@@ -1,6 +1,6 @@\n /* This used to ICE due to a backend problem on s390.  */\n \n-/* { dg-do compile { target s390*-*-* } } */\n+/* { dg-do compile } */\n /* { dg-options \"-O1 -mpacked-stack\" } */\n \n typedef unsigned int __u32;", "previous_filename": "gcc/testsuite/gcc.dg/pr24624.c"}, {"sha": "1ff6dcc7cece5ac0ced81df9e32176ad40528f5a", "filename": "gcc/testsuite/gcc.target/s390/pr27661.c", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr27661.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr27661.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fpr27661.c?ref=b73aff3657492d5425e780ec650f2c00658a73de", "patch": "@@ -1,6 +1,6 @@\n /* This used to ICE on s390 due to a reload bug.  */\n \n-/* { dg-do compile { target s390*-*-* } } */\n+/* { dg-do compile } */\n /* { dg-options \"-O2 -march=z990 -ftracer\" } */\n \n extern int memcmp (const void *s1, const void *s2, unsigned long n);", "previous_filename": "gcc/testsuite/gcc.dg/pr27661.c"}, {"sha": "d693309861ed1e727b86a98f95d4db29841b9b88", "filename": "gcc/testsuite/gcc.target/s390/s390.exp", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b73aff3657492d5425e780ec650f2c00658a73de/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fs390.exp?ref=b73aff3657492d5425e780ec650f2c00658a73de", "patch": "@@ -0,0 +1,41 @@\n+# Copyright (C) 2007 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# GCC testsuite that uses the `dg.exp' driver.\n+\n+# Exit immediately if this isn't a s390 target.\n+if ![istarget s390*-*-*] then {\n+  return\n+}\n+\n+# Load support procs.\n+load_lib gcc-dg.exp\n+\n+# If a testcase doesn't have special options, use these.\n+global DEFAULT_CFLAGS\n+if ![info exists DEFAULT_CFLAGS] then {\n+    set DEFAULT_CFLAGS \" -ansi -pedantic-errors\"\n+}\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\\[cS\\]]] \\\n+\t\"\" $DEFAULT_CFLAGS\n+\n+# All done.\n+dg-finish"}]}