{"sha": "39d44c531fcf423c5bccdc43dee27f31e195b685", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzlkNDRjNTMxZmNmNDIzYzViY2NkYzQzZGVlMjdmMzFlMTk1YjY4NQ==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2016-01-18T03:22:35Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2016-01-18T03:22:35Z"}, "message": "arm.c (thumb1_reorg): Check that the comparison is against the constant 0.\n\n2016-01-18  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    gcc/\n    * config/arm/arm.c (thumb1_reorg): Check that the comparison is\n    against the constant 0.\n\nFrom-SVN: r232493", "tree": {"sha": "817c1aaa94f12db172fd154b26d6682f4660ef63", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/817c1aaa94f12db172fd154b26d6682f4660ef63"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39d44c531fcf423c5bccdc43dee27f31e195b685", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39d44c531fcf423c5bccdc43dee27f31e195b685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39d44c531fcf423c5bccdc43dee27f31e195b685", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39d44c531fcf423c5bccdc43dee27f31e195b685/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b3d5f769bef7b9a8b43fc8269c14b56ad3be465", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b3d5f769bef7b9a8b43fc8269c14b56ad3be465", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b3d5f769bef7b9a8b43fc8269c14b56ad3be465"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "79fb3655966e67c915abc3698b69c3c818a96bc9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39d44c531fcf423c5bccdc43dee27f31e195b685/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39d44c531fcf423c5bccdc43dee27f31e195b685/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=39d44c531fcf423c5bccdc43dee27f31e195b685", "patch": "@@ -1,3 +1,8 @@\n+2016-01-18  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* config/arm/arm.c (thumb1_reorg): Check that the comparison is\n+\tagainst the constant 0.\n+\n 2016-01-17  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR tree-optimization/68799"}, {"sha": "f152afa4019468e28766e1c95c513055f6529551", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39d44c531fcf423c5bccdc43dee27f31e195b685/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39d44c531fcf423c5bccdc43dee27f31e195b685/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=39d44c531fcf423c5bccdc43dee27f31e195b685", "patch": "@@ -17206,7 +17206,7 @@ thumb1_reorg (void)\n   FOR_EACH_BB_FN (bb, cfun)\n     {\n       rtx dest, src;\n-      rtx pat, op0, set = NULL;\n+      rtx cmp, op0, op1, set = NULL;\n       rtx_insn *prev, *insn = BB_END (bb);\n       bool insn_clobbered = false;\n \n@@ -17219,8 +17219,13 @@ thumb1_reorg (void)\n \tcontinue;\n \n       /* Get the register with which we are comparing.  */\n-      pat = PATTERN (insn);\n-      op0 = XEXP (XEXP (SET_SRC (pat), 0), 0);\n+      cmp = XEXP (SET_SRC (PATTERN (insn)), 0);\n+      op0 = XEXP (cmp, 0);\n+      op1 = XEXP (cmp, 1);\n+\n+      /* Check that comparison is against ZERO.  */\n+      if (!CONST_INT_P (op1) || INTVAL (op1) != 0)\n+\tcontinue;\n \n       /* Find the first flag setting insn before INSN in basic block BB.  */\n       gcc_assert (insn != BB_HEAD (bb));\n@@ -17260,7 +17265,7 @@ thumb1_reorg (void)\n \t  PATTERN (prev) = gen_rtx_SET (dest, src);\n \t  INSN_CODE (prev) = -1;\n \t  /* Set test register in INSN to dest.  */\n-\t  XEXP (XEXP (SET_SRC (pat), 0), 0) = copy_rtx (dest);\n+\t  XEXP (cmp, 0) = copy_rtx (dest);\n \t  INSN_CODE (insn) = -1;\n \t}\n     }"}]}