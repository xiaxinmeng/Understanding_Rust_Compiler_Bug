{"sha": "26596ee50d8506ec255784646a20e8edfa0ff3b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjY1OTZlZTUwZDg1MDZlYzI1NTc4NDY0NmEyMGU4ZWRmYTBmZjNiNA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2017-10-04T08:39:09Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2017-10-04T08:39:09Z"}, "message": "Fix openacc float reduction testcases\n\n2017-10-04  Tom de Vries  <tom@codesourcery.com>\n\n\t* testsuite/libgomp.oacc-c-c++-common/par-loop-comb-reduction-3.c\n\t(main): Reduce sum of arr elements.  Assert that hres is exactly\n\trepresentable in 32-bit floating point.\n\t* testsuite/libgomp.oacc-c-c++-common/par-loop-comb-reduction-4.c\n\t(main): Reduce sum of arr elements.  Assert that hres and hmres are\n\texactly representable in 32-bit floating point.\n\t* testsuite/libgomp.oacc-c-c++-common/reduction-7.c (gwv_np_4): Same.\n\nFrom-SVN: r253398", "tree": {"sha": "53574432af4bcd0fd4c2acabb45cb3872e11abb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/53574432af4bcd0fd4c2acabb45cb3872e11abb0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26596ee50d8506ec255784646a20e8edfa0ff3b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26596ee50d8506ec255784646a20e8edfa0ff3b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26596ee50d8506ec255784646a20e8edfa0ff3b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26596ee50d8506ec255784646a20e8edfa0ff3b4/comments", "author": null, "committer": null, "parents": [{"sha": "8bca3f592cd3eca48afd88939160b2ebae8e47e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8bca3f592cd3eca48afd88939160b2ebae8e47e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8bca3f592cd3eca48afd88939160b2ebae8e47e5"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "6441453334da81a249ff6548e67f93f5ea256f50", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26596ee50d8506ec255784646a20e8edfa0ff3b4/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26596ee50d8506ec255784646a20e8edfa0ff3b4/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=26596ee50d8506ec255784646a20e8edfa0ff3b4", "patch": "@@ -1,3 +1,13 @@\n+2017-10-04  Tom de Vries  <tom@codesourcery.com>\n+\n+\t* testsuite/libgomp.oacc-c-c++-common/par-loop-comb-reduction-3.c\n+\t(main): Reduce sum of arr elements.  Assert that hres is exactly\n+\trepresentable in 32-bit floating point.\n+\t* testsuite/libgomp.oacc-c-c++-common/par-loop-comb-reduction-4.c\n+\t(main): Reduce sum of arr elements.  Assert that hres and hmres are\n+\texactly representable in 32-bit floating point.\n+\t* testsuite/libgomp.oacc-c-c++-common/reduction-7.c (gwv_np_4): Same.\n+\n 2017-09-28  Tom de Vries  <tom@codesourcery.com>\n \n \t* testsuite/libgomp.c++/for-12.C: Remove superfluous -fopenmp option"}, {"sha": "6369d7fbb3304e360889dd61075b8598befcf7cb", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/par-loop-comb-reduction-3.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26596ee50d8506ec255784646a20e8edfa0ff3b4/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpar-loop-comb-reduction-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26596ee50d8506ec255784646a20e8edfa0ff3b4/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpar-loop-comb-reduction-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpar-loop-comb-reduction-3.c?ref=26596ee50d8506ec255784646a20e8edfa0ff3b4", "patch": "@@ -11,7 +11,7 @@ main (int argc, char *argv[])\n   float res = 0, hres = 0;\n \n   for (i = 0; i < 32768; i++)\n-    arr[i] = i;\n+    arr[i] = i % (32768 / 64);\n \n   #pragma acc parallel num_gangs(32) num_workers(32) vector_length(32) \\\n     reduction(+:res) copy(res)\n@@ -36,6 +36,7 @@ main (int argc, char *argv[])\n \thres += arr[j * 1024 + (1023 - i)];\n       }\n \n+  assert (hres <= 16777216);\n   assert (res == hres);\n \n   return 0;"}, {"sha": "140c32263278002a50ca9ea2aa71f759466a9046", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/par-loop-comb-reduction-4.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26596ee50d8506ec255784646a20e8edfa0ff3b4/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpar-loop-comb-reduction-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26596ee50d8506ec255784646a20e8edfa0ff3b4/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpar-loop-comb-reduction-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpar-loop-comb-reduction-4.c?ref=26596ee50d8506ec255784646a20e8edfa0ff3b4", "patch": "@@ -11,7 +11,7 @@ main (int argc, char *argv[])\n   float res = 0, mres = 0, hres = 0, hmres = 0;\n \n   for (i = 0; i < 32768; i++)\n-    arr[i] = i;\n+    arr[i] = i % (32768 / 64);\n \n   #pragma acc parallel num_gangs(32) num_workers(32) vector_length(32) \\\n     reduction(+:res) reduction(max:mres) copy(res, mres)\n@@ -48,7 +48,10 @@ main (int argc, char *argv[])\n \t  hmres = arr[j * 1024 + (1023 - i)];\n       }\n \n+  assert (hres <= 16777216);\n   assert (res == hres);\n+\n+  assert (hmres <= 16777216);\n   assert (mres == hmres);\n \n   return 0;"}, {"sha": "c4940b8ad9db9cf7f1158e563a6c2ee44a6c6852", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/reduction-7.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26596ee50d8506ec255784646a20e8edfa0ff3b4/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26596ee50d8506ec255784646a20e8edfa0ff3b4/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Freduction-7.c?ref=26596ee50d8506ec255784646a20e8edfa0ff3b4", "patch": "@@ -183,7 +183,7 @@ void gwv_np_4()\n   float res = 0, mres = 0, hres = 0, hmres = 0;\n \n   for (i = 0; i < 32768; i++)\n-    arr[i] = i;\n+    arr[i] = i % (32768 / 64);\n \n   #pragma acc parallel num_gangs(32) num_workers(32) vector_length(32)\n   {\n@@ -219,7 +219,10 @@ void gwv_np_4()\n \t  hmres = arr[j * 1024 + (1023 - i)];\n       }\n \n+  assert (hres <= 16777216);\n   assert (res == hres);\n+\n+  assert (hmres <= 16777216);\n   assert (mres == hmres);\n }\n "}]}