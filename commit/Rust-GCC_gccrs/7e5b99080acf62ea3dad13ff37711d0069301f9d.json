{"sha": "7e5b99080acf62ea3dad13ff37711d0069301f9d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U1Yjk5MDgwYWNmNjJlYTNkYWQxM2ZmMzc3MTFkMDA2OTMwMWY5ZA==", "commit": {"author": {"name": "Steve Ellcey", "email": "sje@cup.hp.com", "date": "2001-03-16T04:39:20Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2001-03-16T04:39:20Z"}, "message": "Steve Ellcey's ia64-hpux port.\n\n        * config.gcc (ia64*-*-hpux*): New case.\n        * config/ia64/hpux.h: New file for HP-UX support.\n        * config/ia64/t-hpux: New file for HP-UX support.\n\nFrom-SVN: r40531", "tree": {"sha": "c8c0eff21c58b81d46e8c2160bd852071a3f7d1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c8c0eff21c58b81d46e8c2160bd852071a3f7d1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e5b99080acf62ea3dad13ff37711d0069301f9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e5b99080acf62ea3dad13ff37711d0069301f9d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e5b99080acf62ea3dad13ff37711d0069301f9d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e5b99080acf62ea3dad13ff37711d0069301f9d/comments", "author": null, "committer": null, "parents": [{"sha": "7d32abcdd215fd8d09764a4b96f407163cc8f309", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d32abcdd215fd8d09764a4b96f407163cc8f309", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d32abcdd215fd8d09764a4b96f407163cc8f309"}], "stats": {"total": 113, "additions": 113, "deletions": 0}, "files": [{"sha": "86f69d11a46c03fcad573bcbb1feb601072caa15", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e5b99080acf62ea3dad13ff37711d0069301f9d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e5b99080acf62ea3dad13ff37711d0069301f9d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e5b99080acf62ea3dad13ff37711d0069301f9d", "patch": "@@ -1,3 +1,9 @@\n+2001-03-15  Steve Ellcey  <sje@cup.hp.com>\n+\n+        * config.gcc (ia64*-*-hpux*): New case.\n+        * config/ia64/hpux.h: New file for HP-UX support.\n+        * config/ia64/t-hpux: New file for HP-UX support.\n+\n 2001-03-16  Bruce Korb  <bkorb@gnu.org>, Alexandre Oliva  <aoliva@redhat.com>\n \n \t* fixinc/inclhack.def (irix_stdio_va_list): New."}, {"sha": "d9ce27b474ce65f5256a96375ef676df8c129752", "filename": "gcc/config.gcc", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e5b99080acf62ea3dad13ff37711d0069301f9d/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e5b99080acf62ea3dad13ff37711d0069301f9d/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=7e5b99080acf62ea3dad13ff37711d0069301f9d", "patch": "@@ -1583,6 +1583,15 @@ ia64*-*-linux*)\n \tfi\n \tfloat_format=i386\n \t;;\n+ia64*-*-hpux*)\n+\ttm_file=\"ia64/ia64.h svr4.h ia64/sysv4.h ia64/hpux.h\"\n+\ttmake_file=\"ia64/t-ia64 ia64/t-hpux\"\n+\ttarget_cpu_default=\"MASK_GNU_AS\"\n+\tif test x$enable_threads = xyes; then\n+\t\tthread_file='posix'\n+\tfi\n+\tfloat_format=i386\n+\t;;\n m32r-*-elf*)\n \textra_parts=\"crtinit.o crtfini.o\"\n \t;;"}, {"sha": "c08cd47154c97e34341d43459f75bad835a86405", "filename": "gcc/config/ia64/hpux.h", "status": "added", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e5b99080acf62ea3dad13ff37711d0069301f9d/gcc%2Fconfig%2Fia64%2Fhpux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e5b99080acf62ea3dad13ff37711d0069301f9d/gcc%2Fconfig%2Fia64%2Fhpux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fhpux.h?ref=7e5b99080acf62ea3dad13ff37711d0069301f9d", "patch": "@@ -0,0 +1,92 @@\n+/* Definitions of target machine GNU compiler.  IA-64 version.\n+   Copyright (C) 1999, 2000, 2001 Free Software Foundation, Inc.\n+   Contributed by Steve Ellcey <sje@cup.hp.com> and\n+                  Reva Cuthbertson <reva@cup.hp.com>\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#undef CPP_PREDEFINES\n+#define CPP_PREDEFINES \"\\\n+  -D__IA64__ -D__ia64 -D__ia64__ -D__hpux -D__hpux__ -Dhpux -Dunix \\\n+  -D__BIG_ENDIAN__ -D_LONGLONG -D__ELF__ \\\n+  -Asystem=hpux -Asystem=posix -Asystem=unix -Acpu=ia64 -Amachine=ia64 \\\n+  -D_UINT128_T\"\n+\n+/* -D__fpreg=long double is needed to compensate for the lack of __fpreg\n+   which is a primitive type in HP C but does not exist in GNU C.  Same\n+   for __float80 and __float128.  These types appear in HP-UX header\n+   files and so must have some definition.  */\n+\n+#undef CPP_SPEC\n+#define CPP_SPEC \"\\\n+  %{mcpu=itanium:-D__itanium__} \\\n+  -D__LP64__ -D__LONG_MAX__=9223372036854775807L \\\n+  %{!ansi:%{!std=c*:%{!std=i*: -D_HPUX_SOURCE -D__STDC_EXT__}}} \\\n+  -D__fpreg=long\\\\ double \\\n+  -D__float80=long\\\\ double \\\n+  -D__float128=long\\\\ double\"\n+\n+#undef ASM_SPEC\n+#define ASM_SPEC \"-x %{mconstant-gp} %{mauto-pic}\"\n+\n+#undef ENDFILE_SPEC\n+\n+#undef STARTFILE_SPEC\n+#ifdef CROSS_COMPILE\n+#define STARTFILE_SPEC \"%{!shared:crt0%O%s}\"\n+#else\n+#define STARTFILE_SPEC \"/usr/ccs/lib/hpux64/crt0%O\"\n+#endif\n+\n+#undef LINK_SPEC\n+#define LINK_SPEC \"\\\n+  +Accept TypeMismatch \\\n+  %{shared:-b} \\\n+  %{!shared: \\\n+    -u main \\\n+    %{!static: \\\n+      %{rdynamic:-export-dynamic}} \\\n+      %{static:-static}}\"\n+\n+#undef  LIB_SPEC\n+#define LIB_SPEC \"%{!shared:%{!symbolic:-lc}}\"\n+\n+#define DONT_USE_BUILTIN_SETJMP\n+#define JMP_BUF_SIZE  (8 * 76)\n+\n+#undef CONST_SECTION_ASM_OP\n+#define CONST_SECTION_ASM_OP    \"\\t.section\\t.rodata,\\t\\\"a\\\",\\t\\\"progbits\\\"\"\n+\n+#undef BITS_BIG_ENDIAN\n+#define BITS_BIG_ENDIAN 1\n+\n+#undef TARGET_DEFAULT\n+#define TARGET_DEFAULT (MASK_DWARF2_ASM | MASK_BIG_ENDIAN)\n+\n+/* We need this macro to output DWARF2 information correctly.  The macro\n+   is defined in dwarf2out.c, but it will not do section relative offsets\n+   which messes up our ability to debug using gdb.  */\n+\n+#undef ASM_OUTPUT_DWARF_OFFSET\n+#define ASM_OUTPUT_DWARF_OFFSET(FILE,LABEL)\t\t\t\t\\\n+ do {\t\t\t\t\t\t\t\t\t\\\n+\tfprintf ((FILE), \"\\t%s\\t\", UNALIGNED_OFFSET_ASM_OP);\t\t\\\n+\tfprintf ((FILE), \"@secrel(\");                                   \\\n+\tassemble_name (FILE, LABEL);\t\t\t\t\t\\\n+\tfprintf ((FILE), \")\");                                          \\\n+  } while (0)"}, {"sha": "4aa43876eaf0dea743e1635d958f442dc19cf389", "filename": "gcc/config/ia64/t-hpux", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e5b99080acf62ea3dad13ff37711d0069301f9d/gcc%2Fconfig%2Fia64%2Ft-hpux", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e5b99080acf62ea3dad13ff37711d0069301f9d/gcc%2Fconfig%2Fia64%2Ft-hpux", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Ft-hpux?ref=7e5b99080acf62ea3dad13ff37711d0069301f9d", "patch": "@@ -0,0 +1,6 @@\n+# HP-UX gets an undefined main when building LIBGCC1_TEST because the\n+# linkspec has \"-u main\" and we want that for linking but it makes\n+# LIBGCC1_TEST fail because it uses -nostdlib -nostartup and main is\n+# not defined in the test program.\n+\n+LIBGCC1_TEST ="}]}