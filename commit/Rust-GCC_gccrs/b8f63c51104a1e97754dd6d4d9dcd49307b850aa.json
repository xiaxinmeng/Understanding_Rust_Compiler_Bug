{"sha": "b8f63c51104a1e97754dd6d4d9dcd49307b850aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhmNjNjNTExMDRhMWU5Nzc1NGRkNmQ0ZDlkY2Q0OTMwN2I4NTBhYQ==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.vnet.ibm.com", "date": "2018-01-21T13:26:07Z"}, "committer": {"name": "William Schmidt", "email": "wschmidt@gcc.gnu.org", "date": "2018-01-21T13:26:07Z"}, "message": "re PR target/83946 (Safe Indirect Jumps broken on AIX)\n\n[gcc]\n\n2018-01-21  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\t    David Edelsohn <dje.gcc@gmail.com>\n\n\tPR target/83946\n\t* config/rs6000/rs6000.md (*call_indirect_nonlocal_sysv<mode>):\n\tChange \"crset eq\" to \"crset 2\".\n\t(*call_value_indirect_nonlocal_sysv<mode>): Likewise.\n\t(*call_indirect_aix<mode>_nospec): Likewise.\n\t(*call_value_indirect_aix<mode>_nospec): Likewise.\n\t(*call_indirect_elfv2<mode>_nospec): Likewise.\n\t(*call_value_indirect_elfv2<mode>_nospec): Likewise.\n\t(*sibcall_nonlocal_sysv<mode>): Change \"crset eq\" to \"crset 2\";\n\tchange assembly output from . to $.\n\t(*sibcall_value_nonlocal_sysv<mode>): Likewise.\n\t(indirect_jump<mode>_nospec): Change assembly output from . to $.\n\t(*tablejump<mode>_internal1_nospec): Likewise.\n\n[gcc/testsuite]\n\n2018-01-21  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n\t    David Edelsohn <dje.gcc@gmail.com>\n\n\tPR target/83946\n\t* gcc.target/powerpc/safe-indirect-jump-1.c: Change expected\n\tassembly output from \"crset eq\" to \"crset 2\".\n\t* gcc.target/powerpc/safe-indirect-jump-2.c: Change expected\n\tassembly output from . to $.\n\t* gcc.target/powerpc/safe-indirect-jump-3.c: Likewise.\n\t* gcc.target/powerpc/safe-indirect-jump-1.c: Change expected\n\tassembly output from \"crset eq\" to \"crset 2\".\n\t* gcc.target/powerpc/safe-indirect-jump-8.c: Change expected\n\tassembly output from \"crset eq\" to \"crset 2\", and from . to $.\n\n\nCo-Authored-By: David Edelsohn <dje.gcc@gmail.com>\n\nFrom-SVN: r256931", "tree": {"sha": "877af85007b1c337fc106b6b45e303c3cdca43c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/877af85007b1c337fc106b6b45e303c3cdca43c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8f63c51104a1e97754dd6d4d9dcd49307b850aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8f63c51104a1e97754dd6d4d9dcd49307b850aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8f63c51104a1e97754dd6d4d9dcd49307b850aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8f63c51104a1e97754dd6d4d9dcd49307b850aa/comments", "author": {"login": "wschmidt-ibm", "id": 5520937, "node_id": "MDQ6VXNlcjU1MjA5Mzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5520937?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wschmidt-ibm", "html_url": "https://github.com/wschmidt-ibm", "followers_url": "https://api.github.com/users/wschmidt-ibm/followers", "following_url": "https://api.github.com/users/wschmidt-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/wschmidt-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/wschmidt-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wschmidt-ibm/subscriptions", "organizations_url": "https://api.github.com/users/wschmidt-ibm/orgs", "repos_url": "https://api.github.com/users/wschmidt-ibm/repos", "events_url": "https://api.github.com/users/wschmidt-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/wschmidt-ibm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f54a25b84f1db7ab9c8da4f4ddab1346c9d081e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f54a25b84f1db7ab9c8da4f4ddab1346c9d081e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f54a25b84f1db7ab9c8da4f4ddab1346c9d081e0"}], "stats": {"total": 63, "additions": 47, "deletions": 16}, "files": [{"sha": "4d56c473e68b13916f83e5bc8208bfc94d18f28e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8f63c51104a1e97754dd6d4d9dcd49307b850aa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8f63c51104a1e97754dd6d4d9dcd49307b850aa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8f63c51104a1e97754dd6d4d9dcd49307b850aa", "patch": "@@ -1,3 +1,20 @@\n+2018-01-21  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\t    David Edelsohn <dje.gcc@gmail.com>\n+\n+\tPR target/83946\n+\t* config/rs6000/rs6000.md (*call_indirect_nonlocal_sysv<mode>):\n+\tChange \"crset eq\" to \"crset 2\".\n+\t(*call_value_indirect_nonlocal_sysv<mode>): Likewise.\n+\t(*call_indirect_aix<mode>_nospec): Likewise.\n+\t(*call_value_indirect_aix<mode>_nospec): Likewise.\n+\t(*call_indirect_elfv2<mode>_nospec): Likewise.\n+\t(*call_value_indirect_elfv2<mode>_nospec): Likewise.\n+\t(*sibcall_nonlocal_sysv<mode>): Change \"crset eq\" to \"crset 2\";\n+\tchange assembly output from . to $.\n+\t(*sibcall_value_nonlocal_sysv<mode>): Likewise.\n+\t(indirect_jump<mode>_nospec): Change assembly output from . to $.\n+\t(*tablejump<mode>_internal1_nospec): Likewise.\n+\n 2018-01-21  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/80870"}, {"sha": "757ec38084d286010c6c20d6336fecbcbc6243c7", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8f63c51104a1e97754dd6d4d9dcd49307b850aa/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8f63c51104a1e97754dd6d4d9dcd49307b850aa/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=b8f63c51104a1e97754dd6d4d9dcd49307b850aa", "patch": "@@ -10457,7 +10457,7 @@\n       || which_alternative == 1 || which_alternative == 3)\n     return \"b%T0l\";\n   else\n-    return \"crset eq\\;beq%T0l-\";\n+    return \"crset 2\\;beq%T0l-\";\n }\n   [(set_attr \"type\" \"jmpreg,jmpreg,jmpreg,jmpreg\")\n    (set (attr \"length\")\n@@ -10570,7 +10570,7 @@\n       || which_alternative == 1 || which_alternative == 3)\n     return \"b%T1l\";\n   else\n-    return \"crset eq\\;beq%T1l-\";\n+    return \"crset 2\\;beq%T1l-\";\n }\n   [(set_attr \"type\" \"jmpreg,jmpreg,jmpreg,jmpreg\")\n    (set (attr \"length\")\n@@ -10731,7 +10731,7 @@\n    (set (reg:P TOC_REGNUM) (unspec:P [(match_operand:P 3 \"const_int_operand\" \"n,n\")] UNSPEC_TOCSLOT))\n    (clobber (reg:P LR_REGNO))]\n   \"DEFAULT_ABI == ABI_AIX && !rs6000_speculate_indirect_jumps\"\n-  \"crset eq\\;<ptrload> 2,%2\\;beq%T0l-\\;<ptrload> 2,%3(1)\"\n+  \"crset 2\\;<ptrload> 2,%2\\;beq%T0l-\\;<ptrload> 2,%3(1)\"\n   [(set_attr \"type\" \"jmpreg\")\n    (set_attr \"length\" \"16\")])\n \n@@ -10755,7 +10755,7 @@\n    (set (reg:P TOC_REGNUM) (unspec:P [(match_operand:P 4 \"const_int_operand\" \"n,n\")] UNSPEC_TOCSLOT))\n    (clobber (reg:P LR_REGNO))]\n   \"DEFAULT_ABI == ABI_AIX && !rs6000_speculate_indirect_jumps\"\n-  \"crset eq\\;<ptrload> 2,%3\\;beq%T1l-\\;<ptrload> 2,%4(1)\"\n+  \"crset 2\\;<ptrload> 2,%3\\;beq%T1l-\\;<ptrload> 2,%4(1)\"\n   [(set_attr \"type\" \"jmpreg\")\n    (set_attr \"length\" \"16\")])\n \n@@ -10780,7 +10780,7 @@\n    (set (reg:P TOC_REGNUM) (unspec:P [(match_operand:P 2 \"const_int_operand\" \"n,n\")] UNSPEC_TOCSLOT))\n    (clobber (reg:P LR_REGNO))]\n   \"DEFAULT_ABI == ABI_ELFv2 && !rs6000_speculate_indirect_jumps\"\n-  \"crset eq\\;beq%T0l-\\;<ptrload> 2,%2(1)\"\n+  \"crset 2\\;beq%T0l-\\;<ptrload> 2,%2(1)\"\n   [(set_attr \"type\" \"jmpreg\")\n    (set_attr \"length\" \"12\")])\n \n@@ -10803,7 +10803,7 @@\n    (set (reg:P TOC_REGNUM) (unspec:P [(match_operand:P 3 \"const_int_operand\" \"n,n\")] UNSPEC_TOCSLOT))\n    (clobber (reg:P LR_REGNO))]\n   \"DEFAULT_ABI == ABI_ELFv2 && !rs6000_speculate_indirect_jumps\"\n-  \"crset eq\\;beq%T1l-\\;<ptrload> 2,%3(1)\"\n+  \"crset 2\\;beq%T1l-\\;<ptrload> 2,%3(1)\"\n   [(set_attr \"type\" \"jmpreg\")\n    (set_attr \"length\" \"12\")])\n \n@@ -10987,7 +10987,7 @@\n \treturn \\\"b%T0\\\";\n       else\n \t/* Can use CR0 since it is volatile across sibcalls.  */\n-\treturn \\\"crset eq\\;beq%T0-\\;b .\\\";\n+\treturn \\\"crset 2\\;beq%T0-\\;b $\\\";\n     }\n   else if (DEFAULT_ABI == ABI_V4 && flag_pic)\n     {\n@@ -11044,7 +11044,7 @@\n \treturn \\\"b%T1\\\";\n       else\n \t/* Can use CR0 since it is volatile across sibcalls.  */\n-\treturn \\\"crset eq\\;beq%T1-\\;b .\\\";\n+\treturn \\\"crset 2\\;beq%T1-\\;b $\\\";\n     }\n   else if (DEFAULT_ABI == ABI_V4 && flag_pic)\n     {\n@@ -12566,7 +12566,7 @@\n   [(set (pc) (match_operand:P 0 \"register_operand\" \"c,*l\"))\n    (clobber (match_operand:CC 1 \"cc_reg_operand\" \"=y,y\"))]\n   \"!rs6000_speculate_indirect_jumps\"\n-  \"crset %E1\\;beq%T0- %1\\;b .\"\n+  \"crset %E1\\;beq%T0- %1\\;b $\"\n   [(set_attr \"type\" \"jmpreg\")\n    (set_attr \"length\" \"12\")])\n \n@@ -12672,7 +12672,7 @@\n    (use (label_ref (match_operand 1)))\n    (clobber (match_operand:CC 2 \"cc_reg_operand\" \"=y,y\"))]\n   \"!rs6000_speculate_indirect_jumps\"\n-  \"crset %E2\\;beq%T0- %2\\;b .\"\n+  \"crset %E2\\;beq%T0- %2\\;b $\"\n   [(set_attr \"type\" \"jmpreg\")\n    (set_attr \"length\" \"12\")])\n "}, {"sha": "7bde92d90e969ca921bea4d23e307e24502a063e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8f63c51104a1e97754dd6d4d9dcd49307b850aa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8f63c51104a1e97754dd6d4d9dcd49307b850aa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b8f63c51104a1e97754dd6d4d9dcd49307b850aa", "patch": "@@ -1,3 +1,17 @@\n+2018-01-21  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n+\t    David Edelsohn <dje.gcc@gmail.com>\n+\n+\tPR target/83946\n+\t* gcc.target/powerpc/safe-indirect-jump-1.c: Change expected\n+\tassembly output from \"crset eq\" to \"crset 2\".\n+\t* gcc.target/powerpc/safe-indirect-jump-2.c: Change expected\n+\tassembly output from . to $.\n+\t* gcc.target/powerpc/safe-indirect-jump-3.c: Likewise.\n+\t* gcc.target/powerpc/safe-indirect-jump-1.c: Change expected\n+\tassembly output from \"crset eq\" to \"crset 2\".\n+\t* gcc.target/powerpc/safe-indirect-jump-8.c: Change expected\n+\tassembly output from \"crset eq\" to \"crset 2\", and from . to $.\n+\n 2018-01-20  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/83900"}, {"sha": "99cfab29e6eda941b08ee30486dd312bed83ed3d", "filename": "gcc/testsuite/gcc.target/powerpc/safe-indirect-jump-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8f63c51104a1e97754dd6d4d9dcd49307b850aa/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsafe-indirect-jump-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8f63c51104a1e97754dd6d4d9dcd49307b850aa/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsafe-indirect-jump-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsafe-indirect-jump-1.c?ref=b8f63c51104a1e97754dd6d4d9dcd49307b850aa", "patch": "@@ -10,5 +10,5 @@ int bar ()\n   return (*f) ();\n }\n \n-/* { dg-final { scan-assembler \"crset eq\" } } */\n+/* { dg-final { scan-assembler \"crset 2\" } } */\n /* { dg-final { scan-assembler \"beqctrl-\" } } */"}, {"sha": "1c23a5d9addfc4bf3d20764791a0469dea31d203", "filename": "gcc/testsuite/gcc.target/powerpc/safe-indirect-jump-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8f63c51104a1e97754dd6d4d9dcd49307b850aa/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsafe-indirect-jump-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8f63c51104a1e97754dd6d4d9dcd49307b850aa/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsafe-indirect-jump-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsafe-indirect-jump-2.c?ref=b8f63c51104a1e97754dd6d4d9dcd49307b850aa", "patch": "@@ -30,4 +30,4 @@ int foo (int x)\n \n /* { dg-final { scan-assembler \"crset 30\" } } */\n /* { dg-final { scan-assembler \"beqctr- 7\" } } */\n-/* { dg-final { scan-assembler \"b .\" } } */\n+/* { dg-final { scan-assembler {b \\$} } } */"}, {"sha": "d0eccc4f262fa3f6931c0e4d34a2c33d23d7023a", "filename": "gcc/testsuite/gcc.target/powerpc/safe-indirect-jump-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8f63c51104a1e97754dd6d4d9dcd49307b850aa/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsafe-indirect-jump-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8f63c51104a1e97754dd6d4d9dcd49307b850aa/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsafe-indirect-jump-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsafe-indirect-jump-3.c?ref=b8f63c51104a1e97754dd6d4d9dcd49307b850aa", "patch": "@@ -49,4 +49,4 @@ int foo (int x)\n \n /* { dg-final { scan-assembler \"crset 30\" } } */\n /* { dg-final { scan-assembler \"beqctr- 7\" } } */\n-/* { dg-final { scan-assembler \"b .\" } } */\n+/* { dg-final { scan-assembler {b \\$} } } */"}, {"sha": "b1bdcca852400266ef64c3a2f53367e966004a31", "filename": "gcc/testsuite/gcc.target/powerpc/safe-indirect-jump-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8f63c51104a1e97754dd6d4d9dcd49307b850aa/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsafe-indirect-jump-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8f63c51104a1e97754dd6d4d9dcd49307b850aa/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsafe-indirect-jump-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsafe-indirect-jump-7.c?ref=b8f63c51104a1e97754dd6d4d9dcd49307b850aa", "patch": "@@ -10,5 +10,5 @@ int bar ()\n   return (*f) () * 53;\n }\n \n-/* { dg-final { scan-assembler \"crset eq\" } } */\n+/* { dg-final { scan-assembler \"crset 2\" } } */\n /* { dg-final { scan-assembler \"beqctrl-\" } } */"}, {"sha": "27642cc4450a9ef580f8f05f9712cc394f024a60", "filename": "gcc/testsuite/gcc.target/powerpc/safe-indirect-jump-8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8f63c51104a1e97754dd6d4d9dcd49307b850aa/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsafe-indirect-jump-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8f63c51104a1e97754dd6d4d9dcd49307b850aa/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsafe-indirect-jump-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fsafe-indirect-jump-8.c?ref=b8f63c51104a1e97754dd6d4d9dcd49307b850aa", "patch": "@@ -10,6 +10,6 @@ int bar ()\n   return (*f) ();\n }\n \n-/* { dg-final { scan-assembler \"crset eq\" } } */\n+/* { dg-final { scan-assembler \"crset 2\" } } */\n /* { dg-final { scan-assembler \"beqctr-\" } } */\n-/* { dg-final { scan-assembler \"b .\" } } */\n+/* { dg-final { scan-assembler {b \\$} } } */"}]}