{"sha": "0f94c029e96443582656f791f4f29fb353f75897", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGY5NGMwMjllOTY0NDM1ODI2NTZmNzkxZjRmMjlmYjM1M2Y3NTg5Nw==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@albatross.co.nz", "date": "2000-09-13T06:36:25Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "2000-09-13T06:36:25Z"}, "message": "String.java (CASE_INSENSITIVE_ORDER): New static field.\n\n2000-09-13  Bryce McKinlay  <bryce@albatross.co.nz>\n\n\t* java/lang/String.java (CASE_INSENSITIVE_ORDER): New static field.\n\tInitialize with anonymous class.\n\t(compareToIgnoreCase): New method.\n\n\t* java/lang/ThreadGroup.java (had_uncaught_exception): New field.\n\t(uncaughtException): Set had_uncaught_exception.\n\t* prims.cc (JvRunMain): Check value of had_uncaught_exception and\n\texit with error status if set.\n\t(_Jv_RunMain): Ditto.\n\nFrom-SVN: r36385", "tree": {"sha": "d1ce9437fa18890703cab6233079cd8bcce1b50d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1ce9437fa18890703cab6233079cd8bcce1b50d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f94c029e96443582656f791f4f29fb353f75897", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f94c029e96443582656f791f4f29fb353f75897", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f94c029e96443582656f791f4f29fb353f75897", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f94c029e96443582656f791f4f29fb353f75897/comments", "author": null, "committer": null, "parents": [{"sha": "bb07060a6aa5000a59e7d4f2a7d37b929980ec2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb07060a6aa5000a59e7d4f2a7d37b929980ec2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb07060a6aa5000a59e7d4f2a7d37b929980ec2d"}], "stats": {"total": 47, "additions": 42, "deletions": 5}, "files": [{"sha": "fb5bdd8302e299a60e318c0ac1143d2d7ad5d2c7", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f94c029e96443582656f791f4f29fb353f75897/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f94c029e96443582656f791f4f29fb353f75897/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=0f94c029e96443582656f791f4f29fb353f75897", "patch": "@@ -1,3 +1,15 @@\n+2000-09-13  Bryce McKinlay  <bryce@albatross.co.nz>\n+\n+\t* java/lang/String.java (CASE_INSENSITIVE_ORDER): New static field.\n+\tInitialize with anonymous class.\n+\t(compareToIgnoreCase): New method.\n+\t\n+\t* java/lang/ThreadGroup.java (had_uncaught_exception): New field.\n+\t(uncaughtException): Set had_uncaught_exception.\n+\t* prims.cc (JvRunMain): Check value of had_uncaught_exception and\n+\texit with error status if set.\n+\t(_Jv_RunMain): Ditto.\n+\n 2000-09-12  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* configure: Rebuilt with new ../libtool.m4."}, {"sha": "bc21afd0404b24f1f2ccac3a59f0ce4615c4c90d", "filename": "libjava/java/lang/String.java", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f94c029e96443582656f791f4f29fb353f75897/libjava%2Fjava%2Flang%2FString.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f94c029e96443582656f791f4f29fb353f75897/libjava%2Fjava%2Flang%2FString.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FString.java?ref=0f94c029e96443582656f791f4f29fb353f75897", "patch": "@@ -10,14 +10,15 @@\n import java.io.UnsupportedEncodingException;\n import java.io.Serializable;\n import java.lang.Comparable;\n+import java.util.Comparator;\n \n /**\n  * @author Per Bothner <bothner@cygnus.com>\n  * @date September 4, 1998.  \n  */\n /* Written using \"Java Class Libraries\", 2nd edition, plus online\n  * API docs for JDK 1.2 beta from http://www.javasoft.com.\n- * Status:  Complete to 1.1, but see FIXMEs. Also see testsuite results.\n+ * Status:  Complete to 1.3.\n  */\n \n public final class String implements Serializable, Comparable\n@@ -30,6 +31,14 @@ public final class String implements Serializable, Comparable\n   // but it will avoid showing up as a discrepancy when comparing SUIDs.\n   private static final long serialVersionUID = -6849794470754667710L;\n \n+  static Comparator CASE_INSENSITIVE_ORDER = new Comparator()\n+    {\n+      public int compare (Object o1, Object o2)\n+      {\n+        return ((String) o1).compareToIgnoreCase ((String) o2);\n+      }\n+    };\n+\n   public String ()\n   {\n     init();\n@@ -182,6 +191,12 @@ public int compareTo (Object obj)\n   {\n     return compareTo ((String)obj);\n   }\n+  \n+  public int compareToIgnoreCase (String str)\n+  {\n+    return this.toUpperCase().toLowerCase().compareTo(\n+     str.toUpperCase().toLowerCase());\n+  }  \n \n   public native boolean regionMatches (int toffset,\n \t\t\t\t       String other, int ooffset, int len);"}, {"sha": "52c69525098b3d779b3d592d6ce6861e5a9441e2", "filename": "libjava/java/lang/ThreadGroup.java", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f94c029e96443582656f791f4f29fb353f75897/libjava%2Fjava%2Flang%2FThreadGroup.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f94c029e96443582656f791f4f29fb353f75897/libjava%2Fjava%2Flang%2FThreadGroup.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FThreadGroup.java?ref=0f94c029e96443582656f791f4f29fb353f75897", "patch": "@@ -53,6 +53,9 @@\n {\n   /* The Initial, top-level ThreadGroup. */\n   static ThreadGroup root = new ThreadGroup();\n+  /* This flag is set if an uncaught exception occurs. The runtime should \n+  check this and exit with an error status if it is set. */\n+  static boolean had_uncaught_exception = false;\n \n   private ThreadGroup parent;\n   private String name;\n@@ -496,7 +499,10 @@ public void uncaughtException(Thread thread, Throwable t)\n     if (parent != null)\n       parent.uncaughtException (thread, t);\n     else if (! (t instanceof ThreadDeath))\n-      t.printStackTrace();\n+      {\n+\tt.printStackTrace();\n+\thad_uncaught_exception = true;\n+      }\n   }\n \n   /** Tell the VM whether it may suspend Threads in low memory"}, {"sha": "92e449645df6408685275064fa18672df09a99b5", "filename": "libjava/prims.cc", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f94c029e96443582656f791f4f29fb353f75897/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f94c029e96443582656f791f4f29fb353f75897/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=0f94c029e96443582656f791f4f29fb353f75897", "patch": "@@ -888,7 +888,9 @@ JvRunMain (jclass klass, int argc, const char **argv)\n   main_thread->start();\n   _Jv_ThreadWait ();\n \n-  java::lang::Runtime::getRuntime ()->exit (0);\n+  int status = (int) java::lang::ThreadGroup::had_uncaught_exception;\n+    \n+  java::lang::Runtime::getRuntime ()->exit (status);\n }\n \n void\n@@ -939,8 +941,10 @@ _Jv_RunMain (const char *name, int argc, const char **argv, bool is_jar)\n       main_thread->start();\n       _Jv_ThreadWait ();\n     }\n-  \n-  java::lang::Runtime::getRuntime ()->exit (0);\n+\n+  int status = (int) java::lang::ThreadGroup::had_uncaught_exception;\n+\n+  java::lang::Runtime::getRuntime ()->exit (status);\n }\n \n \f"}]}