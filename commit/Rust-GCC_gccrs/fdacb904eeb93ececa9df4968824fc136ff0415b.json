{"sha": "fdacb904eeb93ececa9df4968824fc136ff0415b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRhY2I5MDRlZWI5M2VjZWNhOWRmNDk2ODgyNGZjMTM2ZmYwNDE1Yg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2003-07-31T17:50:54Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2003-07-31T17:50:54Z"}, "message": "cgraph.c (create_edge): Fix typo.\n\n\n\t* cgraph.c (create_edge): Fix typo.\n\t* i386.c (pic_symbolic_operand): Reorder tests.\n\nFrom-SVN: r70006", "tree": {"sha": "b61c3e5e66cda66fc2c696762210f86cbd079570", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b61c3e5e66cda66fc2c696762210f86cbd079570"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdacb904eeb93ececa9df4968824fc136ff0415b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdacb904eeb93ececa9df4968824fc136ff0415b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdacb904eeb93ececa9df4968824fc136ff0415b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdacb904eeb93ececa9df4968824fc136ff0415b/comments", "author": null, "committer": null, "parents": [{"sha": "46b6ccc8fc43257f36925ccc16dac1ef4a88b5f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46b6ccc8fc43257f36925ccc16dac1ef4a88b5f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46b6ccc8fc43257f36925ccc16dac1ef4a88b5f8"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "923f25ea6699cbb4a0a5fb17ba18eb4bb9433033", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdacb904eeb93ececa9df4968824fc136ff0415b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdacb904eeb93ececa9df4968824fc136ff0415b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fdacb904eeb93ececa9df4968824fc136ff0415b", "patch": "@@ -1,3 +1,8 @@\n+Thu Jul 31 19:49:53 CEST 2003  Jan Hubicka  <jh@suse.cz>\n+\n+\t* cgraph.c (create_edge): Fix typo.\n+\t* i386.c (pic_symbolic_operand): Reorder tests.\n+\n 2003-07-31  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* doc/gcov.texi (Invoking Gcov): Describe output name mangling"}, {"sha": "76cd63ac661968adf174abecde1e85629cfdb1b8", "filename": "gcc/cgraph.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdacb904eeb93ececa9df4968824fc136ff0415b/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdacb904eeb93ececa9df4968824fc136ff0415b/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=fdacb904eeb93ececa9df4968824fc136ff0415b", "patch": "@@ -162,7 +162,7 @@ create_edge (struct cgraph_node *caller, struct cgraph_node *callee)\n      as we probably ought to, so we must preserve inline_call flags to\n      be the same in all copies of the same edge.  */\n   if (cgraph_global_info_ready)\n-    for (edge2 = caller->callees; edge2; edge2 = edge2->next_caller)\n+    for (edge2 = caller->callees; edge2; edge2 = edge2->next_callee)\n       if (edge2->callee == callee)\n \t{\n \t  edge->inline_call = edge2->inline_call;"}, {"sha": "22c495f443b388fd121d9bb6bbf1fbb3ce57ae6d", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdacb904eeb93ececa9df4968824fc136ff0415b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdacb904eeb93ececa9df4968824fc136ff0415b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=fdacb904eeb93ececa9df4968824fc136ff0415b", "patch": "@@ -3414,8 +3414,8 @@ pic_symbolic_operand (register rtx op, enum machine_mode mode ATTRIBUTE_UNUSED)\n \t  && XINT (op, 1) == UNSPEC_GOTPCREL)\n \treturn 1;\n       if (GET_CODE (op) == PLUS\n-\t  && XINT (XEXP (op, 0), 1) == UNSPEC_GOTPCREL\n-\t  && GET_CODE (XEXP (op, 0)) == UNSPEC)\n+\t  && GET_CODE (XEXP (op, 0)) == UNSPEC\n+\t  && XINT (XEXP (op, 0), 1) == UNSPEC_GOTPCREL)\n \treturn 1;\n     }\n   else"}]}