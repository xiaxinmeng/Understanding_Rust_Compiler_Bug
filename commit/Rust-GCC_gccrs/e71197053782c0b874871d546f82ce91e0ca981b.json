{"sha": "e71197053782c0b874871d546f82ce91e0ca981b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTcxMTk3MDUzNzgyYzBiODc0ODcxZDU0NmY4MmNlOTFlMGNhOTgxYg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2008-08-29T21:58:54Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2008-08-29T21:58:54Z"}, "message": "tree-inline.c (insert_init_stmt): Insert sequence even when not in SSA form.\n\n\n\t* tree-inline.c (insert_init_stmt): Insert sequence even when\n\tnot in SSA form.\n\nFrom-SVN: r139790", "tree": {"sha": "fbaff562b4178482516bbd88711b388890ca9831", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fbaff562b4178482516bbd88711b388890ca9831"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e71197053782c0b874871d546f82ce91e0ca981b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e71197053782c0b874871d546f82ce91e0ca981b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e71197053782c0b874871d546f82ce91e0ca981b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e71197053782c0b874871d546f82ce91e0ca981b/comments", "author": null, "committer": null, "parents": [{"sha": "6528281d6b122edf215b53a224ec47b4c4a79f22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6528281d6b122edf215b53a224ec47b4c4a79f22", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6528281d6b122edf215b53a224ec47b4c4a79f22"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "e770abe3a9455d72dbe312c11e06bcf43dbd1a6a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e71197053782c0b874871d546f82ce91e0ca981b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e71197053782c0b874871d546f82ce91e0ca981b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e71197053782c0b874871d546f82ce91e0ca981b", "patch": "@@ -1,3 +1,8 @@\n+2008-08-29  Jan Hubicka  <jh@suse.cz>\n+\n+\t* tree-inline.c (insert_init_stmt): Insert sequence even when\n+\tnot in SSA form.\n+\n 2008-08-29  Jeff Law  <law@redhat.com>\n \n \t* mn10300.c (mn10300_secondary_reload_class): We need secondary"}, {"sha": "0f59d164925d9dd3e19be71ed0fd2c0ba212bf9a", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e71197053782c0b874871d546f82ce91e0ca981b/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e71197053782c0b874871d546f82ce91e0ca981b/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=e71197053782c0b874871d546f82ce91e0ca981b", "patch": "@@ -1868,14 +1868,14 @@ insert_init_stmt (basic_block bb, gimple init_stmt)\n   i = gsi_start (seq);\n   gimple_regimplify_operands (init_stmt, &i);\n \n-  if (gimple_in_ssa_p (cfun)\n-      && init_stmt\n+  if (init_stmt\n       && !gimple_seq_empty_p (seq))\n     {\n       /* The replacement can expose previously unreferenced\n \t variables.  */\n-      for (i = gsi_start (seq); !gsi_end_p (i); gsi_next (&i))\n-\tfind_new_referenced_vars (gsi_stmt (i));\n+      if (gimple_in_ssa_p (cfun))\n+        for (i = gsi_start (seq); !gsi_end_p (i); gsi_next (&i))\n+\t  find_new_referenced_vars (gsi_stmt (i));\n \n       /* Insert the gimplified sequence needed for INIT_STMT\n \t after SI.  INIT_STMT will be inserted after SEQ.  */"}]}