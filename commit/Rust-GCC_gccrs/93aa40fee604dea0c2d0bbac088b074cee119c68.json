{"sha": "93aa40fee604dea0c2d0bbac088b074cee119c68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTNhYTQwZmVlNjA0ZGVhMGMyZDBiYmFjMDg4YjA3NGNlZTExOWM2OA==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2017-06-16T21:04:41Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2017-06-16T21:04:41Z"}, "message": "[arm] Rewrite t-aprofile using new selector methodology\n\n\nNow that the default FPU is 'auto' we can finally rewrite (and\nsimplify) the rules for mapping compiler options to multilibs.  We\nno-longer need to know the specific CPU, since the driver will\nconstruct a suitable -march flag for us; this greatly simplifies the\noverall logic.  This patch rewrites the library list for A-profile\ncores.  We use various Make extention rules to simplify the logic even\nfurther.\n\nA couple of minor tweaks to the configure script and to the main\ndriver ensures that we always know the setting of -mfloat-abi and\n-marm/-mthumb.  Again, this helps simplify the logic further.  The\nchange to arm_target_thumb_only relies on the fact that this routine\nis only called if neither -marm nor -mthumb has been previously\nselected or specified by the user.\n\nA new testsuite module is added to check the libraries generated.  The\nnew tests are only run if the compiler is configured with the relevant\nmultilibs enabled.\n\ngcc:\n\t* config.gcc: (arm*-*-*): When building a-profile libraries, force\n\tthe driver to pass through the default setting of -mfloat-abi.\n\t* common/config/arm/arm-common.c (arm_target_thumb_only): Return -marm\n\trather than NULL.\n\t* config/arm/t-multilib (MULTILIB_REUSE): Initialize to empty.\n\t(all_feat_combs): New rule.\n\t(MULTILIB_OPTIONS): Use explicit ARM and Thumb directories.  Rework\n\tdefault libraries.\n\t* config/arm/t-aprofile: Rewrite.\n\ngcc/testsuite:\n\t* gcc.target/arm/multilibs.exp: New file.\n\nFrom-SVN: r249296", "tree": {"sha": "e587e11c93cbdf7f1a9e9cf57ae6da391f9b9465", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e587e11c93cbdf7f1a9e9cf57ae6da391f9b9465"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/93aa40fee604dea0c2d0bbac088b074cee119c68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93aa40fee604dea0c2d0bbac088b074cee119c68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/93aa40fee604dea0c2d0bbac088b074cee119c68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/93aa40fee604dea0c2d0bbac088b074cee119c68/comments", "author": null, "committer": null, "parents": [{"sha": "11389610242c157e43dd5c1f469970e514efe60a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11389610242c157e43dd5c1f469970e514efe60a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11389610242c157e43dd5c1f469970e514efe60a"}], "stats": {"total": 664, "additions": 514, "deletions": 150}, "files": [{"sha": "35ded57c1cf13829f42152333efa15d09f3fe450", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93aa40fee604dea0c2d0bbac088b074cee119c68/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93aa40fee604dea0c2d0bbac088b074cee119c68/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=93aa40fee604dea0c2d0bbac088b074cee119c68", "patch": "@@ -1,3 +1,15 @@\n+2017-06-16  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* config.gcc: (arm*-*-*): When building a-profile libraries, force\n+\tthe driver to pass through the default setting of -mfloat-abi.\n+\t* common/config/arm/arm-common.c (arm_target_thumb_only): Return -marm\n+\trather than NULL.\n+\t* config/arm/t-multilib (MULTILIB_REUSE): Initialize to empty.\n+\t(all_feat_combs): New rule.\n+\t(MULTILIB_OPTIONS): Use explicit ARM and Thumb directories.  Rework\n+\tdefault libraries.\n+\t* config/arm/t-aprofile: Rewrite.\n+\n 2017-06-16  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* config/arm/arm.h (FPUTYPE_AUTO): Define."}, {"sha": "d06c39bd66749bf59957259bce2814744ab6e8ba", "filename": "gcc/common/config/arm/arm-common.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93aa40fee604dea0c2d0bbac088b074cee119c68/gcc%2Fcommon%2Fconfig%2Farm%2Farm-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93aa40fee604dea0c2d0bbac088b074cee119c68/gcc%2Fcommon%2Fconfig%2Farm%2Farm-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Farm%2Farm-common.c?ref=93aa40fee604dea0c2d0bbac088b074cee119c68", "patch": "@@ -215,7 +215,9 @@ arm_target_thumb_only (int argc, const char **argv)\n \treturn \"-mthumb\";\n     }\n \n-  return NULL;\n+  /* Compiler hasn't been configured with a default, and the CPU\n+     doesn't require Thumb, so default to ARM.  */\n+  return \"-marm\";\n }\n \n /* List the permitted CPU option names.  If TARGET is a near miss for an"}, {"sha": "94a281d2fb958ae1cabf57a6c0705e0f6d4e9b4d", "filename": "gcc/config.gcc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93aa40fee604dea0c2d0bbac088b074cee119c68/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93aa40fee604dea0c2d0bbac088b074cee119c68/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=93aa40fee604dea0c2d0bbac088b074cee119c68", "patch": "@@ -3856,7 +3856,9 @@ case \"${target}\" in\n \t\t\t\t    echo \"Error: You cannot use any of --with-arch/cpu/fpu/float/mode with --with-multilib-list=${with_multilib_list}\" 1>&2\n \t\t\t\t    exit 1\n \t\t\t\tfi\n-\n+\t\t\t\t# But pass the default value for float-abi\n+\t\t\t\t# through to the multilib selector\n+\t\t\t\twith_float=\"soft\"\n \t\t\t\ttmake_file=\"${tmake_file} ${tmake_profile_file}\"\n \t\t\t\tTM_MULTILIB_CONFIG=\"$with_multilib_list\"\n \t\t\tfi"}, {"sha": "2e3d4c81b2ca589b12da72f5f1de6fe21d39c21e", "filename": "gcc/config/arm/t-aprofile", "status": "modified", "additions": 82, "deletions": 129, "changes": 211, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93aa40fee604dea0c2d0bbac088b074cee119c68/gcc%2Fconfig%2Farm%2Ft-aprofile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93aa40fee604dea0c2d0bbac088b074cee119c68/gcc%2Fconfig%2Farm%2Ft-aprofile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-aprofile?ref=93aa40fee604dea0c2d0bbac088b074cee119c68", "patch": "@@ -24,145 +24,98 @@\n # have their default values during the configure step.  We enforce\n # this during the top-level configury.\n \n+# Variables used later in this file.\n+\n+v7_a_nosimd_variants\t:= +fp +vfpv3 +vfpv3-d16-fp16 +vfpv3-fp16 +vfpv4-d16 +vfpv4\n+v7_a_simd_variants\t:= +simd +neon-fp16 +neon-vfpv4\n+v7ve_nosimd_variants\t:= +vfpv3-d16 +vfpv3 +vfpv3-d16-fp16 +vfpv3-fp16 +fp +vfpv4\n+v7ve_vfpv3_simd_variants := +neon +neon-fp16\n+v7ve_vfpv4_simd_variants := +simd\n+v8_a_nosimd_variants\t:= +crc\n+v8_a_simd_variants\t:= $(call all_feat_combs, simd crypto)\n+v8_1_a_simd_variants\t:= $(call all_feat_combs, simd crypto)\n+v8_2_a_simd_variants\t:= $(call all_feat_combs, simd fp16 crypto)\n+\n+\n # Arch and FPU variants to build libraries with\n \n-MULTI_ARCH_OPTS_A       = march=armv7-a/march=armv7ve/march=armv8-a\n-MULTI_ARCH_DIRS_A       = v7-a v7ve v8-a\n+MULTI_ARCH_OPTS_A       = march=armv7-a/march=armv7-a+fp/march=armv7-a+simd/march=armv7ve+simd/march=armv8-a/march=armv8-a+simd\n+MULTI_ARCH_DIRS_A       = v7-a v7-a+fp v7-a+simd v7ve+simd v8-a v8-a+simd\n \n-MULTI_FPU_OPTS_A        = mfpu=vfpv3-d16/mfpu=neon/mfpu=vfpv4-d16/mfpu=neon-vfpv4/mfpu=neon-fp-armv8\n-MULTI_FPU_DIRS_A        = fpv3 simdv1 fpv4 simdvfpv4 simdv8\n+# ARMv7-A - build nofp, fp-d16 and SIMD variants\n \n+MULTILIB_REQUIRED\t+= mthumb/march=armv7-a/mfloat-abi=soft\n+MULTILIB_REQUIRED\t+= mthumb/march=armv7-a+fp/mfloat-abi=hard\n+MULTILIB_REQUIRED\t+= mthumb/march=armv7-a+fp/mfloat-abi=softfp\n+MULTILIB_REQUIRED\t+= mthumb/march=armv7-a+simd/mfloat-abi=hard\n+MULTILIB_REQUIRED\t+= mthumb/march=armv7-a+simd/mfloat-abi=softfp\n \n-# Option combinations to build library with\n+# ARMv7VE - only build a SIMD (+VFPv4) variant.\n+MULTILIB_REQUIRED\t+= mthumb/march=armv7ve+simd/mfloat-abi=hard\n+MULTILIB_REQUIRED\t+= mthumb/march=armv7ve+simd/mfloat-abi=softfp\n \n-# Default CPU/Arch (ARM is implicitly included because it uses the default\n-# multilib)\n-MULTILIB_REQUIRED      += mthumb\n+# ARMv8-A - build nofp and SIMD variants.\n+MULTILIB_REQUIRED\t+= mthumb/march=armv8-a/mfloat-abi=soft\n+MULTILIB_REQUIRED\t+= mthumb/march=armv8-a+simd/mfloat-abi=hard\n+MULTILIB_REQUIRED\t+= mthumb/march=armv8-a+simd/mfloat-abi=softfp\n \n-# ARMv7-A\n-MULTILIB_REQUIRED      += *march=armv7-a\n-MULTILIB_REQUIRED      += *march=armv7-a/mfpu=vfpv3-d16/mfloat-abi=*\n-MULTILIB_REQUIRED      += *march=armv7-a/mfpu=neon/mfloat-abi=*\n+# Matches\n \n-# ARMv7VE\n-MULTILIB_REQUIRED      += *march=armv7ve\n-MULTILIB_REQUIRED      += *march=armv7ve/mfpu=vfpv4-d16/mfloat-abi=*\n-MULTILIB_REQUIRED      += *march=armv7ve/mfpu=neon-vfpv4/mfloat-abi=*\n+# Arch Matches\n+# Map all v7-a FP variants to vfpv3-d16 (+fp)\n+MULTILIB_MATCHES\t+= $(foreach ARCH, $(filter-out +fp, $(v7_a_nosimd_variants)), \\\n+\t\t\t     march?armv7-a+fp=march?armv7-a$(ARCH))\n \n-# ARMv8-A\n-MULTILIB_REQUIRED      += *march=armv8-a\n-MULTILIB_REQUIRED      += *march=armv8-a/mfpu=neon-fp-armv8/mfloat-abi=*\n+# Map all v7-a SIMD variants to neon-vfpv3 (+simd)\n+MULTILIB_MATCHES\t+= $(foreach ARCH, $(filter-out +simd, $(v7_a_simd_variants)), \\\n+\t\t\t     march?armv7-a+simd=march?armv7-a$(ARCH))\n \n+# Neither FP nor SIMD: map v7ve to v7-a\n+MULTILIB_MATCHES\t+= march?armv7-a=march?armv7ve\n \n-# Matches\n+# ARMv7ve FP-only variants: map down to v7-a+fp\n+MULTILIB_MATCHES\t+= $(foreach ARCH, $(v7ve_nosimd_variants), \\\n+\t\t\t     march?armv7-a+fp=march?armv7ve$(ARCH))\n \n-# CPU Matches\n-MULTILIB_MATCHES       += march?armv7-a=mcpu?marvell-pj4\n-MULTILIB_MATCHES       += march?armv7-a=mcpu?generic-armv7-a\n-MULTILIB_MATCHES       += march?armv7-a=mcpu?cortex-a8\n-MULTILIB_MATCHES       += march?armv7-a=mcpu?cortex-a9\n-MULTILIB_MATCHES       += march?armv7-a=mcpu?cortex-a5\n-MULTILIB_MATCHES       += march?armv7ve=mcpu?cortex-a7\n-MULTILIB_MATCHES       += march?armv7ve=mcpu?cortex-a15\n-MULTILIB_MATCHES       += march?armv7ve=mcpu?cortex-a12\n-MULTILIB_MATCHES       += march?armv7ve=mcpu?cortex-a17\n-MULTILIB_MATCHES       += march?armv7ve=mcpu?cortex-a15.cortex-a7\n-MULTILIB_MATCHES       += march?armv7ve=mcpu?cortex-a17.cortex-a7\n-MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a32\n-MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a35\n-MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a53\n-MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a57\n-MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a57.cortex-a53\n-MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a72\n-MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a72.cortex-a53\n-MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a73\n-MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a73.cortex-a35\n-MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a73.cortex-a53\n-MULTILIB_MATCHES       += march?armv8-a=mcpu?exynos-m1\n-MULTILIB_MATCHES       += march?armv8-a=mcpu?xgene1\n+# ARMv7ve with SIMD, but SIMD is less capable than the default - map down to v7-a+simd\n+MULTILIB_MATCHES\t+= $(foreach ARCH, $(v7ve_vfpv3_simd_variants), \\\n+\t\t\t     march?armv7-a+simd=march?armv7ve$(ARCH))\n \n-# Arch Matches\n-MULTILIB_MATCHES       += march?armv8-a=march?armv8-a+crc\n-MULTILIB_MATCHES       += march?armv8-a=march?armv8.1-a\n-MULTILIB_MATCHES       += march?armv8-a=march?armv8.1-a+crc\n-MULTILIB_MATCHES       += march?armv8-a=march?armv8.2-a\n-MULTILIB_MATCHES       += march?armv8-a=march?armv8.2-a+fp16\n-\n-# FPU matches\n-MULTILIB_MATCHES       += mfpu?vfpv3-d16=mfpu?vfpv3\n-MULTILIB_MATCHES       += mfpu?vfpv3-d16=mfpu?vfpv3-fp16\n-MULTILIB_MATCHES       += mfpu?vfpv3-d16=mfpu?vfpv3-d16-fp16\n-MULTILIB_MATCHES       += mfpu?neon=mfpu?neon-fp16\n-MULTILIB_MATCHES       += mfpu?vfpv4-d16=mfpu?vfpv4\n-MULTILIB_MATCHES       += mfpu?vfpv4-d16=mfpu?fpv5-d16\n-MULTILIB_MATCHES       += mfpu?vfpv4-d16=mfpu?fp-armv8\n-MULTILIB_MATCHES       += mfpu?neon-fp-armv8=mfpu?crypto-neon-fp-armv8\n-MULTILIB_MATCHES       += mfpu?vfp=mfpu?vfpv2\n-MULTILIB_MATCHES       += mfpu?neon=mfpu?neon-vfpv3\n-\n-\n-# Map all requests for vfpv3 with a later CPU to vfpv3-d16 v7-a.\n-# So if new CPUs are added above at the newer architecture levels,\n-# do something to map them below here.\n-# We take the approach of mapping down to v7-a regardless of what\n-# the fp option is if the integer architecture brings things down.\n-# This applies to any similar combination at the v7ve and v8-a arch\n-# levels.\n-\n-MULTILIB_REUSE\t      += march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.hard=march.armv7ve/mfpu.vfpv3-d16/mfloat-abi.hard\n-MULTILIB_REUSE\t      += march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.softfp=march.armv7ve/mfpu.vfpv3-d16/mfloat-abi.softfp\n-MULTILIB_REUSE\t      += march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.hard=march.armv8-a/mfpu.vfpv3-d16/mfloat-abi.hard\n-MULTILIB_REUSE\t      += march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.softfp=march.armv8-a/mfpu.vfpv3-d16/mfloat-abi.softfp\n-MULTILIB_REUSE\t      += march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.hard=march.armv7-a/mfpu.vfpv4-d16/mfloat-abi.hard\n-MULTILIB_REUSE\t      += march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.softfp=march.armv7-a/mfpu.vfpv4-d16/mfloat-abi.softfp\n-\n-\n-MULTILIB_REUSE\t      += march.armv7-a/mfpu.neon/mfloat-abi.hard=march.armv7ve/mfpu.neon/mfloat-abi.hard\n-MULTILIB_REUSE\t      += march.armv7-a/mfpu.neon/mfloat-abi.softfp=march.armv7ve/mfpu.neon/mfloat-abi.softfp\n-MULTILIB_REUSE\t      += march.armv7-a/mfpu.neon/mfloat-abi.hard=march.armv8-a/mfpu.neon/mfloat-abi.hard\n-MULTILIB_REUSE\t      += march.armv7-a/mfpu.neon/mfloat-abi.softfp=march.armv8-a/mfpu.neon/mfloat-abi.softfp\n-MULTILIB_REUSE\t      += march.armv7-a/mfpu.neon/mfloat-abi.hard=march.armv7-a/mfpu.neon-vfpv4/mfloat-abi.hard\n-MULTILIB_REUSE\t      += march.armv7-a/mfpu.neon/mfloat-abi.softfp=march.armv7-a/mfpu.neon-vfpv4/mfloat-abi.softfp\n-MULTILIB_REUSE\t      += march.armv7-a/mfpu.neon/mfloat-abi.hard=march.armv7-a/mfpu.neon-fp-armv8/mfloat-abi.hard\n-MULTILIB_REUSE\t      += march.armv7-a/mfpu.neon/mfloat-abi.softfp=march.armv7-a/mfpu.neon-fp-armv8/mfloat-abi.softfp\n-\n-\n-MULTILIB_REUSE\t      += march.armv7ve/mfpu.vfpv4-d16/mfloat-abi.hard=march.armv8-a/mfpu.vfpv4-d16/mfloat-abi.hard\n-MULTILIB_REUSE\t      += march.armv7ve/mfpu.vfpv4-d16/mfloat-abi.softfp=march.armv8-a/mfpu.vfpv4-d16/mfloat-abi.softfp\n-\n-\n-MULTILIB_REUSE\t      += march.armv7ve/mfpu.neon-vfpv4/mfloat-abi.hard=march.armv8-a/mfpu.neon-vfpv4/mfloat-abi.hard\n-MULTILIB_REUSE\t      += march.armv7ve/mfpu.neon-vfpv4/mfloat-abi.softfp=march.armv8-a/mfpu.neon-vfpv4/mfloat-abi.softfp\n-MULTILIB_REUSE\t      += march.armv7ve/mfpu.neon-vfpv4/mfloat-abi.hard=march.armv7ve/mfpu.neon-fp-armv8/mfloat-abi.hard\n-MULTILIB_REUSE\t      += march.armv7ve/mfpu.neon-vfpv4/mfloat-abi.softfp=march.armv7ve/mfpu.neon-fp-armv8/mfloat-abi.softfp\n-\n-\n-\n-# And again for mthumb.\n-\n-MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.hard=mthumb/march.armv7ve/mfpu.vfpv3-d16/mfloat-abi.hard\n-MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.softfp=mthumb/march.armv7ve/mfpu.vfpv3-d16/mfloat-abi.softfp\n-MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.hard=mthumb/march.armv8-a/mfpu.vfpv3-d16/mfloat-abi.hard\n-MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.softfp=mthumb/march.armv8-a/mfpu.vfpv3-d16/mfloat-abi.softfp\n-MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.hard=mthumb/march.armv7-a/mfpu.vfpv4-d16/mfloat-abi.hard\n-MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.vfpv3-d16/mfloat-abi.softfp=mthumb/march.armv7-a/mfpu.vfpv4-d16/mfloat-abi.softfp\n-\n-\n-MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.neon/mfloat-abi.hard=mthumb/march.armv7ve/mfpu.neon/mfloat-abi.hard\n-MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.neon/mfloat-abi.softfp=mthumb/march.armv7ve/mfpu.neon/mfloat-abi.softfp\n-MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.neon/mfloat-abi.hard=mthumb/march.armv8-a/mfpu.neon/mfloat-abi.hard\n-MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.neon/mfloat-abi.softfp=mthumb/march.armv8-a/mfpu.neon/mfloat-abi.softfp\n-MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.neon/mfloat-abi.hard=mthumb/march.armv7-a/mfpu.neon-vfpv4/mfloat-abi.hard\n-MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.neon/mfloat-abi.softfp=mthumb/march.armv7-a/mfpu.neon-vfpv4/mfloat-abi.softfp\n-MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.neon/mfloat-abi.hard=mthumb/march.armv7-a/mfpu.neon-fp-armv8/mfloat-abi.hard\n-MULTILIB_REUSE\t      += mthumb/march.armv7-a/mfpu.neon/mfloat-abi.softfp=mthumb/march.armv7-a/mfpu.neon-fp-armv8/mfloat-abi.softfp\n-\n-\n-MULTILIB_REUSE\t      += mthumb/march.armv7ve/mfpu.vfpv4-d16/mfloat-abi.hard=mthumb/march.armv8-a/mfpu.vfpv4-d16/mfloat-abi.hard\n-MULTILIB_REUSE\t      += mthumb/march.armv7ve/mfpu.vfpv4-d16/mfloat-abi.softfp=mthumb/march.armv8-a/mfpu.vfpv4-d16/mfloat-abi.softfp\n-\n-\n-MULTILIB_REUSE\t      += mthumb/march.armv7ve/mfpu.neon-vfpv4/mfloat-abi.hard=mthumb/march.armv8-a/mfpu.neon-vfpv4/mfloat-abi.hard\n-MULTILIB_REUSE\t      += mthumb/march.armv7ve/mfpu.neon-vfpv4/mfloat-abi.softfp=mthumb/march.armv8-a/mfpu.neon-vfpv4/mfloat-abi.softfp\n-MULTILIB_REUSE\t      += mthumb/march.armv7ve/mfpu.neon-vfpv4/mfloat-abi.hard=mthumb/march.armv7ve/mfpu.neon-fp-armv8/mfloat-abi.hard\n-MULTILIB_REUSE\t      += mthumb/march.armv7ve/mfpu.neon-vfpv4/mfloat-abi.softfp=mthumb/march.armv7ve/mfpu.neon-fp-armv8/mfloat-abi.softfp\n+# ARMv8 without SIMD: map down to base architecture\n+MULTILIB_MATCHES\t+= $(foreach ARCH, $(v8_a_nosimd_variants), \\\n+\t\t\t     march?armv8-a=march?armv8-a$(ARCH))\n+\n+# ARMv8 with SIMD: map down to base arch + simd\n+MULTILIB_MATCHES\t+= march?armv8-a+simd=march?armv8-a+crc+simd \\\n+\t\t\t   $(foreach ARCH, $(filter-out +simd, $(v8_a_simd_variants)), \\\n+\t\t\t     march?armv8-a+simd=march?armv8-a$(ARCH) \\\n+\t\t\t     march?armv8-a+simd=march?armv8-a+crc$(ARCH))\n+\n+# Baseline v8.1-a: map down to baseline v8-a\n+MULTILIB_MATCHES\t+= march?armv8-a=march?armv8.1-a\n+\n+# Map all v8.1-a SIMD variants to v8-a+simd\n+MULTILIB_MATCHES\t+= $(foreach ARCH, $(v8_1_a_simd_variants), \\\n+\t\t\t     march?armv8-a+simd=march?armv8.1-a$(ARCH))\n+\n+# Baseline v8.2-a: map down to baseline v8-a\n+MULTILIB_MATCHES\t+= march?armv8-a=march?armv8.2-a\n+\n+# Map all v8.2-a SIMD variants to v8-a+simd\n+MULTILIB_MATCHES\t+= $(foreach ARCH, $(v8_2_a_simd_variants), \\\n+\t\t\t     march?armv8-a+simd=march?armv8.2-a$(ARCH))\n+\n+# Use Thumb libraries for everything.\n+\n+MULTILIB_REUSE\t\t+= mthumb/march.armv7-a/mfloat-abi.soft=marm/march.armv7-a/mfloat-abi.soft\n+\n+MULTILIB_REUSE\t\t+= mthumb/march.armv8-a/mfloat-abi.soft=marm/march.armv8-a/mfloat-abi.soft\n+\n+MULTILIB_REUSE\t\t+= $(foreach ABI, hard softfp, \\\n+\t\t\t     $(foreach ARCH, armv7-a+fp armv7-a+simd armv7ve+simd armv8-a+simd, \\\n+\t\t\t       mthumb/march.$(ARCH)/mfloat-abi.$(ABI)=marm/march.$(ARCH)/mfloat-abi.$(ABI)))\n+\n+# Softfp but no FP, use the soft-float libraries.\n+MULTILIB_REUSE\t\t+= $(foreach MODE, arm thumb, \\\n+\t\t\t     $(foreach ARCH, armv7-a armv8-a, \\\n+\t\t\t       mthumb/march.$(ARCH)/mfloat-abi.soft=m$(MODE)/march.$(ARCH)/mfloat-abi.softfp))"}, {"sha": "77ce7620dcb06200f4dd97c7f7b9cb6545194aaa", "filename": "gcc/config/arm/t-multilib", "status": "modified", "additions": 29, "deletions": 19, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93aa40fee604dea0c2d0bbac088b074cee119c68/gcc%2Fconfig%2Farm%2Ft-multilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93aa40fee604dea0c2d0bbac088b074cee119c68/gcc%2Fconfig%2Farm%2Ft-multilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-multilib?ref=93aa40fee604dea0c2d0bbac088b074cee119c68", "patch": "@@ -29,13 +29,34 @@ MULTILIB_DIRNAMES    =\n MULTILIB_EXCEPTIONS  =\n MULTILIB_MATCHES     =\n MULTILIB_REUSE\t     =\n+MULTILIB_REQUIRED    =\n \n comma := ,\n tm_multilib_list := $(subst $(comma), ,$(TM_MULTILIB_CONFIG))\n \n HAS_APROFILE := $(filter aprofile,$(tm_multilib_list))\n HAS_RMPROFILE := $(filter rmprofile,$(tm_multilib_list))\n \n+# Produce the combinatorial list of extensions.  Where there are\n+# multiple permutations for a combination, the ordering is the\n+# selected by the forward ordering of the original list.  This matches\n+# the canonical ordering generated by the canonicalizer in the driver.\n+#\n+# For example,\n+#   $(call all_feat_combs, a b)\n+# will produce\n+#   +a +a+b +b\n+# but will not include\n+#   +b+a\n+# The rule is recursive and can be called with any (reasonable) list of\n+# extensions.\n+all_feat_combs\t= +$(firstword $(1)) \\\n+\t\t  $(if $(wordlist 2, $(words $(1)), $(1)), \\\n+\t\t    $(foreach OPT, \\\n+\t\t      $(call all_feat_combs, \\\n+\t\t        $(wordlist 2, $(words $(1)), $(1))), \\\n+\t\t      +$(firstword $(1))$(OPT) $(OPT)),)\n+\n ifneq (,$(HAS_APROFILE))\n include $(srcdir)/config/arm/t-aprofile\n endif\n@@ -45,25 +66,14 @@ endif\n SEP := $(and $(HAS_APROFILE),$(HAS_RMPROFILE),/)\n \n \n-# We have the following hierachy:\n-#   ISA: A32 (.) or T16/T32 (thumb)\n-#   Architecture: ARMv6-M (v6-m), ARMv7-M (v7-m), ARMv7E-M (v7e-m),\n-#                 ARMv7 (v7-ar), ARMv7-A (v7-a), ARMv7VE (v7ve),\n-#                 ARMv8-M Baseline (v8-m.base), ARMv8-M Mainline (v8-m.main)\n-#                 or ARMv8-A (v8-a).\n-#   FPU: VFPv3-D16 (fpv3), NEONv1 (simdv1), FPV4-SP-D16 (fpv4-sp),\n-#        VFPv4-D16 (fpv4), NEON-VFPV4 (simdvfpv4), FPV5-SP-D16 (fpv5-sp),\n-#        VFPv5-D16 (fpv5), NEON for ARMv8 (simdv8), or None (.).\n-#   Float-abi: Soft (.), softfp (softfp), or hard (hard).\n-\n-MULTILIB_OPTIONS       += mthumb\n-MULTILIB_DIRNAMES      += thumb\n+MULTILIB_OPTIONS       += marm/mthumb\n+MULTILIB_DIRNAMES      += arm thumb\n \n-MULTILIB_OPTIONS       += $(MULTI_ARCH_OPTS_A)$(SEP)$(MULTI_ARCH_OPTS_RM)\n-MULTILIB_DIRNAMES      += $(MULTI_ARCH_DIRS_A) $(MULTI_ARCH_DIRS_RM)\n+MULTILIB_OPTIONS       += march=armv5te+fp/$(MULTI_ARCH_OPTS_A)$(SEP)$(MULTI_ARCH_OPTS_RM)\n+MULTILIB_DIRNAMES      += v5te $(MULTI_ARCH_DIRS_A) $(MULTI_ARCH_DIRS_RM)\n \n-MULTILIB_OPTIONS       += $(MULTI_FPU_OPTS_A)$(SEP)$(MULTI_FPU_OPTS_RM)\n-MULTILIB_DIRNAMES      += $(MULTI_FPU_DIRS_A) $(MULTI_FPU_DIRS_RM)\n+MULTILIB_OPTIONS       += mfloat-abi=soft/mfloat-abi=softfp/mfloat-abi=hard\n+MULTILIB_DIRNAMES      += nofp softfp hard\n \n-MULTILIB_OPTIONS       += mfloat-abi=softfp/mfloat-abi=hard\n-MULTILIB_DIRNAMES      += softfp hard\n+MULTILIB_REQUIRED      += mthumb/mfloat-abi=soft\n+MULTILIB_REQUIRED      += marm/march=armv5te+fp/mfloat-abi=hard"}, {"sha": "13dffb31ccada1c7d8d1cb2455e92f5fa9cb8807", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93aa40fee604dea0c2d0bbac088b074cee119c68/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93aa40fee604dea0c2d0bbac088b074cee119c68/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=93aa40fee604dea0c2d0bbac088b074cee119c68", "patch": "@@ -1,3 +1,7 @@\n+2017-06-16  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* gcc.target/arm/multilibs.exp: New file.\n+\n 2017-06-16  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/80933"}, {"sha": "bef5be89c8ed85dae5a74129dedd53478e69e301", "filename": "gcc/testsuite/gcc.target/arm/multilib.exp", "status": "added", "additions": 381, "deletions": 0, "changes": 381, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/93aa40fee604dea0c2d0bbac088b074cee119c68/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/93aa40fee604dea0c2d0bbac088b074cee119c68/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmultilib.exp?ref=93aa40fee604dea0c2d0bbac088b074cee119c68", "patch": "@@ -0,0 +1,381 @@\n+# Copyright (C) 2017 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+load_lib gcc-dg.exp\n+\n+dg-init\n+\n+if { [board_info [target_info name] exists multilib_flags] \n+     && [regexp {(-marm|-mthumb|-march=.*|-mcpu=.*|-mfpu=.*|-mfloat=abi=.*)\\y} [board_info [target_info name] multilib_flags]] } {\n+\t\n+    # Multilib flags override anything we can apply to a test, so\n+    # skip if any of the above options are set there.\n+    verbose \"skipping multilib tests due to multilib_flags setting\" 1\n+    return\n+}\n+\n+# We don't want to run this test multiple times in a parallel make check.\n+if ![gcc_parallel_test_run_p options] {\n+    return\n+}\n+gcc_parallel_test_enable 0\n+\n+proc multilib_config {profile} {\n+    return [check_configured_with [join [list {with-multilib-list=([^ ]+,)?} $profile {(,[^ ]+)?}] \"\"]]\n+}\n+\n+proc check_multi_dir { gcc_opts multi_dir } {\n+    global tool\n+\n+    set gcc_output [${tool}_target_compile \"--print-multi-directory $gcc_opts\" \"\" \"none\" \"\"]\n+    if { [string match \"$multi_dir\\n\" $gcc_output] } {\n+\tpass \"multilibdir $gcc_opts $multi_dir\"\n+    } else {\n+\tfail \"multilibdir $gcc_opts $multi_dir\"\n+    }\n+}\n+\n+if {[multilib_config \"aprofile\"] } {\n+    foreach {opts dir} {\n+        {-mcpu=cortex-a8 -mfloat-abi=soft} \"thumb/v7-a/nofp\"\n+        {-mcpu=cortex-a8 -mfloat-abi=softfp} \"thumb/v7-a+simd/softfp\"\n+        {-mcpu=cortex-a8 -mfloat-abi=hard} \"thumb/v7-a+simd/hard\"\n+        {-mcpu=cortex-a15} \"thumb/v7-a/nofp\"\n+        {-mcpu=cortex-a15 -mfloat-abi=hard} \"thumb/v7ve+simd/hard\"\n+        {-mcpu=cortex-a15 -marm -mfloat-abi=hard} \"thumb/v7ve+simd/hard\"\n+        {-mcpu=cortex-a15 -mthumb -mfloat-abi=hard} \"thumb/v7ve+simd/hard\"\n+        {-mcpu=cortex-a7+nosimd -mfloat-abi=hard} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a7+nofp -mfloat-abi=softfp} \"thumb/v7-a/nofp\"\n+\t{-mcpu=generic-armv7-a+vfpv4 -mfloat-abi=softfp} \"thumb/v7-a+fp/softfp\"\n+\t{-march=armv7ve+vfpv3 -mfloat-abi=hard} \"thumb/v7-a+fp/hard\"\n+\t{-march=armv7ve -mfloat-abi=softfp -mfpu=neon} \"thumb/v7-a+simd/softfp\"\n+\t{-march=armv7ve -mfloat-abi=softfp -mfpu=neon-vfpv4} \"thumb/v7ve+simd/softfp\"\n+\t{-march=armv7ve -mfloat-abi=softfp -mfpu=vfpv4} \"thumb/v7-a+fp/softfp\"\n+\t{-march=armv8-a+crc+simd -mfloat-abi=soft} \"thumb/v8-a/nofp\"\n+\t{-march=armv8-a+crc+simd -mfloat-abi=softfp} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv8.1-a+crypto -mfloat-abi=soft} \"thumb/v8-a/nofp\"\n+\t{-march=armv8.1-a+crypto -mfloat-abi=softfp} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv8.2-a+crypto -mfloat-abi=soft} \"thumb/v8-a/nofp\"\n+\t{-march=armv8.2-a+simd+crypto -mfloat-abi=softfp} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv8.2-a+simd+crypto+nofp -mfloat-abi=softfp} \"thumb/v8-a/nofp\"\n+\t{-march=armv8.2-a+simd+nofp+crypto -mfloat-abi=softfp} \"thumb/v8-a+simd/softfp\"\n+\t{-mcpu=cortex-a53+crypto -mfloat-abi=hard} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a53+nofp -mfloat-abi=softfp} \"thumb/v8-a/nofp\"\n+\t{-march=armv8-a+crc -mfloat-abi=hard -mfpu=vfp} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv8-a+crc+simd -mfloat-abi=soft -mfpu=neon} \"thumb/v8-a/nofp\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv3-d16 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv3-d16 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv3-d16 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv3-d16 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv3-d16 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv3-d16 -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv3-d16-fp16 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv3-d16-fp16 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv3-d16-fp16 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv3-d16-fp16 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv3-d16-fp16 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv3-d16-fp16 -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv3 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv3 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv3 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv3 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv3 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv3 -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv4-d16 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv4-d16 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv4-d16 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv4-d16 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv4-d16 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv4-d16 -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv4 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv4 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv4 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv4 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv4 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv4 -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a8 -mfpu=neon -mfloat-abi=hard -marm} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a5 -mfpu=neon -mfloat-abi=hard -marm} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a9 -mfpu=neon -mfloat-abi=hard -marm} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a7 -mfpu=neon -mfloat-abi=hard -marm} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a15 -mfpu=neon -mfloat-abi=hard -marm} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=neon -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a8 -mfpu=neon-vfpv4 -mfloat-abi=hard -marm} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a5 -mfpu=neon-vfpv4 -mfloat-abi=hard -marm} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a9 -mfpu=neon-vfpv4 -mfloat-abi=hard -marm} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a7 -mfpu=neon-vfpv4 -mfloat-abi=hard -marm} \"thumb/v7ve+simd/hard\"\n+\t{-mcpu=cortex-a15 -mfpu=neon-vfpv4 -mfloat-abi=hard -marm} \"thumb/v7ve+simd/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=neon-vfpv4 -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a8 -mfpu=fp-armv8 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a5 -mfpu=fp-armv8 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a9 -mfpu=fp-armv8 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a7 -mfpu=fp-armv8 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a15 -mfpu=fp-armv8 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=fp-armv8 -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a8 -mfpu=neon-fp-armv8 -mfloat-abi=hard -marm} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a5 -mfpu=neon-fp-armv8 -mfloat-abi=hard -marm} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a9 -mfpu=neon-fp-armv8 -mfloat-abi=hard -marm} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a7 -mfpu=neon-fp-armv8 -mfloat-abi=hard -marm} \"thumb/v7ve+simd/hard\"\n+\t{-mcpu=cortex-a15 -mfpu=neon-fp-armv8 -mfloat-abi=hard -marm} \"thumb/v7ve+simd/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv3-d16 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv3-d16 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv3-d16 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv3-d16 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv3-d16 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv3-d16 -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv3-d16-fp16 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv3-d16-fp16 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv3-d16-fp16 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv3-d16-fp16 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv3-d16-fp16 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv3-d16-fp16 -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv3 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv3 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv3 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv3 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv3 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv3 -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv4-d16 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv4-d16 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv4-d16 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv4-d16 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv4-d16 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv4-d16 -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv4 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv4 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv4 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv4 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv4 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv4 -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-mcpu=cortex-a8 -mfpu=neon -mfloat-abi=softfp -marm} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=neon -mfloat-abi=softfp -marm} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a9 -mfpu=neon -mfloat-abi=softfp -marm} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a7 -mfpu=neon -mfloat-abi=softfp -marm} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a15 -mfpu=neon -mfloat-abi=softfp -marm} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a53 -mfpu=neon -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-mcpu=cortex-a8 -mfpu=neon-vfpv4 -mfloat-abi=softfp -marm} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=neon-vfpv4 -mfloat-abi=softfp -marm} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a9 -mfpu=neon-vfpv4 -mfloat-abi=softfp -marm} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a7 -mfpu=neon-vfpv4 -mfloat-abi=softfp -marm} \"thumb/v7ve+simd/softfp\"\n+\t{-mcpu=cortex-a15 -mfpu=neon-vfpv4 -mfloat-abi=softfp -marm} \"thumb/v7ve+simd/softfp\"\n+\t{-mcpu=cortex-a53 -mfpu=neon-vfpv4 -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-mcpu=cortex-a8 -mfpu=fp-armv8 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=fp-armv8 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a9 -mfpu=fp-armv8 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a7 -mfpu=fp-armv8 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a15 -mfpu=fp-armv8 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a53 -mfpu=fp-armv8 -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-mcpu=cortex-a8 -mfpu=neon-fp-armv8 -mfloat-abi=softfp -marm} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=neon-fp-armv8 -mfloat-abi=softfp -marm} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a9 -mfpu=neon-fp-armv8 -mfloat-abi=softfp -marm} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a7 -mfpu=neon-fp-armv8 -mfloat-abi=softfp -marm} \"thumb/v7ve+simd/softfp\"\n+\t{-mcpu=cortex-a15 -mfpu=neon-fp-armv8 -mfloat-abi=softfp -marm} \"thumb/v7ve+simd/softfp\"\n+\t{-mcpu=cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=vfpv3-d16 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-march=armv8-a -mfpu=vfpv3-d16 -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=vfpv3-d16 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-march=armv8-a -mfpu=vfpv3-d16 -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=vfpv3-d16-fp16 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-march=armv8-a -mfpu=vfpv3-d16-fp16 -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=vfpv3-d16-fp16 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-march=armv8-a -mfpu=vfpv3-d16-fp16 -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=vfpv3 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-march=armv8-a -mfpu=vfpv3 -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=vfpv3 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-march=armv8-a -mfpu=vfpv3 -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-march=armv8-a -mfpu=vfpv4-d16 -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-march=armv8-a -mfpu=vfpv4-d16 -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=vfpv4 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-march=armv8-a -mfpu=vfpv4 -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=vfpv4 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-march=armv8-a -mfpu=vfpv4 -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=neon -mfloat-abi=hard -marm} \"thumb/v7-a+simd/hard\"\n+\t{-march=armv8-a -mfpu=neon -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=neon -mfloat-abi=softfp -marm} \"thumb/v7-a+simd/softfp\"\n+\t{-march=armv8-a -mfpu=neon -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=neon-vfpv4 -mfloat-abi=hard -marm} \"thumb/v7-a+simd/hard\"\n+\t{-march=armv8-a -mfpu=neon-vfpv4 -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=neon-vfpv4 -mfloat-abi=softfp -marm} \"thumb/v7-a+simd/softfp\"\n+\t{-march=armv8-a -mfpu=neon-vfpv4 -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=fp-armv8 -mfloat-abi=hard -marm} \"thumb/v7-a+fp/hard\"\n+\t{-march=armv8-a -mfpu=fp-armv8 -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=fp-armv8 -mfloat-abi=softfp -marm} \"thumb/v7-a+fp/softfp\"\n+\t{-march=armv8-a -mfpu=fp-armv8 -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=neon-fp-armv8 -mfloat-abi=hard -marm} \"thumb/v7-a+simd/hard\"\n+\t{-march=armv8-a -mfpu=neon-fp-armv8 -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=neon-fp-armv8 -mfloat-abi=softfp -marm} \"thumb/v7-a+simd/softfp\"\n+\t{-march=armv8-a -mfpu=neon-fp-armv8 -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=crypto-neon-fp-armv8 -mfloat-abi=hard -marm} \"thumb/v7-a+simd/hard\"\n+\t{-march=armv8-a -mfpu=crypto-neon-fp-armv8 -mfloat-abi=hard -marm} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=crypto-neon-fp-armv8 -mfloat-abi=softfp -marm} \"thumb/v7-a+simd/softfp\"\n+\t{-march=armv8-a -mfpu=crypto-neon-fp-armv8 -mfloat-abi=softfp -marm} \"thumb/v8-a+simd/softfp\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv3-d16 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv3-d16 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv3-d16 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv3-d16 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv3-d16 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv3-d16 -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv3-d16-fp16 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv3-d16-fp16 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv3-d16-fp16 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv3-d16-fp16 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv3-d16-fp16 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv3-d16-fp16 -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv3 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv3 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv3 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv3 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv3 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv3 -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv4-d16 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv4-d16 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv4-d16 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv4-d16 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv4-d16 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv4-d16 -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv4 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv4 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv4 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv4 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv4 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv4 -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a8 -mfpu=neon -mfloat-abi=hard -mthumb} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a5 -mfpu=neon -mfloat-abi=hard -mthumb} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a9 -mfpu=neon -mfloat-abi=hard -mthumb} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a7 -mfpu=neon -mfloat-abi=hard -mthumb} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a15 -mfpu=neon -mfloat-abi=hard -mthumb} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=neon -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a8 -mfpu=neon-vfpv4 -mfloat-abi=hard -mthumb} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a5 -mfpu=neon-vfpv4 -mfloat-abi=hard -mthumb} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a9 -mfpu=neon-vfpv4 -mfloat-abi=hard -mthumb} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a7 -mfpu=neon-vfpv4 -mfloat-abi=hard -mthumb} \"thumb/v7ve+simd/hard\"\n+\t{-mcpu=cortex-a15 -mfpu=neon-vfpv4 -mfloat-abi=hard -mthumb} \"thumb/v7ve+simd/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=neon-vfpv4 -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a8 -mfpu=fp-armv8 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a5 -mfpu=fp-armv8 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a9 -mfpu=fp-armv8 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a7 -mfpu=fp-armv8 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a15 -mfpu=fp-armv8 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=fp-armv8 -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a8 -mfpu=neon-fp-armv8 -mfloat-abi=hard -mthumb} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a5 -mfpu=neon-fp-armv8 -mfloat-abi=hard -mthumb} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a9 -mfpu=neon-fp-armv8 -mfloat-abi=hard -mthumb} \"thumb/v7-a+simd/hard\"\n+\t{-mcpu=cortex-a7 -mfpu=neon-fp-armv8 -mfloat-abi=hard -mthumb} \"thumb/v7ve+simd/hard\"\n+\t{-mcpu=cortex-a15 -mfpu=neon-fp-armv8 -mfloat-abi=hard -mthumb} \"thumb/v7ve+simd/hard\"\n+\t{-mcpu=cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv3-d16 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv3-d16 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv3-d16 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv3-d16 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv3-d16 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv3-d16 -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv3-d16-fp16 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv3-d16-fp16 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv3-d16-fp16 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv3-d16-fp16 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv3-d16-fp16 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv3-d16-fp16 -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv3 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv3 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv3 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv3 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv3 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv3 -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv4-d16 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv4-d16 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv4-d16 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv4-d16 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv4-d16 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv4-d16 -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+\t{-mcpu=cortex-a8 -mfpu=vfpv4 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=vfpv4 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a9 -mfpu=vfpv4 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a7 -mfpu=vfpv4 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a15 -mfpu=vfpv4 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a53 -mfpu=vfpv4 -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+\t{-mcpu=cortex-a8 -mfpu=neon -mfloat-abi=softfp -mthumb} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=neon -mfloat-abi=softfp -mthumb} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a9 -mfpu=neon -mfloat-abi=softfp -mthumb} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a7 -mfpu=neon -mfloat-abi=softfp -mthumb} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a15 -mfpu=neon -mfloat-abi=softfp -mthumb} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a53 -mfpu=neon -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+\t{-mcpu=cortex-a8 -mfpu=neon-vfpv4 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=neon-vfpv4 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a9 -mfpu=neon-vfpv4 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a7 -mfpu=neon-vfpv4 -mfloat-abi=softfp -mthumb} \"thumb/v7ve+simd/softfp\"\n+\t{-mcpu=cortex-a15 -mfpu=neon-vfpv4 -mfloat-abi=softfp -mthumb} \"thumb/v7ve+simd/softfp\"\n+\t{-mcpu=cortex-a53 -mfpu=neon-vfpv4 -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+\t{-mcpu=cortex-a8 -mfpu=fp-armv8 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=fp-armv8 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a9 -mfpu=fp-armv8 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a7 -mfpu=fp-armv8 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a15 -mfpu=fp-armv8 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-mcpu=cortex-a53 -mfpu=fp-armv8 -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+\t{-mcpu=cortex-a8 -mfpu=neon-fp-armv8 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a5 -mfpu=neon-fp-armv8 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a9 -mfpu=neon-fp-armv8 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+simd/softfp\"\n+\t{-mcpu=cortex-a7 -mfpu=neon-fp-armv8 -mfloat-abi=softfp -mthumb} \"thumb/v7ve+simd/softfp\"\n+\t{-mcpu=cortex-a15 -mfpu=neon-fp-armv8 -mfloat-abi=softfp -mthumb} \"thumb/v7ve+simd/softfp\"\n+\t{-mcpu=cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=vfpv3-d16 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-march=armv8-a -mfpu=vfpv3-d16 -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=vfpv3-d16 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-march=armv8-a -mfpu=vfpv3-d16 -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=vfpv3-d16-fp16 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-march=armv8-a -mfpu=vfpv3-d16-fp16 -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=vfpv3-d16-fp16 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-march=armv8-a -mfpu=vfpv3-d16-fp16 -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=vfpv3 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-march=armv8-a -mfpu=vfpv3 -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=vfpv3 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-march=armv8-a -mfpu=vfpv3 -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-march=armv8-a -mfpu=vfpv4-d16 -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=vfpv4-d16 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-march=armv8-a -mfpu=vfpv4-d16 -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=vfpv4 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-march=armv8-a -mfpu=vfpv4 -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=vfpv4 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-march=armv8-a -mfpu=vfpv4 -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=neon -mfloat-abi=hard -mthumb} \"thumb/v7-a+simd/hard\"\n+\t{-march=armv8-a -mfpu=neon -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=neon -mfloat-abi=softfp -mthumb} \"thumb/v7-a+simd/softfp\"\n+\t{-march=armv8-a -mfpu=neon -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=neon-vfpv4 -mfloat-abi=hard -mthumb} \"thumb/v7-a+simd/hard\"\n+\t{-march=armv8-a -mfpu=neon-vfpv4 -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=neon-vfpv4 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+simd/softfp\"\n+\t{-march=armv8-a -mfpu=neon-vfpv4 -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=fp-armv8 -mfloat-abi=hard -mthumb} \"thumb/v7-a+fp/hard\"\n+\t{-march=armv8-a -mfpu=fp-armv8 -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=fp-armv8 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+fp/softfp\"\n+\t{-march=armv8-a -mfpu=fp-armv8 -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=neon-fp-armv8 -mfloat-abi=hard -mthumb} \"thumb/v7-a+simd/hard\"\n+\t{-march=armv8-a -mfpu=neon-fp-armv8 -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=neon-fp-armv8 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+simd/softfp\"\n+\t{-march=armv8-a -mfpu=neon-fp-armv8 -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+\t{-march=armv7-a -mfpu=crypto-neon-fp-armv8 -mfloat-abi=hard -mthumb} \"thumb/v7-a+simd/hard\"\n+\t{-march=armv8-a -mfpu=crypto-neon-fp-armv8 -mfloat-abi=hard -mthumb} \"thumb/v8-a+simd/hard\"\n+\t{-march=armv7-a -mfpu=crypto-neon-fp-armv8 -mfloat-abi=softfp -mthumb} \"thumb/v7-a+simd/softfp\"\n+\t{-march=armv8-a -mfpu=crypto-neon-fp-armv8 -mfloat-abi=softfp -mthumb} \"thumb/v8-a+simd/softfp\"\n+    } {\n+\tcheck_multi_dir $opts $dir\n+    }\n+}\n+\n+gcc_parallel_test_enable 1\n+"}]}