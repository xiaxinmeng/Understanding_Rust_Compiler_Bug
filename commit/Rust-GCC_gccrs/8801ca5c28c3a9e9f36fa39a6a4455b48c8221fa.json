{"sha": "8801ca5c28c3a9e9f36fa39a6a4455b48c8221fa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODgwMWNhNWMyOGMzYTllOWYzNmZhMzlhNmE0NDU1YjQ4YzgyMjFmYQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-07-22T11:18:55Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-07-22T11:18:55Z"}, "message": "re PR tree-optimization/91221 (ICE in get_int_cst_ext_nunits, at tree.c:1299 since r273548)\n\n2019-07-22  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/91221\n\t* tree-ssa-sccvn.c (vn_reference_lookup_3): Appropriately\n\trestrict partial-def handling of empty constructors and\n\tmemset to refs with known offset.\n\n\t* g++.dg/pr91221.C: New testcase.\n\nFrom-SVN: r273667", "tree": {"sha": "25c91033a09e53b0d303567af1374568c6f092d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/25c91033a09e53b0d303567af1374568c6f092d8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8801ca5c28c3a9e9f36fa39a6a4455b48c8221fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8801ca5c28c3a9e9f36fa39a6a4455b48c8221fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8801ca5c28c3a9e9f36fa39a6a4455b48c8221fa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8801ca5c28c3a9e9f36fa39a6a4455b48c8221fa/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ff8f129bc2f57fdfc80f56d73b84a80948d11d84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff8f129bc2f57fdfc80f56d73b84a80948d11d84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff8f129bc2f57fdfc80f56d73b84a80948d11d84"}], "stats": {"total": 31, "additions": 29, "deletions": 2}, "files": [{"sha": "e58dfe153c000fa98e1c867942df5ae7f5f9ec82", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8801ca5c28c3a9e9f36fa39a6a4455b48c8221fa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8801ca5c28c3a9e9f36fa39a6a4455b48c8221fa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8801ca5c28c3a9e9f36fa39a6a4455b48c8221fa", "patch": "@@ -1,3 +1,10 @@\n+2019-07-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/91221\n+\t* tree-ssa-sccvn.c (vn_reference_lookup_3): Appropriately\n+\trestrict partial-def handling of empty constructors and\n+\tmemset to refs with known offset.\n+\n 2019-07-22  Jan Beulich  <jbeulich@suse.com>\n \n \t* config/i386/sse.md (ternlogsuffix): New."}, {"sha": "e0637748eb8a3846438df595793b86b57ed9838c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8801ca5c28c3a9e9f36fa39a6a4455b48c8221fa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8801ca5c28c3a9e9f36fa39a6a4455b48c8221fa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8801ca5c28c3a9e9f36fa39a6a4455b48c8221fa", "patch": "@@ -1,3 +1,8 @@\n+2019-07-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/91221\n+\t* g++.dg/pr91221.C: New testcase.\n+\n 2019-07-22  Martin Liska  <mliska@suse.cz>\n \n \tPR driver/91172"}, {"sha": "3036f1bc43b25bd9c330b2d1097a9022c1a13f4c", "filename": "gcc/testsuite/g++.dg/pr91221.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8801ca5c28c3a9e9f36fa39a6a4455b48c8221fa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr91221.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8801ca5c28c3a9e9f36fa39a6a4455b48c8221fa/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr91221.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr91221.C?ref=8801ca5c28c3a9e9f36fa39a6a4455b48c8221fa", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do compile }\n+// { dg-options \"-O2 -fno-ipa-pure-const -fpack-struct -Wno-address-of-packed-member\" }\n+\n+void printf(...);\n+struct A {\n+    A() : bar_(), dbar_() {\n+\tfor (int i;; i++)\n+\t  printf(i, bar_[i]);\n+    }\n+    int bar_[5];\n+    double dbar_[5];\n+};\n+void fn1() { A a; }"}, {"sha": "cab2460a30894c6bb8e19f98eb80a092c561c145", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8801ca5c28c3a9e9f36fa39a6a4455b48c8221fa/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8801ca5c28c3a9e9f36fa39a6a4455b48c8221fa/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=8801ca5c28c3a9e9f36fa39a6a4455b48c8221fa", "patch": "@@ -2455,7 +2455,8 @@ vn_reference_lookup_3 (ao_ref *ref, tree vuse, void *data_,\n \t           (vuse, vr->set, vr->type, vr->operands, val);\n \t}\n       /* For now handle clearing memory with partial defs.  */\n-      else if (integer_zerop (gimple_call_arg (def_stmt, 1))\n+      else if (known_eq (ref->size, maxsize)\n+\t       && integer_zerop (gimple_call_arg (def_stmt, 1))\n \t       && tree_to_poly_int64 (len).is_constant (&leni)\n \t       && offset.is_constant (&offseti)\n \t       && offset2.is_constant (&offset2i)\n@@ -2503,7 +2504,8 @@ vn_reference_lookup_3 (ao_ref *ref, tree vuse, void *data_,\n \t      return vn_reference_lookup_or_insert_for_pieces\n \t\t  (vuse, vr->set, vr->type, vr->operands, val);\n \t    }\n-\t  else if (maxsize.is_constant (&maxsizei)\n+\t  else if (known_eq (ref->size, maxsize)\n+\t\t   && maxsize.is_constant (&maxsizei)\n \t\t   && maxsizei % BITS_PER_UNIT == 0\n \t\t   && offset.is_constant (&offseti)\n \t\t   && offseti % BITS_PER_UNIT == 0"}]}