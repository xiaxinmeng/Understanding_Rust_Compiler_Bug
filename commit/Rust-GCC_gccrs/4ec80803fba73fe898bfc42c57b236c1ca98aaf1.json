{"sha": "4ec80803fba73fe898bfc42c57b236c1ca98aaf1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGVjODA4MDNmYmE3M2ZlODk4YmZjNDJjNTdiMjM2YzFjYTk4YWFmMQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2009-06-11T07:47:35Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2009-06-11T07:47:35Z"}, "message": "re PR fortran/38718 (some simplifiers for elemental intrinsics missing; required for init expressions)\n\n\tPR fortran/38718\n\n\t* intrinsic.c (add_functions): Add simplifiers for ISNAN,\n\tIS_IOSTAT_END and IS_IOSTAT_EOR.\n\t* intrinsic.h (gfc_simplify_is_iostat_end,\n\t* gfc_simplify_is_iostat_eor,\n\tgfc_simplify_isnan): New prototypes.\n\t* intrinsic.c (gfc_simplify_is_iostat_end,\n\t* gfc_simplify_is_iostat_eor,\n\tgfc_simplify_isnan): New functions.\n\n\t* gfortran.dg/is_iostat_end_eor_2.f90: New test.\n\t* gfortran.dg/nan_5.f90: New test.\n\nFrom-SVN: r148367", "tree": {"sha": "2d008f94cf845d6abdbd7421b8647fc1e6ef2916", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d008f94cf845d6abdbd7421b8647fc1e6ef2916"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ec80803fba73fe898bfc42c57b236c1ca98aaf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ec80803fba73fe898bfc42c57b236c1ca98aaf1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ec80803fba73fe898bfc42c57b236c1ca98aaf1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ec80803fba73fe898bfc42c57b236c1ca98aaf1/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8d4f3fcb274af7dc592a5f95ca76da533505920", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8d4f3fcb274af7dc592a5f95ca76da533505920", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8d4f3fcb274af7dc592a5f95ca76da533505920"}], "stats": {"total": 145, "additions": 141, "deletions": 4}, "files": [{"sha": "1a2f41b24561ae4ba9a9cf1b1ac7f03aeb2f3413", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ec80803fba73fe898bfc42c57b236c1ca98aaf1/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ec80803fba73fe898bfc42c57b236c1ca98aaf1/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=4ec80803fba73fe898bfc42c57b236c1ca98aaf1", "patch": "@@ -1,3 +1,13 @@\n+2009-06-11  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/38718\n+\t* intrinsic.c (add_functions): Add simplifiers for ISNAN,\n+\tIS_IOSTAT_END and IS_IOSTAT_EOR.\n+\t* intrinsic.h (gfc_simplify_is_iostat_end, gfc_simplify_is_iostat_eor,\n+\tgfc_simplify_isnan): New prototypes.\n+\t* intrinsic.c (gfc_simplify_is_iostat_end, gfc_simplify_is_iostat_eor,\n+\tgfc_simplify_isnan): New functions.\n+\n 2009-06-11  Jakub Jelinek  <jakub@redhat.com>\n \n \t* interface.c (fold_unary): Rename to..."}, {"sha": "7bb10ec245ba33657efef8fb48d56a923943908e", "filename": "gcc/fortran/intrinsic.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ec80803fba73fe898bfc42c57b236c1ca98aaf1/gcc%2Ffortran%2Fintrinsic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ec80803fba73fe898bfc42c57b236c1ca98aaf1/gcc%2Ffortran%2Fintrinsic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.c?ref=4ec80803fba73fe898bfc42c57b236c1ca98aaf1", "patch": "@@ -1845,18 +1845,21 @@ add_functions (void)\n \n   add_sym_1 (\"is_iostat_end\", GFC_ISYM_IS_IOSTAT_END,\n \t     CLASS_ELEMENTAL, ACTUAL_NO, BT_LOGICAL, dl, GFC_STD_F2003,\n-\t     gfc_check_i, NULL, NULL, i, BT_INTEGER, 0, REQUIRED);\n+\t     gfc_check_i, gfc_simplify_is_iostat_end, NULL,\n+\t     i, BT_INTEGER, 0, REQUIRED);\n \n   make_generic (\"is_iostat_end\", GFC_ISYM_IS_IOSTAT_END, GFC_STD_F2003);\n \n   add_sym_1 (\"is_iostat_eor\", GFC_ISYM_IS_IOSTAT_EOR,\n \t     CLASS_ELEMENTAL, ACTUAL_NO, BT_LOGICAL, dl, GFC_STD_F2003,\n-\t     gfc_check_i, NULL, NULL, i, BT_INTEGER, 0, REQUIRED);\n+\t     gfc_check_i, gfc_simplify_is_iostat_eor, NULL,\n+\t     i, BT_INTEGER, 0, REQUIRED);\n \n   make_generic (\"is_iostat_eor\", GFC_ISYM_IS_IOSTAT_EOR, GFC_STD_F2003);\n \n-  add_sym_1 (\"isnan\", GFC_ISYM_ISNAN, CLASS_ELEMENTAL, ACTUAL_NO, BT_LOGICAL,\n-\t     dl, GFC_STD_GNU, gfc_check_isnan, NULL, NULL,\n+  add_sym_1 (\"isnan\", GFC_ISYM_ISNAN, CLASS_ELEMENTAL, ACTUAL_NO,\n+\t     BT_LOGICAL, dl, GFC_STD_GNU,\n+\t     gfc_check_isnan, gfc_simplify_isnan, NULL,\n \t     x, BT_REAL, 0, REQUIRED);\n \n   make_generic (\"isnan\", GFC_ISYM_ISNAN, GFC_STD_GNU);"}, {"sha": "d1bf846c264ef20ac7668a0335925c568f00bfae", "filename": "gcc/fortran/intrinsic.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ec80803fba73fe898bfc42c57b236c1ca98aaf1/gcc%2Ffortran%2Fintrinsic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ec80803fba73fe898bfc42c57b236c1ca98aaf1/gcc%2Ffortran%2Fintrinsic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fintrinsic.h?ref=4ec80803fba73fe898bfc42c57b236c1ca98aaf1", "patch": "@@ -260,6 +260,9 @@ gfc_expr *gfc_simplify_long (gfc_expr *);\n gfc_expr *gfc_simplify_ifix (gfc_expr *);\n gfc_expr *gfc_simplify_idint (gfc_expr *);\n gfc_expr *gfc_simplify_ior (gfc_expr *, gfc_expr *);\n+gfc_expr *gfc_simplify_is_iostat_end (gfc_expr *);\n+gfc_expr *gfc_simplify_is_iostat_eor (gfc_expr *);\n+gfc_expr *gfc_simplify_isnan (gfc_expr *);\n gfc_expr *gfc_simplify_ishft (gfc_expr *, gfc_expr *);\n gfc_expr *gfc_simplify_ishftc (gfc_expr *, gfc_expr *, gfc_expr *);\n gfc_expr *gfc_simplify_kind (gfc_expr *);"}, {"sha": "5269e8f206e62126739807863b93b0d70637684f", "filename": "gcc/fortran/simplify.c", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ec80803fba73fe898bfc42c57b236c1ca98aaf1/gcc%2Ffortran%2Fsimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ec80803fba73fe898bfc42c57b236c1ca98aaf1/gcc%2Ffortran%2Fsimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fsimplify.c?ref=4ec80803fba73fe898bfc42c57b236c1ca98aaf1", "patch": "@@ -2625,6 +2625,54 @@ gfc_simplify_ior (gfc_expr *x, gfc_expr *y)\n }\n \n \n+gfc_expr *\n+gfc_simplify_is_iostat_end (gfc_expr *x)\n+{\n+  gfc_expr *result;\n+\n+  if (x->expr_type != EXPR_CONSTANT)\n+    return NULL;\n+\n+  result = gfc_constant_result (BT_LOGICAL, gfc_default_logical_kind,\n+\t\t\t\t&x->where);\n+  result->value.logical = (mpz_cmp_si (x->value.integer, LIBERROR_END) == 0);\n+\n+  return result;\n+}\n+\n+\n+gfc_expr *\n+gfc_simplify_is_iostat_eor (gfc_expr *x)\n+{\n+  gfc_expr *result;\n+\n+  if (x->expr_type != EXPR_CONSTANT)\n+    return NULL;\n+\n+  result = gfc_constant_result (BT_LOGICAL, gfc_default_logical_kind,\n+\t\t\t\t&x->where);\n+  result->value.logical = (mpz_cmp_si (x->value.integer, LIBERROR_EOR) == 0);\n+\n+  return result;\n+}\n+\n+\n+gfc_expr *\n+gfc_simplify_isnan (gfc_expr *x)\n+{\n+  gfc_expr *result;\n+\n+  if (x->expr_type != EXPR_CONSTANT)\n+    return NULL;\n+\n+  result = gfc_constant_result (BT_LOGICAL, gfc_default_logical_kind,\n+\t\t\t\t&x->where);\n+  result->value.logical = mpfr_nan_p (x->value.real);\n+\n+  return result;\n+}\n+\n+\n gfc_expr *\n gfc_simplify_ishft (gfc_expr *e, gfc_expr *s)\n {"}, {"sha": "e7368987dccb30f4b320bb687a0fa50dfeda7893", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ec80803fba73fe898bfc42c57b236c1ca98aaf1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ec80803fba73fe898bfc42c57b236c1ca98aaf1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4ec80803fba73fe898bfc42c57b236c1ca98aaf1", "patch": "@@ -1,3 +1,9 @@\n+2009-06-11  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/38718\n+\t* gfortran.dg/is_iostat_end_eor_2.f90: New test.\n+\t* gfortran.dg/nan_5.f90: New test.\n+\n 2009-06-10  Nathan Froyd  <froydnj@codesourcery.com>\n \n \t* gcc.target/arm/neon-modes-1.c: New test."}, {"sha": "eda9d31df1965de27d41bbdb449d32c9a91b2712", "filename": "gcc/testsuite/gfortran.dg/is_iostat_end_eor_2.f90", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ec80803fba73fe898bfc42c57b236c1ca98aaf1/gcc%2Ftestsuite%2Fgfortran.dg%2Fis_iostat_end_eor_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ec80803fba73fe898bfc42c57b236c1ca98aaf1/gcc%2Ftestsuite%2Fgfortran.dg%2Fis_iostat_end_eor_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fis_iostat_end_eor_2.f90?ref=4ec80803fba73fe898bfc42c57b236c1ca98aaf1", "patch": "@@ -0,0 +1,39 @@\n+! Check that we correctly simplify IS_IOSTAT_END and IS_IOSTAT_EOR.\n+! Not very useful, but required by the standards\n+!\n+! This test relies on the error numbers for END and EOR being -1 and -2.\n+! This is good to actual\n+!\n+! { dg-do compile }\n+!\n+\n+  use iso_fortran_env, only : iostat_end, iostat_eor\n+  implicit none\n+\n+  integer(kind=merge(4, 0, is_iostat_end(-1))) :: a\n+  integer(kind=merge(4, 0, is_iostat_end(-1_1))) :: b\n+  integer(kind=merge(4, 0, is_iostat_end(-1_2))) :: c\n+  integer(kind=merge(4, 0, is_iostat_end(-1_4))) :: d\n+  integer(kind=merge(4, 0, is_iostat_end(-1_8))) :: e\n+\n+  integer(kind=merge(4, 0, is_iostat_eor(-2))) :: f\n+  integer(kind=merge(4, 0, is_iostat_eor(-2_1))) :: g\n+  integer(kind=merge(4, 0, is_iostat_eor(-2_2))) :: h\n+  integer(kind=merge(4, 0, is_iostat_eor(-2_4))) :: i\n+  integer(kind=merge(4, 0, is_iostat_eor(-2_8))) :: j\n+\n+  integer(kind=merge(0, 4, is_iostat_eor(-1))) :: k\n+  integer(kind=merge(0, 4, is_iostat_end(-2))) :: l\n+\n+  integer(kind=merge(0, 4, is_iostat_eor(0))) :: m\n+  integer(kind=merge(0, 4, is_iostat_end(0))) :: n\n+\n+  integer(kind=merge(4, 0, is_iostat_end(0))) :: o ! { dg-error \"not supported for type\" }\n+  integer(kind=merge(4, 0, is_iostat_eor(0))) :: p ! { dg-error \"not supported for type\" }\n+\n+  integer(kind=merge(4, 0, is_iostat_eor(iostat_eor))) :: q\n+  integer(kind=merge(4, 0, is_iostat_end(iostat_end))) :: r\n+  integer(kind=merge(0, 4, is_iostat_end(iostat_eor))) :: s\n+  integer(kind=merge(0, 4, is_iostat_eor(iostat_end))) :: t\n+\n+  end"}, {"sha": "64886bed0cff3bda79c3a4c90b22aa4c08cbb9f1", "filename": "gcc/testsuite/gfortran.dg/nan_5.f90", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ec80803fba73fe898bfc42c57b236c1ca98aaf1/gcc%2Ftestsuite%2Fgfortran.dg%2Fnan_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ec80803fba73fe898bfc42c57b236c1ca98aaf1/gcc%2Ftestsuite%2Fgfortran.dg%2Fnan_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fnan_5.f90?ref=4ec80803fba73fe898bfc42c57b236c1ca98aaf1", "patch": "@@ -0,0 +1,28 @@\n+! Check that we correctly simplify ISNAN\n+!\n+! { dg-do compile }\n+!\n+! { dg-options \"-fno-range-check\" }\n+! { dg-options \"-fno-range-check -mieee\" { target alpha*-*-* sh*-*-* } }\n+! { dg-skip-if \"NaN not supported\" { spu-*-* } { \"*\" } { \"\" } }\n+\n+  implicit none\n+  real, parameter :: inf = 2 * huge(inf)\n+  real, parameter :: nan1 = 0. / 0.\n+  real, parameter :: nan2 = 1.5 * nan1\n+  real, parameter :: nan3 = inf / inf\n+  real, parameter :: nan4 = inf - inf\n+  real, parameter :: nan5 = 0. * inf\n+  real, parameter :: normal = 42.\n+\n+  integer(kind=merge(4, 0, isnan(nan1))) :: a\n+  integer(kind=merge(4, 0, isnan(nan2))) :: b\n+  integer(kind=merge(4, 0, isnan(nan3))) :: c\n+  integer(kind=merge(4, 0, isnan(nan4))) :: d\n+  integer(kind=merge(4, 0, isnan(nan5))) :: e\n+\n+  integer(kind=merge(0, 4, isnan(inf))) :: f\n+  integer(kind=merge(0, 4, isnan(-inf))) :: g\n+  integer(kind=merge(0, 4, isnan(normal))) :: h\n+\n+  end"}]}