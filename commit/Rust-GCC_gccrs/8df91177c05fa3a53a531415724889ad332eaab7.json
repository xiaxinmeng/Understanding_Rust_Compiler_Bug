{"sha": "8df91177c05fa3a53a531415724889ad332eaab7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRmOTExNzdjMDVmYTNhNTNhNTMxNDE1NzI0ODg5YWQzMzJlYWFiNw==", "commit": {"author": {"name": "David O'Brien", "email": "obrien@FreeBSD.org", "date": "2002-11-01T22:19:38Z"}, "committer": {"name": "David O'Brien", "email": "obrien@gcc.gnu.org", "date": "2002-11-01T22:19:38Z"}, "message": "freebsd.h (CPP_CPU64_DEFAULT_SPEC): Define __arch64__.\n\n2002-11-01  David O'Brien  <obrien@FreeBSD.org>\n\t* config/sparc/freebsd.h (CPP_CPU64_DEFAULT_SPEC): Define __arch64__.\n\t(TRANSFER_FROM_TRAMPOLINE): Reformat.\n\tAdd comment.\n\nApproved by:  Mark Mitchell <mark@codesourcery.com>\n              Message-ID: <15490000.1036182355@warlock.codesourcery.com>\n\nFrom-SVN: r58730", "tree": {"sha": "42aa59b6a42d767d23b6b46aa238a7ccc51b9222", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42aa59b6a42d767d23b6b46aa238a7ccc51b9222"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8df91177c05fa3a53a531415724889ad332eaab7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8df91177c05fa3a53a531415724889ad332eaab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8df91177c05fa3a53a531415724889ad332eaab7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8df91177c05fa3a53a531415724889ad332eaab7/comments", "author": null, "committer": null, "parents": [{"sha": "616dc555ce0c2993ab791afc0623f5b7ed830778", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/616dc555ce0c2993ab791afc0623f5b7ed830778", "html_url": "https://github.com/Rust-GCC/gccrs/commit/616dc555ce0c2993ab791afc0623f5b7ed830778"}], "stats": {"total": 60, "additions": 31, "deletions": 29}, "files": [{"sha": "20e95b7000aa0ced5cba05372e56f56a56174d2a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8df91177c05fa3a53a531415724889ad332eaab7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8df91177c05fa3a53a531415724889ad332eaab7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8df91177c05fa3a53a531415724889ad332eaab7", "patch": "@@ -1,3 +1,9 @@\n+2002-11-01  David O'Brien  <obrien@FreeBSD.org>\n+\n+\t* config/sparc/freebsd.h (CPP_CPU64_DEFAULT_SPEC): Define __arch64__.\n+\t(TRANSFER_FROM_TRAMPOLINE): Reformat.\n+\tAdd comment.\n+\n 2002-11-01  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* config/h8300/h8300.h (CAN_ELIMINATE): Simplify."}, {"sha": "a220b06bedf9f9ac5c4db98b0f47d876711fa76b", "filename": "gcc/config/sparc/freebsd.h", "status": "modified", "additions": 25, "deletions": 29, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8df91177c05fa3a53a531415724889ad332eaab7/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8df91177c05fa3a53a531415724889ad332eaab7/gcc%2Fconfig%2Fsparc%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Ffreebsd.h?ref=8df91177c05fa3a53a531415724889ad332eaab7", "patch": "@@ -18,11 +18,13 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n-/* FreeBSD needs's the platform name (sparc64) defined.  */\n+/* FreeBSD needs's the platform name (sparc64) defined.\n+   Emacs needs to know if the arch is 64 or 32-bits.  */\n \n #undef  CPP_CPU64_DEFAULT_SPEC\n-#define CPP_CPU64_DEFAULT_SPEC \"-D__sparc64__ -D__sparc_v9__\"\n+#define CPP_CPU64_DEFAULT_SPEC \"-D__sparc64__ -D__sparc_v9__ -D__arch64__\"\n \n+/* Because we include sparc/sysv4.h.  */\n #undef  CPP_PREDEFINES\n #define CPP_PREDEFINES FBSD_CPP_PREDEFINES\n \n@@ -97,35 +99,29 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n #define SPARC_DEFAULT_CMODEL\tCM_MEDLOW\n \n #define TRANSFER_FROM_TRAMPOLINE\t\t\t\t\t\\\n-static int need_enable_exec_stack;\t\t\t\t\t\\\n+  static int need_enable_exec_stack;\t\t\t\t\t\\\n+  static void check_enabling(void) __attribute__ ((constructor));\t\\\n+  static void check_enabling(void)\t\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    extern int sysctlbyname(const char *, void *, size_t *, void *, size_t);\\\n+    int prot = 0;\t\t\t\t\t\t\t\\\n+    size_t len = sizeof(prot);\t\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n-static void check_enabling(void) __attribute__ ((constructor));\t\t\\\n-static void check_enabling(void)\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  extern int sysctlbyname(const char *, void *, size_t *, void *, size_t);\\\n-  size_t len;\t\t\t\t\t\t\t\t\\\n-  int prot;\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-  prot = 0;\t\t\t\t\t\t\t\t\\\n-  len = sizeof(prot);\t\t\t\t\t\t\t\\\n-  sysctlbyname (\"kern.stackprot\", &prot, &len, NULL, 0);\t\t\\\n-  if (prot != 7)\t\t\t\t\t\t\t\\\n-    need_enable_exec_stack = 1;\t\t\t\t\t\t\\\n-}\t\t\t\t\t\t\t\t\t\\\n-\t\t\t\t\t\t\t\t\t\\\n-extern void __enable_execute_stack (void *);\t\t\t\t\\\n-void\t\t\t\t\t\t\t\t\t\\\n-__enable_execute_stack (addr)\t\t\t\t\t\t\\\n-     void *addr;\t\t\t\t\t\t\t\\\n-{\t\t\t\t\t\t\t\t\t\\\n-  if (!need_enable_exec_stack)\t\t\t\t\t\t\\\n-    return;\t\t\t\t\t\t\t\t\\\n-  else {\t\t\t\t\t\t\t\t\\\n-    /* 7 is PROT_READ | PROT_WRITE | PROT_EXEC */ \t\t\t\\\n-    if (mprotect (addr, TRAMPOLINE_SIZE, 7) < 0)\t\t\t\\\n-      perror (\"mprotect of trampoline code\");\t\t\t\t\\\n+    sysctlbyname (\"kern.stackprot\", &prot, &len, NULL, 0);\t\t\\\n+    if (prot != 7)\t\t\t\t\t\t\t\\\n+      need_enable_exec_stack = 1;\t\t\t\t\t\\\n   }\t\t\t\t\t\t\t\t\t\\\n-}\n+  extern void __enable_execute_stack (void *);\t\t\t\t\\\n+  void __enable_execute_stack (void *addr)\t\t\t\t\\\n+  {\t\t\t\t\t\t\t\t\t\\\n+    if (!need_enable_exec_stack)\t\t\t\t\t\\\n+      return;\t\t\t\t\t\t\t\t\\\n+    else {\t\t\t\t\t\t\t\t\\\n+      /* 7 is PROT_READ | PROT_WRITE | PROT_EXEC */ \t\t\t\\\n+      if (mprotect (addr, TRAMPOLINE_SIZE, 7) < 0)\t\t\t\\\n+        perror (\"mprotect of trampoline code\");\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\t\\\n+  }\n \n \n /************************[  Assembler stuff  ]********************************/"}]}