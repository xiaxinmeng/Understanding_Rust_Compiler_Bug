{"sha": "91594e4329d7b2b70ea5715e560f0e43458d7837", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTE1OTRlNDMyOWQ3YjJiNzBlYTU3MTVlNTYwZjBlNDM0NThkNzgzNw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-19T05:33:47Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-09-19T05:33:47Z"}, "message": "(subst_constants): Do substitute in address of MEM dest.\n\nFrom-SVN: r2162", "tree": {"sha": "e7d30f9a7e8d3439222df88c4f5205cf0020f8c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7d30f9a7e8d3439222df88c4f5205cf0020f8c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91594e4329d7b2b70ea5715e560f0e43458d7837", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91594e4329d7b2b70ea5715e560f0e43458d7837", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91594e4329d7b2b70ea5715e560f0e43458d7837", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91594e4329d7b2b70ea5715e560f0e43458d7837/comments", "author": null, "committer": null, "parents": [{"sha": "65701fd2476d9c1412c899d97d01902dbc3e1fb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65701fd2476d9c1412c899d97d01902dbc3e1fb3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65701fd2476d9c1412c899d97d01902dbc3e1fb3"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "424f9a6ede6bc353a9470f67d1d4c83c6e98535b", "filename": "gcc/integrate.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91594e4329d7b2b70ea5715e560f0e43458d7837/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91594e4329d7b2b70ea5715e560f0e43458d7837/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=91594e4329d7b2b70ea5715e560f0e43458d7837", "patch": "@@ -2346,7 +2346,8 @@ subst_constants (loc, insn, map)\n \tsrc = SET_SRC (x);\n \n \twhile (GET_CODE (*dest_loc) == ZERO_EXTRACT\n-\t       || GET_CODE (*dest_loc) == SIGN_EXTRACT\n+\t       /* By convention, we always use ZERO_EXTRACT in the dest.  */\n+/*\t       || GET_CODE (*dest_loc) == SIGN_EXTRACT */\n \t       || GET_CODE (*dest_loc) == SUBREG\n \t       || GET_CODE (*dest_loc) == STRICT_LOW_PART)\n \t  {\n@@ -2358,6 +2359,10 @@ subst_constants (loc, insn, map)\n \t    dest_loc = &XEXP (*dest_loc, 0);\n \t  }\n \n+\t/* Do substitute in the address of a destination in memory.  */\n+\tif (GET_CODE (*dest_loc) == MEM)\n+\t  subst_constants (&XEXP (*dest_loc, 0), insn, map);\n+\n \t/* Check for the case of DEST a SUBREG, both it and the underlying\n \t   register are less than one word, and the SUBREG has the wider mode.\n \t   In the case, we are really setting the underlying register to the"}]}