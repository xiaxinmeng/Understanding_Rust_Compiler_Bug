{"sha": "1a277d94fe2581d1d51a77fd25ae9c3cec1b75c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWEyNzdkOTRmZTI1ODFkMWQ1MWE3N2ZkMjVhZTljM2NlYzFiNzVjMg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-06-25T10:51:45Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-06-25T10:51:45Z"}, "message": "stl_algobase.h (fill, fill_n): Tighten the dispatch: use iterator_traits<>::value_type, not _Tp.\n\n2004-06-25  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/bits/stl_algobase.h (fill, fill_n): Tighten the\n\tdispatch: use iterator_traits<>::value_type, not _Tp.\n\nFrom-SVN: r83648", "tree": {"sha": "31726c02d5a61f273186e2e27943faa4aeecfd62", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/31726c02d5a61f273186e2e27943faa4aeecfd62"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a277d94fe2581d1d51a77fd25ae9c3cec1b75c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a277d94fe2581d1d51a77fd25ae9c3cec1b75c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a277d94fe2581d1d51a77fd25ae9c3cec1b75c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a277d94fe2581d1d51a77fd25ae9c3cec1b75c2/comments", "author": null, "committer": null, "parents": [{"sha": "68d560d4d612ad0683bae7b36708ef88685316c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68d560d4d612ad0683bae7b36708ef88685316c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68d560d4d612ad0683bae7b36708ef88685316c5"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "3e76dd7747475e7c31966a5652037af80ed0f4cf", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a277d94fe2581d1d51a77fd25ae9c3cec1b75c2/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a277d94fe2581d1d51a77fd25ae9c3cec1b75c2/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1a277d94fe2581d1d51a77fd25ae9c3cec1b75c2", "patch": "@@ -1,3 +1,8 @@\n+2004-06-25  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/bits/stl_algobase.h (fill, fill_n): Tighten the\n+\tdispatch: use iterator_traits<>::value_type, not _Tp.\n+\n 2004-06-25  Paolo Carlini  <pcarlini@suse.de>\n \n \t* testsuite/25_algorithms/fill/1.cc: Tweak instantiations."}, {"sha": "1259f9576895a4f11fa1e5d4e887fd9f9902476b", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a277d94fe2581d1d51a77fd25ae9c3cec1b75c2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a277d94fe2581d1d51a77fd25ae9c3cec1b75c2/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=1a277d94fe2581d1d51a77fd25ae9c3cec1b75c2", "patch": "@@ -546,7 +546,8 @@ namespace std\n \t\t\t\t  _ForwardIterator>)\n       __glibcxx_requires_valid_range(__first, __last);\n \n-      typedef typename __type_traits<_Tp>::has_trivial_copy_constructor\n+      typedef typename iterator_traits<_ForwardIterator>::value_type _ValueType;\n+      typedef typename __type_traits<_ValueType>::has_trivial_copy_constructor\n \t_Trivial;\n       std::__fill<_Trivial>::fill(__first, __last, __value);\n     }\n@@ -621,7 +622,8 @@ namespace std\n       // concept requirements\n       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator, _Tp>)\n \n-      typedef typename __type_traits<_Tp>::has_trivial_copy_constructor\n+      typedef typename iterator_traits<_OutputIterator>::value_type _ValueType;\n+      typedef typename __type_traits<_ValueType>::has_trivial_copy_constructor\n \t_Trivial;\n       return std::__fill_n<_Trivial>::fill_n(__first, __n, __value);\n     }"}]}