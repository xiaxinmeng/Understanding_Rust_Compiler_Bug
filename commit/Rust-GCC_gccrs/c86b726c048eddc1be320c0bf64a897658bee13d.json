{"sha": "c86b726c048eddc1be320c0bf64a897658bee13d", "node_id": "C_kwDOANBUbNoAKGM4NmI3MjZjMDQ4ZWRkYzFiZTMyMGMwYmY2NGE4OTc2NThiZWUxM2Q", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2022-05-18T18:03:26Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2022-05-18T18:10:24Z"}, "message": "x86: Fix -fsplit-stack feature detection via  TARGET_CAN_SPLIT_STACK\n\nSince commit c163647ffbc9a20c8feb6e079dbecccfe016c82e -fsplit-stack\nis only supported on glibc targets. However, this original commit\nrequired some fixups. As part of the fixup, the changes to the\ngnu-user-common.h and gnu.h were partially reverted in commit\n60953a23d57b13a672f751bec0c6eefc059eb1ab thus causing TARGET_CAN_SPLIT_STACK\nto be defined for non-glibc targets even though -fsplit-stack is\nactually not supported and attempting to use it causes a runtime error.\n\nThis causes gcc internal code, such as ./gcc/go/gospec.c to not\ncorrectly detect that -fsplit-stack is not supported and thus causes\ngccgo to fail compilation on non-glibc targets.\n\nThis commit ensures that TARGET_CAN_SPLIT_STACK is only set if the\ndefault libc is glibc. It is presently unclear to me if there is a\nbetter way to detect glibc at pre-processor time.\n\nThe proposed changes have been tested on x86 and x86_64 Alpine Linux\n(which uses musl libc) and fix compilation of gccgo for this target.\n\nSigned-off-by: S\u00f6ren Tempel <soeren@soeren-tempel.net>\n\ngcc/ChangeLog:\n\n\t* config/i386/gnu-user-common.h (defined): Only define\n\tTARGET_CAN_SPLIT_STACK for glibc targets.\n\t* config/i386/gnu.h (defined): Ditto.", "tree": {"sha": "921ab388e44b00021d9d26c90ce560acca572bd8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/921ab388e44b00021d9d26c90ce560acca572bd8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c86b726c048eddc1be320c0bf64a897658bee13d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c86b726c048eddc1be320c0bf64a897658bee13d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c86b726c048eddc1be320c0bf64a897658bee13d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c86b726c048eddc1be320c0bf64a897658bee13d/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a9be8d51182076222d707d9d68f6eda78e8ee2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a9be8d51182076222d707d9d68f6eda78e8ee2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a9be8d51182076222d707d9d68f6eda78e8ee2c"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "cab9be2bfb7c25527210c49ac0035521086655ca", "filename": "gcc/config/i386/gnu-user-common.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86b726c048eddc1be320c0bf64a897658bee13d/gcc%2Fconfig%2Fi386%2Fgnu-user-common.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86b726c048eddc1be320c0bf64a897658bee13d/gcc%2Fconfig%2Fi386%2Fgnu-user-common.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu-user-common.h?ref=c86b726c048eddc1be320c0bf64a897658bee13d", "patch": "@@ -66,7 +66,8 @@ along with GCC; see the file COPYING3.  If not see\n #define STACK_CHECK_STATIC_BUILTIN 1\n \n /* We only build the -fsplit-stack support in libgcc if the\n-   assembler has full support for the CFI directives.  */\n-#if HAVE_GAS_CFI_PERSONALITY_DIRECTIVE\n+   assembler has full support for the CFI directives.  Also\n+   we only support -fsplit-stack on glibc targets.  */\n+#if (DEFAULT_LIBC == LIBC_GLIBC) && HAVE_GAS_CFI_PERSONALITY_DIRECTIVE\n #define TARGET_CAN_SPLIT_STACK\n #endif"}, {"sha": "fb8d69a97d836e430f263b89f986259230681290", "filename": "gcc/config/i386/gnu.h", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c86b726c048eddc1be320c0bf64a897658bee13d/gcc%2Fconfig%2Fi386%2Fgnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c86b726c048eddc1be320c0bf64a897658bee13d/gcc%2Fconfig%2Fi386%2Fgnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fgnu.h?ref=c86b726c048eddc1be320c0bf64a897658bee13d", "patch": "@@ -41,8 +41,9 @@ along with GCC.  If not, see <http://www.gnu.org/licenses/>.\n #define TARGET_THREAD_SSP_OFFSET        0x14\n \n /* We only build the -fsplit-stack support in libgcc if the\n-   assembler has full support for the CFI directives.  */\n-#if HAVE_GAS_CFI_PERSONALITY_DIRECTIVE\n+   assembler has full support for the CFI directives.  Also\n+   we only support -fsplit-stack on glibc targets.  */\n+#if (DEFAULT_LIBC == LIBC_GLIBC) && HAVE_GAS_CFI_PERSONALITY_DIRECTIVE\n #define TARGET_CAN_SPLIT_STACK\n #endif\n /* We steal the last transactional memory word.  */"}]}