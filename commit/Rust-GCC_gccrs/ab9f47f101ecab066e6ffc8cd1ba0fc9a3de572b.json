{"sha": "ab9f47f101ecab066e6ffc8cd1ba0fc9a3de572b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWI5ZjQ3ZjEwMWVjYWIwNjZlNmZmYzhjZDFiYTBmYzlhM2RlNTcyYg==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2005-11-15T14:01:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-11-15T14:01:18Z"}, "message": "prj-ext.adb: Take into account new environment variable GPR_PROJECT_PATH.\n\n2005-11-14  Vincent Celier  <celier@adacore.com>\n\n\t* prj-ext.adb: Take into account new environment variable\n\tGPR_PROJECT_PATH. Warn if both GPR_PROJECT_PATH and ADA_PROJECT_PATH\n\tare defined.\n\t(Prj.Ext elaboration): For each directory in the ADA_PROJECT_PATH,\n\tnormalize its path name, making it absolute and resolving symbolic\n\tlinks, and replace the original if resolved path is different.\n\nFrom-SVN: r106994", "tree": {"sha": "d5cb14058ecf91d08aab780d73497567f1722796", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5cb14058ecf91d08aab780d73497567f1722796"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ab9f47f101ecab066e6ffc8cd1ba0fc9a3de572b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab9f47f101ecab066e6ffc8cd1ba0fc9a3de572b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab9f47f101ecab066e6ffc8cd1ba0fc9a3de572b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab9f47f101ecab066e6ffc8cd1ba0fc9a3de572b/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3c43f85317a0b6ff48231b34ec443254ca132a02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c43f85317a0b6ff48231b34ec443254ca132a02", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c43f85317a0b6ff48231b34ec443254ca132a02"}], "stats": {"total": 60, "additions": 51, "deletions": 9}, "files": [{"sha": "c92ca9ffa2084f73664ce447d577b87959439d0a", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 51, "deletions": 9, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ab9f47f101ecab066e6ffc8cd1ba0fc9a3de572b/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ab9f47f101ecab066e6ffc8cd1ba0fc9a3de572b/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=ab9f47f101ecab066e6ffc8cd1ba0fc9a3de572b", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---             Copyright (C) 2000-2005 Free Software Foundation, Inc.       --\n+--          Copyright (C) 2000-2005, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -25,25 +25,30 @@\n ------------------------------------------------------------------------------\n \n with Namet;   use Namet;\n+with Output;  use Output;\n with Osint;   use Osint;\n with Sdefault;\n+\n with GNAT.HTable;\n \n package body Prj.Ext is\n \n+   Gpr_Project_Path : constant String := \"GPR_PROJECT_PATH\";\n    Ada_Project_Path : constant String := \"ADA_PROJECT_PATH\";\n-   --  Name of the env. variable that contains path name(s) of directories\n-   --  where project files may reside.\n+   --  Name of the env. variables that contain path name(s) of directories\n+   --  where project files may reside. GPR_PROJECT_PATH has precedence over\n+   --  ADA_PROJECT_PATH.\n \n-   Prj_Path : constant String_Access := Getenv (Ada_Project_Path);\n+   Gpr_Prj_Path : constant String_Access := Getenv (Gpr_Project_Path);\n+   Ada_Prj_Path : constant String_Access := Getenv (Ada_Project_Path);\n    --  The path name(s) of directories where project files may reside.\n    --  May be empty.\n \n    No_Project_Default_Dir : constant String := \"-\";\n \n    Current_Project_Path : String_Access;\n-   --  The project path; initialized during elaboration of package\n-   --  Contains at least the current working directory.\n+   --  The project path. Initialized during elaboration of package Contains at\n+   --  least the current working directory.\n \n    package Htable is new GNAT.HTable.Simple_HTable\n      (Header_Num => Header_Num,\n@@ -152,8 +157,7 @@ package body Prj.Ext is\n          return The_Value;\n       end if;\n \n-      --  Find if it is an environment.\n-      --  If it is, put the value in the hash table.\n+      --  Find if it is an environment, if it is, put value in the hash table\n \n       declare\n          Env_Value : String_Access := Getenv (Name);\n@@ -181,14 +185,30 @@ begin\n       Add_Default_Dir : Boolean := True;\n       First           : Positive;\n       Last            : Positive;\n+      New_Len         : Positive;\n+      New_Last        : Positive;\n+      Prj_Path        : String_Access := Gpr_Prj_Path;\n \n    begin\n+      if Gpr_Prj_Path.all /= \"\" then\n+\n+         --  Warn if both environment variables are defined\n+\n+         if Ada_Prj_Path.all /= \"\" then\n+            Write_Line (\"Warning: ADA_PROJECT_PATH is not taken into account\");\n+            Write_Line (\"         when GPR_PROJECT_PATH is defined\");\n+         end if;\n+\n+      else\n+         Prj_Path := Ada_Prj_Path;\n+      end if;\n+\n       --  The current directory is always first\n \n       Name_Len := 1;\n       Name_Buffer (Name_Len) := '.';\n \n-      --  If env. var. is defined and not empty, add its content\n+      --  If environment variable is defined and not empty, add its content\n \n       if Prj_Path.all /= \"\" then\n          Name_Len := Name_Len + 1;\n@@ -198,6 +218,7 @@ begin\n \n          --  Scan the directory path to see if \"-\" is one of the directories.\n          --  Remove each occurence of \"-\" and set Add_Default_Dir to False.\n+         --  Also resolve relative paths and symbolic links.\n \n          First := 3;\n          loop\n@@ -229,6 +250,27 @@ begin\n                end loop;\n \n                Name_Len := Name_Len - No_Project_Default_Dir'Length - 1;\n+\n+            else\n+               declare\n+                  New_Dir : constant String :=\n+                             Normalize_Pathname (Name_Buffer (First .. Last));\n+               begin\n+                  --  If the absolute path was resolved and is different from\n+                  --  the original, replace original with the resolved path.\n+\n+                  if New_Dir /= Name_Buffer (First .. Last)\n+                    and then New_Dir'Length /= 0\n+                  then\n+                     New_Len := Name_Len + New_Dir'Length - (Last - First + 1);\n+                     New_Last := First + New_Dir'Length - 1;\n+                     Name_Buffer (New_Last + 1 .. New_Len) :=\n+                       Name_Buffer (Last + 1 .. Name_Len);\n+                     Name_Buffer (First .. New_Last) := New_Dir;\n+                     Name_Len := New_Len;\n+                     Last := New_Last;\n+                  end if;\n+               end;\n             end if;\n \n             First := Last + 1;"}]}