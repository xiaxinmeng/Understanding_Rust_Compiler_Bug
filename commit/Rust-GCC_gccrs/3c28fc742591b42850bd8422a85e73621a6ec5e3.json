{"sha": "3c28fc742591b42850bd8422a85e73621a6ec5e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MyOGZjNzQyNTkxYjQyODUwYmQ4NDIyYTg1ZTczNjIxYTZlYzVlMw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2003-12-08T23:15:30Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2003-12-08T23:15:30Z"}, "message": "name-lookup.c, [...]: Revert Giovanni's patch from yesterday.\n\n        * name-lookup.c, init.c, except.c: Revert Giovanni's patch from\n        yesterday.\n\nFrom-SVN: r74446", "tree": {"sha": "8695b2300a9ac19f099cd8b376cdf41864b90b9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8695b2300a9ac19f099cd8b376cdf41864b90b9e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c28fc742591b42850bd8422a85e73621a6ec5e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c28fc742591b42850bd8422a85e73621a6ec5e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c28fc742591b42850bd8422a85e73621a6ec5e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c28fc742591b42850bd8422a85e73621a6ec5e3/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1616b0d5f93a326e8b692f5cc09a097c79e8844f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1616b0d5f93a326e8b692f5cc09a097c79e8844f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1616b0d5f93a326e8b692f5cc09a097c79e8844f"}], "stats": {"total": 38, "additions": 11, "deletions": 27}, "files": [{"sha": "63c8ce776cd3f6b9ed248d179ee06b8e3d03017c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c28fc742591b42850bd8422a85e73621a6ec5e3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c28fc742591b42850bd8422a85e73621a6ec5e3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3c28fc742591b42850bd8422a85e73621a6ec5e3", "patch": "@@ -1,5 +1,8 @@\n 2003-12-08  Jason Merrill  <jason@redhat.com>\n \n+\t* name-lookup.c, init.c, except.c: Revert Giovanni's patch from\n+\tyesterday.\n+\n \tGive the anonymous namespace a null DECL_NAME.\n \t* cp-tree.h: Don't declare anonymous_namespace_name.\n \t* decl.c: Don't define it."}, {"sha": "1d4e7668d1c236225dfaa7329f63750175609f67", "filename": "gcc/cp/except.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c28fc742591b42850bd8422a85e73621a6ec5e3/gcc%2Fcp%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c28fc742591b42850bd8422a85e73621a6ec5e3/gcc%2Fcp%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexcept.c?ref=3c28fc742591b42850bd8422a85e73621a6ec5e3", "patch": "@@ -645,11 +645,6 @@ build_throw (tree exp)\n \t  tmp = build_function_type (ptr_type_node, tmp);\n \t  fn = push_throw_library_fn (fn, tmp);\n \t}\n-      else if (really_overloaded_fn (fn))\n-\t{\r\n-\t  error (\"`%D' should never be overloaded\", fn);\n-\t  return error_mark_node;\r\n-\t}\n       fn = OVL_CURRENT (fn);\n       exp = build_function_call (fn, tree_cons (NULL_TREE, exp, NULL_TREE));\n     }"}, {"sha": "21b0032d16f2a995397e24374b04c8aedcb820fa", "filename": "gcc/cp/init.c", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c28fc742591b42850bd8422a85e73621a6ec5e3/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c28fc742591b42850bd8422a85e73621a6ec5e3/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=3c28fc742591b42850bd8422a85e73621a6ec5e3", "patch": "@@ -2005,18 +2005,11 @@ build_new_1 (tree exp)\n       tree class_size = size_in_bytes (true_type);\n       static const char alloc_name[] = \"_Jv_AllocObject\";\n       use_java_new = 1;\n-      if (!get_global_value_if_present (get_identifier (alloc_name), \n-\t\t\t\t\t&alloc_decl))\n-\t{\r\n-\t  error (\"call to Java constructor with `%s' undefined\", alloc_name);\n-\t  return error_mark_node;\n-\t}\n-      else if (really_overloaded_fn (alloc_decl))\n-\t{\r\n-\t  error (\"`%D' should never be overloaded\", alloc_decl);\n-\t  return error_mark_node;\n-\t}\n-      alloc_decl = OVL_CURRENT (alloc_decl);\n+      alloc_decl = IDENTIFIER_GLOBAL_VALUE (get_identifier (alloc_name));\n+      if (alloc_decl == NULL_TREE)\n+      fatal_error (\"call to Java constructor with `%s' undefined\",\n+                   alloc_name);\n+\n       class_addr = build1 (ADDR_EXPR, jclass_node, class_decl);\n       alloc_call = (build_function_call\n \t\t    (alloc_decl,"}, {"sha": "ec8a63427c6d770bf045c0afabf2fc384765d41f", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c28fc742591b42850bd8422a85e73621a6ec5e3/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c28fc742591b42850bd8422a85e73621a6ec5e3/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=3c28fc742591b42850bd8422a85e73621a6ec5e3", "patch": "@@ -2006,11 +2006,7 @@ push_overloaded_decl (tree decl, int flags)\n \t}\n     }\n \n-  /* FIXME: We should build OVERLOADs for all function declarations here.\n-     But right now, there are too many places where the code creates an\n-     artificial declaration and expects the name to be bound exactly\n-     to a FUNCTION_DECL.  */\n-  if (!DECL_ARTIFICIAL (decl))\n+  if (old || TREE_CODE (decl) == TEMPLATE_DECL)\n     {\n       if (old && TREE_CODE (old) != OVERLOAD)\n \tnew_binding = ovl_cons (decl, ovl_cons (old, NULL_TREE));\n@@ -2020,6 +2016,7 @@ push_overloaded_decl (tree decl, int flags)\n \tOVL_USED (new_binding) = 1;\n     }\n   else\n+    /* NAME is not ambiguous.  */\n     new_binding = decl;\n \n   if (doing_global)\n@@ -2877,11 +2874,7 @@ set_namespace_binding (tree name, tree scope, tree val)\n   if (scope == NULL_TREE)\n     scope = global_namespace;\n   b = binding_for_name (NAMESPACE_LEVEL (scope), name);\n-  if (!b->value\n-      /* If OVL_CHAIN is NULL, it's the first FUNCTION_DECL for this name,\n-       and we still need to call supplement_binding.  */\n-      || (TREE_CODE (val) == OVERLOAD && OVL_CHAIN (val))\n-      || val == error_mark_node)\n+  if (!b->value || TREE_CODE (val) == OVERLOAD || val == error_mark_node)\n     b->value = val;\n   else\n     supplement_binding (b, val);"}]}