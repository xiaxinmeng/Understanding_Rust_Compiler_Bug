{"sha": "d938569cebfece2811f4242f067c21779edb8b76", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDkzODU2OWNlYmZlY2UyODExZjQyNDJmMDY3YzIxNzc5ZWRiOGI3Ng==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-08-31T22:59:23Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2004-08-31T22:59:23Z"}, "message": "Add missing newlines at two function headers\n\nFrom-SVN: r86850", "tree": {"sha": "e025605bd62fa448bd4ed333a10484868f2372f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e025605bd62fa448bd4ed333a10484868f2372f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d938569cebfece2811f4242f067c21779edb8b76", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d938569cebfece2811f4242f067c21779edb8b76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d938569cebfece2811f4242f067c21779edb8b76", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d938569cebfece2811f4242f067c21779edb8b76/comments", "author": null, "committer": null, "parents": [{"sha": "a4e9ffe59171f4ae43e329f0cc1dd919bac27226", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4e9ffe59171f4ae43e329f0cc1dd919bac27226", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4e9ffe59171f4ae43e329f0cc1dd919bac27226"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "de6b8ec60f4f43026302e57f5bcdc4415c55a759", "filename": "gcc/tree.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d938569cebfece2811f4242f067c21779edb8b76/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d938569cebfece2811f4242f067c21779edb8b76/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=d938569cebfece2811f4242f067c21779edb8b76", "patch": "@@ -430,15 +430,17 @@ copy_list (tree list)\n \f\n /* Create an INT_CST node with a LOW value sign extended.  */\n \n-tree build_int_cst (tree type, HOST_WIDE_INT low)\n+tree\n+build_int_cst (tree type, HOST_WIDE_INT low)\n {\n   return build_int_cst_wide (type, low,\n \t\t\t     low < 0 ? -1 : 0);\n }\n \n /* Create an INT_CST node with a LOW value zero extended.  */\n \n-tree build_int_cstu (tree type, unsigned HOST_WIDE_INT low)\n+tree\n+build_int_cstu (tree type, unsigned HOST_WIDE_INT low)\n {\n   return build_int_cst_wide (type, low, 0);\n }"}]}