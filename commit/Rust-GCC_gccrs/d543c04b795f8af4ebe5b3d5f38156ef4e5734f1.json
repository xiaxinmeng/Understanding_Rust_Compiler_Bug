{"sha": "d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU0M2MwNGI3OTVmOGFmNGViZTViM2Q1ZjM4MTU2ZWY0ZTU3MzRmMQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-01-14T14:40:01Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-01-14T14:40:01Z"}, "message": "x86: Add -mindirect-branch-register\n\nAdd -mindirect-branch-register to force indirect branch via register.\nThis is implemented by disabling patterns of indirect branch via memory,\nsimilar to TARGET_X32.\n\n-mindirect-branch= and -mfunction-return= tests are updated with\n-mno-indirect-branch-register to avoid false test failures when\n-mindirect-branch-register is added to RUNTESTFLAGS for \"make check\".\n\ngcc/\n\n\t* config/i386/constraints.md (Bs): Disallow memory operand for\n\t-mindirect-branch-register.\n\t(Bw): Likewise.\n\t* config/i386/predicates.md (indirect_branch_operand): Likewise.\n\t(GOT_memory_operand): Likewise.\n\t(call_insn_operand): Likewise.\n\t(sibcall_insn_operand): Likewise.\n\t(GOT32_symbol_operand): Likewise.\n\t* config/i386/i386.md (indirect_jump): Call convert_memory_address\n\tfor -mindirect-branch-register.\n\t(tablejump): Likewise.\n\t(*sibcall_memory): Likewise.\n\t(*sibcall_value_memory): Likewise.\n\tDisallow peepholes of indirect call and jump via memory for\n\t-mindirect-branch-register.\n\t(*call_pop): Replace m with Bw.\n\t(*call_value_pop): Likewise.\n\t(*sibcall_pop_memory): Replace m with Bs.\n\t* config/i386/i386.opt (mindirect-branch-register): New option.\n\t* doc/invoke.texi: Document -mindirect-branch-register option.\n\ngcc/testsuite/\n\n\t* gcc.target/i386/indirect-thunk-1.c (dg-options): Add\n\t-mno-indirect-branch-register.\n\t* gcc.target/i386/indirect-thunk-2.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-3.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-4.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-5.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-6.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-7.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-1.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-2.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-3.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-4.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-5.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-6.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-attr-7.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-bnd-1.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-bnd-2.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-bnd-3.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-bnd-4.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-1.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-2.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-3.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-4.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-5.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-6.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-extern-7.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-1.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-2.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-3.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-4.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-5.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-6.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-inline-7.c: Likewise.\n\t* gcc.target/i386/ret-thunk-10.c: Likewise.\n\t* gcc.target/i386/ret-thunk-11.c: Likewise.\n\t* gcc.target/i386/ret-thunk-12.c: Likewise.\n\t* gcc.target/i386/ret-thunk-13.c: Likewise.\n\t* gcc.target/i386/ret-thunk-14.c: Likewise.\n\t* gcc.target/i386/ret-thunk-15.c: Likewise.\n\t* gcc.target/i386/ret-thunk-9.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-register-1.c: New test.\n\t* gcc.target/i386/indirect-thunk-register-2.c: Likewise.\n\t* gcc.target/i386/indirect-thunk-register-3.c: Likewise.\n\nFrom-SVN: r256662", "tree": {"sha": "a3ca09837a3a52afb54b689c83f3a1bc9c80ad3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3ca09837a3a52afb54b689c83f3a1bc9c80ad3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "45e140193876fab3bfb57779738d49ddc13fe9ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45e140193876fab3bfb57779738d49ddc13fe9ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45e140193876fab3bfb57779738d49ddc13fe9ed"}], "stats": {"total": 286, "additions": 223, "deletions": 63}, "files": [{"sha": "2fb1c5a8adfd09b4b66e8410d5e40a16d48f2ab3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,3 +1,26 @@\n+2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/constraints.md (Bs): Disallow memory operand for\n+\t-mindirect-branch-register.\n+\t(Bw): Likewise.\n+\t* config/i386/predicates.md (indirect_branch_operand): Likewise.\n+\t(GOT_memory_operand): Likewise.\n+\t(call_insn_operand): Likewise.\n+\t(sibcall_insn_operand): Likewise.\n+\t(GOT32_symbol_operand): Likewise.\n+\t* config/i386/i386.md (indirect_jump): Call convert_memory_address\n+\tfor -mindirect-branch-register.\n+\t(tablejump): Likewise.\n+\t(*sibcall_memory): Likewise.\n+\t(*sibcall_value_memory): Likewise.\n+\tDisallow peepholes of indirect call and jump via memory for\n+\t-mindirect-branch-register.\n+\t(*call_pop): Replace m with Bw.\n+\t(*call_value_pop): Likewise.\n+\t(*sibcall_pop_memory): Replace m with Bs.\n+\t* config/i386/i386.opt (mindirect-branch-register): New option.\n+\t* doc/invoke.texi: Document -mindirect-branch-register option.\n+\n 2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* config/i386/i386-protos.h (ix86_output_function_return): New."}, {"sha": "5592c43073e5757019f64ea9531188b04e21bb26", "filename": "gcc/config/i386/constraints.md", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Fconfig%2Fi386%2Fconstraints.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Fconfig%2Fi386%2Fconstraints.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fconstraints.md?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -225,16 +225,20 @@\n \n (define_constraint \"Bs\"\n   \"@internal Sibcall memory operand.\"\n-  (ior (and (not (match_test \"TARGET_X32\"))\n+  (ior (and (not (match_test \"TARGET_X32\n+\t\t\t      || ix86_indirect_branch_thunk_register\"))\n \t    (match_operand 0 \"sibcall_memory_operand\"))\n-       (and (match_test \"TARGET_X32 && Pmode == DImode\")\n+       (and (match_test \"TARGET_X32 && Pmode == DImode\n+\t\t\t && !ix86_indirect_branch_thunk_register\")\n \t    (match_operand 0 \"GOT_memory_operand\"))))\n \n (define_constraint \"Bw\"\n   \"@internal Call memory operand.\"\n-  (ior (and (not (match_test \"TARGET_X32\"))\n+  (ior (and (not (match_test \"TARGET_X32\n+\t\t\t      || ix86_indirect_branch_thunk_register\"))\n \t    (match_operand 0 \"memory_operand\"))\n-       (and (match_test \"TARGET_X32 && Pmode == DImode\")\n+       (and (match_test \"TARGET_X32 && Pmode == DImode\n+\t\t\t && !ix86_indirect_branch_thunk_register\")\n \t    (match_operand 0 \"GOT_memory_operand\"))))\n \n (define_constraint \"Bz\""}, {"sha": "fff73fe18e03e39a498a367785789c2b5a2e82d6", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 22, "deletions": 12, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -12311,7 +12311,7 @@\n   [(set (pc) (match_operand 0 \"indirect_branch_operand\"))]\n   \"\"\n {\n-  if (TARGET_X32)\n+  if (TARGET_X32 || ix86_indirect_branch_thunk_register)\n     operands[0] = convert_memory_address (word_mode, operands[0]);\n   cfun->machine->has_local_indirect_jump = true;\n })\n@@ -12365,7 +12365,7 @@\n \t\t\t\t\t OPTAB_DIRECT);\n     }\n \n-  if (TARGET_X32)\n+  if (TARGET_X32 || ix86_indirect_branch_thunk_register)\n     operands[0] = convert_memory_address (word_mode, operands[0]);\n   cfun->machine->has_local_indirect_jump = true;\n })\n@@ -12614,7 +12614,7 @@\n   [(call (mem:QI (match_operand:W 0 \"memory_operand\" \"m\"))\n \t (match_operand 1))\n    (unspec [(const_int 0)] UNSPEC_PEEPSIB)]\n-  \"!TARGET_X32\"\n+  \"!TARGET_X32 && !ix86_indirect_branch_thunk_register\"\n   \"* return ix86_output_call_insn (insn, operands[0]);\"\n   [(set_attr \"type\" \"call\")])\n \n@@ -12623,7 +12623,9 @@\n \t(match_operand:W 1 \"memory_operand\"))\n    (call (mem:QI (match_dup 0))\n \t (match_operand 3))]\n-  \"!TARGET_X32 && SIBLING_CALL_P (peep2_next_insn (1))\n+  \"!TARGET_X32\n+   && !ix86_indirect_branch_thunk_register\n+   && SIBLING_CALL_P (peep2_next_insn (1))\n    && !reg_mentioned_p (operands[0],\n \t\t\tCALL_INSN_FUNCTION_USAGE (peep2_next_insn (1)))\"\n   [(parallel [(call (mem:QI (match_dup 1))\n@@ -12636,7 +12638,9 @@\n    (unspec_volatile [(const_int 0)] UNSPECV_BLOCKAGE)\n    (call (mem:QI (match_dup 0))\n \t (match_operand 3))]\n-  \"!TARGET_X32 && SIBLING_CALL_P (peep2_next_insn (2))\n+  \"!TARGET_X32\n+   && !ix86_indirect_branch_thunk_register\n+   && SIBLING_CALL_P (peep2_next_insn (2))\n    && !reg_mentioned_p (operands[0],\n \t\t\tCALL_INSN_FUNCTION_USAGE (peep2_next_insn (2)))\"\n   [(unspec_volatile [(const_int 0)] UNSPECV_BLOCKAGE)\n@@ -12658,7 +12662,7 @@\n })\n \n (define_insn \"*call_pop\"\n-  [(call (mem:QI (match_operand:SI 0 \"call_insn_operand\" \"lmBz\"))\n+  [(call (mem:QI (match_operand:SI 0 \"call_insn_operand\" \"lBwBz\"))\n \t (match_operand 1))\n    (set (reg:SI SP_REG)\n \t(plus:SI (reg:SI SP_REG)\n@@ -12678,7 +12682,7 @@\n   [(set_attr \"type\" \"call\")])\n \n (define_insn \"*sibcall_pop_memory\"\n-  [(call (mem:QI (match_operand:SI 0 \"memory_operand\" \"m\"))\n+  [(call (mem:QI (match_operand:SI 0 \"memory_operand\" \"Bs\"))\n \t (match_operand 1))\n    (set (reg:SI SP_REG)\n \t(plus:SI (reg:SI SP_REG)\n@@ -12732,7 +12736,9 @@\n   [(set (match_operand:W 0 \"register_operand\")\n         (match_operand:W 1 \"memory_operand\"))\n    (set (pc) (match_dup 0))]\n-  \"!TARGET_X32 && peep2_reg_dead_p (2, operands[0])\"\n+  \"!TARGET_X32\n+   && !ix86_indirect_branch_thunk_register\n+   && peep2_reg_dead_p (2, operands[0])\"\n   [(set (pc) (match_dup 1))])\n \n ;; Call subroutine, returning value in operand 0\n@@ -12813,7 +12819,7 @@\n  \t(call (mem:QI (match_operand:W 1 \"memory_operand\" \"m\"))\n \t      (match_operand 2)))\n    (unspec [(const_int 0)] UNSPEC_PEEPSIB)]\n-  \"!TARGET_X32\"\n+  \"!TARGET_X32 && !ix86_indirect_branch_thunk_register\"\n   \"* return ix86_output_call_insn (insn, operands[1]);\"\n   [(set_attr \"type\" \"callv\")])\n \n@@ -12823,7 +12829,9 @@\n    (set (match_operand 2)\n    (call (mem:QI (match_dup 0))\n \t\t (match_operand 3)))]\n-  \"!TARGET_X32 && SIBLING_CALL_P (peep2_next_insn (1))\n+  \"!TARGET_X32\n+   && !ix86_indirect_branch_thunk_register\n+   && SIBLING_CALL_P (peep2_next_insn (1))\n    && !reg_mentioned_p (operands[0],\n \t\t\tCALL_INSN_FUNCTION_USAGE (peep2_next_insn (1)))\"\n   [(parallel [(set (match_dup 2)\n@@ -12838,7 +12846,9 @@\n    (set (match_operand 2)\n \t(call (mem:QI (match_dup 0))\n \t      (match_operand 3)))]\n-  \"!TARGET_X32 && SIBLING_CALL_P (peep2_next_insn (2))\n+  \"!TARGET_X32\n+   && !ix86_indirect_branch_thunk_register\n+   && SIBLING_CALL_P (peep2_next_insn (2))\n    && !reg_mentioned_p (operands[0],\n \t\t\tCALL_INSN_FUNCTION_USAGE (peep2_next_insn (2)))\"\n   [(unspec_volatile [(const_int 0)] UNSPECV_BLOCKAGE)\n@@ -12863,7 +12873,7 @@\n \n (define_insn \"*call_value_pop\"\n   [(set (match_operand 0)\n-\t(call (mem:QI (match_operand:SI 1 \"call_insn_operand\" \"lmBz\"))\n+\t(call (mem:QI (match_operand:SI 1 \"call_insn_operand\" \"lBwBz\"))\n \t      (match_operand 2)))\n    (set (reg:SI SP_REG)\n \t(plus:SI (reg:SI SP_REG)"}, {"sha": "c6be5f94773386fe589b636f9eed9d0e027973c9", "filename": "gcc/config/i386/i386.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Fconfig%2Fi386%2Fi386.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Fconfig%2Fi386%2Fi386.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.opt?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1045,3 +1045,7 @@ Enum(indirect_branch) String(thunk-inline) Value(indirect_branch_thunk_inline)\n \n EnumValue\n Enum(indirect_branch) String(thunk-extern) Value(indirect_branch_thunk_extern)\n+\n+mindirect-branch-register\n+Target Report Var(ix86_indirect_branch_thunk_register) Init(0)\n+Force indirect call and jump via register."}, {"sha": "5ae443231b83893176cace0f70013672e0530cbe", "filename": "gcc/config/i386/predicates.md", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Fconfig%2Fi386%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Fconfig%2Fi386%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fpredicates.md?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -665,7 +665,8 @@\n ;; Test for a valid operand for indirect branch.\n (define_predicate \"indirect_branch_operand\"\n   (ior (match_operand 0 \"register_operand\")\n-       (and (not (match_test \"TARGET_X32\"))\n+       (and (not (match_test \"TARGET_X32\n+\t\t\t      || ix86_indirect_branch_thunk_register\"))\n \t    (match_operand 0 \"memory_operand\"))))\n \n ;; Return true if OP is a memory operands that can be used in sibcalls.\n@@ -694,7 +695,8 @@\n \n ;; Return true if OP is a GOT memory operand.\n (define_predicate \"GOT_memory_operand\"\n-  (match_operand 0 \"memory_operand\")\n+  (and (match_test \"!ix86_indirect_branch_thunk_register\")\n+       (match_operand 0 \"memory_operand\"))\n {\n   op = XEXP (op, 0);\n   return (GET_CODE (op) == CONST\n@@ -708,24 +710,29 @@\n   (ior (match_test \"constant_call_address_operand\n \t\t     (op, mode == VOIDmode ? mode : Pmode)\")\n        (match_operand 0 \"call_register_no_elim_operand\")\n-       (ior (and (not (match_test \"TARGET_X32\"))\n+       (ior (and (not (match_test \"TARGET_X32\n+\t\t\t\t   || ix86_indirect_branch_thunk_register\"))\n \t\t (match_operand 0 \"memory_operand\"))\n-\t    (and (match_test \"TARGET_X32 && Pmode == DImode\")\n+\t    (and (match_test \"TARGET_X32 && Pmode == DImode\n+\t\t\t      && !ix86_indirect_branch_thunk_register\")\n \t\t (match_operand 0 \"GOT_memory_operand\")))))\n \n ;; Similarly, but for tail calls, in which we cannot allow memory references.\n (define_special_predicate \"sibcall_insn_operand\"\n   (ior (match_test \"constant_call_address_operand\n \t\t     (op, mode == VOIDmode ? mode : Pmode)\")\n        (match_operand 0 \"register_no_elim_operand\")\n-       (ior (and (not (match_test \"TARGET_X32\"))\n+       (ior (and (not (match_test \"TARGET_X32\n+\t\t\t\t   || ix86_indirect_branch_thunk_register\"))\n \t\t (match_operand 0 \"sibcall_memory_operand\"))\n-\t    (and (match_test \"TARGET_X32 && Pmode == DImode\")\n+\t    (and (match_test \"TARGET_X32 && Pmode == DImode\n+\t\t\t      && !ix86_indirect_branch_thunk_register\")\n \t\t (match_operand 0 \"GOT_memory_operand\")))))\n \n ;; Return true if OP is a 32-bit GOT symbol operand.\n (define_predicate \"GOT32_symbol_operand\"\n-  (match_test \"GET_CODE (op) == CONST\n+  (match_test \"!ix86_indirect_branch_thunk_register\n+\t       && GET_CODE (op) == CONST\n                && GET_CODE (XEXP (op, 0)) == UNSPEC\n                && XINT (XEXP (op, 0), 1) == UNSPEC_GOT\"))\n "}, {"sha": "cb18a0ebdf1a2bc683e9a6823c9862e08cd0ed02", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1230,7 +1230,8 @@ See RS/6000 and PowerPC Options.\n -mstack-protector-guard-offset=@var{offset} @gol\n -mstack-protector-guard-symbol=@var{symbol} -mmitigate-rop @gol\n -mgeneral-regs-only -mcall-ms2sysv-xlogues @gol\n--mindirect-branch=@var{choice} -mfunction-return==@var{choice}}\n+-mindirect-branch=@var{choice} -mfunction-return==@var{choice} @gol\n+-mindirect-branch-register}\n \n @emph{x86 Windows Options}\n @gccoptlist{-mconsole  -mcygwin  -mno-cygwin  -mdll @gol\n@@ -26868,6 +26869,10 @@ object file.  You can control this behavior for a specific function by\n using the function attribute @code{function_return}.\n @xref{Function Attributes}.\n \n+@item -mindirect-branch-register\n+@opindex -mindirect-branch-register\n+Force indirect call and jump via register.\n+\n @end table\n \n These @samp{-m} switches are supported in addition to the above"}, {"sha": "796a32981101dba58c8ae15ba1de698b2c47785a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,3 +1,49 @@\n+2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* gcc.target/i386/indirect-thunk-1.c (dg-options): Add\n+\t-mno-indirect-branch-register.\n+\t* gcc.target/i386/indirect-thunk-2.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-3.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-4.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-5.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-6.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-7.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-1.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-2.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-3.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-4.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-5.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-6.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-attr-7.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-bnd-1.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-bnd-2.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-bnd-3.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-bnd-4.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-1.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-2.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-3.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-4.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-5.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-6.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-extern-7.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-1.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-2.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-3.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-4.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-5.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-6.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-inline-7.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-10.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-11.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-12.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-13.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-14.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-15.c: Likewise.\n+\t* gcc.target/i386/ret-thunk-9.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-register-1.c: New test.\n+\t* gcc.target/i386/indirect-thunk-register-2.c: Likewise.\n+\t* gcc.target/i386/indirect-thunk-register-3.c: Likewise.\n+\n 2018-01-14  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.target/i386/indirect-thunk-1.c (dg-options): Add"}, {"sha": "9eb9b273ade640ccbd99670bb5f0f7f5225f0c3d", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-1.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk -fno-pic\" } */\n \n typedef void (*dispatch_t)(long offset);\n "}, {"sha": "c63795e41278ed11b1a0c4c6a1f2149ab44e9d28", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-2.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk -fno-pic\" } */\n \n typedef void (*dispatch_t)(long offset);\n "}, {"sha": "82973cda7719329aceeb680e943ffd009a612f96", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-3.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mno-indirect-branch-register -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk -fno-pic\" } */\n \n typedef void (*dispatch_t)(long offset);\n "}, {"sha": "a5f3d1cbed8941795421c575b84ec0386a719a7a", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-4.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mno-indirect-branch-register -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk -fno-pic\" } */\n \n typedef void (*dispatch_t)(long offset);\n "}, {"sha": "fcaa18d10b7fd36402b691be7175e1c2660d4dfb", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-5.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target *-*-linux* } } */\n-/* { dg-options \"-O2 -mfunction-return=keep -fpic -fno-plt -mindirect-branch=thunk\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fpic -fno-plt -mindirect-branch=thunk\" } */\n \n extern void bar (void);\n "}, {"sha": "e4649283d100df2aadb65e4e2c90612cf1041861", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-6.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target *-*-linux* } } */\n-/* { dg-options \"-O2 -mfunction-return=keep -fpic -fno-plt -mindirect-branch=thunk\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mno-indirect-branch-register -mno-indirect-branch-register -mfunction-return=keep -fpic -fno-plt -mindirect-branch=thunk\" } */\n \n extern void bar (void);\n "}, {"sha": "ebfb8aab9373310bb91a3ff074c04afae0889700", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-7.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk -fno-pic\" } */\n \n void func0 (void);\n void func1 (void);"}, {"sha": "a08022db8e4295bdf097e19478c2904ebaa0e44f", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-1.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fno-pic\" } */\n \n typedef void (*dispatch_t)(long offset);\n "}, {"sha": "b257c695ad16af63d27013071c8551e7b4cd78d5", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-2.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fno-pic\" } */\n \n typedef void (*dispatch_t)(long offset);\n "}, {"sha": "dfb1370d23d7c04061c941e5ea7ba0dc29f40e6f", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-3.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fno-pic\" } */\n \n typedef void (*dispatch_t)(long offset);\n "}, {"sha": "a6e3f6f9f2b1612202a492222b2d5e540050462a", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-4.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fno-pic\" } */\n \n typedef void (*dispatch_t)(long offset);\n "}, {"sha": "4bb1c5f9220fc84b466c95a733327cabe626dd07", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-5.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fno-pic\" } */\n \n typedef void (*dispatch_t)(long offset);\n "}, {"sha": "4e33a6388629ccaf232bb59bf1853aea58ffda09", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-6.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fno-pic\" } */\n \n typedef void (*dispatch_t)(long offset);\n "}, {"sha": "427ba3ddbb4144c7ceda59bcf78e62af8899a421", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-attr-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-attr-7.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fno-pic\" } */\n \n void func0 (void);\n void func1 (void);"}, {"sha": "dc7143414fb451cf84f12ee5325ebcf67539e0b7", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-bnd-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-1.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target { ! x32 } } } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk -fcheck-pointer-bounds -mmpx -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk -fcheck-pointer-bounds -mmpx -fno-pic\" } */\n \n void (*dispatch) (char *);\n char buf[10];"}, {"sha": "737c60946f6da773159cdb88ca2999b29eeab26e", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-bnd-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-2.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target { ! x32 } } } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk -fcheck-pointer-bounds -mmpx -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk -fcheck-pointer-bounds -mmpx -fno-pic\" } */\n \n void (*dispatch) (char *);\n char buf[10];"}, {"sha": "d34485a00108cc91d9de91e1cdc458ff81c04fa4", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-bnd-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-3.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target { *-*-linux* && { ! x32 } } } } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk -fcheck-pointer-bounds -mmpx -fpic -fno-plt\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk -fcheck-pointer-bounds -mmpx -fpic -fno-plt\" } */\n \n void bar (char *);\n char buf[10];"}, {"sha": "0e19830de4dc53d94f40bfacb364a463001307ec", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-bnd-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-bnd-4.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target { *-*-linux* && { ! x32 } } } } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk -fcheck-pointer-bounds -mmpx -fpic -fno-plt\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk -fcheck-pointer-bounds -mmpx -fpic -fno-plt\" } */\n \n void bar (char *);\n char buf[10];"}, {"sha": "5c20a35ecece1bb929bbd224aa4f8646d4641c42", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-1.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk-extern -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-extern -fno-pic\" } */\n \n typedef void (*dispatch_t)(long offset);\n "}, {"sha": "b2fb6e1bcd27130590cde8e2736139497d2fec5d", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-2.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk-extern -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-extern -fno-pic\" } */\n \n typedef void (*dispatch_t)(long offset);\n "}, {"sha": "9c84547cd7c8d0c325f41f173465da7ec1897c9b", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-3.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk-extern -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-extern -fno-pic\" } */\n \n typedef void (*dispatch_t)(long offset);\n "}, {"sha": "457849564bb86c1ead5e1444ce78af25eada570c", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-4.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk-extern -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-extern -fno-pic\" } */\n \n typedef void (*dispatch_t)(long offset);\n "}, {"sha": "5c07e02df6ac0cababbdeba2d69cebf49ab22500", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-5.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target *-*-linux* } } */\n-/* { dg-options \"-O2 -mfunction-return=keep -fpic -fno-plt -mindirect-branch=thunk-extern\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fpic -fno-plt -mindirect-branch=thunk-extern\" } */\n \n extern void bar (void);\n "}, {"sha": "3eb440693a0a9d93a114c3c421b992d33759ae1c", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-6.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target *-*-linux* } } */\n-/* { dg-options \"-O2 -mfunction-return=keep -fpic -fno-plt -mindirect-branch=thunk-extern\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fpic -fno-plt -mindirect-branch=thunk-extern\" } */\n \n extern void bar (void);\n "}, {"sha": "d4747ea0764fa80fbcb6e702f4701609e8d707e0", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-extern-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-extern-7.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk-extern -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-extern -fno-pic\" } */\n \n void func0 (void);\n void func1 (void);"}, {"sha": "536abfa74e40e42ae086a0531640ac9f668c5817", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-1.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk-inline -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-inline -fno-pic\" } */\n \n typedef void (*dispatch_t)(long offset);\n "}, {"sha": "bd2b6246aa16c95c6099a23acb53b05fdc66e4db", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-2.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk-inline -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-inline -fno-pic\" } */\n \n typedef void (*dispatch_t)(long offset);\n "}, {"sha": "9885eebbcfff0338f6de7b57862fef215bc24502", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-3.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk-inline -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-inline -fno-pic\" } */\n \n typedef void (*dispatch_t)(long offset);\n "}, {"sha": "7b3983949d2243edf3ce4142ecc6de177e4da140", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-4.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk-inline -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-inline -fno-pic\" } */\n \n typedef void (*dispatch_t)(long offset);\n "}, {"sha": "c6d77e10352fd503b86ce0e3240fe30bbbac0047", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-5.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target *-*-linux* } } */\n-/* { dg-options \"-O2 -mfunction-return=keep -fpic -fno-plt -mindirect-branch=thunk-inline\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fpic -fno-plt -mindirect-branch=thunk-inline\" } */\n \n extern void bar (void);\n "}, {"sha": "6454827b780da4b97134b01c14539be9ac73d341", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-6.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target *-*-linux* } } */\n-/* { dg-options \"-O2 -mfunction-return=keep -fpic -fno-plt -mindirect-branch=thunk-inline\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -fpic -fno-plt -mindirect-branch=thunk-inline\" } */\n \n extern void bar (void);\n "}, {"sha": "cc592f89aba831114e7a98b11259f62a813a5d86", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-inline-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-inline-7.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk-inline -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-inline -fno-pic\" } */\n \n void func0 (void);\n void func1 (void);"}, {"sha": "7d396a31953d28b4a0551059b58e8f05f0f5f6c8", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-register-1.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-1.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mindirect-branch=thunk -mindirect-branch-register -fno-pic\" } */\n+\n+typedef void (*dispatch_t)(long offset);\n+\n+dispatch_t dispatch;\n+\n+void\n+male_indirect_jump (long offset)\n+{\n+  dispatch(offset);\n+}\n+\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler \"mov\\[ \\t\\](%eax|%rax), \\\\((%esp|%rsp)\\\\)\" } } */\n+/* { dg-final { scan-assembler {\\tpause} } } */\n+/* { dg-final { scan-assembler-not \"push(?:l|q)\\[ \\t\\]*_?dispatch\"  } } */\n+/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */\n+/* { dg-final { scan-assembler-not \"__x86_indirect_thunk\\n\" } } */\n+/* { dg-final { scan-assembler-not \"__x86_indirect_thunk_bnd\\n\" } } */"}, {"sha": "e7e616bb2719ae569111843d23ae9f5c92273e7d", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-register-2.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-2.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mindirect-branch=thunk-inline -mindirect-branch-register -fno-pic\" } */\n+\n+typedef void (*dispatch_t)(long offset);\n+\n+dispatch_t dispatch;\n+\n+void\n+male_indirect_jump (long offset)\n+{\n+  dispatch(offset);\n+}\n+\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler \"call\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler \"mov\\[ \\t\\](%eax|%rax), \\\\((%esp|%rsp)\\\\)\" } } */\n+/* { dg-final { scan-assembler {\\tpause} } } */\n+/* { dg-final { scan-assembler-not \"push(?:l|q)\\[ \\t\\]*_?dispatch\"  } } */\n+/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */\n+/* { dg-final { scan-assembler-not \"__x86_indirect_thunk\" } } */"}, {"sha": "5320e923be245c3f67ec280c124511349566cc7b", "filename": "gcc/testsuite/gcc.target/i386/indirect-thunk-register-3.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Findirect-thunk-register-3.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mindirect-branch=thunk-extern -mindirect-branch-register -fno-pic\" } */\n+\n+typedef void (*dispatch_t)(long offset);\n+\n+dispatch_t dispatch;\n+\n+void\n+male_indirect_jump (long offset)\n+{\n+  dispatch(offset);\n+}\n+\n+/* { dg-final { scan-assembler \"jmp\\[ \\t\\]*__x86_indirect_thunk_(r|e)ax\" } } */\n+/* { dg-final { scan-assembler-not \"push(?:l|q)\\[ \\t\\]*_?dispatch\"  } } */\n+/* { dg-final { scan-assembler-not \"pushq\\[ \\t\\]%rax\" } } */\n+/* { dg-final { scan-assembler-not {\\t(pause|pause|nop)} } } */\n+/* { dg-final { scan-assembler-not \"jmp\\[ \\t\\]*\\.LIND\" } } */\n+/* { dg-final { scan-assembler-not \"call\\[ \\t\\]*\\.LIND\" } } */"}, {"sha": "b4f9d48065d8f5d928c3d95ec7c22325f1ff740e", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-10.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=thunk-inline -mindirect-branch=thunk -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mno-indirect-branch-register -mfunction-return=thunk-inline -mindirect-branch=thunk -fno-pic\" } */\n \n extern void (*bar) (void);\n "}, {"sha": "0312577a043b3a62e8c0fb7a16fb81f642194139", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-11.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=thunk-extern -mindirect-branch=thunk -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mno-indirect-branch-register -mno-indirect-branch-register -mno-indirect-branch-register -mfunction-return=thunk-extern -mindirect-branch=thunk -fno-pic\" } */\n \n extern void (*bar) (void);\n "}, {"sha": "fa3181303c9617e01338491d65f16b8298520f8f", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-12.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mno-indirect-branch-register -mno-indirect-branch-register -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk -fno-pic\" } */\n \n extern void (*bar) (void);\n "}, {"sha": "7a08e71c76bde1169177d7a7d0b770b05cf03a8f", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-13.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk-inline -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-inline -fno-pic\" } */\n \n extern void (*bar) (void);\n extern int foo (void) __attribute__ ((function_return(\"thunk\")));"}, {"sha": "dacf0c769fc03e2182232831fd5c78377e8ad6a6", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-14.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-14.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=thunk-extern -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=thunk-extern -fno-pic\" } */\n \n extern void (*bar) (void);\n "}, {"sha": "cf06a5f35c72a602d64a943a3befa02f77cff033", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-15.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-15.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=keep -mindirect-branch=keep -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mno-indirect-branch-register -mno-indirect-branch-register -mno-indirect-branch-register -mfunction-return=keep -mindirect-branch=keep -fno-pic\" } */\n \n extern void (*bar) (void);\n "}, {"sha": "6da5ab97081cccfbcc39626b5f6aa97709fee0b5", "filename": "gcc/testsuite/gcc.target/i386/ret-thunk-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d543c04b795f8af4ebe5b3d5f38156ef4e5734f1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fret-thunk-9.c?ref=d543c04b795f8af4ebe5b3d5f38156ef4e5734f1", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-O2 -mfunction-return=thunk -mindirect-branch=thunk -fno-pic\" } */\n+/* { dg-options \"-O2 -mno-indirect-branch-register -mno-indirect-branch-register -mfunction-return=thunk -mindirect-branch=thunk -fno-pic\" } */\n \n extern void (*bar) (void);\n "}]}