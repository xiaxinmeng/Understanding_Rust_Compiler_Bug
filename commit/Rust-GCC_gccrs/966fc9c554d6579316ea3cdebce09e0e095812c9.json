{"sha": "966fc9c554d6579316ea3cdebce09e0e095812c9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY2ZmM5YzU1NGQ2NTc5MzE2ZWEzY2RlYmNlMDllMGUwOTU4MTJjOQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-06T09:03:37Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2015-01-06T09:03:37Z"}, "message": "[multiple changes]\n\n2015-01-06  Vincent Celier  <celier@adacore.com>\n\n\t* prj-env.adb: Minor comment update.\n\n2015-01-06  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_res.adb (Valid_Conversion): Restrict the checks on anonymous\n\taccess types whose target type is an interface type to operands\n\tthat are access types; required to report an error when the\n\toperand is not an access type.\n\nFrom-SVN: r219226", "tree": {"sha": "bb17b9b5c44242ba3f40e2cfd7ef7d90255a91fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bb17b9b5c44242ba3f40e2cfd7ef7d90255a91fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/966fc9c554d6579316ea3cdebce09e0e095812c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/966fc9c554d6579316ea3cdebce09e0e095812c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/966fc9c554d6579316ea3cdebce09e0e095812c9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/966fc9c554d6579316ea3cdebce09e0e095812c9/comments", "author": null, "committer": null, "parents": [{"sha": "4528ead53ae6e76cd663aa9aa3e710ca833a2fa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4528ead53ae6e76cd663aa9aa3e710ca833a2fa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4528ead53ae6e76cd663aa9aa3e710ca833a2fa3"}], "stats": {"total": 42, "additions": 28, "deletions": 14}, "files": [{"sha": "a8f36b90dec161debc39828b85e3aa9acef8d639", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/966fc9c554d6579316ea3cdebce09e0e095812c9/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/966fc9c554d6579316ea3cdebce09e0e095812c9/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=966fc9c554d6579316ea3cdebce09e0e095812c9", "patch": "@@ -1,3 +1,14 @@\n+2015-01-06  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-env.adb: Minor comment update.\n+\n+2015-01-06  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_res.adb (Valid_Conversion): Restrict the checks on anonymous\n+\taccess types whose target type is an interface type to operands\n+\tthat are access types; required to report an error when the\n+\toperand is not an access type.\n+\n 2015-01-06  Bob Duff  <duff@adacore.com>\n \n \t* a-cfinve.adb (Copy): Set the discriminant to the Length when\n@@ -12,6 +23,7 @@\n 2015-01-06  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch12.adb: Code clean up.\n+\n 2015-01-06  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gnatvsn.ads: Bump copyright year."}, {"sha": "92019fcda9c800099019d6ea18131b6fd0176b58", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/966fc9c554d6579316ea3cdebce09e0e095812c9/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/966fc9c554d6579316ea3cdebce09e0e095812c9/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=966fc9c554d6579316ea3cdebce09e0e095812c9", "patch": "@@ -1899,7 +1899,7 @@ package body Prj.Env is\n       Runtime : String_Ptr;\n \n       procedure Add_Target;\n-      --  Comment ALWAYS required for nested subprogram spec ???\n+      --  Add :<prefix>/<target> to the project path\n \n       ----------------\n       -- Add_Target --"}, {"sha": "7b30bd3711a4e8336aca4147f153e425cccf4005", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/966fc9c554d6579316ea3cdebce09e0e095812c9/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/966fc9c554d6579316ea3cdebce09e0e095812c9/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=966fc9c554d6579316ea3cdebce09e0e095812c9", "patch": "@@ -99,10 +99,10 @@ package body Sem_Res is\n    --  a component of a discriminated type (record or concurrent type).\n \n    procedure Check_For_Visible_Operator (N : Node_Id; T : Entity_Id);\n-   --  Given a node for an operator associated with type T, check that\n-   --  the operator is visible. Operators all of whose operands are\n-   --  universal must be checked for visibility during resolution\n-   --  because their type is not determinable based on their operands.\n+   --  Given a node for an operator associated with type T, check that the\n+   --  operator is visible. Operators all of whose operands are universal must\n+   --  be checked for visibility during resolution because their type is not\n+   --  determinable based on their operands.\n \n    procedure Check_Fully_Declared_Prefix\n      (Typ  : Entity_Id;\n@@ -258,8 +258,8 @@ package body Sem_Res is\n \n    procedure Set_String_Literal_Subtype (N : Node_Id; Typ : Entity_Id);\n    --  The String_Literal_Subtype is built for all strings that are not\n-   --  operands of a static concatenation operation. If the argument is\n-   --  not a N_String_Literal node, then the call has no effect.\n+   --  operands of a static concatenation operation. If the argument is not\n+   --  a N_String_Literal node, then the call has no effect.\n \n    procedure Set_Slice_Subtype (N : Node_Id);\n    --  Build subtype of array type, with the range specified by the slice\n@@ -429,11 +429,12 @@ package body Sem_Res is\n          elsif Nkind (P) = N_Index_Or_Discriminant_Constraint then\n \n             --  The following check catches the unusual case where a\n-            --  discriminant appears within an index constraint that is part of\n-            --  a larger expression within a constraint on a component, e.g. \"C\n-            --  : Int range 1 .. F (new A(1 .. D))\". For now we only check case\n-            --  of record components, and note that a similar check should also\n-            --  apply in the case of discriminant constraints below. ???\n+            --  discriminant appears within an index constraint that is part\n+            --  of a larger expression within a constraint on a component,\n+            --  e.g. \"C : Int range 1 .. F (new A(1 .. D))\". For now we only\n+            --  check case of record components, and note that a similar check\n+            --  should also apply in the case of discriminant constraints\n+            --  below. ???\n \n             --  Note that the check for N_Subtype_Declaration below is to\n             --  detect the valid use of discriminants in the constraints of a\n@@ -12093,8 +12094,9 @@ package body Sem_Res is\n       --  Ada 2005 (AI-251): Anonymous access types where target references an\n       --  interface type.\n \n-      elsif Ekind_In (Target_Type, E_General_Access_Type,\n-                                   E_Anonymous_Access_Type)\n+      elsif Is_Access_Type (Opnd_Type)\n+        and then Ekind_In (Target_Type, E_General_Access_Type,\n+                                        E_Anonymous_Access_Type)\n         and then Is_Interface (Directly_Designated_Type (Target_Type))\n       then\n          --  Check the static accessibility rule of 4.6(17). Note that the"}]}