{"sha": "cb6409c1c52546082fcd4bf074ce3de8a71eadb0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2I2NDA5YzFjNTI1NDYwODJmY2Q0YmYwNzRjZTNkZThhNzFlYWRiMA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-04-29T02:07:20Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-04-29T02:07:20Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r856", "tree": {"sha": "87a380b6e55b62447ab9bfb249921fc75c5fb6aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87a380b6e55b62447ab9bfb249921fc75c5fb6aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cb6409c1c52546082fcd4bf074ce3de8a71eadb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb6409c1c52546082fcd4bf074ce3de8a71eadb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb6409c1c52546082fcd4bf074ce3de8a71eadb0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb6409c1c52546082fcd4bf074ce3de8a71eadb0/comments", "author": null, "committer": null, "parents": [{"sha": "5cccf78f372fb4ca0067f56305e3ebeab6dc19c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5cccf78f372fb4ca0067f56305e3ebeab6dc19c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5cccf78f372fb4ca0067f56305e3ebeab6dc19c2"}], "stats": {"total": 72, "additions": 70, "deletions": 2}, "files": [{"sha": "8a1685414bbc28960ca4baab9ee5eb957102f537", "filename": "gcc/config/m68k/tower-as.h", "status": "modified", "additions": 70, "deletions": 2, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cb6409c1c52546082fcd4bf074ce3de8a71eadb0/gcc%2Fconfig%2Fm68k%2Ftower-as.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cb6409c1c52546082fcd4bf074ce3de8a71eadb0/gcc%2Fconfig%2Fm68k%2Ftower-as.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Ftower-as.h?ref=cb6409c1c52546082fcd4bf074ce3de8a71eadb0", "patch": "@@ -30,7 +30,15 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n \n #include \"tower.h\"\n+#undef SELECT_RTX_SECTION\n \n+/* Use default settings for system V.3.  */\n+\n+#include \"svr3.h\"\n+\n+/* Names to predefine in the preprocessor for this target machine.  */\n+\n+#define CPP_PREDEFINES \"-Dunix -Dtower32 -Dtower32_600\"\n \n /* Define __HAVE_68881 in preprocessor only if -m68881 is specified.\n    This will control the use of inline 68881 insns in certain macros.\n@@ -43,7 +51,8 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n #define STARTFILE_SPEC                                         \\\n \"%{p:%{m68881:/usr/lib/fp/mcrt1.o}%{!m68881:/lib/mcrt1.o}}     \\\n- %{!p:%{m68881:/usr/lib/fp/crt1.o}%{!m68881:/lib/crt1.o}}\"\n+ %{!p:%{m68881:/usr/lib/fp/crt1.o}%{!m68881:/lib/crt1.o}}      \\\n+ crtbegin.o%s\"\n \n /* These four macros control how m68k.md is expanded.  */\n \n@@ -64,13 +73,20 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n /* All the ASM_OUTPUT macros need to conform to the Tower as syntax.  */\n \n #define ASM_OUTPUT_SOURCE_FILENAME(FILE, FILENAME) \\\n-  fprintf (FILE, \"\\tfile\\t\\\"%s\\\"\\n\", FILENAME)\n+  do {\t\t\t\t\t\t   \\\n+    fprintf (FILE, \"\\tfile\\t\\\"%s\\\"\\n\", FILENAME);  \\\n+    fprintf (FILE, \"section ~init,\\\"x\\\"\\n\");\t   \\\n+    fprintf (FILE, \"section ~fini,\\\"x\\\"\\n\");\t   \\\n+    fprintf (FILE, \"section ~rodata,\\\"x\\\"\\n\");   \\\n+    fprintf (FILE, \"text\\n\");\t\t\t   \\\n+  } while (0)\n \n #define ASM_OUTPUT_SOURCE_LINE(FILE, LINENO)\t\\\n   fprintf (FILE, \"\\tln\\t%d\\n\",\t\t\t\\\n \t   (sdb_begin_function_line\t\t\\\n \t    ? last_linenum - sdb_begin_function_line : 1))\n \n+#undef ASM_OUTPUT_IDENT\n #define ASM_OUTPUT_IDENT(FILE, NAME) \\\n   fprintf (FILE, \"\\tident\\t\\\"%s\\\" \\n\", NAME)\n \n@@ -586,3 +602,55 @@ do { fprintf (asm_out_file, \"\\ttag\\t\");\t\\\n \n #define SDB_GENERATE_FAKE(BUFFER, NUMBER) \\\n   sprintf ((BUFFER), \"~%dfake\", (NUMBER));\n+\n+#define NO_DOLLAR_IN_LABEL\n+#define NO_DOT_IN_LABEL\n+\n+/* Define a few machine-specific details\n+   of the implementation of constructors.\n+\n+   The __CTORS_LIST__ goes in the .init section.  Define CTOR_LIST_BEGIN\n+   and CTOR_LIST_END to contribute to the .init section an instruction to\n+   push a word containing 0 (or some equivalent of that).\n+\n+   ASM_OUTPUT_CONSTRUCTOR should be defined\n+   to push the address of the constructor.  */\n+\n+#define ASM_LONG\t\"\\tlong\"\n+#undef INIT_SECTION_ASM_OP\n+#define INIT_SECTION_ASM_OP\t\"section\\t~init\"\n+#undef FINI_SECTION_ASM_OP\n+#define FINI_SECTION_ASM_OP\t\"section\\t~fini\"\n+#undef CONST_SECTION_ASM_OP\n+#define CONST_SECTION_ASM_OP\t\"section\\t~rodata\"\n+\n+#define CTOR_LIST_BEGIN\t\t\t\t\\\n+  asm (INIT_SECTION_ASM_OP);\t\t\t\\\n+  asm (\"clr.l -(%sp)\")\n+#define CTOR_LIST_END CTOR_LIST_BEGIN\n+\n+#define BSS_SECTION_ASM_OP\t\"section\\t~bss\"\n+#define BSS_SECTION_FUNCTION \\\n+void\t\t\t\t\t\t\t\t\\\n+bss_section ()\t\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  if (in_section != in_bss)\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      fprintf (asm_out_file, \"%s\\n\", BSS_SECTION_ASM_OP);\t\\\n+      in_section = in_bss;\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+}\n+\n+#define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\\\n+  do {\t\t\t\t\t\t\\\n+    init_section ();\t\t\t\t\\\n+    fprintf (FILE, \"\\tmov.l &\");\t\t\\\n+    assemble_name (FILE, NAME);\t\t\t\\\n+    fprintf (FILE, \",-(%%sp)\\n\");\t\t\\\n+  } while (0)\n+\n+/* We do not want leading underscores.  */\n+\n+#undef ASM_OUTPUT_LABELREF\n+#define ASM_OUTPUT_LABELREF(FILE,NAME)  \\\n+  fprintf (FILE, \"%s\", NAME)"}]}