{"sha": "b21fb038c9fd9ecf5f5ce362a3d35d993f89b64b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjIxZmIwMzhjOWZkOWVjZjVmNWNlMzYyYTNkMzVkOTkzZjg5YjY0Yg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2002-12-26T01:30:59Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-12-26T01:30:59Z"}, "message": "rs6000.c (rs6000_override_options): Convert to tartet_flags_explicit.\n\n        * config/rs6000/rs6000.c (rs6000_override_options): Convert to\n        tartet_flags_explicit.\n        * config/rs6000/rs6000.h (MASK_MULTIPLE_SET, MASK_STRING_SET): Delete.\n        Compact target_flags bits.\n        (TARGET_MULTIPLE_SET, TARGET_STRING_SET): Delete.\n        (TARGET_SWITCHES): Delete references to *_SET flags.\n\nFrom-SVN: r60504", "tree": {"sha": "51ce82ae9a824b258c27e92fd8ac2096bead4ab3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51ce82ae9a824b258c27e92fd8ac2096bead4ab3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b21fb038c9fd9ecf5f5ce362a3d35d993f89b64b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b21fb038c9fd9ecf5f5ce362a3d35d993f89b64b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b21fb038c9fd9ecf5f5ce362a3d35d993f89b64b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b21fb038c9fd9ecf5f5ce362a3d35d993f89b64b/comments", "author": null, "committer": null, "parents": [{"sha": "abd2dd6d2227ff0f588efcf85273f9dd4a2e042f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/abd2dd6d2227ff0f588efcf85273f9dd4a2e042f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/abd2dd6d2227ff0f588efcf85273f9dd4a2e042f"}], "stats": {"total": 64, "additions": 30, "deletions": 34}, "files": [{"sha": "d2e061443ab9b34cf01ea8d947cce6c2cc73e42f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b21fb038c9fd9ecf5f5ce362a3d35d993f89b64b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b21fb038c9fd9ecf5f5ce362a3d35d993f89b64b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b21fb038c9fd9ecf5f5ce362a3d35d993f89b64b", "patch": "@@ -1,3 +1,12 @@\n+2002-12-25  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_override_options): Convert to\n+\ttartet_flags_explicit.\n+\t* config/rs6000/rs6000.h (MASK_MULTIPLE_SET, MASK_STRING_SET): Delete.\n+\tCompact target_flags bits.\n+\t(TARGET_MULTIPLE_SET, TARGET_STRING_SET): Delete.\n+\t(TARGET_SWITCHES): Delete references to *_SET flags.\n+\n Wed Dec 25 20:30:53 CET 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* i386.md (memory attribute): Fix setcc attribute."}, {"sha": "0a9360ff87a6ca298048b93ed4148ab85b730bc0", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b21fb038c9fd9ecf5f5ce362a3d35d993f89b64b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b21fb038c9fd9ecf5f5ce362a3d35d993f89b64b/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=b21fb038c9fd9ecf5f5ce362a3d35d993f89b64b", "patch": "@@ -574,12 +574,12 @@ rs6000_override_options (default_cpu)\n \n   /* If -mmultiple or -mno-multiple was explicitly used, don't\n      override with the processor default */\n-  if (TARGET_MULTIPLE_SET)\n+  if ((target_flags_explicit & MASK_MULTIPLE) != 0)\n     target_flags = (target_flags & ~MASK_MULTIPLE) | multiple;\n \n   /* If -mstring or -mno-string was explicitly used, don't override\n      with the processor default.  */\n-  if (TARGET_STRING_SET)\n+  if ((target_flags_explicit & MASK_STRING) != 0)\n     target_flags = (target_flags & ~MASK_STRING) | string;\n \n   /* Don't allow -mmultiple or -mstring on little endian systems\n@@ -588,19 +588,19 @@ rs6000_override_options (default_cpu)\n      trap.  The 750 does not cause an alignment trap (except when the\n      target is unaligned).  */\n \n-  if (! BYTES_BIG_ENDIAN && rs6000_cpu != PROCESSOR_PPC750)\n+  if (!BYTES_BIG_ENDIAN && rs6000_cpu != PROCESSOR_PPC750)\n     {\n       if (TARGET_MULTIPLE)\n \t{\n \t  target_flags &= ~MASK_MULTIPLE;\n-\t  if (TARGET_MULTIPLE_SET)\n+\t  if ((target_flags_explicit & MASK_MULTIPLE) != 0)\n \t    warning (\"-mmultiple is not supported on little endian systems\");\n \t}\n \n       if (TARGET_STRING)\n \t{\n \t  target_flags &= ~MASK_STRING;\n-\t  if (TARGET_STRING_SET)\n+\t  if ((target_flags_explicit & MASK_STRING) != 0)\n \t    warning (\"-mstring is not supported on little endian systems\");\n \t}\n     }\n@@ -696,7 +696,7 @@ rs6000_override_options (default_cpu)\n   /* Set TARGET_AIX_STRUCT_RET last, after the ABI is determined.\n      If -maix-struct-return or -msvr4-struct-return was explicitly\n      used, don't override with the ABI default.  */\n-  if (!(target_flags & MASK_AIX_STRUCT_RET_SET))\n+  if ((target_flags_explicit & MASK_AIX_STRUCT_RET) == 0)\n     {\n       if (DEFAULT_ABI == ABI_V4 && !DRAFT_V4_STRUCT_RET)\n \ttarget_flags = (target_flags & ~MASK_AIX_STRUCT_RET);"}, {"sha": "8e6d28f82bcd6f2ae1ed59e8bb4c15c12ab7a9ba", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 15, "deletions": 28, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b21fb038c9fd9ecf5f5ce362a3d35d993f89b64b/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b21fb038c9fd9ecf5f5ce362a3d35d993f89b64b/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=b21fb038c9fd9ecf5f5ce362a3d35d993f89b64b", "patch": "@@ -162,30 +162,27 @@ extern int target_flags;\n #define MASK_SOFT_FLOAT\t\t0x00000800\n \n /* Enable load/store multiple, even on PowerPC */\n-#define\tMASK_MULTIPLE\t\t0x00001000\n-#define\tMASK_MULTIPLE_SET\t0x00002000\n+#define MASK_MULTIPLE\t\t0x00001000\n \n /* Use string instructions for block moves */\n-#define MASK_STRING\t\t0x00004000\n-#define MASK_STRING_SET\t\t0x00008000\n+#define MASK_STRING\t\t0x00002000\n \n /* Disable update form of load/store */\n-#define MASK_NO_UPDATE\t\t0x00010000\n+#define MASK_NO_UPDATE\t\t0x00004000\n \n /* Disable fused multiply/add operations */\n-#define MASK_NO_FUSED_MADD\t0x00020000\n+#define MASK_NO_FUSED_MADD\t0x00008000\n \n /* Nonzero if we need to schedule the prolog and epilog.  */\n-#define MASK_SCHED_PROLOG\t0x00040000\n+#define MASK_SCHED_PROLOG\t0x00010000\n \n /* Use AltiVec instructions.  */\n-#define MASK_ALTIVEC\t\t0x00080000\n+#define MASK_ALTIVEC\t\t0x00020000\n \n /* Return small structures in memory (as the AIX ABI requires).  */\n-#define MASK_AIX_STRUCT_RET\t0x00100000\n-#define MASK_AIX_STRUCT_RET_SET\t0x00200000\n+#define MASK_AIX_STRUCT_RET\t0x00040000\n \n-/* The only remaining free bit is 0x00400000. sysv4.h uses\n+/* The only remaining free bits are 0x00780000. sysv4.h uses\n    0x00800000 -> 0x40000000, and 0x80000000 is not available\n    because target_flags is signed.  */\n \n@@ -200,10 +197,8 @@ extern int target_flags;\n #define TARGET_MINIMAL_TOC\t(target_flags & MASK_MINIMAL_TOC)\n #define TARGET_64BIT\t\t(target_flags & MASK_64BIT)\n #define TARGET_SOFT_FLOAT\t(target_flags & MASK_SOFT_FLOAT)\n-#define\tTARGET_MULTIPLE\t\t(target_flags & MASK_MULTIPLE)\n-#define\tTARGET_MULTIPLE_SET\t(target_flags & MASK_MULTIPLE_SET)\n+#define TARGET_MULTIPLE\t\t(target_flags & MASK_MULTIPLE)\n #define TARGET_STRING\t\t(target_flags & MASK_STRING)\n-#define TARGET_STRING_SET\t(target_flags & MASK_STRING_SET)\n #define TARGET_NO_UPDATE\t(target_flags & MASK_NO_UPDATE)\n #define TARGET_NO_FUSED_MADD\t(target_flags & MASK_NO_FUSED_MADD)\n #define TARGET_SCHED_PROLOG\t(target_flags & MASK_SCHED_PROLOG)\n@@ -293,18 +288,14 @@ extern int target_flags;\n \t\t\tN_(\"Use hardware fp\")},\t\t\t\t\\\n   {\"soft-float\",\tMASK_SOFT_FLOAT,\t\t\t\t\\\n \t\t\tN_(\"Do not use hardware fp\")},\t\t\t\\\n-  {\"multiple\",\t\tMASK_MULTIPLE | MASK_MULTIPLE_SET,\t\t\\\n+  {\"multiple\",\t\tMASK_MULTIPLE,\t\t\t\t\t\\\n \t\t\tN_(\"Generate load/store multiple instructions\")},\t\\\n   {\"no-multiple\",\t- MASK_MULTIPLE,\t\t\t\t\\\n \t\t\tN_(\"Do not generate load/store multiple instructions\")},\\\n-  {\"no-multiple\",\tMASK_MULTIPLE_SET,\t\t\t\t\\\n-\t\t\t\"\"},\t\t\t\t\t\t\\\n-  {\"string\",\t\tMASK_STRING | MASK_STRING_SET,\t\t\t\\\n+  {\"string\",\t\tMASK_STRING,\t\t\t\t\t\\\n \t\t\tN_(\"Generate string instructions for block moves\")},\\\n   {\"no-string\",\t\t- MASK_STRING,\t\t\t\t\t\\\n \t\t\tN_(\"Do not generate string instructions for block moves\")},\\\n-  {\"no-string\",\t\tMASK_STRING_SET,\t\t\t\t\\\n-\t\t\t\"\"},\t\t\t\t\t\t\\\n   {\"update\",\t\t- MASK_NO_UPDATE,\t\t\t\t\\\n \t\t\tN_(\"Generate load/store with update instructions\")},\\\n   {\"no-update\",\t\tMASK_NO_UPDATE,\t\t\t\t\t\\\n@@ -321,17 +312,13 @@ extern int target_flags;\n \t\t\t\"\"},\t\t\t\t\t\t\\\n   {\"no-sched-epilog\",   -MASK_SCHED_PROLOG,                             \\\n \t\t\t\"\"},\t\t\t\t\t\t\\\n-  {\"aix-struct-return\",\tMASK_AIX_STRUCT_RET | MASK_AIX_STRUCT_RET_SET,\t\\\n+  {\"aix-struct-return\",\tMASK_AIX_STRUCT_RET,\t\t\t\t\\\n \t\t\tN_(\"Return all structures in memory (AIX default)\")},\\\n-  {\"svr4-struct-return\", - MASK_AIX_STRUCT_RET,\\\n+  {\"svr4-struct-return\", - MASK_AIX_STRUCT_RET,\t\t\t\t\\\n \t\t\tN_(\"Return small structures in registers (SVR4 default)\")},\\\n-  {\"svr4-struct-return\",MASK_AIX_STRUCT_RET_SET,\\\n-\t\t\t\"\"},\\\n-  {\"no-aix-struct-return\", - MASK_AIX_STRUCT_RET,\\\n-\t\t\t\"\"},\\\n-  {\"no-aix-struct-return\", MASK_AIX_STRUCT_RET_SET,\\\n+  {\"no-aix-struct-return\", - MASK_AIX_STRUCT_RET,\t\t\t\\\n \t\t\t\"\"},\\\n-  {\"no-svr4-struct-return\", MASK_AIX_STRUCT_RET | MASK_AIX_STRUCT_RET_SET,\\\n+  {\"no-svr4-struct-return\", MASK_AIX_STRUCT_RET,\t\t\t\\\n \t\t\t\"\"},\\\n   SUBTARGET_SWITCHES\t\t\t\t\t\t\t\\\n   {\"\",\t\t\tTARGET_DEFAULT | MASK_SCHED_PROLOG,\t\t\\"}]}