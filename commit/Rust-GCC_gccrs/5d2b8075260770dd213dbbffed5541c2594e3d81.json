{"sha": "5d2b8075260770dd213dbbffed5541c2594e3d81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWQyYjgwNzUyNjA3NzBkZDIxM2RiYmZmZWQ1NTQxYzI1OTRlM2Q4MQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-10-10T11:25:45Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-10-10T11:25:45Z"}, "message": "PR libstdc++/82417 do not include C99 <complex.h> in strict modes\n\nAs an extension the C++ version of <complex.h> includes the C version,\nbut that defines macros with non-reserved names that should not be\ndefined in ISO C++. Only include the C header for non-strict modes, or\nfor pre-C++11 (because C++98 doesn't mention <complex.h> at all).\n\n\tPR libstdc++/59087\n\tPR libstdc++/82417\n\t* include/c_compatibility/complex.h [!C++98 && __STRICT_ANSI__]: Do\n\tnot include C library's <complex.h>.\n\t* testsuite/26_numerics/complex/c99.cc: Depend on __STRICT_ANSI__.\n\t* testsuite/26_numerics/headers/complex.h/std_c++11.h: New test.\n\t* testsuite/26_numerics/headers/complex.h/std_gnu++11.h: New test.\n\t* testsuite/26_numerics/headers/complex.h/std_c++98.h: New test.\n\nFrom-SVN: r253581", "tree": {"sha": "98170b46edf170d15a8630cb132720b144d7ad4b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98170b46edf170d15a8630cb132720b144d7ad4b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5d2b8075260770dd213dbbffed5541c2594e3d81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d2b8075260770dd213dbbffed5541c2594e3d81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d2b8075260770dd213dbbffed5541c2594e3d81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d2b8075260770dd213dbbffed5541c2594e3d81/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efe040bf219da9f0aa2298c19909e392c784b3d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efe040bf219da9f0aa2298c19909e392c784b3d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efe040bf219da9f0aa2298c19909e392c784b3d3"}], "stats": {"total": 158, "additions": 156, "deletions": 2}, "files": [{"sha": "ed4ee2ca428818aa692e87247378f3232b11c3ac", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d2b8075260770dd213dbbffed5541c2594e3d81/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d2b8075260770dd213dbbffed5541c2594e3d81/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5d2b8075260770dd213dbbffed5541c2594e3d81", "patch": "@@ -1,3 +1,14 @@\n+2017-10-10  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/59087\n+\tPR libstdc++/82417\n+\t* include/c_compatibility/complex.h [!C++98 && __STRICT_ANSI__]: Do\n+\tnot include C library's <complex.h>.\n+\t* testsuite/26_numerics/complex/c99.cc: Depend on __STRICT_ANSI__.\n+\t* testsuite/26_numerics/headers/complex.h/std_c++11.h: New test.\n+\t* testsuite/26_numerics/headers/complex.h/std_gnu++11.h: New test.\n+\t* testsuite/26_numerics/headers/complex.h/std_c++98.h: New test.\n+\n 2017-10-05  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* testsuite/20_util/to_chars/1.cc: Add dg-require-string-conversions."}, {"sha": "4b2343926ef7c1cb079cb94bf476f00293f1afc9", "filename": "libstdc++-v3/include/c_compatibility/complex.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d2b8075260770dd213dbbffed5541c2594e3d81/libstdc%2B%2B-v3%2Finclude%2Fc_compatibility%2Fcomplex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d2b8075260770dd213dbbffed5541c2594e3d81/libstdc%2B%2B-v3%2Finclude%2Fc_compatibility%2Fcomplex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fc_compatibility%2Fcomplex.h?ref=5d2b8075260770dd213dbbffed5541c2594e3d81", "patch": "@@ -32,7 +32,9 @@\n # include <ccomplex>\n #endif\n \n-#if _GLIBCXX_HAVE_COMPLEX_H\n+#if __cplusplus >= 201103L && defined(__STRICT_ANSI__)\n+// For strict modes do not include the C library's <complex.h>, see PR 82417.\n+#elif _GLIBCXX_HAVE_COMPLEX_H\n # include_next <complex.h>\n # ifdef _GLIBCXX_COMPLEX\n // See PR56111, keep the macro in C++03 if possible."}, {"sha": "9b0def408c85349a0c7d693a408ffa59e2829e9c", "filename": "libstdc++-v3/testsuite/26_numerics/complex/c99.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d2b8075260770dd213dbbffed5541c2594e3d81/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fc99.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d2b8075260770dd213dbbffed5541c2594e3d81/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fc99.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fcomplex%2Fc99.cc?ref=5d2b8075260770dd213dbbffed5541c2594e3d81", "patch": "@@ -26,7 +26,8 @@\n \n int main()\n {\n-#if _GLIBCXX_HAVE_COMPLEX_H\n+#if _GLIBCXX_HAVE_COMPLEX_H && !defined(__STRICT_ANSI__)\n+  // This is a GNU extension.\n   double _Complex x = .5;\n   double _Complex y = cacos (x);\n   (void)y;"}, {"sha": "22d84b2f14e4bef2ecb4490a3e820aec8014fdc6", "filename": "libstdc++-v3/testsuite/26_numerics/headers/complex.h/std_c++11.h", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d2b8075260770dd213dbbffed5541c2594e3d81/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcomplex.h%2Fstd_c%2B%2B11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d2b8075260770dd213dbbffed5541c2594e3d81/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcomplex.h%2Fstd_c%2B%2B11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcomplex.h%2Fstd_c%2B%2B11.h?ref=5d2b8075260770dd213dbbffed5541c2594e3d81", "patch": "@@ -0,0 +1,33 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=c++11\" }\n+\n+#include <complex.h>\n+\n+// Should be equivalent to #include <complex>\n+template class std::complex<double>;\n+\n+#ifdef complex\n+# error \"'complex' is defined as a macro by <complex.h> for -std=c++11\"\n+#endif\n+#ifdef imaginary\n+# error \"'imaginary' is defined as a macro by <complex.h> for -std=c++11\"\n+#endif\n+#ifdef I\n+# error \"'I' is defined as a macro by <complex.h> for -std=c++11\"\n+#endif"}, {"sha": "62674466c3d3a932541c984970d0434efbc2b958", "filename": "libstdc++-v3/testsuite/26_numerics/headers/complex.h/std_c++98.h", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d2b8075260770dd213dbbffed5541c2594e3d81/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcomplex.h%2Fstd_c%2B%2B98.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d2b8075260770dd213dbbffed5541c2594e3d81/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcomplex.h%2Fstd_c%2B%2B98.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcomplex.h%2Fstd_c%2B%2B98.h?ref=5d2b8075260770dd213dbbffed5541c2594e3d81", "patch": "@@ -0,0 +1,55 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=c++98\" }\n+\n+#include <complex.h>\n+\n+// Should be equivalent to C99 <complex>, not C++ <complex>\n+namespace std\n+{\n+  struct complex;\n+}\n+\n+#if _GLIBCXX_HAVE_COMPLEX_H\n+namespace test\n+{\n+  using ::cacos;\n+  using ::casin;\n+  using ::catan;\n+  using ::ccos;\n+  using ::csin;\n+  using ::ctan;\n+  using ::ccosh;\n+  using ::csinh;\n+  using ::ctanh;\n+  using ::cexp;\n+  using ::clog;\n+  using ::cabs;\n+  using ::cpow;\n+  using ::csqrt;\n+  using ::carg;\n+  using ::cimag;\n+  using ::conj;\n+  using ::cproj;\n+  using ::creal;\n+}\n+#endif\n+\n+#ifndef complex\n+# error \"'complex' is not defined as a macro by <complex.h> for -std=c++98\"\n+#endif"}, {"sha": "9110ae4ecb266630897590e09de4616859c7198a", "filename": "libstdc++-v3/testsuite/26_numerics/headers/complex.h/std_gnu++11.h", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5d2b8075260770dd213dbbffed5541c2594e3d81/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcomplex.h%2Fstd_gnu%2B%2B11.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5d2b8075260770dd213dbbffed5541c2594e3d81/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcomplex.h%2Fstd_gnu%2B%2B11.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fheaders%2Fcomplex.h%2Fstd_gnu%2B%2B11.h?ref=5d2b8075260770dd213dbbffed5541c2594e3d81", "patch": "@@ -0,0 +1,52 @@\n+// Copyright (C) 2017 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+\n+#include <complex.h>\n+\n+// Should be equivalent to #include <complex>\n+template class std::complex<double>;\n+\n+#if _GLIBCXX_HAVE_COMPLEX_H\n+namespace test\n+{\n+  using ::cacos;\n+  using ::casin;\n+  using ::catan;\n+  using ::ccos;\n+  using ::csin;\n+  using ::ctan;\n+  using ::ccosh;\n+  using ::csinh;\n+  using ::ctanh;\n+  using ::cexp;\n+  using ::clog;\n+  using ::cabs;\n+  using ::cpow;\n+  using ::csqrt;\n+  using ::carg;\n+  using ::cimag;\n+  using ::conj;\n+  using ::cproj;\n+  using ::creal;\n+}\n+#endif\n+\n+#ifdef complex\n+# error \"'complex' is defined as a macro by <complex.h> for -std=gnu++11\"\n+#endif"}]}