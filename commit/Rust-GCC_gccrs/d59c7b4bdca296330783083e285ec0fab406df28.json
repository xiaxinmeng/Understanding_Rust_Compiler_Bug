{"sha": "d59c7b4bdca296330783083e285ec0fab406df28", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU5YzdiNGJkY2EyOTYzMzA3ODMwODNlMjg1ZWMwZmFiNDA2ZGYyOA==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2004-07-01T08:47:16Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2004-07-01T08:47:16Z"}, "message": "target.h (struct gcc_target): Add new field to struct cxx: import_export_class.\n\n* target.h (struct gcc_target): Add new field to struct cxx: import_export_class.\n* target-def.h (TARGET_CXX): Initialise the new field.\n  (TARGET_CXX_IMPORT_EXPORT_CLASS): Provide a default value for the new field.\n* doc/tm.texi: Document the new target hook.\n* decl2.c (import_export_class): Invoke the import_export_class field in the\n  gcc_target structure if it is not empty.\n\nFrom-SVN: r83964", "tree": {"sha": "bc3cf975abb40ef9d243230199d2065263a4789e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc3cf975abb40ef9d243230199d2065263a4789e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d59c7b4bdca296330783083e285ec0fab406df28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d59c7b4bdca296330783083e285ec0fab406df28", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d59c7b4bdca296330783083e285ec0fab406df28", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d59c7b4bdca296330783083e285ec0fab406df28/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ed63f99a3c6a15acd707795ec041f2ef0e9e74f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed63f99a3c6a15acd707795ec041f2ef0e9e74f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed63f99a3c6a15acd707795ec041f2ef0e9e74f3"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "02e841262c9e56c681b616c05e46e47875119d32", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d59c7b4bdca296330783083e285ec0fab406df28/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d59c7b4bdca296330783083e285ec0fab406df28/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d59c7b4bdca296330783083e285ec0fab406df28", "patch": "@@ -1,3 +1,12 @@\n+2004-07-01  Nick Clifton  <nickc@redhat.com>\n+\n+\t* target.h (struct gcc_target): Add new field to struct cxx:\n+\timport_export_class.\n+        * target-def.h (TARGET_CXX): Initialise the new field.\n+        (TARGET_CXX_IMPORT_EXPORT_CLASS): Provide a default value for\n+\tthe new field.  \n+        * doc/tm.texi: Document the new target hook.\n+\n 2004-07-01  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* builtins.c (fold_builtin_classify): Fix typo."}, {"sha": "c8f935823cf26b3ed72d9fbcca224917824827c3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d59c7b4bdca296330783083e285ec0fab406df28/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d59c7b4bdca296330783083e285ec0fab406df28/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=d59c7b4bdca296330783083e285ec0fab406df28", "patch": "@@ -1,3 +1,9 @@\n+2004-07-01  Nick Clifton  <nickc@redhat.com>\n+\n+\t* decl2.c (import_export_class): Invoke the\n+\timport_export_class field in the gcc_target structure if it is not\n+\tempty.\n+\n 2004-06-30  Richard Henderson  (rth@redhat.com>\n \n \t* decl.c (start_preparsed_function): Don't set immediate_size_expand."}, {"sha": "191888e1b8786ec767529507be2eeead3c7b1efc", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d59c7b4bdca296330783083e285ec0fab406df28/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d59c7b4bdca296330783083e285ec0fab406df28/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=d59c7b4bdca296330783083e285ec0fab406df28", "patch": "@@ -1510,6 +1510,10 @@ import_export_class (tree ctype)\n     import_export = 0;\n #endif\n \n+  /* Allow backends the chance to overrule the decision.  */\n+  if (targetm.cxx.import_export_class)\n+    import_export = targetm.cxx.import_export_class (ctype, import_export);\n+\n   if (import_export)\n     {\n       SET_CLASSTYPE_INTERFACE_KNOWN (ctype);"}, {"sha": "a5455b00baf0aab34d33493045e69f0b3830d90b", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d59c7b4bdca296330783083e285ec0fab406df28/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d59c7b4bdca296330783083e285ec0fab406df28/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=d59c7b4bdca296330783083e285ec0fab406df28", "patch": "@@ -8495,6 +8495,15 @@ This hook should return @code{true} if the element size should be stored in\n array cookies.  The default is to return @code{false}.\n @end deftypefn\n \n+@deftypefn {Target Hook} int TARGET_CXX_IMPORT_EXPORT_CLASS (tree  @var{type}, int @var{import_export})\n+If defined by a backend this hook allows the decision made to export\n+class @var{type} to be overruled.  Upon entry @var{import_export}\n+will contain 1 if the class is going to be exported, -1 if it is going\n+to be imported and 0 otherwise.  This function should return the\n+modified value and perform any other actions necessary to support the\n+backend's targeted operating system.\n+@end deftypefn\n+\n @node Misc\n @section Miscellaneous Parameters\n @cindex parameters, miscellaneous"}, {"sha": "905879441c5400a4f79735c08432c840c0700776", "filename": "gcc/target-def.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d59c7b4bdca296330783083e285ec0fab406df28/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d59c7b4bdca296330783083e285ec0fab406df28/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=d59c7b4bdca296330783083e285ec0fab406df28", "patch": "@@ -410,12 +410,17 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n #define TARGET_CXX_COOKIE_HAS_SIZE hook_bool_void_false\n #endif\n \n+#ifndef TARGET_CXX_IMPORT_EXPORT_CLASS\n+#define TARGET_CXX_IMPORT_EXPORT_CLASS NULL\n+#endif\n+\n #define TARGET_CXX\t\t\\\n   {\t\t\t\t\\\n     TARGET_CXX_GUARD_TYPE,\t\\\n     TARGET_CXX_GUARD_MASK_BIT,\t\\\n     TARGET_CXX_GET_COOKIE_SIZE,\t\\\n-    TARGET_CXX_COOKIE_HAS_SIZE\t\\\n+    TARGET_CXX_COOKIE_HAS_SIZE,\t\\\n+    TARGET_CXX_IMPORT_EXPORT_CLASS\t\\\n   }\n \n /* The whole shebang.  */"}, {"sha": "fd58fecba90ca07ac71f73125f93f429457f6649", "filename": "gcc/target.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d59c7b4bdca296330783083e285ec0fab406df28/gcc%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d59c7b4bdca296330783083e285ec0fab406df28/gcc%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.h?ref=d59c7b4bdca296330783083e285ec0fab406df28", "patch": "@@ -487,6 +487,9 @@ struct gcc_target\n     /* Returns true if the element size should be stored in the\n        array cookie.  */\n     bool (*cookie_has_size) (void);\n+    /* Allows backends to perform additional processing when\n+       deciding if a class should be exported or imported.  */\n+    int (*import_export_class) (tree, int);\n   } cxx;\n \n   /* Leave the boolean fields at the end.  */"}]}