{"sha": "509a31f8e558782f0cdc3c337dc957bb443a4d23", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA5YTMxZjhlNTU4NzgyZjBjZGMzYzMzN2RjOTU3YmI0NDNhNGQyMw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-07-05T12:47:35Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-07-05T12:47:35Z"}, "message": "Don't propagate hard registers in forward_propagate_subreg.\n\n2011-07-05  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR rtl-optimization/47449\n\t* fwprop.c (forward_propagate_subreg): Don't propagate hard\n\tregister nor zero/sign extended hard register.\n\nFrom-SVN: r175849", "tree": {"sha": "60b64b85fe821bb1add17c4d1cf8519acc6a22df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60b64b85fe821bb1add17c4d1cf8519acc6a22df"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/509a31f8e558782f0cdc3c337dc957bb443a4d23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/509a31f8e558782f0cdc3c337dc957bb443a4d23", "html_url": "https://github.com/Rust-GCC/gccrs/commit/509a31f8e558782f0cdc3c337dc957bb443a4d23", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/509a31f8e558782f0cdc3c337dc957bb443a4d23/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "39becbac3d5c936b5cd5fa69d6f04685216f7e38", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39becbac3d5c936b5cd5fa69d6f04685216f7e38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39becbac3d5c936b5cd5fa69d6f04685216f7e38"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "29eeb6491630e4b1f52ad0f7272a968c725388bd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/509a31f8e558782f0cdc3c337dc957bb443a4d23/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/509a31f8e558782f0cdc3c337dc957bb443a4d23/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=509a31f8e558782f0cdc3c337dc957bb443a4d23", "patch": "@@ -1,3 +1,9 @@\n+2011-07-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR rtl-optimization/47449\n+\t* fwprop.c (forward_propagate_subreg): Don't propagate hard\n+\tregister nor zero/sign extended hard register.\n+\n 2011-07-05  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/49518"}, {"sha": "5db9ed88887b38843f40fe0d9fdf067e11aa8876", "filename": "gcc/fwprop.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/509a31f8e558782f0cdc3c337dc957bb443a4d23/gcc%2Ffwprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/509a31f8e558782f0cdc3c337dc957bb443a4d23/gcc%2Ffwprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffwprop.c?ref=509a31f8e558782f0cdc3c337dc957bb443a4d23", "patch": "@@ -1101,6 +1101,7 @@ forward_propagate_subreg (df_ref use, rtx def_insn, rtx def_set)\n       src = SET_SRC (def_set);\n       if (GET_CODE (src) == SUBREG\n \t  && REG_P (SUBREG_REG (src))\n+\t  && REGNO (SUBREG_REG (src)) >= FIRST_PSEUDO_REGISTER\n \t  && GET_MODE (SUBREG_REG (src)) == use_mode\n \t  && subreg_lowpart_p (src)\n \t  && all_uses_available_at (def_insn, use_insn))\n@@ -1119,6 +1120,7 @@ forward_propagate_subreg (df_ref use, rtx def_insn, rtx def_set)\n       if ((GET_CODE (src) == ZERO_EXTEND\n \t   || GET_CODE (src) == SIGN_EXTEND)\n \t  && REG_P (XEXP (src, 0))\n+\t  && REGNO (XEXP (src, 0)) >= FIRST_PSEUDO_REGISTER\n \t  && GET_MODE (XEXP (src, 0)) == use_mode\n \t  && !free_load_extend (src, def_insn)\n \t  && all_uses_available_at (def_insn, use_insn))"}]}