{"sha": "50a36e4261f5cf4170a6f679bad0d62608bdeba3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBhMzZlNDI2MWY1Y2Y0MTcwYTZmNjc5YmFkMGQ2MjYwOGJkZWJhMw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2010-10-21T21:38:03Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2010-10-21T21:38:03Z"}, "message": "cfgcleanup.c (try_forward_edges): Do not throw away previous steps when stopping because of a different locus on...\n\n\t* cfgcleanup.c (try_forward_edges): Do not throw away previous steps\n\twhen stopping because of a different locus on edge or insn.\n\t(try_optimize_cfg): Add comment.\n\t* cfgrtl.c (rtl_merge_blocks): Tweak log message.  If the destination\n\tblock is a forwarder block, propagate locus on the edge.\n\t(cfg_layout_merge_blocks): Likewise.\n\nFrom-SVN: r165789", "tree": {"sha": "10c3922c8385f847f20a9ba8405c363043095228", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/10c3922c8385f847f20a9ba8405c363043095228"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50a36e4261f5cf4170a6f679bad0d62608bdeba3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50a36e4261f5cf4170a6f679bad0d62608bdeba3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50a36e4261f5cf4170a6f679bad0d62608bdeba3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50a36e4261f5cf4170a6f679bad0d62608bdeba3/comments", "author": null, "committer": null, "parents": [{"sha": "233a46c83456d0be35fd0e0ef826c8d87d97c3cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/233a46c83456d0be35fd0e0ef826c8d87d97c3cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/233a46c83456d0be35fd0e0ef826c8d87d97c3cc"}], "stats": {"total": 65, "additions": 48, "deletions": 17}, "files": [{"sha": "b834082451965359e36b8a4c1596a328d58206f8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a36e4261f5cf4170a6f679bad0d62608bdeba3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a36e4261f5cf4170a6f679bad0d62608bdeba3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50a36e4261f5cf4170a6f679bad0d62608bdeba3", "patch": "@@ -1,3 +1,12 @@\n+2010-10-21  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* cfgcleanup.c (try_forward_edges): Do not throw away previous steps\n+\twhen stopping because of a different locus on edge or insn.\n+\t(try_optimize_cfg): Add comment.\n+\t* cfgrtl.c (rtl_merge_blocks): Tweak log message.  If the destination\n+\tblock is a forwarder block, propagate locus on the edge.\n+\t(cfg_layout_merge_blocks): Likewise.\n+\n 2010-10-21  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/45946"}, {"sha": "881a4f34d184fc97a456bbfcfc04dc7fb5e4d538", "filename": "gcc/cfgcleanup.c", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a36e4261f5cf4170a6f679bad0d62608bdeba3/gcc%2Fcfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a36e4261f5cf4170a6f679bad0d62608bdeba3/gcc%2Fcfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgcleanup.c?ref=50a36e4261f5cf4170a6f679bad0d62608bdeba3", "patch": "@@ -485,22 +485,28 @@ try_forward_edges (int mode, basic_block b)\n \t\t{\n \t\t  /* When not optimizing, ensure that edges or forwarder\n \t\t     blocks with different locus are not optimized out.  */\n-\t\t  int locus = single_succ_edge (target)->goto_locus;\n+\t\t  int new_locus = single_succ_edge (target)->goto_locus;\n+\t\t  int locus = goto_locus;\n \n-\t\t  if (locus && goto_locus && !locator_eq (locus, goto_locus))\n-\t\t    counter = n_basic_blocks;\n-\t\t  else if (locus)\n-\t\t    goto_locus = locus;\n-\n-\t\t  if (INSN_P (BB_END (target)))\n+\t\t  if (new_locus && locus && !locator_eq (new_locus, locus))\n+\t\t    new_target = NULL;\n+\t\t  else\n \t\t    {\n-\t\t      locus = INSN_LOCATOR (BB_END (target));\n+\t\t      if (new_locus)\n+\t\t\tlocus = new_locus;\n \n-\t\t      if (locus && goto_locus\n-\t\t\t  && !locator_eq (locus, goto_locus))\n-\t\t\tcounter = n_basic_blocks;\n-\t\t      else if (locus)\n-\t\t\tgoto_locus = locus;\n+\t\t      new_locus = INSN_P (BB_END (target))\n+\t\t\t\t  ? INSN_LOCATOR (BB_END (target)) : 0;\n+\n+\t\t      if (new_locus && locus && !locator_eq (new_locus, locus))\n+\t\t\tnew_target = NULL;\n+\t\t      else\n+\t\t\t{\n+\t\t\t  if (new_locus)\n+\t\t\t    locus = new_locus;\n+\n+\t\t\t  goto_locus = locus;\n+\t\t\t}\n \t\t    }\n \t\t}\n \t    }\n@@ -2379,6 +2385,7 @@ try_optimize_cfg (int mode)\n \t\t  continue;\n \t\t}\n \n+\t      /* Merge B with its single successor, if any.  */\n \t      if (single_succ_p (b)\n \t\t  && (s = single_succ_edge (b))\n \t\t  && !(s->flags & EDGE_COMPLEX)"}, {"sha": "a19ba8daa2b86e08934048fffa08c1a02e1544b8", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50a36e4261f5cf4170a6f679bad0d62608bdeba3/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50a36e4261f5cf4170a6f679bad0d62608bdeba3/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=50a36e4261f5cf4170a6f679bad0d62608bdeba3", "patch": "@@ -588,10 +588,12 @@ rtl_merge_blocks (basic_block a, basic_block b)\n   rtx b_head = BB_HEAD (b), b_end = BB_END (b), a_end = BB_END (a);\n   rtx del_first = NULL_RTX, del_last = NULL_RTX;\n   rtx b_debug_start = b_end, b_debug_end = b_end;\n+  bool forwarder_p = (b->flags & BB_FORWARDER_BLOCK) != 0;\n   int b_empty = 0;\n \n   if (dump_file)\n-    fprintf (dump_file, \"merging block %d into block %d\\n\", b->index, a->index);\n+    fprintf (dump_file, \"Merging block %d into block %d...\\n\", b->index,\n+\t     a->index);\n \n   while (DEBUG_INSN_P (b_end))\n     b_end = PREV_INSN (b_debug_start = b_end);\n@@ -680,6 +682,13 @@ rtl_merge_blocks (basic_block a, basic_block b)\n \n   df_bb_delete (b->index);\n   BB_END (a) = a_end;\n+\n+  /* If B was a forwarder block, propagate the locus on the edge.  */\n+  if (forwarder_p && !EDGE_SUCC (b, 0)->goto_locus)\n+    EDGE_SUCC (b, 0)->goto_locus = EDGE_SUCC (a, 0)->goto_locus;\n+\n+  if (dump_file)\n+    fprintf (dump_file, \"Merged blocks %d and %d.\\n\", a->index, b->index);\n }\n \n \n@@ -2692,10 +2701,13 @@ cfg_layout_can_merge_blocks_p (basic_block a, basic_block b)\n static void\n cfg_layout_merge_blocks (basic_block a, basic_block b)\n {\n+  bool forwarder_p = (b->flags & BB_FORWARDER_BLOCK) != 0;\n+\n   gcc_checking_assert (cfg_layout_can_merge_blocks_p (a, b));\n \n   if (dump_file)\n-    fprintf (dump_file, \"merging block %d into block %d\\n\", b->index, a->index);\n+    fprintf (dump_file, \"Merging block %d into block %d...\\n\", b->index,\n+\t\t\t a->index);\n \n   /* If there was a CODE_LABEL beginning B, delete it.  */\n   if (LABEL_P (BB_HEAD (b)))\n@@ -2803,9 +2815,12 @@ cfg_layout_merge_blocks (basic_block a, basic_block b)\n       b->il.rtl->footer = NULL;\n     }\n \n+  /* If B was a forwarder block, propagate the locus on the edge.  */\n+  if (forwarder_p && !EDGE_SUCC (b, 0)->goto_locus)\n+    EDGE_SUCC (b, 0)->goto_locus = EDGE_SUCC (a, 0)->goto_locus;\n+\n   if (dump_file)\n-    fprintf (dump_file, \"Merged blocks %d and %d.\\n\",\n-\t     a->index, b->index);\n+    fprintf (dump_file, \"Merged blocks %d and %d.\\n\", a->index, b->index);\n }\n \n /* Split edge E.  */"}]}