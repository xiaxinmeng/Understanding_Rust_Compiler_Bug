{"sha": "391756ad9de0df816b7bc1453969101b979a28fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzkxNzU2YWQ5ZGUwZGY4MTZiN2JjMTQ1Mzk2OTEwMWI5NzlhMjhmYw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2014-10-06T17:30:34Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2014-10-06T17:30:34Z"}, "message": "calls.c (expand_call): Do not use the target as the return slot if it is not sufficiently aligned.\n\n\t* calls.c (expand_call): Do not use the target as the return slot if\n\tit is not sufficiently aligned.\n\nFrom-SVN: r215958", "tree": {"sha": "ea06fd59a50b1ccf2853c4242c258315a40a2f8a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea06fd59a50b1ccf2853c4242c258315a40a2f8a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/391756ad9de0df816b7bc1453969101b979a28fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/391756ad9de0df816b7bc1453969101b979a28fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/391756ad9de0df816b7bc1453969101b979a28fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/391756ad9de0df816b7bc1453969101b979a28fc/comments", "author": null, "committer": null, "parents": [{"sha": "2a8ef767005baf7c026e42a4521673ad1a9320d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a8ef767005baf7c026e42a4521673ad1a9320d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a8ef767005baf7c026e42a4521673ad1a9320d1"}], "stats": {"total": 59, "additions": 58, "deletions": 1}, "files": [{"sha": "73d5d5a6b92dd67eff39762b891bec122f13603a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/391756ad9de0df816b7bc1453969101b979a28fc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/391756ad9de0df816b7bc1453969101b979a28fc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=391756ad9de0df816b7bc1453969101b979a28fc", "patch": "@@ -1,3 +1,8 @@\n+2014-10-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* calls.c (expand_call): Do not use the target as the return slot if\n+\tit is not sufficiently aligned.\n+\n 2014-10-06  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (analyze_swaps commentary): Add"}, {"sha": "9c19f38302a3e7b9fb59a3a2f2153ec9a4cae6af", "filename": "gcc/calls.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/391756ad9de0df816b7bc1453969101b979a28fc/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/391756ad9de0df816b7bc1453969101b979a28fc/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=391756ad9de0df816b7bc1453969101b979a28fc", "patch": "@@ -2377,7 +2377,14 @@ expand_call (tree exp, rtx target, int ignore)\n       {\n \tstruct_value_size = int_size_in_bytes (rettype);\n \n-\tif (target && MEM_P (target) && CALL_EXPR_RETURN_SLOT_OPT (exp))\n+\t/* Even if it is semantically safe to use the target as the return\n+\t   slot, it may be not sufficiently aligned for the return type.  */\n+\tif (CALL_EXPR_RETURN_SLOT_OPT (exp)\n+\t    && target\n+\t    && MEM_P (target)\n+\t    && !(MEM_ALIGN (target) < TYPE_ALIGN (rettype)\n+\t\t && SLOW_UNALIGNED_ACCESS (TYPE_MODE (rettype),\n+\t\t\t\t\t   MEM_ALIGN (target))))\n \t  structure_value_addr = XEXP (target, 0);\n \telse\n \t  {"}, {"sha": "2b54708db15a994d7b3691c84f5b4379f1e77624", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/391756ad9de0df816b7bc1453969101b979a28fc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/391756ad9de0df816b7bc1453969101b979a28fc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=391756ad9de0df816b7bc1453969101b979a28fc", "patch": "@@ -1,3 +1,8 @@\n+2014-10-06  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/return4.adb: New test.\n+\t* gnat.dg/return4_pkg.ad[sb]: New helper.\n+\n 2014-10-06  Edward Smith-Rowland  <3dw4rd@verizon.net>\n \n \t* g++.dg/cpp1y/attr-deprecated-neg.C: Attribute no longer ignored."}, {"sha": "8202acf51bc5521f427e0073ac3f8a45fe8593e1", "filename": "gcc/testsuite/gnat.dg/return4.adb", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/391756ad9de0df816b7bc1453969101b979a28fc/gcc%2Ftestsuite%2Fgnat.dg%2Freturn4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/391756ad9de0df816b7bc1453969101b979a28fc/gcc%2Ftestsuite%2Fgnat.dg%2Freturn4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Freturn4.adb?ref=391756ad9de0df816b7bc1453969101b979a28fc", "patch": "@@ -0,0 +1,22 @@\n+-- { dg-do run }\n+-- { dg-options \"-O\" }\n+\n+with Return4_Pkg; use Return4_Pkg;\n+\n+procedure Return4 is\n+\n+  type Local_Rec is record\n+    C : Character;\n+    R : Rec;\n+  end record;\n+  pragma Pack (Local_Rec);\n+\n+  L : Local_Rec;\n+  for L'Alignment use 2;\n+\n+begin\n+  L.R := Get_Value (0);\n+  if L.R.I1 /= 0 then\n+    raise Program_Error;\n+  end if;\n+end;"}, {"sha": "0b59221c1494995a0774b839bac0c3a5cbe9e97a", "filename": "gcc/testsuite/gnat.dg/return4_pkg.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/391756ad9de0df816b7bc1453969101b979a28fc/gcc%2Ftestsuite%2Fgnat.dg%2Freturn4_pkg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/391756ad9de0df816b7bc1453969101b979a28fc/gcc%2Ftestsuite%2Fgnat.dg%2Freturn4_pkg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Freturn4_pkg.adb?ref=391756ad9de0df816b7bc1453969101b979a28fc", "patch": "@@ -0,0 +1,9 @@\n+package body Return4_Pkg  is\n+\n+  function Get_Value (I : Integer) return Rec is\n+    Value : Rec := (I1 => I, I2 => I, I3 => I);\n+  begin\n+    return Value;\n+  end;\n+\n+end Return4_Pkg;"}, {"sha": "9ed220fd10d9974c7d11e2278f23c29fdff7f220", "filename": "gcc/testsuite/gnat.dg/return4_pkg.ads", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/391756ad9de0df816b7bc1453969101b979a28fc/gcc%2Ftestsuite%2Fgnat.dg%2Freturn4_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/391756ad9de0df816b7bc1453969101b979a28fc/gcc%2Ftestsuite%2Fgnat.dg%2Freturn4_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Freturn4_pkg.ads?ref=391756ad9de0df816b7bc1453969101b979a28fc", "patch": "@@ -0,0 +1,9 @@\n+package Return4_Pkg is\n+\n+  type Rec is record\n+    I1, I2, I3 : Integer;\n+  end record;\n+\n+  function Get_Value (I : Integer) return Rec;\n+\n+end Return4_Pkg;"}]}