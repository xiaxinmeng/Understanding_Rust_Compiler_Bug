{"sha": "1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUyZDc5ZTJiM2MyNDk2OTc5MzFiNmJkMGVhOTNmMGE0MDkxYzJlNg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-20T15:43:06Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-20T15:43:06Z"}, "message": "[multiple changes]\n\n2014-11-20  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch12.adb: Minor reformatting.\n\n2014-11-20  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* s-osinte-vxworks.ads: Add comments. Minor reformatting.\n\n2014-11-20  Yannick Moy  <moy@adacore.com>\n\n\t* sem_prag.adb, sem_elab.adb: Minor rewording of error message in\n\tSPARK mode, for consistency.\n\nFrom-SVN: r217876", "tree": {"sha": "60df956cf8090cac82b7f84da5366506e3f64542", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60df956cf8090cac82b7f84da5366506e3f64542"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6/comments", "author": null, "committer": null, "parents": [{"sha": "0e290c54ec1dcc5ca0c5091b8ccc85cc696d7336", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e290c54ec1dcc5ca0c5091b8ccc85cc696d7336", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e290c54ec1dcc5ca0c5091b8ccc85cc696d7336"}], "stats": {"total": 52, "additions": 34, "deletions": 18}, "files": [{"sha": "a3639674a50006148bcc8ea8a32f9ae2d6ae704c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6", "patch": "@@ -1,3 +1,16 @@\n+2014-11-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch12.adb: Minor reformatting.\n+\n+2014-11-20  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* s-osinte-vxworks.ads: Add comments. Minor reformatting.\n+\n+2014-11-20  Yannick Moy  <moy@adacore.com>\n+\n+\t* sem_prag.adb, sem_elab.adb: Minor rewording of error message in\n+\tSPARK mode, for consistency.\n+\n 2014-11-20  Vasiliy Fofanov  <fofanov@adacore.com>\n \n \t* gnat_ugn.texi: New section on gnattest stubbing. Minor"}, {"sha": "3509ecd4d1ac3d787924774310d9589fbcf1c361", "filename": "gcc/ada/s-osinte-vxworks.ads", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6/gcc%2Fada%2Fs-osinte-vxworks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6/gcc%2Fada%2Fs-osinte-vxworks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-osinte-vxworks.ads?ref=1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6", "patch": "@@ -7,7 +7,7 @@\n --                                   S p e c                                --\n --                                                                          --\n --            Copyright (C) 1991-1994, Florida State University             --\n---          Copyright (C) 1995-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1995-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNARL is free software; you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -32,8 +32,8 @@\n \n --  This is the VxWorks version of this package\n \n---  This package encapsulates all direct interfaces to OS services\n---  that are needed by the tasking run-time (libgnarl).\n+--  This package encapsulates all direct interfaces to OS services that are\n+--  needed by the tasking run-time (libgnarl).\n \n --  PLEASE DO NOT add any with-clauses to this package or remove the pragma\n --  Preelaborate. This package is designed to be a bottom-level (leaf) package.\n@@ -203,6 +203,10 @@ package System.OS_Interface is\n \n    subtype t_id is System.VxWorks.Ext.t_id;\n    subtype Thread_Id is t_id;\n+   --  Thread_Id and t_id are VxWorks identifiers for tasks. This value,\n+   --  although represented as a Long_Integer, is in fact an address. With\n+   --  some BSPs, this address can have a value sufficiently high that the\n+   --  Thread_Id becomes negative: this should not be considered as an error.\n \n    function kill (pid : t_id; sig : Signal) return int;\n    pragma Inline (kill);\n@@ -211,17 +215,16 @@ package System.OS_Interface is\n \n    function Task_Stop (tid : t_id) return int\n      renames System.VxWorks.Ext.Task_Stop;\n-   --  If we are in the kernel space, stop the task whose t_id is\n-   --  given in parameter in such a way that it can be examined by the\n-   --  debugger. This typically maps to taskSuspend on VxWorks 5 and\n-   --  to taskStop on VxWorks 6.\n+   --  If we are in the kernel space, stop the task whose t_id is given in\n+   --  parameter in such a way that it can be examined by the debugger. This\n+   --  typically maps to taskSuspend on VxWorks 5 and to taskStop on VxWorks 6.\n \n    function Task_Cont (tid : t_id) return int\n      renames System.VxWorks.Ext.Task_Cont;\n-   --  If we are in the kernel space, continue the task whose t_id is\n-   --  given in parameter if it has been stopped previously to be examined\n-   --  by the debugger (e.g. by taskStop). It typically maps to taskResume\n-   --  on VxWorks 5 and to taskCont on VxWorks 6.\n+   --  If we are in the kernel space, continue the task whose t_id is given\n+   --  in parameter if it has been stopped previously to be examined by the\n+   --  debugger (e.g. by taskStop). It typically maps to taskResume on VxWorks\n+   --  5 and to taskCont on VxWorks 6.\n \n    function Int_Lock return int renames System.VxWorks.Ext.Int_Lock;\n    --  If we are in the kernel space, lock interrupts. It typically maps to\n@@ -325,6 +328,7 @@ package System.OS_Interface is\n    pragma Import (C, taskVarGet, \"taskVarGet\");\n \n    --  VxWorks 6.x specific functions\n+\n    --  Can only be called from the VxWorks 6 run-time libary that supports\n    --  tlsLib, and not by the VxWorks 6.6 SMP library\n \n@@ -469,9 +473,9 @@ package System.OS_Interface is\n       Handler   : Interrupt_Handler;\n       Parameter : System.Address := System.Null_Address) return int;\n    pragma Inline (Interrupt_Connect);\n-   --  Use this to set up an user handler. The routine installs a user\n-   --  handler which is invoked after the OS has saved enough context for a\n-   --  high-level language routine to be safely invoked.\n+   --  Use this to set up an user handler. The routine installs a user handler\n+   --  which is invoked after the OS has saved enough context for a high-level\n+   --  language routine to be safely invoked.\n \n    function Interrupt_Context return int;\n    pragma Inline (Interrupt_Context);"}, {"sha": "44a91b6c5164cde06e9c342e0f994603fda76c02", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6", "patch": "@@ -10237,7 +10237,6 @@ package body Sem_Ch12 is\n                   and then Is_Constr_Subt_For_U_Nominal (Etype (Actual))\n                then\n                   Freeze_Before (Instantiation_Node, Etype (Actual));\n-\n                else\n                   Freeze_Before (Instantiation_Node, Typ);\n                end if;"}, {"sha": "a57a477539de314b3e4baa412da158b8d3959737", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6", "patch": "@@ -924,7 +924,7 @@ package body Sem_Elab is\n             if Inst_Case then\n                if SPARK_Mode = On then\n                   Error_Msg_NE\n-                    (\"instantiation of & during elaboration in SPARK mode\",\n+                    (\"instantiation of & during elaboration in SPARK\",\n                      N, Ent);\n \n                else\n@@ -955,7 +955,7 @@ package body Sem_Elab is\n \n                elsif SPARK_Mode = On then\n                   Error_Msg_NE\n-                    (\"call to & during elaboration in SPARK mode\", N, Ent);\n+                    (\"call to & during elaboration in SPARK\", N, Ent);\n \n                else\n                   Elab_Warning"}, {"sha": "1ea8de824c75d42629d00bce15a306f93c0c27a4", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=1e2d79e2b3c249697931b6bd0ea93f0a4091c2e6", "patch": "@@ -13126,7 +13126,7 @@ package body Sem_Prag is\n \n          begin\n             if SPARK_Mode = On then\n-               Error_Msg_N (\"pragma Elaborate not allowed in SPARK mode\", N);\n+               Error_Msg_N (\"pragma Elaborate not allowed in SPARK\", N);\n             end if;\n \n             --  Pragma must be in context items list of a compilation unit"}]}