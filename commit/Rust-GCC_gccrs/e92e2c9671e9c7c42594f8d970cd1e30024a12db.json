{"sha": "e92e2c9671e9c7c42594f8d970cd1e30024a12db", "node_id": "C_kwDOANBUbNoAKGU5MmUyYzk2NzFlOWM3YzQyNTk0ZjhkOTcwY2QxZTMwMDI0YTEyZGI", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-02-10T00:17:42Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2023-02-10T00:17:42Z"}, "message": "Daily bump.", "tree": {"sha": "f96d6cddb78bbcd3e937a5be90ad44fd147008d6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f96d6cddb78bbcd3e937a5be90ad44fd147008d6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e92e2c9671e9c7c42594f8d970cd1e30024a12db", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e92e2c9671e9c7c42594f8d970cd1e30024a12db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e92e2c9671e9c7c42594f8d970cd1e30024a12db", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e92e2c9671e9c7c42594f8d970cd1e30024a12db/comments", "author": null, "committer": null, "parents": [{"sha": "67b82bc1b29b82e4577df9491793624f3a8eb12f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67b82bc1b29b82e4577df9491793624f3a8eb12f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67b82bc1b29b82e4577df9491793624f3a8eb12f"}], "stats": {"total": 169, "additions": 168, "deletions": 1}, "files": [{"sha": "1d18352ecd649db9137ca5292c369b4815f7e0cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e92e2c9671e9c7c42594f8d970cd1e30024a12db/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e92e2c9671e9c7c42594f8d970cd1e30024a12db/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e92e2c9671e9c7c42594f8d970cd1e30024a12db", "patch": "@@ -1,3 +1,57 @@\n+2023-02-09  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\t* ira.h (struct ira_reg_equiv_s): Add new field caller_save_p.\n+\t* ira.cc (validate_equiv_mem): Check memref address variance.\n+\t(no_equiv): Clear caller_save_p flag.\n+\t(update_equiv_regs): Define caller save equivalence for\n+\tvalid_combine.\n+\t(setup_reg_equiv): Clear defined_p flag for caller save equivalence.\n+\t* lra-constraints.cc (lra_copy_reg_equiv): Add new arg\n+\tcall_save_p.  Use caller save equivalence depending on the arg.\n+\t(split_reg): Adjust the call.\n+\n+2023-02-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/100758\n+\t* common/config/i386/cpuinfo.h (get_zhaoxin_cpu): Formatting fixes.\n+\t(cpu_indicator_init): Call get_available_features for all CPUs with\n+\tmax_level >= 1, rather than just Intel, AMD or Zhaoxin.  Formatting\n+\tfixes.\n+\n+2023-02-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/108688\n+\t* match.pd (bit_field_ref [bit_insert]): Simplify BIT_FIELD_REF\n+\tof BIT_INSERT_EXPR extracting exactly all inserted bits even\n+\twhen without mode precision.  Formatting fixes.\n+\n+2023-02-09  Andrew Pinski  <apinski@marvell.com>\n+\n+\tPR tree-optimization/108688\n+\t* match.pd (bit_field_ref [bit_insert]): Avoid generating\n+\tBIT_FIELD_REFs of non-mode-precision integral operands.\n+\n+2023-02-09  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/100758\n+\t* doc/extend.texi: Document that the function\n+\tdoes not work correctly for old VIA processors.\n+\n+2023-02-09  Andreas Schwab  <schwab@suse.de>\n+\n+\t* lto-wrapper.cc (merge_and_complain): Handle\n+\t-funwind-tables and -fasynchronous-unwind-tables.\n+\t(append_compiler_options): Likewise.\n+\n+2023-02-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/26854\n+\t* tree-into-ssa.cc (update_ssa): Turn blocks_to_update to tree\n+\tview around insert_updated_phi_nodes_for.\n+\t* tree-ssa-alias.cc (maybe_skip_until): Allocate visited bitmap\n+\tin tree view.\n+\t(walk_aliased_vdefs_1): Likewise.\n+\n 2023-02-08  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/include/gpl_v3.texi: Change fsf.org to www.fsf.org."}, {"sha": "13a9e4dfacf0d1ea036c556ccd475ba74b8c3454", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e92e2c9671e9c7c42594f8d970cd1e30024a12db/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e92e2c9671e9c7c42594f8d970cd1e30024a12db/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=e92e2c9671e9c7c42594f8d970cd1e30024a12db", "patch": "@@ -1 +1 @@\n-20230209\n+20230210"}, {"sha": "8744b5be1f7bc106236c450ae614b23b2a0174ba", "filename": "gcc/analyzer/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e92e2c9671e9c7c42594f8d970cd1e30024a12db/gcc%2Fanalyzer%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e92e2c9671e9c7c42594f8d970cd1e30024a12db/gcc%2Fanalyzer%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2FChangeLog?ref=e92e2c9671e9c7c42594f8d970cd1e30024a12db", "patch": "@@ -1,3 +1,9 @@\n+2023-02-09  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/108733\n+\t* state-purge.cc (get_candidate_for_purging): Add ADDR_EXPR\n+\tand MEM_REF.\n+\n 2023-02-08  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR analyzer/108704"}, {"sha": "d4d884596276a641ae32b6acacd6d8848ff15aed", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e92e2c9671e9c7c42594f8d970cd1e30024a12db/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e92e2c9671e9c7c42594f8d970cd1e30024a12db/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=e92e2c9671e9c7c42594f8d970cd1e30024a12db", "patch": "@@ -1,3 +1,8 @@\n+2023-02-09  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* c-parser.cc (c_parser_omp_allocate): Parse align\n+\tclause and check for restrictions.\n+\n 2023-02-08  Joseph Myers  <joseph@codesourcery.com>\n \n \t* c-typeck.cc (check_constexpr_init): Remove argument"}, {"sha": "4c894ba8a135ace472cefea83ebe2c39ab768a9c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e92e2c9671e9c7c42594f8d970cd1e30024a12db/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e92e2c9671e9c7c42594f8d970cd1e30024a12db/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e92e2c9671e9c7c42594f8d970cd1e30024a12db", "patch": "@@ -1,3 +1,21 @@\n+2023-02-10  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/107079\n+\t* call.cc (set_up_extended_ref_temp): Pass var to maybe_constant_init.\n+\n+2023-02-09  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* parser.cc (cp_parser_omp_allocate): Parse align\n+\tclause and check for restrictions.\n+\n+2023-02-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/108698\n+\t* mangle.cc (write_expression, write_template_arg): Handle\n+\tEXCESS_PRECISION_EXPR with REAL_CST operand as\n+\twrite_template_arg_literal on fold_convert of the REAL_CST\n+\tto EXCESS_PRECISION_EXPR type.\n+\n 2023-02-06  Patrick Palka  <ppalka@redhat.com>\n \n \tPR c++/107461"}, {"sha": "f0cca6ee20bcbff3a1cca727257246958ecb54ee", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e92e2c9671e9c7c42594f8d970cd1e30024a12db/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e92e2c9671e9c7c42594f8d970cd1e30024a12db/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=e92e2c9671e9c7c42594f8d970cd1e30024a12db", "patch": "@@ -1,3 +1,25 @@\n+2023-02-09  Harald Anlauf  <anlauf@gmx.de>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/69636\n+\tPR fortran/103779\n+\t* intrinsic.cc (gfc_convert_chartype): Recover on invalid character\n+\tkind in conversion instead of generating an internal error.\n+\n+2023-02-09  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/107424\n+\t* trans-openmp.cc (struct dovar_init_d): Add 'sym' and\n+\t'non_unit_incr' members.\n+\t(gfc_nonrect_loop_expr): New.\n+\t(gfc_trans_omp_do): Call it; use normal loop bounds\n+\tfor unit stride - and only create local loop var.\n+\n+2023-02-09  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* parse.cc (decode_omp_directive): Really ignore 'assumes' with\n+\t-fopenmp-simd.\n+\n 2023-02-08  Steve Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/103259"}, {"sha": "00f17ac35170c4d9ed802d7dd9746f6415d6af80", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e92e2c9671e9c7c42594f8d970cd1e30024a12db/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e92e2c9671e9c7c42594f8d970cd1e30024a12db/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e92e2c9671e9c7c42594f8d970cd1e30024a12db", "patch": "@@ -1,3 +1,55 @@\n+2023-02-10  Marek Polacek  <polacek@redhat.com>\n+\n+\tPR c++/107079\n+\t* g++.dg/cpp0x/constexpr-nsdmi2.C: New test.\n+\n+2023-02-09  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR analyzer/108733\n+\t* gcc.dg/analyzer/torture/uninit-pr108733.c: New test.\n+\n+2023-02-09  Vladimir N. Makarov  <vmakarov@redhat.com>\n+\n+\t* gcc.target/i386/pr103541.c: New.\n+\t* g++.target/i386/pr108711.C: New.\n+\n+2023-02-09  Harald Anlauf  <anlauf@gmx.de>\n+\t    Steven G. Kargl  <kargl@gcc.gnu.org>\n+\n+\tPR fortran/69636\n+\tPR fortran/103779\n+\t* gfortran.dg/pr103779.f90: New test.\n+\n+2023-02-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/108688\n+\t* gcc.c-torture/compile/pr108688-1.c: Add PR number as comment.\n+\t* gcc.dg/pr108688.c: New test.\n+\n+2023-02-09  Andrew Pinski  <apinski@marvell.com>\n+\n+\tPR tree-optimization/108688\n+\t* gcc.c-torture/compile/pr108688-1.c: New test.\n+\n+2023-02-09  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/107424\n+\t* gfortran.dg/goacc/privatization-1-compute-loop.f90: Update dg-note.\n+\t* gfortran.dg/goacc/privatization-1-routine_gang-loop.f90: Likewise.\n+\n+2023-02-09  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* c-c++-common/gomp/allocate-5.c: Extend for align clause.\n+\n+2023-02-09  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\t* gfortran.dg/gomp/openmp-simd-8.f90: New test.\n+\n+2023-02-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/108698\n+\t* g++.dg/cpp0x/pr108698.C: New test.\n+\n 2023-02-08  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/c2x-constexpr-1.c: Test initialization of constexpr"}, {"sha": "d66c8c8fa818358670e0f54e0bf0976b18e3dd21", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e92e2c9671e9c7c42594f8d970cd1e30024a12db/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e92e2c9671e9c7c42594f8d970cd1e30024a12db/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=e92e2c9671e9c7c42594f8d970cd1e30024a12db", "patch": "@@ -1,3 +1,13 @@\n+2023-02-09  Tobias Burnus  <tobias@codesourcery.com>\n+\n+\tPR fortran/107424\n+\t* testsuite/libgomp.fortran/non-rectangular-loop-1.f90: New test.\n+\t* testsuite/libgomp.fortran/non-rectangular-loop-1a.f90: New test.\n+\t* testsuite/libgomp.fortran/non-rectangular-loop-2.f90: New test.\n+\t* testsuite/libgomp.fortran/non-rectangular-loop-3.f90: New test.\n+\t* testsuite/libgomp.fortran/non-rectangular-loop-4.f90: New test.\n+\t* testsuite/libgomp.fortran/non-rectangular-loop-5.f90: New test.\n+\n 2023-02-07  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* testsuite/libgomp.fortran/reverse-offload-6.f90: Fix nvptx"}]}