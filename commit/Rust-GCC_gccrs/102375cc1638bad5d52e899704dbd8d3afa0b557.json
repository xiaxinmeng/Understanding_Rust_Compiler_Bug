{"sha": "102375cc1638bad5d52e899704dbd8d3afa0b557", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAyMzc1Y2MxNjM4YmFkNWQ1MmU4OTk3MDRkYmQ4ZDNhZmEwYjU1Nw==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-06-08T18:32:25Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-06-08T18:32:25Z"}, "message": "avr.c (avr_case_values_threshold): Return 7.\n\n\t* config/avr/avr.c (avr_case_values_threshold): Return 7.\n\nFrom-SVN: r188336", "tree": {"sha": "99a6b0ff22e48cf1f742d36c3ecc2f8b8114dd0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99a6b0ff22e48cf1f742d36c3ecc2f8b8114dd0e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/102375cc1638bad5d52e899704dbd8d3afa0b557", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/102375cc1638bad5d52e899704dbd8d3afa0b557", "html_url": "https://github.com/Rust-GCC/gccrs/commit/102375cc1638bad5d52e899704dbd8d3afa0b557", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/102375cc1638bad5d52e899704dbd8d3afa0b557/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98cf47d1a57c7c8f0541aa61488863f4864b0e40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98cf47d1a57c7c8f0541aa61488863f4864b0e40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98cf47d1a57c7c8f0541aa61488863f4864b0e40"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "1026c9002cc8919f2273b81e20b5ba9c1b7e68df", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/102375cc1638bad5d52e899704dbd8d3afa0b557/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/102375cc1638bad5d52e899704dbd8d3afa0b557/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=102375cc1638bad5d52e899704dbd8d3afa0b557", "patch": "@@ -1,3 +1,7 @@\n+2012-06-08  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/avr.c (avr_case_values_threshold): Return 7.\n+\n 2012-06-07  Andreas Schwab  <schwab@linux-m68k.org>\n \n \t* genhooks.c (main): Set progname."}, {"sha": "cd1a4af36b5c3708bc8444eb8d5c41408e89799a", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/102375cc1638bad5d52e899704dbd8d3afa0b557/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/102375cc1638bad5d52e899704dbd8d3afa0b557/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=102375cc1638bad5d52e899704dbd8d3afa0b557", "patch": "@@ -9419,12 +9419,20 @@ avr_return_in_memory (const_tree type, const_tree fntype ATTRIBUTE_UNUSED)\n     return false;\n }\n \n-/* Worker function for CASE_VALUES_THRESHOLD.  */\n+\n+/* Implement `CASE_VALUES_THRESHOLD'.  */\n+/* Supply the default for --param case-values-threshold=0  */\n \n static unsigned int\n avr_case_values_threshold (void)\n {\n-  return (!AVR_HAVE_JMP_CALL || TARGET_CALL_PROLOGUES) ? 8 : 17;\n+  /* The exact break-even point between a jump table and an if-else tree\n+     depends on several factors not available here like, e.g. if 8-bit\n+     comparisons can be used in the if-else tree or not, on the\n+     range of the case values, if the case value can be reused, on the\n+     register allocation, etc.  '7' appears to be a good choice.  */\n+     \n+  return 7;\n }\n \n "}]}