{"sha": "05357ac367d24f312969ad738d701a682a4a4d97", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDUzNTdhYzM2N2QyNGYzMTI5NjlhZDczOGQ3MDFhNjgyYTRhNGQ5Nw==", "commit": {"author": {"name": "Teresa Johnson", "email": "tejohnson@google.com", "date": "2013-09-30T20:09:25Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2013-09-30T20:09:25Z"}, "message": "tree-ssa-threadupdate.c (ssa_fix_duplicate_block_edges): Update redirected out edge count in joiner case.\n\n\t* tree-ssa-threadupdate.c (ssa_fix_duplicate_block_edges):\n\tUpdate redirected out edge count in joiner case.\n\t(ssa_redirect_edges): Common the joiner and non-joiner cases\n\tso that joiner case gets profile updates.\n\n\t* testsuite/gcc.dg/tree-ssa/ssa-dom-thread-3.c (expand_one_var):\n\tUpdate for additional dump message.\n\nFrom-SVN: r203041", "tree": {"sha": "8632d3d941c238df0040713166b848ad5bad2fc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8632d3d941c238df0040713166b848ad5bad2fc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/05357ac367d24f312969ad738d701a682a4a4d97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05357ac367d24f312969ad738d701a682a4a4d97", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05357ac367d24f312969ad738d701a682a4a4d97", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05357ac367d24f312969ad738d701a682a4a4d97/comments", "author": {"login": "teresajohnson", "id": 20446403, "node_id": "MDQ6VXNlcjIwNDQ2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/20446403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/teresajohnson", "html_url": "https://github.com/teresajohnson", "followers_url": "https://api.github.com/users/teresajohnson/followers", "following_url": "https://api.github.com/users/teresajohnson/following{/other_user}", "gists_url": "https://api.github.com/users/teresajohnson/gists{/gist_id}", "starred_url": "https://api.github.com/users/teresajohnson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/teresajohnson/subscriptions", "organizations_url": "https://api.github.com/users/teresajohnson/orgs", "repos_url": "https://api.github.com/users/teresajohnson/repos", "events_url": "https://api.github.com/users/teresajohnson/events{/privacy}", "received_events_url": "https://api.github.com/users/teresajohnson/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a52906946a730f253946f4ff3db9797784cba479", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a52906946a730f253946f4ff3db9797784cba479", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a52906946a730f253946f4ff3db9797784cba479"}], "stats": {"total": 40, "additions": 25, "deletions": 15}, "files": [{"sha": "ee3e01e8f93baf63b2251227e2a9ca7554e8eac2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05357ac367d24f312969ad738d701a682a4a4d97/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05357ac367d24f312969ad738d701a682a4a4d97/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=05357ac367d24f312969ad738d701a682a4a4d97", "patch": "@@ -1,3 +1,10 @@\n+2013-09-30  Teresa Johnson  <tejohnson@google.com>\n+\n+\t* tree-ssa-threadupdate.c (ssa_fix_duplicate_block_edges):\n+\tUpdate redirected out edge count in joiner case.\n+\t(ssa_redirect_edges): Common the joiner and non-joiner cases\n+\tso that joiner case gets profile updates.\n+\n 2013-09-30  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/58554"}, {"sha": "98147745d8137761a13b67e99036ddd9d567b441", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05357ac367d24f312969ad738d701a682a4a4d97/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05357ac367d24f312969ad738d701a682a4a4d97/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=05357ac367d24f312969ad738d701a682a4a4d97", "patch": "@@ -1,3 +1,9 @@\n+2013-09-30  Teresa Johnson  <tejohnson@google.com>\n+\n+\t* testsuite/gcc.dg/tree-ssa/ssa-dom-thread-3.c (expand_one_var):\n+\tUpdate for additional dump message.\n+\n+\n 2013-09-30  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/58554"}, {"sha": "0d53f501d842b64f5f3fd929993eaf39b9272c7b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dom-thread-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05357ac367d24f312969ad738d701a682a4a4d97/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-thread-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05357ac367d24f312969ad738d701a682a4a4d97/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-thread-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dom-thread-3.c?ref=05357ac367d24f312969ad738d701a682a4a4d97", "patch": "@@ -42,7 +42,7 @@ expand_one_var (tree var, unsigned char toplevel, unsigned char really_expand)\n     abort ();\n }\n /* We should thread the jump, through an intermediate block.  */\n-/* { dg-final { scan-tree-dump-times \"Threaded\" 1 \"dom1\"} } */\n+/* { dg-final { scan-tree-dump-times \"Threaded\" 2 \"dom1\"} } */\n /* { dg-final { scan-tree-dump-times \"Registering jump thread: \\\\(.*\\\\) incoming edge;  \\\\(.*\\\\) joiner;  \\\\(.*\\\\) nocopy;\" 1 \"dom1\"} } */\n /* { dg-final { cleanup-tree-dump \"dom1\" } } */\n "}, {"sha": "15d4d04066e28b0f5fcf1667f2ac797b8998d9d2", "filename": "gcc/tree-ssa-threadupdate.c", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/05357ac367d24f312969ad738d701a682a4a4d97/gcc%2Ftree-ssa-threadupdate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/05357ac367d24f312969ad738d701a682a4a4d97/gcc%2Ftree-ssa-threadupdate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-threadupdate.c?ref=05357ac367d24f312969ad738d701a682a4a4d97", "patch": "@@ -403,6 +403,7 @@ ssa_fix_duplicate_block_edges (struct redirection_data *rd,\n \t threading through.  That's the edge we want to redirect.  */\n       victim = find_edge (rd->dup_block, THREAD_TARGET (e)->dest);\n       e2 = redirect_edge_and_branch (victim, THREAD_TARGET2 (e)->dest);\n+      e2->count = THREAD_TARGET2 (e)->count;\n \n       /* If we redirected the edge, then we need to copy PHI arguments\n \t at the target.  If the edge already existed (e2 != victim case),\n@@ -497,18 +498,8 @@ ssa_redirect_edges (struct redirection_data **slot,\n       free (el);\n \n       thread_stats.num_threaded_edges++;\n-      /* If we are threading through a joiner block, then we have to\n-\t find the edge we want to redirect and update some PHI nodes.  */\n-      if (THREAD_TARGET2 (e))\n-\t{\n-\t  edge e2;\n \n-\t  /* We want to redirect the incoming edge to the joiner block (E)\n-\t     to instead reach the duplicate of the joiner block.  */\n-\t  e2 = redirect_edge_and_branch (e, rd->dup_block);\n-\t  flush_pending_stmts (e2);\n-\t}\n-      else if (rd->dup_block)\n+      if (rd->dup_block)\n \t{\n \t  edge e2;\n \n@@ -522,9 +513,15 @@ ssa_redirect_edges (struct redirection_data **slot,\n \t     the computation overflows.  */\n \t  if (rd->dup_block->frequency < BB_FREQ_MAX * 2)\n \t    rd->dup_block->frequency += EDGE_FREQUENCY (e);\n-\t  EDGE_SUCC (rd->dup_block, 0)->count += e->count;\n-\t  /* Redirect the incoming edge to the appropriate duplicate\n-\t     block.  */\n+\n+\t  /* In the case of threading through a joiner block, the outgoing\n+\t     edges from the duplicate block were updated when they were\n+\t     redirected during ssa_fix_duplicate_block_edges.  */\n+\t  if (!THREAD_TARGET2 (e))\n+\t    EDGE_SUCC (rd->dup_block, 0)->count += e->count;\n+\n+\t  /* Redirect the incoming edge (possibly to the joiner block) to the\n+\t     appropriate duplicate block.  */\n \t  e2 = redirect_edge_and_branch (e, rd->dup_block);\n \t  gcc_assert (e == e2);\n \t  flush_pending_stmts (e2);"}]}