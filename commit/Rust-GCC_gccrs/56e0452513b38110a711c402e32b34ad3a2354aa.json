{"sha": "56e0452513b38110a711c402e32b34ad3a2354aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTZlMDQ1MjUxM2IzODExMGE3MTFjNDAyZTMyYjM0YWQzYTIzNTRhYQ==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2019-11-20T17:51:41Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2019-11-20T17:51:41Z"}, "message": "jit: fix ICE with GCC_JIT_BOOL_OPTION_SELFCHECK_GC since r278084 (PR jit/92483)\n\nSince r278084 (part of the params refactoring), most of libgccjit's\ntest suite has been ICEing.\n\nThe root cause is that jit-playback.c injects params to its fake_args\nhere:\n\n  /* Aggressively garbage-collect, to shake out bugs: */\n  if (get_bool_option (GCC_JIT_BOOL_OPTION_SELFCHECK_GC))\n    {\n      ADD_ARG (\"--param\");\n      ADD_ARG (\"ggc-min-expand=0\");\n      ADD_ARG (\"--param\");\n      ADD_ARG (\"ggc-min-heapsize=0\");\n    }\n\n(building a vec of char * where the char * are allocated using xstrdup)\n\nand r278084 added this logic to decode_cmdline_options_to_array:\n\n964\t      /* Interpret \"--param\" \"key=name\" as \"--param=key=name\".  */\n965\t      const char *needle = \"--param\";\n966\t      if (i + 1 < argc && strcmp (opt, needle) == 0)\n967\t\t{\n968\t\t  const char *replacement\n969\t\t    = opts_concat (needle, \"=\", argv[i + 1], NULL);\n970\t\t  argv[++i] = replacement;\n971\t\t}\n\nNote that at line 970 it manipulates the argv in-place, inserting a\nnew option allocated with opts_concat, which uses opts_obstack\n(itself initialized from toplev::main).\n\njit-playback.c cleans up its fake arguments using \"free\", at which\npoint we have a free of the middle of an obstack and an ICE.\n\nThis patch fixes the issue by using the new syntax for the params.\n\nFixes all 60 FAILs in jit.sum, restoring the number of PASS results\nfrom 2033 to 10469.\n\ngcc/jit/ChangeLog:\n\tPR jit/92483\n\t* jit-playback.c (gcc::jit::playback::context::make_fake_args):\n\tUpdate GCC_JIT_BOOL_OPTION_SELFCHECK_GC for new --param syntax.\n\nFrom-SVN: r278515", "tree": {"sha": "67f018d6d93fb54b6504c983f2757c027e5fb427", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67f018d6d93fb54b6504c983f2757c027e5fb427"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/56e0452513b38110a711c402e32b34ad3a2354aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56e0452513b38110a711c402e32b34ad3a2354aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/56e0452513b38110a711c402e32b34ad3a2354aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/56e0452513b38110a711c402e32b34ad3a2354aa/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e307b05f4377a22811395f6a051d9db864b8785f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e307b05f4377a22811395f6a051d9db864b8785f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e307b05f4377a22811395f6a051d9db864b8785f"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "8eb6a7f5df8d35e1cfc84e3cbf9270906c300000", "filename": "gcc/jit/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56e0452513b38110a711c402e32b34ad3a2354aa/gcc%2Fjit%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56e0452513b38110a711c402e32b34ad3a2354aa/gcc%2Fjit%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2FChangeLog?ref=56e0452513b38110a711c402e32b34ad3a2354aa", "patch": "@@ -1,3 +1,9 @@\n+2019-11-20  David Malcolm  <dmalcolm@redhat.com>\n+\n+\tPR jit/92483\n+\t* jit-playback.c (gcc::jit::playback::context::make_fake_args):\n+\tUpdate GCC_JIT_BOOL_OPTION_SELFCHECK_GC for new --param syntax.\n+\n 2019-08-13  Richard Sandiford  <richard.sandiford@arm.com>\n \n \tPR middle-end/91421"}, {"sha": "c043d6964eac49f1b31e44be044b57f936c42583", "filename": "gcc/jit/jit-playback.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/56e0452513b38110a711c402e32b34ad3a2354aa/gcc%2Fjit%2Fjit-playback.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/56e0452513b38110a711c402e32b34ad3a2354aa/gcc%2Fjit%2Fjit-playback.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjit%2Fjit-playback.c?ref=56e0452513b38110a711c402e32b34ad3a2354aa", "patch": "@@ -2273,10 +2273,8 @@ make_fake_args (vec <char *> *argvec,\n   /* Aggressively garbage-collect, to shake out bugs: */\n   if (get_bool_option (GCC_JIT_BOOL_OPTION_SELFCHECK_GC))\n     {\n-      ADD_ARG (\"--param\");\n-      ADD_ARG (\"ggc-min-expand=0\");\n-      ADD_ARG (\"--param\");\n-      ADD_ARG (\"ggc-min-heapsize=0\");\n+      ADD_ARG (\"--param=ggc-min-expand=0\");\n+      ADD_ARG (\"--param=ggc-min-heapsize=0\");\n     }\n \n   if (get_bool_option (GCC_JIT_BOOL_OPTION_DUMP_EVERYTHING))"}]}