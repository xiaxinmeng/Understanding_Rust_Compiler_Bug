{"sha": "0b64ca40f30eefc43dcfebaaf918a48e1c3b3dcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGI2NGNhNDBmMzBlZWZjNDNkY2ZlYmFhZjkxOGE0OGUxYzNiM2RjYw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-07-26T14:11:21Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-07-26T14:11:21Z"}, "message": "re PR rtl-optimization/71984 (wrong code with -O -mavx512cd)\n\n2016-07-26  Richard Biener  <rguenther@suse.de>\n\n\tPR rtl-optimization/71984\n\t* simplify-rtx.c (simplify_subreg): Use GET_MODE_SIZE and prepare\n\tfor VOIDmode.\n\n\t* gcc.dg/torture/pr71984.c: New testcase.\n\nFrom-SVN: r238757", "tree": {"sha": "fb1a1913e5d9f2927ba13618faca231eceb9f991", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb1a1913e5d9f2927ba13618faca231eceb9f991"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b64ca40f30eefc43dcfebaaf918a48e1c3b3dcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b64ca40f30eefc43dcfebaaf918a48e1c3b3dcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b64ca40f30eefc43dcfebaaf918a48e1c3b3dcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b64ca40f30eefc43dcfebaaf918a48e1c3b3dcc/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ab2b55c1093acf8b95b07147afe213cd6e98777f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab2b55c1093acf8b95b07147afe213cd6e98777f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab2b55c1093acf8b95b07147afe213cd6e98777f"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "6c9a3b668e64036194a223795d9e9ef155f5dd2d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b64ca40f30eefc43dcfebaaf918a48e1c3b3dcc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b64ca40f30eefc43dcfebaaf918a48e1c3b3dcc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b64ca40f30eefc43dcfebaaf918a48e1c3b3dcc", "patch": "@@ -1,3 +1,9 @@\n+2016-07-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/71984\n+\t* simplify-rtx.c (simplify_subreg): Use GET_MODE_SIZE and prepare\n+\tfor VOIDmode.\n+\n 2016-07-26  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/72517"}, {"sha": "691c2c1b6782e6b2462e37d12498f8f7abb33def", "filename": "gcc/simplify-rtx.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b64ca40f30eefc43dcfebaaf918a48e1c3b3dcc/gcc%2Fsimplify-rtx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b64ca40f30eefc43dcfebaaf918a48e1c3b3dcc/gcc%2Fsimplify-rtx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsimplify-rtx.c?ref=0b64ca40f30eefc43dcfebaaf918a48e1c3b3dcc", "patch": "@@ -6116,7 +6116,10 @@ simplify_subreg (machine_mode outermode, rtx op,\n       unsigned int part_size, final_offset;\n       rtx part, res;\n \n-      part_size = GET_MODE_UNIT_SIZE (GET_MODE (XEXP (op, 0)));\n+      enum machine_mode part_mode = GET_MODE (XEXP (op, 0));\n+      if (part_mode == VOIDmode)\n+\tpart_mode = GET_MODE_INNER (GET_MODE (op));\n+      part_size = GET_MODE_SIZE (part_mode);\n       if (byte < part_size)\n \t{\n \t  part = XEXP (op, 0);\n@@ -6131,7 +6134,7 @@ simplify_subreg (machine_mode outermode, rtx op,\n       if (final_offset + GET_MODE_SIZE (outermode) > part_size)\n \treturn NULL_RTX;\n \n-      enum machine_mode part_mode = GET_MODE (part);\n+      part_mode = GET_MODE (part);\n       if (part_mode == VOIDmode)\n \tpart_mode = GET_MODE_INNER (GET_MODE (op));\n       res = simplify_subreg (outermode, part, part_mode, final_offset);"}, {"sha": "71d0d84f8cd2a32f2ce0c3c42f3416dc2539a9d5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b64ca40f30eefc43dcfebaaf918a48e1c3b3dcc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b64ca40f30eefc43dcfebaaf918a48e1c3b3dcc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0b64ca40f30eefc43dcfebaaf918a48e1c3b3dcc", "patch": "@@ -1,3 +1,8 @@\n+2016-07-26  Richard Biener  <rguenther@suse.de>\n+\n+\tPR rtl-optimization/71984\n+\t* gcc.dg/torture/pr71984.c: New testcase.\n+\n 2016-07-26  Robert Suchanek  <robert.suchanek@imgtec.com>\n \n \t* g++.dg/vect/vect.exp: Add and set new global EFFECTIVE_TARGETS. Call"}, {"sha": "e1dd04bc568f08b4616a8cc38c7ab9d42c5b9217", "filename": "gcc/testsuite/gcc.dg/torture/pr71984.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b64ca40f30eefc43dcfebaaf918a48e1c3b3dcc/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71984.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b64ca40f30eefc43dcfebaaf918a48e1c3b3dcc/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71984.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr71984.c?ref=0b64ca40f30eefc43dcfebaaf918a48e1c3b3dcc", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do run { target lp64 } } */\n+/* { dg-additional-options \"-w -Wno-psabi\" } */\n+\n+typedef unsigned char v64u8 __attribute__((vector_size(64)));\n+typedef unsigned long v64u64 __attribute__((vector_size(64)));\n+typedef unsigned char u8;\n+\n+static u8 __attribute__ ((noinline, noclone))\n+foo (v64u64 v64u64_0)\n+{\n+  return ((v64u8)(v64u64){0, v64u64_0[0]})[13];\n+}\n+\n+int\n+main ()\n+{\n+  u8 x = foo((v64u64){0x0706050403020100UL});\n+  if (x != 5)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}