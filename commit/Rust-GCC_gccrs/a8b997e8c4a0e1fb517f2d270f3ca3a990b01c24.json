{"sha": "a8b997e8c4a0e1fb517f2d270f3ca3a990b01c24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YThiOTk3ZThjNGEwZTFmYjUxN2YyZDI3MGYzY2EzYTk5MGIwMWMyNA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-06-27T17:40:01Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-06-27T17:40:01Z"}, "message": "system.h (TARGET_ESC): Move to ...\n\n\t* system.h (TARGET_ESC): Move to ...\n\t* defaults.h (TARGET_ESC): ... here.\n\t* target-def.h (TARGET_VALID_DECL_ATTRIBUTE,\n\tTARGET_VALID_TYPE_ATTRIBUTE): Default to a no-op handler.\n\t* tree.c (default_valid_attribute_p): New.\n\t(valid_machine_attribute): Handlers can not be NULL.\n\t* tree.h (default_valid_attribute_p): New.\n\t* doc/tm.texi: Document TARGET_ESC.\n\t* cp/decl2.c (import_export_class): Update.\n\nFrom-SVN: r43615", "tree": {"sha": "9ea54e7b8ab4394ac7a5e06af31cbddec5e92922", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ea54e7b8ab4394ac7a5e06af31cbddec5e92922"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8b997e8c4a0e1fb517f2d270f3ca3a990b01c24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8b997e8c4a0e1fb517f2d270f3ca3a990b01c24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8b997e8c4a0e1fb517f2d270f3ca3a990b01c24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8b997e8c4a0e1fb517f2d270f3ca3a990b01c24/comments", "author": null, "committer": null, "parents": [{"sha": "42526146aa67410f50c45ed38953bb6c233e325f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42526146aa67410f50c45ed38953bb6c233e325f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42526146aa67410f50c45ed38953bb6c233e325f"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "78fd30f6f235574a1dc42dfa73f2736ff564f33b", "filename": "gcc/target-def.h", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8b997e8c4a0e1fb517f2d270f3ca3a990b01c24/gcc%2Ftarget-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8b997e8c4a0e1fb517f2d270f3ca3a990b01c24/gcc%2Ftarget-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget-def.h?ref=a8b997e8c4a0e1fb517f2d270f3ca3a990b01c24", "patch": "@@ -20,13 +20,16 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.\n  what you give them.   Help stamp out software-hoarding!  */\n \n /* See target.h for a desciption of what this file contains and how to\n-   use it.  */\n+   use it.\n \n-/* Both in tree.c.  */\n+   We want to have non-NULL default definitions of all hook functions,\n+   even if they do nothing.  */\n+\n+/* All in tree.c.  */\n #define TARGET_MERGE_DECL_ATTRIBUTES merge_decl_attributes\n #define TARGET_MERGE_TYPE_ATTRIBUTES merge_type_attributes\n-#define TARGET_VALID_DECL_ATTRIBUTE 0\n-#define TARGET_VALID_TYPE_ATTRIBUTE 0\n+#define TARGET_VALID_DECL_ATTRIBUTE default_valid_attribute_p\n+#define TARGET_VALID_TYPE_ATTRIBUTE default_valid_attribute_p\n \n /* The whole shebang.  */\n #define TARGET_INITIALIZER\t\t\t\\"}, {"sha": "6e97ee7f21f83ce6a230a70912751c2dad5578be", "filename": "gcc/target.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8b997e8c4a0e1fb517f2d270f3ca3a990b01c24/gcc%2Ftarget.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8b997e8c4a0e1fb517f2d270f3ca3a990b01c24/gcc%2Ftarget.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.h?ref=a8b997e8c4a0e1fb517f2d270f3ca3a990b01c24", "patch": "@@ -52,13 +52,13 @@ struct gcc_target\n   /* Given two types, merge their attributes and return the result.  */\n   tree (* merge_type_attributes) PARAMS ((tree, tree));\n \n-  /* Nonzero if IDENTIFIER with arguments ARGS is a valid machine\n+  /* Return nonzero if IDENTIFIER with arguments ARGS is a valid machine\n      specific attribute for DECL.  The attributes in ATTRIBUTES have\n      previously been assigned to DECL.  */\n   int (* valid_decl_attribute) PARAMS ((tree decl, tree attributes,\n \t\t\t\t\ttree identifier, tree args));\n \n-  /* Nonzero if IDENTIFIER with arguments ARGS is a valid machine\n+  /* Return nonzero if IDENTIFIER with arguments ARGS is a valid machine\n      specific attribute for TYPE.  The attributes in ATTRIBUTES have\n      previously been assigned to TYPE.  */\n   int (* valid_type_attribute) PARAMS ((tree type, tree attributes,"}]}