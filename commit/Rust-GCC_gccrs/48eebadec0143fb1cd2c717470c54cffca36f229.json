{"sha": "48eebadec0143fb1cd2c717470c54cffca36f229", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhlZWJhZGVjMDE0M2ZiMWNkMmM3MTc0NzBjNTRjZmZjYTM2ZjIyOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-14T01:33:47Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-08-14T01:33:47Z"}, "message": "(SETUP_INCOMING_VARARGS): In if statement, only subtract one for stdarg.\n\n(SETUP_INCOMING_VARARGS): In if statement, only subtract one for\nstdarg.  Don't subtract PRETEND_SIZE from argument pointer when\ncalculating stack address.\n\nFrom-SVN: r10228", "tree": {"sha": "ffd89b956e89af1c55c5ca4549d21ad5e4f6c217", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffd89b956e89af1c55c5ca4549d21ad5e4f6c217"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48eebadec0143fb1cd2c717470c54cffca36f229", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48eebadec0143fb1cd2c717470c54cffca36f229", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48eebadec0143fb1cd2c717470c54cffca36f229", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48eebadec0143fb1cd2c717470c54cffca36f229/comments", "author": null, "committer": null, "parents": [{"sha": "2b16a9d39dad2ebb981722ea363b41fe1e664d2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b16a9d39dad2ebb981722ea363b41fe1e664d2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b16a9d39dad2ebb981722ea363b41fe1e664d2c"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "bd3b653580cef1ee6c39f44325d95f0933eee9dd", "filename": "gcc/config/mips/abi64.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48eebadec0143fb1cd2c717470c54cffca36f229/gcc%2Fconfig%2Fmips%2Fabi64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48eebadec0143fb1cd2c717470c54cffca36f229/gcc%2Fconfig%2Fmips%2Fabi64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fabi64.h?ref=48eebadec0143fb1cd2c717470c54cffca36f229", "patch": "@@ -132,17 +132,17 @@ extern struct rtx_def *mips_function_value ();\n    For stdarg, we do not need to save the current argument, because it\n    is a real argument.  */\n #define SETUP_INCOMING_VARARGS(CUM,MODE,TYPE,PRETEND_SIZE,NO_RTL)\t\\\n-{ if (mips_isa >= 3 && (CUM).arg_words < MAX_ARGS_IN_REGISTERS - 1)\t\\\n+{ if (mips_isa >= 3\t\t\t\t\t\t\t\\\n+      && ((CUM).arg_words\t\t\t\t\t\t\\\n+\t  < (MAX_ARGS_IN_REGISTERS - ! current_function_varargs)))\t\\\n     {\t\t\t\t\t\t\t\t\t\\\n       PRETEND_SIZE\t\t\t\t\t\t\t\\\n \t= (MAX_ARGS_IN_REGISTERS - (CUM).arg_words\t\t\t\\\n \t   - ! current_function_varargs) * UNITS_PER_WORD;\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n       if (! (NO_RTL))\t\t\t\t\t\t\t\\\n \t{\t\t\t\t\t\t\t\t\\\n-\t  rtx mem = gen_rtx (MEM, BLKmode,\t\t\t\t\\\n-\t\t\t     plus_constant (virtual_incoming_args_rtx,\t\\\n-\t\t\t\t\t    - PRETEND_SIZE));\t\t\\\n+\t  rtx mem = gen_rtx (MEM, BLKmode, virtual_incoming_args_rtx);\t\\\n \t  /* va_arg is an array access in this case, which causes it to \\\n \t     get MEM_IN_STRUCT_P set.  We must set it here so that the\t\\\n \t     insn scheduler won't assume that these stores can't \t\\"}]}