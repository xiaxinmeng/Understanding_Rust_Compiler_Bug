{"sha": "953360c8154de41a68df71e5476557a0154ed1fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUzMzYwYzgxNTRkZTQxYTY4ZGY3MWU1NDc2NTU3YTAxNTRlZDFmYg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1998-10-09T10:32:01Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-10-09T10:32:01Z"}, "message": "cvt.c (ocp_convert): Avoid infinite recursion caused by 1998-10-03 change.\n\n\t* cvt.c (ocp_convert): Avoid infinite recursion caused by\n\t1998-10-03 change.\n\nFrom-SVN: r22958", "tree": {"sha": "d6fa7684a97843a1370c19c3544eddef734d1327", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6fa7684a97843a1370c19c3544eddef734d1327"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/953360c8154de41a68df71e5476557a0154ed1fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/953360c8154de41a68df71e5476557a0154ed1fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/953360c8154de41a68df71e5476557a0154ed1fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/953360c8154de41a68df71e5476557a0154ed1fb/comments", "author": null, "committer": null, "parents": [{"sha": "297a6bfc7005b8a217b6f33dc7b781f778795a85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/297a6bfc7005b8a217b6f33dc7b781f778795a85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/297a6bfc7005b8a217b6f33dc7b781f778795a85"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "b781ad1afa934d1ae1b16e47f9d6efb315151ad8", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/953360c8154de41a68df71e5476557a0154ed1fb/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/953360c8154de41a68df71e5476557a0154ed1fb/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=953360c8154de41a68df71e5476557a0154ed1fb", "patch": "@@ -1,3 +1,8 @@\n+1998-10-09  Mark Mitchell  <mark@markmitchell.com>\n+\n+\t* cvt.c (ocp_convert): Avoid infinite recursion caused by\n+\t1998-10-03 change.\n+\n 1998-10-08  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* pt.c (resolve_overloaded_unification): New fn."}, {"sha": "50c4fc59b33ba8df7d7a6cc8c3ddbd89c006742f", "filename": "gcc/cp/cvt.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/953360c8154de41a68df71e5476557a0154ed1fb/gcc%2Fcp%2Fcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/953360c8154de41a68df71e5476557a0154ed1fb/gcc%2Fcp%2Fcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcvt.c?ref=953360c8154de41a68df71e5476557a0154ed1fb", "patch": "@@ -679,12 +679,12 @@ ocp_convert (type, expr, convtype, flags)\n \t/* The call to fold will not always remove the NOP_EXPR as\n \t   might be expected, since if one of the types is a typedef;\n \t   the comparsion in fold is just equality of pointers, not a\n-\t   call to comptypes.  */\n-\t;\n+\t   call to comptypes.  We don't call fold in this case because\n+\t   that can result in infinite recursion; fold will call\n+\t   convert, which will call ocp_convert, etc.  */\n+\treturn e;\n       else\n-\te = build1 (NOP_EXPR, type, e);\n-\n-      return fold (e);\n+\treturn fold (build1 (NOP_EXPR, type, e));\n     }\n \n   if (code == VOID_TYPE && (convtype & CONV_STATIC))"}]}