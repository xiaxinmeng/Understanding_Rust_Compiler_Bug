{"sha": "bed192f40a5e2ff8edc9375c443473c0a966c5b5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVkMTkyZjQwYTVlMmZmOGVkYzkzNzVjNDQzNDczYzBhOTY2YzViNQ==", "commit": {"author": {"name": "Francois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2016-12-19T16:00:42Z"}, "committer": {"name": "Fran\u00e7ois-Xavier Coudert", "email": "fxcoudert@gcc.gnu.org", "date": "2016-12-19T16:00:42Z"}, "message": "Makefile.am: Remove intrinsics/bit_intrinsics.c.\n\n\t* Makefile.am: Remove intrinsics/bit_intrinsics.c.\n\t* Makefile.in: Regenerate.\n\t* gfortran.map: Remove _gfortran_clz128 and _gfortran_ctz128.\n\t* intrinsics/bit_intrinsics.c: Remove.\n\nFrom-SVN: r243800", "tree": {"sha": "0da44bab7461c408d7d0870d9b556ebabea525c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0da44bab7461c408d7d0870d9b556ebabea525c6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bed192f40a5e2ff8edc9375c443473c0a966c5b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bed192f40a5e2ff8edc9375c443473c0a966c5b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bed192f40a5e2ff8edc9375c443473c0a966c5b5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bed192f40a5e2ff8edc9375c443473c0a966c5b5/comments", "author": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fxcoudert", "id": 1980544, "node_id": "MDQ6VXNlcjE5ODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1980544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fxcoudert", "html_url": "https://github.com/fxcoudert", "followers_url": "https://api.github.com/users/fxcoudert/followers", "following_url": "https://api.github.com/users/fxcoudert/following{/other_user}", "gists_url": "https://api.github.com/users/fxcoudert/gists{/gist_id}", "starred_url": "https://api.github.com/users/fxcoudert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fxcoudert/subscriptions", "organizations_url": "https://api.github.com/users/fxcoudert/orgs", "repos_url": "https://api.github.com/users/fxcoudert/repos", "events_url": "https://api.github.com/users/fxcoudert/events{/privacy}", "received_events_url": "https://api.github.com/users/fxcoudert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e294024ad7b92b888fc067ccb71cf2efe1c441b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e294024ad7b92b888fc067ccb71cf2efe1c441b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e294024ad7b92b888fc067ccb71cf2efe1c441b"}], "stats": {"total": 177, "additions": 17, "deletions": 160}, "files": [{"sha": "d66876ff78908ad5451f4fde6343f4fc81a8548d", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed192f40a5e2ff8edc9375c443473c0a966c5b5/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed192f40a5e2ff8edc9375c443473c0a966c5b5/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=bed192f40a5e2ff8edc9375c443473c0a966c5b5", "patch": "@@ -1,3 +1,10 @@\n+2016-12-19  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\t* Makefile.am: Remove intrinsics/bit_intrinsics.c.\n+\t* Makefile.in: Regenerate.\n+\t* gfortran.map: Remove _gfortran_clz128 and _gfortran_ctz128.\n+\t* intrinsics/bit_intrinsics.c: Remove.\n+\n 2016-12-19  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \t* Makefile.am: Remove exponent, fraction, nearest, rrspacing,"}, {"sha": "64ee4dcf3bab9d80b0918ff07a05972804fa46e5", "filename": "libgfortran/Makefile.am", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed192f40a5e2ff8edc9375c443473c0a966c5b5/libgfortran%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed192f40a5e2ff8edc9375c443473c0a966c5b5/libgfortran%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.am?ref=bed192f40a5e2ff8edc9375c443473c0a966c5b5", "patch": "@@ -114,7 +114,6 @@ gfor_helper_src= \\\n intrinsics/associated.c \\\n intrinsics/abort.c \\\n intrinsics/args.c \\\n-intrinsics/bit_intrinsics.c \\\n intrinsics/cshift0.c \\\n intrinsics/eoshift0.c \\\n intrinsics/eoshift2.c \\"}, {"sha": "5f941af53d28299a444110829557ee5fd3a57a2b", "filename": "libgfortran/Makefile.in", "status": "modified", "additions": 10, "deletions": 19, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed192f40a5e2ff8edc9375c443473c0a966c5b5/libgfortran%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed192f40a5e2ff8edc9375c443473c0a966c5b5/libgfortran%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FMakefile.in?ref=bed192f40a5e2ff8edc9375c443473c0a966c5b5", "patch": "@@ -324,15 +324,15 @@ am__objects_37 = size_from_kind.lo $(am__objects_36)\n @LIBGFOR_MINIMAL_FALSE@\tsystem_clock.lo time.lo umask.lo \\\n @LIBGFOR_MINIMAL_FALSE@\tunlink.lo\n @IEEE_SUPPORT_TRUE@am__objects_39 = ieee_helper.lo\n-am__objects_40 = associated.lo abort.lo args.lo bit_intrinsics.lo \\\n-\tcshift0.lo eoshift0.lo eoshift2.lo erfc_scaled.lo \\\n-\textends_type_of.lo fnum.lo ierrno.lo ishftc.lo \\\n-\tiso_c_generated_procs.lo iso_c_binding.lo mvbits.lo \\\n-\tmove_alloc.lo pack_generic.lo selected_char_kind.lo size.lo \\\n-\tspread_generic.lo string_intrinsics.lo rand.lo random.lo \\\n-\treshape_generic.lo reshape_packed.lo selected_int_kind.lo \\\n-\tselected_real_kind.lo unpack_generic.lo in_pack_generic.lo \\\n-\tin_unpack_generic.lo $(am__objects_38) $(am__objects_39)\n+am__objects_40 = associated.lo abort.lo args.lo cshift0.lo eoshift0.lo \\\n+\teoshift2.lo erfc_scaled.lo extends_type_of.lo fnum.lo \\\n+\tierrno.lo ishftc.lo iso_c_generated_procs.lo iso_c_binding.lo \\\n+\tmvbits.lo move_alloc.lo pack_generic.lo selected_char_kind.lo \\\n+\tsize.lo spread_generic.lo string_intrinsics.lo rand.lo \\\n+\trandom.lo reshape_generic.lo reshape_packed.lo \\\n+\tselected_int_kind.lo selected_real_kind.lo unpack_generic.lo \\\n+\tin_pack_generic.lo in_unpack_generic.lo $(am__objects_38) \\\n+\t$(am__objects_39)\n @IEEE_SUPPORT_TRUE@am__objects_41 = ieee_arithmetic.lo \\\n @IEEE_SUPPORT_TRUE@\tieee_exceptions.lo ieee_features.lo\n am__objects_42 =\n@@ -612,8 +612,7 @@ io/format.h \\\n io/unix.h\n \n gfor_helper_src = intrinsics/associated.c intrinsics/abort.c \\\n-\tintrinsics/args.c intrinsics/bit_intrinsics.c \\\n-\tintrinsics/cshift0.c intrinsics/eoshift0.c \\\n+\tintrinsics/args.c intrinsics/cshift0.c intrinsics/eoshift0.c \\\n \tintrinsics/eoshift2.c intrinsics/erfc_scaled.c \\\n \tintrinsics/extends_type_of.c intrinsics/fnum.c \\\n \tintrinsics/ierrno.c intrinsics/ishftc.c \\\n@@ -1389,7 +1388,6 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bessel_r16.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bessel_r4.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bessel_r8.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bit_intrinsics.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bounds.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/c99_functions.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chdir.Plo@am__quote@\n@@ -4903,13 +4901,6 @@ args.lo: intrinsics/args.c\n @AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n @am__fastdepCC_FALSE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o args.lo `test -f 'intrinsics/args.c' || echo '$(srcdir)/'`intrinsics/args.c\n \n-bit_intrinsics.lo: intrinsics/bit_intrinsics.c\n-@am__fastdepCC_TRUE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT bit_intrinsics.lo -MD -MP -MF $(DEPDIR)/bit_intrinsics.Tpo -c -o bit_intrinsics.lo `test -f 'intrinsics/bit_intrinsics.c' || echo '$(srcdir)/'`intrinsics/bit_intrinsics.c\n-@am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/bit_intrinsics.Tpo $(DEPDIR)/bit_intrinsics.Plo\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tsource='intrinsics/bit_intrinsics.c' object='bit_intrinsics.lo' libtool=yes @AMDEPBACKSLASH@\n-@AMDEP_TRUE@@am__fastdepCC_FALSE@\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@\n-@am__fastdepCC_FALSE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o bit_intrinsics.lo `test -f 'intrinsics/bit_intrinsics.c' || echo '$(srcdir)/'`intrinsics/bit_intrinsics.c\n-\n cshift0.lo: intrinsics/cshift0.c\n @am__fastdepCC_TRUE@\t$(LIBTOOL)  --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT cshift0.lo -MD -MP -MF $(DEPDIR)/cshift0.Tpo -c -o cshift0.lo `test -f 'intrinsics/cshift0.c' || echo '$(srcdir)/'`intrinsics/cshift0.c\n @am__fastdepCC_TRUE@\t$(am__mv) $(DEPDIR)/cshift0.Tpo $(DEPDIR)/cshift0.Plo"}, {"sha": "caa010f844d97ea4eecb03222697c22f91543e08", "filename": "libgfortran/gfortran.map", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bed192f40a5e2ff8edc9375c443473c0a966c5b5/libgfortran%2Fgfortran.map", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bed192f40a5e2ff8edc9375c443473c0a966c5b5/libgfortran%2Fgfortran.map", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fgfortran.map?ref=bed192f40a5e2ff8edc9375c443473c0a966c5b5", "patch": "@@ -1055,8 +1055,6 @@ GFORTRAN_1.1 {\n \n GFORTRAN_1.2 {\n   global:\n-    _gfortran_clz128;\n-    _gfortran_ctz128;\n     _gfortran_is_extension_of;\n } GFORTRAN_1.1;\n "}, {"sha": "5f347fb0e81eb2fcf0543ad18240599195cd84de", "filename": "libgfortran/intrinsics/bit_intrinsics.c", "status": "removed", "additions": 0, "deletions": 138, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e294024ad7b92b888fc067ccb71cf2efe1c441b/libgfortran%2Fintrinsics%2Fbit_intrinsics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e294024ad7b92b888fc067ccb71cf2efe1c441b/libgfortran%2Fintrinsics%2Fbit_intrinsics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fintrinsics%2Fbit_intrinsics.c?ref=7e294024ad7b92b888fc067ccb71cf2efe1c441b", "patch": "@@ -1,138 +0,0 @@\n-/* Implementation of the bit intrinsics not implemented as GCC builtins.\n-   Copyright (C) 2009-2016 Free Software Foundation, Inc.\n-\n-This file is part of the GNU Fortran runtime library (libgfortran).\n-\n-Libgfortran is free software; you can redistribute it and/or\n-modify it under the terms of the GNU General Public\n-License as published by the Free Software Foundation; either\n-version 3 of the License, or (at your option) any later version.\n-\n-Libgfortran is distributed in the hope that it will be useful,\n-but WITHOUT ANY WARRANTY; without even the implied warranty of\n-MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-GNU General Public License for more details.\n-\n-Under Section 7 of GPL version 3, you are granted additional\n-permissions described in the GCC Runtime Library Exception, version\n-3.1, as published by the Free Software Foundation.\n-\n-You should have received a copy of the GNU General Public License and\n-a copy of the GCC Runtime Library Exception along with this program;\n-see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-<http://www.gnu.org/licenses/>.  */\n-\n-#include \"libgfortran.h\"\n-\n-\n-#ifdef HAVE_GFC_INTEGER_16\n-extern int clz128 (GFC_INTEGER_16);\n-export_proto(clz128);\n-\n-int\n-clz128 (GFC_INTEGER_16 x)\n-{\n-  int res = 127;\n-\n-  // We can't write 0xFFFFFFFFFFFFFFFF0000000000000000, so we work around it\n-  if (x & ((__uint128_t) 0xFFFFFFFFFFFFFFFF << 64))\n-    {\n-      res -= 64;\n-      x >>= 64;\n-    }\n-\n-  if (x & 0xFFFFFFFF00000000)\n-    {\n-      res -= 32;\n-      x >>= 32;\n-    }\n-\n-  if (x & 0xFFFF0000)\n-    {\n-      res -= 16;\n-      x >>= 16;\n-    }\n-\n-  if (x & 0xFF00)\n-    {\n-      res -= 8;\n-      x >>= 8;\n-    }\n-\n-  if (x & 0xF0)\n-    {\n-      res -= 4;\n-      x >>= 4;\n-    }\n-\n-  if (x & 0xC)\n-    {\n-      res -= 2;\n-      x >>= 2;\n-    }\n-\n-  if (x & 0x2)\n-    {\n-      res -= 1;\n-      x >>= 1;\n-    }\n-\n-  return res;\n-}\n-#endif\n-\n-\n-#ifdef HAVE_GFC_INTEGER_16\n-extern int ctz128 (GFC_INTEGER_16);\n-export_proto(ctz128);\n-\n-int\n-ctz128 (GFC_INTEGER_16 x)\n-{\n-  int res = 0;\n-\n-  if ((x & 0xFFFFFFFFFFFFFFFF) == 0)\n-    {\n-      res += 64;\n-      x >>= 64;\n-    }\n-\n-  if ((x & 0xFFFFFFFF) == 0)\n-    {\n-      res += 32;\n-      x >>= 32;\n-    }\n-\n-  if ((x & 0xFFFF) == 0)\n-    {\n-      res += 16;\n-      x >>= 16;\n-    }\n-\n-  if ((x & 0xFF) == 0)\n-    {\n-      res += 8;\n-      x >>= 8;\n-    }\n-\n-  if ((x & 0xF) == 0)\n-    {\n-      res += 4;\n-      x >>= 4;\n-    }\n-\n-  if ((x & 0x3) == 0)\n-    {\n-      res += 2;\n-      x >>= 2;\n-    }\n-\n-  if ((x & 0x1) == 0)\n-    {\n-      res += 1;\n-      x >>= 1;\n-    }\n-\n-  return res;\n-}\n-#endif"}]}