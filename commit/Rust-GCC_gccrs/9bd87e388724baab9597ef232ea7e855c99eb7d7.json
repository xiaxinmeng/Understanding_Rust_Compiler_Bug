{"sha": "9bd87e388724baab9597ef232ea7e855c99eb7d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWJkODdlMzg4NzI0YmFhYjk1OTdlZjIzMmVhN2U4NTVjOTllYjdkNw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-08-02T23:05:01Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-08-03T14:30:36Z"}, "message": "libstdc++: Remove trailing whitespace in some tests\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/20_util/function_objects/binders/3113.cc: Remove\n\ttrailing whitespace.\n\t* testsuite/20_util/shared_ptr/assign/auto_ptr.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/assign/auto_ptr_neg.cc: Likewise.\n\t* testsuite/20_util/shared_ptr/assign/auto_ptr_rvalue.cc:\n\tLikewise.\n\t* testsuite/20_util/shared_ptr/creation/dr925.cc: Likewise.\n\t* testsuite/25_algorithms/headers/algorithm/synopsis.cc:\n\tLikewise.\n\t* testsuite/25_algorithms/random_shuffle/requirements/explicit_instantiation/2.cc:\n\tLikewise.\n\t* testsuite/25_algorithms/random_shuffle/requirements/explicit_instantiation/pod.cc:\n\tLikewise.", "tree": {"sha": "e64b566002ed4e4873ffcc74eeb698a3f0a44f5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e64b566002ed4e4873ffcc74eeb698a3f0a44f5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9bd87e388724baab9597ef232ea7e855c99eb7d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bd87e388724baab9597ef232ea7e855c99eb7d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9bd87e388724baab9597ef232ea7e855c99eb7d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9bd87e388724baab9597ef232ea7e855c99eb7d7/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f2f4b87910506effb8dffffc60eeb2451573126", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f2f4b87910506effb8dffffc60eeb2451573126", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f2f4b87910506effb8dffffc60eeb2451573126"}], "stats": {"total": 254, "additions": 127, "deletions": 127}, "files": [{"sha": "03118b291b176948251495e1f66d6d368d967aed", "filename": "libstdc++-v3/testsuite/20_util/function_objects/binders/3113.cc", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bd87e388724baab9597ef232ea7e855c99eb7d7/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fbinders%2F3113.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bd87e388724baab9597ef232ea7e855c99eb7d7/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fbinders%2F3113.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction_objects%2Fbinders%2F3113.cc?ref=9bd87e388724baab9597ef232ea7e855c99eb7d7", "patch": "@@ -25,22 +25,22 @@\n #include <algorithm> // for_each\n #include <functional>\n \n-class Elem \n-{ \n-public: \n-  void print(int) const { } \n-  void modify(int) { } \n-}; \n+class Elem\n+{\n+public:\n+  void print(int) const { }\n+  void modify(int) { }\n+};\n \n // libstdc++/3113\n void test01()\n-{ \n-  std::vector<Elem> coll(2); \n-  // OK \n-  std::for_each(coll.begin(), coll.end(), \n+{\n+  std::vector<Elem> coll(2);\n+  // OK\n+  std::for_each(coll.begin(), coll.end(),\n \t   std::bind2nd(std::mem_fun_ref(&Elem::print), 42));\n   // OK\n-  std::for_each(coll.begin(), coll.end(), \n+  std::for_each(coll.begin(), coll.end(),\n \t   std::bind2nd(std::mem_fun_ref(&Elem::modify), 42));\n }\n "}, {"sha": "39574984c7d6951a945f677ce2a555db70502105", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/assign/auto_ptr.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bd87e388724baab9597ef232ea7e855c99eb7d7/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bd87e388724baab9597ef232ea7e855c99eb7d7/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr.cc?ref=9bd87e388724baab9597ef232ea7e855c99eb7d7", "patch": "@@ -78,7 +78,7 @@ test01()\n   return 0;\n }\n \n-int \n+int\n main()\n {\n   test01();"}, {"sha": "9d0393be22afbd8d77e2e8c1ab3d8b732eb682ee", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/assign/auto_ptr_neg.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bd87e388724baab9597ef232ea7e855c99eb7d7/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bd87e388724baab9597ef232ea7e855c99eb7d7/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr_neg.cc?ref=9bd87e388724baab9597ef232ea7e855c99eb7d7", "patch": "@@ -40,7 +40,7 @@ test01()\n   return 0;\n }\n \n-int \n+int\n main()\n {\n   test01();"}, {"sha": "503fb348aa25d3a92907338805a65320633c480d", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/assign/auto_ptr_rvalue.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bd87e388724baab9597ef232ea7e855c99eb7d7/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr_rvalue.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bd87e388724baab9597ef232ea7e855c99eb7d7/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr_rvalue.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fassign%2Fauto_ptr_rvalue.cc?ref=9bd87e388724baab9597ef232ea7e855c99eb7d7", "patch": "@@ -44,7 +44,7 @@ test02()\n   a = std::move(au);\n }\n \n-int \n+int\n main()\n {\n   test01();"}, {"sha": "25ff611f8d6f23bfd442a7b023bf805059dde51a", "filename": "libstdc++-v3/testsuite/20_util/shared_ptr/creation/dr925.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bd87e388724baab9597ef232ea7e855c99eb7d7/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fdr925.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bd87e388724baab9597ef232ea7e855c99eb7d7/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fdr925.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fshared_ptr%2Fcreation%2Fdr925.cc?ref=9bd87e388724baab9597ef232ea7e855c99eb7d7", "patch": "@@ -28,19 +28,19 @@ struct A\n {\n };\n \n-std::unique_ptr<A> \n+std::unique_ptr<A>\n create_unique_ptr()\n {\n   return std::unique_ptr<A>(new A());\n }\n \n-std::auto_ptr<A> \n+std::auto_ptr<A>\n create_auto_ptr()\n {\n   return std::auto_ptr<A>(new A());\n }\n \n-void \n+void\n process(std::shared_ptr<A> a)\n {\n   VERIFY( a.get() != 0 );"}, {"sha": "68f5d425b4d55aab7341080456abebce519f14ea", "filename": "libstdc++-v3/testsuite/25_algorithms/headers/algorithm/synopsis.cc", "status": "modified", "additions": 106, "deletions": 106, "changes": 212, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bd87e388724baab9597ef232ea7e855c99eb7d7/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fheaders%2Falgorithm%2Fsynopsis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bd87e388724baab9597ef232ea7e855c99eb7d7/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fheaders%2Falgorithm%2Fsynopsis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Fheaders%2Falgorithm%2Fsynopsis.cc?ref=9bd87e388724baab9597ef232ea7e855c99eb7d7", "patch": "@@ -24,12 +24,12 @@ namespace std\n   // 25.1, non-modifying sequence operations:\n   template<typename _IIter, typename _Funct>\n     _GLIBCXX20_CONSTEXPR\n-    _Funct \n+    _Funct\n     for_each(_IIter, _IIter, _Funct);\n \n   template<typename _IIter, typename _Tp>\n     _GLIBCXX20_CONSTEXPR\n-    _IIter \n+    _IIter\n     find(_IIter, _IIter, const _Tp&);\n \n   template<typename _IIter, typename _Predicate>\n@@ -91,12 +91,12 @@ namespace std\n \n   template<typename _FIter>\n     _GLIBCXX20_CONSTEXPR\n-    _FIter \n+    _FIter\n     adjacent_find(_FIter, _FIter);\n \n   template<typename _FIter, typename _BinaryPredicate>\n     _GLIBCXX20_CONSTEXPR\n-    _FIter \n+    _FIter\n     adjacent_find(_FIter, _FIter, _BinaryPredicate);\n \n   template<typename _IIter, typename _Tp>\n@@ -121,40 +121,40 @@ namespace std\n \n   template<typename _IIter1, typename _IIter2>\n     _GLIBCXX20_CONSTEXPR\n-    bool \n+    bool\n     equal(_IIter1, _IIter1, _IIter2);\n \n   template<typename _IIter1, typename _IIter2, typename _BinaryPredicate>\n     _GLIBCXX20_CONSTEXPR\n-    bool \n+    bool\n     equal(_IIter1, _IIter1, _IIter2, _BinaryPredicate);\n \n   template<typename _FIter1, typename _FIter2>\n     _GLIBCXX20_CONSTEXPR\n-    _FIter1 \n+    _FIter1\n     search(_FIter1, _FIter1, _FIter2, _FIter2);\n \n   template<typename _FIter1, typename _FIter2, typename _BinaryPredicate>\n     _GLIBCXX20_CONSTEXPR\n-    _FIter1 \n+    _FIter1\n     search(_FIter1, _FIter1, _FIter2, _FIter2, _BinaryPredicate);\n \n   template<typename _FIter, typename _Size, typename _Tp>\n     _GLIBCXX20_CONSTEXPR\n-    _FIter \n+    _FIter\n     search_n(_FIter, _FIter, _Size, const _Tp&);\n \n-  template<typename _FIter, typename _Size, typename _Tp, \n+  template<typename _FIter, typename _Size, typename _Tp,\n \t   typename _BinaryPredicate>\n     _GLIBCXX20_CONSTEXPR\n-    _FIter \n+    _FIter\n     search_n(_FIter, _FIter, _Size, const _Tp&, _BinaryPredicate);\n \n   // 25.2, modifying sequence operations:\n   // 25.2.1, copy:\n   template<typename _IIter, typename _OIter>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     copy(_IIter, _IIter, _OIter);\n \n   template<typename _BIter1, typename _BIter2>\n@@ -164,9 +164,9 @@ namespace std\n \n   // 25.2.2, swap:\n #if __cplusplus < 201103L\n-  template<typename _Tp> \n+  template<typename _Tp>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     swap(_Tp&, _Tp& b);\n \n   template<typename _Tp, size_t _Nm>\n@@ -181,89 +181,89 @@ namespace std\n \n   template<typename _FIter1, typename _FIter2>\n     _GLIBCXX20_CONSTEXPR\n-    _FIter2 \n+    _FIter2\n     swap_ranges(_FIter1 first1, _FIter1, _FIter2);\n \n   template<typename _FIter1, typename _FIter2>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     iter_swap(_FIter1, _FIter2 b);\n \n   template<typename _IIter, typename _OIter, typename _UnaryOperation>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     transform(_IIter, _IIter, _OIter, _UnaryOperation op);\n \n-  template<typename _IIter1, typename _IIter2, typename _OIter, \n+  template<typename _IIter1, typename _IIter2, typename _OIter,\n \t   typename _BinaryOperation>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     transform(_IIter1, _IIter1, _IIter2, _OIter, _BinaryOperation);\n \n   template<typename _FIter, typename _Tp>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     replace(_FIter, _FIter, const _Tp&, const _Tp&);\n \n   template<typename _FIter, typename _Predicate, typename _Tp>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     replace_if(_FIter, _FIter, _Predicate, const _Tp&);\n \n   template<typename _IIter, typename _OIter, typename _Tp>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     replace_copy(_IIter, _IIter, _OIter, const _Tp&, const _Tp&);\n \n   template<typename _Iter, typename _OIter, typename _Predicate, typename _Tp>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     replace_copy_if(_Iter, _Iter, _OIter, _Predicate, const _Tp&);\n \n   template<typename _FIter, typename _Tp>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     fill(_FIter, _FIter, const _Tp&);\n \n   template<typename _OIter, typename _Size, typename _Tp>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     fill_n(_OIter, _Size n, const _Tp&);\n \n   template<typename _FIter, typename _Generator>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     generate(_FIter, _FIter, _Generator);\n \n   template<typename _OIter, typename _Size, typename _Generator>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     generate_n(_OIter, _Size, _Generator);\n \n   template<typename _FIter, typename _Tp>\n     _GLIBCXX20_CONSTEXPR\n-    _FIter \n+    _FIter\n     remove(_FIter, _FIter, const _Tp&);\n \n   template<typename _FIter, typename _Predicate>\n     _GLIBCXX20_CONSTEXPR\n-    _FIter \n+    _FIter\n     remove_if(_FIter, _FIter, _Predicate);\n \n   template<typename _IIter, typename _OIter, typename _Tp>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     remove_copy(_IIter, _IIter, _OIter, const _Tp&);\n \n   template<typename _IIter, typename _OIter, typename _Predicate>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     remove_copy_if(_IIter, _IIter, _OIter, _Predicate);\n \n #if __cplusplus >= 201103L\n   template<typename _IIter, typename _OIter, typename _Predicate>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     copy_if(_IIter, _IIter, _OIter, _Predicate);\n \n   template<typename _IIter, typename _Size, typename _OIter>\n@@ -280,51 +280,51 @@ namespace std\n \n   template<typename _FIter>\n     _GLIBCXX20_CONSTEXPR\n-    _FIter \n+    _FIter\n     unique(_FIter, _FIter);\n \n   template<typename _FIter, typename _BinaryPredicate>\n     _GLIBCXX20_CONSTEXPR\n-    _FIter \n+    _FIter\n     unique(_FIter, _FIter, _BinaryPredicate);\n \n   template<typename _IIter, typename _OIter>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     unique_copy(_IIter, _IIter, _OIter);\n \n   template<typename _IIter, typename _OIter, typename _BinaryPredicate>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     unique_copy(_IIter, _IIter, _OIter, _BinaryPredicate);\n \n   template<typename _BIter>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     reverse(_BIter, _BIter);\n \n   template<typename _BIter, typename _OIter>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     reverse_copy(_BIter, _BIter, _OIter);\n \n   template<typename _FIter>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     rotate(_FIter, _FIter, _FIter);\n \n   template<typename _FIter, typename _OIter>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     rotate_copy (_FIter, _FIter, _FIter, _OIter);\n \n #if __cplusplus <= 201103L\n   template<typename _RAIter>\n-    void \n+    void\n     random_shuffle(_RAIter, _RAIter);\n \n   template<typename _RAIter, typename _Generator>\n-    void \n+    void\n     random_shuffle(_RAIter, _RAIter, _Generator&);\n #endif\n \n@@ -337,41 +337,41 @@ namespace std\n   // 25.2.12, partitions:\n   template<typename _BIter, typename _Predicate>\n     _GLIBCXX20_CONSTEXPR\n-    _BIter \n+    _BIter\n     partition(_BIter, _BIter, _Predicate);\n \n   template<typename _BIter, typename _Predicate>\n-    _BIter \n+    _BIter\n     stable_partition(_BIter, _BIter, _Predicate);\n \n   // 25.3, sorting and related operations:\n   // 25.3.1, sorting:\n   template<typename _RAIter>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     sort(_RAIter, _RAIter);\n \n   template<typename _RAIter, typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     sort(_RAIter, _RAIter, _Compare);\n \n   template<typename _RAIter>\n-    void \n+    void\n     stable_sort(_RAIter, _RAIter);\n \n   template<typename _RAIter, typename _Compare>\n-    void \n+    void\n     stable_sort(_RAIter, _RAIter, _Compare);\n \n   template<typename _RAIter>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     partial_sort(_RAIter, _RAIter, _RAIter);\n \n   template<typename _RAIter, typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     partial_sort(_RAIter, _RAIter, _RAIter, _Compare);\n \n   template<typename _IIter, typename _RAIter>\n@@ -386,33 +386,33 @@ namespace std\n \n   template<typename _RAIter>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     nth_element(_RAIter, _RAIter, _RAIter);\n \n   template<typename _RAIter, typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     nth_element(_RAIter, _RAIter, _RAIter, _Compare);\n \n   // 25.3.3, binary search:\n   template<typename _FIter, typename _Tp>\n     _GLIBCXX20_CONSTEXPR\n-    _FIter \n+    _FIter\n     lower_bound(_FIter, _FIter, const _Tp&);\n \n   template<typename _FIter, typename _Tp, typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    _FIter \n+    _FIter\n     lower_bound(_FIter, _FIter, const _Tp&, _Compare);\n \n   template<typename _FIter, typename _Tp>\n     _GLIBCXX20_CONSTEXPR\n-    _FIter \n+    _FIter\n     upper_bound(_FIter, _FIter, const _Tp&);\n \n   template<typename _FIter, typename _Tp, typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    _FIter \n+    _FIter\n     upper_bound(_FIter, _FIter, const _Tp&, _Compare);\n \n   template<typename _FIter, typename _Tp>\n@@ -427,212 +427,212 @@ namespace std\n \n   template<typename _FIter, typename _Tp>\n     _GLIBCXX20_CONSTEXPR\n-    bool \n+    bool\n     binary_search(_FIter, _FIter, const _Tp&);\n \n   template<typename _FIter, typename _Tp, typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    bool \n+    bool\n     binary_search(_FIter, _FIter, const _Tp&, _Compare);\n \n   // 25.3.4, merge:\n   template<typename _IIter1, typename _IIter2, typename _OIter>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     merge(_IIter1, _IIter1, _IIter2, _IIter2, _OIter);\n \n-  template<typename _IIter1, typename _IIter2, typename _OIter, \n+  template<typename _IIter1, typename _IIter2, typename _OIter,\n \t   typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     merge(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare);\n \n   template<typename _BIter>\n-    void \n+    void\n     inplace_merge(_BIter, _BIter, _BIter);\n \n   template<typename _BIter, typename _Compare>\n-    void \n+    void\n     inplace_merge(_BIter, _BIter, _BIter, _Compare);\n \n   // 25.3.5, set operations:\n   template<typename _IIter1, typename _IIter2>\n     _GLIBCXX20_CONSTEXPR\n-    bool \n+    bool\n     includes(_IIter1, _IIter1, _IIter2, _IIter2);\n \n   template<typename _IIter1, typename _IIter2, typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    bool \n+    bool\n     includes(_IIter1, _IIter1, _IIter2, _IIter2, _Compare);\n \n   template<typename _IIter1, typename _IIter2, typename _OIter>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     set_union(_IIter1, _IIter1, _IIter2, _IIter2, _OIter);\n \n   template<typename _IIter1, typename _IIter2, typename _OIter,\n \t   typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     set_union(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare);\n \n   template<typename _IIter1, typename _IIter2, typename _OIter>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     set_intersection(_IIter1, _IIter1, _IIter2, _IIter2, _OIter);\n \n   template<typename _IIter1, typename _IIter2, typename _OIter,\n \t   typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     set_intersection(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare);\n \n   template<typename _IIter1, typename _IIter2, typename _OIter>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     set_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter);\n \n-  template<typename _IIter1, typename _IIter2, typename _OIter, \n+  template<typename _IIter1, typename _IIter2, typename _OIter,\n \t   typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    _OIter \n+    _OIter\n     set_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter, _Compare);\n \n   template<typename _IIter1, typename _IIter2, typename _OIter>\n     _GLIBCXX20_CONSTEXPR\n     _OIter\n     set_symmetric_difference(_IIter1, _IIter1, _IIter2, _IIter2, _OIter);\n \n-  template<typename _IIter1, typename _IIter2, typename _OIter, \n+  template<typename _IIter1, typename _IIter2, typename _OIter,\n \t   typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n     _OIter\n-    set_symmetric_difference(_IIter1, _IIter1, _IIter2, _IIter2, \n+    set_symmetric_difference(_IIter1, _IIter1, _IIter2, _IIter2,\n \t\t\t     _OIter, _Compare);\n \n   // 25.3.6, heap operations:\n   template<typename _RAIter>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     push_heap(_RAIter, _RAIter);\n \n   template<typename _RAIter, typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     push_heap(_RAIter, _RAIter, _Compare);\n \n   template<typename _RAIter>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     pop_heap(_RAIter, _RAIter);\n \n   template<typename _RAIter, typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     pop_heap(_RAIter, _RAIter, _Compare);\n \n   template<typename _RAIter>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     make_heap(_RAIter, _RAIter);\n \n   template<typename _RAIter, typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     make_heap(_RAIter, _RAIter, _Compare);\n \n   template<typename _RAIter>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     sort_heap(_RAIter, _RAIter);\n \n   template<typename _RAIter, typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    void \n+    void\n     sort_heap(_RAIter, _RAIter, _Compare);\n \n #if __cplusplus >= 201103L\n   template<typename _RAIter>\n     _GLIBCXX20_CONSTEXPR\n-    bool \n+    bool\n     is_heap(_RAIter, _RAIter);\n \n   template<typename _RAIter, typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    bool \n+    bool\n     is_heap(_RAIter, _RAIter, _Compare);\n \n   template<typename _RAIter>\n     _GLIBCXX20_CONSTEXPR\n-    _RAIter \n+    _RAIter\n     is_heap_until(_RAIter, _RAIter);\n \n   template<typename _RAIter, typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    _RAIter \n+    _RAIter\n     is_heap_until(_RAIter, _RAIter, _Compare);\n \n   template<typename _FIter>\n     _GLIBCXX20_CONSTEXPR\n-    bool \n+    bool\n     is_sorted(_FIter, _FIter);\n \n   template<typename _FIter, typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    bool \n+    bool\n     is_sorted(_FIter, _FIter, _Compare);\n \n   template<typename _FIter>\n     _GLIBCXX20_CONSTEXPR\n-    _FIter \n+    _FIter\n     is_sorted_until(_FIter, _FIter);\n \n   template<typename _FIter, typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    _FIter \n+    _FIter\n     is_sorted_until(_FIter, _FIter, _Compare);\n #endif\n \n   // 25.3.7, minimum and maximum:\n-  template<typename _Tp> \n+  template<typename _Tp>\n     _GLIBCXX14_CONSTEXPR\n-    const _Tp& \n+    const _Tp&\n     min(const _Tp&, const _Tp&);\n \n   template<typename _Tp, typename _Compare>\n     _GLIBCXX14_CONSTEXPR\n-    const _Tp& \n+    const _Tp&\n     min(const _Tp&, const _Tp&, _Compare);\n \n-  template<typename _Tp> \n+  template<typename _Tp>\n     _GLIBCXX14_CONSTEXPR\n-    const _Tp& \n+    const _Tp&\n     max(const _Tp&, const _Tp&);\n \n   template<typename _Tp, typename _Compare>\n     _GLIBCXX14_CONSTEXPR\n-    const _Tp& \n+    const _Tp&\n     max(const _Tp&, const _Tp&, _Compare);\n \n   template<typename _FIter>\n     _GLIBCXX14_CONSTEXPR\n-    _FIter \n+    _FIter\n     min_element(_FIter, _FIter);\n \n   template<typename _FIter, typename _Compare>\n     _GLIBCXX14_CONSTEXPR\n-    _FIter \n+    _FIter\n     min_element(_FIter, _FIter, _Compare);\n \n   template<typename _FIter>\n     _GLIBCXX14_CONSTEXPR\n-    _FIter \n+    _FIter\n     max_element(_FIter, _FIter);\n \n   template<typename _FIter, typename _Compare>\n     _GLIBCXX14_CONSTEXPR\n-    _FIter \n+    _FIter\n     max_element(_FIter, _FIter, _Compare);\n \n #if __cplusplus >= 201103L\n@@ -689,32 +689,32 @@ namespace std\n \n   template<typename _IIter1, typename _IIter2>\n     _GLIBCXX20_CONSTEXPR\n-    bool \n+    bool\n     lexicographical_compare(_IIter1, _IIter1, _IIter2, _IIter2);\n \n   template<typename _IIter1, typename _IIter2, typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    bool \n+    bool\n     lexicographical_compare(_IIter1, _IIter1, _IIter2, _IIter2, _Compare);\n \n   // 25.3.9, permutations\n   template<typename _BIter>\n     _GLIBCXX20_CONSTEXPR\n-    bool \n+    bool\n     next_permutation(_BIter, _BIter);\n \n   template<typename _BIter, typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    bool \n+    bool\n     next_permutation(_BIter, _BIter, _Compare);\n \n   template<typename _BIter>\n     _GLIBCXX20_CONSTEXPR\n-    bool \n+    bool\n     prev_permutation(_BIter, _BIter);\n \n   template<typename _BIter, typename _Compare>\n     _GLIBCXX20_CONSTEXPR\n-    bool \n+    bool\n     prev_permutation(_BIter, _BIter, _Compare);\n }"}, {"sha": "7a12bef063e9ee6e81cc023ccf0fac86b7c5ce26", "filename": "libstdc++-v3/testsuite/25_algorithms/random_shuffle/requirements/explicit_instantiation/2.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bd87e388724baab9597ef232ea7e855c99eb7d7/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frandom_shuffle%2Frequirements%2Fexplicit_instantiation%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bd87e388724baab9597ef232ea7e855c99eb7d7/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frandom_shuffle%2Frequirements%2Fexplicit_instantiation%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frandom_shuffle%2Frequirements%2Fexplicit_instantiation%2F2.cc?ref=9bd87e388724baab9597ef232ea7e855c99eb7d7", "patch": "@@ -34,6 +34,6 @@ namespace std\n   typedef std::pointer_to_unary_function<int, int>  generator_type;\n \n   template void random_shuffle(iterator_type, iterator_type);\n-  template void random_shuffle(iterator_type, iterator_type, \n+  template void random_shuffle(iterator_type, iterator_type,\n \t\t\t       generator_type&);\n-} \n+}"}, {"sha": "774c39a6aa6aee28cace7f26baac16b6643939be", "filename": "libstdc++-v3/testsuite/25_algorithms/random_shuffle/requirements/explicit_instantiation/pod.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9bd87e388724baab9597ef232ea7e855c99eb7d7/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frandom_shuffle%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9bd87e388724baab9597ef232ea7e855c99eb7d7/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frandom_shuffle%2Frequirements%2Fexplicit_instantiation%2Fpod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F25_algorithms%2Frandom_shuffle%2Frequirements%2Fexplicit_instantiation%2Fpod.cc?ref=9bd87e388724baab9597ef232ea7e855c99eb7d7", "patch": "@@ -33,6 +33,6 @@ namespace std\n   typedef std::pointer_to_unary_function<int, int>  generator_type;\n \n   template void random_shuffle(iterator_type, iterator_type);\n-  template void random_shuffle(iterator_type, iterator_type, \n+  template void random_shuffle(iterator_type, iterator_type,\n \t\t\t       generator_type&);\n-} \n+}"}]}