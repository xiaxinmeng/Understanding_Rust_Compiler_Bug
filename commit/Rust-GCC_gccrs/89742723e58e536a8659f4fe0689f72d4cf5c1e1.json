{"sha": "89742723e58e536a8659f4fe0689f72d4cf5c1e1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk3NDI3MjNlNThlNTM2YTg2NTlmNGZlMDY4OWY3MmQ0Y2Y1YzFlMQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-01-18T18:52:38Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-01-18T18:52:38Z"}, "message": "(emit_move_insn, expand_expr): Fix typos in comments.\n\nFrom-SVN: r3267", "tree": {"sha": "19197afcb7d56c33d320fedc25d2475814406ab9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/19197afcb7d56c33d320fedc25d2475814406ab9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89742723e58e536a8659f4fe0689f72d4cf5c1e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89742723e58e536a8659f4fe0689f72d4cf5c1e1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89742723e58e536a8659f4fe0689f72d4cf5c1e1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89742723e58e536a8659f4fe0689f72d4cf5c1e1/comments", "author": null, "committer": null, "parents": [{"sha": "8da4cd09fb4a6d5aa7d755ed0ee1b72a4dba62ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8da4cd09fb4a6d5aa7d755ed0ee1b72a4dba62ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8da4cd09fb4a6d5aa7d755ed0ee1b72a4dba62ed"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "94e38b46e678461a9affda5b0d04f6d95bdc6710", "filename": "gcc/expr.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89742723e58e536a8659f4fe0689f72d4cf5c1e1/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89742723e58e536a8659f4fe0689f72d4cf5c1e1/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=89742723e58e536a8659f4fe0689f72d4cf5c1e1", "patch": "@@ -1591,7 +1591,7 @@ emit_move_insn (x, y)\n     return\n       emit_insn (GEN_FCN (mov_optab->handlers[(int) mode].insn_code) (x, y));\n \n-  /* Expand complex moves by moving real part and imag part, if posible.  */\n+  /* Expand complex moves by moving real part and imag part, if possible.  */\n   else if ((class == MODE_COMPLEX_FLOAT || class == MODE_COMPLEX_INT)\n \t   && submode != BLKmode\n \t   && (mov_optab->handlers[(int) submode].insn_code\n@@ -3803,7 +3803,7 @@ expand_expr (exp, target, tmode, modifier)\n \t\t    || TREE_CODE (TREE_TYPE (exp2)) == UNION_TYPE)))\n \t  MEM_IN_STRUCT_P (temp) = 1;\n \tMEM_VOLATILE_P (temp) = TREE_THIS_VOLATILE (exp);\n-#if 0 /* It is incorrectto set RTX_UNCHANGING_P here, because the fact that\n+#if 0 /* It is incorrect to set RTX_UNCHANGING_P here, because the fact that\n \t a location is accessed through a pointer to const does not mean\n \t that the value there can never change.  */\n \tRTX_UNCHANGING_P (temp) = TREE_READONLY (exp);\n@@ -4066,7 +4066,7 @@ expand_expr (exp, target, tmode, modifier)\n \ttemp = gen_rtx (MEM, mode, memory_address (mode, op0));\n \tMEM_IN_STRUCT_P (temp) = 1;\n \tMEM_VOLATILE_P (temp) = TREE_THIS_VOLATILE (exp);\n-#if 0 /* It is incorrectto set RTX_UNCHANGING_P here, because the fact that\n+#if 0 /* It is incorrect to set RTX_UNCHANGING_P here, because the fact that\n \t a location is accessed through a pointer to const does not mean\n \t that the value there can never change.  */\n \tRTX_UNCHANGING_P (temp) = TREE_READONLY (exp);"}]}