{"sha": "6eee98936968c67edc8d9190b215819498840b57", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVlZTk4OTM2OTY4YzY3ZWRjOGQ5MTkwYjIxNTgxOTQ5ODg0MGI1Nw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-04-05T08:16:38Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-04-05T08:16:38Z"}, "message": "re PR tree-optimization/26763 (wrong final value of induction variable calculated)\n\n2006-04-05  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/26763\n\t* fold-const.c (fold_comparison): Move folding of\n\tPTR + CST CMP PTR + CST ...\n\t(fold_binary): ... here.  Fold only for EQ_EXPR and NE_EXPR.\n\n\t* gcc.dg/torture/pr26763-1.c: New testcase.\n\t* gcc.dg/torture/pr26763-2.c: Likewise.\n\nFrom-SVN: r112697", "tree": {"sha": "45b8361ffc4c1c5d575d89fb35f70ef96623e1d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/45b8361ffc4c1c5d575d89fb35f70ef96623e1d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6eee98936968c67edc8d9190b215819498840b57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eee98936968c67edc8d9190b215819498840b57", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6eee98936968c67edc8d9190b215819498840b57", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6eee98936968c67edc8d9190b215819498840b57/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "80521187ef59a2d150007032f04c2ccdeb59afe1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80521187ef59a2d150007032f04c2ccdeb59afe1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80521187ef59a2d150007032f04c2ccdeb59afe1"}], "stats": {"total": 104, "additions": 77, "deletions": 27}, "files": [{"sha": "5c3f2515db51edb530ae90eac4958f8bda9fb02d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eee98936968c67edc8d9190b215819498840b57/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eee98936968c67edc8d9190b215819498840b57/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6eee98936968c67edc8d9190b215819498840b57", "patch": "@@ -1,3 +1,10 @@\n+2006-04-05  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/26763\n+\t* fold-const.c (fold_comparison): Move folding of\n+\tPTR + CST CMP PTR + CST ...\n+\t(fold_binary): ... here.  Fold only for EQ_EXPR and NE_EXPR.\n+\n 2006-04-05  Gerald Pfeifer  <gerald@pfeifer.com>\n \n \t* doc/install.texi (Prerequisites): Refine some wording on"}, {"sha": "d8f7efc62e5c89b9e8bf5130639a890db88772ce", "filename": "gcc/fold-const.c", "status": "modified", "additions": 28, "deletions": 27, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eee98936968c67edc8d9190b215819498840b57/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eee98936968c67edc8d9190b215819498840b57/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=6eee98936968c67edc8d9190b215819498840b57", "patch": "@@ -7305,33 +7305,6 @@ fold_comparison (enum tree_code code, tree type, tree op0, tree op1)\n   if (tree_swap_operands_p (arg0, arg1, true))\n     return fold_build2 (swap_tree_comparison (code), type, op1, op0);\n \n-  /* If this is a comparison of two exprs that look like an\n-     ARRAY_REF of the same object, then we can fold this to a\n-     comparison of the two offsets.  */\n-  {\n-    tree base0, offset0, base1, offset1;\n-\n-    if (extract_array_ref (arg0, &base0, &offset0)\n-\t&& extract_array_ref (arg1, &base1, &offset1)\n-\t&& operand_equal_p (base0, base1, 0))\n-      {\n-\t/* Handle no offsets on both sides specially.  */\n-\tif (offset0 == NULL_TREE && offset1 == NULL_TREE)\n-\t  return fold_build2 (code, type, integer_zero_node,\n-\t\t\t      integer_zero_node);\n-\n-\tif (!offset0 || !offset1\n-\t    || TREE_TYPE (offset0) == TREE_TYPE (offset1))\n-\t  {\n-\t    if (offset0 == NULL_TREE)\n-\t      offset0 = build_int_cst (TREE_TYPE (offset1), 0);\n-\t    if (offset1 == NULL_TREE)\n-\t      offset1 = build_int_cst (TREE_TYPE (offset0), 0);\n-\t    return fold_build2 (code, type, offset0, offset1);\n-\t  }\n-      }\n-  }\n-\n   /* Transform comparisons of the form X +- C1 CMP C2 to X CMP C2 +- C1.  */\n   if ((TREE_CODE (arg0) == PLUS_EXPR || TREE_CODE (arg0) == MINUS_EXPR)\n       && (TREE_CODE (TREE_OPERAND (arg0, 1)) == INTEGER_CST\n@@ -10062,6 +10035,34 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n \t\t\t      tem, build_int_cst (TREE_TYPE (tem), 0));\n \t}\n \n+      /* If this is a comparison of two exprs that look like an\n+\t ARRAY_REF of the same object, then we can fold this to a\n+\t comparison of the two offsets.  This is only safe for\n+\t EQ_EXPR and NE_EXPR because of overflow issues.  */\n+      {\n+\ttree base0, offset0, base1, offset1;\n+\n+\tif (extract_array_ref (arg0, &base0, &offset0)\n+\t    && extract_array_ref (arg1, &base1, &offset1)\n+\t    && operand_equal_p (base0, base1, 0))\n+          {\n+\t    /* Handle no offsets on both sides specially.  */\n+\t    if (offset0 == NULL_TREE && offset1 == NULL_TREE)\n+\t      return fold_build2 (code, type, integer_zero_node,\n+\t\t\t\t  integer_zero_node);\n+\n+\t    if (!offset0 || !offset1\n+\t\t|| TREE_TYPE (offset0) == TREE_TYPE (offset1))\n+\t      {\n+\t        if (offset0 == NULL_TREE)\n+\t\t  offset0 = build_int_cst (TREE_TYPE (offset1), 0);\n+\t\tif (offset1 == NULL_TREE)\n+\t          offset1 = build_int_cst (TREE_TYPE (offset0), 0);\n+\t\treturn fold_build2 (code, type, offset0, offset1);\n+\t      }\n+\t  }\n+      }\n+\n       if (integer_zerop (arg1)\n \t  && tree_expr_nonzero_p (arg0))\n         {"}, {"sha": "8c32d4ee2c87cd9e8133402ac30835c8266d058f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eee98936968c67edc8d9190b215819498840b57/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eee98936968c67edc8d9190b215819498840b57/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6eee98936968c67edc8d9190b215819498840b57", "patch": "@@ -1,3 +1,9 @@\n+2006-04-05  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/26763\n+\t* gcc.dg/torture/pr26763-1.c: New testcase.\n+\t* gcc.dg/torture/pr26763-2.c: Likewise.\n+\n 2006-04-04  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/23634"}, {"sha": "37054e7a4fbe535bc57962a99674c0e33e816af1", "filename": "gcc/testsuite/gcc.dg/torture/pr26763-1.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eee98936968c67edc8d9190b215819498840b57/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr26763-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eee98936968c67edc8d9190b215819498840b57/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr26763-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr26763-1.c?ref=6eee98936968c67edc8d9190b215819498840b57", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do run } */\n+\n+extern void abort(void);\n+\n+int try (int *a)\n+{\n+  return a + -1 > a;\n+}\n+\n+int main(void)\n+{\n+  int bla[100];\n+\n+  if (try (bla + 50))\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "d8155fb0831a5e56ddbeb63e504f4aecb7d6da0f", "filename": "gcc/testsuite/gcc.dg/torture/pr26763-2.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6eee98936968c67edc8d9190b215819498840b57/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr26763-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6eee98936968c67edc8d9190b215819498840b57/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr26763-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr26763-2.c?ref=6eee98936968c67edc8d9190b215819498840b57", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do run } */\n+\n+extern void abort(void);\n+\n+int try (char *a, int d)\n+{\n+  return a + d > a;\n+}\n+\n+int main(void)\n+{\n+  char bla[100];\n+\n+  if (try (bla + 50, -1))\n+    abort ();\n+\n+  return 0;\n+}"}]}