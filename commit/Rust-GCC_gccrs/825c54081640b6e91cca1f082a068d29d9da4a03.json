{"sha": "825c54081640b6e91cca1f082a068d29d9da4a03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI1YzU0MDgxNjQwYjZlOTFjY2ExZjA4MmEwNjhkMjlkOWRhNGEwMw==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2003-01-20T02:25:07Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2003-01-20T02:25:07Z"}, "message": "collect2.c (ldgetname): Expand declaration to prototype.\n\n        * collect2.c (ldgetname): Expand declaration to prototype.\n        * read-rtl.c (atoll): Add prototype.\n\nFrom-SVN: r61489", "tree": {"sha": "a3c9ee567266263caf6e51e326d6afe0d74d2a20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a3c9ee567266263caf6e51e326d6afe0d74d2a20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/825c54081640b6e91cca1f082a068d29d9da4a03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/825c54081640b6e91cca1f082a068d29d9da4a03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/825c54081640b6e91cca1f082a068d29d9da4a03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/825c54081640b6e91cca1f082a068d29d9da4a03/comments", "author": null, "committer": null, "parents": [{"sha": "77d187bc372365b738efc866a03e85e0130c008d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/77d187bc372365b738efc866a03e85e0130c008d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/77d187bc372365b738efc866a03e85e0130c008d"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "3655168976ad302cbab8495e22f327d2f5dc9ddb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825c54081640b6e91cca1f082a068d29d9da4a03/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825c54081640b6e91cca1f082a068d29d9da4a03/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=825c54081640b6e91cca1f082a068d29d9da4a03", "patch": "@@ -1,3 +1,8 @@\n+2003-01-19  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* collect2.c (ldgetname): Expand declaration to prototype.\n+\t* read-rtl.c (atoll): Add prototype.\n+\n 2003-01-19  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* config.gcc (mips64*-*-linux*): Added."}, {"sha": "c3287985adc428e7ec0a2c2fa3102584df8353f6", "filename": "gcc/collect2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825c54081640b6e91cca1f082a068d29d9da4a03/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825c54081640b6e91cca1f082a068d29d9da4a03/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=825c54081640b6e91cca1f082a068d29d9da4a03", "patch": "@@ -2720,7 +2720,7 @@ ignore_library (name)\n }\n #endif /* COLLECT_EXPORT_LIST */\n \n-extern char *ldgetname ();\n+extern char *ldgetname PARAMS ((struct ldfile *, void *));\n \n /* COFF version to scan the name list of the loaded program for\n    the symbols g++ uses for static constructors and destructors."}, {"sha": "95bc2fefa57fc6757b37709098b8ac7cf4115386", "filename": "gcc/read-rtl.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/825c54081640b6e91cca1f082a068d29d9da4a03/gcc%2Fread-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/825c54081640b6e91cca1f082a068d29d9da4a03/gcc%2Fread-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fread-rtl.c?ref=825c54081640b6e91cca1f082a068d29d9da4a03", "patch": "@@ -368,6 +368,8 @@ read_string (ob, infile, star_if_braced)\n /* Provide a version of a function to read a long long if the system does\n    not provide one.  */\n #if HOST_BITS_PER_WIDE_INT > HOST_BITS_PER_LONG && !defined(HAVE_ATOLL) && !defined(HAVE_ATOQ)\n+HOST_WIDE_INT atoll PARAMS ((const char *));\n+\n HOST_WIDE_INT\n atoll (p)\n     const char *p;"}]}