{"sha": "e08138aae3e518cc5e4063fa49b61c9e2a70c978", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTA4MTM4YWFlM2U1MThjYzVlNDA2M2ZhNDliNjFjOWUyYTcwYzk3OA==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2001-09-20T08:30:01Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2001-09-20T08:30:01Z"}, "message": "Implement std::time_put.\n\n\n2001-09-19  Benjamin Kosnik  <bkoz@redhat.com>\n\n\tImplement std::time_put.\n\t* include/bits/locale_facets.h: Include time_members.h.\n\t(__timepunct): New.\n\t(time_put): Implement.\n\t* include/bits/locale_facets.tcc (do_put): Put generic versions here.\n\t* include/bits/localefwd.h: Bump number of facets.\n\t* config/locale/time_members_generic.h: New file.\n\t* config/locale/time_members_gnu.h: New file.\n\t* config/locale/c_locale_generic.h: Include clocale.\n\t* src/locale-inst.cc: Add use_facet instantiations for __timepunct.\n\t* src/locale.cc: Add __timepunct initializations.\n\t* src/localename.cc (locale::_Impl::_Impl(string, size_t)): Same.\n\t* include/Makefile.am (stamp-target): Add time_members.h.\n\t* include/Makefile.in: Regenerate.\n\t* acinclude.m4 (GLIBCPP_ENABLE_CLOCALE): Add CTIME_H.\n\t* aclocal.m4: Regenerate.\n\t* configure: Regenerate.\n\t* testsuite/22_locale/time_put.cc: New file.\n\t* testsuite/22_locale/time_put_members_char.cc: New file.\n\n\t* docs/html/22_locale/locale.html: Add note.\n\nFrom-SVN: r45702", "tree": {"sha": "2a5dcdc28c5a07e9a96570184d62aa77b9a7b0f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a5dcdc28c5a07e9a96570184d62aa77b9a7b0f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e08138aae3e518cc5e4063fa49b61c9e2a70c978", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e08138aae3e518cc5e4063fa49b61c9e2a70c978", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e08138aae3e518cc5e4063fa49b61c9e2a70c978", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e08138aae3e518cc5e4063fa49b61c9e2a70c978/comments", "author": null, "committer": null, "parents": [{"sha": "10bd1d78b4e9d34ea13c4917df7970a3c8df23ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10bd1d78b4e9d34ea13c4917df7970a3c8df23ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10bd1d78b4e9d34ea13c4917df7970a3c8df23ae"}], "stats": {"total": 3516, "additions": 2270, "deletions": 1246}, "files": [{"sha": "762b18eb409b82d99699e1b90684ee5218ef9081", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -1,3 +1,27 @@\n+2001-09-19  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\tImplement std::time_put.\n+\t* include/bits/locale_facets.h: Include time_members.h.\n+\t(__timepunct): New.\n+\t(time_put): Implement.\n+\t* include/bits/locale_facets.tcc (do_put): Put generic versions here.\n+\t* include/bits/localefwd.h: Bump number of facets.\n+\t* config/locale/time_members_generic.h: New file.\n+\t* config/locale/time_members_gnu.h: New file.\n+\t* config/locale/c_locale_generic.h: Include clocale.\n+\t* src/locale-inst.cc: Add use_facet instantiations for __timepunct.\n+\t* src/locale.cc: Add __timepunct initializations.\n+\t* src/localename.cc (locale::_Impl::_Impl(string, size_t)): Same.\n+\t* include/Makefile.am (stamp-target): Add time_members.h.\n+\t* include/Makefile.in: Regenerate.\n+\t* acinclude.m4 (GLIBCPP_ENABLE_CLOCALE): Add CTIME_H.\n+\t* aclocal.m4: Regenerate.\n+\t* configure: Regenerate.\n+\t* testsuite/22_locale/time_put.cc: New file.\n+\t* testsuite/22_locale/time_put_members_char.cc: New file.\n+\n+\t* docs/html/22_locale/locale.html: Add note.\n+\n 2001-09-17  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* docs/html/configopts.html:  HTML to XHTML change.  Lowercase tags."}, {"sha": "f1029921bf9f9ea06340b253ec1b2c247e2634b8", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 47, "deletions": 9, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -1,6 +1,6 @@\n-# Makefile.in generated automatically by automake 1.4 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am\n \n-# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n+# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -67,6 +67,7 @@ AR = @AR@\n AS = @AS@\n ATOMICITY_INC_SRCDIR = @ATOMICITY_INC_SRCDIR@\n BASIC_FILE_H = @BASIC_FILE_H@\n+BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@\n CATALOGS = @CATALOGS@\n CATOBJEXT = @CATOBJEXT@\n CC = @CC@\n@@ -77,6 +78,7 @@ CMESSAGES_H = @CMESSAGES_H@\n CPP = @CPP@\n CSHADOW_FLAGS = @CSHADOW_FLAGS@\n CSTDIO_H = @CSTDIO_H@\n+CTIME_H = @CTIME_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n@@ -88,17 +90,17 @@ EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n GENCAT = @GENCAT@\n+GLIBC21 = @GLIBC21@\n GLIBCPP_INCLUDES = @GLIBCPP_INCLUDES@\n GLIBCPP_IS_CROSS_COMPILING = @GLIBCPP_IS_CROSS_COMPILING@\n GMOFILES = @GMOFILES@\n GMSGFMT = @GMSGFMT@\n-GT_NO = @GT_NO@\n-GT_YES = @GT_YES@\n-INCLUDE_LOCALE_H = @INCLUDE_LOCALE_H@\n INSTOBJEXT = @INSTOBJEXT@\n-INTLDEPS = @INTLDEPS@\n+INTLBISON = @INTLBISON@\n INTLLIBS = @INTLLIBS@\n INTLOBJS = @INTLOBJS@\n+INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@\n+LIBICONV = @LIBICONV@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBMATH_INCLUDES = @LIBMATH_INCLUDES@\n@@ -145,7 +147,6 @@ glibcpp_toolexecdir = @glibcpp_toolexecdir@\n glibcpp_toolexeclibdir = @glibcpp_toolexeclibdir@\n gxx_include_dir = @gxx_include_dir@\n ifGNUmake = @ifGNUmake@\n-l = @l@\n libio_la = @libio_la@\n libtool_VERSION = @libtool_VERSION@\n release_VERSION = @release_VERSION@\n@@ -172,7 +173,44 @@ MULTICLEAN = true\n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n # friends when we are called from the top level Makefile.\n-AM_MAKEFLAGS =  \t\"AR_FLAGS=$(AR_FLAGS)\" \t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \t\"CFLAGS=$(CFLAGS)\" \t\"CXXFLAGS=$(CXXFLAGS)\" \t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \t\"INSTALL=$(INSTALL)\" \t\"INSTALL_DATA=$(INSTALL_DATA)\" \t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \t\"LDFLAGS=$(LDFLAGS)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \t\"MAKE=$(MAKE)\" \t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \t\"SHELL=$(SHELL)\" \t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \t\"exec_prefix=$(exec_prefix)\" \t\"infodir=$(infodir)\" \t\"libdir=$(libdir)\" \t\"includedir=$(includedir)\" \t\"prefix=$(prefix)\" \t\"tooldir=$(tooldir)\" \t\"AR=$(AR)\" \t\"AS=$(AS)\" \t\"LD=$(LD)\" \t\"LIBCFLAGS=$(LIBCFLAGS)\" \t\"PICFLAG=$(PICFLAG)\" \t\"RANLIB=$(RANLIB)\" \t\"NM=$(NM)\" \t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \t\"DESTDIR=$(DESTDIR)\" \t\"WERROR=$(WERROR)\" \n+AM_MAKEFLAGS = \\\n+\t\"AR_FLAGS=$(AR_FLAGS)\" \\\n+\t\"CC_FOR_BUILD=$(CC_FOR_BUILD)\" \\\n+\t\"CC_FOR_TARGET=$(CC_FOR_TARGET)\" \\\n+\t\"CFLAGS=$(CFLAGS)\" \\\n+\t\"CXXFLAGS=$(CXXFLAGS)\" \\\n+\t\"CFLAGS_FOR_BUILD=$(CFLAGS_FOR_BUILD)\" \\\n+\t\"CFLAGS_FOR_TARGET=$(CFLAGS_FOR_TARGET)\" \\\n+\t\"INSTALL=$(INSTALL)\" \\\n+\t\"INSTALL_DATA=$(INSTALL_DATA)\" \\\n+\t\"INSTALL_PROGRAM=$(INSTALL_PROGRAM)\" \\\n+\t\"INSTALL_SCRIPT=$(INSTALL_SCRIPT)\" \\\n+\t\"LDFLAGS=$(LDFLAGS)\" \\\n+\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n+\t\"LIBCFLAGS_FOR_TARGET=$(LIBCFLAGS_FOR_TARGET)\" \\\n+\t\"MAKE=$(MAKE)\" \\\n+\t\"MAKEINFO=$(MAKEINFO) $(MAKEINFOFLAGS)\" \\\n+\t\"PICFLAG=$(PICFLAG)\" \\\n+\t\"PICFLAG_FOR_TARGET=$(PICFLAG_FOR_TARGET)\" \\\n+\t\"SHELL=$(SHELL)\" \\\n+\t\"RUNTESTFLAGS=$(RUNTESTFLAGS)\" \\\n+\t\"exec_prefix=$(exec_prefix)\" \\\n+\t\"infodir=$(infodir)\" \\\n+\t\"libdir=$(libdir)\" \\\n+\t\"includedir=$(includedir)\" \\\n+\t\"prefix=$(prefix)\" \\\n+\t\"tooldir=$(tooldir)\" \\\n+\t\"AR=$(AR)\" \\\n+\t\"AS=$(AS)\" \\\n+\t\"LD=$(LD)\" \\\n+\t\"LIBCFLAGS=$(LIBCFLAGS)\" \\\n+\t\"PICFLAG=$(PICFLAG)\" \\\n+\t\"RANLIB=$(RANLIB)\" \\\n+\t\"NM=$(NM)\" \\\n+\t\"NM_FOR_BUILD=$(NM_FOR_BUILD)\" \\\n+\t\"NM_FOR_TARGET=$(NM_FOR_TARGET)\" \\\n+\t\"DESTDIR=$(DESTDIR)\" \\\n+\t\"WERROR=$(WERROR)\" \n \n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n CONFIG_HEADER = config.h\n@@ -271,7 +309,7 @@ maintainer-clean-recursive:\n \tdot_seen=no; \\\n \trev=''; list='$(SUBDIRS)'; for subdir in $$list; do \\\n \t  rev=\"$$subdir $$rev\"; \\\n-\t  test \"$$subdir\" = \".\" && dot_seen=yes; \\\n+\t  test \"$$subdir\" != \".\" || dot_seen=yes; \\\n \tdone; \\\n \ttest \"$$dot_seen\" = \"no\" && rev=\". $$rev\"; \\\n \ttarget=`echo $@ | sed s/-recursive//`; \\"}, {"sha": "770aaea4856fb030d8a4d18d241358a105c0fdbe", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -1063,6 +1063,7 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n       CMESSAGES_CC=config/locale/messages_members_generic.cc\n       CMONEY_CC=config/locale/moneypunct_members_generic.cc\n       CNUMERIC_CC=config/locale/numpunct_members_generic.cc\n+      CTIME_H=config/locale/time_members_generic.h\n       ;;\n     xgnu)\n       AC_MSG_RESULT(gnu)\n@@ -1091,6 +1092,7 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n       CMESSAGES_CC=config/locale/messages_members_gnu.cc\n       CMONEY_CC=config/locale/moneypunct_members_gnu.cc\n       CNUMERIC_CC=config/locale/numpunct_members_gnu.cc\n+      CTIME_H=config/locale/time_members_gnu.h\n       ;;\n     xieee_1003.1)\n       AC_MSG_RESULT(generic)\n@@ -1106,6 +1108,7 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n       CMESSAGES_CC=config/locale/messages_members_ieee_1003.1-200x.cc\n       CMONEY_CC=config/locale/moneypunct_members_generic.cc\n       CNUMERIC_CC=config/locale/numpunct_members_generic.cc\n+      CTIME_H=config/locale/time_members_generic.h\n       ;;\n     *)\n       echo \"$enable_clocale is an unknown locale package\" 1>&2\n@@ -1122,6 +1125,7 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n   AC_SUBST(CLOCALE_H)\n   AC_SUBST(CCODECVT_H)\n   AC_SUBST(CMESSAGES_H)\n+  AC_SUBST(CTIME_H)\n   AC_LINK_FILES($CLOCALE_CC, src/c++locale.cc)\n   AC_LINK_FILES($CCOLLATE_CC, src/collate.cc)\n   AC_LINK_FILES($CMESSAGES_CC, src/messages.cc)"}, {"sha": "0c5e1ee8da99a6c4023b966565c1e6e98d0ef90f", "filename": "libstdc++-v3/aclocal.m4", "status": "modified", "additions": 358, "deletions": 187, "changes": 545, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Faclocal.m4?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -1,6 +1,6 @@\n-dnl aclocal.m4 generated automatically by aclocal 1.4\n+dnl aclocal.m4 generated automatically by aclocal 1.4-p5\n \n-dnl Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n+dnl Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n dnl This file is free software; the Free Software Foundation\n dnl gives unlimited permission to copy and/or distribute it,\n dnl with or without modifications, as long as this notice is preserved.\n@@ -1075,6 +1075,7 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n       CMESSAGES_CC=config/locale/messages_members_generic.cc\n       CMONEY_CC=config/locale/moneypunct_members_generic.cc\n       CNUMERIC_CC=config/locale/numpunct_members_generic.cc\n+      CTIME_H=config/locale/time_members_generic.h\n       ;;\n     xgnu)\n       AC_MSG_RESULT(gnu)\n@@ -1103,6 +1104,7 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n       CMESSAGES_CC=config/locale/messages_members_gnu.cc\n       CMONEY_CC=config/locale/moneypunct_members_gnu.cc\n       CNUMERIC_CC=config/locale/numpunct_members_gnu.cc\n+      CTIME_H=config/locale/time_members_gnu.h\n       ;;\n     xieee_1003.1)\n       AC_MSG_RESULT(generic)\n@@ -1118,6 +1120,7 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n       CMESSAGES_CC=config/locale/messages_members_ieee_1003.1-200x.cc\n       CMONEY_CC=config/locale/moneypunct_members_generic.cc\n       CNUMERIC_CC=config/locale/numpunct_members_generic.cc\n+      CTIME_H=config/locale/time_members_generic.h\n       ;;\n     *)\n       echo \"$enable_clocale is an unknown locale package\" 1>&2\n@@ -1134,6 +1137,7 @@ AC_DEFUN(GLIBCPP_ENABLE_CLOCALE, [\n   AC_SUBST(CLOCALE_H)\n   AC_SUBST(CCODECVT_H)\n   AC_SUBST(CMESSAGES_H)\n+  AC_SUBST(CTIME_H)\n   AC_LINK_FILES($CLOCALE_CC, src/c++locale.cc)\n   AC_LINK_FILES($CCOLLATE_CC, src/collate.cc)\n   AC_LINK_FILES($CMESSAGES_CC, src/messages.cc)\n@@ -1931,12 +1935,30 @@ AC_DEFUN(AC_LC_MESSAGES, [\n ])\n \n \n+#serial 1\n+# This test replaces the one in autoconf.\n+# Currently this macro should have the same name as the autoconf macro\n+# because gettext's gettext.m4 (distributed in the automake package)\n+# still uses it.  Otherwise, the use in gettext.m4 makes autoheader\n+# give these diagnostics:\n+#   configure.in:556: AC_TRY_COMPILE was called before AC_ISC_POSIX\n+#   configure.in:556: AC_TRY_RUN was called before AC_ISC_POSIX\n+\n+undefine([AC_ISC_POSIX])\n+\n+AC_DEFUN([AC_ISC_POSIX],\n+  [\n+    dnl This test replaces the obsolescent AC_ISC_POSIX kludge.\n+    AC_CHECK_LIB(cposix, strerror, [LIBS=\"$LIBS -lcposix\"])\n+  ]\n+)\n+\n # Add --enable-maintainer-mode option to configure.\n # From Jim Meyering\n \n # serial 1\n \n-AC_DEFUN(AM_MAINTAINER_MODE,\n+AC_DEFUN([AM_MAINTAINER_MODE],\n [AC_MSG_CHECKING([whether to enable maintainer-specific portions of Makefiles])\n   dnl maintainer-mode is disabled by default\n   AC_ARG_ENABLE(maintainer-mode,\n@@ -1953,7 +1975,7 @@ AC_DEFUN(AM_MAINTAINER_MODE,\n \n # Define a conditional.\n \n-AC_DEFUN(AM_CONDITIONAL,\n+AC_DEFUN([AM_CONDITIONAL],\n [AC_SUBST($1_TRUE)\n AC_SUBST($1_FALSE)\n if $2; then\n@@ -1972,9 +1994,37 @@ fi])\n # but which still want to provide support for the GNU gettext functionality.\n # Please note that the actual code is *not* freely available.\n \n-# serial 5\n-\n-AC_DEFUN(AM_WITH_NLS,\n+# serial 9\n+\n+dnl Usage: AM_WITH_NLS([TOOLSYMBOL], [NEEDSYMBOL], [LIBDIR]).\n+dnl If TOOLSYMBOL is specified and is 'use-libtool', then a libtool library\n+dnl    $(top_builddir)/intl/libintl.la will be created (shared and/or static,\n+dnl    depending on --{enable,disable}-{shared,static} and on the presence of\n+dnl    AM-DISABLE-SHARED). Otherwise, a static library\n+dnl    $(top_builddir)/intl/libintl.a will be created.\n+dnl If NEEDSYMBOL is specified and is 'need-ngettext', then GNU gettext\n+dnl    implementations (in libc or libintl) without the ngettext() function\n+dnl    will be ignored.\n+dnl LIBDIR is used to find the intl libraries.  If empty,\n+dnl    the value `$(top_builddir)/intl/' is used.\n+dnl\n+dnl The result of the configuration is one of three cases:\n+dnl 1) GNU gettext, as included in the intl subdirectory, will be compiled\n+dnl    and used.\n+dnl    Catalog format: GNU --> install in $(datadir)\n+dnl    Catalog extension: .mo after installation, .gmo in source tree\n+dnl 2) GNU gettext has been found in the system's C library.\n+dnl    Catalog format: GNU --> install in $(datadir)\n+dnl    Catalog extension: .mo after installation, .gmo in source tree\n+dnl 3) No internationalization, always use English msgid.\n+dnl    Catalog format: none\n+dnl    Catalog extension: none\n+dnl The use of .gmo is historical (it was needed to avoid overwriting the\n+dnl GNU format catalogs when building on a platform with an X/Open gettext),\n+dnl but we keep it in order not to force irrelevant filename changes on the\n+dnl maintainers.\n+dnl\n+AC_DEFUN([AM_WITH_NLS],\n   [AC_MSG_CHECKING([whether NLS is requested])\n     dnl Default is enabled NLS\n     AC_ARG_ENABLE(nls,\n@@ -1983,11 +2033,15 @@ AC_DEFUN(AM_WITH_NLS,\n     AC_MSG_RESULT($USE_NLS)\n     AC_SUBST(USE_NLS)\n \n+    BUILD_INCLUDED_LIBINTL=no\n     USE_INCLUDED_LIBINTL=no\n+    INTLLIBS=\n \n     dnl If we use NLS figure out what method\n     if test \"$USE_NLS\" = \"yes\"; then\n-      AC_DEFINE(ENABLE_NLS)\n+      AC_DEFINE(ENABLE_NLS, 1,\n+        [Define to 1 if translation of program messages to the user's native language\n+   is requested.])\n       AC_MSG_CHECKING([whether included gettext is requested])\n       AC_ARG_WITH(included-gettext,\n         [  --with-included-gettext use the GNU gettext library included here],\n@@ -1998,86 +2052,74 @@ AC_DEFUN(AM_WITH_NLS,\n       nls_cv_use_gnu_gettext=\"$nls_cv_force_use_gnu_gettext\"\n       if test \"$nls_cv_force_use_gnu_gettext\" != \"yes\"; then\n         dnl User does not insist on using GNU NLS library.  Figure out what\n-        dnl to use.  If gettext or catgets are available (in this order) we\n-        dnl use this.  Else we have to fall back to GNU NLS library.\n-\tdnl catgets is only used if permitted by option --with-catgets.\n-\tnls_cv_header_intl=\n-\tnls_cv_header_libgt=\n+        dnl to use.  If GNU gettext is available we use this.  Else we have\n+        dnl to fall back to GNU NLS library.\n \tCATOBJEXT=NONE\n \n+        dnl Add a version number to the cache macros.\n+        define(gt_cv_func_gnugettext_libc, [gt_cv_func_gnugettext]ifelse([$2], need-ngettext, 2, 1)[_libc])\n+        define(gt_cv_func_gnugettext_libintl, [gt_cv_func_gnugettext]ifelse([$2], need-ngettext, 2, 1)[_libintl])\n+\n \tAC_CHECK_HEADER(libintl.h,\n-\t  [AC_CACHE_CHECK([for gettext in libc], gt_cv_func_gettext_libc,\n-\t    [AC_TRY_LINK([#include <libintl.h>], [return (int) gettext (\"\")],\n-\t       gt_cv_func_gettext_libc=yes, gt_cv_func_gettext_libc=no)])\n-\n-\t   if test \"$gt_cv_func_gettext_libc\" != \"yes\"; then\n-\t     AC_CHECK_LIB(intl, bindtextdomain,\n-\t       [AC_CACHE_CHECK([for gettext in libintl],\n-\t\t gt_cv_func_gettext_libintl,\n-\t\t [AC_CHECK_LIB(intl, gettext,\n-\t\t  gt_cv_func_gettext_libintl=yes,\n-\t\t  gt_cv_func_gettext_libintl=no)],\n-\t\t gt_cv_func_gettext_libintl=no)])\n+\t  [AC_CACHE_CHECK([for GNU gettext in libc], gt_cv_func_gnugettext_libc,\n+\t    [AC_TRY_LINK([#include <libintl.h>\n+extern int _nl_msg_cat_cntr;],\n+\t       [bindtextdomain (\"\", \"\");\n+return (int) gettext (\"\")]ifelse([$2], need-ngettext, [ + (int) ngettext (\"\", \"\", 0)], [])[ + _nl_msg_cat_cntr],\n+\t       gt_cv_func_gnugettext_libc=yes,\n+\t       gt_cv_func_gnugettext_libc=no)])\n+\n+\t   if test \"$gt_cv_func_gnugettext_libc\" != \"yes\"; then\n+\t     AC_CACHE_CHECK([for GNU gettext in libintl],\n+\t       gt_cv_func_gnugettext_libintl,\n+\t       [gt_save_LIBS=\"$LIBS\"\n+\t\tLIBS=\"$LIBS -lintl $LIBICONV\"\n+\t\tAC_TRY_LINK([#include <libintl.h>\n+extern int _nl_msg_cat_cntr;],\n+\t\t  [bindtextdomain (\"\", \"\");\n+return (int) gettext (\"\")]ifelse([$2], need-ngettext, [ + (int) ngettext (\"\", \"\", 0)], [])[ + _nl_msg_cat_cntr],\n+\t\t  gt_cv_func_gnugettext_libintl=yes,\n+\t\t  gt_cv_func_gnugettext_libintl=no)\n+\t\tLIBS=\"$gt_save_LIBS\"])\n \t   fi\n \n-\t   if test \"$gt_cv_func_gettext_libc\" = \"yes\" \\\n-\t      || test \"$gt_cv_func_gettext_libintl\" = \"yes\"; then\n-\t      AC_DEFINE(HAVE_GETTEXT)\n-\t      AM_PATH_PROG_WITH_TEST(MSGFMT, msgfmt,\n-\t\t[test -z \"`$ac_dir/$ac_word -h 2>&1 | grep 'dv '`\"], no)dnl\n-\t      if test \"$MSGFMT\" != \"no\"; then\n-\t\tAC_CHECK_FUNCS(dcgettext)\n-\t\tAC_PATH_PROG(GMSGFMT, gmsgfmt, $MSGFMT)\n-\t\tAM_PATH_PROG_WITH_TEST(XGETTEXT, xgettext,\n-\t\t  [test -z \"`$ac_dir/$ac_word -h 2>&1 | grep '(HELP)'`\"], :)\n-\t\tAC_TRY_LINK(, [extern int _nl_msg_cat_cntr;\n-\t\t\t       return _nl_msg_cat_cntr],\n-\t\t  [CATOBJEXT=.gmo\n-\t\t   DATADIRNAME=share],\n-\t\t  [CATOBJEXT=.mo\n-\t\t   DATADIRNAME=lib])\n-\t\tINSTOBJEXT=.mo\n-\t      fi\n-\t    fi\n+\t   dnl If an already present or preinstalled GNU gettext() is found,\n+\t   dnl use it.  But if this macro is used in GNU gettext, and GNU\n+\t   dnl gettext is already preinstalled in libintl, we update this\n+\t   dnl libintl.  (Cf. the install rule in intl/Makefile.in.)\n+\t   if test \"$gt_cv_func_gnugettext_libc\" = \"yes\" \\\n+\t      || { test \"$gt_cv_func_gnugettext_libintl\" = \"yes\" \\\n+\t\t   && test \"$PACKAGE\" != gettext; }; then\n+\t     AC_DEFINE(HAVE_GETTEXT, 1,\n+               [Define if the GNU gettext() function is already present or preinstalled.])\n+\n+\t     if test \"$gt_cv_func_gnugettext_libintl\" = \"yes\"; then\n+\t       dnl If iconv() is in a separate libiconv library, then anyone\n+\t       dnl linking with libintl{.a,.so} also needs to link with\n+\t       dnl libiconv.\n+\t       INTLLIBS=\"-lintl $LIBICONV\"\n+\t     fi\n+\n+\t     gt_save_LIBS=\"$LIBS\"\n+\t     LIBS=\"$LIBS $INTLLIBS\"\n+\t     AC_CHECK_FUNCS(dcgettext)\n+\t     LIBS=\"$gt_save_LIBS\"\n+\n+\t     AM_PATH_PROG_WITH_TEST(MSGFMT, msgfmt,\n+\t       [test -z \"`$ac_dir/$ac_word -h 2>&1 | grep 'dv '`\"], no)dnl\n+\t     if test \"$MSGFMT\" != \"no\"; then\n+\t       AC_PATH_PROG(GMSGFMT, gmsgfmt, $MSGFMT)\n+\t     fi\n+\n+\t     AM_PATH_PROG_WITH_TEST(XGETTEXT, xgettext,\n+\t       [test -z \"`$ac_dir/$ac_word -h 2>&1 | grep '(HELP)'`\"], :)\n+\n+\t     CATOBJEXT=.gmo\n+\t   fi\n \t])\n \n         if test \"$CATOBJEXT\" = \"NONE\"; then\n-\t  AC_MSG_CHECKING([whether catgets can be used])\n-\t  AC_ARG_WITH(catgets,\n-\t    [  --with-catgets          use catgets functions if available],\n-\t    nls_cv_use_catgets=$withval, nls_cv_use_catgets=no)\n-\t  AC_MSG_RESULT($nls_cv_use_catgets)\n-\n-\t  if test \"$nls_cv_use_catgets\" = \"yes\"; then\n-\t    dnl No gettext in C library.  Try catgets next.\n-\t    AC_CHECK_LIB(i, main)\n-\t    AC_CHECK_FUNC(catgets,\n-\t      [AC_DEFINE(HAVE_CATGETS)\n-\t       INTLOBJS=\"\\$(CATOBJS)\"\n-\t       AC_PATH_PROG(GENCAT, gencat, no)dnl\n-\t       if test \"$GENCAT\" != \"no\"; then\n-\t\t AC_PATH_PROG(GMSGFMT, gmsgfmt, no)\n-\t\t if test \"$GMSGFMT\" = \"no\"; then\n-\t\t   AM_PATH_PROG_WITH_TEST(GMSGFMT, msgfmt,\n-\t\t    [test -z \"`$ac_dir/$ac_word -h 2>&1 | grep 'dv '`\"], no)\n-\t\t fi\n-\t\t AM_PATH_PROG_WITH_TEST(XGETTEXT, xgettext,\n-\t\t   [test -z \"`$ac_dir/$ac_word -h 2>&1 | grep '(HELP)'`\"], :)\n-\t\t USE_INCLUDED_LIBINTL=yes\n-\t\t CATOBJEXT=.cat\n-\t\t INSTOBJEXT=.cat\n-\t\t DATADIRNAME=lib\n-\t\t INTLDEPS='$(top_builddir)/intl/libintl.a'\n-\t\t INTLLIBS=$INTLDEPS\n-\t\t LIBS=`echo $LIBS | sed -e 's/-lintl//'`\n-\t\t nls_cv_header_intl=intl/libintl.h\n-\t\t nls_cv_header_libgt=intl/libgettext.h\n-\t       fi])\n-\t  fi\n-        fi\n-\n-        if test \"$CATOBJEXT\" = \"NONE\"; then\n-\t  dnl Neither gettext nor catgets in included in the C library.\n+\t  dnl GNU gettext is not found in the C library.\n \t  dnl Fall back on GNU gettext library.\n \t  nls_cv_use_gnu_gettext=yes\n         fi\n@@ -2092,15 +2134,11 @@ AC_DEFUN(AM_WITH_NLS,\n         AM_PATH_PROG_WITH_TEST(XGETTEXT, xgettext,\n \t  [test -z \"`$ac_dir/$ac_word -h 2>&1 | grep '(HELP)'`\"], :)\n         AC_SUBST(MSGFMT)\n+\tBUILD_INCLUDED_LIBINTL=yes\n \tUSE_INCLUDED_LIBINTL=yes\n         CATOBJEXT=.gmo\n-        INSTOBJEXT=.mo\n-        DATADIRNAME=share\n-\tINTLDEPS='$(top_builddir)/intl/libintl.a'\n-\tINTLLIBS=$INTLDEPS\n-\tLIBS=`echo $LIBS | sed -e 's/-lintl//'`\n-        nls_cv_header_intl=intl/libintl.h\n-        nls_cv_header_libgt=intl/libgettext.h\n+\tINTLLIBS=\"ifelse([$3],[],\\$(top_builddir)/intl,[$3])/libintl.ifelse([$1], use-libtool, [l], [])a $LIBICONV\"\n+\tLIBS=`echo \" $LIBS \" | sed -e 's/ -lintl / /' -e 's/^ //' -e 's/ $//'`\n       fi\n \n       dnl Test whether we really found GNU xgettext.\n@@ -2116,25 +2154,73 @@ AC_DEFUN(AM_WITH_NLS,\n \tfi\n       fi\n \n-      # We need to process the po/ directory.\n+      dnl We need to process the po/ directory.\n       POSUB=po\n-    else\n-      DATADIRNAME=share\n-      nls_cv_header_intl=intl/libintl.h\n-      nls_cv_header_libgt=intl/libgettext.h\n     fi\n-    AC_LINK_FILES($nls_cv_header_libgt, $nls_cv_header_intl)\n     AC_OUTPUT_COMMANDS(\n-     [case \"$CONFIG_FILES\" in *po/Makefile.in*)\n-        sed -e \"/POTFILES =/r po/POTFILES\" po/Makefile.in > po/Makefile\n-      esac])\n+     [for ac_file in $CONFIG_FILES; do\n+        # Support \"outfile[:infile[:infile...]]\"\n+        case \"$ac_file\" in\n+          *:*) ac_file=`echo \"$ac_file\"|sed 's%:.*%%'` ;;\n+        esac\n+        # PO directories have a Makefile.in generated from Makefile.in.in.\n+        case \"$ac_file\" in */Makefile.in)\n+          # Adjust a relative srcdir.\n+          ac_dir=`echo \"$ac_file\"|sed 's%/[^/][^/]*$%%'`\n+          ac_dir_suffix=\"/`echo \"$ac_dir\"|sed 's%^\\./%%'`\"\n+          ac_dots=`echo \"$ac_dir_suffix\"|sed 's%/[^/]*%../%g'`\n+          case \"$ac_given_srcdir\" in\n+            .)  top_srcdir=`echo $ac_dots|sed 's%/$%%'` ;;\n+            /*) top_srcdir=\"$ac_given_srcdir\" ;;\n+            *)  top_srcdir=\"$ac_dots$ac_given_srcdir\" ;;\n+          esac\n+          if test -f \"$ac_given_srcdir/$ac_dir/POTFILES.in\"; then\n+            rm -f \"$ac_dir/POTFILES\"\n+            echo creating \"$ac_dir/POTFILES\"\n+            sed -e \"/^#/d\" -e \"/^[ \t]*\\$/d\" -e \"s,.*,     $top_srcdir/& \\\\\\\\,\" -e \"\\$s/\\(.*\\) \\\\\\\\/\\1/\" < \"$ac_given_srcdir/$ac_dir/POTFILES.in\" > \"$ac_dir/POTFILES\"\n+            echo creating \"$ac_dir/Makefile\"\n+            sed -e \"/POTFILES =/r $ac_dir/POTFILES\" \"$ac_dir/Makefile.in\" > \"$ac_dir/Makefile\"\n+          fi\n+          ;;\n+        esac\n+      done])\n \n \n-    # If this is used in GNU gettext we have to set USE_NLS to `yes'\n-    # because some of the sources are only built for this goal.\n+    dnl If this is used in GNU gettext we have to set BUILD_INCLUDED_LIBINTL\n+    dnl to 'yes' because some of the testsuite requires it.\n     if test \"$PACKAGE\" = gettext; then\n-      USE_NLS=yes\n-      USE_INCLUDED_LIBINTL=yes\n+      BUILD_INCLUDED_LIBINTL=yes\n+    fi\n+\n+    dnl intl/plural.c is generated from intl/plural.y. It requires bison,\n+    dnl because plural.y uses bison specific features. It requires at least\n+    dnl bison-1.26 because earlier versions generate a plural.c that doesn't\n+    dnl compile.\n+    dnl bison is only needed for the maintainer (who touches plural.y). But in\n+    dnl order to avoid separate Makefiles or --enable-maintainer-mode, we put\n+    dnl the rule in general Makefile. Now, some people carelessly touch the\n+    dnl files or have a broken \"make\" program, hence the plural.c rule will\n+    dnl sometimes fire. To avoid an error, defines BISON to \":\" if it is not\n+    dnl present or too old.\n+    AC_CHECK_PROGS([INTLBISON], [bison])\n+    if test -z \"$INTLBISON\"; then\n+      ac_verc_fail=yes\n+    else\n+      dnl Found it, now check the version.\n+      AC_MSG_CHECKING([version of bison])\n+changequote(<<,>>)dnl\n+      ac_prog_version=`$INTLBISON --version 2>&1 | sed -n 's/^.*GNU Bison .* \\([0-9]*\\.[0-9.]*\\).*$/\\1/p'`\n+      case $ac_prog_version in\n+        '') ac_prog_version=\"v. ?.??, bad\"; ac_verc_fail=yes;;\n+        1.2[6-9]* | 1.[3-9][0-9]* | [2-9].*)\n+changequote([,])dnl\n+           ac_prog_version=\"$ac_prog_version, ok\"; ac_verc_fail=no;;\n+        *) ac_prog_version=\"$ac_prog_version, bad\"; ac_verc_fail=yes;;\n+      esac\n+      AC_MSG_RESULT([$ac_prog_version])\n+    fi\n+    if test $ac_verc_fail = yes; then\n+      INTLBISON=:\n     fi\n \n     dnl These rules are solely for the distribution goal.  While doing this\n@@ -2146,22 +2232,38 @@ AC_DEFUN(AM_WITH_NLS,\n     done\n \n     dnl Make all variables we use known to autoconf.\n+    AC_SUBST(BUILD_INCLUDED_LIBINTL)\n     AC_SUBST(USE_INCLUDED_LIBINTL)\n     AC_SUBST(CATALOGS)\n     AC_SUBST(CATOBJEXT)\n-    AC_SUBST(DATADIRNAME)\n     AC_SUBST(GMOFILES)\n-    AC_SUBST(INSTOBJEXT)\n-    AC_SUBST(INTLDEPS)\n     AC_SUBST(INTLLIBS)\n     AC_SUBST(INTLOBJS)\n     AC_SUBST(POFILES)\n     AC_SUBST(POSUB)\n+\n+    dnl For backward compatibility. Some configure.ins may be using this.\n+    nls_cv_header_intl=\n+    nls_cv_header_libgt=\n+\n+    dnl For backward compatibility. Some Makefiles may be using this.\n+    DATADIRNAME=share\n+    AC_SUBST(DATADIRNAME)\n+\n+    dnl For backward compatibility. Some Makefiles may be using this.\n+    INSTOBJEXT=.mo\n+    AC_SUBST(INSTOBJEXT)\n+\n+    dnl For backward compatibility. Some Makefiles may be using this.\n+    GENCAT=gencat\n+    AC_SUBST(GENCAT)\n   ])\n \n-AC_DEFUN(AM_GNU_GETTEXT,\n+dnl Usage: Just like AM_WITH_NLS, which see.\n+AC_DEFUN([AM_GNU_GETTEXT],\n   [AC_REQUIRE([AC_PROG_MAKE_SET])dnl\n    AC_REQUIRE([AC_PROG_CC])dnl\n+   AC_REQUIRE([AC_CANONICAL_HOST])dnl\n    AC_REQUIRE([AC_PROG_RANLIB])dnl\n    AC_REQUIRE([AC_ISC_POSIX])dnl\n    AC_REQUIRE([AC_HEADER_STDC])dnl\n@@ -2171,32 +2273,40 @@ AC_DEFUN(AM_GNU_GETTEXT,\n    AC_REQUIRE([AC_TYPE_SIZE_T])dnl\n    AC_REQUIRE([AC_FUNC_ALLOCA])dnl\n    AC_REQUIRE([AC_FUNC_MMAP])dnl\n+   AC_REQUIRE([jm_GLIBC21])dnl\n \n-   AC_CHECK_HEADERS([argz.h limits.h locale.h nl_types.h malloc.h string.h \\\n-unistd.h sys/param.h])\n-   AC_CHECK_FUNCS([getcwd munmap putenv setenv setlocale strchr strcasecmp \\\n-strdup __argz_count __argz_stringify __argz_next])\n-\n-   if test \"${ac_cv_func_stpcpy+set}\" != \"set\"; then\n-     AC_CHECK_FUNCS(stpcpy)\n-   fi\n-   if test \"${ac_cv_func_stpcpy}\" = \"yes\"; then\n-     AC_DEFINE(HAVE_STPCPY)\n-   fi\n+   AC_CHECK_HEADERS([argz.h limits.h locale.h nl_types.h malloc.h stddef.h \\\n+stdlib.h string.h unistd.h sys/param.h])\n+   AC_CHECK_FUNCS([feof_unlocked fgets_unlocked getcwd getegid geteuid \\\n+getgid getuid mempcpy munmap putenv setenv setlocale stpcpy strchr strcasecmp \\\n+strdup strtoul tsearch __argz_count __argz_stringify __argz_next])\n \n+   AM_ICONV\n+   AM_LANGINFO_CODESET\n    AM_LC_MESSAGES\n-   AM_WITH_NLS\n+   AM_WITH_NLS([$1],[$2],[$3])\n \n    if test \"x$CATOBJEXT\" != \"x\"; then\n      if test \"x$ALL_LINGUAS\" = \"x\"; then\n        LINGUAS=\n      else\n        AC_MSG_CHECKING(for catalogs to be installed)\n        NEW_LINGUAS=\n-       for lang in ${LINGUAS=$ALL_LINGUAS}; do\n-         case \"$ALL_LINGUAS\" in\n-          *$lang*) NEW_LINGUAS=\"$NEW_LINGUAS $lang\" ;;\n-         esac\n+       for presentlang in $ALL_LINGUAS; do\n+         useit=no\n+         for desiredlang in ${LINGUAS-$ALL_LINGUAS}; do\n+           # Use the presentlang catalog if desiredlang is\n+           #   a. equal to presentlang, or\n+           #   b. a variant of presentlang (because in this case,\n+           #      presentlang can be used as a fallback for messages\n+           #      which are not translated in the desiredlang catalog).\n+           case \"$desiredlang\" in\n+             \"$presentlang\"*) useit=yes;;\n+           esac\n+         done\n+         if test $useit = yes; then\n+           NEW_LINGUAS=\"$NEW_LINGUAS $presentlang\"\n+         fi\n        done\n        LINGUAS=$NEW_LINGUAS\n        AC_MSG_RESULT($LINGUAS)\n@@ -2208,47 +2318,8 @@ strdup __argz_count __argz_stringify __argz_next])\n      fi\n    fi\n \n-   dnl The reference to <locale.h> in the installed <libintl.h> file\n-   dnl must be resolved because we cannot expect the users of this\n-   dnl to define HAVE_LOCALE_H.\n-   if test $ac_cv_header_locale_h = yes; then\n-     INCLUDE_LOCALE_H=\"#include <locale.h>\"\n-   else\n-     INCLUDE_LOCALE_H=\"\\\n-/* The system does not provide the header <locale.h>.  Take care yourself.  */\"\n-   fi\n-   AC_SUBST(INCLUDE_LOCALE_H)\n-\n-   dnl Determine which catalog format we have (if any is needed)\n-   dnl For now we know about two different formats:\n-   dnl   Linux libc-5 and the normal X/Open format\n-   test -d intl || mkdir intl\n-   if test \"$CATOBJEXT\" = \".cat\"; then\n-     AC_CHECK_HEADER(linux/version.h, msgformat=linux, msgformat=xopen)\n-\n-     dnl Transform the SED scripts while copying because some dumb SEDs\n-     dnl cannot handle comments.\n-     sed -e '/^#/d' $srcdir/intl/$msgformat-msg.sed > intl/po2msg.sed\n-   fi\n-   dnl po2tbl.sed is always needed.\n-   sed -e '/^#.*[^\\\\]$/d' -e '/^#$/d' \\\n-     $srcdir/intl/po2tbl.sed.in > intl/po2tbl.sed\n-\n-   dnl In the intl/Makefile.in we have a special dependency which makes\n-   dnl only sense for gettext.  We comment this out for non-gettext\n-   dnl packages.\n-   if test \"$PACKAGE\" = \"gettext\"; then\n-     GT_NO=\"#NO#\"\n-     GT_YES=\n-   else\n-     GT_NO=\n-     GT_YES=\"#YES#\"\n-   fi\n-   AC_SUBST(GT_NO)\n-   AC_SUBST(GT_YES)\n-\n    dnl If the AC_CONFIG_AUX_DIR macro for autoconf is used we possibly\n-   dnl find the mkinstalldirs script in another subdir but ($top_srcdir).\n+   dnl find the mkinstalldirs script in another subdir but $(top_srcdir).\n    dnl Try to locate is.\n    MKINSTALLDIRS=\n    if test -n \"$ac_aux_dir\"; then\n@@ -2259,25 +2330,9 @@ strdup __argz_count __argz_stringify __argz_next])\n    fi\n    AC_SUBST(MKINSTALLDIRS)\n \n-   dnl *** For now the libtool support in intl/Makefile is not for real.\n-   l=\n-   AC_SUBST(l)\n-\n-   dnl Generate list of files to be processed by xgettext which will\n-   dnl be included in po/Makefile.\n-   test -d po || mkdir po\n-   if test \"x$srcdir\" != \"x.\"; then\n-     if test \"x`echo $srcdir | sed 's@/.*@@'`\" = \"x\"; then\n-       posrcprefix=\"$srcdir/\"\n-     else\n-       posrcprefix=\"../$srcdir/\"\n-     fi\n-   else\n-     posrcprefix=\"../\"\n-   fi\n-   rm -f po/POTFILES\n-   sed -e \"/^#/d\" -e \"/^\\$/d\" -e \"s,.*,\t$posrcprefix& \\\\\\\\,\" -e \"\\$s/\\(.*\\) \\\\\\\\/\\1/\" \\\n-\t< $srcdir/po/POTFILES.in > po/POTFILES\n+   dnl Enable libtool support if the surrounding package wishes it.\n+   INTL_LIBTOOL_SUFFIX_PREFIX=ifelse([$1], use-libtool, [l], [])\n+   AC_SUBST(INTL_LIBTOOL_SUFFIX_PREFIX)\n   ])\n \n # Search path for a program which passes the given test.\n@@ -2292,7 +2347,7 @@ strdup __argz_count __argz_stringify __argz_next])\n \n dnl AM_PATH_PROG_WITH_TEST(VARIABLE, PROG-TO-CHECK-FOR,\n dnl   TEST-PERFORMED-ON-FOUND_PROGRAM [, VALUE-IF-NOT-FOUND [, PATH]])\n-AC_DEFUN(AM_PATH_PROG_WITH_TEST,\n+AC_DEFUN([AM_PATH_PROG_WITH_TEST],\n [# Extract the first word of \"$2\", so it can be a program name with args.\n set dummy $2; ac_word=[$]2\n AC_MSG_CHECKING([for $ac_word])\n@@ -2328,6 +2383,121 @@ fi\n AC_SUBST($1)dnl\n ])\n \n+#serial 2\n+\n+# Test for the GNU C Library, version 2.1 or newer.\n+# From Bruno Haible.\n+\n+AC_DEFUN([jm_GLIBC21],\n+  [\n+    AC_CACHE_CHECK(whether we are using the GNU C Library 2.1 or newer,\n+      ac_cv_gnu_library_2_1,\n+      [AC_EGREP_CPP([Lucky GNU user],\n+\t[\n+#include <features.h>\n+#ifdef __GNU_LIBRARY__\n+ #if (__GLIBC__ == 2 && __GLIBC_MINOR__ >= 1) || (__GLIBC__ > 2)\n+  Lucky GNU user\n+ #endif\n+#endif\n+\t],\n+\tac_cv_gnu_library_2_1=yes,\n+\tac_cv_gnu_library_2_1=no)\n+      ]\n+    )\n+    AC_SUBST(GLIBC21)\n+    GLIBC21=\"$ac_cv_gnu_library_2_1\"\n+  ]\n+)\n+\n+#serial AM2\n+\n+dnl From Bruno Haible.\n+\n+AC_DEFUN([AM_ICONV],\n+[\n+  dnl Some systems have iconv in libc, some have it in libiconv (OSF/1 and\n+  dnl those with the standalone portable GNU libiconv installed).\n+\n+  AC_ARG_WITH([libiconv-prefix],\n+[  --with-libiconv-prefix=DIR  search for libiconv in DIR/include and DIR/lib], [\n+    for dir in `echo \"$withval\" | tr : ' '`; do\n+      if test -d $dir/include; then CPPFLAGS=\"$CPPFLAGS -I$dir/include\"; fi\n+      if test -d $dir/lib; then LDFLAGS=\"$LDFLAGS -L$dir/lib\"; fi\n+    done\n+   ])\n+\n+  AC_CACHE_CHECK(for iconv, am_cv_func_iconv, [\n+    am_cv_func_iconv=\"no, consider installing GNU libiconv\"\n+    am_cv_lib_iconv=no\n+    AC_TRY_LINK([#include <stdlib.h>\n+#include <iconv.h>],\n+      [iconv_t cd = iconv_open(\"\",\"\");\n+       iconv(cd,NULL,NULL,NULL,NULL);\n+       iconv_close(cd);],\n+      am_cv_func_iconv=yes)\n+    if test \"$am_cv_func_iconv\" != yes; then\n+      am_save_LIBS=\"$LIBS\"\n+      LIBS=\"$LIBS -liconv\"\n+      AC_TRY_LINK([#include <stdlib.h>\n+#include <iconv.h>],\n+        [iconv_t cd = iconv_open(\"\",\"\");\n+         iconv(cd,NULL,NULL,NULL,NULL);\n+         iconv_close(cd);],\n+        am_cv_lib_iconv=yes\n+        am_cv_func_iconv=yes)\n+      LIBS=\"$am_save_LIBS\"\n+    fi\n+  ])\n+  if test \"$am_cv_func_iconv\" = yes; then\n+    AC_DEFINE(HAVE_ICONV, 1, [Define if you have the iconv() function.])\n+    AC_MSG_CHECKING([for iconv declaration])\n+    AC_CACHE_VAL(am_cv_proto_iconv, [\n+      AC_TRY_COMPILE([\n+#include <stdlib.h>\n+#include <iconv.h>\n+extern\n+#ifdef __cplusplus\n+\"C\"\n+#endif\n+#if defined(__STDC__) || defined(__cplusplus)\n+size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);\n+#else\n+size_t iconv();\n+#endif\n+], [], am_cv_proto_iconv_arg1=\"\", am_cv_proto_iconv_arg1=\"const\")\n+      am_cv_proto_iconv=\"extern size_t iconv (iconv_t cd, $am_cv_proto_iconv_arg1 char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);\"])\n+    am_cv_proto_iconv=`echo \"[$]am_cv_proto_iconv\" | tr -s ' ' | sed -e 's/( /(/'`\n+    AC_MSG_RESULT([$]{ac_t:-\n+         }[$]am_cv_proto_iconv)\n+    AC_DEFINE_UNQUOTED(ICONV_CONST, $am_cv_proto_iconv_arg1,\n+      [Define as const if the declaration of iconv() needs const.])\n+  fi\n+  LIBICONV=\n+  if test \"$am_cv_lib_iconv\" = yes; then\n+    LIBICONV=\"-liconv\"\n+  fi\n+  AC_SUBST(LIBICONV)\n+])\n+\n+#serial AM1\n+\n+dnl From Bruno Haible.\n+\n+AC_DEFUN([AM_LANGINFO_CODESET],\n+[\n+  AC_CACHE_CHECK([for nl_langinfo and CODESET], am_cv_langinfo_codeset,\n+    [AC_TRY_LINK([#include <langinfo.h>],\n+      [char* cs = nl_langinfo(CODESET);],\n+      am_cv_langinfo_codeset=yes,\n+      am_cv_langinfo_codeset=no)\n+    ])\n+  if test $am_cv_langinfo_codeset = yes; then\n+    AC_DEFINE(HAVE_LANGINFO_CODESET, 1,\n+      [Define if you have <langinfo.h> and nl_langinfo(CODESET).])\n+  fi\n+])\n+\n # Check whether LC_MESSAGES is available in <locale.h>.\n # Ulrich Drepper <drepper@cygnus.com>, 1995.\n #\n@@ -2336,15 +2506,16 @@ AC_SUBST($1)dnl\n # but which still want to provide support for the GNU gettext functionality.\n # Please note that the actual code is *not* freely available.\n \n-# serial 1\n+# serial 2\n \n-AC_DEFUN(AM_LC_MESSAGES,\n+AC_DEFUN([AM_LC_MESSAGES],\n   [if test $ac_cv_header_locale_h = yes; then\n     AC_CACHE_CHECK([for LC_MESSAGES], am_cv_val_LC_MESSAGES,\n       [AC_TRY_LINK([#include <locale.h>], [return LC_MESSAGES],\n        am_cv_val_LC_MESSAGES=yes, am_cv_val_LC_MESSAGES=no)])\n     if test $am_cv_val_LC_MESSAGES = yes; then\n-      AC_DEFINE(HAVE_LC_MESSAGES)\n+      AC_DEFINE(HAVE_LC_MESSAGES, 1,\n+        [Define if your <locale.h> file defines LC_MESSAGES.])\n     fi\n   fi])\n \n@@ -2357,7 +2528,7 @@ AC_DEFUN(AM_LC_MESSAGES,\n dnl Usage:\n dnl AM_INIT_AUTOMAKE(package,version, [no-define])\n \n-AC_DEFUN(AM_INIT_AUTOMAKE,\n+AC_DEFUN([AM_INIT_AUTOMAKE],\n [AC_REQUIRE([AC_PROG_INSTALL])\n PACKAGE=[$1]\n AC_SUBST(PACKAGE)\n@@ -2385,7 +2556,7 @@ AC_REQUIRE([AC_PROG_MAKE_SET])])\n # Check to make sure that the build environment is sane.\n #\n \n-AC_DEFUN(AM_SANITY_CHECK,\n+AC_DEFUN([AM_SANITY_CHECK],\n [AC_MSG_CHECKING([whether build environment is sane])\n # Just in case\n sleep 1\n@@ -2426,7 +2597,7 @@ AC_MSG_RESULT(yes)])\n \n dnl AM_MISSING_PROG(NAME, PROGRAM, DIRECTORY)\n dnl The program must properly implement --version.\n-AC_DEFUN(AM_MISSING_PROG,\n+AC_DEFUN([AM_MISSING_PROG],\n [AC_MSG_CHECKING(for working $2)\n # Run test in a subshell; some versions of sh will print an error if\n # an executable is not found, even if stderr is redirected.\n@@ -2442,7 +2613,7 @@ AC_SUBST($1)])\n \n # Like AC_CONFIG_HEADER, but automatically create stamp file.\n \n-AC_DEFUN(AM_CONFIG_HEADER,\n+AC_DEFUN([AM_CONFIG_HEADER],\n [AC_PREREQ([2.12])\n AC_CONFIG_HEADER([$1])\n dnl When config.status generates a header, we must update the stamp-h file."}, {"sha": "f69f318f7f3dae4acffc6b5742d964995ecb3e89", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -3,9 +3,6 @@\n /* Define if you have a working `mmap' system call.  */\n #undef HAVE_MMAP\n \n-/* Define if you need to in order for stat and other things to work.  */\n-#undef _POSIX_SOURCE\n-\n // Define if GCC supports weak symbols\n #undef _GLIBCPP_SUPPORTS_WEAK\n \n@@ -693,6 +690,9 @@\n /* Define if you have the <nan.h> header file.  */\n #undef HAVE_NAN_H\n \n+/* Define if you have the <stdlib.h> header file.  */\n+#undef HAVE_STDLIB_H\n+\n /* Define if you have the <sys/isa_defs.h> header file.  */\n #undef HAVE_SYS_ISA_DEFS_H\n \n@@ -702,6 +702,9 @@\n /* Define if you have the <sys/resource.h> header file.  */\n #undef HAVE_SYS_RESOURCE_H\n \n+/* Define if you have the <sys/stat.h> header file.  */\n+#undef HAVE_SYS_STAT_H\n+\n /* Define if you have the <sys/types.h> header file.  */\n #undef HAVE_SYS_TYPES_H\n "}, {"sha": "0fc9a250c02ae78a798d38b9468fc62576dd1210", "filename": "libstdc++-v3/config/locale/c_locale_generic.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fc_locale_generic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fc_locale_generic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fc_locale_generic.h?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -33,6 +33,8 @@\n \n // Written by Benjamin Kosnik <bkoz@redhat.com>\n \n+#include <clocale>\n+\n namespace std\n {\n   typedef int*\t\t\t__c_locale;"}, {"sha": "325ffaaa00080ca1a12c384dfd3319d76091bc0b", "filename": "libstdc++-v3/config/locale/time_members_generic.h", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Ftime_members_generic.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Ftime_members_generic.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Ftime_members_generic.h?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -0,0 +1,45 @@\n+// std::time_get, std::time_put implementation, generic version -*- C++ -*-\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 22.2.5.1.2 - time_get virtual functions\n+// ISO C++ 14882: 22.2.5.3.2 - time_put virtual functions\n+//\n+\n+// Written by Benjamin Kosnik <bkoz@redhat.com>\n+\n+  template<typename _CharT>\n+    void\n+    __timepunct<_CharT>::_M_put_helper(char* __s, size_t __maxlen, \n+\t\t\t\t       const char* __format, \n+\t\t\t\t       const tm* __tm) const\n+    {\n+      setlocale(LC_ALL, _M_name_timepunct);\n+      strftime(__s, __maxlen, __format, __tm); \n+    }"}, {"sha": "0b9a3a6543a50dac595b1f6c0cbca574863082b1", "filename": "libstdc++-v3/config/locale/time_members_gnu.h", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Ftime_members_gnu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Ftime_members_gnu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Ftime_members_gnu.h?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -0,0 +1,53 @@\n+// std::time_get, std::time_put implementation, GNU version -*- C++ -*-\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// As a special exception, you may use this file as part of a free software\n+// library without restriction.  Specifically, if other files instantiate\n+// templates or use macros or inline functions from this file, or you compile\n+// this file and link it with other files to produce an executable, this\n+// file does not by itself cause the resulting executable to be covered by\n+// the GNU General Public License.  This exception does not however\n+// invalidate any other reasons why the executable file might be covered by\n+// the GNU General Public License.\n+\n+//\n+// ISO C++ 14882: 22.2.5.1.2 - time_get virtual functions\n+// ISO C++ 14882: 22.2.5.3.2 - time_put virtual functions\n+//\n+\n+// Written by Benjamin Kosnik <bkoz@redhat.com>\n+\n+  template<typename _CharT>\n+    void\n+    __timepunct<_CharT>::_M_put_helper(char* __s, size_t __maxlen, \n+\t\t\t\t       const char* __format, \n+\t\t\t\t       const tm* __tm) const\n+    {\n+#if 0\n+      // Requires glibc 2.3\n+      if (_M_c_locale_timepunct)\n+\t__strftime_l(__s, __maxlen, _M_c_locale_timepunct, __format, __tm);\n+      else\n+\tstrftime(__s, __maxlen, __format, __tm);\n+#else\n+      setlocale(LC_ALL, _M_name_timepunct);\n+      strftime(__s, __maxlen, __format, __tm);\n+#endif\n+    }"}, {"sha": "b957d292ac40d419a2ef78035b697920ef4ec1fd", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 939, "deletions": 899, "changes": 1838, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978"}, {"sha": "71ec4073589476fe2207d15a65072eebddd8191d", "filename": "libstdc++-v3/docs/html/22_locale/locale.html", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Flocale.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Flocale.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F22_locale%2Flocale.html?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -105,8 +105,11 @@ <h2>\n \tuse \"de\" information? What is the rule for locales composed of\n \tjust an ISO language code (say, \"de\") and locales with both an\n \tISO language code and ISO country code (say, \"de_DE\").\n-</ul>\n \n+\t<li> what should non-required facet instantiations do?  If the\n+\tgeneric implemenation is provided, then how to end-users\n+\tprovide specializations?\n+</ul>\n \n <p>\n <h2>\n@@ -139,5 +142,3 @@ <h2>\n System Interface Definitions, Issue 6 (IEEE Std. 1003.1-200x)\n The Open Group/The Institute of Electrical and Electronics Engineers, Inc.\n http://www.opennc.org/austin/docreg.html\n-\n-"}, {"sha": "0750611557985c87943efc70b56fe34148e35bed", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -21,7 +21,7 @@\n ## Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n ## USA.\n \n-## $Id: Makefile.am,v 1.9 2001/08/29 00:32:49 ljrittle Exp $\n+## $Id: Makefile.am,v 1.10 2001/09/10 18:13:16 bkoz Exp $\n \n AUTOMAKE_OPTIONS = 1.3 gnits\n MAINT_CHARSET = latin1\n@@ -337,6 +337,7 @@ stamp-target: ${target_headers} ${target_builddir}\n \t  @LN_S@ ${glibcpp_srcdir}/@CSTDIO_H@ c++io.h ;\\\n \t  @LN_S@ ${glibcpp_srcdir}/@CLOCALE_H@ c++locale.h ;\\\n \t  @LN_S@ ${glibcpp_srcdir}/@CMESSAGES_H@ messages_members.h ;\\\n+\t  @LN_S@ ${glibcpp_srcdir}/@CTIME_H@ time_members.h ;\\\n \t  @LN_S@ ${glibcpp_srcdir}/@CCODECVT_H@ codecvt_specializations.h ;\\\n \t  echo `date` > stamp-target; \\\n \tfi"}, {"sha": "3c2f35f8e88710f74bfeb8aae264c02fc8ae27c1", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 230, "deletions": 15, "changes": 245, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -1,6 +1,6 @@\n-# Makefile.in generated automatically by automake 1.4 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am\n \n-# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n+# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -67,6 +67,7 @@ AR = @AR@\n AS = @AS@\n ATOMICITY_INC_SRCDIR = @ATOMICITY_INC_SRCDIR@\n BASIC_FILE_H = @BASIC_FILE_H@\n+BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@\n CATALOGS = @CATALOGS@\n CATOBJEXT = @CATOBJEXT@\n CC = @CC@\n@@ -77,6 +78,7 @@ CMESSAGES_H = @CMESSAGES_H@\n CPP = @CPP@\n CSHADOW_FLAGS = @CSHADOW_FLAGS@\n CSTDIO_H = @CSTDIO_H@\n+CTIME_H = @CTIME_H@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n DATADIRNAME = @DATADIRNAME@\n@@ -87,17 +89,17 @@ EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n GENCAT = @GENCAT@\n+GLIBC21 = @GLIBC21@\n GLIBCPP_INCLUDES = @GLIBCPP_INCLUDES@\n GLIBCPP_IS_CROSS_COMPILING = @GLIBCPP_IS_CROSS_COMPILING@\n GMOFILES = @GMOFILES@\n GMSGFMT = @GMSGFMT@\n-GT_NO = @GT_NO@\n-GT_YES = @GT_YES@\n-INCLUDE_LOCALE_H = @INCLUDE_LOCALE_H@\n INSTOBJEXT = @INSTOBJEXT@\n-INTLDEPS = @INTLDEPS@\n+INTLBISON = @INTLBISON@\n INTLLIBS = @INTLLIBS@\n INTLOBJS = @INTLOBJS@\n+INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@\n+LIBICONV = @LIBICONV@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBMATH_INCLUDES = @LIBMATH_INCLUDES@\n@@ -140,7 +142,6 @@ glibcpp_prefixdir = @glibcpp_prefixdir@\n glibcpp_toolexecdir = @glibcpp_toolexecdir@\n glibcpp_toolexeclibdir = @glibcpp_toolexeclibdir@\n ifGNUmake = @ifGNUmake@\n-l = @l@\n libio_la = @libio_la@\n libtool_VERSION = @libtool_VERSION@\n release_VERSION = @release_VERSION@\n@@ -158,42 +159,255 @@ glibcpp_builddir = @glibcpp_builddir@\n \n bits_srcdir = ${glibcpp_srcdir}/include/bits\n bits_builddir = ./bits\n-bits_headers =  \t${bits_srcdir}/basic_file.h \t${bits_srcdir}/basic_ios.h \t${bits_srcdir}/basic_ios.tcc \t${bits_srcdir}/basic_string.h \t${bits_srcdir}/basic_string.tcc \t${bits_srcdir}/boost_concept_check.h \t${bits_srcdir}/char_traits.h \t${bits_srcdir}/codecvt.h \t${bits_srcdir}/concept_check.h \t${bits_srcdir}/cpp_type_traits.h \t${bits_srcdir}/fpos.h \t${bits_srcdir}/fstream.tcc \t${bits_srcdir}/functexcept.h \t${bits_srcdir}/generic_shadow.h \t${bits_srcdir}/gslice.h \t${bits_srcdir}/gslice_array.h \t${bits_srcdir}/indirect_array.h \t${bits_srcdir}/ios_base.h \t${bits_srcdir}/istream.tcc \t${bits_srcdir}/locale_facets.h \t${bits_srcdir}/locale_facets.tcc \t${bits_srcdir}/localefwd.h \t${bits_srcdir}/mask_array.h \t${bits_srcdir}/ostream.tcc \t${bits_srcdir}/pthread_allocimpl.h \t${bits_srcdir}/stream_iterator.h \t${bits_srcdir}/streambuf_iterator.h \t${bits_srcdir}/slice.h \t${bits_srcdir}/slice_array.h \t${bits_srcdir}/sstream.tcc \t${bits_srcdir}/std_algorithm.h \t${bits_srcdir}/std_bitset.h \t${bits_srcdir}/std_complex.h \t${bits_srcdir}/std_deque.h \t${bits_srcdir}/std_fstream.h \t${bits_srcdir}/std_functional.h \t${bits_srcdir}/std_iomanip.h \t${bits_srcdir}/std_ios.h \t${bits_srcdir}/std_iosfwd.h \t${bits_srcdir}/std_iostream.h \t${bits_srcdir}/std_istream.h \t${bits_srcdir}/std_iterator.h \t${bits_srcdir}/std_limits.h \t${bits_srcdir}/std_list.h \t${bits_srcdir}/std_locale.h \t${bits_srcdir}/std_map.h \t${bits_srcdir}/std_memory.h \t${bits_srcdir}/std_numeric.h \t${bits_srcdir}/std_ostream.h \t${bits_srcdir}/std_queue.h \t${bits_srcdir}/std_set.h \t${bits_srcdir}/std_sstream.h \t${bits_srcdir}/std_stack.h \t${bits_srcdir}/std_stdexcept.h \t${bits_srcdir}/std_streambuf.h \t${bits_srcdir}/std_string.h \t${bits_srcdir}/std_utility.h \t${bits_srcdir}/std_valarray.h \t${bits_srcdir}/std_vector.h \t${bits_srcdir}/stl_algo.h \t${bits_srcdir}/stl_algobase.h \t${bits_srcdir}/stl_alloc.h \t${bits_srcdir}/stl_bvector.h \t${bits_srcdir}/stl_construct.h \t${bits_srcdir}/stl_deque.h \t${bits_srcdir}/stl_function.h \t${bits_srcdir}/stl_heap.h \t${bits_srcdir}/stl_iterator.h \t${bits_srcdir}/stl_iterator_base_funcs.h \t${bits_srcdir}/stl_iterator_base_types.h \t${bits_srcdir}/stl_list.h \t${bits_srcdir}/stl_map.h \t${bits_srcdir}/stl_multimap.h \t${bits_srcdir}/stl_multiset.h \t${bits_srcdir}/stl_numeric.h \t${bits_srcdir}/stl_pair.h \t${bits_srcdir}/stl_pthread_alloc.h \t${bits_srcdir}/stl_queue.h \t${bits_srcdir}/stl_raw_storage_iter.h \t${bits_srcdir}/stl_relops.h \t${bits_srcdir}/stl_set.h \t${bits_srcdir}/stl_stack.h \t${bits_srcdir}/stl_tempbuf.h \t${bits_srcdir}/stl_threads.h \t${bits_srcdir}/stl_tree.h \t${bits_srcdir}/stl_uninitialized.h \t${bits_srcdir}/stl_vector.h \t${bits_srcdir}/streambuf.tcc \t${bits_srcdir}/stringfwd.h \t${bits_srcdir}/type_traits.h \t${bits_srcdir}/valarray_array.h \t${bits_srcdir}/valarray_array.tcc \t${bits_srcdir}/valarray_meta.h\n+bits_headers = \\\n+\t${bits_srcdir}/basic_file.h \\\n+\t${bits_srcdir}/basic_ios.h \\\n+\t${bits_srcdir}/basic_ios.tcc \\\n+\t${bits_srcdir}/basic_string.h \\\n+\t${bits_srcdir}/basic_string.tcc \\\n+\t${bits_srcdir}/boost_concept_check.h \\\n+\t${bits_srcdir}/char_traits.h \\\n+\t${bits_srcdir}/codecvt.h \\\n+\t${bits_srcdir}/concept_check.h \\\n+\t${bits_srcdir}/cpp_type_traits.h \\\n+\t${bits_srcdir}/fpos.h \\\n+\t${bits_srcdir}/fstream.tcc \\\n+\t${bits_srcdir}/functexcept.h \\\n+\t${bits_srcdir}/generic_shadow.h \\\n+\t${bits_srcdir}/gslice.h \\\n+\t${bits_srcdir}/gslice_array.h \\\n+\t${bits_srcdir}/indirect_array.h \\\n+\t${bits_srcdir}/ios_base.h \\\n+\t${bits_srcdir}/istream.tcc \\\n+\t${bits_srcdir}/locale_facets.h \\\n+\t${bits_srcdir}/locale_facets.tcc \\\n+\t${bits_srcdir}/localefwd.h \\\n+\t${bits_srcdir}/mask_array.h \\\n+\t${bits_srcdir}/ostream.tcc \\\n+\t${bits_srcdir}/pthread_allocimpl.h \\\n+\t${bits_srcdir}/stream_iterator.h \\\n+\t${bits_srcdir}/streambuf_iterator.h \\\n+\t${bits_srcdir}/slice.h \\\n+\t${bits_srcdir}/slice_array.h \\\n+\t${bits_srcdir}/sstream.tcc \\\n+\t${bits_srcdir}/std_algorithm.h \\\n+\t${bits_srcdir}/std_bitset.h \\\n+\t${bits_srcdir}/std_complex.h \\\n+\t${bits_srcdir}/std_deque.h \\\n+\t${bits_srcdir}/std_fstream.h \\\n+\t${bits_srcdir}/std_functional.h \\\n+\t${bits_srcdir}/std_iomanip.h \\\n+\t${bits_srcdir}/std_ios.h \\\n+\t${bits_srcdir}/std_iosfwd.h \\\n+\t${bits_srcdir}/std_iostream.h \\\n+\t${bits_srcdir}/std_istream.h \\\n+\t${bits_srcdir}/std_iterator.h \\\n+\t${bits_srcdir}/std_limits.h \\\n+\t${bits_srcdir}/std_list.h \\\n+\t${bits_srcdir}/std_locale.h \\\n+\t${bits_srcdir}/std_map.h \\\n+\t${bits_srcdir}/std_memory.h \\\n+\t${bits_srcdir}/std_numeric.h \\\n+\t${bits_srcdir}/std_ostream.h \\\n+\t${bits_srcdir}/std_queue.h \\\n+\t${bits_srcdir}/std_set.h \\\n+\t${bits_srcdir}/std_sstream.h \\\n+\t${bits_srcdir}/std_stack.h \\\n+\t${bits_srcdir}/std_stdexcept.h \\\n+\t${bits_srcdir}/std_streambuf.h \\\n+\t${bits_srcdir}/std_string.h \\\n+\t${bits_srcdir}/std_utility.h \\\n+\t${bits_srcdir}/std_valarray.h \\\n+\t${bits_srcdir}/std_vector.h \\\n+\t${bits_srcdir}/stl_algo.h \\\n+\t${bits_srcdir}/stl_algobase.h \\\n+\t${bits_srcdir}/stl_alloc.h \\\n+\t${bits_srcdir}/stl_bvector.h \\\n+\t${bits_srcdir}/stl_construct.h \\\n+\t${bits_srcdir}/stl_deque.h \\\n+\t${bits_srcdir}/stl_function.h \\\n+\t${bits_srcdir}/stl_heap.h \\\n+\t${bits_srcdir}/stl_iterator.h \\\n+\t${bits_srcdir}/stl_iterator_base_funcs.h \\\n+\t${bits_srcdir}/stl_iterator_base_types.h \\\n+\t${bits_srcdir}/stl_list.h \\\n+\t${bits_srcdir}/stl_map.h \\\n+\t${bits_srcdir}/stl_multimap.h \\\n+\t${bits_srcdir}/stl_multiset.h \\\n+\t${bits_srcdir}/stl_numeric.h \\\n+\t${bits_srcdir}/stl_pair.h \\\n+\t${bits_srcdir}/stl_pthread_alloc.h \\\n+\t${bits_srcdir}/stl_queue.h \\\n+\t${bits_srcdir}/stl_raw_storage_iter.h \\\n+\t${bits_srcdir}/stl_relops.h \\\n+\t${bits_srcdir}/stl_set.h \\\n+\t${bits_srcdir}/stl_stack.h \\\n+\t${bits_srcdir}/stl_tempbuf.h \\\n+\t${bits_srcdir}/stl_threads.h \\\n+\t${bits_srcdir}/stl_tree.h \\\n+\t${bits_srcdir}/stl_uninitialized.h \\\n+\t${bits_srcdir}/stl_vector.h \\\n+\t${bits_srcdir}/streambuf.tcc \\\n+\t${bits_srcdir}/stringfwd.h \\\n+\t${bits_srcdir}/type_traits.h \\\n+\t${bits_srcdir}/valarray_array.h \\\n+\t${bits_srcdir}/valarray_array.tcc \\\n+\t${bits_srcdir}/valarray_meta.h\n \n \n backward_srcdir = ${glibcpp_srcdir}/include/backward\n backward_builddir = ./backward\n-backward_headers =  \t${backward_srcdir}/complex.h \t${backward_srcdir}/iomanip.h \t${backward_srcdir}/istream.h \t${backward_srcdir}/ostream.h \t${backward_srcdir}/stream.h \t${backward_srcdir}/streambuf.h \t${backward_srcdir}/algo.h \t${backward_srcdir}/algobase.h \t${backward_srcdir}/alloc.h \t${backward_srcdir}/bvector.h \t${backward_srcdir}/defalloc.h \t${backward_srcdir}/deque.h \t${backward_srcdir}/function.h \t${backward_srcdir}/hash_map.h \t${backward_srcdir}/hash_set.h \t${backward_srcdir}/hashtable.h \t${backward_srcdir}/heap.h \t${backward_srcdir}/iostream.h \t${backward_srcdir}/iterator.h \t${backward_srcdir}/list.h \t${backward_srcdir}/map.h \t${backward_srcdir}/multimap.h \t${backward_srcdir}/new.h \t${backward_srcdir}/multiset.h \t${backward_srcdir}/pair.h \t${backward_srcdir}/queue.h \t${backward_srcdir}/rope.h \t${backward_srcdir}/set.h \t${backward_srcdir}/slist.h \t${backward_srcdir}/stack.h \t${backward_srcdir}/tempbuf.h \t${backward_srcdir}/tree.h \t${backward_srcdir}/vector.h \t${backward_srcdir}/fstream.h \t${backward_srcdir}/strstream.h \t${backward_srcdir}/strstream \t${backward_srcdir}/backward_warning.h\n+backward_headers = \\\n+\t${backward_srcdir}/complex.h \\\n+\t${backward_srcdir}/iomanip.h \\\n+\t${backward_srcdir}/istream.h \\\n+\t${backward_srcdir}/ostream.h \\\n+\t${backward_srcdir}/stream.h \\\n+\t${backward_srcdir}/streambuf.h \\\n+\t${backward_srcdir}/algo.h \\\n+\t${backward_srcdir}/algobase.h \\\n+\t${backward_srcdir}/alloc.h \\\n+\t${backward_srcdir}/bvector.h \\\n+\t${backward_srcdir}/defalloc.h \\\n+\t${backward_srcdir}/deque.h \\\n+\t${backward_srcdir}/function.h \\\n+\t${backward_srcdir}/hash_map.h \\\n+\t${backward_srcdir}/hash_set.h \\\n+\t${backward_srcdir}/hashtable.h \\\n+\t${backward_srcdir}/heap.h \\\n+\t${backward_srcdir}/iostream.h \\\n+\t${backward_srcdir}/iterator.h \\\n+\t${backward_srcdir}/list.h \\\n+\t${backward_srcdir}/map.h \\\n+\t${backward_srcdir}/multimap.h \\\n+\t${backward_srcdir}/new.h \\\n+\t${backward_srcdir}/multiset.h \\\n+\t${backward_srcdir}/pair.h \\\n+\t${backward_srcdir}/queue.h \\\n+\t${backward_srcdir}/rope.h \\\n+\t${backward_srcdir}/set.h \\\n+\t${backward_srcdir}/slist.h \\\n+\t${backward_srcdir}/stack.h \\\n+\t${backward_srcdir}/tempbuf.h \\\n+\t${backward_srcdir}/tree.h \\\n+\t${backward_srcdir}/vector.h \\\n+\t${backward_srcdir}/fstream.h \\\n+\t${backward_srcdir}/strstream.h \\\n+\t${backward_srcdir}/strstream \\\n+\t${backward_srcdir}/backward_warning.h\n \n \n ext_srcdir = ${glibcpp_srcdir}/include/ext\n ext_builddir = ./ext\n-ext_headers =  \t${ext_srcdir}/rope \t${ext_srcdir}/ropeimpl.h \t${ext_srcdir}/stl_rope.h \t${ext_srcdir}/slist \t${ext_srcdir}/hash_map \t${ext_srcdir}/hash_set \t${ext_srcdir}/stl_hashtable.h \t${ext_srcdir}/stl_hash_fun.h\n+ext_headers = \\\n+\t${ext_srcdir}/rope \\\n+\t${ext_srcdir}/ropeimpl.h \\\n+\t${ext_srcdir}/stl_rope.h \\\n+\t${ext_srcdir}/slist \\\n+\t${ext_srcdir}/hash_map \\\n+\t${ext_srcdir}/hash_set \\\n+\t${ext_srcdir}/stl_hashtable.h \\\n+\t${ext_srcdir}/stl_hash_fun.h\n \n \n # This is the common subset of files that all three \"C\" header models use.\n c_base_srcdir = @C_INCLUDE_DIR@/bits\n c_base_builddir = ./bits\n-c_base_headers =  \t${c_base_srcdir}/std_cassert.h \t${c_base_srcdir}/std_cctype.h \t${c_base_srcdir}/std_cerrno.h \t${c_base_srcdir}/std_cfloat.h \t${c_base_srcdir}/std_climits.h \t${c_base_srcdir}/std_clocale.h \t${c_base_srcdir}/std_cmath.h \t${c_base_srcdir}/std_csetjmp.h \t${c_base_srcdir}/std_csignal.h \t${c_base_srcdir}/std_cstdarg.h \t${c_base_srcdir}/std_cstddef.h \t${c_base_srcdir}/std_cstdio.h \t${c_base_srcdir}/std_cstdlib.h \t${c_base_srcdir}/std_cstring.h \t${c_base_srcdir}/std_ctime.h \t${c_base_srcdir}/std_cwchar.h \t${c_base_srcdir}/std_cwctype.h \t${c_base_srcdir}/cmath.tcc \n+c_base_headers = \\\n+\t${c_base_srcdir}/std_cassert.h \\\n+\t${c_base_srcdir}/std_cctype.h \\\n+\t${c_base_srcdir}/std_cerrno.h \\\n+\t${c_base_srcdir}/std_cfloat.h \\\n+\t${c_base_srcdir}/std_climits.h \\\n+\t${c_base_srcdir}/std_clocale.h \\\n+\t${c_base_srcdir}/std_cmath.h \\\n+\t${c_base_srcdir}/std_csetjmp.h \\\n+\t${c_base_srcdir}/std_csignal.h \\\n+\t${c_base_srcdir}/std_cstdarg.h \\\n+\t${c_base_srcdir}/std_cstddef.h \\\n+\t${c_base_srcdir}/std_cstdio.h \\\n+\t${c_base_srcdir}/std_cstdlib.h \\\n+\t${c_base_srcdir}/std_cstring.h \\\n+\t${c_base_srcdir}/std_ctime.h \\\n+\t${c_base_srcdir}/std_cwchar.h \\\n+\t${c_base_srcdir}/std_cwctype.h \\\n+\t${c_base_srcdir}/cmath.tcc \n \n \n std_srcdir = ${glibcpp_srcdir}/include/std\n std_builddir = ./\n-std_headers =  \t${std_srcdir}/algorithm \t${std_srcdir}/bitset \t${std_srcdir}/complex \t${std_srcdir}/deque \t${std_srcdir}/fstream \t${std_srcdir}/functional \t${std_srcdir}/iomanip \t${std_srcdir}/ios \t${std_srcdir}/iosfwd \t${std_srcdir}/iostream \t${std_srcdir}/istream \t${std_srcdir}/iterator \t${std_srcdir}/limits \t${std_srcdir}/list \t${std_srcdir}/locale \t${std_srcdir}/map \t${std_srcdir}/memory \t${std_srcdir}/numeric \t${std_srcdir}/ostream \t${std_srcdir}/queue \t${std_srcdir}/set \t${std_srcdir}/sstream \t${std_srcdir}/stack \t${std_srcdir}/stdexcept \t${std_srcdir}/streambuf \t${std_srcdir}/string \t${std_srcdir}/utility \t${std_srcdir}/valarray \t${std_srcdir}/vector \t${std_srcdir}/cassert \t${std_srcdir}/cctype \t${std_srcdir}/cerrno \t${std_srcdir}/cfloat \t${std_srcdir}/climits \t${std_srcdir}/clocale \t${std_srcdir}/ciso646 \t${std_srcdir}/cmath \t${std_srcdir}/csetjmp \t${std_srcdir}/csignal \t${std_srcdir}/cstdarg \t${std_srcdir}/cstddef \t${std_srcdir}/cstdio \t${std_srcdir}/cstdlib \t${std_srcdir}/cstring \t${std_srcdir}/ctime \t${std_srcdir}/cwchar \t${std_srcdir}/cwctype\n+std_headers = \\\n+\t${std_srcdir}/algorithm \\\n+\t${std_srcdir}/bitset \\\n+\t${std_srcdir}/complex \\\n+\t${std_srcdir}/deque \\\n+\t${std_srcdir}/fstream \\\n+\t${std_srcdir}/functional \\\n+\t${std_srcdir}/iomanip \\\n+\t${std_srcdir}/ios \\\n+\t${std_srcdir}/iosfwd \\\n+\t${std_srcdir}/iostream \\\n+\t${std_srcdir}/istream \\\n+\t${std_srcdir}/iterator \\\n+\t${std_srcdir}/limits \\\n+\t${std_srcdir}/list \\\n+\t${std_srcdir}/locale \\\n+\t${std_srcdir}/map \\\n+\t${std_srcdir}/memory \\\n+\t${std_srcdir}/numeric \\\n+\t${std_srcdir}/ostream \\\n+\t${std_srcdir}/queue \\\n+\t${std_srcdir}/set \\\n+\t${std_srcdir}/sstream \\\n+\t${std_srcdir}/stack \\\n+\t${std_srcdir}/stdexcept \\\n+\t${std_srcdir}/streambuf \\\n+\t${std_srcdir}/string \\\n+\t${std_srcdir}/utility \\\n+\t${std_srcdir}/valarray \\\n+\t${std_srcdir}/vector \\\n+\t${std_srcdir}/cassert \\\n+\t${std_srcdir}/cctype \\\n+\t${std_srcdir}/cerrno \\\n+\t${std_srcdir}/cfloat \\\n+\t${std_srcdir}/climits \\\n+\t${std_srcdir}/clocale \\\n+\t${std_srcdir}/ciso646 \\\n+\t${std_srcdir}/cmath \\\n+\t${std_srcdir}/csetjmp \\\n+\t${std_srcdir}/csignal \\\n+\t${std_srcdir}/cstdarg \\\n+\t${std_srcdir}/cstddef \\\n+\t${std_srcdir}/cstdio \\\n+\t${std_srcdir}/cstdlib \\\n+\t${std_srcdir}/cstring \\\n+\t${std_srcdir}/ctime \\\n+\t${std_srcdir}/cwchar \\\n+\t${std_srcdir}/cwctype\n \n \n target_srcdir = ${glibcpp_srcdir}/@OS_INC_SRCDIR@\n target_builddir = ./${target_alias}/bits\n-target_headers =  \t${target_srcdir}/ctype_base.h \t${target_srcdir}/ctype_inline.h \t${target_srcdir}/ctype_noninline.h \t${target_srcdir}/os_defines.h \t${glibcpp_srcdir}/@ATOMICITY_INC_SRCDIR@/atomicity.h \t${glibcpp_srcdir}/@LIMITS_INC_SRCDIR@/limits.h\n+target_headers = \\\n+\t${target_srcdir}/ctype_base.h \\\n+\t${target_srcdir}/ctype_inline.h \\\n+\t${target_srcdir}/ctype_noninline.h \\\n+\t${target_srcdir}/os_defines.h \\\n+\t${glibcpp_srcdir}/@ATOMICITY_INC_SRCDIR@/atomicity.h \\\n+\t${glibcpp_srcdir}/@LIMITS_INC_SRCDIR@/limits.h\n \n \n thread_builddir = ./${target_alias}/bits\n-thread_headers =  \t${thread_builddir}/gthr.h \t${thread_builddir}/gthr-single.h \t${thread_builddir}/gthr-default.h\n+thread_headers = \\\n+\t${thread_builddir}/gthr.h \\\n+\t${thread_builddir}/gthr-single.h \\\n+\t${thread_builddir}/gthr-default.h\n \n \n # List of all timestamp files.  By keeping only one copy of this list, both\n # CLEANFILES and all-local are kept up-to-date.\n-allstamps = stamp-std stamp-bits stamp-c_base stamp-backward stamp-ext \tstamp-target stamp-thread \n+allstamps = stamp-std stamp-bits stamp-c_base stamp-backward stamp-ext \\\n+\tstamp-target stamp-thread \n \n \n # Target includes for threads\n@@ -363,6 +577,7 @@ stamp-target: ${target_headers} ${target_builddir}\n \t  @LN_S@ ${glibcpp_srcdir}/@CSTDIO_H@ c++io.h ;\\\n \t  @LN_S@ ${glibcpp_srcdir}/@CLOCALE_H@ c++locale.h ;\\\n \t  @LN_S@ ${glibcpp_srcdir}/@CMESSAGES_H@ messages_members.h ;\\\n+\t  @LN_S@ ${glibcpp_srcdir}/@CTIME_H@ time_members.h ;\\\n \t  @LN_S@ ${glibcpp_srcdir}/@CCODECVT_H@ codecvt_specializations.h ;\\\n \t  echo `date` > stamp-target; \\\n \tfi"}, {"sha": "b5851bff6170e816c99df3bfd553ed8ba5e007bb", "filename": "libstdc++-v3/include/bits/locale_facets.h", "status": "modified", "additions": 100, "deletions": 46, "changes": 146, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.h?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -1037,7 +1037,6 @@ namespace std\n     class collate_byname : public collate<_CharT>\n     {\n     public:\n-      // Types:\n       typedef _CharT               char_type;\n       typedef basic_string<_CharT> string_type;\n \n@@ -1058,6 +1057,57 @@ namespace std\n     enum dateorder { no_order, dmy, mdy, ymd, ydm };\n   };\n \n+  template<typename _CharT>\n+    class __timepunct : public locale::facet\n+    {\n+    public:\n+      // Types:\n+      typedef _CharT          \t\tchar_type;\n+      typedef basic_string<_CharT> \tstring_type;\n+\n+      static locale::id id;\n+\n+    protected:\n+      __c_locale\t\t\t_M_c_locale_timepunct;\n+#if 1\n+      // Only needed if glibc < 2.3\n+      const char*\t\t\t_M_name_timepunct;\n+#endif\n+\n+    public:\n+      explicit \n+      __timepunct(size_t __refs = 0) \n+      : locale::facet(__refs), _M_c_locale_timepunct(NULL), \n+      _M_name_timepunct(\"C\")\n+      { \n+\t//\t_M_initialize_numpunct(); \n+      }\n+\n+      explicit \n+      __timepunct(__c_locale __cloc, const char* __s, size_t __refs = 0) \n+      : locale::facet(__refs)\n+      {\n+\t_M_name_timepunct = __s;\n+\tif (__cloc)\n+\t  _M_c_locale_timepunct = _S_clone_c_locale(__cloc); \n+      }\n+\n+      void\n+      _M_put_helper(char* __s, size_t __maxlen, const char* __format, \n+\t\t    const tm* __tm) const;\n+\n+    protected:\n+      virtual \n+      ~__timepunct()\n+      {\n+\tif (_M_c_locale_timepunct)\n+\t  _S_destroy_c_locale(_M_c_locale_timepunct); \n+      }\n+    };\n+\n+  template<typename _CharT>\n+    locale::id __timepunct<_CharT>::id;\n+\n   template<typename _CharT, typename _InIter>\n     class time_get : public locale::facet, public time_base\n     {\n@@ -1068,6 +1118,11 @@ namespace std\n \n       static locale::id id;\n \n+    protected:\n+      mutable basic_string<_CharT>* \t_M_daynames;\n+      mutable basic_string<_CharT>* \t_M_monthnames;\n+\n+    public:\n       explicit \n       time_get(size_t __refs = 0) \n       : locale::facet (__refs), _M_daynames(0), _M_monthnames(0) { }\n@@ -1077,29 +1132,29 @@ namespace std\n       { return do_date_order(); }\n \n       iter_type \n-      get_time(iter_type __s, iter_type __end, ios_base& __f, \n+      get_time(iter_type __s, iter_type __end, ios_base& __io, \n \t       ios_base::iostate& __err, tm* __t)  const\n-      { return do_get_time(__s, __end, __f, __err, __t); }\n+      { return do_get_time(__s, __end, __io, __err, __t); }\n \n       iter_type \n-      get_date(iter_type __s, iter_type __end, ios_base& __f,\n+      get_date(iter_type __s, iter_type __end, ios_base& __io,\n \t       ios_base::iostate& __err, tm* __t)  const\n-      { return do_get_date(__s, __end, __f, __err, __t); }\n+      { return do_get_date(__s, __end, __io, __err, __t); }\n \n       iter_type \n-      get_weekday(iter_type __s, iter_type __end, ios_base& __f,\n+      get_weekday(iter_type __s, iter_type __end, ios_base& __io,\n \t\t  ios_base::iostate& __err, tm* __t) const\n-      { return do_get_weekday(__s,__end,__f,__err,__t); }\n+      { return this->do_get_weekday(__s, __end, __io, __err, __t); }\n \n       iter_type \n-      get_monthname(iter_type __s, iter_type __end, ios_base& __f, \n+      get_monthname(iter_type __s, iter_type __end, ios_base& __io, \n \t\t    ios_base::iostate& __err, tm* __t) const\n-      { return do_get_monthname(__s,__end,__f,__err,__t); }\n+      { return this->do_get_monthname(__s, __end, __io, __err, __t); }\n \n       iter_type \n-      get_year(iter_type __s, iter_type __end, ios_base& __f,\n+      get_year(iter_type __s, iter_type __end, ios_base& __io,\n \t       ios_base::iostate& __err, tm* __t) const\n-      { return do_get_year(__s,__end,__f,__err,__t); }\n+      { return this->do_get_year(__s, __end, __io, __err, __t); }\n \n     protected:\n       virtual \n@@ -1135,9 +1190,6 @@ namespace std\n       do_get_year(iter_type __s, iter_type /*__end*/, ios_base&,\n \t\t   ios_base::iostate& /*__err*/, tm* /*__t*/) const\n       { return __s; }\n-\n-      mutable basic_string<_CharT>* _M_daynames;\n-      mutable basic_string<_CharT>* _M_monthnames;\n     };\n \n   template<typename _CharT, typename _InIter>\n@@ -1162,34 +1214,33 @@ namespace std\n     class time_put : public locale::facet, public time_base\n     {\n     public:\n+      // Types:\n       typedef _CharT     char_type;\n       typedef _OutIter   iter_type;\n \n       static locale::id id;\n \n       explicit \n-      time_put(size_t __refs = 0) : locale::facet (__refs) { }\n+      time_put(size_t __refs = 0) \n+      : locale::facet(__refs) { }\n \n-      // NB: this is a nonvirtual, calls do_put in a loop.\n       iter_type \n-      put(iter_type __s, ios_base& /*__f*/, char_type /*__fill*/,\n-          const tm* /*__tmb*/, const _CharT* /*__pattern*/,\n-          const _CharT* /*__pat_end*/) const\n-      { return __s; }\n+      put(iter_type __s, ios_base& __io, char_type __fill, const tm* __tm, \n+\t  const _CharT* __beg, const _CharT* __end) const;\n \n       iter_type \n-      put(iter_type __s, ios_base& __f, char_type __fill,\n-\t  const tm* __tmb, char __format, char __modifier = 0) const\n-      { return do_put(__s, __f, __fill, __tmb, __format, __modifier); }\n+      put(iter_type __s, ios_base& __io, char_type __fill,\n+\t  const tm* __tm, char __format, char __mod = 0) const\n+      { return this->do_put(__s, __io, __fill, __tm, __format, __mod); }\n \n     protected:\n       virtual \n-      ~time_put() { }\n+      ~time_put()\n+      { }\n \n       virtual iter_type \n-      do_put(iter_type __s, ios_base&, char_type, const tm* /*__t*/, \n-\t     char /*__format*/, char /*__mod*/) const\n-      { return __s; }\n+      do_put(iter_type __s, ios_base& __io, char_type __fill, const tm* __tm, \n+\t     char __format, char __mod) const;\n     };\n \n   template<typename _CharT, typename _OutIter>\n@@ -1199,18 +1250,23 @@ namespace std\n     class time_put_byname : public time_put<_CharT, _OutIter>\n     {\n     public:\n+      // Types:\n       typedef _CharT     char_type;\n       typedef _OutIter   iter_type;\n \n       explicit \n-      time_put_byname(const char*, size_t __refs = 0) \n-      : time_put<_CharT, _OutIter> (__refs) { }\n+      time_put_byname(const char* /*__s*/, size_t __refs = 0) \n+      : time_put<_CharT, _OutIter>(__refs) \n+      { };\n \n     protected:\n       virtual \n       ~time_put_byname() { }\n     };\n \n+  // Include host and configuration specific messages virtual functions.\n+  #include <bits/time_members.h>\n+\n \n   struct money_base\n   {\n@@ -1409,28 +1465,26 @@ namespace std\n       money_get(size_t __refs = 0) : locale::facet(__refs) { }\n \n       iter_type \n-      get(iter_type __s, iter_type __end, bool __intl,\n-\t  ios_base& __f, ios_base::iostate& __err, long double& __units) const\n-      { return this->do_get(__s, __end, __intl, __f, __err, __units); }\n+      get(iter_type __s, iter_type __end, bool __intl, ios_base& __io, \n+\t  ios_base::iostate& __err, long double& __units) const\n+      { return this->do_get(__s, __end, __intl, __io, __err, __units); }\n \n       iter_type \n-      get(iter_type __s, iter_type __end, bool __intl, ios_base& __f, \n+      get(iter_type __s, iter_type __end, bool __intl, ios_base& __io, \n \t  ios_base::iostate& __err, string_type& __digits) const\n-      { return this->do_get(__s, __end, __intl, __f, __err, __digits); }\n+      { return this->do_get(__s, __end, __intl, __io, __err, __digits); }\n \n     protected:\n       virtual \n       ~money_get() { }\n \n       virtual iter_type \n-      do_get(iter_type __s, iter_type __end, bool __intl,\n-             ios_base& __io, ios_base::iostate& __err,\n-             long double& __units) const;\n+      do_get(iter_type __s, iter_type __end, bool __intl, ios_base& __io, \n+\t     ios_base::iostate& __err, long double& __units) const;\n \n       virtual iter_type \n-      do_get(iter_type __s, iter_type __end, bool __intl,\n-             ios_base& __io, ios_base::iostate& __err,\n-             string_type& __digits) const;\n+      do_get(iter_type __s, iter_type __end, bool __intl, ios_base& __io, \n+\t     ios_base::iostate& __err, string_type& __digits) const;\n     };\n \n   template<typename _CharT, typename _InIter>\n@@ -1450,14 +1504,14 @@ namespace std\n       money_put(size_t __refs = 0) : locale::facet(__refs) { }\n \n       iter_type \n-      put(iter_type __s, bool __intl, ios_base& __f,\n+      put(iter_type __s, bool __intl, ios_base& __io,\n \t  char_type __fill, long double __units) const\n-      { return this->do_put(__s, __intl, __f, __fill, __units); }\n+      { return this->do_put(__s, __intl, __io, __fill, __units); }\n \n       iter_type \n-      put(iter_type __s, bool __intl, ios_base& __f,\n+      put(iter_type __s, bool __intl, ios_base& __io,\n \t  char_type __fill, const string_type& __digits) const\n-      { return this->do_put(__s, __intl, __f, __fill, __digits); }\n+      { return this->do_put(__s, __intl, __io, __fill, __digits); }\n \n     protected:\n       virtual \n@@ -1493,10 +1547,10 @@ namespace std\n       // Underlying \"C\" library locale information saved from\n       // initialization, needed by messages_byname as well.\n       __c_locale\t\t\t_M_c_locale_messages;\n-      #if 1\n+#if 1\n       // Only needed if glibc < 2.3\n       const char*\t\t\t_M_name_messages;\n-      #endif\n+#endif\n \n     public:\n       static locale::id id;"}, {"sha": "0f2d6b63b97042f10bc2c4cb0501da8745ba69b5", "filename": "libstdc++-v3/include/bits/locale_facets.tcc", "status": "modified", "additions": 78, "deletions": 1, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets.tcc?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -166,7 +166,7 @@ namespace std\n     void\n     _Format_cache<_CharT>::_M_populate(ios_base& __io)\n     {\n-      locale __loc = __io.getloc ();\n+      locale __loc = __io.getloc();\n       numpunct<_CharT> const& __np = use_facet<numpunct<_CharT> >(__loc);\n       _M_truename = __np.truename();\n       _M_falsename = __np.falsename();\n@@ -1511,6 +1511,83 @@ namespace std\n       }\n     }\n \n+  template<typename _CharT, typename _OutIter>\n+    time_put<_CharT, _OutIter>::iter_type \n+    time_put<_CharT, _OutIter>::put(iter_type __s, ios_base& __io, \n+\t\t\t\t    char_type, const tm* __tm, \n+\t\t\t\t    const _CharT* __beg, \n+\t\t\t\t    const _CharT* __end) const\n+    {\n+      locale __loc = __io.getloc();\n+      ctype<_CharT> const& __ctype = use_facet<ctype<_CharT> >(__loc);\n+      while (__beg != __end)\n+\t{\n+\t  char __c = __ctype.narrow(*__beg, 0);\n+\t  ++__beg;\n+\t  if (__c == '%')\n+\t    {\n+\t      char __format;\n+\t      char __mod = 0;\n+\t      size_t __len = 1; \n+\t      __c = __ctype.narrow(*__beg, 0);\n+\t      ++__beg;\n+\t      if (__c == 'E' || __c == 'O')\n+\t\t{\n+\t\t  __mod = __c;\n+\t\t  __format = __ctype.narrow(*__beg, 0);\n+\t\t  ++__beg;\n+\t\t}\n+\t      else\n+\t\t__format = __c;\n+\t      this->do_put(__s, __io, char_type(), __tm, __format, __mod);\n+\t    }\n+\t  else\n+\t    __s = __c;\n+\t}\n+      return __s;\n+    }\n+\n+  template<typename _CharT, typename _OutIter>\n+    time_put<_CharT, _OutIter>::iter_type \n+    time_put<_CharT, _OutIter>::do_put(iter_type __s, ios_base& __io, \n+\t\t\t\t       char_type, const tm* __tm, \n+\t\t\t\t       char __format, char __mod) const\n+    { \n+      // NB: This size is arbitrary. Should this be a data member,\n+      // initialized at construction?\n+      const size_t __maxlen = 64;\n+      char* __res = static_cast<char*>(__builtin_alloca(__maxlen));\n+\n+      // NB: In IEE 1003.1-200x, and perhaps other locale models, it\n+      // is possible that the format character will be longer than one\n+      // character. Possibilities include 'E' or 'O' followed by a\n+      // format charcter: if __mod is not the default argument, assume\n+      // it's a valid modifier.\n+      char __fmt[4];\n+      __fmt[0] = '%'; \n+      if (!__mod)\n+\t{\n+\t  __fmt[1] = __format;\n+\t  __fmt[2] = '\\0';\n+\t}\n+      else\n+\t{\n+\t  __fmt[1] = __mod;\n+\t  __fmt[2] = __format;\n+\t  __fmt[3] = '\\0';\n+\t}\n+\n+      locale __loc = __io.getloc();\n+      __timepunct<_CharT> const& __tp = use_facet<__timepunct<_CharT> >(__loc);\n+      __tp._M_put_helper(__res, __maxlen, __fmt, __tm);\n+\n+      // Write resulting, fully-formatted string to output iterator.\n+      size_t __len = strlen(__res);\n+      for (size_t __i = 0; __i < __len; ++__i)\n+\t__s = __res[__i];\n+      return __s;\n+    }\n+\n   // Support for time_get:\n   // Note that these partial specializations could, and maybe should,\n   // be changed to full specializations (by eliminating the _Dummy"}, {"sha": "67894b40a2b19fd429ca7283c62eb3d63f947444", "filename": "libstdc++-v3/include/bits/localefwd.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocalefwd.h?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -47,9 +47,9 @@ namespace std\n {\n   // NB: Don't instantiate required wchar_t facets if no wchar_t support.\n #ifdef _GLIBCPP_USE_WCHAR_T\n-# define  _GLIBCPP_NUM_FACETS 26\n+# define  _GLIBCPP_NUM_FACETS 28\n #else\n-# define  _GLIBCPP_NUM_FACETS 13\n+# define  _GLIBCPP_NUM_FACETS 14\n #endif\n \n   // 22.1.1 Locale"}, {"sha": "30a1ecb9fae94bd64c905b30bac005d1d169e7a8", "filename": "libstdc++-v3/libio/Makefile.in", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Flibio%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibio%2FMakefile.in?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -1,6 +1,6 @@\n-# Makefile.in generated automatically by automake 1.4 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am\n \n-# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n+# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -67,6 +67,7 @@ AR = @AR@\n AS = @AS@\n ATOMICITY_INC_SRCDIR = @ATOMICITY_INC_SRCDIR@\n BASIC_FILE_H = @BASIC_FILE_H@\n+BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@\n CATALOGS = @CATALOGS@\n CATOBJEXT = @CATOBJEXT@\n CC = @CC@\n@@ -77,6 +78,7 @@ CMESSAGES_H = @CMESSAGES_H@\n CPP = @CPP@\n CSHADOW_FLAGS = @CSHADOW_FLAGS@\n CSTDIO_H = @CSTDIO_H@\n+CTIME_H = @CTIME_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n@@ -88,16 +90,16 @@ EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n GENCAT = @GENCAT@\n+GLIBC21 = @GLIBC21@\n GLIBCPP_IS_CROSS_COMPILING = @GLIBCPP_IS_CROSS_COMPILING@\n GMOFILES = @GMOFILES@\n GMSGFMT = @GMSGFMT@\n-GT_NO = @GT_NO@\n-GT_YES = @GT_YES@\n-INCLUDE_LOCALE_H = @INCLUDE_LOCALE_H@\n INSTOBJEXT = @INSTOBJEXT@\n-INTLDEPS = @INTLDEPS@\n+INTLBISON = @INTLBISON@\n INTLLIBS = @INTLLIBS@\n INTLOBJS = @INTLOBJS@\n+INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@\n+LIBICONV = @LIBICONV@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBMATH_INCLUDES = @LIBMATH_INCLUDES@\n LIBSUPCXX_INCLUDES = @LIBSUPCXX_INCLUDES@\n@@ -142,7 +144,6 @@ glibcpp_toolexecdir = @glibcpp_toolexecdir@\n glibcpp_toolexeclibdir = @glibcpp_toolexeclibdir@\n gxx_include_dir = @gxx_include_dir@\n ifGNUmake = @ifGNUmake@\n-l = @l@\n libio_la = @libio_la@\n libtool_VERSION = @libtool_VERSION@\n release_VERSION = @release_VERSION@\n@@ -151,22 +152,28 @@ toplevel_srcdir = @toplevel_srcdir@\n AUTOMAKE_OPTIONS = 1.3 cygnus\n \n mkinstalldirs = $(SHELL) $(toplevel_srcdir)/mkinstalldirs\n-@GLIBCPP_BUILD_LIBIO_TRUE@noinst_LTLIBRARIES = libio.la\n+@GLIBCPP_BUILD_LIBIO_TRUE@noinst_LTLIBRARIES = @GLIBCPP_BUILD_LIBIO_TRUE@libio.la\n @GLIBCPP_BUILD_LIBIO_FALSE@noinst_LTLIBRARIES = \n \n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n GLIBCPP_INCLUDES = @GLIBCPP_INCLUDES@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n \n-INCLUDES =  \t-nostdinc++ \t$(GLIBCPP_INCLUDES) $(LIBIO_INCLUDES) $(TOPLEVEL_INCLUDES)\t\n+INCLUDES = \\\n+\t-nostdinc++ \\\n+\t$(GLIBCPP_INCLUDES) $(LIBIO_INCLUDES) $(TOPLEVEL_INCLUDES)\t\n \n \n-libio_headers =          libio.h libioP.h iolibio.h\n+libio_headers = \\\n+        libio.h libioP.h iolibio.h\n \n-@GLIBCPP_NEED_LIBIO_TRUE@LIBIO_SRCS = \tfiledoalloc.c genops.c fileops.c stdfiles.c c_codecvt.c \tiofclose.c iofopen.c \n+@GLIBCPP_NEED_LIBIO_TRUE@LIBIO_SRCS = @GLIBCPP_NEED_LIBIO_TRUE@\\\n+@GLIBCPP_NEED_LIBIO_TRUE@\tfiledoalloc.c genops.c fileops.c stdfiles.c c_codecvt.c \\\n+@GLIBCPP_NEED_LIBIO_TRUE@\tiofclose.c iofopen.c \n @GLIBCPP_NEED_LIBIO_FALSE@LIBIO_SRCS = \n-@GLIBCPP_NEED_WLIBIO_TRUE@LIBIO_WSRCS = \twfiledoalloc.c wfileops.c wgenops.c iofwide.c\n+@GLIBCPP_NEED_WLIBIO_TRUE@LIBIO_WSRCS = @GLIBCPP_NEED_WLIBIO_TRUE@\\\n+@GLIBCPP_NEED_WLIBIO_TRUE@\twfiledoalloc.c wfileops.c wgenops.c iofwide.c\n @GLIBCPP_NEED_WLIBIO_FALSE@LIBIO_WSRCS = \n \n EXTRA_DIST = iostreamP.h"}, {"sha": "60567d606ed6452f61d84487f4ca94ee17774dfe", "filename": "libstdc++-v3/libmath/Makefile.in", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibmath%2FMakefile.in?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -1,6 +1,6 @@\n-# Makefile.in generated automatically by automake 1.4 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am\n \n-# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n+# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -67,6 +67,7 @@ AR = @AR@\n AS = @AS@\n ATOMICITY_INC_SRCDIR = @ATOMICITY_INC_SRCDIR@\n BASIC_FILE_H = @BASIC_FILE_H@\n+BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@\n CATALOGS = @CATALOGS@\n CATOBJEXT = @CATOBJEXT@\n CC = @CC@\n@@ -77,6 +78,7 @@ CMESSAGES_H = @CMESSAGES_H@\n CPP = @CPP@\n CSHADOW_FLAGS = @CSHADOW_FLAGS@\n CSTDIO_H = @CSTDIO_H@\n+CTIME_H = @CTIME_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n@@ -88,17 +90,17 @@ EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n GENCAT = @GENCAT@\n+GLIBC21 = @GLIBC21@\n GLIBCPP_INCLUDES = @GLIBCPP_INCLUDES@\n GLIBCPP_IS_CROSS_COMPILING = @GLIBCPP_IS_CROSS_COMPILING@\n GMOFILES = @GMOFILES@\n GMSGFMT = @GMSGFMT@\n-GT_NO = @GT_NO@\n-GT_YES = @GT_YES@\n-INCLUDE_LOCALE_H = @INCLUDE_LOCALE_H@\n INSTOBJEXT = @INSTOBJEXT@\n-INTLDEPS = @INTLDEPS@\n+INTLBISON = @INTLBISON@\n INTLLIBS = @INTLLIBS@\n INTLOBJS = @INTLOBJS@\n+INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@\n+LIBICONV = @LIBICONV@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBMATH_INCLUDES = @LIBMATH_INCLUDES@\n@@ -144,7 +146,6 @@ glibcpp_toolexecdir = @glibcpp_toolexecdir@\n glibcpp_toolexeclibdir = @glibcpp_toolexeclibdir@\n gxx_include_dir = @gxx_include_dir@\n ifGNUmake = @ifGNUmake@\n-l = @l@\n libio_la = @libio_la@\n libtool_VERSION = @libtool_VERSION@\n release_VERSION = @release_VERSION@\n@@ -160,7 +161,9 @@ EXTRA_LONG_DOUBLE_yes = signbitl.c\n \n EXTRA_DIST = $(EXTRA_LONG_DOUBLE_yes) \n \n-libmath_la_LIBADD =  \t@LIBMATHOBJS@ \t$(EXTRA_LONG_DOUBLE_$(USE_COMPLEX_LONG_DOUBLE)) \n+libmath_la_LIBADD = \\\n+\t@LIBMATHOBJS@ \\\n+\t$(EXTRA_LONG_DOUBLE_$(USE_COMPLEX_LONG_DOUBLE)) \n \n \n libmath_la_DEPENDENCIES = $(libmath_la_LIBADD)\n@@ -172,7 +175,8 @@ LINK = $(LIBTOOL) --mode=link \"$(CCLD)\" $(AM_CFLAGS) $(CFLAGS) $(LDFLAGS) -o $@\n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n \n-INCLUDES =  \t$(TOPLEVEL_INCLUDES) \n+INCLUDES = \\\n+\t$(TOPLEVEL_INCLUDES) \n \n CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = "}, {"sha": "ad64000e19e064d97438d17dc97a800a1cb919e6", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 55, "deletions": 19, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -1,6 +1,6 @@\n-# Makefile.in generated automatically by automake 1.4 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am\n \n-# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n+# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -67,6 +67,7 @@ AR = @AR@\n AS = @AS@\n ATOMICITY_INC_SRCDIR = @ATOMICITY_INC_SRCDIR@\n BASIC_FILE_H = @BASIC_FILE_H@\n+BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@\n CATALOGS = @CATALOGS@\n CATOBJEXT = @CATOBJEXT@\n CC = @CC@\n@@ -77,6 +78,7 @@ CMESSAGES_H = @CMESSAGES_H@\n CPP = @CPP@\n CSHADOW_FLAGS = @CSHADOW_FLAGS@\n CSTDIO_H = @CSTDIO_H@\n+CTIME_H = @CTIME_H@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n DATADIRNAME = @DATADIRNAME@\n@@ -87,16 +89,16 @@ EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n GENCAT = @GENCAT@\n+GLIBC21 = @GLIBC21@\n GLIBCPP_IS_CROSS_COMPILING = @GLIBCPP_IS_CROSS_COMPILING@\n GMOFILES = @GMOFILES@\n GMSGFMT = @GMSGFMT@\n-GT_NO = @GT_NO@\n-GT_YES = @GT_YES@\n-INCLUDE_LOCALE_H = @INCLUDE_LOCALE_H@\n INSTOBJEXT = @INSTOBJEXT@\n-INTLDEPS = @INTLDEPS@\n+INTLBISON = @INTLBISON@\n INTLLIBS = @INTLLIBS@\n INTLOBJS = @INTLOBJS@\n+INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@\n+LIBICONV = @LIBICONV@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBMATH_INCLUDES = @LIBMATH_INCLUDES@\n@@ -141,7 +143,6 @@ glibcpp_toolexecdir = @glibcpp_toolexecdir@\n glibcpp_toolexeclibdir = @glibcpp_toolexeclibdir@\n gxx_include_dir = @gxx_include_dir@\n ifGNUmake = @ifGNUmake@\n-l = @l@\n libio_la = @libio_la@\n libtool_VERSION = @libtool_VERSION@\n release_VERSION = @release_VERSION@\n@@ -171,24 +172,50 @@ OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n # These bits are all figured out from configure. Look in acinclude.m4\n # or configure.in to see how they are set. See GLIBCPP_EXPORT_FLAGS\n # NB: DEBUGFLAGS have to be at the end so that -O2 can be overridden.\n-CONFIG_CXXFLAGS =  \t@EXTRA_CXX_FLAGS@ @SECTION_FLAGS@ @CSHADOW_FLAGS@ @DEBUG_FLAGS@ \n+CONFIG_CXXFLAGS = \\\n+\t@EXTRA_CXX_FLAGS@ @SECTION_FLAGS@ @CSHADOW_FLAGS@ @DEBUG_FLAGS@ \n \n \n # Warning flags to use.\n-WARN_CXXFLAGS =  \t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n+WARN_CXXFLAGS = \\\n+\t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n \n \n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n GLIBCPP_INCLUDES = @GLIBCPP_INCLUDES@\n LIBSUPCXX_INCLUDES = @LIBSUPCXX_INCLUDES@\n \n-INCLUDES =  \t-I$(toplevel_srcdir)/gcc -I$(toplevel_srcdir)/include \t$(GLIBCPP_INCLUDES) $(LIBSUPCXX_INCLUDES)\n-\n-\n-headers =  \texception new typeinfo cxxabi.h exception_defines.h \n-\n-\n-sources =  \tdel_op.cc \tdel_opnt.cc \tdel_opv.cc \tdel_opvnt.cc \teh_alloc.cc \teh_aux_runtime.cc \teh_catch.cc \teh_exception.cc \teh_globals.cc \teh_personality.cc \teh_terminate.cc \teh_throw.cc \tnew_handler.cc \tnew_op.cc \tnew_opnt.cc \tnew_opv.cc \tnew_opvnt.cc \tpure.cc \ttinfo.cc \ttinfo2.cc \tvec.cc\n+INCLUDES = \\\n+\t-I$(toplevel_srcdir)/gcc -I$(toplevel_srcdir)/include \\\n+\t$(GLIBCPP_INCLUDES) $(LIBSUPCXX_INCLUDES)\n+\n+\n+headers = \\\n+\texception new typeinfo cxxabi.h exception_defines.h \n+\n+\n+sources = \\\n+\tdel_op.cc \\\n+\tdel_opnt.cc \\\n+\tdel_opv.cc \\\n+\tdel_opvnt.cc \\\n+\teh_alloc.cc \\\n+\teh_aux_runtime.cc \\\n+\teh_catch.cc \\\n+\teh_exception.cc \\\n+\teh_globals.cc \\\n+\teh_personality.cc \\\n+\teh_terminate.cc \\\n+\teh_throw.cc \\\n+\tnew_handler.cc \\\n+\tnew_op.cc \\\n+\tnew_opnt.cc \\\n+\tnew_opv.cc \\\n+\tnew_opvnt.cc \\\n+\tpure.cc \\\n+\ttinfo.cc \\\n+\ttinfo2.cc \\\n+\tvec.cc\n \n \n libsupc___la_SOURCES = $(sources)\n@@ -204,7 +231,12 @@ LIBSUPCXX_CXXFLAGS = $(LIBSUPCXX_PICFLAGS)\n # set this option because CONFIG_CXXFLAGS has to be after\n # OPTIMIZE_CXXFLAGS on the compile line so that -O2 can be overridden\n # as the occasion call for it. (ie, --enable-debug)\n-AM_CXXFLAGS =  \t-fno-implicit-templates \t$(LIBSUPCXX_CXXFLAGS) \t$(WARN_CXXFLAGS) \t$(OPTIMIZE_CXXFLAGS) \t$(CONFIG_CXXFLAGS) \n+AM_CXXFLAGS = \\\n+\t-fno-implicit-templates \\\n+\t$(LIBSUPCXX_CXXFLAGS) \\\n+\t$(WARN_CXXFLAGS) \\\n+\t$(OPTIMIZE_CXXFLAGS) \\\n+\t$(CONFIG_CXXFLAGS) \n \n \n # libstdc++ libtool notes\n@@ -228,7 +260,9 @@ AM_CXXFLAGS =  \t-fno-implicit-templates \t$(LIBSUPCXX_CXXFLAGS) \t$(WARN_CXXFLAGS)\n #\n # We have to put --tag disable-shared after --tag CXX lest things\n # CXX undo the affect of disable-shared.\n-LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared                --mode=compile $(CXX) $(INCLUDES) \t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared \\\n+               --mode=compile $(CXX) $(INCLUDES) \\\n+\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n \n \n # 3) We'd have a problem when building the shared libstdc++ object if\n@@ -237,7 +271,9 @@ LTCXXCOMPILE = $(LIBTOOL) --tag CXX --tag disable-shared                --mode=c\n # course is problematic at this point.  So, we get the top-level\n # directory to configure libstdc++-v3 to use gcc as the C++\n # compilation driver.\n-CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared           --mode=link $(CXX)           @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n+CXXLINK = $(LIBTOOL) --tag CXX --tag disable-shared \\\n+          --mode=link $(CXX) \\\n+          @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n \n CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = "}, {"sha": "f77ae5515793410b15e113f5ea0dd6f37cddea57", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -1,6 +1,6 @@\n-# Makefile.in generated automatically by automake 1.4 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am\n \n-# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n+# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -67,6 +67,7 @@ AR = @AR@\n AS = @AS@\n ATOMICITY_INC_SRCDIR = @ATOMICITY_INC_SRCDIR@\n BASIC_FILE_H = @BASIC_FILE_H@\n+BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@\n CATALOGS = @CATALOGS@\n CATOBJEXT = @CATOBJEXT@\n CC = @CC@\n@@ -77,6 +78,7 @@ CMESSAGES_H = @CMESSAGES_H@\n CPP = @CPP@\n CSHADOW_FLAGS = @CSHADOW_FLAGS@\n CSTDIO_H = @CSTDIO_H@\n+CTIME_H = @CTIME_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n@@ -88,17 +90,17 @@ EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n GENCAT = @GENCAT@\n+GLIBC21 = @GLIBC21@\n GLIBCPP_INCLUDES = @GLIBCPP_INCLUDES@\n GLIBCPP_IS_CROSS_COMPILING = @GLIBCPP_IS_CROSS_COMPILING@\n GMOFILES = @GMOFILES@\n GMSGFMT = @GMSGFMT@\n-GT_NO = @GT_NO@\n-GT_YES = @GT_YES@\n-INCLUDE_LOCALE_H = @INCLUDE_LOCALE_H@\n INSTOBJEXT = @INSTOBJEXT@\n-INTLDEPS = @INTLDEPS@\n+INTLBISON = @INTLBISON@\n INTLLIBS = @INTLLIBS@\n INTLOBJS = @INTLOBJS@\n+INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@\n+LIBICONV = @LIBICONV@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBMATH_INCLUDES = @LIBMATH_INCLUDES@\n@@ -143,7 +145,6 @@ glibcpp_toolexecdir = @glibcpp_toolexecdir@\n glibcpp_toolexeclibdir = @glibcpp_toolexeclibdir@\n gxx_include_dir = @gxx_include_dir@\n ifGNUmake = @ifGNUmake@\n-l = @l@\n libio_la = @libio_la@\n libtool_VERSION = @libtool_VERSION@\n release_VERSION = @release_VERSION@\n@@ -164,7 +165,9 @@ LOCALE_OUT = @glibcpp_MOFILES@\n MSGFMT = msgfmt\n \n # Necessary files.\n-DISTFILES =  \tMakefile.am Makefile.in string_literals.cc POTFILES.in $(PACKAGE).pot \t$(LOCALE_IN) \n+DISTFILES = \\\n+\tMakefile.am Makefile.in string_literals.cc POTFILES.in $(PACKAGE).pot \\\n+\t$(LOCALE_IN) \n \n \n # Specify what gets cleaned up on a 'make clean'"}, {"sha": "80caff14ac8c614edffe79ca37ff0595d9ac599d", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 37, "deletions": 15, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -1,6 +1,6 @@\n-# Makefile.in generated automatically by automake 1.4 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am\n \n-# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n+# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -66,6 +66,7 @@ AR = @AR@\n AS = @AS@\n ATOMICITY_INC_SRCDIR = @ATOMICITY_INC_SRCDIR@\n BASIC_FILE_H = @BASIC_FILE_H@\n+BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@\n CATALOGS = @CATALOGS@\n CATOBJEXT = @CATOBJEXT@\n CC = @CC@\n@@ -76,6 +77,7 @@ CMESSAGES_H = @CMESSAGES_H@\n CPP = @CPP@\n CSHADOW_FLAGS = @CSHADOW_FLAGS@\n CSTDIO_H = @CSTDIO_H@\n+CTIME_H = @CTIME_H@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n DATADIRNAME = @DATADIRNAME@\n@@ -86,16 +88,16 @@ EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n GENCAT = @GENCAT@\n+GLIBC21 = @GLIBC21@\n GLIBCPP_IS_CROSS_COMPILING = @GLIBCPP_IS_CROSS_COMPILING@\n GMOFILES = @GMOFILES@\n GMSGFMT = @GMSGFMT@\n-GT_NO = @GT_NO@\n-GT_YES = @GT_YES@\n-INCLUDE_LOCALE_H = @INCLUDE_LOCALE_H@\n INSTOBJEXT = @INSTOBJEXT@\n-INTLDEPS = @INTLDEPS@\n+INTLBISON = @INTLBISON@\n INTLLIBS = @INTLLIBS@\n INTLOBJS = @INTLOBJS@\n+INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@\n+LIBICONV = @LIBICONV@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBSUPCXX_PICFLAGS = @LIBSUPCXX_PICFLAGS@\n LIBTOOL = @LIBTOOL@\n@@ -137,7 +139,6 @@ glibcpp_toolexecdir = @glibcpp_toolexecdir@\n glibcpp_toolexeclibdir = @glibcpp_toolexeclibdir@\n gxx_include_dir = @gxx_include_dir@\n ifGNUmake = @ifGNUmake@\n-l = @l@\n libio_la = @libio_la@\n libtool_VERSION = @libtool_VERSION@\n release_VERSION = @release_VERSION@\n@@ -161,11 +162,13 @@ OPTIMIZE_CXXFLAGS = @OPTIMIZE_CXXFLAGS@\n # These bits are all figured out from configure. Look in acinclude.m4\n # or configure.in to see how they are set. See GLIBCPP_EXPORT_FLAGS\n # NB: DEBUGFLAGS have to be at the end so that -O2 can be overridden.\n-CONFIG_CXXFLAGS =  \t@EXTRA_CXX_FLAGS@ @SECTION_FLAGS@ @CSHADOW_FLAGS@ @DEBUG_FLAGS@ \n+CONFIG_CXXFLAGS = \\\n+\t@EXTRA_CXX_FLAGS@ @SECTION_FLAGS@ @CSHADOW_FLAGS@ @DEBUG_FLAGS@ \n \n \n # Warning flags to use.\n-WARN_CXXFLAGS =  \t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n+WARN_CXXFLAGS = \\\n+\t@WARN_FLAGS@ $(WERROR) -fdiagnostics-show-location=once\n \n \n # Use common includes from acinclude.m4/GLIBCPP_EXPORT_INCLUDES\n@@ -175,17 +178,29 @@ LIBSUPCXX_INCLUDES = @LIBSUPCXX_INCLUDES@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n TOPLEVEL_INCLUDES = @TOPLEVEL_INCLUDES@\n \n-INCLUDES =  \t-nostdinc++ \t$(GLIBCPP_INCLUDES) \t$(LIBSUPCXX_INCLUDES) $(LIBIO_INCLUDES) $(LIBMATH_INCLUDES) \t$(TOPLEVEL_INCLUDES)\n+INCLUDES = \\\n+\t-nostdinc++ \\\n+\t$(GLIBCPP_INCLUDES) \\\n+\t$(LIBSUPCXX_INCLUDES) $(LIBIO_INCLUDES) $(LIBMATH_INCLUDES) \\\n+\t$(TOPLEVEL_INCLUDES)\n \n \n-sources =  \tbasic_file.cc bitset.cc c++locale.cc cmath.cc codecvt.cc \tcomplex_io.cc functexcept.cc globals.cc ios.cc limits.cc \tlocale.cc locale-inst.cc localename.cc \tcollate.cc messages.cc moneypunct.cc numpunct.cc \tmisc-inst.cc stdexcept.cc stl-inst.cc string-inst.cc strstream.cc \tvalarray-inst.cc wstring-inst.cc\n+sources = \\\n+\tbasic_file.cc bitset.cc c++locale.cc cmath.cc codecvt.cc \\\n+\tcomplex_io.cc functexcept.cc globals.cc ios.cc limits.cc \\\n+\tlocale.cc locale-inst.cc localename.cc \\\n+\tcollate.cc messages.cc moneypunct.cc numpunct.cc \\\n+\tmisc-inst.cc stdexcept.cc stl-inst.cc string-inst.cc strstream.cc \\\n+\tvalarray-inst.cc wstring-inst.cc\n \n \n VPATH = $(top_srcdir):$(top_srcdir)/src\n \n libstdc___la_SOURCES = $(sources)\n \n-libstdc___la_LIBADD =  \t../libmath/libmath.la @libio_la@ \t../libsupc++/libsupc++convenience.la\n+libstdc___la_LIBADD = \\\n+\t../libmath/libmath.la @libio_la@ \\\n+\t../libsupc++/libsupc++convenience.la\n \n \n libstdc___la_LDFLAGS = -version-info @libtool_VERSION@ -lm\n@@ -205,7 +220,12 @@ GLIBCPP_INCLUDE_DIR = @glibcpp_builddir@/include\n # The no-implicit-templates flag will generate unresolved references to\n # the concept-checking symbols.  So we must disable the checks while\n # actually building the library.\n-AM_CXXFLAGS =  \t-fno-implicit-templates \t$(LIBSUPCXX_CXXFLAGS) \t$(WARN_CXXFLAGS) \t$(OPTIMIZE_CXXFLAGS) \t$(CONFIG_CXXFLAGS) \n+AM_CXXFLAGS = \\\n+\t-fno-implicit-templates \\\n+\t$(LIBSUPCXX_CXXFLAGS) \\\n+\t$(WARN_CXXFLAGS) \\\n+\t$(OPTIMIZE_CXXFLAGS) \\\n+\t$(CONFIG_CXXFLAGS) \n \n \n # libstdc++ libtool notes\n@@ -226,7 +246,8 @@ AM_CXXFLAGS =  \t-fno-implicit-templates \t$(LIBSUPCXX_CXXFLAGS) \t$(WARN_CXXFLAGS)\n # correct solution is to add `--tag CXX' to LTCXXCOMPILE and maybe\n # CXXLINK, just after $(LIBTOOL), so that libtool doesn't have to\n # attempt to infer which configuration to use\n-LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n+LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \\\n+\t       $(AM_CPPFLAGS) $(CPPFLAGS) $(CXXFLAGS) $(AM_CXXFLAGS) \n \n \n # 3) We'd have a problem when building the shared libstdc++ object if\n@@ -235,7 +256,8 @@ LTCXXCOMPILE = $(LIBTOOL) --tag CXX --mode=compile $(CXX) $(INCLUDES) \t       $(\n # course is problematic at this point.  So, we get the top-level\n # directory to configure libstdc++-v3 to use gcc as the C++\n # compilation driver.\n-CXXLINK = $(LIBTOOL) --tag CXX --mode=link $(CXX) \t  @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n+CXXLINK = $(LIBTOOL) --tag CXX --mode=link $(CXX) \\\n+\t  @OPT_LDFLAGS@ @SECTION_LDFLAGS@ $(AM_CXXFLAGS) $(LDFLAGS) -o $@\n \n CONFIG_HEADER = ../config.h\n CONFIG_CLEAN_FILES = "}, {"sha": "7e60498cc493b0fe5bc5719eb69c3ce0f201bbf9", "filename": "libstdc++-v3/src/locale-inst.cc", "status": "modified", "additions": 29, "deletions": 6, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fsrc%2Flocale-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fsrc%2Flocale-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale-inst.cc?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -81,12 +81,14 @@ namespace std\n #endif\n \n   // time_get and time_put\n+  template class __timepunct<char>;\n   template class time_put<char, obuf_iterator>;\n   template class time_put_byname<char, obuf_iterator>;\n   template class time_get<char, ibuf_iterator>;\n   template class time_get_byname<char, ibuf_iterator>;\n \n #ifdef _GLIBCPP_USE_WCHAR_T\n+  template class __timepunct<wchar_t>;\n   template class time_put<wchar_t, wobuf_iterator>;\n   template class time_put_byname<wchar_t, wobuf_iterator>;\n   template class time_get<wchar_t, wibuf_iterator>;\n@@ -130,49 +132,70 @@ namespace std\n #endif\n     \n   // use_facet\n+  template\n+    const numpunct<char>& \n+    use_facet<numpunct<char> >(const locale&);\n+\n   template \n     const num_put<char, obuf_iterator >& \n     use_facet<num_put<char, obuf_iterator> >(const locale&);\n+\n   template \n     const num_get<char, ibuf_iterator >& \n     use_facet<num_get<char, ibuf_iterator> >(const locale&);\n+\n   template\n     const codecvt<char, char, mbstate_t>& \n     use_facet<codecvt<char, char, mbstate_t> >(const locale&);\n-  template\n-    const numpunct<char>& \n-    use_facet<numpunct<char> >(const locale&);\n+\n   template\n     const collate<char>& \n     use_facet<collate<char> >(const locale&);\n+\n   template\n     const moneypunct<char, true>& \n     use_facet<moneypunct<char, true> >(const locale&);\n+\n   template\n     const moneypunct<char, false>& \n     use_facet<moneypunct<char, false> >(const locale&);\n+\n+  template\n+    const __timepunct<char>& \n+    use_facet<__timepunct<char> >(const locale&);\n+\n #ifdef _GLIBCPP_USE_WCHAR_T\n+  template\n+    const numpunct<wchar_t>& \n+    use_facet<numpunct<wchar_t> >(const locale&);\n+\n   template \n     const num_put<wchar_t, wobuf_iterator>& \n     use_facet<num_put<wchar_t, wobuf_iterator> >(const locale&);\n+\n   template \n     const num_get<wchar_t, wibuf_iterator>& \n     use_facet<num_get<wchar_t, wibuf_iterator> >(const locale&);\n+\n   template\n     const codecvt<wchar_t, char, mbstate_t>& \n     use_facet<codecvt<wchar_t, char, mbstate_t> >(locale const&);\n-  template\n-    const numpunct<wchar_t>& \n-    use_facet<numpunct<wchar_t> >(const locale&);\n+\n   template\n     const collate<wchar_t>& \n     use_facet<collate<wchar_t> >(const locale&);\n+\n   template\n     const moneypunct<wchar_t, true>& \n     use_facet<moneypunct<wchar_t, true> >(const locale&);\n+\n   template\n     const moneypunct<wchar_t, false>& \n     use_facet<moneypunct<wchar_t, false> >(const locale&);\n+\n+  template\n+    const __timepunct<wchar_t>& \n+    use_facet<__timepunct<wchar_t> >(const locale&);\n #endif\n \n   // has_facet"}, {"sha": "8e76f51b651c2ce45db1e159e9f750b7f60273d5", "filename": "libstdc++-v3/src/locale.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocale.cc?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -114,9 +114,11 @@ namespace std\n   const locale::id* const\n   locale::_Impl::_S_id_time[] =\n   {\n+    &__timepunct<char>::id, \n     &time_get<char>::id, \n     &time_put<char>::id, \n #ifdef _GLIBCPP_USE_WCHAR_T\n+    &__timepunct<wchar_t>::id, \n     &time_get<wchar_t>::id,\n     &time_put<wchar_t>::id,\n #endif"}, {"sha": "738acdef20389d6a7f4e2c93700365f144e1415d", "filename": "libstdc++-v3/src/localename.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -90,8 +90,7 @@ namespace std\n       _M_names[i] = __str;\n \n     // Construct all standard facets and add them to _M_facets.\n-    // XXX Eventually, all should use __clocale ctor like numpunct\n-    // XXX how to deal cleanly, consistently with null (\"C\") __cloc?\n+    // XXX How to deal cleanly, consistently with null (\"C\") __cloc?\n     _M_init_facet(new std::collate<char>(__cloc));\n     _M_init_facet(new std::ctype<char>);\n     _M_init_facet(new codecvt<char, char, mbstate_t>);\n@@ -102,6 +101,7 @@ namespace std\n     _M_init_facet(new numpunct<char>(__cloc));\n     _M_init_facet(new num_get<char>);\n     _M_init_facet(new num_put<char>);\n+    _M_init_facet(new __timepunct<char>(__cloc, __str.c_str()));\n     _M_init_facet(new time_get<char>);\n     _M_init_facet(new time_put<char>);\n     _M_init_facet(new std::messages<char>(__cloc, __str.c_str()));\n@@ -117,6 +117,7 @@ namespace std\n     _M_init_facet(new numpunct<wchar_t>(__cloc));\n     _M_init_facet(new num_get<wchar_t>);\n     _M_init_facet(new num_put<wchar_t>);\n+    _M_init_facet(new __timepunct<wchar_t>(__cloc, __str.c_str()));\n     _M_init_facet(new time_get<wchar_t>);\n     _M_init_facet(new time_put<wchar_t>);\n     _M_init_facet(new std::messages<wchar_t>(__cloc, __str.c_str()));"}, {"sha": "b7318634bb00311b9b9761cffee21eb47e7a5203", "filename": "libstdc++-v3/testsuite/22_locale/time_put.cc", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put.cc?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -0,0 +1,52 @@\n+// 2001-09-17  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+// Copyright (C) 2001 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.2.5.3  Template class time_put\n+\n+#include <locale>\n+\n+void test01()\n+{\n+  // Check for required base class.\n+  typedef std::time_put<char> test_type;\n+  typedef std::locale::facet base_type;\n+  const test_type& obj = std::use_facet<test_type>(std::locale()); \n+  const base_type* base = &obj;\n+  \n+  // Check for required typedefs\n+  typedef test_type::char_type char_type;\n+  typedef test_type::iter_type iter_type;\n+}\n+\n+// Should be able to instantiate this for other types besides char, wchar_t\n+class gnu_time_put: public std::time_put<unsigned char> \n+{ };\n+\n+void test02()\n+{ \n+  gnu_time_put facet01;\n+}\n+\n+int main()\n+{\n+  test01();\n+  test02();\n+  return 0;\n+}"}, {"sha": "995e16857f9d36c039a83161a5cb5e6f82021540", "filename": "libstdc++-v3/testsuite/22_locale/time_put_members_char.cc", "status": "added", "additions": 141, "deletions": 0, "changes": 141, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put_members_char.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put_members_char.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_put_members_char.cc?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -0,0 +1,141 @@\n+// 2001-09-17 Benjamin Kosnik  <bkoz@redhat.com>\n+\n+// Copyright (C) 2001 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 22.2.5.3.1 time_put members\n+\n+#include <locale>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// test string version\n+void test01()\n+{\n+  using namespace std;\n+  typedef ostreambuf_iterator<char> iterator_type;\n+\n+  bool test = true;\n+\n+  // basic construction and sanity checks.\n+  locale loc_c = locale::classic();\n+  locale loc_hk(\"en_HK\");\n+  locale loc_fr(\"fr_FR@euro\");\n+  locale loc_de(\"de_DE\");\n+  VERIFY( loc_hk != loc_c );\n+  VERIFY( loc_hk != loc_fr );\n+  VERIFY( loc_hk != loc_de );\n+  VERIFY( loc_de != loc_fr );\n+\n+  // cache the moneypunct facets, for quicker gdb inspection\n+  const time_put<char>& timp_c = use_facet<time_put<char> >(loc_c); \n+  const time_put<char>& timp_de = use_facet<time_put<char> >(loc_de); \n+  const time_put<char>& timp_hk = use_facet<time_put<char> >(loc_hk); \n+  const time_put<char>& timp_fr = use_facet<time_put<char> >(loc_fr); \n+\n+  // create an ostream-derived object, cache the time_put facet\n+  const string empty;\n+  ostringstream oss;\n+  const time_put<char>& tim_put = use_facet<time_put<char> >(oss.getloc()); \n+\n+  // create \"C\" time objects\n+  tm time1 = { 0, 0, 12, 4, 3, 71 };\n+  const char* all = \"%a %A %b %B %c %d %H %I %j %m %M %p %s %U \"\n+                    \"%w %W %x %X %y %Y %Z %%\";\n+  const char* date = \"%A, the second of %B\";\n+  const char* date_ex = \"%Ex\";\n+\n+  // 1\n+  // iter_type \n+  // put(iter_type s, ios_base& str, char_type fill, const tm* t,\n+  //\t char format, char modifier = 0) const;\n+  oss.str(empty);\n+  oss.imbue(loc_c);\n+  iterator_type os_it01 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'a');\n+  string result1 = oss.str();\n+  VERIFY( result1 == \"Sun\" );\n+\n+  oss.str(empty);\n+  oss.imbue(loc_de);\n+  iterator_type os_it02 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'a');\n+  string result2 = oss.str();\n+  VERIFY( result2 == \"Son\" );\n+\n+  oss.str(empty);\n+  oss.imbue(loc_hk);\n+  iterator_type os_it03 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'a');\n+  string result3 = oss.str();\n+  VERIFY( result3 == \"Sun\" );\n+\n+  oss.str(empty);\n+  oss.imbue(loc_fr);\n+  iterator_type os_it04 = tim_put.put(oss.rdbuf(), oss, '*', &time1, 'a');\n+  string result4 = oss.str();\n+  VERIFY( result4 == \"dim\" );\n+\n+  // 2\n+  oss.str(empty);\n+  oss.imbue(loc_c);\n+  iterator_type os_it05 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+\t\t\t\t      date, date + strlen(date));\n+  string result5 = oss.str();\n+  VERIFY( result5 == \"Sunday, the second of April\");\n+  iterator_type os_it06 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+\t\t\t\t      date_ex, date_ex + strlen(date));\n+  string result6 = oss.str();\n+  VERIFY( result6 != result5 );\n+\n+  oss.str(empty);\n+  oss.imbue(loc_de);\n+  iterator_type os_it07 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+\t\t\t\t      date, date + strlen(date));\n+  string result7 = oss.str();\n+  VERIFY( result7 == \"Sonntag, the second of April\");\n+  iterator_type os_it08 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+\t\t\t\t      date_ex, date_ex + strlen(date));\n+  string result8 = oss.str();\n+  VERIFY( result8 != result7 );\n+\n+  oss.str(empty);\n+  oss.imbue(loc_hk);\n+  iterator_type os_it09 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+\t\t\t\t      date, date + strlen(date));\n+  string result9 = oss.str();\n+  VERIFY( result9 == \"Sunday, the second of April\");\n+  iterator_type os_it10 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+\t\t\t\t      date_ex, date_ex + strlen(date));\n+  string result10 = oss.str();\n+  VERIFY( result10 != result9 );\n+\n+  oss.str(empty);\n+  oss.imbue(loc_fr);\n+  iterator_type os_it11 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+\t\t\t\t      date, date + strlen(date));\n+  string result11 = oss.str();\n+  VERIFY( result11 == \"dimanche, the second of avril\");\n+  iterator_type os_it12 = tim_put.put(oss.rdbuf(), oss, '*', &time1, \n+\t\t\t\t      date_ex, date_ex + strlen(date));\n+  string result12 = oss.str();\n+  VERIFY( result12 != result11 );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "24a64d6eb29ca6810c8b4bafc2827baa426635d6", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e08138aae3e518cc5e4063fa49b61c9e2a70c978/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=e08138aae3e518cc5e4063fa49b61c9e2a70c978", "patch": "@@ -1,6 +1,6 @@\n-# Makefile.in generated automatically by automake 1.4 from Makefile.am\n+# Makefile.in generated automatically by automake 1.4-p5 from Makefile.am\n \n-# Copyright (C) 1994, 1995-8, 1999 Free Software Foundation, Inc.\n+# Copyright (C) 1994, 1995-8, 1999, 2001 Free Software Foundation, Inc.\n # This Makefile.in is free software; the Free Software Foundation\n # gives unlimited permission to copy and/or distribute it,\n # with or without modifications, as long as this notice is preserved.\n@@ -67,6 +67,7 @@ AR = @AR@\n AS = @AS@\n ATOMICITY_INC_SRCDIR = @ATOMICITY_INC_SRCDIR@\n BASIC_FILE_H = @BASIC_FILE_H@\n+BUILD_INCLUDED_LIBINTL = @BUILD_INCLUDED_LIBINTL@\n CATALOGS = @CATALOGS@\n CATOBJEXT = @CATOBJEXT@\n CC = @CC@\n@@ -77,6 +78,7 @@ CMESSAGES_H = @CMESSAGES_H@\n CPP = @CPP@\n CSHADOW_FLAGS = @CSHADOW_FLAGS@\n CSTDIO_H = @CSTDIO_H@\n+CTIME_H = @CTIME_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n@@ -88,17 +90,17 @@ EXTRA_CXX_FLAGS = @EXTRA_CXX_FLAGS@\n GCJ = @GCJ@\n GCJFLAGS = @GCJFLAGS@\n GENCAT = @GENCAT@\n+GLIBC21 = @GLIBC21@\n GLIBCPP_INCLUDES = @GLIBCPP_INCLUDES@\n GLIBCPP_IS_CROSS_COMPILING = @GLIBCPP_IS_CROSS_COMPILING@\n GMOFILES = @GMOFILES@\n GMSGFMT = @GMSGFMT@\n-GT_NO = @GT_NO@\n-GT_YES = @GT_YES@\n-INCLUDE_LOCALE_H = @INCLUDE_LOCALE_H@\n INSTOBJEXT = @INSTOBJEXT@\n-INTLDEPS = @INTLDEPS@\n+INTLBISON = @INTLBISON@\n INTLLIBS = @INTLLIBS@\n INTLOBJS = @INTLOBJS@\n+INTL_LIBTOOL_SUFFIX_PREFIX = @INTL_LIBTOOL_SUFFIX_PREFIX@\n+LIBICONV = @LIBICONV@\n LIBIO_INCLUDES = @LIBIO_INCLUDES@\n LIBMATHOBJS = @LIBMATHOBJS@\n LIBMATH_INCLUDES = @LIBMATH_INCLUDES@\n@@ -145,7 +147,6 @@ glibcpp_toolexecdir = @glibcpp_toolexecdir@\n glibcpp_toolexeclibdir = @glibcpp_toolexeclibdir@\n gxx_include_dir = @gxx_include_dir@\n ifGNUmake = @ifGNUmake@\n-l = @l@\n libio_la = @libio_la@\n libtool_VERSION = @libtool_VERSION@\n release_VERSION = @release_VERSION@\n@@ -155,10 +156,14 @@ AUTOMAKE_OPTIONS = foreign dejagnu\n \n DEJATOOL = libstdc++-v3\n \n-EXPECT = `if [ -f @glibcpp_builddir@/../../expect/expect ] ; then             echo @glibcpp_builddir@/../../expect/expect ;           else echo expect ; fi`\n+EXPECT = `if [ -f @glibcpp_builddir@/../../expect/expect ] ; then \\\n+            echo @glibcpp_builddir@/../../expect/expect ; \\\n+          else echo expect ; fi`\n \n \n-RUNTEST = `if [ -f @glibcpp_srcdir@/../dejagnu/runtest ] ; then \t       echo @glibcpp_srcdir@/../dejagnu/runtest ; \t    else echo runtest; fi`\n+RUNTEST = `if [ -f @glibcpp_srcdir@/../dejagnu/runtest ] ; then \\\n+\t       echo @glibcpp_srcdir@/../dejagnu/runtest ; \\\n+\t    else echo runtest; fi`\n \n \n RUNTESTFLAGS = "}]}