{"sha": "4342eda9e82d428a97d8b3226739ee8fdfb23742", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM0MmVkYTllODJkNDI4YTk3ZDhiMzIyNjczOWVlOGZkZmIyMzc0Mg==", "commit": {"author": {"name": "Thomas Quinot", "email": "quinot@adacore.com", "date": "2009-04-29T09:37:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-29T09:37:01Z"}, "message": "sem_res.adb (Static_Concatenation): An N_Op_Concat with static operands is static only if...\n\n2009-04-29  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_res.adb (Static_Concatenation): An N_Op_Concat with static\n\toperands is static only if it is a predefined concatenation operator.\n\n\t* sem_util.adb: Minor reformatting\n\n\t* sem_ch12.adb (Save_References): When propagating semantic information\n\tfrom generic copy back to generic template, for the case of an\n\tidentifier that has been rewritten to an explicit dereference whose\n\tprefix is either an object name or a parameterless funcion call\n\tdenoting a global object or function, properly capture the denoted\n\tglobal entity: perform the corresponding rewriting in the template,\n\tand point the rewritten identifier to the correct global entity (not\n\tto the associated identifier in the generic copy).\n\nFrom-SVN: r146936", "tree": {"sha": "ec1ba9fa7dca21e6d8fa9a61da5c06d7a7d209b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec1ba9fa7dca21e6d8fa9a61da5c06d7a7d209b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4342eda9e82d428a97d8b3226739ee8fdfb23742", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4342eda9e82d428a97d8b3226739ee8fdfb23742", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4342eda9e82d428a97d8b3226739ee8fdfb23742", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4342eda9e82d428a97d8b3226739ee8fdfb23742/comments", "author": null, "committer": null, "parents": [{"sha": "0b8074edf56583bad77fa350912f8648e6d60bcc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b8074edf56583bad77fa350912f8648e6d60bcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b8074edf56583bad77fa350912f8648e6d60bcc"}], "stats": {"total": 64, "additions": 38, "deletions": 26}, "files": [{"sha": "732e35bf153dbccdcba779827b4e7a493b6d337d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4342eda9e82d428a97d8b3226739ee8fdfb23742/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4342eda9e82d428a97d8b3226739ee8fdfb23742/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4342eda9e82d428a97d8b3226739ee8fdfb23742", "patch": "@@ -1,3 +1,19 @@\n+2009-04-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_res.adb (Static_Concatenation): An N_Op_Concat with static\n+\toperands is static only if it is a predefined concatenation operator.\n+\n+\t* sem_util.adb: Minor reformatting\n+\n+\t* sem_ch12.adb (Save_References): When propagating semantic information\n+\tfrom generic copy back to generic template, for the case of an\n+\tidentifier that has been rewritten to an explicit dereference whose\n+\tprefix is either an object name or a parameterless funcion call\n+\tdenoting a global object or function, properly capture the denoted\n+\tglobal entity: perform the corresponding rewriting in the template,\n+\tand point the rewritten identifier to the correct global entity (not\n+\tto the associated identifier in the generic copy).\n+\n 2009-04-29  Robert Dewar  <dewar@adacore.com>\n \n \t* rtsfind.adb, prj-env.adb: Minor reformatting"}, {"sha": "149117088d5d04648dd272df349b1ed71d75ac4c", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 14, "deletions": 21, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4342eda9e82d428a97d8b3226739ee8fdfb23742/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4342eda9e82d428a97d8b3226739ee8fdfb23742/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=4342eda9e82d428a97d8b3226739ee8fdfb23742", "patch": "@@ -5740,9 +5740,9 @@ package body Sem_Ch12 is\n       then\n          if not Instantiating then\n \n-            --  Link both nodes in order to assign subsequently the\n-            --  entity of the copy to the original node, in case this\n-            --  is a global reference.\n+            --  Link both nodes in order to assign subsequently the entity of\n+            --  the copy to the original node, in case this is a global\n+            --  reference.\n \n             Set_Associated_Node (N, New_N);\n \n@@ -11877,6 +11877,7 @@ package body Sem_Ch12 is\n       --  transformation is propagated to the generic unit.\n \n       procedure Save_References (N : Node_Id) is\n+         Loc : constant Source_Ptr := Sloc (N);\n       begin\n          if N = Empty then\n             null;\n@@ -12018,10 +12019,8 @@ package body Sem_Ch12 is\n \n                elsif Nkind (N2) = N_Explicit_Dereference then\n \n-                  --  An identifier is rewritten as a dereference if it is\n-                  --  the prefix in a selected component, and it denotes an\n-                  --  access to a composite type, or a parameterless function\n-                  --  call that returns an access type.\n+                  --  An identifier is rewritten as a dereference if it is the\n+                  --  prefix in an implicit dereference.\n \n                   --  Check whether corresponding entity in prefix is global\n \n@@ -12030,23 +12029,18 @@ package body Sem_Ch12 is\n                     and then Is_Global (Entity (Prefix (N2)))\n                   then\n                      Rewrite (N,\n-                       Make_Explicit_Dereference (Sloc (N),\n-                          Prefix => Make_Identifier (Sloc (N),\n-                            Chars => Chars (N))));\n-                     Set_Associated_Node (Prefix (N), Prefix (N2));\n-\n+                       Make_Explicit_Dereference (Loc,\n+                          Prefix =>\n+                            New_Occurrence_Of (Entity (Prefix (N2)), Loc)));\n                   elsif Nkind (Prefix (N2)) = N_Function_Call\n                     and then Is_Global (Entity (Name (Prefix (N2))))\n                   then\n                      Rewrite (N,\n-                       Make_Explicit_Dereference (Sloc (N),\n-                          Prefix => Make_Function_Call (Sloc (N),\n-                            Name  =>\n-                              Make_Identifier (Sloc (N),\n-                              Chars => Chars (N)))));\n-\n-                     Set_Associated_Node\n-                      (Name (Prefix (N)), Name (Prefix (N2)));\n+                       Make_Explicit_Dereference (Loc,\n+                          Prefix => Make_Function_Call (Loc,\n+                            Name =>\n+                              New_Occurrence_Of (Entity (Name (Prefix (N2))),\n+                                                 Loc))));\n \n                   else\n                      Set_Associated_Node (N, Empty);\n@@ -12073,7 +12067,6 @@ package body Sem_Ch12 is\n \n          else\n             declare\n-               Loc  : constant Source_Ptr := Sloc (N);\n                Qual : Node_Id := Empty;\n                Typ  : Entity_Id := Empty;\n                Nam  : Node_Id;"}, {"sha": "b9d66269c0748532e6df863f7837f57bd28e3c1b", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4342eda9e82d428a97d8b3226739ee8fdfb23742/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4342eda9e82d428a97d8b3226739ee8fdfb23742/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=4342eda9e82d428a97d8b3226739ee8fdfb23742", "patch": "@@ -3031,7 +3031,12 @@ package body Sem_Res is\n                return True;\n \n             when N_Op_Concat      =>\n-               return Static_Concatenation (Left_Opnd (N))\n+               --  Concatenation is static when both operands are static\n+               --  and the concatenation operator is a predefined one.\n+\n+               return Scope (Entity (N)) = Standard_Standard\n+                        and then\n+                      Static_Concatenation (Left_Opnd (N))\n                         and then\n                       Static_Concatenation (Right_Opnd (N));\n "}, {"sha": "c8ab92734c8783c240becef20ebb057636d0102f", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4342eda9e82d428a97d8b3226739ee8fdfb23742/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4342eda9e82d428a97d8b3226739ee8fdfb23742/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=4342eda9e82d428a97d8b3226739ee8fdfb23742", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -5161,9 +5161,7 @@ package body Sem_Util is\n \n    begin\n       Save_Interps (N, New_Prefix);\n-      Rewrite (N,\n-        Make_Explicit_Dereference (Sloc (N),\n-          Prefix => New_Prefix));\n+      Rewrite (N, Make_Explicit_Dereference (Sloc (N), Prefix => New_Prefix));\n \n       Set_Etype (N, Designated_Type (Etype (New_Prefix)));\n "}]}