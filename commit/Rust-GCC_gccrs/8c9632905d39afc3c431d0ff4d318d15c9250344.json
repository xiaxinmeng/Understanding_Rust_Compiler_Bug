{"sha": "8c9632905d39afc3c431d0ff4d318d15c9250344", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM5NjMyOTA1ZDM5YWZjM2M0MzFkMGZmNGQzMThkMTVjOTI1MDM0NA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-06-25T11:01:07Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-06-25T11:01:07Z"}, "message": "tree-vect-data-refs.c (vect_check_gather_scatter): Fail for reverse storage order accesses rather than asserting they cannot...\n\n2018-06-25  Richard Biener  <rguenther@suse.de>\n        Eric Botcazou  <ebotcazou@libertysurf.fr>\n\n\t* tree-vect-data-refs.c (vect_check_gather_scatter): Fail\n\tfor reverse storage order accesses rather than asserting\n\tthey cannot happen here.\n\n\t* gnat.dg/sso9.adb: New testcase.\n\t* gnat.dg/sso9_pkg.ads: Likewise.\n\nFrom-SVN: r262007", "tree": {"sha": "fdcd027e09d9df073024307aa4ef905b180ea483", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fdcd027e09d9df073024307aa4ef905b180ea483"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c9632905d39afc3c431d0ff4d318d15c9250344", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c9632905d39afc3c431d0ff4d318d15c9250344", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c9632905d39afc3c431d0ff4d318d15c9250344", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c9632905d39afc3c431d0ff4d318d15c9250344/comments", "author": null, "committer": null, "parents": [{"sha": "fd082a66f8be44616584164672eeb8e2779c5593", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd082a66f8be44616584164672eeb8e2779c5593", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd082a66f8be44616584164672eeb8e2779c5593"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "b813bd8564fadbfef294abeaebdb723bfe33fe4e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9632905d39afc3c431d0ff4d318d15c9250344/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9632905d39afc3c431d0ff4d318d15c9250344/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c9632905d39afc3c431d0ff4d318d15c9250344", "patch": "@@ -1,3 +1,9 @@\n+2018-06-25  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vect-data-refs.c (vect_check_gather_scatter): Fail\n+\tfor reverse storage order accesses rather than asserting\n+\tthey cannot happen here.\n+\n 2018-06-25  Tom de Vries  <tdevries@suse.de>\n \n \tPR debug/86257"}, {"sha": "c2da64239eb47d4271b8aa595cc69d25b93faa93", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9632905d39afc3c431d0ff4d318d15c9250344/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9632905d39afc3c431d0ff4d318d15c9250344/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8c9632905d39afc3c431d0ff4d318d15c9250344", "patch": "@@ -1,3 +1,8 @@\n+2018-06-25  Eric Botcazou  <ebotcazou@libertysurf.fr>\n+\n+\t* gnat.dg/sso9.adb: New testcase.\n+\t* gnat.dg/sso9_pkg.ads: Likewise.\n+\n 2018-06-25  Tom de Vries  <tdevries@suse.de>\n \n \tPR debug/86257"}, {"sha": "be35bdcc666d0fc86126336043481d1b78de9e13", "filename": "gcc/testsuite/gnat.dg/sso9.adb", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9632905d39afc3c431d0ff4d318d15c9250344/gcc%2Ftestsuite%2Fgnat.dg%2Fsso9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9632905d39afc3c431d0ff4d318d15c9250344/gcc%2Ftestsuite%2Fgnat.dg%2Fsso9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fsso9.adb?ref=8c9632905d39afc3c431d0ff4d318d15c9250344", "patch": "@@ -0,0 +1,10 @@\n+-- { dg-do compile }\n+-- { dg-options \"-O3 -gnatws\" }\n+\n+with SSO9_Pkg; use SSO9_Pkg;\n+\n+procedure SSO9 is\n+   A : Arr;\n+begin\n+   Proc (A);\n+end;"}, {"sha": "d7558973bd9611bbfa44ead9ae11ce9b795309a2", "filename": "gcc/testsuite/gnat.dg/sso9_pkg.ads", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9632905d39afc3c431d0ff4d318d15c9250344/gcc%2Ftestsuite%2Fgnat.dg%2Fsso9_pkg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9632905d39afc3c431d0ff4d318d15c9250344/gcc%2Ftestsuite%2Fgnat.dg%2Fsso9_pkg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fsso9_pkg.ads?ref=8c9632905d39afc3c431d0ff4d318d15c9250344", "patch": "@@ -0,0 +1,16 @@\n+with System;\n+\n+package SSO9_Pkg is\n+\n+   type Rec (D : Boolean := False) is record\n+      B : Boolean;\n+   end record;\n+\n+   for Rec'Bit_Order use System.High_Order_First;\n+   for Rec'Scalar_Storage_Order use System.High_Order_First;\n+\n+   type Arr is array (1 .. 16) of Rec;\n+\n+   procedure Proc (A : Arr);\n+\n+end SSO9_Pkg;"}, {"sha": "19ff78226b00769775db2fb2d733e3045cc34671", "filename": "gcc/tree-vect-data-refs.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9632905d39afc3c431d0ff4d318d15c9250344/gcc%2Ftree-vect-data-refs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9632905d39afc3c431d0ff4d318d15c9250344/gcc%2Ftree-vect-data-refs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-data-refs.c?ref=8c9632905d39afc3c431d0ff4d318d15c9250344", "patch": "@@ -3730,7 +3730,9 @@ vect_check_gather_scatter (gimple *stmt, loop_vec_info loop_vinfo,\n      that can be gimplified before the loop.  */\n   base = get_inner_reference (base, &pbitsize, &pbitpos, &off, &pmode,\n \t\t\t      &punsignedp, &reversep, &pvolatilep);\n-  gcc_assert (base && !reversep);\n+  if (reversep)\n+    return false;\n+\n   poly_int64 pbytepos = exact_div (pbitpos, BITS_PER_UNIT);\n \n   if (TREE_CODE (base) == MEM_REF)"}]}