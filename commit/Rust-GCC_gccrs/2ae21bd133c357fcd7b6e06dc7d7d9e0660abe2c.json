{"sha": "2ae21bd133c357fcd7b6e06dc7d7d9e0660abe2c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFlMjFiZDEzM2MzNTdmY2Q3YjZlMDZkYzdkN2Q5ZTA2NjBhYmUyYw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-08-15T08:34:40Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-08-15T08:34:40Z"}, "message": "[AArch64] Remove unneeded FSUB alternatives and add a new one\n\nThe floating-point subtraction patterns don't need to handle\nsubtraction of constants, since those go through the addition\npatterns instead.  There was a missing MOVPRFX alternative for\nFSUBR though.\n\n2019-08-15  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64-sve.md (*sub<SVE_F:mode>3): Remove immediate\n\tFADD and FSUB alternatives.  Add a MOVPRFX alternative for FSUBR.\n\nFrom-SVN: r274514", "tree": {"sha": "8a597f87da62736b9b03cf048fdaade3f756d26f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a597f87da62736b9b03cf048fdaade3f756d26f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ae21bd133c357fcd7b6e06dc7d7d9e0660abe2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ae21bd133c357fcd7b6e06dc7d7d9e0660abe2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ae21bd133c357fcd7b6e06dc7d7d9e0660abe2c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ae21bd133c357fcd7b6e06dc7d7d9e0660abe2c/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e176a613ef2eda92aa65736763a562dc42a50fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e176a613ef2eda92aa65736763a562dc42a50fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e176a613ef2eda92aa65736763a562dc42a50fe"}], "stats": {"total": 30, "additions": 16, "deletions": 14}, "files": [{"sha": "62376a5f43ff303f7afd4d5e3ae035d9ccf8f7ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ae21bd133c357fcd7b6e06dc7d7d9e0660abe2c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ae21bd133c357fcd7b6e06dc7d7d9e0660abe2c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ae21bd133c357fcd7b6e06dc7d7d9e0660abe2c", "patch": "@@ -1,3 +1,8 @@\n+2019-08-15  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64-sve.md (*sub<SVE_F:mode>3): Remove immediate\n+\tFADD and FSUB alternatives.  Add a MOVPRFX alternative for FSUBR.\n+\n 2019-08-15  Richard Sandiford  <richard.sandiford@arm.com>\n \t    Kugan Vivekanandarajah  <kugan.vivekanandarajah@linaro.org>\n "}, {"sha": "fa7f899bd9dc8629b64f4663c5585fe922e8fc3b", "filename": "gcc/config/aarch64/aarch64-sve.md", "status": "modified", "additions": 11, "deletions": 14, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ae21bd133c357fcd7b6e06dc7d7d9e0660abe2c/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ae21bd133c357fcd7b6e06dc7d7d9e0660abe2c/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md?ref=2ae21bd133c357fcd7b6e06dc7d7d9e0660abe2c", "patch": "@@ -2878,34 +2878,31 @@\n ;; ---- [FP] Subtraction\n ;; -------------------------------------------------------------------------\n ;; Includes:\n-;; - FADD\n ;; - FSUB\n ;; - FSUBR\n ;; -------------------------------------------------------------------------\n \n ;; Predicated floating-point subtraction.\n (define_insn_and_split \"*sub<mode>3\"\n-  [(set (match_operand:SVE_F 0 \"register_operand\" \"=w, w, w, w\")\n+  [(set (match_operand:SVE_F 0 \"register_operand\" \"=w, w, ?&w\")\n \t(unspec:SVE_F\n-\t  [(match_operand:<VPRED> 1 \"register_operand\" \"Upl, Upl, Upl, Upl\")\n-\t   (match_operand:SI 4 \"aarch64_sve_gp_strictness\" \"i, i, i, Z\")\n-\t   (match_operand:SVE_F 2 \"aarch64_sve_float_arith_operand\" \"0, 0, vsA, w\")\n-\t   (match_operand:SVE_F 3 \"aarch64_sve_float_arith_with_sub_operand\" \"vsA, vsN, 0, w\")]\n+\t  [(match_operand:<VPRED> 1 \"register_operand\" \"Upl, Upl, Upl\")\n+\t   (match_operand:SI 4 \"aarch64_sve_gp_strictness\" \"i, Z, i\")\n+\t   (match_operand:SVE_F 2 \"aarch64_sve_float_arith_operand\" \"vsA, w, vsA\")\n+\t   (match_operand:SVE_F 3 \"register_operand\" \"0, w, 0\")]\n \t  UNSPEC_COND_FSUB))]\n-  \"TARGET_SVE\n-   && (register_operand (operands[2], <MODE>mode)\n-       || register_operand (operands[3], <MODE>mode))\"\n+  \"TARGET_SVE\"\n   \"@\n-   fsub\\t%0.<Vetype>, %1/m, %0.<Vetype>, #%3\n-   fadd\\t%0.<Vetype>, %1/m, %0.<Vetype>, #%N3\n    fsubr\\t%0.<Vetype>, %1/m, %0.<Vetype>, #%2\n-   #\"\n+   #\n+   movprfx\\t%0, %3\\;fsubr\\t%0.<Vetype>, %1/m, %0.<Vetype>, #%2\"\n   ; Split the unpredicated form after reload, so that we don't have\n   ; the unnecessary PTRUE.\n   \"&& reload_completed\n-   && register_operand (operands[2], <MODE>mode)\n-   && register_operand (operands[3], <MODE>mode)\"\n+   && register_operand (operands[2], <MODE>mode)\"\n   [(set (match_dup 0) (minus:SVE_F (match_dup 2) (match_dup 3)))]\n+  \"\"\n+  [(set_attr \"movprfx\" \"*,*,yes\")]\n )\n \n ;; Predicated floating-point subtraction from a constant, merging with the"}]}