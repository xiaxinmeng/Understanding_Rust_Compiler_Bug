{"sha": "9b4f00dd3f799337d8b8ef5e79f5a682c8059ab9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWI0ZjAwZGQzZjc5OTMzN2Q4YjhlZjVlNzlmNWE2ODJjODA1OWFiOQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-03-03T11:06:26Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-03-03T11:06:26Z"}, "message": "libstdc++: Micro-optimisations for lexicographical_compare_three_way\n\nAs noted in LWG 3410 the specification in the C++20 draft performs more\niterator comparisons than necessary when the end of either range is\nreached. Our implementation followed that specification. This removes\nthe redundant comparisons so that we do no unnecessary work as soon as\nwe find that we've reached the end of either range.\n\nThe odd-looking return statement is because it generates better code\nthan the original version that copied the global constants.\n\n\t* include/bits/stl_algobase.h (lexicographical_compare_three_way):\n\tAvoid redundant iterator comparisons (LWG 3410).", "tree": {"sha": "b443d9547c4ac12c012084225ec211a52d9d5695", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b443d9547c4ac12c012084225ec211a52d9d5695"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9b4f00dd3f799337d8b8ef5e79f5a682c8059ab9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b4f00dd3f799337d8b8ef5e79f5a682c8059ab9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b4f00dd3f799337d8b8ef5e79f5a682c8059ab9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b4f00dd3f799337d8b8ef5e79f5a682c8059ab9/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b07e4e7c7520ca3e798f514dec0711eea2c027be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b07e4e7c7520ca3e798f514dec0711eea2c027be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b07e4e7c7520ca3e798f514dec0711eea2c027be"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "b8cf579fdb3d6693329de944a6690d6b98ceb02f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b4f00dd3f799337d8b8ef5e79f5a682c8059ab9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b4f00dd3f799337d8b8ef5e79f5a682c8059ab9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=9b4f00dd3f799337d8b8ef5e79f5a682c8059ab9", "patch": "@@ -1,3 +1,8 @@\n+2020-03-03  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stl_algobase.h (lexicographical_compare_three_way):\n+\tAvoid redundant iterator comparisons (LWG 3410).\n+\n 2020-03-02  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/93972"}, {"sha": "4b63086965db29bbf8c1920f8ef80cb2b24e8e64", "filename": "libstdc++-v3/include/bits/stl_algobase.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9b4f00dd3f799337d8b8ef5e79f5a682c8059ab9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9b4f00dd3f799337d8b8ef5e79f5a682c8059ab9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_algobase.h?ref=9b4f00dd3f799337d8b8ef5e79f5a682c8059ab9", "patch": "@@ -1711,15 +1711,16 @@ _GLIBCXX_BEGIN_NAMESPACE_ALGO\n \t\treturn __lencmp;\n \t      }\n #endif // is_constant_evaluated\n-      while (__first1 != __last1 && __first2 != __last2)\n+      while (__first1 != __last1)\n \t{\n+\t  if (__first2 == __last2)\n+\t    return strong_ordering::greater;\n \t  if (auto __cmp = __comp(*__first1, *__first2); __cmp != 0)\n \t    return __cmp;\n \t  ++__first1;\n \t  ++__first2;\n \t}\n-      return __first1 != __last1 ? strong_ordering::greater\n-\t: __first2 != __last2 ? strong_ordering::less : strong_ordering::equal;\n+      return (__first2 == __last2) <=> true; // See PR 94006\n     }\n \n   template<typename _InputIter1, typename _InputIter2>"}]}