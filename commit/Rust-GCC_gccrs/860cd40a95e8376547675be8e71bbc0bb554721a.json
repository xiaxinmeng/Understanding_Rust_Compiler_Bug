{"sha": "860cd40a95e8376547675be8e71bbc0bb554721a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODYwY2Q0MGE5NWU4Mzc2NTQ3Njc1YmU4ZTcxYmJjMGJiNTU0NzIxYQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "2000-08-03T07:05:28Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-08-03T07:05:28Z"}, "message": "* pa.md (shadd height reduction patterns/splitters): Remove.\n\nFrom-SVN: r35442", "tree": {"sha": "58440636afecf82a9e7498bce5d88f19784d32eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58440636afecf82a9e7498bce5d88f19784d32eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/860cd40a95e8376547675be8e71bbc0bb554721a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/860cd40a95e8376547675be8e71bbc0bb554721a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/860cd40a95e8376547675be8e71bbc0bb554721a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/860cd40a95e8376547675be8e71bbc0bb554721a/comments", "author": null, "committer": null, "parents": [{"sha": "af6ca671a66f1650b291a4766e3547b8ce10e309", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af6ca671a66f1650b291a4766e3547b8ce10e309", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af6ca671a66f1650b291a4766e3547b8ce10e309"}], "stats": {"total": 71, "additions": 4, "deletions": 67}, "files": [{"sha": "9965f9559b8f9a716fcff11079fc78e4eea378fb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860cd40a95e8376547675be8e71bbc0bb554721a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860cd40a95e8376547675be8e71bbc0bb554721a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=860cd40a95e8376547675be8e71bbc0bb554721a", "patch": "@@ -1,3 +1,7 @@\n+Thu Aug  3 01:05:32 2000  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* pa.md (shadd height reduction patterns/splitters): Remove.\n+\n 2000-08-02  Jim Wilson  <wilson@cygnus.com>\n \n \t* config/ia64/ia64-protos.h (flag_ssa): Declare."}, {"sha": "f9f723097c0b022dd75c65517ecb32c9b3800dde", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 0, "deletions": 67, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/860cd40a95e8376547675be8e71bbc0bb554721a/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/860cd40a95e8376547675be8e71bbc0bb554721a/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=860cd40a95e8376547675be8e71bbc0bb554721a", "patch": "@@ -5166,73 +5166,6 @@\n   [(set_attr \"type\" \"binary\")\n    (set_attr \"length\" \"4\")])\n \n-;; This anonymous pattern and splitter wins because it reduces the latency\n-;; of the shadd sequence without increasing the latency of the shift.\n-;;\n-;; We want to make sure and split up the operations for the scheduler since\n-;; these instructions can (and should) schedule independently.\n-;;\n-;; It would be clearer if combine used the same operator for both expressions,\n-;; it's somewhat confusing to have a mult in ine operation and an ashift\n-;; in the other.\n-;;\n-;; If this pattern is not split before register allocation, then we must expose\n-;; the fact that operand 4 is set before operands 1, 2 and 3 have been read.\n-(define_insn \"\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(plus:SI (mult:SI (match_operand:SI 2 \"register_operand\" \"r\")\n-\t\t\t  (match_operand:SI 3 \"shadd_operand\" \"\"))\n-\t\t (match_operand:SI 1 \"register_operand\" \"r\")))\n-   (set (match_operand:SI 4 \"register_operand\" \"=&r\")\n-\t(ashift:SI (match_dup 2)\n-\t\t   (match_operand:SI 5 \"const_int_operand\" \"i\")))]\n-  \"(INTVAL (operands[5]) == exact_log2 (INTVAL (operands[3]))\n-    && ! (reg_overlap_mentioned_p (operands[4], operands[2])))\"\n-  \"#\"\n-  [(set_attr \"type\" \"binary\")\n-   (set_attr \"length\" \"8\")])\n-\n-(define_split\n-  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-\t(plus:SI (mult:SI (match_operand:SI 2 \"register_operand\" \"r\")\n-\t\t\t  (match_operand:SI 3 \"shadd_operand\" \"\"))\n-\t\t (match_operand:SI 1 \"register_operand\" \"r\")))\n-   (set (match_operand:SI 4 \"register_operand\" \"=&r\")\n-\t(ashift:SI (match_dup 2)\n-\t\t   (match_operand:SI 5 \"const_int_operand\" \"i\")))]\n-  \"INTVAL (operands[5]) == exact_log2 (INTVAL (operands[3]))\"\n-  [(set (match_dup 4) (ashift:SI (match_dup 2) (match_dup 5)))\n-   (set (match_dup 0) (plus:SI (mult:SI (match_dup 2) (match_dup 3))\n-\t\t\t       (match_dup 1)))]\n-  \"\")\n-\n-(define_insn \"\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(plus:DI (mult:DI (match_operand:DI 2 \"register_operand\" \"r\")\n-\t\t\t  (match_operand:DI 3 \"shadd_operand\" \"\"))\n-\t\t (match_operand:DI 1 \"register_operand\" \"r\")))\n-   (set (match_operand:DI 4 \"register_operand\" \"=&r\")\n-\t(ashift:DI (match_dup 2)\n-\t\t   (match_operand:DI 5 \"const_int_operand\" \"i\")))]\n-  \"TARGET_64BIT && INTVAL (operands[5]) == exact_log2 (INTVAL (operands[3]))\"\n-  \"#\"\n-  [(set_attr \"type\" \"binary\")\n-   (set_attr \"length\" \"8\")])\n-\n-(define_split\n-  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(plus:DI (mult:DI (match_operand:DI 2 \"register_operand\" \"r\")\n-\t\t\t  (match_operand:DI 3 \"shadd_operand\" \"\"))\n-\t\t (match_operand:DI 1 \"register_operand\" \"r\")))\n-   (set (match_operand:DI 4 \"register_operand\" \"=&r\")\n-\t(ashift:DI (match_dup 2)\n-\t\t   (match_operand:DI 5 \"const_int_operand\" \"i\")))]\n-  \"TARGET_64BIT && INTVAL (operands[5]) == exact_log2 (INTVAL (operands[3]))\"\n-  [(set (match_dup 4) (ashift:DI (match_dup 2) (match_dup 5)))\n-   (set (match_dup 0) (plus:DI (mult:DI (match_dup 2) (match_dup 3))\n-\t\t\t       (match_dup 1)))]\n-  \"\")\n-\n (define_expand \"ashlsi3\"\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(ashift:SI (match_operand:SI 1 \"lhs_lshift_operand\" \"\")"}]}