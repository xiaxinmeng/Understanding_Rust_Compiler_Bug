{"sha": "6aea3c3720b89f43b3fd6553a8a70fa5fc26dd4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFlYTNjMzcyMGI4OWY0M2IzZmQ2NTUzYThhNzBmYTVmYzI2ZGQ0Yg==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2017-05-22T12:16:21Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2017-05-22T12:16:21Z"}, "message": "Simplify config/avr/genmultilib.awk.\n\ngcc/\nSimplify config/avr/genmultilib.awk.\n\t* config/avr/t-avr (AWK) [t-multilib]: Remove \"-v FORMAT=Makefile\"\n\tcommand option from $(AWK) call.\n\t* config/avr/genmultilib.awk: Simplify and rewrite so that it\n\tgenerates MULTILIB_REQUIRED instead of MULTILIB_EXCEPTIONS.\n\t[FORMAT]: Remove handling of variable.\n\t* config/avr/t-multilib: Regenerate.\n\nFrom-SVN: r248332", "tree": {"sha": "afd081d20353f1f1d3646fb23787b84ea6571482", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/afd081d20353f1f1d3646fb23787b84ea6571482"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aea3c3720b89f43b3fd6553a8a70fa5fc26dd4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aea3c3720b89f43b3fd6553a8a70fa5fc26dd4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aea3c3720b89f43b3fd6553a8a70fa5fc26dd4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aea3c3720b89f43b3fd6553a8a70fa5fc26dd4b/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b205ea1bdc612cd50a4a1cb28f0b303db2815c8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b205ea1bdc612cd50a4a1cb28f0b303db2815c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b205ea1bdc612cd50a4a1cb28f0b303db2815c8"}], "stats": {"total": 218, "additions": 77, "deletions": 141}, "files": [{"sha": "13845877a026fd2a63268fe0d5c59367f839cf13", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aea3c3720b89f43b3fd6553a8a70fa5fc26dd4b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aea3c3720b89f43b3fd6553a8a70fa5fc26dd4b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6aea3c3720b89f43b3fd6553a8a70fa5fc26dd4b", "patch": "@@ -1,3 +1,12 @@\n+2017-05-22  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/t-avr (AWK) [t-multilib]: Remove \"-v FORMAT=Makefile\"\n+\tcommand option from $(AWK) call.\n+\t* config/avr/genmultilib.awk: Simplify and rewrite so that it\n+\tgenerates MULTILIB_REQUIRED instead of MULTILIB_EXCEPTIONS.\n+\t[FORMAT]: Remove handling of variable.\n+\t* config/avr/t-multilib: Regenerate.\n+\n 2017-05-22  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* ipa-inline-analysis.c (inline_summary::reset): Do not reset"}, {"sha": "ff93c1b7638cad3464854e23eb35e9954771e3ae", "filename": "gcc/config/avr/genmultilib.awk", "status": "modified", "additions": 47, "deletions": 122, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aea3c3720b89f43b3fd6553a8a70fa5fc26dd4b/gcc%2Fconfig%2Favr%2Fgenmultilib.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aea3c3720b89f43b3fd6553a8a70fa5fc26dd4b/gcc%2Fconfig%2Favr%2Fgenmultilib.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Fgenmultilib.awk?ref=6aea3c3720b89f43b3fd6553a8a70fa5fc26dd4b", "patch": "@@ -22,23 +22,28 @@\n # Representation that is understood by GCC's multilib Machinery.\n #\n # The Script works as a Filter from STDIN to STDOUT.\n-# \n-# FORMAT = \"Makefile\": Generate Makefile Snipet that sets some\n-#                      MULTILIB_* Variables as needed.\n+# It generates a Makefile Snippet that sets some\n+# MULTILIB_* Variables as needed.\n #\n ##################################################################\n \n BEGIN {\n     FS =\"[(, \\t]+\"\n     option[\"\"] = \"\"\n-    tiny_stack[\"\"] = 1\n     comment = 1\n-    n_mcu = 0\n-    n_cores = 0\n \n-    mtiny[0] = \"\"\n-    mtiny[1] = \"tiny-stack\"\n-    option[\"tiny-stack\"] = \"msp8\"\n+    dir_tiny = \"tiny-stack\"\n+    opt_tiny = \"msp8\"\n+\n+    #    awk Variable         Makefile Variable  \n+    #  ------------------------------------------\n+    #    m_options     <->    MULTILIB_OPTIONS\n+    #    m_dirnames    <->    MULTILIB_DIRNAMES\n+    #    m_required    <->    MULTILIB_REQUIRED\n+    m_sep = \"\"\n+    m_options    = \"\\nMULTILIB_OPTIONS = \"\n+    m_dirnames   = \"\\nMULTILIB_DIRNAMES =\"\n+    m_required   = \"\\nMULTILIB_REQUIRED =\"\n }\n \n ##################################################################\n@@ -51,14 +56,11 @@ BEGIN {\n \tnext\n     else if (comment == 1)\n     {\n-\tif (FORMAT == \"Makefile\")\n-\t{\n-\t    print \"# Auto-generated Makefile Snip\"\n-\t    print \"# Generated by    : ./gcc/config/avr/genmultilib.awk\"\n-\t    print \"# Generated from  : ./gcc/config/avr/avr-mcus.def\"\n-\t    print \"# Used by         : tmake_file from Makefile and genmultilib\"\n-\t    print \"\"\n-\t}\n+\tprint \"# Auto-generated Makefile Snip\"\n+\tprint \"# Generated by    : ./gcc/config/avr/genmultilib.awk\"\n+\tprint \"# Generated from  : ./gcc/config/avr/avr-mcus.def\"\n+\tprint \"# Used by         : tmake_file from Makefile and genmultilib\"\n+\tprint \"\"\n     }\n \n     comment = 2;\n@@ -74,12 +76,10 @@ BEGIN {\n }\n \n ##################################################################\n-# Run over all AVR_MCU Lines and gather Information:\n-# cores[]     : Enumerates the Cores (avr2, avr25, ...)\n-# mcu[]       : Enumerates the Devices\n-# tiny_stack[]: Maps Core/Device to 0 (2-byte SP) or 1 (1-byte SP)\n-# option[]    : Maps Core/Device to the mmcu= option to get it\n-# toCore[]    : Maps Device to its Core\n+# Run over all AVR_MCU Lines.  If we encounter a required multilib\n+# variant, add according combination of options to m_required,\n+# but onyl once.  Add encountered cores to m_dirnames and\n+# according -mmcu= options to m_options.\n ##################################################################\n \n /^AVR_MCU/ {\n@@ -94,128 +94,53 @@ BEGIN {\n \tif (core == \"avr1\")\n \t    next\n \n-\tcores[n_cores] = core\n-\tn_cores++\n-\ttiny_stack[core] = 0\n \toption[core] = \"mmcu=\" core\n \n+\tm_options  = m_options m_sep option[core]\n+\tm_dirnames = m_dirnames \" \" core\n+\tm_sep = \"/\"\n+\n \tnext\n     }\n \n     # avr1 is supported for Assembler only:  Its Devices are ignored\n     if (core == \"avr1\")\n \tnext\n \n+    opts = option[core]\n+\n     # split device specific feature list\n     n = split($4,dev_attribute,\"|\")\n \n-    # set tiny_stack false by default\n-    tiny_stack[name] = 0\n     for (i=1; i <= n; i++)\n-      if (dev_attribute[i] == \"AVR_SHORT_SP\") {\n-        tiny_stack[name]  = 1\n-        break\n-      }\n-\n-    mcu[n_mcu] = name\n-    n_mcu++\n-    option[name]      = \"mmcu=\" name\n-    toCore[name]      = core\n-\n-    if (tiny_stack[name] == 1)\n-\ttiny_stack[core] = 1\n-}\n-\n-##################################################################\n-# \n-# We gathered all the Information, now build/output the following:\n-#\n-#    awk Variable         target Variable          FORMAT\n-#  -----------------------------------------------------------\n-#    m_options     <->    MULTILIB_OPTIONS         Makefile\n-#    m_dirnames    <->    MULTILIB_DIRNAMES           \"\n-#    m_exceptions  <->    MULTILIB_EXCEPTIONS         \"\n-#\n-##################################################################\n-\n-END {\n-    m_options    = \"\\nMULTILIB_OPTIONS = \"\n-    m_dirnames   = \"\\nMULTILIB_DIRNAMES =\"\n-    m_exceptions = \"\\nMULTILIB_EXCEPTIONS =\"\n-\n-    ##############################################################\n-    # Compose MULTILIB_OPTIONS.  This represents the Cross-Product\n-    #    (avr2, avr25, ...) x msp8\n-\n-    sep = \"\"\n-    for (c = 0; c < n_cores; c++)\n     {\n-\tm_options = m_options sep option[cores[c]]\n-\tsep = \"/\"\n+      if (dev_attribute[i] == \"AVR_SHORT_SP\")\n+        opts = opts \"/\" opt_tiny\n     }\n \n-    # The ... x msp8\n-    m_options = m_options \" \" option[mtiny[1]]\n-\n-    ##############################################################\n-    # Map Device to its multilib\n-\n-    for (t = 0; t < n_mcu; t++)\n+    if (!have[opts])\n     {\n-\tcore = toCore[mcu[t]]\n-\t\n-\tline = option[core] \":\" option[mcu[t]]\n-\tgsub (\"=\", \"?\", line)\n-\tgsub (\":\", \"=\", line)\n+\thave[opts] = 1\n+\t# Some special handling for the default mmcu: Remove a\n+\t# leading \"mmcu=avr2/\" in order not to confuse genmultilib.\n+\topts = gensub (/mmcu=avr2\\//, \"\", 1, opts)\n+\tif (opts != \"mmcu=avr2\")\n+\t    m_required = m_required \" \\\\\\n\\t\" opts\n     }\n+}\n \n-    ####################################################################\n-    # Compose MULTILIB_DIRNAMES and MULTILIB_EXEPTIONS\n-\n-    n_mtiny = 2\n-    for (t = 0; t < n_mtiny; t++)\n-\tfor (c = -1; c < n_cores; c++)\n-\t{\n-\t    if (c == -1)\n-\t\tcore = \"\"\n-\t    else\n-\t\tcore = cores[c]\n-\n-\t    # The Directory Name for this multilib\n-\n-\t    if (core != \"\" && mtiny[t] != \"\")\n-\t    {\n-\t\tmdir = core \"/\" mtiny[t]\n-\t\tmopt = option[core] \"/\" option[mtiny[t]]\n-\t    }\n-\t    else\n-\t    {\n-\t\tmdir = core mtiny[t]\n-\t\tmopt = option[core] option[mtiny[t]]\n-\t    }\n-\n-\t    if (core != \"\" && tiny_stack[core] == 0 && mtiny[t] != \"\")\n-\t    {\n-\t\t# There's not a single SP = 8 Devices for this Core:\n-\t\t# Don't build respective multilib\n-\t\tm_exceptions = m_exceptions \" \\\\\\n\\t\" mopt\n-\t\tcontinue\n-\t    }\n-\n-\t    if (core != \"avr2\" || mtiny[t] == \"\")\n-\t\tm_dirnames = m_dirnames \" \" mdir\n-\t}\n+##################################################################\n+# \n+##################################################################\n \n+END {\n     ############################################################\n     # Output that Stuff\n     ############################################################\n \n-    if (FORMAT == \"Makefile\")\n-    {\n-\t# Intended Target: ./gcc/config/avr/t-multilib\n+    # Intended Target: ./gcc/config/avr/t-multilib\n \n-\tprint m_options\n-\tprint m_dirnames\n-\tprint m_exceptions\n-    }\n+    print m_options  \" \" opt_tiny\n+    print m_dirnames \" \" dir_tiny\n+    print m_required\n }"}, {"sha": "251e52edc370837c9cfd976fd6eff22c5b8085be", "filename": "gcc/config/avr/t-avr", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aea3c3720b89f43b3fd6553a8a70fa5fc26dd4b/gcc%2Fconfig%2Favr%2Ft-avr", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aea3c3720b89f43b3fd6553a8a70fa5fc26dd4b/gcc%2Fconfig%2Favr%2Ft-avr", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Ft-avr?ref=6aea3c3720b89f43b3fd6553a8a70fa5fc26dd4b", "patch": "@@ -89,14 +89,13 @@ install-device-specs: s-device-specs installdirs\n \t\t$(INSTALL_DATA) $${file} $(DESTDIR)$(libsubdir)/$${file}; \\\n \tdone\n \n-# Map -mmcu= to the right multilib variant\n+# Get multilib layout\n # MULTILIB_OPTIONS\n # MULTILIB_DIRNAMES\n-# MULTILIB_EXCEPTIONS\n-# MULTILIB_MATCHES\n+# MULTILIB_REQUIRED\n \n s-mlib: $(srcdir)/config/avr/t-multilib\n \n $(srcdir)/config/avr/t-multilib: $(srcdir)/config/avr/genmultilib.awk \\\n \t\t\t\t $(AVR_MCUS)\n-\t$(AWK) -f $< -v FORMAT=Makefile   $< $(AVR_MCUS) > $@\n+\t$(AWK) -f $< $< $(AVR_MCUS) > $@"}, {"sha": "dbbf3bcb5cb37ea88fb8ab65a8eb970acf2ac682", "filename": "gcc/config/avr/t-multilib", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aea3c3720b89f43b3fd6553a8a70fa5fc26dd4b/gcc%2Fconfig%2Favr%2Ft-multilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aea3c3720b89f43b3fd6553a8a70fa5fc26dd4b/gcc%2Fconfig%2Favr%2Ft-multilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Ft-multilib?ref=6aea3c3720b89f43b3fd6553a8a70fa5fc26dd4b", "patch": "@@ -23,19 +23,22 @@\n \n MULTILIB_OPTIONS = mmcu=avr2/mmcu=avr25/mmcu=avr3/mmcu=avr31/mmcu=avr35/mmcu=avr4/mmcu=avr5/mmcu=avr51/mmcu=avr6/mmcu=avrxmega2/mmcu=avrxmega4/mmcu=avrxmega5/mmcu=avrxmega6/mmcu=avrxmega7/mmcu=avrtiny msp8\n \n-MULTILIB_DIRNAMES =  avr2 avr25 avr3 avr31 avr35 avr4 avr5 avr51 avr6 avrxmega2 avrxmega4 avrxmega5 avrxmega6 avrxmega7 avrtiny tiny-stack avr25/tiny-stack\n+MULTILIB_DIRNAMES = avr2 avr25 avr3 avr31 avr35 avr4 avr5 avr51 avr6 avrxmega2 avrxmega4 avrxmega5 avrxmega6 avrxmega7 avrtiny tiny-stack\n \n-MULTILIB_EXCEPTIONS = \\\n-\tmmcu=avr3/msp8 \\\n-\tmmcu=avr31/msp8 \\\n-\tmmcu=avr35/msp8 \\\n-\tmmcu=avr4/msp8 \\\n-\tmmcu=avr5/msp8 \\\n-\tmmcu=avr51/msp8 \\\n-\tmmcu=avr6/msp8 \\\n-\tmmcu=avrxmega2/msp8 \\\n-\tmmcu=avrxmega4/msp8 \\\n-\tmmcu=avrxmega5/msp8 \\\n-\tmmcu=avrxmega6/msp8 \\\n-\tmmcu=avrxmega7/msp8 \\\n-\tmmcu=avrtiny/msp8\n+MULTILIB_REQUIRED = \\\n+\tmsp8 \\\n+\tmmcu=avr25 \\\n+\tmmcu=avr25/msp8 \\\n+\tmmcu=avr3 \\\n+\tmmcu=avr31 \\\n+\tmmcu=avr35 \\\n+\tmmcu=avr4 \\\n+\tmmcu=avr5 \\\n+\tmmcu=avr51 \\\n+\tmmcu=avr6 \\\n+\tmmcu=avrxmega2 \\\n+\tmmcu=avrxmega4 \\\n+\tmmcu=avrxmega5 \\\n+\tmmcu=avrxmega6 \\\n+\tmmcu=avrxmega7 \\\n+\tmmcu=avrtiny"}]}