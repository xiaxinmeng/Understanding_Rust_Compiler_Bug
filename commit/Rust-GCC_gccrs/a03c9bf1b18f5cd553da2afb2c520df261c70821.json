{"sha": "a03c9bf1b18f5cd553da2afb2c520df261c70821", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTAzYzliZjFiMThmNWNkNTUzZGEyYWZiMmM1MjBkZjI2MWM3MDgyMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-07-01T17:59:25Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-07-01T17:59:25Z"}, "message": "c-opts.c (c_common_post_options): Highest ABI level is now 10.\n\ngcc/c-family/\n\t* c-opts.c (c_common_post_options): Highest ABI level is now 10.\ngcc/cp/\n\t* mangle.c (write_CV_qualifiers_for_type, write_nested_name):\n\tAttribute mangling is now -fabi-version=10.\n\nFrom-SVN: r225271", "tree": {"sha": "ff23f8aab5d68af99bd88e7c3a017c0b99a60a5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff23f8aab5d68af99bd88e7c3a017c0b99a60a5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a03c9bf1b18f5cd553da2afb2c520df261c70821", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a03c9bf1b18f5cd553da2afb2c520df261c70821", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a03c9bf1b18f5cd553da2afb2c520df261c70821", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a03c9bf1b18f5cd553da2afb2c520df261c70821/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d68f848b12654cb359951eb24608d9e1b5f05e64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d68f848b12654cb359951eb24608d9e1b5f05e64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d68f848b12654cb359951eb24608d9e1b5f05e64"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "87c8d9477e3ea0600c683bdeb5de35e7e56149ac", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03c9bf1b18f5cd553da2afb2c520df261c70821/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03c9bf1b18f5cd553da2afb2c520df261c70821/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=a03c9bf1b18f5cd553da2afb2c520df261c70821", "patch": "@@ -1,3 +1,7 @@\n+2015-07-01  Jason Merrill  <jason@redhat.com>\n+\n+\t* c-opts.c (c_common_post_options): Highest ABI level is now 10.\n+\n 2015-06-30  Edward Smith-Rowland  <3dw4rd@verizon.net>\n \n \tImplement N4197 - Adding u8 character literals"}, {"sha": "195045e961e60b2e59b64857c6326480f62b9a36", "filename": "gcc/c-family/c-opts.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03c9bf1b18f5cd553da2afb2c520df261c70821/gcc%2Fc-family%2Fc-opts.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03c9bf1b18f5cd553da2afb2c520df261c70821/gcc%2Fc-family%2Fc-opts.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-opts.c?ref=a03c9bf1b18f5cd553da2afb2c520df261c70821", "patch": "@@ -887,7 +887,7 @@ c_common_post_options (const char **pfilename)\n   /* Change flag_abi_version to be the actual current ABI level for the\n      benefit of c_cpp_builtins.  */\n   if (flag_abi_version == 0)\n-    flag_abi_version = 9;\n+    flag_abi_version = 10;\n \n   /* Set C++ standard to C++98 if not specified on the command line.  */\n   if (c_dialect_cxx () && cxx_dialect == cxx_unset)"}, {"sha": "6b2ccbc5239dd1b46e99b139a6db7b1d61800c49", "filename": "gcc/common.opt", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03c9bf1b18f5cd553da2afb2c520df261c70821/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03c9bf1b18f5cd553da2afb2c520df261c70821/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=a03c9bf1b18f5cd553da2afb2c520df261c70821", "patch": "@@ -838,9 +838,12 @@ Driver Undocumented\n ;    function types with function-cv-qualifiers.\n ;    First selectable in G++ 4.9 and default in G++ 5.\n ;\n-; 9: The version of the ABI that mangles attributes that affect type\n-;    identity, such as ia32 calling convention attributes (stdcall, etc.)\n-;    Default in G++ 6 (set in c_common_post_options).\n+; 9: The version of the ABI that corrects the alignment of nullptr_t.\n+;    First selectable and default in G++ 5.2.\n+;\n+; 10: The version of the ABI that mangles attributes that affect type\n+;     identity, such as ia32 calling convention attributes (stdcall, etc.)\n+;     Default in G++ 6 (set in c_common_post_options).\n ;\n ; Additional positive integers will be assigned as new versions of\n ; the ABI become the default version of the ABI."}, {"sha": "3073d7be85900172c8736852eec1bdc5403ba933", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03c9bf1b18f5cd553da2afb2c520df261c70821/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03c9bf1b18f5cd553da2afb2c520df261c70821/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a03c9bf1b18f5cd553da2afb2c520df261c70821", "patch": "@@ -1,5 +1,8 @@\n 2015-07-01  Jason Merrill  <jason@redhat.com>\n \n+\t* mangle.c (write_CV_qualifiers_for_type, write_nested_name):\n+\tAttribute mangling is now -fabi-version=10.\n+\n \tPR c++/65945\n \t* decl.c (cxx_init_decl_processing): Set TYPE_ALIGN of nullptr_t.\n \t* class.c (layout_nonempty_base_or_field): Warn if that affects"}, {"sha": "cf260c419e17cd5a9c5991e7ecaecd95c7ade597", "filename": "gcc/cp/mangle.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03c9bf1b18f5cd553da2afb2c520df261c70821/gcc%2Fcp%2Fmangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03c9bf1b18f5cd553da2afb2c520df261c70821/gcc%2Fcp%2Fmangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmangle.c?ref=a03c9bf1b18f5cd553da2afb2c520df261c70821", "patch": "@@ -984,7 +984,7 @@ write_nested_name (const tree decl)\n       write_template_prefix (decl);\n       write_template_args (TI_ARGS (template_info));\n     }\n-  else if ((!abi_version_at_least (9) || TREE_CODE (decl) == TYPE_DECL)\n+  else if ((!abi_version_at_least (10) || TREE_CODE (decl) == TYPE_DECL)\n \t   && TREE_CODE (TREE_TYPE (decl)) == TYPENAME_TYPE)\n     {\n       tree name = TYPENAME_TYPE_FULLNAME (TREE_TYPE (decl));\n@@ -2196,7 +2196,7 @@ write_CV_qualifiers_for_type (const tree type)\n      We don't do this with classes and enums because their attributes\n      are part of their definitions, not something added on.  */\n \n-  if (abi_version_at_least (9) && !OVERLOAD_TYPE_P (type))\n+  if (abi_version_at_least (10) && !OVERLOAD_TYPE_P (type))\n     {\n       auto_vec<tree> vec;\n       for (tree a = TYPE_ATTRIBUTES (type); a; a = TREE_CHAIN (a))\n@@ -2230,7 +2230,7 @@ write_CV_qualifiers_for_type (const tree type)\n \t    }\n \n \t  ++num_qualifiers;\n-\t  if (abi_version_crosses (9))\n+\t  if (abi_version_crosses (10))\n \t    G.need_abi_warning = true;\n \t}\n     }"}, {"sha": "6a695b9f580051cc28fd679346adba21b7246aa4", "filename": "gcc/testsuite/g++.dg/abi/macro0.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a03c9bf1b18f5cd553da2afb2c520df261c70821/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmacro0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a03c9bf1b18f5cd553da2afb2c520df261c70821/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmacro0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fabi%2Fmacro0.C?ref=a03c9bf1b18f5cd553da2afb2c520df261c70821", "patch": "@@ -1,6 +1,6 @@\n // This testcase will need to be kept in sync with c_common_post_options.\n // { dg-options \"-fabi-version=0\" }\n \n-#if __GXX_ABI_VERSION != 1009\n+#if __GXX_ABI_VERSION != 1010\n #error \"Incorrect value of __GXX_ABI_VERSION\"\n #endif"}]}