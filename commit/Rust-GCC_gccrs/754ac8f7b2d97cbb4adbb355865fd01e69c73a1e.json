{"sha": "754ac8f7b2d97cbb4adbb355865fd01e69c73a1e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzU0YWM4ZjdiMmQ5N2NiYjRhZGJiMzU1ODY1ZmQwMWU2OWM3M2ExZQ==", "commit": {"author": {"name": "Phil Edwards", "email": "pme@sourceware.cygnus.com", "date": "2000-05-03T16:11:03Z"}, "committer": {"name": "Phil Edwards", "email": "pme@gcc.gnu.org", "date": "2000-05-03T16:11:03Z"}, "message": "footer.html: Update to see if it takes effect.\n\n2000-05-03  Phil Edwards  <pme@sourceware.cygnus.com>\n            Felix Natter <fnatter@gmx.net>\n\n\t* docs/footer.html:  Update to see if it takes effect.\n\t* docs/thanks.html:  More people.\n\t* docs/17_intro/headers_cc.txt:  Copy from testsuite, since that can't\n\t  be seen from the web pages.  Rename for browser-friendliness...\n\t* docs/17_intro/howto.html:  ...and update here.\n\t* docs/17_intro/porting-howto.html:  Changes from Felix.\n\t* docs/gccrebuild.html:  Mention v3->egcs move.\n\t* docs/faq/index.html:  Ditto.  Also misc tweaks and URL updates.\n\t* docs/faq/index.txt:  Regenerate.\n\nCo-Authored-By: Felix Natter <fnatter@gmx.net>\n\nFrom-SVN: r33631", "tree": {"sha": "fc3b2f3e5f214caaec0a025d146a3cd3c1c0d38d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc3b2f3e5f214caaec0a025d146a3cd3c1c0d38d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/comments", "author": null, "committer": null, "parents": [{"sha": "1920de4701bceb07cea0b0c657c35577b8e47dde", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1920de4701bceb07cea0b0c657c35577b8e47dde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1920de4701bceb07cea0b0c657c35577b8e47dde"}], "stats": {"total": 506, "additions": 344, "deletions": 162}, "files": [{"sha": "00d3c921cb07aa1a1ddfc52a54f468a010c2b632", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=754ac8f7b2d97cbb4adbb355865fd01e69c73a1e", "patch": "@@ -1,3 +1,16 @@\n+2000-05-03  Phil Edwards  <pme@sourceware.cygnus.com>\n+            Felix Natter <fnatter@gmx.net>\n+\n+\t* docs/footer.html:  Update to see if it takes effect.\n+\t* docs/thanks.html:  More people.\n+\t* docs/17_intro/headers_cc.txt:  Copy from testsuite, since that can't\n+\t  be seen from the web pages.  Rename for browser-friendliness...\n+\t* docs/17_intro/howto.html:  ...and update here.\n+\t* docs/17_intro/porting-howto.html:  Changes from Felix.\n+\t* docs/gccrebuild.html:  Mention v3->egcs move.\n+\t* docs/faq/index.html:  Ditto.  Also misc tweaks and URL updates.\n+\t* docs/faq/index.txt:  Regenerate.\n+\n 2000-05-01  Benjamin Kosnik  <bkoz@redhat.com>\n \n \t* config/cpu/powerpc/bits/atomicity.h (__exchange_and_add): More"}, {"sha": "d95f17aee68e6b439102a955615438637895726e", "filename": "libstdc++-v3/docs/17_intro/headers_cc.txt", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/libstdc%2B%2B-v3%2Fdocs%2F17_intro%2Fheaders_cc.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/libstdc%2B%2B-v3%2Fdocs%2F17_intro%2Fheaders_cc.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2F17_intro%2Fheaders_cc.txt?ref=754ac8f7b2d97cbb4adbb355865fd01e69c73a1e", "patch": "@@ -0,0 +1,83 @@\n+// 1999-05-12 bkoz\n+\n+// Copyright (C) 1999 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 17.4.1.2 Headers\n+\n+\n+// \"C++\" headers\n+#include <algorithm>\n+#include <bitset>\n+#include <complex>\n+#include <deque>\n+#include <exception>\n+#include <fstream>\n+#include <functional>\n+#include <iomanip>\n+#include <ios>\n+#include <iosfwd>\n+#include <iostream>\n+#include <istream>\n+#include <iterator>\n+#include <limits>\n+#include <list>\n+#include <locale>\n+#include <map>\n+#include <memory>\n+#include <new>\n+#include <numeric>\n+#include <ostream>\n+#include <queue>\n+#include <set>\n+#include <sstream>\n+#include <stack>\n+#include <stdexcept>\n+#include <streambuf>\n+#include <string>\n+#include <typeinfo>\n+#include <utility>\n+#include <valarray>\n+#include <vector>\n+\n+// \"C\" headers\n+#include <cassert>\n+#include <cctype>\n+#include <cerrno>\n+#include <cfloat>\n+#include <ciso646>\n+#include <climits>\n+#include <clocale>\n+#include <cmath>\n+#include <csetjmp>\n+#include <csignal>\n+#include <cstdarg>\n+#include <cstddef>\n+#include <cstdio>\n+#include <cstdlib>\n+#include <cstring>\n+#include <ctime>\n+\n+// \"C\" headers that might not work if wchar_t support is disabled.\n+#include <bits/c++config.h>\n+#if _GLIBCPP_USE_WCHAR_T\n+  #include <cwchar>\n+  #include <cwctype>\n+#endif\n+\n+int main() { }"}, {"sha": "e3b9e26a10c49dec87052542c7ff8fc0b2a08efe", "filename": "libstdc++-v3/docs/17_intro/howto.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/libstdc%2B%2B-v3%2Fdocs%2F17_intro%2Fhowto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/libstdc%2B%2B-v3%2Fdocs%2F17_intro%2Fhowto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2F17_intro%2Fhowto.html?ref=754ac8f7b2d97cbb4adbb355865fd01e69c73a1e", "patch": "@@ -9,7 +9,7 @@\n    <TITLE>libstdc++-v3 HOWTO:  Chapter 17</TITLE>\n <LINK REL=\"home\" HREF=\"http://sourceware.cygnus.com/libstdc++/docs/18_support/\">\n <LINK REL=StyleSheet HREF=\"../lib3styles.css\">\n-<!-- $Id: howto.html,v 1.1 2000/04/21 20:33:31 bkoz Exp $ -->\n+<!-- $Id: howto.html,v 1.2 2000/04/25 06:39:48 bkoz Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -46,7 +46,7 @@ <H2><A NAME=\"2\">The Standard C++ header files</A></H2>\n       available to you, no matter how.\n    </P>\n    <P>The names of the headers can be easily seen in\n-      <A HREF=\"../testsuite/17_intro/headers.cc\">this source code</A>,\n+      <A HREF=\"headers_cc.txt\"><TT>testsuite/17_intro/headers.cc</TT></A>,\n       which is a small testbed we use to make certain that the headers\n       all compile and run.\n    </P>\n@@ -147,7 +147,7 @@ <H2><A NAME=\"4\"><TT>&lt;foo&gt;</TT> vs <TT>&lt;foo.h&gt;</TT></A></H2>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:pme@sourceware.cygnus.com\">Phil Edwards</A> or\n <A HREF=\"mailto:gdr@egcs.cygnus.com\">Gabriel Dos Reis</A>.\n-<BR> $Id: howto.html,v 1.1 2000/04/21 20:33:31 bkoz Exp $\n+<BR> $Id: howto.html,v 1.2 2000/04/25 06:39:48 bkoz Exp $\n </EM></P>\n \n "}, {"sha": "4d4c254285d420459e6230f33ffa303242250cf4", "filename": "libstdc++-v3/docs/17_intro/porting-howto.html", "status": "modified", "additions": 153, "deletions": 47, "changes": 200, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/libstdc%2B%2B-v3%2Fdocs%2F17_intro%2Fporting-howto.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/libstdc%2B%2B-v3%2Fdocs%2F17_intro%2Fporting-howto.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2F17_intro%2Fporting-howto.html?ref=754ac8f7b2d97cbb4adbb355865fd01e69c73a1e", "patch": "@@ -15,65 +15,91 @@ <h1>Porting to libstdc++-v3</h1>\n   <li><a href = \"#nocreate\">File-flags: <tt>ios::nocreate</tt> and\n   <tt>ios::noreplace</tt></a>\n   <li><a href = \"#headers\">The new headers</a>\n+  <li><a href = \"#iterators\">Iterator-changes</a>\n+  <li><a href = \"#macros\">Libc-macros</a>\n   <li><a href = \"#about\">Comments, suggestions, corrections, questions...</a>\n   </center>\n \n+  <p>\n+In the following, when I say portable, I will refer to \"portable among ISO\n+14882-implementations\". On the other hand, if I say \"backportable\" or\n+\"conservative\", I am talking about \"compiles with older\n+libstdc++-implementations\".\n+</p>\n+\n     <a name = \"std\">\n \t<h2>Namespace std::</h2>\n \t</a>\n \t  <p>\n The latest C++-standard (ISO-14882) requires that the standard C++-library\n is defined in namespace std::. Thus, to use classes from the standard c++\n library, you can do one of three things:\n-<ul>\n-  <li>wrap your code in <tt>namespace std { ... }</tt>\n-=> This is not an option because only symbols from the standard c++-library are\n-defined in namespace std::.\n-  <li>put a kind of <dfn>using-declaration</dfn> in your source\n-(either <tt>using namespace std;</tt> or i.e. <tt>using std::string;</tt>)\n-=> works well for source-files, but cannot be used in header-files\n-  <li>use a <dfn>fully qualified name</dfn> for each libstdc++-symbol\n-(i.e. <tt>std::string</tt>, <tt>std::cout</tt>)\n-=> can always be used\n-</ul>\n+  <ul>\n+    <li>wrap your code in <tt>namespace std { ... }</tt> => This is not an\n+   option because only symbols from the standard c++-library are defined in\n+   namespace std::.\n+\n+    <li>put a kind of <dfn>using-declaration</dfn> in your source (either\n+\t<tt>using namespace std;</tt> or i.e. <tt>using std::string;</tt>)\n+\t=> works well for source-files, but cannot be used in header-files\n+\n+\t<li>use a <dfn>fully qualified name</dfn> for each libstdc++-symbol\n+\t(i.e. <tt>std::string</tt>, <tt>std::cout</tt>) => can always be used\n+  </ul>\n+</p>\n+      <p>\n+Because there are many compilers which still use an implementation that\n+does not have the standard C++-library in namespace <tt>std::</tt>, some\n+care is required to support these as well.\n+</p>\n+      <p>\n+Namespace back-portability-issues are generally not a problem with g++,\n+because versions of g++ that do not have libstdc++ in <tt>std::</tt> use\n+<tt>-fno-honor-std</tt> (ignore <tt>std::</tt>, <tt>:: = std::</tt>) by\n+default. That is, the responsibility for enabling or disabling\n+<tt>std::</tt> is on the user; the maintainer does not have to care about it.\n+This probably applies to some other compilers as well.\n </p>\n       <p>\n-Namespace portability-issues are not a problem with g++, because versions\n-of g++ that do not have libstdc++ in std:: use <tt>-fno-honor-std</tt>\n-(ignore <tt>std::</tt>, <tt>:: = std::</tt>) by default. This probably\n-applies to some other compilers as well.\n-\n The following sections list some possible solutions to support compilers\n that cannot ignore std::.\n </p> \n+      <a name = \"gtkmm\">\n       <h3>Using <dfn>namespace composition</dfn> if the project uses a separate\n       namespace</h3>\n+\t  </a>\n \n \t    <p>\n <a href = \"http://gtkmm.sourcforge.net\">Gtk--</a> defines most of its\n classes in namespace Gtk::. Thus, it was possible to adapt Gtk-- to\n namespace std:: by using a C++-feature called <dfn>namespace\n composition</dfn>. This is what happens if you put a\n <dfn>using</dfn>-declaration into a namespace-definition: the imported\n-symbol(s) gets imported into the currently active namespace(s). This is\n-what it looks like in Gtk--:\n+symbol(s) gets imported into the currently active namespace(s). For example:\n <pre>\n namespace Gtk {\n \tusing std::string;\n \tclass Window { ... }\n }\n </pre>\n In this example, <tt>std::string</tt> gets imported into namespace Gtk::.\n-The result is that you don't have to use <tt>std::string</tt> in this header,\n-but still <tt>std::string</tt> does not get imported into user-space (the\n-global namespace ::) unless the user does <tt>using namespace Gtk;</tt>\n-(which is not recommended practice for Gtk--, so it is not a problem).\n+The result is that you don't have to use <tt>std::string</tt> in this\n+header, but still <tt>std::string</tt> does not get imported into\n+user-space (the global namespace ::) unless the user does <tt>using\n+namespace Gtk;</tt> (which is not recommended practice for Gtk--, so it is\n+not a problem).  Additionally, the <tt>using</tt>-declarations are wrapped\n+in macros that are set based on autoconf-tests to either \"\" or\n+i.e. <tt>using std::string;</tt> (depending on whether the system has\n+libstdc++ in <tt>std::</tt> or not).\n+(ideas from llewelly@dbritsch.dsl.xmission.com,\n+Karl Nelson <kenelson@ece.ucdavis.edu>)\n </p>\n \n-      <h3>Defining an empty namespace std for backwards-compatibility</h3>\n+      <h3>Defining an empty namespace std</h3>\n \t    <p>\n-By defining an (empty) namespace std:: before using it, you can avoid\n-getting errors on systems where no part of the library is in std:\n+By defining an (empty) namespace <tt>std::</tt> before using it, you can\n+avoid getting errors on systems where no part of the library is in\n+namespace std:\n <pre>\n namespace std { }\n using namespace std;\n@@ -82,12 +108,12 @@ <h3>Defining an empty namespace std for backwards-compatibility</h3>\n       <h3>Avoid to use fully qualified names (i.e. std::string)</h3>\n \t    <p>\n If some compilers complain about <tt>using std::string;</tt>, and if the\n-hack for gtk-- mentioned above does not work, then it might be a good idea\n+\"hack\" for gtk-- mentioned above does not work, then it might be a good idea\n to define a macro <tt>NS_STD</tt>, which is defined to either \"\" or \"std\"\n based on an autoconf-test. Then you should be able to use\n <tt>NS_STD::string</tt>, which will evaluate to <tt>::string</tt> (\"string\n in the global namespace\") on systems that do not put string in std::.\n-(This is untested and might not even be necessary)\n+(This is untested)\n </p>\n \n       <h3>How some open-source-projects deal with this</h3>\n@@ -103,7 +129,7 @@ <h3>How some open-source-projects deal with this</h3>\n   <tr><td><a href = \"http://www.mnemonic.org\">mnemonic</a></td> <td>none</td>\n   </tr>\n   <tr><td><a href = \"http://libsigc.sourceforge.net\">libsigc++</a></td>\n-      <td>portable-impl</td>\n+      <td>conservative-impl</td>\n   </tr>\n </table>\n \n@@ -117,11 +143,14 @@ <h3>How some open-source-projects deal with this</h3>\n     <td>none</td> <td>no namespace std at all</td>\n   </tr>\n   <tr>\n-    <td>portable-impl</td> <td>wrap all namespace-handling in macros to support\n-\tcompilers without namespace-support (no libstdc++ used in headers)</td>\n+    <td>conservative-impl</td> <td>wrap all namespace-handling in macros to\n+\tsupport compilers without namespace-support (no libstdc++ used in\n+\theaders)</td>\n   </tr>\n </table>\n-\t\n+As you can see, this currently lacks an example of a project which uses\n+libstdc++-symbols in headers in a back-portable way\n+(except for the <a href = \"#gtkmm\">Gtk-- \"hack\"</a>).\n </p>\n     <a name = \"nocreate\">    \n     <h2>there is no ios::nocreate/ios::noreplace in ISO 14882</h2>\n@@ -136,7 +165,8 @@ <h2>there is no ios::nocreate/ios::noreplace in ISO 14882</h2>\n For output streams, \"nocreate\" is probably the default, unless you specify\n <tt>std::ios::trunc</tt> ? To be safe, you can open the file for\n reading, check if it has been opened, and then decide whether you want to\n-create/replace or not.\n+create/replace or not. To my knowledge, even older implementations support\n+<tt>app</tt>, <tt>ate</tt> and <tt>trunc</tt> (except for <tt>app</tt> ?).\n </p>\n     <a name = \"attach\">    \n \t<h2><tt>stream::attach(int fd)</tt> is not in the standard any more</h2>\n@@ -166,32 +196,108 @@ <h2>The new headers</h2>\n (which is what they will have to do sometime anyway).\n </p>\n \n-\t  <h3><tt>&lt;ctype.h&gt;</tt> introduces ambiguity when used with\n-\t  <tt>&lt;cctype&gt;</tt></h3>\n-\t  <p>\n-The best solution I came up with so far is to include <tt>cctype</tt>\n-instead of <tt>ctype.h</tt> wherever possible, and then use fully\n-qualified names to refer to the libstdc++-versions: std::islower,\n-std::isalnum etc.  (you will need to as soon as any header includes\n-<tt>&lt;ctype.h&gt;</tt>, because then there will be an ambiguity with the\n-C-versions in the global namespace defined in <tt>&lt;ctype.h&gt;</tt>)\n+      <a name = \"cheaders\">\n+      <h3>New headers replacing C-headers</h3>\n+\t  </a>\n+\t    <p>\n+You should not use the C-headers (except for system-level headers) from C++\n+programs. Instead, you should use a set of headers that are named by\n+prepending 'c' and, as usual, ommiting the extension (.h). For example,\n+instead of using <tt>&lt;math.h&gt;</tt>, you should use\n+<tt>&lt;cmath&gt;</tt>. The standard specifies that if you include the\n+C-style header (<tt>&lt;math.h&gt;</tt> in this case), the symbols will be\n+available both in the global namespace and in namespace <tt>std::</tt>\n+(libstdc++-v3, version 2.90.8 currently puts them in <tt>std::</tt> only)\n+On the other hand, if you include only the new header\n+(i.e. <tt>&lt;cmath&gt;</tt>), the symbols will only be defined in\n+namespace <tt>std::</tt> (and macros will be converted to\n+inline-functions).\n </p>\n-\n+        <p>\n+For more information on this, and for information on how the GNU C++\n+implementation reuses (\"shadows\") the C library-functions, have\n+a look at <a href = \"http://www.cantrip.org/cheaders.html\">www.cantrip.org</a>.\n+</p>\n+\t  \n       <h3><tt>&lt;fstream&gt;</tt> does not define <tt>std::cout</tt>,\n       <tt>std::cin</tt> etc.</h3>\n         <p>\n In previous versions of the standard, <tt>&lt;fstream.h&gt;</tt>,\n <tt>&lt;ostream.h&gt;</tt> and <tt>&lt;istream.h&gt;</tt> used to define\n-<tt>cout</tt>, <tt>cin</tt> and so on. With libstdc++-v3, you need\n-to include <tt>&lt;iostream&gt;</tt> to define these.\n+<tt>cout</tt>, <tt>cin</tt> and so on. Because of the templatized iostreams\n+in libstdc++-v3, you need to include <tt>&lt;iostream&gt;</tt> explicitly\n+to define these.\n+</p>\n+\n+    <a name = \"iterators\">\n+\t<h2>Iterators</h2>\n+\t</a>\n+      <p>\n+The following are not proper uses of iterators, but may be working fixes\n+for existing uses of iterators.\n+  <ul>\n+    <li>you cannot do <tt>ostream::operator<<(iterator)</tt> to print the\n+    address of the iterator => use <tt><< &*iterator</tt> instead ?\n+    <li>you cannot clear an iterator's reference (<tt>iterator = 0</tt>)\n+\t=> use <tt>iterator = iterator_type();</tt> ?\n+\t<li><tt>if (iterator)</tt> won't work any more\n+\t=> use <tt>if (iterator != iterator_type())</tt> ?\n+  </ul>\n </p>\n+\n+    <a name = \"macros\">\n+\t<h2>Libc-macros (i.e. <tt>isspace</tt> from <tt>&lt;cctype&gt;</tt>)</h2>\n+\t</a>\n+\t  <p>\n+Glibc 2.0.x and 2.1.x define the <tt>&lt;ctype.h&gt;</tt>-functionality\n+as macros (isspace, isalpha etc.). Libstdc++-v3 \"shadows\" these macros\n+as described in the <a href = \"#cheaders\">section on C-headers</a>.\n+</p>\n+      <p>\n+Older implementations of libstdc++ (g++-2 for egcs 1.x and g++-3 for\n+gcc 2.95.2), however, keep these functions as macros, and so it is not\n+back-portable to use fully qualified names. For example:\n+<pre>\n+#include &lt;cctype&gt;\n+int main() { std::isspace('X'); }\n+</pre>\n+will result in something like this (unless using g++-v3):\n+<pre>\n+std:: (__ctype_b[(int) ( ( 'X' ) )] & (unsigned short int)   _ISspace )  ;\n+</pre>\n+Another problem arises if you put a <tt>using namespace std;</tt>\n+declaration at the top, and include <tt>&lt;ctype.h&gt;</tt>. This will\n+result in ambiguities between the definitions in the global namespace\n+(<tt>&lt;ctype.h&gt;</tt>) and the definitions in namespace <tt>std::</tt>\n+(<tt>&lt;cctype&gt;</tt>).\n+</p>\n+      <p>\n+One solution I can think of is to test for -v3 using autoconf-macros, and\n+define macros for each of the C-functions (maybe that is possible with one\n+\"wrapper\" macro as well ?).\n+</p>\n+      <p>\n+Another solution which would fix g++ is to tell the user to modify\n+a header-file so that g++-2 (egcs 1.x) and g++-3 (gcc 2.95.2)\n+enable a macro which tells &lt;ctype.h&gt; to define functions instead of\n+macros:\n+<pre>\n+// This keeps isanum, et al from being propagated as macros.\n+#if __linux__\n+#define __NO_CTYPE 1\n+#endif\n+\n+[ now include &lt;ctype.h&gt; ]\n+</pre>\n+</p>\n+\n     <a name = \"about\">\n \t<h2>About...</h2>\n \t</a>\n       <p>\n-Please send any experience, additions, corrections or questions to <a href =\n-\"mailto:fnatter@gmx.net\">fnatter@gmx.net</a> or for discussion to\n-the libstdc++-v3-mailing-list.\n+Please send any experience, additions, corrections or questions to <a href\n+= \"mailto:fnatter@gmx.net\">fnatter@gmx.net</a> or for discussion to the\n+libstdc++-v3-mailing-list.\n </p>\n \t\n   </body>"}, {"sha": "e516fe15ea459d1de59fe3eff1477254ce31f6b9", "filename": "libstdc++-v3/docs/faq/index.html", "status": "modified", "additions": 14, "deletions": 33, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/libstdc%2B%2B-v3%2Fdocs%2Ffaq%2Findex.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/libstdc%2B%2B-v3%2Fdocs%2Ffaq%2Findex.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Ffaq%2Findex.html?ref=754ac8f7b2d97cbb4adbb355865fd01e69c73a1e", "patch": "@@ -13,7 +13,7 @@\n   ** Locations of \"the most recent snapshot is the Nth\" text are \n   ** answers 1_1, 1_4, 4_1, 5_6.\n -->\n-<!-- $Id: index.html,v 1.21 2000/03/26 03:44:35 pme Exp $ -->\n+<!-- $Id: index.html,v 1.1 2000/04/21 20:33:32 bkoz Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -106,7 +106,7 @@ <H2><A NAME=\"1_1\">1.1 What is libstdc++-v3?</A></H2>\n \n <HR>\n    <H2><A NAME=\"1_2\">1.2 Why should I use libstdc++?</A></H2>\n-      <P>The recent completion of the ISO C++ standardization gave the\n+      <P>The completion of the ISO C++ standardization gave the\n          C++ community a powerful set of reuseable tools in the form\n          of the C++ Standard Library.  However, all existing C++\n          implementations are (as the Draft Standard used to say)\n@@ -117,10 +117,10 @@ <H2><A NAME=\"1_2\">1.2 Why should I use libstdc++?</A></H2>\n          (<TT>gcc</TT>, <TT>g++</TT>, etc) is widely considered to be\n          one of the leading compilers in the world.  Its development\n          has recently been taken over by the \n-         <A HREF=\"http://egcs.cygnus.com/\">GCC team</A>.  All of\n+         <A HREF=\"http://gcc.gnu.org/\">GCC team</A>.  All of\n          the rapid development and near-legendary\n      <A\n-HREF=\"http://egcs.cygnus.com/gcc-2.95/buildstat.html\">portability</A>\n+HREF=\"http://gcc.gnu.org/gcc-2.95/buildstat.html\">portability</A>\n          that are the hallmarks of an open-source project are being\n          applied to libstdc++.\n       </P>\n@@ -214,7 +214,7 @@ <H2><A NAME=\"1_7\">1.7 What happened to libg++?  I need that!</A></H2>\n          stuff&quot; classes will probably migrate there.)\n       </P>\n       <P>For the bold and/or desperate, the\n-         <A HREF=\"http://egcs.cygnus.com/faq.html#libg++\">GCC FAQ</A>\n+         <A HREF=\"http://gcc.gnu.org/faq.html#libg++\">GCC FAQ</A>\n          describes where to find the last libg++ source.\n       </P>\n \n@@ -271,32 +271,13 @@ <H2><A NAME=\"2_2\">2.2 Is this a drop-in replacement for the\n       <P>Yes, as of 2.90.8, it is intended as such.</P>\n       <P>The installation instructions cover this in more detail, but\n          replacing the older library requires rebuilding some of the\n-         code that comes with g++.  If you do not want to do that,\n-         then you'll be missing out on a lot of functionality, but it\n-         can still be done.\n-      </P>\n-      <P>In that case, you can use the same procedure that used to be\n-         required:\n-         <OL>\n-            <LI> Build GCC as usual.\n-            <LI> Build libstdc++-v3 as described in the installation\n-                 document, under the section &quot;without GCC\n-                 sources.&quot;  Be aware that you will lose the std::\n-                 namespace encapsulation.\n-            <LI> Build your code using -I and -L options so that GCC\n-                 finds the libstdc++-v3 headers and library before the\n-                 older headers in the GCC include tree.\n-         </OL>\n-      </P>\n-      <P>If you configured libstdc++-v3 to install under a directory\n-         called <B>/lib3</B>, for example, the command line would look\n-         something like\n-         <!-- Careful, the leading spaces in PRE show up directly. -->\n-         <PRE>\n-      g++ -Wall -I/lib3/include/g++-v3 -L/lib3/lib foo.cc -o foo\n-         </PRE>\n-         More information (such as using SGI or GNU extensions, and\n-         setting the runtime library path) can be found in the RELEASE-NOTES.\n+         code that comes with g++.  You will need sources for the 2.95.2\n+         compiler in order to build this snapshot.  Building the library\n+         on its own and then using -I/-L will no longer work.\n+      </P>\n+      <P>After the 2.90.8 snapshot, the library sources were integrated\n+         into the compiler sources.  Future releases of the compiler will\n+         ship with libstdc++-v3.\n       </P>\n \n <HR>\n@@ -511,7 +492,7 @@ <H2><A NAME=\"4_4\">4.4 Things in libstdc++ that look like bugs</A></H2>\n    <H2><A NAME=\"4_5\">4.5 Aw, that's easy to fix!</A></H2>\n       <P>If you have found a bug in the library and you think you have\n          a working fix, then send it in!  The main GCC site has a page\n-         on <A HREF=\"http://egcs.cygnus.com/contribute.html\">submitting\n+         on <A HREF=\"http://gcc.gnu.org/contribute.html\">submitting\n          patches</A> that covers the procedure, but for libstdc++ you\n          should of course send the patch to our mailing list, not the\n          GCC mailing list.  The libstdc++\n@@ -664,7 +645,7 @@ <H2><A NAME=\"5_7\">5.7 How do I get a copy of the ISO C++ Standard?</A></H2>\n Comments and suggestions are welcome, and may be sent to\n <A HREF=\"mailto:pme@sourceware.cygnus.com\">Phil Edwards</A> or\n <A HREF=\"mailto:gdr@egcs.cygnus.com\">Gabriel Dos Reis</A>.\n-<BR> $Id: index.html,v 1.21 2000/03/26 03:44:35 pme Exp $\n+<BR> $Id: index.html,v 1.1 2000/04/21 20:33:32 bkoz Exp $\n </EM></P>\n \n "}, {"sha": "d3d20370e302869e7ff61286f2973fa8a1af8de8", "filename": "libstdc++-v3/docs/faq/index.txt", "status": "modified", "additions": 57, "deletions": 69, "changes": 126, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/libstdc%2B%2B-v3%2Fdocs%2Ffaq%2Findex.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/libstdc%2B%2B-v3%2Fdocs%2Ffaq%2Findex.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Ffaq%2Findex.txt?ref=754ac8f7b2d97cbb4adbb355865fd01e69c73a1e", "patch": "@@ -65,11 +65,11 @@\n    \n 1.2 Why should I use libstdc++?\n \n-   The recent completion of the ISO C++ standardization gave the C++\n-   community a powerful set of reuseable tools in the form of the C++\n-   Standard Library. However, all existing C++ implementations are (as\n-   the Draft Standard used to say) \"incomplet and incorrekt,\" and many\n-   suffer from limitations of the compilers that use them.\n+   The completion of the ISO C++ standardization gave the C++ community a\n+   powerful set of reuseable tools in the form of the C++ Standard\n+   Library. However, all existing C++ implementations are (as the Draft\n+   Standard used to say) \"incomplet and incorrekt,\" and many suffer from\n+   limitations of the compilers that use them.\n    \n    The GNU C/C++/FORTRAN/<pick-a-language> compiler (gcc, g++, etc) is\n    widely considered to be one of the leading compilers in the world. Its\n@@ -206,25 +206,13 @@\n    \n    The installation instructions cover this in more detail, but replacing\n    the older library requires rebuilding some of the code that comes with\n-   g++. If you do not want to do that, then you'll be missing out on a\n-   lot of functionality, but it can still be done.\n-   \n-   In that case, you can use the same procedure that used to be required:\n-    1. Build GCC as usual.\n-    2. Build libstdc++-v3 as described in the installation document,\n-       under the section \"without GCC sources.\" Be aware that you will\n-       lose the std:: namespace encapsulation.\n-    3. Build your code using -I and -L options so that GCC finds the\n-       libstdc++-v3 headers and library before the older headers in the\n-       GCC include tree.\n-       \n-   If you configured libstdc++-v3 to install under a directory called\n-   /lib3, for example, the command line would look something like\n-      g++ -Wall -I/lib3/include/g++-v3 -L/lib3/lib foo.cc -o foo\n-\n-\n-   More information (such as using SGI or GNU extensions, and setting the\n-   runtime library path) can be found in the RELEASE-NOTES.\n+   g++. You will need sources for the 2.95.2 compiler in order to build\n+   this snapshot. Building the library on its own and then using -I/-L\n+   will no longer work.\n+   \n+   After the 2.90.8 snapshot, the library sources were integrated into\n+   the compiler sources. Future releases of the compiler will ship with\n+   libstdc++-v3.\n      _________________________________________________________________\n    \n 2.3 What is this CVS thing that you keep mentioning?\n@@ -533,71 +521,71 @@ count(struct __rb_tree_node_base *, struct __rb_tree_node_base *)'\n    \n    Comments and suggestions are welcome, and may be sent to [71]Phil\n    Edwards or [72]Gabriel Dos Reis.\n-   $Id: index.txt,v 1.17 2000/03/26 03:44:35 pme Exp $ \n+   $Id: index.html,v 1.1 2000/04/21 20:33:32 bkoz Exp $ \n \n References\n \n    1. http://sourceware.cygnus.com/libstdc++/\n    2. http://sourceware.cygnus.com/libstdc++/faq/index.html\n-   3. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/index.html\n-   4. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#1_0\n-   5. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#1_1\n-   6. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#1_2\n-   7. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#1_3\n-   8. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#1_4\n-   9. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#1_5\n-  10. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#1_6\n-  11. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#1_7\n-  12. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#1_8\n-  13. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#2_0\n-  14. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#2_1\n-  15. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#2_2\n-  16. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#2_3\n-  17. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#2_4\n-  18. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#3_0\n-  19. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#3_1\n-  20. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#3_2\n-  21. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#4_0\n-  22. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#4_1\n-  23. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#4_2\n-  24. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#4_3\n-  25. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#4_4\n-  26. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#4_5\n-  27. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#5_0\n-  28. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#5_1\n-  29. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#5_2\n-  30. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#5_3\n-  31. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#5_4\n-  32. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#5_5\n-  33. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#5_6\n-  34. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#5_7\n+   3. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/index.html\n+   4. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#1_0\n+   5. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#1_1\n+   6. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#1_2\n+   7. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#1_3\n+   8. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#1_4\n+   9. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#1_5\n+  10. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#1_6\n+  11. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#1_7\n+  12. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#1_8\n+  13. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#2_0\n+  14. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#2_1\n+  15. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#2_2\n+  16. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#2_3\n+  17. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#2_4\n+  18. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#3_0\n+  19. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#3_1\n+  20. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#3_2\n+  21. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#4_0\n+  22. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#4_1\n+  23. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#4_2\n+  24. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#4_3\n+  25. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#4_4\n+  26. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#4_5\n+  27. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#5_0\n+  28. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#5_1\n+  29. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#5_2\n+  30. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#5_3\n+  31. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#5_4\n+  32. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#5_5\n+  33. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#5_6\n+  34. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#5_7\n   35. ftp://sourceware.cygnus.com/pub/libstdc++/libstdc++-2.90.8.tar.gz\n-  36. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/17_intro/DESIGN\n-  37. http://egcs.cygnus.com/\n-  38. http://egcs.cygnus.com/gcc-2.95/buildstat.html\n-  39. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/index.html\n+  36. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/17_intro/DESIGN\n+  37. http://gcc.gnu.org/\n+  38. http://gcc.gnu.org/gcc-2.95/buildstat.html\n+  39. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/index.html\n   40. ftp://sourceware.cygnus.com/pub/libstdc++/libstdc++-2.90.8.tar.gz\n-  41. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/index.html\n+  41. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/index.html\n   42. http://www.deja.com/getdoc.xp?AN=469581698&fmt=text\n-  43. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/17_intro/contribute.html\n+  43. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/17_intro/contribute.html\n   44. http://www.boost.org/\n-  45. http://egcs.cygnus.com/faq.html#libg++\n+  45. http://gcc.gnu.org/faq.html#libg++\n   46. mailto:libstdc++@sourceware.cygnus.com\n   47. mailto:pme@sourceware.cygnus.com\n   48. mailto:gdr@egcs.cygnus.com\n   49. http://sourceware.cygnus.com/autoconf/\n   50. http://sourceware.cygnus.com/automake/\n-  51. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/documentation.html\n-  52. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/17_intro/RELEASE-NOTES\n+  51. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/documentation.html\n+  52. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/17_intro/RELEASE-NOTES\n   53. http://www.gnu.org/software/cvs/cvs.html\n   54. http://www.cyclic.com/\n   55. http://www.xraylith.wisc.edu/~khan/software/gnu-win32/libstdc++-v3.html\n   56. file://localhost/ml/libstdc++/1998/msg00006.html\n   57. http://www.cantrip.org/draft-bugs.txt\n   58. http://anubis.dkuug.dk/jtc1/sc22/wg21/\n-  59. http://egcs.cygnus.com/contribute.html\n-  60. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/17_intro/contribute.html\n-  61. file://localhost/home0/pedwards/EGCS/gcc-2.95.2/libstdc++-v3/docs/faq/index.html#2_4\n+  59. http://gcc.gnu.org/contribute.html\n+  60. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/17_intro/contribute.html\n+  61. file://localhost/home0/pedwards/src/egcsworking/libstdc++-v3/docs/faq/index.html#2_4\n   62. http://sourceware.cygnus.com/ml/libstdc++/1999/msg00080.html\n   63. http://sourceware.cygnus.com/ml/libstdc++/1999/msg00084.html\n   64. http://www.sgi.com/Technology/STL/"}, {"sha": "a7a2ec0b0052c7230b2f8e28a8981c7513be40f0", "filename": "libstdc++-v3/docs/footer.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/libstdc%2B%2B-v3%2Fdocs%2Ffooter.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/libstdc%2B%2B-v3%2Fdocs%2Ffooter.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Ffooter.html?ref=754ac8f7b2d97cbb4adbb355865fd01e69c73a1e", "patch": "@@ -9,8 +9,8 @@\n These pages are stoically maintained by \n <A HREF=\"mailto:pme@sourceware.cygnus.com\">Phil Edwards</a>, who might now\n actually be able to maintain them as the directory structure is slowly\n-congealing into some kind of permanent structure, and was last modified on\n-2000-03-24.\n+congealing into some kind of permanent structure, and were last modified on\n+2000-04-29.\n </EM></P>\n \n <!-- And this closes everything out. -->"}, {"sha": "8f57884fb2980e90f0571d121dfdb7b11cb1282e", "filename": "libstdc++-v3/docs/gccrebuild.html", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/libstdc%2B%2B-v3%2Fdocs%2Fgccrebuild.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/libstdc%2B%2B-v3%2Fdocs%2Fgccrebuild.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fgccrebuild.html?ref=754ac8f7b2d97cbb4adbb355865fd01e69c73a1e", "patch": "@@ -9,7 +9,7 @@\n    <TITLE>How to automatically rebuild libgcc.a.</TITLE>\n <LINK REL=\"home\" HREF=\"http://sourceware.cygnus.com/libstdc++/\">\n <LINK REL=StyleSheet HREF=\"lib3styles.css\">\n-<!-- $Id: gccrebuild.html,v 1.1 2000/01/14 20:03:09 pme Exp $ -->\n+<!-- $Id: gccrebuild.html,v 1.1 2000/04/21 20:33:30 bkoz Exp $ -->\n </HEAD>\n <BODY>\n \n@@ -39,7 +39,10 @@ <H2 CLASS=\"centered\"><TT>--enable-libgcc-rebuild</TT></H2>\n    as <EM>objdir</EM>; here it will be called <EM>GCCobjdir</EM>.\n </P>\n \n-<P>This is a kludge, and will go away eventually.</P>\n+<P>This is a kludge, and will go away eventually.  (In a sense, it has\n+   already gone away, as the library sources have been merged into the\n+   compiler sources.)\n+</P>\n \n <HR>\n \n@@ -111,7 +114,7 @@ <H3>Installing the new libgcc.a</H3>\n \n <HR>\n <P CLASS=\"fineprint\"><EM>\n-$Id: gccrebuild.html,v 1.1 2000/01/14 20:03:09 pme Exp $\n+$Id: gccrebuild.html,v 1.1 2000/04/21 20:33:30 bkoz Exp $\n </EM></P>\n \n "}, {"sha": "02d989c3504bc314cef0cbb02dcbaa6e52895566", "filename": "libstdc++-v3/docs/thanks.html", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/libstdc%2B%2B-v3%2Fdocs%2Fthanks.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/754ac8f7b2d97cbb4adbb355865fd01e69c73a1e/libstdc%2B%2B-v3%2Fdocs%2Fthanks.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fthanks.html?ref=754ac8f7b2d97cbb4adbb355865fd01e69c73a1e", "patch": "@@ -17,7 +17,7 @@ <H3 CLASS=\"centered\">Contributors</H3>\n    Please keep this list in alphabetical order.\n \n    <!--\n-         Latest update 2000-03-09, more or less.\n+         Latest update 2000-04-29, more or less.\n    -->\n <UL>\n \n@@ -56,7 +56,8 @@ <H3 CLASS=\"centered\">Contributors</H3>\n \n   <LI>Benjamin Kosnik for, well, everything.\n \n-  <LI>Martin v. Loewis for namespace patches and fixes.\n+  <LI>Martin v. Loewis for namespace patches and fixes, and tons of\n+      assistance with the compiler merges.\n \n   <LI>Philip Martin for lots of string and vector iterator fixes and\n       improvements, and string clean up and testsuites.\n@@ -71,7 +72,10 @@ <H3 CLASS=\"centered\">Contributors</H3>\n   <LI>Nathan Myers for inflicting locales on the rest of us, working on\n       iostream, string and string documentation (!), fixing that \n       __black_count loop that so many people bugged us about, and creating\n-      the initial documentation (DESIGN, CHECKLIST, and so forth).\n+      the initial documentation (DESIGN, CHECKLIST, and so forth).  Huge\n+      chunks of the MT-safe code are also due to his work.\n+\n+  <LI>Felix Natter for documentation on porting.\n \n   <LI>Chip Salzenberg for patches and improvements to locales, traits,\n       Makefiles, libio, libtool hackery, and &quot;long long&quot; support.\n@@ -84,11 +88,15 @@ <H3 CLASS=\"centered\">Contributors</H3>\n </UL></P>\n \n <P>We'd also like to thank the folks who have contributed time and\n-   energy in testing libstdc++-v3:\n+   energy in testing libstdc++-v3, especially those sending in testsuite\n+   evaluations:\n \n <UL>\n \n-  <LI>Folks for sending in testsuite evaluations.\n+  <LI>J&uuml;rgen Freyh\n+  <LI>llewelly <!-- Honest, that's the only name in the messages. -->\n+  <LI>Loren James Rittle\n+  <LI>George Talbot\n \n </UL></P>\n "}]}