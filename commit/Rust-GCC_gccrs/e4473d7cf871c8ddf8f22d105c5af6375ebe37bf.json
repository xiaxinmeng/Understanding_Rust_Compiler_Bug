{"sha": "e4473d7cf871c8ddf8f22d105c5af6375ebe37bf", "node_id": "C_kwDOANBUbNoAKGU0NDczZDdjZjg3MWM4ZGRmOGYyMmQxMDVjNWFmNjM3NWViZTM3YmY", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-02-01T11:52:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-02-01T11:52:52Z"}, "message": "ree: Fix -fcompare-debug issues in combine_reaching_defs [PR108573]\n\nThe PR78437 r7-4871 changes made combine_reaching_defs punt on\nWORD_REGISTER_OPERATIONS targets if a setter of smaller than word\nregister has wider uses.  This unfortunately breaks -fcompare-debug,\nbecause if such a use appears only in DEBUG_INSN(s), while all other\nuses aren't wider than the setter, we can REE optimize it without -g\nand not with -g.\n\nSuch decisions shouldn't be based on debug instructions.  We could try\nto reset them or adjust in some other way after we decide to perform the\nchange, but at least on the testcase which used to fail on riscv64-linux\nthe\n(debug_insn 8 7 9 2 (var_location:HI s (minus:HI (subreg:HI (and:DI (reg:DI 10 a0 [160])\n                (const_int 1 [0x1])) 0)\n        (subreg:HI (ashiftrt:DI (reg/v:DI 9 s1 [orig:151 l ] [151])\n                (debug_expr:SI D#1)) 0))) \"pr108573.c\":12:5 -1\n     (nil))\nclearly doesn't care about the upper bits and I have hard time imaging how\ncould one end up with DEBUG_INSN which actually cares about those upper\nbits.\n\nSo, the following patch just ignores uses on DEBUG_INSNs in this case,\nif we run into something where we'd need to do something further later on,\nlet's deal with it when we have a testcase for it.\n\n2023-02-01  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR debug/108573\n\t* ree.cc (combine_reaching_defs): Don't return false for paradoxical\n\tsubregs in DEBUG_INSNs.\n\n\t* gcc.dg/pr108573.c: New test.", "tree": {"sha": "4be19c4c2db53f672a5f68a400e779a84e339e17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4be19c4c2db53f672a5f68a400e779a84e339e17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e4473d7cf871c8ddf8f22d105c5af6375ebe37bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4473d7cf871c8ddf8f22d105c5af6375ebe37bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4473d7cf871c8ddf8f22d105c5af6375ebe37bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4473d7cf871c8ddf8f22d105c5af6375ebe37bf/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eda38850a7980d78d966a39b58961349bea7c984", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eda38850a7980d78d966a39b58961349bea7c984", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eda38850a7980d78d966a39b58961349bea7c984"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "413aec7c8eb238b26b8e5afc9dc3ff4fd251795a", "filename": "gcc/ree.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4473d7cf871c8ddf8f22d105c5af6375ebe37bf/gcc%2Free.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4473d7cf871c8ddf8f22d105c5af6375ebe37bf/gcc%2Free.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Free.cc?ref=e4473d7cf871c8ddf8f22d105c5af6375ebe37bf", "patch": "@@ -875,7 +875,8 @@ combine_reaching_defs (ext_cand *cand, const_rtx set_pat, ext_state *state)\n \n \t  for (df_link *use = uses; use; use = use->next)\n \t    if (paradoxical_subreg_p (GET_MODE (*DF_REF_LOC (use->ref)),\n-\t\t\t\t      GET_MODE (SET_DEST (*dest_sub_rtx))))\n+\t\t\t\t      GET_MODE (SET_DEST (*dest_sub_rtx)))\n+\t\t&& !DEBUG_INSN_P (DF_REF_INSN (use->ref)))\n \t      return false;\n \t}\n \n@@ -963,7 +964,8 @@ combine_reaching_defs (ext_cand *cand, const_rtx set_pat, ext_state *state)\n \t      rtx dest2 = SET_DEST (*dest_sub_rtx2);\n \t      for (use = uses; use; use = use->next)\n \t\tif (paradoxical_subreg_p (GET_MODE (*DF_REF_LOC (use->ref)),\n-\t\t\t\t\t  GET_MODE (dest2)))\n+\t\t\t\t\t  GET_MODE (dest2))\n+\t\t    && !DEBUG_INSN_P (DF_REF_INSN (use->ref)))\n \t\t  break;\n \t      if (use)\n \t\tbreak;"}, {"sha": "5dd18043b2b6574e10ac18e22ec50c719eae597a", "filename": "gcc/testsuite/gcc.dg/pr108573.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e4473d7cf871c8ddf8f22d105c5af6375ebe37bf/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108573.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e4473d7cf871c8ddf8f22d105c5af6375ebe37bf/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108573.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr108573.c?ref=e4473d7cf871c8ddf8f22d105c5af6375ebe37bf", "patch": "@@ -0,0 +1,18 @@\n+/* PR debug/108573 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fcompare-debug\" } */\n+\n+unsigned g;\n+\n+int bar (void);\n+int baz (int);\n+\n+void\n+foo (unsigned short s, long l)\n+{\n+  unsigned u = bar ();\n+  s &= __builtin_add_overflow_p (0, u, 0);\n+  s %= g;\n+  s -= l >> s;\n+  baz (s);\n+}"}]}