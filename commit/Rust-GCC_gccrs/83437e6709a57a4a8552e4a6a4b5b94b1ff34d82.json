{"sha": "83437e6709a57a4a8552e4a6a4b5b94b1ff34d82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODM0MzdlNjcwOWE1N2E0YTg1NTJlNGE2YTRiNWI5NGIxZmYzNGQ4Mg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2013-03-31T20:32:33Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2013-03-31T20:32:33Z"}, "message": "re PR libfortran/56786 (Namelist read fails with designators containing embedded spaces)\n\n2013-03-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libfortran/56786\n\t* io/list_read.c (nml_parse_qualifier): Remove spurious next_char call\n\twhen checking for EOF. Use error return mechanism when EOF detected.\n\tDo not return false unless parse_err_msg and parse_err_msg_size have\n\tbeen set. Use hit_eof.\n\t(nml_get_obj_data): Likewise use the correct error mechanism.\n\t* io/transfer.c (hit_eof): Do not set AFTER_ENDFILE if in namelist\n\tmode.\n\nFrom-SVN: r197290", "tree": {"sha": "56a39940bf7f8affecaa141ef6044be7c6197dbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56a39940bf7f8affecaa141ef6044be7c6197dbd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/83437e6709a57a4a8552e4a6a4b5b94b1ff34d82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83437e6709a57a4a8552e4a6a4b5b94b1ff34d82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/83437e6709a57a4a8552e4a6a4b5b94b1ff34d82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/83437e6709a57a4a8552e4a6a4b5b94b1ff34d82/comments", "author": null, "committer": null, "parents": [{"sha": "ce1731f46d009ca4092596c9bd7a19c65ca51a33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce1731f46d009ca4092596c9bd7a19c65ca51a33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce1731f46d009ca4092596c9bd7a19c65ca51a33"}], "stats": {"total": 66, "additions": 48, "deletions": 18}, "files": [{"sha": "4b8e03a557b4fa56a2f4101527f037ab1f4ef37f", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83437e6709a57a4a8552e4a6a4b5b94b1ff34d82/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83437e6709a57a4a8552e4a6a4b5b94b1ff34d82/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=83437e6709a57a4a8552e4a6a4b5b94b1ff34d82", "patch": "@@ -1,4 +1,15 @@\n-2012-03-29  Tobias Burnus  <burnus@net-b.de>\n+2013-03-31  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/56786\n+\t* io/list_read.c (nml_parse_qualifier): Remove spurious next_char call\n+\twhen checking for EOF. Use error return mechanism when EOF detected.\n+\tDo not return false unless parse_err_msg and parse_err_msg_size have\n+\tbeen set. Use hit_eof.\n+\t(nml_get_obj_data): Likewise use the correct error mechanism.\n+\t* io/transfer.c (hit_eof): Do not set AFTER_ENDFILE if in namelist\n+\tmode.\n+\t\n+2013-03-29  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/56737\n \t* io/format.c (parse_format_list): Also cache FMT_STRING."}, {"sha": "be961f1661e1bb8f34997f8195d08012735bb7e2", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 35, "deletions": 16, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83437e6709a57a4a8552e4a6a4b5b94b1ff34d82/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83437e6709a57a4a8552e4a6a4b5b94b1ff34d82/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=83437e6709a57a4a8552e4a6a4b5b94b1ff34d82", "patch": "@@ -2078,7 +2078,7 @@ nml_parse_qualifier (st_parameter_dt *dtp, descriptor_dimension *ad,\n   /* The next character in the stream should be the '('.  */\n \n   if ((c = next_char (dtp)) == EOF)\n-    return false;\n+    goto err_ret;\n \n   /* Process the qualifier, by dimension and triplet.  */\n \n@@ -2092,7 +2092,7 @@ nml_parse_qualifier (st_parameter_dt *dtp, descriptor_dimension *ad,\n \n \t  /* Process a potential sign.  */\n \t  if ((c = next_char (dtp)) == EOF)\n-\t    return false;\n+\t    goto err_ret;\n \t  switch (c)\n \t    {\n \t    case '-':\n@@ -2110,11 +2110,12 @@ nml_parse_qualifier (st_parameter_dt *dtp, descriptor_dimension *ad,\n \t  /* Process characters up to the next ':' , ',' or ')'.  */\n \t  for (;;)\n \t    {\n-\t      if ((c = next_char (dtp)) == EOF)\n-\t\treturn false;\n-\n+\t      c = next_char (dtp);\n \t      switch (c)\n \t\t{\n+\t\tcase EOF:\n+\t\t  goto err_ret;\n+\n \t\tcase ':':\n                   is_array_section = 1;\n \t\t  break;\n@@ -2137,10 +2138,8 @@ nml_parse_qualifier (st_parameter_dt *dtp, descriptor_dimension *ad,\n \t\t  push_char (dtp, c);\n \t\t  continue;\n \n-\t\tcase ' ': case '\\t':\n+\t\tcase ' ': case '\\t': case '\\r': case '\\n':\n \t\t  eat_spaces (dtp);\n-\t\t  if ((c = next_char (dtp) == EOF))\n-\t\t    return false;\n \t\t  break;\n \n \t\tdefault:\n@@ -2282,6 +2281,15 @@ nml_parse_qualifier (st_parameter_dt *dtp, descriptor_dimension *ad,\n \n err_ret:\n \n+  /* The EOF error message is issued by hit_eof. Return true so that the\n+     caller does not use parse_err_msg and parse_err_msg_size to generate\n+     an unrelated error message.  */\n+  if (c == EOF)\n+    {\n+      hit_eof (dtp);\n+      dtp->u.p.input_complete = 1;\n+      return true;\n+    }\n   return false;\n }\n \n@@ -2751,12 +2759,12 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n     return true;\n \n   if ((c = next_char (dtp)) == EOF)\n-    return false;\n+    goto nml_err_ret;\n   switch (c)\n     {\n     case '=':\n       if ((c = next_char (dtp)) == EOF)\n-\treturn false;\n+\tgoto nml_err_ret;\n       if (c != '?')\n \t{\n \t  snprintf (nml_err_msg, nml_err_msg_size, \n@@ -2806,8 +2814,9 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n       if (!is_separator (c))\n \tpush_char (dtp, tolower(c));\n       if ((c = next_char (dtp)) == EOF)\n-\treturn false;\n-    } while (!( c=='=' || c==' ' || c=='\\t' || c =='(' || c =='%' ));\n+\tgoto nml_err_ret;\n+    }\n+  while (!( c=='=' || c==' ' || c=='\\t' || c =='(' || c =='%' ));\n \n   unget_char (dtp, c);\n \n@@ -2882,7 +2891,7 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n       qualifier_flag = 1;\n \n       if ((c = next_char (dtp)) == EOF)\n-\treturn false;\n+\tgoto nml_err_ret;\n       unget_char (dtp, c);\n     }\n   else if (nl->var_rank > 0)\n@@ -2909,7 +2918,7 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n \n       component_flag = 1;\n       if ((c = next_char (dtp)) == EOF)\n-\treturn false;\n+\tgoto nml_err_ret;\n       goto get_name;\n     }\n \n@@ -2946,7 +2955,7 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n \t}\n \n       if ((c = next_char (dtp)) == EOF)\n-\treturn false;\n+\tgoto nml_err_ret;\n       unget_char (dtp, c);\n     }\n \n@@ -2986,7 +2995,7 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n     return true;\n \n   if ((c = next_char (dtp)) == EOF)\n-    return false;\n+    goto nml_err_ret;\n \n   if (c != '=')\n     {\n@@ -3021,6 +3030,16 @@ nml_get_obj_data (st_parameter_dt *dtp, namelist_info **pprev_nl,\n \n nml_err_ret:\n \n+  /* The EOF error message is issued by hit_eof. Return true so that the\n+     caller does not use nml_err_msg and nml_err_msg_size to generate\n+     an unrelated error message.  */\n+  if (c == EOF)\n+    {\n+      dtp->u.p.input_complete = 1;\n+      unget_char (dtp, c);\n+      hit_eof (dtp);\n+      return true;\n+    }\n   return false;\n }\n "}, {"sha": "bb93009f59fe5793fb2a8f6189072c74e3f400c5", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/83437e6709a57a4a8552e4a6a4b5b94b1ff34d82/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/83437e6709a57a4a8552e4a6a4b5b94b1ff34d82/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=83437e6709a57a4a8552e4a6a4b5b94b1ff34d82", "patch": "@@ -3840,7 +3840,7 @@ hit_eof (st_parameter_dt * dtp)\n       case NO_ENDFILE:\n       case AT_ENDFILE:\n         generate_error (&dtp->common, LIBERROR_END, NULL);\n-\tif (!is_internal_unit (dtp))\n+\tif (!is_internal_unit (dtp) && !dtp->u.p.namelist_mode)\n \t  {\n \t    dtp->u.p.current_unit->endfile = AFTER_ENDFILE;\n \t    dtp->u.p.current_unit->current_record = 0;"}]}