{"sha": "fe9e1702687db062ad2f13939177e1c5f68c8e05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU5ZTE3MDI2ODdkYjA2MmFkMmYxMzkzOTE3N2UxYzVmNjhjOGUwNQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-10T05:12:39Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-10T05:12:39Z"}, "message": "cmd/go: add AIX support\n    \n    For gccgo code avoid --whole-archive and -(.  Use -blibpath instead of\n    -rpath.\n    \n    Reviewed-on: https://go-review.googlesource.com/86956\n\nFrom-SVN: r256417", "tree": {"sha": "cd6484da45af6cf2abe2c24d2697feaf90b559b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cd6484da45af6cf2abe2c24d2697feaf90b559b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe9e1702687db062ad2f13939177e1c5f68c8e05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe9e1702687db062ad2f13939177e1c5f68c8e05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe9e1702687db062ad2f13939177e1c5f68c8e05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe9e1702687db062ad2f13939177e1c5f68c8e05/comments", "author": null, "committer": null, "parents": [{"sha": "76e723a3134cf121b6b9b9a7c46b9e1f74f9ce2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76e723a3134cf121b6b9b9a7c46b9e1f74f9ce2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76e723a3134cf121b6b9b9a7c46b9e1f74f9ce2d"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "f43c1daafe515223e8e61b1a2764c80d5fd62e8f", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe9e1702687db062ad2f13939177e1c5f68c8e05/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe9e1702687db062ad2f13939177e1c5f68c8e05/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=fe9e1702687db062ad2f13939177e1c5f68c8e05", "patch": "@@ -1,4 +1,4 @@\n-98b0942497bf2896127b71d851a79959ed3197cf\n+8e20ba6b6c4906f2f0be4b0a1515d11e0f41fb29\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "dcb38af2ed28b48ab3f1f3243fc652c1d816d2e6", "filename": "libgo/go/cmd/go/internal/work/gccgo.go", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe9e1702687db062ad2f13939177e1c5f68c8e05/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fwork%2Fgccgo.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe9e1702687db062ad2f13939177e1c5f68c8e05/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fwork%2Fgccgo.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fcmd%2Fgo%2Finternal%2Fwork%2Fgccgo.go?ref=fe9e1702687db062ad2f13939177e1c5f68c8e05", "patch": "@@ -375,17 +375,25 @@ func (tools gccgoToolchain) link(b *Builder, root *Action, out, importcfg string\n \t\t}\n \t}\n \n-\tldflags = append(ldflags, \"-Wl,--whole-archive\")\n+\twholeArchive := []string{\"-Wl,--whole-archive\"}\n+\tnoWholeArchive := []string{\"-Wl,--no-whole-archive\"}\n+\tif cfg.Goos == \"aix\" {\n+\t\twholeArchive = nil\n+\t\tnoWholeArchive = nil\n+\t}\n+\tldflags = append(ldflags, wholeArchive...)\n \tldflags = append(ldflags, afiles...)\n-\tldflags = append(ldflags, \"-Wl,--no-whole-archive\")\n+\tldflags = append(ldflags, noWholeArchive...)\n \n \tldflags = append(ldflags, cgoldflags...)\n \tldflags = append(ldflags, envList(\"CGO_LDFLAGS\", \"\")...)\n \tif root.Package != nil {\n \t\tldflags = append(ldflags, root.Package.CgoLDFLAGS...)\n \t}\n \n-\tldflags = str.StringList(\"-Wl,-(\", ldflags, \"-Wl,-)\")\n+\tif cfg.Goos != \"aix\" {\n+\t\tldflags = str.StringList(\"-Wl,-(\", ldflags, \"-Wl,-)\")\n+\t}\n \n \tif root.buildID != \"\" {\n \t\t// On systems that normally use gold or the GNU linker,\n@@ -396,17 +404,24 @@ func (tools gccgoToolchain) link(b *Builder, root *Action, out, importcfg string\n \t\t}\n \t}\n \n+\tvar rLibPath string\n+\tif cfg.Goos == \"aix\" {\n+\t\trLibPath = \"-Wl,-blibpath=\"\n+\t} else {\n+\t\trLibPath = \"-Wl,-rpath=\"\n+\t}\n \tfor _, shlib := range shlibs {\n \t\tldflags = append(\n \t\t\tldflags,\n \t\t\t\"-L\"+filepath.Dir(shlib),\n-\t\t\t\"-Wl,-rpath=\"+filepath.Dir(shlib),\n+\t\t\trLibPath+filepath.Dir(shlib),\n \t\t\t\"-l\"+strings.TrimSuffix(\n \t\t\t\tstrings.TrimPrefix(filepath.Base(shlib), \"lib\"),\n \t\t\t\t\".so\"))\n \t}\n \n \tvar realOut string\n+\tgoLibBegin := str.StringList(wholeArchive, \"-lgolibbegin\", noWholeArchive)\n \tswitch buildmode {\n \tcase \"exe\":\n \t\tif usesCgo && cfg.Goos == \"linux\" {\n@@ -428,7 +443,8 @@ func (tools gccgoToolchain) link(b *Builder, root *Action, out, importcfg string\n \t\t// split-stack and non-split-stack code in a single -r\n \t\t// link, and libgo picks up non-split-stack code from\n \t\t// libffi.\n-\t\tldflags = append(ldflags, \"-Wl,-r\", \"-nostdlib\", \"-Wl,--whole-archive\", \"-lgolibbegin\", \"-Wl,--no-whole-archive\")\n+\t\tldflags = append(ldflags, \"-Wl,-r\", \"-nostdlib\")\n+\t\tldflags = append(ldflags, goLibBegin...)\n \n \t\tif nopie := b.gccNoPie([]string{tools.linker()}); nopie != \"\" {\n \t\t\tldflags = append(ldflags, nopie)\n@@ -443,7 +459,9 @@ func (tools gccgoToolchain) link(b *Builder, root *Action, out, importcfg string\n \t\tout = out + \".o\"\n \n \tcase \"c-shared\":\n-\t\tldflags = append(ldflags, \"-shared\", \"-nostdlib\", \"-Wl,--whole-archive\", \"-lgolibbegin\", \"-Wl,--no-whole-archive\", \"-lgo\", \"-lgcc_s\", \"-lgcc\", \"-lc\", \"-lgcc\")\n+\t\tldflags = append(ldflags, \"-shared\", \"-nostdlib\")\n+\t\tldflags = append(ldflags, goLibBegin...)\n+\t\tldflags = append(ldflags, \"-lgo\", \"-lgcc_s\", \"-lgcc\", \"-lc\", \"-lgcc\")\n \tcase \"shared\":\n \t\tldflags = append(ldflags, \"-zdefs\", \"-shared\", \"-nostdlib\", \"-lgo\", \"-lgcc_s\", \"-lgcc\", \"-lc\")\n "}]}