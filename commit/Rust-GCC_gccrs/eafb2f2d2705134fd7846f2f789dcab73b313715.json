{"sha": "eafb2f2d2705134fd7846f2f789dcab73b313715", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFmYjJmMmQyNzA1MTM0ZmQ3ODQ2ZjJmNzg5ZGNhYjczYjMxMzcxNQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-08-27T19:27:11Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-08-27T19:27:11Z"}, "message": "hashtable (_Hashtable<>): Add missing pointer and const_pointer typedefs.\n\n2008-08-27  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/tr1_impl/hashtable (_Hashtable<>): Add missing pointer and\n\tconst_pointer typedefs.\n\t* testsuite/tr1/6_containers/unordered_set/requirements/typedef.cc:\n\tAdd.\n\t* testsuite/tr1/6_containers/unordered_map/requirements/typedef.cc:\n\tLikewise.\n\t* testsuite/tr1/6_containers/unordered_multiset/requirements/\n\ttypedef.cc: Likewise.\n\t* testsuite/tr1/6_containers/unordered_multimap/requirements/\n\ttypedef.cc: Likewise.\n\t* testsuite/23_containers/unordered_set/requirements/typedef.cc:\n\tLikewise.\n\t* testsuite/23_containers/unordered_map/requirements/typedef.cc:\n\tLikewise.\n\t* testsuite/23_containers/unordered_multiset/requirements/typedef.cc:\n\tLikewise.\n\t* testsuite/23_containers/unordered_multimap/requirements/typedef.cc:\n\tLikewise.\n\nFrom-SVN: r139674", "tree": {"sha": "1719b422062bdc179191040dee265329a37b30db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1719b422062bdc179191040dee265329a37b30db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eafb2f2d2705134fd7846f2f789dcab73b313715", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eafb2f2d2705134fd7846f2f789dcab73b313715", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eafb2f2d2705134fd7846f2f789dcab73b313715", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eafb2f2d2705134fd7846f2f789dcab73b313715/comments", "author": null, "committer": null, "parents": [{"sha": "f3af21b556a172599a89b677df3449b05a24686e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3af21b556a172599a89b677df3449b05a24686e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3af21b556a172599a89b677df3449b05a24686e"}], "stats": {"total": 395, "additions": 395, "deletions": 0}, "files": [{"sha": "ad7aa94cb3299f2640f5deaa999d4c83539bb6fd", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=eafb2f2d2705134fd7846f2f789dcab73b313715", "patch": "@@ -1,3 +1,24 @@\n+2008-08-27  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/tr1_impl/hashtable (_Hashtable<>): Add missing pointer and\n+\tconst_pointer typedefs.\n+\t* testsuite/tr1/6_containers/unordered_set/requirements/typedef.cc:\n+\tAdd.\n+\t* testsuite/tr1/6_containers/unordered_map/requirements/typedef.cc:\n+\tLikewise.\n+\t* testsuite/tr1/6_containers/unordered_multiset/requirements/\n+\ttypedef.cc: Likewise.\n+\t* testsuite/tr1/6_containers/unordered_multimap/requirements/\n+\ttypedef.cc: Likewise.\n+\t* testsuite/23_containers/unordered_set/requirements/typedef.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_map/requirements/typedef.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multiset/requirements/typedef.cc:\n+\tLikewise.\n+\t* testsuite/23_containers/unordered_multimap/requirements/typedef.cc:\n+\tLikewise.\n+\n 2008-08-27  Paul Brook  <paul@codesourcery.com>\n \n \t* libsupc++/eh_call.cc (__cxa_call_unexpected): Fix name of"}, {"sha": "c76deb06ca7dfa6a0c655d4852c597b14a0d99e0", "filename": "libstdc++-v3/include/tr1_impl/hashtable", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fhashtable", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fhashtable", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1_impl%2Fhashtable?ref=eafb2f2d2705134fd7846f2f789dcab73b313715", "patch": "@@ -149,6 +149,8 @@ _GLIBCXX_BEGIN_NAMESPACE_TR1\n       // hasher, if present, comes from _Hash_code_base.\n       typedef typename _Allocator::difference_type        difference_type;\n       typedef typename _Allocator::size_type              size_type;\n+      typedef typename _Allocator::pointer                pointer;\n+      typedef typename _Allocator::const_pointer          const_pointer;\n       typedef typename _Allocator::reference              reference;\n       typedef typename _Allocator::const_reference        const_reference;\n       "}, {"sha": "f3c3e5f38e398ea6dba2400441e45b46e4101282", "filename": "libstdc++-v3/testsuite/23_containers/unordered_map/requirements/typedef.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Ftypedef.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Ftypedef.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_map%2Frequirements%2Ftypedef.cc?ref=eafb2f2d2705134fd7846f2f789dcab73b313715", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2008-08-27  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2008 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <unordered_map>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::unordered_map<int, int>            test_type;\n+\n+  typedef test_type::key_type                     key_type;\n+  typedef test_type::value_type                   value_type;\n+  typedef test_type::mapped_type                  mapped_type;\n+  typedef test_type::hasher                       hasher;\n+  typedef test_type::key_equal                    key_equal;\n+  typedef test_type::allocator_type               allocator_type;\n+  typedef test_type::pointer                      pointer;\n+  typedef test_type::const_pointer                const_pointer;\n+  typedef test_type::reference                    reference;\n+  typedef test_type::const_reference              const_reference;\n+  typedef test_type::size_type                    size_type;\n+  typedef test_type::difference_type              difference_type;\n+  typedef test_type::iterator                     iterator;\n+  typedef test_type::const_iterator               const_iterator;\n+  typedef test_type::local_iterator               local_iterator;\n+  typedef test_type::const_local_iterator         const_local_iterator;\n+}"}, {"sha": "1db43f7951263269995868439d62d9673008886a", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multimap/requirements/typedef.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Ftypedef.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Ftypedef.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multimap%2Frequirements%2Ftypedef.cc?ref=eafb2f2d2705134fd7846f2f789dcab73b313715", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2008-08-27  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2008 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <unordered_map>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::unordered_multimap<int, int>       test_type;\n+\n+  typedef test_type::key_type                     key_type;\n+  typedef test_type::value_type                   value_type;\n+  typedef test_type::mapped_type                  mapped_type;\n+  typedef test_type::hasher                       hasher;\n+  typedef test_type::key_equal                    key_equal;\n+  typedef test_type::allocator_type               allocator_type;\n+  typedef test_type::pointer                      pointer;\n+  typedef test_type::const_pointer                const_pointer;\n+  typedef test_type::reference                    reference;\n+  typedef test_type::const_reference              const_reference;\n+  typedef test_type::size_type                    size_type;\n+  typedef test_type::difference_type              difference_type;\n+  typedef test_type::iterator                     iterator;\n+  typedef test_type::const_iterator               const_iterator;\n+  typedef test_type::local_iterator               local_iterator;\n+  typedef test_type::const_local_iterator         const_local_iterator;\n+}"}, {"sha": "1c42fbbe95e35ec82997fca658b881d8d1fc7e13", "filename": "libstdc++-v3/testsuite/23_containers/unordered_multiset/requirements/typedef.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Ftypedef.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Ftypedef.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_multiset%2Frequirements%2Ftypedef.cc?ref=eafb2f2d2705134fd7846f2f789dcab73b313715", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2008-08-27  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2008 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <unordered_set>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::unordered_multiset<int>            test_type;\n+\n+  typedef test_type::key_type                     key_type;\n+  typedef test_type::value_type                   value_type;\n+  typedef test_type::hasher                       hasher;\n+  typedef test_type::key_equal                    key_equal;\n+  typedef test_type::allocator_type               allocator_type;\n+  typedef test_type::pointer                      pointer;\n+  typedef test_type::const_pointer                const_pointer;\n+  typedef test_type::reference                    reference;\n+  typedef test_type::const_reference              const_reference;\n+  typedef test_type::size_type                    size_type;\n+  typedef test_type::difference_type              difference_type;\n+  typedef test_type::iterator                     iterator;\n+  typedef test_type::const_iterator               const_iterator;\n+  typedef test_type::local_iterator               local_iterator;\n+  typedef test_type::const_local_iterator         const_local_iterator;\n+}"}, {"sha": "bdc83789de061a3fa6751aeca7dd38c271fc2ec5", "filename": "libstdc++-v3/testsuite/23_containers/unordered_set/requirements/typedef.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Ftypedef.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Ftypedef.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Funordered_set%2Frequirements%2Ftypedef.cc?ref=eafb2f2d2705134fd7846f2f789dcab73b313715", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// 2008-08-27  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2008 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <unordered_set>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::unordered_set<int>                 test_type;\n+\n+  typedef test_type::key_type                     key_type;\n+  typedef test_type::value_type                   value_type;\n+  typedef test_type::hasher                       hasher;\n+  typedef test_type::key_equal                    key_equal;\n+  typedef test_type::allocator_type               allocator_type;\n+  typedef test_type::pointer                      pointer;\n+  typedef test_type::const_pointer                const_pointer;\n+  typedef test_type::reference                    reference;\n+  typedef test_type::const_reference              const_reference;\n+  typedef test_type::size_type                    size_type;\n+  typedef test_type::difference_type              difference_type;\n+  typedef test_type::iterator                     iterator;\n+  typedef test_type::const_iterator               const_iterator;\n+  typedef test_type::local_iterator               local_iterator;\n+  typedef test_type::const_local_iterator         const_local_iterator;\n+}"}, {"sha": "eff52a3125a23efe6c56e8ddb9abfb8bceae0b79", "filename": "libstdc++-v3/testsuite/tr1/6_containers/unordered_map/requirements/typedef.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_map%2Frequirements%2Ftypedef.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_map%2Frequirements%2Ftypedef.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_map%2Frequirements%2Ftypedef.cc?ref=eafb2f2d2705134fd7846f2f789dcab73b313715", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+// 2008-08-27  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2008 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 6.3.4.4 unordered_map\n+\n+#include <tr1/unordered_map>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::tr1::unordered_map<int, int>       test_type;\n+\n+  typedef test_type::key_type                     key_type;\n+  typedef test_type::value_type                   value_type;\n+  typedef test_type::mapped_type                  mapped_type;\n+  typedef test_type::hasher                       hasher;\n+  typedef test_type::key_equal                    key_equal;\n+  typedef test_type::allocator_type               allocator_type;\n+  typedef test_type::pointer                      pointer;\n+  typedef test_type::const_pointer                const_pointer;\n+  typedef test_type::reference                    reference;\n+  typedef test_type::const_reference              const_reference;\n+  typedef test_type::size_type                    size_type;\n+  typedef test_type::difference_type              difference_type;\n+  typedef test_type::iterator                     iterator;\n+  typedef test_type::const_iterator               const_iterator;\n+  typedef test_type::local_iterator               local_iterator;\n+  typedef test_type::const_local_iterator         const_local_iterator;\n+}"}, {"sha": "b46b8208ac39f309516087fe59e0a8259f143fb1", "filename": "libstdc++-v3/testsuite/tr1/6_containers/unordered_multimap/requirements/typedef.cc", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multimap%2Frequirements%2Ftypedef.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multimap%2Frequirements%2Ftypedef.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multimap%2Frequirements%2Ftypedef.cc?ref=eafb2f2d2705134fd7846f2f789dcab73b313715", "patch": "@@ -0,0 +1,47 @@\n+// { dg-do compile }\n+// 2008-08-27  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2008 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 6.3.4.6 unordered_multimap\n+\n+#include <tr1/unordered_map>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::tr1::unordered_multimap<int, int>  test_type;\n+\n+  typedef test_type::key_type                     key_type;\n+  typedef test_type::value_type                   value_type;\n+  typedef test_type::mapped_type                  mapped_type;\n+  typedef test_type::hasher                       hasher;\n+  typedef test_type::key_equal                    key_equal;\n+  typedef test_type::allocator_type               allocator_type;\n+  typedef test_type::pointer                      pointer;\n+  typedef test_type::const_pointer                const_pointer;\n+  typedef test_type::reference                    reference;\n+  typedef test_type::const_reference              const_reference;\n+  typedef test_type::size_type                    size_type;\n+  typedef test_type::difference_type              difference_type;\n+  typedef test_type::iterator                     iterator;\n+  typedef test_type::const_iterator               const_iterator;\n+  typedef test_type::local_iterator               local_iterator;\n+  typedef test_type::const_local_iterator         const_local_iterator;\n+}"}, {"sha": "80ec8eccbce06061f5d0ee70106b82b5a55e7b64", "filename": "libstdc++-v3/testsuite/tr1/6_containers/unordered_multiset/requirements/typedef.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multiset%2Frequirements%2Ftypedef.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multiset%2Frequirements%2Ftypedef.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_multiset%2Frequirements%2Ftypedef.cc?ref=eafb2f2d2705134fd7846f2f789dcab73b313715", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+// 2008-08-27  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2008 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 6.3.4.5 unordered_multiset\n+\n+#include <tr1/unordered_set>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::tr1::unordered_multiset<int>       test_type;\n+\n+  typedef test_type::key_type                     key_type;\n+  typedef test_type::value_type                   value_type;\n+  typedef test_type::hasher                       hasher;\n+  typedef test_type::key_equal                    key_equal;\n+  typedef test_type::allocator_type               allocator_type;\n+  typedef test_type::pointer                      pointer;\n+  typedef test_type::const_pointer                const_pointer;\n+  typedef test_type::reference                    reference;\n+  typedef test_type::const_reference              const_reference;\n+  typedef test_type::size_type                    size_type;\n+  typedef test_type::difference_type              difference_type;\n+  typedef test_type::iterator                     iterator;\n+  typedef test_type::const_iterator               const_iterator;\n+  typedef test_type::local_iterator               local_iterator;\n+  typedef test_type::const_local_iterator         const_local_iterator;\n+}"}, {"sha": "6994e84e281ded089f877264c27181da50ee3b50", "filename": "libstdc++-v3/testsuite/tr1/6_containers/unordered_set/requirements/typedef.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_set%2Frequirements%2Ftypedef.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eafb2f2d2705134fd7846f2f789dcab73b313715/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_set%2Frequirements%2Ftypedef.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F6_containers%2Funordered_set%2Frequirements%2Ftypedef.cc?ref=eafb2f2d2705134fd7846f2f789dcab73b313715", "patch": "@@ -0,0 +1,46 @@\n+// { dg-do compile }\n+// 2008-08-27  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+// Copyright (C) 2008 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+// 6.3.4.3 unordered_set\n+\n+#include <tr1/unordered_set>\n+\n+void test01()\n+{\n+  // Check for required typedefs\n+  typedef std::tr1::unordered_set<int>            test_type;\n+\n+  typedef test_type::key_type                     key_type;\n+  typedef test_type::value_type                   value_type;\n+  typedef test_type::hasher                       hasher;\n+  typedef test_type::key_equal                    key_equal;\n+  typedef test_type::allocator_type               allocator_type;\n+  typedef test_type::pointer                      pointer;\n+  typedef test_type::const_pointer                const_pointer;\n+  typedef test_type::reference                    reference;\n+  typedef test_type::const_reference              const_reference;\n+  typedef test_type::size_type                    size_type;\n+  typedef test_type::difference_type              difference_type;\n+  typedef test_type::iterator                     iterator;\n+  typedef test_type::const_iterator               const_iterator;\n+  typedef test_type::local_iterator               local_iterator;\n+  typedef test_type::const_local_iterator         const_local_iterator;\n+}"}]}