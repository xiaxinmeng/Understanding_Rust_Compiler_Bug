{"sha": "b1c83c23806e200f28a5467e682344bf828dfc9e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjFjODNjMjM4MDZlMjAwZjI4YTU0NjdlNjgyMzQ0YmY4MjhkZmM5ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-12-02T02:57:40Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-12-02T02:57:40Z"}, "message": "call.c (build_new_method_call_1): Handle aggregate initialization.\n\n\t* call.c (build_new_method_call_1): Handle aggregate initialization.\n\t* tree.c (stabilize_init): Handle CONSTRUCTOR.\n\nFrom-SVN: r181902", "tree": {"sha": "533f69a58016333ea6144ae9d283af25fffe6db0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/533f69a58016333ea6144ae9d283af25fffe6db0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b1c83c23806e200f28a5467e682344bf828dfc9e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c83c23806e200f28a5467e682344bf828dfc9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1c83c23806e200f28a5467e682344bf828dfc9e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1c83c23806e200f28a5467e682344bf828dfc9e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7371639a96499bb08992db65cefea1712c47c39f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7371639a96499bb08992db65cefea1712c47c39f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7371639a96499bb08992db65cefea1712c47c39f"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "201f5efb603996e6e0bf3b5483392565582f8226", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c83c23806e200f28a5467e682344bf828dfc9e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c83c23806e200f28a5467e682344bf828dfc9e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=b1c83c23806e200f28a5467e682344bf828dfc9e", "patch": "@@ -1,3 +1,8 @@\n+2011-12-01  Jason Merrill  <jason@redhat.com>\n+\n+\t* call.c (build_new_method_call_1): Handle aggregate initialization.\n+\t* tree.c (stabilize_init): Handle CONSTRUCTOR.\n+\n 2011-12-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/51326"}, {"sha": "548a36bf8e502f2b51984152041f70d02cd587e9", "filename": "gcc/cp/call.c", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c83c23806e200f28a5467e682344bf828dfc9e/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c83c23806e200f28a5467e682344bf828dfc9e/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=b1c83c23806e200f28a5467e682344bf828dfc9e", "patch": "@@ -7198,6 +7198,7 @@ build_new_method_call_1 (tree instance, tree fns, VEC(tree,gc) **args,\n       && CONSTRUCTOR_IS_DIRECT_INIT (VEC_index (tree, *args, 0)))\n     {\n       tree init_list = VEC_index (tree, *args, 0);\n+      tree init = NULL_TREE;\n \n       gcc_assert (VEC_length (tree, *args) == 1\n \t\t  && !(flags & LOOKUP_ONLYCONVERTING));\n@@ -7209,8 +7210,16 @@ build_new_method_call_1 (tree instance, tree fns, VEC(tree,gc) **args,\n       if (CONSTRUCTOR_NELTS (init_list) == 0\n \t  && TYPE_HAS_DEFAULT_CONSTRUCTOR (basetype)\n \t  && !processing_template_decl)\n+\tinit = build_value_init (basetype, complain);\n+\n+      /* If BASETYPE is an aggregate, we need to do aggregate\n+\t initialization.  */\n+      else if (CP_AGGREGATE_TYPE_P (basetype))\n+\tinit = digest_init (basetype, init_list, complain);\n+\n+      if (init)\n \t{\n-\t  tree ob, init = build_value_init (basetype, complain);\n+\t  tree ob;\n \t  if (integer_zerop (instance_ptr))\n \t    return get_target_expr_sfinae (init, complain);\n \t  ob = build_fold_indirect_ref (instance_ptr);\n@@ -7219,6 +7228,7 @@ build_new_method_call_1 (tree instance, tree fns, VEC(tree,gc) **args,\n \t  return init;\n \t}\n \n+      /* Otherwise go ahead with overload resolution.  */\n       add_list_candidates (fns, first_mem_arg, init_list,\n \t\t\t   basetype, explicit_targs, template_only,\n \t\t\t   conversion_path, access_binfo, flags, &candidates);"}, {"sha": "8d179d8d2a08efb4f60cf84765eef805d4ae57b2", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c83c23806e200f28a5467e682344bf828dfc9e/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c83c23806e200f28a5467e682344bf828dfc9e/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=b1c83c23806e200f28a5467e682344bf828dfc9e", "patch": "@@ -3337,6 +3337,7 @@ stabilize_init (tree init, tree *initp)\n \n   if (TREE_CODE (t) == INIT_EXPR\n       && TREE_CODE (TREE_OPERAND (t, 1)) != TARGET_EXPR\n+      && TREE_CODE (TREE_OPERAND (t, 1)) != CONSTRUCTOR\n       && TREE_CODE (TREE_OPERAND (t, 1)) != AGGR_INIT_EXPR)\n     {\n       TREE_OPERAND (t, 1) = stabilize_expr (TREE_OPERAND (t, 1), initp);"}, {"sha": "cd9e27e77f8035219653464e7147a87d4d42c324", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c83c23806e200f28a5467e682344bf828dfc9e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c83c23806e200f28a5467e682344bf828dfc9e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b1c83c23806e200f28a5467e682344bf828dfc9e", "patch": "@@ -1,3 +1,7 @@\n+2011-12-01  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp0x/initlist61.C: New.\n+\n 2011-12-01  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/51326"}, {"sha": "28eccc2637db6ca015ddb8f8f7d904088383e834", "filename": "gcc/testsuite/g++.dg/cpp0x/initlist61.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b1c83c23806e200f28a5467e682344bf828dfc9e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist61.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b1c83c23806e200f28a5467e682344bf828dfc9e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist61.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Finitlist61.C?ref=b1c83c23806e200f28a5467e682344bf828dfc9e", "patch": "@@ -0,0 +1,9 @@\n+// { dg-do compile { target c++11 } }\n+\n+struct N { N(int); };\n+struct A { N i,j; };\n+\n+int main()\n+{\n+  A* ap = new A{1,2};\n+}"}]}