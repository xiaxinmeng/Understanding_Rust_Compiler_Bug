{"sha": "de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU3NmEzOWM2ZTA1NTBlZDljZmM4N2E1ZTlkMTEyZjdmOGRiZWZkNw==", "commit": {"author": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-12T21:26:45Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-12T21:26:45Z"}, "message": "s-stalib.adb: Add more comments on with statements being needed\n\n\t* s-stalib.adb: Add more comments on with statements being needed\n\n\t* par-ch12.adb: Minor reformatting\n\n\t* prj-dect.ads: Fix copyright header\n\n\t* s-arit64.adb (Multiply_With_Ovflo_Check): Fix case where both\n\tinputs fit in 32 bits, but the result still overflows.\n\n\t* s-fatgen.ads: Minor comment improvement\n\n\t* sem_ch4.adb (Analyze_Selected_Component): If the prefix is of a\n\tformal derived type, look for an inherited component from the full\n\tview of the parent, if any.\n\n\t* checks.ads (Apply_Alignment_Check): New procedure.\n\n\t* exp_ch13.adb (Expand_N_Freeze_Entity): Generate dynamic check to\n\tensure that the alignment of objects with address clauses is\n\tappropriate, and raise PE if not.\n\n\t* exp_util.ads (Must_Be_Aligned): Removed, replaced by\n\tExp_Pakd.Known_Aligned_Enough\n\n\t* mdllfile.ads: Minor reformatting\n\n\t* mlib-fil.ads: Minor reformatting\n\n\t* exp_ch8.adb (Expand_N_Object_Renaming_Declaration): Extend previous\n\tfix to any component reference if enclosing record has non-standard\n\trepresentation.\n\n\t* g-dirope.ads (Find, Wildcard_Iterator): Moved to child package\n\tIteration\n\n\t* freeze.ads: Make Freeze_Fixed_Point_Type visible, for use in\n\tsem_attr.\n\n\t* impunit.adb: Add entry for GNAT.Directory_Operations.Iteration\n\n\t* g-regexp.adb: Remove all debug code, since it isn't required anymore,\n\tand it adds dependencies to system.io.\n\n\t* g-dirope.adb (Expand_Path.Var): Correctly detect end of\n\tvariable name.\n\n*** s-stalib.adb\t2001/09/03 15:24:33\t1.17\n--- s-stalib.adb\t2001/10/16 13:14:46\t1.18\n***************\n*** 46,59 ****\n  --  elaboration circularities with Ada.Exceptions if polling is on.\n\n  with System.Soft_Links;\n! --  Referenced directly from generated code\n! --  Also referenced from exception handling routines.\n  --  This is needed for programs that don't use exceptions explicitely but\n  --  direct calls to Ada.Exceptions are generated by gigi (for example,\n  --  by calling __gnat_raise_constraint_error directly).\n\n  with System.Memory;\n! --  Referenced directly from generated code\n\n  package body System.Standard_Library is\n\n--- 46,62 ----\n  --  elaboration circularities with Ada.Exceptions if polling is on.\n\n  with System.Soft_Links;\n! --  Referenced directly from generated code using external symbols so it\n! --  must always be present in a build, even if no unit has a direct with\n! --  of this unit. Also referenced from exception handling routines.\n  --  This is needed for programs that don't use exceptions explicitely but\n  --  direct calls to Ada.Exceptions are generated by gigi (for example,\n  --  by calling __gnat_raise_constraint_error directly).\n\n  with System.Memory;\n! --  Referenced directly from generated code using external symbols, so it\n! --  must always be present in a build, even if no unit has a direct with\n! --  of this unit.\n\n  package body System.Standard_Library is\n\n\n*** par-ch12.adb\t2001/10/19 15:22:18\t1.48\n--- par-ch12.adb\t2001/10/19 15:24:48\t1.49\n***************\n*** 452,466 ****\n        if Def_Node /= Error then\n           Set_Formal_Type_Definition (Decl_Node, Def_Node);\n           TF_Semicolon;\n        else\n           Decl_Node := Error;\n\n           if Token = Tok_Semicolon then\n-             --   Avoid further cascaded errors.\n              Scan;\n           end if;\n        end if;\n-\n\n        return Decl_Node;\n     end P_Formal_Type_Declaration;\n--- 452,467 ----\n        if Def_Node /= Error then\n           Set_Formal_Type_Definition (Decl_Node, Def_Node);\n           TF_Semicolon;\n+\n        else\n           Decl_Node := Error;\n\n+          --  If we have semicolon, skip it to avoid cascaded errors\n+\n           if Token = Tok_Semicolon then\n              Scan;\n           end if;\n        end if;\n\n        return Decl_Node;\n     end P_Formal_Type_Declaration;\n\n*** prj-dect.ads\t2001/10/20 10:28:13\t1.4\n--- prj-dect.ads\t2001/10/20 11:43:56\t1.5\n***************\n*** 8,14 ****\n  --                                                                          --\n  --                            $Revision$\n  --                                                                          --\n! --          Copyright (C) 2000-2001 Free Software Foundation, Inc.          --\n  --                                                                          --\n  -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n  -- terms of the  GNU General Public License as published  by the Free Soft- --\n--- 8,14 ----\n  --                                                                          --\n  --                            $Revision$\n  --                                                                          --\n! --             Copyright (C) 2001 Free Software Foundation, Inc.            --\n  --                                                                          --\n  -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n  -- terms of the  GNU General Public License as published  by the Free Soft- --\n\n*** s-arit64.adb\t2001/02/09 15:10:29\t1.16\n--- s-arit64.adb\t2001/10/20 14:50:39\t1.17\n***************\n*** 325,337 ****\n              T2 := Xhi * Ylo;\n           end if;\n\n!       else\n!          if Yhi /= 0 then\n!             T2 := Xlo * Yhi;\n!          else\n!             return X * Y;\n!          end if;\n        end if;\n\n        T1 := Xlo * Ylo;\n        T2 := T2 + Hi (T1);\n--- 325,339 ----\n              T2 := Xhi * Ylo;\n           end if;\n\n!       elsif Yhi /= 0 then\n!          T2 := Xlo * Yhi;\n!\n!       else -- Yhi = Xhi = 0\n!          T2 := 0;\n        end if;\n+\n+       --  Here we have T2 set to the contribution to the upper half\n+       --  of the result from the upper halves of the input values.\n\n        T1 := Xlo * Ylo;\n        T2 := T2 + Hi (T1);\n\n*** s-fatgen.ads\t2001/07/20 00:59:34\t1.9\n--- s-fatgen.ads\t2001/10/20 18:37:39\t1.10\n***************\n*** 89,97 ****\n\n     function Unbiased_Rounding (X : T)                       return T;\n\n!    function Valid             (X : access T)                return Boolean;\n!    --  The argument must be passed by reference here, as T may be\n!    --  an abnormal value that can be passed in a floating point register.\n\n  private\n     pragma Inline (Machine);\n--- 89,100 ----\n\n     function Unbiased_Rounding (X : T)                       return T;\n\n!    function Valid (X : access T) return Boolean;\n!    --  This function checks if the object of type T referenced by X\n!    --  is valid, and returns True/False accordingly. The parameter is\n!    --  passed by reference (access) here, as the object of type T may\n!    --  be an abnormal value that cannot be passed in a floating-point\n!    --  register, and the whole point of 'Valid is to prevent exceptions.\n\n  private\n     pragma Inline (Machine);\n\n*** sem_ch4.adb\t2001/09/24 22:32:31\t1.511\n--- sem_ch4.adb\t2001/10/21 17:41:52\t1.512\n***************\n*** 2691,2696 ****\n--- 2691,2708 ----\n\n              Check_Misspelled_Selector (Entity_List, Sel);\n\n+          elsif Is_Generic_Type (Prefix_Type)\n+            and then Ekind (Prefix_Type) = E_Record_Type_With_Private\n+            and then Is_Record_Type (Etype (Prefix_Type))\n+          then\n+             --  If this is a derived formal type, the parent may have a\n+             --  different visibility at this point. Try for an inherited\n+             --  component before reporting an error.\n+\n+             Set_Etype (Prefix (N), Etype (Prefix_Type));\n+             Analyze_Selected_Component (N);\n+             return;\n+\n           else\n              if Ekind (Prefix_Type) = E_Record_Subtype then\n\n\n*** checks.ads\t2001/07/16 01:26:04\t1.55\n--- checks.ads\t2001/10/28 15:13:02\t1.56\n***************\n*** 83,88 ****\n--- 83,95 ----\n     --  the object denoted by the access parameter is not deeper than the\n     --  level of the type Typ. Program_Error is raised if the check fails.\n\n+    procedure Apply_Alignment_Check (E : Entity_Id; N : Node_Id);\n+    --  E is the entity for an object. If there is an address clause for\n+    --  this entity, and checks are enabled, then this procedure generates\n+    --  a check that the specified address has an alignment consistent with\n+    --  the alignment of the object, raising PE if this is not the case. The\n+    --  resulting check (if one is generated) is inserted before node N.\n+\n     procedure Apply_Array_Size_Check (N : Node_Id; Typ : Entity_Id);\n     --  N is the node for an object declaration that declares an object of\n     --  array type Typ. This routine generates, if necessary, a check that\n\n*** exp_ch13.adb\t2001/07/16 21:21:29\t1.76\n--- exp_ch13.adb\t2001/10/28 15:13:25\t1.77\n***************\n*** 27,32 ****\n--- 27,33 ----\n  ------------------------------------------------------------------------------\n\n  with Atree;    use Atree;\n+ with Checks;   use Checks;\n  with Einfo;    use Einfo;\n  with Exp_Ch3;  use Exp_Ch3;\n  with Exp_Ch6;  use Exp_Ch6;\n***************\n*** 236,245 ****\n        Decl           : Node_Id;\n\n     begin\n!       if not Is_Type (E) and then not Is_Subprogram (E) then\n           return;\n        end if;\n\n        E_Scope := Scope (E);\n\n        --  If we are freezing entities defined in protected types, they\n--- 237,256 ----\n        Decl           : Node_Id;\n\n     begin\n!       --  For object, with address clause, check alignment is OK\n!\n!       if Is_Object (E) then\n!          Apply_Alignment_Check (E, N);\n!\n!       --  Only other items requiring any front end action are\n!       --  types and subprograms.\n!\n!       elsif not Is_Type (E) and then not Is_Subprogram (E) then\n           return;\n        end if;\n\n+       --  Here E is a type or a subprogram\n+\n        E_Scope := Scope (E);\n\n        --  If we are freezing entities defined in protected types, they\n***************\n*** 304,314 ****\n\n        elsif Is_Subprogram (E) then\n           Freeze_Subprogram (N);\n-\n-       --  No other entities require any front end freeze actions\n-\n-       else\n-          null;\n        end if;\n\n        --  Analyze actions generated by freezing. The init_proc contains\n--- 315,320 ----\n\n*** exp_util.ads\t2001/07/23 10:05:17\t1.112\n--- exp_util.ads\t2001/10/28 15:14:04\t1.113\n***************\n*** 372,386 ****\n     --  routine is to help avoid generating troublesome temporaries that\n     --  intefere with the stack checking mechanism.\n\n-    function Must_Be_Aligned (Obj : Node_Id) return Boolean;\n-    --  Given an object reference, determines whether or not the object\n-    --  is required to be aligned according to its type'alignment value.\n-    --  Normally, objects are required to be aligned, and the result will\n-    --  be True. The situation in which this is not the case is if the\n-    --  object reference involves a component of a packed array, where\n-    --  the type of the component is not required to have strict alignment.\n-    --  In this case, false will be returned.\n-\n     procedure Remove_Side_Effects\n       (Exp          : Node_Id;\n        Name_Req     : Boolean := False;\n--- 372,377 ----\n\n*** mdllfile.ads\t2001/10/29 02:06:24\t1.2\n--- mdllfile.ads\t2001/10/29 02:50:12\t1.3\n***************\n*** 26,52 ****\n  --                                                                          --\n  ------------------------------------------------------------------------------\n\n! --  Simple services used by GNATDLL to deal with Filename extension.\n\n  package MDLL.Files is\n\n     No_Ext : constant String := \"\";\n\n!    function Get_Ext (Filename : in String)\n!                      return String;\n!    --  return filename's extension.\n!\n!    function Is_Ali (Filename : in String)\n!                     return Boolean;\n!    --  test if Filename is an Ada library file (.ali).\n!\n!    function Is_Obj (Filename : in String)\n!                     return Boolean;\n!    --  test if Filename is an object file (.o or .obj).\n!\n!    function Ext_To (Filename : in String;\n!                     New_Ext  : in String := No_Ext)\n!                     return String;\n!    --  return Filename with the extension change to New_Ext.\n\n  end MDLL.Files;\n--- 26,51 ----\n  --                                                                          --\n  ------------------------------------------------------------------------------\n\n! --  Simple services used by GNATDLL to deal with Filename extension\n\n  package MDLL.Files is\n\n     No_Ext : constant String := \"\";\n+    --  Used to mark the absence of an extension\n\n!    function Get_Ext (Filename : String) return String;\n!    --  Return extension of Filename\n!\n!    function Is_Ali (Filename : String) return Boolean;\n!    --  Test if Filename is an Ada library file (.ali).\n!\n!    function Is_Obj (Filename : String) return Boolean;\n!    --  Test if Filename is an object file (.o or .obj)\n!\n!    function Ext_To\n!      (Filename : String;\n!       New_Ext  : String := No_Ext)\n!       return     String;\n!    --  Return Filename with the extension change to New_Ext\n\n  end MDLL.Files;\n\n*** mlib-fil.ads\t2001/10/29 02:06:26\t1.3\n--- mlib-fil.ads\t2001/10/29 02:51:28\t1.4\n***************\n*** 36,51 ****\n        return     String;\n     --  Return Filename with the extension change to New_Ext.\n\n!    function Get_Ext (Filename : in String) return String;\n     --  Return extension of filename.\n\n     function Is_Archive (Filename : String) return Boolean;\n     --  Test if filename is an archive\n\n!    function Is_C (Filename : in String) return Boolean;\n     --  Test if Filename is a C file\n\n!    function Is_Obj (Filename : in String) return Boolean;\n     --  Test if Filename is an object file\n\n  end MLib.Fil;\n--- 36,51 ----\n        return     String;\n     --  Return Filename with the extension change to New_Ext.\n\n!    function Get_Ext (Filename : String) return String;\n     --  Return extension of filename.\n\n     function Is_Archive (Filename : String) return Boolean;\n     --  Test if filename is an archive\n\n!    function Is_C (Filename : String) return Boolean;\n     --  Test if Filename is a C file\n\n!    function Is_Obj (Filename : String) return Boolean;\n     --  Test if Filename is an object file\n\n  end MLib.Fil;\n\n*** exp_ch8.adb\t2001/10/03 02:17:32\t1.30\n--- exp_ch8.adb\t2001/10/29 17:32:24\t1.31\n***************\n*** 59,65 ****\n     --  of the renamed object. The cases in which this is not true are when\n     --  this address is not computable, since it involves extraction of a\n     --  packed array element, or of a record component to which a component\n!    --  clause applies (that can specify an arbitrary bit boundary).\n\n     --  In these two cases, we pre-evaluate the renaming expression, by\n     --  extracting and freezing the values of any subscripts, and then we\n--- 59,66 ----\n     --  of the renamed object. The cases in which this is not true are when\n     --  this address is not computable, since it involves extraction of a\n     --  packed array element, or of a record component to which a component\n!    --  clause applies (that can specify an arbitrary bit boundary), or where\n!    --  the enclosing record itself has a non-standard representation.\n\n     --  In these two cases, we pre-evaluate the renaming expression, by\n     --  extracting and freezing the values of any subscripts, and then we\n***************\n*** 211,228 ****\n              end if;\n\n           elsif Nkind (Nam) = N_Selected_Component then\n!             if Present (Component_Clause (Entity (Selector_Name (Nam)))) then\n!                return True;\n\n!             elsif Ekind (Entity (Selector_Name (Nam))) = E_Discriminant\n!               and then Is_Record_Type (Etype (Prefix (Nam)))\n!               and then not Is_Concurrent_Record_Type (Etype (Prefix (Nam)))\n!             then\n!                return True;\n\n!             else\n!                return Evaluation_Required (Prefix (Nam));\n!             end if;\n\n           else\n              return False;\n--- 212,236 ----\n              end if;\n\n           elsif Nkind (Nam) = N_Selected_Component then\n!             declare\n!                Rec_Type : Entity_Id := Etype (Prefix (Nam));\n\n!             begin\n!                if Present (Component_Clause (Entity (Selector_Name (Nam))))\n!                  or else Has_Non_Standard_Rep (Rec_Type)\n!                then\n!                   return True;\n!\n!                elsif Ekind (Entity (Selector_Name (Nam))) = E_Discriminant\n!                  and then Is_Record_Type (Rec_Type)\n!                  and then not Is_Concurrent_Record_Type (Rec_Type)\n!                then\n!                   return True;\n\n!                else\n!                   return Evaluation_Required (Prefix (Nam));\n!                end if;\n!             end;\n\n           else\n              return False;\n\n*** g-dirope.ads\t2001/08/27 09:48:38\t1.12\n--- g-dirope.ads\t2001/10/29 19:18:13\t1.13\n***************\n*** 38,43 ****\n--- 38,47 ----\n  --  can be treated as a file, using open and close routines, and a scanning\n  --  routine is provided for iterating through the entries in a directory.\n\n+ --  See also child package GNAT.Directory_Operations.Iteration\n+\n+ with Ada.Strings.Maps;\n+\n  package GNAT.Directory_Operations is\n\n     subtype Dir_Name_Str is String;\n***************\n*** 187,248 ****\n     --  returned in target-OS form. Raises Directory_Error if Dir has not\n     --  be opened (Dir = Null_Dir).\n\n-    generic\n-       with procedure Action\n-         (Item  :        String;\n-          Index :        Positive;\n-          Quit  : in out Boolean);\n-    procedure Wildcard_Iterator (Path : Path_Name);\n-    --  Calls Action for each path matching Path. Path can include wildcards '*'\n-    --  and '?' and [...]. The rules are:\n-    --\n-    --     *       can be replaced by any sequence of characters\n-    --     ?       can be replaced by a single character\n-    --     [a-z]   match one character in the range 'a' through 'z'\n-    --     [abc]   match either character 'a', 'b' or 'c'\n-    --\n-    --  Item is the filename that has been matched. Index is set to one for the\n-    --  first call and is incremented by one at each call. The iterator's\n-    --  termination can be controlled by setting Quit to True. It is by default\n-    --  set to False.\n-    --\n-    --  For example, if we have the following directory structure:\n-    --     /boo/\n-    --        foo.ads\n-    --     /sed/\n-    --        foo.ads\n-    --        file/\n-    --          foo.ads\n-    --     /sid/\n-    --        foo.ads\n-    --        file/\n-    --          foo.ads\n-    --     /life/\n-    --\n-    --  A call with expression \"/s*/file/*\" will call Action for the following\n-    --  items:\n-    --     /sed/file/foo.ads\n-    --     /sid/file/foo.ads\n-\n-    generic\n-       with procedure Action\n-         (Item  :        String;\n-          Index :        Positive;\n-          Quit  : in out Boolean);\n-    procedure Find\n-      (Root_Directory : Dir_Name_Str;\n-       File_Pattern   : String);\n-    --  Recursively searches the directory structure rooted at Root_Directory.\n-    --  This provides functionality similar to the UNIX 'find' command.\n-    --  Action will be called for every item matching the regular expression\n-    --  File_Pattern (see GNAT.Regexp). Item is the full pathname to the file\n-    --  starting with Root_Directory that has been matched. Index is set to one\n-    --  for the first call and is incremented by one at each call. The iterator\n-    --  will pass in the value False on each call to Action. The iterator will\n-    --  terminate after passing the last matched path to Action or after\n-    --  returning from a call to Action which sets Quit to True.\n-    --  Raises GNAT.Regexp.Error_In_Regexp if File_Pattern is ill formed.\n-\n     function Read_Is_Thread_Safe return Boolean;\n     --  Indicates if procedure Read is thread safe. On systems where the\n     --  target system supports this functionality, Read is thread safe,\n--- 191,196 ----\n***************\n*** 259,263 ****\n--- 207,215 ----\n     Null_Dir : constant Dir_Type := null;\n\n     pragma Import (C, Dir_Separator, \"__gnat_dir_separator\");\n+\n+    Dir_Seps : constant Ada.Strings.Maps.Character_Set :=\n+                 Ada.Strings.Maps.To_Set (\"/\\\");\n+    --  UNIX and DOS style directory separators.\n\n  end GNAT.Directory_Operations;\n\n*** freeze.ads\t2001/10/29 02:06:04\t1.15\n--- freeze.ads\t2001/10/30 01:36:24\t1.16\n***************\n*** 205,210 ****\n--- 205,215 ----\n     --  so need to be similarly treated. Freeze_Expression takes care of\n     --  determining the proper insertion point for generated freeze actions.\n\n+    procedure Freeze_Fixed_Point_Type (Typ : Entity_Id);\n+    --  Freeze fixed point type. For fixed-point types, we have to defer\n+    --  setting the size and bounds till the freeze point, since they are\n+    --  potentially affected by the presence of size and small clauses.\n+\n     procedure Freeze_Itype (T : Entity_Id; N : Node_Id);\n     --  This routine is called when an Itype is created and must be frozen\n     --  immediately at the point of creation (for the sake of the expansion\n\n*** impunit.adb\t2001/09/26 07:14:11\t1.14\n--- impunit.adb\t2001/10/30 04:33:45\t1.15\n***************\n*** 195,200 ****\n--- 195,201 ----\n       \"g-curexc\",    -- GNAT.Current_Exception\n       \"g-debpoo\",    -- GNAT.Debug_Pools\n       \"g-debuti\",    -- GNAT.Debug_Utilities\n+      \"g-diopit\",    -- GNAT.Directory_Operations.Iteration\n       \"g-dirope\",    -- GNAT.Directory_Operations\n       \"g-dyntab\",    -- GNAT.Dynamic_Tables\n       \"g-exctra\",    -- GNAT.Exception_Traces\n\n*** g-regexp.adb\t2001/10/21 11:04:16\t1.28\n--- g-regexp.adb\t2001/10/30 15:25:04\t1.29\n***************\n*** 32,38 ****\n  --                                                                          --\n  ------------------------------------------------------------------------------\n\n- with System.IO;\n  with Unchecked_Deallocation;\n  with Ada.Exceptions;\n  with GNAT.Case_Util;\n--- 32,37 ----\n***************\n*** 73,82 ****\n     end record;\n     --  Deterministic finite-state machine\n\n-    Debug : constant Boolean := False;\n-    --  When True, the primary and secondary tables will be printed.\n-    --  Gnat does not generate any code if this variable is False;\n-\n     -----------------------\n     -- Local Subprograms --\n     -----------------------\n--- 72,77 ----\n***************\n*** 188,199 ****\n        pragma No_Return (Raise_Exception);\n        --  Raise an exception, indicating an error at character Index in S.\n\n-       procedure Print_Table\n-         (Table      : Regexp_Array;\n-          Num_States : State_Index;\n-          Is_Primary : Boolean := True);\n-       --  Print a table for debugging purposes\n-\n        --------------------\n        -- Create_Mapping --\n        --------------------\n--- 183,188 ----\n***************\n*** 1225,1309 ****\n                 end loop;\n              end loop;\n\n-             if Debug then\n-                System.IO.New_Line;\n-                System.IO.Put_Line (\"Secondary table : \");\n-                Print_Table (R.States, Nb_State, False);\n-             end if;\n-\n              return (Ada.Finalization.Controlled with R => R);\n           end;\n        end Create_Secondary_Table;\n\n-       -----------------\n-       -- Print_Table --\n-       -----------------\n-\n-       procedure Print_Table\n-         (Table      : Regexp_Array;\n-          Num_States : State_Index;\n-          Is_Primary : Boolean := True)\n-       is\n-          function Reverse_Mapping (N : Column_Index) return Character;\n-          --  Return the character corresponding to a column in the mapping\n-\n-          ---------------------\n-          -- Reverse_Mapping --\n-          ---------------------\n-\n-          function Reverse_Mapping (N : Column_Index) return Character is\n-          begin\n-             for Column in Map'Range loop\n-                if Map (Column) = N then\n-                   return Column;\n-                end if;\n-             end loop;\n-\n-             return ' ';\n-          end Reverse_Mapping;\n-\n-       --  Start of processing for Print_Table\n-\n-       begin\n-          --  Print the header line\n-\n-          System.IO.Put (\"   [*]  \");\n-\n-          for Column in 1 .. Alphabet_Size  loop\n-             System.IO.Put\n-               (String'(1 .. 1 => Reverse_Mapping (Column)) & \"   \");\n-          end loop;\n-\n-          if Is_Primary then\n-             System.IO.Put (\"closure....\");\n-          end if;\n-\n-          System.IO.New_Line;\n-\n-          --  Print every line\n-\n-          for State in 1 .. Num_States loop\n-             System.IO.Put (State'Img);\n-\n-             for K in 1 .. 3 - State'Img'Length loop\n-                System.IO.Put (\" \");\n-             end loop;\n-\n-             for K in 0 .. Alphabet_Size loop\n-                System.IO.Put (Table (State, K)'Img & \"  \");\n-             end loop;\n-\n-             for K in Alphabet_Size + 1 .. Table'Last (2) loop\n-                if Table (State, K) /= 0 then\n-                   System.IO.Put (Table (State, K)'Img & \",\");\n-                end if;\n-             end loop;\n-\n-             System.IO.New_Line;\n-          end loop;\n-\n-       end Print_Table;\n-\n        ---------------------\n        -- Raise_Exception --\n        ---------------------\n--- 1214,1223 ----\n***************\n*** 1345,1356 ****\n                (Table, Num_States, Start_State, End_State);\n           end if;\n\n-          if Debug then\n-             Print_Table (Table.all, Num_States);\n-             System.IO.Put_Line (\"Start_State : \" & Start_State'Img);\n-             System.IO.Put_Line (\"End_State   : \" & End_State'Img);\n-          end if;\n-\n           --  Creates the secondary table\n\n           R := Create_Secondary_Table\n--- 1259,1264 ----\n***************\n*** 1451,1467 ****\n           New_Table := new Regexp_Array (Table'First (1) .. New_Lines,\n                                          Table'First (2) .. New_Columns);\n           New_Table.all := (others => (others => 0));\n-\n-          if Debug then\n-             System.IO.Put_Line (\"Reallocating table: Lines from \"\n-                                 & State_Index'Image (Table'Last (1))\n-                                 & \" to \"\n-                                 & State_Index'Image (New_Lines));\n-             System.IO.Put_Line (\"   and columns from \"\n-                                 & Column_Index'Image (Table'Last (2))\n-                                 & \" to \"\n-                                 & Column_Index'Image (New_Columns));\n-          end if;\n\n           for J in Table'Range (1) loop\n              for K in Table'Range (2) loop\n--- 1359,1364 ----\n\n*** g-dirope.adb\t2001/10/31 21:36:04\t1.20\n--- g-dirope.adb\t2001/11/01 16:39:33\t1.21\n***************\n*** 371,387 ****\n                 E := E + 1;\n\n                 Var_Name : loop\n!                   exit Var_Name when E = Path'Last;\n\n                    if Characters.Handling.Is_Letter (Path (E))\n                      or else Characters.Handling.Is_Digit (Path (E))\n                    then\n                       E := E + 1;\n                    else\n-                      E := E - 1;\n                       exit Var_Name;\n                    end if;\n                 end loop Var_Name;\n\n                 declare\n                    Env : OS_Lib.String_Access := OS_Lib.Getenv (Path (K .. E));\n--- 371,388 ----\n                 E := E + 1;\n\n                 Var_Name : loop\n!                   exit Var_Name when E > Path'Last;\n\n                    if Characters.Handling.Is_Letter (Path (E))\n                      or else Characters.Handling.Is_Digit (Path (E))\n                    then\n                       E := E + 1;\n                    else\n                       exit Var_Name;\n                    end if;\n                 end loop Var_Name;\n+\n+                E := E - 1;\n\n                 declare\n                    Env : OS_Lib.String_Access := OS_Lib.Getenv (Path (K .. E));\n2001-12-11  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_ch10.adb (Install_Withed_Unit): If the unit is a generic instance\n\tthat is the parent of other generics, the instance body replaces the\n\tinstance node.  Retrieve the instance of the spec, which is the one\n\tthat is visible in clients and within the body.\n\n2001-12-11  Vincent Celier <celier@gnat.com>\n\n\t* gnatmain.adb: Initial version.\n\n\t* gnatmain.ads: Initial version.\n\n\t* prj-attr.adb (Initialisation_Data): Add package Gnatstub.\n\n\t* snames.adb: Updated to match snames.ads.\n\n\t* snames.ads: Added Gnatstub.\n\n2001-12-11  Vincent Celier <celier@gnat.com>\n\n\t* prj-attr.adb (Initialization_Data): Change name from\n\tInitialisation_Data.\n\n2001-12-11  Emmanuel Briot <briot@gnat.com>\n\n\t* g-regpat.adb (Parse_Literal): Properly handle simple operators ?,\n\t+ and * applied to backslashed expressions like \\r.\n\n2001-12-11  Vasiliy Fofanov <fofanov@gnat.com>\n\n\t* g-os_lib.ads: String_List type added, Argument_List type is now\n\tsubtype of String_List.\n\n2001-12-11  Robert Dewar <dewar@gnat.com>\n\n\t* g-os_lib.ads: Change copyright to FSF\n\tAdd comments for String_List type\n\n2001-12-11  Vincent Celier <celier@gnat.com>\n\n\t* g-dirope.adb (Expand_Path): Fix bug. (wrong length when adding a\n\tstring to the buffer).\n\n2001-12-11  Ed Schonberg <schonber@gnat.com>\n\n\t* freeze.adb: Make Freeze_Fixed_Point_Type visible, for use in\n\tsem_attr.\n\n\t* sem_attr.adb: Simplify previous fix for Address.\n\t(Set_Bounds): If prefix is a non-frozen fixed-point type, freeze now,\n\tto avoid anomalies where the bound of the type appears to raise\n\tconstraint error.\n\n2001-12-11  Robert Dewar <dewar@gnat.com>\n\n\t* lib-xref.adb (Output_Refs): Make sure pointers are always properly\n\thandled.\n\n2001-12-11  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_ch12.adb (Analyze_Subprogram_Instantiation): Check for a\n\trenamed unit before checking for recursive instantiations.\n\n2001-12-11  Emmanuel Briot <briot@gnat.com>\n\n\t* prj.ads: Add comments for some of the fields.\n\n2001-12-11  Robert Dewar <dewar@gnat.com>\n\n\t* lib-xref.adb (Output_Refs): Don't output type references outside\n\tthe main unit if they are not otherwise referenced.\n\n2001-12-11  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_attr.adb (Analyze_attribute, case Address and Size): Simplify\n\tcode and diagnose additional illegal uses\n\n\t* sem_util.adb (Is_Object_Reference): An indexed component is an\n\tobject only if the prefix is.\n\n2001-12-11  Vincent Celier <celier@gnat.com>\n\n\t* g-diopit.adb: Initial version.\n\n\t* g-diopit.ads: Initial version.\n\n\t* g-dirope.adb:\n\t(Expand_Path): Avoid use of Unbounded_String\n\t(Find, Wildcard_Iterator): Moved to child package Iteration\n\n\t* Makefile.in: Added g-diopit.o to GNATRTL_NONTASKING_OBJS\n\n2001-12-11  Robert Dewar <dewar@gnat.com>\n\n\t* sem_attr.adb: Minor reformatting\n\n2001-12-11  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_ch3.adb: Clarify some ???.\n\n2001-12-11  Robert Dewar <dewar@gnat.com>\n\n\t* exp_util.adb (Must_Be_Aligned): Removed, replaced by\n\tExp_Pakd.Known_Aligned_Enough\n\n\t* sem_ch13.adb (Check_Address_Alignment): Removed, extended\n\tversion is moved to Exp_Ch13.\n\n2001-12-11  Robert Dewar <dewar@gnat.com>\n\n\t* einfo.ads: Minor reformatting\n\n\t* exp_ch5.adb: Add comment for previous.change\n\n\t* ali.adb: New interface for extended typeref stuff.\n\n\t* ali.ads: New interface for typeref stuff.\n\n\t* checks.adb (Apply_Alignment_Check): New procedure.\n\n\t* debug.adb: Add -gnatdM for modified ALI output\n\n\t* exp_pakd.adb (Known_Aligned_Enough): Replaces Known_Aligned_Enough.\n\n\t* lib-xref.adb: Extend generation of <..> notation to cover\n\tsubtype/object types. Note that this is a complete rewrite,\n\tgetting rid of the very nasty quadratic algorithm previously\n\tused for derived type output.\n\n\t* lib-xref.ads: Extend description of <..> notation to cover\n\tsubtype/object types. Uses {..} for these other cases.\n\tAlso use (..) for pointer types.\n\n\t* sem_util.adb (Check_Potentially_Blocking_Operation): Slight cleanup.\n\n\t* exp_pakd.adb: Minor reformatting.  Note that prevous RH should say:\n\t(Known_Aligned_Enough): Replaces Must_Be_Aligned.\n\n2001-12-11  Vincent Celier <celier@gnat.com>\n\n\t* gnatcmd.adb:\n\tChanged /COMPILE_ONLY to /ACTIONS=COMPILE\n\tChanged /BIND_ONLY to /ACTIONS=BIND\n\tChanged /LINK_ONLY to /ACTIONS=LINK\n\n2001-12-11  Ed Schonberg  <schonber@gnat.com>\n\n\t* sem_ch8.adb (Find_Selected_Component): improved search for a\n\tcandidate package in case of error.\n\n\t* sem_ch12.adb (Inline_Instance_Body): place head of use_clause\n\tchain back on scope stack before reinstalling use clauses.\n\n\t* exp_ch5.adb (Expand_N_If_Statement): if Constant_Condition_Warnings\n\tis enabled, do not kill the code for the condition, to preserve\n\twarning.\n\n2001-12-11  Robert Dewar <dewar@gnat.com>\n\n\t* checks.adb (Insert_Valid_Check): Apply validity check to expression\n\tof conversion, not to result of conversion.\n\n2001-12-11  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_ch3.adb (Build_Derived_Record_Type): set Controlled flag\n\tbefore freezing parent. If the declarations are mutually recursive,\n\tan access to the current record type may be frozen before the\n\tderivation is complete.\n\n2001-12-05  Vincent Celier <celier@gnat.com>\n\n\t* gnatcmd.adb: (MAKE): Add new translations: -b /BIND_ONLY,\n\t-c /COMPILE_ONLY, -l /LINK_ONLY\n\n\t* opt.ads:\n\t(Bind_Only): New Flag\n\t(Link_Only): New flag\n\n\t* switch.adb (Scan_Make_Switches): Add processing for -b (Bind_Only)\n\tand -l (Link_Only)\n\n\t* makeusg.adb: Add new switches -b and -l. Update Copyright notice.\n\n\t* make.adb:\n\t(Do_Compile_Step, Do_Bind_Step, Do_Link_Step): New flags.\n\t(Gnatmake): Set the step flags. Only perform a step if the\n\tcorresponding step flag is True.\n\t(Scan_Make_Arg): Reset the bind and link step flags when -u\n\tor -gnatc has been specified.\n\n2001-12-05  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_eval.adb (Eval_Concatenation): If left operand is a null string,\n\tget bounds from right operand.\n\n\t* sem_eval.adb: Minor reformatting\n\n\t* exp_util.adb (Make_Literal_Range): use bound of literal rather\n\tthan Index'First, its lower bound may be different from 1.\n\n\t* exp_util.adb: Undo earlier change, fixes ACVC regressions C48009B\n\tand C48009J\n\n2001-12-05  Vincent Celier <celier@gnat.com>\n\n\t* prj-nmsc.adb Minor reformatting\n\n\t* prj-nmsc.adb (Language_Independent_Check): Reset Library flag if\n\tset and libraries are not supported.\n\n2001-12-05  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_ch3.adb (Build_Derived_Private_Type): set Public status of\n\tprivate view explicitly, so the back-end can treat as a global\n\twhen appropriate.\n\n2001-12-05  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_ch12.adb (Instantiate_Package_Body): if instance is a compilation\n\t unit, always replace instance node with new body, for ASIS use.\n\n2001-12-05  Vincent Celier <celier@gnat.com>\n\n\t* prj-nmsc.adb (Language_Independent_Check): Issue a warning if\n\tlibraries are not supported and both attributes Library_Name and\n\tLibrary_Dir are specified.\n\n\t* prj-proc.adb (Expression): Set location of Result to location of\n\tfirst term.\n\n\t* Makefile.in: Add mlib.o, mlib-fil.o, mlib-tgt and mlib-utl to GNATLS.\n\t(prj-nmsc is now importing MLib.Tgt)\n\n\t* prj-proc.adb: Put the change indicated above that was forgotten.\n\n2001-12-05  Robert Dewar <dewar@gnat.com>\n\n\t* Makefile.in: Add dependencies for System.IO for GNAT.Regexp\n\n2001-12-05  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_ch3.adb (Build_Derived_Concurrent_Type): If derivation imposes a\n\tconstraint, introduce explicit subtype declaration and derive from it.\n\n\t* sem_ch3.adb: Minor reformatting\n\n2001-12-05  Robert Dewar <dewar@gnat.com>\n\n\t* checks.adb (Determine_Range): Increase cache size for checks.\n\tMinor reformatting\n\n\t* exp_ch6.adb: Minor reformatting\n\t(Expand_N_Subprogram_Body): Reset Is_Pure for any subprogram that has\n\ta parameter whose root type is System.Address, since treating such\n\tsubprograms as pure in the code generator is almost surely a mistake\n\tthat will lead to unexpected results.\n\n\t* exp_util.adb (Remove_Side_Effects): Clean up old ??? comment and\n\tchange handling of conversions.\n\n\t* g-regexp.adb: Use System.IO instead of Ada.Text_IO.\n\n2001-12-05  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_ch3.adb (Analyze_Object_Declaration): If expression is an\n\taggregate with static wrong size, attach generated Raise node to\n\tdeclaration.\n\n2001-12-05  Robert Dewar <dewar@gnat.com>\n\n\t* sem_attr.adb (Analyze_Attribute): Defend against bad Val attribute.\n\tFixes compilation abandoned bomb in B24009B.\n\n2001-12-05  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_ch12.adb:\n\tDocument use of Associated_Node on Selected_Components.\n\t(Save_Global_Operand_Descendants): Change to Save_Entity_Descendants,\n\tto clarify use of untyped descendant fields.\n\n2001-12-05  Robert Dewar <dewar@gnat.com>\n\n\t* prj-dect.ads: Add ??? comment\n\tAdd 2001 to copyright notice (was not done in after all)\n\n\t* prj-part.adb: Minor reformatting. Reword one awkward error message.\n\n\t* prj.ads: Minor reformatting throughout, and add some ??? comments\n\n\t* snames.ads: Minor reformatting\n\n2001-12-05  Geert Bosch <bosch@gnat.com>\n\n\t* snames.adb: Autoupdate\n\n2001-12-05  Vincent Celier <celier@gnat.com>\n\n\t* prj-dect.adb (Parse): Rename parameter Modifying to Extends.\n\n\t* prj-dect.ads (Parse): Rename parameter Modifying to Extends.\n\n\t* prj-env.adb: Minor comment changes (modifying -> extends).\n\n\t* prj-nmsc.adb: Minor comment changes (modifying -> extends).\n\n\t* prj-part.adb (Parse_Single_Project): Change Tok_Modifying to\n\tTok_Extends.\n\n\t* prj.adb (Initialize): Change Modifying to Extends.\n\n\t* scans.ads (Token_Type): Change Tok_Modifying to Tok_Extends.\n\n\t* prj.ads: Minor comment change (Modifying -> extending).\n\n\t* snames.ads: Change modifying to extends.\n\n2001-12-05  Robert Dewar <dewar@gnat.com>\n\n\t* sem_warn.adb: Remove stuff for conditionals, we are not going to\n\tdo this after all.\n\n\t* sem_warn.ads: Remove stuff for conditionals, we are not going to\n\tdo this after all.  Add 2001 to copyright notice\n\n2001-12-04  Geert Bosch <bosch@gnat.com>\n\n\t*  einfo.h, sinfo.h, treeprs.ads: Regenerate.\n\n2001-12-04  Robert Dewar <dewar@gnat.com>\n\n\t* errout.adb (Error_Msg): Ignore attempt to put error msg at junk\n\tlocation if we already have errors. Stops some cases of cascaded\n\terrors.\n\n\t* errout.adb: Improve comment.\n\n2001-12-04  Robert Dewar <dewar@gnat.com>\n\n\t* sem_ch12.adb:\n\t(Analyze_Formal_Type_Definition): Defend against Error.\n\t(Analyze_Formal_Subprogram): Defend against Error.\n\n\t* par-ch12.adb (F_Formal_Type_Declaration): In case of error,\n\tremove following semicolon if present. Removes cascaded error.\n\n2001-12-04  Douglas B. Rupp <rupp@gnat.com>\n\n\t* bindgen.adb:\n\t(Gen_Exception_Table_Ada): Write \"begin\" and then return if Num\n\t exceptions equals 0.\n\t(Gen_Exception_Table_C): Return if Num exceptions equals 0.\n\tFixes PIWG E tests (which have to be run with -gnatL).\n\n2001-12-04  Robert Dewar <dewar@gnat.com>\n\n\t* einfo.ads: Minor reformatting\n\n2001-12-04  Ed Schonberg <schonber@gnat.com>\n\n\t* einfo.ads: Block_Node points to the identifier of the block, not to\n\tthe block node itself, to preserve the link when the block is\n\trewritten, e.g. within an if-statement with a static condition.\n\n\t* inline.adb (Cleanup_Scopes): recover block statement from block\n\tentity using new meaning of Block_Node.\n\n\t* sem_ch5.adb (Analyze_Block_Statement): set Block_Node to point to\n\tidentifier of block node, rather than to node itself.\n\n2001-12-04  Gary Dismukes <dismukes@gnat.com>\n\n\t* layout.adb:\n\t(Get_Max_Size): Fix \"start of processing\" comment to say Get_Max_Size.\n\t(Discrimify): Go back to setting the Etypes of the selected component\n\tbecause the Vname component does not exist at this point and will\n\tfail name resolution. Also set Analyzed.\n\tRemove with and use of Sem_Res.\n\n2001-12-04  Arnaud Charlet <charlet@gnat.com>\n\n\t* Makefile.in: (HIE_SOURCES): add s-fat*.\n\n2001-12-04  Robert Dewar <dewar@gnat.com>\n\n\t* sem_attr.adb:\n\t(Compile_Time_Known_Attribute): New procedure.\n\t(Eval_Attribute, case Size): Use Compile_Time_Known_Attribute to ensure\n\t proper range check.\n\n2001-12-04  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_ch7.adb (New_Private_Type): Set Is_Tagged_Type flag before\n\tprocessing discriminants to diagnose illegal default values.\n\n2001-12-04  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_attr.adb (Resolve_Attribute): Handle properly an non-classwide\n\taccess discriminant within a type extension that constrains its\n\tparent discriminants.\n\n2001-12-04  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_ch3.adb (Find_Type_Of_Subtype_Indic): If subtype indication\n\tis malformed, use instance of Any_Id to allow analysis to proceed.\n\n\t* par-ch12.adb (P_Formal_Type_Declaration): Propagate Error if\n\ttype definition is illegal.\n\t(P_Formal_Derived_Type_Definition): Better recovery when TAGGED is\n\tmisplaced.\n\n2001-12-04  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_warn.adb (Output_Unreferenced_Messages): Extend previous fix to\n\tconstants.\n\n2001-12-04  Robert Dewar <dewar@gnat.com>\n\n\t* errout.adb: Minor reformatting\n\n2001-12-04  Robert Dewar <dewar@gnat.com>\n\n\t* exp_util.adb: Minor reformatting from last change\n\n\t* errout.adb (Check_For_Warning): For a Raised_Constraint_Error node\n\twhich is a rewriting of an expression, traverse the original\n\texpression to remove warnings that may have been posted on it.\n\n2001-12-04  Ed Schonberg <schonber@gnat.com>\n\n\t* exp_util.adb (Must_Be_Aligned): Return false for a component of a\n\trecord that has other packed components.\n\n2001-12-04  Douglass B. Rupp <rupp@gnat.com>\n\n\t* adaint.c: Minor cleanups.\n\n2001-12-04  Douglass B. Rupp <rupp@gnat.com>\n\n\t* adaint.c: Do not use utime.h on vxworks.\n\n2001-12-04  Arnaud Charlet <charlet@gnat.com>\n\n\t* Makefile.adalib: Clarify step 3 (use of gnat.adc) as it causes\n\tmore confusion than it solves.\n\n2001-12-04  Geert bosch <bosch@gnat.com>\n\n\t* einfo.h, nmake.adb, nmake.ads, sinfo.h treeprs.ads: Regenerate.\n\n2001-12-04  Geert Bosch  <bosch@gnat.com>\n\n\t* Makefile.in (update-sources): New target.\n\tFor use by gcc_release script.\n\n2001-12-04  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_prag.adb (Analyze_Pragma, case Validity_Checks): do not treat as\n\ta configuration pragma, it is now legal wherever a pragma can appear.\n\n2001-12-04  Zack Weinberg  <zack@codesourcery.com>\n\n\t* Makefile.in: Don't set ALL.  Delete @cross_defines@,\n\t@cross_overrides@, @build_overrides@ stanzas.  INTERNAL_CFLAGS\n\tis now @CROSS@ -DIN_GCC; update comment.\n\n2001-12-04  Robert Dewar <dewar@gnat.com>\n\n\t* einfo.adb (Has_Pragma_Pure_Function): New flag.\n\tFix problem that stopped ceinfo from working\n\n\t* einfo.ads (Has_Pragma_Pure_Function): New flag.\n\n\t* sem_prag.adb (Pure_Function): Set new flag Has_Pragma_Pure_Function.\n\n2001-12-04  Douglas B. Rupp <rupp@gnat.com>\n\n\t* gnatchop.adb:\n\t(File_Time_Stamp): New procedure.\n\t(Preserve_Mode): New boolean.\n\t(Write_Unit): Pass time stamp.\n\tImplement -p switch (preserve time stamps).\n\n\t* gnatcmd.adb (CHOP): Add translation for -p (/PRESERVE).\n\n\t* gnatchop.adb: Do usage info for -p switch\n\n\t* adaint.h (__gnat_set_file_time_name): New function\n\n\t* adaint.c (__gnat_set_file_time_name): Implement\n\n\t* adaint.h: Fix typo\n\n2001-12-03  Robert Dewar <dewar@gnat.com>\n\n\t* sinfo.ads: Minor reformatting. N_Freeze_Entity node does not\n        have Associated_Node.\n\n2001-12-03  Robert Dewar <dewar@gnat.com>\n\n\t* prj-proc.adb: Minor reformatting\n\n\t* make.adb: Minor reformatting\n\n2001-12-03  Geert Bosch <bosch@gnat.com>\n\n\t* make.adb: Minor reformatting.\n\n2001-12-03 Robert Dewar  <dewar@gnat.com>\n\n\t* sem_ch12.adb: Minor reformatting\n\n2001-12-03  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_ch12.adb (Inline_Instance_Body): Use Save_Scope_Stack and\n\tpush Standard on the stack before analyzing the instance body,\n\tin order to have a clean visibility environment.\n\n\t* sem_ch12.adb (Inline_Instance_Body): Remove redundant code.\n\n2001-12-03  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_ch12.adb (Instantiate_Package_Body): Protect against double\n\tinstantiation of a body that contains an inlined body.\n\n2001-12-03  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_ch12.adb:\n\t(Analyze_generic_subprogram_Declaration): Set outer_generic_scope,\n\tto prevent freezing within formal packages.\n\t(Freeze_Subprogram_Body): If body comes from another instance that\n\tappeared before its own body, place freeze node at end of current\n\tdeclarative part, to prevent a back-end crash.\n\t(Inline_Instance_Body): Handle properly a package instance within\n\ta subprogram instance that is a child unit.\n\n2001-12-01  Graham Stott  <grahams@redhat.com>\n\n\t* Makefile.in (misc.o): Add missing $(srcdir) prefix\n\tand add optabs.h dependency.\n\n\t* misc.c: Include optabs.h\n\t(gnat_tree_code_type): Make static and const.\n\t(gnat_tree_code_length): Likewise.\n\t(gnat_tree_code_name): Likewise.\n\t(update_setjmp_buf): Obtain operands mode from insn_data.\n\n2001-11-29  Richard Henderson  <rth@redhat.com>\n\n\t* init.c: Remove obsolete dwarf2 frame.h section.\n\n2001-11-29  Joseph S. Myers  <jsm28@cam.ac.uk>\n\n\t* Make-lang.in (ada.generated-manpages): New dummy target.\n\n2001-11-29  Ed Schonberg <schonber@gnat.com>\n\n\t* g-os_lib.adb (Add_To_Command): use explicit loop to move string\n\tinto Command, an array conversion is illegal here. Uncovered by\n\tACATS B460005.\n\n2001/11/28  Geert Bosch <bosch@gnat.com>\n\n\t* init.c: Minor whitespace changes.\n\n2001-11-28  Doug Rupp <rupp@gnat.com>\n\n\t* init.c: (__gnat_install_handler,VMS): Increase size of alternate\n\tsignal stack.\n\n2001-11-28  Zack Weinberg  <zack@codesourcery.com>\n\n\t* misc.c (gnat_expand_constant): Move declaration above\n\tdefinition of lang_hooks.\n\t(LANG_HOOKS_EXPAND_CONSTANT): Set to gnat_expand_constant.\n\t(gnat_init): lang_expand_constant no longer exists.\n\n\t(internal_error_function): Remove #ifdef HAVE_VPRINTF.  We\n\talways have vprintf.\n\t(gnat_init): Always call set_internal_error_function.\n\n2001-11-27  Andreas Jaeger  <aj@suse.de>\n\n\t* Makefile.in (stamp-tool_src_dir): Use symbolic link.\n\n2001-11-27  Laurent Guerby  <guerby@acm.org>\n\n\t* Makefile.in: Regenerate Ada dependencies.\n\n2001-11-26  Richard Henderson  <rth@redhat.com>\n\n\t* Make-lang.in (gnatbind, gnatmake, gnatbl, gnatchop, gnatcmd,\n\tgnatlink, gnatkr, gnatls, gnatmem, gnatprep, gnatpsta, gnatpsys,\n\tgnatxref, gnatfind, gnatlbr): Depend on CONFIG_H and prefix.o.\n\n2001-11-25  Laurent Guerby  <guerby@acm.org>\n\n\t* sysdep.c (rts_get_*): Fix style.\n\n2001-11-19  Laurent Guerby  <guerby@acm.org>\n\n\t* Makefile.in (INCLUDES_FOR_SUBDIR): Remove redundant system include\n\tsince it is of no apparent use and cause warnings.\n\n2001-11-18  Neil Booth  <neil@daikokuya.demon.co.uk>\n\n\t* misc.c (gnat_decode_option, gnat_init_options): Make definitions\n\tstatic too.\n\t(gnat_init): Don't return NULL.\n\t(finish_parse): Remove.\n\n2001-11-17  Laurent Guerby  <guerby@acm.org>\n\n\t* Make-lang.in (GNATLIBFLAGS): Add -W -Wall.\n\t* gigi.h (init_decl_processing): Rename to gnat_init_decl_processing.\n\t* io-aux.c: Provide K&R prototypes to all functions, reformat code.\n\t* lang-spec.h: Add missing struct field to silence warnings.\n\t* sysdep.c (rts_get_*): Provide K&R prototype.\n\t* sysdep.c (Unlock_Task, Lock_Task): Move to K&R prototype.\n\t* traceback.c (Unlock_Task, Lock_Task): Likewise.\n\t* tracebak.c (__gnat_backtrace): Remove unused variable.\n\t* utils.c (end_subprog_body): Move to K&R style.\n\nThu Nov 15 18:16:17 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n\n\t* trans.c, utils2.c: Remove PALIGN parameter to get_inner_reference.\n\n2001-11-15  Neil Booth  <neil@daikokuya.demon.co.uk>\n\n\t* misc.c (gnat_init): Change prototype.  Include the\n\tfunctionality of the old init_parse and init_decl_processing.\n\t(gnat_init_decl_processing): New prototype.\n\t(init_parse): Remove.\n\t* utils.c (init_decl_processing): Rename gnat_init_decl_processing.\n\n2001-11-09  Neil Booth  <neil@daikokuya.demon.co.uk>\n\n\t* misc.c (gnat_print_decl, gnat_print_type): Renamed.\n\t(LANG_HOOKS_PRINT_DECL, LANG_HOOKS_PRINT_TYPE): Override.\n\t(print_lang_statistics, lang_print_xnode, print_lang_identifier,\n\tset_yydebug): Remove.\n\n2001-11-09  Neil Booth  <neil@daikokuya.demon.co.uk>\n\n\t* misc.c (LANG_HOOKS_NAME, LANG_HOOKS_IDENTIFIER_SIZE): Override.\n\t(struct lang_hooks): Constify.\n\t(language_string, lang_identify): Remove.\n\t* utils.c (init_decl_processing): Update.\n\n2001-11-06  Neil Booth  <neil@cat.daikokuya.demon.co.uk>\n\n\t* misc.c: Include langhooks-def.h.\n\t* Makefile.in: Update.\n\n2001-10-30  Robert Dewar <dewar@gnat.com>\n\n\t* style.adb:\n\t(Check_Identifier): Rewrite circuit to be compatible with use of letters\n\tin the upper half of ASCII.\n\t(Check_Identifier): Minor reformatting\n\n2001-10-30  Geert Bosch <bosch@gnat.com>\n\n\t* (Associated_Node, Set_Associated_Node): Do not check for\n\tFreeze_Entity.\n\n2001-10-30  Robert Dewar <dewar@gnat.com>\n\n\t* a-reatim.ads: Minor reformatting\n\n2001-10-30  Robert Dewar <dewar@gnat.com>\n\n\t* gnatdll.adb: Minor reformatting throughout. Many ??? added for\n\tundocumented declarations.\n\n2001-10-30  Pascal Obry <obry@gnat.com>\n\n\t* gnatdll.adb (Parse_Command_Line): handle -g option to be passed\n\tto the binder and linker.\n\tMinor style fix.\n\n\t* mdll.ads: Fix layout.  Update copyright notice.\n\n\t* mdll.adb: Fix layout.  Update copyright notice.\n\n2001-10-30  Robert Dewar <dewar@gnat.com>\n\n\t* usage.adb: Minor fix to output for -gnaty.\n\n2001-10-30  Ed Schonberg <schonber@gnat.com>\n\n\t* a-reatim.ads: Makes Seconds_Count into a 64-bit integer,\n\tto accommodate all its possible values.\n\n\t* a-reatim.adb (Split): Special-case handling of Time_Span_First\n\tand of small absolute values of T.\n\n2001-10-30  Richard Kenner <kenner@gnat.com>\n\n\t* misc.c (gnat_expand_expr, case NULL_EXPR): Remove call to\n\tset_mem_attributes since not needed and wrong if RESULT if a REG;\n\tfixes ACATS failures.\n\n2001-10-30  Geert Bosch <bosch@gnat.com>\n\n\t* 86numaux.adb, a-tigeau.ads, a-wtgeau.ads, fname-sf.ads, g-traceb.ads,\n\ts-tasdeb.ads, sem_maps.ads: Add 2001 to copyright notice.\n\n2001-10-30  Robert Dewar <dewar@gnat.com>\n\n\t* bindusg.adb: Undocument -f switch.\n\n\t* gnatcmd.adb: Remove /FULL_ELABORATION.\n\n\t* opt.ads (Force_RM_Elaboration_Order): Document that this is\n\tobsolescent.\n\n\t* gnatbind.adb: Output new warning for use of obsolescent -f switch.\n\n\t* gnatbind.adb: Minor update of warning msg.\n\n2001-10-30  Vincent Celier <celier@gnat.com>\n\n\t* gnatcmd.adb (MAKE, BIND, LINK, LIST, FIND, XREF): Add translations\n\tfor project file switches (-P (/PROJECT_FILE=),\n\t -X (/EXTERNAL_REFERENCE=) and -vPx (/PROJECT_FILE_VERBOSITY=DEFAULT\n\tor MEDIUM or HIGH)\n\n2001-10-30  Geert Bosch <bosch@gnat.com>\n\n\t* decl.c: Minor whitespace fixes.\n\n2001-10-30  Richard Kenner <kenner@gnat.com>\n\n\t* utils2.c (build_allocator): Test for SIZE overflow in array case too\n\n2001-10-30  Geert Bosch <bosch@gnat.com>\n\n\t* ali-util.adb (Initialize_Checksum): Use out-mode instead of in out.\n\tFound due to GCC 3.0 warning of using uninitialized value.\n\n\t* layout.adb:\n\t(Get_Max_Size): Use variant record for tracking value/expression.\n\t Makes logic clearer and prevents warnings for uninitialized variables.\n\t(Layout_Array_Type): Use variant record for tracking value/expression.\n\t Makes logic clearer and prevents warnings for uninitialized variables.\n\n2001-10-30  Robert Dewar <dewar@gnat.com>\n\n\t* lib.adb: Minor reformatting\n\n\t* s-taprop.ads: Minor reformatting\n\n2001-10-29  Laurent Guerby  <guerby@acm.org>\n\n\t* init.c:\n\t(Raise_From_Signal_Handler, Propagate_Signal_Exception): Make arg\n\tconst.\n\t(_gnat_error_handler): Make MSG const.\n\n2001-10-29  Richard Kenner <kenner@gnat.com>\n\n\t* sysdep.c: Fix localtime_r problem on LynxOS.\n\tAlso remove #elif to avoid warnings.\n\n\t* misc.c (yyparse): Don't set up and register jmpbuf; remove decls\n\tused by this.\n\n\t* decl.c (annotate_value): Make SIZE unsigned to avoid warning.\n\n2001-10-28  Joseph S. Myers  <jsm28@cam.ac.uk>\n\n\t* 86numaux.adb, a-tigeau.ads, a-wtgeau.ads, decl.c, exp_ch6.adb,\n\texp_ch9.adb, exp_util.adb, fname-sf.ads, freeze.ads, g-awk.adb,\n\tg-comlin.ads, g-dirope.adb, g-dyntab.ads, g-socket.ads,\n\tg-table.ads, g-traceb.ads, gnat-style.texi, gnatchop.adb, init.c,\n\tlayout.adb, layout.ads, mdllfile.ads, mlib-fil.ads, osint.ads,\n\ts-fatgen.adb, s-imgrea.adb, s-taprop.ads, s-tasdeb.ads,\n\tsem_aggr.adb, sem_attr.adb, sem_case.ads, sem_ch13.adb,\n\tsem_ch3.adb, sem_elab.adb, sem_maps.ads, sem_res.adb,\n\tsem_util.ads, sinfo.ads, sinput.ads, table.adb, table.ads,\n\ttypes.ads, urealp.adb: Fix spelling errors.\n\n2001-10-27  Laurent Guerby <guerby@acm.org>\n\n\t* trans.c (gigi): Fix non determinism leading to bootstrap\n\tcomparison failures for debugging information.\n\n2001-10-26  Florian Weimer  <fw@deneb.enyo.de>\n\n\t* gnat_rm.texi: Use @./@: where appropriate.\n\n2001-10-26  Robert Dewar <dewar@gnat.com>\n\n\t* sinfo.adb: Define Associated_Node to overlap Entity field. Cleanup.\n\n2001-10-26  Richard Kenner <kenner@gnat.com>\n\n\t* gmem.c (__gnat_gmem_read_next): Properly check for EOF\n\n2001-10-26  Richard Kenner <kenner@gnat.com>\n\n\t* decl.c (validate_size): Modify message for bad size to avoid\n\timplication that compiler is modifying the size.\n\n2001-10-26  Robert Dewar <dewar@gnat.com>\n\n\t* prj-util.adb: Minor reformatting. Fix bad header format.\n\n2001-10-26  Robert Dewar <dewar@gnat.com>\n\n\t* sinfo.ads: Define Associated_Node to overlap Entity field. Cleanup.\n\n\t* sinfo.ads: Clarify use of Associated_Node (documentation only).\n\n\t* sem_ch12.adb: Change Node4 to Associated_Node. Change\n\tAssociated_Node to Get_Associated_Node. Put use of Unchecked_Access\n\tmuch more narrowly in places where needed. These are cleanups.\n\n2001-10-26  Joel Brobecker <brobecke@gnat.com>\n\n\t* 5zosinte.ads (null_pthread): new constant.\n\n\t* 5ztaprop.adb:\n\t(Initialize_TCB): Initialize thread ID to null, to be able to verify\n\t later that this field has been set.\n\t(Finalize_TCB): ditto.\n\t(Suspend_Task): Verify that the thread ID is not null before using it.\n\t(Resume_Task): ditto.\n\n\t* s-tasdeb.adb:\n\t(Resume_All_Tasks): Lock the tasks list before using it.\n\t(Suspend_All_Tasks): ditto.\n\n2001-10-26  Richard Kenner <kenner@gnat.com>\n\n\t* decl.c (gnat_to_gnu_entity, case E_General_Access_Type):\n\tMake constant variant of designated type for Is_Access_Constant.\n\tCall update_pointer_to with main variant.\n\n\t* trans.c (process_freeze_entity, process_type):\n\tCall update_pointer_to on main variant.\n\n\t* utils.c (update_pointer_to): Make corresponding variant for NEW_TYPE.\n\tIf main variant, update all other variants.\n\n\t* utils2.c (build_unary_op, case INDIRECT_REF): No longer set\n\tTREE_STATIC.\n\n2001-10-26  Robert Dewar <dewar@gnat.com>\n\n\t* prj-util.adb: Minor reformatting\n\n2001-10-26  Robert Dewar <dewar@gnat.com>\n\n\t* prj-util.adb: Minor reformatting\n\n2001-10-26  Robert Dewar <dewar@gnat.com>\n\n\t* prj-attr.adb: Minor reformatting throughout\n\n2001-10-26  Robert Dewar <dewar@gnat.com>\n\n\t* prj-attr.ads: Minor reformatting\n\tAdd ??? comment (this whole spec has almost no comments)\n\n2001-10-26  Vincent Celier <celier@gnat.com>\n\n\t* g-os_lib.adb (Normalize_Pathname): Preserve the double slash\n        (\"//\") that precede the drive letter on Interix.\n\n2001-10-26  Geert Bosch <bosch@gnat.com>\n\n\t* gnat_rm.texi: Add GNAT Reference Manual.\n\n2001-10-25  Robert Dewar <dewar@gnat.com>\n\n\t* sem_ch8.adb (Analyze_Package_Renaming): Skip analysis if Name\n        is Error. Similar change for other renaming cases.\n\n2001-10-25  Robert Dewar <dewar@gnat.com>\n\n\t* s-atacco.ads: Add pragma Inline_Always for functions.\n\tFix header format. Add copyright 2001\n\n2001-10-25  Ed Schonberg <schonber@gnat.com>\n\n\t* par-ch3.adb (P_Subtype_Mark_Resync): for an anonymous array\n        return Error rather than Empty so that analysis can proceed.\n\n2001-10-25  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_util.adb (Enter_Name): better handling of cascaded error\n        messages when a unit appears in its own context.\n\n2001-10-25  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_util.adb (Defining_Entity): in case of error, attach created\n        entity to specification, so that semantic analysis can proceed.\n\n2001-10-25  Robert Dewar <dewar@gnat.com>\n\n\t* sem_util.adb\n        (Defining_Entity): Deal with Error.\n\t(Process_End_Label): Deal with bad end label for.\n\n2001-10-25  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_elab.adb (Check_A_Call): refine message when call is in an\n\tinstance but callee is not declared in the generic unit.\n\n2001-10-25  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_elab.adb (Check_A_Call): check for renaming before finding the\n\tenclosing unit, which may already be different from the calling unit.\n\n2001-10-25  Geert Bosch <bosch@gnat.com>\n\n\t* 4gintnam.ads: fix header format.\n\n2001-10-25  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_res.adb (Resolve_Call): if the call is actually an indexing\n        operation on the result of a parameterless call, perform elaboration\n        check after the node has been properly rewritten.\n\n\t* sem_ch12.adb (Copy_Generic_Node): after the proper body has been\n        inlined within the generic tree, the defining identifier is not a\n        compilation_unit.\n\n2001-10-25  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_res.adb (Resolve): special-case resolution of Null in an\n         instance or an inlined body to avoid view conflicts.\n\n\t* sem_ch12.adb (Copy_Generic_Node): for allocators, check for view\n         compatibility by retrieving the access type of the generic copy.\n\n2001-10-25  Robert Dewar <dewar@gnat.com>\n\n\t* sem_ch3.adb:\n\t(Analyze_Number_Declaration): Handle error expression.\n\t(Signed_Integer_Type_Declaration): Handle error bound.\n\t(Analyze_Subtype_Indication): Handle error range.\n\n\t* sem_util.adb (Get_Index_Bounds): Check for Error.\n\n2001-10-25  Robert Dewar <dewar@gnat.com>\n\n\t* restrict.adb (Set_No_Run_Time_Mode): Set Discard_Names as default\n\tin no run time mode.\n\n2001-10-25  Pascal Obry <obry@gnat.com>\n\n\t* gnatmem.adb (Read_Next): fix Curs2 value to properly handle quiet\n        mode case for ALLOC case.\n\n\t* gnatmem.adb (Read_Next): correctly fix parsing in Quiet mode on\n        all platforms. Improvement of last change.\n\n2001-10-25  Robert Dewar <dewar@gnat.com>\n\n\t* exp_ch4.adb (Expand_N_Allocator): Minor reformatting.\n\n2001-10-25  Geert Bosch  <bosch@gnat.com>\n\n\t* osint.adb (Is_Relative): Remove duplicate.\n\n2001-10-25  Pascal Obry <obry@gnat.com>\n\n\t* osint.adb (Read_Default_Search_Dirs): correctly detect relative\n        pathnames in UNIX and DOS style with drive letter.\n\t(Is_Relative): new routine.\n\n\t* osint.adb: Minor reformatting\n\n\t* osint.adb (Is_Relative): implementation using\n        GNAT.OS_Lib.Is_Absolute_Path. Better fix.\n\n2001-10-25  Pascal Obry <obry@gnat.com>\n\n\t* g-dirope.adb (Basename): correctly compute offset between the\n        original Path and the translated one.\n\n\t* g-dirope.adb: (Base_Name): add some comments.\n\n2001-10-25  Robert Dewar <dewar@gnat.com>\n\n\t* exp_imgv.adb (Expand_Image_Attribute): Defend against bad use\n        in HIE mode, avoids compilation abandoned message\n\n\t* exp_imgv.adb: Correct typo in previous change\n\n\t* exp_imgv.adb: Correct typo in previous change (not my day!)\n\n2001-10-25  Robert Dewar <dewar@gnat.com>\n\n\t* s-tpinop.ads: Add 2001 to copyright notice. Fix header format.\n\n2001-10-25  Pascal Obry <obry@gnat.com>\n\n\t* g-awk.ads: Move all pragma inlines next to the routine\n\t declarations. This is more uniform with other GNAT spec.\n\n2001-10-22  Geert Bosch  <bosch@gnat.com>\n\n\t* Make-lang.in (gnattools, cross-gnattools): Remove gnatmem.\n\n2001-10-19  Geert Bosch  <bosch@gnat.com>\n\n\t* Makefile.in (tools, gnattools): Remove gnatmem.\n\n2001-10-17  Richard Henderson  <rth@redhat.com>\n\n\t* Makefile.in (misc.o): Depend on langhooks.h.\n\t* misc.c: Include it.\n\t(LANG_HOOKS_INIT, LANG_HOOKS_INIT_OPTIONS): New.\n\t(LANG_HOOKS_DECODE_OPTION): New.\n\t(lang_hooks): Use LANG_HOOKS_INITIALIZER.\n\n2001-10-16  Florian Weimer  <fw@deneb.enyo.de>\n\n\t* trans.c (tree_transform): Adjust to recent change in\n\texpand_asm_operands to implement named asm operands.\n\n2001-10-11  Ed Schonberg  <schonber@gnat.com>\n\n\t* exp_ch8.adb (Expand_N_Object_Renaming_Declaration): Bugfix in\n\trenaming of discriminant for mutable record type.\n\n2001-10-11  Robert Dewar  <dewar@gnat.com>\n\n\t* validsw.adb: Properly save -gnatVn status.\n\n2001-10-11  Robert Dewar <dewar@gnat.com>\n\n\t* usage.adb: Add lines for V switch.\n\n\t* gnatcmd.adb (COMPILE): Revise translations for -gnatV\n\t(/VALIDITY_CHECKING).\n\n2001-10-11  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_type.adb (Add_One_Interp): an operator for a type declared in\n\tan extension of System is known to be visible.\n\n2001-10-11  Ed Schonberg <schonber@gnat.com>\n\n\t* sem_eval.adb (Compare_Fixup): get the bounds of a String_Literal\n\tproperly. Fixes regression on ACATS C34005G.\n\n2001-10-11  Robert Dewar <dewar@gnat.com>\n\n\t* sem_ch5.adb (Analyze_Iteration_Scheme): Suppress warning on null\n\tloop in generic instance, since this is likely not very useful.\n\n2001-10-11  Robert Dewar <dewar@gnat.com>\n\n\t* restrict.adb (Disallow in No_Run_Time_Mode): Properly specialize\n\tthe error message for high integrity mode.\n\n\t* rtsfind.adb (RTE): Give message if we try to find an entity that\n\tis not available in high integrity mode.\n\n\t* rtsfind.ads:\n\t(OK_To_Use_In_HIE_Mode): New array.\n\t(RTE): May return Empty in high integrity mode.\n\n\t* rtsfind.ads (OK_To_Use_In_No_Run_Time_Mode): New name for\n\tOK_To_Use_In_HIE_Mode, now includes System_FAT_xxx.\n\n\t* sem_ch6.adb (Analyze_Subprogram_Body): Kill body in predefined\n\tunit if not inlined always and in no runtime mode. Fixes problem\n\tcaused by new Rtsfind changes.\n\n\t* sem_ch6.adb (Analyze_Subrogram_Body): Do not Check_References if\n\tbody is deleted.\n\n\t* rtsfind.adb (RTE): Make sure we do not try to load unit after\n\tgiving message for entity not available in high integrity mode.\n\n2001-10-11  Pascal Obry <obry@gnat.com>\n\n\t* impunit.adb: Add GNAT.CRC32.\n\n2001-10-11  Ed Schonberg <schonber@gnat.com>\n\n\t* exp_fixd.adb (Expand_Multiply_Fixed_By_Fixed_Giving_Fixed): handle\n\tproperly the case where one universal operand in a non-static\n\texponentiation of a real literal.\n\n2001-10-11  Ed Schonberg <schonber@gnat.com>\n\n\t* exp_ch7.adb (Find_Final_List): for a type appearing in a with_type\n\tclause, return the gobal finalization list, for lack of anthing else.\n\n2001-10-11  Ed Schonberg <schonber@gnat.com>\n\n\t* exp_ch7.adb (Make_Transient_Block): if statement is within\n\texception handler, always use new transient scope to place Clean\n\tprocedure.\n\n2001-10-11  Pascal Obry <obry@gnat.com>\n\n\t* Makefile.in:\n\t(GNAT_ADA_OBJS): add g-crc32.o, a-tags.o, a-stream.o\n\t(GNATBIND_OBJS): add g-crc32.o, a-tags.o, a-stream.o\n\t(GNATLS_RTL_OBJS): add g-crc32.o\n\t(GNATMAKE_RTL_OBJS): add g-crc32.o\n\n\t* ali-util.adb:\n\t(CRC_Match): new function.\n\t(Get_File_Checksum): renamed Get_File_CRC. Use the GNAT.CRC32 unit\n\tinstead of the previous simple checksum algorithm.\n\t(Time_Stamp_Mismatch): use CRC_Match for comparison.\n\t(Set_Source_Table): idem.\n\n\t* ali-util.ads:\n\t(Get_File_Checksum): renamed Get_File_CRC as now we compute CRC\n\tinstead of simple checksum.\n\t(CRC_Match): new function.\n\t(CRC_Error): new constant.\n\n\t* ali.adb (Scan_ALI): rename variable Chk to CRC as we are handling\n\ta CRC now and not a simple checksum. A CRC uses lower-case hex\n\tletters, fixes ambiguity in parsing.\n\n\t* ali.ads (Sdep_Record.Checksum): renamed Sdep_Record.CRC as this\n\tis what this variable will store.\n\n\t* bcheck.adb: Change reference to chechsum in comments by CRC.\n\t(Check_Consistency): Rename Get_File_Checksum to Get_File_CRC.\n\trename All_Checksum_Match to All_CRC_Match. Change due to API\n\trenaming since now GNAT does not use a simple checksum but a\n\tCRC using GNAT.CRC32.\n\n\t* gnatls.adb: Rename Checksum to CRC in many places, we use a CRC\n\tnow and not anymore a simple checksum.\n\n\t* lib-load.adb: Use Source_CRC instead of Source_Checksum in many\n\tplaces.\n\n\t* lib-writ.adb (Write_ALI): Use Source_CRC instead of Source_Checksum.\n\n\t* scans.adb:\n\t(Restore_Scan_State): rename Checksum to CRC.\n\t(Save_Scan_State): idem.\n\n\t* scans.ads:\n\tWith GNAT.CRC32.\n\t(Checksum): rename to CRC.\n\t(Saved_Scan_State): Save_Checksum field renamed to Save_CRC\n\n\t* scn-nlit.adb: Rename many Accumulate_Checksum to Update (from\n\tGNAT.CRC32).  Update copyright notice.\n\n\t* scn-slit.adb: Rename many Accumulate_Checksum to Update (from\n\tGNAT.CRC32).  Update copyright notice.\n\n\t* scn.adb:\n\t(Accumulate_Checksum): removed.\n\t(Update): new procedure. Add a wide-character into the CRC.\n\n\t* sinput-l.adb:\n\t(Complete_Source_File_Entry): use CRC32 instead of simple checksum.\n\t(Load_File): fix initialization of S (change Source_Checksum to\n\tSource_CRC)\n\n\t* sinput-p.adb (Load_Project_File): rename Source_Checksum to\n\tSource_CRC in S initialization.\n\n\t* sinput.adb (Source_Checksum): renamed to Source_CRC.\n\n\t* sinput.ads (Source_Checksum): renamed to Source_CRC.\n\tUpdate comments for the CRC.\n\n\t* types.adb (Hex): Use lowercase for the letter part.\n\n\t* types.ads (Get_Hex_String): Returns the hexadecimal representation\n\tfor a word. This is currently used only for CRC. In previous version,\n\tthe checksum was using a representation with all letter being\n\tupper-case. With the new implementation (using CRC) we do not remove\n\tthe 32th bit of the CRC, so we can have an upper-case starting letter\n\tin the CRC. This is not possible to parse in Scan_ALI (ali.adb).\n\tIt is ambigous since the CRC was optional and could be followed by\n\toptions like EB, EE. So now this routines uses lower-case letter for\n\tthe hexadecimal representation. Strange enough only lower case letters\n\twhere checked in Scan_ALI (even if this was not a possible case).\n\n\t* gnatvsn.ads (Library_Version): changed to 3.15a.\n\n\t* s-crc32.ads: Initial version from GNAT.CRC32. This is the version\n\tfor the compiler.\n\n\t* s-crc32.adb: Initial version from GNAT.CRC32. This is the version\n\tfor the compiler.\n\n\t* ali-util.adb: Redo previous change to avoid using word CRC everywhere\n\tAdd 2001 to copyright notice\n\t(Accumulate_Checksum): Modify to use System.CRC32.\n\n\t* ali-util.ads: Redo changes of previous revision to continue to use\n\tthe word Checksum. Add 2001 to copyright notice.\n\n\t* ali.adb: Undo some of previous changes, not needed.\n\tKeep the change for lower case letters in the checksum.\n\n\t* ali.ads: Undo previous change not needed.\n\n\t* bcheck.adb: Undo most of previ\u2026", "tree": {"sha": "2e229f6bd0a3e927231c38a6a83fcbd80aba9850", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e229f6bd0a3e927231c38a6a83fcbd80aba9850"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/comments", "author": null, "committer": null, "parents": [{"sha": "415791dba8d7b002a594d1194d72ebdd94d05533", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/415791dba8d7b002a594d1194d72ebdd94d05533", "html_url": "https://github.com/Rust-GCC/gccrs/commit/415791dba8d7b002a594d1194d72ebdd94d05533"}], "stats": {"total": 1182, "additions": 952, "deletions": 230}, "files": [{"sha": "c92ffb9e64be0c1c1026ead1ecb32aa3abfbb530", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 834, "deletions": 0, "changes": 834, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "patch": "@@ -1,3 +1,837 @@\n+2001-12-12  Robert Dewar <dewar@gnat.com>\n+\n+\t* s-stalib.adb: Add more comments on with statements being needed\n+\t\n+\t* par-ch12.adb: Minor reformatting\n+\t\n+\t* prj-dect.ads: Fix copyright header\n+\t\n+\t* s-arit64.adb (Multiply_With_Ovflo_Check): Fix case where both \n+\tinputs fit in 32 bits, but the result still overflows.\n+\t\n+\t* s-fatgen.ads: Minor comment improvement\n+\t\n+2001-12-12  Ed Schonberg <schonber@gnat.com>\n+\n+\t* sem_ch4.adb (Analyze_Selected_Component): If the prefix is of a \n+\tformal derived type, look for an inherited component from the full \n+\tview of the parent, if any.\n+\t\n+2001-12-12  Robert Dewar <dewar@gnat.com>\n+\n+\t* checks.ads (Apply_Alignment_Check): New procedure.\n+\t\n+\t* exp_ch13.adb (Expand_N_Freeze_Entity): Generate dynamic check to \n+\tensure that the alignment of objects with address clauses is \n+\tappropriate, and raise PE if not.\n+\n+\t* exp_util.ads (Must_Be_Aligned): Removed, replaced by \n+\tExp_Pakd.Known_Aligned_Enough\n+\t\n+\t* mdllfile.ads: Minor reformatting\n+\n+\t* mlib-fil.ads: Minor reformatting\n+\t\n+2001-12-12  Ed Schonberg <schonber@gnat.com>\n+\n+\t* exp_ch8.adb (Expand_N_Object_Renaming_Declaration): Extend previous \n+\tfix to any component reference if enclosing record has non-standard \n+\trepresentation.\n+\t\n+2001-12-12  Vincent Celier <celier@gnat.com>\n+\n+\t* g-dirope.ads (Find, Wildcard_Iterator): Moved to child package \n+\tIteration\n+\t\n+2001-12-12  Ed Schonberg <schonber@gnat.com>\n+\n+\t* freeze.ads: Make Freeze_Fixed_Point_Type visible, for use in \n+\tsem_attr.\n+\t\n+2001-12-12  Robert Dewar <dewar@gnat.com>\n+\n+\t* impunit.adb: Add entry for GNAT.Directory_Operations.Iteration\n+\t\n+2001-12-12  Emmanuel Briot <briot@gnat.com>\n+\n+\t* g-regexp.adb: Remove all debug code, since it isn't required anymore,\n+\tand it adds dependencies to system.io.\n+\t\n+2001-12-12  Pascal Obry <obry@gnat.com>\n+\n+\t* g-dirope.adb (Expand_Path.Var): Correctly detect end of \n+\tvariable name.\n+\n+*** s-stalib.adb\t2001/09/03 15:24:33\t1.17\n+--- s-stalib.adb\t2001/10/16 13:14:46\t1.18\n+***************\n+*** 46,59 ****\n+  --  elaboration circularities with Ada.Exceptions if polling is on.\n+  \n+  with System.Soft_Links;\n+! --  Referenced directly from generated code\n+! --  Also referenced from exception handling routines.\n+  --  This is needed for programs that don't use exceptions explicitely but\n+  --  direct calls to Ada.Exceptions are generated by gigi (for example,\n+  --  by calling __gnat_raise_constraint_error directly).\n+  \n+  with System.Memory;\n+! --  Referenced directly from generated code\n+  \n+  package body System.Standard_Library is\n+  \n+--- 46,62 ----\n+  --  elaboration circularities with Ada.Exceptions if polling is on.\n+  \n+  with System.Soft_Links;\n+! --  Referenced directly from generated code using external symbols so it\n+! --  must always be present in a build, even if no unit has a direct with\n+! --  of this unit. Also referenced from exception handling routines.\n+  --  This is needed for programs that don't use exceptions explicitely but\n+  --  direct calls to Ada.Exceptions are generated by gigi (for example,\n+  --  by calling __gnat_raise_constraint_error directly).\n+  \n+  with System.Memory;\n+! --  Referenced directly from generated code using external symbols, so it\n+! --  must always be present in a build, even if no unit has a direct with\n+! --  of this unit.\n+  \n+  package body System.Standard_Library is\n+  \n+\n+*** par-ch12.adb\t2001/10/19 15:22:18\t1.48\n+--- par-ch12.adb\t2001/10/19 15:24:48\t1.49\n+***************\n+*** 452,466 ****\n+        if Def_Node /= Error then\n+           Set_Formal_Type_Definition (Decl_Node, Def_Node);\n+           TF_Semicolon;\n+        else\n+           Decl_Node := Error;\n+  \n+           if Token = Tok_Semicolon then\n+-             --   Avoid further cascaded errors.\n+              Scan;\n+           end if;\n+        end if;\n+- \n+  \n+        return Decl_Node;\n+     end P_Formal_Type_Declaration;\n+--- 452,467 ----\n+        if Def_Node /= Error then\n+           Set_Formal_Type_Definition (Decl_Node, Def_Node);\n+           TF_Semicolon;\n++ \n+        else\n+           Decl_Node := Error;\n+  \n++          --  If we have semicolon, skip it to avoid cascaded errors\n++ \n+           if Token = Tok_Semicolon then\n+              Scan;\n+           end if;\n+        end if;\n+  \n+        return Decl_Node;\n+     end P_Formal_Type_Declaration;\n+\n+*** prj-dect.ads\t2001/10/20 10:28:13\t1.4\n+--- prj-dect.ads\t2001/10/20 11:43:56\t1.5\n+***************\n+*** 8,14 ****\n+  --                                                                          --\n+  --                            $Revision$\n+  --                                                                          --\n+! --          Copyright (C) 2000-2001 Free Software Foundation, Inc.          --\n+  --                                                                          --\n+  -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+  -- terms of the  GNU General Public License as published  by the Free Soft- --\n+--- 8,14 ----\n+  --                                                                          --\n+  --                            $Revision$\n+  --                                                                          --\n+! --             Copyright (C) 2001 Free Software Foundation, Inc.            --\n+  --                                                                          --\n+  -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+  -- terms of the  GNU General Public License as published  by the Free Soft- --\n+\n+*** s-arit64.adb\t2001/02/09 15:10:29\t1.16\n+--- s-arit64.adb\t2001/10/20 14:50:39\t1.17\n+***************\n+*** 325,337 ****\n+              T2 := Xhi * Ylo;\n+           end if;\n+  \n+!       else\n+!          if Yhi /= 0 then\n+!             T2 := Xlo * Yhi;\n+!          else\n+!             return X * Y;\n+!          end if;\n+        end if;\n+  \n+        T1 := Xlo * Ylo;\n+        T2 := T2 + Hi (T1);\n+--- 325,339 ----\n+              T2 := Xhi * Ylo;\n+           end if;\n+  \n+!       elsif Yhi /= 0 then\n+!          T2 := Xlo * Yhi;\n+! \n+!       else -- Yhi = Xhi = 0\n+!          T2 := 0;\n+        end if;\n++ \n++       --  Here we have T2 set to the contribution to the upper half\n++       --  of the result from the upper halves of the input values.\n+  \n+        T1 := Xlo * Ylo;\n+        T2 := T2 + Hi (T1);\n+\n+*** s-fatgen.ads\t2001/07/20 00:59:34\t1.9\n+--- s-fatgen.ads\t2001/10/20 18:37:39\t1.10\n+***************\n+*** 89,97 ****\n+  \n+     function Unbiased_Rounding (X : T)                       return T;\n+  \n+!    function Valid             (X : access T)                return Boolean;\n+!    --  The argument must be passed by reference here, as T may be\n+!    --  an abnormal value that can be passed in a floating point register.\n+  \n+  private\n+     pragma Inline (Machine);\n+--- 89,100 ----\n+  \n+     function Unbiased_Rounding (X : T)                       return T;\n+  \n+!    function Valid (X : access T) return Boolean;\n+!    --  This function checks if the object of type T referenced by X\n+!    --  is valid, and returns True/False accordingly. The parameter is\n+!    --  passed by reference (access) here, as the object of type T may\n+!    --  be an abnormal value that cannot be passed in a floating-point\n+!    --  register, and the whole point of 'Valid is to prevent exceptions.\n+  \n+  private\n+     pragma Inline (Machine);\n+\n+*** sem_ch4.adb\t2001/09/24 22:32:31\t1.511\n+--- sem_ch4.adb\t2001/10/21 17:41:52\t1.512\n+***************\n+*** 2691,2696 ****\n+--- 2691,2708 ----\n+  \n+              Check_Misspelled_Selector (Entity_List, Sel);\n+  \n++          elsif Is_Generic_Type (Prefix_Type)\n++            and then Ekind (Prefix_Type) = E_Record_Type_With_Private\n++            and then Is_Record_Type (Etype (Prefix_Type))\n++          then\n++             --  If this is a derived formal type, the parent may have a\n++             --  different visibility at this point. Try for an inherited\n++             --  component before reporting an error.\n++ \n++             Set_Etype (Prefix (N), Etype (Prefix_Type));\n++             Analyze_Selected_Component (N);\n++             return;\n++ \n+           else\n+              if Ekind (Prefix_Type) = E_Record_Subtype then\n+  \n+\n+*** checks.ads\t2001/07/16 01:26:04\t1.55\n+--- checks.ads\t2001/10/28 15:13:02\t1.56\n+***************\n+*** 83,88 ****\n+--- 83,95 ----\n+     --  the object denoted by the access parameter is not deeper than the\n+     --  level of the type Typ. Program_Error is raised if the check fails.\n+  \n++    procedure Apply_Alignment_Check (E : Entity_Id; N : Node_Id);\n++    --  E is the entity for an object. If there is an address clause for\n++    --  this entity, and checks are enabled, then this procedure generates\n++    --  a check that the specified address has an alignment consistent with\n++    --  the alignment of the object, raising PE if this is not the case. The\n++    --  resulting check (if one is generated) is inserted before node N.\n++ \n+     procedure Apply_Array_Size_Check (N : Node_Id; Typ : Entity_Id);\n+     --  N is the node for an object declaration that declares an object of\n+     --  array type Typ. This routine generates, if necessary, a check that\n+\n+*** exp_ch13.adb\t2001/07/16 21:21:29\t1.76\n+--- exp_ch13.adb\t2001/10/28 15:13:25\t1.77\n+***************\n+*** 27,32 ****\n+--- 27,33 ----\n+  ------------------------------------------------------------------------------\n+  \n+  with Atree;    use Atree;\n++ with Checks;   use Checks;\n+  with Einfo;    use Einfo;\n+  with Exp_Ch3;  use Exp_Ch3;\n+  with Exp_Ch6;  use Exp_Ch6;\n+***************\n+*** 236,245 ****\n+        Decl           : Node_Id;\n+  \n+     begin\n+!       if not Is_Type (E) and then not Is_Subprogram (E) then\n+           return;\n+        end if;\n+  \n+        E_Scope := Scope (E);\n+  \n+        --  If we are freezing entities defined in protected types, they\n+--- 237,256 ----\n+        Decl           : Node_Id;\n+  \n+     begin\n+!       --  For object, with address clause, check alignment is OK\n+! \n+!       if Is_Object (E) then\n+!          Apply_Alignment_Check (E, N);\n+! \n+!       --  Only other items requiring any front end action are\n+!       --  types and subprograms.\n+! \n+!       elsif not Is_Type (E) and then not Is_Subprogram (E) then\n+           return;\n+        end if;\n+  \n++       --  Here E is a type or a subprogram\n++ \n+        E_Scope := Scope (E);\n+  \n+        --  If we are freezing entities defined in protected types, they\n+***************\n+*** 304,314 ****\n+  \n+        elsif Is_Subprogram (E) then\n+           Freeze_Subprogram (N);\n+- \n+-       --  No other entities require any front end freeze actions\n+- \n+-       else\n+-          null;\n+        end if;\n+  \n+        --  Analyze actions generated by freezing. The init_proc contains\n+--- 315,320 ----\n+\n+*** exp_util.ads\t2001/07/23 10:05:17\t1.112\n+--- exp_util.ads\t2001/10/28 15:14:04\t1.113\n+***************\n+*** 372,386 ****\n+     --  routine is to help avoid generating troublesome temporaries that\n+     --  intefere with the stack checking mechanism.\n+  \n+-    function Must_Be_Aligned (Obj : Node_Id) return Boolean;\n+-    --  Given an object reference, determines whether or not the object\n+-    --  is required to be aligned according to its type'alignment value.\n+-    --  Normally, objects are required to be aligned, and the result will\n+-    --  be True. The situation in which this is not the case is if the\n+-    --  object reference involves a component of a packed array, where\n+-    --  the type of the component is not required to have strict alignment.\n+-    --  In this case, false will be returned.\n+- \n+     procedure Remove_Side_Effects\n+       (Exp          : Node_Id;\n+        Name_Req     : Boolean := False;\n+--- 372,377 ----\n+\n+*** mdllfile.ads\t2001/10/29 02:06:24\t1.2\n+--- mdllfile.ads\t2001/10/29 02:50:12\t1.3\n+***************\n+*** 26,52 ****\n+  --                                                                          --\n+  ------------------------------------------------------------------------------\n+  \n+! --  Simple services used by GNATDLL to deal with Filename extension.\n+  \n+  package MDLL.Files is\n+  \n+     No_Ext : constant String := \"\";\n+  \n+!    function Get_Ext (Filename : in String)\n+!                      return String;\n+!    --  return filename's extension.\n+! \n+!    function Is_Ali (Filename : in String)\n+!                     return Boolean;\n+!    --  test if Filename is an Ada library file (.ali).\n+! \n+!    function Is_Obj (Filename : in String)\n+!                     return Boolean;\n+!    --  test if Filename is an object file (.o or .obj).\n+! \n+!    function Ext_To (Filename : in String;\n+!                     New_Ext  : in String := No_Ext)\n+!                     return String;\n+!    --  return Filename with the extension change to New_Ext.\n+  \n+  end MDLL.Files;\n+--- 26,51 ----\n+  --                                                                          --\n+  ------------------------------------------------------------------------------\n+  \n+! --  Simple services used by GNATDLL to deal with Filename extension\n+  \n+  package MDLL.Files is\n+  \n+     No_Ext : constant String := \"\";\n++    --  Used to mark the absence of an extension\n+  \n+!    function Get_Ext (Filename : String) return String;\n+!    --  Return extension of Filename\n+! \n+!    function Is_Ali (Filename : String) return Boolean;\n+!    --  Test if Filename is an Ada library file (.ali).\n+! \n+!    function Is_Obj (Filename : String) return Boolean;\n+!    --  Test if Filename is an object file (.o or .obj)\n+! \n+!    function Ext_To\n+!      (Filename : String;\n+!       New_Ext  : String := No_Ext)\n+!       return     String;\n+!    --  Return Filename with the extension change to New_Ext\n+  \n+  end MDLL.Files;\n+\n+*** mlib-fil.ads\t2001/10/29 02:06:26\t1.3\n+--- mlib-fil.ads\t2001/10/29 02:51:28\t1.4\n+***************\n+*** 36,51 ****\n+        return     String;\n+     --  Return Filename with the extension change to New_Ext.\n+  \n+!    function Get_Ext (Filename : in String) return String;\n+     --  Return extension of filename.\n+  \n+     function Is_Archive (Filename : String) return Boolean;\n+     --  Test if filename is an archive\n+  \n+!    function Is_C (Filename : in String) return Boolean;\n+     --  Test if Filename is a C file\n+  \n+!    function Is_Obj (Filename : in String) return Boolean;\n+     --  Test if Filename is an object file\n+  \n+  end MLib.Fil;\n+--- 36,51 ----\n+        return     String;\n+     --  Return Filename with the extension change to New_Ext.\n+  \n+!    function Get_Ext (Filename : String) return String;\n+     --  Return extension of filename.\n+  \n+     function Is_Archive (Filename : String) return Boolean;\n+     --  Test if filename is an archive\n+  \n+!    function Is_C (Filename : String) return Boolean;\n+     --  Test if Filename is a C file\n+  \n+!    function Is_Obj (Filename : String) return Boolean;\n+     --  Test if Filename is an object file\n+  \n+  end MLib.Fil;\n+\n+*** exp_ch8.adb\t2001/10/03 02:17:32\t1.30\n+--- exp_ch8.adb\t2001/10/29 17:32:24\t1.31\n+***************\n+*** 59,65 ****\n+     --  of the renamed object. The cases in which this is not true are when\n+     --  this address is not computable, since it involves extraction of a\n+     --  packed array element, or of a record component to which a component\n+!    --  clause applies (that can specify an arbitrary bit boundary).\n+  \n+     --  In these two cases, we pre-evaluate the renaming expression, by\n+     --  extracting and freezing the values of any subscripts, and then we\n+--- 59,66 ----\n+     --  of the renamed object. The cases in which this is not true are when\n+     --  this address is not computable, since it involves extraction of a\n+     --  packed array element, or of a record component to which a component\n+!    --  clause applies (that can specify an arbitrary bit boundary), or where\n+!    --  the enclosing record itself has a non-standard representation.\n+  \n+     --  In these two cases, we pre-evaluate the renaming expression, by\n+     --  extracting and freezing the values of any subscripts, and then we\n+***************\n+*** 211,228 ****\n+              end if;\n+  \n+           elsif Nkind (Nam) = N_Selected_Component then\n+!             if Present (Component_Clause (Entity (Selector_Name (Nam)))) then\n+!                return True;\n+  \n+!             elsif Ekind (Entity (Selector_Name (Nam))) = E_Discriminant\n+!               and then Is_Record_Type (Etype (Prefix (Nam)))\n+!               and then not Is_Concurrent_Record_Type (Etype (Prefix (Nam)))\n+!             then\n+!                return True;\n+  \n+!             else\n+!                return Evaluation_Required (Prefix (Nam));\n+!             end if;\n+  \n+           else\n+              return False;\n+--- 212,236 ----\n+              end if;\n+  \n+           elsif Nkind (Nam) = N_Selected_Component then\n+!             declare\n+!                Rec_Type : Entity_Id := Etype (Prefix (Nam));\n+  \n+!             begin\n+!                if Present (Component_Clause (Entity (Selector_Name (Nam))))\n+!                  or else Has_Non_Standard_Rep (Rec_Type)\n+!                then\n+!                   return True;\n+! \n+!                elsif Ekind (Entity (Selector_Name (Nam))) = E_Discriminant\n+!                  and then Is_Record_Type (Rec_Type)\n+!                  and then not Is_Concurrent_Record_Type (Rec_Type)\n+!                then\n+!                   return True;\n+  \n+!                else\n+!                   return Evaluation_Required (Prefix (Nam));\n+!                end if;\n+!             end;\n+  \n+           else\n+              return False;\n+\n+*** g-dirope.ads\t2001/08/27 09:48:38\t1.12\n+--- g-dirope.ads\t2001/10/29 19:18:13\t1.13\n+***************\n+*** 38,43 ****\n+--- 38,47 ----\n+  --  can be treated as a file, using open and close routines, and a scanning\n+  --  routine is provided for iterating through the entries in a directory.\n+  \n++ --  See also child package GNAT.Directory_Operations.Iteration\n++ \n++ with Ada.Strings.Maps;\n++ \n+  package GNAT.Directory_Operations is\n+  \n+     subtype Dir_Name_Str is String;\n+***************\n+*** 187,248 ****\n+     --  returned in target-OS form. Raises Directory_Error if Dir has not\n+     --  be opened (Dir = Null_Dir).\n+  \n+-    generic\n+-       with procedure Action\n+-         (Item  :        String;\n+-          Index :        Positive;\n+-          Quit  : in out Boolean);\n+-    procedure Wildcard_Iterator (Path : Path_Name);\n+-    --  Calls Action for each path matching Path. Path can include wildcards '*'\n+-    --  and '?' and [...]. The rules are:\n+-    --\n+-    --     *       can be replaced by any sequence of characters\n+-    --     ?       can be replaced by a single character\n+-    --     [a-z]   match one character in the range 'a' through 'z'\n+-    --     [abc]   match either character 'a', 'b' or 'c'\n+-    --\n+-    --  Item is the filename that has been matched. Index is set to one for the\n+-    --  first call and is incremented by one at each call. The iterator's\n+-    --  termination can be controlled by setting Quit to True. It is by default\n+-    --  set to False.\n+-    --\n+-    --  For example, if we have the following directory structure:\n+-    --     /boo/\n+-    --        foo.ads\n+-    --     /sed/\n+-    --        foo.ads\n+-    --        file/\n+-    --          foo.ads\n+-    --     /sid/\n+-    --        foo.ads\n+-    --        file/\n+-    --          foo.ads\n+-    --     /life/\n+-    --\n+-    --  A call with expression \"/s*/file/*\" will call Action for the following\n+-    --  items:\n+-    --     /sed/file/foo.ads\n+-    --     /sid/file/foo.ads\n+- \n+-    generic\n+-       with procedure Action\n+-         (Item  :        String;\n+-          Index :        Positive;\n+-          Quit  : in out Boolean);\n+-    procedure Find\n+-      (Root_Directory : Dir_Name_Str;\n+-       File_Pattern   : String);\n+-    --  Recursively searches the directory structure rooted at Root_Directory.\n+-    --  This provides functionality similar to the UNIX 'find' command.\n+-    --  Action will be called for every item matching the regular expression\n+-    --  File_Pattern (see GNAT.Regexp). Item is the full pathname to the file\n+-    --  starting with Root_Directory that has been matched. Index is set to one\n+-    --  for the first call and is incremented by one at each call. The iterator\n+-    --  will pass in the value False on each call to Action. The iterator will\n+-    --  terminate after passing the last matched path to Action or after\n+-    --  returning from a call to Action which sets Quit to True.\n+-    --  Raises GNAT.Regexp.Error_In_Regexp if File_Pattern is ill formed.\n+- \n+     function Read_Is_Thread_Safe return Boolean;\n+     --  Indicates if procedure Read is thread safe. On systems where the\n+     --  target system supports this functionality, Read is thread safe,\n+--- 191,196 ----\n+***************\n+*** 259,263 ****\n+--- 207,215 ----\n+     Null_Dir : constant Dir_Type := null;\n+  \n+     pragma Import (C, Dir_Separator, \"__gnat_dir_separator\");\n++ \n++    Dir_Seps : constant Ada.Strings.Maps.Character_Set :=\n++                 Ada.Strings.Maps.To_Set (\"/\\\");\n++    --  UNIX and DOS style directory separators.\n+  \n+  end GNAT.Directory_Operations;\n+\n+*** freeze.ads\t2001/10/29 02:06:04\t1.15\n+--- freeze.ads\t2001/10/30 01:36:24\t1.16\n+***************\n+*** 205,210 ****\n+--- 205,215 ----\n+     --  so need to be similarly treated. Freeze_Expression takes care of\n+     --  determining the proper insertion point for generated freeze actions.\n+  \n++    procedure Freeze_Fixed_Point_Type (Typ : Entity_Id);\n++    --  Freeze fixed point type. For fixed-point types, we have to defer\n++    --  setting the size and bounds till the freeze point, since they are\n++    --  potentially affected by the presence of size and small clauses.\n++ \n+     procedure Freeze_Itype (T : Entity_Id; N : Node_Id);\n+     --  This routine is called when an Itype is created and must be frozen\n+     --  immediately at the point of creation (for the sake of the expansion\n+\n+*** impunit.adb\t2001/09/26 07:14:11\t1.14\n+--- impunit.adb\t2001/10/30 04:33:45\t1.15\n+***************\n+*** 195,200 ****\n+--- 195,201 ----\n+       \"g-curexc\",    -- GNAT.Current_Exception\n+       \"g-debpoo\",    -- GNAT.Debug_Pools\n+       \"g-debuti\",    -- GNAT.Debug_Utilities\n++      \"g-diopit\",    -- GNAT.Directory_Operations.Iteration\n+       \"g-dirope\",    -- GNAT.Directory_Operations\n+       \"g-dyntab\",    -- GNAT.Dynamic_Tables\n+       \"g-exctra\",    -- GNAT.Exception_Traces\n+\n+*** g-regexp.adb\t2001/10/21 11:04:16\t1.28\n+--- g-regexp.adb\t2001/10/30 15:25:04\t1.29\n+***************\n+*** 32,38 ****\n+  --                                                                          --\n+  ------------------------------------------------------------------------------\n+  \n+- with System.IO;\n+  with Unchecked_Deallocation;\n+  with Ada.Exceptions;\n+  with GNAT.Case_Util;\n+--- 32,37 ----\n+***************\n+*** 73,82 ****\n+     end record;\n+     --  Deterministic finite-state machine\n+  \n+-    Debug : constant Boolean := False;\n+-    --  When True, the primary and secondary tables will be printed.\n+-    --  Gnat does not generate any code if this variable is False;\n+- \n+     -----------------------\n+     -- Local Subprograms --\n+     -----------------------\n+--- 72,77 ----\n+***************\n+*** 188,199 ****\n+        pragma No_Return (Raise_Exception);\n+        --  Raise an exception, indicating an error at character Index in S.\n+  \n+-       procedure Print_Table\n+-         (Table      : Regexp_Array;\n+-          Num_States : State_Index;\n+-          Is_Primary : Boolean := True);\n+-       --  Print a table for debugging purposes\n+- \n+        --------------------\n+        -- Create_Mapping --\n+        --------------------\n+--- 183,188 ----\n+***************\n+*** 1225,1309 ****\n+                 end loop;\n+              end loop;\n+  \n+-             if Debug then\n+-                System.IO.New_Line;\n+-                System.IO.Put_Line (\"Secondary table : \");\n+-                Print_Table (R.States, Nb_State, False);\n+-             end if;\n+- \n+              return (Ada.Finalization.Controlled with R => R);\n+           end;\n+        end Create_Secondary_Table;\n+  \n+-       -----------------\n+-       -- Print_Table --\n+-       -----------------\n+- \n+-       procedure Print_Table\n+-         (Table      : Regexp_Array;\n+-          Num_States : State_Index;\n+-          Is_Primary : Boolean := True)\n+-       is\n+-          function Reverse_Mapping (N : Column_Index) return Character;\n+-          --  Return the character corresponding to a column in the mapping\n+- \n+-          ---------------------\n+-          -- Reverse_Mapping --\n+-          ---------------------\n+- \n+-          function Reverse_Mapping (N : Column_Index) return Character is\n+-          begin\n+-             for Column in Map'Range loop\n+-                if Map (Column) = N then\n+-                   return Column;\n+-                end if;\n+-             end loop;\n+- \n+-             return ' ';\n+-          end Reverse_Mapping;\n+- \n+-       --  Start of processing for Print_Table\n+- \n+-       begin\n+-          --  Print the header line\n+- \n+-          System.IO.Put (\"   [*]  \");\n+- \n+-          for Column in 1 .. Alphabet_Size  loop\n+-             System.IO.Put\n+-               (String'(1 .. 1 => Reverse_Mapping (Column)) & \"   \");\n+-          end loop;\n+- \n+-          if Is_Primary then\n+-             System.IO.Put (\"closure....\");\n+-          end if;\n+- \n+-          System.IO.New_Line;\n+- \n+-          --  Print every line\n+- \n+-          for State in 1 .. Num_States loop\n+-             System.IO.Put (State'Img);\n+- \n+-             for K in 1 .. 3 - State'Img'Length loop\n+-                System.IO.Put (\" \");\n+-             end loop;\n+- \n+-             for K in 0 .. Alphabet_Size loop\n+-                System.IO.Put (Table (State, K)'Img & \"  \");\n+-             end loop;\n+- \n+-             for K in Alphabet_Size + 1 .. Table'Last (2) loop\n+-                if Table (State, K) /= 0 then\n+-                   System.IO.Put (Table (State, K)'Img & \",\");\n+-                end if;\n+-             end loop;\n+- \n+-             System.IO.New_Line;\n+-          end loop;\n+- \n+-       end Print_Table;\n+- \n+        ---------------------\n+        -- Raise_Exception --\n+        ---------------------\n+--- 1214,1223 ----\n+***************\n+*** 1345,1356 ****\n+                (Table, Num_States, Start_State, End_State);\n+           end if;\n+  \n+-          if Debug then\n+-             Print_Table (Table.all, Num_States);\n+-             System.IO.Put_Line (\"Start_State : \" & Start_State'Img);\n+-             System.IO.Put_Line (\"End_State   : \" & End_State'Img);\n+-          end if;\n+- \n+           --  Creates the secondary table\n+  \n+           R := Create_Secondary_Table\n+--- 1259,1264 ----\n+***************\n+*** 1451,1467 ****\n+           New_Table := new Regexp_Array (Table'First (1) .. New_Lines,\n+                                          Table'First (2) .. New_Columns);\n+           New_Table.all := (others => (others => 0));\n+- \n+-          if Debug then\n+-             System.IO.Put_Line (\"Reallocating table: Lines from \"\n+-                                 & State_Index'Image (Table'Last (1))\n+-                                 & \" to \"\n+-                                 & State_Index'Image (New_Lines));\n+-             System.IO.Put_Line (\"   and columns from \"\n+-                                 & Column_Index'Image (Table'Last (2))\n+-                                 & \" to \"\n+-                                 & Column_Index'Image (New_Columns));\n+-          end if;\n+  \n+           for J in Table'Range (1) loop\n+              for K in Table'Range (2) loop\n+--- 1359,1364 ----\n+\n+*** g-dirope.adb\t2001/10/31 21:36:04\t1.20\n+--- g-dirope.adb\t2001/11/01 16:39:33\t1.21\n+***************\n+*** 371,387 ****\n+                 E := E + 1;\n+  \n+                 Var_Name : loop\n+!                   exit Var_Name when E = Path'Last;\n+  \n+                    if Characters.Handling.Is_Letter (Path (E))\n+                      or else Characters.Handling.Is_Digit (Path (E))\n+                    then\n+                       E := E + 1;\n+                    else\n+-                      E := E - 1;\n+                       exit Var_Name;\n+                    end if;\n+                 end loop Var_Name;\n+  \n+                 declare\n+                    Env : OS_Lib.String_Access := OS_Lib.Getenv (Path (K .. E));\n+--- 371,388 ----\n+                 E := E + 1;\n+  \n+                 Var_Name : loop\n+!                   exit Var_Name when E > Path'Last;\n+  \n+                    if Characters.Handling.Is_Letter (Path (E))\n+                      or else Characters.Handling.Is_Digit (Path (E))\n+                    then\n+                       E := E + 1;\n+                    else\n+                       exit Var_Name;\n+                    end if;\n+                 end loop Var_Name;\n++ \n++                E := E - 1;\n+  \n+                 declare\n+                    Env : OS_Lib.String_Access := OS_Lib.Getenv (Path (K .. E));\n 2001-12-11  Ed Schonberg <schonber@gnat.com>\n \n \t* sem_ch10.adb (Install_Withed_Unit): If the unit is a generic instance"}, {"sha": "711bd4884d90e0a810d660962f8d3ad89c8c63c7", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.55 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -83,6 +83,13 @@ package Checks is\n    --  the object denoted by the access parameter is not deeper than the\n    --  level of the type Typ. Program_Error is raised if the check fails.\n \n+   procedure Apply_Alignment_Check (E : Entity_Id; N : Node_Id);\n+   --  E is the entity for an object. If there is an address clause for\n+   --  this entity, and checks are enabled, then this procedure generates\n+   --  a check that the specified address has an alignment consistent with\n+   --  the alignment of the object, raising PE if this is not the case. The\n+   --  resulting check (if one is generated) is inserted before node N.\n+\n    procedure Apply_Array_Size_Check (N : Node_Id; Typ : Entity_Id);\n    --  N is the node for an object declaration that declares an object of\n    --  array type Typ. This routine generates, if necessary, a check that"}, {"sha": "bbc8458eff53890c44c5c736d46ad2183be1ebb1", "filename": "gcc/ada/exp_ch13.adb", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fexp_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fexp_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch13.adb?ref=de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.76 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -27,6 +27,7 @@\n ------------------------------------------------------------------------------\n \n with Atree;    use Atree;\n+with Checks;   use Checks;\n with Einfo;    use Einfo;\n with Exp_Ch3;  use Exp_Ch3;\n with Exp_Ch6;  use Exp_Ch6;\n@@ -236,10 +237,20 @@ package body Exp_Ch13 is\n       Decl           : Node_Id;\n \n    begin\n-      if not Is_Type (E) and then not Is_Subprogram (E) then\n+      --  For object, with address clause, check alignment is OK\n+\n+      if Is_Object (E) then\n+         Apply_Alignment_Check (E, N);\n+\n+      --  Only other items requiring any front end action are\n+      --  types and subprograms.\n+\n+      elsif not Is_Type (E) and then not Is_Subprogram (E) then\n          return;\n       end if;\n \n+      --  Here E is a type or a subprogram\n+\n       E_Scope := Scope (E);\n \n       --  If we are freezing entities defined in protected types, they\n@@ -304,11 +315,6 @@ package body Exp_Ch13 is\n \n       elsif Is_Subprogram (E) then\n          Freeze_Subprogram (N);\n-\n-      --  No other entities require any front end freeze actions\n-\n-      else\n-         null;\n       end if;\n \n       --  Analyze actions generated by freezing. The init_proc contains"}, {"sha": "0670362fa9eaecc8fc177922a9a4e945c7d0f1fa", "filename": "gcc/ada/exp_ch8.adb", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fexp_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fexp_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch8.adb?ref=de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "patch": "@@ -59,7 +59,8 @@ package body Exp_Ch8 is\n    --  of the renamed object. The cases in which this is not true are when\n    --  this address is not computable, since it involves extraction of a\n    --  packed array element, or of a record component to which a component\n-   --  clause applies (that can specify an arbitrary bit boundary).\n+   --  clause applies (that can specify an arbitrary bit boundary), or where\n+   --  the enclosing record itself has a non-standard representation.\n \n    --  In these two cases, we pre-evaluate the renaming expression, by\n    --  extracting and freezing the values of any subscripts, and then we\n@@ -211,18 +212,25 @@ package body Exp_Ch8 is\n             end if;\n \n          elsif Nkind (Nam) = N_Selected_Component then\n-            if Present (Component_Clause (Entity (Selector_Name (Nam)))) then\n-               return True;\n+            declare\n+               Rec_Type : Entity_Id := Etype (Prefix (Nam));\n \n-            elsif Ekind (Entity (Selector_Name (Nam))) = E_Discriminant\n-              and then Is_Record_Type (Etype (Prefix (Nam)))\n-              and then not Is_Concurrent_Record_Type (Etype (Prefix (Nam)))\n-            then\n-               return True;\n+            begin\n+               if Present (Component_Clause (Entity (Selector_Name (Nam))))\n+                 or else Has_Non_Standard_Rep (Rec_Type)\n+               then\n+                  return True;\n \n-            else\n-               return Evaluation_Required (Prefix (Nam));\n-            end if;\n+               elsif Ekind (Entity (Selector_Name (Nam))) = E_Discriminant\n+                 and then Is_Record_Type (Rec_Type)\n+                 and then not Is_Concurrent_Record_Type (Rec_Type)\n+               then\n+                  return True;\n+\n+               else\n+                  return Evaluation_Required (Prefix (Nam));\n+               end if;\n+            end;\n \n          else\n             return False;"}, {"sha": "4bbaeb8dc703a5ad4936fb46126b0e05e960e69f", "filename": "gcc/ada/exp_util.ads", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fexp_util.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fexp_util.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.ads?ref=de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.112 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -372,15 +372,6 @@ package Exp_Util is\n    --  routine is to help avoid generating troublesome temporaries that\n    --  intefere with the stack checking mechanism.\n \n-   function Must_Be_Aligned (Obj : Node_Id) return Boolean;\n-   --  Given an object reference, determines whether or not the object\n-   --  is required to be aligned according to its type'alignment value.\n-   --  Normally, objects are required to be aligned, and the result will\n-   --  be True. The situation in which this is not the case is if the\n-   --  object reference involves a component of a packed array, where\n-   --  the type of the component is not required to have strict alignment.\n-   --  In this case, false will be returned.\n-\n    procedure Remove_Side_Effects\n      (Exp          : Node_Id;\n       Name_Req     : Boolean := False;"}, {"sha": "b6205e2628a6448f7b1195b9416ba37e1eac612e", "filename": "gcc/ada/freeze.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Ffreeze.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Ffreeze.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.ads?ref=de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.1 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2000, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -205,6 +205,11 @@ package Freeze is\n    --  so need to be similarly treated. Freeze_Expression takes care of\n    --  determining the proper insertion point for generated freeze actions.\n \n+   procedure Freeze_Fixed_Point_Type (Typ : Entity_Id);\n+   --  Freeze fixed point type. For fixed-point types, we have to defer\n+   --  setting the size and bounds till the freeze point, since they are\n+   --  potentially affected by the presence of size and small clauses.\n+\n    procedure Freeze_Itype (T : Entity_Id; N : Node_Id);\n    --  This routine is called when an Itype is created and must be frozen\n    --  immediately at the point of creation (for the sake of the expansion"}, {"sha": "38fd69593b11f2245e4bf0e8faab284604c80462", "filename": "gcc/ada/g-dirope.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fg-dirope.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fg-dirope.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.adb?ref=de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "patch": "@@ -371,18 +371,19 @@ package body GNAT.Directory_Operations is\n                E := E + 1;\n \n                Var_Name : loop\n-                  exit Var_Name when E = Path'Last;\n+                  exit Var_Name when E > Path'Last;\n \n                   if Characters.Handling.Is_Letter (Path (E))\n                     or else Characters.Handling.Is_Digit (Path (E))\n                   then\n                      E := E + 1;\n                   else\n-                     E := E - 1;\n                      exit Var_Name;\n                   end if;\n                end loop Var_Name;\n \n+               E := E - 1;\n+\n                declare\n                   Env : OS_Lib.String_Access := OS_Lib.Getenv (Path (K .. E));\n "}, {"sha": "6e0e988d0909d11a271f6d9501e40f13ca5bf0dd", "filename": "gcc/ada/g-dirope.ads", "status": "modified", "additions": 9, "deletions": 57, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fg-dirope.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fg-dirope.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.ads?ref=de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.12 $\n+--                            $Revision$\n --                                                                          --\n --            Copyright (C) 1998-2001 Ada Core Technologies, Inc.           --\n --                                                                          --\n@@ -38,6 +38,10 @@\n --  can be treated as a file, using open and close routines, and a scanning\n --  routine is provided for iterating through the entries in a directory.\n \n+--  See also child package GNAT.Directory_Operations.Iteration\n+\n+with Ada.Strings.Maps;\n+\n package GNAT.Directory_Operations is\n \n    subtype Dir_Name_Str is String;\n@@ -187,62 +191,6 @@ package GNAT.Directory_Operations is\n    --  returned in target-OS form. Raises Directory_Error if Dir has not\n    --  be opened (Dir = Null_Dir).\n \n-   generic\n-      with procedure Action\n-        (Item  :        String;\n-         Index :        Positive;\n-         Quit  : in out Boolean);\n-   procedure Wildcard_Iterator (Path : Path_Name);\n-   --  Calls Action for each path matching Path. Path can include wildcards '*'\n-   --  and '?' and [...]. The rules are:\n-   --\n-   --     *       can be replaced by any sequence of characters\n-   --     ?       can be replaced by a single character\n-   --     [a-z]   match one character in the range 'a' through 'z'\n-   --     [abc]   match either character 'a', 'b' or 'c'\n-   --\n-   --  Item is the filename that has been matched. Index is set to one for the\n-   --  first call and is incremented by one at each call. The iterator's\n-   --  termination can be controlled by setting Quit to True. It is by default\n-   --  set to False.\n-   --\n-   --  For example, if we have the following directory structure:\n-   --     /boo/\n-   --        foo.ads\n-   --     /sed/\n-   --        foo.ads\n-   --        file/\n-   --          foo.ads\n-   --     /sid/\n-   --        foo.ads\n-   --        file/\n-   --          foo.ads\n-   --     /life/\n-   --\n-   --  A call with expression \"/s*/file/*\" will call Action for the following\n-   --  items:\n-   --     /sed/file/foo.ads\n-   --     /sid/file/foo.ads\n-\n-   generic\n-      with procedure Action\n-        (Item  :        String;\n-         Index :        Positive;\n-         Quit  : in out Boolean);\n-   procedure Find\n-     (Root_Directory : Dir_Name_Str;\n-      File_Pattern   : String);\n-   --  Recursively searches the directory structure rooted at Root_Directory.\n-   --  This provides functionality similar to the UNIX 'find' command.\n-   --  Action will be called for every item matching the regular expression\n-   --  File_Pattern (see GNAT.Regexp). Item is the full pathname to the file\n-   --  starting with Root_Directory that has been matched. Index is set to one\n-   --  for the first call and is incremented by one at each call. The iterator\n-   --  will pass in the value False on each call to Action. The iterator will\n-   --  terminate after passing the last matched path to Action or after\n-   --  returning from a call to Action which sets Quit to True.\n-   --  Raises GNAT.Regexp.Error_In_Regexp if File_Pattern is ill formed.\n-\n    function Read_Is_Thread_Safe return Boolean;\n    --  Indicates if procedure Read is thread safe. On systems where the\n    --  target system supports this functionality, Read is thread safe,\n@@ -260,4 +208,8 @@ private\n \n    pragma Import (C, Dir_Separator, \"__gnat_dir_separator\");\n \n+   Dir_Seps : constant Ada.Strings.Maps.Character_Set :=\n+                Ada.Strings.Maps.To_Set (\"/\\\");\n+   --  UNIX and DOS style directory separators.\n+\n end GNAT.Directory_Operations;"}, {"sha": "5a5e39b110b54fe329d146747ab609fc6e75316c", "filename": "gcc/ada/g-regexp.adb", "status": "modified", "additions": 0, "deletions": 103, "changes": 103, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fg-regexp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fg-regexp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regexp.adb?ref=de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "patch": "@@ -32,7 +32,6 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with System.IO;\n with Unchecked_Deallocation;\n with Ada.Exceptions;\n with GNAT.Case_Util;\n@@ -73,10 +72,6 @@ package body GNAT.Regexp is\n    end record;\n    --  Deterministic finite-state machine\n \n-   Debug : constant Boolean := False;\n-   --  When True, the primary and secondary tables will be printed.\n-   --  Gnat does not generate any code if this variable is False;\n-\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n@@ -188,12 +183,6 @@ package body GNAT.Regexp is\n       pragma No_Return (Raise_Exception);\n       --  Raise an exception, indicating an error at character Index in S.\n \n-      procedure Print_Table\n-        (Table      : Regexp_Array;\n-         Num_States : State_Index;\n-         Is_Primary : Boolean := True);\n-      --  Print a table for debugging purposes\n-\n       --------------------\n       -- Create_Mapping --\n       --------------------\n@@ -1225,85 +1214,10 @@ package body GNAT.Regexp is\n                end loop;\n             end loop;\n \n-            if Debug then\n-               System.IO.New_Line;\n-               System.IO.Put_Line (\"Secondary table : \");\n-               Print_Table (R.States, Nb_State, False);\n-            end if;\n-\n             return (Ada.Finalization.Controlled with R => R);\n          end;\n       end Create_Secondary_Table;\n \n-      -----------------\n-      -- Print_Table --\n-      -----------------\n-\n-      procedure Print_Table\n-        (Table      : Regexp_Array;\n-         Num_States : State_Index;\n-         Is_Primary : Boolean := True)\n-      is\n-         function Reverse_Mapping (N : Column_Index) return Character;\n-         --  Return the character corresponding to a column in the mapping\n-\n-         ---------------------\n-         -- Reverse_Mapping --\n-         ---------------------\n-\n-         function Reverse_Mapping (N : Column_Index) return Character is\n-         begin\n-            for Column in Map'Range loop\n-               if Map (Column) = N then\n-                  return Column;\n-               end if;\n-            end loop;\n-\n-            return ' ';\n-         end Reverse_Mapping;\n-\n-      --  Start of processing for Print_Table\n-\n-      begin\n-         --  Print the header line\n-\n-         System.IO.Put (\"   [*]  \");\n-\n-         for Column in 1 .. Alphabet_Size  loop\n-            System.IO.Put\n-              (String'(1 .. 1 => Reverse_Mapping (Column)) & \"   \");\n-         end loop;\n-\n-         if Is_Primary then\n-            System.IO.Put (\"closure....\");\n-         end if;\n-\n-         System.IO.New_Line;\n-\n-         --  Print every line\n-\n-         for State in 1 .. Num_States loop\n-            System.IO.Put (State'Img);\n-\n-            for K in 1 .. 3 - State'Img'Length loop\n-               System.IO.Put (\" \");\n-            end loop;\n-\n-            for K in 0 .. Alphabet_Size loop\n-               System.IO.Put (Table (State, K)'Img & \"  \");\n-            end loop;\n-\n-            for K in Alphabet_Size + 1 .. Table'Last (2) loop\n-               if Table (State, K) /= 0 then\n-                  System.IO.Put (Table (State, K)'Img & \",\");\n-               end if;\n-            end loop;\n-\n-            System.IO.New_Line;\n-         end loop;\n-\n-      end Print_Table;\n-\n       ---------------------\n       -- Raise_Exception --\n       ---------------------\n@@ -1345,12 +1259,6 @@ package body GNAT.Regexp is\n               (Table, Num_States, Start_State, End_State);\n          end if;\n \n-         if Debug then\n-            Print_Table (Table.all, Num_States);\n-            System.IO.Put_Line (\"Start_State : \" & Start_State'Img);\n-            System.IO.Put_Line (\"End_State   : \" & End_State'Img);\n-         end if;\n-\n          --  Creates the secondary table\n \n          R := Create_Secondary_Table\n@@ -1452,17 +1360,6 @@ package body GNAT.Regexp is\n                                         Table'First (2) .. New_Columns);\n          New_Table.all := (others => (others => 0));\n \n-         if Debug then\n-            System.IO.Put_Line (\"Reallocating table: Lines from \"\n-                                & State_Index'Image (Table'Last (1))\n-                                & \" to \"\n-                                & State_Index'Image (New_Lines));\n-            System.IO.Put_Line (\"   and columns from \"\n-                                & Column_Index'Image (Table'Last (2))\n-                                & \" to \"\n-                                & Column_Index'Image (New_Columns));\n-         end if;\n-\n          for J in Table'Range (1) loop\n             for K in Table'Range (2) loop\n                New_Table (J, K) := Table (J, K);"}, {"sha": "b7242d2549de12811d9b7623d0f0faeed1410e72", "filename": "gcc/ada/impunit.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fimpunit.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fimpunit.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fimpunit.adb?ref=de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "patch": "@@ -195,6 +195,7 @@ package body Impunit is\n      \"g-curexc\",    -- GNAT.Current_Exception\n      \"g-debpoo\",    -- GNAT.Debug_Pools\n      \"g-debuti\",    -- GNAT.Debug_Utilities\n+     \"g-diopit\",    -- GNAT.Directory_Operations.Iteration\n      \"g-dirope\",    -- GNAT.Directory_Operations\n      \"g-dyntab\",    -- GNAT.Dynamic_Tables\n      \"g-exctra\",    -- GNAT.Exception_Traces"}, {"sha": "84b4291192f97658d0ab0528190db91eda7ee8ee", "filename": "gcc/ada/mdllfile.ads", "status": "modified", "additions": 14, "deletions": 15, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fmdllfile.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fmdllfile.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmdllfile.ads?ref=de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.1 $                              --\n+--                            $Revision$                              --\n --                                                                          --\n --          Copyright (C) 1992-1999 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -26,27 +26,26 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Simple services used by GNATDLL to deal with Filename extension.\n+--  Simple services used by GNATDLL to deal with Filename extension\n \n package MDLL.Files is\n \n    No_Ext : constant String := \"\";\n+   --  Used to mark the absence of an extension\n \n-   function Get_Ext (Filename : in String)\n-                     return String;\n-   --  return filename's extension.\n+   function Get_Ext (Filename : String) return String;\n+   --  Return extension of Filename\n \n-   function Is_Ali (Filename : in String)\n-                    return Boolean;\n-   --  test if Filename is an Ada library file (.ali).\n+   function Is_Ali (Filename : String) return Boolean;\n+   --  Test if Filename is an Ada library file (.ali).\n \n-   function Is_Obj (Filename : in String)\n-                    return Boolean;\n-   --  test if Filename is an object file (.o or .obj).\n+   function Is_Obj (Filename : String) return Boolean;\n+   --  Test if Filename is an object file (.o or .obj)\n \n-   function Ext_To (Filename : in String;\n-                    New_Ext  : in String := No_Ext)\n-                    return String;\n-   --  return Filename with the extension change to New_Ext.\n+   function Ext_To\n+     (Filename : String;\n+      New_Ext  : String := No_Ext)\n+      return     String;\n+   --  Return Filename with the extension change to New_Ext\n \n end MDLL.Files;"}, {"sha": "8f9dec9e200a2d9a856d5b5c23cc4414927ad0bf", "filename": "gcc/ada/mlib-fil.ads", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fmlib-fil.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fmlib-fil.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmlib-fil.ads?ref=de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.1 $\n+--                            $Revision$\n --                                                                          --\n --              Copyright (C) 2001, Ada Core Technologies, Inc.             --\n --                                                                          --\n@@ -36,16 +36,16 @@ package MLib.Fil is\n       return     String;\n    --  Return Filename with the extension change to New_Ext.\n \n-   function Get_Ext (Filename : in String) return String;\n+   function Get_Ext (Filename : String) return String;\n    --  Return extension of filename.\n \n    function Is_Archive (Filename : String) return Boolean;\n    --  Test if filename is an archive\n \n-   function Is_C (Filename : in String) return Boolean;\n+   function Is_C (Filename : String) return Boolean;\n    --  Test if Filename is a C file\n \n-   function Is_Obj (Filename : in String) return Boolean;\n+   function Is_Obj (Filename : String) return Boolean;\n    --  Test if Filename is an object file\n \n end MLib.Fil;"}, {"sha": "6e85c20a1a209f3a615c2cbc77e8a88125b8facc", "filename": "gcc/ada/par-ch12.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fpar-ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fpar-ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch12.adb?ref=de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "patch": "@@ -452,16 +452,17 @@ package body Ch12 is\n       if Def_Node /= Error then\n          Set_Formal_Type_Definition (Decl_Node, Def_Node);\n          TF_Semicolon;\n+\n       else\n          Decl_Node := Error;\n \n+         --  If we have semicolon, skip it to avoid cascaded errors\n+\n          if Token = Tok_Semicolon then\n-            --   Avoid further cascaded errors.\n             Scan;\n          end if;\n       end if;\n \n-\n       return Decl_Node;\n    end P_Formal_Type_Declaration;\n "}, {"sha": "78afb8fc4a26610a9772a7a43ecc0d04460c7819", "filename": "gcc/ada/prj-dect.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fprj-dect.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fprj-dect.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-dect.ads?ref=de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "patch": "@@ -8,7 +8,7 @@\n --                                                                          --\n --                            $Revision$\n --                                                                          --\n---          Copyright (C) 2000-2001 Free Software Foundation, Inc.          --\n+--             Copyright (C) 2001 Free Software Foundation, Inc.            --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --"}, {"sha": "dff290ce85a7212d55f02f7715c8e556b4f0a08f", "filename": "gcc/ada/s-arit64.adb", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fs-arit64.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fs-arit64.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-arit64.adb?ref=de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.16 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -325,14 +325,16 @@ package body System.Arith_64 is\n             T2 := Xhi * Ylo;\n          end if;\n \n-      else\n-         if Yhi /= 0 then\n-            T2 := Xlo * Yhi;\n-         else\n-            return X * Y;\n-         end if;\n+      elsif Yhi /= 0 then\n+         T2 := Xlo * Yhi;\n+\n+      else -- Yhi = Xhi = 0\n+         T2 := 0;\n       end if;\n \n+      --  Here we have T2 set to the contribution to the upper half\n+      --  of the result from the upper halves of the input values.\n+\n       T1 := Xlo * Ylo;\n       T2 := T2 + Hi (T1);\n "}, {"sha": "2e70d9d744f05526076229fd7b23809a281650e1", "filename": "gcc/ada/s-fatgen.ads", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fs-fatgen.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fs-fatgen.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fatgen.ads?ref=de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.9 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -89,9 +89,12 @@ pragma Pure (Fat_Gen);\n \n    function Unbiased_Rounding (X : T)                       return T;\n \n-   function Valid             (X : access T)                return Boolean;\n-   --  The argument must be passed by reference here, as T may be\n-   --  an abnormal value that can be passed in a floating point register.\n+   function Valid (X : access T) return Boolean;\n+   --  This function checks if the object of type T referenced by X\n+   --  is valid, and returns True/False accordingly. The parameter is\n+   --  passed by reference (access) here, as the object of type T may\n+   --  be an abnormal value that cannot be passed in a floating-point\n+   --  register, and the whole point of 'Valid is to prevent exceptions.\n \n private\n    pragma Inline (Machine);"}, {"sha": "189cfa14c001a44a314a29269954c68249f26c77", "filename": "gcc/ada/s-stalib.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fs-stalib.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fs-stalib.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-stalib.adb?ref=de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.17 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1995-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -46,14 +46,17 @@ pragma Polling (Off);\n --  elaboration circularities with Ada.Exceptions if polling is on.\n \n with System.Soft_Links;\n---  Referenced directly from generated code\n---  Also referenced from exception handling routines.\n+--  Referenced directly from generated code using external symbols so it\n+--  must always be present in a build, even if no unit has a direct with\n+--  of this unit. Also referenced from exception handling routines.\n --  This is needed for programs that don't use exceptions explicitely but\n --  direct calls to Ada.Exceptions are generated by gigi (for example,\n --  by calling __gnat_raise_constraint_error directly).\n \n with System.Memory;\n---  Referenced directly from generated code\n+--  Referenced directly from generated code using external symbols, so it\n+--  must always be present in a build, even if no unit has a direct with\n+--  of this unit.\n \n package body System.Standard_Library is\n "}, {"sha": "bdb2c8b844994a021aca2d6c6cfbb250513d084f", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=de76a39c6e0550ed9cfc87a5e9d112f7f8dbefd7", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.511 $\n+--                            $Revision$\n --                                                                          --\n --          Copyright (C) 1992-2001, Free Software Foundation, Inc.         --\n --                                                                          --\n@@ -2691,6 +2691,18 @@ package body Sem_Ch4 is\n \n             Check_Misspelled_Selector (Entity_List, Sel);\n \n+         elsif Is_Generic_Type (Prefix_Type)\n+           and then Ekind (Prefix_Type) = E_Record_Type_With_Private\n+           and then Is_Record_Type (Etype (Prefix_Type))\n+         then\n+            --  If this is a derived formal type, the parent may have a\n+            --  different visibility at this point. Try for an inherited\n+            --  component before reporting an error.\n+\n+            Set_Etype (Prefix (N), Etype (Prefix_Type));\n+            Analyze_Selected_Component (N);\n+            return;\n+\n          else\n             if Ekind (Prefix_Type) = E_Record_Subtype then\n "}]}