{"sha": "6ea7f14af8bb3c974c544c6c905a087452b79470", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmVhN2YxNGFmOGJiM2M5NzRjNTQ0YzZjOTA1YTA4NzQ1MmI3OTQ3MA==", "commit": {"author": {"name": "Kai Tietz", "email": "kai.tietz@onevision.com", "date": "2010-10-10T19:25:09Z"}, "committer": {"name": "Kai Tietz", "email": "ktietz@gcc.gnu.org", "date": "2010-10-10T19:25:09Z"}, "message": "2010-10.10  Kai Tietz  <kai.tietz@onevision.com>\n\n\t* g++.dg/ext/dllexport-MI1.C: Enable for x86_64 mingw\n\tand adjust -export symbol scanning.\n\t* g++.dg/ext/dllexport1.C: Likewise.\n\t* g++.dg/ext/dllexport3.C: Likewise.\n\t* gcc.dg/dll-3.c: Likewise.\n\t* gcc.dg/dll-4.c: Likewise.\n\t* gcc.dg/dll-5.c: Likewise.\n\nFrom-SVN: r165261", "tree": {"sha": "bff49aba5cc8f66a494d0f7dab4a6679c5541b85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bff49aba5cc8f66a494d0f7dab4a6679c5541b85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ea7f14af8bb3c974c544c6c905a087452b79470", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ea7f14af8bb3c974c544c6c905a087452b79470", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ea7f14af8bb3c974c544c6c905a087452b79470", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ea7f14af8bb3c974c544c6c905a087452b79470/comments", "author": null, "committer": null, "parents": [{"sha": "e14d28a7a56bd43f9f8bc4e3b35d6674ea2418ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e14d28a7a56bd43f9f8bc4e3b35d6674ea2418ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e14d28a7a56bd43f9f8bc4e3b35d6674ea2418ff"}], "stats": {"total": 50, "additions": 30, "deletions": 20}, "files": [{"sha": "4efcbde08688fc7d609b567888cc37cd204f7f03", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea7f14af8bb3c974c544c6c905a087452b79470/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea7f14af8bb3c974c544c6c905a087452b79470/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6ea7f14af8bb3c974c544c6c905a087452b79470", "patch": "@@ -1,3 +1,13 @@\n+2010-10.10  Kai Tietz  <kai.tietz@onevision.com>\n+\n+\t* g++.dg/ext/dllexport-MI1.C: Enable for x86_64 mingw\n+\tand adjust -export symbol scanning.\n+\t* g++.dg/ext/dllexport1.C: Likewise.\n+\t* g++.dg/ext/dllexport3.C: Likewise.\n+\t* gcc.dg/dll-3.c: Likewise.\n+\t* gcc.dg/dll-4.c: Likewise.\n+\t* gcc.dg/dll-5.c: Likewise.\n+\n 2010-10-10  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc.dg/tree-prof/ic-misattribution-1a.c: Cleanup tree_profile_ipa"}, {"sha": "c5c27dda3d9de8f19928e4ad1d588c5cd42ce42a", "filename": "gcc/testsuite/g++.dg/ext/dllexport-MI1.C", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea7f14af8bb3c974c544c6c905a087452b79470/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllexport-MI1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea7f14af8bb3c974c544c6c905a087452b79470/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllexport-MI1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllexport-MI1.C?ref=6ea7f14af8bb3c974c544c6c905a087452b79470", "patch": "@@ -1,4 +1,4 @@\n-// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }\n+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw* x86_64-*-mingw*} }\n //  Test that non-virtual MI thunks are exported.\n \n \n@@ -27,25 +27,25 @@ DLL_IMPEXP MI1 dllMI1Copy =  dllMI1;\n \n // Scan for export of some methods that are undefined in dllimportMI1.C,\n \n-// { dg-final { scan-assembler \"-export:_ZNK2D12vfEv\" } }\n-// { dg-final { scan-assembler \"-export:_ZNK2D22vfEv\" } }\n-// { dg-final { scan-assembler \"-export:_ZNK3MI12vfEv\" } }\n+// { dg-final { scan-assembler \"-export:\\[\\\\\\\\\\\"\\]*_ZNK2D12vfEv\" } }\n+// { dg-final { scan-assembler \"-export:\\[\\\\\\\\\\\"\\]*_ZNK2D22vfEv\" } }\n+// { dg-final { scan-assembler \"-export:\\[\\\\\\\\\\\"\\]*_ZNK3MI12vfEv\" } }\n \n // and MI thunks,\n \n-// { dg-final { scan-assembler \"-export:_ZThn4_NK3MI12vfEv\" } }\n-// { dg-final { scan-assembler \"-export:_ZTv0_n12_NK2D12vfEv\" } }\n+// { dg-final { scan-assembler \"-export:\\[\\\\\\\\\\\"\\]*_ZThn4_NK3MI12vfEv\" } }\n+// { dg-final { scan-assembler \"-export:\\[\\\\\\\\\\\"\\]*_ZTv0_n12_NK2D12vfEv\" } }\n \n // and a vtable data variable.\n \n-// { dg-final { scan-assembler \"-export:_ZTV2D1,data\" } }\n+// { dg-final { scan-assembler \"-export:\\[\\\\\\\\\\\"\\]*_ZTV2D1\\[\\\\\\\"\\]*,data\" } }\n \n // an explicit copy ctor\n-// { dg-final { scan-assembler \"-export:_ZN2D2C2ERKS_\" } }\n+// { dg-final { scan-assembler \"-export:\\[\\\\\\\\\\\"\\]*_ZN2D2C2ERKS_\" } }\n \n // but not implicit copy ctor generated by compiler\n // nor implicit dtor\n \n-// { dg-final { scan-assembler-not \"-export:_ZN2D1C2ERKS_\" } }\n-// { dg-final { scan-assembler-not \"-export:_ZN2D1D2Ev\" } }\n+// { dg-final { scan-assembler-not \"-export:\\[\\\\\\\\\\\"\\]*_ZN2D1C2ERKS_\" } }\n+// { dg-final { scan-assembler-not \"-export:\\[\\\\\\\\\\\"\\]*_ZN2D1D2Ev\" } }\n "}, {"sha": "3683d08b65c6024e9d5cc7f3a23ed68b7e1d947c", "filename": "gcc/testsuite/g++.dg/ext/dllexport1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea7f14af8bb3c974c544c6c905a087452b79470/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllexport1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea7f14af8bb3c974c544c6c905a087452b79470/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllexport1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllexport1.C?ref=6ea7f14af8bb3c974c544c6c905a087452b79470", "patch": "@@ -1,5 +1,5 @@\n // Test that inline functions are exported with -fkeep-inline-functions.\n-// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw*} }\n+// { dg-do compile { target i?86-*-cygwin* i?86-*-mingw* x86_64-*-mingw*} }\n // { dg-options -fkeep-inline-functions } \n \n __attribute__((dllexport)) inline int foo (int a) { return a;}\n@@ -19,5 +19,5 @@ int Bar::outline_bar(int a) {return foo (a);}\n Bar abar;\n \n // { dg-final { scan-assembler \"\\.section\\[ \\t\\]*.drectve\\n.*_ZN3Bar11outline_barEi\" } }\n-// { dg-final { scan-assembler \" -export:_ZN3Bar10inline_barEi\" } }\n-// { dg-final { scan-assembler \" -export:_Z3fooi\" } }\n+// { dg-final { scan-assembler \" -export:\\[\\\\\\\\\\\"\\]*_ZN3Bar10inline_barEi\" } }\n+// { dg-final { scan-assembler \" -export:\\[\\\\\\\\\\\"\\]*_Z3fooi\" } }"}, {"sha": "206dfc92c94dc88d5089ade8eca894647019b4ce", "filename": "gcc/testsuite/g++.dg/ext/dllexport3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea7f14af8bb3c974c544c6c905a087452b79470/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllexport3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea7f14af8bb3c974c544c6c905a087452b79470/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllexport3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fdllexport3.C?ref=6ea7f14af8bb3c974c544c6c905a087452b79470", "patch": "@@ -1,6 +1,6 @@\n // PR c++/42870\n // { dg-do compile { target i?86-*-cygwin *-*-mingw* } }\n-// { dg-final { scan-assembler \"-export:_ZN2SaD1Ev\" } }\n+// { dg-final { scan-assembler \"-export:\\[\\\\\\\\\\\"\\]*_ZN2SaD1Ev\" } }\n \n #define ATTRIBUTE __attribute__ ((dllexport))\n class ATTRIBUTE Sa {"}, {"sha": "f68758ccaa02092183021360724fdcf67020c994", "filename": "gcc/testsuite/gcc.dg/dll-3.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea7f14af8bb3c974c544c6c905a087452b79470/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea7f14af8bb3c974c544c6c905a087452b79470/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-3.c?ref=6ea7f14af8bb3c974c544c6c905a087452b79470", "patch": "@@ -2,7 +2,7 @@\n \n /* { dg-do compile { target arm*-*-pe* } } */\n /* { dg-do compile { target i?86-pc-cygwin } } */\n-/* { dg-do compile { target i?86-pc-mingw* } } */\n+/* { dg-do compile { target i?86-*-mingw* x86_64-*-mingw*} } */\n \n __declspec (dllimport) int foo1 ();\n __declspec (dllexport) int foo1 ();\t/* { dg-warning \"previous dllimport ignored\" } */\n@@ -13,6 +13,6 @@ __declspec (dllimport) int foo2 ();\t/* { dg-warning \"dllimport ignored\" } */\n __declspec (dllexport) int foo1 () { return foo2 (); }\n __declspec (dllexport) int foo2 () { return foo1 (); }\n \n-/* { dg-final { scan-assembler \"\\.section\\[ \\t\\]*.drectve\\n.*-export:foo2\" } } */\n-/* { dg-final { scan-assembler \"-export:foo1\" } } */\n+/* { dg-final { scan-assembler \"\\.section\\[ \\t\\]*.drectve\\n.*-export:\\[\\\\\\\\\\\"\\]*foo2\" } } */\n+/* { dg-final { scan-assembler \"-export:\\[\\\\\\\\\\\"\\]*foo1\" } } */\n /* { dg-final { scan-assembler-not \"(__imp_foo1|_imp__foo1|__imp_foo2|_imp__foo2)\" } } */"}, {"sha": "e2d701b47b83f4d6ebe91664b0b5eec4e88c9c86", "filename": "gcc/testsuite/gcc.dg/dll-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea7f14af8bb3c974c544c6c905a087452b79470/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea7f14af8bb3c974c544c6c905a087452b79470/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-4.c?ref=6ea7f14af8bb3c974c544c6c905a087452b79470", "patch": "@@ -1,6 +1,6 @@\n /* { dg-do compile { target arm*-*-pe* } } */\n /* { dg-do compile { target i?86-pc-cygwin } } */\n-/* { dg-do compile { target i?86-pc-mingw* } } */\n+/* { dg-do compile { target i?86-*-mingw* x86_64-*-mingw* } } */\n \n __declspec (dllimport) int foo1;\n int foo1;\t/* { dg-warning \"redeclared without dllimport\" } */"}, {"sha": "d28603b56ee0d5330989f314a7037b92d89f29b7", "filename": "gcc/testsuite/gcc.dg/dll-5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ea7f14af8bb3c974c544c6c905a087452b79470/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ea7f14af8bb3c974c544c6c905a087452b79470/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdll-5.c?ref=6ea7f14af8bb3c974c544c6c905a087452b79470", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target i?86-pc-cygwin } } */\n-/* { dg-do compile { target i?86-pc-mingw* } } */\n+/* { dg-do compile { target i?86-*-mingw* x86_64-*-mingw* } } */\n /* { dg-do compile { target arm*-*-pe* } } */\n \n /* { dg-options -mnop-fun-dllimport } */\n@@ -19,4 +19,4 @@ __declspec (dllexport) void dllexp ()\n \n /* { dg-final { scan-assembler-not \"(__imp_dllimpfn|_imp__dllimpfn)\" } } */\n /* { dg-final { scan-assembler \"(__imp_dllimpvar|_imp__dllimpvar)\" } } */\n-/* { dg-final { scan-assembler \"\\.section\\[ \\t\\]*.drectve\\n\\.*-export:dllexp\" } } */\n+/* { dg-final { scan-assembler \"\\.section\\[ \\t\\]*.drectve\\n\\.*-export:\\[\\\\\\\\\\\"\\]*dllexp\" } } */"}]}