{"sha": "7c514720e453223a2a57838a2f90e9692ba2b1df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2M1MTQ3MjBlNDUzMjIzYTJhNTc4MzhhMmY5MGU5NjkyYmEyYjFkZg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-01-15T02:16:11Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-01-15T02:16:11Z"}, "message": "cselib.c (hash_table): Rename to cselib_hash_table.\n\n\t* cselib.c (hash_table): Rename to cselib_hash_table.\n\t(cselib_clear_table, discard_useless_values,\n\tremove_useless_values, cselib_lookup_mem, cselib_lookup,\n\tcselib_init, cselib_finish): Adjust uses of hash_table.\n\nFrom-SVN: r109716", "tree": {"sha": "b32d4414062351ef6a85cab86bacdfa0aed0a2fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b32d4414062351ef6a85cab86bacdfa0aed0a2fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7c514720e453223a2a57838a2f90e9692ba2b1df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c514720e453223a2a57838a2f90e9692ba2b1df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c514720e453223a2a57838a2f90e9692ba2b1df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c514720e453223a2a57838a2f90e9692ba2b1df/comments", "author": null, "committer": null, "parents": [{"sha": "9e2813200c82c9fef227cef9a1da0c2f89d1d837", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e2813200c82c9fef227cef9a1da0c2f89d1d837", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e2813200c82c9fef227cef9a1da0c2f89d1d837"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "dc23fabcc299bf70495117e7dd5754b3165ce3cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c514720e453223a2a57838a2f90e9692ba2b1df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c514720e453223a2a57838a2f90e9692ba2b1df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7c514720e453223a2a57838a2f90e9692ba2b1df", "patch": "@@ -1,3 +1,10 @@\n+2006-01-15  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* cselib.c (hash_table): Rename to cselib_hash_table.\n+\t(cselib_clear_table, discard_useless_values,\n+\tremove_useless_values, cselib_lookup_mem, cselib_lookup,\n+\tcselib_init, cselib_finish): Adjust uses of hash_table.\n+\n 2006-01-14  Kazu Hirata  <kazu@codesourcery.com>\n \n \tPR tree-optimization/25485"}, {"sha": "a988e86e63ea3718cf32c94447278f26a0e5272a", "filename": "gcc/cselib.c", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7c514720e453223a2a57838a2f90e9692ba2b1df/gcc%2Fcselib.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7c514720e453223a2a57838a2f90e9692ba2b1df/gcc%2Fcselib.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcselib.c?ref=7c514720e453223a2a57838a2f90e9692ba2b1df", "patch": "@@ -74,7 +74,7 @@ static void cselib_record_sets (rtx);\n      the locations of the entries with the rtx we are looking up.  */\n \n /* A table that enables us to look up elts by their value.  */\n-static htab_t hash_table;\n+static htab_t cselib_hash_table;\n \n /* This is a global so we don't have to pass this through every function.\n    It is used in new_elt_loc_list to set SETTING_INSN.  */\n@@ -212,7 +212,7 @@ cselib_clear_table (void)\n \n   n_used_regs = 0;\n \n-  htab_empty (hash_table);\n+  htab_empty (cselib_hash_table);\n \n   n_useless_values = 0;\n \n@@ -332,7 +332,7 @@ discard_useless_values (void **x, void *info ATTRIBUTE_UNUSED)\n   if (v->locs == 0)\n     {\n       CSELIB_VAL_PTR (v->u.val_rtx) = NULL;\n-      htab_clear_slot (hash_table, x);\n+      htab_clear_slot (cselib_hash_table, x);\n       unchain_one_value (v);\n       n_useless_values--;\n     }\n@@ -352,7 +352,7 @@ remove_useless_values (void)\n   do\n     {\n       values_became_useless = 0;\n-      htab_traverse (hash_table, discard_useless_locs, 0);\n+      htab_traverse (cselib_hash_table, discard_useless_locs, 0);\n     }\n   while (values_became_useless);\n \n@@ -367,7 +367,7 @@ remove_useless_values (void)\n       }\n   *p = &dummy_val;\n \n-  htab_traverse (hash_table, discard_useless_values, 0);\n+  htab_traverse (cselib_hash_table, discard_useless_values, 0);\n \n   gcc_assert (!n_useless_values);\n }\n@@ -803,7 +803,7 @@ cselib_lookup_mem (rtx x, int create)\n \n   mem_elt = new_cselib_val (++next_unknown_value, mode);\n   add_mem_for_addr (addr, mem_elt, x);\n-  slot = htab_find_slot_with_hash (hash_table, wrap_constant (mode, x),\n+  slot = htab_find_slot_with_hash (cselib_hash_table, wrap_constant (mode, x),\n \t\t\t\t   mem_elt->value, INSERT);\n   *slot = mem_elt;\n   return mem_elt;\n@@ -954,7 +954,7 @@ cselib_lookup (rtx x, enum machine_mode mode, int create)\n \t  REG_VALUES (i) = new_elt_list (REG_VALUES (i), NULL);\n \t}\n       REG_VALUES (i)->next = new_elt_list (REG_VALUES (i)->next, e);\n-      slot = htab_find_slot_with_hash (hash_table, x, e->value, INSERT);\n+      slot = htab_find_slot_with_hash (cselib_hash_table, x, e->value, INSERT);\n       *slot = e;\n       return e;\n     }\n@@ -967,7 +967,7 @@ cselib_lookup (rtx x, enum machine_mode mode, int create)\n   if (! hashval)\n     return 0;\n \n-  slot = htab_find_slot_with_hash (hash_table, wrap_constant (mode, x),\n+  slot = htab_find_slot_with_hash (cselib_hash_table, wrap_constant (mode, x),\n \t\t\t\t   hashval, create ? INSERT : NO_INSERT);\n   if (slot == 0)\n     return 0;\n@@ -1476,7 +1476,8 @@ cselib_init (bool record_memory)\n     }\n   used_regs = xmalloc (sizeof (*used_regs) * cselib_nregs);\n   n_used_regs = 0;\n-  hash_table = htab_create (31, get_value_hash, entry_and_rtx_equal_p, NULL);\n+  cselib_hash_table = htab_create (31, get_value_hash,\n+\t\t\t\t   entry_and_rtx_equal_p, NULL);\n   cselib_current_insn_in_libcall = false;\n }\n \n@@ -1490,10 +1491,10 @@ cselib_finish (void)\n   free_alloc_pool (cselib_val_pool);\n   free_alloc_pool (value_pool);\n   cselib_clear_table ();\n-  htab_delete (hash_table);\n+  htab_delete (cselib_hash_table);\n   free (used_regs);\n   used_regs = 0;\n-  hash_table = 0;\n+  cselib_hash_table = 0;\n   n_useless_values = 0;\n   next_unknown_value = 0;\n }"}]}