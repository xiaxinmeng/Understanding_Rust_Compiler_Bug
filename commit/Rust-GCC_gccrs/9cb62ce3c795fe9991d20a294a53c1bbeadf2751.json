{"sha": "9cb62ce3c795fe9991d20a294a53c1bbeadf2751", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWNiNjJjZTNjNzk1ZmU5OTkxZDIwYTI5NGE1M2MxYmJlYWRmMjc1MQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-04T09:23:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-04T09:23:38Z"}, "message": "[multiple changes]\n\n2012-10-04  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_res.adb (Resolve_Set_Membership): Warn on duplicates.\n\n2012-10-04  Emmanuel Briot  <briot@adacore.com>\n\n\t* g-comlin.adb (Getopt): Fix value of Full_Switch returned in case of\n\tinvalid switch.\n\n2012-10-04  Arnaud Charlet  <charlet@adacore.com>\n\n\t* gcc-interface/Make-lang.in: Update dependencies.\n\nFrom-SVN: r192073", "tree": {"sha": "dae17a43135ec23e90fff613b8eb1000002aa753", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dae17a43135ec23e90fff613b8eb1000002aa753"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cb62ce3c795fe9991d20a294a53c1bbeadf2751", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cb62ce3c795fe9991d20a294a53c1bbeadf2751", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cb62ce3c795fe9991d20a294a53c1bbeadf2751", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cb62ce3c795fe9991d20a294a53c1bbeadf2751/comments", "author": null, "committer": null, "parents": [{"sha": "9479ded4471394acb96ecc73c58b90e8825d2380", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9479ded4471394acb96ecc73c58b90e8825d2380", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9479ded4471394acb96ecc73c58b90e8825d2380"}], "stats": {"total": 360, "additions": 229, "deletions": 131}, "files": [{"sha": "8196e94e8ad30ac091dd45a9365b5d1daba4bba0", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cb62ce3c795fe9991d20a294a53c1bbeadf2751/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cb62ce3c795fe9991d20a294a53c1bbeadf2751/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=9cb62ce3c795fe9991d20a294a53c1bbeadf2751", "patch": "@@ -1,3 +1,16 @@\n+2012-10-04  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_res.adb (Resolve_Set_Membership): Warn on duplicates.\n+\n+2012-10-04  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* g-comlin.adb (Getopt): Fix value of Full_Switch returned in case of\n+\tinvalid switch.\n+\n+2012-10-04  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* gcc-interface/Make-lang.in: Update dependencies.\n+\n 2012-10-04  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_eval.adb (Fold_Str, Fold_Uint, Fold_Ureal): Reset static"}, {"sha": "f11846fbb794b399adf9af4c03703c2ac9222171", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 85, "deletions": 42, "changes": 127, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cb62ce3c795fe9991d20a294a53c1bbeadf2751/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cb62ce3c795fe9991d20a294a53c1bbeadf2751/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=9cb62ce3c795fe9991d20a294a53c1bbeadf2751", "patch": "@@ -39,6 +39,10 @@ with GNAT.OS_Lib;               use GNAT.OS_Lib;\n \n package body GNAT.Command_Line is\n \n+   --  General note: this entire body could use much more commenting. There\n+   --  are large sections of uncommented code throughout, and many formal\n+   --  parameters of local subprograms are not documented at all ???\n+\n    package CL renames Ada.Command_Line;\n \n    type Switch_Parameter_Type is\n@@ -56,6 +60,12 @@ package body GNAT.Command_Line is\n       Extra    : Character := ASCII.NUL);\n    pragma Inline (Set_Parameter);\n    --  Set the parameter that will be returned by Parameter below\n+   --\n+   --  Extra is a character that needs to be added when reporting Full_Switch.\n+   --  (it will in general be the switch character, for instance '-').\n+   --  Otherwise, Full_Switch will report 'f' instead of '-f'. In particular,\n+   --  it needs to be set when reporting an invalid switch or handling '*'.\n+   --\n    --  Parameters need to be defined ???\n \n    function Goto_Next_Argument_In_Section (Parser : Opt_Parser) return Boolean;\n@@ -95,9 +105,9 @@ package body GNAT.Command_Line is\n       Index_In_Switches : out Integer;\n       Switch_Length     : out Integer;\n       Param             : out Switch_Parameter_Type);\n-   --  Return the Longest switch from Switches that at least partially\n-   --  partially Arg. Index_In_Switches is set to 0 if none matches.\n-   --  What are other parameters??? in particular Param is not always set???\n+   --  Return the Longest switch from Switches that at least partially matches\n+   --  Arg. Index_In_Switches is set to 0 if none matches. What are other\n+   --  parameters??? in particular Param is not always set???\n \n    procedure Unchecked_Free is new Ada.Unchecked_Deallocation\n      (Argument_List, Argument_List_Access);\n@@ -663,17 +673,45 @@ package body GNAT.Command_Line is\n \n          if Index_Switches = 0 then\n \n-            --  Depending on the value of Concatenate, the full switch is\n-            --  a single character or the rest of the argument.\n+            --  Find the current switch that we did not recognize. This is in\n+            --  fact difficult because Getopt does not know explicitly about\n+            --  short and long switches. Ideally, we would want the following\n+            --  behavior:\n+\n+            --      * for short switches, with Concatenate:\n+            --        if -a is not recognized, and the command line has -daf\n+            --        we should report the invalid switch as \"-a\".\n+\n+            --      * for short switches, wihtout Concatenate:\n+            --        we should report the invalid switch as \"-daf\".\n+\n+            --      * for long switches:\n+            --        if the commadn line is \"--long\" we should report --long\n+            --        as unrecongized.\n+\n+            --  Unfortunately, the fact that long switches start with a\n+            --  duplicate switch character is just a convention (so we could\n+            --  have a long switch \"-long\" for instance). We'll still rely on\n+            --  this convention here to try and get as helpful an error message\n+            --  as possible.\n+\n+            --  Long switch case (starting with double switch character)\n \n-            End_Index :=\n-              (if Concatenate then Parser.Current_Index else Arg'Last);\n+            if Arg (Arg'First + 1) = Parser.Switch_Character then\n+               End_Index := Arg'Last;\n+\n+            --  Short switch case\n+\n+            else\n+               End_Index :=\n+                 (if Concatenate then Parser.Current_Index else Arg'Last);\n+            end if;\n \n             if Switches (Switches'First) = '*' then\n \n-               --  Always prepend the switch character, so that users know that\n-               --  this comes from a switch on the command line. This is\n-               --  especially important when Concatenate is False, since\n+               --  Always prepend the switch character, so that users know\n+               --  that this comes from a switch on the command line. This\n+               --  is especially important when Concatenate is False, since\n                --  otherwise the current argument first character is lost.\n \n                if Parser.Section (Parser.Current_Argument) = 0 then\n@@ -696,11 +734,21 @@ package body GNAT.Command_Line is\n                end if;\n             end if;\n \n-            Set_Parameter\n-              (Parser.The_Switch,\n-               Arg_Num => Parser.Current_Argument,\n-               First   => Parser.Current_Index,\n-               Last    => End_Index);\n+            if Parser.Current_Index = Arg'First then\n+               Set_Parameter\n+                 (Parser.The_Switch,\n+                  Arg_Num => Parser.Current_Argument,\n+                  First   => Parser.Current_Index,\n+                  Last    => End_Index);\n+            else\n+               Set_Parameter\n+                 (Parser.The_Switch,\n+                  Arg_Num => Parser.Current_Argument,\n+                  First   => Parser.Current_Index,\n+                  Last    => End_Index,\n+                  Extra   => Parser.Switch_Character);\n+            end if;\n+\n             Parser.Current_Index := End_Index + 1;\n \n             raise Invalid_Switch;\n@@ -762,7 +810,7 @@ package body GNAT.Command_Line is\n                      raise Invalid_Parameter;\n                   end if;\n \n-               --  If the switch is of the form <switch> xxx\n+               --  Case of switch of the form <switch> xxx\n \n                elsif Parser.Current_Argument < Parser.Arg_Count\n                  and then Parser.Section (Parser.Current_Argument + 1) /= 0\n@@ -830,7 +878,8 @@ package body GNAT.Command_Line is\n                     (Parser.The_Switch,\n                      Arg_Num => Parser.Current_Argument,\n                      First   => Parser.Current_Index,\n-                     Last    => Arg'Last);\n+                     Last    => Arg'Last,\n+                     Extra   => Parser.Switch_Character);\n                   Parser.Current_Index := Arg'Last + 1;\n                   raise Invalid_Switch;\n                end if;\n@@ -1170,9 +1219,7 @@ package body GNAT.Command_Line is\n       procedure Unchecked_Free is new\n         Ada.Unchecked_Deallocation (Opt_Parser_Data, Opt_Parser);\n    begin\n-      if Parser /= null\n-        and then Parser /= Command_Line_Parser\n-      then\n+      if Parser /= null and then Parser /= Command_Line_Parser then\n          Free (Parser.Arguments);\n          Unchecked_Free (Parser);\n       end if;\n@@ -1189,6 +1236,7 @@ package body GNAT.Command_Line is\n       Section  : String := \"\")\n    is\n       Def    : Alias_Definition;\n+\n    begin\n       if Config = null then\n          Config := new Command_Line_Configuration_Record;\n@@ -1255,8 +1303,9 @@ package body GNAT.Command_Line is\n    -- Add --\n    ---------\n \n-   procedure Add (Def : in out Alias_Definitions_List;\n-                  Alias : Alias_Definition)\n+   procedure Add\n+     (Def   : in out Alias_Definitions_List;\n+      Alias : Alias_Definition)\n    is\n       procedure Unchecked_Free is new\n         Ada.Unchecked_Deallocation\n@@ -1511,7 +1560,7 @@ package body GNAT.Command_Line is\n \n       Foreach (Config, Section => Section);\n \n-      --  Adding relevant aliases\n+      --  Add relevant aliases\n \n       if Config.Aliases /= null then\n          for A in Config.Aliases'Range loop\n@@ -1585,8 +1634,8 @@ package body GNAT.Command_Line is\n       function Real_Full_Switch\n         (S      : Character;\n          Parser : Opt_Parser) return String;\n-      --  Ensure that the returned switch value contains the\n-      --  Switch_Char prefix if needed.\n+      --  Ensure that the returned switch value contains the Switch_Char prefix\n+      --  if needed.\n \n       ----------------------\n       -- Real_Full_Switch --\n@@ -2465,13 +2514,12 @@ package body GNAT.Command_Line is\n                    ((Cmd.Params (C) = null and then Param = \"\")\n                       or else\n                         (Cmd.Params (C) /= null\n-                           and then\n \n-                           --  Ignore the separator stored in Parameter\n+                          --  Ignore the separator stored in Parameter\n \n+                          and then\n                              Cmd.Params (C) (Cmd.Params (C)'First + 1\n-                                             .. Cmd.Params (C)'Last) =\n-                           Param))\n+                                             .. Cmd.Params (C)'Last) = Param))\n                then\n                   Remove (Cmd.Expanded, C);\n                   Remove (Cmd.Params, C);\n@@ -2550,9 +2598,7 @@ package body GNAT.Command_Line is\n    --  Start of processing for Group_Switches\n \n    begin\n-      if Cmd.Config = null\n-        or else Cmd.Config.Prefixes = null\n-      then\n+      if Cmd.Config = null or else Cmd.Config.Prefixes = null then\n          return;\n       end if;\n \n@@ -2638,10 +2684,9 @@ package body GNAT.Command_Line is\n       First : Natural;\n \n       procedure Check_Cb (Switch, Separator, Param : String; Index : Integer);\n-      --  Checks whether the command line contains [Switch].\n-      --  Sets the global variable [Found] appropriately.\n-      --  This will be called for each simple switch that make up an alias, to\n-      --  know whether the alias should be applied.\n+      --  Checks whether the command line contains [Switch]. Sets the global\n+      --  variable [Found] appropriately. This is called for each simple switch\n+      --  that make up an alias, to know whether the alias should be applied.\n \n       procedure Remove_Cb (Switch, Separator, Param : String; Index : Integer);\n       --  Remove the simple switch [Switch] from the command line, since it is\n@@ -2708,9 +2753,7 @@ package body GNAT.Command_Line is\n    --  Start of processing for Alias_Switches\n \n    begin\n-      if Cmd.Config = null\n-        or else Cmd.Config.Aliases = null\n-      then\n+      if Cmd.Config = null or else Cmd.Config.Aliases = null then\n          return;\n       end if;\n \n@@ -3079,7 +3122,7 @@ package body GNAT.Command_Line is\n \n    procedure Display_Help (Config : Command_Line_Configuration) is\n       function Switch_Name\n-        (Def : Switch_Definition;\n+        (Def     : Switch_Definition;\n          Section : String) return String;\n       --  Return the \"-short, --long=ARG\" string for Def.\n       --  Returns \"\" if the switch is not in the section.\n@@ -3194,7 +3237,7 @@ package body GNAT.Command_Line is\n       -----------------\n \n       function Switch_Name\n-        (Def : Switch_Definition;\n+        (Def     : Switch_Definition;\n          Section : String) return String\n       is\n          use Ada.Strings.Unbounded;\n@@ -3488,7 +3531,7 @@ package body GNAT.Command_Line is\n          Put_Line (Standard_Error,\n                    Base_Name (Ada.Command_Line.Command_Name)\n                    & \": unrecognized option '\"\n-                   & Parser.Switch_Character & Full_Switch (Parser)\n+                   & Full_Switch (Parser)\n                    & \"'\");\n          Put_Line (Standard_Error,\n                    \"Try `\""}, {"sha": "60637c9bb1d0ed6d5101611078b0357df8d71a77", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 87, "deletions": 86, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cb62ce3c795fe9991d20a294a53c1bbeadf2751/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cb62ce3c795fe9991d20a294a53c1bbeadf2751/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=9cb62ce3c795fe9991d20a294a53c1bbeadf2751", "patch": "@@ -1259,31 +1259,31 @@ ada/checks.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/eval_fat.ads ada/exp_aggr.ads ada/exp_ch11.ads ada/exp_ch2.ads \\\n    ada/exp_ch4.ads ada/exp_ch6.ads ada/exp_ch7.ads ada/exp_disp.ads \\\n    ada/exp_dist.ads ada/exp_pakd.ads ada/exp_tss.ads ada/exp_util.ads \\\n-   ada/exp_util.adb ada/fname.ads ada/fname-uf.ads ada/freeze.ads \\\n-   ada/get_targ.ads ada/gnat.ads ada/g-hesorg.ads ada/g-htable.ads \\\n-   ada/gnatvsn.ads ada/hostparm.ads ada/inline.ads ada/itypes.ads \\\n-   ada/lib.ads ada/lib.adb ada/lib-list.adb ada/lib-load.ads \\\n-   ada/lib-sort.adb ada/lib-util.ads ada/lib-xref.ads ada/namet.ads \\\n-   ada/nlists.ads ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads \\\n-   ada/opt.adb ada/output.ads ada/put_alfa.ads ada/restrict.ads \\\n-   ada/restrict.adb ada/rident.ads ada/rtsfind.ads ada/rtsfind.adb \\\n-   ada/scans.ads ada/sem.ads ada/sem_attr.ads ada/sem_aux.ads \\\n-   ada/sem_cat.ads ada/sem_ch3.ads ada/sem_ch6.ads ada/sem_ch7.ads \\\n-   ada/sem_ch8.ads ada/sem_disp.ads ada/sem_dist.ads ada/sem_eval.ads \\\n-   ada/sem_eval.adb ada/sem_prag.ads ada/sem_res.ads ada/sem_type.ads \\\n-   ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads ada/sinfo.ads \\\n-   ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/sprint.ads \\\n-   ada/stand.ads ada/stringt.ads ada/style.ads ada/styleg.ads \\\n-   ada/styleg.adb ada/stylesw.ads ada/system.ads ada/s-exctab.ads \\\n-   ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n-   ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\\n-   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n-   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n-   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n-   ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n-   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n-   ada/unchdeal.ads ada/urealp.ads ada/urealp.adb ada/validsw.ads \\\n-   ada/widechar.ads \n+   ada/exp_util.adb ada/expander.ads ada/fname.ads ada/fname-uf.ads \\\n+   ada/freeze.ads ada/get_targ.ads ada/gnat.ads ada/g-hesorg.ads \\\n+   ada/g-htable.ads ada/gnatvsn.ads ada/hostparm.ads ada/inline.ads \\\n+   ada/itypes.ads ada/lib.ads ada/lib.adb ada/lib-list.adb \\\n+   ada/lib-load.ads ada/lib-sort.adb ada/lib-util.ads ada/lib-xref.ads \\\n+   ada/namet.ads ada/nlists.ads ada/nlists.adb ada/nmake.ads ada/nmake.adb \\\n+   ada/opt.ads ada/opt.adb ada/output.ads ada/put_alfa.ads \\\n+   ada/restrict.ads ada/restrict.adb ada/rident.ads ada/rtsfind.ads \\\n+   ada/rtsfind.adb ada/scans.ads ada/sem.ads ada/sem_attr.ads \\\n+   ada/sem_aux.ads ada/sem_cat.ads ada/sem_ch3.ads ada/sem_ch6.ads \\\n+   ada/sem_ch7.ads ada/sem_ch8.ads ada/sem_disp.ads ada/sem_dist.ads \\\n+   ada/sem_eval.ads ada/sem_eval.adb ada/sem_prag.ads ada/sem_res.ads \\\n+   ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads \\\n+   ada/sinfo.ads ada/sinfo.adb ada/sinput.ads ada/snames.ads \\\n+   ada/sprint.ads ada/stand.ads ada/stringt.ads ada/style.ads \\\n+   ada/styleg.ads ada/styleg.adb ada/stylesw.ads ada/system.ads \\\n+   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n+   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n+   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n+   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n+   ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n+   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/urealp.adb \\\n+   ada/validsw.ads ada/widechar.ads \n \n ada/comperr.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -1642,28 +1642,28 @@ ada/exp_ch3.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/exp_ch4.ads ada/exp_ch6.ads ada/exp_ch7.ads ada/exp_ch9.ads \\\n    ada/exp_dbug.ads ada/exp_disp.ads ada/exp_disp.adb ada/exp_dist.ads \\\n    ada/exp_pakd.ads ada/exp_smem.ads ada/exp_strm.ads ada/exp_tss.ads \\\n-   ada/exp_tss.adb ada/exp_util.ads ada/exp_util.adb ada/fname.ads \\\n-   ada/fname-uf.ads ada/freeze.ads ada/get_targ.ads ada/gnat.ads \\\n-   ada/g-htable.ads ada/hostparm.ads ada/inline.ads ada/itypes.ads \\\n-   ada/layout.ads ada/lib.ads ada/lib-load.ads ada/namet.ads \\\n-   ada/nlists.ads ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads \\\n-   ada/output.ads ada/restrict.ads ada/restrict.adb ada/rident.ads \\\n-   ada/rtsfind.ads ada/rtsfind.adb ada/scil_ll.ads ada/sem.ads \\\n-   ada/sem_attr.ads ada/sem_aux.ads ada/sem_aux.adb ada/sem_cat.ads \\\n-   ada/sem_ch3.ads ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads \\\n-   ada/sem_disp.ads ada/sem_dist.ads ada/sem_eval.ads ada/sem_mech.ads \\\n-   ada/sem_prag.ads ada/sem_res.ads ada/sem_scil.ads ada/sem_type.ads \\\n-   ada/sem_util.ads ada/sem_warn.ads ada/sinfo.ads ada/sinfo.adb \\\n-   ada/sinput.ads ada/snames.ads ada/sprint.ads ada/stand.ads \\\n-   ada/stringt.ads ada/system.ads ada/s-exctab.ads ada/s-htable.ads \\\n-   ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads \\\n-   ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads \\\n-   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n-   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n-   ada/table.adb ada/targparm.ads ada/tbuild.ads ada/tbuild.adb \\\n-   ada/tree_io.ads ada/ttypes.ads ada/types.ads ada/uintp.ads \\\n-   ada/uintp.adb ada/uname.ads ada/unchconv.ads ada/unchdeal.ads \\\n-   ada/urealp.ads ada/validsw.ads \n+   ada/exp_tss.adb ada/exp_util.ads ada/exp_util.adb ada/expander.ads \\\n+   ada/fname.ads ada/fname-uf.ads ada/freeze.ads ada/get_targ.ads \\\n+   ada/gnat.ads ada/g-htable.ads ada/hostparm.ads ada/inline.ads \\\n+   ada/itypes.ads ada/layout.ads ada/lib.ads ada/lib-load.ads \\\n+   ada/namet.ads ada/nlists.ads ada/nlists.adb ada/nmake.ads ada/nmake.adb \\\n+   ada/opt.ads ada/output.ads ada/restrict.ads ada/restrict.adb \\\n+   ada/rident.ads ada/rtsfind.ads ada/rtsfind.adb ada/scil_ll.ads \\\n+   ada/sem.ads ada/sem_attr.ads ada/sem_aux.ads ada/sem_aux.adb \\\n+   ada/sem_cat.ads ada/sem_ch3.ads ada/sem_ch6.ads ada/sem_ch7.ads \\\n+   ada/sem_ch8.ads ada/sem_disp.ads ada/sem_dist.ads ada/sem_eval.ads \\\n+   ada/sem_mech.ads ada/sem_prag.ads ada/sem_res.ads ada/sem_scil.ads \\\n+   ada/sem_type.ads ada/sem_util.ads ada/sem_warn.ads ada/sinfo.ads \\\n+   ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/sprint.ads \\\n+   ada/stand.ads ada/stringt.ads ada/system.ads ada/s-exctab.ads \\\n+   ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n+   ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\\n+   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n+   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n+   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n+   ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n+   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \n \n ada/exp_ch4.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -1674,10 +1674,10 @@ ada/exp_ch4.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/exp_ch2.ads ada/exp_ch3.ads ada/exp_ch4.ads ada/exp_ch4.adb \\\n    ada/exp_ch6.ads ada/exp_ch7.ads ada/exp_ch9.ads ada/exp_disp.ads \\\n    ada/exp_fixd.ads ada/exp_intr.ads ada/exp_pakd.ads ada/exp_tss.ads \\\n-   ada/exp_util.ads ada/exp_util.adb ada/exp_vfpt.ads ada/fname.ads \\\n-   ada/fname-uf.ads ada/freeze.ads ada/get_targ.ads ada/gnat.ads \\\n-   ada/g-hesorg.ads ada/g-htable.ads ada/hostparm.ads ada/inline.ads \\\n-   ada/itypes.ads ada/lib.ads ada/lib.adb ada/lib-list.adb \\\n+   ada/exp_util.ads ada/exp_util.adb ada/exp_vfpt.ads ada/expander.ads \\\n+   ada/fname.ads ada/fname-uf.ads ada/freeze.ads ada/get_targ.ads \\\n+   ada/gnat.ads ada/g-hesorg.ads ada/g-htable.ads ada/hostparm.ads \\\n+   ada/inline.ads ada/itypes.ads ada/lib.ads ada/lib.adb ada/lib-list.adb \\\n    ada/lib-sort.adb ada/lib-util.ads ada/lib-xref.ads ada/namet.ads \\\n    ada/nlists.ads ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads \\\n    ada/output.ads ada/par_sco.ads ada/put_alfa.ads ada/restrict.ads \\\n@@ -1708,28 +1708,28 @@ ada/exp_ch5.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/exp_aggr.ads ada/exp_ch11.ads ada/exp_ch2.ads ada/exp_ch4.ads \\\n    ada/exp_ch5.ads ada/exp_ch5.adb ada/exp_ch6.ads ada/exp_ch7.ads \\\n    ada/exp_dbug.ads ada/exp_disp.ads ada/exp_pakd.ads ada/exp_tss.ads \\\n-   ada/exp_util.ads ada/exp_util.adb ada/fname.ads ada/fname-uf.ads \\\n-   ada/freeze.ads ada/get_targ.ads ada/gnat.ads ada/g-htable.ads \\\n-   ada/hostparm.ads ada/inline.ads ada/itypes.ads ada/lib.ads \\\n-   ada/lib-util.ads ada/lib-xref.ads ada/namet.ads ada/nlists.ads \\\n-   ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads \\\n-   ada/put_alfa.ads ada/restrict.ads ada/restrict.adb ada/rident.ads \\\n-   ada/rtsfind.ads ada/scans.ads ada/sem.ads ada/sem_attr.ads \\\n-   ada/sem_aux.ads ada/sem_cat.ads ada/sem_ch13.ads ada/sem_ch3.ads \\\n-   ada/sem_ch6.ads ada/sem_ch8.ads ada/sem_disp.ads ada/sem_eval.ads \\\n-   ada/sem_eval.adb ada/sem_prag.ads ada/sem_res.ads ada/sem_type.ads \\\n-   ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads ada/sinfo.ads \\\n-   ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/sprint.ads \\\n-   ada/stand.ads ada/stringt.ads ada/stringt.adb ada/style.ads \\\n-   ada/styleg.ads ada/styleg.adb ada/stylesw.ads ada/system.ads \\\n-   ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n-   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n-   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n-   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n-   ada/types.ads ada/uintp.ads ada/uname.ads ada/unchconv.ads \\\n-   ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \n+   ada/exp_util.ads ada/exp_util.adb ada/expander.ads ada/fname.ads \\\n+   ada/fname-uf.ads ada/freeze.ads ada/get_targ.ads ada/gnat.ads \\\n+   ada/g-htable.ads ada/hostparm.ads ada/inline.ads ada/itypes.ads \\\n+   ada/lib.ads ada/lib-util.ads ada/lib-xref.ads ada/namet.ads \\\n+   ada/nlists.ads ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads \\\n+   ada/output.ads ada/put_alfa.ads ada/restrict.ads ada/restrict.adb \\\n+   ada/rident.ads ada/rtsfind.ads ada/scans.ads ada/sem.ads \\\n+   ada/sem_attr.ads ada/sem_aux.ads ada/sem_cat.ads ada/sem_ch13.ads \\\n+   ada/sem_ch3.ads ada/sem_ch6.ads ada/sem_ch8.ads ada/sem_disp.ads \\\n+   ada/sem_eval.ads ada/sem_eval.adb ada/sem_prag.ads ada/sem_res.ads \\\n+   ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads \\\n+   ada/sinfo.ads ada/sinfo.adb ada/sinput.ads ada/snames.ads \\\n+   ada/sprint.ads ada/stand.ads ada/stringt.ads ada/stringt.adb \\\n+   ada/style.ads ada/styleg.ads ada/styleg.adb ada/stylesw.ads \\\n+   ada/system.ads ada/s-exctab.ads ada/s-htable.ads ada/s-imenne.ads \\\n+   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n+   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n+   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n+   ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n+   ada/targparm.ads ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads \\\n+   ada/ttypes.ads ada/types.ads ada/uintp.ads ada/uname.ads \\\n+   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/validsw.ads \n \n ada/exp_ch6.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -2044,10 +2044,10 @@ ada/exp_pakd.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/exp_aggr.ads ada/exp_ch11.ads ada/exp_ch2.ads ada/exp_ch4.ads \\\n    ada/exp_ch6.ads ada/exp_ch7.ads ada/exp_dbug.ads ada/exp_pakd.ads \\\n    ada/exp_pakd.adb ada/exp_tss.ads ada/exp_util.ads ada/exp_util.adb \\\n-   ada/freeze.ads ada/get_targ.ads ada/gnat.ads ada/g-htable.ads \\\n-   ada/hostparm.ads ada/inline.ads ada/itypes.ads ada/layout.ads \\\n-   ada/lib.ads ada/namet.ads ada/nlists.ads ada/nlists.adb ada/nmake.ads \\\n-   ada/nmake.adb ada/opt.ads ada/output.ads ada/restrict.ads \\\n+   ada/expander.ads ada/freeze.ads ada/get_targ.ads ada/gnat.ads \\\n+   ada/g-htable.ads ada/hostparm.ads ada/inline.ads ada/itypes.ads \\\n+   ada/layout.ads ada/lib.ads ada/namet.ads ada/nlists.ads ada/nlists.adb \\\n+   ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads ada/restrict.ads \\\n    ada/rident.ads ada/rtsfind.ads ada/sem.ads ada/sem_aux.ads \\\n    ada/sem_ch13.ads ada/sem_ch3.ads ada/sem_ch8.ads ada/sem_eval.ads \\\n    ada/sem_prag.ads ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads \\\n@@ -4179,15 +4179,16 @@ ada/switch-b.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/types.ads ada/unchconv.ads ada/unchdeal.ads \n \n ada/switch-c.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n-   ada/a-uncdea.ads ada/alloc.ads ada/debug.ads ada/gnatvsn.ads \\\n-   ada/hostparm.ads ada/lib.ads ada/namet.ads ada/opt.ads ada/osint.ads \\\n-   ada/output.ads ada/stylesw.ads ada/switch.ads ada/switch-c.ads \\\n-   ada/switch-c.adb ada/system.ads ada/s-exctab.ads ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-soflin.ads ada/s-stache.ads \\\n-   ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads \\\n-   ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads ada/table.ads \\\n-   ada/table.adb ada/tree_io.ads ada/types.ads ada/unchconv.ads \\\n-   ada/unchdeal.ads ada/validsw.ads ada/warnsw.ads \n+   ada/a-uncdea.ads ada/alloc.ads ada/debug.ads ada/get_targ.ads \\\n+   ada/gnatvsn.ads ada/hostparm.ads ada/lib.ads ada/namet.ads ada/opt.ads \\\n+   ada/osint.ads ada/output.ads ada/stylesw.ads ada/switch.ads \\\n+   ada/switch-c.ads ada/switch-c.adb ada/system.ads ada/s-exctab.ads \\\n+   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-soflin.ads \\\n+   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n+   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n+   ada/table.ads ada/table.adb ada/tree_io.ads ada/ttypes.ads \\\n+   ada/types.ads ada/unchconv.ads ada/unchdeal.ads ada/validsw.ads \\\n+   ada/warnsw.ads \n \n ada/switch.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/debug.ads ada/gnatvsn.ads \\"}, {"sha": "4383754fa3165a384644539d9a9b25340c06a110", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 44, "deletions": 3, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cb62ce3c795fe9991d20a294a53c1bbeadf2751/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cb62ce3c795fe9991d20a294a53c1bbeadf2751/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=9cb62ce3c795fe9991d20a294a53c1bbeadf2751", "patch": "@@ -7685,10 +7685,11 @@ package body Sem_Res is\n       ----------------------------\n \n       procedure Resolve_Set_Membership is\n-         Alt : Node_Id;\n+         Alt  : Node_Id;\n+         Ltyp : constant Entity_Id := Etype (L);\n \n       begin\n-         Resolve (L, Etype (L));\n+         Resolve (L, Ltyp);\n \n          Alt := First (Alternatives (N));\n          while Present (Alt) loop\n@@ -7699,11 +7700,51 @@ package body Sem_Res is\n             if not Is_Entity_Name (Alt)\n               or else not Is_Type (Entity (Alt))\n             then\n-               Resolve (Alt, Etype (L));\n+               Resolve (Alt, Ltyp);\n             end if;\n \n             Next (Alt);\n          end loop;\n+\n+         --  Check for duplicates for discrete case\n+\n+         if Is_Discrete_Type (Ltyp) then\n+            declare\n+               type Ent is record\n+                  Alt : Node_Id;\n+                  Val : Uint;\n+               end record;\n+\n+               Alts  : array (0 .. List_Length (Alternatives (N))) of Ent;\n+               Nalts : Nat;\n+\n+            begin\n+               --  Loop checking duplicates. This is quadratic, but giant sets\n+               --  are unlikely in this context so it's a reasonable choice.\n+\n+               Nalts := 0;\n+               Alt := First (Alternatives (N));\n+               while Present (Alt) loop\n+                  if Is_Static_Expression (Alt)\n+                    and then (Nkind_In (Alt, N_Integer_Literal,\n+                                         N_Character_Literal)\n+                               or else Nkind (Alt) in N_Has_Entity)\n+                  then\n+                     Nalts := Nalts + 1;\n+                     Alts (Nalts) := (Alt, Expr_Value (Alt));\n+\n+                     for J in 1 .. Nalts - 1 loop\n+                        if Alts (J).Val = Alts (Nalts).Val then\n+                           Error_Msg_Sloc := Sloc (Alts (J).Alt);\n+                           Error_Msg_N (\"duplicate of value given#?\", Alt);\n+                        end if;\n+                     end loop;\n+                  end if;\n+\n+                  Alt := Next (Alt);\n+               end loop;\n+            end;\n+         end if;\n       end Resolve_Set_Membership;\n \n    --  Start of processing for Resolve_Membership_Op"}]}