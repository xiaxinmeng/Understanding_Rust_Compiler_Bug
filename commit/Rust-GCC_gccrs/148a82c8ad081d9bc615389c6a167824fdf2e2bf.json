{"sha": "148a82c8ad081d9bc615389c6a167824fdf2e2bf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTQ4YTgyYzhhZDA4MWQ5YmM2MTUzODljNmExNjc4MjRmZGYyZTJiZg==", "commit": {"author": {"name": "Pavel Pisa", "email": "pisa@cmp.felk.cvut.cz", "date": "2003-11-13T17:10:23Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2003-11-13T17:10:23Z"}, "message": "lib1funcs.asm (DenHighNonZero): Optimize using the approximate quotient method.\n\n\t* config/h8300/lib1funcs.asm (DenHighNonZero): Optimize using\n\tthe approximate quotient method.\n\nCo-Authored-By: Kazu Hirata <kazu@cs.umass.edu>\n\nFrom-SVN: r73550", "tree": {"sha": "93b4a9c6530a17dbf3e305399ae3de5a0681cddf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93b4a9c6530a17dbf3e305399ae3de5a0681cddf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/148a82c8ad081d9bc615389c6a167824fdf2e2bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/148a82c8ad081d9bc615389c6a167824fdf2e2bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/148a82c8ad081d9bc615389c6a167824fdf2e2bf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/148a82c8ad081d9bc615389c6a167824fdf2e2bf/comments", "author": {"login": "ppisa", "id": 1687989, "node_id": "MDQ6VXNlcjE2ODc5ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/1687989?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ppisa", "html_url": "https://github.com/ppisa", "followers_url": "https://api.github.com/users/ppisa/followers", "following_url": "https://api.github.com/users/ppisa/following{/other_user}", "gists_url": "https://api.github.com/users/ppisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/ppisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ppisa/subscriptions", "organizations_url": "https://api.github.com/users/ppisa/orgs", "repos_url": "https://api.github.com/users/ppisa/repos", "events_url": "https://api.github.com/users/ppisa/events{/privacy}", "received_events_url": "https://api.github.com/users/ppisa/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "79ae853c64afa946d36d98404dadb5bcd09974a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79ae853c64afa946d36d98404dadb5bcd09974a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79ae853c64afa946d36d98404dadb5bcd09974a3"}], "stats": {"total": 81, "additions": 56, "deletions": 25}, "files": [{"sha": "4bf3f91a5e860aeb47089ab3b117b646ade737d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/148a82c8ad081d9bc615389c6a167824fdf2e2bf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/148a82c8ad081d9bc615389c6a167824fdf2e2bf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=148a82c8ad081d9bc615389c6a167824fdf2e2bf", "patch": "@@ -1,3 +1,9 @@\n+2003-11-13  Pavel Pisa  <pisa@cmp.felk.cvut.cz>\n+\t    Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/lib1funcs.asm (DenHighNonZero): Optimize using\n+\tthe approximate quotient method.\n+\n 2003-11-13  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* combine.c (distribute_notes): When re-distributing the notes from"}, {"sha": "d71a11e65ce3b8adc9172b5c722df737ad8a1cf5", "filename": "gcc/config/h8300/lib1funcs.asm", "status": "modified", "additions": 50, "deletions": 25, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/148a82c8ad081d9bc615389c6a167824fdf2e2bf/gcc%2Fconfig%2Fh8300%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/148a82c8ad081d9bc615389c6a167824fdf2e2bf/gcc%2Fconfig%2Fh8300%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Flib1funcs.asm?ref=148a82c8ad081d9bc615389c6a167824fdf2e2bf", "patch": "@@ -603,32 +603,57 @@ divmodsi4:\n \textu.l\tS0P\n \trts\n \n+ \t; er0 = er0 / er1\n+ \t; er4 = er0 % er1\n+ \t; trashes er1 er2\n+ \t; expects er1 >= 2^16\n DenHighNonZero:\n-\tsub.l\tS0P,S0P\t\t; zero play area\n-\tmov.w\tA0E,A2\n-\tmov.b\tA2H,S0L\n-\tmov.b\tA2L,A2H\n-\tmov.b\tA0H,A2L\n-\tmov.w\tA2,A0E\n-\tmov.b\tA0L,A0H\n-\tmov.b\t#0,A0L\n-\tmov.b\t#24,S2H\t\t; only do 24 iterations\n-\n-nextbit:\n-\tshll.l\tA0P\t\t; double the answer guess\n-\trotxl.l\tS0P\t\t; double remainder\n-\tsub.l\tA1P,S0P\t\t; does it all fit?\n-\tbhs\tsetone\n-\n-\tadd.l\tA1P,S0P\t\t; no, restore mistake\n-\tdec\tS2H\n-\tbne\tnextbit\n-\trts\n-\n-setone:\n-\tinc\tA0L\n-\tdec\tS2H\n-\tbne\tnextbit\n+\tmov.l\ter0,er4\n+\tmov.l\ter1,er2\n+#ifdef __H8300H__\n+divmod_L21:\n+\tshlr.l\ter0\n+\tshlr.l\ter2\t\t; make divisor < 2^16\n+\tmov.w\te2,e2\n+\tbne\tdivmod_L21\n+#else\n+\tbra\tdivmod_L22\n+divmod_L21:\n+\tshlr.l\t#2,er0\n+divmod_L22:\n+\tshlr.l\t#2,er2\t\t; make divisor < 2^16\n+\tmov.w\te2,e2\n+\tbne\tdivmod_L21\n+\trotxl.w\tr2\n+\tbcs\tdivmod_L23\n+\tshlr.l\ter0\n+\tbra\tdivmod_L24\n+divmod_L23:\n+\trotxr.w\tr2\n+\tshlr.l\t#2,er0\n+divmod_L24:\n+#endif\n+\t;; At this point,\n+\t;;  er0 contains shifted dividend\n+\t;;  er1 contains divisor\n+\t;;  er2 contains shifted divisor\n+\t;;  er4 contains dividend, later remainder\n+\tdivxu.w\tr2,er0\t\t; e0 now contains the approximate quotient (AQ)\n+\textu.l\ter0\n+\tbeq\tdivmod_L25\n+\tsubs\t#1,er0\t\t; er0 = AQ - 1\n+\tmov.w\te1,r2\n+\tmulxu.w\tr0,er2\t\t; er2 = upper (AQ - 1) * divisor\n+\tsub.w\tr2,e4\t\t; dividend - 65536 * er2\n+\tmov.w\tr1,r2\n+\tmulxu.w\tr0,er2\t\t; compute er4 = remainder (tentative)\n+\tsub.l\ter2,er4\t\t; er4 = dividend - (AQ - 1) * divisor\n+divmod_L25:\n+ \tcmp.l\ter1,er4\t\t; is divisor < remainder?\n+\tblo\tdivmod_L26\n+ \tadds\t#1,er0\n+\tsub.l\ter1,er4\t\t; correct the remainder\n+divmod_L26:\n \trts\n \n #endif"}]}