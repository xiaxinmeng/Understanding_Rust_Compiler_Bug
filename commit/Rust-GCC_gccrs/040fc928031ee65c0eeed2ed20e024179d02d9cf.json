{"sha": "040fc928031ee65c0eeed2ed20e024179d02d9cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDQwZmM5MjgwMzFlZTY1YzBlZWVkMmVkMjBlMDI0MTc5ZDAyZDljZg==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-12-16T02:22:59Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-12-16T02:22:59Z"}, "message": "re PR rtl-optimization/13400 (Compiled code crashes storing to read-only location)\n\n\n\tPR middle-end/13400\n\t* ifcvt.c (noce_process_if_block): Disable unconditional write\n\toptimizations if we could introduce a store to trapping memory\n\tthat wasn't present previously.\n\n\t* gcc.c-torture/execute/20031215-1.c: New test case.\n\nFrom-SVN: r74663", "tree": {"sha": "b02900d53cb5f257d74a47dcc26cadd3b2198c39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b02900d53cb5f257d74a47dcc26cadd3b2198c39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/040fc928031ee65c0eeed2ed20e024179d02d9cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040fc928031ee65c0eeed2ed20e024179d02d9cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/040fc928031ee65c0eeed2ed20e024179d02d9cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/040fc928031ee65c0eeed2ed20e024179d02d9cf/comments", "author": null, "committer": null, "parents": [{"sha": "3fc63c15b4ca913b9151cdff9365190d69f2ccd3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fc63c15b4ca913b9151cdff9365190d69f2ccd3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fc63c15b4ca913b9151cdff9365190d69f2ccd3"}], "stats": {"total": 69, "additions": 69, "deletions": 0}, "files": [{"sha": "950083c271226e721b21c6bc1b3ac2a44c8363c1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040fc928031ee65c0eeed2ed20e024179d02d9cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040fc928031ee65c0eeed2ed20e024179d02d9cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=040fc928031ee65c0eeed2ed20e024179d02d9cf", "patch": "@@ -1,3 +1,10 @@\n+2003-12-15  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/13400\n+\t* ifcvt.c (noce_process_if_block): Disable unconditional write\n+\toptimizations if we could introduce a store to trapping memory\n+\tthat wasn't present previously.\n+\n 2003-12-15  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* system.h (DEFAULT_CALLER_SAVES): Poison."}, {"sha": "8aba0d50efc9afe9abd2cb732cc504b529de63cf", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040fc928031ee65c0eeed2ed20e024179d02d9cf/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040fc928031ee65c0eeed2ed20e024179d02d9cf/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=040fc928031ee65c0eeed2ed20e024179d02d9cf", "patch": "@@ -1965,6 +1965,25 @@ noce_process_if_block (struct ce_if_block * ce_info)\n       goto success;\n     }\n \n+  /* Disallow the \"if (...) x = a;\" form (with an implicit \"else x = x;\")\n+     for most optimizations if writing to x may trap, i.e. its a memory\n+     other than a static var or a stack slot.  */\n+  if (! set_b\n+      && GET_CODE (orig_x) == MEM\n+      && ! MEM_NOTRAP_P (orig_x)\n+      && rtx_addr_can_trap_p (XEXP (orig_x, 0)))\n+    {\n+      if (HAVE_conditional_move)\n+\t{\n+\t  if (noce_try_cmove (&if_info))\n+\t    goto success;\n+\t  if (! HAVE_conditional_execution\n+\t      && noce_try_cmove_arith (&if_info))\n+\t    goto success;\n+\t}\n+      return FALSE;\n+    }\n+\n   if (noce_try_move (&if_info))\n     goto success;\n   if (noce_try_store_flag (&if_info))"}, {"sha": "96c0ee8a93ecc3f1fbea7c46a80be2e9b212bcbe", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040fc928031ee65c0eeed2ed20e024179d02d9cf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040fc928031ee65c0eeed2ed20e024179d02d9cf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=040fc928031ee65c0eeed2ed20e024179d02d9cf", "patch": "@@ -1,3 +1,8 @@\n+2003-12-15  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/13400\n+\t* gcc.c-torture/execute/20031215-1.c: New test case.\n+\n 2003-12-15  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/13269"}, {"sha": "d62177b261877e093ce488ba3f2b36d831cfe21a", "filename": "gcc/testsuite/gcc.c-torture/execute/20031215-1.c", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/040fc928031ee65c0eeed2ed20e024179d02d9cf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20031215-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/040fc928031ee65c0eeed2ed20e024179d02d9cf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20031215-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2F20031215-1.c?ref=040fc928031ee65c0eeed2ed20e024179d02d9cf", "patch": "@@ -0,0 +1,38 @@\n+/* PR middle-end/13400 */\n+/* The following test used to fail at run-time with a write to read-only\n+   memory, caused by if-conversion converting a conditional write into an\n+   unconditional write.  */\n+\n+typedef struct {int c, l; char ch[3];} pstr;\n+const pstr ao = {2, 2, \"OK\"};\n+const pstr * const a = &ao;\n+\n+void test1(void)\n+{\n+    if (a->ch[a->l]) {\n+        ((char *)a->ch)[a->l] = 0;\n+    }\n+}\n+\n+void test2(void)\n+{\n+    if (a->ch[a->l]) {\n+        ((char *)a->ch)[a->l] = -1;\n+    }\n+}\n+\n+void test3(void)\n+{\n+    if (a->ch[a->l]) {\n+        ((char *)a->ch)[a->l] = 1;\n+    }\n+}\n+\n+int main(void)\n+{\n+    test1();\n+    test2();\n+    test3();\n+    return 0;\n+}\n+"}]}