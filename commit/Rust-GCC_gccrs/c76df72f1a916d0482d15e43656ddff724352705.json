{"sha": "c76df72f1a916d0482d15e43656ddff724352705", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc2ZGY3MmYxYTkxNmQwNDgyZDE1ZTQzNjU2ZGRmZjcyNDM1MjcwNQ==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-03-28T17:44:12Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-03-29T15:29:04Z"}, "message": "testsuite: Split up gdc-test.exp into each subdirectory\n\nUse multiple test scripts, one for each subdirectory containing test\nfiles, instead of having one test script to manage them all.\n\nThis allows removing some workarounds, such as the need to create\nsymlinks in the test run directory.\n\ngcc/testsuite/ChangeLog:\n\n\t* gdc.test/compilable/compilable.exp: New file.\n\t* gdc.test/fail_compilation/fail_compilation.exp: New file.\n\t* gdc.test/gdc-test.exp: Remove.\n\t* gdc.test/runnable/runnable.exp: New file.\n\t* lib/gdc-utils.exp: ...this.  Remove load_lib gdc-dg.exp.\n\t(dmd2dg): Rename to...\n\t(gdc-convert-test): ...this.\n\t(gdc-do-test): Add testcases parameter and remove subdir handling.", "tree": {"sha": "a4f76e3d7b30d0ac96c6924b794fb5778af7d34c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4f76e3d7b30d0ac96c6924b794fb5778af7d34c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c76df72f1a916d0482d15e43656ddff724352705", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c76df72f1a916d0482d15e43656ddff724352705", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c76df72f1a916d0482d15e43656ddff724352705", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c76df72f1a916d0482d15e43656ddff724352705/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "673bb288e6277e2d21f25ce40f19bcb28cf2a99d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/673bb288e6277e2d21f25ce40f19bcb28cf2a99d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/673bb288e6277e2d21f25ce40f19bcb28cf2a99d"}], "stats": {"total": 147, "additions": 117, "deletions": 30}, "files": [{"sha": "cd57ba6f5d364a74f7625b2221a507c76500deeb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c76df72f1a916d0482d15e43656ddff724352705/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c76df72f1a916d0482d15e43656ddff724352705/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c76df72f1a916d0482d15e43656ddff724352705", "patch": "@@ -1,3 +1,14 @@\n+2020-03-29  Iain Buclaw  <ibuclaw@gdcproject.org>\n+\n+\t* gdc.test/compilable/compilable.exp: New file.\n+\t* gdc.test/fail_compilation/fail_compilation.exp: New file.\n+\t* gdc.test/runnable/runnable.exp: New file.\n+\t* gdc.test/gdc-test.exp: Move and rename to...\n+\t* lib/gdc-utils.exp: ...this.  Remove load_lib gdc-dg.exp.\n+\t(dmd2dg): Rename to...\n+\t(gdc-convert-test): ...this.\n+\t(gdc-do-test): Add testcases parameter and remove subdir handling.\n+\n 2020-03-28  Roman Zhuykov  <zhroma@ispras.ru>\n \n \t* gcc.dg/torture/pr87197-debug-sms.c: Move to ..."}, {"sha": "e2af832ccc92580727e37d7f533befe84d80ed99", "filename": "gcc/testsuite/gdc.test/compilable/compilable.exp", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c76df72f1a916d0482d15e43656ddff724352705/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fcompilable.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c76df72f1a916d0482d15e43656ddff724352705/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fcompilable.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Fcompilable%2Fcompilable.exp?ref=c76df72f1a916d0482d15e43656ddff724352705", "patch": "@@ -0,0 +1,30 @@\n+# Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# Compilable tests for the D2 testsuite.\n+\n+# Load support procs.\n+load_lib gdc-dg.exp\n+load_lib gdc-utils.exp\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+gdc-do-test [glob -nocomplain $srcdir/$subdir/*.d]\n+\n+# All done.\n+dg-finish"}, {"sha": "c5603086b52f2aaab35d5189a37499c278986d6e", "filename": "gcc/testsuite/gdc.test/fail_compilation/fail_compilation.exp", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c76df72f1a916d0482d15e43656ddff724352705/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail_compilation.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c76df72f1a916d0482d15e43656ddff724352705/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail_compilation.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Ffail_compilation%2Ffail_compilation.exp?ref=c76df72f1a916d0482d15e43656ddff724352705", "patch": "@@ -0,0 +1,30 @@\n+# Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# Fail compilation tests for the D2 testsuite.\n+\n+# Load support procs.\n+load_lib gdc-dg.exp\n+load_lib gdc-utils.exp\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+gdc-do-test [glob -nocomplain $srcdir/$subdir/*.d]\n+\n+# All done.\n+dg-finish"}, {"sha": "af5d749f3b0b76513b68639d2e298f0eb057daec", "filename": "gcc/testsuite/gdc.test/runnable/runnable.exp", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c76df72f1a916d0482d15e43656ddff724352705/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Frunnable.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c76df72f1a916d0482d15e43656ddff724352705/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Frunnable.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.test%2Frunnable%2Frunnable.exp?ref=c76df72f1a916d0482d15e43656ddff724352705", "patch": "@@ -0,0 +1,35 @@\n+# Copyright (C) 2020 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+#\n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+#\n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# Runnable tests for the D2 testsuite.\n+\n+# Load support procs.\n+load_lib gdc-dg.exp\n+load_lib gdc-utils.exp\n+\n+# If the D runtime library is missing, bail.\n+if { ![check_effective_target_d_runtime] } {\n+    return\n+}\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+gdc-do-test [glob -nocomplain $srcdir/$subdir/*.d]\n+\n+# All done.\n+dg-finish"}, {"sha": "298c6a733a6ad4a25c09bc32296ba8a0b052a385", "filename": "gcc/testsuite/lib/gdc-utils.exp", "status": "renamed", "additions": 11, "deletions": 30, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c76df72f1a916d0482d15e43656ddff724352705/gcc%2Ftestsuite%2Flib%2Fgdc-utils.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c76df72f1a916d0482d15e43656ddff724352705/gcc%2Ftestsuite%2Flib%2Fgdc-utils.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgdc-utils.exp?ref=c76df72f1a916d0482d15e43656ddff724352705", "patch": "@@ -15,8 +15,6 @@\n # <http://www.gnu.org/licenses/>.\n \n # Test using the DMD testsuite.\n-# Load support procs.\n-load_lib gdc-dg.exp\n \n #\n # Convert DMD arguments to GDC equivalent\n@@ -183,7 +181,7 @@ proc gdc-copy-extra { base extra } {\n #   DISABLED:\t\tNot handled.\n #\n \n-proc dmd2dg { base test } {\n+proc gdc-convert-test { base test } {\n     global DEFAULT_DFLAGS\n     global PERMUTE_ARGS\n     global GDC_EXECUTE_ARGS\n@@ -353,9 +351,11 @@ proc gdc-permute-options { options } {\n     return $result\n }\n \n+#\n+# Main loop for running all tests for the subdirectory in gdc.test\n+#\n \n-proc gdc-do-test { } {\n-    global srcdir subdir\n+proc gdc-do-test { testcases } {\n     global dg-do-what-default\n     global verbose\n \n@@ -375,46 +375,32 @@ proc gdc-do-test { } {\n     # Additional arguments for gdc_load\n     global GDC_EXECUTE_ARGS\n \n-    # Initialize `dg'.\n-    dg-init\n-\n     # Allow blank linkes in output for all of gdc.test.\n     global allow_blank_lines\n     set save_allow_blank_lines $allow_blank_lines\n     if { !$allow_blank_lines } {\n \tset allow_blank_lines 2\n     }\n \n-    # Create gdc.test link so test names include that subdir.\n-    catch { file link $subdir . }\n+    set saved-dg-do-what-default ${dg-do-what-default}\n \n     # Main loop.\n \n     # set verbose 1\n     # set dg-final-code \"\"\n     # Find all tests and pass to routine.\n-    foreach test [lsort [find $srcdir/$subdir *]] {\n+    foreach test $testcases {\n \tregexp -- \"(.*)/(.+)/(.+)\\.(.+)$\" $test match base dir name ext\n \n-\t# Skip invalid test directory\n-\tif { [lsearch \"runnable compilable fail_compilation\" $dir] == -1 } {\n-\t    continue\n-\t}\n-\n-\t# Skip invalid test extensions\n-\tif { [lsearch \"d\" $ext] == -1 } {\n-\t    continue\n-\t}\n-\n \t# Convert to DG test.\n \tset imports [format \"-I%s/%s\" $base $dir]\n \tset cleanup_extra_files \"\"\n-\t# Include $subdir prefix so test names follow DejaGnu conventions.\n-\tset filename \"$subdir/[dmd2dg $base $dir/$name.$ext]\"\n+\tset filename \"[gdc-convert-test $base $dir/$name.$ext]\"\n \n \tif { $dir == \"runnable\" } {\n \t    append PERMUTE_ARGS \" $SHARED_OPTION\"\n \t}\n+\n \tset options [gdc-permute-options [lsort -unique $PERMUTE_ARGS]]\n \n \tswitch $dir {\n@@ -454,16 +440,11 @@ proc gdc-do-test { } {\n \n \t# Cleanup test directory.\n \tforeach srcfile $cleanup_extra_files {\n-\t    file delete $subdir/$srcfile\n+\t    file delete $srcfile\n \t}\n \tfile delete $filename\n     }\n \n+    set dg-do-what-default ${saved-dg-do-what-default}\n     set allow_blank_lines $save_allow_blank_lines\n-\n-    # All done.\n-    dg-finish\n }\n-\n-gdc-do-test\n-", "previous_filename": "gcc/testsuite/gdc.test/gdc-test.exp"}]}