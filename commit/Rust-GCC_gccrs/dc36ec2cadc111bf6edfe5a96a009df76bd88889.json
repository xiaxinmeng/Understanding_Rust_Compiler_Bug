{"sha": "dc36ec2cadc111bf6edfe5a96a009df76bd88889", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGMzNmVjMmNhZGMxMTFiZjZlZGZlNWE5NmEwMDlkZjc2YmQ4ODg4OQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2000-09-20T20:06:55Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2000-09-20T20:06:55Z"}, "message": "gcc.c (modify_target): New variable and struct.\n\n\t* gcc.c (modify_target): New variable and struct.\n\t(process_command): Handle MODIFY_TARGET_NAME.\n\t* tm.texi (MODIFY_TARGET_NAME): Add documentation for new macro.\n\t* config/pa/pa.h (MODIFY_TARGET_NAME): New macro.\n\nFrom-SVN: r36555", "tree": {"sha": "daffb6dff669c55643880060479f59d766bbffb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/daffb6dff669c55643880060479f59d766bbffb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dc36ec2cadc111bf6edfe5a96a009df76bd88889", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc36ec2cadc111bf6edfe5a96a009df76bd88889", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dc36ec2cadc111bf6edfe5a96a009df76bd88889", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dc36ec2cadc111bf6edfe5a96a009df76bd88889/comments", "author": null, "committer": null, "parents": [{"sha": "5fa7c8cec4c4d452a4283b9a52b9de9b2e5211b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5fa7c8cec4c4d452a4283b9a52b9de9b2e5211b7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5fa7c8cec4c4d452a4283b9a52b9de9b2e5211b7"}], "stats": {"total": 111, "additions": 111, "deletions": 0}, "files": [{"sha": "2fd3cba4c8fc7412a77720cd67422bd42b3a54ce", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc36ec2cadc111bf6edfe5a96a009df76bd88889/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc36ec2cadc111bf6edfe5a96a009df76bd88889/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dc36ec2cadc111bf6edfe5a96a009df76bd88889", "patch": "@@ -1,5 +1,10 @@\n Wed Sep 20 15:39:14 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n+\t* gcc.c (modify_target): New variable and struct.\n+\t(process_command): Handle MODIFY_TARGET_NAME.\n+\t* tm.texi (MODIFY_TARGET_NAME): Add documentation for new macro.\n+\t* config/pa/pa.h (MODIFY_TARGET_NAME): New macro.\n+\n \t* c-decl.c (finish_decl): Add else's to avoid referencing\n \tTYPE_DOMAIN of an ERROR_MARK.\n "}, {"sha": "d1ce1d82fee948098632c796071b69393864b306", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc36ec2cadc111bf6edfe5a96a009df76bd88889/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc36ec2cadc111bf6edfe5a96a009df76bd88889/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=dc36ec2cadc111bf6edfe5a96a009df76bd88889", "patch": "@@ -326,6 +326,15 @@ extern int target_flags;\n #define LIB_SPEC \"%{!p:%{!pg:-lc}}%{p:-lc_p}%{pg:-lc_p}\"\n #endif\n \n+/* This macro defines command-line switches that modify the default\n+   target name.\n+\n+   The definition is be an initializer for an array of structures.  Each\n+   array element has have three elements: the switch name, one of the\n+   enumeration codes ADD or DELETE to indicate whether the string should be\n+   inserted or deleted, and the string to be inserted or deleted. */\n+#define MODIFY_TARGET_NAME {{\"-32\", DELETE, \"64\"}, {\"-64\", ADD, \"64\"}}\n+\n /* Make gcc agree with <machine/ansi.h> */\n \n #define SIZE_TYPE \"unsigned int\""}, {"sha": "9884ff767a4f3d7ed9b5b99d4bcd1abeb60b2800", "filename": "gcc/gcc.c", "status": "modified", "additions": 71, "deletions": 0, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc36ec2cadc111bf6edfe5a96a009df76bd88889/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc36ec2cadc111bf6edfe5a96a009df76bd88889/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=dc36ec2cadc111bf6edfe5a96a009df76bd88889", "patch": "@@ -164,6 +164,21 @@ static const char *cross_compile = \"1\";\n static const char *cross_compile = \"0\";\n #endif\n \n+#ifdef MODIFY_TARGET_NAME\n+\n+/* Information on how to alter the target name based on a command-line\n+   switch.  The only case we support now is simply appending or deleting a\n+   string to or from the end of the first part of the configuration name.  */\n+\n+struct modify_target\n+{\n+  const char *sw;\n+  enum add_del {ADD, DELETE} add_del;\n+  const char *str;\n+}\n+modify_target[] = MODIFY_TARGET_NAME;\n+#endif\n+ \n /* The number of errors that have occurred; the link phase will not be\n    run if this is non-zero.  */\n static int error_count = 0;\n@@ -2832,13 +2847,17 @@ process_command (argc, argv)\n      const char *const *argv;\n {\n   register int i;\n+  unsigned int j;\n   const char *temp;\n   char *temp1;\n   const char *spec_lang = 0;\n   int last_language_n_infiles;\n   int have_c = 0;\n   int have_o = 0;\n   int lang_n_infiles = 0;\n+#ifdef MODIFY_TARGET_NAME\n+  int is_modify_target_name;\n+#endif\n \n   GET_ENV_PATH_LIST (gcc_exec_prefix, \"GCC_EXEC_PREFIX\");\n \n@@ -3005,6 +3024,7 @@ process_command (argc, argv)\n \n   /* Scan argv twice.  Here, the first time, just count how many switches\n      there will be in their vector, and how many input files in theirs.\n+     Also parse any switches that determine the configuration name, such as -b.\n      Here we also parse the switches that cc itself uses (e.g. -v).  */\n \n   for (i = 1; i < argc; i++)\n@@ -3316,6 +3336,46 @@ process_command (argc, argv)\n \n \t    default:\n \t    normal_switch:\n+\n+#ifdef MODIFY_TARGET_NAME\n+\t      is_modify_target_name = 0;\n+\n+\t      for (j = 0;\n+\t\t   j < sizeof modify_target / sizeof modify_target[0]; j++)\n+\t\tif (! strcmp (argv[i], modify_target[j].sw))\n+\t\t  {\n+\t\t    char *new_name\n+\t\t      = (char *) xmalloc (strlen (modify_target[j].str)\n+\t\t\t\t\t  + strlen (spec_machine));\n+\t\t    const char *p, *r;\n+\t\t    char *q;\n+\t\t    int made_addition = 0;\n+\n+\t\t    is_modify_target_name = 1;\n+\t\t    for (p = spec_machine, q = new_name; *p != 0; )\n+\t\t      {\n+\t\t\tif (modify_target[j].add_del == DELETE\n+\t\t\t    && (! strncmp (q, modify_target[j].str,\n+\t\t\t\t\t   strlen (modify_target[j].str))))\n+\t\t\t  p += strlen (modify_target[j].str);\n+\t\t\telse if (modify_target[j].add_del == ADD\n+\t\t\t\t && ! made_addition && *p == '-')\n+\t\t\t  {\n+\t\t\t    for (r = modify_target[j].str; *r != 0; )\n+\t\t\t      *q++ = *r++;\n+\t\t\t    made_addition = 1;\n+\t\t\t  }\n+\n+\t\t\t*q++ = *p++;\n+\t\t      }\n+\n+\t\t    spec_machine = new_name;\n+\t\t  }\n+\n+\t      if (is_modify_target_name)\n+\t\tbreak;\n+#endif\t\t      \n+\n \t      n_switches++;\n \n \t      if (SWITCH_TAKES_ARG (c) > (p[1] != 0))\n@@ -3413,6 +3473,17 @@ process_command (argc, argv)\n   for (i = 1; i < argc; i++)\n     {\n       /* Just skip the switches that were handled by the preceding loop.  */\n+#ifdef MODIFY_TARGET_NAME\n+      is_modify_target_name = 0;\n+\n+      for (j = 0; j < sizeof modify_target / sizeof modify_target[0]; j++)\n+\tif (! strcmp (argv[i], modify_target[j].sw))\n+\t  is_modify_target_name = 1;\n+\n+      if (is_modify_target_name)\n+\t;\n+      else\n+#endif\n       if (! strncmp (argv[i], \"-Wa,\", 4))\n \t;\n       else if (! strncmp (argv[i], \"-Wp,\", 4))"}, {"sha": "ec2da6bdb0ca3c24ebca9bd8d3baf08bd8e68dff", "filename": "gcc/tm.texi", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dc36ec2cadc111bf6edfe5a96a009df76bd88889/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dc36ec2cadc111bf6edfe5a96a009df76bd88889/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=dc36ec2cadc111bf6edfe5a96a009df76bd88889", "patch": "@@ -387,6 +387,32 @@ comes before @code{SYSTEM_INCLUDE_DIR} in the search order.\n Cross compilers do not use this macro and do not search either\n @file{/usr/local/include} or its replacement.\n \n+@findex MODIFY_TARGET_NAME\n+@item MODIFY_TARGET_NAME\n+Define this macro if you with to define command-line switches that modify the\n+default target name\n+\n+For each switch, you can include a string to be appended to the first\n+part of the configuration name or a string to be deleted from the\n+configuration name, if present.  The definition should be an initializer\n+for an array of structures.  Each array element should have three\n+elements: the switch name (a string constant, including the initial\n+dash), one of the enumeration codes @code{ADD} or @code{DELETE} to\n+indicate whether the string should be inserted or deleted, and the string\n+to be inserted or deleted (a string constant).\n+\n+For example, on a machine where @samp{64} at the end of the\n+configuration name denotes a 64-bit target and you want the @samp{-32}\n+and @samp{-64} switches to select between 32- and 64-bit targets, you would\n+code\n+\n+@smallexample\n+#define MODIFY_TARGET_NAME \\\n+  @{ @{ \"-32\", DELETE, \"64\"@}, \\\n+     @{\"-64\", ADD, \"64\"@}@}\n+@end smallexample\n+\n+\n @findex SYSTEM_INCLUDE_DIR\n @item SYSTEM_INCLUDE_DIR\n Define this macro as a C string constant if you wish to specify a"}]}