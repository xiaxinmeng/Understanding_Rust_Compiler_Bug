{"sha": "d8e978472c145fe7052390c671a59f4d008e6f06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhlOTc4NDcyYzE0NWZlNzA1MjM5MGM2NzFhNTlmNGQwMDhlNmYwNg==", "commit": {"author": {"name": "Andrew Haley", "email": "aph@redhat.com", "date": "2005-03-17T14:43:26Z"}, "committer": {"name": "Andrew Haley", "email": "aph@gcc.gnu.org", "date": "2005-03-17T14:43:26Z"}, "message": "expr.c (expand_java_arrayload): Don't generate a NullPointerException based on the type of the node.\n\n2005-03-16  Andrew Haley  <aph@redhat.com>\n\n        * expr.c (expand_java_arrayload): Don't generate a\n        NullPointerException based on the type of the node.\n        (build_java_array_length_access): Likewise.\n\nFrom-SVN: r96611", "tree": {"sha": "e703a818f159b5f8fd0323573e8c25eae2615111", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e703a818f159b5f8fd0323573e8c25eae2615111"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8e978472c145fe7052390c671a59f4d008e6f06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8e978472c145fe7052390c671a59f4d008e6f06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8e978472c145fe7052390c671a59f4d008e6f06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8e978472c145fe7052390c671a59f4d008e6f06/comments", "author": {"login": "theRealAph", "id": 254637, "node_id": "MDQ6VXNlcjI1NDYzNw==", "avatar_url": "https://avatars.githubusercontent.com/u/254637?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theRealAph", "html_url": "https://github.com/theRealAph", "followers_url": "https://api.github.com/users/theRealAph/followers", "following_url": "https://api.github.com/users/theRealAph/following{/other_user}", "gists_url": "https://api.github.com/users/theRealAph/gists{/gist_id}", "starred_url": "https://api.github.com/users/theRealAph/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theRealAph/subscriptions", "organizations_url": "https://api.github.com/users/theRealAph/orgs", "repos_url": "https://api.github.com/users/theRealAph/repos", "events_url": "https://api.github.com/users/theRealAph/events{/privacy}", "received_events_url": "https://api.github.com/users/theRealAph/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c9982a3fcff659534e0e1a68a8ab358e4855bc2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9982a3fcff659534e0e1a68a8ab358e4855bc2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9982a3fcff659534e0e1a68a8ab358e4855bc2b"}], "stats": {"total": 35, "additions": 11, "deletions": 24}, "files": [{"sha": "38edfef09cb8af159dfa1ef813cac3c6afbc6f45", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8e978472c145fe7052390c671a59f4d008e6f06/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8e978472c145fe7052390c671a59f4d008e6f06/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=d8e978472c145fe7052390c671a59f4d008e6f06", "patch": "@@ -1,3 +1,9 @@\n+2005-03-16  Andrew Haley  <aph@redhat.com>\n+\n+\t* expr.c (expand_java_arrayload): Don't generate a\n+\tNullPointerException based on the type of the node.\n+\t(build_java_array_length_access): Likewise.\n+\n 2005-03-15  Zack Weinberg  <zack@codesourcery.com>\n \n \t* Make-lang.in (TEXI_JAVA_FILES): Add gcc-vers.texi."}, {"sha": "ee67c223cb5e1a12a7b11c22957861dd734f2585", "filename": "gcc/java/expr.c", "status": "modified", "additions": 5, "deletions": 24, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8e978472c145fe7052390c671a59f4d008e6f06/gcc%2Fjava%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8e978472c145fe7052390c671a59f4d008e6f06/gcc%2Fjava%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fexpr.c?ref=d8e978472c145fe7052390c671a59f4d008e6f06", "patch": "@@ -818,15 +818,6 @@ build_java_array_length_access (tree node)\n   tree array_type = TREE_TYPE (type);\n   HOST_WIDE_INT length;\n \n-  /* JVM spec: If the arrayref is null, the arraylength instruction\n-     throws a NullPointerException.  The only way we could get a node\n-     of type ptr_type_node at this point is `aconst_null; arraylength'\n-     or something equivalent.  */\n-  if (type == ptr_type_node)\n-    return build3 (CALL_EXPR, int_type_node, \n-\t\t   build_address_of (soft_nullpointer_node),\n-\t\t   NULL_TREE, NULL_TREE);\n-\n   if (!is_array_type_p (type))\n     {\n       /* With the new verifier, we will see an ordinary pointer type\n@@ -1229,21 +1220,11 @@ expand_java_arrayload (tree lhs_type_node)\n   index_node = save_expr (index_node);\n   array_node = save_expr (array_node);\n \n-  if (TREE_TYPE (array_node) == ptr_type_node)\n-    /* The only way we could get a node of type ptr_type_node at this\n-       point is `aconst_null; arraylength' or something equivalent, so\n-       unconditionally throw NullPointerException.  */\n-    load_node = build3 (CALL_EXPR, lhs_type_node, \n-\t\t\tbuild_address_of (soft_nullpointer_node),\n-\t\t\tNULL_TREE, NULL_TREE);\n-  else\n-    {\n-      lhs_type_node = build_java_check_indexed_type (array_node,\n-\t\t\t\t\t\t     lhs_type_node);\n-      load_node = build_java_arrayaccess (array_node,\n-\t\t\t\t\t  lhs_type_node,\n-\t\t\t\t\t  index_node);\n-    }\n+  lhs_type_node = build_java_check_indexed_type (array_node,\n+\t\t\t\t\t\t lhs_type_node);\n+  load_node = build_java_arrayaccess (array_node,\n+\t\t\t\t      lhs_type_node,\n+\t\t\t\t      index_node);\n   if (INTEGRAL_TYPE_P (lhs_type_node) && TYPE_PRECISION (lhs_type_node) <= 32)\n     load_node = fold (build1 (NOP_EXPR, int_type_node, load_node));\n   push_value (load_node);"}]}