{"sha": "8fa18c06a2977b0ef00c440f5f103f612ce6dc61", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGZhMThjMDZhMjk3N2IwZWYwMGM0NDBmNWYxMDNmNjEyY2U2ZGM2MQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2016-10-17T19:29:00Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2016-10-17T19:29:00Z"}, "message": "c-warn.c (find_array_ref_with_const_idx_r): Remove parameter names.\n\n\t* c-warn.c (find_array_ref_with_const_idx_r): Remove parameter names.\n\tReturn immediately when finding a match.\n\t(warn_tautological_cmp): Remove a boolean variable that is no longer\n\tneeded.\n\nFrom-SVN: r241278", "tree": {"sha": "07e0f94fbad6ec0f3f5f4718640fc4a5bb1db808", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07e0f94fbad6ec0f3f5f4718640fc4a5bb1db808"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8fa18c06a2977b0ef00c440f5f103f612ce6dc61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fa18c06a2977b0ef00c440f5f103f612ce6dc61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fa18c06a2977b0ef00c440f5f103f612ce6dc61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fa18c06a2977b0ef00c440f5f103f612ce6dc61/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1d30acf68750f2617c3779176781a26b0b50cfa8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d30acf68750f2617c3779176781a26b0b50cfa8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d30acf68750f2617c3779176781a26b0b50cfa8"}], "stats": {"total": 20, "additions": 11, "deletions": 9}, "files": [{"sha": "d5e90905fe8b0902c30fb557cc2b128b30b7e463", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa18c06a2977b0ef00c440f5f103f612ce6dc61/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa18c06a2977b0ef00c440f5f103f612ce6dc61/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=8fa18c06a2977b0ef00c440f5f103f612ce6dc61", "patch": "@@ -1,3 +1,10 @@\n+2016-10-17  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-warn.c (find_array_ref_with_const_idx_r): Remove parameter names.\n+\tReturn immediately when finding a match.\n+\t(warn_tautological_cmp): Remove a boolean variable that is no longer\n+\tneeded.\n+\n 2016-10-17  Marek Polacek  <polacek@redhat.com>\n \n \t* c-attribs.c: New file."}, {"sha": "904f6d3cf4f854080fbd4fbcec687c4fdcffa5e1", "filename": "gcc/c-family/c-warn.c", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8fa18c06a2977b0ef00c440f5f103f612ce6dc61/gcc%2Fc-family%2Fc-warn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8fa18c06a2977b0ef00c440f5f103f612ce6dc61/gcc%2Fc-family%2Fc-warn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-warn.c?ref=8fa18c06a2977b0ef00c440f5f103f612ce6dc61", "patch": "@@ -256,17 +256,14 @@ warn_logical_operator (location_t location, enum tree_code code, tree type,\n    with constant indices.  */\n \n static tree\n-find_array_ref_with_const_idx_r (tree *expr_p, int *walk_subtrees, void *data)\n+find_array_ref_with_const_idx_r (tree *expr_p, int *, void *)\n {\n   tree expr = *expr_p;\n \n   if ((TREE_CODE (expr) == ARRAY_REF\n        || TREE_CODE (expr) == ARRAY_RANGE_REF)\n       && TREE_CODE (TREE_OPERAND (expr, 1)) == INTEGER_CST)\n-    {\n-      *(bool *) data = true;\n-      *walk_subtrees = 0;\n-    }\n+    return integer_type_node;\n \n   return NULL_TREE;\n }\n@@ -312,10 +309,8 @@ warn_tautological_cmp (location_t loc, enum tree_code code, tree lhs, tree rhs)\n     {\n       /* Don't warn about array references with constant indices;\n \t these are likely to come from a macro.  */\n-      bool found = false;\n-      walk_tree_without_duplicates (&lhs, find_array_ref_with_const_idx_r,\n-\t\t\t\t    &found);\n-      if (found)\n+      if (walk_tree_without_duplicates (&lhs, find_array_ref_with_const_idx_r,\n+\t\t\t\t\tNULL))\n \treturn;\n       const bool always_true = (code == EQ_EXPR || code == LE_EXPR\n \t\t\t\t|| code == GE_EXPR || code == UNLE_EXPR"}]}