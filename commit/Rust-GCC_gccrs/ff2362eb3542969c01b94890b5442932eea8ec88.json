{"sha": "ff2362eb3542969c01b94890b5442932eea8ec88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYyMzYyZWIzNTQyOTY5YzAxYjk0ODkwYjU0NDI5MzJlZWE4ZWM4OA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2015-03-22T22:50:00Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2015-03-22T22:50:00Z"}, "message": "Speed-up def_builtin_const (ix86_valid_target_attribute).\n\n\t* config/i386/i386.c (def_builtin): Set deferred_isa_values for\n\tmasks that can potentially include a builtin.\n\t(ix86_add_new_builtins): Introduce fast filter for isa values\n\tthat cannot trigger builtin inclusion.\n\nFrom-SVN: r221577", "tree": {"sha": "d50393c051ebdb9637a893f752a3e08fa006f3cb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d50393c051ebdb9637a893f752a3e08fa006f3cb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff2362eb3542969c01b94890b5442932eea8ec88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff2362eb3542969c01b94890b5442932eea8ec88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff2362eb3542969c01b94890b5442932eea8ec88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff2362eb3542969c01b94890b5442932eea8ec88/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3ab933594942029c75a9f966ba949c8a0ead1de8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ab933594942029c75a9f966ba949c8a0ead1de8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ab933594942029c75a9f966ba949c8a0ead1de8"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "7e05b814765096406f59fea60b889f8010d64d06", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2362eb3542969c01b94890b5442932eea8ec88/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2362eb3542969c01b94890b5442932eea8ec88/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff2362eb3542969c01b94890b5442932eea8ec88", "patch": "@@ -1,3 +1,12 @@\n+2015-03-22  Martin Liska  <mliska@suse.cz>\n+\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/i386/i386.c (def_builtin): Set deferred_isa_values for\n+\tmasks that can potentially include a builtin.\n+\t(ix86_add_new_builtins): Introduce fast filter for isa values\n+\tthat cannot trigger builtin inclusion.\n+\n 2015-03-22  Martin Liska  <mliska@suse.cz>\n \n \t* ipa-icf.c (sem_item::update_hash_by_addr_refs): New function."}, {"sha": "82a48482be6dfdce2dc8a02da1d21cb0fb33585b", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff2362eb3542969c01b94890b5442932eea8ec88/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff2362eb3542969c01b94890b5442932eea8ec88/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=ff2362eb3542969c01b94890b5442932eea8ec88", "patch": "@@ -30588,6 +30588,8 @@ struct builtin_isa {\n \n static struct builtin_isa ix86_builtins_isa[(int) IX86_BUILTIN_MAX];\n \n+/* Bits that can still enable any inclusion of a builtin.  */\n+static HOST_WIDE_INT deferred_isa_values = 0;\n \n /* Add an ix86 target builtin function with CODE, NAME and TYPE.  Save the MASK\n    of which isa_flags to use in the ix86_builtins_isa array.  Stores the\n@@ -30631,6 +30633,9 @@ def_builtin (HOST_WIDE_INT mask, const char *name,\n \t}\n       else\n \t{\n+\t  /* Just a MASK where set_and_not_built_p == true can potentially\n+\t     include a builtin.  */\n+\t  deferred_isa_values |= mask;\n \t  ix86_builtins[(int) code] = NULL_TREE;\n \t  ix86_builtins_isa[(int) code].tcode = tcode;\n \t  ix86_builtins_isa[(int) code].name = name;\n@@ -30666,6 +30671,12 @@ def_builtin_const (HOST_WIDE_INT mask, const char *name,\n static void\n ix86_add_new_builtins (HOST_WIDE_INT isa)\n {\n+  if ((isa & deferred_isa_values) == 0)\n+    return;\n+\n+  /* Bits in ISA value can be removed from potential isa values.  */\n+  deferred_isa_values &= ~isa;\n+\n   int i;\n   tree saved_current_target_pragma = current_target_pragma;\n   current_target_pragma = NULL_TREE;"}]}