{"sha": "4f81fba13e2c6e8a69618d9a27ceae482ebd954f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY4MWZiYTEzZTJjNmU4YTY5NjE4ZDlhMjdjZWFlNDgyZWJkOTU0Zg==", "commit": {"author": {"name": "Stephane Carrez", "email": "Stephane.Carrez@worldnet.fr", "date": "2001-11-25T16:45:22Z"}, "committer": {"name": "Stephane Carrez", "email": "ciceron@gcc.gnu.org", "date": "2001-11-25T16:45:22Z"}, "message": "m68hc11.md (peephole2): New peephole2 to optimize address computations.\n\n\t* config/m68hc11/m68hc11.md (peephole2): New peephole2 to optimize\n\taddress computations.\n\nFrom-SVN: r47323", "tree": {"sha": "95c913ce93135e0e58a8f9b14c3fc3d92b02cdea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95c913ce93135e0e58a8f9b14c3fc3d92b02cdea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f81fba13e2c6e8a69618d9a27ceae482ebd954f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f81fba13e2c6e8a69618d9a27ceae482ebd954f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f81fba13e2c6e8a69618d9a27ceae482ebd954f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f81fba13e2c6e8a69618d9a27ceae482ebd954f/comments", "author": null, "committer": null, "parents": [{"sha": "259ed6e2708ccb8f43c0089b11628a7d93048743", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/259ed6e2708ccb8f43c0089b11628a7d93048743", "html_url": "https://github.com/Rust-GCC/gccrs/commit/259ed6e2708ccb8f43c0089b11628a7d93048743"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "e6ec65b9b4e4e3892cb09553be4f0a4ebd4666a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f81fba13e2c6e8a69618d9a27ceae482ebd954f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f81fba13e2c6e8a69618d9a27ceae482ebd954f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f81fba13e2c6e8a69618d9a27ceae482ebd954f", "patch": "@@ -1,3 +1,8 @@\n+2001-11-25  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n+\n+\t* config/m68hc11/m68hc11.md (peephole2): New peephole2 to optimize\n+\taddress computations.\n+\n 2001-11-25  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n \n \t* config/m68hc11/m68hc11.c (d_register_operand): Must accept"}, {"sha": "f201e740895f3e82390128452f96bcf52f534196", "filename": "gcc/config/m68hc11/m68hc11.md", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f81fba13e2c6e8a69618d9a27ceae482ebd954f/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f81fba13e2c6e8a69618d9a27ceae482ebd954f/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68hc11%2Fm68hc11.md?ref=4f81fba13e2c6e8a69618d9a27ceae482ebd954f", "patch": "@@ -6102,6 +6102,32 @@\n ;;- Peepholes\n ;;--------------------------------------------------------------------\n \n+;;\n+;; Reorganize to optimize address computations.\n+;;\n+(define_peephole2\n+  [(set (match_operand:HI 0 \"hard_reg_operand\" \"\")\n+\t(match_operand:HI 1 \"const_int_operand\" \"\"))\n+   (set (match_dup 0)\n+\t(plus:HI (match_dup 0)\n+\t         (match_operand:HI 2 \"general_operand\" \"\")))]\n+  \"(INTVAL (operands[1]) >= -2 && INTVAL (operands[1]) <= 2)\"\n+  [(set (match_dup 0) (match_dup 2))\n+   (set (match_dup 0) (plus:HI (match_dup 0) (match_dup 1)))]\n+  \"\")\n+\n+;;\n+;; Reorganize address computation based on stack pointer.\n+;;\n+(define_peephole2\n+  [(set (match_operand:HI 0 \"hard_reg_operand\" \"\")\n+        (match_operand:HI 1 \"const_int_operand\" \"\"))\n+   (set (match_dup 0) (plus:HI (match_dup 0) (reg:HI SP_REGNUM)))]\n+  \"\"\n+  [(set (match_dup 0) (reg:HI SP_REGNUM))\n+   (set (match_dup 0) (plus:HI (match_dup 0) (match_dup 1)))]\n+  \"\")\n+\n ;;\n ;; This peephole catches the address computations generated by the reload\n ;; pass. "}]}