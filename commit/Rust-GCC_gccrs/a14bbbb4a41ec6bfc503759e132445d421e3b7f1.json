{"sha": "a14bbbb4a41ec6bfc503759e132445d421e3b7f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE0YmJiYjRhNDFlYzZiZmM1MDM3NTllMTMyNDQ1ZDQyMWUzYjdmMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-21T08:23:05Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-21T08:23:05Z"}, "message": "[multiple changes]\n\n2016-04-21  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_util.adb (Build_Procedure_Form): No action needed for\n\tsubprogram renamings since the backend can generate the call\n\tusing the renamed subprogram. This leaves the tree more clean\n\tto the backend.\n\t* exp_ch6.adb (Expand_Call): Extend previous patch for\n\trewritten-for-c entities to handle subprogram renamings.\n\t(Rewrite_Function_Call_For_C): Handle subprogram renamings.\n\n2016-04-21  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch13.adb: Code cleanup.\n\nFrom-SVN: r235307", "tree": {"sha": "43e4cdaf0e507db4df6ce030131201981a3b4903", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43e4cdaf0e507db4df6ce030131201981a3b4903"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a14bbbb4a41ec6bfc503759e132445d421e3b7f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a14bbbb4a41ec6bfc503759e132445d421e3b7f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a14bbbb4a41ec6bfc503759e132445d421e3b7f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a14bbbb4a41ec6bfc503759e132445d421e3b7f1/comments", "author": null, "committer": null, "parents": [{"sha": "17fd72cef4060b14c2cf363726261f820fdcab10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17fd72cef4060b14c2cf363726261f820fdcab10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17fd72cef4060b14c2cf363726261f820fdcab10"}], "stats": {"total": 49, "additions": 38, "deletions": 11}, "files": [{"sha": "c349a060dea4d5e8018ef28a0188204fe6af7075", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a14bbbb4a41ec6bfc503759e132445d421e3b7f1/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a14bbbb4a41ec6bfc503759e132445d421e3b7f1/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a14bbbb4a41ec6bfc503759e132445d421e3b7f1", "patch": "@@ -1,3 +1,17 @@\n+2016-04-21  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_util.adb (Build_Procedure_Form): No action needed for\n+\tsubprogram renamings since the backend can generate the call\n+\tusing the renamed subprogram. This leaves the tree more clean\n+\tto the backend.\n+\t* exp_ch6.adb (Expand_Call): Extend previous patch for\n+\trewritten-for-c entities to handle subprogram renamings.\n+\t(Rewrite_Function_Call_For_C): Handle subprogram renamings.\n+\n+2016-04-21  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb: Code cleanup.\n+\n 2016-04-21  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch6.adb (Analyze_Subprogram_Body_Helper): If the body is"}, {"sha": "d084c3791235bc45d354f44c63349a27c9462f89", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a14bbbb4a41ec6bfc503759e132445d421e3b7f1/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a14bbbb4a41ec6bfc503759e132445d421e3b7f1/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=a14bbbb4a41ec6bfc503759e132445d421e3b7f1", "patch": "@@ -703,10 +703,18 @@ package body Exp_Ch6 is\n                                   New_Occurrence_Of (Param_Id, Loc),\n                                 Expression =>\n                                   New_Occurrence_Of (Ret_Obj, Sloc (Stmt)));\n-                  Stmts   : constant List_Id :=\n-                              Statements (Handled_Statement_Sequence (Stmt));\n+                  Stmts   : List_Id;\n \n                begin\n+                  --  The extended return may just contain the declaration.\n+\n+                  if Present (Handled_Statement_Sequence (Stmt)) then\n+                     Stmts :=  Statements (Handled_Statement_Sequence (Stmt));\n+\n+                  else\n+                     Stmts := New_List;\n+                  end if;\n+\n                   Set_Assignment_OK (Name (Assign));\n \n                   Rewrite (Stmt,\n@@ -715,8 +723,7 @@ package body Exp_Ch6 is\n                         Return_Object_Declarations (Stmt),\n                       Handled_Statement_Sequence =>\n                         Make_Handled_Sequence_Of_Statements (Loc,\n-                          Statements =>\n-                            Statements (Handled_Statement_Sequence (Stmt)))));\n+                          Statements => Stmts)));\n \n                   Replace_Returns (Param_Id, Stmts);\n \n@@ -2682,19 +2689,22 @@ package body Exp_Ch6 is\n       if Modify_Tree_For_C\n         and then Nkind (Call_Node) = N_Function_Call\n         and then Is_Entity_Name (Name (Call_Node))\n-        and then Rewritten_For_C (Entity (Name (Call_Node)))\n+        and then Rewritten_For_C (Ultimate_Alias (Entity (Name (Call_Node))))\n       then\n          --  For internally generated calls ensure that they reference the\n          --  entity of the spec of the called function (needed since the\n          --  expander may generate calls using the entity of their body).\n          --  See for example Expand_Boolean_Operator().\n \n          if not (Comes_From_Source (Call_Node))\n-           and then Nkind (Unit_Declaration_Node (Entity (Name (Call_Node))))\n+           and then Nkind\n+                      (Unit_Declaration_Node\n+                        (Ultimate_Alias (Entity (Name (Call_Node)))))\n                       = N_Subprogram_Body\n          then\n             Set_Entity (Name (Call_Node),\n-              Rewritten_For_C_Func_Id (Entity (Name (Call_Node))));\n+              Rewritten_For_C_Func_Id\n+                (Ultimate_Alias (Entity (Name (Call_Node)))));\n          end if;\n \n          Rewrite_Function_Call_For_C (Call_Node);\n@@ -8419,7 +8429,7 @@ package body Exp_Ch6 is\n \n       --  Local variables\n \n-      Func_Id     : constant Entity_Id  := Entity (Name (N));\n+      Func_Id     : constant Entity_Id  := Ultimate_Alias (Entity (Name (N)));\n       Par         : constant Node_Id    := Parent (N);\n       Proc_Id     : constant Entity_Id  := Rewritten_For_C_Proc_Id (Func_Id);\n       Loc         : constant Source_Ptr := Sloc (Par);"}, {"sha": "190a1dcd6b086001cdb1e3e2a297ca12778a0efa", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a14bbbb4a41ec6bfc503759e132445d421e3b7f1/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a14bbbb4a41ec6bfc503759e132445d421e3b7f1/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=a14bbbb4a41ec6bfc503759e132445d421e3b7f1", "patch": "@@ -932,9 +932,12 @@ package body Exp_Util is\n       Proc_Decl    : Node_Id;\n \n    begin\n-      --  No action needed if this transformation was already done\n+      --  No action needed if this transformation was already done or in case\n+      --  of subprogram renaming declarations\n \n-      if Nkind (Specification (N)) = N_Procedure_Specification then\n+      if Nkind (Specification (N)) = N_Procedure_Specification\n+        or else Nkind (N) = N_Subprogram_Renaming_Declaration\n+      then\n          return;\n       end if;\n "}, {"sha": "352742aeae33712d3e2171076cb1943b8ac96b11", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a14bbbb4a41ec6bfc503759e132445d421e3b7f1/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a14bbbb4a41ec6bfc503759e132445d421e3b7f1/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=a14bbbb4a41ec6bfc503759e132445d421e3b7f1", "patch": "@@ -12613,7 +12613,7 @@ package body Sem_Ch13 is\n             if Nkind (Prefix (N)) = N_Identifier\n               and then Chars (Prefix (N)) /= Chars (E)\n             then\n-               Find_Selected_Component (Parent (N));\n+               Find_Selected_Component (N);\n             end if;\n \n             return Skip;"}]}