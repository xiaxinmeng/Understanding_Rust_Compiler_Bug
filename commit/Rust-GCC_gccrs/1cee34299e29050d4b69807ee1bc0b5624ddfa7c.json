{"sha": "1cee34299e29050d4b69807ee1bc0b5624ddfa7c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWNlZTM0Mjk5ZTI5MDUwZDRiNjk4MDdlZTFiYzBiNTYyNGRkZmE3Yw==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2009-05-07T08:36:43Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-05-07T08:36:43Z"}, "message": "[multiple changes]\n\n2009-05-07  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* config.guess: Sync with src.\n\nconfig:\n2009-05-07  Paolo Bonzini\n\n\tSync from src:\n\t2009-02-02  Doug Evans  <dje@google.com>\n\n\t* tcl.m4 (SC_PATH_TCLCONFIG): Don't exit 0 if tclconfig fails.\n\t(SC_PATH_TKCONFIG): Don't exit 0 if tkconfig fails.\n\t(SC_LOAD_TCLCONFIG): Quote all uses of TCL_BIN_DIR, it may contain\n\t\"# no Tcl configs found\".\n\t(SC_LOAD_TKCONFIG): Similarily for TK_BIN_DIR.\n\nFrom-SVN: r147225", "tree": {"sha": "a8db587a454ad0f7a287a58eba5cc30029107a87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8db587a454ad0f7a287a58eba5cc30029107a87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1cee34299e29050d4b69807ee1bc0b5624ddfa7c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cee34299e29050d4b69807ee1bc0b5624ddfa7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1cee34299e29050d4b69807ee1bc0b5624ddfa7c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1cee34299e29050d4b69807ee1bc0b5624ddfa7c/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0d50d55aa181e8ae94c2b397c01dd25096f0ae35", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d50d55aa181e8ae94c2b397c01dd25096f0ae35", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d50d55aa181e8ae94c2b397c01dd25096f0ae35"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "39ad00f9602bdc05e3fb5a46eae04387d79a1493", "filename": "ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cee34299e29050d4b69807ee1bc0b5624ddfa7c/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cee34299e29050d4b69807ee1bc0b5624ddfa7c/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=1cee34299e29050d4b69807ee1bc0b5624ddfa7c", "patch": "@@ -1,3 +1,7 @@\n+2009-05-07  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* config.guess: Sync with src.\n+\n 2009-05-07  Dave Korn  <dave.korn.cygwin@gmail.com>\n \n \t* configure.ac ($with_ppl):  Default to no if not supplied."}, {"sha": "b8cdd22573d584bb79d1c0d9f2c04e40da80f9c5", "filename": "config.guess", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cee34299e29050d4b69807ee1bc0b5624ddfa7c/config.guess", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cee34299e29050d4b69807ee1bc0b5624ddfa7c/config.guess", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config.guess?ref=1cee34299e29050d4b69807ee1bc0b5624ddfa7c", "patch": "@@ -1116,7 +1116,10 @@ EOF\n \t# Left here for compatibility:\n         # uname -m prints for DJGPP always 'pc', but it prints nothing about\n         # the processor, so we play safe by assuming i386.\n-\techo i386-pc-msdosdjgpp\n+\t# Note: whatever this is, it MUST be the same as what config.sub\n+\t# prints for the \"djgpp\" host, or else GDB configury will decide that\n+\t# this is a cross-build.\n+\techo i586-pc-msdosdjgpp\n         exit ;;\n     Intel:Mach:3*:*)\n \techo i386-pc-mach3"}, {"sha": "d670de4e37184996c20f691b38892e0cd890c793", "filename": "config/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cee34299e29050d4b69807ee1bc0b5624ddfa7c/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cee34299e29050d4b69807ee1bc0b5624ddfa7c/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=1cee34299e29050d4b69807ee1bc0b5624ddfa7c", "patch": "@@ -1,3 +1,14 @@\n+2009-05-07  Paolo Bonzini\n+\n+\tSync from src:\n+\t2009-02-02  Doug Evans  <dje@google.com>\n+\n+\t* tcl.m4 (SC_PATH_TCLCONFIG): Don't exit 0 if tclconfig fails.\n+\t(SC_PATH_TKCONFIG): Don't exit 0 if tkconfig fails.\n+\t(SC_LOAD_TCLCONFIG): Quote all uses of TCL_BIN_DIR, it may contain\n+\t\"# no Tcl configs found\".\n+\t(SC_LOAD_TKCONFIG): Similarily for TK_BIN_DIR.\n+\n 2009-04-09  Jakub Jelinek  <jakub@redhat.com>\n \n \t* lead-dot.m4: Change copyright header to refer to version"}, {"sha": "900a2ceb81ecaea15d1d6dacfab8c7566b35f468", "filename": "config/tcl.m4", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1cee34299e29050d4b69807ee1bc0b5624ddfa7c/config%2Ftcl.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1cee34299e29050d4b69807ee1bc0b5624ddfa7c/config%2Ftcl.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Ftcl.m4?ref=1cee34299e29050d4b69807ee1bc0b5624ddfa7c", "patch": "@@ -114,7 +114,6 @@ AC_DEFUN([SC_PATH_TCLCONFIG], [\n \tif test x\"${ac_cv_c_tclconfig}\" = x ; then\n \t    TCL_BIN_DIR=\"# no Tcl configs found\"\n \t    AC_MSG_WARN([Can't find Tcl configuration definitions])\n-\t    exit 0\n \telse\n \t    no_tcl=\n \t    TCL_BIN_DIR=${ac_cv_c_tclconfig}\n@@ -237,7 +236,6 @@ AC_DEFUN([SC_PATH_TKCONFIG], [\n \tif test x\"${ac_cv_c_tkconfig}\" = x ; then\n \t    TK_BIN_DIR=\"# no Tk configs found\"\n \t    AC_MSG_WARN([Can't find Tk configuration definitions])\n-\t    exit 0\n \telse\n \t    no_tk=\n \t    TK_BIN_DIR=${ac_cv_c_tkconfig}\n@@ -285,7 +283,7 @@ AC_DEFUN([SC_LOAD_TCLCONFIG], [\n     # of TCL_BUILD_LIB_SPEC. An extension should make use of TCL_LIB_SPEC\n     # instead of TCL_BUILD_LIB_SPEC since it will work with both an\n     # installed and uninstalled version of Tcl.\n-    if test -f ${TCL_BIN_DIR}/Makefile ; then\n+    if test -f \"${TCL_BIN_DIR}/Makefile\" ; then\n         TCL_LIB_SPEC=${TCL_BUILD_LIB_SPEC}\n         TCL_STUB_LIB_SPEC=${TCL_BUILD_STUB_LIB_SPEC}\n         TCL_STUB_LIB_PATH=${TCL_BUILD_STUB_LIB_PATH}\n@@ -295,7 +293,7 @@ AC_DEFUN([SC_LOAD_TCLCONFIG], [\n \t# against Tcl.framework installed in an arbitary location.\n \tcase ${TCL_DEFS} in\n \t    *TCL_FRAMEWORK*)\n-\t\tif test -f ${TCL_BIN_DIR}/${TCL_LIB_FILE}; then\n+\t\tif test -f \"${TCL_BIN_DIR}/${TCL_LIB_FILE}\"; then\n \t\t    for i in \"`cd ${TCL_BIN_DIR}; pwd`\" \\\n \t\t\t     \"`cd ${TCL_BIN_DIR}/../..; pwd`\"; do\n \t\t\tif test \"`basename \"$i\"`\" = \"${TCL_LIB_FILE}.framework\"; then\n@@ -304,7 +302,7 @@ AC_DEFUN([SC_LOAD_TCLCONFIG], [\n \t\t\tfi\n \t\t    done\n \t\tfi\n-\t\tif test -f ${TCL_BIN_DIR}/${TCL_STUB_LIB_FILE}; then\n+\t\tif test -f \"${TCL_BIN_DIR}/${TCL_STUB_LIB_FILE}\"; then\n \t\t    TCL_STUB_LIB_SPEC=\"-L${TCL_BIN_DIR} ${TCL_STUB_LIB_FLAG}\"\n \t\t    TCL_STUB_LIB_PATH=\"${TCL_BIN_DIR}/${TCL_STUB_LIB_FILE}\"\n \t\tfi\n@@ -368,7 +366,7 @@ AC_DEFUN([SC_LOAD_TKCONFIG], [\n     # of TK_BUILD_LIB_SPEC. An extension should make use of TK_LIB_SPEC\n     # instead of TK_BUILD_LIB_SPEC since it will work with both an\n     # installed and uninstalled version of Tcl.\n-    if test -f ${TK_BIN_DIR}/Makefile ; then\n+    if test -f \"${TK_BIN_DIR}/Makefile\" ; then\n         TK_LIB_SPEC=${TK_BUILD_LIB_SPEC}\n         TK_STUB_LIB_SPEC=${TK_BUILD_STUB_LIB_SPEC}\n         TK_STUB_LIB_PATH=${TK_BUILD_STUB_LIB_PATH}\n@@ -378,7 +376,7 @@ AC_DEFUN([SC_LOAD_TKCONFIG], [\n \t# against Tk.framework installed in an arbitary location.\n \tcase ${TK_DEFS} in\n \t    *TK_FRAMEWORK*)\n-\t\tif test -f ${TK_BIN_DIR}/${TK_LIB_FILE}; then\n+\t\tif test -f \"${TK_BIN_DIR}/${TK_LIB_FILE}\"; then\n \t\t    for i in \"`cd ${TK_BIN_DIR}; pwd`\" \\\n \t\t\t     \"`cd ${TK_BIN_DIR}/../..; pwd`\"; do\n \t\t\tif test \"`basename \"$i\"`\" = \"${TK_LIB_FILE}.framework\"; then\n@@ -387,7 +385,7 @@ AC_DEFUN([SC_LOAD_TKCONFIG], [\n \t\t\tfi\n \t\t    done\n \t\tfi\n-\t\tif test -f ${TK_BIN_DIR}/${TK_STUB_LIB_FILE}; then\n+\t\tif test -f \"${TK_BIN_DIR}/${TK_STUB_LIB_FILE}\"; then\n \t\t    TK_STUB_LIB_SPEC=\"-L${TK_BIN_DIR} ${TK_STUB_LIB_FLAG}\"\n \t\t    TK_STUB_LIB_PATH=\"${TK_BIN_DIR}/${TK_STUB_LIB_FILE}\"\n \t\tfi"}]}