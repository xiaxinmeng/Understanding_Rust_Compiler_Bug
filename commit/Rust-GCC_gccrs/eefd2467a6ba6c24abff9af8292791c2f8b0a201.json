{"sha": "eefd2467a6ba6c24abff9af8292791c2f8b0a201", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWVmZDI0NjdhNmJhNmMyNGFiZmY5YWY4MjkyNzkxYzJmOGIwYTIwMQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-20T11:34:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-11-20T11:34:09Z"}, "message": "[multiple changes]\n\n2014-11-20  Robert Dewar  <dewar@adacore.com>\n\n\t* inline.adb, sem_util.adb: Minor reformatting.\n\n2014-11-20  Pierre-Marie Derodat  <derodat@adacore.com>\n\n\t* uintp.h (UI_Eq): Declare.\n\t* urealp.h (Norm_Den): Declare.\n\t(Norm_Num): Declare.\n\t* exp_dbug.adb (Is_Handled_Scale_Factor): New.\n\t(Get_Encoded_Name): Do not output ___XF GNAT encodings\n\tfor fixed-point types when these can be handled by GCC's DWARF\n\tback-end.\n\n2014-11-20  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch13.db (Inherit_Aspects_At_Freeze_Point): Inherit parent\n\tSSO even if set through a pragma Default_Scalar_Storage_Order.\n\t* freeze.adb (Set_SSO_From_Default): For a type extension,\n\tdo not let the default SSO override the parent SSO.\n\t* gnat_rm.texi: document the above\n\nFrom-SVN: r217842", "tree": {"sha": "ac3d62b564971839fe093eecd087fc41b29f0529", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac3d62b564971839fe093eecd087fc41b29f0529"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eefd2467a6ba6c24abff9af8292791c2f8b0a201", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eefd2467a6ba6c24abff9af8292791c2f8b0a201", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eefd2467a6ba6c24abff9af8292791c2f8b0a201", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eefd2467a6ba6c24abff9af8292791c2f8b0a201/comments", "author": null, "committer": null, "parents": [{"sha": "697b781a68a969edaf76da0275c2decb8626a891", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/697b781a68a969edaf76da0275c2decb8626a891", "html_url": "https://github.com/Rust-GCC/gccrs/commit/697b781a68a969edaf76da0275c2decb8626a891"}], "stats": {"total": 180, "additions": 132, "deletions": 48}, "files": [{"sha": "826d174b81a57045afcffa1079915fa32498b17b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eefd2467a6ba6c24abff9af8292791c2f8b0a201/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eefd2467a6ba6c24abff9af8292791c2f8b0a201/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=eefd2467a6ba6c24abff9af8292791c2f8b0a201", "patch": "@@ -1,3 +1,25 @@\n+2014-11-20  Robert Dewar  <dewar@adacore.com>\n+\n+\t* inline.adb, sem_util.adb: Minor reformatting.\n+\n+2014-11-20  Pierre-Marie Derodat  <derodat@adacore.com>\n+\n+\t* uintp.h (UI_Eq): Declare.\n+\t* urealp.h (Norm_Den): Declare.\n+\t(Norm_Num): Declare.\n+\t* exp_dbug.adb (Is_Handled_Scale_Factor): New.\n+\t(Get_Encoded_Name): Do not output ___XF GNAT encodings\n+\tfor fixed-point types when these can be handled by GCC's DWARF\n+\tback-end.\n+\n+2014-11-20  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch13.db (Inherit_Aspects_At_Freeze_Point): Inherit parent\n+\tSSO even if set through a pragma Default_Scalar_Storage_Order.\n+\t* freeze.adb (Set_SSO_From_Default): For a type extension,\n+\tdo not let the default SSO override the parent SSO.\n+\t* gnat_rm.texi: document the above\n+\n 2014-11-20  Robert Dewar  <dewar@adacore.com>\n \n \t* a-stream.ads, a-reatim.ads, a-calend.ads, sinfo.ads, s-crtl.ads,"}, {"sha": "fde8c78ac435b1f3e438769b394143a76dd07357", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eefd2467a6ba6c24abff9af8292791c2f8b0a201/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eefd2467a6ba6c24abff9af8292791c2f8b0a201/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=eefd2467a6ba6c24abff9af8292791c2f8b0a201", "patch": "@@ -133,6 +133,10 @@ package body Exp_Dbug is\n    --  Determine whether the bounds of E match the size of the type. This is\n    --  used to determine whether encoding is required for a discrete type.\n \n+   function Is_Handled_Scale_Factor (U : Ureal) return Boolean;\n+   --  Determine whether the back-end can handle some scale factor. When it\n+   --  cannot, we have to output a GNAT encoding for the correspondig type.\n+\n    procedure Output_Homonym_Numbers_Suffix;\n    --  If homonym numbers are stored, then output them into Name_Buffer\n \n@@ -535,6 +539,27 @@ package body Exp_Dbug is\n          return Make_Null_Statement (Loc);\n    end Debug_Renaming_Declaration;\n \n+   -----------------------------\n+   -- Is_Handled_Scale_Factor --\n+   -----------------------------\n+\n+   function Is_Handled_Scale_Factor (U : Ureal) return Boolean is\n+   begin\n+      --  Keep in sync with gigi (see E_*_Fixed_Point_Type handling in\n+      --  decl.c:gnat_to_gnu_entity).\n+      if UI_Eq (Numerator (U), Uint_1) then\n+         if Rbase (U) = 2\n+            or else Rbase (U) = 10\n+         then\n+            return True;\n+         end if;\n+      end if;\n+\n+      return\n+        (UI_Is_In_Int_Range (Norm_Num (U))\n+         and then UI_Is_In_Int_Range (Norm_Den (U)));\n+   end Is_Handled_Scale_Factor;\n+\n    ----------------------\n    -- Get_Encoded_Name --\n    ----------------------\n@@ -593,9 +618,14 @@ package body Exp_Dbug is\n \n       Has_Suffix := True;\n \n-      --  Fixed-point case\n+      --  Fixed-point case: generate GNAT encodings when asked to or when we\n+      --  know the back-end will not be able to handle the scale factor.\n \n-      if Is_Fixed_Point_Type (E) then\n+      if Is_Fixed_Point_Type (E)\n+           and then\n+         (GNAT_Encodings /= DWARF_GNAT_Encodings_Minimal\n+            or else not Is_Handled_Scale_Factor (Small_Value (E)))\n+      then\n          Get_External_Name (E, True, \"XF_\");\n          Add_Real_To_Buffer (Delta_Value (E));\n "}, {"sha": "6d366f050f9cb306dcc63a5f7fab5340862c3491", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eefd2467a6ba6c24abff9af8292791c2f8b0a201/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eefd2467a6ba6c24abff9af8292791c2f8b0a201/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=eefd2467a6ba6c24abff9af8292791c2f8b0a201", "patch": "@@ -7695,8 +7695,17 @@ package body Freeze is\n \n    procedure Set_SSO_From_Default (T : Entity_Id) is\n    begin\n-      if (Is_Record_Type (T) or else Is_Array_Type (T))\n-        and then Is_Base_Type (T)\n+      --  Set default SSO for an array or record base type, except in the case\n+      --  of a type extension (which always inherits the SSO of its parent\n+      --  type).\n+\n+      if Is_Base_Type (T)\n+        and then (Is_Array_Type (T)\n+                    or else\n+                  (Is_Record_Type (T)\n+                     and then not (Is_Tagged_Type (T)\n+                                     and then\n+                                   Is_Derived_Type (T))))\n       then\n          if ((Bytes_Big_Endian and then SSO_Set_Low_By_Default (T))\n                or else"}, {"sha": "0320a0b46d06c99e021d66ed78aecf3143039d44", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eefd2467a6ba6c24abff9af8292791c2f8b0a201/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eefd2467a6ba6c24abff9af8292791c2f8b0a201/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=eefd2467a6ba6c24abff9af8292791c2f8b0a201", "patch": "@@ -2552,10 +2552,12 @@ pragma Default_Scalar_Storage_Order (High_Order_First | Low_Order_First);\n \n @noindent\n Normally if no explicit @code{Scalar_Storage_Order} is given for a record\n-type or array type, then the scalar storage order defaults to the ordinary\n-default for the target. But this default may be overridden using this pragma.\n-The pragma may appear as a configuration pragma, or locally within a package\n-spec or declarative part. In the latter case, it applies to all subsequent\n+type or array type, then the scalar storage order defaults to the native\n+order for the target. However, this default may be overridden using\n+this pragma (except for derived tagged types, which always default to\n+inheriting the scalar storage order of their parent). The pragma may\n+appear as a configuration pragma, or locally within a package spec or\n+declarative part.  In the latter case, it applies to all subsequent\n types declared within that package spec or declarative part.\n \n If this pragma is used as a configuration pragma which appears within a"}, {"sha": "d5e9ae99e8d87dc77b762647ab99a61991b6b66a", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 20, "deletions": 21, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eefd2467a6ba6c24abff9af8292791c2f8b0a201/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eefd2467a6ba6c24abff9af8292791c2f8b0a201/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=eefd2467a6ba6c24abff9af8292791c2f8b0a201", "patch": "@@ -1655,8 +1655,7 @@ package body Inline is\n             Body_To_Inline := Copy_Separate_Tree (N);\n          end if;\n \n-         --  Remove all aspects/pragmas that have no meaining in an inlined\n-         --  body.\n+         --  Remove all aspects/pragmas that have no meaning in an inlined body\n \n          Remove_Aspects_And_Pragmas (Body_To_Inline);\n \n@@ -3938,25 +3937,6 @@ package body Inline is\n       Append_New_Elmt (N, To => Backend_Calls);\n    end Register_Backend_Call;\n \n-   --------------------------\n-   -- Remove_Dead_Instance --\n-   --------------------------\n-\n-   procedure Remove_Dead_Instance (N : Node_Id) is\n-      J : Int;\n-\n-   begin\n-      J := 0;\n-      while J <= Pending_Instantiations.Last loop\n-         if Pending_Instantiations.Table (J).Inst_Node = N then\n-            Pending_Instantiations.Table (J).Inst_Node := Empty;\n-            return;\n-         end if;\n-\n-         J := J + 1;\n-      end loop;\n-   end Remove_Dead_Instance;\n-\n    --------------------------------\n    -- Remove_Aspects_And_Pragmas --\n    --------------------------------\n@@ -4016,4 +3996,23 @@ package body Inline is\n       Remove_Items (Declarations          (Body_Decl));\n    end Remove_Aspects_And_Pragmas;\n \n+   --------------------------\n+   -- Remove_Dead_Instance --\n+   --------------------------\n+\n+   procedure Remove_Dead_Instance (N : Node_Id) is\n+      J : Int;\n+\n+   begin\n+      J := 0;\n+      while J <= Pending_Instantiations.Last loop\n+         if Pending_Instantiations.Table (J).Inst_Node = N then\n+            Pending_Instantiations.Table (J).Inst_Node := Empty;\n+            return;\n+         end if;\n+\n+         J := J + 1;\n+      end loop;\n+   end Remove_Dead_Instance;\n+\n end Inline;"}, {"sha": "9c119a35f8bd51363d74ac7ecb7889b3a401d1fc", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 25, "deletions": 13, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eefd2467a6ba6c24abff9af8292791c2f8b0a201/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eefd2467a6ba6c24abff9af8292791c2f8b0a201/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=eefd2467a6ba6c24abff9af8292791c2f8b0a201", "patch": "@@ -3035,7 +3035,8 @@ package body Sem_Ch13 is\n                         --  evaluation of this aspect should be delayed to the\n                         --  freeze point (why???)\n \n-                        if No (Expr) or else Is_True (Static_Boolean (Expr))\n+                        if No (Expr)\n+                          or else Is_True (Static_Boolean (Expr))\n                         then\n                            Set_Uses_Lock_Free (E);\n                         end if;\n@@ -3725,8 +3726,7 @@ package body Sem_Ch13 is\n                end if;\n             end if;\n \n-            if not Check_Primitive_Function (Subp)\n-            then\n+            if not Check_Primitive_Function (Subp) then\n                Illegal_Indexing\n                  (\"Indexing aspect requires a function that applies to type&\");\n                return;\n@@ -3798,7 +3798,8 @@ package body Sem_Ch13 is\n                      (\"variable indexing must return a reference type\");\n                   return;\n \n-               elsif Is_Access_Constant (Etype (First_Discriminant (Ret_Type)))\n+               elsif Is_Access_Constant\n+                       (Etype (First_Discriminant (Ret_Type)))\n                then\n                   Illegal_Indexing\n                     (\"variable indexing must return an access to variable\");\n@@ -10882,7 +10883,7 @@ package body Sem_Ch13 is\n                Set_Has_Volatile_Components (Imp_Bas_Typ);\n             end if;\n \n-            --  Finalize_Storage_Only.\n+            --  Finalize_Storage_Only\n \n             if not Has_Rep_Pragma (Typ, Name_Finalize_Storage_Only, False)\n               and then Has_Rep_Pragma (Typ, Name_Finalize_Storage_Only)\n@@ -10900,28 +10901,39 @@ package body Sem_Ch13 is\n                Set_Universal_Aliasing (Imp_Bas_Typ);\n             end if;\n \n-            --  Record type specific aspects\n+            --  Bit_Order\n \n             if Is_Record_Type (Typ) then\n-\n-               --  Bit_Order\n-\n                if not Has_Rep_Item (Typ, Name_Bit_Order, False)\n                  and then Has_Rep_Item (Typ, Name_Bit_Order)\n                then\n                   Set_Reverse_Bit_Order (Bas_Typ,\n                     Reverse_Bit_Order (Entity (Name\n                       (Get_Rep_Item (Typ, Name_Bit_Order)))));\n                end if;\n+            end if;\n+\n+            --  Scalar_Storage_Order (first subtypes only)\n+\n+            if (Is_Record_Type (Typ) or else Is_Array_Type (Typ))\n+                 and then\n+               Is_First_Subtype (Typ)\n+            then\n \n-               --  Scalar_Storage_Order\n+               --  For a type extension, always inherit from parent; otherwise\n+               --  inherit if no default applies. Note: we do not check for\n+               --  an explicit rep item on the parent type when inheriting,\n+               --  because the parent SSO may itself have been set by default.\n \n                if not Has_Rep_Item (Typ, Name_Scalar_Storage_Order, False)\n-                 and then Has_Rep_Item (Typ, Name_Scalar_Storage_Order)\n+                 and then (Is_Tagged_Type (Bas_Typ)\n+                             or else\n+                           not (SSO_Set_Low_By_Default  (Bas_Typ)\n+                                  or else\n+                                SSO_Set_High_By_Default (Bas_Typ)))\n                then\n                   Set_Reverse_Storage_Order (Bas_Typ,\n-                    Reverse_Storage_Order (Entity (Name\n-                      (Get_Rep_Item (Typ, Name_Scalar_Storage_Order)))));\n+                    Reverse_Storage_Order (First_Subtype (Etype (Bas_Typ))));\n \n                   --  Clear default SSO indications, since the inherited aspect\n                   --  which was set explicitly overrides the default."}, {"sha": "45d306600ad518a78914425f6ab6f78372204016", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eefd2467a6ba6c24abff9af8292791c2f8b0a201/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eefd2467a6ba6c24abff9af8292791c2f8b0a201/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=eefd2467a6ba6c24abff9af8292791c2f8b0a201", "patch": "@@ -5966,10 +5966,10 @@ package body Sem_Util is\n             --  no longer a source construct, but it must still be recognized.\n \n             elsif Comes_From_Source (Decl)\n-              or else (Nkind_In (Decl, N_Subprogram_Body,\n-                                       N_Subprogram_Declaration)\n-                         and then Is_Expression_Function\n-                                    (Defining_Entity (Decl)))\n+              or else\n+                (Nkind_In (Decl, N_Subprogram_Body,\n+                                 N_Subprogram_Declaration)\n+                  and then Is_Expression_Function (Defining_Entity (Decl)))\n             then\n                exit;\n             end if;"}, {"sha": "1f4e7a3e7bf6c83beb3dc387cd0c9b137f7240b6", "filename": "gcc/ada/uintp.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eefd2467a6ba6c24abff9af8292791c2f8b0a201/gcc%2Fada%2Fuintp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eefd2467a6ba6c24abff9af8292791c2f8b0a201/gcc%2Fada%2Fuintp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fuintp.h?ref=eefd2467a6ba6c24abff9af8292791c2f8b0a201", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *            Copyright (C) 1992-2011, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 1992-2014, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -79,6 +79,10 @@ typedef struct {const int *Array; Vector_Template *Bounds; }\n #define Vector_To_Uint uintp__vector_to_uint\n extern Uint Vector_To_Uint\t\t(Int_Vector, Boolean);\n \n+/* Compare integer values for equality.  */\n+#define UI_Eq uintp__ui_eq\n+extern Boolean UI_Eq\t\t\t(Uint, Uint);\n+\n /* Compare integer values for less than.  */\n #define UI_Lt uintp__ui_lt\n extern Boolean UI_Lt\t\t\t(Uint, Uint);"}, {"sha": "b8ddc172f83f03a98bd6692c4c833d60d50af4e5", "filename": "gcc/ada/urealp.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eefd2467a6ba6c24abff9af8292791c2f8b0a201/gcc%2Fada%2Furealp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eefd2467a6ba6c24abff9af8292791c2f8b0a201/gcc%2Fada%2Furealp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Furealp.h?ref=eefd2467a6ba6c24abff9af8292791c2f8b0a201", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *            Copyright (C) 1992-2011, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 1992-2014, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -41,6 +41,12 @@ extern Uint Denominator\t\t(Ureal);\n #define Rbase urealp__rbase\n extern Nat Rbase\t\t(Ureal);\n \n+#define Norm_Den urealp__norm_den\n+extern Uint Norm_Den\t\t(Ureal);\n+\n+#define Norm_Num urealp__norm_num\n+extern Uint Norm_Num\t\t(Ureal);\n+\n #define UR_Is_Negative urealp__ur_is_negative\n extern Boolean UR_Is_Negative\t(Ureal);\n "}]}