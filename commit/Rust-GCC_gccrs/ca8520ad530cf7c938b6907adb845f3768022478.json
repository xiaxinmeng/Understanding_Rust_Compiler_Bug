{"sha": "ca8520ad530cf7c938b6907adb845f3768022478", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2E4NTIwYWQ1MzBjZjdjOTM4YjY5MDdhZGI4NDVmMzc2ODAyMjQ3OA==", "commit": {"author": {"name": "Iain Sandoe", "email": "iain.sandoe@sandoe-acoustics.co.uk", "date": "2009-11-18T07:36:12Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2009-11-18T07:36:12Z"}, "message": "re PR other/39888 (TLS emutls not linked to automatically on Darwin)\n\n2009-11-18  Iain Sandoe <iain.sandoe@sandoe-acoustics.co.uk>\n\n\tPR other/39888\n\t* config/t-slibgcc-darwin: Fix embedded rpaths for\n\t--enable-version-specific-runtime-libs, build extension stub\n\tlibs exposing features available from current libgcc_s.\n\nFrom-SVN: r154282", "tree": {"sha": "368417271373088d53281198e881ffd8fa908653", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/368417271373088d53281198e881ffd8fa908653"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca8520ad530cf7c938b6907adb845f3768022478", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca8520ad530cf7c938b6907adb845f3768022478", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca8520ad530cf7c938b6907adb845f3768022478", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca8520ad530cf7c938b6907adb845f3768022478/comments", "author": null, "committer": null, "parents": [{"sha": "a83452e99b8a902287eaf065f98bf40c76771502", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a83452e99b8a902287eaf065f98bf40c76771502", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a83452e99b8a902287eaf065f98bf40c76771502"}], "stats": {"total": 71, "additions": 44, "deletions": 27}, "files": [{"sha": "2a1c9ee71aac180d1e40d409758f13966e58a7d5", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8520ad530cf7c938b6907adb845f3768022478/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8520ad530cf7c938b6907adb845f3768022478/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=ca8520ad530cf7c938b6907adb845f3768022478", "patch": "@@ -1,4 +1,10 @@\n-libgcc/\n+2009-11-18  Iain Sandoe <iain.sandoe@sandoe-acoustics.co.uk>\n+\n+\tPR other/39888\n+\t* config/t-slibgcc-darwin: Fix embedded rpaths for\n+\t--enable-version-specific-runtime-libs, build extension stub\n+\tlibs exposing features available from current libgcc_s.\n+\n 2009-11-11  Jon Beniston <jon@beniston.com>\n \n         * config.host: Add lm32 targets."}, {"sha": "9154b3a72fe163067b77c0eb11c9bdc05c4ff7e8", "filename": "libgcc/config/t-slibgcc-darwin", "status": "modified", "additions": 37, "deletions": 26, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca8520ad530cf7c938b6907adb845f3768022478/libgcc%2Fconfig%2Ft-slibgcc-darwin", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca8520ad530cf7c938b6907adb845f3768022478/libgcc%2Fconfig%2Ft-slibgcc-darwin", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Ft-slibgcc-darwin?ref=ca8520ad530cf7c938b6907adb845f3768022478", "patch": "@@ -2,9 +2,8 @@\n SHLIB_SOVERSION = 1\n SHLIB_VERSTRING = -compatibility_version $(SHLIB_SOVERSION) -current_version $(SHLIB_SOVERSION).0\n SHLIB_EXT = .dylib\n-SHLIB_SUFFIX = `if test @multilib_dir@ = ppc64 ; then echo _@multilib_dir@ ; fi`\n-SHLIB_INSTALL_NAME = @shlib_base_name@$(SHLIB_SUFFIX).$(SHLIB_SOVERSION)$(SHLIB_EXT)\n-SHLIB_SONAME = @shlib_base_name@.$(SHLIB_SOVERSION)$(SHLIB_EXT)\n+SHLIB_INSTALL_NAME = @shlib_base_name@.$(SHLIB_SOVERSION)$(SHLIB_EXT)\n+SHLIB_SONAME = @shlib_base_name@$(SHLIB_EXT)\n SHLIB_SOLINK = @shlib_base_name@.so\n SHLIB_MAP = @shlib_map_file@\n SHLIB_OBJS = @shlib_objs@\n@@ -15,9 +14,10 @@ SHLIB_LC = -lc\n # so the libgcc variants have different names not different locations.\n # Note that this version is used for the loader, not the linker; the linker\n # uses the stub versions named by the versioned members of $(INSTALL_FILES).\n+\n SHLIB_LINK = $(CC) $(LIBGCC2_CFLAGS) -dynamiclib -nodefaultlibs \\\n \t-install_name @shlib_slibdir@/$(SHLIB_INSTALL_NAME) \\\n-\t-single_module -o $(SHLIB_DIR)/$(SHLIB_SONAME).tmp \\\n+\t-single_module -o $(SHLIB_DIR)/$(SHLIB_SONAME) \\\n \t-Wl,-exported_symbols_list,$(SHLIB_MAP) \\\n \t$(SHLIB_VERSTRING) \\\n \t@multilib_flags@ $(SHLIB_OBJS) $(SHLIB_LC)\n@@ -26,16 +26,26 @@ SHLIB_MKMAP = $(gcc_srcdir)/mkmap-flat.awk\n SHLIB_MKMAP_OPTS = -v leading_underscore=1\n SHLIB_MAPFILES += $(gcc_srcdir)/libgcc-std.ver\n \n-INSTALL_FILES=libgcc_s.10.4.dylib libgcc_s.10.5.dylib libgcc_s.1.dylib\n+# we're only going to build the stubs if the target slib is /usr/lib\n+# there is no other case in which they're useful in a live system.\n+ifeq (/usr/lib,$(shlib_slibdir))\n+LGCC_STUBS = libgcc_s.10.4.dylib libgcc_s.10.5.dylib\n+else\n+LGCC_STUBS =\n+endif\n+\n+LGCC_FILES = libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT)\n+LGCC_FILES += $(LGCC_STUBS)\n+LEXT_STUBS = libgcc_ext.10.4$(SHLIB_EXT) libgcc_ext.10.5$(SHLIB_EXT)\n+LGCC_FILES += $(LEXT_STUBS)\n+INSTALL_FILES=$(LGCC_FILES)\n+\n+# we do our own thing\n+SHLIB_INSTALL =\n \n # For the toplevel multilib, build a fat archive including all the multilibs.\n ifeq ($(MULTIBUILDTOP),)\n \n-SHLIB_INSTALL = \\\n-\t$(mkinstalldirs) $(DESTDIR)$(slibdir); \\\n-\t$(INSTALL_DATA) $(SHLIB_SONAME) \\\n-\t  $(DESTDIR)$(slibdir)/$(SHLIB_SONAME)\n-\n ifeq ($(enable_shared),yes)\n all: $(INSTALL_FILES)\n install-leaf: install-darwin-libgcc-stubs\n@@ -48,35 +58,37 @@ endif\n # The actual use of the libraries is controlled by REAL_LIBGCC_SPEC.\n #\n # This assumes each multilib corresponds to a different architecture.\n-libgcc_s.%.dylib : $(SHLIB_VERPFX).%.ver libgcc_s$(SHLIB_EXT) all-multi\n-\t$(STRIP) -o $(@)_T \\\n-\t  -s $(SHLIB_VERPFX).$(*).ver -c -u \\\n-\t  ./libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT).tmp\n-\tMLIBS=`$(CC) --print-multi-lib \\\n-\t\t| sed -e 's/;.*$$//' -e '/^\\.$$/d'` ; \\\n+libgcc_s.%.dylib : all-multi $(SHLIB_VERPFX).%.ver libgcc_s$(SHLIB_EXT)\n+\tMLIBS=`$(CC) --print-multi-lib | sed -e 's/;.*$$//'` ; \\\n \tfor mlib in $$MLIBS ; do \\\n \t  $(STRIP) -o $(@)_T$${mlib} \\\n \t    -s $(SHLIB_VERPFX).$(*).ver -c -u \\\n-\t    ../$${mlib}/libgcc/$${mlib}/libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT).tmp || exit 1 ; \\\n+\t    ../$${mlib}/libgcc/$${mlib}/libgcc_s$(SHLIB_EXT)  || exit 1 ; \\\n \tdone\n \t$(LIPO) -output $@ -create $(@)_T*\n \trm $(@)_T*\n \n-libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT): all-multi libgcc_s$(SHLIB_EXT) \\\n-\tlibgcc_s.10.4.dylib libgcc_s.10.5.dylib\n-\tcp libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT).tmp \\\n-\t  ./libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT)_T_ || exit 1 ; \\\n-\tMLIBS=`$(CC) --print-multi-lib \\\n-\t\t| sed -e 's/;.*$$//' -e '/^\\.$$/d'` ; \\\n+libgcc_ext.%.dylib : all-multi $(SHLIB_VERPFX).%.ver libgcc_s$(SHLIB_EXT) \n+\tMLIBS=`$(CC) --print-multi-lib | sed -e 's/;.*$$//'` ; \\\n \tfor mlib in $$MLIBS ; do \\\n-\t  cp ../$${mlib}/libgcc/$${mlib}/libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT).tmp \\\n+\t  $(STRIP) -o $(@)_T$${mlib} \\\n+\t    -R $(SHLIB_VERPFX).$(*).ver -c -urx \\\n+\t    ../$${mlib}/libgcc/$${mlib}/libgcc_s$(SHLIB_EXT) || exit 1 ; \\\n+\tdone\n+\t$(LIPO) -output $@ -create $(@)_T*\n+\trm $(@)_T*\n+\n+libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT): all-multi libgcc_s$(SHLIB_EXT)\n+\tMLIBS=`$(CC) --print-multi-lib | sed -e 's/;.*$$//'` ; \\\n+\tfor mlib in $$MLIBS ; do \\\n+\t  cp ../$${mlib}/libgcc/$${mlib}/libgcc_s$(SHLIB_EXT)  \\\n \t    ./libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT)_T_$${mlib} || exit 1 ; \\\n \tdone\n \t$(LIPO) -output libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT) \\\n \t  -create libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT)_T*\n \trm libgcc_s.$(SHLIB_SOVERSION)$(SHLIB_EXT)_T*\n \n-install-darwin-libgcc-stubs : $(INSTALL_FILES)\n+install-darwin-libgcc-stubs :\n \t$(mkinstalldirs) $(DESTDIR)$(slibdir)\n \tfor d in $(INSTALL_FILES) ; do \\\n \t  $(INSTALL_DATA) $$d $(DESTDIR)$(slibdir)/$$d || exit 1 ; \\\n@@ -98,7 +110,6 @@ else\n # we're putting them in the gcc directory during a build, for\n # compatibility with the pre-top-level layout.  In that case we\n # need symlinks.\n-SHLIB_INSTALL =\n \n ifeq ($(enable_shared),yes)\n all: install-darwin-libgcc-links"}]}