{"sha": "bee60edc26944d6993b3bfdca3a811d7a8c04e0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmVlNjBlZGMyNjk0NGQ2OTkzYjNiZmRjYTNhODExZDdhOGMwNGUwZg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2019-07-11T21:01:25Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2019-07-11T21:01:25Z"}, "message": "ChangeLog: Fix whitespace.\n\n\t* ChangeLog: Fix whitespace.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r273424", "tree": {"sha": "0b2de6e02c6ed701c99241899165362513d3fe58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0b2de6e02c6ed701c99241899165362513d3fe58"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bee60edc26944d6993b3bfdca3a811d7a8c04e0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bee60edc26944d6993b3bfdca3a811d7a8c04e0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bee60edc26944d6993b3bfdca3a811d7a8c04e0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bee60edc26944d6993b3bfdca3a811d7a8c04e0f/comments", "author": null, "committer": null, "parents": [{"sha": "f6822be73a5c0ca8e5f7af99b2827a14c9f5403e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6822be73a5c0ca8e5f7af99b2827a14c9f5403e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6822be73a5c0ca8e5f7af99b2827a14c9f5403e"}], "stats": {"total": 555, "additions": 276, "deletions": 279}, "files": [{"sha": "3d92250b520eaf09cbb6ea12eb3e0125829253f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 152, "deletions": 155, "changes": 307, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bee60edc26944d6993b3bfdca3a811d7a8c04e0f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bee60edc26944d6993b3bfdca3a811d7a8c04e0f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bee60edc26944d6993b3bfdca3a811d7a8c04e0f", "patch": "@@ -1699,7 +1699,8 @@\n \t* gimple-match.h (gimple_match_cond::any_else): Same.\n \t* gimple-ssa-backprop.c: Same.\n \t* gimple-ssa-sprintf.c: Same.\n-\t* gimple-ssa-store-merging.c (store_operand_info::store_operand_info): Same.\n+\t* gimple-ssa-store-merging.c (store_operand_info::store_operand_info):\n+\tSame.\n \t(store_immediate_info::store_immediate_info): Same.\n \t(merged_store_group::apply_stores): Same.\n \t(get_location_for_stmts): Same.\n@@ -1816,7 +1817,7 @@\n \tMake static.\n \t(gimple_match_op::resimplify): New.\n \t* tree-ssa-sccvn.c (vn_nary_build_or_lookup_1): Valueize\n-\taccording to availability.  Use gimple_match_op::resimplify. \n+\taccording to availability.  Use gimple_match_op::resimplify.\n \n 2019-07-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n@@ -2206,8 +2207,8 @@\n \n 2019-07-04  Martin Liska  <mliska@suse.cz>\n \n-\t* tree-ssa-loop-niter.c (get_upper_bound_based_on_builtin_expr_with_prob):\n-\tNew function.\n+\t* tree-ssa-loop-niter.c\n+\t(get_upper_bound_based_on_builtin_expr_with_prob): New function.\n \t(estimate_numbers_of_iterations):\n \tSupport __builtin_expect_with_probability for analysis\n \tof # of loop iterations.\n@@ -2861,7 +2862,7 @@\n \n 2019-07-01  Vladislav Ivanishin <vlad@ispras.ru>\n \n-        * gdbhooks.py (GdbPrettyPrinters.add_printer_for_types): Reorder\n+\t* gdbhooks.py (GdbPrettyPrinters.add_printer_for_types): Reorder\n \tparameter names to match usage (no functional change).\n \t(GdbPrettyPrinters.add_printer_for_regex): Ditto.\n \n@@ -3048,7 +3049,7 @@\n \t* config/arc/arc.h: Change movmem to cpymem in comment.\n \t* config/arc/arc.md (movmemsi): Change movmem to cpymem.\n \t* config/arm/arm-protos.h: Change movmem to cpymem in names.\n-\t* config/arm/arm.c (arm_movmemqi_unaligned, arm_gen_movmemqi, \n+\t* config/arm/arm.c (arm_movmemqi_unaligned, arm_gen_movmemqi,\n \tgen_movmem_ldrd_strd, thumb_expand_movmemqi) Change movmem to cpymem.\n \t* config/arm/arm.md (movmemqi): Change movmem to cpymem.\n \t* config/arm/thumb1.md (movmem12b, movmem8b): Change movmem to cpymem.\n@@ -3073,7 +3074,7 @@\n \texpand_setmem_epilogue_via_loop, expand_set_or_cpymem_prologue,\n \texpand_small_cpymem_or_setmem,\n \texpand_set_or_cpymem_prologue_epilogue_by_misaligned_moves,\n-\texpand_set_or_cpymem_constant_prologue, \n+\texpand_set_or_cpymem_constant_prologue,\n \tix86_expand_set_or_cpymem): Change movmem to cpymem.\n \t* config/i386/i386-protos.h: Change movmem to cpymem.\n \t* config/i386/i386.h: Change movmem to cpymem in comment.\n@@ -3104,9 +3105,9 @@\n \t* config/pa/pa.c (compute_movmem_length): Change movmem to cpymem.\n \t(pa_adjust_insn_length): Change call to compute_movmem_length.\n \t* config/pa/pa.md (movmemsi, movmemsi_prereload, movmemsi_postreload,\n-\tmovmemdi, movmemdi_prereload, \n+\tmovmemdi, movmemdi_prereload,\n \tmovmemdi_postreload): Change movmem to cpymem.\n-\t* config/pdp11/pdp11.md (movmemhi, movmemhi1, \n+\t* config/pdp11/pdp11.md (movmemhi, movmemhi1,\n \tmovmemhi_nocc, UNSPEC_MOVMEM): Change movmem to cpymem.\n \t* config/riscv/riscv.c: Change movmem to cpymem in comment.\n \t* config/riscv/riscv.h: Change movmem to cpymem.\n@@ -3131,7 +3132,7 @@\n \t* doc/md.texi: Change movmem to cpymem and update description to match.\n \t* doc/rtl.texi: Change movmem to cpymem.\n \t* target.def (use_by_pieces_infrastructure_p): Change movmem to cpymem.\n-        * doc/tm.texi: Regenerate.\n+\t* doc/tm.texi: Regenerate.\n \n 2019-06-27  Bill Schmidt  <wschmidt@linux.ibm.com>\n \n@@ -3210,7 +3211,8 @@\n \t* dojump.c (do_jump_by_parts_greater_rtx): Likewise.\n \t* early-remat.c (early_remat::record_equiv_candidates): Likewise.\n \t* emit-rtl.c (try_split): Likewise.\n-\t* graphite-scop-detection.c (assign_parameter_index_in_region): Likewise.\n+\t* graphite-scop-detection.c (assign_parameter_index_in_region):\n+\tLikewise.\n \t* ipa-cp.c (cgraph_edge_brings_all_agg_vals_for_node): Likewise.\n \t* ira-color.c (setup_profitable_hard_regs): Likewise.\n \t* ira.c (rtx_moveable_p): Likewise.\n@@ -3367,13 +3369,6 @@\n \t* bb-reorder.c (connect_better_edge_p): Add missing else\n \tstatement in the middle of if-else statements.\n \n-/home/marxin/Programming/gcc/gcc/bb-reorder.c:1031:2: warning: Value stored to 'is_better_edge' is never read\n-        is_better_edge = true;\n-        ^                ~~~~\n-/home/marxin/Programming/gcc/gcc/bb-reorder.c:1034:2: warning: Value stored to 'is_better_edge' is never read\n-        is_better_edge = false;\n-        ^                ~~~~~\n-\n 2019-06-25  Hongtao Liu  <hongtao.liu@intel.com>\n \t    H.J. Lu  <hongjiu.lu@intel.com>\n \t    Olga Makhotina  <olga.makhotina@intel.com>\n@@ -3523,7 +3518,7 @@\n \t(df_update_exit_block_uses): Likewise.\n \n 2019-06-25  Kwok Cheung Yeung  <kcy@codesourcery.com>\n-            Andrew Stubbs  <ams@codesourcery.com>\n+\t    Andrew Stubbs  <ams@codesourcery.com>\n \n \t* config.gcc (thread_file): Set to gcn for AMD GCN.\n \t* config/gcn/gcn.c (gcn_emutls_var_init): New function.\n@@ -4013,7 +4008,7 @@\n \n 2019-06-18  Iain Sandoe  <iain@sandoe.co.uk>\n \n-        * config/darwin.c: Strip trailing whitespace.\n+\t* config/darwin.c: Strip trailing whitespace.\n \n 2019-06-18  Iain Sandoe  <iain@sandoe.co.uk>\n \n@@ -4545,10 +4540,10 @@\n \n 2019-06-12  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n \n-        * config/arm/iterators.md (VABAL): New int iterator.\n-        * config/arm/neon.md (<sup>sadv16qi): New define_expand.\n-        * config/arm/unspecs.md (\"unspec\"): Define UNSPEC_VABAL_S, UNSPEC_VABAL_U\n-        values.\n+\t* config/arm/iterators.md (VABAL): New int iterator.\n+\t* config/arm/neon.md (<sup>sadv16qi): New define_expand.\n+\t* config/arm/unspecs.md (\"unspec\"): Define UNSPEC_VABAL_S,\n+\tUNSPEC_VABAL_U values.\n \n 2019-06-12  Martin Liska  <mliska@suse.cz>\n \n@@ -4797,8 +4792,7 @@\n \t(gimple_stringops_transform): Likewise.\n \t(gimple_find_values_to_profile): Set number\n \tof counters for HIST_TYPE_SINGLE_VALUE.\n-\t* value-prof.h (get_most_common_single_value):\n-\tNew.\n+\t* value-prof.h (get_most_common_single_value): New.\n \n 2019-06-10  Martin Liska  <mliska@suse.cz>\n \n@@ -4882,7 +4876,7 @@\n \t(types_same_for_odr): Remove.\n \t(types_odr_comparable): Remove.\n \t(odr_vtable_hasher::equal): Remove.\n-\t(odr_vtable_hash_type, odr_vtable_hash): Remove.\t\n+\t(odr_vtable_hash_type, odr_vtable_hash): Remove.\n \t(add_type_duplicate): Do not synchronize vtable and name hashtables.\n \t(get_odr_type): Do not use vtable hash.\n \t(dump_odr_type): Remove commented out code.\n@@ -5593,7 +5587,8 @@\n 2019-06-03  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/iterators.md (MAX_OPP): New code attr.\n-\t* config/aarch64/aarch64-simd.md (*aarch64_<su>abd<mode>_3): Rename to...\n+\t* config/aarch64/aarch64-simd.md (*aarch64_<su>abd<mode>_3):\n+\tRename to...\n \t(aarch64_<su>abd<mode>_3): ... This.\n \t(<sur>sadv16qi): Add TARGET_DOTPROD expansion.\n \n@@ -5674,7 +5669,7 @@\n \tNOTE_INSN_DELETED_LABEL check.\n \n 2019-05-31  Prachi Godbole  <prachi.godbole@imgtec.com>\n-            Robert Suchanek  <robert.suchanek@mips.com>\n+\t    Robert Suchanek  <robert.suchanek@mips.com>\n \n \t* config/mips/mips.c (mips_expand_builtin_insn): Swap the 1st\n \tand 3rd operands of the fmadd/fmsub/maddv builtin.\n@@ -5840,7 +5835,7 @@\n \n 2019-05-30  Sam Tebbs  <sam.tebbs@arm.com>\n \n-\t* aarch64/aarch64.c (aarch64_post_cfi_startproc): Add \n+\t* aarch64/aarch64.c (aarch64_post_cfi_startproc): Add\n \tcfun->is_thunk check.\n \n 2019-05-30  Jakub Jelinek  <jakub@redhat.com>\n@@ -5969,8 +5964,9 @@\n \t* config/aarch64/iterators.md (pauth_hint_num_a): Replace\n \tUNSPEC_PACI1716 and UNSPEC_AUTI1716 with UNSPEC_PACIA1716 and\n \tUNSPEC_AUTIA1716 respectively.\n-\t* config/aarch64/iterators.md (pauth_hint_num_a): Rename to pauth_hint_num\n-\tand add UNSPEC_PACIBSP, UNSPEC_AUTIBSP, UNSPEC_PACIB1716, UNSPEC_AUTIB1716.\n+\t* config/aarch64/iterators.md (pauth_hint_num_a): Rename to\n+\tpauth_hint_num and add UNSPEC_PACIBSP, UNSPEC_AUTIBSP,\n+\tUNSPEC_PACIB1716, UNSPEC_AUTIB1716.\n \t* doc/invoke.texi (-mbranch-protection): Add b-key type.\n \t* config/aarch64/aarch64-bti-insert.c (aarch64_pac_insn_p): Rename\n \tUNSPEC_PACISP to UNSPEC_PACIASP and UNSPEC_PACIBSP.\n@@ -6317,8 +6313,8 @@\n \n 2019-05-23  Iain Sandoe  <iain@sandoe.co.uk>\n \n-       * config/i386/darwin.h: Reject -mfentry*.\n-       * doc/sourcebuild.texi: Document mfentry target support.\n+\t* config/i386/darwin.h: Reject -mfentry*.\n+\t* doc/sourcebuild.texi: Document mfentry target support.\n \n 2019-05-23  Bill Schmidt  <wschmidt@linux.ibm.com>\n \n@@ -6455,7 +6451,7 @@\n \tdecl.\n \n 2019-05-22  Kwok Cheung Yeung  <kcy@codesourcery.com>\n-            Andrew Stubbs  <amd@codesourcery.com>\n+\t    Andrew Stubbs  <amd@codesourcery.com>\n \n \t* config.gcc (gcc_cv_initfini_array): Set for AMD GCN.\n \t* config/gcn/gcn-run.c (init_array_kernel, fini_array_kernel): New.\n@@ -6733,8 +6729,6 @@\n \t(altivec_expand_builtin): Likewise.\n \t(rs6000_get_function_versions_dispatcher): Quote target_clones.\n \n-Fix test-suite.\n-\n 2019-05-20  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/59813\n@@ -7005,120 +6999,120 @@ Fix test-suite.\n \n 2019-05-16  Martin Sebor  <msebor@redhat.com>\n \n-        * builtins.c (expand_builtin_atomic_always_lock_free): Quote\n-        identifiers, keywords, operators, and types in diagnostics.  Correct\n-        quoting, spelling, and sentence capitalization issues.\n-        (expand_builtin_atomic_is_lock_free): Same.\n-        (fold_builtin_next_arg): Same.\n-        * cfgexpand.c (expand_one_var): Same.\n-        (tree_conflicts_with_clobbers_p): Same.\n-        (expand_asm_stmt): Same.\n-        (verify_loop_structure): Same.\n-        * cgraphunit.c (process_function_and_variable_attributes): Same.\n-        * collect-utils.c (collect_execute): Same.\n-        * collect2.c (maybe_run_lto_and_relink): Same.\n-        (is_lto_object_file): Same.\n-        (scan_prog_file): Same.\n-        * convert.c (convert_to_real_1): Same.\n-        * dwarf2out.c (dwarf2out_begin_prologue): Same.\n-        * except.c (verify_eh_tree): Same.\n-        * gcc.c (execute): Same.\n-        (eval_spec_function): Same.\n-        (run_attempt): Same.\n-        (driver::set_up_specs): Same.\n-        (compare_debug_auxbase_opt_spec_function): Same.\n-        * gcov-tool.c (unlink_gcda_file): Same.\n-        (do_merge): Same.\n-        (do_rewrite): Same.\n-        * gcse.c (gcse_or_cprop_is_too_expensive): Same.\n-        * gimplify.c (gimplify_asm_expr): Same.\n-        (gimplify_adjust_omp_clauses): Same.\n-        * hsa-gen.c (gen_hsa_addr_insns): Same.\n-        (gen_hsa_insns_for_load): Same.\n-        (gen_hsa_cmp_insn_from_gimple): Same.\n-        (gen_hsa_insns_for_operation_assignment): Same.\n-        (gen_get_level): Same.\n-        (gen_hsa_alloca): Same.\n-        (omp_simple_builtin::generate): Same.\n-        (gen_hsa_atomic_for_builtin): Same.\n-        (gen_hsa_insns_for_call): Same.\n-        * input.c (dump_location_info): Same.\n-        * ipa-devirt.c (compare_virtual_tables): Same.\n-        * ira.c (ira_setup_eliminable_regset): Same.\n-        * lra-assigns.c (lra_assign): Same.\n-        * lra-constraints.c (lra_constraints): Same.\n-        * lto-streamer-in.c (lto_input_mode_table): Same.\n-        * lto-wrapper.c (get_options_from_collect_gcc_options): Same.\n-        (merge_and_complain): Same.\n-        (compile_offload_image): Same.\n-        (compile_images_for_offload_targets): Same.\n-        (debug_objcopy): Same.\n-        (run_gcc): Same.\n-        (main): Same.\n-        * opts.c (print_specific_help): Same.\n-        (parse_no_sanitize_attribute): Same.\n-        (print_help): Same.\n-        (handle_param): Same.\n-        * plugin.c (add_new_plugin): Same.\n-        (parse_plugin_arg_opt): Same.\n-        (try_init_one_plugin): Same.\n-        * print-rtl.c (debug_bb_n_slim): Quote identifiers, keywords,\n-        operators, and types in diagnostics.  Correct quoting and spelling\n-        issues.\n-        * read-rtl-function.c (parse_edge_flag_token): Same.\n-        (function_reader::parse_enum_value): Same.\n-        * reg-stack.c (check_asm_stack_operands): Same.\n-        * regcprop.c (validate_value_data): Same.\n-        * sched-rgn.c (make_pass_sched_fusion): Same.\n-        * stmt.c (check_unique_operand_names): Same.\n-        * targhooks.c (default_target_option_pragma_parse): Same.\n-        * tlink.c (recompile_files): Same.\n-        * toplev.c (process_options): Same.\n-        (do_compile): Same.\n-        * trans-mem.c (diagnose_tm_1): Same.\n-        (ipa_tm_scan_irr_block): Same.\n-        (ipa_tm_diagnose_transaction): Same.\n-        * tree-cfg.c (verify_address): Same.  Use get_tree_code_name to\n-        format a tree code name in a diagnostic.\n-        (verify_types_in_gimple_min_lval): Same.\n-        (verify_types_in_gimple_reference): Same.\n-        (verify_gimple_call): Same.\n-        (verify_gimple_assign_unary): Same.\n-        (verify_gimple_assign_binary): Same.\n-        (verify_gimple_assign_ternary): Same.\n-        (verify_gimple_assign_single): Same.\n-        (verify_gimple_switch): Same.\n-        (verify_gimple_label): Same.\n-        (verify_gimple_phi): Same.\n-        (verify_gimple_in_seq): Same.\n-        (verify_eh_throw_stmt_node): Same.\n-        (collect_subblocks): Same.\n-        (gimple_verify_flow_info): Same.\n-        (do_warn_unused_result): Same.\n-        * tree-inline.c (expand_call_inline): Same.\n-        * tree-into-ssa.c (update_ssa): Same.\n-        * tree.c (tree_int_cst_elt_check_failed): Same.\n-        (tree_vec_elt_check_failed): Same.\n-        (omp_clause_operand_check_failed): Same.\n-        (verify_type_variant): Same.\n-        (verify_type): Same.\n-        * value-prof.c (verify_histograms): Same.\n-        * varasm.c (assemble_start_function): Same.\n+\t* builtins.c (expand_builtin_atomic_always_lock_free): Quote\n+\tidentifiers, keywords, operators, and types in diagnostics.  Correct\n+\tquoting, spelling, and sentence capitalization issues.\n+\t(expand_builtin_atomic_is_lock_free): Same.\n+\t(fold_builtin_next_arg): Same.\n+\t* cfgexpand.c (expand_one_var): Same.\n+\t(tree_conflicts_with_clobbers_p): Same.\n+\t(expand_asm_stmt): Same.\n+\t(verify_loop_structure): Same.\n+\t* cgraphunit.c (process_function_and_variable_attributes): Same.\n+\t* collect-utils.c (collect_execute): Same.\n+\t* collect2.c (maybe_run_lto_and_relink): Same.\n+\t(is_lto_object_file): Same.\n+\t(scan_prog_file): Same.\n+\t* convert.c (convert_to_real_1): Same.\n+\t* dwarf2out.c (dwarf2out_begin_prologue): Same.\n+\t* except.c (verify_eh_tree): Same.\n+\t* gcc.c (execute): Same.\n+\t(eval_spec_function): Same.\n+\t(run_attempt): Same.\n+\t(driver::set_up_specs): Same.\n+\t(compare_debug_auxbase_opt_spec_function): Same.\n+\t* gcov-tool.c (unlink_gcda_file): Same.\n+\t(do_merge): Same.\n+\t(do_rewrite): Same.\n+\t* gcse.c (gcse_or_cprop_is_too_expensive): Same.\n+\t* gimplify.c (gimplify_asm_expr): Same.\n+\t(gimplify_adjust_omp_clauses): Same.\n+\t* hsa-gen.c (gen_hsa_addr_insns): Same.\n+\t(gen_hsa_insns_for_load): Same.\n+\t(gen_hsa_cmp_insn_from_gimple): Same.\n+\t(gen_hsa_insns_for_operation_assignment): Same.\n+\t(gen_get_level): Same.\n+\t(gen_hsa_alloca): Same.\n+\t(omp_simple_builtin::generate): Same.\n+\t(gen_hsa_atomic_for_builtin): Same.\n+\t(gen_hsa_insns_for_call): Same.\n+\t* input.c (dump_location_info): Same.\n+\t* ipa-devirt.c (compare_virtual_tables): Same.\n+\t* ira.c (ira_setup_eliminable_regset): Same.\n+\t* lra-assigns.c (lra_assign): Same.\n+\t* lra-constraints.c (lra_constraints): Same.\n+\t* lto-streamer-in.c (lto_input_mode_table): Same.\n+\t* lto-wrapper.c (get_options_from_collect_gcc_options): Same.\n+\t(merge_and_complain): Same.\n+\t(compile_offload_image): Same.\n+\t(compile_images_for_offload_targets): Same.\n+\t(debug_objcopy): Same.\n+\t(run_gcc): Same.\n+\t(main): Same.\n+\t* opts.c (print_specific_help): Same.\n+\t(parse_no_sanitize_attribute): Same.\n+\t(print_help): Same.\n+\t(handle_param): Same.\n+\t* plugin.c (add_new_plugin): Same.\n+\t(parse_plugin_arg_opt): Same.\n+\t(try_init_one_plugin): Same.\n+\t* print-rtl.c (debug_bb_n_slim): Quote identifiers, keywords,\n+\toperators, and types in diagnostics.  Correct quoting and spelling\n+\tissues.\n+\t* read-rtl-function.c (parse_edge_flag_token): Same.\n+\t(function_reader::parse_enum_value): Same.\n+\t* reg-stack.c (check_asm_stack_operands): Same.\n+\t* regcprop.c (validate_value_data): Same.\n+\t* sched-rgn.c (make_pass_sched_fusion): Same.\n+\t* stmt.c (check_unique_operand_names): Same.\n+\t* targhooks.c (default_target_option_pragma_parse): Same.\n+\t* tlink.c (recompile_files): Same.\n+\t* toplev.c (process_options): Same.\n+\t(do_compile): Same.\n+\t* trans-mem.c (diagnose_tm_1): Same.\n+\t(ipa_tm_scan_irr_block): Same.\n+\t(ipa_tm_diagnose_transaction): Same.\n+\t* tree-cfg.c (verify_address): Same.  Use get_tree_code_name to\n+\tformat a tree code name in a diagnostic.\n+\t(verify_types_in_gimple_min_lval): Same.\n+\t(verify_types_in_gimple_reference): Same.\n+\t(verify_gimple_call): Same.\n+\t(verify_gimple_assign_unary): Same.\n+\t(verify_gimple_assign_binary): Same.\n+\t(verify_gimple_assign_ternary): Same.\n+\t(verify_gimple_assign_single): Same.\n+\t(verify_gimple_switch): Same.\n+\t(verify_gimple_label): Same.\n+\t(verify_gimple_phi): Same.\n+\t(verify_gimple_in_seq): Same.\n+\t(verify_eh_throw_stmt_node): Same.\n+\t(collect_subblocks): Same.\n+\t(gimple_verify_flow_info): Same.\n+\t(do_warn_unused_result): Same.\n+\t* tree-inline.c (expand_call_inline): Same.\n+\t* tree-into-ssa.c (update_ssa): Same.\n+\t* tree.c (tree_int_cst_elt_check_failed): Same.\n+\t(tree_vec_elt_check_failed): Same.\n+\t(omp_clause_operand_check_failed): Same.\n+\t(verify_type_variant): Same.\n+\t(verify_type): Same.\n+\t* value-prof.c (verify_histograms): Same.\n+\t* varasm.c (assemble_start_function): Same.\n \n 2019-05-16  Martin Sebor  <msebor@redhat.com>\n \n-        * config/i386/i386-expand.c (get_element_number): Quote keywords\n-        and other internal names in diagnostics.  Adjust other diagnostic\n-        formatting issues noted by -Wformat-diag.\n-        * config/i386/i386-features.c\n-        (ix86_mangle_function_version_assembler_name): Same.\n-        * config/i386/i386-options.c (ix86_handle_abi_attribute): Same.\n-        * config/i386/i386.c (ix86_function_type_abi): Same.\n-        (ix86_function_ms_hook_prologue): Same.\n-        (classify_argument): Same.\n-        (ix86_expand_prologue): Same.\n-        (ix86_md_asm_adjust): Same.\n-        (ix86_memmodel_check): Same.\n+\t* config/i386/i386-expand.c (get_element_number): Quote keywords\n+\tand other internal names in diagnostics.  Adjust other diagnostic\n+\tformatting issues noted by -Wformat-diag.\n+\t* config/i386/i386-features.c\n+\t(ix86_mangle_function_version_assembler_name): Same.\n+\t* config/i386/i386-options.c (ix86_handle_abi_attribute): Same.\n+\t* config/i386/i386.c (ix86_function_type_abi): Same.\n+\t(ix86_function_ms_hook_prologue): Same.\n+\t(classify_argument): Same.\n+\t(ix86_expand_prologue): Same.\n+\t(ix86_md_asm_adjust): Same.\n+\t(ix86_memmodel_check): Same.\n \n 2019-05-17  Dragan Mladjenovic  <dmladjenovic@wavecomp.com>\n \n@@ -8859,8 +8853,8 @@ Fix test-suite.\n \n \tPR target/89952\n \t* config/s390/s390.c (s390_restore_gprs_from_fprs): Restore GPRs\n-    \tfrom FPRs in reverse order.  Generate REG_CFA_DEF_CFA note also\n-    \tfor restored hard frame pointer.\n+\tfrom FPRs in reverse order.  Generate REG_CFA_DEF_CFA note also\n+\tfor restored hard frame pointer.\n \t(s390_sched_dependencies_evaluation): Implement new target hook.\n \t(TARGET_SCHED_DEPENDENCIES_EVALUATION_HOOK): New macro definition.\n \n@@ -9229,7 +9223,7 @@ Fix test-suite.\n \n \t* config/microblaze/microblaze.c (microblaze_expand_block_move): Treat\n \tsize and alignment as unsigned.\n- \n+\n 2019-04-15  Richard Biener  <rguenther@suse.de>\n \n \tPR debug/90074\n@@ -14217,7 +14211,8 @@ Fix test-suite.\n \t(_mm256_mask_fixupimm_ps): Ditto.\n \t(_mm_mask_fixupimm_pd): Ditto.\n \t(_mm_mask_fixupimm_ps): Ditto.\n-\t* config/i386/i386-builtin-types.def: Add new types and remove useless ones.\n+\t* config/i386/i386-builtin-types.def: Add new types and remove\n+\tuseless ones.\n \t* config/i386/i386-builtin.def: Update builtin definitions.\n \t* config/i386/i386.c: Handle new builtin types and remove useless ones.\n \t* config/i386/sse.md: Update VFIXUPIMM* patterns.\n@@ -14336,10 +14331,12 @@ Fix test-suite.\n \n 2019-01-16  Tamar Christina  <tamar.christina@arm.com>\n \n-\t* config/arm/arm-protos.h (neon_vcmla_lane_prepare_operands): Remove patternmode.\n+\t* config/arm/arm-protos.h (neon_vcmla_lane_prepare_operands):\n+\tRemove patternmode.\n \t* config/arm/arm.c (neon_vcmla_lane_prepare_operands): Likewise.\n-\t* config/arm/neon.md (neon_vcmla_lane<rot><mode>, neon_vcmla_laneq<rot><mode>,\n-\tneon_vcmlaq_lane<rot><mode>): Remove endianness conversion.\n+\t* config/arm/neon.md (neon_vcmla_lane<rot><mode>,\n+\tneon_vcmla_laneq<rot><mode>, neon_vcmlaq_lane<rot><mode>):\n+\tRemove endianness conversion.\n \n 2019-01-16  Martin Liska  <mliska@suse.cz>\n "}, {"sha": "6c40496db9c364b15b0ae1fea1eefe09c47ac4ab", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 124, "deletions": 124, "changes": 248, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bee60edc26944d6993b3bfdca3a811d7a8c04e0f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bee60edc26944d6993b3bfdca3a811d7a8c04e0f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bee60edc26944d6993b3bfdca3a811d7a8c04e0f", "patch": "@@ -1816,8 +1816,8 @@\n \n 2019-06-12  Przemyslaw Wirkus  <przemyslaw.wirkus@arm.com>\n \n-        * gcc.target/arm/ssadv16qi.c: New test.\n-        * gcc.target/arm/usadv16qi.c: Likewise.\n+\t* gcc.target/arm/ssadv16qi.c: New test.\n+\t* gcc.target/arm/usadv16qi.c: Likewise.\n \n 2019-06-12  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -3100,123 +3100,123 @@\n \n 2019-05-16  Martin Sebor  <msebor@redhat.com>\n \n-        * c-c++-common/Wbool-operation-1.c: Adjust text of expected diagnostics.\n-        * c-c++-common/Wvarargs-2.c: Same.\n-        * c-c++-common/Wvarargs.c: Same.\n-        * c-c++-common/pr51768.c: Same.\n-        * c-c++-common/tm/inline-asm.c: Same.\n-        * c-c++-common/tm/safe-1.c: Same.\n-        * g++.dg/asm-qual-1.C: Same.\n-        * g++.dg/asm-qual-3.C: Same.\n-        * g++.dg/conversion/dynamic1.C: Same.\n-        * g++.dg/cpp0x/constexpr-89599.C: Same.\n-        * g++.dg/cpp0x/constexpr-cast.C: Same.\n-        * g++.dg/cpp0x/constexpr-shift1.C: Same.\n-        * g++.dg/cpp0x/lambda/lambda-conv11.C: Same.\n-        * g++.dg/cpp0x/nullptr04.C: Same.\n-        * g++.dg/cpp0x/static_assert12.C: Same.\n-        * g++.dg/cpp0x/static_assert8.C: Same.\n-        * g++.dg/cpp1y/lambda-conv1.C: Same.\n-        * g++.dg/cpp1y/pr79393-3.C: Same.\n-        * g++.dg/cpp1y/static_assert1.C: Same.\n-        * g++.dg/cpp1z/constexpr-if4.C: Same.\n-        * g++.dg/cpp1z/constexpr-if5.C: Same.\n-        * g++.dg/cpp1z/constexpr-if9.C: Same.\n-        * g++.dg/eh/goto2.C: Same.\n-        * g++.dg/eh/goto3.C: Same.\n-        * g++.dg/expr/static_cast8.C: Same.\n-        * g++.dg/ext/flexary5.C: Same.\n-        * g++.dg/ext/utf-array-short-wchar.C: Same.\n-        * g++.dg/ext/utf-array.C: Same.\n-        * g++.dg/ext/utf8-2.C: Same.\n-        * g++.dg/gomp/loop-4.C: Same.\n-        * g++.dg/gomp/macro-4.C: Same.\n-        * g++.dg/gomp/udr-1.C: Same.\n-        * g++.dg/init/initializer-string-too-long.C: Same.\n-        * g++.dg/other/offsetof9.C: Same.\n-        * g++.dg/ubsan/pr63956.C: Same.\n-        * g++.dg/warn/Wbool-operation-1.C: Same.\n-        * g++.dg/warn/Wtype-limits-Wextra.C: Same.\n-        * g++.dg/warn/Wtype-limits.C: Same.\n-        * g++.dg/wrappers/pr88680.C: Same.\n-        * g++.old-deja/g++.mike/eh55.C: Same.\n-        * gcc.dg/Wsign-compare-1.c: Same.\n-        * gcc.dg/Wtype-limits-Wextra.c: Same.\n-        * gcc.dg/Wtype-limits.c: Same.\n-        * gcc.dg/Wunknownprag.c: Same.\n-        * gcc.dg/Wunsuffixed-float-constants-1.c: Same.\n-        * gcc.dg/asm-6.c: Same.\n-        * gcc.dg/asm-qual-1.c: Same.\n-        * gcc.dg/cast-1.c: Same.\n-        * gcc.dg/cast-2.c: Same.\n-        * gcc.dg/cast-3.c: Same.\n-        * gcc.dg/cpp/source_date_epoch-2.c: Same.\n-        * gcc.dg/debug/pr85252.c: Same.\n-        * gcc.dg/dfp/cast-bad.c: Same.\n-        * gcc.dg/format/gcc_diag-1.c: Same.\n-        * gcc.dg/format/gcc_diag-11.c: Same.\n-        * gcc.dg/gcc_diag-11.c: Same.\n-        * gcc.dg/gnu-cond-expr-2.c: Same.\n-        * gcc.dg/gnu-cond-expr-3.c: Same.\n-        * gcc.dg/gomp/macro-4.c: Same.\n-        * gcc.dg/init-bad-1.c: Same.\n-        * gcc.dg/init-bad-2.c: Same.\n-        * gcc.dg/init-bad-3.c: Same.\n-        * gcc.dg/pr27528.c: Same.\n-        * gcc.dg/pr48552-1.c: Same.\n-        * gcc.dg/pr48552-2.c: Same.\n-        * gcc.dg/pr59846.c: Same.\n-        * gcc.dg/pr61096-1.c: Same.\n-        * gcc.dg/pr8788-1.c: Same.\n-        * gcc.dg/pr90082.c: Same.\n-        * gcc.dg/simd-2.c: Same.\n-        * gcc.dg/spellcheck-params-2.c: Same.\n-        * gcc.dg/spellcheck-params.c: Same.\n-        * gcc.dg/strlenopt-49.c: Same.\n-        * gcc.dg/tm/pr52141.c: Same.\n-        * gcc.dg/torture/pr51106-1.c: Same.\n-        * gcc.dg/torture/pr51106-2.c: Same.\n-        * gcc.dg/utf-array-short-wchar.c: Same.\n-        * gcc.dg/utf-array.c: Same.\n-        * gcc.dg/utf8-2.c: Same.\n-        * gcc.dg/warn-sprintf-no-nul.c: Same.\n-        * gcc.target/i386/asm-flag-0.c: Same.\n-        * gcc.target/i386/inline_error.c: Same.\n-        * gcc.target/i386/pr30848.c: Same.\n-        * gcc.target/i386/pr39082-1.c: Same.\n-        * gcc.target/i386/pr39678.c: Same.\n-        * gcc.target/i386/pr57756.c: Same.\n-        * gcc.target/i386/pr68843-1.c: Same.\n-        * gcc.target/i386/pr79804.c: Same.\n-        * gcc.target/i386/pr82673.c: Same.\n-        * obj-c++.dg/class-protocol-1.mm: Same.\n-        * obj-c++.dg/exceptions-3.mm: Same.\n-        * obj-c++.dg/exceptions-4.mm: Same.\n-        * obj-c++.dg/exceptions-5.mm: Same.\n-        * obj-c++.dg/exceptions-6.mm: Same.\n-        * obj-c++.dg/method-12.mm: Same.\n-        * obj-c++.dg/method-13.mm: Same.\n-        * obj-c++.dg/method-6.mm: Same.\n-        * obj-c++.dg/method-7.mm: Same.\n-        * obj-c++.dg/method-9.mm: Same.\n-        * obj-c++.dg/method-lookup-1.mm: Same.\n-        * obj-c++.dg/proto-lossage-4.mm: Same.\n-        * obj-c++.dg/protocol-qualifier-2.mm: Same.\n-        * objc.dg/call-super-2.m: Same.\n-        * objc.dg/class-protocol-1.m: Same.\n-        * objc.dg/desig-init-1.m: Same.\n-        * objc.dg/exceptions-3.m: Same.\n-        * objc.dg/exceptions-4.m: Same.\n-        * objc.dg/exceptions-5.m: Same.\n-        * objc.dg/exceptions-6.m: Same.\n-        * objc.dg/method-19.m: Same.\n-        * objc.dg/method-2.m: Same.\n-        * objc.dg/method-5.m: Same.\n-        * objc.dg/method-6.m: Same.\n-        * objc.dg/method-7.m: Same.\n-        * objc.dg/method-lookup-1.m: Same.\n-        * objc.dg/proto-hier-1.m: Same.\n-        * objc.dg/proto-lossage-4.m: Same.\n+\t* c-c++-common/Wbool-operation-1.c: Adjust text of expected diagnostics.\n+\t* c-c++-common/Wvarargs-2.c: Same.\n+\t* c-c++-common/Wvarargs.c: Same.\n+\t* c-c++-common/pr51768.c: Same.\n+\t* c-c++-common/tm/inline-asm.c: Same.\n+\t* c-c++-common/tm/safe-1.c: Same.\n+\t* g++.dg/asm-qual-1.C: Same.\n+\t* g++.dg/asm-qual-3.C: Same.\n+\t* g++.dg/conversion/dynamic1.C: Same.\n+\t* g++.dg/cpp0x/constexpr-89599.C: Same.\n+\t* g++.dg/cpp0x/constexpr-cast.C: Same.\n+\t* g++.dg/cpp0x/constexpr-shift1.C: Same.\n+\t* g++.dg/cpp0x/lambda/lambda-conv11.C: Same.\n+\t* g++.dg/cpp0x/nullptr04.C: Same.\n+\t* g++.dg/cpp0x/static_assert12.C: Same.\n+\t* g++.dg/cpp0x/static_assert8.C: Same.\n+\t* g++.dg/cpp1y/lambda-conv1.C: Same.\n+\t* g++.dg/cpp1y/pr79393-3.C: Same.\n+\t* g++.dg/cpp1y/static_assert1.C: Same.\n+\t* g++.dg/cpp1z/constexpr-if4.C: Same.\n+\t* g++.dg/cpp1z/constexpr-if5.C: Same.\n+\t* g++.dg/cpp1z/constexpr-if9.C: Same.\n+\t* g++.dg/eh/goto2.C: Same.\n+\t* g++.dg/eh/goto3.C: Same.\n+\t* g++.dg/expr/static_cast8.C: Same.\n+\t* g++.dg/ext/flexary5.C: Same.\n+\t* g++.dg/ext/utf-array-short-wchar.C: Same.\n+\t* g++.dg/ext/utf-array.C: Same.\n+\t* g++.dg/ext/utf8-2.C: Same.\n+\t* g++.dg/gomp/loop-4.C: Same.\n+\t* g++.dg/gomp/macro-4.C: Same.\n+\t* g++.dg/gomp/udr-1.C: Same.\n+\t* g++.dg/init/initializer-string-too-long.C: Same.\n+\t* g++.dg/other/offsetof9.C: Same.\n+\t* g++.dg/ubsan/pr63956.C: Same.\n+\t* g++.dg/warn/Wbool-operation-1.C: Same.\n+\t* g++.dg/warn/Wtype-limits-Wextra.C: Same.\n+\t* g++.dg/warn/Wtype-limits.C: Same.\n+\t* g++.dg/wrappers/pr88680.C: Same.\n+\t* g++.old-deja/g++.mike/eh55.C: Same.\n+\t* gcc.dg/Wsign-compare-1.c: Same.\n+\t* gcc.dg/Wtype-limits-Wextra.c: Same.\n+\t* gcc.dg/Wtype-limits.c: Same.\n+\t* gcc.dg/Wunknownprag.c: Same.\n+\t* gcc.dg/Wunsuffixed-float-constants-1.c: Same.\n+\t* gcc.dg/asm-6.c: Same.\n+\t* gcc.dg/asm-qual-1.c: Same.\n+\t* gcc.dg/cast-1.c: Same.\n+\t* gcc.dg/cast-2.c: Same.\n+\t* gcc.dg/cast-3.c: Same.\n+\t* gcc.dg/cpp/source_date_epoch-2.c: Same.\n+\t* gcc.dg/debug/pr85252.c: Same.\n+\t* gcc.dg/dfp/cast-bad.c: Same.\n+\t* gcc.dg/format/gcc_diag-1.c: Same.\n+\t* gcc.dg/format/gcc_diag-11.c: Same.\n+\t* gcc.dg/gcc_diag-11.c: Same.\n+\t* gcc.dg/gnu-cond-expr-2.c: Same.\n+\t* gcc.dg/gnu-cond-expr-3.c: Same.\n+\t* gcc.dg/gomp/macro-4.c: Same.\n+\t* gcc.dg/init-bad-1.c: Same.\n+\t* gcc.dg/init-bad-2.c: Same.\n+\t* gcc.dg/init-bad-3.c: Same.\n+\t* gcc.dg/pr27528.c: Same.\n+\t* gcc.dg/pr48552-1.c: Same.\n+\t* gcc.dg/pr48552-2.c: Same.\n+\t* gcc.dg/pr59846.c: Same.\n+\t* gcc.dg/pr61096-1.c: Same.\n+\t* gcc.dg/pr8788-1.c: Same.\n+\t* gcc.dg/pr90082.c: Same.\n+\t* gcc.dg/simd-2.c: Same.\n+\t* gcc.dg/spellcheck-params-2.c: Same.\n+\t* gcc.dg/spellcheck-params.c: Same.\n+\t* gcc.dg/strlenopt-49.c: Same.\n+\t* gcc.dg/tm/pr52141.c: Same.\n+\t* gcc.dg/torture/pr51106-1.c: Same.\n+\t* gcc.dg/torture/pr51106-2.c: Same.\n+\t* gcc.dg/utf-array-short-wchar.c: Same.\n+\t* gcc.dg/utf-array.c: Same.\n+\t* gcc.dg/utf8-2.c: Same.\n+\t* gcc.dg/warn-sprintf-no-nul.c: Same.\n+\t* gcc.target/i386/asm-flag-0.c: Same.\n+\t* gcc.target/i386/inline_error.c: Same.\n+\t* gcc.target/i386/pr30848.c: Same.\n+\t* gcc.target/i386/pr39082-1.c: Same.\n+\t* gcc.target/i386/pr39678.c: Same.\n+\t* gcc.target/i386/pr57756.c: Same.\n+\t* gcc.target/i386/pr68843-1.c: Same.\n+\t* gcc.target/i386/pr79804.c: Same.\n+\t* gcc.target/i386/pr82673.c: Same.\n+\t* obj-c++.dg/class-protocol-1.mm: Same.\n+\t* obj-c++.dg/exceptions-3.mm: Same.\n+\t* obj-c++.dg/exceptions-4.mm: Same.\n+\t* obj-c++.dg/exceptions-5.mm: Same.\n+\t* obj-c++.dg/exceptions-6.mm: Same.\n+\t* obj-c++.dg/method-12.mm: Same.\n+\t* obj-c++.dg/method-13.mm: Same.\n+\t* obj-c++.dg/method-6.mm: Same.\n+\t* obj-c++.dg/method-7.mm: Same.\n+\t* obj-c++.dg/method-9.mm: Same.\n+\t* obj-c++.dg/method-lookup-1.mm: Same.\n+\t* obj-c++.dg/proto-lossage-4.mm: Same.\n+\t* obj-c++.dg/protocol-qualifier-2.mm: Same.\n+\t* objc.dg/call-super-2.m: Same.\n+\t* objc.dg/class-protocol-1.m: Same.\n+\t* objc.dg/desig-init-1.m: Same.\n+\t* objc.dg/exceptions-3.m: Same.\n+\t* objc.dg/exceptions-4.m: Same.\n+\t* objc.dg/exceptions-5.m: Same.\n+\t* objc.dg/exceptions-6.m: Same.\n+\t* objc.dg/method-19.m: Same.\n+\t* objc.dg/method-2.m: Same.\n+\t* objc.dg/method-5.m: Same.\n+\t* objc.dg/method-6.m: Same.\n+\t* objc.dg/method-7.m: Same.\n+\t* objc.dg/method-lookup-1.m: Same.\n+\t* objc.dg/proto-hier-1.m: Same.\n+\t* objc.dg/proto-lossage-4.m: Same.\n \n 2019-05-17  Dragan Mladjenovic  <dmladjenovic@wavecomp.com>\n \n@@ -3329,7 +3329,7 @@\n 2019-05-15  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR fortran/90461\n-        * gfortran.dg/open_errors_2.f90: Add -std=f2008, adjust line number.\n+\t* gfortran.dg/open_errors_2.f90: Add -std=f2008, adjust line number.\n \t* gfortran.dg/open_errors_3.f90: New test.\n \n 2019-05-15  H.J. Lu  <hongjiu.lu@intel.com>\n@@ -4057,10 +4057,10 @@\n \n 2019-04-29  Vladislav Ivanishin  <vlad@ispras.ru>\n \n-        * gcc.dg/uninit-25-gimple.c: New test.\n-        * gcc.dg/uninit-25.c: New test.\n-        * gcc.dg/uninit-26.c: New test.\n-        * gcc.dg/uninit-27-gimple.c: New test.\n+\t* gcc.dg/uninit-25-gimple.c: New test.\n+\t* gcc.dg/uninit-25.c: New test.\n+\t* gcc.dg/uninit-26.c: New test.\n+\t* gcc.dg/uninit-27-gimple.c: New test.\n \n 2019-04-29  Richard Biener  <rguenther@suse.de>\n "}]}