{"sha": "d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDA1NjdkYzBkYmY5MjI1OGFhZWE3MjdiN2I5M2E3ZDhiYzk1NGUzMw==", "commit": {"author": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-09T10:24:45Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2017-11-09T10:24:45Z"}, "message": "[multiple changes]\n\n2017-11-09  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* sigtramp-qnx.c: Fix obvious typo.\n\n2017-11-09  Doug Rupp  <rupp@adacore.com>\n\n\t* libgnarl/s-taprop__linux.adb (Monotonic_Clock): Minor reformatting.\n\n2017-11-09  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_res.adb (Resolve): If expression is an entity whose type has\n\timplicit dereference, generate reference to it, because no reference is\n\tgenerated for an overloaded entity during analysis, given that its\n\tidentity may not be known.\n\n2017-11-09  Javier Miranda  <miranda@adacore.com>\n\n\t* exp_disp.adb (Expand_Interface_Thunk): Replace substraction of\n\toffset-to-top field by addition.\n\t(Make_Secondary_DT): Initialize the offset-to-top field with a negative\n\toffset.\n\t* exp_ch3.adb (Build_Offset_To_Top_Function): Build functions that\n\treturn a negative offset-to-top value.\n\t(Initialize_Tag): Invoke runtime services Set_Dynamic_Offset_To_Top and\n\tSet_Static_Offset_To_Top passing a negative offet-to-top value;\n\tinitialize also the offset-to-top field with a negative offset.\n\t* libgnat/a-tags.adb (Base_Address): Displace the pointer by means of\n\tan addition since the offset-to-top field is now a negative value.\n\t(Displace): Displace the pointer to the object means of a substraction\n\tsince it is now a negative value.\n\t(Set_Dynamic_Offset_to_top): Displace the pointer to the object by\n\tmeans of a substraction since it is now a negative value.\n\n2017-11-09  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* gnat1drv.adb (Gnat1drv): Call Errout.Finalize (Last_Call => True)\n\tbefore Errout.Output_Messages also in the case of compilation errors.\n\n2017-11-09  Javier Miranda  <miranda@adacore.com>\n\n\t* doc/gnat_ugn/the_gnat_compilation_model.rst (Interfacing with C++ at\n\tthe Class Level): Fix error interfacing with C strings.\n\t* gnat_ugn.texi: Regenerate.\n\n2017-11-09  Jerome Lambourg  <lambourg@adacore.com>\n\n\t* system-qnx-aarch64.ads: Fix the priority constants.\n\t* s-osinte__qnx.ads: Fix constants for handling the locking protocols\n\tand scheduling.\n\t* s-osinte__qnx.adb: New file , prevents the use of priority 0 that\n\tcorresponds to an idle priority on QNX.\n\n2017-11-09  Piotr Trojanek  <trojanek@adacore.com>\n\n\t* sem_prag.adb, sem_util.adb, sem_elab.adb: Fix minor typos in\n\tcomments.\n\nFrom-SVN: r254566", "tree": {"sha": "12b18ddce896b17fad091bc385e386238f8b343b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/12b18ddce896b17fad091bc385e386238f8b343b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/comments", "author": null, "committer": null, "parents": [{"sha": "6350cb2aa6949c355b407233766717c229ef623f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6350cb2aa6949c355b407233766717c229ef623f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6350cb2aa6949c355b407233766717c229ef623f"}], "stats": {"total": 359, "additions": 266, "deletions": 93}, "files": [{"sha": "ed44aba098065569ce3af517acdaa2878407f077", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "patch": "@@ -1,3 +1,60 @@\n+2017-11-09  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* sigtramp-qnx.c: Fix obvious typo.\n+\n+2017-11-09  Doug Rupp  <rupp@adacore.com>\n+\n+\t* libgnarl/s-taprop__linux.adb (Monotonic_Clock): Minor reformatting.\n+\n+2017-11-09  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Resolve): If expression is an entity whose type has\n+\timplicit dereference, generate reference to it, because no reference is\n+\tgenerated for an overloaded entity during analysis, given that its\n+\tidentity may not be known.\n+\n+2017-11-09  Javier Miranda  <miranda@adacore.com>\n+\n+\t* exp_disp.adb (Expand_Interface_Thunk): Replace substraction of\n+\toffset-to-top field by addition.\n+\t(Make_Secondary_DT): Initialize the offset-to-top field with a negative\n+\toffset.\n+\t* exp_ch3.adb (Build_Offset_To_Top_Function): Build functions that\n+\treturn a negative offset-to-top value.\n+\t(Initialize_Tag): Invoke runtime services Set_Dynamic_Offset_To_Top and\n+\tSet_Static_Offset_To_Top passing a negative offet-to-top value;\n+\tinitialize also the offset-to-top field with a negative offset.\n+\t* libgnat/a-tags.adb (Base_Address): Displace the pointer by means of\n+\tan addition since the offset-to-top field is now a negative value.\n+\t(Displace): Displace the pointer to the object means of a substraction\n+\tsince it is now a negative value.\n+\t(Set_Dynamic_Offset_to_top): Displace the pointer to the object by\n+\tmeans of a substraction since it is now a negative value.\n+\n+2017-11-09  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat1drv.adb (Gnat1drv): Call Errout.Finalize (Last_Call => True)\n+\tbefore Errout.Output_Messages also in the case of compilation errors.\n+\n+2017-11-09  Javier Miranda  <miranda@adacore.com>\n+\n+\t* doc/gnat_ugn/the_gnat_compilation_model.rst (Interfacing with C++ at\n+\tthe Class Level): Fix error interfacing with C strings.\n+\t* gnat_ugn.texi: Regenerate.\n+\n+2017-11-09  Jerome Lambourg  <lambourg@adacore.com>\n+\n+\t* system-qnx-aarch64.ads: Fix the priority constants.\n+\t* s-osinte__qnx.ads: Fix constants for handling the locking protocols\n+\tand scheduling.\n+\t* s-osinte__qnx.adb: New file , prevents the use of priority 0 that\n+\tcorresponds to an idle priority on QNX.\n+\n+2017-11-09  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem_prag.adb, sem_util.adb, sem_elab.adb: Fix minor typos in\n+\tcomments.\n+\n 2017-11-09  Piotr Trojanek  <trojanek@adacore.com>\n \n \t* lib-xref-spark_specific.adb (Add_SPARK_Xrefs): Ignore loop parameters"}, {"sha": "48fedfea3a4eec2771c48aef0f60c1dc0d56f550", "filename": "gcc/ada/doc/gnat_ugn/the_gnat_compilation_model.rst", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdoc%2Fgnat_ugn%2Fthe_gnat_compilation_model.rst?ref=d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "patch": "@@ -4356,7 +4356,7 @@ how to import these C++ declarations from the Ada side:\n \n        type Dog is new Animal and Carnivore and Domestic with record\n          Tooth_Count : Natural;\n-         Owner       : String (1 .. 30);\n+         Owner       : Chars_Ptr;\n        end record;\n        pragma Import (C_Plus_Plus, Dog);\n "}, {"sha": "3d8f3e7cdf784b50fd6c8241e782b8c01db9ea49", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 46, "deletions": 46, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "patch": "@@ -2176,7 +2176,7 @@ package body Exp_Ch3 is\n             --  Generate\n             --    function Fxx (O : in Rec_Typ) return Storage_Offset is\n             --    begin\n-            --       return O.Iface_Comp'Position;\n+            --       return -O.Iface_Comp'Position;\n             --    end Fxx;\n \n             Body_Node := New_Node (N_Subprogram_Body, Loc);\n@@ -2199,15 +2199,16 @@ package body Exp_Ch3 is\n                 Statements     => New_List (\n                   Make_Simple_Return_Statement (Loc,\n                     Expression =>\n-                      Make_Attribute_Reference (Loc,\n-                        Prefix         =>\n-                          Make_Selected_Component (Loc,\n-                            Prefix        =>\n-                              Unchecked_Convert_To (Acc_Type,\n-                                Make_Identifier (Loc, Name_uO)),\n-                            Selector_Name =>\n-                              New_Occurrence_Of (Iface_Comp, Loc)),\n-                        Attribute_Name => Name_Position)))));\n+                      Make_Op_Minus (Loc,\n+                        Make_Attribute_Reference (Loc,\n+                          Prefix         =>\n+                            Make_Selected_Component (Loc,\n+                              Prefix        =>\n+                                Unchecked_Convert_To (Acc_Type,\n+                                  Make_Identifier (Loc, Name_uO)),\n+                              Selector_Name =>\n+                                New_Occurrence_Of (Iface_Comp, Loc)),\n+                          Attribute_Name => Name_Position))))));\n \n             Set_Ekind       (Func_Id, E_Function);\n             Set_Mechanism   (Func_Id, Default_Mechanism);\n@@ -8516,13 +8517,14 @@ package body Exp_Ch3 is\n \n                   Unchecked_Convert_To\n                     (RTE (RE_Storage_Offset),\n-                     Make_Attribute_Reference (Loc,\n-                       Prefix         =>\n-                         Make_Selected_Component (Loc,\n-                           Prefix        => New_Copy_Tree (Target),\n-                           Selector_Name =>\n-                             New_Occurrence_Of (Tag_Comp, Loc)),\n-                       Attribute_Name => Name_Position)),\n+                     Make_Op_Minus (Loc,\n+                       Make_Attribute_Reference (Loc,\n+                         Prefix         =>\n+                           Make_Selected_Component (Loc,\n+                             Prefix        => New_Copy_Tree (Target),\n+                             Selector_Name =>\n+                               New_Occurrence_Of (Tag_Comp, Loc)),\n+                         Attribute_Name => Name_Position))),\n \n                   Unchecked_Convert_To (RTE (RE_Offset_To_Top_Function_Ptr),\n                     Make_Attribute_Reference (Loc,\n@@ -8545,12 +8547,13 @@ package body Exp_Ch3 is\n                       New_Occurrence_Of (Offset_To_Top_Comp, Loc)),\n \n                 Expression =>\n-                  Make_Attribute_Reference (Loc,\n-                    Prefix       =>\n-                      Make_Selected_Component (Loc,\n-                        Prefix        => New_Copy_Tree (Target),\n-                        Selector_Name => New_Occurrence_Of (Tag_Comp, Loc)),\n-                  Attribute_Name => Name_Position)));\n+                  Make_Op_Minus (Loc,\n+                    Make_Attribute_Reference (Loc,\n+                      Prefix       =>\n+                        Make_Selected_Component (Loc,\n+                          Prefix        => New_Copy_Tree (Target),\n+                          Selector_Name => New_Occurrence_Of (Tag_Comp, Loc)),\n+                    Attribute_Name => Name_Position))));\n \n          --  Normal case: No discriminants in the parent type\n \n@@ -8567,13 +8570,14 @@ package body Exp_Ch3 is\n                    Iface_Tag    => New_Occurrence_Of (Iface_Tag, Loc),\n                    Offset_Value =>\n                      Unchecked_Convert_To (RTE (RE_Storage_Offset),\n-                       Make_Attribute_Reference (Loc,\n-                         Prefix         =>\n-                           Make_Selected_Component (Loc,\n-                             Prefix        => New_Copy_Tree (Target),\n-                             Selector_Name =>\n-                               New_Occurrence_Of (Tag_Comp, Loc)),\n-                         Attribute_Name => Name_Position))));\n+                       Make_Op_Minus (Loc,\n+                         Make_Attribute_Reference (Loc,\n+                           Prefix         =>\n+                             Make_Selected_Component (Loc,\n+                               Prefix        => New_Copy_Tree (Target),\n+                               Selector_Name =>\n+                                 New_Occurrence_Of (Tag_Comp, Loc)),\n+                           Attribute_Name => Name_Position)))));\n             end if;\n \n             --  Generate:\n@@ -8602,13 +8606,14 @@ package body Exp_Ch3 is\n                      New_Occurrence_Of (Standard_True, Loc),\n \n                      Unchecked_Convert_To (RTE (RE_Storage_Offset),\n-                       Make_Attribute_Reference (Loc,\n-                         Prefix         =>\n-                           Make_Selected_Component (Loc,\n-                             Prefix         => New_Copy_Tree (Target),\n-                             Selector_Name  =>\n-                               New_Occurrence_Of (Tag_Comp, Loc)),\n-                         Attribute_Name => Name_Position)),\n+                       Make_Op_Minus (Loc,\n+                         Make_Attribute_Reference (Loc,\n+                           Prefix         =>\n+                             Make_Selected_Component (Loc,\n+                               Prefix         => New_Copy_Tree (Target),\n+                               Selector_Name  =>\n+                                 New_Occurrence_Of (Tag_Comp, Loc)),\n+                           Attribute_Name => Name_Position))),\n \n                      Make_Null (Loc))));\n             end if;\n@@ -8712,15 +8717,10 @@ package body Exp_Ch3 is\n             --  Initialize secondary tags\n \n             else\n-               Append_To (Init_Tags_List,\n-                 Make_Assignment_Statement (Loc,\n-                   Name =>\n-                     Make_Selected_Component (Loc,\n-                       Prefix => New_Copy_Tree (Target),\n-                       Selector_Name =>\n-                         New_Occurrence_Of (Node (Iface_Comp_Elmt), Loc)),\n-                   Expression =>\n-                     New_Occurrence_Of (Node (Iface_Tag_Elmt), Loc)));\n+               Initialize_Tag (Full_Typ,\n+                 Iface     => Node (Iface_Elmt),\n+                 Tag_Comp  => Tag_Comp,\n+                 Iface_Tag => Node (Iface_Tag_Elmt));\n             end if;\n \n          --  Otherwise generate code to initialize the tag"}, {"sha": "b29686a3889bb5acb41a516a5cd8ae5e1a355f18", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "patch": "@@ -1884,7 +1884,7 @@ package body Exp_Disp is\n             --  Generate:\n             --     type T is access all <<type of the target formal>>\n             --     S : Storage_Offset := Storage_Offset!(Formal)\n-            --                            - Offset_To_Top (address!(Formal))\n+            --                            + Offset_To_Top (address!(Formal))\n \n             Decl_2 :=\n               Make_Full_Type_Declaration (Loc,\n@@ -1918,7 +1918,7 @@ package body Exp_Disp is\n                 Object_Definition   =>\n                   New_Occurrence_Of (RTE (RE_Storage_Offset), Loc),\n                 Expression          =>\n-                  Make_Op_Subtract (Loc,\n+                  Make_Op_Add (Loc,\n                     Left_Opnd  =>\n                       Unchecked_Convert_To\n                         (RTE (RE_Storage_Offset),\n@@ -1942,7 +1942,7 @@ package body Exp_Disp is\n \n             --  Generate:\n             --     S1 : Storage_Offset := Storage_Offset!(Formal'Address)\n-            --                             - Offset_To_Top (Formal'Address)\n+            --                             + Offset_To_Top (Formal'Address)\n             --     S2 : Addr_Ptr := Addr_Ptr!(S1)\n \n             New_Arg :=\n@@ -1969,7 +1969,7 @@ package body Exp_Disp is\n                 Object_Definition   =>\n                   New_Occurrence_Of (RTE (RE_Storage_Offset), Loc),\n                 Expression          =>\n-                  Make_Op_Subtract (Loc,\n+                  Make_Op_Add (Loc,\n                     Left_Opnd =>\n                       Unchecked_Convert_To\n                         (RTE (RE_Storage_Offset),\n@@ -4234,14 +4234,15 @@ package body Exp_Disp is\n \n          else\n             Append_To (DT_Aggr_List,\n-              Make_Attribute_Reference (Loc,\n-                Prefix         =>\n-                  Make_Selected_Component (Loc,\n-                    Prefix        =>\n-                      New_Occurrence_Of (Dummy_Object, Loc),\n-                    Selector_Name =>\n-                      New_Occurrence_Of (Iface_Comp, Loc)),\n-                Attribute_Name => Name_Position));\n+              Make_Op_Minus (Loc,\n+                Make_Attribute_Reference (Loc,\n+                  Prefix         =>\n+                    Make_Selected_Component (Loc,\n+                      Prefix        =>\n+                        New_Occurrence_Of (Dummy_Object, Loc),\n+                      Selector_Name =>\n+                        New_Occurrence_Of (Iface_Comp, Loc)),\n+                  Attribute_Name => Name_Position)));\n          end if;\n \n          --  Generate the Object Specific Data table required to dispatch calls"}, {"sha": "90c8cabe3fb66c85d7f5660e02f6ad3c17dbbbd5", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "patch": "@@ -1180,6 +1180,7 @@ begin\n       if Compilation_Errors then\n          Treepr.Tree_Dump;\n          Post_Compilation_Validation_Checks;\n+         Errout.Finalize (Last_Call => True);\n          Errout.Output_Messages;\n          Namet.Finalize;\n \n@@ -1190,7 +1191,6 @@ begin\n             Tree_Gen;\n          end if;\n \n-         Errout.Finalize (Last_Call => True);\n          Exit_Program (E_Errors);\n       end if;\n "}, {"sha": "016403982f05ff88fbce923b55ba02d70479f1b4", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "patch": "@@ -21,7 +21,7 @@\n \n @copying\n @quotation\n-GNAT User's Guide for Native Platforms , Oct 20, 2017\n+GNAT User's Guide for Native Platforms , Nov 09, 2017\n \n AdaCore\n \n@@ -6456,7 +6456,7 @@ package Animals is\n \n   type Dog is new Animal and Carnivore and Domestic with record\n     Tooth_Count : Natural;\n-    Owner       : String (1 .. 30);\n+    Owner       : Chars_Ptr;\n   end record;\n   pragma Import (C_Plus_Plus, Dog);\n "}, {"sha": "bc9ec4446c7d4c9d9ad14b80abdde4261c67515b", "filename": "gcc/ada/libgnarl/s-osinte__qnx.adb", "status": "added", "additions": 109, "deletions": 0, "changes": 109, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Flibgnarl%2Fs-osinte__qnx.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Flibgnarl%2Fs-osinte__qnx.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__qnx.adb?ref=d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "patch": "@@ -0,0 +1,109 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                 GNAT RUN-TIME LIBRARY (GNARL) COMPONENTS                 --\n+--                                                                          --\n+--                   S Y S T E M . O S _ I N T E R F A C E                  --\n+--                                                                          --\n+--                                   B o d y                                --\n+--                                                                          --\n+--             Copyright (C) 1991-2017, Florida State University            --\n+--                     Copyright (C) 1995-2017, AdaCore                     --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 3,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.                                     --\n+--                                                                          --\n+-- As a special exception under Section 7 of GPL version 3, you are granted --\n+-- additional permissions described in the GCC Runtime Library Exception,   --\n+-- version 3.1, as published by the Free Software Foundation.               --\n+--                                                                          --\n+-- You should have received a copy of the GNU General Public License and    --\n+-- a copy of the GCC Runtime Library Exception along with this program;     --\n+-- see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see    --\n+-- <http://www.gnu.org/licenses/>.                                          --\n+--                                                                          --\n+-- GNARL was developed by the GNARL team at Florida State University.       --\n+-- Extensive contributions were provided by Ada Core Technologies, Inc.     --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This version is for QNX operating systems\n+\n+pragma Polling (Off);\n+--  Turn off polling, we do not want ATC polling to take place during\n+--  tasking operations. It causes infinite loops and other problems.\n+\n+--  This package encapsulates all direct interfaces to OS services\n+--  that are needed by children of System.\n+\n+with Interfaces.C; use Interfaces.C;\n+package body System.OS_Interface is\n+\n+   --------------------\n+   -- Get_Stack_Base --\n+   --------------------\n+\n+   function Get_Stack_Base (thread : pthread_t) return Address is\n+      pragma Warnings (Off, thread);\n+\n+   begin\n+      return Null_Address;\n+   end Get_Stack_Base;\n+\n+   ------------------\n+   -- pthread_init --\n+   ------------------\n+\n+   procedure pthread_init is\n+   begin\n+      null;\n+   end pthread_init;\n+\n+   -----------------\n+   -- To_Duration --\n+   -----------------\n+\n+   function To_Duration (TS : timespec) return Duration is\n+   begin\n+      return Duration (TS.tv_sec) + Duration (TS.tv_nsec) / 10#1#E9;\n+   end To_Duration;\n+\n+   ------------------------\n+   -- To_Target_Priority --\n+   ------------------------\n+\n+   function To_Target_Priority\n+     (Prio : System.Any_Priority) return Interfaces.C.int\n+   is\n+   begin\n+      return Interfaces.C.int (Prio + 1);\n+   end To_Target_Priority;\n+\n+   -----------------\n+   -- To_Timespec --\n+   -----------------\n+\n+   function To_Timespec (D : Duration) return timespec is\n+      S : time_t;\n+      F : Duration;\n+\n+   begin\n+      S := time_t (Long_Long_Integer (D));\n+      F := D - Duration (S);\n+\n+      --  If F has negative value due to a round-up, adjust for positive F\n+      --  value.\n+\n+      if F < 0.0 then\n+         S := S - 1;\n+         F := F + 1.0;\n+      end if;\n+\n+      return timespec'(tv_sec => S,\n+                       tv_nsec => long (Long_Long_Integer (F * 10#1#E9)));\n+   end To_Timespec;\n+\n+end System.OS_Interface;"}, {"sha": "fdbf17460605fd58647ccf7189bef1076c339358", "filename": "gcc/ada/libgnarl/s-osinte__qnx.ads", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Flibgnarl%2Fs-osinte__qnx.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Flibgnarl%2Fs-osinte__qnx.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-osinte__qnx.ads?ref=d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "patch": "@@ -238,7 +238,7 @@ package System.OS_Interface is\n    -- Priority Scheduling --\n    -------------------------\n \n-   SCHED_OTHER : constant := 0;\n+   SCHED_OTHER : constant := 3;\n    SCHED_FIFO  : constant := 1;\n    SCHED_RR    : constant := 2;\n \n@@ -285,7 +285,7 @@ package System.OS_Interface is\n \n    PTHREAD_CREATE_DETACHED : constant := 1;\n \n-   PTHREAD_SCOPE_PROCESS : constant := 1;\n+   PTHREAD_SCOPE_PROCESS : constant := 4;\n    PTHREAD_SCOPE_SYSTEM  : constant := 0;\n \n    --  Read/Write lock not supported on Android.\n@@ -426,8 +426,9 @@ package System.OS_Interface is\n    -- POSIX.1c  Section 13 --\n    --------------------------\n \n-   PTHREAD_PRIO_PROTECT : constant := 0;\n-   PTHREAD_PRIO_INHERIT : constant := 1;\n+   PTHREAD_PRIO_INHERIT : constant := 0;\n+   PTHREAD_PRIO_NONE    : constant := 1;\n+   PTHREAD_PRIO_PROTECT : constant := 2;\n \n    function pthread_mutexattr_setprotocol\n      (attr     : access pthread_mutexattr_t;"}, {"sha": "2efdc978ff27e58ed769817ef113ee943bea43b0", "filename": "gcc/ada/libgnarl/s-taprop__linux.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Flibgnarl%2Fs-taprop__linux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Flibgnarl%2Fs-taprop__linux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-taprop__linux.adb?ref=d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "patch": "@@ -141,9 +141,9 @@ package body System.Task_Primitives.Operations is\n \n       function Monotonic_Clock return Duration;\n       pragma Inline (Monotonic_Clock);\n-      --  Returns \"absolute\" time, represented as an offset relative to \"the\n-      --  Epoch\", which is Jan 1, 1970. This clock implementation is immune to\n-      --  the system's clock changes.\n+      --  Returns an absolute time, represented as an offset relative to some\n+      --  unspecified starting point, typically system boot time. This clock is\n+      --  not affected by discontinuous jumps in the system time.\n \n       function RT_Resolution return Duration;\n       pragma Inline (RT_Resolution);"}, {"sha": "b1d619f16b587da78b6f17e5324756ae6a1a71a2", "filename": "gcc/ada/libgnarl/s-taprop__posix.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Flibgnarl%2Fs-taprop__posix.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Flibgnarl%2Fs-taprop__posix.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-taprop__posix.adb?ref=d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "patch": "@@ -149,9 +149,9 @@ package body System.Task_Primitives.Operations is\n \n       function Monotonic_Clock return Duration;\n       pragma Inline (Monotonic_Clock);\n-      --  Returns \"absolute\" time, represented as an offset relative to \"the\n-      --  Epoch\", which is Jan 1, 1970. This clock implementation is immune to\n-      --  the system's clock changes.\n+      --  Returns an absolute time, represented as an offset relative to some\n+      --  unspecified starting point, typically system boot time.  This clock\n+      --  is not affected by discontinuous jumps in the system time.\n \n       function RT_Resolution return Duration;\n       pragma Inline (RT_Resolution);"}, {"sha": "40dd11e68b5ad34a70ea0ee9ea58b0d24061f490", "filename": "gcc/ada/libgnat/a-tags.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Flibgnat%2Fa-tags.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Flibgnat%2Fa-tags.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tags.adb?ref=d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "patch": "@@ -332,7 +332,7 @@ package body Ada.Tags is\n \n    function Base_Address (This : System.Address) return System.Address is\n    begin\n-      return This - Offset_To_Top (This);\n+      return This + Offset_To_Top (This);\n    end Base_Address;\n \n    ---------------\n@@ -412,14 +412,14 @@ package body Ada.Tags is\n                --  Case of Static value of Offset_To_Top\n \n                if Iface_Table.Ifaces_Table (Id).Static_Offset_To_Top then\n-                  Obj_Base := Obj_Base +\n+                  Obj_Base := Obj_Base -\n                     Iface_Table.Ifaces_Table (Id).Offset_To_Top_Value;\n \n                --  Otherwise call the function generated by the expander to\n                --  provide the value.\n \n                else\n-                  Obj_Base := Obj_Base +\n+                  Obj_Base := Obj_Base -\n                     Iface_Table.Ifaces_Table (Id).Offset_To_Top_Func.all\n                       (Obj_Base);\n                end if;\n@@ -1046,7 +1046,7 @@ package body Ada.Tags is\n       --  Save the offset to top field in the secondary dispatch table\n \n       if Offset_Value /= 0 then\n-         Sec_Base := This + Offset_Value;\n+         Sec_Base := This - Offset_Value;\n          Sec_DT := DT (To_Tag_Ptr (Sec_Base).all);\n          Sec_DT.Offset_To_Top := SSE.Storage_Offset'Last;\n       end if;"}, {"sha": "9b8f3b49f333f63c94a3629a369097e9b6589556", "filename": "gcc/ada/libgnat/system-qnx-aarch64.ads", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Flibgnat%2Fsystem-qnx-aarch64.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Flibgnat%2Fsystem-qnx-aarch64.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fsystem-qnx-aarch64.ads?ref=d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "patch": "@@ -95,22 +95,20 @@ package System is\n \n    --  Priority-related Declarations (RM D.1)\n \n-   --  0 .. 98 corresponds to the system priority range 1 .. 99.\n-   --\n    --  If the scheduling policy is SCHED_FIFO or SCHED_RR the runtime makes use\n    --  of the entire range provided by the system.\n    --\n    --  If the scheduling policy is SCHED_OTHER the only valid system priority\n    --  is 1 and other values are simply ignored.\n \n-   Max_Priority           : constant Positive := 97;\n-   Max_Interrupt_Priority : constant Positive := 98;\n+   Max_Priority           : constant Positive := 62;\n+   Max_Interrupt_Priority : constant Positive := 63;\n \n-   subtype Any_Priority       is Integer      range  0 .. 98;\n-   subtype Priority           is Any_Priority range  0 .. 97;\n-   subtype Interrupt_Priority is Any_Priority range 98 .. 98;\n+   subtype Any_Priority       is Integer      range  0 .. 63;\n+   subtype Priority           is Any_Priority range  0 .. 62;\n+   subtype Interrupt_Priority is Any_Priority range 63 .. 63;\n \n-   Default_Priority : constant Priority := 48;\n+   Default_Priority : constant Priority := 31;\n \n private\n "}, {"sha": "bc8655813fda4f83450b7d412f512a77bb93fc61", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "patch": "@@ -128,7 +128,7 @@ package body Sem_Elab is\n    --  * Declaration level - A type of enclosing level. A scenario or target is\n    --    at the declaration level when it appears within the declarations of a\n    --    block statement, entry body, subprogram body, or task body, ignoring\n-   --    enclosing packges.\n+   --    enclosing packages.\n    --\n    --  * Generic library level - A type of enclosing level. A scenario or\n    --    target is at the generic library level if it appears in a generic"}, {"sha": "e70ae5400c2fd3532ba3d805e6f93a42afe38d95", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "patch": "@@ -28398,8 +28398,8 @@ package body Sem_Prag is\n             end if;\n          end if;\n \n-      --  When the item appears in the private state space of a packge, it must\n-      --  be a part of some state declared by the said package.\n+      --  When the item appears in the private state space of a package, it\n+      --  must be a part of some state declared by the said package.\n \n       else pragma Assert (Placement = Private_State_Space);\n \n@@ -29290,7 +29290,7 @@ package body Sem_Prag is\n       elsif Present (Corresponding_Aspect (Prag)) then\n          return Parent (Corresponding_Aspect (Prag));\n \n-      --  No candidate packge [body] found\n+      --  No candidate package [body] found\n \n       else\n          return Empty;"}, {"sha": "85621fd41a8719617a536121b33d758938bf9536", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "patch": "@@ -2448,11 +2448,18 @@ package body Sem_Res is\n \n                --  AI05-0139-2: Expression is overloaded because type has\n                --  implicit dereference. If type matches context, no implicit\n-               --  dereference is involved.\n+               --  dereference is involved. If the expression is an entity,\n+               --  generate a reference to it, as this is not done for an\n+               --  overloaded construct during analysis.\n \n                elsif Has_Implicit_Dereference (Expr_Type) then\n                   Set_Etype (N, Expr_Type);\n                   Set_Is_Overloaded (N, False);\n+\n+                  if Is_Entity_Name (N) then\n+                     Generate_Reference (Entity (N), N);\n+                  end if;\n+\n                   exit Interp_Loop;\n \n                elsif Is_Overloaded (N)"}, {"sha": "4bfa31693ef0e93d07013188acfdda745290a603", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "patch": "@@ -4031,7 +4031,7 @@ package body Sem_Util is\n          if SPARK_Mode_Is_Off (Pack) then\n             null;\n \n-         --  State refinement can only occur in a completing packge body. Do\n+         --  State refinement can only occur in a completing package body. Do\n          --  not verify proper state refinement when the body is subject to\n          --  pragma SPARK_Mode Off because this disables the requirement for\n          --  state refinement."}, {"sha": "6e70534c08c5f6b2745fd3d0d19e8195868c5aaf", "filename": "gcc/ada/sigtramp-qnx.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fsigtramp-qnx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0567dc0dbf92258aaea727b7b93a7d8bc954e33/gcc%2Fada%2Fsigtramp-qnx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsigtramp-qnx.c?ref=d0567dc0dbf92258aaea727b7b93a7d8bc954e33", "patch": "@@ -217,9 +217,9 @@ TCR(\"ret\")\n   CFI_COMMON_REGS \\\n   TCR(\"# Push FP and LR on stack\") \\\n   TCR(\"stp x29, x30, [sp, #-16]!\") \\\n-  TCR(\"# Push CFA register on stack\") \\\n-  TCR(\"str x\" S(CFA_REG) \", [sp, #-8]!\" \\\n-  TCR(\"# Set the CFA register to x2 value\") \\\n+  TCR(\"# Push register used to hold the CFA on stack\") \\\n+  TCR(\"str x\" S(CFA_REG) \", [sp, #-8]!\")  \\\n+  TCR(\"# Set the CFA: x2 value\") \\\n   TCR(\"mov x\" S(CFA_REG) \", x2\") \\\n   TCR(\"# Call the handler\") \\\n   TCR(\"blr x3\") \\"}]}