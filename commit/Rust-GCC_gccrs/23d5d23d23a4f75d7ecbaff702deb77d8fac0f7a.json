{"sha": "23d5d23d23a4f75d7ecbaff702deb77d8fac0f7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjNkNWQyM2QyM2E0Zjc1ZDdlY2JhZmY3MDJkZWI3N2Q4ZmFjMGY3YQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-08-13T18:30:00Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-08-13T18:30:00Z"}, "message": "(expand_inline_function): Copy args that are in hard regs instead of\nsubstiting them directly into insns.\n\nFrom-SVN: r5154", "tree": {"sha": "a77f097f4a04b0dbf2bd3c102220c5b41cd7b53e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a77f097f4a04b0dbf2bd3c102220c5b41cd7b53e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23d5d23d23a4f75d7ecbaff702deb77d8fac0f7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23d5d23d23a4f75d7ecbaff702deb77d8fac0f7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23d5d23d23a4f75d7ecbaff702deb77d8fac0f7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23d5d23d23a4f75d7ecbaff702deb77d8fac0f7a/comments", "author": null, "committer": null, "parents": [{"sha": "842fbaaafeb551c99d19c4be4b3c070edc8247af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/842fbaaafeb551c99d19c4be4b3c070edc8247af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/842fbaaafeb551c99d19c4be4b3c070edc8247af"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "bb48c28f2de3dddb3754966ebaf0ad9bd007b636", "filename": "gcc/integrate.c", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23d5d23d23a4f75d7ecbaff702deb77d8fac0f7a/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23d5d23d23a4f75d7ecbaff702deb77d8fac0f7a/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=23d5d23d23a4f75d7ecbaff702deb77d8fac0f7a", "patch": "@@ -1390,11 +1390,16 @@ expand_inline_function (fndecl, parms, target, ignore, type, structure_value_add\n \t     constant equivalence.\n \n \t     If LOC is REG_USERVAR_P, the usual case, COPY must also have\n-\t     that flag set if it is a register.  */\n+\t     that flag set if it is a register.\n+\n+\t     Also, don't allow hard registers here; they might not be valid\n+\t     when substituted into insns. */\n \n \t  if ((GET_CODE (copy) != REG && GET_CODE (copy) != SUBREG)\n \t      || (GET_CODE (copy) == REG && REG_USERVAR_P (loc)\n-\t\t  && ! REG_USERVAR_P (copy)))\n+\t\t  && ! REG_USERVAR_P (copy))\n+\t      || (GET_CODE (copy) == REG\n+\t\t  && REGNO (copy) < FIRST_PSEUDO_REGISTER))\n \t    {\n \t      temp = copy_to_mode_reg (GET_MODE (loc), copy);\n \t      REG_USERVAR_P (temp) = REG_USERVAR_P (loc);"}]}