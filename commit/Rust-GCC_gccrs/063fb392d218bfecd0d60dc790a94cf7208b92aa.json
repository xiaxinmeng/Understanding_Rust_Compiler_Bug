{"sha": "063fb392d218bfecd0d60dc790a94cf7208b92aa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDYzZmIzOTJkMjE4YmZlY2QwZDYwZGM3OTBhOTRjZjcyMDhiOTJhYQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2005-08-08T14:56:18Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2005-08-08T14:56:18Z"}, "message": "class.c (build_class_ref): Wrap the primary class type in a NOP_EXPR.\n\n\t* class.c (build_class_ref): Wrap the primary class type in a\n\tNOP_EXPR.\n\t* parse.y (java_complete_lhs) <COMPONENT_REF case>: Extract the\n\tprimary class type from the NOP_EXPR in which it was placed.\n\nFrom-SVN: r102859", "tree": {"sha": "286bf4d6e59159e3c998a456c121a115c046e034", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/286bf4d6e59159e3c998a456c121a115c046e034"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/063fb392d218bfecd0d60dc790a94cf7208b92aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/063fb392d218bfecd0d60dc790a94cf7208b92aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/063fb392d218bfecd0d60dc790a94cf7208b92aa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/063fb392d218bfecd0d60dc790a94cf7208b92aa/comments", "author": null, "committer": null, "parents": [{"sha": "f303a996311673f8c9178f6593bf4c804077a8ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f303a996311673f8c9178f6593bf4c804077a8ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f303a996311673f8c9178f6593bf4c804077a8ec"}], "stats": {"total": 56, "additions": 36, "deletions": 20}, "files": [{"sha": "01d9a916a9509849b663ee045aeff08127eaa53a", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063fb392d218bfecd0d60dc790a94cf7208b92aa/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063fb392d218bfecd0d60dc790a94cf7208b92aa/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=063fb392d218bfecd0d60dc790a94cf7208b92aa", "patch": "@@ -1,3 +1,10 @@\n+2005-08-08  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* class.c (build_class_ref): Wrap the primary class type in a\n+\tNOP_EXPR.\n+\t* parse.y (java_complete_lhs) <COMPONENT_REF case>: Extract the\n+\tprimary class type from the NOP_EXPR in which it was placed.\n+\n 2005-07-28  Diego Novillo  <dnovillo@redhat.com>\n \n \t* expr.c (expand_load_internal): Fix missing parens in"}, {"sha": "d7e22c2fccf6f007763e85ed2086eadb6df3be06", "filename": "gcc/java/class.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063fb392d218bfecd0d60dc790a94cf7208b92aa/gcc%2Fjava%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063fb392d218bfecd0d60dc790a94cf7208b92aa/gcc%2Fjava%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fclass.c?ref=063fb392d218bfecd0d60dc790a94cf7208b92aa", "patch": "@@ -1011,6 +1011,11 @@ build_class_ref (tree type)\n \t\tabort ();\n \n \t      prim_class = lookup_class (get_identifier (prim_class_name));\n+\t      /* We wrap the class in a NOP_EXPR, because it is a\n+\t         type.  We can't hold it in the COMPONENT_REF itself,\n+\t         as that type must remain NULL.  */\n+\t      prim_class = build1 (NOP_EXPR, prim_class, NULL_TREE);\n+\t      \n \t      return build3 (COMPONENT_REF, NULL_TREE,\n \t\t\t     prim_class, TYPE_identifier_node, NULL_TREE);\n \t    }"}, {"sha": "82c156e751751e35067903e7433a8cfe9901277e", "filename": "gcc/java/parse.y", "status": "modified", "additions": 24, "deletions": 20, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/063fb392d218bfecd0d60dc790a94cf7208b92aa/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/063fb392d218bfecd0d60dc790a94cf7208b92aa/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=063fb392d218bfecd0d60dc790a94cf7208b92aa", "patch": "@@ -12382,26 +12382,30 @@ java_complete_lhs (tree node)\n \n     case COMPONENT_REF:\n       /* The first step in the re-write of qualified name handling.  FIXME.\n-\t So far, this is only to support PRIMTYPE.class -> PRIMCLASS.TYPE. */\n-      TREE_OPERAND (node, 0) = java_complete_tree (TREE_OPERAND (node, 0));\n-      if (TREE_CODE (TREE_OPERAND (node, 0)) == RECORD_TYPE)\n-\t{\n-\t  tree name = TREE_OPERAND (node, 1);\n-\t  tree field = lookup_field_wrapper (TREE_OPERAND (node, 0), name);\n-\t  if (field == NULL_TREE)\n-\t    {\n-\t      error (\"missing static field %qs\", IDENTIFIER_POINTER (name));\n-\t      return error_mark_node;\n-\t    }\n-\t  if (! FIELD_STATIC (field))\n-\t    {\n-\t      error (\"not a static field %qs\", IDENTIFIER_POINTER (name));\n-\t      return error_mark_node;\n-\t    }\n-\t  return field;\n-\t}\n-      else\n-\tabort ();\n+\t So far, this is only to support PRIMTYPE.class ->\n+\t PRIMCLASS.TYPE. */\n+      {\n+\ttree prim_class = TREE_OPERAND (node, 0);\n+\ttree name = TREE_OPERAND (node, 1);\n+\ttree field;\n+\t\n+\tgcc_assert (TREE_CODE (prim_class) == NOP_EXPR);\n+\tprim_class = java_complete_tree (TREE_TYPE (prim_class));\n+\tgcc_assert (TREE_CODE (prim_class) == RECORD_TYPE);\n+\tfield = lookup_field_wrapper (prim_class, name);\n+\t\n+\tif (field == NULL_TREE)\n+\t  {\n+\t    error (\"missing static field %qs\", IDENTIFIER_POINTER (name));\n+\t    return error_mark_node;\n+\t  }\n+\tif (! FIELD_STATIC (field))\n+\t  {\n+\t    error (\"not a static field %qs\", IDENTIFIER_POINTER (name));\n+\t    return error_mark_node;\n+\t  }\n+\treturn field;\n+      }\n       break;\n \n     case THIS_EXPR:"}]}