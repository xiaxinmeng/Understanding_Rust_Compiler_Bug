{"sha": "13c216556de997e8bda737d18a41ebe61bce1d79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTNjMjE2NTU2ZGU5OTdlOGJkYTczN2QxOGE0MWViZTYxYmNlMWQ3OQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2014-11-10T20:14:41Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2014-11-10T20:14:41Z"}, "message": "invoke.texi ([-Wshift-count-negative, [...]): Add.\n\n2014-11-10  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* doc/invoke.texi ([-Wshift-count-negative, -Wshift-count-overflow]):\n\tAdd.\n\n/c-family\n2014-11-10  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* c.opt ([Wshift-count-negative, Wshift-count-overflow]): Add.\n\n/cp\n2014-11-10  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* typeck.c (cp_build_binary_op): Use OPT_Wshift_count_negative and\n\tOPT_Wshift_count_overflow in the warnings.\n\n/c\n2014-11-10  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* c-typeck.c (build_binary_op): Use OPT_Wshift_count_negative and\n\tOPT_Wshift_count_overflow in the warnings.\n\n/testsuite\n2014-11-10  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* c-c++-common/Wshift-count-overflow-1.c: New.\n\t* c-c++-common/Wshift-count-overflow-2.c: Likewise.\n\t* c-c++-common/Wshift-count-negative-1.c: Likewise.\n\t* c-c++-common/Wshift-count-negative-2.c: Likewise.\n\nFrom-SVN: r217313", "tree": {"sha": "a319274155607b59e6fd0d9bad41edc6a68b2038", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a319274155607b59e6fd0d9bad41edc6a68b2038"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/13c216556de997e8bda737d18a41ebe61bce1d79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13c216556de997e8bda737d18a41ebe61bce1d79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13c216556de997e8bda737d18a41ebe61bce1d79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13c216556de997e8bda737d18a41ebe61bce1d79/comments", "author": null, "committer": null, "parents": [{"sha": "de2b09ec2fac5fbbc0490f2768237f97261361ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de2b09ec2fac5fbbc0490f2768237f97261361ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de2b09ec2fac5fbbc0490f2768237f97261361ce"}], "stats": {"total": 109, "additions": 96, "deletions": 13}, "files": [{"sha": "6432b529097c08fcc4f2bdf1258b2a829c45df1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=13c216556de997e8bda737d18a41ebe61bce1d79", "patch": "@@ -1,3 +1,8 @@\n+2014-11-10  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* doc/invoke.texi ([-Wshift-count-negative, -Wshift-count-overflow]):\n+\tAdd.\n+\n 2014-11-10  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/frv/frv.c (frv_io_handle_use_1): Delete."}, {"sha": "f0fa714cfbc4863c9a4a3653ee0555dd2c8e8f9d", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=13c216556de997e8bda737d18a41ebe61bce1d79", "patch": "@@ -1,3 +1,7 @@\n+2014-11-10  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* c.opt ([Wshift-count-negative, Wshift-count-overflow]): Add.\n+\n 2014-11-10  Edward Smith-Rowland  <3dw4rd@verizon.net>\n \n \t* c-cppbuiltin.c (__has_attribute, __has_cpp_attribute): New macros;"}, {"sha": "85dcb98b6a635cc5985333f025f5020aed3f4ce3", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=13c216556de997e8bda737d18a41ebe61bce1d79", "patch": "@@ -760,13 +760,21 @@ Wselector\n ObjC ObjC++ Var(warn_selector) Warning\n Warn if a selector has multiple methods\n \n+Wsequence-point\n+C ObjC C++ ObjC++ Var(warn_sequence_point) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n+Warn about possible violations of sequence point rules\n+\n Wshadow-ivar\n ObjC ObjC++ Var(warn_shadow_ivar) EnabledBy(Wshadow) Init(1) Warning\n Warn if a local declaration hides an instance variable\n \n-Wsequence-point\n-C ObjC C++ ObjC++ Var(warn_sequence_point) Warning LangEnabledBy(C ObjC C++ ObjC++,Wall)\n-Warn about possible violations of sequence point rules\n+Wshift-count-negative\n+C ObjC C++ ObjC++ Var(warn_shift_count_negative) Init(1) Warning\n+Warn if shift count is negative\n+\n+Wshift-count-overflow\n+C ObjC C++ ObjC++ Var(warn_shift_count_overflow) Init(1) Warning\n+Warn if shift count >= width of type\n \n Wsign-compare\n C ObjC C++ ObjC++ Var(warn_sign_compare) Warning LangEnabledBy(C++ ObjC++,Wall)"}, {"sha": "a2b3c78fec009cde5db3801c1dc62ad46e7d8fe8", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=13c216556de997e8bda737d18a41ebe61bce1d79", "patch": "@@ -1,3 +1,8 @@\n+2014-11-10  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* c-typeck.c (build_binary_op): Use OPT_Wshift_count_negative and\n+\tOPT_Wshift_count_overflow in the warnings.\n+\n 2014-10-30  Marek Polacek  <polacek@redhat.com>\n \n \t* c-objc-common.c (c_tree_printer) <case 'T'>: For a typedef name,"}, {"sha": "77ce549ca150a69795e6d7f9115136d096c2eef3", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=13c216556de997e8bda737d18a41ebe61bce1d79", "patch": "@@ -10491,7 +10491,8 @@ build_binary_op (location_t location, enum tree_code code,\n \t\t{\n \t\t  int_const = false;\n \t\t  if (c_inhibit_evaluation_warnings == 0)\n-\t\t    warning_at (location, 0, \"right shift count is negative\");\n+\t\t    warning_at (location, OPT_Wshift_count_negative,\n+\t\t\t\t\"right shift count is negative\");\n \t\t}\n \t      else\n \t\t{\n@@ -10502,8 +10503,8 @@ build_binary_op (location_t location, enum tree_code code,\n \t\t    {\n \t\t      int_const = false;\n \t\t      if (c_inhibit_evaluation_warnings == 0)\n-\t\t\twarning_at (location, 0, \"right shift count >= width \"\n-\t\t\t\t    \"of type\");\n+\t\t\twarning_at (location, OPT_Wshift_count_overflow,\n+\t\t\t\t    \"right shift count >= width of type\");\n \t\t    }\n \t\t}\n \t    }\n@@ -10545,15 +10546,16 @@ build_binary_op (location_t location, enum tree_code code,\n \t\t{\n \t\t  int_const = false;\n \t\t  if (c_inhibit_evaluation_warnings == 0)\n-\t\t    warning_at (location, 0, \"left shift count is negative\");\n+\t\t    warning_at (location, OPT_Wshift_count_negative,\n+\t\t\t\t\"left shift count is negative\");\n \t\t}\n \n \t      else if (compare_tree_int (op1, TYPE_PRECISION (type0)) >= 0)\n \t\t{\n \t\t  int_const = false;\n \t\t  if (c_inhibit_evaluation_warnings == 0)\n-\t\t    warning_at (location, 0, \"left shift count >= width of \"\n-\t\t\t\t\"type\");\n+\t\t    warning_at (location, OPT_Wshift_count_overflow,\n+\t\t\t\t\"left shift count >= width of type\");\n \t\t}\n \t    }\n "}, {"sha": "22b013ed7a2db9b8eb066a53046e84d355aa6900", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=13c216556de997e8bda737d18a41ebe61bce1d79", "patch": "@@ -1,3 +1,8 @@\n+2014-11-10  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* typeck.c (cp_build_binary_op): Use OPT_Wshift_count_negative and\n+\tOPT_Wshift_count_overflow in the warnings.\n+\n 2014-11-09  Jason Merrill  <jason@redhat.com>\n \n \tDR 799"}, {"sha": "1f443ef0b1d4a1a7fe1b7d1966b58f9fee990507", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=13c216556de997e8bda737d18a41ebe61bce1d79", "patch": "@@ -4280,14 +4280,16 @@ cp_build_binary_op (location_t location,\n \t\t{\n \t\t  if ((complain & tf_warning)\n \t\t      && c_inhibit_evaluation_warnings == 0)\n-\t\t    warning (0, \"right shift count is negative\");\n+\t\t    warning (OPT_Wshift_count_negative,\n+\t\t\t     \"right shift count is negative\");\n \t\t}\n \t      else\n \t\t{\n \t\t  if (compare_tree_int (const_op1, TYPE_PRECISION (type0)) >= 0\n \t\t      && (complain & tf_warning)\n \t\t      && c_inhibit_evaluation_warnings == 0)\n-\t\t    warning (0, \"right shift count >= width of type\");\n+\t\t    warning (OPT_Wshift_count_overflow,\n+\t\t\t     \"right shift count >= width of type\");\n \t\t}\n \t    }\n \t  /* Convert the shift-count to an integer, regardless of\n@@ -4328,14 +4330,16 @@ cp_build_binary_op (location_t location,\n \t\t{\n \t\t  if ((complain & tf_warning)\n \t\t      && c_inhibit_evaluation_warnings == 0)\n-\t\t    warning (0, \"left shift count is negative\");\n+\t\t    warning (OPT_Wshift_count_negative,\n+\t\t\t     \"left shift count is negative\");\n \t\t}\n \t      else if (compare_tree_int (const_op1,\n \t\t\t\t\t TYPE_PRECISION (type0)) >= 0)\n \t\t{\n \t\t  if ((complain & tf_warning)\n \t\t      && c_inhibit_evaluation_warnings == 0)\n-\t\t    warning (0, \"left shift count >= width of type\");\n+\t\t    warning (OPT_Wshift_count_overflow,\n+\t\t\t     \"left shift count >= width of type\");\n \t\t}\n \t    }\n \t  /* Convert the shift-count to an integer, regardless of"}, {"sha": "cd20b6e3784b3d96e202a5bed2dc8aac44d5aa46", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=13c216556de997e8bda737d18a41ebe61bce1d79", "patch": "@@ -269,6 +269,7 @@ Objective-C and Objective-C++ Dialects}.\n -Wpointer-arith  -Wno-pointer-to-int-cast @gol\n -Wredundant-decls  -Wno-return-local-addr @gol\n -Wreturn-type  -Wsequence-point  -Wshadow  -Wno-shadow-ivar @gol\n+-Wshift-count-negative -Wshift-count-overflow @gol\n -Wsign-compare  -Wsign-conversion -Wfloat-conversion @gol\n -Wsizeof-pointer-memaccess  -Wsizeof-array-argument @gol\n -Wstack-protector -Wstack-usage=@var{len} -Wstrict-aliasing @gol\n@@ -3825,6 +3826,16 @@ exceptions are @samp{main} and functions defined in system headers.\n \n This warning is enabled by @option{-Wall}.\n \n+@item -Wshift-count-negative\n+@opindex Wshift-count-negative\n+@opindex Wno-shift-count-negative\n+Warn if shift count is negative. This warning is enabled by default.\n+\n+@item -Wshift-count-overflow\n+@opindex Wshift-count-overflow\n+@opindex Wno-shift-count-overflow\n+Warn if shift count >= width of type. This warning is enabled by default.\n+\n @item -Wswitch\n @opindex Wswitch\n @opindex Wno-switch"}, {"sha": "b84213889d20b6a309c6db0327f7495c06148920", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=13c216556de997e8bda737d18a41ebe61bce1d79", "patch": "@@ -1,3 +1,10 @@\n+2014-11-10  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* c-c++-common/Wshift-count-overflow-1.c: New.\n+\t* c-c++-common/Wshift-count-overflow-2.c: Likewise.\n+\t* c-c++-common/Wshift-count-negative-1.c: Likewise.\n+\t* c-c++-common/Wshift-count-negative-2.c: Likewise.\n+\n 2014-11-10  Andreas Tobler  <andreast@gcc.gnu.org>\n \n \t* gcc.dg/fshort-wchar.c: Use arm_eabi instead of arm*-*-*eabi*."}, {"sha": "d8833936a2bbbf23bc6c58722be8f705dc21aee7", "filename": "gcc/testsuite/c-c++-common/Wshift-count-negative-1.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-count-negative-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-count-negative-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-count-negative-1.c?ref=13c216556de997e8bda737d18a41ebe61bce1d79", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wshift-count-negative\" } */\n+\n+void foo()\n+{\n+  unsigned i1 = 1U << -1; /* { dg-warning \"left shift count is negative\" } */\n+  unsigned i2 = 1U >> -1; /* { dg-warning \"right shift count is negative\" } */\n+}"}, {"sha": "91c71297db3fbb74c880750aa1eff8abfd7ab760", "filename": "gcc/testsuite/c-c++-common/Wshift-count-negative-2.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-count-negative-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-count-negative-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-count-negative-2.c?ref=13c216556de997e8bda737d18a41ebe61bce1d79", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wno-shift-count-negative\" } */\n+\n+void foo()\n+{\n+  unsigned i1 = 1U << -1;\n+  unsigned i2 = 1U >> -1;\n+}"}, {"sha": "4d29d5786256cdb333ab2c9fd684ef1cfe6c3129", "filename": "gcc/testsuite/c-c++-common/Wshift-count-overflow-1.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-count-overflow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-count-overflow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-count-overflow-1.c?ref=13c216556de997e8bda737d18a41ebe61bce1d79", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wshift-count-overflow\" } */\n+\n+void foo()\n+{\n+  unsigned i1 = 1U << (sizeof(unsigned) * __CHAR_BIT__); /* { dg-warning \"left shift count >= width of type\" } */\n+  unsigned i2 = 1U >> (sizeof(unsigned) * __CHAR_BIT__); /* { dg-warning \"right shift count >= width of type\" } */\n+}"}, {"sha": "92032c024a29967f50fe3dd548b62129fc0c4346", "filename": "gcc/testsuite/c-c++-common/Wshift-count-overflow-2.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-count-overflow-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/13c216556de997e8bda737d18a41ebe61bce1d79/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-count-overflow-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWshift-count-overflow-2.c?ref=13c216556de997e8bda737d18a41ebe61bce1d79", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wno-shift-count-overflow\" } */\n+\n+void foo()\n+{\n+  unsigned i1 = 1U << (sizeof(unsigned) * __CHAR_BIT__);\n+  unsigned i2 = 1U >> (sizeof(unsigned) * __CHAR_BIT__);\n+}"}]}