{"sha": "76af5b38b58ea089da29898df37fd6dacc367d94", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZhZjViMzhiNThlYTA4OWRhMjk4OThkZjM3ZmQ2ZGFjYzM2N2Q5NA==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2013-09-25T16:24:30Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2013-09-25T16:24:30Z"}, "message": "Make-lang.in (jvspec.o): Remove.\n\n\t* Make-lang.in (jvspec.o): Remove.\n\t(CFLAGS-java/jvspec.o): New variable.\n\t($(XGCJ)$(exeext), java_OBJS): Use java/jvspec.o\n\t(java/jvspec.o-warn): Rename from jvspec.o-warn.\n\t(JAVA_TREE_H, java/jcf-dump.o, java/boehm.o, java/builtins.o)\n\t(java/class.o, java/constants.o, java/decl.o, java/except.o)\n\t(java/expr.o, java/jcf-depend.o, java/jcf-parse.o)\n\t(java/jvgenmain.o, java/lang.o, java/mangle.o, java/mangle_name.o)\n\t(java/resource.o java/typeck.o, java/win32-host.o)\n\t(java/verify-glue.o, java/verify-impl.o, java/zextract.o)\n\t(java/java-gimplify.o, java/jcf-io.o, java/jcf-path.o): Remove.\n\nFrom-SVN: r202902", "tree": {"sha": "4305bfea9cf21997bb8d49d7ff49fbd4ccd1205e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4305bfea9cf21997bb8d49d7ff49fbd4ccd1205e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76af5b38b58ea089da29898df37fd6dacc367d94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76af5b38b58ea089da29898df37fd6dacc367d94", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76af5b38b58ea089da29898df37fd6dacc367d94", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76af5b38b58ea089da29898df37fd6dacc367d94/comments", "author": null, "committer": null, "parents": [{"sha": "694e859ad1ffbe8931db40a4c647d1107a0cf3c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/694e859ad1ffbe8931db40a4c647d1107a0cf3c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/694e859ad1ffbe8931db40a4c647d1107a0cf3c6"}], "stats": {"total": 89, "additions": 19, "deletions": 70}, "files": [{"sha": "65554bafa9d9584d4697ca2885e3539b8de0b2e3", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76af5b38b58ea089da29898df37fd6dacc367d94/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76af5b38b58ea089da29898df37fd6dacc367d94/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=76af5b38b58ea089da29898df37fd6dacc367d94", "patch": "@@ -1,3 +1,17 @@\n+2013-09-25  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Make-lang.in (jvspec.o): Remove.\n+\t(CFLAGS-java/jvspec.o): New variable.\n+\t($(XGCJ)$(exeext), java_OBJS): Use java/jvspec.o\n+\t(java/jvspec.o-warn): Rename from jvspec.o-warn.\n+\t(JAVA_TREE_H, java/jcf-dump.o, java/boehm.o, java/builtins.o)\n+\t(java/class.o, java/constants.o, java/decl.o, java/except.o)\n+\t(java/expr.o, java/jcf-depend.o, java/jcf-parse.o)\n+\t(java/jvgenmain.o, java/lang.o, java/mangle.o, java/mangle_name.o)\n+\t(java/resource.o java/typeck.o, java/win32-host.o)\n+\t(java/verify-glue.o, java/verify-impl.o, java/zextract.o)\n+\t(java/java-gimplify.o, java/jcf-io.o, java/jcf-path.o): Remove.\n+\n 2013-09-25  Tom Tromey  <tromey@redhat.com>\n \n \t* Make-lang.in (jvspec.o): Don't use subshell."}, {"sha": "5ed344cc0d2a52428cd28580d5344b7683383fc8", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 5, "deletions": 70, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76af5b38b58ea089da29898df37fd6dacc367d94/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76af5b38b58ea089da29898df37fd6dacc367d94/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=76af5b38b58ea089da29898df37fd6dacc367d94", "patch": "@@ -55,16 +55,13 @@ JAVA_TARGET_INDEPENDENT_BIN_TOOLS = jcf-dump\n # Tell GNU make to ignore these if they exist.\n .PHONY: java\n \n-jvspec.o: $(srcdir)/java/jvspec.c $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(GCC_H) $(CONFIG_H) java/jcf.h java/javaop.h $(OPTS_H)\n-\t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \\\n-\t\t$(INCLUDES) $(srcdir)/java/jvspec.c $(OUTPUT_OPTION)\n+CFLAGS-java/jvspec.o += $(DRIVER_DEFINES)\n \n # Create the compiler driver for $(XGCJ).\n-$(XGCJ)$(exeext): $(GCC_OBJS) jvspec.o java/jcf-path.o \\\n+$(XGCJ)$(exeext): $(GCC_OBJS) java/jvspec.o java/jcf-path.o \\\n \t   libcommon-target.a $(LIBDEPS) $(EXTRA_GCC_OBJS)\n \t+$(LINKER) $(ALL_LINKERFLAGS) $(LDFLAGS) -o $@ $(GCC_OBJS) \\\n-\t  jvspec.o java/jcf-path.o $(EXTRA_GCC_OBJS) libcommon-target.a \\\n+\t  java/jvspec.o java/jcf-path.o $(EXTRA_GCC_OBJS) libcommon-target.a \\\n \t  $(EXTRA_GCC_LIBS) $(LIBS)\n \n # Create a version of the $(XGCJ) driver which calls the cross-compiler.\n@@ -88,13 +85,13 @@ JCFDUMP_OBJS = java/jcf-dump.o java/jcf-io.o java/jcf-depend.o java/jcf-path.o \\\n \n JVGENMAIN_OBJS = java/jvgenmain.o java/mangle_name.o\n \n-java_OBJS = $(sort $(JAVA_OBJS) $(JCFDUMP_OBJS) $(JVGENMAIN_OBJS)) jvspec.o\n+java_OBJS = $(sort $(JAVA_OBJS) $(JCFDUMP_OBJS) $(JVGENMAIN_OBJS)) java/jvspec.o\n \n # Use strict warnings for this front end.\n java-warn = $(STRICT_WARN)\n \n # String length warnings\n-jvspec.o-warn = -Wno-error\n+java/jvspec.o-warn = -Wno-error\n \n jc1$(exeext): $(JAVA_OBJS) $(BACKEND) $(LIBDEPS) attribs.o\n \trm -f $@\n@@ -262,76 +259,14 @@ java.stagefeedback: stageprofile-start\n \t-mv java/*$(objext) stagefeedback/java\n \n #\f\n-# .o:.h dependencies.\n-JAVA_TREE_H = $(TREE_H) $(HASHTAB_H) java/java-tree.h\n-\n-java/jcf-dump.o: $(CONFIG_H) $(SYSTEM_H) coretypes.h $(JAVA_TREE_H) \\\n-  java/jcf-dump.c java/jcf-reader.c java/jcf.h java/javaop.h java/javaop.def \\\n-  version.h $(GGC_H) intl.h java/zipfile.h $(DIAGNOSTIC_H)\n-java/boehm.o: java/boehm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(TREE_H) $(JAVA_TREE_H) java/parse.h\n-java/builtins.o: java/builtins.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(JAVA_TREE_H) $(GGC_H) $(FLAGS_H) $(OPTABS_H) $(EXPR_H) langhooks.h \\\n-  gt-java-builtins.h\n-java/class.o: java/class.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  $(JAVA_TREE_H) java/jcf.h java/parse.h toplev.h output.h $(GGC_H) \\\n-  $(FUNCTION_H) gt-java-class.h\n-java/constants.o: java/constants.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h \\\n-  toplev.h $(SYSTEM_H) coretypes.h $(TM_H) $(GGC_H) gt-java-constants.h\n-java/decl.o: java/decl.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h \\\n-  toplev.h $(FLAGS_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  java/java-except.h $(GGC_H) $(REAL_H) gt-java-decl.h \\\n-  $(TARGET_H) $(CGRAPH_H) langhooks.h\n-java/except.o: java/except.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h $(REAL_H) \\\n-  java/javaop.h java/java-opcodes.h java/java-except.h \\\n-  toplev.h $(SYSTEM_H) coretypes.h\n-java/expr.o: java/expr.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h $(REAL_H) \\\n-  java/javaop.h java/java-opcodes.h \\\n-  java/java-except.h java/java-except.h java/parse.h \\\n-  $(SYSTEM_H) coretypes.h $(TM_H) $(GGC_H) gt-java-expr.h $(TARGET_H) \\\n-  tree-iterator.h\n-java/jcf-depend.o: java/jcf-depend.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  java/jcf.h\n-java/jcf-parse.o: java/jcf-parse.c $(CONFIG_H) $(JAVA_TREE_H) $(FLAGS_H) \\\n-  input.h java/java-except.h $(SYSTEM_H) coretypes.h \\\n-  java/parse.h $(GGC_H) debug.h $(REAL_H) gt-java-jcf-parse.h \\\n-  java/jcf-reader.c java/zipfile.h java/jcf.h $(BITMAP_H)\n-java/jvgenmain.o: java/jvgenmain.c $(CONFIG_H) $(JAVA_TREE_H) $(SYSTEM_H) \\\n-  coretypes.h $(TM_H) intl.h $(DIAGNOSTIC_H)\n-java/lang.o: java/lang.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h input.h \\\n-  $(SYSTEM_H) coretypes.h $(TM_H) $(DIAGNOSTIC_H) \\\n-  langhooks.h $(LANGHOOKS_DEF_H) gt-java-lang.h $(OPTS_H) $(OPTIONS_H) \\\n-  $(TARGET_H)\n-java/mangle.o: java/mangle.c $(CONFIG_H) java/jcf.h $(JAVA_TREE_H) $(SYSTEM_H) \\\n-  coretypes.h $(TM_H) $(GGC_H) gt-java-mangle.h $(LANGHOOKS_DEF_H)\n-java/mangle_name.o: java/mangle_name.c $(CONFIG_H) java/jcf.h $(JAVA_TREE_H) \\\n-  $(SYSTEM_H) coretypes.h $(GGC_H)\n-java/resource.o: java/resource.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(JAVA_TREE_H) java/jcf.h java/parse.h toplev.h $(GGC_H) \\\n-  $(TARGET_H) $(FUNCTION_H) gt-java-resource.h\n-java/typeck.o: java/typeck.c $(CONFIG_H) $(JAVA_TREE_H) java/jcf.h \\\n-  $(SYSTEM_H) coretypes.h $(GGC_H) $(REAL_H)\n-java/win32-host.o: java/win32-host.c $(CONFIG_H) $(SYSTEM_H) coretypes.h java/jcf.h\n-java/verify-glue.o: java/verify-glue.c $(CONFIG_H) $(SYSTEM_H) $(JAVA_TREE_H) \\\n-  coretypes.h java/verify.h\n-java/verify-impl.o: java/verify-impl.c $(CONFIG_H) java/verify.h $(SYSTEM_H) \\\n-  coretypes.h  java/jcf.h $(JAVA_TREE_H)\n-java/zextract.o: java/zextract.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n-  java/zipfile.h\n-java/java-gimplify.o: java/java-gimplify.c $(CONFIG_H) $(SYSTEM_H) \\\n-  coretypes.h dumpfile.h $(JAVA_TREE_H) $(GIMPLE_H)\n \n # jcf-io.o needs $(ZLIBINC) added to cflags.\n CFLAGS-java/jcf-io.o += $(ZLIBINC)\n-java/jcf-io.o: java/jcf-io.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  $(JAVA_TREE_H) java/zipfile.h $(HASH_TABLE_H)\n \n # jcf-path.o needs a -D.\n CFLAGS-java/jcf-path.o += \\\n \t-DLIBGCJ_ZIP_FILE='\"$(datadir)/java/libgcj-$(version).jar\"' \\\n \t-DDEFAULT_TARGET_VERSION=\\\"$(version)\\\"\n-java/jcf-path.o: java/jcf-path.c $(CONFIG_H) $(SYSTEM_H) coretypes.h \\\n-  java/jcf.h\n \n TEXI_JAVA_FILES = java/gcj.texi $(gcc_docdir)/include/fdl.texi\t\t\\\n \t $(gcc_docdir)/include/gpl_v3.texi $(gcc_docdir)/include/gcc-common.texi   \\"}]}