{"sha": "1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWUzODgxYzJhMDU1MWMzM2JmZGJlMzk0NjMyMjVkMGViZjBkNWUyYQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-03-14T10:10:13Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-03-14T10:10:13Z"}, "message": "toplev.c (rest_of_compilation): Add CLEANUP_UPDATE_LIFE to cfg_cleanup call after liveness analysis.\n\n\n\t* toplev.c (rest_of_compilation): Add CLEANUP_UPDATE_LIFE to cfg_cleanup\n\tcall after liveness analysis.\n\n\t* recog.c (split_insn): Use delete_insn_and_edges.\n\n\t* cfgrtl.c (verify_flow_info): Be permisive about non-any_condjump\n\tinstructions to have branch prediction notes.\n\t* ia64reorg.c (ia64_reorg): Do not rebuild CFG.\n\nFrom-SVN: r50765", "tree": {"sha": "43fec42013e1f42932ed89af0a56c4423c96c03d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43fec42013e1f42932ed89af0a56c4423c96c03d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a/comments", "author": null, "committer": null, "parents": [{"sha": "200ef6348c95471448d8e3b97918e1bced384baf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/200ef6348c95471448d8e3b97918e1bced384baf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/200ef6348c95471448d8e3b97918e1bced384baf"}], "stats": {"total": 37, "additions": 20, "deletions": 17}, "files": [{"sha": "ea822d1d952318e80b7a2a38d4fa67bf97026115", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a", "patch": "@@ -1,3 +1,14 @@\n+Thu Mar 14 11:03:12 CET 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* toplev.c (rest_of_compilation): Add CLEANUP_UPDATE_LIFE to cfg_cleanup\n+\tcall after liveness analysis.\n+\n+\t* recog.c (split_insn): Use delete_insn_and_edges.\n+\n+\t* cfgrtl.c (verify_flow_info): Be permisive about non-any_condjump\n+\tinstructions to have branch prediction notes.\n+\t* ia64reorg.c (ia64_reorg): Do not rebuild CFG.\n+\n 2002-03-14  Geoffrey Keating  <geoffk@redhat.com>\n \n \t* configure.in: Don't pass -Wno-long-long to a ADA compiler"}, {"sha": "5bf33bc0795912153d6150be4b2a314c7cac4d08", "filename": "gcc/cfgrtl.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a/gcc%2Fcfgrtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a/gcc%2Fcfgrtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfgrtl.c?ref=1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a", "patch": "@@ -1745,14 +1745,9 @@ verify_flow_info ()\n       rtx note;\n \n       if (INSN_P (bb->end)\n-\t  && (note = find_reg_note (bb->end, REG_BR_PROB, NULL_RTX)))\n+\t  && (note = find_reg_note (bb->end, REG_BR_PROB, NULL_RTX))\n+\t  && any_condjump_p (bb->end))\n \t{\n-\t  if (!any_condjump_p (bb->end))\n-\t    {\n-\t      error (\"verify_flow_info: REG_BR_PROB on non-condjump\",\n-\t\t     bb->index);\n-\t      err = 1;\n-\t    }\n \t  if (INTVAL (XEXP (note, 0)) != BRANCH_EDGE (bb)->probability)\n \t    {\n \t      error (\"verify_flow_info: REG_BR_PROB does not match cfg %i %i\","}, {"sha": "186f4b3d92b38a52d07edd4cc7d1cab8ff4b605b", "filename": "gcc/config/ia64/ia64.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a/gcc%2Fconfig%2Fia64%2Fia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a/gcc%2Fconfig%2Fia64%2Fia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.c?ref=1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a", "patch": "@@ -6733,9 +6733,10 @@ ia64_reorg (insns)\n   if (optimize == 0)\n     split_all_insns_noflow ();\n \n-  /* Make sure the CFG and global_live_at_start are correct\n-     for emit_predicate_relation_info.  */\n-  find_basic_blocks (insns, max_reg_num (), NULL);\n+  /* We are freeing block_for_insn in the toplev to keep compatibility\n+     with old MDEP_REORGS that are not CFG based.  Recompute it now.  */\n+  compute_bb_for_insn (get_max_uid ());\n+  /* update_life_info_in_dirty_blocks should be enought here.  */\n   life_analysis (insns, NULL, PROP_DEATH_NOTES);\n \n   if (ia64_flag_schedule_insns2)"}, {"sha": "8ad3ed2a1ceffab2974ced0647dbe1aa5cddb3f9", "filename": "gcc/recog.c", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a/gcc%2Frecog.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a/gcc%2Frecog.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frecog.c?ref=1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a", "patch": "@@ -2682,11 +2682,7 @@ split_insn (insn)\n          allocation, and there are unlikely to be very many\n          nops then anyways.  */\n       if (reload_completed)\n-\t{\n-\t  PUT_CODE (insn, NOTE);\n-\t  NOTE_LINE_NUMBER (insn) = NOTE_INSN_DELETED;\n-\t  NOTE_SOURCE_FILE (insn) = 0;\n-\t}\n+\tdelete_insn_and_edges (insn);\n     }\n   else\n     {\n@@ -2761,7 +2757,7 @@ split_all_insns (upd_life)\n \t      insn = last;\n \t    }\n \n-\t  if (insn == bb->end)\n+\t  if (next == NEXT_INSN (bb->end))\n \t    break;\n \t}\n "}, {"sha": "fa8af755fdbe508567ebd5730fee4e26aeef8d63", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=1e3881c2a0551c33bfdbe39463225d0ebf0d5e2a", "patch": "@@ -2999,7 +2999,7 @@ rest_of_compilation (decl)\n #endif\n   life_analysis (insns, rtl_dump_file, PROP_FINAL);\n   if (optimize)\n-    cleanup_cfg ((optimize ? CLEANUP_EXPENSIVE : 0)\n+    cleanup_cfg ((optimize ? CLEANUP_EXPENSIVE : 0) | CLEANUP_UPDATE_LIFE\n \t\t | (flag_thread_jumps ? CLEANUP_THREADING : 0));\n   timevar_pop (TV_FLOW);\n "}]}