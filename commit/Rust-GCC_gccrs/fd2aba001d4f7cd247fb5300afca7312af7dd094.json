{"sha": "fd2aba001d4f7cd247fb5300afca7312af7dd094", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmQyYWJhMDAxZDRmN2NkMjQ3ZmI1MzAwYWZjYTczMTJhZjdkZDA5NA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2001-11-28T02:36:03Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2001-11-28T02:36:03Z"}, "message": "* gcc.dg/20011127-1.c: New test.\n\nFrom-SVN: r47394", "tree": {"sha": "78d92f3162ff2866ba9d079383f0f73f686d3b49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78d92f3162ff2866ba9d079383f0f73f686d3b49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd2aba001d4f7cd247fb5300afca7312af7dd094", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd2aba001d4f7cd247fb5300afca7312af7dd094", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd2aba001d4f7cd247fb5300afca7312af7dd094", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd2aba001d4f7cd247fb5300afca7312af7dd094/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e490616e338de38ffb90494e9d2091b65ea43eed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e490616e338de38ffb90494e9d2091b65ea43eed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e490616e338de38ffb90494e9d2091b65ea43eed"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "5e9d1967750b01ad8d158f40010f7c43a68f96b3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd2aba001d4f7cd247fb5300afca7312af7dd094/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd2aba001d4f7cd247fb5300afca7312af7dd094/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fd2aba001d4f7cd247fb5300afca7312af7dd094", "patch": "@@ -1,3 +1,7 @@\n+2001-11-28  Hans-Peter Nilsson  <hp@axis.com>\n+\n+\t* gcc.dg/20011127-1.c: New test.\n+\n 2001-11-25  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* gcc.dg/format/strfmon-1.c: Update comments.  Adjust examples"}, {"sha": "a9191280088b5547f8cfa47c9af9f2a283ff588c", "filename": "gcc/testsuite/gcc.dg/20011127-1.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd2aba001d4f7cd247fb5300afca7312af7dd094/gcc%2Ftestsuite%2Fgcc.dg%2F20011127-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd2aba001d4f7cd247fb5300afca7312af7dd094/gcc%2Ftestsuite%2Fgcc.dg%2F20011127-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20011127-1.c?ref=fd2aba001d4f7cd247fb5300afca7312af7dd094", "patch": "@@ -0,0 +1,30 @@\n+/* Copyright (C) 2001  Free Software Foundation.\n+   by Hans-Peter Nilsson  <hp@axis.com>\n+\n+   Making sure that invalid asm operand modifiers don't cause an ICE.  */\n+\n+/* { dg-do compile { target cris-*-* } } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-error \"reg:SI|const_double:DF\" \"prune debug_rtx output\" { target cris-*-* } 0 } */\n+\n+void\n+foo (void)\n+{\n+  /* The first case symbolizes the default case for CRIS.  */\n+  asm (\"\\n;# %w0\" : : \"r\" (0));\t/* { dg-error \"modifier\" } */\n+\n+  /* These are explicit cases.  Luckily, a register is invalid in most of\n+     them.  */\n+  asm (\"\\n;# %b0\" : : \"r\" (0));\t\t/* { dg-error \"modifier\" } */\n+  asm (\"\\n;# %v0\" : : \"r\" (0));\t\t/* { dg-error \"modifier\" } */\n+  asm (\"\\n;# %P0\" : : \"r\" (0));\t\t/* { dg-error \"modifier\" } */\n+  asm (\"\\n;# %p0\" : : \"r\" (0));\t\t/* { dg-error \"modifier\" } */\n+  asm (\"\\n;# %z0\" : : \"r\" (0));\t\t/* { dg-error \"modifier\" } */\n+  asm (\"\\n;# %H0\" : : \"F\" (0.5));\t/* { dg-error \"modifier\" } */\n+  asm (\"\\n;# %e0\" : : \"r\" (0));\t\t/* { dg-error \"modifier\" } */\n+  asm (\"\\n;# %m0\" : : \"r\" (0));\t\t/* { dg-error \"modifier\" } */\n+  asm (\"\\n;# %A0\" : : \"r\" (0));\t\t/* { dg-error \"modifier\" } */\n+  asm (\"\\n;# %D0\" : : \"r\" (0));\t\t/* { dg-error \"modifier\" } */\n+  asm (\"\\n;# %T0\" : : \"r\" (0));\t\t/* { dg-error \"modifier\" } */\n+  /* Add more must-not-ICE asm errors here as we find them ICEing.  */\n+}"}]}