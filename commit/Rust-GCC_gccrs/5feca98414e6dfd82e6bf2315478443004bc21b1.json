{"sha": "5feca98414e6dfd82e6bf2315478443004bc21b1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWZlY2E5ODQxNGU2ZGZkODJlNmJmMjMxNTQ3ODQ0MzAwNGJjMjFiMQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-02-28T07:34:12Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-02-28T07:34:12Z"}, "message": "pa.h (CONST_COSTS): When checking the CONST_DOUBLE enumerated case...\n\n       * pa.h (CONST_COSTS): When checking the CONST_DOUBLE enumerated\n       case, add parentheses to specify the proper order of precedence in\n       the if-statement.\n\nFrom-SVN: r18291", "tree": {"sha": "6b05128fd68f33655fa8e0f67cfcc010b55a5ae2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6b05128fd68f33655fa8e0f67cfcc010b55a5ae2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5feca98414e6dfd82e6bf2315478443004bc21b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5feca98414e6dfd82e6bf2315478443004bc21b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5feca98414e6dfd82e6bf2315478443004bc21b1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5feca98414e6dfd82e6bf2315478443004bc21b1/comments", "author": null, "committer": null, "parents": [{"sha": "517237119124e0a16546a3bf0584d9422ca5dfb0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/517237119124e0a16546a3bf0584d9422ca5dfb0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/517237119124e0a16546a3bf0584d9422ca5dfb0"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "301711c4096e6bef333c22545129e70300c0c369", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5feca98414e6dfd82e6bf2315478443004bc21b1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5feca98414e6dfd82e6bf2315478443004bc21b1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5feca98414e6dfd82e6bf2315478443004bc21b1", "patch": "@@ -1,5 +1,10 @@\n Sat Feb 28 07:54:03 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n+\t* pa.h (CONST_COSTS): When checking the CONST_DOUBLE enumerated\n+ \tcase, add parentheses to specify the proper order of precedence in\n+ \tthe if-statement.\n+\t\n+\n \t* c-aux-info.c: Include string.h/strings.h.\n \n \t* pa.c: Include stdlib.h."}, {"sha": "4fd25f8ff73ab358fc828e90a9d861665dd989be", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5feca98414e6dfd82e6bf2315478443004bc21b1/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5feca98414e6dfd82e6bf2315478443004bc21b1/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=5feca98414e6dfd82e6bf2315478443004bc21b1", "patch": "@@ -1826,20 +1826,20 @@ while (0)\n    return it with a return statement.  Otherwise, break from the switch.  */\n \n #define CONST_COSTS(RTX,CODE,OUTER_CODE) \\\n-  case CONST_INT:\t\t\t\t\t\t\\\n-    if (INTVAL (RTX) == 0) return 0;\t\t\t\t\\\n-    if (INT_14_BITS (RTX)) return 1;\t\t\t\t\\\n-  case HIGH:\t\t\t\t\t\t\t\\\n-    return 2;\t\t\t\t\t\t\t\\\n-  case CONST:\t\t\t\t\t\t\t\\\n-  case LABEL_REF:\t\t\t\t\t\t\\\n-  case SYMBOL_REF:\t\t\t\t\t\t\\\n-    return 4;\t\t\t\t\t\t\t\\\n-  case CONST_DOUBLE:\t\t\t\t\t\t\\\n-    if (RTX == CONST0_RTX (DFmode) || RTX == CONST0_RTX (SFmode)\\\n-\t&& OUTER_CODE != SET)\t\t\t\t\t\\\n-      return 0;\t\t\t\t\t\t\t\\\n-    else\t\t\t\t\t\t\t\\\n+  case CONST_INT:\t\t\t\t\t\t\t\\\n+    if (INTVAL (RTX) == 0) return 0;\t\t\t\t\t\\\n+    if (INT_14_BITS (RTX)) return 1;\t\t\t\t\t\\\n+  case HIGH:\t\t\t\t\t\t\t\t\\\n+    return 2;\t\t\t\t\t\t\t\t\\\n+  case CONST:\t\t\t\t\t\t\t\t\\\n+  case LABEL_REF:\t\t\t\t\t\t\t\\\n+  case SYMBOL_REF:\t\t\t\t\t\t\t\\\n+    return 4;\t\t\t\t\t\t\t\t\\\n+  case CONST_DOUBLE:\t\t\t\t\t\t\t\\\n+    if ((RTX == CONST0_RTX (DFmode) || RTX == CONST0_RTX (SFmode))\t\\\n+\t&& OUTER_CODE != SET)\t\t\t\t\t\t\\\n+      return 0;\t\t\t\t\t\t\t\t\\\n+    else\t\t\t\t\t\t\t\t\\\n       return 8;\n \n #define ADDRESS_COST(RTX) \\"}]}