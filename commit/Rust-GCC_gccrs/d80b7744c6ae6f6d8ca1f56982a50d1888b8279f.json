{"sha": "d80b7744c6ae6f6d8ca1f56982a50d1888b8279f", "node_id": "C_kwDOANBUbNoAKGQ4MGI3NzQ0YzZhZTZmNmQ4Y2ExZjU2OTgyYTUwZDE4ODhiODI3OWY", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-10-25T04:28:44Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-10-26T10:48:53Z"}, "message": "i386: add reset_cpu_feature\n\ngcc/ChangeLog:\n\n\t* common/config/i386/cpuinfo.h (has_cpu_feature): Add comment.\n\t(reset_cpu_feature): New.\n\t(get_zhaoxin_cpu): Use reset_cpu_feature.", "tree": {"sha": "f7fa6128c23015cd3ed3d5ae0b14bb4d76371bf0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7fa6128c23015cd3ed3d5ae0b14bb4d76371bf0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d80b7744c6ae6f6d8ca1f56982a50d1888b8279f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d80b7744c6ae6f6d8ca1f56982a50d1888b8279f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d80b7744c6ae6f6d8ca1f56982a50d1888b8279f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d80b7744c6ae6f6d8ca1f56982a50d1888b8279f/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4329d111f48cba9ea560fc0a36f4cb5a290decb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4329d111f48cba9ea560fc0a36f4cb5a290decb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4329d111f48cba9ea560fc0a36f4cb5a290decb2"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "19ea7132fd59e880941d8814ef7899e75ad70308", "filename": "gcc/common/config/i386/cpuinfo.h", "status": "modified", "additions": 33, "deletions": 5, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d80b7744c6ae6f6d8ca1f56982a50d1888b8279f/gcc%2Fcommon%2Fconfig%2Fi386%2Fcpuinfo.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d80b7744c6ae6f6d8ca1f56982a50d1888b8279f/gcc%2Fcommon%2Fconfig%2Fi386%2Fcpuinfo.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fi386%2Fcpuinfo.h?ref=d80b7744c6ae6f6d8ca1f56982a50d1888b8279f", "patch": "@@ -76,6 +76,8 @@ has_cpu_feature (struct __processor_model *cpu_model,\n     }\n }\n \n+/* Save FEATURE to either CPU_MODEL or CPU_FEATURES2.  */\n+\n static inline void\n set_cpu_feature (struct __processor_model *cpu_model,\n \t\t unsigned int *cpu_features2,\n@@ -100,6 +102,32 @@ set_cpu_feature (struct __processor_model *cpu_model,\n     }\n }\n \n+/* Drop FEATURE from either CPU_MODEL or CPU_FEATURES2.  */\n+\n+static inline void\n+reset_cpu_feature (struct __processor_model *cpu_model,\n+\t\t   unsigned int *cpu_features2,\n+\t\t   enum processor_features feature)\n+{\n+  unsigned index, offset;\n+  unsigned f = feature;\n+\n+  if (f < 32)\n+    {\n+      /* The first 32 features.  */\n+      cpu_model->__cpu_features[0] &= ~(1U << f);\n+    }\n+  else\n+    {\n+      /* The rest of features.  cpu_features2[i] contains features from\n+\t (32 + i * 32) to (31 + 32 + i * 32), inclusively.  */\n+      f -= 32;\n+      index = f / 32;\n+      offset = f % 32;\n+      cpu_features2[index] &= ~(1U << offset);\n+    }\n+}\n+\n /* Get the specific type of AMD CPU and return AMD CPU name.  Return\n    NULL for unknown AMD CPU.  */\n \n@@ -565,11 +593,11 @@ get_zhaoxin_cpu (struct __processor_model *cpu_model,\n       cpu_model->__cpu_type = ZHAOXIN_FAM7H;\n       if (model == 0x3b)\n \t{\n-\tcpu = \"lujiazui\";\n-\tCHECK___builtin_cpu_is (\"lujiazui\");\n-\tcpu_model->__cpu_features[0] &= ~(1U <<(FEATURE_AVX & 31));\n-\tcpu_features2[0] &= ~(1U <<((FEATURE_F16C - 32) & 31));\n-\tcpu_model->__cpu_subtype = ZHAOXIN_FAM7H_LUJIAZUI;\n+\t  cpu = \"lujiazui\";\n+\t  CHECK___builtin_cpu_is (\"lujiazui\");\n+\t  reset_cpu_feature (cpu_model, cpu_features2, FEATURE_AVX);\n+\t  reset_cpu_feature (cpu_model, cpu_features2, FEATURE_F16C);\n+\t  cpu_model->__cpu_subtype = ZHAOXIN_FAM7H_LUJIAZUI;\n \t}\n       break;\n     default:"}]}