{"sha": "81371eff9bc7ef26172c925c923fdd28ac3622ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODEzNzFlZmY5YmM3ZWYyNjE3MmM5MjVjOTIzZmRkMjhhYzM2MjJjZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-06-02T02:28:25Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-06-02T02:28:25Z"}, "message": "re PR c++/65942 ([C++14] cannot use std::function as comparator in algorithms)\n\n\tPR c++/65942\n\t* decl2.c (mark_used): Don't always instantiate constexpr fns.\n\t* constexpr.c (cxx_eval_call_expression): Instantiate them here.\n\nFrom-SVN: r224008", "tree": {"sha": "e73101948543e48f9fa6eaa1f25cffe11c9ab0be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e73101948543e48f9fa6eaa1f25cffe11c9ab0be"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81371eff9bc7ef26172c925c923fdd28ac3622ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81371eff9bc7ef26172c925c923fdd28ac3622ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81371eff9bc7ef26172c925c923fdd28ac3622ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81371eff9bc7ef26172c925c923fdd28ac3622ce/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "603eaec49a32f4b409ca8c22e71e6f683c799758", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/603eaec49a32f4b409ca8c22e71e6f683c799758", "html_url": "https://github.com/Rust-GCC/gccrs/commit/603eaec49a32f4b409ca8c22e71e6f683c799758"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "be1a3f967172f358e0204346c8f6a38a4ab1aabd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81371eff9bc7ef26172c925c923fdd28ac3622ce/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81371eff9bc7ef26172c925c923fdd28ac3622ce/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=81371eff9bc7ef26172c925c923fdd28ac3622ce", "patch": "@@ -1,5 +1,9 @@\n 2015-06-01  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/65942\n+\t* decl2.c (mark_used): Don't always instantiate constexpr fns.\n+\t* constexpr.c (cxx_eval_call_expression): Instantiate them here.\n+\n \tPR c++/44282\n \t* mangle.c (attr_strcmp): New.\n \t(write_CV_qualifiers_for_type): Also write out attributes that"}, {"sha": "d05372a5ac13a6845b6556133eb4863dd03f7f01", "filename": "gcc/cp/constexpr.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81371eff9bc7ef26172c925c923fdd28ac3622ce/gcc%2Fcp%2Fconstexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81371eff9bc7ef26172c925c923fdd28ac3622ce/gcc%2Fcp%2Fconstexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fconstexpr.c?ref=81371eff9bc7ef26172c925c923fdd28ac3622ce", "patch": "@@ -1240,6 +1240,15 @@ cxx_eval_call_expression (const constexpr_ctx *ctx, tree t,\n \treturn build_zero_init (DECL_CONTEXT (fun), NULL_TREE, false);\n     }\n \n+  /* We can't defer instantiating the function any longer.  */\n+  if (!DECL_INITIAL (fun)\n+      && DECL_TEMPLOID_INSTANTIATION (fun))\n+    {\n+      ++function_depth;\n+      instantiate_decl (fun, /*defer_ok*/false, /*expl_inst*/false);\n+      --function_depth;\n+    }\n+\n   /* If in direct recursive call, optimize definition search.  */\n   if (ctx && ctx->call && ctx->call->fundef->decl == fun)\n     new_call.fundef = ctx->call->fundef;"}, {"sha": "8ba19cfda19bbfc5573a24bd29425c82a45a4c0a", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81371eff9bc7ef26172c925c923fdd28ac3622ce/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81371eff9bc7ef26172c925c923fdd28ac3622ce/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=81371eff9bc7ef26172c925c923fdd28ac3622ce", "patch": "@@ -5046,8 +5046,7 @@ mark_used (tree decl, tsubst_flags_t complain)\n       && DECL_TEMPLATE_INFO (decl)\n       && (decl_maybe_constant_var_p (decl)\n \t  || (TREE_CODE (decl) == FUNCTION_DECL\n-\t      && (DECL_DECLARED_CONSTEXPR_P (decl)\n-\t\t  || DECL_OMP_DECLARE_REDUCTION_P (decl)))\n+\t      && DECL_OMP_DECLARE_REDUCTION_P (decl))\n \t  || undeduced_auto_decl (decl))\n       && !uses_template_parms (DECL_TI_ARGS (decl)))\n     {"}, {"sha": "15ca995f828a66d34ecee1a25c293e2c6f032843", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-decltype2.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81371eff9bc7ef26172c925c923fdd28ac3622ce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-decltype2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81371eff9bc7ef26172c925c923fdd28ac3622ce/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-decltype2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-decltype2.C?ref=81371eff9bc7ef26172c925c923fdd28ac3622ce", "patch": "@@ -0,0 +1,7 @@\n+// PR c++/65942\n+// { dg-do compile { target c++11 } }\n+\n+template <typename T> constexpr int f(T t) { return t; }\n+template <typename T, typename = decltype(f(T()))> void g(T) { }\n+void g(...) { }\n+int main() { g(\"\"); }"}]}