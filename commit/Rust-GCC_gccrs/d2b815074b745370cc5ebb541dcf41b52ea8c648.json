{"sha": "d2b815074b745370cc5ebb541dcf41b52ea8c648", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJiODE1MDc0Yjc0NTM3MGNjNWViYjU0MWRjZjQxYjUyZWE4YzY0OA==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.ch", "date": "2006-08-01T20:59:24Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2006-08-01T20:59:24Z"}, "message": "natSystemProperties.cc: Add additional check for getpwuid_r on _POSIX_PTHREAD_SEMANTICS.\n\n2006-08-01  Andreas Tobler  <a.tobler@schweiz.ch>\n\n\t* gnu/classpath/natSystemProperties.cc: Add additional check for\n\tgetpwuid_r on _POSIX_PTHREAD_SEMANTICS.\n\t(SystemProperties::insertSystemProperties): Likewise.\n\t* java/io/natFilePosix.cc (File::performList): Add\n\tadditional check for readdir_r on _POSIX_PTHREAD_SEMANTICS.\n\t* java/util/natVMTimeZone.cc (VMTimeZone::getSystemTimeZoneId): Add\n\tadditional check for localtime_r on _POSIX_PTHREAD_SEMANTICS.\n\nFrom-SVN: r115864", "tree": {"sha": "6cff204b32d7948ab8b445aab320aab3819ec115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6cff204b32d7948ab8b445aab320aab3819ec115"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2b815074b745370cc5ebb541dcf41b52ea8c648", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2b815074b745370cc5ebb541dcf41b52ea8c648", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2b815074b745370cc5ebb541dcf41b52ea8c648", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2b815074b745370cc5ebb541dcf41b52ea8c648/comments", "author": null, "committer": null, "parents": [{"sha": "9beafc83cabd13b4ad5783209db8f32998363e08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9beafc83cabd13b4ad5783209db8f32998363e08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9beafc83cabd13b4ad5783209db8f32998363e08"}], "stats": {"total": 25, "additions": 18, "deletions": 7}, "files": [{"sha": "69916d9ee1a6409717b25d71f27d66cbe383d63c", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2b815074b745370cc5ebb541dcf41b52ea8c648/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2b815074b745370cc5ebb541dcf41b52ea8c648/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=d2b815074b745370cc5ebb541dcf41b52ea8c648", "patch": "@@ -1,3 +1,13 @@\n+2006-08-01  Andreas Tobler  <a.tobler@schweiz.ch>\n+\n+\t* gnu/classpath/natSystemProperties.cc: Add additional check for\n+\tgetpwuid_r on _POSIX_PTHREAD_SEMANTICS.\n+\t(SystemProperties::insertSystemProperties): Likewise.\n+\t* java/io/natFilePosix.cc (File::performList): Add\n+\tadditional check for readdir_r on _POSIX_PTHREAD_SEMANTICS.\n+\t* java/util/natVMTimeZone.cc (VMTimeZone::getSystemTimeZoneId): Add\n+\tadditional check for localtime_r on _POSIX_PTHREAD_SEMANTICS.\n+\n 2006-07-31  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \tPR libgcj/28312"}, {"sha": "e78ca74e7451fbc17682f424c8b28c8a1ae50a8c", "filename": "libjava/gnu/classpath/natSystemProperties.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2b815074b745370cc5ebb541dcf41b52ea8c648/libjava%2Fgnu%2Fclasspath%2FnatSystemProperties.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2b815074b745370cc5ebb541dcf41b52ea8c648/libjava%2Fgnu%2Fclasspath%2FnatSystemProperties.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2FnatSystemProperties.cc?ref=d2b815074b745370cc5ebb541dcf41b52ea8c648", "patch": "@@ -82,7 +82,7 @@ file_encoding ()\n \n static const char *default_file_encoding = DEFAULT_FILE_ENCODING;\n \n-#if HAVE_GETPWUID_R\n+#if defined(HAVE_GETPWUID_R) && defined(_POSIX_PTHREAD_SEMANTICS)\n /* Use overload resolution to find out the signature of getpwuid_r.  */\n \n   /* This is Posix getpwuid_r.  */\n@@ -223,7 +223,7 @@ gnu::classpath::SystemProperties::insertSystemProperties (java::util::Properties\n   uid_t user_id = getuid ();\n   struct passwd *pwd_entry;\n \n-#ifdef HAVE_GETPWUID_R\n+#if defined(HAVE_GETPWUID_R) && defined(_POSIX_PTHREAD_SEMANTICS)\n   struct passwd pwd_r;\n   size_t len_r = 200;\n   char *buf_r = (char *) _Jv_AllocBytes (len_r);"}, {"sha": "c9bf858f187721eab461e2b1df331be3f1499661", "filename": "libjava/java/io/natFilePosix.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2b815074b745370cc5ebb541dcf41b52ea8c648/libjava%2Fjava%2Fio%2FnatFilePosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2b815074b745370cc5ebb541dcf41b52ea8c648/libjava%2Fjava%2Fio%2FnatFilePosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FnatFilePosix.cc?ref=d2b815074b745370cc5ebb541dcf41b52ea8c648", "patch": "@@ -1,6 +1,7 @@\n // natFile.cc - Native part of File class for POSIX.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2006\n+   Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -288,7 +289,7 @@ java::io::File::performList (java::io::FilenameFilter *filter,\n \n   java::util::ArrayList *list = new java::util::ArrayList ();\n   struct dirent *d;\n-#ifdef HAVE_READDIR_R\n+#if defined(HAVE_READDIR_R) && defined(_POSIX_PTHREAD_SEMANTICS)\n   int name_max = pathconf (buf, _PC_NAME_MAX);\n   char dbuf[sizeof (struct dirent) + name_max + 1];\n   while (readdir_r (dir, (struct dirent *) dbuf, &d) == 0 && d != NULL)"}, {"sha": "d45ebf97853f5ba2fb2ba5450a5e097c7af6a739", "filename": "libjava/java/util/natVMTimeZone.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2b815074b745370cc5ebb541dcf41b52ea8c648/libjava%2Fjava%2Futil%2FnatVMTimeZone.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2b815074b745370cc5ebb541dcf41b52ea8c648/libjava%2Fjava%2Futil%2FnatVMTimeZone.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FnatVMTimeZone.cc?ref=d2b815074b745370cc5ebb541dcf41b52ea8c648", "patch": "@@ -1,6 +1,6 @@\n // natVMTimeZone.cc -- Native side of VMTimeZone class.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2006\n    Free Software Foundation\n \n    This file is part of libgcj.\n@@ -54,7 +54,7 @@ jstring\n java::util::VMTimeZone::getSystemTimeZoneId()\n {\n   struct tm tim;\n-#ifndef HAVE_LOCALTIME_R\n+#if !defined(HAVE_LOCALTIME_R) || !defined(_POSIX_PTHREAD_SEMANTICS)\n   struct tm *lt_tim;\n #endif\n #ifdef HAVE_TM_ZONE\n@@ -66,7 +66,7 @@ java::util::VMTimeZone::getSystemTimeZoneId()\n   char *tzid;\n \n   time(&current_time);\n-#ifdef HAVE_LOCALTIME_R\n+#if defined(HAVE_LOCALTIME_R) && defined(_POSIX_PTHREAD_SEMANTICS)\n   localtime_r(&current_time, &tim);\n #else\n   /* Fall back on non-thread safe localtime. */"}]}