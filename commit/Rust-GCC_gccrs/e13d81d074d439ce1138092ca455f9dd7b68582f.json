{"sha": "e13d81d074d439ce1138092ca455f9dd7b68582f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTEzZDgxZDA3NGQ0MzljZTExMzgwOTJjYTQ1NWY5ZGQ3YjY4NTgyZg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-01-19T04:13:04Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-01-19T04:13:04Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r216", "tree": {"sha": "d447a556f6ab20dff3467433f561e19fec1e15f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d447a556f6ab20dff3467433f561e19fec1e15f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e13d81d074d439ce1138092ca455f9dd7b68582f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e13d81d074d439ce1138092ca455f9dd7b68582f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e13d81d074d439ce1138092ca455f9dd7b68582f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e13d81d074d439ce1138092ca455f9dd7b68582f/comments", "author": null, "committer": null, "parents": [{"sha": "fdfc1b921e90ee846b1ca9def1e3f2f2f3096a7a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdfc1b921e90ee846b1ca9def1e3f2f2f3096a7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdfc1b921e90ee846b1ca9def1e3f2f2f3096a7a"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "edc1710082777553692ba9407a1283424bc8bccc", "filename": "gcc/ginclude/va-pyr.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13d81d074d439ce1138092ca455f9dd7b68582f/gcc%2Fginclude%2Fva-pyr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13d81d074d439ce1138092ca455f9dd7b68582f/gcc%2Fginclude%2Fva-pyr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-pyr.h?ref=e13d81d074d439ce1138092ca455f9dd7b68582f", "patch": "@@ -94,6 +94,7 @@ typedef __va_buf va_list;\n \t \n \n #define va_arg(_AP, _MODE)\t\\\n+__extension__\t\t\t\t\t\t\t\t\\\n ({__voidptr *__ap = (__voidptr*)&_AP;\t\t\t\t\t\\\n   register int __size = sizeof (_MODE);\t\t\t\t\t\\\n   register int __onstack =\t\t\t\t\t\t\\"}, {"sha": "ed9238842e8b98aaa5b79ffeae948f5481bbdb8e", "filename": "gcc/ginclude/va-sparc.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13d81d074d439ce1138092ca455f9dd7b68582f/gcc%2Fginclude%2Fva-sparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13d81d074d439ce1138092ca455f9dd7b68582f/gcc%2Fginclude%2Fva-sparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-sparc.h?ref=e13d81d074d439ce1138092ca455f9dd7b68582f", "patch": "@@ -34,6 +34,7 @@ typedef char * __va___list;\n    in the stack are made to be word-aligned; for an aggregate that is\n    not word-aligned, we advance the pointer to the first non-reg slot.  */\n #define va_arg(pvar,TYPE)\t\t\t\t\t\\\n+__extension__\t\t\t\t\t\t\t\\\n ({ TYPE __va_temp;\t\t\t\t\t\t\\\n    ((__builtin_classify_type (__va_temp) >= 12)\t\t\t\\\n     ? ((pvar) += __va_rounded_size (TYPE *),\t\t\t\\"}, {"sha": "1bb826c550d2a90ac071236a28d8948402967824", "filename": "gcc/ginclude/va-spur.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13d81d074d439ce1138092ca455f9dd7b68582f/gcc%2Fginclude%2Fva-spur.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13d81d074d439ce1138092ca455f9dd7b68582f/gcc%2Fginclude%2Fva-spur.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-spur.h?ref=e13d81d074d439ce1138092ca455f9dd7b68582f", "patch": "@@ -32,6 +32,7 @@ typedef struct {\n #define va_end(pvar)\n \n #define va_arg(pvar,type)  \\\n+__extension__ \\\n     ({  type __va_result; \\\n         if ((pvar).__pnt >= 20) { \\\n            __va_result = *( (type *) ((pvar).__stack + (pvar).__pnt - 20)); \\"}]}