{"sha": "76f81d9581ad1ff765c4d1280df8e4a0d9617080", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZmODFkOTU4MWFkMWZmNzY1YzRkMTI4MGRmOGU0YTBkOTYxNzA4MA==", "commit": {"author": {"name": "John David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2001-09-05T14:57:00Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2001-09-05T14:57:00Z"}, "message": "som.h (ASM_PREFERRED_EH_DATA_FORMAT): Define.\n\n\t* som.h (ASM_PREFERRED_EH_DATA_FORMAT): Define.\n\t* pa.h (UNALIGNED_SHORT_ASM_OP, UNALIGNED_INT_ASM_OP,\n\tUNALIGNED_DOUBLE_INT_ASM_OP): Define\n\nFrom-SVN: r45414", "tree": {"sha": "baa01de2eb71fc266b6afe5f479778883e8865b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/baa01de2eb71fc266b6afe5f479778883e8865b8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76f81d9581ad1ff765c4d1280df8e4a0d9617080", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f81d9581ad1ff765c4d1280df8e4a0d9617080", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76f81d9581ad1ff765c4d1280df8e4a0d9617080", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f81d9581ad1ff765c4d1280df8e4a0d9617080/comments", "author": null, "committer": null, "parents": [{"sha": "8db4c86715fc58e95cc57f9ea4c9e88c1555e1f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8db4c86715fc58e95cc57f9ea4c9e88c1555e1f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8db4c86715fc58e95cc57f9ea4c9e88c1555e1f2"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "3f9abecc779b35322633be3b0551cc3438711be2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f81d9581ad1ff765c4d1280df8e4a0d9617080/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f81d9581ad1ff765c4d1280df8e4a0d9617080/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76f81d9581ad1ff765c4d1280df8e4a0d9617080", "patch": "@@ -1,3 +1,9 @@\n+2001-09-05  John David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* som.h (ASM_PREFERRED_EH_DATA_FORMAT): Define.\n+\t* pa.h (UNALIGNED_SHORT_ASM_OP, UNALIGNED_INT_ASM_OP,\n+\tUNALIGNED_DOUBLE_INT_ASM_OP): Define\n+\n 2001-09-05  Jeffrey A Law  (law@cygnus.com)\n \t    Jason Merrill (jason@redhat.com)\n "}, {"sha": "4385914347dbe05cbe734edff6efadb6e271f5b3", "filename": "gcc/config/pa/pa.h", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f81d9581ad1ff765c4d1280df8e4a0d9617080/gcc%2Fconfig%2Fpa%2Fpa.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f81d9581ad1ff765c4d1280df8e4a0d9617080/gcc%2Fconfig%2Fpa%2Fpa.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.h?ref=76f81d9581ad1ff765c4d1280df8e4a0d9617080", "patch": "@@ -1755,6 +1755,13 @@ while (0)\n #define ASM_OUTPUT_BYTE(FILE,VALUE)  \\\n   fprintf (FILE, \"\\t.byte 0x%x\\n\", (VALUE))\n \n+/* C string constants giving the pseudo-op to use for a sequence of\n+   2, 4, and 8 byte unaligned constants.  dwarf2out.c needs these.  */\n+\n+#define UNALIGNED_SHORT_ASM_OP\t\t(TARGET_GAS ? \"\\t.half \" : NULL)\n+#define UNALIGNED_INT_ASM_OP\t\t(TARGET_GAS ? \"\\t.word \" : NULL)\n+#define UNALIGNED_DOUBLE_INT_ASM_OP\t(TARGET_GAS ? \"\\t.dword \" : NULL)\n+\n #define ASM_GLOBALIZE_LABEL(FILE, NAME)\t\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n     /* We only handle DATA objects here, functions are globalized in\t\\"}, {"sha": "7588b66d9c29ae42884272d432147b6cfbb515b4", "filename": "gcc/config/pa/som.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f81d9581ad1ff765c4d1280df8e4a0d9617080/gcc%2Fconfig%2Fpa%2Fsom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f81d9581ad1ff765c4d1280df8e4a0d9617080/gcc%2Fconfig%2Fpa%2Fsom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fsom.h?ref=76f81d9581ad1ff765c4d1280df8e4a0d9617080", "patch": "@@ -51,6 +51,15 @@ Boston, MA 02111-1307, USA.  */\n   fprintf (FILE,\t\t\t\t\t\t\t\\\n \t   \"\\t.stabs \\\"\\\",%d,0,0,L$text_end0000\\nL$text_end0000:\\n\", N_SO)\n \n+/* Select a format to encode pointers in exception handling data.  CODE\n+   is 0 for data, 1 for code labels, 2 for function pointers.  GLOBAL is\n+   true if the symbol may be affected by dynamic relocations.  Because\n+   the HP assembler does auto alignment, it is necessary to use\n+   DW_EH_PE_aligned instead of the default DW_EH_PE_absptr.  */\n+\n+#define ASM_PREFERRED_EH_DATA_FORMAT(CODE, GLOBAL) \\\n+  (TARGET_GAS ? DW_EH_PE_absptr : DW_EH_PE_aligned)\n+\n /* HPUX has a program 'chatr' to list the dependencies of dynamically\n    linked executables and shared libraries.  */\n #define LDD_SUFFIX \"chatr\""}]}