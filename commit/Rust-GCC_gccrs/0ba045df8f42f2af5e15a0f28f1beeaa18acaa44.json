{"sha": "0ba045df8f42f2af5e15a0f28f1beeaa18acaa44", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGJhMDQ1ZGY4ZjQyZjJhZjVlMTVhMGYyOGYxYmVlYWExOGFjYWE0NA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-05-28T13:52:50Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-05-28T13:52:50Z"}, "message": "sol2-unwind.h (MD_FALLBACK_FRAME_STATE_FOR): Do not set fs->signal_frame for SIGFPE raised for IEEE-754 exceptions.\n\n\t* config/sparc/sol2-unwind.h (MD_FALLBACK_FRAME_STATE_FOR): Do not set\n\tfs->signal_frame for SIGFPE raised for IEEE-754 exceptions.\n\t* config/i386/sol2-unwind.h (x86_fallback_frame_state): Likewise.\n\nFrom-SVN: r199381", "tree": {"sha": "7d46615086d4d141883c11329608649fdbc7f160", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d46615086d4d141883c11329608649fdbc7f160"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ba045df8f42f2af5e15a0f28f1beeaa18acaa44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ba045df8f42f2af5e15a0f28f1beeaa18acaa44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ba045df8f42f2af5e15a0f28f1beeaa18acaa44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ba045df8f42f2af5e15a0f28f1beeaa18acaa44/comments", "author": null, "committer": null, "parents": [{"sha": "fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbd7e8773135e1912e36d22e0a9c9a4e6e78c43f"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "be8eb9ea473400fa2211e8dbc290e8f9be1116f5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba045df8f42f2af5e15a0f28f1beeaa18acaa44/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba045df8f42f2af5e15a0f28f1beeaa18acaa44/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0ba045df8f42f2af5e15a0f28f1beeaa18acaa44", "patch": "@@ -1,3 +1,7 @@\n+2013-05-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/fp_exception.adb: New test.\n+\n 2013-05-28  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/56787"}, {"sha": "a8bf62fa9233f8754e5ac035e56d4572d37d73eb", "filename": "gcc/testsuite/gnat.dg/fp_exception.adb", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba045df8f42f2af5e15a0f28f1beeaa18acaa44/gcc%2Ftestsuite%2Fgnat.dg%2Ffp_exception.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba045df8f42f2af5e15a0f28f1beeaa18acaa44/gcc%2Ftestsuite%2Fgnat.dg%2Ffp_exception.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ffp_exception.adb?ref=0ba045df8f42f2af5e15a0f28f1beeaa18acaa44", "patch": "@@ -0,0 +1,24 @@\n+-- { dg-do run { target *-*-solaris2.* } }\n+-- { dg-options \"-ftrapping-math\" }\n+\n+procedure FP_Exception is\n+\n+  type my_fixed is digits 15;\n+  for my_fixed'size use 64;\n+  fixed1 : my_fixed := 1.0;  \n+  fixed2 : my_fixed := -0.0;\n+  mask_all : constant integer := 16#1F#;\n+\n+  procedure fpsetmask(mask : in integer);\n+  pragma IMPORT (C, fpsetmask, \"fpsetmask\");\n+\n+begin \n+\n+  -- Mask all floating point exceptions so they can be trapped\n+  fpsetmask (mask_all);\n+\n+  fixed1 := fixed1 / fixed2;\n+\n+exception\n+  when others => null;\n+end;"}, {"sha": "66f292155798f170676d21cdd94e0e9d6361ce04", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba045df8f42f2af5e15a0f28f1beeaa18acaa44/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba045df8f42f2af5e15a0f28f1beeaa18acaa44/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=0ba045df8f42f2af5e15a0f28f1beeaa18acaa44", "patch": "@@ -1,3 +1,9 @@\n+2013-05-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* config/sparc/sol2-unwind.h (MD_FALLBACK_FRAME_STATE_FOR): Do not set\n+\tfs->signal_frame for SIGFPE raised for IEEE-754 exceptions.\n+\t* config/i386/sol2-unwind.h (x86_fallback_frame_state): Likewise.\n+\n 2013-05-22  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config.host (powerpc-*-elf*): Add rs6000/t-savresfgpr to tmake_file."}, {"sha": "e67710907b138a6c1a31ecb878a4c826a41da102", "filename": "libgcc/config/i386/sol2-unwind.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba045df8f42f2af5e15a0f28f1beeaa18acaa44/libgcc%2Fconfig%2Fi386%2Fsol2-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba045df8f42f2af5e15a0f28f1beeaa18acaa44/libgcc%2Fconfig%2Fi386%2Fsol2-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fi386%2Fsol2-unwind.h?ref=0ba045df8f42f2af5e15a0f28f1beeaa18acaa44", "patch": "@@ -249,7 +249,12 @@ x86_fallback_frame_state (struct _Unwind_Context *context,\n   fs->regs.reg[8].how = REG_SAVED_OFFSET;\n   fs->regs.reg[8].loc.offset = (long)&mctx->gregs[EIP] - new_cfa;\n   fs->retaddr_column = 8;\n-  fs->signal_frame = 1;\n+\n+  /* SIGFPE for IEEE-754 exceptions is delivered after the faulting insn\n+     rather than before it, so don't set fs->signal_frame in that case.\n+     We test whether the ES field of the Status Register is zero.  */\n+  if ((mctx->fpregs.fp_reg_set.fpchip_state.status & 0x80) == 0)\n+    fs->signal_frame = 1;\n \n   return _URC_NO_REASON;\n }"}, {"sha": "4a8c42f590864b2d2ae2f8e1d29f229d82cd37a9", "filename": "libgcc/config/sparc/sol2-unwind.h", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba045df8f42f2af5e15a0f28f1beeaa18acaa44/libgcc%2Fconfig%2Fsparc%2Fsol2-unwind.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba045df8f42f2af5e15a0f28f1beeaa18acaa44/libgcc%2Fconfig%2Fsparc%2Fsol2-unwind.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Fsparc%2Fsol2-unwind.h?ref=0ba045df8f42f2af5e15a0f28f1beeaa18acaa44", "patch": "@@ -403,7 +403,12 @@ MD_FALLBACK_FRAME_STATE_FOR (struct _Unwind_Context *context,\n   fs->retaddr_column = 0;\n   fs->regs.reg[0].how = REG_SAVED_OFFSET;\n   fs->regs.reg[0].loc.offset = (long)shifted_ra_location - new_cfa;\n-  fs->signal_frame = 1;\n+\n+  /* SIGFPE for IEEE-754 exceptions is delivered after the faulting insn\n+     rather than before it, so don't set fs->signal_frame in that case.\n+     We test whether the cexc field of the FSR is zero.  */\n+  if ((mctx->fpregs.fpu_fsr & 0x1f) == 0)\n+    fs->signal_frame = 1;\n \n   return _URC_NO_REASON;\n }"}]}