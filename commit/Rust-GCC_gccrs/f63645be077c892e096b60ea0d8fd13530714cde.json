{"sha": "f63645be077c892e096b60ea0d8fd13530714cde", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYzNjQ1YmUwNzdjODkyZTA5NmI2MGVhMGQ4ZmQxMzUzMDcxNGNkZQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@codesourcery.com", "date": "2006-10-07T11:07:14Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2006-10-07T11:07:14Z"}, "message": "* gimplify.c, sched-int.h: Fix comment typos.\n\nFrom-SVN: r117531", "tree": {"sha": "198523a0e15528552ba91441df311a1a4836a4f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/198523a0e15528552ba91441df311a1a4836a4f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f63645be077c892e096b60ea0d8fd13530714cde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63645be077c892e096b60ea0d8fd13530714cde", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f63645be077c892e096b60ea0d8fd13530714cde", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63645be077c892e096b60ea0d8fd13530714cde/comments", "author": null, "committer": null, "parents": [{"sha": "0c391506fc08301dc1d9b09563501071e3915a8f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c391506fc08301dc1d9b09563501071e3915a8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c391506fc08301dc1d9b09563501071e3915a8f"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "2d32703782f5f86a2a899f503f2748cc9f79a7ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63645be077c892e096b60ea0d8fd13530714cde/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63645be077c892e096b60ea0d8fd13530714cde/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f63645be077c892e096b60ea0d8fd13530714cde", "patch": "@@ -1,3 +1,7 @@\n+2006-10-07  Kazu Hirata  <kazu@codesourcery.com>\n+\n+\t* gimplify.c, sched-int.h: Fix comment typos.\n+\n 2006-10-06  Maxim Kuvyrkov  <mkuvyrkov@ispras.ru>\n \n \t* sched-int.h (IS_SPECULATION_CHECK_P, IS_SPECULATION_SIMPLE_CHECK_P):"}, {"sha": "1a88c60c5d05a2dd9bd8a0e8cdfdbd7cbb62b439", "filename": "gcc/gimplify.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63645be077c892e096b60ea0d8fd13530714cde/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63645be077c892e096b60ea0d8fd13530714cde/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=f63645be077c892e096b60ea0d8fd13530714cde", "patch": "@@ -6050,10 +6050,10 @@ gimplify_type_sizes (tree type, tree *list_p)\n \t   It was actually useful for anonymous pointed-to types to ensure\n \t   that the sizes evaluation dominates every possible later use of the\n \t   values.  Restricting to such types here would be safe since there\n-\t   is no possible forward declaration around, but would introduce a\n-\t   undesireable middle-end semantic to anonymity.  We then defer to\n-\t   front-ends the responsibilty of ensuring that the sizes are\n-\t   evaluated both early and late enough, e.g. by attaching artifical\n+\t   is no possible forward declaration around, but would introduce an\n+\t   undesirable middle-end semantic to anonymity.  We then defer to\n+\t   front-ends the responsibility of ensuring that the sizes are\n+\t   evaluated both early and late enough, e.g. by attaching artificial\n \t   type declarations to the tree.  */\n       break;\n "}, {"sha": "10c9a35e5aa9ad2dce24a2d8ecf1b429b1681c0d", "filename": "gcc/sched-int.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63645be077c892e096b60ea0d8fd13530714cde/gcc%2Fsched-int.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63645be077c892e096b60ea0d8fd13530714cde/gcc%2Fsched-int.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-int.h?ref=f63645be077c892e096b60ea0d8fd13530714cde", "patch": "@@ -369,7 +369,7 @@ extern regset *glat_start, *glat_end;\n \n /* INSN is a speculation check that will branch to RECOVERY_BLOCK if the\n    speculation fail.  Insns in that block will reexecute the speculatively\n-   scheduled code and then will return immediatelly after INSN thus preserving\n+   scheduled code and then will return immediately after INSN thus preserving\n    semantics of the program.  */\n #define IS_SPECULATION_BRANCHY_CHECK_P(INSN) \\\n   (RECOVERY_BLOCK (INSN) != NULL && RECOVERY_BLOCK (INSN) != EXIT_BLOCK_PTR)"}]}