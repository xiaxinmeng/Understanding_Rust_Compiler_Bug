{"sha": "6aed477a55349c723e4271bbd498d7d18d7c0c96", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFlZDQ3N2E1NTM0OWM3MjNlNDI3MWJiZDQ5OGQ3ZDE4ZDdjMGM5Ng==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2006-02-14T15:54:34Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2006-02-14T15:54:34Z"}, "message": "call.c (standard_conversion): Return NULL instead of 0.\n\n\t* call.c (standard_conversion): Return NULL instead of 0.\n\t(build_user_type_conversion_1): Likewise.\n\t(tourney): Likewise.\n\t* decl.c (redeclaration_error_message): Likewise.\n\t* error.c (language_to_string): Likewise.\n\nFrom-SVN: r110976", "tree": {"sha": "aedc88dfa51a7cc0dcdfcb394e95e9b607b93678", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aedc88dfa51a7cc0dcdfcb394e95e9b607b93678"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aed477a55349c723e4271bbd498d7d18d7c0c96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aed477a55349c723e4271bbd498d7d18d7c0c96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aed477a55349c723e4271bbd498d7d18d7c0c96", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aed477a55349c723e4271bbd498d7d18d7c0c96/comments", "author": null, "committer": null, "parents": [{"sha": "98035a75ac5fca6590f63d08aa3a4914809a8855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98035a75ac5fca6590f63d08aa3a4914809a8855", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98035a75ac5fca6590f63d08aa3a4914809a8855"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "5f153639eb08e9308f51681009c267f06a628a10", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aed477a55349c723e4271bbd498d7d18d7c0c96/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aed477a55349c723e4271bbd498d7d18d7c0c96/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6aed477a55349c723e4271bbd498d7d18d7c0c96", "patch": "@@ -1,3 +1,11 @@\n+2006-02-14  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\t* call.c (standard_conversion): Return NULL instead of 0.\n+\t(build_user_type_conversion_1): Likewise.\n+\t(tourney): Likewise.\n+\t* decl.c (redeclaration_error_message): Likewise.\n+\t* error.c (language_to_string): Likewise.\n+\n 2006-02-13  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n \n \t* cp-tree.h (warn_hidden): Remove prototype."}, {"sha": "268573d5bc019bce835dc109c3ef21ed367a5487", "filename": "gcc/cp/call.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aed477a55349c723e4271bbd498d7d18d7c0c96/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aed477a55349c723e4271bbd498d7d18d7c0c96/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=6aed477a55349c723e4271bbd498d7d18d7c0c96", "patch": "@@ -768,7 +768,7 @@ standard_conversion (tree to, tree from, tree expr, bool c_cast_p,\n \t  || !compparms (TREE_CHAIN (TYPE_ARG_TYPES (fromfn)),\n \t\t\t TREE_CHAIN (TYPE_ARG_TYPES (tofn)))\n \t  || cp_type_quals (fbase) != cp_type_quals (tbase))\n-\treturn 0;\n+\treturn NULL;\n \n       from = cp_build_qualified_type (tbase, cp_type_quals (fbase));\n       from = build_method_type_directly (from,\n@@ -806,7 +806,7 @@ standard_conversion (tree to, tree from, tree expr, bool c_cast_p,\n \t   || tcode == REAL_TYPE)\n     {\n       if (! (INTEGRAL_CODE_P (fcode) || fcode == REAL_TYPE))\n-\treturn 0;\n+\treturn NULL;\n       conv = build_conv (ck_std, to, conv);\n \n       /* Give this a better rank if it's a promotion.  */\n@@ -2615,7 +2615,7 @@ build_user_type_conversion_1 (tree totype, tree expr, int flags)\n \n   candidates = splice_viable (candidates, pedantic, &any_viable_p);\n   if (!any_viable_p)\n-    return 0;\n+    return NULL;\n \n   cand = tourney (candidates);\n   if (cand == 0)\n@@ -6247,7 +6247,7 @@ tourney (struct z_candidate *candidates)\n \t    {\n \t      champ = challenger->next;\n \t      if (champ == 0)\n-\t\treturn 0;\n+\t\treturn NULL;\n \t      champ_compared_to_predecessor = 0;\n \t    }\n \t  else\n@@ -6270,7 +6270,7 @@ tourney (struct z_candidate *candidates)\n     {\n       fate = joust (champ, challenger, 0);\n       if (fate != 1)\n-\treturn 0;\n+\treturn NULL;\n     }\n \n   return champ;"}, {"sha": "146c967461d32eed42feb02534cbcc20fd335519", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aed477a55349c723e4271bbd498d7d18d7c0c96/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aed477a55349c723e4271bbd498d7d18d7c0c96/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6aed477a55349c723e4271bbd498d7d18d7c0c96", "patch": "@@ -1976,7 +1976,7 @@ redeclaration_error_message (tree newdecl, tree olddecl)\n \t constructs like \"typedef struct foo { ... } foo\"\n \t would look like an erroneous redeclaration.  */\n       if (same_type_p (TREE_TYPE (newdecl), TREE_TYPE (olddecl)))\n-\treturn 0;\n+\treturn NULL;\n       else\n \treturn \"redefinition of %q#D\";\n     }\n@@ -1987,7 +1987,7 @@ redeclaration_error_message (tree newdecl, tree olddecl)\n \t abort()).  Don't complain about redefinition in this case.  */\n       if (DECL_LANG_SPECIFIC (olddecl) && DECL_PURE_VIRTUAL_P (olddecl)\n \t  && DECL_INITIAL (olddecl) == NULL_TREE)\n-\treturn 0;\n+\treturn NULL;\n \n       /* If both functions come from different namespaces, this is not\n \t a redeclaration - this is a conflict with a used function.  */\n@@ -2008,7 +2008,7 @@ redeclaration_error_message (tree newdecl, tree olddecl)\n \t  else\n \t    return \"redefinition of %q#D\";\n \t}\n-      return 0;\n+      return NULL;\n     }\n   else if (TREE_CODE (newdecl) == TEMPLATE_DECL)\n     {\n@@ -2055,7 +2055,7 @@ redeclaration_error_message (tree newdecl, tree olddecl)\n       /* Objects declared at top level:  */\n       /* If at least one is a reference, it's ok.  */\n       if (DECL_EXTERNAL (newdecl) || DECL_EXTERNAL (olddecl))\n-\treturn 0;\n+\treturn NULL;\n       /* Reject two definitions.  */\n       return \"redefinition of %q#D\";\n     }\n@@ -2066,7 +2066,7 @@ redeclaration_error_message (tree newdecl, tree olddecl)\n \t together with an external reference.  */\n       if (!(DECL_EXTERNAL (newdecl) && DECL_EXTERNAL (olddecl)))\n \treturn \"redeclaration of %q#D\";\n-      return 0;\n+      return NULL;\n     }\n }\n \f"}, {"sha": "8696ff9731e518980d3bc49fcc502585007236d0", "filename": "gcc/cp/error.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aed477a55349c723e4271bbd498d7d18d7c0c96/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aed477a55349c723e4271bbd498d7d18d7c0c96/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=6aed477a55349c723e4271bbd498d7d18d7c0c96", "patch": "@@ -2055,7 +2055,7 @@ language_to_string (enum languages c)\n     default:\n       gcc_unreachable ();\n     }\n-  return 0;\n+  return NULL;\n }\n \n /* Return the proper printed version of a parameter to a C++ function.  */"}]}