{"sha": "397bc09a6539e72c1e93b7e9fa48870037ba5136", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzk3YmMwOWE2NTM5ZTcyYzFlOTNiN2U5ZmE0ODg3MDAzN2JhNTEzNg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-07-22T03:14:27Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2006-07-22T03:14:27Z"}, "message": "re PR fortran/28339 (gfortran misses a record from a format statement)\n\n2006-07-21  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/28339\n\t* io/transfer.c (next_record_w): Use next_array_record result to set\n\tEND_FILE. (write_block): Test for END_FILE before the next write occurs.\n\t* io/unit.c (get_internal_unit): Initialize iunit->endfile for internal\n\tunit.\n\nFrom-SVN: r115670", "tree": {"sha": "46c726c03cdacc28c36000c52ab2b61a3090e6a7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46c726c03cdacc28c36000c52ab2b61a3090e6a7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/397bc09a6539e72c1e93b7e9fa48870037ba5136", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/397bc09a6539e72c1e93b7e9fa48870037ba5136", "html_url": "https://github.com/Rust-GCC/gccrs/commit/397bc09a6539e72c1e93b7e9fa48870037ba5136", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/397bc09a6539e72c1e93b7e9fa48870037ba5136/comments", "author": null, "committer": null, "parents": [{"sha": "105395ad98c7d9c0141603aa84773af5dd08a461", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/105395ad98c7d9c0141603aa84773af5dd08a461", "html_url": "https://github.com/Rust-GCC/gccrs/commit/105395ad98c7d9c0141603aa84773af5dd08a461"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "1ba6a16766cc29f9463c09ffe1cc86161ac9b228", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/397bc09a6539e72c1e93b7e9fa48870037ba5136/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/397bc09a6539e72c1e93b7e9fa48870037ba5136/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=397bc09a6539e72c1e93b7e9fa48870037ba5136", "patch": "@@ -1,3 +1,11 @@\n+2006-07-21  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/28339\n+\t* io/transfer.c (next_record_w): Use next_array_record result to set\n+\tEND_FILE. (write_block): Test for END_FILE before the next write occurs.\n+\t* io/init.c (get_internal_unit): Initialize iunit->endfile for internal\n+\tunit.\n+\n 2006-07-19  Janne Blomqvist  <jb@gcc.gnu.org>\n \n \tPR fortran/27919"}, {"sha": "4efb523ce78d8d03555e82aa5b7b876c04ac1576", "filename": "libgfortran/io/transfer.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/397bc09a6539e72c1e93b7e9fa48870037ba5136/libgfortran%2Fio%2Ftransfer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/397bc09a6539e72c1e93b7e9fa48870037ba5136/libgfortran%2Fio%2Ftransfer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Ftransfer.c?ref=397bc09a6539e72c1e93b7e9fa48870037ba5136", "patch": "@@ -414,6 +414,9 @@ write_block (st_parameter_dt *dtp, int length)\n       return NULL;\n     }\n \n+  if (is_internal_unit (dtp) && dtp->u.p.current_unit->endfile == AT_ENDFILE)\n+    generate_error (&dtp->common, ERROR_END, NULL);\n+\n   if ((dtp->common.flags & IOPARM_DT_HAS_SIZE) != 0)\n     dtp->u.p.size_used += (gfc_offset) length;\n \n@@ -2052,9 +2055,6 @@ next_record_w (st_parameter_dt *dtp, int done)\n \n     case FORMATTED_SEQUENTIAL:\n \n-      if (dtp->u.p.current_unit->bytes_left == 0)\n-\tbreak;\n-\t\n       if (is_internal_unit (dtp))\n \t{\n \t  if (is_array_io (dtp))\n@@ -2083,7 +2083,9 @@ next_record_w (st_parameter_dt *dtp, int done)\n \t      /* Now that the current record has been padded out,\n \t\t determine where the next record in the array is. */\n \t      record = next_array_record (dtp, dtp->u.p.current_unit->ls);\n-\n+\t      if (record == 0)\n+\t\tdtp->u.p.current_unit->endfile = AT_ENDFILE;\n+\t      \n \t      /* Now seek to this record */\n \t      record = record * dtp->u.p.current_unit->recl;\n \n@@ -2124,6 +2126,9 @@ next_record_w (st_parameter_dt *dtp, int done)\n \t}\n       else\n \t{\n+\t  if (dtp->u.p.current_unit->bytes_left == 0)\n+\t    break;\n+\n \t  /* If this is the last call to next_record move to the farthest\n \t  position reached in preparation for completing the record.\n \t  (for file unit) */"}, {"sha": "eca1b1eb98b303e6770bac84b620a504d57f0da1", "filename": "libgfortran/io/unit.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/397bc09a6539e72c1e93b7e9fa48870037ba5136/libgfortran%2Fio%2Funit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/397bc09a6539e72c1e93b7e9fa48870037ba5136/libgfortran%2Fio%2Funit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Funit.c?ref=397bc09a6539e72c1e93b7e9fa48870037ba5136", "patch": "@@ -420,6 +420,7 @@ get_internal_unit (st_parameter_dt *dtp)\n   iunit->flags.form = FORM_FORMATTED;\n   iunit->flags.pad = PAD_YES;\n   iunit->flags.status = STATUS_UNSPECIFIED;\n+  iunit->endfile = NO_ENDFILE;\n \n   /* Initialize the data transfer parameters.  */\n "}]}