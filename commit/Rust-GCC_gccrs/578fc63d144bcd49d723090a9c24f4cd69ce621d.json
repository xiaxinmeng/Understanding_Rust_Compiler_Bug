{"sha": "578fc63d144bcd49d723090a9c24f4cd69ce621d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc4ZmM2M2QxNDRiY2Q0OWQ3MjMwOTBhOWMyNGY0Y2Q2OWNlNjIxZA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-04-11T20:56:29Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-04-11T20:56:29Z"}, "message": "re PR c/6223 (internal compiler error in Wine-20020310)\n\n\tPR c/6223\n\t* combine.c (if_then_else_cond): Use trunc_int_for_mode on nz.\n\n\t* gcc.dg/20020411-1.c: New test.\n\nFrom-SVN: r52176", "tree": {"sha": "575254a3262709e2caa696b88af2e2cf499d1cc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/575254a3262709e2caa696b88af2e2cf499d1cc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/578fc63d144bcd49d723090a9c24f4cd69ce621d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/578fc63d144bcd49d723090a9c24f4cd69ce621d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/578fc63d144bcd49d723090a9c24f4cd69ce621d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/578fc63d144bcd49d723090a9c24f4cd69ce621d/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b4f6d08917852c7180de99f354478d152f2392a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4f6d08917852c7180de99f354478d152f2392a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4f6d08917852c7180de99f354478d152f2392a3"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "34c0f0faef50401dbe257d5c2cb5888c65a34618", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/578fc63d144bcd49d723090a9c24f4cd69ce621d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/578fc63d144bcd49d723090a9c24f4cd69ce621d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=578fc63d144bcd49d723090a9c24f4cd69ce621d", "patch": "@@ -1,3 +1,8 @@\n+2002-04-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/6223\n+\t* combine.c (if_then_else_cond): Use trunc_int_for_mode on nz.\n+\n 2002-04-10  David O'Brien  <obrien@FreeBSD.org>\n \n \t* config/alpha/freebsd.h: Minor reformatting."}, {"sha": "e051c618636830b4ab05e440964559c64901216f", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/578fc63d144bcd49d723090a9c24f4cd69ce621d/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/578fc63d144bcd49d723090a9c24f4cd69ce621d/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=578fc63d144bcd49d723090a9c24f4cd69ce621d", "patch": "@@ -7382,7 +7382,7 @@ if_then_else_cond (x, ptrue, pfalse)\n \t   && GET_MODE_BITSIZE (mode) <= HOST_BITS_PER_WIDE_INT\n \t   && exact_log2 (nz = nonzero_bits (x, mode)) >= 0)\n     {\n-      *ptrue = GEN_INT (nz), *pfalse = const0_rtx;\n+      *ptrue = gen_int_mode (nz, mode), *pfalse = const0_rtx;\n       return x;\n     }\n "}, {"sha": "df40cb497fc22634c0b2dfb40a879e28d1dc9524", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/578fc63d144bcd49d723090a9c24f4cd69ce621d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/578fc63d144bcd49d723090a9c24f4cd69ce621d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=578fc63d144bcd49d723090a9c24f4cd69ce621d", "patch": "@@ -1,3 +1,10 @@\n+2002-04-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c/6223\n+\t* combine.c (if_then_else_cond): Use trunc_int_for_mode on nz.\n+\n+\t* gcc.dg/20020411-1.c: New test.\n+\n 2002-04-10  Janis Johnson  <janis187@us.ibm.com>\n \n \t* g77.f-torture/execute/6177.f: New test."}, {"sha": "d8a939254a813733bc75d13f130251e4075ea587", "filename": "gcc/testsuite/gcc.dg/20020411-1.c", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/578fc63d144bcd49d723090a9c24f4cd69ce621d/gcc%2Ftestsuite%2Fgcc.dg%2F20020411-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/578fc63d144bcd49d723090a9c24f4cd69ce621d/gcc%2Ftestsuite%2Fgcc.dg%2F20020411-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020411-1.c?ref=578fc63d144bcd49d723090a9c24f4cd69ce621d", "patch": "@@ -0,0 +1,50 @@\n+/* PR c/6223\n+   This testcase ICEd in internal check because a constant was not truncated\n+   for its mode.  */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-options \"-O2 -march=i686\" { target i?86-*-* } } */\n+\n+typedef struct\n+{\n+  unsigned a : 16;\n+  unsigned b : 16;\n+  unsigned c : 5;\n+  unsigned d : 2;\n+  unsigned e : 1;\n+  unsigned f : 4;\n+  unsigned g : 1;\n+  unsigned h : 1;\n+  unsigned i : 1;\n+  unsigned j : 1;\n+} T;\n+\n+inline void\n+foo (T *x, unsigned int y)\n+{\n+  if ((x->j = (y >= 0x100000)))\n+    y >>= 12;\n+  x->a = y;\n+  x->f = (y >> 16);\n+}\n+\n+void __attribute__((noinline))\n+bar (T *x)\n+{\n+}\n+\n+void\n+baz (unsigned int x, unsigned char y)\n+{\n+  T t;\n+\n+  foo (&t, x - 1);\n+  t.e = 1;\n+  t.c = y;\n+  t.g = 0;\n+  t.h = 0;\n+  t.i = (y & 0x40) != 0;\n+  if (x == 1)\n+    foo (&t, 1);\n+  bar (&t);\n+}"}]}