{"sha": "ce4b2ca6bc6cd0698402c3cc015b57d746b10946", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U0YjJjYTZiYzZjZDA2OTg0MDJjM2NjMDE1YjU3ZDc0NmIxMDk0Ng==", "commit": {"author": {"name": "Hans Boehm", "email": "Hans_Boehm@hp.com", "date": "2002-05-03T00:21:48Z"}, "committer": {"name": "Hans Boehm", "email": "hboehm@gcc.gnu.org", "date": "2002-05-03T00:21:48Z"}, "message": "dwarf2-signal.h (INIT_SEGV, [...]): use sigaction instead of __libc_sigaction.\n\n\t* include/dwarf2-signal.h (INIT_SEGV, INIT_FPE for ia64):\n\tuse sigaction instead of __libc_sigaction.\n\nFrom-SVN: r53074", "tree": {"sha": "1b3a9bec08903968aebcc4d38f523b8365a5c44d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1b3a9bec08903968aebcc4d38f523b8365a5c44d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce4b2ca6bc6cd0698402c3cc015b57d746b10946", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4b2ca6bc6cd0698402c3cc015b57d746b10946", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce4b2ca6bc6cd0698402c3cc015b57d746b10946", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce4b2ca6bc6cd0698402c3cc015b57d746b10946/comments", "author": null, "committer": null, "parents": [{"sha": "6d0de0058121acea1a5688c1b6b7668ce40f5663", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d0de0058121acea1a5688c1b6b7668ce40f5663", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d0de0058121acea1a5688c1b6b7668ce40f5663"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "0aa5d59ad450736f251e890511fa22b04c4a7555", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4b2ca6bc6cd0698402c3cc015b57d746b10946/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4b2ca6bc6cd0698402c3cc015b57d746b10946/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ce4b2ca6bc6cd0698402c3cc015b57d746b10946", "patch": "@@ -1,3 +1,8 @@\n+2002-05-02  Hans Boehm  <Hans_Boehm@hp.com>\n+\n+\t* include/dwarf2-signal.h (INIT_SEGV, INIT_FPE for ia64):\n+\tuse sigaction instead of __libc_sigaction.\n+\n 2002-05-02  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* testsuite/lib/libjava.exp (libjava_find_spec): New function."}, {"sha": "7dbcd9dfd2db20ba5787b2509a662d66072e4db9", "filename": "libjava/include/dwarf2-signal.h", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce4b2ca6bc6cd0698402c3cc015b57d746b10946/libjava%2Finclude%2Fdwarf2-signal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce4b2ca6bc6cd0698402c3cc015b57d746b10946/libjava%2Finclude%2Fdwarf2-signal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fdwarf2-signal.h?ref=ce4b2ca6bc6cd0698402c3cc015b57d746b10946", "patch": "@@ -243,15 +243,9 @@ while (0)\n \n #else  /* __ia64__ */\n \n-// FIXME: We shouldn't be using libc_sigaction here, since it should\n-// be glibc private.  But using syscall here would mean translating to\n-// the kernel's struct sigaction and argument sequence, which we\n-// shouldn't either.  The right solution is to call sigaction and to\n-// make sure that we can unwind correctly through the pthread signal\n-// wrapper.\n-extern \"C\" int __libc_sigaction (int __sig, \n-\t\t      __const struct sigaction *__restrict __act,\n-                      struct sigaction *__restrict __oact) throw ();\n+// On IA64, unwind information is mandatory, so we can unwind\n+// correctly through glibc frames.  Thus we call the ordinary\n+// sigaction.\n \n #define INIT_SEGV\t\t\t\t\t\t\\\n do\t\t\t\t\t\t\t\t\\\n@@ -261,7 +255,7 @@ do\t\t\t\t\t\t\t\t\\\n     act.sa_sigaction = _Jv_catch_segv;      \t\t\t\\\n     sigemptyset (&act.sa_mask);\t\t\t\t\t\\\n     act.sa_flags = SA_SIGINFO;\t       \t\t\t\t\\\n-    __libc_sigaction (SIGSEGV, &act, NULL);\t\t\t\\\n+    sigaction (SIGSEGV, &act, NULL);\t\t\t\t\\\n   }\t\t\t\t\t\t\t\t\\\n while (0)  \n \n@@ -274,7 +268,7 @@ do\t\t\t\t\t\t\t\t\\\n     act.sa_sigaction = _Jv_catch_fpe;\t\t\t\t\\\n     sigemptyset (&act.sa_mask);\t\t\t\t\t\\\n     act.sa_flags = SA_SIGINFO;\t\t       \t\t\t\\\n-    __libc_sigaction (SIGFPE, &act, NULL);\t\t\t\\\n+    sigaction (SIGFPE, &act, NULL);\t\t\t\t\\\n   }\t\t\t\t\t\t\t\t\\\n while (0)  \n #endif /* __ia64__ || __sparc__ */"}]}