{"sha": "cf0813a9cfa8f973861d8829a07774118c61beb7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YwODEzYTljZmE4Zjk3Mzg2MWQ4ODI5YTA3Nzc0MTE4YzYxYmViNw==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2021-06-21T10:08:29Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-09-20T12:31:34Z"}, "message": "[Ada] Accept volatile properties on constant objects\n\ngcc/ada/\n\n\t* contracts.adb (Add_Contract_Item): Accept volatile-related\n\tproperties on constants.\n\t(Analyze_Object_Contract): Check external properties on\n\tconstants; accept volatile constants.\n\t(Check_Type_Or_Object_External_Properties): Replace \"variable\"\n\twith \"object\" in error messages; replace Decl_Kind with a local\n\tconstant.\n\t* sem_prag.adb (Analyze_Pragma): Accept volatile-related\n\tproperties on constants.", "tree": {"sha": "6d874ecbdde20c45c4495ae933005c8ab5f88e57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d874ecbdde20c45c4495ae933005c8ab5f88e57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf0813a9cfa8f973861d8829a07774118c61beb7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf0813a9cfa8f973861d8829a07774118c61beb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf0813a9cfa8f973861d8829a07774118c61beb7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf0813a9cfa8f973861d8829a07774118c61beb7/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c5ca4cf42f913a44c85071f2ba90e3f8048fa9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c5ca4cf42f913a44c85071f2ba90e3f8048fa9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c5ca4cf42f913a44c85071f2ba90e3f8048fa9e"}], "stats": {"total": 84, "additions": 29, "deletions": 55}, "files": [{"sha": "e37e092898fc2813181609dc55cf8655ead42787", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 25, "deletions": 51, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf0813a9cfa8f973861d8829a07774118c61beb7/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf0813a9cfa8f973861d8829a07774118c61beb7/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=cf0813a9cfa8f973861d8829a07774118c61beb7", "patch": "@@ -144,7 +144,13 @@ package body Contracts is\n       --    Part_Of\n \n       if Ekind (Id) = E_Constant then\n-         if Prag_Nam = Name_Part_Of then\n+         if Prag_Nam in Name_Async_Readers\n+                      | Name_Async_Writers\n+                      | Name_Effective_Reads\n+                      | Name_Effective_Writes\n+                      | Name_No_Caching\n+                      | Name_Part_Of\n+         then\n             Add_Classification;\n \n          --  The pragma is not a proper contract item\n@@ -778,25 +784,9 @@ package body Contracts is\n    procedure Check_Type_Or_Object_External_Properties\n      (Type_Or_Obj_Id : Entity_Id)\n    is\n-      function Decl_Kind (Is_Type     : Boolean;\n-                          Object_Kind : String) return String;\n-      --  Returns \"type\" or Object_Kind, depending on Is_Type\n-\n-      ---------------\n-      -- Decl_Kind --\n-      ---------------\n-\n-      function Decl_Kind (Is_Type     : Boolean;\n-                          Object_Kind : String) return String is\n-      begin\n-         if Is_Type then\n-            return \"type\";\n-         else\n-            return Object_Kind;\n-         end if;\n-      end Decl_Kind;\n-\n       Is_Type_Id : constant Boolean := Is_Type (Type_Or_Obj_Id);\n+      Decl_Kind  : constant String :=\n+        (if Is_Type_Id then \"type\" else \"object\");\n \n       --  Local variables\n \n@@ -923,8 +913,7 @@ package body Contracts is\n             if not Is_Library_Level_Entity (Type_Or_Obj_Id) then\n                Error_Msg_N\n                  (\"effectively volatile \"\n-                    & Decl_Kind (Is_Type     => Is_Type_Id,\n-                                 Object_Kind => \"variable\")\n+                    & Decl_Kind\n                     & \" & must be declared at library level \"\n                     & \"(SPARK RM 7.1.3(3))\", Type_Or_Obj_Id);\n \n@@ -935,10 +924,7 @@ package body Contracts is\n               and then not Is_Protected_Type (Obj_Typ)\n             then\n                Error_Msg_N\n-                (\"discriminated \"\n-                   & Decl_Kind (Is_Type     => Is_Type_Id,\n-                                Object_Kind => \"object\")\n-                   & \" & cannot be volatile\",\n+                (\"discriminated \" & Decl_Kind & \" & cannot be volatile\",\n                  Type_Or_Obj_Id);\n             end if;\n \n@@ -1019,7 +1005,7 @@ package body Contracts is\n       Saved_SMP : constant Node_Id         := SPARK_Mode_Pragma;\n       --  Save the SPARK_Mode-related data to restore on exit\n \n-      NC_Val   : Boolean := False;\n+      NC_Val   : Boolean;\n       Items    : Node_Id;\n       Prag     : Node_Id;\n       Ref_Elmt : Elmt_Id;\n@@ -1056,6 +1042,19 @@ package body Contracts is\n          Set_SPARK_Mode (Obj_Id);\n       end if;\n \n+      --  Checks related to external properties, same for constants and\n+      --  variables.\n+\n+      Check_Type_Or_Object_External_Properties (Type_Or_Obj_Id => Obj_Id);\n+\n+      --  Analyze the non-external volatility property No_Caching\n+\n+      Prag := Get_Pragma (Obj_Id, Pragma_No_Caching);\n+\n+      if Present (Prag) then\n+         Analyze_External_Property_In_Decl_Part (Prag, NC_Val);\n+      end if;\n+\n       --  Constant-related checks\n \n       if Ekind (Obj_Id) = E_Constant then\n@@ -1071,35 +1070,10 @@ package body Contracts is\n             Check_Missing_Part_Of (Obj_Id);\n          end if;\n \n-         --  A constant cannot be effectively volatile (SPARK RM 7.1.3(4)).\n-         --  This check is relevant only when SPARK_Mode is on, as it is not\n-         --  a standard Ada legality rule. Internally-generated constants that\n-         --  map generic formals to actuals in instantiations are allowed to\n-         --  be volatile.\n-\n-         if SPARK_Mode = On\n-           and then Comes_From_Source (Obj_Id)\n-           and then Is_Effectively_Volatile (Obj_Id)\n-           and then No (Corresponding_Generic_Association (Parent (Obj_Id)))\n-         then\n-            Error_Msg_N (\"constant cannot be volatile\", Obj_Id);\n-         end if;\n-\n       --  Variable-related checks\n \n       else pragma Assert (Ekind (Obj_Id) = E_Variable);\n \n-         Check_Type_Or_Object_External_Properties\n-           (Type_Or_Obj_Id => Obj_Id);\n-\n-         --  Analyze the non-external volatility property No_Caching\n-\n-         Prag := Get_Pragma (Obj_Id, Pragma_No_Caching);\n-\n-         if Present (Prag) then\n-            Analyze_External_Property_In_Decl_Part (Prag, NC_Val);\n-         end if;\n-\n          --  The anonymous object created for a single task type carries\n          --  pragmas Depends and Global of the type.\n "}, {"sha": "78af03720cf6d815be611416d4035cd84aa38434", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf0813a9cfa8f973861d8829a07774118c61beb7/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf0813a9cfa8f973861d8829a07774118c61beb7/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=cf0813a9cfa8f973861d8829a07774118c61beb7", "patch": "@@ -13400,11 +13400,11 @@ package body Sem_Prag is\n             Obj_Or_Type_Id := Defining_Entity (Obj_Or_Type_Decl);\n \n             --  Perform minimal verification to ensure that the argument is at\n-            --  least a variable or a type. Subsequent finer grained checks\n-            --  will be done at the end of the declarative region that\n-            --  contains the pragma.\n+            --  least an object or a type. Subsequent finer grained checks will\n+            --  be done at the end of the declarative region that contains the\n+            --  pragma.\n \n-            if Ekind (Obj_Or_Type_Id) = E_Variable\n+            if Ekind (Obj_Or_Type_Id) in E_Constant | E_Variable\n               or else Is_Type (Obj_Or_Type_Id)\n             then\n "}]}