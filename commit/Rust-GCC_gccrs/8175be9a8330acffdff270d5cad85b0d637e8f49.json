{"sha": "8175be9a8330acffdff270d5cad85b0d637e8f49", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE3NWJlOWE4MzMwYWNmZmRmZjI3MGQ1Y2FkODViMGQ2MzdlOGY0OQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2014-01-13T07:56:40Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2014-01-13T07:56:40Z"}, "message": "re PR libgomp/59194 (tsan detects race for real variables in an OMP reduction clause)\n\n\tPR libgomp/59194\n\t* omp-low.c (expand_omp_atomic_pipeline): Expand the initial\n\tload as __atomic_load_N if possible.\n\nFrom-SVN: r206572", "tree": {"sha": "5bc66d47b8e37f7add33a1760d03efd4927a1641", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bc66d47b8e37f7add33a1760d03efd4927a1641"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8175be9a8330acffdff270d5cad85b0d637e8f49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8175be9a8330acffdff270d5cad85b0d637e8f49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8175be9a8330acffdff270d5cad85b0d637e8f49", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8175be9a8330acffdff270d5cad85b0d637e8f49/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "131241a395a9aea1490f1650fc4b79eb1994f360", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/131241a395a9aea1490f1650fc4b79eb1994f360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/131241a395a9aea1490f1650fc4b79eb1994f360"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "5c1769b3f9f2d3d930349f75a23bc50e6f56b8f5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8175be9a8330acffdff270d5cad85b0d637e8f49/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8175be9a8330acffdff270d5cad85b0d637e8f49/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8175be9a8330acffdff270d5cad85b0d637e8f49", "patch": "@@ -1,3 +1,9 @@\n+2014-01-13  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR libgomp/59194\n+\t* omp-low.c (expand_omp_atomic_pipeline): Expand the initial\n+\tload as __atomic_load_N if possible.\n+\n 2014-01-11  David Edelsohn  <dje.gcc@gmail.com>\n \n \t* config/rs6000/rs6000.c (rs6000_expand_mtfsf_builtin): Remove"}, {"sha": "5a09b33b2d3db9ee3c907a958ec6584e6c6b1cd6", "filename": "gcc/omp-low.c", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8175be9a8330acffdff270d5cad85b0d637e8f49/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8175be9a8330acffdff270d5cad85b0d637e8f49/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=8175be9a8330acffdff270d5cad85b0d637e8f49", "patch": "@@ -7536,12 +7536,21 @@ expand_omp_atomic_pipeline (basic_block load_bb, basic_block store_bb,\n       loadedi = loaded_val;\n     }\n \n+  fncode = (enum built_in_function) (BUILT_IN_ATOMIC_LOAD_N + index + 1);\n+  tree loaddecl = builtin_decl_explicit (fncode);\n+  if (loaddecl)\n+    initial\n+      = fold_convert (TREE_TYPE (TREE_TYPE (iaddr)),\n+\t\t      build_call_expr (loaddecl, 2, iaddr,\n+\t\t\t\t       build_int_cst (NULL_TREE,\n+\t\t\t\t\t\t      MEMMODEL_RELAXED)));\n+  else\n+    initial = build2 (MEM_REF, TREE_TYPE (TREE_TYPE (iaddr)), iaddr,\n+\t\t      build_int_cst (TREE_TYPE (iaddr), 0));\n+\n   initial\n-    = force_gimple_operand_gsi (&si,\n-\t\t\t\tbuild2 (MEM_REF, TREE_TYPE (TREE_TYPE (iaddr)),\n-\t\t\t\t\tiaddr,\n-\t\t\t\t\tbuild_int_cst (TREE_TYPE (iaddr), 0)),\n-\t\t\t\ttrue, NULL_TREE, true, GSI_SAME_STMT);\n+    = force_gimple_operand_gsi (&si, initial, true, NULL_TREE, true,\n+\t\t\t\tGSI_SAME_STMT);\n \n   /* Move the value to the LOADEDI temporary.  */\n   if (gimple_in_ssa_p (cfun))"}]}