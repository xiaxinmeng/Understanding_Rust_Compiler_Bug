{"sha": "3fce100b4014ea58b55e5f8b6a8475b6eff3b3e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2ZjZTEwMGI0MDE0ZWE1OGI1NWU1ZjhiNmE4NDc1YjZlZmYzYjNlOQ==", "commit": {"author": {"name": "Andreas Krebbel", "email": "Andreas.Krebbel@de.ibm.com", "date": "2009-09-07T10:30:32Z"}, "committer": {"name": "Andreas Krebbel", "email": "krebbel@gcc.gnu.org", "date": "2009-09-07T10:30:32Z"}, "message": "rtl.h (PREFETCH_SCHEDULE_BARRIER_P): New macro.\n\n2009-09-07  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n\n\t* rtl.h (PREFETCH_SCHEDULE_BARRIER_P): New macro.\t\n\t* sched-deps.c (sched_analyze_2): Make prefetches a hard barrier\n\twhen volatile flag is set.\n\t* doc/rtl.texi (PREFETCH_SCHEDULE_BARRIER_P): Add documentation pieces.\n\nFrom-SVN: r151475", "tree": {"sha": "179ca9694e2adeee4f8201d3c4d57be345602003", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/179ca9694e2adeee4f8201d3c4d57be345602003"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3fce100b4014ea58b55e5f8b6a8475b6eff3b3e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fce100b4014ea58b55e5f8b6a8475b6eff3b3e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3fce100b4014ea58b55e5f8b6a8475b6eff3b3e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3fce100b4014ea58b55e5f8b6a8475b6eff3b3e9/comments", "author": null, "committer": null, "parents": [{"sha": "2dcbb2c0bf2fcdfec60dab2105ccd93815a30005", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dcbb2c0bf2fcdfec60dab2105ccd93815a30005", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dcbb2c0bf2fcdfec60dab2105ccd93815a30005"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "8527d0b42e3f9e643f324026911f6eeac6466dde", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fce100b4014ea58b55e5f8b6a8475b6eff3b3e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fce100b4014ea58b55e5f8b6a8475b6eff3b3e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3fce100b4014ea58b55e5f8b6a8475b6eff3b3e9", "patch": "@@ -1,3 +1,10 @@\n+2009-09-07  Andreas Krebbel  <Andreas.Krebbel@de.ibm.com>\n+\n+\t* rtl.h (PREFETCH_SCHEDULE_BARRIER_P): New macro.\t\n+\t* sched-deps.c (sched_analyze_2): Make prefetches a hard barrier\n+\twhen volatile flag is set.\n+\t* doc/rtl.texi (PREFETCH_SCHEDULE_BARRIER_P): Add documentation pieces.\n+\n 2009-09-06  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR bootstrap/41241"}, {"sha": "ba72b48096be05552dc2c12dd76792b97c6ed2e5", "filename": "gcc/doc/rtl.texi", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fce100b4014ea58b55e5f8b6a8475b6eff3b3e9/gcc%2Fdoc%2Frtl.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fce100b4014ea58b55e5f8b6a8475b6eff3b3e9/gcc%2Fdoc%2Frtl.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Frtl.texi?ref=3fce100b4014ea58b55e5f8b6a8475b6eff3b3e9", "patch": "@@ -882,6 +882,14 @@ Stored in the @code{volatil} field and printed as @samp{/v}.\n Most uses of @code{SYMBOL_REF_FLAG} are historic and may be subsumed\n by @code{SYMBOL_REF_FLAGS}.  Certainly use of @code{SYMBOL_REF_FLAGS}\n is mandatory if the target requires more than one bit of storage.\n+\n+@findex PREFETCH_SCHEDULE_BARRIER_P\n+@cindex @code{prefetch} and @samp{/v}\n+@cindex @code{volatile}, in @code{prefetch}\n+@item PREFETCH_SCHEDULE_BARRIER_P (@var{x})\n+In a @code{prefetch}, indicates that the prefetch is a scheduling barrier.\n+No other INSNs will be moved over it.\n+Stored in the @code{volatil} field and printed as @samp{/v}.\n @end table\n \n These are the fields to which the above macros refer:\n@@ -1034,6 +1042,9 @@ In an @code{insn}, 1 means the insn has been deleted.\n In @code{label_ref} and @code{reg_label} expressions, 1 means a reference\n to a non-local label.\n \n+In @code{prefetch} expressions, 1 means that the containing insn is a\n+scheduling barrier.\n+\n In an RTL dump, this flag is represented as @samp{/v}.\n @end table\n "}, {"sha": "88b93f19fb077021cfcf9bae085adf326ba3abc6", "filename": "gcc/rtl.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fce100b4014ea58b55e5f8b6a8475b6eff3b3e9/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fce100b4014ea58b55e5f8b6a8475b6eff3b3e9/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=3fce100b4014ea58b55e5f8b6a8475b6eff3b3e9", "patch": "@@ -271,7 +271,9 @@ struct GTY((chain_next (\"RTX_NEXT (&%h)\"),\n      1 in a SUBREG with a negative value.\n      1 in a LABEL_REF, REG_LABEL_TARGET or REG_LABEL_OPERAND note for a\n      non-local label.\n-     In a SYMBOL_REF, this flag is used for machine-specific purposes.  */\n+     In a SYMBOL_REF, this flag is used for machine-specific purposes.\n+     In a PREFETCH, this flag indicates that it should be considered a scheduling\n+     barrier.  */\n   unsigned int volatil : 1;\n   /* 1 in a MEM referring to a field of an aggregate.\n      0 if the MEM was a variable or the result of a * operator in C;\n@@ -1423,6 +1425,10 @@ do {\t\t\t\t\t\t\\\n    offset within that block.  */\n #define SYMBOL_REF_BLOCK_OFFSET(RTX) (BLOCK_SYMBOL_CHECK (RTX)->offset)\n \n+/* True if RTX is flagged to be a scheduling barrier.  */\n+#define PREFETCH_SCHEDULE_BARRIER_P(RTX)\t\t\t\t\t\\\n+  (RTL_FLAG_CHECK1(\"PREFETCH_SCHEDULE_BARRIER_P\", (RTX), PREFETCH)->volatil)\n+\n /* Indicate whether the machine has any sort of auto increment addressing.\n    If not, we can avoid checking for REG_INC notes.  */\n "}, {"sha": "e9dac316e9a97a09d99143b9d83dd86f1cfa891b", "filename": "gcc/sched-deps.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3fce100b4014ea58b55e5f8b6a8475b6eff3b3e9/gcc%2Fsched-deps.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3fce100b4014ea58b55e5f8b6a8475b6eff3b3e9/gcc%2Fsched-deps.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsched-deps.c?ref=3fce100b4014ea58b55e5f8b6a8475b6eff3b3e9", "patch": "@@ -2487,6 +2487,11 @@ sched_analyze_2 (struct deps *deps, rtx x, rtx insn)\n       flush_pending_lists (deps, insn, true, false);\n       break;\n \n+    case PREFETCH:\n+      if (PREFETCH_SCHEDULE_BARRIER_P (x))\n+\treg_pending_barrier = TRUE_BARRIER;\n+      break;\n+\n     case UNSPEC_VOLATILE:\n       flush_pending_lists (deps, insn, true, true);\n       /* FALLTHRU */"}]}