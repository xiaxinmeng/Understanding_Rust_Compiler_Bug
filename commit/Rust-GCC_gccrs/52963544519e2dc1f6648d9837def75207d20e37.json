{"sha": "52963544519e2dc1f6648d9837def75207d20e37", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTI5NjM1NDQ1MTllMmRjMWY2NjQ4ZDk4MzdkZWY3NTIwN2QyMGUzNw==", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2020-12-01T12:13:24Z"}, "committer": {"name": "Philip Herron", "email": "herron.philip@googlemail.com", "date": "2020-12-01T17:50:50Z"}, "message": "Mark this as a FIXME memory leak", "tree": {"sha": "0d85faf96b14e49aa17a76fa249a5b5ec70efd8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d85faf96b14e49aa17a76fa249a5b5ec70efd8d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52963544519e2dc1f6648d9837def75207d20e37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52963544519e2dc1f6648d9837def75207d20e37", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52963544519e2dc1f6648d9837def75207d20e37", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52963544519e2dc1f6648d9837def75207d20e37/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8567160538a82110847b7a62a881ed222718881a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8567160538a82110847b7a62a881ed222718881a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8567160538a82110847b7a62a881ed222718881a"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "5500fafbf5ee205b800d4fd4f854e9bf6bcdccc8", "filename": "gcc/rust/analysis/rust-type-resolution.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52963544519e2dc1f6648d9837def75207d20e37/gcc%2Frust%2Fanalysis%2Frust-type-resolution.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52963544519e2dc1f6648d9837def75207d20e37/gcc%2Frust%2Fanalysis%2Frust-type-resolution.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fanalysis%2Frust-type-resolution.cc?ref=52963544519e2dc1f6648d9837def75207d20e37", "patch": "@@ -445,6 +445,7 @@ TypeResolution::visit (AST::ArrayElemsValues &elems)\n   if (failed)\n     return;\n \n+  // FIXME This will leak\n   auto capacity\n     = new AST::LiteralExpr (std::to_string (elems.get_num_values ()),\n \t\t\t    AST::Literal::INT,"}]}