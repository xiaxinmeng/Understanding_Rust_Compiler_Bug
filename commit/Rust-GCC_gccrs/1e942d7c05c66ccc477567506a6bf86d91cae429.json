{"sha": "1e942d7c05c66ccc477567506a6bf86d91cae429", "node_id": "C_kwDOANBUbNoAKDFlOTQyZDdjMDVjNjZjY2M0Nzc1Njc1MDZhNmJmODZkOTFjYWU0Mjk", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-01-17T00:16:24Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-01-17T00:16:24Z"}, "message": "Daily bump.", "tree": {"sha": "529e3e4510e653494160383d4cf3844c6273db2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/529e3e4510e653494160383d4cf3844c6273db2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e942d7c05c66ccc477567506a6bf86d91cae429", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e942d7c05c66ccc477567506a6bf86d91cae429", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e942d7c05c66ccc477567506a6bf86d91cae429", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e942d7c05c66ccc477567506a6bf86d91cae429/comments", "author": null, "committer": null, "parents": [{"sha": "a326934886f606b4a4a60254917f58c825d7c94b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a326934886f606b4a4a60254917f58c825d7c94b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a326934886f606b4a4a60254917f58c825d7c94b"}], "stats": {"total": 130, "additions": 129, "deletions": 1}, "files": [{"sha": "b7e9a0b618f148cab8f4a908e466e5590d9a0063", "filename": "fixincludes/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e942d7c05c66ccc477567506a6bf86d91cae429/fixincludes%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e942d7c05c66ccc477567506a6bf86d91cae429/fixincludes%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/fixincludes%2FChangeLog?ref=1e942d7c05c66ccc477567506a6bf86d91cae429", "patch": "@@ -1,3 +1,21 @@\n+2022-01-16  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* inclhack.def (vxworks_math_h_fp_c99): New hack.\n+\t* tests/base/fcntl.h: Update.\n+\t* fixincl.x: Regenerate.\n+\n+2022-01-16  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* inclhack.def (vxworks_time_h_syslib): New hack.\n+\t* tests/base/time.h: Update.\n+\t* fixincl.x: Regenerate.\n+\n+2022-01-16  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* inclhack.def (vxworks_math_h_fp_c99): New hack.\n+\t* tests/base/math.h: Update.\n+\t* fixincl.x: Regenerate.\n+\n 2022-01-06  Olivier Hainque  <hainque@adacore.com>\n \n \t* inclhack.def (vxworks_next_yvals): New hack."}, {"sha": "440e3368a950e8a52b8e92d443bb7ec565f5b756", "filename": "gcc/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e942d7c05c66ccc477567506a6bf86d91cae429/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e942d7c05c66ccc477567506a6bf86d91cae429/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1e942d7c05c66ccc477567506a6bf86d91cae429", "patch": "@@ -1,3 +1,32 @@\n+2022-01-16  wwwhhhyyy  <hongyu.wang@intel.com>\n+\n+\t* config/i386/i386.h (TARGET_DEST_FALSE_DEP_FOR_GLC): New macro.\n+\t* config/i386/sse.md (<avx512>_<complexopname>_<mode><maskc_name><round_name>):\n+\tInsert zero-idiom in output template when attr enabled, set new attribute to\n+\ttrue for non-mask/maskz insn.\n+\t(avx512fp16_<complexopname>sh_v8hf<mask_scalarc_name><round_scalarcz_name>):\n+\tLikewise.\n+\t(avx512dq_mul<mode>3<mask_name>): Likewise.\n+\t(<avx2_avx512>_permvar<mode><mask_name>): Likewise.\n+\t(avx2_perm<mode>_1<mask_name>): Likewise.\n+\t(avx512f_perm<mode>_1<mask_name>): Likewise.\n+\t(avx512dq_rangep<mode><mask_name><round_saeonly_name>): Likewise.\n+\t(avx512dq_ranges<mode><mask_scalar_name><round_saeonly_scalar_name>):\n+\tLikewise.\n+\t(<avx512>_getmant<mode><mask_name><round_saeonly_name>): Likewise.\n+\t(avx512f_vgetmant<mode><mask_scalar_name><round_saeonly_scalar_name>):\n+\tLikewise.\n+\t* config/i386/subst.md (mask3_dest_false_dep_for_glc_cond): New\n+\tsubst_attr.\n+\t(mask4_dest_false_dep_for_glc_cond): Likewise.\n+\t(mask6_dest_false_dep_for_glc_cond): Likewise.\n+\t(mask10_dest_false_dep_for_glc_cond): Likewise.\n+\t(maskc_dest_false_dep_for_glc_cond): Likewise.\n+\t(mask_scalar4_dest_false_dep_for_glc_cond): Likewise.\n+\t(mask_scalarc_dest_false_dep_for_glc_cond): Likewise.\n+\t* config/i386/x86-tune.def (X86_TUNE_DEST_FALSE_DEP_FOR_GLC): New\n+\tDEF_TUNE enabled for m_SAPPHIRERAPIDS and m_ALDERLAKE\n+\n 2022-01-15  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/63272"}, {"sha": "2ee45af2ad017a7dcb63454d3dcfe45eb8f09bba", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e942d7c05c66ccc477567506a6bf86d91cae429/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e942d7c05c66ccc477567506a6bf86d91cae429/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=1e942d7c05c66ccc477567506a6bf86d91cae429", "patch": "@@ -1 +1 @@\n-20220116\n+20220117"}, {"sha": "1e8eb2d2042e74ace70519adea2186a48f53b65f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e942d7c05c66ccc477567506a6bf86d91cae429/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e942d7c05c66ccc477567506a6bf86d91cae429/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1e942d7c05c66ccc477567506a6bf86d91cae429", "patch": "@@ -1,3 +1,43 @@\n+2022-01-16  Francois-Xavier Coudert  <fxcoudert@gmail.com>\n+\n+\t* gfortran.dg/ieee/signaling_1.f90: xfail on x87.\n+\t* gfortran.dg/ieee/signaling_2.f90: xfail on x87.\n+\t* gfortran.dg/ieee/signaling_3.f90: New file.\n+\n+2022-01-16  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/82207\n+\t* gfortran.dg/ieee/ieee_10.f90: Do not create signaling NaNs.\n+\t* gfortran.dg/ieee/signaling_2.f90: New test.\n+\t* gfortran.dg/ieee/signaling_2_c.c: New file.\n+\n+2022-01-16  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR testsuite/104037\n+\t* g++.old-deja/g++.robertl/eb43.C: Ad -Wno-deprecated.\n+\n+2022-01-16  Mikael Morin  <mikael@gcc.gnu.org>\n+\n+\tPR fortran/103789\n+\tPR fortran/87711\n+\tPR fortran/97896\n+\t* gfortran.dg/index_5.f90: Enrich test with usages of INDEX with\n+\ta non-keyword KIND argument.\n+\t* gfortran.dg/len_trim.f90: Same for LEN_TRIM.\n+\t* gfortran.dg/maskl_1.f90: Same for MASKL.\n+\t* gfortran.dg/maskr_1.f90: Same for MASKR.\n+\t* gfortran.dg/scan_3.f90: Same for SCAN.\n+\t* gfortran.dg/verify_3.f90: Same for VERIFY.\n+\n+2022-01-16  wwwhhhyyy  <hongyu.wang@intel.com>\n+\n+\t* gcc.target/i386/avx2-dest-false-dep-for-glc.c: New test.\n+\t* gcc.target/i386/avx512dq-dest-false-dep-for-glc.c: Ditto.\n+\t* gcc.target/i386/avx512f-dest-false-dep-for-glc.c: Ditto.\n+\t* gcc.target/i386/avx512fp16-dest-false-dep-for-glc.c: Ditto.\n+\t* gcc.target/i386/avx512fp16vl-dest-false-dep-for-glc.c: Ditto.\n+\t* gcc.target/i386/avx512vl-dest-false-dep-for-glc.c: Ditto.\n+\n 2022-01-15  Martin Sebor  <msebor@redhat.com>\n \n \tPR c/63272"}, {"sha": "8d696b044604e323c2caf56c0cce0befba54a3e4", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e942d7c05c66ccc477567506a6bf86d91cae429/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e942d7c05c66ccc477567506a6bf86d91cae429/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=1e942d7c05c66ccc477567506a6bf86d91cae429", "patch": "@@ -1,3 +1,16 @@\n+2022-01-16  Francois-Xavier Coudert  <fxcoudert@gmail.com>\n+\n+\t* ieee/issignaling_fallback.h: New file.\n+\n+2022-01-16  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR fortran/82207\n+\t* mk-kinds-h.sh: Add values for TINY.\n+\t* ieee/ieee_arithmetic.F90: Call C helper functions for\n+\tIEEE_VALUE.\n+\t* ieee/ieee_helper.c: New functions ieee_value_helper_N for each\n+\tfloating-point type.\n+\n 2022-01-14  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR libfortran/104006"}, {"sha": "0dd73562a2c7630b937d8d57d21dad41a4d2bbc8", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e942d7c05c66ccc477567506a6bf86d91cae429/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e942d7c05c66ccc477567506a6bf86d91cae429/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=1e942d7c05c66ccc477567506a6bf86d91cae429", "patch": "@@ -1,3 +1,11 @@\n+2022-01-16  Kwok Cheung Yeung  <kcy@codesourcery.com>\n+\t    Andrew Stubbs   <ams@codesourcery.com>\n+\n+\t* plugin/plugin-gcn.c (parse_target_attributes): Automatically set\n+\tthe number of teams and threads if necessary.\n+\t(gcn_exec): Automatically set the number of gangs and workers if\n+\tnecessary.\n+\n 2022-01-13  Hafiz Abid Qadeer  <abidh@codesourcery.com>\n \n \t* testsuite/libgomp.fortran/allocate-1.c: New test."}, {"sha": "e32bfbf73c7f6ddb2ce10fdce43bd994ca45f082", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e942d7c05c66ccc477567506a6bf86d91cae429/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e942d7c05c66ccc477567506a6bf86d91cae429/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1e942d7c05c66ccc477567506a6bf86d91cae429", "patch": "@@ -1,3 +1,23 @@\n+2022-01-17  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/xml/manual/status_cxx2020.xml: Update.\n+\t* doc/html/manual/status.html: Regenerate.\n+\n+2022-01-17  Jonathan Wakely  <jwakely@redhat.com>\n+\t    Thomas Rodgers  <trodgers@redhat.com>\n+\n+\t* include/bits/shared_ptr_atomic.h (__cpp_lib_atomic_shared_ptr):\n+\tNew macro.\n+\t(_Sp_atomic): New class template.\n+\t(atomic<shared_ptr<T>>, atomic<weak_ptr<T>>): New partial\n+\tspecializations.\n+\t* include/bits/shared_ptr_base.h (__shared_count, __weak_count)\n+\t(__shared_ptr, __weak_ptr): Declare _Sp_atomic as a friend.\n+\t* include/std/version (__cpp_lib_atomic_shared_ptr): New macro.\n+\t* testsuite/20_util/shared_ptr/atomic/atomic_shared_ptr.cc: New\n+\ttest.\n+\t* testsuite/20_util/weak_ptr/atomic_weak_ptr.cc: New test.\n+\n 2022-01-15  Matthias Kretz  <m.kretz@gsi.de>\n \n \t* include/experimental/bits/simd.h: Move feature detection bools"}]}