{"sha": "ac1ca4515fe444bf6f9e1324b65240e44052eacd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWMxY2E0NTE1ZmU0NDRiZjZmOWUxMzI0YjY1MjQwZTQ0MDUyZWFjZA==", "commit": {"author": {"name": "Stephen Clarke", "email": "stephen.clarke@superh.com", "date": "2002-08-07T16:53:25Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2002-08-07T16:53:25Z"}, "message": "lib1funcs.asm (GCC_shcompact_incoming_args): Don't overwrite callee-save registers.\n\n\t* config/sh/lib1funcs.asm (GCC_shcompact_incoming_args): Don't\n\toverwrite callee-save registers.  Fix comment.\n\nFrom-SVN: r56101", "tree": {"sha": "293b4190010f64cb059eb02246eedeef5c4a84da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/293b4190010f64cb059eb02246eedeef5c4a84da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ac1ca4515fe444bf6f9e1324b65240e44052eacd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac1ca4515fe444bf6f9e1324b65240e44052eacd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac1ca4515fe444bf6f9e1324b65240e44052eacd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac1ca4515fe444bf6f9e1324b65240e44052eacd/comments", "author": null, "committer": null, "parents": [{"sha": "a98b7b289a571ab753dfe040af43b7e2c2d24171", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a98b7b289a571ab753dfe040af43b7e2c2d24171", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a98b7b289a571ab753dfe040af43b7e2c2d24171"}], "stats": {"total": 140, "additions": 73, "deletions": 67}, "files": [{"sha": "822e21af76567420294163f5548d358b6cdb66fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ca4515fe444bf6f9e1324b65240e44052eacd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ca4515fe444bf6f9e1324b65240e44052eacd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ac1ca4515fe444bf6f9e1324b65240e44052eacd", "patch": "@@ -1,3 +1,8 @@\n+2002-08-07  Stephen Clarke <stephen.clarke@superh.com>\n+\n+\t* config/sh/lib1funcs.asm (GCC_shcompact_incoming_args): Don't\n+\toverwrite callee-save registers.  Fix comment.\n+\n 2002-08-06  Chris Demetriou  <cgd@broadcom.com>\n \n \t* config/mips/mips.c (override_options): Set MASK_BRANCHLIKELY"}, {"sha": "68b2ca30529e95ca9e2d9c8f5e2dc072f40ae247", "filename": "gcc/config/sh/lib1funcs.asm", "status": "modified", "additions": 68, "deletions": 67, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ac1ca4515fe444bf6f9e1324b65240e44052eacd/gcc%2Fconfig%2Fsh%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ac1ca4515fe444bf6f9e1324b65240e44052eacd/gcc%2Fconfig%2Fsh%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Flib1funcs.asm?ref=ac1ca4515fe444bf6f9e1324b65240e44052eacd", "patch": "@@ -2357,9 +2357,10 @@ LOCAL(ia_main_table):\n \t.align\t2\n \t\n      /* This function stores 64-bit general-purpose registers back in\n-\tthe stack, starting at @(r1), where the cookie is supposed to\n-\thave been stored, and loads the address in which each register\n-\twas stored into itself.  Its execution time is linear on the\n+\tthe stack, and loads the address in which each register\n+\twas stored into itself.  The lower 32 bits of r17 hold the address\n+\tto begin storing, and the upper 32 bits of r17 hold the cookie.\n+\tIts execution time is linear on the\n \tnumber of registers that actually have to be copied, and it is\n \toptimized for structures larger than 64 bits, as opposed to\n \tinvidivual `long long' arguments.  See sh.h for details on the\n@@ -2369,136 +2370,136 @@ LOCAL(ia_main_table):\n GLOBAL(GCC_shcompact_incoming_args):\n \tptabs/l\tr18, tr0\t/* Prepare to return.  */\n \tshlri\tr17, 32, r0\t/* Load the cookie.  */\n-\tmovi\t((datalabel LOCAL(ia_main_table) - 31 * 2) >> 16) & 65535, r35\n+\tmovi\t((datalabel LOCAL(ia_main_table) - 31 * 2) >> 16) & 65535, r43\n \tpt/l\tLOCAL(ia_loop), tr1\n \tadd.l\tr17, r63, r17\n-\tshori\t((datalabel LOCAL(ia_main_table) - 31 * 2)) & 65535, r35\n+\tshori\t((datalabel LOCAL(ia_main_table) - 31 * 2)) & 65535, r43\n LOCAL(ia_loop):\n-\tnsb\tr0, r28\n-\tshlli\tr28, 1, r29\n-\tldx.w\tr35, r29, r30\n+\tnsb\tr0, r36\n+\tshlli\tr36, 1, r37\n+\tldx.w\tr43, r37, r38\n LOCAL(ia_main_label):\n-\tptrel/l\tr30, tr2\n+\tptrel/l\tr38, tr2\n \tblink\ttr2, r63\n LOCAL(ia_r2_ld):\t/* Store r2 and load its address.  */\n-\tmovi\t3, r30\n-\tshlli\tr30, 29, r31\n-\tand\tr0, r31, r32\n-\tandc\tr0, r31, r0\n+\tmovi\t3, r38\n+\tshlli\tr38, 29, r39\n+\tand\tr0, r39, r40\n+\tandc\tr0, r39, r0\n \tstx.q\tr17, r63, r2\n \tadd.l\tr17, r63, r2\n \taddi.l\tr17, 8, r17\n-\tbeq/u\tr31, r32, tr1\n+\tbeq/u\tr39, r40, tr1\n LOCAL(ia_r3_ld):\t/* Store r3 and load its address.  */\n-\tmovi\t3, r30\n-\tshlli\tr30, 26, r31\n-\tand\tr0, r31, r32\n-\tandc\tr0, r31, r0\n+\tmovi\t3, r38\n+\tshlli\tr38, 26, r39\n+\tand\tr0, r39, r40\n+\tandc\tr0, r39, r0\n \tstx.q\tr17, r63, r3\n \tadd.l\tr17, r63, r3\n \taddi.l\tr17, 8, r17\n-\tbeq/u\tr31, r32, tr1\n+\tbeq/u\tr39, r40, tr1\n LOCAL(ia_r4_ld):\t/* Store r4 and load its address.  */\n-\tmovi\t3, r30\n-\tshlli\tr30, 23, r31\n-\tand\tr0, r31, r32\n-\tandc\tr0, r31, r0\n+\tmovi\t3, r38\n+\tshlli\tr38, 23, r39\n+\tand\tr0, r39, r40\n+\tandc\tr0, r39, r0\n \tstx.q\tr17, r63, r4\n \tadd.l\tr17, r63, r4\n \taddi.l\tr17, 8, r17\n-\tbeq/u\tr31, r32, tr1\n+\tbeq/u\tr39, r40, tr1\n LOCAL(ia_r5_ld):\t/* Store r5 and load its address.  */\n-\tmovi\t3, r30\n-\tshlli\tr30, 20, r31\n-\tand\tr0, r31, r32\n-\tandc\tr0, r31, r0\n+\tmovi\t3, r38\n+\tshlli\tr38, 20, r39\n+\tand\tr0, r39, r40\n+\tandc\tr0, r39, r0\n \tstx.q\tr17, r63, r5\n \tadd.l\tr17, r63, r5\n \taddi.l\tr17, 8, r17\n-\tbeq/u\tr31, r32, tr1\n+\tbeq/u\tr39, r40, tr1\n LOCAL(ia_r6_ld):\t/* Store r6 and load its address.  */\n-\tmovi\t3, r30\n-\tshlli\tr30, 16, r31\n-\tand\tr0, r31, r32\n-\tandc\tr0, r31, r0\n+\tmovi\t3, r38\n+\tshlli\tr38, 16, r39\n+\tand\tr0, r39, r40\n+\tandc\tr0, r39, r0\n \tstx.q\tr17, r63, r6\n \tadd.l\tr17, r63, r6\n \taddi.l\tr17, 8, r17\n-\tbeq/u\tr31, r32, tr1\n+\tbeq/u\tr39, r40, tr1\n LOCAL(ia_r7_ld):\t/* Store r7 and load its address.  */\n-\tmovi\t3 << 12, r31\n-\tand\tr0, r31, r32\n-\tandc\tr0, r31, r0\n+\tmovi\t3 << 12, r39\n+\tand\tr0, r39, r40\n+\tandc\tr0, r39, r0\n \tstx.q\tr17, r63, r7\n \tadd.l\tr17, r63, r7\n \taddi.l\tr17, 8, r17\n-\tbeq/u\tr31, r32, tr1\n+\tbeq/u\tr39, r40, tr1\n LOCAL(ia_r8_ld):\t/* Store r8 and load its address.  */\n-\tmovi\t3 << 8, r31\n-\tand\tr0, r31, r32\n-\tandc\tr0, r31, r0\n+\tmovi\t3 << 8, r39\n+\tand\tr0, r39, r40\n+\tandc\tr0, r39, r0\n \tstx.q\tr17, r63, r8\n \tadd.l\tr17, r63, r8\n \taddi.l\tr17, 8, r17\n-\tbeq/u\tr31, r32, tr1\n+\tbeq/u\tr39, r40, tr1\n LOCAL(ia_r9_ld):\t/* Store r9 and load its address.  */\n \tstx.q\tr17, r63, r9\n \tadd.l\tr17, r63, r9\n \tblink\ttr0, r63\n LOCAL(ia_r2_push):\t/* Push r2 onto the stack.  */\n-\tmovi\t1, r30\n-\tshlli\tr30, 29, r31\n-\tandc\tr0, r31, r0\n+\tmovi\t1, r38\n+\tshlli\tr38, 29, r39\n+\tandc\tr0, r39, r0\n \tstx.q\tr17, r63, r2\n \taddi.l\tr17, 8, r17\n \tblink\ttr1, r63\n LOCAL(ia_r3_push):\t/* Push r3 onto the stack.  */\n-\tmovi\t1, r30\n-\tshlli\tr30, 26, r31\n-\tandc\tr0, r31, r0\n+\tmovi\t1, r38\n+\tshlli\tr38, 26, r39\n+\tandc\tr0, r39, r0\n \tstx.q\tr17, r63, r3\n \taddi.l\tr17, 8, r17\n \tblink\ttr1, r63\n LOCAL(ia_r4_push):\t/* Push r4 onto the stack.  */\n-\tmovi\t1, r30\n-\tshlli\tr30, 23, r31\n-\tandc\tr0, r31, r0\n+\tmovi\t1, r38\n+\tshlli\tr38, 23, r39\n+\tandc\tr0, r39, r0\n \tstx.q\tr17, r63, r4\n \taddi.l\tr17, 8, r17\n \tblink\ttr1, r63\n LOCAL(ia_r5_push):\t/* Push r5 onto the stack.  */\n-\tmovi\t1, r30\n-\tshlli\tr30, 20, r31\n-\tandc\tr0, r31, r0\n+\tmovi\t1, r38\n+\tshlli\tr38, 20, r39\n+\tandc\tr0, r39, r0\n \tstx.q\tr17, r63, r5\n \taddi.l\tr17, 8, r17\n \tblink\ttr1, r63\n LOCAL(ia_r6_push):\t/* Push r6 onto the stack.  */\n-\tmovi\t1, r30\n-\tshlli\tr30, 16, r31\n-\tandc\tr0, r31, r0\n+\tmovi\t1, r38\n+\tshlli\tr38, 16, r39\n+\tandc\tr0, r39, r0\n \tstx.q\tr17, r63, r6\n \taddi.l\tr17, 8, r17\n \tblink\ttr1, r63\n LOCAL(ia_r7_push):\t/* Push r7 onto the stack.  */\n-\tmovi\t1 << 12, r31\n-\tandc\tr0, r31, r0\n+\tmovi\t1 << 12, r39\n+\tandc\tr0, r39, r0\n \tstx.q\tr17, r63, r7\n \taddi.l\tr17, 8, r17\n \tblink\ttr1, r63\n LOCAL(ia_r8_push):\t/* Push r8 onto the stack.  */\n-\tmovi\t1 << 8, r31\n-\tandc\tr0, r31, r0\n+\tmovi\t1 << 8, r39\n+\tandc\tr0, r39, r0\n \tstx.q\tr17, r63, r8\n \taddi.l\tr17, 8, r17\n \tblink\ttr1, r63\n LOCAL(ia_push_seq):\t/* Push a sequence of registers onto the stack.  */\n-\tandi\tr0, 7 << 1, r30\n-\tmovi\t(LOCAL(ia_end_of_push_seq) >> 16) & 65535, r32\n-\tshlli\tr30, 2, r31\n-\tshori\tLOCAL(ia_end_of_push_seq) & 65535, r32\n-\tsub.l\tr32, r31, r33\n-\tptabs/l\tr33, tr2\n+\tandi\tr0, 7 << 1, r38\n+\tmovi\t(LOCAL(ia_end_of_push_seq) >> 16) & 65535, r40\n+\tshlli\tr38, 2, r39\n+\tshori\tLOCAL(ia_end_of_push_seq) & 65535, r40\n+\tsub.l\tr40, r39, r41\n+\tptabs/l\tr41, tr2\n \tblink\ttr2, r63\n LOCAL(ia_stack_of_push_seq):\t /* Beginning of push sequence.  */\n \tstx.q\tr17, r63, r3"}]}