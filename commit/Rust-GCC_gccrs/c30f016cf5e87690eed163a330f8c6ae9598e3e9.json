{"sha": "c30f016cf5e87690eed163a330f8c6ae9598e3e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMwZjAxNmNmNWU4NzY5MGVlZDE2M2EzMzBmOGM2YWU5NTk4ZTNlOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-01-05T15:42:07Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2014-01-05T15:42:07Z"}, "message": "i386.c (ix86_data_alignment): Calculate max_align from prefetch_block tune setting.\n\n\t* config/i386/i386.c (ix86_data_alignment): Calculate max_align\n\tfrom prefetch_block tune setting.\n\t(nocona_cost): Correct size of prefetch block to 64.\n\nFrom-SVN: r206345", "tree": {"sha": "07c56f0d0a03356895ebb36f8e012ac769cd0aac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07c56f0d0a03356895ebb36f8e012ac769cd0aac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c30f016cf5e87690eed163a330f8c6ae9598e3e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c30f016cf5e87690eed163a330f8c6ae9598e3e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c30f016cf5e87690eed163a330f8c6ae9598e3e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c30f016cf5e87690eed163a330f8c6ae9598e3e9/comments", "author": null, "committer": null, "parents": [{"sha": "18a68db933cafeea6c261235608de627216e45a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18a68db933cafeea6c261235608de627216e45a3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18a68db933cafeea6c261235608de627216e45a3"}], "stats": {"total": 96, "additions": 54, "deletions": 42}, "files": [{"sha": "600c24bed7333d13fb21b3ac5e63a6f188d8d786", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c30f016cf5e87690eed163a330f8c6ae9598e3e9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c30f016cf5e87690eed163a330f8c6ae9598e3e9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c30f016cf5e87690eed163a330f8c6ae9598e3e9", "patch": "@@ -1,3 +1,9 @@\n+2014-01-05  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (ix86_data_alignment): Calculate max_align\n+\tfrom prefetch_block tune setting.\n+\t(nocona_cost): Correct size of prefetch block to 64.\n+\n 2014-01-04  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* config/arm/arm.c (arm_get_frame_offsets): Revamp long lines.\n@@ -24,7 +30,7 @@\n 2014-01-03  Bingfeng Mei  <bmei@broadcom.com>\n \n \tPR tree-optimization/59651\n-\t* tree-vect-loop-manip.c (vect_create_cond_for_alias_checks): \n+\t* tree-vect-loop-manip.c (vect_create_cond_for_alias_checks):\n \tAddress\trange for negative step should be added by TYPE_SIZE_UNIT.\n \n 2014-01-03  Andreas Schwab  <schwab@linux-m68k.org>\n@@ -102,20 +108,21 @@\n \n 2014-01-02  Richard Sandiford  <rdsandiford@googlemail.com>\n \n-\tUpdate copyright years\n+\tUpdate copyright years.\n \n 2014-01-02  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* common/config/arc/arc-common.c, config/arc/arc-modes.def,\n \tconfig/arc/arc-protos.h, config/arc/arc.c, config/arc/arc.h,\n-\tconfig/arc/arc.md, config/arc/arc.opt, config/arm/arm_neon_builtins.def,\n-\tconfig/arm/crypto.def, config/i386/avx512cdintrin.h,\n-\tconfig/i386/avx512erintrin.h, config/i386/avx512fintrin.h,\n-\tconfig/i386/avx512pfintrin.h, config/i386/btver2.md,\n-\tconfig/i386/shaintrin.h, config/i386/slm.md, config/linux-protos.h,\n-\tconfig/linux.c, config/winnt-c.c, diagnostic-color.c,\n-\tdiagnostic-color.h, gimple-ssa-isolate-paths.c, vtable-verify.c,\n-\tvtable-verify.h: Use the standard form for the copyright notice.\n+\tconfig/arc/arc.md, config/arc/arc.opt,\n+\tconfig/arm/arm_neon_builtins.def, config/arm/crypto.def,\n+\tconfig/i386/avx512cdintrin.h, config/i386/avx512erintrin.h,\n+\tconfig/i386/avx512fintrin.h, config/i386/avx512pfintrin.h,\n+\tconfig/i386/btver2.md, config/i386/shaintrin.h, config/i386/slm.md,\n+\tconfig/linux-protos.h, config/linux.c, config/winnt-c.c,\n+\tdiagnostic-color.c, diagnostic-color.h, gimple-ssa-isolate-paths.c,\n+\tvtable-verify.c, vtable-verify.h: Use the standard form for the\n+\tcopyright notice.\n \n 2014-01-02  Tobias Burnus  <burnus@net-b.de>\n "}, {"sha": "2c11878a134ddcee5bd67e1ad89d08c90a24445c", "filename": "gcc/ChangeLog-2013", "status": "modified", "additions": 26, "deletions": 29, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c30f016cf5e87690eed163a330f8c6ae9598e3e9/gcc%2FChangeLog-2013", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c30f016cf5e87690eed163a330f8c6ae9598e3e9/gcc%2FChangeLog-2013", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog-2013?ref=c30f016cf5e87690eed163a330f8c6ae9598e3e9", "patch": "@@ -62,19 +62,19 @@\n \t(_mm_roundscale_ss): Ditto.\n \t(_mm_roundscale_sd): Ditto.\n \t* config/i386/i386-builtin-types.def: New types to support\n-\tnew built-ins: <V2DF, V2DF, V2DF, INT, INT>, <V4SF, V4SF, V4SF, INT, INT>,\n-\t<(V4SF, V4SF, V2DF, INT>, <V2DF, V2DF, V4SF, INT>,\n-\t<V4SF, V4SF, V4SF, V4SF, IN>.\n-\t* config/i386/i386.c (enum ix86_builtins): Add IX86_BUILTIN_ADDSD_ROUND,\n-\tIX86_BUILTIN_ADDSS_ROUND, IX86_BUILTIN_CVTSD2SS_ROUND,\n-\tIX86_BUILTIN_CVTSS2SD_ROUND, IX86_BUILTIN_DIVSD_ROUND,\n-\tIX86_BUILTIN_GETEXPSD128, IX86_BUILTIN_DIVSS_ROUND,\n-\tIX86_BUILTIN_GETEXPSS128, IX86_BUILTIN_GETMANTSD128,\n-\tIX86_BUILTIN_GETMANTSS128, IX86_BUILTIN_MAXSD_ROUND,\n-\tIX86_BUILTIN_MAXSS_ROUND, IX86_BUILTIN_MINSD_ROUND,\n-\tIX86_BUILTIN_MINSS_ROUND, IX86_BUILTIN_MULSD_ROUND,\n-\tIX86_BUILTIN_MULSS_ROUND, IX86_BUILTIN_RCP14SD,\n-\tIX86_BUILTIN_RCP14SS, IX86_BUILTIN_RNDSCALESD,\n+\tnew built-ins: <V2DF, V2DF, V2DF, INT, INT>,\n+\t<V4SF, V4SF, V4SF, INT, INT>, <(V4SF, V4SF, V2DF, INT>,\n+\t<V2DF, V2DF, V4SF, INT>, <V4SF, V4SF, V4SF, V4SF, IN>.\n+\t* config/i386/i386.c (enum ix86_builtins): Add\n+\tIX86_BUILTIN_ADDSD_ROUND, IX86_BUILTIN_ADDSS_ROUND,\n+\tIX86_BUILTIN_CVTSD2SS_ROUND, IX86_BUILTIN_CVTSS2SD_ROUND,\n+\tIX86_BUILTIN_DIVSD_ROUND, IX86_BUILTIN_GETEXPSD128,\n+\tIX86_BUILTIN_DIVSS_ROUND, IX86_BUILTIN_GETEXPSS128,\n+\tIX86_BUILTIN_GETMANTSD128, IX86_BUILTIN_GETMANTSS128,\n+\tIX86_BUILTIN_MAXSD_ROUND, IX86_BUILTIN_MAXSS_ROUND,\n+\tIX86_BUILTIN_MINSD_ROUND, IX86_BUILTIN_MINSS_ROUND,\n+\tIX86_BUILTIN_MULSD_ROUND, IX86_BUILTIN_MULSS_ROUND,\n+\tIX86_BUILTIN_RCP14SD, IX86_BUILTIN_RCP14SS, IX86_BUILTIN_RNDSCALESD,\n \tIX86_BUILTIN_RNDSCALESS, IX86_BUILTIN_RSQRT14SD,\n \tIX86_BUILTIN_RSQRT14SS, IX86_BUILTIN_SCALEFSD,\n \tIX86_BUILTIN_SCALEFSS, IX86_BUILTIN_SQRTSD_ROUND,\n@@ -752,7 +752,6 @@\n \t(ix86_expand_int_vcond): Ditto.\n \t(ix86_expand_vec_perm): Ditto.\n \t(ix86_expand_sse_unpack): Ditto.\n-\t(ix86_constant_alignment): Ditto.\n \t(ix86_builtin_vectorized_function): Ditto.\n \t(ix86_vectorize_builtin_gather): Ditto.\n \t(avx_vpermilp_parallel): Ditto.\n@@ -773,15 +772,15 @@\n \t(ix86_autovectorize_vector_sizes): Ditto.\n \t(ix86_expand_vec_perm_vpermi2): New.\n \t(ix86_vector_duplicate_value): Ditto.\n-\t(IX86_BUILTIN_SQRTPD512, IX86_BUILTIN_EXP2PS, IX86_BUILTIN_SQRTPS_NR512,\n-\tIX86_BUILTIN_GATHER3ALTDIV16SF, IX86_BUILTIN_GATHER3ALTDIV16SI,\n-\tIX86_BUILTIN_GATHER3ALTSIV8DF, IX86_BUILTIN_GATHER3ALTSIV8DI,\n-\tIX86_BUILTIN_GATHER3DIV16SF, IX86_BUILTIN_GATHER3DIV16SI,\n-\tIX86_BUILTIN_GATHER3DIV8DF, IX86_BUILTIN_GATHER3DIV8DI,\n-\tIX86_BUILTIN_GATHER3SIV16SF, IX86_BUILTIN_GATHER3SIV16SI,\n-\tIX86_BUILTIN_GATHER3SIV8DF, IX86_BUILTIN_CEILPD_VEC_PACK_SFIX512,\n-\tIX86_BUILTIN_CPYSGNPS512, IX86_BUILTIN_CPYSGNPD512,\n-\tIX86_BUILTIN_FLOORPD_VEC_PACK_SFIX512,\n+\t(IX86_BUILTIN_SQRTPD512, IX86_BUILTIN_EXP2PS,\n+\tIX86_BUILTIN_SQRTPS_NR512, IX86_BUILTIN_GATHER3ALTDIV16SF,\n+\tIX86_BUILTIN_GATHER3ALTDIV16SI, IX86_BUILTIN_GATHER3ALTSIV8DF,\n+\tIX86_BUILTIN_GATHER3ALTSIV8DI, IX86_BUILTIN_GATHER3DIV16SF,\n+\tIX86_BUILTIN_GATHER3DIV16SI, IX86_BUILTIN_GATHER3DIV8DF,\n+\tIX86_BUILTIN_GATHER3DIV8DI, IX86_BUILTIN_GATHER3SIV16SF,\n+\tIX86_BUILTIN_GATHER3SIV16SI, IX86_BUILTIN_GATHER3SIV8DF,\n+\tIX86_BUILTIN_CEILPD_VEC_PACK_SFIX512, IX86_BUILTIN_CPYSGNPS512,\n+\tIX86_BUILTIN_CPYSGNPD512, IX86_BUILTIN_FLOORPD_VEC_PACK_SFIX512,\n \tIX86_BUILTIN_ROUNDPD_AZ_VEC_PACK_SFIX512): Ditto.\n \t* config/i386/sse.md (*mov<mode>_internal): Disable SSE typeless\n \tstores vectors > 128bit (AVX*).\n@@ -816,10 +815,8 @@\n \t* config/nios2/constraints.md: New file.\n \t* config/nios2/t-nios2: New file.\n \t* common/config/nios2/nios2-common.c: New file.\n-\t* doc/invoke.texi (Nios II options): Document Nios II specific\n-\toptions.\n-\t* doc/md.texi (Nios II family): Document Nios II specific\n-\tconstraints.\n+\t* doc/invoke.texi (Nios II options): Document Nios II specific options.\n+\t* doc/md.texi (Nios II family): Document Nios II specific constraints.\n \t* doc/extend.texi (Function Specific Option Pragmas): Document\n \tNios II supported target pragma functionality.\n \n@@ -1076,8 +1073,8 @@\n \n 2013-12-26  Ganesh Gopalasubramanian  <Ganesh.Gopalasubramanian@amd.com>\n \n-\t* config/i386/i386.c (get_builtin_code_for_version): Rename AMD \n-\tCPU names M_AMD_BOBCAT to M_AMD_BTVER1 and M_AMD_JAGUAR \n+\t* config/i386/i386.c (get_builtin_code_for_version): Rename AMD\n+\tCPU names M_AMD_BOBCAT to M_AMD_BTVER1 and M_AMD_JAGUAR\n \tto M_AMD_BTVER2.\n \t(processor_model): Likewise.\n \t(arch_names_table): Likewise."}, {"sha": "39891c96402db5020f4c953a8faa5db3d781f037", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c30f016cf5e87690eed163a330f8c6ae9598e3e9/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c30f016cf5e87690eed163a330f8c6ae9598e3e9/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=c30f016cf5e87690eed163a330f8c6ae9598e3e9", "patch": "@@ -1568,7 +1568,7 @@ struct processor_costs nocona_cost = {\n   8,\t\t\t\t\t/* MMX or SSE register to integer */\n   8,\t\t\t\t\t/* size of l1 cache.  */\n   1024,\t\t\t\t\t/* size of l2 cache.  */\n-  128,\t\t\t\t\t/* size of prefetch block */\n+  64,\t\t\t\t\t/* size of prefetch block */\n   8,\t\t\t\t\t/* number of parallel prefetches */\n   1,\t\t\t\t\t/* Branch cost */\n   COSTS_N_INSNS (6),\t\t\t/* cost of FADD and FSUB insns.  */\n@@ -26465,8 +26465,16 @@ ix86_constant_alignment (tree exp, int align)\n int\n ix86_data_alignment (tree type, int align, bool opt)\n {\n-  int max_align = optimize_size ? BITS_PER_WORD\n-\t\t\t\t: MIN (512, MAX_OFILE_ALIGNMENT);\n+  /* A data structure, equal or greater than the size of a cache line\n+     (64 bytes in the Pentium 4 and other recent Intel processors, including\n+     processors based on Intel Core microarchitecture) should be aligned\n+     so that its base address is a multiple of a cache line size.  */\n+\n+  int max_align\n+    = MIN ((unsigned) ix86_tune_cost->prefetch_block * 8, MAX_OFILE_ALIGNMENT);\n+\n+  if (max_align < BITS_PER_WORD)\n+    max_align = BITS_PER_WORD;\n \n   if (opt\n       && AGGREGATE_TYPE_P (type)"}]}