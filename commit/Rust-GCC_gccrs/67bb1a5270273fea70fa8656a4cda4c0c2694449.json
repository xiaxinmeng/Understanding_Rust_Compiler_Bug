{"sha": "67bb1a5270273fea70fa8656a4cda4c0c2694449", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdiYjFhNTI3MDI3M2ZlYTcwZmE4NjU2YTRjZGE0YzBjMjY5NDQ0OQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-04-27T21:10:27Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-04-27T21:10:27Z"}, "message": "Initial revision\n\nFrom-SVN: r19443", "tree": {"sha": "f5e7f57257e337272b537d1c78afa8ebead4e778", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5e7f57257e337272b537d1c78afa8ebead4e778"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67bb1a5270273fea70fa8656a4cda4c0c2694449", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67bb1a5270273fea70fa8656a4cda4c0c2694449", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67bb1a5270273fea70fa8656a4cda4c0c2694449", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67bb1a5270273fea70fa8656a4cda4c0c2694449/comments", "author": null, "committer": null, "parents": [{"sha": "500911e245b74048fff4369f1cc688e8a68d8410", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/500911e245b74048fff4369f1cc688e8a68d8410", "html_url": "https://github.com/Rust-GCC/gccrs/commit/500911e245b74048fff4369f1cc688e8a68d8410"}], "stats": {"total": 108, "additions": 108, "deletions": 0}, "files": [{"sha": "88557460f3b3a6535da599ba233f51309b276999", "filename": "gcc/intl/textdomain.c", "status": "added", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67bb1a5270273fea70fa8656a4cda4c0c2694449/gcc%2Fintl%2Ftextdomain.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67bb1a5270273fea70fa8656a4cda4c0c2694449/gcc%2Fintl%2Ftextdomain.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintl%2Ftextdomain.c?ref=67bb1a5270273fea70fa8656a4cda4c0c2694449", "patch": "@@ -0,0 +1,108 @@\n+/* Implementation of the textdomain(3) function.\n+   Copyright (C) 1995, 1996, 1997, 1998 Free Software Foundation, Inc.\n+   Written by Ulrich Drepper <drepper@gnu.ai.mit.edu>, 1995.\n+\n+   This program is free software; you can redistribute it and/or modify\n+   it under the terms of the GNU General Public License as published by\n+   the Free Software Foundation; either version 2, or (at your option)\n+   any later version.\n+\n+   This program is distributed in the hope that it will be useful,\n+   but WITHOUT ANY WARRANTY; without even the implied warranty of\n+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+   GNU General Public License for more details.\n+\n+   You should have received a copy of the GNU General Public License\n+   along with this program; if not, write to the Free Software Foundation,\n+   Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n+\n+#ifdef HAVE_CONFIG_H\n+# include <config.h>\n+#endif\n+\n+#if defined STDC_HEADERS || defined _LIBC\n+# include <stdlib.h>\n+#endif\n+\n+#if defined STDC_HEADERS || defined HAVE_STRING_H || defined _LIBC\n+# include <string.h>\n+#else\n+# include <strings.h>\n+# ifndef memcpy\n+#  define memcpy(Dst, Src, Num) bcopy (Src, Dst, Num)\n+# endif\n+#endif\n+\n+#ifdef _LIBC\n+# include <libintl.h>\n+#else\n+# include \"libgettext.h\"\n+#endif\n+\n+/* @@ end of prolog @@ */\n+\n+/* Name of the default text domain.  */\n+extern const char _nl_default_default_domain[];\n+\n+/* Default text domain in which entries for gettext(3) are to be found.  */\n+extern const char *_nl_current_default_domain;\n+\n+\n+/* Names for the libintl functions are a problem.  They must not clash\n+   with existing names and they should follow ANSI C.  But this source\n+   code is also used in GNU C Library where the names have a __\n+   prefix.  So we have to make a difference here.  */\n+#ifdef _LIBC\n+# define TEXTDOMAIN __textdomain\n+# ifndef strdup\n+#  define strdup(str) __strdup (str)\n+# endif\n+#else\n+# define TEXTDOMAIN textdomain__\n+#endif\n+\n+/* Set the current default message catalog to DOMAINNAME.\n+   If DOMAINNAME is null, return the current default.\n+   If DOMAINNAME is \"\", reset to the default of \"messages\".  */\n+char *\n+TEXTDOMAIN (domainname)\n+     const char *domainname;\n+{\n+  char *old;\n+\n+  /* A NULL pointer requests the current setting.  */\n+  if (domainname == NULL)\n+    return (char *) _nl_current_default_domain;\n+\n+  old = (char *) _nl_current_default_domain;\n+\n+  /* If domain name is the null string set to default domain \"messages\".  */\n+  if (domainname[0] == '\\0'\n+      || strcmp (domainname, _nl_default_default_domain) == 0)\n+    _nl_current_default_domain = _nl_default_default_domain;\n+  else\n+    {\n+      /* If the following malloc fails `_nl_current_default_domain'\n+\t will be NULL.  This value will be returned and so signals we\n+\t are out of core.  */\n+#if defined _LIBC || defined HAVE_STRDUP\n+      _nl_current_default_domain = strdup (domainname);\n+#else\n+      size_t len = strlen (domainname) + 1;\n+      char *cp = (char *) malloc (len);\n+      if (cp != NULL)\n+\tmemcpy (cp, domainname, len);\n+      _nl_current_default_domain = cp;\n+#endif\n+    }\n+\n+  if (old != _nl_default_default_domain)\n+    free (old);\n+\n+  return (char *) _nl_current_default_domain;\n+}\n+\n+#ifdef _LIBC\n+/* Alias for function name in GNU C Library.  */\n+weak_alias (__textdomain, textdomain);\n+#endif"}]}