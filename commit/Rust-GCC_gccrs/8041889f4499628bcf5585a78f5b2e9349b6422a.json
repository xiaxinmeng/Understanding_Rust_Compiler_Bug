{"sha": "8041889f4499628bcf5585a78f5b2e9349b6422a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA0MTg4OWY0NDk5NjI4YmNmNTU4NWE3OGY1YjJlOTM0OWI2NDIyYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2002-02-24T21:43:52Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2002-02-24T21:43:52Z"}, "message": "* optabs.c (widen_operand): Properly handle CONST_INT for NO_EXTEND.\n\nFrom-SVN: r50011", "tree": {"sha": "d41aac23d0588c869de70813a306b8896a0bf5c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d41aac23d0588c869de70813a306b8896a0bf5c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8041889f4499628bcf5585a78f5b2e9349b6422a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8041889f4499628bcf5585a78f5b2e9349b6422a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8041889f4499628bcf5585a78f5b2e9349b6422a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8041889f4499628bcf5585a78f5b2e9349b6422a/comments", "author": null, "committer": null, "parents": [{"sha": "506d4ef6a187164128f403497ac24fcc11a08d84", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/506d4ef6a187164128f403497ac24fcc11a08d84", "html_url": "https://github.com/Rust-GCC/gccrs/commit/506d4ef6a187164128f403497ac24fcc11a08d84"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "8e06eeeb35eeed9f7693ceeb57b98a747736669d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8041889f4499628bcf5585a78f5b2e9349b6422a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8041889f4499628bcf5585a78f5b2e9349b6422a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8041889f4499628bcf5585a78f5b2e9349b6422a", "patch": "@@ -1,3 +1,7 @@\n+Sun Feb 24 16:38:56 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* optabs.c (widen_operand): Properly handle CONST_INT for NO_EXTEND.\n+\n 2002-02-24  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* cpplex.c (cpp_interpret_charconst): Get signedness or"}, {"sha": "bb3e292b2019aba8dbd93d38de2c6f5e3409134c", "filename": "gcc/optabs.c", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8041889f4499628bcf5585a78f5b2e9349b6422a/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8041889f4499628bcf5585a78f5b2e9349b6422a/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=8041889f4499628bcf5585a78f5b2e9349b6422a", "patch": "@@ -186,11 +186,14 @@ widen_operand (op, mode, oldmode, unsignedp, no_extend)\n {\n   rtx result;\n \n-  /* If we must extend do so.  If OP is either a constant or a SUBREG\n-     for a promoted object, also extend since it will be more efficient to\n-     do so.  */\n+  /* If we don't have to extend and this is a constant, return it.  */\n+  if (no_extend && GET_MODE (op) == VOIDmode)\n+    return op;\n+\n+  /* If we must extend do so.  If OP is a SUBREG for a promoted object, also\n+     extend since it will be more efficient to do so unless the signedness of\n+     a promoted object differs from our extension.  */\n   if (! no_extend\n-      || GET_MODE (op) == VOIDmode\n       || (GET_CODE (op) == SUBREG && SUBREG_PROMOTED_VAR_P (op)\n \t  && SUBREG_PROMOTED_UNSIGNED_P (op) == unsignedp))\n     return convert_modes (mode, oldmode, op, unsignedp);"}]}