{"sha": "8ec0d73b3487b8beaddb0bd6873934a183fa8a8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVjMGQ3M2IzNDg3YjhiZWFkZGIwYmQ2ODczOTM0YTE4M2ZhOGE4Zg==", "commit": {"author": {"name": "Andrew Pinski", "email": "andrew_pinski@playstation.sony.com", "date": "2009-03-27T13:36:33Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2009-03-27T13:36:33Z"}, "message": "re PR c++/38638 (ICE superfluous 'typename')\n\ngcc/cp/\n\n2009-03-27  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\n\tPR c++/38638\n\t* parser.c (cp_parser_elaborated_type_specifier): If we have a\n\ttypename tag and don't have either a TYPE_DECL or a\n\tTEMPLATE_ID_EXPR, set the type to NULL.\n\ngcc/testsuite/\n\n2009-03-27  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\n\tPR c++/38638\n\t* g++.dg/template/typename17.C: New testcase.\n\t* g++.dg/template/typename18.C: New testcase.\n\nFrom-SVN: r145107", "tree": {"sha": "44c907cf2c62b7aa65f16b98eab7e98cdb9f1609", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44c907cf2c62b7aa65f16b98eab7e98cdb9f1609"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8ec0d73b3487b8beaddb0bd6873934a183fa8a8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ec0d73b3487b8beaddb0bd6873934a183fa8a8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ec0d73b3487b8beaddb0bd6873934a183fa8a8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ec0d73b3487b8beaddb0bd6873934a183fa8a8f/comments", "author": null, "committer": null, "parents": [{"sha": "b0957daf070e13e7c298370996e2db3a6ca3c959", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0957daf070e13e7c298370996e2db3a6ca3c959", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0957daf070e13e7c298370996e2db3a6ca3c959"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "6fcd92a8822d311d7b58d5cbd61a5dce6146b439", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ec0d73b3487b8beaddb0bd6873934a183fa8a8f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ec0d73b3487b8beaddb0bd6873934a183fa8a8f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8ec0d73b3487b8beaddb0bd6873934a183fa8a8f", "patch": "@@ -1,3 +1,10 @@\n+2009-03-27  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR c++/38638\n+\t* parser.c (cp_parser_elaborated_type_specifier): If we have a\n+\ttypename tag and don't have either a TYPE_DECL or a\n+\tTEMPLATE_ID_EXPR, set the type to NULL.\n+\n 2009-03-27  Simon Martin  <simartin@users.sourceforge.net>\n \n \tPR c++/37647"}, {"sha": "63ac0709ebfd91df0c7d1411cf8192299a382d7e", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ec0d73b3487b8beaddb0bd6873934a183fa8a8f/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ec0d73b3487b8beaddb0bd6873934a183fa8a8f/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=8ec0d73b3487b8beaddb0bd6873934a183fa8a8f", "patch": "@@ -11588,7 +11588,11 @@ cp_parser_elaborated_type_specifier (cp_parser* parser,\n \ttype = make_typename_type (parser->scope, decl,\n \t\t\t\t   typename_type,\n \t\t\t\t   /*complain=*/tf_error);\n-      else\n+      /* If the `typename' keyword is in effect and DECL is not a type\n+\t decl. Then type is non existant.   */\n+      else if (tag_type == typename_type && TREE_CODE (decl) != TYPE_DECL)\n+        type = NULL_TREE; \n+      else \n \ttype = TREE_TYPE (decl);\n     }\n "}, {"sha": "c5e9545d13b9e22c9a3b46af9c89c50a6e7b58be", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ec0d73b3487b8beaddb0bd6873934a183fa8a8f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ec0d73b3487b8beaddb0bd6873934a183fa8a8f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8ec0d73b3487b8beaddb0bd6873934a183fa8a8f", "patch": "@@ -1,3 +1,9 @@\n+2009-03-27  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR c++/38638\n+\t* g++.dg/template/typename17.C: New testcase.\n+\t* g++.dg/template/typename18.C: New testcase.\n+\n 2009-03-27  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n \n \tPR c++/36799"}, {"sha": "748b1f7ab1891549bc1213ab184908953ccf71bb", "filename": "gcc/testsuite/g++.dg/template/typename17.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ec0d73b3487b8beaddb0bd6873934a183fa8a8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ec0d73b3487b8beaddb0bd6873934a183fa8a8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename17.C?ref=8ec0d73b3487b8beaddb0bd6873934a183fa8a8f", "patch": "@@ -0,0 +1,10 @@\n+// { dg-do compile }\n+\n+// This should fail as A::foo<0> is not a typename at all.\n+struct A\n+{\n+  template<int> void foo(int i)\n+  {\n+    typename A::foo<0>(i1); // { dg-error \"\" }\n+  }\n+};"}, {"sha": "4134ef6f64bf8b100856ddf4be7fba2cd0e57b48", "filename": "gcc/testsuite/g++.dg/template/typename18.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8ec0d73b3487b8beaddb0bd6873934a183fa8a8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8ec0d73b3487b8beaddb0bd6873934a183fa8a8f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename18.C?ref=8ec0d73b3487b8beaddb0bd6873934a183fa8a8f", "patch": "@@ -0,0 +1,14 @@\n+// { dg-do compile }\n+\n+// These typename should work as they are types.\n+struct A\n+{\n+  typedef int a;\n+  template <int>\n+  struct f {};\n+  template<int> void foo(int i)\n+  {\n+    typename A::a(i1);\n+    typename A::f<0>(i2);\n+  }\n+};"}]}