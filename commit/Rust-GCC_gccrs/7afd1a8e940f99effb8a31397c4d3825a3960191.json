{"sha": "7afd1a8e940f99effb8a31397c4d3825a3960191", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FmZDFhOGU5NDBmOTllZmZiOGEzMTM5N2M0ZDM4MjVhMzk2MDE5MQ==", "commit": {"author": {"name": "Walter Lee", "email": "walt@tilera.com", "date": "2012-02-26T07:56:56Z"}, "committer": {"name": "Walter Lee", "email": "walt@gcc.gnu.org", "date": "2012-02-26T07:56:56Z"}, "message": "Fix a bug in tilegx_fixup_pcrel_references...\n\nFix a bug in tilegx_fixup_pcrel_references, to properly match and\nfixup the second instruction of the instruction sequence to generate a\npc relative address.\n\n\t* config/tilegx/tilegx.c (match_pcrel_step2): Fix instruction\n\tpattern.\n\t(replace_mov_pcrel_step2): Ditto.\n\nFrom-SVN: r184582", "tree": {"sha": "6a4617e5e269b1f5118f99b92101564761594252", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6a4617e5e269b1f5118f99b92101564761594252"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7afd1a8e940f99effb8a31397c4d3825a3960191", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7afd1a8e940f99effb8a31397c4d3825a3960191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7afd1a8e940f99effb8a31397c4d3825a3960191", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7afd1a8e940f99effb8a31397c4d3825a3960191/comments", "author": {"login": "walt-tilera", "id": 6602917, "node_id": "MDQ6VXNlcjY2MDI5MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/6602917?v=4", "gravatar_id": "", "url": "https://api.github.com/users/walt-tilera", "html_url": "https://github.com/walt-tilera", "followers_url": "https://api.github.com/users/walt-tilera/followers", "following_url": "https://api.github.com/users/walt-tilera/following{/other_user}", "gists_url": "https://api.github.com/users/walt-tilera/gists{/gist_id}", "starred_url": "https://api.github.com/users/walt-tilera/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/walt-tilera/subscriptions", "organizations_url": "https://api.github.com/users/walt-tilera/orgs", "repos_url": "https://api.github.com/users/walt-tilera/repos", "events_url": "https://api.github.com/users/walt-tilera/events{/privacy}", "received_events_url": "https://api.github.com/users/walt-tilera/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6d2bbbadc483446a2a345cfa198334c84796770", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6d2bbbadc483446a2a345cfa198334c84796770", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6d2bbbadc483446a2a345cfa198334c84796770"}], "stats": {"total": 32, "additions": 25, "deletions": 7}, "files": [{"sha": "4904aec3229d295d6214e699cfd145887c7fb7c6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afd1a8e940f99effb8a31397c4d3825a3960191/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afd1a8e940f99effb8a31397c4d3825a3960191/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7afd1a8e940f99effb8a31397c4d3825a3960191", "patch": "@@ -1,3 +1,9 @@\n+2012-02-26  Walter Lee  <walt@tilera.com>\n+\n+\t* config/tilegx/tilegx.c (match_pcrel_step2): Fix instruction\n+\tpattern.\n+\t(replace_mov_pcrel_step2): Ditto.\n+\n 2012-02-25  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/52001"}, {"sha": "fa739e36752881cfd0986a1a4f85253a8bb62c42", "filename": "gcc/config/tilegx/tilegx.c", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7afd1a8e940f99effb8a31397c4d3825a3960191/gcc%2Fconfig%2Ftilegx%2Ftilegx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7afd1a8e940f99effb8a31397c4d3825a3960191/gcc%2Fconfig%2Ftilegx%2Ftilegx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ftilegx%2Ftilegx.c?ref=7afd1a8e940f99effb8a31397c4d3825a3960191", "patch": "@@ -4420,7 +4420,9 @@ replace_mov_pcrel_step1 (rtx insn)\n static bool\n match_pcrel_step2 (rtx insn)\n {\n-  rtx src;\n+  rtx unspec;\n+  rtx addr;\n+\n   if (TARGET_32BIT)\n     {\n       if (recog_memoized (insn) != CODE_FOR_insn_addr_shl16insli_32bit)\n@@ -4432,11 +4434,12 @@ match_pcrel_step2 (rtx insn)\n \treturn false;\n     }\n \n-  src = SET_SRC (PATTERN (insn));\n+  unspec = SET_SRC (PATTERN (insn));\n+  addr = XVECEXP (unspec, 0, 1);\n \n-  return (GET_CODE (src) == CONST\n-\t  && GET_CODE (XEXP (src, 0)) == UNSPEC\n-\t  && XINT (XEXP (src, 0), 1) == UNSPEC_HW0_PCREL);\n+  return (GET_CODE (addr) == CONST\n+\t  && GET_CODE (XEXP (addr, 0)) == UNSPEC\n+\t  && XINT (XEXP (addr, 0), 1) == UNSPEC_HW0_PCREL);\n }\n \n \n@@ -4446,17 +4449,26 @@ replace_mov_pcrel_step2 (rtx insn)\n {\n   rtx pattern = PATTERN (insn);\n   rtx unspec;\n+  rtx addr;\n   rtx opnds[3];\n   rtx new_insns;\n   rtx got_rtx = tilegx_got_rtx ();\n \n   gcc_assert (GET_CODE (pattern) == SET);\n   opnds[0] = SET_DEST (pattern);\n \n-  unspec = XEXP (SET_SRC (pattern), 0);\n+  unspec = SET_SRC (pattern);\n+  gcc_assert (GET_CODE (unspec) == UNSPEC);\n+  gcc_assert (XINT (unspec, 1) == UNSPEC_INSN_ADDR_SHL16INSLI);\n+\n+  opnds[1] = XVECEXP (unspec, 0, 0);\n+\n+  addr = XVECEXP (unspec, 0, 1);\n+  gcc_assert (GET_CODE (addr) == CONST);\n+\n+  unspec = XEXP (addr, 0);\n   gcc_assert (GET_CODE (unspec) == UNSPEC);\n   gcc_assert (XINT (unspec, 1) == UNSPEC_HW0_PCREL);\n-  opnds[1] = XEXP (XEXP (SET_SRC (pattern), 0), 0);\n   opnds[2] = XVECEXP (unspec, 0, 0);\n \n   /* We only need to replace SYMBOL_REFs, not LABEL_REFs.  */"}]}