{"sha": "d9b4a5d344983386125cd8c99ced8b2b6abd1a88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDliNGE1ZDM0NDk4MzM4NjEyNWNkOGM5OWNlZDhiMmI2YWJkMWE4OA==", "commit": {"author": {"name": "Emmanuel Briot", "email": "briot@adacore.com", "date": "2009-09-17T10:41:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-09-17T10:41:33Z"}, "message": "prj-ext.adb, [...] (Is_External_Assignment): Remove duplicate code.\n\n2009-09-17  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-ext.adb, prj-ext.ads, makeutl.adb (Is_External_Assignment):\n\tRemove duplicate code.\n\t(Prj.Ext): Fix memory leak\n\t(Check): Now allow the syntax \"-Xfoo=\" to set an empty value to the\n\tvariable. This was previously allowed in the code in\n\tIs_External_Assignment, and some tests rely on it\n\nFrom-SVN: r151793", "tree": {"sha": "edb6e206516e44901f0bae1ade70385d55a92f3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/edb6e206516e44901f0bae1ade70385d55a92f3a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d9b4a5d344983386125cd8c99ced8b2b6abd1a88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9b4a5d344983386125cd8c99ced8b2b6abd1a88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9b4a5d344983386125cd8c99ced8b2b6abd1a88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9b4a5d344983386125cd8c99ced8b2b6abd1a88/comments", "author": {"login": "briot", "id": 42402, "node_id": "MDQ6VXNlcjQyNDAy", "avatar_url": "https://avatars.githubusercontent.com/u/42402?v=4", "gravatar_id": "", "url": "https://api.github.com/users/briot", "html_url": "https://github.com/briot", "followers_url": "https://api.github.com/users/briot/followers", "following_url": "https://api.github.com/users/briot/following{/other_user}", "gists_url": "https://api.github.com/users/briot/gists{/gist_id}", "starred_url": "https://api.github.com/users/briot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/briot/subscriptions", "organizations_url": "https://api.github.com/users/briot/orgs", "repos_url": "https://api.github.com/users/briot/repos", "events_url": "https://api.github.com/users/briot/events{/privacy}", "received_events_url": "https://api.github.com/users/briot/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "daa72421353681f192c42be645ba2590f65c868e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daa72421353681f192c42be645ba2590f65c868e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daa72421353681f192c42be645ba2590f65c868e"}], "stats": {"total": 59, "additions": 27, "deletions": 32}, "files": [{"sha": "fe7576955ba092901c41381f4df2e0a52feabf4a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9b4a5d344983386125cd8c99ced8b2b6abd1a88/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9b4a5d344983386125cd8c99ced8b2b6abd1a88/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=d9b4a5d344983386125cd8c99ced8b2b6abd1a88", "patch": "@@ -1,3 +1,12 @@\n+2009-09-17  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-ext.adb, prj-ext.ads, makeutl.adb (Is_External_Assignment):\n+\tRemove duplicate code.\n+\t(Prj.Ext): Fix memory leak\n+\t(Check): Now allow the syntax \"-Xfoo=\" to set an empty value to the\n+\tvariable. This was previously allowed in the code in\n+\tIs_External_Assignment, and some tests rely on it\n+\n 2009-09-17  Bob Duff  <duff@adacore.com>\n \n \t* gnat_rm.texi, s-oscons-tmplt.c: Minor typo"}, {"sha": "a570737d71159a17fb00e15c7677da871eb0f042", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 3, "deletions": 16, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9b4a5d344983386125cd8c99ced8b2b6abd1a88/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9b4a5d344983386125cd8c99ced8b2b6abd1a88/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=d9b4a5d344983386125cd8c99ced8b2b6abd1a88", "patch": "@@ -453,7 +453,6 @@ package body Makeutl is\n    is\n       Start     : Positive := 3;\n       Finish    : Natural := Argv'Last;\n-      Equal_Pos : Natural;\n \n       pragma Assert (Argv'First = 1);\n       pragma Assert (Argv (1 .. 2) = \"-X\");\n@@ -471,21 +470,9 @@ package body Makeutl is\n          end if;\n       end if;\n \n-      Equal_Pos := Start;\n-\n-      while Equal_Pos <= Finish and then Argv (Equal_Pos) /= '=' loop\n-         Equal_Pos := Equal_Pos + 1;\n-      end loop;\n-\n-      if Equal_Pos = Start or else Equal_Pos > Finish then\n-         return False;\n-      else\n-         Prj.Ext.Add\n-           (Tree          => Tree,\n-            External_Name => Argv (Start .. Equal_Pos - 1),\n-            Value         => Argv (Equal_Pos + 1 .. Finish));\n-         return True;\n-      end if;\n+      return Prj.Ext.Check\n+        (Tree        => Tree,\n+         Declaration => Argv (Start .. Finish));\n    end Is_External_Assignment;\n \n    ---------------"}, {"sha": "d5a6b80e5e7c41cee692cbae76e0c214327aa867", "filename": "gcc/ada/prj-ext.adb", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9b4a5d344983386125cd8c99ced8b2b6abd1a88/gcc%2Fada%2Fprj-ext.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9b4a5d344983386125cd8c99ced8b2b6abd1a88/gcc%2Fada%2Fprj-ext.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.adb?ref=d9b4a5d344983386125cd8c99ced8b2b6abd1a88", "patch": "@@ -32,16 +32,6 @@ with Table;\n \n package body Prj.Ext is\n \n-   Ada_Project_Path : constant String := \"ADA_PROJECT_PATH\";\n-   --  Name of alternate env. variable that contain path name(s) of directories\n-   --  where project files may reside. GPR_PROJECT_PATH has precedence over\n-   --  ADA_PROJECT_PATH.\n-\n-   Gpr_Prj_Path : constant String_Access := Getenv (Gpr_Project_Path);\n-   Ada_Prj_Path : constant String_Access := Getenv (Ada_Project_Path);\n-   --  The path name(s) of directories where project files may reside.\n-   --  May be empty.\n-\n    No_Project_Default_Dir : constant String := \"-\";\n \n    Current_Project_Path : String_Access;\n@@ -82,7 +72,6 @@ package body Prj.Ext is\n       Name_To_Name_HTable.Set (Tree.External_References, The_Key, The_Value);\n    end Add;\n \n-   -----------\n    ----------------------------------\n    -- Add_Search_Project_Directory --\n    ----------------------------------\n@@ -104,7 +93,6 @@ package body Prj.Ext is\n       for Equal_Pos in Declaration'Range loop\n          if Declaration (Equal_Pos) = '=' then\n             exit when Equal_Pos = Declaration'First;\n-            exit when Equal_Pos = Declaration'Last;\n             Add\n               (Tree          => Tree,\n                External_Name =>\n@@ -129,6 +117,17 @@ package body Prj.Ext is\n       New_Len         : Positive;\n       New_Last        : Positive;\n \n+      Ada_Project_Path : constant String := \"ADA_PROJECT_PATH\";\n+      Gpr_Project_Path : constant String := \"GPR_PROJECT_PATH\";\n+      --  Name of alternate env. variable that contain path name(s) of\n+      --  directories where project files may reside. GPR_PROJECT_PATH has\n+      --  precedence over ADA_PROJECT_PATH.\n+\n+      Gpr_Prj_Path : String_Access := Getenv (Gpr_Project_Path);\n+      Ada_Prj_Path : String_Access := Getenv (Ada_Project_Path);\n+      --  The path name(s) of directories where project files may reside.\n+      --  May be empty.\n+\n    begin\n       --  The current directory is always first\n \n@@ -152,12 +151,16 @@ package body Prj.Ext is\n          Add_Str_To_Name_Buffer (Gpr_Prj_Path.all);\n       end if;\n \n+      Free (Gpr_Prj_Path);\n+\n       if Ada_Prj_Path.all /= \"\" then\n          Name_Len := Name_Len + 1;\n          Name_Buffer (Name_Len) := Path_Separator;\n          Add_Str_To_Name_Buffer (Ada_Prj_Path.all);\n       end if;\n \n+      Free (Ada_Prj_Path);\n+\n       --  Scan the directory path to see if \"-\" is one of the directories.\n       --  Remove each occurrence of \"-\" and set Add_Default_Dir to False.\n       --  Also resolve relative paths and symbolic links."}, {"sha": "156005a521cc59ac14c8beaacc638ca2829029ee", "filename": "gcc/ada/prj-ext.ads", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d9b4a5d344983386125cd8c99ced8b2b6abd1a88/gcc%2Fada%2Fprj-ext.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d9b4a5d344983386125cd8c99ced8b2b6abd1a88/gcc%2Fada%2Fprj-ext.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-ext.ads?ref=d9b4a5d344983386125cd8c99ced8b2b6abd1a88", "patch": "@@ -34,10 +34,6 @@ package Prj.Ext is\n    -- Project Path --\n    ------------------\n \n-   Gpr_Project_Path : constant String := \"GPR_PROJECT_PATH\";\n-   --  Name of primary env. variable that contain path name(s) of directories\n-   --  where project files may reside.\n-\n    procedure Add_Search_Project_Directory (Path : String);\n    --  Add a directory to the project path. Directories added with this\n    --  procedure are added in order after the current directory and before"}]}