{"sha": "44f51d4ad58ade74ccf9f72d488bb47b40d8e284", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDRmNTFkNGFkNThhZGU3NGNjZjlmNzJkNDg4YmI0N2I0MGQ4ZTI4NA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-30T16:38:00Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-05-30T16:38:00Z"}, "message": "(expand_float): Fix error in last change.\n\nFrom-SVN: r7391", "tree": {"sha": "4d6bbe417cf4011ba10331dad6fe7fae2b1f6fdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4d6bbe417cf4011ba10331dad6fe7fae2b1f6fdc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44f51d4ad58ade74ccf9f72d488bb47b40d8e284", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44f51d4ad58ade74ccf9f72d488bb47b40d8e284", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44f51d4ad58ade74ccf9f72d488bb47b40d8e284", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44f51d4ad58ade74ccf9f72d488bb47b40d8e284/comments", "author": null, "committer": null, "parents": [{"sha": "3537b3d40682dffcf780f6236f6036645b874e30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3537b3d40682dffcf780f6236f6036645b874e30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3537b3d40682dffcf780f6236f6036645b874e30"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "418e529b690d02daea3621cc87aaf37f63620e5d", "filename": "gcc/optabs.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44f51d4ad58ade74ccf9f72d488bb47b40d8e284/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44f51d4ad58ade74ccf9f72d488bb47b40d8e284/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=44f51d4ad58ade74ccf9f72d488bb47b40d8e284", "patch": "@@ -3083,6 +3083,12 @@ expand_float (to, from, unsignedp)\n \t      rtx temp1;\n \t      rtx neglabel = gen_label_rtx ();\n \n+\t      /* Don't use TARGET if it isn't a register or is a\n+\t\t hard register.  */\n+\t      if (GET_CODE (target) != REG\n+\t\t  || REGNO (target) < FIRST_PSEUDO_REGISTER)\n+\t\ttarget = gen_reg_rtx (fmode);\n+\n \t      imode = GET_MODE (from);\n \t      do_pending_stack_adjust ();\n \n@@ -3101,11 +3107,10 @@ expand_float (to, from, unsignedp)\n \n \t      emit_label (neglabel);\n \t      temp = expand_binop (imode, and_optab, from, const1_rtx,\n-\t\t\t\t    0, 1, 0);\n+\t\t\t\t   0, 1, 0);\n \t      temp1 = expand_binop (imode, lshr_optab, from, const1_rtx,\n-\t\t\t\t   from, 1, 0);\n-\t      temp = expand_binop (imode, ior_optab, temp, temp1,\n-\t\t\t\t   temp, 1, 0);\n+\t\t\t\t    0, 1, 0);\n+\t      temp = expand_binop (imode, ior_optab, temp, temp1, temp, 1, 0);\n \t      expand_float (target, temp, 0);\n \n \t      /* Multiply by 2 to undo the shift above.  */"}]}