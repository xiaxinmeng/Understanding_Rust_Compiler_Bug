{"sha": "b5cebc9ab7f6ab47067dc04cae17bf9921a62a18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjVjZWJjOWFiN2Y2YWI0NzA2N2RjMDRjYWUxN2JmOTkyMWE2MmExOA==", "commit": {"author": {"name": "z00219097", "email": "z.zhanghaijian@huawei.com", "date": "2020-06-10T15:58:51Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-06-10T15:58:51Z"}, "message": "aarch64: Fix an ICE in register_tuple_type [PR95523]\n\nWhen registering the tuple type in register_tuple_type, the\nTYPE_ALIGN (tuple_type) will be changed by -fpack-struct=n. We need to\nmaintain natural alignment in handle_arm_sve_h.\n\n2020-06-10  Haijian Zhang  <z.zhanghaijian@huawei.com>\n\ngcc/\n\tPR target/95523\n\t* config/aarch64/aarch64-sve-builtins.h\n\t(sve_switcher::m_old_maximum_field_alignment): New member.\n\t* config/aarch64/aarch64-sve-builtins.cc\n\t(sve_switcher::sve_switcher): Save maximum_field_alignment in\n\tm_old_maximum_field_alignment and clear maximum_field_alignment.\n\t(sve_switcher::~sve_switcher): Restore maximum_field_alignment.\n\ngcc/testsuite/\n\tPR target/95523\n\t* gcc.target/aarch64/sve/pr95523.c: New test.", "tree": {"sha": "e41535801805795be27e5db08ac29cd93fb2e361", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e41535801805795be27e5db08ac29cd93fb2e361"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b5cebc9ab7f6ab47067dc04cae17bf9921a62a18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5cebc9ab7f6ab47067dc04cae17bf9921a62a18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5cebc9ab7f6ab47067dc04cae17bf9921a62a18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5cebc9ab7f6ab47067dc04cae17bf9921a62a18/comments", "author": null, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73266be246a1bf1781b8ef6ee1395e8602681350", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73266be246a1bf1781b8ef6ee1395e8602681350", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73266be246a1bf1781b8ef6ee1395e8602681350"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "c49fcebcd436dbd8183971ceffa81fb94d2cf760", "filename": "gcc/config/aarch64/aarch64-sve-builtins.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5cebc9ab7f6ab47067dc04cae17bf9921a62a18/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5cebc9ab7f6ab47067dc04cae17bf9921a62a18/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins.cc?ref=b5cebc9ab7f6ab47067dc04cae17bf9921a62a18", "patch": "@@ -878,6 +878,9 @@ sve_switcher::sve_switcher ()\n   aarch64_isa_flags = (AARCH64_FL_FP | AARCH64_FL_SIMD | AARCH64_FL_F16\n \t\t       | AARCH64_FL_SVE);\n \n+  m_old_maximum_field_alignment = maximum_field_alignment;\n+  maximum_field_alignment = 0;\n+\n   m_old_general_regs_only = TARGET_GENERAL_REGS_ONLY;\n   global_options.x_target_flags &= ~MASK_GENERAL_REGS_ONLY;\n \n@@ -895,6 +898,7 @@ sve_switcher::~sve_switcher ()\n   if (m_old_general_regs_only)\n     global_options.x_target_flags |= MASK_GENERAL_REGS_ONLY;\n   aarch64_isa_flags = m_old_isa_flags;\n+  maximum_field_alignment = m_old_maximum_field_alignment;\n }\n \n function_builder::function_builder ()"}, {"sha": "3ffe2516df9f0bc1c517a998da10f66e0a70c36f", "filename": "gcc/config/aarch64/aarch64-sve-builtins.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5cebc9ab7f6ab47067dc04cae17bf9921a62a18/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5cebc9ab7f6ab47067dc04cae17bf9921a62a18/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins.h?ref=b5cebc9ab7f6ab47067dc04cae17bf9921a62a18", "patch": "@@ -658,6 +658,7 @@ class sve_switcher\n \n private:\n   unsigned long m_old_isa_flags;\n+  unsigned int m_old_maximum_field_alignment;\n   bool m_old_general_regs_only;\n   bool m_old_have_regs_of_mode[MAX_MACHINE_MODE];\n };"}, {"sha": "547120a82ec26855d337565d9bf0485ce035b78d", "filename": "gcc/testsuite/gcc.target/aarch64/sve/pr95523.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b5cebc9ab7f6ab47067dc04cae17bf9921a62a18/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr95523.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b5cebc9ab7f6ab47067dc04cae17bf9921a62a18/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr95523.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Fpr95523.c?ref=b5cebc9ab7f6ab47067dc04cae17bf9921a62a18", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fpack-struct=2\" } */\n+\n+#include <arm_sve.h>\n+\n+void foo ()\n+{\n+  // Do nothing\n+}\n+"}]}