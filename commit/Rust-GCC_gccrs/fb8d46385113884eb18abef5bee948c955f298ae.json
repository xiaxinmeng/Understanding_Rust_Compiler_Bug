{"sha": "fb8d46385113884eb18abef5bee948c955f298ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmI4ZDQ2Mzg1MTEzODg0ZWIxOGFiZWY1YmVlOTQ4Yzk1NWYyOThhZQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2003-11-27T13:13:19Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-11-27T13:13:19Z"}, "message": "std_streambuf.h (__copy_streambufs): Remove the first, unused, basic_ios<> parameter.\n\n2003-11-27  Paolo Carlini  <pcarlini@suse.de>\n\n\t* include/std/std_streambuf.h (__copy_streambufs): Remove\n\tthe first, unused, basic_ios<> parameter.\n\t* src/streambuf-inst.cc: Likewise.\n\t* include/bits/streambuf.tcc: Likewise.\n\t* include/bits/istream.tcc (operator>>(__streambuf_type*)):\n\tTweak accordingly the call.\n\t* include/bits/ostream.tcc (operator<<(__streambuf_type*)):\n\tLikewise.\n\n\t* include/bits/streambuf.tcc (__copy_streambufs): Remove\n\tredundant try/catch.\n\nFrom-SVN: r73992", "tree": {"sha": "c4f7959860d4d931d25bdf463d4e76f43b1b39fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4f7959860d4d931d25bdf463d4e76f43b1b39fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb8d46385113884eb18abef5bee948c955f298ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb8d46385113884eb18abef5bee948c955f298ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb8d46385113884eb18abef5bee948c955f298ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb8d46385113884eb18abef5bee948c955f298ae/comments", "author": null, "committer": null, "parents": [{"sha": "81a5b587efda1d6462869fcbb78379fe99d35351", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81a5b587efda1d6462869fcbb78379fe99d35351", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81a5b587efda1d6462869fcbb78379fe99d35351"}], "stats": {"total": 77, "additions": 42, "deletions": 35}, "files": [{"sha": "8d8a4b15a4ecd8175c1c8d9ede6ba5930b528535", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8d46385113884eb18abef5bee948c955f298ae/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8d46385113884eb18abef5bee948c955f298ae/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=fb8d46385113884eb18abef5bee948c955f298ae", "patch": "@@ -1,3 +1,17 @@\n+2003-11-27  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* include/std/std_streambuf.h (__copy_streambufs): Remove\n+\tthe first, unused, basic_ios<> parameter.\n+\t* src/streambuf-inst.cc: Likewise.\n+\t* include/bits/streambuf.tcc: Likewise.\n+\t* include/bits/istream.tcc (operator>>(__streambuf_type*)):\n+\tTweak accordingly the call.\n+\t* include/bits/ostream.tcc (operator<<(__streambuf_type*)):\n+\tLikewise.\n+\n+\t* include/bits/streambuf.tcc (__copy_streambufs): Remove\n+\tredundant try/catch.\n+\n 2003-11-26  Benjamin Kosnik  <bkoz@redhat.com>\n \n \tPR libstdc++/9371"}, {"sha": "0d85cc1bda1593f683ce15910c95619980102901", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8d46385113884eb18abef5bee948c955f298ae/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8d46385113884eb18abef5bee948c955f298ae/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=fb8d46385113884eb18abef5bee948c955f298ae", "patch": "@@ -409,7 +409,7 @@ namespace std\n \t{\n \t  try\n \t    {\n-\t      if (!__copy_streambufs(*this, this->rdbuf(), __sbout))\n+\t      if (!__copy_streambufs(this->rdbuf(), __sbout))\n \t\t__err |= ios_base::failbit;\n \t    }\n \t  catch(...)"}, {"sha": "c7da8c66011987e414907243274e6d03c6a08754", "filename": "libstdc++-v3/include/bits/ostream.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8d46385113884eb18abef5bee948c955f298ae/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8d46385113884eb18abef5bee948c955f298ae/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc?ref=fb8d46385113884eb18abef5bee948c955f298ae", "patch": "@@ -304,7 +304,7 @@ namespace std\n \t{\n \t  try\n \t    {\n-\t      if (!__copy_streambufs(*this, __sbin, this->rdbuf()))\n+\t      if (!__copy_streambufs(__sbin, this->rdbuf()))\n \t\t__err |= ios_base::failbit;\n \t    }\n \t  catch(...)"}, {"sha": "494b9f0056df35d028c66532e5f89a16ebfcea43", "filename": "libstdc++-v3/include/bits/streambuf.tcc", "status": "modified", "additions": 21, "deletions": 27, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8d46385113884eb18abef5bee948c955f298ae/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8d46385113884eb18abef5bee948c955f298ae/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstreambuf.tcc?ref=fb8d46385113884eb18abef5bee948c955f298ae", "patch": "@@ -113,38 +113,32 @@ namespace std\n   // necessary.\n   template<typename _CharT, typename _Traits>\n     streamsize\n-    __copy_streambufs(basic_ios<_CharT, _Traits>& __ios,\n-\t\t      basic_streambuf<_CharT, _Traits>* __sbin,\n+    __copy_streambufs(basic_streambuf<_CharT, _Traits>* __sbin,\n \t\t      basic_streambuf<_CharT, _Traits>* __sbout) \n     {\n       streamsize __ret = 0;\n-      try \n+      typename _Traits::int_type __c = __sbin->sgetc();\n+      while (!_Traits::eq_int_type(__c, _Traits::eof()))\n \t{\n-\t  typename _Traits::int_type __c = __sbin->sgetc();\n-\t  while (!_Traits::eq_int_type(__c, _Traits::eof()))\n+\t  const size_t __n = __sbin->egptr() - __sbin->gptr();\n+\t  if (__n > 1)\n \t    {\n-\t      const size_t __n = __sbin->egptr() - __sbin->gptr();\n-\t      if (__n > 1)\n-\t\t{\n-\t\t  const size_t __wrote = __sbout->sputn(__sbin->gptr(), __n);\n-\t\t  __sbin->gbump(__wrote);\n-\t\t  __ret += __wrote;\n-\t\t  if (__wrote < __n)\n-\t\t    break;\n-\t\t  __c = __sbin->underflow();\n-\t\t}\n-\t      else \n-\t\t{\n-\t\t  __c = __sbout->sputc(_Traits::to_char_type(__c));\n-\t\t  if (_Traits::eq_int_type(__c, _Traits::eof()))\n-\t\t    break;\n-\t\t  ++__ret;\n-\t\t  __c = __sbin->snextc();\n-\t\t}\n+\t      const size_t __wrote = __sbout->sputn(__sbin->gptr(), __n);\n+\t      __sbin->gbump(__wrote);\n+\t      __ret += __wrote;\n+\t      if (__wrote < __n)\n+\t\tbreak;\n+\t      __c = __sbin->underflow();\n+\t    }\n+\t  else \n+\t    {\n+\t      __c = __sbout->sputc(_Traits::to_char_type(__c));\n+\t      if (_Traits::eq_int_type(__c, _Traits::eof()))\n+\t\tbreak;\n+\t      ++__ret;\n+\t      __c = __sbin->snextc();\n \t    }\n \t}\n-      catch(...)\n-\t{ __throw_exception_again; }\n       return __ret;\n     }\n \n@@ -155,14 +149,14 @@ namespace std\n   extern template class basic_streambuf<char>;\n   extern template\n     streamsize\n-    __copy_streambufs(basic_ios<char>&, basic_streambuf<char>*,\n+    __copy_streambufs(basic_streambuf<char>*,\n \t\t      basic_streambuf<char>*); \n \n #ifdef _GLIBCXX_USE_WCHAR_T\n   extern template class basic_streambuf<wchar_t>;\n   extern template\n     streamsize\n-    __copy_streambufs(basic_ios<wchar_t>&, basic_streambuf<wchar_t>*,\n+    __copy_streambufs(basic_streambuf<wchar_t>*,\n \t\t      basic_streambuf<wchar_t>*); \n #endif\n #endif"}, {"sha": "fe82b3bcda043330d79bed9a17c3fdb00f8281a1", "filename": "libstdc++-v3/include/std/std_streambuf.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8d46385113884eb18abef5bee948c955f298ae/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8d46385113884eb18abef5bee948c955f298ae/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstd_streambuf.h?ref=fb8d46385113884eb18abef5bee948c955f298ae", "patch": "@@ -56,8 +56,7 @@ namespace std\n   */\n   template<typename _CharT, typename _Traits>\n     streamsize\n-    __copy_streambufs(basic_ios<_CharT, _Traits>& _ios,\n-\t\t      basic_streambuf<_CharT, _Traits>* __sbin,\n+    __copy_streambufs(basic_streambuf<_CharT, _Traits>* __sbin,\n \t\t      basic_streambuf<_CharT, _Traits>* __sbout);\n   \n   /**\n@@ -153,8 +152,8 @@ namespace std\n       friend class ostreambuf_iterator<char_type, traits_type>;\n \n       friend streamsize\n-      __copy_streambufs<>(basic_ios<char_type, traits_type>& __ios,\n-\t\t\t  __streambuf_type* __sbin,__streambuf_type* __sbout);\n+      __copy_streambufs<>(__streambuf_type* __sbin,\n+\t\t\t  __streambuf_type* __sbout);\n       \n     protected:\n       //@{"}, {"sha": "5d1879a6fae8bf6d630d93b20ddd1e54c3fb6985", "filename": "libstdc++-v3/src/streambuf-inst.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb8d46385113884eb18abef5bee948c955f298ae/libstdc%2B%2B-v3%2Fsrc%2Fstreambuf-inst.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb8d46385113884eb18abef5bee948c955f298ae/libstdc%2B%2B-v3%2Fsrc%2Fstreambuf-inst.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fstreambuf-inst.cc?ref=fb8d46385113884eb18abef5bee948c955f298ae", "patch": "@@ -45,12 +45,12 @@ namespace std\n \n   template\n     streamsize\n-    __copy_streambufs(basic_ios<char>&, basic_streambuf<char>*,\n+    __copy_streambufs(basic_streambuf<char>*,\n \t\t      basic_streambuf<char>*); \n #ifdef _GLIBCXX_USE_WCHAR_T\n   template\n     streamsize\n-    __copy_streambufs(basic_ios<wchar_t>&, basic_streambuf<wchar_t>*,\n+    __copy_streambufs(basic_streambuf<wchar_t>*,\n \t\t      basic_streambuf<wchar_t>*); \n #endif\n } //std"}]}