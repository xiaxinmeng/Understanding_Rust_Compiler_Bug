{"sha": "30fa2a51fabf5147e339ed2f93ab446a99e3b2b9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzBmYTJhNTFmYWJmNTE0N2UzMzllZDJmOTNhYjQ0NmE5OWUzYjJiOQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-02-15T16:17:25Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-02-15T16:17:25Z"}, "message": "re PR c++/52026 (Constexpr Variable Appears Uninitialized in Lambda)\n\n\tPR c++/52026\n\t* semantics.c (finish_id_expression): In a template, return\n\tthe identifier for a constant variable.\n\nFrom-SVN: r196081", "tree": {"sha": "9092393d649f7e9f7290ed1ca434bc64ac75ec66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9092393d649f7e9f7290ed1ca434bc64ac75ec66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/30fa2a51fabf5147e339ed2f93ab446a99e3b2b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30fa2a51fabf5147e339ed2f93ab446a99e3b2b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30fa2a51fabf5147e339ed2f93ab446a99e3b2b9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30fa2a51fabf5147e339ed2f93ab446a99e3b2b9/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "90680f3b80506e19d3fbf53b6a158172c924602f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90680f3b80506e19d3fbf53b6a158172c924602f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90680f3b80506e19d3fbf53b6a158172c924602f"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "70dcc20158aecd9ee36e7a99ca3bb60da0126fd7", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30fa2a51fabf5147e339ed2f93ab446a99e3b2b9/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30fa2a51fabf5147e339ed2f93ab446a99e3b2b9/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=30fa2a51fabf5147e339ed2f93ab446a99e3b2b9", "patch": "@@ -1,3 +1,9 @@\n+2013-02-15  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/52026\n+\t* semantics.c (finish_id_expression): In a template, return\n+\tthe identifier for a constant variable.\n+\n 2013-02-14  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/54922"}, {"sha": "0e09d04b442b774a8009341284383a2081363f25", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30fa2a51fabf5147e339ed2f93ab446a99e3b2b9/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30fa2a51fabf5147e339ed2f93ab446a99e3b2b9/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=30fa2a51fabf5147e339ed2f93ab446a99e3b2b9", "patch": "@@ -3015,7 +3015,14 @@ finish_id_expression (tree id_expression,\n \n \t     FIXME update for final resolution of core issue 696.  */\n \t  if (decl_constant_var_p (decl))\n-\t    return integral_constant_value (decl);\n+\t    {\n+\t      if (processing_template_decl)\n+\t\t/* In a template, the constant value may not be in a usable\n+\t\t   form, so look it up again at instantiation time.  */\n+\t\treturn id_expression;\n+\t      else\n+\t\treturn integral_constant_value (decl);\n+\t    }\n \n \t  /* If we are in a lambda function, we can move out until we hit\n \t     1. the context,"}, {"sha": "d2457d6491cc7c4663c21f7877edc32e44752b05", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-const2.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/30fa2a51fabf5147e339ed2f93ab446a99e3b2b9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-const2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/30fa2a51fabf5147e339ed2f93ab446a99e3b2b9/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-const2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-const2.C?ref=30fa2a51fabf5147e339ed2f93ab446a99e3b2b9", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/52026\n+// { dg-options \"-std=c++11 -O\" }\n+// { dg-do run }\n+\n+template<bool B>\n+int func() {\n+  const int constVal1 = B ? 100 : -100;\n+  const int constVal = constVal1;\n+  return [] { return constVal; }();\n+}\n+\n+int main() {\n+  if (func<true>() != 100)\n+    __builtin_abort ();\n+}"}]}