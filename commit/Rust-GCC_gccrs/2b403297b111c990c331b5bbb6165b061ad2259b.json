{"sha": "2b403297b111c990c331b5bbb6165b061ad2259b", "node_id": "C_kwDOANBUbNoAKDJiNDAzMjk3YjExMWM5OTBjMzMxYjViYmI2MTY1YjA2MWFkMjI1OWI", "commit": {"author": {"name": "Sergei Trofimovich", "email": "siarheit@google.com", "date": "2022-08-16T11:35:07Z"}, "committer": {"name": "Sergei Trofimovich", "email": "siarheit@google.com", "date": "2022-08-16T12:15:46Z"}, "message": "driver: fix environ corruption after putenv() [PR106624]\n\nThe bug appeared afte r13-2010-g1270ccda70ca09 \"Factor out\njobserver_active_p\" slightly changed `putenv()` use from allocating\nto non-allocating:\n\n    -xputenv (concat (\"MAKEFLAGS=\", dup, NULL));\n    +xputenv (jinfo.skipped_makeflags.c_str ());\n\n`xputenv()` (and `putenv()`) don't copy strings and only store the\npointer in the `environ` global table. As a result `environ` got\ncorrupted as soon as `jinfo.skipped_makeflags` store got deallocated.\n\nThis started causing bootstrap crashes in `execv()` calls:\n\n    xgcc: fatal error: cannot execute '/build/build/./prev-gcc/collect2': execv: Bad address\n\nThe change restores memory allocation for `xputenv()` argument.\n\ngcc/\n\n\tPR driver/106624\n\t* gcc.cc (driver::detect_jobserver): Allocate storage xputenv()\n\targument using xstrdup().", "tree": {"sha": "92d3fffabf3332891535c3a5257aba0126f17405", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92d3fffabf3332891535c3a5257aba0126f17405"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2b403297b111c990c331b5bbb6165b061ad2259b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b403297b111c990c331b5bbb6165b061ad2259b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b403297b111c990c331b5bbb6165b061ad2259b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b403297b111c990c331b5bbb6165b061ad2259b/comments", "author": {"login": "trofi", "id": 226650, "node_id": "MDQ6VXNlcjIyNjY1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/226650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trofi", "html_url": "https://github.com/trofi", "followers_url": "https://api.github.com/users/trofi/followers", "following_url": "https://api.github.com/users/trofi/following{/other_user}", "gists_url": "https://api.github.com/users/trofi/gists{/gist_id}", "starred_url": "https://api.github.com/users/trofi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trofi/subscriptions", "organizations_url": "https://api.github.com/users/trofi/orgs", "repos_url": "https://api.github.com/users/trofi/repos", "events_url": "https://api.github.com/users/trofi/events{/privacy}", "received_events_url": "https://api.github.com/users/trofi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "trofi", "id": 226650, "node_id": "MDQ6VXNlcjIyNjY1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/226650?v=4", "gravatar_id": "", "url": "https://api.github.com/users/trofi", "html_url": "https://github.com/trofi", "followers_url": "https://api.github.com/users/trofi/followers", "following_url": "https://api.github.com/users/trofi/following{/other_user}", "gists_url": "https://api.github.com/users/trofi/gists{/gist_id}", "starred_url": "https://api.github.com/users/trofi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/trofi/subscriptions", "organizations_url": "https://api.github.com/users/trofi/orgs", "repos_url": "https://api.github.com/users/trofi/repos", "events_url": "https://api.github.com/users/trofi/events{/privacy}", "received_events_url": "https://api.github.com/users/trofi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e790ca4615443fa395ac5cdba1ab6c87810985c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6e790ca4615443fa395ac5cdba1ab6c87810985c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6e790ca4615443fa395ac5cdba1ab6c87810985c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "75ca0ece1a46ca2d3898571cf7ea48f47934e014", "filename": "gcc/gcc.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2b403297b111c990c331b5bbb6165b061ad2259b/gcc%2Fgcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2b403297b111c990c331b5bbb6165b061ad2259b/gcc%2Fgcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.cc?ref=2b403297b111c990c331b5bbb6165b061ad2259b", "patch": "@@ -9182,7 +9182,7 @@ driver::detect_jobserver () const\n {\n   jobserver_info jinfo;\n   if (!jinfo.is_active && !jinfo.skipped_makeflags.empty ())\n-    xputenv (jinfo.skipped_makeflags.c_str ());\n+    xputenv (xstrdup (jinfo.skipped_makeflags.c_str ()));\n }\n \n /* Determine what the exit code of the driver should be.  */"}]}