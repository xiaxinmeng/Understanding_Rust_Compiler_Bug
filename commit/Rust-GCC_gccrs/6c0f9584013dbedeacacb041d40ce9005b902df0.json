{"sha": "6c0f9584013dbedeacacb041d40ce9005b902df0", "node_id": "C_kwDOANBUbNoAKDZjMGY5NTg0MDEzZGJlZGVhY2FjYjA0MWQ0MGNlOTAwNWI5MDJkZjA", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-12-12T11:40:07Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-12-12T14:00:09Z"}, "message": "libstdc++: Fix constraint on std::basic_format_string [PR108024]\n\nAlso remove some redundant std::move calls for return statements.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/108024\n\t* include/std/format (basic_format_string): Fix constraint.\n\t* testsuite/std/format/format_string.cc: New test.", "tree": {"sha": "1003cfda13d587fa51ecd0938369f8c806f53746", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1003cfda13d587fa51ecd0938369f8c806f53746"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c0f9584013dbedeacacb041d40ce9005b902df0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c0f9584013dbedeacacb041d40ce9005b902df0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c0f9584013dbedeacacb041d40ce9005b902df0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c0f9584013dbedeacacb041d40ce9005b902df0/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb363fd9f19eb791e1ee1eb0d5c61f5fdf21af32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb363fd9f19eb791e1ee1eb0d5c61f5fdf21af32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb363fd9f19eb791e1ee1eb0d5c61f5fdf21af32"}], "stats": {"total": 26, "additions": 22, "deletions": 4}, "files": [{"sha": "9c928371415f01822287258caec36953e4e1401f", "filename": "libstdc++-v3/include/std/format", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0f9584013dbedeacacb041d40ce9005b902df0/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0f9584013dbedeacacb041d40ce9005b902df0/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat?ref=6c0f9584013dbedeacacb041d40ce9005b902df0", "patch": "@@ -110,7 +110,8 @@ namespace __format\n   template<typename _CharT, typename... _Args>\n     struct basic_format_string\n     {\n-      template<convertible_to<basic_string_view<_CharT>> _Tp>\n+      template<typename _Tp>\n+\trequires convertible_to<const _Tp&, basic_string_view<_CharT>>\n \tconsteval\n \tbasic_format_string(const _Tp& __s);\n \n@@ -609,7 +610,7 @@ namespace __format\n       else\n \tfor (_CharT __c : __str)\n \t  *__out++ = __c;\n-      return std::move(__out);\n+      return __out;\n     }\n \n   // Write STR to OUT with NFILL copies of FILL_CHAR specified by ALIGN.\n@@ -664,7 +665,7 @@ namespace __format\n       __out = __format::__write(std::move(__out), __str);\n       __pad(__r, __out);\n \n-      return std::move(__out);\n+      return __out;\n     }\n \n   // A lightweight optional<locale>.\n@@ -3626,7 +3627,8 @@ namespace __format\n /// @endcond\n \n   template<typename _CharT, typename... _Args>\n-    template<convertible_to<basic_string_view<_CharT>> _Tp>\n+    template<typename _Tp>\n+      requires convertible_to<const _Tp&, basic_string_view<_CharT>>\n       consteval\n       basic_format_string<_CharT, _Args...>::\n       basic_format_string(const _Tp& __s)"}, {"sha": "1dd6ca8f12581b15715524e4f0b95d3432b2d97e", "filename": "libstdc++-v3/testsuite/std/format/format_string.cc", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c0f9584013dbedeacacb041d40ce9005b902df0/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Fformat%2Fformat_string.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c0f9584013dbedeacacb041d40ce9005b902df0/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Fformat%2Fformat_string.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fstd%2Fformat%2Fformat_string.cc?ref=6c0f9584013dbedeacacb041d40ce9005b902df0", "patch": "@@ -0,0 +1,16 @@\n+// { dg-options \"-std=gnu++20\" }\n+// { dg-do compile { target c++20 } }\n+\n+#include <format>\n+\n+struct Str\n+{\n+  consteval operator std::string_view() const { return \"\"; }\n+  operator std::string_view() = delete;\n+};\n+\n+// PR libstdc++/108024\n+static_assert( std::is_constructible_v<std::format_string<>, const Str&> );\n+static_assert( std::is_convertible_v<const Str&, std::format_string<>> );\n+\n+constinit std::format_string<> s = Str();"}]}