{"sha": "a4100e558204bb2c334606f33cd180b773fe1bf5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQxMDBlNTU4MjA0YmIyYzMzNDYwNmYzM2NkMTgwYjc3M2ZlMWJmNQ==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2009-04-09T10:27:10Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-04-09T10:27:10Z"}, "message": "sem_aggr.adb, [...]: Reorganize einfo/sem_aux, moving routines from einfo to sem_aux\n\n2009-04-09  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_aggr.adb, exp_ch5.adb, sem_ch3.adb, exp_atag.adb, layout.adb,\n\tsem_dist.adb, exp_ch7.adb, sem_ch5.adb, sem_type.adb, exp_imgv.adb,\n\texp_util.adb, sem_aux.adb, sem_aux.ads, exp_attr.adb, exp_ch9.adb,\n\tsem_ch7.adb, inline.adb, fe.h, sem_ch9.adb, exp_code.adb, einfo.adb,\n\teinfo.ads, exp_pakd.adb, checks.adb, sem_ch12.adb, exp_smem.adb,\n\ttbuild.adb, freeze.adb, sem_util.adb, sem_res.adb, sem_attr.adb,\n\texp_dbug.adb, sem_case.adb, exp_tss.adb, exp_ch4.adb, exp_ch6.adb,\n\tsem_smem.adb, sem_ch4.adb, sem_mech.adb, sem_ch6.adb, exp_disp.adb,\n\tsem_ch8.adb, exp_aggr.adb, sem_eval.adb, sem_cat.adb, exp_dist.adb,\n\tsem_ch13.adb, exp_strm.adb, lib-xref.adb, sem_disp.adb, exp_ch3.adb:\n\tReorganize einfo/sem_aux, moving routines from einfo to sem_aux\n\nFrom-SVN: r145820", "tree": {"sha": "61e8efa1dd19ecaf93ec8ce28f75848c145f7599", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61e8efa1dd19ecaf93ec8ce28f75848c145f7599"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4100e558204bb2c334606f33cd180b773fe1bf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4100e558204bb2c334606f33cd180b773fe1bf5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4100e558204bb2c334606f33cd180b773fe1bf5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4100e558204bb2c334606f33cd180b773fe1bf5/comments", "author": null, "committer": null, "parents": [{"sha": "f17889b313b679f7c6461634369eb74bb4f02179", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f17889b313b679f7c6461634369eb74bb4f02179", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f17889b313b679f7c6461634369eb74bb4f02179"}], "stats": {"total": 1807, "additions": 926, "deletions": 881}, "files": [{"sha": "42e1f1c97935dffaa4d5f50380f06e8d7862355b", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -1,3 +1,17 @@\n+2009-04-09  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_aggr.adb, exp_ch5.adb, sem_ch3.adb, exp_atag.adb, layout.adb,\n+\tsem_dist.adb, exp_ch7.adb, sem_ch5.adb, sem_type.adb, exp_imgv.adb,\n+\texp_util.adb, sem_aux.adb, sem_aux.ads, exp_attr.adb, exp_ch9.adb,\n+\tsem_ch7.adb, inline.adb, fe.h, sem_ch9.adb, exp_code.adb, einfo.adb,\n+\teinfo.ads, exp_pakd.adb, checks.adb, sem_ch12.adb, exp_smem.adb,\n+\ttbuild.adb, freeze.adb, sem_util.adb, sem_res.adb, sem_attr.adb,\n+\texp_dbug.adb, sem_case.adb, exp_tss.adb, exp_ch4.adb, exp_ch6.adb,\n+\tsem_smem.adb, sem_ch4.adb, sem_mech.adb, sem_ch6.adb, exp_disp.adb,\n+\tsem_ch8.adb, exp_aggr.adb, sem_eval.adb, sem_cat.adb, exp_dist.adb,\n+\tsem_ch13.adb, exp_strm.adb, lib-xref.adb, sem_disp.adb, exp_ch3.adb:\n+\tReorganize einfo/sem_aux, moving routines from einfo to sem_aux\n+\n 2009-04-09  Robert Dewar  <dewar@adacore.com>\n \n \t* exp_util.adb (Silly_Boolean_Array_Xor_Test): Simplify existing code."}, {"sha": "da6ca2e68c877958b56134ed77e9340192119771", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -43,6 +43,7 @@ with Restrict; use Restrict;\n with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Eval; use Sem_Eval;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch8;  use Sem_Ch8;"}, {"sha": "d4dad33e660863a080cb47fc28f28c926786702e", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 0, "deletions": 702, "changes": 702, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -5486,40 +5486,6 @@ package body Einfo is\n       return Rep_Clause (Id, Name_Alignment);\n    end Alignment_Clause;\n \n-   ----------------------\n-   -- Ancestor_Subtype --\n-   ----------------------\n-\n-   function Ancestor_Subtype (Id : E) return E is\n-   begin\n-      --  If this is first subtype, or is a base type, then there is no\n-      --  ancestor subtype, so we return Empty to indicate this fact.\n-\n-      if Is_First_Subtype (Id) or else Id = Base_Type (Id) then\n-         return Empty;\n-      end if;\n-\n-      declare\n-         D : constant Node_Id := Declaration_Node (Id);\n-\n-      begin\n-         --  If we have a subtype declaration, get the ancestor subtype\n-\n-         if Nkind (D) = N_Subtype_Declaration then\n-            if Nkind (Subtype_Indication (D)) = N_Subtype_Indication then\n-               return Entity (Subtype_Mark (Subtype_Indication (D)));\n-            else\n-               return Entity (Subtype_Indication (D));\n-            end if;\n-\n-         --  If not, then no subtype indication is available\n-\n-         else\n-            return Empty;\n-         end if;\n-      end;\n-   end Ancestor_Subtype;\n-\n    -------------------\n    -- Append_Entity --\n    -------------------\n@@ -5537,31 +5503,6 @@ package body Einfo is\n       Set_Last_Entity (Id => V, V => Id);\n    end Append_Entity;\n \n-   --------------------\n-   -- Available_View --\n-   --------------------\n-\n-   function Available_View (Id : E) return E is\n-   begin\n-      if Is_Incomplete_Type (Id)\n-        and then Present (Non_Limited_View (Id))\n-      then\n-         --  The non-limited view may itself be an incomplete type, in\n-         --  which case get its full view.\n-\n-         return Get_Full_View (Non_Limited_View (Id));\n-\n-      elsif Is_Class_Wide_Type (Id)\n-        and then Is_Incomplete_Type (Etype (Id))\n-        and then Present (Non_Limited_View (Etype (Id)))\n-      then\n-         return Class_Wide_Type (Non_Limited_View (Etype (Id)));\n-\n-      else\n-         return Id;\n-      end if;\n-   end Available_View;\n-\n    ---------------\n    -- Base_Type --\n    ---------------\n@@ -5632,61 +5573,6 @@ package body Einfo is\n       end if;\n    end Component_Alignment;\n \n-   --------------------\n-   -- Constant_Value --\n-   --------------------\n-\n-   function Constant_Value (Id : E) return N is\n-      D      : constant Node_Id := Declaration_Node (Id);\n-      Full_D : Node_Id;\n-\n-   begin\n-      --  If we have no declaration node, then return no constant value.\n-      --  Not clear how this can happen, but it does sometimes ???\n-      --  To investigate, remove this check and compile discrim_po.adb.\n-\n-      if No (D) then\n-         return Empty;\n-\n-      --  Normal case where a declaration node is present\n-\n-      elsif Nkind (D) = N_Object_Renaming_Declaration then\n-         return Renamed_Object (Id);\n-\n-      --  If this is a component declaration whose entity is constant, it\n-      --  is a prival within a protected function. It does not have\n-      --  a constant value.\n-\n-      elsif Nkind (D) = N_Component_Declaration then\n-         return Empty;\n-\n-      --  If there is an expression, return it\n-\n-      elsif Present (Expression (D)) then\n-         return (Expression (D));\n-\n-      --  For a constant, see if we have a full view\n-\n-      elsif Ekind (Id) = E_Constant\n-        and then Present (Full_View (Id))\n-      then\n-         Full_D := Parent (Full_View (Id));\n-\n-         --  The full view may have been rewritten as an object renaming\n-\n-         if Nkind (Full_D) = N_Object_Renaming_Declaration then\n-            return Name (Full_D);\n-         else\n-            return Expression (Full_D);\n-         end if;\n-\n-      --  Otherwise we have no expression to return\n-\n-      else\n-         return Empty;\n-      end if;\n-   end Constant_Value;\n-\n    ----------------------\n    -- Declaration_Node --\n    ----------------------\n@@ -5744,49 +5630,6 @@ package body Einfo is\n       end if;\n    end Designated_Type;\n \n-   -----------------------------\n-   -- Enclosing_Dynamic_Scope --\n-   -----------------------------\n-\n-   function Enclosing_Dynamic_Scope (Id : E) return E is\n-      S  : Entity_Id;\n-\n-   begin\n-      --  The following test is an error defense against some syntax\n-      --  errors that can leave scopes very messed up.\n-\n-      if Id = Standard_Standard then\n-         return Id;\n-      end if;\n-\n-      --  Normal case, search enclosing scopes\n-\n-      --  Note: the test for Present (S) should not be required, it is a\n-      --  defence against an ill-formed tree.\n-\n-      S := Scope (Id);\n-      loop\n-         --  If we somehow got an empty value for Scope, the tree must be\n-         --  malformed. Rather than blow up we return Standard in this case.\n-\n-         if No (S) then\n-            return Standard_Standard;\n-\n-         --  Quit if we get to standard or a dynamic scope\n-\n-         elsif S = Standard_Standard\n-           or else Is_Dynamic_Scope (S)\n-         then\n-            return S;\n-\n-         --  Otherwise keep climbing\n-\n-         else\n-            S := Scope (S);\n-         end if;\n-      end loop;\n-   end Enclosing_Dynamic_Scope;\n-\n    ----------------------\n    -- Entry_Index_Type --\n    ----------------------\n@@ -5839,46 +5682,6 @@ package body Einfo is\n       return Comp_Id;\n    end First_Component_Or_Discriminant;\n \n-   ------------------------\n-   -- First_Discriminant --\n-   ------------------------\n-\n-   function First_Discriminant (Id : E) return E is\n-      Ent : Entity_Id;\n-\n-   begin\n-      pragma Assert\n-        (Has_Discriminants (Id)\n-          or else Has_Unknown_Discriminants (Id));\n-\n-      Ent := First_Entity (Id);\n-\n-      --  The discriminants are not necessarily contiguous, because access\n-      --  discriminants will generate itypes. They are not the first entities\n-      --  either, because tag and controller record must be ahead of them.\n-\n-      if Chars (Ent) = Name_uTag then\n-         Ent := Next_Entity (Ent);\n-      end if;\n-\n-      if Chars (Ent) = Name_uController then\n-         Ent := Next_Entity (Ent);\n-      end if;\n-\n-      --  Skip all hidden stored discriminants if any\n-\n-      while Present (Ent) loop\n-         exit when Ekind (Ent) = E_Discriminant\n-           and then not Is_Completely_Hidden (Ent);\n-\n-         Ent := Next_Entity (Ent);\n-      end loop;\n-\n-      pragma Assert (Ekind (Ent) = E_Discriminant);\n-\n-      return Ent;\n-   end First_Discriminant;\n-\n    ------------------\n    -- First_Formal --\n    ------------------\n@@ -5935,130 +5738,6 @@ package body Einfo is\n       end if;\n    end First_Formal_With_Extras;\n \n-   -------------------------------\n-   -- First_Stored_Discriminant --\n-   -------------------------------\n-\n-   function First_Stored_Discriminant (Id : E) return E is\n-      Ent : Entity_Id;\n-\n-      function Has_Completely_Hidden_Discriminant (Id : E) return Boolean;\n-      --  Scans the Discriminants to see whether any are Completely_Hidden\n-      --  (the mechanism for describing non-specified stored discriminants)\n-\n-      ----------------------------------------\n-      -- Has_Completely_Hidden_Discriminant --\n-      ----------------------------------------\n-\n-      function Has_Completely_Hidden_Discriminant (Id : E) return Boolean is\n-         Ent : Entity_Id := Id;\n-\n-      begin\n-         pragma Assert (Ekind (Id) = E_Discriminant);\n-\n-         while Present (Ent) and then Ekind (Ent) = E_Discriminant loop\n-            if Is_Completely_Hidden (Ent) then\n-               return True;\n-            end if;\n-\n-            Ent := Next_Entity (Ent);\n-         end loop;\n-\n-         return False;\n-      end Has_Completely_Hidden_Discriminant;\n-\n-   --  Start of processing for First_Stored_Discriminant\n-\n-   begin\n-      pragma Assert\n-        (Has_Discriminants (Id)\n-          or else Has_Unknown_Discriminants (Id));\n-\n-      Ent := First_Entity (Id);\n-\n-      if Chars (Ent) = Name_uTag then\n-         Ent := Next_Entity (Ent);\n-      end if;\n-\n-      if Chars (Ent) = Name_uController then\n-         Ent := Next_Entity (Ent);\n-      end if;\n-\n-      if Has_Completely_Hidden_Discriminant (Ent) then\n-\n-         while Present (Ent) loop\n-            exit when Is_Completely_Hidden (Ent);\n-            Ent := Next_Entity (Ent);\n-         end loop;\n-\n-      end if;\n-\n-      pragma Assert (Ekind (Ent) = E_Discriminant);\n-\n-      return Ent;\n-   end First_Stored_Discriminant;\n-\n-   -------------------\n-   -- First_Subtype --\n-   -------------------\n-\n-   function First_Subtype (Id : E) return E is\n-      B   : constant Entity_Id := Base_Type (Id);\n-      F   : constant Node_Id   := Freeze_Node (B);\n-      Ent : Entity_Id;\n-\n-   begin\n-      --  If the base type has no freeze node, it is a type in standard,\n-      --  and always acts as its own first subtype unless it is one of\n-      --  the predefined integer types. If the type is formal, it is also\n-      --  a first subtype, and its base type has no freeze node. On the other\n-      --  hand, a subtype of a generic formal is not its own first_subtype.\n-      --  Its base type, if anonymous, is attached to the formal type decl.\n-      --  from which the first subtype is obtained.\n-\n-      if No (F) then\n-\n-         if B = Base_Type (Standard_Integer) then\n-            return Standard_Integer;\n-\n-         elsif B = Base_Type (Standard_Long_Integer) then\n-            return Standard_Long_Integer;\n-\n-         elsif B = Base_Type (Standard_Short_Short_Integer) then\n-            return Standard_Short_Short_Integer;\n-\n-         elsif B = Base_Type (Standard_Short_Integer) then\n-            return Standard_Short_Integer;\n-\n-         elsif B = Base_Type (Standard_Long_Long_Integer) then\n-            return Standard_Long_Long_Integer;\n-\n-         elsif Is_Generic_Type (Id) then\n-            if Present (Parent (B)) then\n-               return Defining_Identifier (Parent (B));\n-            else\n-               return Defining_Identifier (Associated_Node_For_Itype (B));\n-            end if;\n-\n-         else\n-            return B;\n-         end if;\n-\n-      --  Otherwise we check the freeze node, if it has a First_Subtype_Link\n-      --  then we use that link, otherwise (happens with some Itypes), we use\n-      --  the base type itself.\n-\n-      else\n-         Ent := First_Subtype_Link (F);\n-\n-         if Present (Ent) then\n-            return Ent;\n-         else\n-            return B;\n-         end if;\n-      end if;\n-   end First_Subtype;\n-\n    -------------------------------------\n    -- Get_Attribute_Definition_Clause --\n    -------------------------------------\n@@ -6329,104 +6008,6 @@ package body Einfo is\n       return Root_Type (Id) = Standard_Boolean;\n    end Is_Boolean_Type;\n \n-   ---------------------\n-   -- Is_By_Copy_Type --\n-   ---------------------\n-\n-   function Is_By_Copy_Type (Id : E) return B is\n-   begin\n-      --  If Id is a private type whose full declaration has not been seen,\n-      --  we assume for now that it is not a By_Copy type. Clearly this\n-      --  attribute should not be used before the type is frozen, but it is\n-      --  needed to build the associated record of a protected type. Another\n-      --  place where some lookahead for a full view is needed ???\n-\n-      return\n-        Is_Elementary_Type (Id)\n-          or else (Is_Private_Type (Id)\n-                     and then Present (Underlying_Type (Id))\n-                     and then Is_Elementary_Type (Underlying_Type (Id)));\n-   end Is_By_Copy_Type;\n-\n-   --------------------------\n-   -- Is_By_Reference_Type --\n-   --------------------------\n-\n-   --  This function knows too much semantics, it should be in sem_util ???\n-\n-   function Is_By_Reference_Type (Id : E) return B is\n-      Btype : constant Entity_Id := Base_Type (Id);\n-\n-   begin\n-      if Error_Posted (Id)\n-        or else Error_Posted (Btype)\n-      then\n-         return False;\n-\n-      elsif Is_Private_Type (Btype) then\n-         declare\n-            Utyp : constant Entity_Id := Underlying_Type (Btype);\n-         begin\n-            if No (Utyp) then\n-               return False;\n-            else\n-               return Is_By_Reference_Type (Utyp);\n-            end if;\n-         end;\n-\n-      elsif Is_Incomplete_Type (Btype) then\n-         declare\n-            Ftyp : constant Entity_Id := Full_View (Btype);\n-         begin\n-            if No (Ftyp) then\n-               return False;\n-            else\n-               return Is_By_Reference_Type (Ftyp);\n-            end if;\n-         end;\n-\n-      elsif Is_Concurrent_Type (Btype) then\n-         return True;\n-\n-      elsif Is_Record_Type (Btype) then\n-         if Is_Limited_Record (Btype)\n-           or else Is_Tagged_Type (Btype)\n-           or else Is_Volatile (Btype)\n-         then\n-            return True;\n-\n-         else\n-            declare\n-               C : Entity_Id;\n-\n-            begin\n-               C := First_Component (Btype);\n-               while Present (C) loop\n-                  if Is_By_Reference_Type (Etype (C))\n-                    or else Is_Volatile (Etype (C))\n-                  then\n-                     return True;\n-                  end if;\n-\n-                  C := Next_Component (C);\n-               end loop;\n-            end;\n-\n-            return False;\n-         end if;\n-\n-      elsif Is_Array_Type (Btype) then\n-         return\n-           Is_Volatile (Btype)\n-             or else Is_By_Reference_Type (Component_Type (Btype))\n-             or else Is_Volatile (Component_Type (Btype))\n-             or else Has_Volatile_Components (Btype);\n-\n-      else\n-         return False;\n-      end if;\n-   end Is_By_Reference_Type;\n-\n    ------------------------\n    -- Is_Constant_Object --\n    ------------------------\n@@ -6438,35 +6019,6 @@ package body Einfo is\n         K = E_Constant or else K = E_In_Parameter or else K = E_Loop_Parameter;\n    end Is_Constant_Object;\n \n-   ---------------------\n-   -- Is_Derived_Type --\n-   ---------------------\n-\n-   function Is_Derived_Type (Id : E) return B is\n-      Par : Node_Id;\n-\n-   begin\n-      if Is_Type (Id)\n-        and then Base_Type (Id) /= Root_Type (Id)\n-        and then not Is_Class_Wide_Type (Id)\n-      then\n-         if not Is_Numeric_Type (Root_Type (Id)) then\n-            return True;\n-\n-         else\n-            Par := Parent (First_Subtype (Id));\n-\n-            return Present (Par)\n-              and then Nkind (Par) = N_Full_Type_Declaration\n-              and then Nkind (Type_Definition (Par)) =\n-                         N_Derived_Type_Definition;\n-         end if;\n-\n-      else\n-         return False;\n-      end if;\n-   end Is_Derived_Type;\n-\n    --------------------\n    -- Is_Discriminal --\n    --------------------\n@@ -6526,175 +6078,6 @@ package body Einfo is\n                   and then Is_Entity_Attribute_Name (Attribute_Name (N)));\n    end Is_Entity_Name;\n \n-   ---------------------------\n-   -- Is_Indefinite_Subtype --\n-   ---------------------------\n-\n-   function Is_Indefinite_Subtype (Id : Entity_Id) return B is\n-      K : constant Entity_Kind := Ekind (Id);\n-\n-   begin\n-      if Is_Constrained (Id) then\n-         return False;\n-\n-      elsif K in Array_Kind\n-        or else K in Class_Wide_Kind\n-        or else Has_Unknown_Discriminants (Id)\n-      then\n-         return True;\n-\n-      --  Known discriminants: indefinite if there are no default values\n-\n-      elsif K in Record_Kind\n-        or else Is_Incomplete_Or_Private_Type (Id)\n-        or else Is_Concurrent_Type (Id)\n-      then\n-         return (Has_Discriminants (Id)\n-           and then No (Discriminant_Default_Value (First_Discriminant (Id))));\n-\n-      else\n-         return False;\n-      end if;\n-   end Is_Indefinite_Subtype;\n-\n-   --------------------------------\n-   -- Is_Inherently_Limited_Type --\n-   --------------------------------\n-\n-   function Is_Inherently_Limited_Type (Id : E) return B is\n-      Btype : constant Entity_Id := Base_Type (Id);\n-\n-   begin\n-      if Is_Private_Type (Btype) then\n-         declare\n-            Utyp : constant Entity_Id := Underlying_Type (Btype);\n-         begin\n-            if No (Utyp) then\n-               return False;\n-            else\n-               return Is_Inherently_Limited_Type (Utyp);\n-            end if;\n-         end;\n-\n-      elsif Is_Concurrent_Type (Btype) then\n-         return True;\n-\n-      elsif Is_Record_Type (Btype) then\n-         if Is_Limited_Record (Btype) then\n-            return not Is_Interface (Btype)\n-              or else Is_Protected_Interface (Btype)\n-              or else Is_Synchronized_Interface (Btype)\n-              or else Is_Task_Interface (Btype);\n-\n-         elsif Is_Class_Wide_Type (Btype) then\n-            return Is_Inherently_Limited_Type (Root_Type (Btype));\n-\n-         else\n-            declare\n-               C : Entity_Id;\n-\n-            begin\n-               C := First_Component (Btype);\n-               while Present (C) loop\n-                  if Is_Inherently_Limited_Type (Etype (C)) then\n-                     return True;\n-                  end if;\n-\n-                  C := Next_Component (C);\n-               end loop;\n-            end;\n-\n-            return False;\n-         end if;\n-\n-      elsif Is_Array_Type (Btype) then\n-         return Is_Inherently_Limited_Type (Component_Type (Btype));\n-\n-      else\n-         return False;\n-      end if;\n-   end Is_Inherently_Limited_Type;\n-\n-   ---------------------\n-   -- Is_Limited_Type --\n-   ---------------------\n-\n-   function Is_Limited_Type (Id : E) return B is\n-      Btype : constant E := Base_Type (Id);\n-      Rtype : constant E := Root_Type (Btype);\n-\n-   begin\n-      if not Is_Type (Id) then\n-         return False;\n-\n-      elsif Ekind (Btype) = E_Limited_Private_Type\n-        or else Is_Limited_Composite (Btype)\n-      then\n-         return True;\n-\n-      elsif Is_Concurrent_Type (Btype) then\n-         return True;\n-\n-         --  The Is_Limited_Record flag normally indicates that the type is\n-         --  limited. The exception is that a type does not inherit limitedness\n-         --  from its interface ancestor. So the type may be derived from a\n-         --  limited interface, but is not limited.\n-\n-      elsif Is_Limited_Record (Id)\n-        and then not Is_Interface (Id)\n-      then\n-         return True;\n-\n-      --  Otherwise we will look around to see if there is some other reason\n-      --  for it to be limited, except that if an error was posted on the\n-      --  entity, then just assume it is non-limited, because it can cause\n-      --  trouble to recurse into a murky erroneous entity!\n-\n-      elsif Error_Posted (Id) then\n-         return False;\n-\n-      elsif Is_Record_Type (Btype) then\n-\n-         if Is_Limited_Interface (Id) then\n-            return True;\n-\n-         --  AI-419: limitedness is not inherited from a limited interface\n-\n-         elsif Is_Limited_Record (Rtype) then\n-            return not Is_Interface (Rtype)\n-              or else Is_Protected_Interface (Rtype)\n-              or else Is_Synchronized_Interface (Rtype)\n-              or else Is_Task_Interface (Rtype);\n-\n-         elsif Is_Class_Wide_Type (Btype) then\n-            return Is_Limited_Type (Rtype);\n-\n-         else\n-            declare\n-               C : E;\n-\n-            begin\n-               C := First_Component (Btype);\n-               while Present (C) loop\n-                  if Is_Limited_Type (Etype (C)) then\n-                     return True;\n-                  end if;\n-\n-                  C := Next_Component (C);\n-               end loop;\n-            end;\n-\n-            return False;\n-         end if;\n-\n-      elsif Is_Array_Type (Btype) then\n-         return Is_Limited_Type (Component_Type (Btype));\n-\n-      else\n-         return False;\n-      end if;\n-   end Is_Limited_Type;\n-\n    -----------------------------------\n    -- Is_Package_Or_Generic_Package --\n    -----------------------------------\n@@ -6967,25 +6350,6 @@ package body Einfo is\n       end if;\n    end Number_Dimensions;\n \n-   --------------------------\n-   -- Number_Discriminants --\n-   --------------------------\n-\n-   function Number_Discriminants (Id : E) return Pos is\n-      N     : Int;\n-      Discr : Entity_Id;\n-\n-   begin\n-      N := 0;\n-      Discr := First_Discriminant (Id);\n-      while Present (Discr) loop\n-         N := N + 1;\n-         Discr := Next_Discriminant (Discr);\n-      end loop;\n-\n-      return N;\n-   end Number_Discriminants;\n-\n    --------------------\n    -- Number_Entries --\n    --------------------\n@@ -7264,72 +6628,6 @@ package body Einfo is\n       return Kind;\n    end Subtype_Kind;\n \n-   -------------------------\n-   -- First_Tag_Component --\n-   -------------------------\n-\n-   function First_Tag_Component (Id : E) return E is\n-      Comp : Entity_Id;\n-      Typ  : Entity_Id := Id;\n-\n-   begin\n-      pragma Assert (Is_Tagged_Type (Typ));\n-\n-      if Is_Class_Wide_Type (Typ) then\n-         Typ := Root_Type (Typ);\n-      end if;\n-\n-      if Is_Private_Type (Typ) then\n-         Typ := Underlying_Type (Typ);\n-\n-         --  If the underlying type is missing then the source program has\n-         --  errors and there is nothing else to do (the full-type declaration\n-         --  associated with the private type declaration is missing).\n-\n-         if No (Typ) then\n-            return Empty;\n-         end if;\n-      end if;\n-\n-      Comp := First_Entity (Typ);\n-      while Present (Comp) loop\n-         if Is_Tag (Comp) then\n-            return Comp;\n-         end if;\n-\n-         Comp := Next_Entity (Comp);\n-      end loop;\n-\n-      --  No tag component found\n-\n-      return Empty;\n-   end First_Tag_Component;\n-\n-   ------------------------\n-   -- Next_Tag_Component --\n-   ------------------------\n-\n-   function Next_Tag_Component (Id : E) return E is\n-      Comp : Entity_Id;\n-\n-   begin\n-      pragma Assert (Is_Tag (Id));\n-\n-      Comp := Next_Entity (Id);\n-      while Present (Comp) loop\n-         if Is_Tag (Comp) then\n-            pragma Assert (Chars (Comp) /= Name_uTag);\n-            return Comp;\n-         end if;\n-\n-         Comp := Next_Entity (Comp);\n-      end loop;\n-\n-      --  No tag component found\n-\n-      return Empty;\n-   end Next_Tag_Component;\n-\n    ---------------------\n    -- Type_High_Bound --\n    ---------------------"}, {"sha": "4de103e6e4cb054da0c9eb52c3c0e53b381c0987", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 10, "deletions": 158, "changes": 168, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -382,18 +382,6 @@ package Einfo is\n --       definition clause with an (obsolescent) mod clause is converted\n --       into an attribute definition clause for this purpose.\n \n---    Ancestor_Subtype (synthesized)\n---       Applies to all type and subtype entities. If the argument is a\n---       subtype then it returns the subtype or type from which the subtype\n---       was obtained, otherwise it returns Empty.\n-\n---    Available_View (synthesized)\n---       Applies to types that have the With_Type flag set. Returns the\n---       non-limited view of the type, if available, otherwise the type\n---       itself. For class-wide types, there is no direct link in the tree,\n---       so we have to retrieve the class-wide type of the non-limited view\n---       of the Etype.\n-\n --    Associated_Formal_Package (Node12)\n --       Present in packages that are the actuals of formal_packages. Points\n --       to the entity in the declaration for the formal package.\n@@ -585,14 +573,6 @@ package Einfo is\n --    Component_Type (Node20) [implementation base type only]\n --       Present in array types and string types. References component type.\n \n---    Constant_Value (synthesized)\n---       Applies to variables, constants, named integers, and named reals.\n---       Obtains the initialization expression for the entity. Will return\n---       Empty for a deferred constant whose full view is not available\n---       or in some other cases of internal entities, which cannot be treated\n---       as constants from the point of view of constant folding. Empty is\n---       also returned for variables with no initialization expression.\n-\n --    Corresponding_Concurrent_Type (Node18)\n --       Present in record types that are constructed by the expander to\n --       represent task and protected types (Is_Concurrent_Record_Type flag\n@@ -814,7 +794,7 @@ package Einfo is\n --    Discriminant_Number (Uint15)\n --       Present in discriminants. Gives the ranking of a discriminant in\n --       the list of discriminants of the type, i.e. a sequential integer\n---       index starting at 1 and ranging up to Number_Discriminants.\n+--       index starting at 1 and ranging up to number of discriminants.\n \n --    Dispatch_Table_Wrappers (Elist26) [implementation base type only]\n --       Present in library level record type entities if we are generating\n@@ -886,10 +866,6 @@ package Einfo is\n --       code, then if there is no other elaboration code, obviously there\n --       is no need to set the flag.\n \n---    Enclosing_Dynamic_Scope (synthesized)\n---       Applies to all entities. Returns the closest dynamic scope in which\n---       the entity is declared or Standard_Standard for library-level entities\n-\n --    Enclosing_Scope (Node18)\n --       Present in labels. Denotes the innermost enclosing construct that\n --       contains the label. Identical to the scope of the label, except for\n@@ -1130,13 +1106,6 @@ package Einfo is\n --      Similar to First_Component, but discriminants are not skipped, so will\n --      find the first discriminant if discriminants are present.\n \n---    First_Discriminant (synthesized)\n---       Applies to types with discriminants. The discriminants are the first\n---       entities declared in the type, so normally this is equivalent to\n---       First_Entity. The exception arises for tagged types, where the tag\n---       itself is prepended to the front of the entity chain, so the\n---       First_Discriminant function steps past the tag if it is present.\n-\n --    First_Entity (Node17)\n --       Present in all entities which act as scopes to which a list of\n --       associated entities is attached (blocks, class subtypes and types,\n@@ -1229,40 +1198,6 @@ package Einfo is\n --       Note in particular that size clauses are present only for this\n --       purpose, and should only be accessed if Has_Size_Clause is set.\n \n---    First_Stored_Discriminant (synthesized)\n---       Applies to types with discriminants. Gives the first discriminant\n---       stored in the object. In many cases, these are the same as the\n---       normal visible discriminants for the type, but in the case of\n---       renamed discriminants, this is not always the case.\n---\n---       For tagged types, and untagged types which are root types or\n---       derived types but which do not rename discriminants in their\n---       root type, the stored discriminants are the same as the actual\n---       discriminants of the type, and hence this function is the same\n---       as First_Discriminant.\n---\n---       For derived non-tagged types that rename discriminants in the root\n---       type this is the first of the discriminants that occur in the\n---       root type. To be precise, in this case stored discriminants are\n---       entities attached to the entity chain of the derived type which\n---       are a copy of the discriminants of the root type. Furthermore their\n---       Is_Completely_Hidden flag is set since although they are actually\n---       stored in the object, they are not in the set of discriminants that\n---       is visble in the type.\n---\n---       For derived untagged types, stored discriminants are the real\n---       discriminants from Gigi's standpoint, i.e. those that will be\n---       stored in actual objects of the type.\n-\n---    First_Subtype (synthesized)\n---       Applies to all types and subtypes. For types, yields the first subtype\n---       of the type. For subtypes, yields the first subtype of the base type\n---       of the subtype.\n-\n---    First_Tag_Component (synthesized)\n---       Applies to tagged record types, returns the entity for the first\n---       _Tag field in this record.\n-\n --    Freeze_Node (Node7)\n --       Present in all entities. If there is an associated freeze node for\n --       the entity, this field references this freeze node. If no freeze\n@@ -1939,14 +1874,6 @@ package Einfo is\n --       Applies to all entities, true for boolean types and subtypes,\n --       i.e. Standard.Boolean and all types ultimately derived from it.\n \n---    Is_By_Copy_Type (synthesized)\n---       Applies to all type entities. Returns true if the entity is\n---       a by copy type (RM 6.2(3)).\n-\n---    Is_By_Reference_Type (synthesized)\n---       Applies to all type entities. True if the type is required to\n---       be passed by reference, as defined in (RM 6.2(4-9)).\n-\n --    Is_Called (Flag102)\n --       Present in subprograms. Returns true if the subprogram is called\n --       in the unit being compiled or in a unit in the context. Used for\n@@ -2043,10 +1970,6 @@ package Einfo is\n --       Applies to all type entities, true for decimal fixed point\n --       types and subtypes.\n \n---    Is_Derived_Type (synthesized)\n---       Applies to all entities. Determine if given entity is a derived type.\n---       Always false if argument is not a type.\n-\n --    Is_Descendent_Of_Address (Flag223)\n --       Present in all type and subtype entities. Indicates that a type is an\n --       address type that is visibly a numeric type. Used for semantic checks\n@@ -2197,12 +2120,6 @@ package Einfo is\n --    Is_Incomplete_Type (synthesized)\n --       Applies to all entities, true for incomplete types and subtypes\n \n---    Is_Indefinite_Subtype (synthesized)\n---       Applies to all entities for types and subtypes. Determines if given\n---       entity is an unconstrained array type or subtype, a discriminated\n---       record type or subtype with no initial discriminant values or a\n---       class wide type or subtype.\n-\n --    Is_Inlined (Flag11)\n --       Present in all entities. Set for functions and procedures which are\n --       to be inlined. For subprograms created during expansion, this flag\n@@ -2363,12 +2280,6 @@ package Einfo is\n --       record is declared to be limited. Note that this flag is not set\n --       simply because some components of the record are limited.\n \n---    Is_Limited_Type (synthesized)\n---       Applies to all entities. True if entity is a limited type (limited\n---       private type, limited interface type, task type, protected type,\n---       composite containing a limited component, or a subtype of any of\n---       these types).\n-\n --    Is_Local_Anonymous_Access (Flag194)\n --       Present in access types. Set for an anonymous access type to indicate\n --       that the type is created for a record component with an access\n@@ -2613,15 +2524,6 @@ package Einfo is\n --       renaming is handled by the front end, by macro substitution of\n --       a copy of the (evaluated) name tree whereever the variable is used.\n \n---    Is_Inherently_Limited_Type (synthesized)\n---       Applies to all type entities. True if the type is \"inherently\"\n---       limited (i.e. cannot become nonlimited). From the Ada 2005\n---       RM-7.5(8.1/2), \"a type with a part that is of a task, protected, or\n---       explicitly limited record type\". These are the types that are defined\n---       as return-by-reference types in Ada 95 (see RM95-6.5(11-16)). In Ada\n---       2005, these are the types that require build-in-place for function\n---       calls. Note that build-in-place is allowed for other types, too.\n-\n --    Is_Return_Object (Flag209)\n --       Present in all object entities. True if the object is the return\n --       object of an extended_return_statement; False otherwise.\n@@ -3044,10 +2946,6 @@ package Einfo is\n --       Empty if applied to the last literal. This is actually a synonym\n --       for Next, but its use is preferred in this context.\n \n---    Next_Tag_Component (synthesized)\n---       Applies to components of tagged record types. Given a _Tag field\n---       of a record, returns the next _Tag field in this record.\n-\n --    Non_Binary_Modulus (Flag58) [base type only]\n --       Present in all subtype and type entities. Set for modular integer\n --       types if the modulus value is other than a power of 2.\n@@ -3110,10 +3008,6 @@ package Einfo is\n --       Applies to array types and subtypes. Returns the number of dimensions\n --       of the array type or subtype as a value of type Pos.\n \n---    Number_Discriminants (synthesized)\n---       Applies to all types with discriminants. Yields the number of\n---       discriminants as a value of type Pos.\n-\n --    Number_Entries (synthesized)\n --       Applies to concurrent types. Returns the number of entries that are\n --       declared within the task or protected definition for the type.\n@@ -4642,11 +4536,8 @@ package Einfo is\n    --    Was_Hidden                          (Flag196)\n \n    --    Declaration_Node                    (synth)\n-   --    Enclosing_Dynamic_Scope             (synth)\n    --    Has_Foreign_Convention              (synth)\n-   --    Is_Derived_Type                     (synth)\n    --    Is_Dynamic_Scope                    (synth)\n-   --    Is_Limited_Type                     (synth)\n    --    Is_Standard_Character_Type          (synth)\n    --    Underlying_Type                     (synth)\n    --    all classification attributes       (synth)\n@@ -4722,15 +4613,10 @@ package Einfo is\n    --    Universal_Aliasing                  (Flag216)  (base type only)\n \n    --    Alignment_Clause                    (synth)\n-   --    Ancestor_Subtype                    (synth)\n    --    Base_Type                           (synth)\n-   --    First_Subtype                       (synth)\n    --    Has_Private_Ancestor                (synth)\n    --    Implementation_Base_Type            (synth)\n    --    Is_Access_Protected_Subprogram_Type (synth)\n-   --    Is_By_Copy_Type                     (synth)\n-   --    Is_By_Reference_Type                (synth)\n-   --    Is_Inherently_Limited_Type          (synth)\n    --    Root_Type                           (synth)\n    --    Size_Clause                         (synth)\n \n@@ -4757,7 +4643,7 @@ package Einfo is\n    --    Storage_Size_Variable               (Node15)   (base type only)\n    --    Master_Id                           (Node17)\n    --    Directly_Designated_Type            (Node20)\n-   --    Associated_Storage_Pool             (Node22)   (base type only)\n+   --    Associated_Storage_Pool             (Node22)   (root type only)\n    --    Associated_Final_Chain              (Node23)\n    --    Has_Pragma_Controlled               (Flag27)   (base type only)\n    --    Has_Storage_Size_Clause             (Flag23)   (base type only)\n@@ -4827,8 +4713,7 @@ package Einfo is\n    --    Last_Entity                         (Node20)\n    --    First_Component                     (synth)\n    --    First_Component_Or_Discriminant     (synth)\n-   --    First_Discriminant                  (synth)\n-   --        (plus type attributes)\n+   --    (plus type attributes)\n \n    --  E_Component\n    --    Normalized_First_Bit                (Uint8)\n@@ -4856,7 +4741,6 @@ package Einfo is\n    --    Is_Return_Object                    (Flag209)\n    --    Next_Component                      (synth)\n    --    Next_Component_Or_Discriminant      (synth)\n-   --    Next_Tag_Component                  (synth)\n \n    --  E_Constant\n    --  E_Loop_Parameter\n@@ -4889,7 +4773,6 @@ package Einfo is\n    --    Treat_As_Volatile                   (Flag41)\n    --    Address_Clause                      (synth)\n    --    Alignment_Clause                    (synth)\n-   --    Constant_Value                      (synth)\n    --    Size_Clause                         (synth)\n \n    --  E_Decimal_Fixed_Point_Type\n@@ -4903,7 +4786,7 @@ package Einfo is\n    --    Machine_Radix_10                    (Flag84)\n    --    Type_Low_Bound                      (synth)\n    --    Type_High_Bound                     (synth)\n-   --          (plus type attributes)\n+   --    (plus type attributes)\n \n    --  E_Discriminant\n    --    Normalized_First_Bit                (Uint8)\n@@ -4974,7 +4857,7 @@ package Einfo is\n    --    Nonzero_Is_True                     (Flag162)  (base type only)\n    --    Type_Low_Bound                      (synth)\n    --    Type_High_Bound                     (synth)\n-   --        (plus type attributes)\n+   --    (plus type attributes)\n \n    --  E_Exception\n    --    Esize                               (Uint12)\n@@ -4989,15 +4872,15 @@ package Einfo is\n \n    --  E_Exception_Type\n    --    Equivalent_Type                     (Node18)\n-   --        (plus type attributes)\n+   --    (plus type attributes)\n \n    --  E_Floating_Point_Type\n    --  E_Floating_Point_Subtype\n    --    Digits_Value                        (Uint17)\n    --    Scalar_Range                        (Node20)\n    --    Type_Low_Bound                      (synth)\n    --    Type_High_Bound                     (synth)\n-   --        (plus type attributes)\n+   --    (plus type attributes)\n \n    --  E_Function\n    --  E_Generic_Function\n@@ -5073,7 +4956,7 @@ package Einfo is\n    --    Storage_Size_Variable               (Node15)   (base type only)\n    --    Master_Id                           (Node17)\n    --    Directly_Designated_Type            (Node20)\n-   --    Associated_Storage_Pool             (Node22)   (base type only)\n+   --    Associated_Storage_Pool             (Node22)   (root type only)\n    --    Associated_Final_Chain              (Node23)\n    --    (plus type attributes)\n \n@@ -5095,8 +4978,6 @@ package Einfo is\n    --    Private_Dependents                  (Elist18)\n    --    Discriminant_Constraint             (Elist21)\n    --    Stored_Constraint                   (Elist23)\n-   --    First_Discriminant                  (synth)\n-   --    First_Stored_Discriminant           (synth)\n    --    (plus type attributes)\n \n    --  E_In_Parameter\n@@ -5141,8 +5022,6 @@ package Einfo is\n    --    Private_View                        (Node22)\n    --    Stored_Constraint                   (Elist23)\n    --    Has_Completion                      (Flag26)\n-   --    First_Discriminant                  (synth)\n-   --    First_Stored_Discriminant           (synth)\n    --    (plus type attributes)\n \n    --  E_Loop\n@@ -5162,10 +5041,8 @@ package Einfo is\n    --    (plus type attributes)\n \n    --  E_Named_Integer\n-   --    Constant_Value                      (synth)\n \n    --  E_Named_Real\n-   --    Constant_Value                      (synth)\n \n    --  E_Operator\n    --    First_Entity                        (Node17)\n@@ -5190,7 +5067,7 @@ package Einfo is\n    --    Has_Small_Clause                    (Flag67)\n    --    Type_Low_Bound                      (synth)\n    --    Type_High_Bound                     (synth)\n-   --        (plus type attributes)\n+   --    (plus type attributes)\n \n    --  E_Package\n    --  E_Generic_Package\n@@ -5260,8 +5137,6 @@ package Einfo is\n    --    Has_Completion                      (Flag26)\n    --    Is_Controlled                       (Flag42)   (base type only)\n    --    Is_For_Access_Subtype               (Flag118)  (subtype only)\n-   --    First_Discriminant                  (synth)\n-   --    First_Stored_Discriminant           (synth)\n    --    (plus type attributes)\n \n    --  E_Procedure\n@@ -5386,9 +5261,6 @@ package Einfo is\n    --    Reverse_Bit_Order                   (Flag164)  (base type only)\n    --    First_Component                     (synth)\n    --    First_Component_Or_Discriminant     (synth)\n-   --    First_Discriminant                  (synth)\n-   --    First_Stored_Discriminant           (synth)\n-   --    First_Tag_Component                 (synth)\n    --    (plus type attributes)\n \n    --  E_Record_Type_With_Private\n@@ -5416,9 +5288,6 @@ package Einfo is\n    --    Reverse_Bit_Order                   (Flag164)  (base type only)\n    --    First_Component                     (synth)\n    --    First_Component_Or_Discriminant     (synth)\n-   --    First_Discriminant                  (synth)\n-   --    First_Stored_Discriminant           (synth)\n-   --    First_Tag_Component                 (synth)\n    --    (plus type attributes)\n \n    --  E_Return_Statement\n@@ -5523,7 +5392,6 @@ package Einfo is\n    --    Treat_As_Volatile                   (Flag41)\n    --    Address_Clause                      (synth)\n    --    Alignment_Clause                    (synth)\n-   --    Constant_Value                      (synth)\n    --    Size_Clause                         (synth)\n \n    --  E_Void\n@@ -6191,40 +6059,27 @@ package Einfo is\n \n    function Address_Clause                      (Id : E) return N;\n    function Alignment_Clause                    (Id : E) return N;\n-   function Ancestor_Subtype                    (Id : E) return E;\n-   function Available_View                      (Id : E) return E;\n    function Base_Type                           (Id : E) return E;\n-   function Constant_Value                      (Id : E) return N;\n    function Declaration_Node                    (Id : E) return N;\n    function Designated_Type                     (Id : E) return E;\n-   function Enclosing_Dynamic_Scope             (Id : E) return E;\n    function First_Component                     (Id : E) return E;\n    function First_Component_Or_Discriminant     (Id : E) return E;\n-   function First_Discriminant                  (Id : E) return E;\n    function First_Formal                        (Id : E) return E;\n    function First_Formal_With_Extras            (Id : E) return E;\n-   function First_Stored_Discriminant           (Id : E) return E;\n-   function First_Subtype                       (Id : E) return E;\n    function Has_Attach_Handler                  (Id : E) return B;\n    function Has_Entries                         (Id : E) return B;\n    function Has_Foreign_Convention              (Id : E) return B;\n    function Has_Private_Ancestor                (Id : E) return B;\n    function Has_Private_Declaration             (Id : E) return B;\n    function Implementation_Base_Type            (Id : E) return E;\n    function Is_Boolean_Type                     (Id : E) return B;\n-   function Is_By_Copy_Type                     (Id : E) return B;\n-   function Is_By_Reference_Type                (Id : E) return B;\n    function Is_Constant_Object                  (Id : E) return B;\n-   function Is_Derived_Type                     (Id : E) return B;\n    function Is_Discriminal                      (Id : E) return B;\n    function Is_Dynamic_Scope                    (Id : E) return B;\n-   function Is_Indefinite_Subtype               (Id : E) return B;\n-   function Is_Limited_Type                     (Id : E) return B;\n    function Is_Package_Or_Generic_Package       (Id : E) return B;\n    function Is_Prival                           (Id : E) return B;\n    function Is_Protected_Component              (Id : E) return B;\n    function Is_Protected_Record_Type            (Id : E) return B;\n-   function Is_Inherently_Limited_Type          (Id : E) return B;\n    function Is_Standard_Character_Type          (Id : E) return B;\n    function Is_String_Type                      (Id : E) return B;\n    function Is_Task_Record_Type                 (Id : E) return B;\n@@ -6237,16 +6092,13 @@ package Einfo is\n    function Next_Literal                        (Id : E) return E;\n    function Next_Stored_Discriminant            (Id : E) return E;\n    function Number_Dimensions                   (Id : E) return Pos;\n-   function Number_Discriminants                (Id : E) return Pos;\n    function Number_Entries                      (Id : E) return Nat;\n    function Number_Formals                      (Id : E) return Pos;\n-   function Parameter_Mode                      (Id : E) return Formal_Kind;\n    function Root_Type                           (Id : E) return E;\n+   function Parameter_Mode                      (Id : E) return Formal_Kind;\n    function Scope_Depth_Set                     (Id : E) return B;\n    function Size_Clause                         (Id : E) return N;\n    function Stream_Size_Clause                  (Id : E) return N;\n-   function First_Tag_Component                 (Id : E) return E;\n-   function Next_Tag_Component                  (Id : E) return E;\n    function Type_High_Bound                     (Id : E) return N;\n    function Type_Low_Bound                      (Id : E) return N;\n    function Underlying_Type                     (Id : E) return E;"}, {"sha": "6ea4ddc961f4c929defd485f8f07a93ce7ac1905", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -47,6 +47,7 @@ with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Ttypes;   use Ttypes;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Eval; use Sem_Eval;\n with Sem_Res;  use Sem_Res;"}, {"sha": "c94b319ecc0c3531c136f6760fa49a8c34f4e78c", "filename": "gcc/ada/exp_atag.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_atag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_atag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_atag.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -31,6 +31,7 @@ with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n with Rtsfind;  use Rtsfind;\n with Sinfo;    use Sinfo;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Util; use Sem_Util;\n with Stand;    use Stand;\n with Snames;   use Snames;"}, {"sha": "d68bc5e107de03760d2de093da775d563858d845", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -53,6 +53,7 @@ with Restrict; use Restrict;\n with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Ch6;  use Sem_Ch6;\n with Sem_Ch7;  use Sem_Ch7;\n with Sem_Ch8;  use Sem_Ch8;"}, {"sha": "39ac9c95af388bb5f3afa091652508e63fbc5e6b", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -49,6 +49,7 @@ with Restrict; use Restrict;\n with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Attr; use Sem_Attr;\n with Sem_Cat;  use Sem_Cat;\n with Sem_Ch3;  use Sem_Ch3;"}, {"sha": "ccd990eeb6ae101cb4724565a03e1d661b2f3f04", "filename": "gcc/ada/exp_ch4.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch4.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -50,6 +50,7 @@ with Restrict; use Restrict;\n with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Cat;  use Sem_Cat;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch8;  use Sem_Ch8;"}, {"sha": "b20d5685ac15e4238934be755815a22564687ae9", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -46,6 +46,7 @@ with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sinfo;    use Sinfo;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch8;  use Sem_Ch8;\n with Sem_Ch13; use Sem_Ch13;"}, {"sha": "19c90ad59fe3007b6bec32e9295f9b65ecdb3acc", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -54,6 +54,7 @@ with Restrict; use Restrict;\n with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Ch6;  use Sem_Ch6;\n with Sem_Ch8;  use Sem_Ch8;\n with Sem_Ch12; use Sem_Ch12;"}, {"sha": "334b99a48b517b73e8e66c6b74af4ff103582c89", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -49,6 +49,7 @@ with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sinfo;    use Sinfo;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch7;  use Sem_Ch7;\n with Sem_Ch8;  use Sem_Ch8;"}, {"sha": "b0e81eb6490f71e08da96126ab93ae5d7056ff58", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -48,6 +48,7 @@ with Restrict; use Restrict;\n with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Ch6;  use Sem_Ch6;\n with Sem_Ch8;  use Sem_Ch8;\n with Sem_Ch11; use Sem_Ch11;"}, {"sha": "e42bd6aa9dc30de578a1e58d24a797ef397cfef1", "filename": "gcc/ada/exp_code.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_code.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_code.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_code.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1996-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1996-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,6 +33,7 @@ with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n with Opt;      use Opt;\n with Rtsfind;  use Rtsfind;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Eval; use Sem_Eval;\n with Sem_Util; use Sem_Util;\n with Sem_Warn; use Sem_Warn;"}, {"sha": "34ae7e2b652cbc18968c1602250d689a411a8761", "filename": "gcc/ada/exp_dbug.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_dbug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_dbug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dbug.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -31,6 +31,7 @@ with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n with Opt;      use Opt;\n with Output;   use Output;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Eval; use Sem_Eval;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;"}, {"sha": "f5149735147677862bc31e953802f580dc17def2", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -46,6 +46,7 @@ with Restrict; use Restrict;\n with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Ch6;  use Sem_Ch6;\n with Sem_Ch7;  use Sem_Ch7;\n with Sem_Ch8;  use Sem_Ch8;"}, {"sha": "516a55f46fd1aa53aaefb429423d126bf17664d6", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -36,6 +36,7 @@ with Nmake;    use Nmake;\n with Opt;      use Opt;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Cat;  use Sem_Cat;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch8;  use Sem_Ch8;"}, {"sha": "ed53ca0c1111d2b4b996c0f85d9a65f1bbc8be34", "filename": "gcc/ada/exp_imgv.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_imgv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_imgv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -34,6 +34,7 @@ with Nmake;    use Nmake;\n with Nlists;   use Nlists;\n with Opt;      use Opt;\n with Rtsfind;  use Rtsfind;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Res;  use Sem_Res;\n with Sinfo;    use Sinfo;\n with Snames;   use Snames;"}, {"sha": "ad22ec1f5c9d90d0fcdb1d235088d6c6a6c92e70", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -36,6 +36,7 @@ with Nmake;    use Nmake;\n with Opt;      use Opt;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch8;  use Sem_Ch8;\n with Sem_Ch13; use Sem_Ch13;"}, {"sha": "c685b7bb2901a96ad1b0f547177030bfab91b08b", "filename": "gcc/ada/exp_smem.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_smem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_smem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_smem.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -31,6 +31,7 @@ with Namet;    use Namet;\n with Nlists;   use Nlists;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n with Snames;   use Snames;"}, {"sha": "42c34a8487eafb83eb66719809e412e1ba31fa8e", "filename": "gcc/ada/exp_strm.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_strm.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_strm.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_strm.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -30,6 +30,7 @@ with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n with Opt;      use Opt;\n with Rtsfind;  use Rtsfind;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n with Snames;   use Snames;"}, {"sha": "b350644c24e74e59788def3ea6648208d189681a", "filename": "gcc/ada/exp_tss.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_tss.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_tss.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_tss.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -30,6 +30,7 @@ with Exp_Util; use Exp_Util;\n with Lib;      use Lib;\n with Restrict; use Restrict;\n with Rident;   use Rident;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n "}, {"sha": "95c73d522d7298a7388201ff8d39573790aa4a39", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -41,6 +41,7 @@ with Opt;      use Opt;\n with Restrict; use Restrict;\n with Rident;   use Rident;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Ch8;  use Sem_Ch8;\n with Sem_Eval; use Sem_Eval;\n with Sem_Res;  use Sem_Res;"}, {"sha": "44f41655f7539c9835d86f13f7be58206b8430d3", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -179,6 +179,22 @@ extern void Check_No_Implicit_Heap_Alloc   (Node_Id);\n extern void Check_Elaboration_Code_Allowed (Node_Id);\n extern void Check_Implicit_Dynamic_Code_Allowed (Node_Id);\n \n+/* sem_aux:  */\n+\n+#define Ancestor_Subtype               sem_aux__ancestor_subtype\n+#define First_Discriminant             sem_aux__first_discriminant\n+#define First_Stored_Discriminant      sem_aux__first_stored_discriminant\n+#define First_Subtype                  sem_aux__first_subtype\n+#define Is_By_Reference_Type           sem_aux__is_by_reference_type\n+#define Is_Derived_Type                sem_aux__is_derived_type\n+\n+extern Entity_Id  Ancestor_Subtype             (Entity_Id);\n+extern Entity_Id  First_Discriminant           (Entity_Id);\n+extern Entity_Id  First_Stored_Discriminant    (Entity_Id);\n+extern Entity_Id  First_Subtype                (Entity_Id);\n+extern Boolean    Is_By_Reference_Type         (Entity_Id);\n+extern Boolean    Is_Derived_Type              (Entity_Id);\n+\n /* sem_elim: */\n \n #define Eliminate_Error_Msg    sem_elim__eliminate_error_msg"}, {"sha": "9a76e040dd16cc0cbed934a667241ed8be1714d3", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -44,6 +44,7 @@ with Opt;      use Opt;\n with Restrict; use Restrict;\n with Rident;   use Rident;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Cat;  use Sem_Cat;\n with Sem_Ch6;  use Sem_Ch6;\n with Sem_Ch7;  use Sem_Ch7;"}, {"sha": "33b4372ed6ed02ff5e977a3207493fecf8f33940", "filename": "gcc/ada/inline.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Finline.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Finline.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finline.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -35,6 +35,7 @@ with Lib;      use Lib;\n with Namet;    use Namet;\n with Nlists;   use Nlists;\n with Opt;      use Opt;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Ch8;  use Sem_Ch8;\n with Sem_Ch10; use Sem_Ch10;\n with Sem_Ch12; use Sem_Ch12;"}, {"sha": "7c392209b8f970d0f4f33e1fe4a6c8d01a51e47e", "filename": "gcc/ada/layout.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Flayout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Flayout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flayout.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -36,6 +36,7 @@ with Nmake;    use Nmake;\n with Opt;      use Opt;\n with Repinfo;  use Repinfo;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Ch13; use Sem_Ch13;\n with Sem_Eval; use Sem_Eval;\n with Sem_Util; use Sem_Util;"}, {"sha": "3e36d0c84edb2bae66015d84047264c5e9df5353", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -33,6 +33,7 @@ with Opt;      use Opt;\n with Restrict; use Restrict;\n with Rident;   use Rident;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Prag; use Sem_Prag;\n with Sem_Util; use Sem_Util;\n with Sem_Warn; use Sem_Warn;"}, {"sha": "402b7384c9a270dc09737d8671f8fffdc950de39", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -40,6 +40,7 @@ with Nmake;    use Nmake;\n with Nlists;   use Nlists;\n with Opt;      use Opt;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Cat;  use Sem_Cat;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch13; use Sem_Ch13;"}, {"sha": "7758f4b66548038da9a56948131c4486a166269d", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -46,6 +46,7 @@ with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sdefault; use Sdefault;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Cat;  use Sem_Cat;\n with Sem_Ch6;  use Sem_Ch6;\n with Sem_Ch8;  use Sem_Ch8;"}, {"sha": "4acfb1d48bd4ebc74d29ea9790b166477e181f2f", "filename": "gcc/ada/sem_aux.adb", "status": "modified", "additions": 713, "deletions": 0, "changes": 713, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_aux.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_aux.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -30,8 +30,382 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Atree;  use Atree;\n+with Einfo;  use Einfo;\n+with Namet;  use Namet;\n+with Sinfo;  use Sinfo;\n+with Snames; use Snames;\n+with Stand;  use Stand;\n+\n package body Sem_Aux is\n \n+   ----------------------\n+   -- Ancestor_Subtype --\n+   ----------------------\n+\n+   function Ancestor_Subtype (Typ : Entity_Id) return Entity_Id is\n+   begin\n+      --  If this is first subtype, or is a base type, then there is no\n+      --  ancestor subtype, so we return Empty to indicate this fact.\n+\n+      if Is_First_Subtype (Typ) or else Typ = Base_Type (Typ) then\n+         return Empty;\n+      end if;\n+\n+      declare\n+         D : constant Node_Id := Declaration_Node (Typ);\n+\n+      begin\n+         --  If we have a subtype declaration, get the ancestor subtype\n+\n+         if Nkind (D) = N_Subtype_Declaration then\n+            if Nkind (Subtype_Indication (D)) = N_Subtype_Indication then\n+               return Entity (Subtype_Mark (Subtype_Indication (D)));\n+            else\n+               return Entity (Subtype_Indication (D));\n+            end if;\n+\n+         --  If not, then no subtype indication is available\n+\n+         else\n+            return Empty;\n+         end if;\n+      end;\n+   end Ancestor_Subtype;\n+\n+   --------------------\n+   -- Available_View --\n+   --------------------\n+\n+   function Available_View (Typ : Entity_Id) return Entity_Id is\n+   begin\n+      if Is_Incomplete_Type (Typ)\n+        and then Present (Non_Limited_View (Typ))\n+      then\n+         --  The non-limited view may itself be an incomplete type, in which\n+         --  case get its full view.\n+\n+         return Get_Full_View (Non_Limited_View (Typ));\n+\n+      elsif Is_Class_Wide_Type (Typ)\n+        and then Is_Incomplete_Type (Etype (Typ))\n+        and then Present (Non_Limited_View (Etype (Typ)))\n+      then\n+         return Class_Wide_Type (Non_Limited_View (Etype (Typ)));\n+\n+      else\n+         return Typ;\n+      end if;\n+   end Available_View;\n+\n+   --------------------\n+   -- Constant_Value --\n+   --------------------\n+\n+   function Constant_Value (Ent : Entity_Id) return Node_Id is\n+      D      : constant Node_Id := Declaration_Node (Ent);\n+      Full_D : Node_Id;\n+\n+   begin\n+      --  If we have no declaration node, then return no constant value.\n+      --  Not clear how this can happen, but it does sometimes and this is\n+      --  the safest approach.\n+\n+      if No (D) then\n+         return Empty;\n+\n+      --  Normal case where a declaration node is present\n+\n+      elsif Nkind (D) = N_Object_Renaming_Declaration then\n+         return Renamed_Object (Ent);\n+\n+      --  If this is a component declaration whose entity is constant, it\n+      --  is a prival within a protected function. It does not have\n+      --  a constant value.\n+\n+      elsif Nkind (D) = N_Component_Declaration then\n+         return Empty;\n+\n+      --  If there is an expression, return it\n+\n+      elsif Present (Expression (D)) then\n+         return (Expression (D));\n+\n+      --  For a constant, see if we have a full view\n+\n+      elsif Ekind (Ent) = E_Constant\n+        and then Present (Full_View (Ent))\n+      then\n+         Full_D := Parent (Full_View (Ent));\n+\n+         --  The full view may have been rewritten as an object renaming\n+\n+         if Nkind (Full_D) = N_Object_Renaming_Declaration then\n+            return Name (Full_D);\n+         else\n+            return Expression (Full_D);\n+         end if;\n+\n+      --  Otherwise we have no expression to return\n+\n+      else\n+         return Empty;\n+      end if;\n+   end Constant_Value;\n+\n+   -----------------------------\n+   -- Enclosing_Dynamic_Scope --\n+   -----------------------------\n+\n+   function Enclosing_Dynamic_Scope (Ent : Entity_Id) return Entity_Id is\n+      S  : Entity_Id;\n+\n+   begin\n+      --  The following test is an error defense against some syntax\n+      --  errors that can leave scopes very messed up.\n+\n+      if Ent = Standard_Standard then\n+         return Ent;\n+      end if;\n+\n+      --  Normal case, search enclosing scopes\n+\n+      --  Note: the test for Present (S) should not be required, it is a\n+      --  defence against an ill-formed tree.\n+\n+      S := Scope (Ent);\n+      loop\n+         --  If we somehow got an empty value for Scope, the tree must be\n+         --  malformed. Rather than blow up we return Standard in this case.\n+\n+         if No (S) then\n+            return Standard_Standard;\n+\n+         --  Quit if we get to standard or a dynamic scope\n+\n+         elsif S = Standard_Standard\n+           or else Is_Dynamic_Scope (S)\n+         then\n+            return S;\n+\n+         --  Otherwise keep climbing\n+\n+         else\n+            S := Scope (S);\n+         end if;\n+      end loop;\n+   end Enclosing_Dynamic_Scope;\n+\n+   ------------------------\n+   -- First_Discriminant --\n+   ------------------------\n+\n+   function First_Discriminant (Typ : Entity_Id) return Entity_Id is\n+      Ent : Entity_Id;\n+\n+   begin\n+      pragma Assert\n+        (Has_Discriminants (Typ)\n+          or else Has_Unknown_Discriminants (Typ));\n+\n+      Ent := First_Entity (Typ);\n+\n+      --  The discriminants are not necessarily contiguous, because access\n+      --  discriminants will generate itypes. They are not the first entities\n+      --  either, because tag and controller record must be ahead of them.\n+\n+      if Chars (Ent) = Name_uTag then\n+         Ent := Next_Entity (Ent);\n+      end if;\n+\n+      if Chars (Ent) = Name_uController then\n+         Ent := Next_Entity (Ent);\n+      end if;\n+\n+      --  Skip all hidden stored discriminants if any\n+\n+      while Present (Ent) loop\n+         exit when Ekind (Ent) = E_Discriminant\n+           and then not Is_Completely_Hidden (Ent);\n+\n+         Ent := Next_Entity (Ent);\n+      end loop;\n+\n+      pragma Assert (Ekind (Ent) = E_Discriminant);\n+\n+      return Ent;\n+   end First_Discriminant;\n+\n+   -------------------------------\n+   -- First_Stored_Discriminant --\n+   -------------------------------\n+\n+   function First_Stored_Discriminant (Typ : Entity_Id) return Entity_Id is\n+      Ent : Entity_Id;\n+\n+      function Has_Completely_Hidden_Discriminant\n+        (Typ : Entity_Id) return Boolean;\n+      --  Scans the Discriminants to see whether any are Completely_Hidden\n+      --  (the mechanism for describing non-specified stored discriminants)\n+\n+      ----------------------------------------\n+      -- Has_Completely_Hidden_Discriminant --\n+      ----------------------------------------\n+\n+      function Has_Completely_Hidden_Discriminant\n+        (Typ : Entity_Id) return Boolean\n+      is\n+         Ent : Entity_Id;\n+\n+      begin\n+         pragma Assert (Ekind (Typ) = E_Discriminant);\n+\n+         Ent := Typ;\n+         while Present (Ent) and then Ekind (Ent) = E_Discriminant loop\n+            if Is_Completely_Hidden (Ent) then\n+               return True;\n+            end if;\n+\n+            Ent := Next_Entity (Ent);\n+         end loop;\n+\n+         return False;\n+      end Has_Completely_Hidden_Discriminant;\n+\n+   --  Start of processing for First_Stored_Discriminant\n+\n+   begin\n+      pragma Assert\n+        (Has_Discriminants (Typ)\n+          or else Has_Unknown_Discriminants (Typ));\n+\n+      Ent := First_Entity (Typ);\n+\n+      if Chars (Ent) = Name_uTag then\n+         Ent := Next_Entity (Ent);\n+      end if;\n+\n+      if Chars (Ent) = Name_uController then\n+         Ent := Next_Entity (Ent);\n+      end if;\n+\n+      if Has_Completely_Hidden_Discriminant (Ent) then\n+\n+         while Present (Ent) loop\n+            exit when Is_Completely_Hidden (Ent);\n+            Ent := Next_Entity (Ent);\n+         end loop;\n+\n+      end if;\n+\n+      pragma Assert (Ekind (Ent) = E_Discriminant);\n+\n+      return Ent;\n+   end First_Stored_Discriminant;\n+\n+   -------------------\n+   -- First_Subtype --\n+   -------------------\n+\n+   function First_Subtype (Typ : Entity_Id) return Entity_Id is\n+      B   : constant Entity_Id := Base_Type (Typ);\n+      F   : constant Node_Id   := Freeze_Node (B);\n+      Ent : Entity_Id;\n+\n+   begin\n+      --  If the base type has no freeze node, it is a type in standard,\n+      --  and always acts as its own first subtype unless it is one of\n+      --  the predefined integer types. If the type is formal, it is also\n+      --  a first subtype, and its base type has no freeze node. On the other\n+      --  hand, a subtype of a generic formal is not its own first_subtype.\n+      --  Its base type, if anonymous, is attached to the formal type decl.\n+      --  from which the first subtype is obtained.\n+\n+      if No (F) then\n+\n+         if B = Base_Type (Standard_Integer) then\n+            return Standard_Integer;\n+\n+         elsif B = Base_Type (Standard_Long_Integer) then\n+            return Standard_Long_Integer;\n+\n+         elsif B = Base_Type (Standard_Short_Short_Integer) then\n+            return Standard_Short_Short_Integer;\n+\n+         elsif B = Base_Type (Standard_Short_Integer) then\n+            return Standard_Short_Integer;\n+\n+         elsif B = Base_Type (Standard_Long_Long_Integer) then\n+            return Standard_Long_Long_Integer;\n+\n+         elsif Is_Generic_Type (Typ) then\n+            if Present (Parent (B)) then\n+               return Defining_Identifier (Parent (B));\n+            else\n+               return Defining_Identifier (Associated_Node_For_Itype (B));\n+            end if;\n+\n+         else\n+            return B;\n+         end if;\n+\n+      --  Otherwise we check the freeze node, if it has a First_Subtype_Link\n+      --  then we use that link, otherwise (happens with some Itypes), we use\n+      --  the base type itself.\n+\n+      else\n+         Ent := First_Subtype_Link (F);\n+\n+         if Present (Ent) then\n+            return Ent;\n+         else\n+            return B;\n+         end if;\n+      end if;\n+   end First_Subtype;\n+\n+   -------------------------\n+   -- First_Tag_Component --\n+   -------------------------\n+\n+   function First_Tag_Component (Typ : Entity_Id) return Entity_Id is\n+      Comp : Entity_Id;\n+      Ctyp : Entity_Id;\n+\n+   begin\n+      Ctyp := Typ;\n+      pragma Assert (Is_Tagged_Type (Ctyp));\n+\n+      if Is_Class_Wide_Type (Ctyp) then\n+         Ctyp := Root_Type (Ctyp);\n+      end if;\n+\n+      if Is_Private_Type (Ctyp) then\n+         Ctyp := Underlying_Type (Ctyp);\n+\n+         --  If the underlying type is missing then the source program has\n+         --  errors and there is nothing else to do (the full-type declaration\n+         --  associated with the private type declaration is missing).\n+\n+         if No (Ctyp) then\n+            return Empty;\n+         end if;\n+      end if;\n+\n+      Comp := First_Entity (Ctyp);\n+      while Present (Comp) loop\n+         if Is_Tag (Comp) then\n+            return Comp;\n+         end if;\n+\n+         Comp := Next_Entity (Comp);\n+      end loop;\n+\n+      --  No tag component found\n+\n+      return Empty;\n+   end First_Tag_Component;\n+\n    ----------------\n    -- Initialize --\n    ----------------\n@@ -41,6 +415,345 @@ package body Sem_Aux is\n       Obsolescent_Warnings.Init;\n    end Initialize;\n \n+   ---------------------\n+   -- Is_By_Copy_Type --\n+   ---------------------\n+\n+   function Is_By_Copy_Type (Ent : Entity_Id) return Boolean is\n+   begin\n+      --  If Id is a private type whose full declaration has not been seen,\n+      --  we assume for now that it is not a By_Copy type. Clearly this\n+      --  attribute should not be used before the type is frozen, but it is\n+      --  needed to build the associated record of a protected type. Another\n+      --  place where some lookahead for a full view is needed ???\n+\n+      return\n+        Is_Elementary_Type (Ent)\n+          or else (Is_Private_Type (Ent)\n+                     and then Present (Underlying_Type (Ent))\n+                     and then Is_Elementary_Type (Underlying_Type (Ent)));\n+   end Is_By_Copy_Type;\n+\n+   --------------------------\n+   -- Is_By_Reference_Type --\n+   --------------------------\n+\n+   function Is_By_Reference_Type (Ent : Entity_Id) return Boolean is\n+      Btype : constant Entity_Id := Base_Type (Ent);\n+\n+   begin\n+      if Error_Posted (Ent)\n+        or else Error_Posted (Btype)\n+      then\n+         return False;\n+\n+      elsif Is_Private_Type (Btype) then\n+         declare\n+            Utyp : constant Entity_Id := Underlying_Type (Btype);\n+         begin\n+            if No (Utyp) then\n+               return False;\n+            else\n+               return Is_By_Reference_Type (Utyp);\n+            end if;\n+         end;\n+\n+      elsif Is_Incomplete_Type (Btype) then\n+         declare\n+            Ftyp : constant Entity_Id := Full_View (Btype);\n+         begin\n+            if No (Ftyp) then\n+               return False;\n+            else\n+               return Is_By_Reference_Type (Ftyp);\n+            end if;\n+         end;\n+\n+      elsif Is_Concurrent_Type (Btype) then\n+         return True;\n+\n+      elsif Is_Record_Type (Btype) then\n+         if Is_Limited_Record (Btype)\n+           or else Is_Tagged_Type (Btype)\n+           or else Is_Volatile (Btype)\n+         then\n+            return True;\n+\n+         else\n+            declare\n+               C : Entity_Id;\n+\n+            begin\n+               C := First_Component (Btype);\n+               while Present (C) loop\n+                  if Is_By_Reference_Type (Etype (C))\n+                    or else Is_Volatile (Etype (C))\n+                  then\n+                     return True;\n+                  end if;\n+\n+                  C := Next_Component (C);\n+               end loop;\n+            end;\n+\n+            return False;\n+         end if;\n+\n+      elsif Is_Array_Type (Btype) then\n+         return\n+           Is_Volatile (Btype)\n+             or else Is_By_Reference_Type (Component_Type (Btype))\n+             or else Is_Volatile (Component_Type (Btype))\n+             or else Has_Volatile_Components (Btype);\n+\n+      else\n+         return False;\n+      end if;\n+   end Is_By_Reference_Type;\n+\n+   ---------------------\n+   -- Is_Derived_Type --\n+   ---------------------\n+\n+   function Is_Derived_Type (Ent : E) return B is\n+      Par : Node_Id;\n+\n+   begin\n+      if Is_Type (Ent)\n+        and then Base_Type (Ent) /= Root_Type (Ent)\n+        and then not Is_Class_Wide_Type (Ent)\n+      then\n+         if not Is_Numeric_Type (Root_Type (Ent)) then\n+            return True;\n+\n+         else\n+            Par := Parent (First_Subtype (Ent));\n+\n+            return Present (Par)\n+              and then Nkind (Par) = N_Full_Type_Declaration\n+              and then Nkind (Type_Definition (Par)) =\n+                         N_Derived_Type_Definition;\n+         end if;\n+\n+      else\n+         return False;\n+      end if;\n+   end Is_Derived_Type;\n+\n+   ---------------------------\n+   -- Is_Indefinite_Subtype --\n+   ---------------------------\n+\n+   function Is_Indefinite_Subtype (Ent : Entity_Id) return Boolean is\n+      K : constant Entity_Kind := Ekind (Ent);\n+\n+   begin\n+      if Is_Constrained (Ent) then\n+         return False;\n+\n+      elsif K in Array_Kind\n+        or else K in Class_Wide_Kind\n+        or else Has_Unknown_Discriminants (Ent)\n+      then\n+         return True;\n+\n+      --  Known discriminants: indefinite if there are no default values\n+\n+      elsif K in Record_Kind\n+        or else Is_Incomplete_Or_Private_Type (Ent)\n+        or else Is_Concurrent_Type (Ent)\n+      then\n+         return (Has_Discriminants (Ent)\n+           and then\n+             No (Discriminant_Default_Value (First_Discriminant (Ent))));\n+\n+      else\n+         return False;\n+      end if;\n+   end Is_Indefinite_Subtype;\n+\n+   --------------------------------\n+   -- Is_Inherently_Limited_Type --\n+   --------------------------------\n+\n+   function Is_Inherently_Limited_Type (Ent : Entity_Id) return Boolean is\n+      Btype : constant Entity_Id := Base_Type (Ent);\n+\n+   begin\n+      if Is_Private_Type (Btype) then\n+         declare\n+            Utyp : constant Entity_Id := Underlying_Type (Btype);\n+         begin\n+            if No (Utyp) then\n+               return False;\n+            else\n+               return Is_Inherently_Limited_Type (Utyp);\n+            end if;\n+         end;\n+\n+      elsif Is_Concurrent_Type (Btype) then\n+         return True;\n+\n+      elsif Is_Record_Type (Btype) then\n+         if Is_Limited_Record (Btype) then\n+            return not Is_Interface (Btype)\n+              or else Is_Protected_Interface (Btype)\n+              or else Is_Synchronized_Interface (Btype)\n+              or else Is_Task_Interface (Btype);\n+\n+         elsif Is_Class_Wide_Type (Btype) then\n+            return Is_Inherently_Limited_Type (Root_Type (Btype));\n+\n+         else\n+            declare\n+               C : Entity_Id;\n+\n+            begin\n+               C := First_Component (Btype);\n+               while Present (C) loop\n+                  if Is_Inherently_Limited_Type (Etype (C)) then\n+                     return True;\n+                  end if;\n+\n+                  C := Next_Component (C);\n+               end loop;\n+            end;\n+\n+            return False;\n+         end if;\n+\n+      elsif Is_Array_Type (Btype) then\n+         return Is_Inherently_Limited_Type (Component_Type (Btype));\n+\n+      else\n+         return False;\n+      end if;\n+   end Is_Inherently_Limited_Type;\n+\n+   ---------------------\n+   -- Is_Limited_Type --\n+   ---------------------\n+\n+   function Is_Limited_Type (Ent : Entity_Id) return Boolean is\n+      Btype : constant E := Base_Type (Ent);\n+      Rtype : constant E := Root_Type (Btype);\n+\n+   begin\n+      if not Is_Type (Ent) then\n+         return False;\n+\n+      elsif Ekind (Btype) = E_Limited_Private_Type\n+        or else Is_Limited_Composite (Btype)\n+      then\n+         return True;\n+\n+      elsif Is_Concurrent_Type (Btype) then\n+         return True;\n+\n+         --  The Is_Limited_Record flag normally indicates that the type is\n+         --  limited. The exception is that a type does not inherit limitedness\n+         --  from its interface ancestor. So the type may be derived from a\n+         --  limited interface, but is not limited.\n+\n+      elsif Is_Limited_Record (Ent)\n+        and then not Is_Interface (Ent)\n+      then\n+         return True;\n+\n+      --  Otherwise we will look around to see if there is some other reason\n+      --  for it to be limited, except that if an error was posted on the\n+      --  entity, then just assume it is non-limited, because it can cause\n+      --  trouble to recurse into a murky erroneous entity!\n+\n+      elsif Error_Posted (Ent) then\n+         return False;\n+\n+      elsif Is_Record_Type (Btype) then\n+\n+         if Is_Limited_Interface (Ent) then\n+            return True;\n+\n+         --  AI-419: limitedness is not inherited from a limited interface\n+\n+         elsif Is_Limited_Record (Rtype) then\n+            return not Is_Interface (Rtype)\n+              or else Is_Protected_Interface (Rtype)\n+              or else Is_Synchronized_Interface (Rtype)\n+              or else Is_Task_Interface (Rtype);\n+\n+         elsif Is_Class_Wide_Type (Btype) then\n+            return Is_Limited_Type (Rtype);\n+\n+         else\n+            declare\n+               C : E;\n+\n+            begin\n+               C := First_Component (Btype);\n+               while Present (C) loop\n+                  if Is_Limited_Type (Etype (C)) then\n+                     return True;\n+                  end if;\n+\n+                  C := Next_Component (C);\n+               end loop;\n+            end;\n+\n+            return False;\n+         end if;\n+\n+      elsif Is_Array_Type (Btype) then\n+         return Is_Limited_Type (Component_Type (Btype));\n+\n+      else\n+         return False;\n+      end if;\n+   end Is_Limited_Type;\n+\n+   ------------------------\n+   -- Next_Tag_Component --\n+   ------------------------\n+\n+   function Next_Tag_Component (Tag : Entity_Id) return Entity_Id is\n+      Comp : Entity_Id;\n+\n+   begin\n+      pragma Assert (Is_Tag (Tag));\n+\n+      Comp := Next_Entity (Tag);\n+      while Present (Comp) loop\n+         if Is_Tag (Comp) then\n+            pragma Assert (Chars (Comp) /= Name_uTag);\n+            return Comp;\n+         end if;\n+\n+         Comp := Next_Entity (Comp);\n+      end loop;\n+\n+      --  No tag component found\n+\n+      return Empty;\n+   end Next_Tag_Component;\n+\n+   --------------------------\n+   -- Number_Discriminants --\n+   --------------------------\n+\n+   function Number_Discriminants (Typ : Entity_Id) return Pos is\n+      N     : Int;\n+      Discr : Entity_Id;\n+\n+   begin\n+      N := 0;\n+      Discr := First_Discriminant (Typ);\n+      while Present (Discr) loop\n+         N := N + 1;\n+         Discr := Next_Discriminant (Discr);\n+      end loop;\n+\n+      return N;\n+   end Number_Discriminants;\n+\n    ---------------\n    -- Tree_Read --\n    ---------------"}, {"sha": "53bad53faee6b9baac95d1a27b736d36b4d69e31", "filename": "gcc/ada/sem_aux.ads", "status": "modified", "additions": 118, "deletions": 13, "changes": 131, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.ads?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -33,13 +33,14 @@\n --  Package containing utility procedures used throughout the compiler,\n --  and also by ASIS so dependencies are limited to ASIS included packages.\n \n---  Note: contents are minimal for now, the intent is to move stuff from\n---  Sem_Util that meets the ASIS dependency requirements, and also stuff\n---  from Einfo, where Einfo had excessive semantic knowledge of the tree.\n+--  Historical note. Many of the routines here were originally in Einfo, but\n+--  Einfo is supposed to be a relatively low level package dealing with the\n+--  content of entities in the tree, so this package is used for routines that\n+--  require more than minimal semantic knowldge.\n \n-with Alloc;   use Alloc;\n+with Alloc; use Alloc;\n with Table;\n-with Types;   use Types;\n+with Types; use Types;\n \n package Sem_Aux is\n \n@@ -66,21 +67,125 @@ package Sem_Aux is\n      Table_Increment      => Alloc.Obsolescent_Warnings_Increment,\n      Table_Name           => \"Obsolescent_Warnings\");\n \n-   -----------------\n-   -- Subprograms --\n-   -----------------\n-\n    procedure Initialize;\n    --  Called at the start of compilation of each new main source file to\n    --  initialize the allocation of the Obsolescent_Warnings table. Note that\n    --  Initialize must not be called if Tree_Read is used.\n \n    procedure Tree_Read;\n-   --  Initializes internal tables from current tree file using the relevant\n-   --  Table.Tree_Read routines.\n+   --  Initializes Obsolescent_Warnings table from current tree file using the\n+   --  relevant Table.Tree_Read routine.\n \n    procedure Tree_Write;\n-   --  Writes out internal tables to current tree file using the relevant\n-   --  Table.Tree_Write routines.\n+   --  Writes out Obsolescent_Warnings table to current tree file using the\n+   --  relevant Table.Tree_Write routine.\n+\n+   -----------------\n+   -- Subprograms --\n+   -----------------\n+\n+   function Ancestor_Subtype (Typ : Entity_Id) return Entity_Id;\n+   --  The argument Id is a type or subtype entity. If the argument is a\n+   --  subtype then it returns the subtype or type from which the subtype was\n+   --  obtained, otherwise it returns Empty.\n+\n+   function Available_View (Typ : Entity_Id) return Entity_Id;\n+   --  Typ is typically a type that has the With_Type flag set. Returns the\n+   --  non-limited view of the type, if available, otherwise the type itself.\n+   --  For class-wide types, there is no direct link in the tree, so we have\n+   --  to retrieve the class-wide type of the non-limited view of the Etype.\n+   --  Returns the argument unchanged if it is not one of these cases.\n+\n+   function Constant_Value (Ent : Entity_Id) return Node_Id;\n+   --  Id is a variable, constant, named integer, or named real entity. This\n+   --  call obtains the initialization expression for the entity. Will return\n+   --  Empty for for a deferred constant whose full view is not available or\n+   --  in some other cases of internal entities, which cannot be treated as\n+   --  constants from the point of view of constant folding. Empty is also\n+   --  returned for variables with no initialization expression.\n+\n+   function Enclosing_Dynamic_Scope (Ent : Entity_Id) return Entity_Id;\n+   --  For any entity, Ent, returns the closest dynamic scope in which the\n+   --  entity is declared or Standard_Standard for library-level entities\n+\n+   function First_Discriminant (Typ : Entity_Id) return Entity_Id;\n+   --  Typ is a type with discriminants. The discriminants are the first\n+   --  entities declared in the type, so normally this is equivalent to\n+   --  First_Entity. The exception arises for tagged types, where the tag\n+   --  itself is prepended to the front of the entity chain, so the\n+   --  First_Discriminant function steps past the tag if it is present.\n+\n+   function First_Stored_Discriminant (Typ : Entity_Id) return Entity_Id;\n+   --  Typ is a type with discriminants. Gives the first discriminant stored\n+   --  in an object of this type. In many cases, these are the same as the\n+   --  normal visible discriminants for the type, but in the case of renamed\n+   --  discriminants, this is not always the case.\n+   --\n+   --  For tagged types, and untagged types which are root types or derived\n+   --  types but which do not rename discriminants in their root type, the\n+   --  stored discriminants are the same as the actual discriminants of the\n+   --  type, and hence this function is the same as First_Discriminant.\n+   --\n+   --  For derived non-tagged types that rename discriminants in the root type\n+   --  this is the first of the discriminants that occur in the root type. To\n+   --  be precise, in this case stored discriminants are entities attached to\n+   --  the entity chain of the derived type which are a copy of the\n+   --  discriminants of the root type. Furthermore their Is_Completely_Hidden\n+   --  flag is set since although they are actually stored in the object, they\n+   --  are not in the set of discriminants that is visble in the type.\n+   --\n+   --  For derived untagged types, the set of stored discriminants are the real\n+   --  discriminants from Gigi's standpoint, i.e. those that will be stored in\n+   --  actual objects of the type.\n+\n+   function First_Subtype (Typ : Entity_Id) return Entity_Id;\n+   --  Applies to all types and subtypes. For types, yields the first subtype\n+   --  of the type. For subtypes, yields the first subtype of the base type of\n+   --  the subtype.\n+\n+   function First_Tag_Component (Typ : Entity_Id) return Entity_Id;\n+   --  Typ must be a tagged record type. This function returns the Entity for\n+   --  the first _Tag field in the record type.\n+\n+   function Is_By_Copy_Type (Ent : Entity_Id) return Boolean;\n+   --  Ent is any entity. Returns True if Ent is a type entity where the type\n+   --  is required to be passed by copy, as defined in (RM 6.2(3)).\n+\n+   function Is_By_Reference_Type (Ent : Entity_Id) return Boolean;\n+   --  Ent is any entity. Returns True if Ent is a type entity where the type\n+   --  is required to be passed by reference, as defined in (RM 6.2(4-9)).\n+\n+   function Is_Derived_Type (Ent : Entity_Id) return Boolean;\n+   --  Determines if the given entity Ent is a derived type. Result is always\n+   --  false if argument is not a type.\n+\n+   function Is_Indefinite_Subtype (Ent : Entity_Id) return Boolean;\n+   --  Ent is any entity. Determines if given entity is an unconstrained array\n+   --  type or subtype, a discriminated record type or subtype with no initial\n+   --  discriminant values or a class wide type or subtype and returns True if\n+   --  so. False for other type entities, or any entities that are not types.\n+\n+   function Is_Inherently_Limited_Type (Ent : Entity_Id) return Boolean;\n+   --  Ent is any entity. True for a type that is \"inherently\" limited (i.e.\n+   --  cannot become nonlimited). From the Ada 2005 RM-7.5(8.1/2), \"a type with\n+   --  a part that is of a task, protected, or explicitly limited record type\".\n+   --  These are the types that are defined as return-by-reference types in Ada\n+   --  95 (see RM95-6.5(11-16)). In Ada 2005, these are the types that require\n+   --  build-in-place for function calls. Note that build-in-place is allowed\n+   --  for other types, too.\n+\n+   function Is_Limited_Type (Ent : Entity_Id) return Boolean;\n+   --  Ent is any entity. Returns true if Ent is a limited type (limited\n+   --  private type, limited interface type, task type, protected type,\n+   --  composite containing a limited component, or a subtype of any of\n+   --  these types).\n+\n+   function Next_Tag_Component (Tag : Entity_Id) return Entity_Id;\n+   --  Tag must be an entity representing a _Tag field of a tagged record.\n+   --  The result returned is the next _Tag field in this record, or Empty\n+   --  if this is the last such field.\n+\n+   function Number_Discriminants (Typ : Entity_Id) return Pos;\n+   --  Typ is a type with discriminants, yields number of discriminants in type\n \n end Sem_Aux;"}, {"sha": "f226c348bdef8ef3b0f9d43decbb869764fc08a3", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -31,6 +31,8 @@ with Nlists;   use Nlists;\n with Nmake;    use Nmake;\n with Opt;      use Opt;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n+with Sem_Case; use Sem_Case;\n with Sem_Eval; use Sem_Eval;\n with Sem_Res;  use Sem_Res;\n with Sem_Util; use Sem_Util;"}, {"sha": "e24b456952fb070601c0d350e99883ef7ab00b9a", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -35,6 +35,7 @@ with Namet;    use Namet;\n with Nlists;   use Nlists;\n with Opt;      use Opt;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Eval; use Sem_Eval;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;"}, {"sha": "d5a8a2e5f8f9b8ca66eea03ccc3b39c209f963f3", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -43,6 +43,7 @@ with Rident;   use Rident;\n with Restrict; use Restrict;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Cat;  use Sem_Cat;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch6;  use Sem_Ch6;"}, {"sha": "f5394dc172d27ab9eb4b0eba559eef9ad6b53438", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -39,6 +39,7 @@ with Restrict; use Restrict;\n with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Ch8;  use Sem_Ch8;\n with Sem_Eval; use Sem_Eval;\n with Sem_Res;  use Sem_Res;"}, {"sha": "e098924f523c22dff6118007a90b022719b4b302", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -49,6 +49,7 @@ with Restrict; use Restrict;\n with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Case; use Sem_Case;\n with Sem_Cat;  use Sem_Cat;\n with Sem_Ch6;  use Sem_Ch6;"}, {"sha": "bd546fa845f403158cefad4734c999968ea907f5", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -42,6 +42,7 @@ with Output;   use Output;\n with Restrict; use Restrict;\n with Rident;   use Rident;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Cat;  use Sem_Cat;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch6;  use Sem_Ch6;"}, {"sha": "6ae5d7f4645ba0422aefca14409137931ead0b81", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -38,6 +38,7 @@ with Nmake;    use Nmake;\n with Opt;      use Opt;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Case; use Sem_Case;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch8;  use Sem_Ch8;"}, {"sha": "df625f82da4bca692547513a74596808fff659bf", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -49,6 +49,7 @@ with Opt;      use Opt;\n with Output;   use Output;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Cat;  use Sem_Cat;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch4;  use Sem_Ch4;"}, {"sha": "7b9edd48e285cd239c66c342928bc987a533952a", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -44,6 +44,7 @@ with Nlists;   use Nlists;\n with Opt;      use Opt;\n with Output;   use Output;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Cat;  use Sem_Cat;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch6;  use Sem_Ch6;"}, {"sha": "c34b073c1257948e95d27cfea742f405cd4df7a2", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -46,6 +46,7 @@ with Restrict; use Restrict;\n with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Cat;  use Sem_Cat;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch4;  use Sem_Ch4;"}, {"sha": "00ca88b1fe9de935d7fb57d643efcbfb0e895d03", "filename": "gcc/ada/sem_ch9.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch9.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -40,6 +40,7 @@ with Restrict; use Restrict;\n with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Ch3;  use Sem_Ch3;\n with Sem_Ch5;  use Sem_Ch5;\n with Sem_Ch6;  use Sem_Ch6;"}, {"sha": "e7419a813d7bb10e7ebb1750eec153cfa0181ed2", "filename": "gcc/ada/sem_disp.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_disp.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -40,6 +40,7 @@ with Output;   use Output;\n with Restrict; use Restrict;\n with Rident;   use Rident;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Ch6;  use Sem_Ch6;\n with Sem_Eval; use Sem_Eval;\n with Sem_Type; use Sem_Type;"}, {"sha": "39db631e0d1f968c2a836a0a7a374d660bac2d7a", "filename": "gcc/ada/sem_dist.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dist.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -35,6 +35,7 @@ with Namet;    use Namet;\n with Opt;      use Opt;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Disp; use Sem_Disp;\n with Sem_Eval; use Sem_Eval;\n with Sem_Res;  use Sem_Res;"}, {"sha": "62772e39991ccd16cc764969e27cd7392c4e862a", "filename": "gcc/ada/sem_eval.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_eval.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_eval.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_eval.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -37,6 +37,7 @@ with Nmake;    use Nmake;\n with Nlists;   use Nlists;\n with Opt;      use Opt;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Cat;  use Sem_Cat;\n with Sem_Ch6;  use Sem_Ch6;\n with Sem_Ch8;  use Sem_Ch8;"}, {"sha": "5f18176b8c2304b7cbfff0c393a735bc5252c51c", "filename": "gcc/ada/sem_mech.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_mech.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_mech.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_mech.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -29,6 +29,7 @@ with Errout;   use Errout;\n with Namet;    use Namet;\n with Nlists;   use Nlists;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Util; use Sem_Util;\n with Sinfo;    use Sinfo;\n with Snames;   use Snames;"}, {"sha": "9ff9d80766e042226e7c1da899365661054b31ce", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -50,6 +50,7 @@ with Restrict; use Restrict;\n with Rident;   use Rident;\n with Rtsfind;  use Rtsfind;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Aggr; use Sem_Aggr;\n with Sem_Attr; use Sem_Attr;\n with Sem_Cat;  use Sem_Cat;"}, {"sha": "bca184ef65893b87f5a8a3935c7638fa894ccea8", "filename": "gcc/ada/sem_smem.adb", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_smem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_smem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_smem.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1998-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1998-2008, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -23,12 +23,13 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Atree;  use Atree;\n-with Einfo;  use Einfo;\n-with Errout; use Errout;\n-with Namet;  use Namet;\n-with Sinfo;  use Sinfo;\n-with Snames; use Snames;\n+with Atree;   use Atree;\n+with Einfo;   use Einfo;\n+with Errout;  use Errout;\n+with Namet;   use Namet;\n+with Sem_Aux; use Sem_Aux;\n+with Sinfo;   use Sinfo;\n+with Snames;  use Snames;\n \n package body Sem_Smem is\n "}, {"sha": "815986456d8b1914fc28a422804aec21f88e104b", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -35,6 +35,7 @@ with Namet;    use Namet;\n with Opt;      use Opt;\n with Output;   use Output;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Ch6;  use Sem_Ch6;\n with Sem_Ch8;  use Sem_Ch8;\n with Sem_Ch12; use Sem_Ch12;"}, {"sha": "04187933fdc7ce5fc95b2e101578fca64ddfe197", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -43,6 +43,7 @@ with Rtsfind;  use Rtsfind;\n with Scans;    use Scans;\n with Scn;      use Scn;\n with Sem;      use Sem;\n+with Sem_Aux;  use Sem_Aux;\n with Sem_Attr; use Sem_Attr;\n with Sem_Ch8;  use Sem_Ch8;\n with Sem_Eval; use Sem_Eval;"}, {"sha": "217c7f2d8f27455a2dd48663b6b13f081479da3c", "filename": "gcc/ada/tbuild.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Ftbuild.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4100e558204bb2c334606f33cd180b773fe1bf5/gcc%2Fada%2Ftbuild.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftbuild.adb?ref=a4100e558204bb2c334606f33cd180b773fe1bf5", "patch": "@@ -32,6 +32,7 @@ with Nmake;    use Nmake;\n with Opt;      use Opt;\n with Restrict; use Restrict;\n with Rident;   use Rident;\n+with Sem_Aux;  use Sem_Aux;\n with Sinfo;    use Sinfo;\n with Snames;   use Snames;\n with Stand;    use Stand;"}]}