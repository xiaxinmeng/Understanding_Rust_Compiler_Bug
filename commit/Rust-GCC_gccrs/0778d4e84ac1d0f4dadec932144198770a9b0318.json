{"sha": "0778d4e84ac1d0f4dadec932144198770a9b0318", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDc3OGQ0ZTg0YWMxZDBmNGRhZGVjOTMyMTQ0MTk4NzcwYTliMDMxOA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2006-10-21T13:23:41Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2006-10-21T13:23:41Z"}, "message": "re PR tree-optimization/3511 (Inlined strlen() could be smarter)\n\n2006-10-21  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/3511\n\t* tree-ssa-pre.c (phi_translate): Fold CALL_EXPRs that\n\tgot new invariant arguments during PHI translation.\n\n\t* gcc.dg/tree-ssa/ssa-pre-15.c: New testcase.\n\nFrom-SVN: r117932", "tree": {"sha": "dd713067369d88527a6fd65d832fd499d903a4c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd713067369d88527a6fd65d832fd499d903a4c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0778d4e84ac1d0f4dadec932144198770a9b0318", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0778d4e84ac1d0f4dadec932144198770a9b0318", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0778d4e84ac1d0f4dadec932144198770a9b0318", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0778d4e84ac1d0f4dadec932144198770a9b0318/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8a1eca08037f5a936526485f1056385708dc5c7c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a1eca08037f5a936526485f1056385708dc5c7c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a1eca08037f5a936526485f1056385708dc5c7c"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "eb1c3292c3091e1f481e6476b85dbb94045abbc8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0778d4e84ac1d0f4dadec932144198770a9b0318/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0778d4e84ac1d0f4dadec932144198770a9b0318/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0778d4e84ac1d0f4dadec932144198770a9b0318", "patch": "@@ -1,3 +1,9 @@\n+2006-10-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/3511\n+\t* tree-ssa-pre.c (phi_translate): Fold CALL_EXPRs that\n+\tgot new invariant arguments during PHI translation.\n+\n 2006-10-21  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/26898"}, {"sha": "c30830dff1b4c71a7a8a4e9a645a59faf7b445b6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0778d4e84ac1d0f4dadec932144198770a9b0318/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0778d4e84ac1d0f4dadec932144198770a9b0318/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0778d4e84ac1d0f4dadec932144198770a9b0318", "patch": "@@ -1,3 +1,8 @@\n+2006-10-21  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/3511\n+\t* gcc.dg/tree-ssa/ssa-pre-15.c: New testcase.\n+\n 2006-10-21  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/26898"}, {"sha": "518fda854e6988984d7d97fcb775a4f8797df669", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-15.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0778d4e84ac1d0f4dadec932144198770a9b0318/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0778d4e84ac1d0f4dadec932144198770a9b0318/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-15.c?ref=0778d4e84ac1d0f4dadec932144198770a9b0318", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-optimized\" } */\n+\n+/* Verify we PRE the strlen call, as strlen(\"\") folds to zero.  */\n+\n+extern __SIZE_TYPE__ strlen (const char *);\n+\n+__SIZE_TYPE__ mystrlen (const char *s)\n+{\n+  if (!s)\n+    s = \"\";\n+  return strlen(s);\n+}\n+\n+/* { dg-final { scan-tree-dump \"= 0;\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "ba32b3cfed4552fd54956d1b6a2c6cc8c4172b05", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0778d4e84ac1d0f4dadec932144198770a9b0318/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0778d4e84ac1d0f4dadec932144198770a9b0318/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=0778d4e84ac1d0f4dadec932144198770a9b0318", "patch": "@@ -1076,6 +1076,7 @@ phi_translate (tree expr, value_set_t set, basic_block pred,\n \t    tree newexpr;\n \t    tree vh = get_value_handle (expr);\n \t    bool listchanged = false;\n+\t    bool invariantarg = false;\n \t    VEC (tree, gc) *vuses = VALUE_HANDLE_VUSES (vh);\n \t    VEC (tree, gc) *tvuses;\n \n@@ -1134,10 +1135,26 @@ phi_translate (tree expr, value_set_t set, basic_block pred,\n \t\t    if (newval != oldval)\n \t\t      {\n \t\t\tlistchanged = true;\n+\t\t\tinvariantarg |= is_gimple_min_invariant (newval);\n \t\t\tTREE_VALUE (newwalker) = get_value_handle (newval);\n \t\t      }\n \t\t  }\n \t      }\n+\n+\t    /* In case of new invariant args we might try to fold the call\n+\t       again.  */\n+\t    if (invariantarg)\n+\t      {\n+\t\ttree tmp = fold_ternary (CALL_EXPR, TREE_TYPE (expr),\n+\t\t\t\t\t newop0, newarglist, newop2);\n+\t\tif (tmp)\n+\t\t  {\n+\t\t    STRIP_TYPE_NOPS (tmp);\n+\t\t    if (is_gimple_min_invariant (tmp))\n+\t\t      return tmp;\n+\t\t  }\n+\t      }\n+\n \t    if (listchanged)\n \t      vn_lookup_or_add (newarglist, NULL);\n "}]}