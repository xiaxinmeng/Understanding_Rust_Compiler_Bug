{"sha": "4d6484dd5891ae59bdf398406771b2e8d6fe5742", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGQ2NDg0ZGQ1ODkxYWU1OWJkZjM5ODQwNjc3MWIyZThkNmZlNTc0Mg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-09-29T07:20:13Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-09-29T07:20:13Z"}, "message": "tree-vrp.c (set_defs_to_varying): New helper avoiding writing to vr_const_varying.\n\n2016-09-29  Richard Biener  <rguenther@suse.de>\n\n\t* tree-vrp.c (set_defs_to_varying): New helper avoiding\n\twriting to vr_const_varying.\n\t(vrp_initialize): Call it.\n\t(vrp_visit_stmt): Likewise.\n\t(evrp_dom_walker::before_dom_children): Likewise.\n\nFrom-SVN: r240612", "tree": {"sha": "531020100421e6bb8441d865c06b8ecc5b8d54e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/531020100421e6bb8441d865c06b8ecc5b8d54e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4d6484dd5891ae59bdf398406771b2e8d6fe5742", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d6484dd5891ae59bdf398406771b2e8d6fe5742", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d6484dd5891ae59bdf398406771b2e8d6fe5742", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d6484dd5891ae59bdf398406771b2e8d6fe5742/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea60dd34cd352452eeab30aba4b84a204f2caef5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea60dd34cd352452eeab30aba4b84a204f2caef5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea60dd34cd352452eeab30aba4b84a204f2caef5"}], "stats": {"total": 49, "additions": 29, "deletions": 20}, "files": [{"sha": "590b547456de3db592ef13cf4fcb13f75676160b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d6484dd5891ae59bdf398406771b2e8d6fe5742/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d6484dd5891ae59bdf398406771b2e8d6fe5742/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4d6484dd5891ae59bdf398406771b2e8d6fe5742", "patch": "@@ -1,3 +1,11 @@\n+2016-09-29  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-vrp.c (set_defs_to_varying): New helper avoiding\n+\twriting to vr_const_varying.\n+\t(vrp_initialize): Call it.\n+\t(vrp_visit_stmt): Likewise.\n+\t(evrp_dom_walker::before_dom_children): Likewise.\n+\n 2016-09-29  Richard Biener  <rguenther@suse.de>\n \n \t* tree-vect-stmts.c (vectorizable_load): Avoid emitting vector"}, {"sha": "dbff92f69ea8e9ca25d90b48019812aa4da0140d", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 21, "deletions": 20, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4d6484dd5891ae59bdf398406771b2e8d6fe5742/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4d6484dd5891ae59bdf398406771b2e8d6fe5742/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=4d6484dd5891ae59bdf398406771b2e8d6fe5742", "patch": "@@ -710,6 +710,23 @@ get_value_range (const_tree var)\n   return vr;\n }\n \n+/* Set value-ranges of all SSA names defined by STMT to varying.  */\n+\n+static void\n+set_defs_to_varying (gimple *stmt)\n+{\n+  ssa_op_iter i;\n+  tree def;\n+  FOR_EACH_SSA_TREE_OPERAND (def, stmt, i, SSA_OP_DEF)\n+    {\n+      value_range *vr = get_value_range (def);\n+      /* Avoid writing to vr_const_varying get_value_range may return.  */\n+      if (vr->type != VR_VARYING)\n+\tset_value_range_to_varying (vr);\n+    }\n+}\n+\n+\n /* Return true, if VAL1 and VAL2 are equal values for VRP purposes.  */\n \n static inline bool\n@@ -7022,10 +7039,7 @@ vrp_initialize ()\n \t    prop_set_simulate_again (stmt, true);\n \t  else if (!stmt_interesting_for_vrp (stmt))\n \t    {\n-\t      ssa_op_iter i;\n-\t      tree def;\n-\t      FOR_EACH_SSA_TREE_OPERAND (def, stmt, i, SSA_OP_DEF)\n-\t\tset_value_range_to_varying (get_value_range (def));\n+\t      set_defs_to_varying (stmt);\n \t      prop_set_simulate_again (stmt, false);\n \t    }\n \t  else\n@@ -7901,8 +7915,6 @@ vrp_visit_stmt (gimple *stmt, edge *taken_edge_p, tree *output_p)\n {\n   value_range vr = VR_INITIALIZER;\n   tree lhs = gimple_get_lhs (stmt);\n-  tree def;\n-  ssa_op_iter iter;\n   extract_range_from_stmt (stmt, taken_edge_p, output_p, &vr);\n \n   if (*output_p)\n@@ -7997,8 +8009,7 @@ vrp_visit_stmt (gimple *stmt, edge *taken_edge_p, tree *output_p)\n \n   /* All other statements produce nothing of interest for VRP, so mark\n      their outputs varying and prevent further simulation.  */\n-  FOR_EACH_SSA_TREE_OPERAND (def, stmt, iter, SSA_OP_DEF)\n-    set_value_range_to_varying (get_value_range (def));\n+  set_defs_to_varying (stmt);\n \n   return (*taken_edge_p) ? SSA_PROP_INTERESTING : SSA_PROP_VARYING;\n }\n@@ -10726,12 +10737,7 @@ evrp_dom_walker::before_dom_children (basic_block bb)\n \t      && (vr.type == VR_RANGE || vr.type == VR_ANTI_RANGE))\n \t    update_value_range (output, &vr);\n \t  else\n-\t    {\n-\t      tree def;\n-\t      ssa_op_iter iter;\n-\t      FOR_EACH_SSA_TREE_OPERAND (def, stmt, iter, SSA_OP_DEF)\n-\t\tset_value_range_to_varying (get_value_range (def));\n-\t    }\n+\t    set_defs_to_varying (stmt);\n \n \t  /* Try folding stmts with the VR discovered.  */\n \t  bool did_replace\n@@ -10780,12 +10786,7 @@ evrp_dom_walker::before_dom_children (basic_block bb)\n \t    }\n \t}\n       else\n-\t{\n-\t  tree def;\n-\t  ssa_op_iter iter;\n-\t  FOR_EACH_SSA_TREE_OPERAND (def, stmt, iter, SSA_OP_DEF)\n-\t    set_value_range_to_varying (get_value_range (def));\n-\t}\n+\tset_defs_to_varying (stmt);\n     }\n   bb->flags |= BB_VISITED;\n   return NULL;"}]}