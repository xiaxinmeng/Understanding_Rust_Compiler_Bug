{"sha": "619039de36a78164c67a2c62a425a444340d4a06", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjE5MDM5ZGUzNmE3ODE2NGM2N2EyYzYyYTQyNWE0NDQzNDBkNGEwNg==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-11-04T09:35:54Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2020-11-04T09:35:54Z"}, "message": "gcc-changelog/git_commit.py: Check for missing description\n\nEspecially when using mklog.py, it is simply to forget to fill in\nthe entries after the '\\t* file.c (section):' or '\\t(section):'.\n\ncontrib/ChangeLog:\n\n\t* gcc-changelog/git_commit.py (item_parenthesis_empty_regex,\n\titem_parenthesis_regex): Add.\n\t(check_for_empty_description): Use them.\n\t* gcc-changelog/test_email.py (test_emptry_entry_desc,\n\ttest_emptry_entry_desc_2): Add.\n\t* gcc-changelog/test_patches.txt: Add two testcases for it.", "tree": {"sha": "27b7da119ef29a3d5c688b3bd14fc5d67094401e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27b7da119ef29a3d5c688b3bd14fc5d67094401e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/619039de36a78164c67a2c62a425a444340d4a06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/619039de36a78164c67a2c62a425a444340d4a06", "html_url": "https://github.com/Rust-GCC/gccrs/commit/619039de36a78164c67a2c62a425a444340d4a06", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/619039de36a78164c67a2c62a425a444340d4a06/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4f6330722a26b91d07c9497ebd81efd64acbdea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4f6330722a26b91d07c9497ebd81efd64acbdea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4f6330722a26b91d07c9497ebd81efd64acbdea"}], "stats": {"total": 72, "additions": 70, "deletions": 2}, "files": [{"sha": "0008865338b05d1f3bf264c0dfca37750298c21e", "filename": "contrib/gcc-changelog/git_commit.py", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/619039de36a78164c67a2c62a425a444340d4a06/contrib%2Fgcc-changelog%2Fgit_commit.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/619039de36a78164c67a2c62a425a444340d4a06/contrib%2Fgcc-changelog%2Fgit_commit.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Fgit_commit.py?ref=619039de36a78164c67a2c62a425a444340d4a06", "patch": "@@ -155,6 +155,8 @@\n dr_regex = re.compile(r'\\tDR ([0-9]+)$')\n star_prefix_regex = re.compile(r'\\t\\*(?P<spaces>\\ *)(?P<content>.*)')\n end_of_location_regex = re.compile(r'[\\[<(:]')\n+item_empty_regex = re.compile(r'\\t(\\* \\S+ )?\\(\\S+\\):\\s*$')\n+item_parenthesis_regex = re.compile(r'\\t(\\*|\\(\\S+\\):)')\n \n LINE_LIMIT = 100\n TAB_WIDTH = 8\n@@ -490,9 +492,10 @@ def check_file_patterns(self):\n     def check_for_empty_description(self):\n         for entry in self.changelog_entries:\n             for i, line in enumerate(entry.lines):\n-                if (star_prefix_regex.match(line) and line.endswith(':') and\n+                if (item_empty_regex.match(line) and\n                     (i == len(entry.lines) - 1\n-                     or star_prefix_regex.match(entry.lines[i + 1]))):\n+                     or not entry.lines[i+1].strip()\n+                     or item_parenthesis_regex.match(entry.lines[i+1]))):\n                     msg = 'missing description of a change'\n                     self.errors.append(Error(msg, line))\n "}, {"sha": "df350a41228dc831eea79be188ac186e123aa116", "filename": "contrib/gcc-changelog/test_email.py", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/619039de36a78164c67a2c62a425a444340d4a06/contrib%2Fgcc-changelog%2Ftest_email.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/619039de36a78164c67a2c62a425a444340d4a06/contrib%2Fgcc-changelog%2Ftest_email.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_email.py?ref=619039de36a78164c67a2c62a425a444340d4a06", "patch": "@@ -370,3 +370,13 @@ def test_empty_parenthesis(self):\n         email = self.from_patch_glob('0001-tree-optimization-97633-fix')\n         assert len(email.errors) == 1\n         assert email.errors[0].message == 'empty group \"()\" found'\n+\n+    def test_emptry_entry_desc(self):\n+        email = self.from_patch_glob('0001-c-Set-CALL_FROM_NEW_OR')\n+        assert len(email.errors) == 1\n+        assert email.errors[0].message == 'missing description of a change'\n+\n+    def test_emptry_entry_desc_2(self):\n+        email = self.from_patch_glob('0001-lto-fix-LTO-debug')\n+        assert not email.errors\n+        assert len(email.changelog_entries) == 1"}, {"sha": "bc9cc2e078ee4761c3905e669b369d8eee2396cf", "filename": "contrib/gcc-changelog/test_patches.txt", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/619039de36a78164c67a2c62a425a444340d4a06/contrib%2Fgcc-changelog%2Ftest_patches.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/619039de36a78164c67a2c62a425a444340d4a06/contrib%2Fgcc-changelog%2Ftest_patches.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-changelog%2Ftest_patches.txt?ref=619039de36a78164c67a2c62a425a444340d4a06", "patch": "@@ -3235,4 +3235,59 @@ index 5d69a98c2a9..714e50697bd 100644\n -- \n \n 2.7.4\n+=== 0001-c-Set-CALL_FROM_NEW_OR_DELETE_P-on-more-calls.patch ===\n+From 4f4ced28826ece7b7b76649522ee2a9601a63b90 Mon Sep 17 00:00:00 2001\n+From: Jason Merrill <jason@redhat.com>\n+Date: Fri, 2 Oct 2020 09:00:49 +0200\n+Subject: [PATCH] c++: Set CALL_FROM_NEW_OR_DELETE_P on more calls.\n+\n+We were failing to set the flag on a delete call in a new expression, in a\n+deleting destructor, and in a coroutine.  Fixed by setting it in the\n+function that builds the call.\n+\n+2020-10-02  Jason Merril  <jason@redhat.com>\n+\n+gcc/cp/ChangeLog:\n+\t* init.c (build_new_1, build_vec_delete_1, build_delete): Not here.\n+\t(build_delete):\n+\n+---\n+ gcc/cp/init.c                  |  1 -\n+ 1 files changed, 0 insertions(+), 1 deletions(-)\n+\n+diff --git a/gcc/cp/init.c b/gcc/cp/init.c\n+index e84e985492d..00fff3f7327 100644\n+--- a/gcc/cp/init.c\n++++ b/gcc/cp/init.c\n+@@ -3436,1 +3435,0 @@ build_new_1 (vec<tree, va_gc> **placement, tree type, tree nelts,\n+-\n+-- \n+2.25.1\n+\n+=== 0001-lto-fix-LTO-debug-sections-copying.patch ===\n+From 190c04ba36d9c6c3dce41f12012aa97c6d7f22f5 Mon Sep 17 00:00:00 2001\n+From: Martin Liska <mliska@suse.cz>\n+Date: Mon, 5 Oct 2020 18:03:08 +0200\n+Subject: [PATCH] lto: fix LTO debug sections copying.\n+MIME-Version: 1.0\n+Content-Type: text/plain; charset=UTF-8\n+Content-Transfer-Encoding: 8bit\n+\n+libiberty/ChangeLog:\n+\n+\tPR lto/97290\n+\t* simple-object-elf.c (simple_object_elf_copy_lto_debug_sections):\n+\tUse sh_link of a .symtab_shndx section.\n+---\n+ libiberty/simple-object-elf.c | 1 -\n+ 1 file changed, 0 insertions(+), 1 deletions(-)\n+\n+diff --git a/libiberty/simple-object-elf.c b/libiberty/simple-object-elf.c\n+index 7c9d492f6a4..37e73348cb7 100644\n+--- a/libiberty/simple-object-elf.c\n++++ b/libiberty/simple-object-elf.c\n+@@ -1191,1 +1191,0 @@ simple_object_elf_copy_lto_debug_sections (simple_object_read *sobj,\n+- \n+-- \n+2.25.1\n "}]}