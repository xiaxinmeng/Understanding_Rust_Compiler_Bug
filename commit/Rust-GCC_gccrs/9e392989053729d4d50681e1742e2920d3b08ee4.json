{"sha": "9e392989053729d4d50681e1742e2920d3b08ee4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWUzOTI5ODkwNTM3MjlkNGQ1MDY4MWUxNzQyZTI5MjBkM2IwOGVlNA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-07-12T07:11:50Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-07-12T07:11:50Z"}, "message": "re PR tree-optimization/86479 ([graphite] ICE in gimplify_modify_expr, at gimplify.c:5756)\n\n2018-07-12  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/86479\n\t* fold-const.c (fold_binary_op_with_conditional_arg): Do not\n\tmove possibly trapping operations into the conditional.\n\n\t* gcc.dg/graphite/pr86479.c: New testcase.\n\nFrom-SVN: r262574", "tree": {"sha": "90f7429c522f65ad7aba4fa7402f5684f598d6e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/90f7429c522f65ad7aba4fa7402f5684f598d6e5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e392989053729d4d50681e1742e2920d3b08ee4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e392989053729d4d50681e1742e2920d3b08ee4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e392989053729d4d50681e1742e2920d3b08ee4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e392989053729d4d50681e1742e2920d3b08ee4/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "19353855bfc05914faaee9f297684f608fd9a485", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19353855bfc05914faaee9f297684f608fd9a485", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19353855bfc05914faaee9f297684f608fd9a485"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "c36a8a83c264a4e388ce09052431974f73ea79d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e392989053729d4d50681e1742e2920d3b08ee4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e392989053729d4d50681e1742e2920d3b08ee4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9e392989053729d4d50681e1742e2920d3b08ee4", "patch": "@@ -1,3 +1,9 @@\n+2018-07-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/86479\n+\t* fold-const.c (fold_binary_op_with_conditional_arg): Do not\n+\tmove possibly trapping operations into the conditional.\n+\n 2018-07-12  Richard Biener  <rguenther@suse.de>\n \n \t* tree-ssa-sccvn.c (mprts_hook_cnt): Remove."}, {"sha": "ac65dcfaf1deb8f656f0c94fbdf21bb5288f0949", "filename": "gcc/fold-const.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e392989053729d4d50681e1742e2920d3b08ee4/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e392989053729d4d50681e1742e2920d3b08ee4/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=9e392989053729d4d50681e1742e2920d3b08ee4", "patch": "@@ -6587,6 +6587,13 @@ fold_binary_op_with_conditional_arg (location_t loc,\n   tree rhs = NULL_TREE;\n   enum tree_code cond_code = COND_EXPR;\n \n+  /* Do not move possibly trapping operations into the conditional as this\n+     pessimizes code and causes gimplification issues when applied late.  */\n+  if (operation_could_trap_p (code, FLOAT_TYPE_P (type),\n+\t\t\t      ANY_INTEGRAL_TYPE_P (type)\n+\t\t\t      && TYPE_OVERFLOW_TRAPS (type), op1))\n+    return NULL_TREE;\n+\n   if (TREE_CODE (cond) == COND_EXPR\n       || TREE_CODE (cond) == VEC_COND_EXPR)\n     {"}, {"sha": "0958a1a57b21cbdf63788bfe9278344da50805db", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e392989053729d4d50681e1742e2920d3b08ee4/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e392989053729d4d50681e1742e2920d3b08ee4/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9e392989053729d4d50681e1742e2920d3b08ee4", "patch": "@@ -1,3 +1,8 @@\n+2018-07-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/86479\n+\t* gcc.dg/graphite/pr86479.c: New testcase.\n+\n 2018-07-11  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gcc.target/i386/avx512bw-vpcmpb-2.c (CMP): Use SIZE macro instead"}, {"sha": "7df63546c05af157c72a2c2ad0f27b7a5b0441df", "filename": "gcc/testsuite/gcc.dg/graphite/pr86479.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e392989053729d4d50681e1742e2920d3b08ee4/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr86479.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e392989053729d4d50681e1742e2920d3b08ee4/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr86479.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr86479.c?ref=9e392989053729d4d50681e1742e2920d3b08ee4", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -floop-nest-optimize -fnon-call-exceptions -fno-guess-branch-probability -fno-tree-loop-im\" } */\n+\n+__INTPTR_TYPE__ uf;\n+\n+void\n+m7 (__INTPTR_TYPE__ *aw, __INTPTR_TYPE__ ws)\n+{\n+  __INTPTR_TYPE__ *e5 = &ws;\n+\n+  if (ws < 1)\n+    {\n+      int cq = 0;\n+\n+      while (cq < 1)\n+        {\n+          int *ng;\n+          int *ud;\n+\n+          *e5 *= uf < 0;\n+\n+          for (*ng = 0; *ng < 2; ++*ng)\n+            {\n+            }\n+\n+          ws /= cq;\n+          *aw *= ws;\n+\n+          for (*ud = 0; *ud < 2; ++*ud)\n+            {\n+            }\n+        }\n+    }\n+\n+  if (ws < 2)\n+    e5 = &uf;\n+\n+  *e5 = 0;\n+}"}]}