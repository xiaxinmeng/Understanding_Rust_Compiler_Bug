{"sha": "e20efbfb7312eab0c80dd4a9f0367119620aa661", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTIwZWZiZmI3MzEyZWFiMGM4MGRkNGE5ZjAzNjcxMTk2MjBhYTY2MQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-10-18T10:54:18Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-10-18T10:54:18Z"}, "message": "re PR lto/44950 (ICE in dwarf2out_finish, at dwarf2out.c:22271)\n\n2010-10-18  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/44950\n\t* tree.c (free_lang_data_in_decl): As we clear TYPE_METHODS\n\talso clear references to entries of it.\n\n\t* g++.dg/lto/20101015-2_0.C: New testcase.\n\nFrom-SVN: r165629", "tree": {"sha": "a808bd4d531975f3bce15d194011b1c4df7d101a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a808bd4d531975f3bce15d194011b1c4df7d101a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e20efbfb7312eab0c80dd4a9f0367119620aa661", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e20efbfb7312eab0c80dd4a9f0367119620aa661", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e20efbfb7312eab0c80dd4a9f0367119620aa661", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e20efbfb7312eab0c80dd4a9f0367119620aa661/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ee1feb1499a5d8bc83e16906f2359c16443cbda7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee1feb1499a5d8bc83e16906f2359c16443cbda7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee1feb1499a5d8bc83e16906f2359c16443cbda7"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "244d20b6db1c98ee30c1f1ccbcbc2ac1f3bc7081", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e20efbfb7312eab0c80dd4a9f0367119620aa661/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e20efbfb7312eab0c80dd4a9f0367119620aa661/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e20efbfb7312eab0c80dd4a9f0367119620aa661", "patch": "@@ -1,3 +1,9 @@\n+2010-10-18  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/44950\n+\t* tree.c (free_lang_data_in_decl): As we clear TYPE_METHODS\n+\talso clear references to entries of it.\n+\n 2010-10-18  Andi Kleen  <ak@linux.intel.com>\n \n \tPR other/43448"}, {"sha": "fd169c8de61295d60d5bcbf6e2fa511df2e35387", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e20efbfb7312eab0c80dd4a9f0367119620aa661/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e20efbfb7312eab0c80dd4a9f0367119620aa661/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e20efbfb7312eab0c80dd4a9f0367119620aa661", "patch": "@@ -1,3 +1,8 @@\n+2010-10-18  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/44950\n+\t* g++.dg/lto/20101015-2_0.C: New testcase.\n+\n 2010-10-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/46019"}, {"sha": "9015f53a498f2217250bc6a11d28bea6517c8916", "filename": "gcc/testsuite/g++.dg/lto/20101015-2_0.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e20efbfb7312eab0c80dd4a9f0367119620aa661/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20101015-2_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e20efbfb7312eab0c80dd4a9f0367119620aa661/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20101015-2_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2F20101015-2_0.C?ref=e20efbfb7312eab0c80dd4a9f0367119620aa661", "patch": "@@ -0,0 +1,6 @@\n+// { dg-lto-do link }\n+// { dg-lto-options { { -flto } { -g -flto } } }\n+// { dg-extra-ld-options \"-r -nostdlib\" }\n+\n+struct Base { ~Base (); };\n+void fun(void) { struct Deriv : Base { } x; }"}, {"sha": "6d1b5a430c77710cebc9a73ff7dfc81901132e27", "filename": "gcc/tree.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e20efbfb7312eab0c80dd4a9f0367119620aa661/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e20efbfb7312eab0c80dd4a9f0367119620aa661/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=e20efbfb7312eab0c80dd4a9f0367119620aa661", "patch": "@@ -4510,6 +4510,15 @@ free_lang_data_in_decl (tree decl)\n       /* DECL_SAVED_TREE holds the GENERIC representation for DECL.\n \t At this point, it is not needed anymore.  */\n       DECL_SAVED_TREE (decl) = NULL_TREE;\n+\n+      /* Clear the abstract origin if it refers to a method.  Otherwise\n+         dwarf2out.c will ICE as we clear TYPE_METHODS and thus the\n+\t origin will not be output correctly.  */\n+      if (DECL_ABSTRACT_ORIGIN (decl)\n+\t  && DECL_CONTEXT (DECL_ABSTRACT_ORIGIN (decl))\n+\t  && RECORD_OR_UNION_TYPE_P\n+\t       (DECL_CONTEXT (DECL_ABSTRACT_ORIGIN (decl))))\n+\tDECL_ABSTRACT_ORIGIN (decl) = NULL_TREE;\n     }\n   else if (TREE_CODE (decl) == VAR_DECL)\n     {"}]}