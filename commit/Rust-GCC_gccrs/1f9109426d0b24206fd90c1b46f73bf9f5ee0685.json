{"sha": "1f9109426d0b24206fd90c1b46f73bf9f5ee0685", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY5MTA5NDI2ZDBiMjQyMDZmZDkwYzFiNDZmNzNiZjlmNWVlMDY4NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-05-15T20:23:59Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-05-15T20:23:59Z"}, "message": "re PR c++/44148 (C++ genericization/gimplification may clobber templare arguments)\n\n\tPR c++/44148\n\t* pt.c (tsubst): Unshare template argument.\n\n\t* g++.dg/torture/pr44148.C: New test.\n\nFrom-SVN: r159443", "tree": {"sha": "b24642bedeeaac78a3da5a40a0abc292d8e54a93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b24642bedeeaac78a3da5a40a0abc292d8e54a93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f9109426d0b24206fd90c1b46f73bf9f5ee0685", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f9109426d0b24206fd90c1b46f73bf9f5ee0685", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f9109426d0b24206fd90c1b46f73bf9f5ee0685", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f9109426d0b24206fd90c1b46f73bf9f5ee0685/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f4ce02c5bfc8dbfc34c3b44fde0dd324ab56e82e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4ce02c5bfc8dbfc34c3b44fde0dd324ab56e82e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4ce02c5bfc8dbfc34c3b44fde0dd324ab56e82e"}], "stats": {"total": 72, "additions": 71, "deletions": 1}, "files": [{"sha": "fda48be1907ce451ea47e97f22ceae7cef6a2c12", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9109426d0b24206fd90c1b46f73bf9f5ee0685/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9109426d0b24206fd90c1b46f73bf9f5ee0685/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1f9109426d0b24206fd90c1b46f73bf9f5ee0685", "patch": "@@ -1,3 +1,8 @@\n+2010-05-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/44148\n+\t* pt.c (tsubst): Unshare template argument.\n+\n 2010-05-15  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* decl.c: Include tree-iterator.h, as fixup for tree-inline.h changes."}, {"sha": "7a66d3678269e0d6dc5ed62ff6c9eca61d560631", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9109426d0b24206fd90c1b46f73bf9f5ee0685/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9109426d0b24206fd90c1b46f73bf9f5ee0685/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=1f9109426d0b24206fd90c1b46f73bf9f5ee0685", "patch": "@@ -10150,7 +10150,7 @@ tsubst (tree t, tree args, tsubst_flags_t complain, tree in_decl)\n \t      }\n \t    else\n \t      /* TEMPLATE_TEMPLATE_PARM or TEMPLATE_PARM_INDEX.  */\n-\t      return arg;\n+\t      return unshare_expr (arg);\n \t  }\n \n \tif (level == 1)"}, {"sha": "b41cfacc2de61dd82c65c9f114dc25bb4e463c83", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9109426d0b24206fd90c1b46f73bf9f5ee0685/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9109426d0b24206fd90c1b46f73bf9f5ee0685/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1f9109426d0b24206fd90c1b46f73bf9f5ee0685", "patch": "@@ -1,3 +1,8 @@\n+2010-05-15  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/44148\n+\t* g++.dg/torture/pr44148.C: New test.\n+\n 2010-05-15  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/c1x-anon-struct-1.c, gcc.dg/c1x-anon-struct-2.c,"}, {"sha": "a60ba9aa3a65c7b5da905d4596cf2ea2e759b9bf", "filename": "gcc/testsuite/g++.dg/torture/pr44148.C", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f9109426d0b24206fd90c1b46f73bf9f5ee0685/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr44148.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f9109426d0b24206fd90c1b46f73bf9f5ee0685/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr44148.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr44148.C?ref=1f9109426d0b24206fd90c1b46f73bf9f5ee0685", "patch": "@@ -0,0 +1,60 @@\n+// PR c++/44148\n+// { dg-do compile }\n+// { dg-options \"\" }\n+// { dg-options \"-fpic\" { target fpic } }\n+\n+template <typename T> struct S2\n+{\n+  typedef const T &t2;\n+  t2 operator* () const {}\n+};\n+template <typename T> struct S3\n+{\n+  typedef S2 <T> t5;\n+};\n+template <typename T1, typename T2> T2 foo1 (T1 x, T2 y) { y (*x); }\n+template <class T> struct S4\n+{\n+  T &operator* () const;\n+};\n+struct S7 {};\n+struct S8\n+{\n+  typedef::S3 <S4 <S7> >::t5 t6;\n+  t6 m1 () const;\n+};\n+template <class T> struct S9\n+{\n+  typedef T t3;\n+  inline t3 &operator[] (unsigned int) {}\n+};\n+template <typename T1, typename T2, typename T3, void (&T4) (const T1 &, T3 &)> struct S10\n+{\n+  S10 (T2 &x, unsigned int y = 0) : u (x), v (y) {}\n+  void operator () (const S4 <T1> &x) { T4 (*x, u[v++]); }\n+  T2 &u;\n+  unsigned int v;\n+};\n+struct S15;\n+struct S11\n+{\n+  static void m3 (const S8 &, S15 &);\n+};\n+struct S16;\n+struct S12;\n+struct S13\n+{\n+  static void m4 (const S7 &,S16 &);\n+};\n+typedef S10 <S7, S12, S16, S13::m4> t10;\n+struct S12: S9 <S16>\n+{\n+};\n+struct S15\n+{\n+  S12 p;\n+};\n+void S11::m3 (const S8 &x, S15 &y)\n+{\n+  foo1 (x.m1 (), t10 (y.p));\n+}"}]}