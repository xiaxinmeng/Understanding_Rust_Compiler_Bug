{"sha": "766dec0ecdb5e4d705c8be49a7b0e826c4356cbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzY2ZGVjMGVjZGI1ZTRkNzA1YzhiZTQ5YTdiMGU4MjZjNDM1NmNiZg==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2003-03-23T21:25:13Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2003-03-23T21:25:13Z"}, "message": "re PR c/10178 (ICE in tree_low_cst)\n\n\n\tPR c/10178\n\t* stmt.c (expand_end_case_type): Check for overflow in range when\n\tdetermining whether to use a bit-test implementation.\n\n\t* gcc.c-torture/compile/20030323-1.c: New test case.\n\nFrom-SVN: r64757", "tree": {"sha": "9759e639cd287e6895534bee594b69640a3b17b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9759e639cd287e6895534bee594b69640a3b17b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/766dec0ecdb5e4d705c8be49a7b0e826c4356cbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/766dec0ecdb5e4d705c8be49a7b0e826c4356cbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/766dec0ecdb5e4d705c8be49a7b0e826c4356cbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/766dec0ecdb5e4d705c8be49a7b0e826c4356cbf/comments", "author": null, "committer": null, "parents": [{"sha": "ef3e98869075132505d8e1e1c9deaa5fee42e0eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef3e98869075132505d8e1e1c9deaa5fee42e0eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef3e98869075132505d8e1e1c9deaa5fee42e0eb"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "9dc6621300b401e41c8361642fea6bfde6af9926", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/766dec0ecdb5e4d705c8be49a7b0e826c4356cbf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/766dec0ecdb5e4d705c8be49a7b0e826c4356cbf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=766dec0ecdb5e4d705c8be49a7b0e826c4356cbf", "patch": "@@ -1,3 +1,9 @@\n+2003-03-23  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR c/10178\n+\t* stmt.c (expand_end_case_type): Check for overflow in range when\n+\tdetermining whether to use a bit-test implementation.\n+\n 2003-03-23  Richard Henderson  <rth@redhat.com>\n \n \t* cfgcleanup.c (try_optimize_cfg): Allow merging of tablejumps"}, {"sha": "d8f36c5d7dbe63190a28135f65846f08199cc72d", "filename": "gcc/stmt.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/766dec0ecdb5e4d705c8be49a7b0e826c4356cbf/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/766dec0ecdb5e4d705c8be49a7b0e826c4356cbf/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=766dec0ecdb5e4d705c8be49a7b0e826c4356cbf", "patch": "@@ -5505,6 +5505,7 @@ expand_end_case_type (orig_index, orig_type)\n       else if (CASE_USE_BIT_TESTS\n \t       && ! TREE_CONSTANT (index_expr)\n \t       && compare_tree_int (range, GET_MODE_BITSIZE (word_mode)) < 0\n+\t       && compare_tree_int (range, 0) > 0\n \t       && lshift_cheap_p ()\n \t       && ((uniq == 1 && count >= 3)\n \t\t   || (uniq == 2 && count >= 5)"}, {"sha": "05b170ca1850e14202d605da3f792d03b81b2e98", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/766dec0ecdb5e4d705c8be49a7b0e826c4356cbf/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/766dec0ecdb5e4d705c8be49a7b0e826c4356cbf/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=766dec0ecdb5e4d705c8be49a7b0e826c4356cbf", "patch": "@@ -1,3 +1,7 @@\n+2003-03-23  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* gcc.c-torture/compile/20030323-1.c: New test case.\n+\n 2003-03-22  Ulrich Weigand  <uweigand@de.ibm.com>\n \n \t* gcc.dg/20030321-1.c: New test."}, {"sha": "8ea602deee3595696af6eef9a506a131cc51409f", "filename": "gcc/testsuite/gcc.c-torture/compile/20030323-1.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/766dec0ecdb5e4d705c8be49a7b0e826c4356cbf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030323-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/766dec0ecdb5e4d705c8be49a7b0e826c4356cbf/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030323-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20030323-1.c?ref=766dec0ecdb5e4d705c8be49a7b0e826c4356cbf", "patch": "@@ -0,0 +1,17 @@\n+/* PR c/10178.  The following code would ICE because we didn't check for\n+   overflow when computing the range of the switch-statment, and therefore\n+   decided it could be implemented using bit-tests.  */\n+\n+int\n+banana(long citron)\n+{\n+  switch (citron) {\n+    case 0x80000000:\n+    case 0x40000:\n+    case 0x40001:\n+      return 1;\n+      break;\n+  }\n+  return 0;\n+}\n+"}]}