{"sha": "74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzRiOWYyZDVjODFjMTc5OWNjOGJmMmExYjQxYzVmYmFkODhhMDEyNw==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-04-14T08:36:59Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-04-14T08:36:59Z"}, "message": "invoke.texi: Rename MIPS's -mfix-vr4122-bugs to -mfix-vr4120.\n\n\t* doc/invoke.texi: Rename MIPS's -mfix-vr4122-bugs to -mfix-vr4120.\n\t* config/mips/mips.h (MASK_FIX_VR4120): Renamed from MASK_FIX_VR4122.\n\t(TARGET_FIX_VR4120): Likewise TARGET_FIX_VR4122.\n\t(TARGET_SWITCHES): Replace -mfix-vr4122-bugs with -mfix-vr4120.\n\t(ASM_SPEC): Update accordingly.\n\t* config/mips/mips.c: Update after above renaming.\n\t* config/mips/mips.md, config/mips/t-vr, config/mips/vr.h: Likewise.\n\t* config/mips/vr4120-div.S: Renamed from vr4122-div.S.\n\nFrom-SVN: r80679", "tree": {"sha": "8868a5d185e1a4c794304d3bfc4711819a15e8dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8868a5d185e1a4c794304d3bfc4711819a15e8dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127/comments", "author": null, "committer": null, "parents": [{"sha": "540554f44fa5a31cdf56adcdee023a065d0f211b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/540554f44fa5a31cdf56adcdee023a065d0f211b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/540554f44fa5a31cdf56adcdee023a065d0f211b"}], "stats": {"total": 109, "additions": 60, "deletions": 49}, "files": [{"sha": "b749c71f19d451a681eb34a475d082da205eab3e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127", "patch": "@@ -1,3 +1,14 @@\n+2004-04-14  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* doc/invoke.texi: Rename MIPS's -mfix-vr4122-bugs to -mfix-vr4120.\n+\t* config/mips/mips.h (MASK_FIX_VR4120): Renamed from MASK_FIX_VR4122.\n+\t(TARGET_FIX_VR4120): Likewise TARGET_FIX_VR4122.\n+\t(TARGET_SWITCHES): Replace -mfix-vr4122-bugs with -mfix-vr4120.\n+\t(ASM_SPEC): Update accordingly.\n+\t* config/mips/mips.c: Update after above renaming.\n+\t* config/mips/mips.md, config/mips/t-vr, config/mips/vr.h: Likewise.\n+\t* config/mips/vr4120-div.S: Renamed from vr4122-div.S.\n+\n 2004-04-13  James E Wilson  <wilson@specifixinc.com>\n \n \t* c-opt.c (c_common_post_options): If this_input_filename is NULL,"}, {"sha": "b8d27a3c39f47e4543b58112dc775655bfb42287", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127", "patch": "@@ -8721,10 +8721,10 @@ mips_avoid_hazards (void)\n   cfun->machine->ignore_hazard_length_p = true;\n   shorten_branches (get_insns ());\n \n-  /* The profiler code uses assembler macros.  -mfix-vr4122-bugs\n-     relies on assembler nop insertion.  */\n+  /* The profiler code uses assembler macros.  -mfix-vr4120 relies on\n+     assembler nop insertion.  */\n   cfun->machine->all_noreorder_p = (!current_function_profile\n-\t\t\t\t    && !TARGET_FIX_VR4122);\n+\t\t\t\t    && !TARGET_FIX_VR4120);\n \n   last_insn = 0;\n   hilo_delay = 2;\n@@ -8764,7 +8764,7 @@ mips_reorg (void)\n \n /* This function does three things:\n \n-   - Register the special divsi3 and modsi3 functions if -mfix-vr4122-bugs.\n+   - Register the special divsi3 and modsi3 functions if -mfix-vr4120.\n    - Register the mips16 hardware floating point stubs.\n    - Register the gofast functions if selected using --enable-gofast.  */\n \n@@ -8773,10 +8773,10 @@ mips_reorg (void)\n static void\n mips_init_libfuncs (void)\n {\n-  if (TARGET_FIX_VR4122)\n+  if (TARGET_FIX_VR4120)\n     {\n-      set_optab_libfunc (sdiv_optab, SImode, \"__vr4122_divsi3\");\n-      set_optab_libfunc (smod_optab, SImode, \"__vr4122_modsi3\");\n+      set_optab_libfunc (sdiv_optab, SImode, \"__vr4120_divsi3\");\n+      set_optab_libfunc (smod_optab, SImode, \"__vr4120_modsi3\");\n     }\n \n   if (TARGET_MIPS16 && mips16_hard_float)"}, {"sha": "c4b7769db5150019f412c02973ebc27e5599545a", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127", "patch": "@@ -173,7 +173,7 @@ extern const struct mips_cpu_info *mips_tune_info;\n #define MASK_FIX_R4000\t   0x01000000\t/* Work around R4000 errata.  */\n #define MASK_FIX_R4400\t   0x02000000\t/* Work around R4400 errata.  */\n #define MASK_FIX_SB1\t   0x04000000\t/* Work around SB-1 errata.  */\n-#define MASK_FIX_VR4122\t   0x08000000   /* Work-around VR4122 errata.  */\n+#define MASK_FIX_VR4120\t   0x08000000   /* Work around VR4120 errata.  */\n \n \t\t\t\t\t/* Debug switches, not documented */\n #define MASK_DEBUG\t0\t\t/* unused */\n@@ -257,7 +257,7 @@ extern const struct mips_cpu_info *mips_tune_info;\n \n \t\t\t\t\t/* Work around R4400 errata.  */\n #define TARGET_FIX_R4400\t(target_flags & MASK_FIX_R4400)\n-#define TARGET_FIX_VR4122\t(target_flags & MASK_FIX_VR4122)\n+#define TARGET_FIX_VR4120\t(target_flags & MASK_FIX_VR4120)\n \n /* True if we should use NewABI-style relocation operators for\n    symbolic addresses.  This is never true for mips16 code,\n@@ -608,10 +608,10 @@ extern const struct mips_cpu_info *mips_tune_info;\n      N_(\"Work around R4400 errata\")},\t\t\t\t\t\\\n   {\"no-fix-r4400\",\t -MASK_FIX_R4400,\t\t\t\t\\\n      N_(\"Don't work around R4400 errata\")},\t\t\t\t\\\n-  {\"fix-vr4122-bugs\",     MASK_FIX_VR4122,\t\t\t\t\\\n-     N_(\"Work around certain VR4122 errata\")},\t\t\t\t\\\n-  {\"no-fix-vr4122-bugs\", -MASK_FIX_VR4122,\t\t\t\t\\\n-     N_(\"Don't work around certain VR4122 errata\")},\t\t\t\\\n+  {\"fix-vr4120\",\t  MASK_FIX_VR4120,\t\t\t\t\\\n+     N_(\"Work around certain VR4120 errata\")},\t\t\t\t\\\n+  {\"no-fix-vr4120\",\t -MASK_FIX_VR4120,\t\t\t\t\\\n+     N_(\"Don't work around certain VR4120 errata\")},\t\t\t\\\n   {\"check-zero-division\",-MASK_NO_CHECK_ZERO_DIV,\t\t\t\\\n      N_(\"Trap on integer divide by zero\")},\t\t\t\t\\\n   {\"no-check-zero-division\", MASK_NO_CHECK_ZERO_DIV,\t\t\t\\\n@@ -1115,7 +1115,7 @@ extern const struct mips_cpu_info *mips_tune_info;\n %{G*} %(endian_spec) %{mips1} %{mips2} %{mips3} %{mips4} \\\n %{mips32} %{mips32r2} %{mips64} \\\n %{mips16:%{!mno-mips16:-mips16}} %{mno-mips16:-no-mips16} \\\n-%{mfix-vr4122-bugs} \\\n+%{mfix-vr4120} \\\n %(subtarget_asm_optimizing_spec) \\\n %(subtarget_asm_debugging_spec) \\\n %{membedded-pic} \\"}, {"sha": "fdf3f96fef062304848b4bbc86c0b49513bc9e37", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127", "patch": "@@ -212,19 +212,19 @@\n \t       (ne (symbol_ref \"TARGET_MIPS16\") (const_int 0)))\n \t  (const_int 8)\n \n-\t  ;; Various VR4122 errata require a nop to be inserted after a macc\n+\t  ;; Various VR4120 errata require a nop to be inserted after a macc\n \t  ;; instruction.  The assembler does this for us, so account for\n \t  ;; the worst-case length here.\n \t  (and (eq_attr \"type\" \"imadd\")\n-\t       (ne (symbol_ref \"TARGET_FIX_VR4122\") (const_int 0)))\n+\t       (ne (symbol_ref \"TARGET_FIX_VR4120\") (const_int 0)))\n \t  (const_int 8)\n \n-\t  ;; VR4122 errata MD(4): if there are consecutive dmult instructions,\n+\t  ;; VR4120 errata MD(4): if there are consecutive dmult instructions,\n \t  ;; the result of the second one is missed.  The assembler should work\n \t  ;; around this by inserting a nop after the first dmult.\n \t  (and (eq_attr \"type\" \"imul\")\n \t       (and (eq_attr \"mode\" \"DI\")\n-\t\t    (ne (symbol_ref \"TARGET_FIX_VR4122\") (const_int 0))))\n+\t\t    (ne (symbol_ref \"TARGET_FIX_VR4120\") (const_int 0))))\n \t  (const_int 8)\n \n \t  (eq_attr \"type\" \"idiv\")\n@@ -2315,8 +2315,8 @@\n   [(set_attr \"type\"\t\"imul\")\n    (set_attr \"mode\"\t\"DI\")])\n \n-;; Disable this pattern for -mfix-vr4122-bugs.  This is for VR4122 errata\n-;; MD(0), which says that dmultu does not always produce the correct result.\n+;; Disable this pattern for -mfix-vr4120.  This is for VR4120 errata MD(0),\n+;; which says that dmultu does not always produce the correct result.\n (define_insn \"umuldi3_highpart\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=h\")\n \t(truncate:DI\n@@ -2326,7 +2326,7 @@\n \t   (zero_extend:TI (match_operand:DI 2 \"register_operand\" \"d\")))\n \t  (const_int 64))))\n    (clobber (match_scratch:DI 3 \"=l\"))]\n-  \"TARGET_64BIT && !TARGET_FIX_R4000 && !TARGET_FIX_VR4122\"\n+  \"TARGET_64BIT && !TARGET_FIX_R4000 && !TARGET_FIX_VR4120\"\n   \"dmultu\\t%1,%2\"\n   [(set_attr \"type\"\t\"imul\")\n    (set_attr \"mode\"\t\"DI\")])\n@@ -2600,7 +2600,7 @@\n                       (const_int 8)\n                       (const_int 4)))])\n \n-;; VR4122 errata MD(A1): signed division instructions do not work correctly\n+;; VR4120 errata MD(A1): signed division instructions do not work correctly\n ;; with negative operands.  We use special libgcc functions instead.\n (define_insn \"divmodsi4\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=l\")\n@@ -2609,7 +2609,7 @@\n    (set (match_operand:SI 3 \"register_operand\" \"=h\")\n \t(mod:SI (match_dup 1)\n \t\t(match_dup 2)))]\n-  \"!TARGET_FIX_VR4122\"\n+  \"!TARGET_FIX_VR4120\"\n   { return mips_output_division (\"div\\t$0,%1,%2\", operands); }\n   [(set_attr \"type\"\t\"idiv\")\n    (set_attr \"mode\"\t\"SI\")])\n@@ -2621,7 +2621,7 @@\n    (set (match_operand:DI 3 \"register_operand\" \"=h\")\n \t(mod:DI (match_dup 1)\n \t\t(match_dup 2)))]\n-  \"TARGET_64BIT && !TARGET_FIX_VR4122\"\n+  \"TARGET_64BIT && !TARGET_FIX_VR4120\"\n   { return mips_output_division (\"ddiv\\t$0,%1,%2\", operands); }\n   [(set_attr \"type\"\t\"idiv\")\n    (set_attr \"mode\"\t\"DI\")])"}, {"sha": "dd4affe57e4ea9d2ed33970b84b63f74d9bd084c", "filename": "gcc/config/mips/t-vr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127/gcc%2Fconfig%2Fmips%2Ft-vr", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127/gcc%2Fconfig%2Fmips%2Ft-vr", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Ft-vr?ref=74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127", "patch": "@@ -8,7 +8,7 @@ CRTSTUFF_T_CFLAGS = -G 0\n TARGET_LIBGCC2_CFLAGS = -G 0\n \n LIB2FUNCS_STATIC_EXTRA = $(srcdir)/config/mips/mips16.S \\\n-\t\t\t $(srcdir)/config/mips/vr4122-div.S\n+\t\t\t $(srcdir)/config/mips/vr4120-div.S\n EXTRA_MULTILIB_PARTS = crtbegin.o crtend.o crti.o crtn.o\n \n # Assemble startup files.\n@@ -34,7 +34,7 @@ $(T)crtn.o: $(srcdir)/config/mips/crtn.asm $(GCC_PASSES)\n #\tmabi=eabi/mgp32\n #\tmabi=eabi/mgp32/mlong64\n #\n-# Architecture: march=vr4120 with -mfix-vr4122-bugs\n+# Architecture: march=vr4120 with -mfix-vr4120\n #\t\tmarch=vr4130 (default)\n #\t\tmarch=vr5000\n #\t\tmarch=vr5400\n@@ -64,7 +64,7 @@ $(T)crtn.o: $(srcdir)/config/mips/crtn.asm $(GCC_PASSES)\n #\tmabi=eabi/mlong32\n #\tmabi=eabi/mgp32\n #\n-# Architecture: march=vr4120 with -mfix-vr4122-bugs\n+# Architecture: march=vr4120 with -mfix-vr4120\n #\t\tmarch=vr4130 (default)\n #\n # Total: 2 * 3 * 2 = 12 multilibs.\n@@ -74,7 +74,7 @@ MULTILIB_OPTIONS =\t\t\t\\\n \tmgp32\t\t\t\t\\\n \tmlong64\t\t\t\t\\\n \tmips16\t\t\t\t\\\n-\tmfix-vr4122-bugs/march=vr4130/march=vr4300/march=vr5000/march=vr5400/march=vr5500\n+\tmfix-vr4120/march=vr4130/march=vr4300/march=vr5000/march=vr5400/march=vr5500\n \n MULTILIB_DIRNAMES =\t\\\n \tel eb\t\t\\\n@@ -84,7 +84,7 @@ MULTILIB_DIRNAMES =\t\\\n \tmips16\t\t\\\n \tvr4120 vr4130 vr4300 vr5000 vr5400 vr5500\n \n-MULTILIB_MATCHES = EL=mel EB=meb mfix-vr4122-bugs=march?vr4120\n+MULTILIB_MATCHES = EL=mel EB=meb mfix-vr4120=march?vr4120\n \n # Assume a 41xx-series is the default: we'd need a *mips16 entry if\n # the default processor didn't support mips16.  Also assume the"}, {"sha": "38f7e12942995a4c9e2d95ceecf54cb2e2911f11", "filename": "gcc/config/mips/vr.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127/gcc%2Fconfig%2Fmips%2Fvr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127/gcc%2Fconfig%2Fmips%2Fvr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fvr.h?ref=74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127", "patch": "@@ -28,10 +28,10 @@ the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \t  \"march=\" DEFAULT_VR_ARCH }\n \n #define DRIVER_SELF_SPECS \\\n-\t/* Make -mfix-vr4122-bugs imply -march=vr4120.  This cuts down\t\\\n+\t/* Make -mfix-vr4120 imply -march=vr4120.  This cuts down\t\\\n \t   on command-line tautology and makes it easier for t-vr to\t\\\n-\t   provide a -mfix-vr4122-bugs multilib.  */\t\t\t\\\n-\t\"%{mfix-vr4122-bugs:%{!march=*:-march=vr4120}}\",\t\t\\\n+\t   provide a -mfix-vr4120 multilib.  */\t\t\t\t\\\n+\t\"%{mfix-vr4120:%{!march=*:-march=vr4120}}\",\t\t\t\\\n \t\t\t\t\t\t\t\t\t\\\n \t/* Make -mabi=eabi -mlong32 the default.  */\t\t\t\\\n \t\"%{!mabi=*:-mabi=eabi %{!mlong*:-mlong32}}\",\t\t\t\\"}, {"sha": "d7ee40e3043ff957d3aa7713d640920d693664df", "filename": "gcc/config/mips/vr4120-div.S", "status": "renamed", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127/gcc%2Fconfig%2Fmips%2Fvr4120-div.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127/gcc%2Fconfig%2Fmips%2Fvr4120-div.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fvr4120-div.S?ref=74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127", "patch": "@@ -1,4 +1,4 @@\n-/* Support file for -mfix-vr4122-bugs.\n+/* Support file for -mfix-vr4120.\n    Copyright (C) 2002, 2004 Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -19,8 +19,8 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n /* This file contains functions which implement divsi3 and modsi3 for\n-   -mfix-vr4122-bugs.  div and ddiv do not give the correct result\n-   when one of the operands is negative.  */\n+   -mfix-vr4120.  div and ddiv do not give the correct result when one\n+   of the operands is negative.  */\n \n \t.set\tnomips16\n \n@@ -54,16 +54,16 @@ Boston, MA 02111-1307, USA.  */\n \t.set\treorder;\t\t\t\t\t\t\\\n 4:\n \n-\t.globl\t__vr4122_divsi3\n-\t.ent\t__vr4122_divsi3\n-__vr4122_divsi3:\n+\t.globl\t__vr4120_divsi3\n+\t.ent\t__vr4120_divsi3\n+__vr4120_divsi3:\n \tDIV\n \tj\t$31\n-\t.end\t__vr4122_divsi3\n+\t.end\t__vr4120_divsi3\n \n-\t.globl\t__vr4122_modsi3\n-\t.ent\t__vr4122_modsi3\n-__vr4122_modsi3:\n+\t.globl\t__vr4120_modsi3\n+\t.ent\t__vr4120_modsi3\n+__vr4120_modsi3:\n \tmove\t$6,$4\t\t# x1 = x\n \tmove\t$7,$5\t\t# y1 = y\n \tDIV\n@@ -72,4 +72,4 @@ __vr4122_modsi3:\n \t.set\tnoreorder\n \tj\t$31\n \tsubu\t$2,$6,$2\t# r = x1 - r  in delay slot\n-\t.end\t__vr4122_modsi3\n+\t.end\t__vr4120_modsi3", "previous_filename": "gcc/config/mips/vr4122-div.S"}, {"sha": "60611f22c1593a20c73f267becf6edddc4778bd2", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=74b9f2d5c81c1799cc8bf2a1b41c5fbad88a0127", "patch": "@@ -480,7 +480,7 @@ in the following sections.\n -mmemcpy  -mno-memcpy  -mlong-calls  -mno-long-calls @gol\n -mmad  -mno-mad  -mfused-madd  -mno-fused-madd  -nocpp @gol\n -mfix-r4000  -mno-fix-r4000  -mfix-r4400  -mno-fix-r4400 @gol\n--mfix-vr4122-bugs  -mno-fix-vr4122-bugs  -mfix-sb1  -mno-fix-sb1 @gol\n+-mfix-vr4120  -mno-fix-vr4120  -mfix-sb1  -mno-fix-sb1 @gol\n -mflush-func=@var{func}  -mno-flush-func @gol\n -mbranch-likely  -mno-branch-likely}\n \n@@ -8125,10 +8125,10 @@ A double-word or a variable shift may give an incorrect result if executed\n immediately after starting an integer division.\n @end itemize\n \n-@item -mfix-vr4122-bugs\n-@itemx -mno-fix-vr4122-bugs\n-@opindex mfix-vr4122-bugs\n-Work around certain VR4122 errata:\n+@item -mfix-vr4120\n+@itemx -mno-fix-vr4120\n+@opindex mfix-vr4120\n+Work around certain VR4120 errata:\n @itemize @minus\n @item\n @code{dmultu} does not always produce the correct result.\n@@ -8140,7 +8140,7 @@ The workarounds for the division errata rely on special functions in\n @file{libgcc.a}.  At present, these functions are only provided by\n the @code{mips64vr*-elf} configurations.\n \n-Other VR4122 errata require a nop to be inserted between certain pairs of\n+Other VR4120 errata require a nop to be inserted between certain pairs of\n instructions.  These errata are handled by the assembler, not by GCC itself.\n \n @item -mfix-sb1"}]}