{"sha": "ad7792059805b4af7f537a0e633384f4e742e8e3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ3NzkyMDU5ODA1YjRhZjdmNTM3YTBlNjMzMzg0ZjRlNzQyZThlMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2016-03-21T23:03:56Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2016-03-21T23:03:56Z"}, "message": "re PR middle-end/70273 (FAIL: g++.dg/ext/label13a.C  -std=gnu++98 execution test / scan-assembler _ZN1CC4Ev)\n\nPR c++/70273\n\n  * decl.c (notice_forced_label_r): New.\n  (cp_finish_decl): Use it.\n\nFrom-SVN: r234386", "tree": {"sha": "a62196dcf82b75616ce85858148ac434e258be39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a62196dcf82b75616ce85858148ac434e258be39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad7792059805b4af7f537a0e633384f4e742e8e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad7792059805b4af7f537a0e633384f4e742e8e3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad7792059805b4af7f537a0e633384f4e742e8e3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad7792059805b4af7f537a0e633384f4e742e8e3/comments", "author": null, "committer": null, "parents": [{"sha": "683b810150a0250e65a7640e183aa4339313b34c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/683b810150a0250e65a7640e183aa4339313b34c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/683b810150a0250e65a7640e183aa4339313b34c"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "c8919f9437ed4466869535fef6629ec82b4cf406", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7792059805b4af7f537a0e633384f4e742e8e3/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7792059805b4af7f537a0e633384f4e742e8e3/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ad7792059805b4af7f537a0e633384f4e742e8e3", "patch": "@@ -1,3 +1,9 @@\n+2016-03-21  Richard Henderson  <rth@redhat.com>\n+\n+\tPR c++/70273\n+        * decl.c (notice_forced_label_r): New.\n+        (cp_finish_decl): Use it.\n+\n 2016-03-21  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/70285"}, {"sha": "47a53cb9f2d97297114839f77e8f30ca87fb4821", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 24, "deletions": 7, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad7792059805b4af7f537a0e633384f4e742e8e3/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad7792059805b4af7f537a0e633384f4e742e8e3/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=ad7792059805b4af7f537a0e633384f4e742e8e3", "patch": "@@ -6499,6 +6499,19 @@ is_concept_var (tree decl)\n           && DECL_DECLARED_CONCEPT_P (decl));\n }\n \n+/* A helper function to be called via walk_tree.  If any label exists\n+   under *TP, it is (going to be) forced.  Set has_forced_label_in_static.  */\n+\n+static tree\n+notice_forced_label_r (tree *tp, int *walk_subtrees, void *)\n+{\n+  if (TYPE_P (*tp))\n+    *walk_subtrees = 0;\n+  if (TREE_CODE (*tp) == LABEL_DECL)\n+    cfun->has_forced_label_in_static = 1;\n+  return NULL_TREE;\n+}\n+\n /* Finish processing of a declaration;\n    install its line number and initial value.\n    If the length of an array type is not known before,\n@@ -6744,13 +6757,17 @@ cp_finish_decl (tree decl, tree init, bool init_const_expr_p,\n \t  && !DECL_ARTIFICIAL (decl))\n \t{\n \t  push_local_name (decl);\n-\t  if (DECL_CONSTRUCTOR_P (current_function_decl)\n-\t      || DECL_DESTRUCTOR_P (current_function_decl))\n-\t    /* Normally local_decls is populated during GIMPLE lowering,\n-\t       but [cd]tors are never actually compiled directly.  We need\n-\t       to put statics on the list so we can deal with the label\n-\t       address extension.  FIXME.  */\n-\t    add_local_decl (cfun, decl);\n+\t  /* Normally has_forced_label_in_static is set during GIMPLE\n+\t     lowering, but [cd]tors are never actually compiled directly.\n+\t     We need to set this early so we can deal with the label\n+\t     address extension.  */\n+\t  if ((DECL_CONSTRUCTOR_P (current_function_decl)\n+\t       || DECL_DESTRUCTOR_P (current_function_decl))\n+\t      && init)\n+\t    {\n+\t      walk_tree (&init, notice_forced_label_r, NULL, NULL);\n+\t      add_local_decl (cfun, decl);\n+\t    }\n \t  /* And make sure it's in the symbol table for\n \t     c_parse_final_cleanups to find.  */\n \t  varpool_node::get_create (decl);"}]}