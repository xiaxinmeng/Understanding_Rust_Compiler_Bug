{"sha": "0249ef0bfafd5c8ffc2fcf368199dd62b91ea55e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI0OWVmMGJmYWZkNWM4ZmZjMmZjZjM2ODE5OWRkNjJiOTFlYTU1ZQ==", "commit": {"author": {"name": "David Wohlferd", "email": "dw@LimeGreenSocks.com", "date": "2016-03-18T19:12:10Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2016-03-18T19:12:10Z"}, "message": "David Wohlferd's patch to document more issues with basic asms\n\n\t* doc/extend.texi: Document more potential problems with basic asms.\n\nFrom-SVN: r234343", "tree": {"sha": "e19b730f7870825336c7856d8152ce2f26a4793c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e19b730f7870825336c7856d8152ce2f26a4793c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0249ef0bfafd5c8ffc2fcf368199dd62b91ea55e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0249ef0bfafd5c8ffc2fcf368199dd62b91ea55e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0249ef0bfafd5c8ffc2fcf368199dd62b91ea55e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0249ef0bfafd5c8ffc2fcf368199dd62b91ea55e/comments", "author": null, "committer": null, "parents": [{"sha": "5c6a601cd2eac3730d4e00a0c1fe0b3cdb5fc1b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c6a601cd2eac3730d4e00a0c1fe0b3cdb5fc1b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c6a601cd2eac3730d4e00a0c1fe0b3cdb5fc1b4"}], "stats": {"total": 42, "additions": 31, "deletions": 11}, "files": [{"sha": "9aee1f0f834eac1dc5bddfd7d80817c0ad52a92d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0249ef0bfafd5c8ffc2fcf368199dd62b91ea55e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0249ef0bfafd5c8ffc2fcf368199dd62b91ea55e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0249ef0bfafd5c8ffc2fcf368199dd62b91ea55e", "patch": "@@ -1,3 +1,8 @@\n+2016-03-16  David Wohlferd  <dw@LimeGreenSocks.com>\n+            Bernd Schmidt  <bschmidt@redhat.com>\n+\n+\t* doc/extend.texi: Document more potential problems with basic asms.\n+\n 2016-03-18  Bernd Schmidt  <bschmidt@redhat.com>\n \n \tPR rtl-optimization/70278\n@@ -42,7 +47,7 @@\n \tdefine_constraint for \"Q\" and \"T\" constraints.\n \n 2016-03-17  Evandro Menezes  <e.menezes@samsung.com>\n-\t\n+\n \tTweak the pipeline model for Exynos M1\n \n \t* config/aarch64/aarch64.c (exynosm1_tunings): \tEnable weak prefetching\n@@ -227,19 +232,19 @@\n \n \tPR rtl-optimization/69032\n \t* sel-sched-ir.c (get_seqno_by_preds): Include both insn and head when\n-\tlooping backwards over basic block insns. \n+\tlooping backwards over basic block insns.\n \n 2016-03-15  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR target/66660\n \t* sel-sched-ir.c (merge_expr): Avoid changing the speculative pattern\n-\tto non-speculative when propagating trap bits. \n+\tto non-speculative when propagating trap bits.\n \n 2016-03-15  Andrey Belevantsev  <abel@ispras.ru>\n \n \tPR rtl-optimization/63384\n \t* sel-sched.c (invoke_aftermath_hooks): Do not decrease issue_more on\n-\tDEBUG_INSN_P insns. \n+\tDEBUG_INSN_P insns.\n \n 2016-03-15  Andrey Belevantsev  <abel@ispras.ru>\n "}, {"sha": "623a5d0c85b8bb10deb203040967791cf473d6bf", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0249ef0bfafd5c8ffc2fcf368199dd62b91ea55e/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0249ef0bfafd5c8ffc2fcf368199dd62b91ea55e/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=0249ef0bfafd5c8ffc2fcf368199dd62b91ea55e", "patch": "@@ -7452,10 +7452,10 @@ note that some assembler dialects use semicolons to start a comment.\n @end table\n \n @subsubheading Remarks\n-Using extended @code{asm} typically produces smaller, safer, and more\n-efficient code, and in most cases it is a better solution than basic\n-@code{asm}.  However, there are two situations where only basic @code{asm}\n-can be used:\n+Using extended @code{asm} (@pxref{Extended Asm}) typically produces\n+smaller, safer, and more efficient code, and in most cases it is a\n+better solution than basic @code{asm}.  However, there are two\n+situations where only basic @code{asm} can be used:\n \n @itemize @bullet\n @item\n@@ -7492,9 +7492,24 @@ assembly code when optimizing. This can lead to unexpected duplicate\n symbol errors during compilation if your assembly code defines symbols or \n labels.\n \n-Since GCC does not parse the @var{AssemblerInstructions}, it has no \n-visibility of any symbols it references. This may result in GCC discarding \n-those symbols as unreferenced.\n+@strong{Warning:} The C standards do not specify semantics for @code{asm},\n+making it a potential source of incompatibilities between compilers.  These\n+incompatibilities may not produce compiler warnings/errors.\n+\n+GCC does not parse basic @code{asm}'s @var{AssemblerInstructions}, which\n+means there is no way to communicate to the compiler what is happening\n+inside them.  GCC has no visibility of symbols in the @code{asm} and may\n+discard them as unreferenced.  It also does not know about side effects of\n+the assembler code, such as modifications to memory or registers.  Unlike\n+some compilers, GCC assumes that no changes to either memory or registers\n+occur.  This assumption may change in a future release.\n+\n+To avoid complications from future changes to the semantics and the\n+compatibility issues between compilers, consider replacing basic @code{asm}\n+with extended @code{asm}.  See\n+@uref{https://gcc.gnu.org/wiki/ConvertBasicAsmToExtended, How to convert\n+from basic asm to extended asm} for information about how to perform this\n+conversion.\n \n The compiler copies the assembler instructions in a basic @code{asm} \n verbatim to the assembly language output file, without "}]}