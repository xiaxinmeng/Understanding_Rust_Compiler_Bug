{"sha": "4cb1c1c3965ebfe93001af017164066506454ebd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGNiMWMxYzM5NjVlYmZlOTMwMDFhZjAxNzE2NDA2NjUwNjQ1NGViZA==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2006-11-02T17:01:01Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2006-11-02T17:01:01Z"}, "message": "* gnu/classpath/jdwp/natVMMethod.cc (getLineTable): Implement.\n\nFrom-SVN: r118420", "tree": {"sha": "c873400782a835ca01b0875ee3b7622f21122be8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c873400782a835ca01b0875ee3b7622f21122be8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4cb1c1c3965ebfe93001af017164066506454ebd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cb1c1c3965ebfe93001af017164066506454ebd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4cb1c1c3965ebfe93001af017164066506454ebd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4cb1c1c3965ebfe93001af017164066506454ebd/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "081070150cf25a38e0b683af43244ed27723d1dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/081070150cf25a38e0b683af43244ed27723d1dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/081070150cf25a38e0b683af43244ed27723d1dc"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "cdbf3da458a2c3a8c8f23c0fb7f82a7e13539dee", "filename": "libjava/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cb1c1c3965ebfe93001af017164066506454ebd/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cb1c1c3965ebfe93001af017164066506454ebd/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=4cb1c1c3965ebfe93001af017164066506454ebd", "patch": "@@ -1,3 +1,7 @@\n+2006-11-02  Keith Seitz  <keiths@redhat.com>\n+\n+\t* gnu/classpath/jdwp/natVMMethod.cc (getLineTable): Implement.\n+\n 2006-11-02  Keith Seitz  <keiths@redhat.com>\n \n \t* jvmti.cc (_Jv_JVMTI_GetLineNumberTable): New function."}, {"sha": "7dea47477312527841d7f79d820ea3dd10a2d963", "filename": "libjava/gnu/classpath/jdwp/natVMMethod.cc", "status": "modified", "additions": 38, "deletions": 2, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4cb1c1c3965ebfe93001af017164066506454ebd/libjava%2Fgnu%2Fclasspath%2Fjdwp%2FnatVMMethod.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4cb1c1c3965ebfe93001af017164066506454ebd/libjava%2Fgnu%2Fclasspath%2Fjdwp%2FnatVMMethod.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fclasspath%2Fjdwp%2FnatVMMethod.cc?ref=4cb1c1c3965ebfe93001af017164066506454ebd", "patch": "@@ -10,8 +10,10 @@ details.  */\n \n #include <config.h>\n #include <gcj/cni.h>\n+#include <java-interp.h>\n \n #include <gnu/classpath/jdwp/VMMethod.h>\n+#include <gnu/classpath/jdwp/exception/JdwpInternalErrorException.h>\n #include <gnu/classpath/jdwp/util/LineTable.h>\n #include <gnu/classpath/jdwp/util/VariableTable.h>\n \n@@ -33,10 +35,44 @@ gnu::classpath::jdwp::VMMethod::getModifiers ()\n   return 0;\n }\n \n-gnu::classpath::jdwp::util::LineTable*\n+gnu::classpath::jdwp::util::LineTable *\n gnu::classpath::jdwp::VMMethod::getLineTable ()\n {\n-  return NULL;\n+  if (!_Jv_IsInterpretedClass (getDeclaringClass ()))\n+    {\n+      // this should not happen\n+      ::java::lang::String *msg = JvNewStringLatin1 (\"native class\");\n+      throw new exception::JdwpInternalErrorException (msg);\n+    }\n+\n+  jmethodID desired_method = reinterpret_cast<jmethodID> (_methodId);\n+\n+  _Jv_MethodBase *theMethod\n+    = _Jv_FindInterpreterMethod (getDeclaringClass (), desired_method);\n+\n+  if (theMethod == NULL)\n+    {\n+      // this should not happen\n+      ::java::lang::String *msg\n+\t= JvNewStringLatin1 (\"could not find method in class\");\n+      throw new exception::JdwpInternalErrorException (msg);\n+    }\n+\n+  if (::java::lang::reflect::Modifier::isNative (desired_method->accflags))\n+    {\n+      jintArray lines = JvNewIntArray (0);\n+      jlongArray indices = JvNewLongArray (0);\n+      return new util::LineTable (-1, -1, lines, indices);\n+    }\n+\n+  // get the linetable\n+  _Jv_InterpMethod *imeth = reinterpret_cast<_Jv_InterpMethod *> (theMethod);\n+  jlong start;\n+  jlong end;\n+  jintArray lines;\n+  jlongArray indices;\n+  imeth->get_line_table (start, end, lines, indices);\n+  return new util::LineTable (start, end, lines, indices);\n }\n \n "}]}