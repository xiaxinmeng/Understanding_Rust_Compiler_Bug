{"sha": "6933647a67798a3ef9c0d9918aa9d5e6f47ad902", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjkzMzY0N2E2Nzc5OGEzZWY5YzBkOTkxOGFhOWQ1ZTZmNDdhZDkwMg==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2002-06-04T02:36:36Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2002-06-04T02:36:36Z"}, "message": "* config/alpha/alpha-protos.h: Eliminate unneeded ifdefs.\n\nFrom-SVN: r54227", "tree": {"sha": "87b454ea3e1e902966d46ba4dbd02d93f6f20c27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/87b454ea3e1e902966d46ba4dbd02d93f6f20c27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6933647a67798a3ef9c0d9918aa9d5e6f47ad902", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6933647a67798a3ef9c0d9918aa9d5e6f47ad902", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6933647a67798a3ef9c0d9918aa9d5e6f47ad902", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6933647a67798a3ef9c0d9918aa9d5e6f47ad902/comments", "author": null, "committer": null, "parents": [{"sha": "73db71375f4cb5ef019e572a9fe0bd26d47ca0db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73db71375f4cb5ef019e572a9fe0bd26d47ca0db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73db71375f4cb5ef019e572a9fe0bd26d47ca0db"}], "stats": {"total": 59, "additions": 24, "deletions": 35}, "files": [{"sha": "261d12fb37b05e37cfcbebcd73faaeab12ce49c5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6933647a67798a3ef9c0d9918aa9d5e6f47ad902/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6933647a67798a3ef9c0d9918aa9d5e6f47ad902/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6933647a67798a3ef9c0d9918aa9d5e6f47ad902", "patch": "@@ -1,5 +1,7 @@\n 2002-06-03  Richard Henderson  <rth@redhat.com>\n \n+\t* config/alpha/alpha-protos.h: Eliminate unneeded ifdefs.\n+\n \t* config/alpha/alpha.c (reg_or_0_operand): Use CONST0_RTX.\n \t(const0_operand): New.\n \t(reg_or_fp0_operand, fp0_operand): Remove."}, {"sha": "d02af4c9bfef028a7ad415eba1b4eb688834b7c3", "filename": "gcc/config/alpha/alpha-protos.h", "status": "modified", "additions": 22, "deletions": 35, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6933647a67798a3ef9c0d9918aa9d5e6f47ad902/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6933647a67798a3ef9c0d9918aa9d5e6f47ad902/gcc%2Fconfig%2Falpha%2Falpha-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha-protos.h?ref=6933647a67798a3ef9c0d9918aa9d5e6f47ad902", "patch": "@@ -34,7 +34,6 @@ extern void alpha_expand_epilogue PARAMS ((void));\n extern void alpha_output_filename PARAMS ((FILE *, const char *));\n extern void alpha_output_lineno PARAMS ((FILE *, int));\n \n-#ifdef RTX_CODE\n extern int reg_or_0_operand PARAMS ((rtx, enum machine_mode));\n extern int reg_or_6bit_operand PARAMS ((rtx, enum machine_mode));\n extern int reg_or_8bit_operand PARAMS ((rtx, enum machine_mode));\n@@ -113,13 +112,7 @@ extern rtx alpha_emit_set_long_const PARAMS ((rtx, HOST_WIDE_INT,\n extern bool alpha_expand_mov PARAMS ((enum machine_mode, rtx *));\n extern bool alpha_expand_mov_nobwx PARAMS ((enum machine_mode, rtx *));\n extern void alpha_emit_floatuns PARAMS ((rtx[]));\n-extern rtx alpha_emit_conditional_branch PARAMS ((enum rtx_code));\n-extern rtx alpha_emit_setcc PARAMS ((enum rtx_code));\n extern rtx alpha_emit_conditional_move PARAMS ((rtx, enum machine_mode));\n-extern int alpha_split_conditional_move PARAMS ((enum rtx_code, rtx, rtx,\n-\t\t\t\t\t\t rtx, rtx));\n-extern void alpha_emit_xfloating_arith PARAMS ((enum rtx_code, rtx[]));\n-extern void alpha_emit_xfloating_cvt PARAMS ((enum rtx_code, rtx[]));\n extern void alpha_split_tfmode_pair PARAMS ((rtx[]));\n extern void alpha_split_tfmode_frobsign PARAMS ((rtx[],\n \t\t\t\t\t\t rtx (*)(rtx, rtx, rtx)));\n@@ -135,51 +128,45 @@ extern void print_operand PARAMS ((FILE *, rtx, int));\n extern void print_operand_address PARAMS ((FILE *, rtx));\n extern void alpha_initialize_trampoline PARAMS ((rtx, rtx, rtx, int, int, int));\n extern void alpha_reorg PARAMS ((rtx));\n-#endif /* RTX_CODE */\n+\n+extern tree alpha_build_va_list PARAMS ((void));\n+extern void alpha_va_start PARAMS ((int, tree, rtx));\n+extern rtx alpha_va_arg PARAMS ((tree, tree));\n+extern rtx function_arg PARAMS ((CUMULATIVE_ARGS, enum machine_mode,\n+\t\t\t\t tree, int));\n+extern void alpha_start_function PARAMS ((FILE *, const char *, tree));\n+extern void alpha_end_function PARAMS ((FILE *, const char *, tree));\n+extern void alpha_output_mi_thunk_osf PARAMS ((FILE *, tree,\n+\t\t\t\t\t       HOST_WIDE_INT, tree));\n \n #ifdef REAL_VALUE_TYPE\n extern int check_float_value PARAMS ((enum machine_mode,\n-\t\t\t\t     REAL_VALUE_TYPE *, int));\n+\t\t\t\t      REAL_VALUE_TYPE *, int));\n+#endif\n+\n+#ifdef RTX_CODE\n+extern rtx alpha_emit_conditional_branch PARAMS ((enum rtx_code));\n+extern rtx alpha_emit_setcc PARAMS ((enum rtx_code));\n+extern int alpha_split_conditional_move PARAMS ((enum rtx_code, rtx, rtx,\n+\t\t\t\t\t\t rtx, rtx));\n+extern void alpha_emit_xfloating_arith PARAMS ((enum rtx_code, rtx[]));\n+extern void alpha_emit_xfloating_cvt PARAMS ((enum rtx_code, rtx[]));\n #endif\n \n+extern rtx alpha_need_linkage PARAMS ((const char *, int));\n+\n #if TARGET_ABI_OPEN_VMS\n #ifdef HAVE_MACHINE_MODES\n extern enum avms_arg_type alpha_arg_type PARAMS ((enum machine_mode));\n #endif\n-#ifdef RTX_CODE\n extern rtx alpha_arg_info_reg_val PARAMS ((CUMULATIVE_ARGS));\n-#endif\n-#ifdef BUFSIZ\n extern void alpha_write_linkage PARAMS ((FILE *));\n-#endif\n #endif /* TARGET_ABI_OPEN_VMS */\n \n-#ifdef RTX_CODE\n-extern rtx alpha_need_linkage PARAMS ((const char *, int));\n-#endif\n-\n-#ifdef TREE_CODE\n-extern tree alpha_build_va_list PARAMS ((void));\n-#ifdef RTX_CODE\n-extern void alpha_va_start PARAMS ((int, tree, rtx));\n-extern rtx alpha_va_arg PARAMS ((tree, tree));\n-extern rtx function_arg PARAMS ((CUMULATIVE_ARGS, enum machine_mode,\n-\t\t\t\t tree, int));\n-#endif\n-extern void alpha_start_function PARAMS ((FILE *, const char *, tree));\n-extern void alpha_end_function PARAMS ((FILE *, const char *, tree));\n-extern void alpha_output_mi_thunk_osf PARAMS ((FILE *, tree,\n-\t\t\t\t\t       HOST_WIDE_INT, tree));\n-#endif /* TREE CODE */\n-\n-#ifdef RTX_CODE\n extern rtx unicosmk_add_call_info_word PARAMS ((rtx));\n-#endif\n \n #if TARGET_ABI_UNICOSMK\n-#ifdef RTX_CODE\n extern void unicosmk_defer_case_vector PARAMS ((rtx, rtx));\n-#endif\n extern void unicosmk_add_extern PARAMS ((const char *));\n extern void unicosmk_output_align PARAMS ((FILE *, int));\n extern char * unicosmk_text_section PARAMS ((void));"}]}