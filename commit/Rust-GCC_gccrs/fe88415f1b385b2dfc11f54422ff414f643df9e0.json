{"sha": "fe88415f1b385b2dfc11f54422ff414f643df9e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmU4ODQxNWYxYjM4NWIyZGZjMTFmNTQ0MjJmZjQxNGY2NDNkZjllMA==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2004-06-29T11:10:11Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2004-06-29T11:10:11Z"}, "message": "re PR c++/16260 (ICE in template function)\n\ncp:\n        PR c++/16260\n        * parser.c (cp_parser_template_declaration_after_export): Disable\n        access checks here ...\n        (cp_parser_class_specifier): ... not here.\ntestsuite:\n        PR c++/16260\n        * g++.dg/parse/crash15.C: New.\n\nFrom-SVN: r83851", "tree": {"sha": "8def500d734e8c86faa6708912a0e710a0d4154c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8def500d734e8c86faa6708912a0e710a0d4154c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe88415f1b385b2dfc11f54422ff414f643df9e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe88415f1b385b2dfc11f54422ff414f643df9e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe88415f1b385b2dfc11f54422ff414f643df9e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe88415f1b385b2dfc11f54422ff414f643df9e0/comments", "author": null, "committer": null, "parents": [{"sha": "962fe3950f5130476f665b08be7db6b5552e8a3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/962fe3950f5130476f665b08be7db6b5552e8a3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/962fe3950f5130476f665b08be7db6b5552e8a3b"}], "stats": {"total": 39, "additions": 29, "deletions": 10}, "files": [{"sha": "532180d82c25cecc19cc85596790662b6ec90a5f", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe88415f1b385b2dfc11f54422ff414f643df9e0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe88415f1b385b2dfc11f54422ff414f643df9e0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=fe88415f1b385b2dfc11f54422ff414f643df9e0", "patch": "@@ -1,3 +1,10 @@\n+2004-06-29  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/16260\n+\t* parser.c (cp_parser_template_declaration_after_export): Disable\n+\taccess checks here ...\n+\t(cp_parser_class_specifier): ... not here.\n+\n 2004-06-28  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* cp-tree.h (VAR_OR_FUNCTION_DECL_CHECK,\n@@ -19,7 +26,7 @@\n \n 2004-06-28  Nathan Sidwell  <nathan@codesourcery.com>\n \n-\tPR C++/16174\n+\tPR c++/16174\n \t* call.c (build_temp): Declare.\n \t(check_constructor_callable): New.\n \t(reference_binding): Only set CHECK_COPY_CONSTRUCTOR if not for"}, {"sha": "ca2b0a995d2227f91615acc71088900039b4d571", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe88415f1b385b2dfc11f54422ff414f643df9e0/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe88415f1b385b2dfc11f54422ff414f643df9e0/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=fe88415f1b385b2dfc11f54422ff414f643df9e0", "patch": "@@ -12343,21 +12343,13 @@ cp_parser_class_specifier (cp_parser* parser)\n     pop_p = push_scope (CP_DECL_CONTEXT (TYPE_MAIN_DECL (type)));\n   type = begin_class_definition (type);\n   \n-  if (processing_template_decl)\n-    /* There are no access checks when parsing a template, as we do no\n-       know if a specialization will be a friend.  */\n-    push_deferring_access_checks (dk_no_check);\n-  \n   if (type == error_mark_node)\n     /* If the type is erroneous, skip the entire body of the class.  */\n     cp_parser_skip_to_closing_brace (parser);\n   else\n     /* Parse the member-specification.  */\n     cp_parser_member_specification_opt (parser);\n   \n-  if (processing_template_decl)\n-    pop_deferring_access_checks ();\n-  \n   /* Look for the trailing `}'.  */\n   cp_parser_require (parser, CPP_CLOSE_BRACE, \"`}'\");\n   /* We get better error messages by noticing a common problem: a\n@@ -14879,10 +14871,16 @@ cp_parser_template_declaration_after_export (cp_parser* parser, bool member_p)\n     cp_parser_template_declaration_after_export (parser, member_p);\n   else\n     {\n+      /* There are no access checks when parsing a template, as we do not\n+         know if a specialization will be a friend.  */\n+      push_deferring_access_checks (dk_no_check);\n+      \n       decl = cp_parser_single_declaration (parser,\n \t\t\t\t\t   member_p,\n \t\t\t\t\t   &friend_p);\n \n+      pop_deferring_access_checks ();\n+  \n       /* If this is a member template declaration, let the front\n \t end know.  */\n       if (member_p && !friend_p && decl)"}, {"sha": "3fe71ecf5dbd3d4313ff7494d0661dff1b8371ec", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe88415f1b385b2dfc11f54422ff414f643df9e0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe88415f1b385b2dfc11f54422ff414f643df9e0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fe88415f1b385b2dfc11f54422ff414f643df9e0", "patch": "@@ -1,3 +1,8 @@\n+2004-06-29  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tPR c++/16260\n+\t* g++.dg/parse/crash15.C: New.\n+\n 2004-06-28  Andrew Pinski  <apinski@apple.com>\n \n \t* gcc.dg/pr14963.c: Remove the dg-warning as it is dected\n@@ -12,7 +17,7 @@\n \n 2004-06-28  Nathan Sidwell  <nathan@codesourcery.com>\n \n-\t* PR C++/16174\n+\t* PR c++/16174\n \t* g++.dg/template/ctor4.C: New.\n \n 2004-06-27  Andrew Pinski  <pinskia@physics.uc.edu>"}, {"sha": "afad4c1fe592da267808c254438c8f6d58ba6544", "filename": "gcc/testsuite/g++.dg/parse/crash15.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe88415f1b385b2dfc11f54422ff414f643df9e0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe88415f1b385b2dfc11f54422ff414f643df9e0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash15.C?ref=fe88415f1b385b2dfc11f54422ff414f643df9e0", "patch": "@@ -0,0 +1,9 @@\n+// { dg-do compile }\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 29 Jun 2004 <nathan@codesourcery.com>\n+\n+// Origin: Volker Reichelt <reichelt@gcc.gnu.org>\n+// Bug 16260. ICE\n+\n+template<typename T> int foo() { return T::X::Y; }"}]}