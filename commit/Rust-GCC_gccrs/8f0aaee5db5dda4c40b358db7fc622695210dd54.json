{"sha": "8f0aaee5db5dda4c40b358db7fc622695210dd54", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGYwYWFlZTVkYjVkZGE0YzQwYjM1OGRiN2ZjNjIyNjk1MjEwZGQ1NA==", "commit": {"author": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2008-05-11T20:28:52Z"}, "committer": {"name": "Thomas Koenig", "email": "tkoenig@gcc.gnu.org", "date": "2008-05-11T20:28:52Z"}, "message": "re PR fortran/35719 (pointer to zero sized array not associated)\n\n2008-05-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/35719\n\t* trans.c (gfc_call_malloc): If size equals zero, allocate one\n\tbyte; don't return a null pointer.\n\n2008-05-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n\n\tPR fortran/35719\n\t* gfortran.dg/associated_5.f90:  New test.\n\nFrom-SVN: r135187", "tree": {"sha": "513f449bdb1b4bb3020f0ed10b74d5e0e4289e74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/513f449bdb1b4bb3020f0ed10b74d5e0e4289e74"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f0aaee5db5dda4c40b358db7fc622695210dd54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f0aaee5db5dda4c40b358db7fc622695210dd54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f0aaee5db5dda4c40b358db7fc622695210dd54", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f0aaee5db5dda4c40b358db7fc622695210dd54/comments", "author": null, "committer": null, "parents": [{"sha": "8ffb4ce0b0e6c2a9cc70d5ecc60d07951ba40f9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ffb4ce0b0e6c2a9cc70d5ecc60d07951ba40f9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ffb4ce0b0e6c2a9cc70d5ecc60d07951ba40f9c"}], "stats": {"total": 46, "additions": 37, "deletions": 9}, "files": [{"sha": "ae78f0ea8af283979f66f04abaef9f92a554731f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f0aaee5db5dda4c40b358db7fc622695210dd54/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f0aaee5db5dda4c40b358db7fc622695210dd54/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=8f0aaee5db5dda4c40b358db7fc622695210dd54", "patch": "@@ -1,3 +1,9 @@\n+2008-05-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/35719\n+\t* trans.c (gfc_call_malloc): If size equals zero, allocate one\n+\tbyte; don't return a null pointer.\n+\n 2008-05-10  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n \n \tPR fortran/36197"}, {"sha": "f303128a28d21edf3d3872bff32a52c61269c2b6", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f0aaee5db5dda4c40b358db7fc622695210dd54/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f0aaee5db5dda4c40b358db7fc622695210dd54/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=8f0aaee5db5dda4c40b358db7fc622695210dd54", "patch": "@@ -440,12 +440,12 @@ gfc_trans_runtime_check (tree cond, stmtblock_t * pblock, locus * where,\n \n /* Call malloc to allocate size bytes of memory, with special conditions:\n       + if size < 0, generate a runtime error,\n-      + if size == 0, return a NULL pointer,\n+      + if size == 0, return a malloced area of size 1,\n       + if malloc returns NULL, issue a runtime error.  */\n tree\n gfc_call_malloc (stmtblock_t * block, tree type, tree size)\n {\n-  tree tmp, msg, negative, zero, malloc_result, null_result, res;\n+  tree tmp, msg, negative, malloc_result, null_result, res;\n   stmtblock_t block2;\n \n   size = gfc_evaluate_now (size, block);\n@@ -468,6 +468,10 @@ gfc_call_malloc (stmtblock_t * block, tree type, tree size)\n \n   /* Call malloc and check the result.  */\n   gfc_start_block (&block2);\n+\n+  size = fold_build2 (MAX_EXPR, size_type_node, size,\n+\t\t      build_int_cst (size_type_node, 1));\n+\n   gfc_add_modify_expr (&block2, res,\n \t\t       build_call_expr (built_in_decls[BUILT_IN_MALLOC], 1,\n \t\t       size));\n@@ -481,13 +485,7 @@ gfc_call_malloc (stmtblock_t * block, tree type, tree size)\n   gfc_add_expr_to_block (&block2, tmp);\n   malloc_result = gfc_finish_block (&block2);\n \n-  /* size == 0  */\n-  zero = fold_build2 (EQ_EXPR, boolean_type_node, size,\n-\t\t      build_int_cst (size_type_node, 0));\n-  tmp = fold_build2 (MODIFY_EXPR, pvoid_type_node, res,\n-\t\t     build_int_cst (pvoid_type_node, 0));\n-  tmp = fold_build3 (COND_EXPR, void_type_node, zero, tmp, malloc_result);\n-  gfc_add_expr_to_block (block, tmp);\n+  gfc_add_expr_to_block (block, malloc_result);\n \n   if (type != NULL)\n     res = fold_convert (type, res);"}, {"sha": "50143ff8ed753f1ae70e512d610ade2502730a62", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f0aaee5db5dda4c40b358db7fc622695210dd54/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f0aaee5db5dda4c40b358db7fc622695210dd54/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8f0aaee5db5dda4c40b358db7fc622695210dd54", "patch": "@@ -1,3 +1,8 @@\n+2008-05-11  Thomas Koenig  <tkoenig@gcc.gnu.org>\n+\n+\tPR fortran/35719\n+\t* gfortran.dg/associated_5.f90:  New test.\n+\n 2008-05-11  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.target/mips/scc-1.c: Require mips16_attribute, and add"}, {"sha": "a2007752f3c54716a9ba8ab69bd54abfe22735be", "filename": "gcc/testsuite/gfortran.dg/associated_5.f90", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f0aaee5db5dda4c40b358db7fc622695210dd54/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociated_5.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f0aaee5db5dda4c40b358db7fc622695210dd54/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociated_5.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fassociated_5.f90?ref=8f0aaee5db5dda4c40b358db7fc622695210dd54", "patch": "@@ -0,0 +1,19 @@\n+! { dg-do run }\n+! PR 35719 - associated used to fail with zero-sized automatic arrays\n+! Test case contributed by Dick Hendrickson\n+\n+      program try_mf1053\n+\n+      call       mf1053 (  1,   2,   3,   4)\n+      end\n+\n+      SUBROUTINE MF1053 (nf1, nf2, nf3, nf4)\n+      INTEGER, pointer :: ptr(:,:)\n+      INTEGER, target  :: ILA1(NF2,NF4:NF3)\n+\n+      ptr => ILA1\n+\n+      if (ASSOCIATED (ptr, ILA1(NF1:NF2,NF4:NF3) ) ) call abort\n+      if ( .not. ASSOCIATED(ptr) )  call abort\n+\n+      END SUBROUTINE"}]}