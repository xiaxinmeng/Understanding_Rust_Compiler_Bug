{"sha": "9c3b03463a63d80970178d7df77bb36e19ee9e0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWMzYjAzNDYzYTYzZDgwOTcwMTc4ZDdkZjc3YmIzNmUxOWVlOWUwYg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2011-12-12T20:51:16Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2011-12-12T20:51:16Z"}, "message": "re PR rtl-optimization/21617 (CRC64 algorithm optimization problem on Intel 32-bit)\n\n2011-12-12  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/21617\n\t* ira-color.c (bucket_allocno_compare_func): Don't compare\n\tallocno classes.  Compare number of hard registers needed.\n\nFrom-SVN: r182263", "tree": {"sha": "d2749a25b5b9e15e38600edea42e404451d98329", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2749a25b5b9e15e38600edea42e404451d98329"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9c3b03463a63d80970178d7df77bb36e19ee9e0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c3b03463a63d80970178d7df77bb36e19ee9e0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c3b03463a63d80970178d7df77bb36e19ee9e0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c3b03463a63d80970178d7df77bb36e19ee9e0b/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "35a730f86f0167a0160b20e5b9e25f7efb5108d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35a730f86f0167a0160b20e5b9e25f7efb5108d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35a730f86f0167a0160b20e5b9e25f7efb5108d7"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "9de95711d42f43fbff4b296c3a07758e2653a65f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c3b03463a63d80970178d7df77bb36e19ee9e0b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c3b03463a63d80970178d7df77bb36e19ee9e0b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9c3b03463a63d80970178d7df77bb36e19ee9e0b", "patch": "@@ -1,3 +1,9 @@\n+2011-12-12  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/21617\n+\t* ira-color.c (bucket_allocno_compare_func): Don't compare\n+\tallocno classes.  Compare number of hard registers needed.\n+\n 2011-12-12  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR tree-optimization/50569"}, {"sha": "92f68bf0f1956f8eb6077c955ff6358678c472b6", "filename": "gcc/ira-color.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9c3b03463a63d80970178d7df77bb36e19ee9e0b/gcc%2Fira-color.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9c3b03463a63d80970178d7df77bb36e19ee9e0b/gcc%2Fira-color.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-color.c?ref=9c3b03463a63d80970178d7df77bb36e19ee9e0b", "patch": "@@ -1797,8 +1797,14 @@ bucket_allocno_compare_func (const void *v1p, const void *v2p)\n   ira_allocno_t a1 = *(const ira_allocno_t *) v1p;\n   ira_allocno_t a2 = *(const ira_allocno_t *) v2p;\n   int diff, a1_freq, a2_freq, a1_num, a2_num;\n-\n-  if ((diff = (int) ALLOCNO_CLASS (a2) - ALLOCNO_CLASS (a1)) != 0)\n+  int cl1 = ALLOCNO_CLASS (a1), cl2 = ALLOCNO_CLASS (a2);\n+\n+  /* Push pseudos requiring less hard registers first.  It means that\n+     we will assign pseudos requiring more hard registers first\n+     avoiding creation small holes in free hard register file into\n+     which the pseudos requiring more hard registers can not fit.  */\n+  if ((diff = (ira_reg_class_max_nregs[cl1][ALLOCNO_MODE (a1)]\n+\t       - ira_reg_class_max_nregs[cl2][ALLOCNO_MODE (a2)])) != 0)\n     return diff;\n   a1_freq = ALLOCNO_FREQ (a1);\n   a2_freq = ALLOCNO_FREQ (a2);"}]}