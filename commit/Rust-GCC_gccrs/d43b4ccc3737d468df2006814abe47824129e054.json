{"sha": "d43b4ccc3737d468df2006814abe47824129e054", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDQzYjRjY2MzNzM3ZDQ2OGRmMjAwNjgxNGFiZTQ3ODI0MTI5ZTA1NA==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2016-09-21T16:13:12Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2016-09-21T16:13:12Z"}, "message": "PR bootstrap/77676 - powerpc64 and powerpc64le stage2 bootstrap fail\n\n\t* c.opt (fprintf-return-value): Temporarily initialize to zero\n\tto unblock bootstrap failures.\n\nFrom-SVN: r240321", "tree": {"sha": "d425466103974290d97e6af59a8e950037c6ef07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d425466103974290d97e6af59a8e950037c6ef07"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d43b4ccc3737d468df2006814abe47824129e054", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d43b4ccc3737d468df2006814abe47824129e054", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d43b4ccc3737d468df2006814abe47824129e054", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d43b4ccc3737d468df2006814abe47824129e054/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fe01a41a4df56773ecea2236f71fcd0d16b8ab54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe01a41a4df56773ecea2236f71fcd0d16b8ab54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe01a41a4df56773ecea2236f71fcd0d16b8ab54"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "7795f9c8d39590464dd5b06c9525b40e6ec89edc", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d43b4ccc3737d468df2006814abe47824129e054/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d43b4ccc3737d468df2006814abe47824129e054/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=d43b4ccc3737d468df2006814abe47824129e054", "patch": "@@ -1,3 +1,9 @@\n+2016-09-21  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR bootstrap/77676\n+\t* c.opt (fprintf-return-value): Temporarily initialize to zero\n+\tto unblock bootstrap failures.\n+\n 2016-09-21  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/77651"}, {"sha": "a04618d10639645cd68d811df5b0743651806163", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d43b4ccc3737d468df2006814abe47824129e054/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d43b4ccc3737d468df2006814abe47824129e054/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=d43b4ccc3737d468df2006814abe47824129e054", "patch": "@@ -1498,7 +1498,7 @@ C++ ObjC++ Var(flag_pretty_templates) Init(1)\n -fno-pretty-templates Do not pretty-print template specializations as the template signature followed by the arguments.\n \n fprintf-return-value\n-C ObjC C++ ObjC++ LTO Optimization Var(flag_printf_return_value) Init(1)\n+C ObjC C++ ObjC++ LTO Optimization Var(flag_printf_return_value) Init(0)\n Treat known sprintf return values as constants.\n \n freplace-objc-classes"}]}