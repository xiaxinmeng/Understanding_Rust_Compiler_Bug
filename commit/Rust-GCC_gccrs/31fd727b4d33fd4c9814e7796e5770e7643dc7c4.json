{"sha": "31fd727b4d33fd4c9814e7796e5770e7643dc7c4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFmZDcyN2I0ZDMzZmQ0Yzk4MTRlNzc5NmU1NzcwZTc2NDNkYzdjNA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2011-09-26T16:55:55Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-09-26T16:55:55Z"}, "message": "avr.md (peephole casesi+2): Use -1 instead of 65536.\n\n\n\t* config/avr/avr.md (peephole casesi+2): Use -1 instead of 65536.\n\t* config/avr/avr.c (avr_out_compare): Print shorter sequence for\n\tEQ/NE comparisons against +/-1 in the case of unused-after,\n\tnon-ld-regs target.\n\nFrom-SVN: r179206", "tree": {"sha": "ad670ff51ebf5ff4c9ec7d3085c0c7cbd8ef69fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad670ff51ebf5ff4c9ec7d3085c0c7cbd8ef69fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31fd727b4d33fd4c9814e7796e5770e7643dc7c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31fd727b4d33fd4c9814e7796e5770e7643dc7c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31fd727b4d33fd4c9814e7796e5770e7643dc7c4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31fd727b4d33fd4c9814e7796e5770e7643dc7c4/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2186081438d522d8266dae13e9640447b7ad6189", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2186081438d522d8266dae13e9640447b7ad6189", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2186081438d522d8266dae13e9640447b7ad6189"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "71a8d88d7a128d6f029a6d5d521c1e041e82da99", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31fd727b4d33fd4c9814e7796e5770e7643dc7c4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31fd727b4d33fd4c9814e7796e5770e7643dc7c4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31fd727b4d33fd4c9814e7796e5770e7643dc7c4", "patch": "@@ -1,3 +1,10 @@\n+2011-09-26  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\t* config/avr/avr.md (peephole casesi+2): Use -1 instead of 65536.\n+\t* config/avr/avr.c (avr_out_compare): Print shorter sequence for\n+\tEQ/NE comparisons against +/-1 in the case of unused-after,\n+\tnon-ld-regs target.\n+\n 2011-09-26  Jakub Jelinek  <jakub@redhat.com>\n \n \t* gimple-fold.c (gimplify_and_update_call_from_tree): Set"}, {"sha": "8675845fb9dad871029f501ab8c47ec1642721a8", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31fd727b4d33fd4c9814e7796e5770e7643dc7c4/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31fd727b4d33fd4c9814e7796e5770e7643dc7c4/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=31fd727b4d33fd4c9814e7796e5770e7643dc7c4", "patch": "@@ -3048,6 +3048,37 @@ avr_out_compare (rtx insn, rtx *xop, int *plen)\n   if (plen)\n     *plen = 0;\n \n+  /* Comparisons == +/-1 and != +/-1 can be done similar to camparing\n+     against 0 by ORing the bytes.  This is one instruction shorter.  */\n+\n+  if (!test_hard_reg_class (LD_REGS, xreg)\n+      && compare_eq_p (insn)\n+      && reg_unused_after (insn, xreg))\n+    {\n+      if (xval == const1_rtx)\n+        {\n+          avr_asm_len (\"dec %A0\" CR_TAB\n+                       \"or %A0,%B0\", xop, plen, 2);\n+          \n+          if (n_bytes == 4)\n+            avr_asm_len (\"or %A0,%C0\" CR_TAB\n+                         \"or %A0,%D0\", xop, plen, 2);\n+\n+          return \"\";\n+        }\n+      else if (xval == constm1_rtx)\n+        {\n+          if (n_bytes == 4)\n+            avr_asm_len (\"and %A0,%D0\" CR_TAB\n+                         \"and %A0,%C0\", xop, plen, 2);\n+          \n+          avr_asm_len (\"and %A0,%B0\" CR_TAB\n+                       \"com %A0\", xop, plen, 2);\n+          \n+          return \"\";\n+        }\n+    }\n+\n   for (i = 0; i < n_bytes; i++)\n     {\n       /* We compare byte-wise.  */"}, {"sha": "790f696748244dcb2ee92ca8e8a8b57b40ee94bd", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31fd727b4d33fd4c9814e7796e5770e7643dc7c4/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31fd727b4d33fd4c9814e7796e5770e7643dc7c4/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=31fd727b4d33fd4c9814e7796e5770e7643dc7c4", "patch": "@@ -4119,7 +4119,7 @@\n    (parallel\n     [(set (cc0)\n           (compare (match_dup 0)\n-\t\t   (const_int 65535)))\n+\t\t   (const_int -1)))\n      (clobber (match_operand:QI 1 \"d_register_operand\" \"\"))])\n    (set (pc)\n \t(if_then_else (ne (cc0) (const_int 0))"}]}