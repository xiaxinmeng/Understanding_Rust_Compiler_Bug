{"sha": "c6888c62577671bdc5b4d71f21bd23897cc1db69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzY4ODhjNjI1Nzc2NzFiZGM1YjRkNzFmMjFiZDIzODk3Y2MxZGI2OQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2017-09-12T14:02:59Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2017-09-12T14:02:59Z"}, "message": "PR libstdc++/79433 no #error for including headers with wrong -std\n\n\tPR libstdc++/79433\n\t* doc/xml/manual/status_cxx2017.xml: Update feature-test macros.\n\t* doc/html/*: Regenerate.\n\t* include/Makefile.am: Remove <bits/c++17_warning.h>.\n\t* include/Makefile.in: Regenerate.\n\t* include/bits/c++17_warning.h: Remove.\n\t* include/bits/string_view.tcc: Do not include <bits/c++17_warning.h>\n\tfor pre-C++17 modes.\n\t* include/std/any: Likewise.\n\t(__cpp_lib_any): Define.\n\t* include/std/mutex (__cpp_lib_scoped_lock): Adjust value as per new\n\tSD-6 draft.\n\t* include/std/numeric (__cpp_lib_gcd_lcm): Define as per new SD-6\n\tdraft.\n\t* include/std/optional: Do not include <bits/c++17_warning.h>.\n\t(__cpp_lib_optional): Define.\n\t* include/std/shared_mutex: Do not include <bits/c++14_warning.h>.\n\t* include/std/string_view: Do not include <bits/c++17_warning.h>.\n\t(__cpp_lib_string_view): Define.\n\t* include/std/variant: Do not include <bits/c++17_warning.h>.\n\t(__cpp_lib_variant): Define.\n\t* testsuite/20_util/optional/cons/value_neg.cc: Adjust dg-error line\n\tnumbers.\n\t* testsuite/26_numerics/gcd/1.cc: Test for __cpp_lib_gcd_lcm.\n\t* testsuite/26_numerics/gcd/gcd_neg.cc: Adjust dg-error line\n\tnumbers.\n\t* testsuite/26_numerics/lcm/1.cc: Test for __cpp_lib_gcd_lcm.\n\t* testsuite/26_numerics/lcm/lcm_neg.cc: Adjust dg-error line\n\tnumbers.\n\t* testsuite/30_threads/scoped_lock/requirements/typedefs.cc: Adjust\n\texpected value of __cpp_lib_scoped_lock.\n\nFrom-SVN: r252018", "tree": {"sha": "91055bd1099da086c7cd45b0a7341435673ea520", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91055bd1099da086c7cd45b0a7341435673ea520"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6888c62577671bdc5b4d71f21bd23897cc1db69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6888c62577671bdc5b4d71f21bd23897cc1db69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6888c62577671bdc5b4d71f21bd23897cc1db69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6888c62577671bdc5b4d71f21bd23897cc1db69/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2be7a166a93dd2e520476235df013e2900c283c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2be7a166a93dd2e520476235df013e2900c283c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2be7a166a93dd2e520476235df013e2900c283c9"}], "stats": {"total": 176, "additions": 90, "deletions": 86}, "files": [{"sha": "f7ffb08da0df828fb3ba1a87de5a332c4580f6f7", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c6888c62577671bdc5b4d71f21bd23897cc1db69", "patch": "@@ -1,5 +1,37 @@\n 2017-09-12  Jonathan Wakely  <jwakely@redhat.com>\n \n+\tPR libstdc++/79433\n+\t* doc/xml/manual/status_cxx2017.xml: Update feature-test macros.\n+\t* doc/html/*: Regenerate.\n+\t* include/Makefile.am: Remove <bits/c++17_warning.h>.\n+\t* include/Makefile.in: Regenerate.\n+\t* include/bits/c++17_warning.h: Remove.\n+\t* include/bits/string_view.tcc: Do not include <bits/c++17_warning.h>\n+\tfor pre-C++17 modes.\n+\t* include/std/any: Likewise.\n+\t(__cpp_lib_any): Define.\n+\t* include/std/mutex (__cpp_lib_scoped_lock): Adjust value as per new\n+\tSD-6 draft.\n+\t* include/std/numeric (__cpp_lib_gcd_lcm): Define as per new SD-6\n+\tdraft.\n+\t* include/std/optional: Do not include <bits/c++17_warning.h>.\n+\t(__cpp_lib_optional): Define.\n+\t* include/std/shared_mutex: Do not include <bits/c++14_warning.h>.\n+\t* include/std/string_view: Do not include <bits/c++17_warning.h>.\n+\t(__cpp_lib_string_view): Define.\n+\t* include/std/variant: Do not include <bits/c++17_warning.h>.\n+\t(__cpp_lib_variant): Define.\n+\t* testsuite/20_util/optional/cons/value_neg.cc: Adjust dg-error line\n+\tnumbers.\n+\t* testsuite/26_numerics/gcd/1.cc: Test for __cpp_lib_gcd_lcm.\n+\t* testsuite/26_numerics/gcd/gcd_neg.cc: Adjust dg-error line\n+\tnumbers.\n+\t* testsuite/26_numerics/lcm/1.cc: Test for __cpp_lib_gcd_lcm.\n+\t* testsuite/26_numerics/lcm/lcm_neg.cc: Adjust dg-error line\n+\tnumbers.\n+\t* testsuite/30_threads/scoped_lock/requirements/typedefs.cc: Adjust\n+\texpected value of __cpp_lib_scoped_lock.\n+\n \tPR libstdc++/70483\n \t* include/experimental/bits/string_view.tcc (basic_string_view::find)\n \t(basic_string_view::rfind, basic_string_view::find_first_of)"}, {"sha": "fd66ac503a82d880ffc59d0a60a0f7d08b205be8", "filename": "libstdc++-v3/doc/xml/manual/status_cxx2017.xml", "status": "modified", "additions": 19, "deletions": 9, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fstatus_cxx2017.xml?ref=c6888c62577671bdc5b4d71f21bd23897cc1db69", "patch": "@@ -98,7 +98,9 @@ Feature-testing recommendations for C++</link>.\n \t</link>\n       </entry>\n       <entry align=\"center\"> 7 </entry>\n-      <entry> <code>__has_include(&lt;variant&gt;)</code> </entry>\n+      <entry> <code>__has_include(&lt;variant&gt;)</code>,\n+              <code>__cpp_lib_variant >= 201603</code>\n+      </entry>\n     </row>\n \n     <row>\n@@ -109,7 +111,9 @@ Feature-testing recommendations for C++</link>.\n \t</link>\n       </entry>\n       <entry align=\"center\"> 7 </entry>\n-      <entry> <code>__has_include(&lt;optional&gt;)</code> </entry>\n+      <entry> <code>__has_include(&lt;optional&gt;)</code>,\n+              <code>__cpp_lib_optional >= 201603</code>\n+      </entry>\n     </row>\n \n     <row>\n@@ -120,7 +124,9 @@ Feature-testing recommendations for C++</link>.\n \t</link>\n       </entry>\n       <entry align=\"center\"> 7 </entry>\n-      <entry> <code>__has_include(&lt;any&gt;)</code> </entry>\n+      <entry> <code>__has_include(&lt;any&gt;)</code>,\n+              <code>__cpp_lib_any >= 201603</code>\n+      </entry>\n     </row>\n \n     <row>\n@@ -131,7 +137,9 @@ Feature-testing recommendations for C++</link>.\n \t</link>\n       </entry>\n       <entry align=\"center\"> 7 </entry>\n-      <entry> <code>__has_include(&lt;string_view&gt;)</code> </entry>\n+      <entry> <code>__has_include(&lt;string_view&gt;)</code>,\n+              <code>__cpp_lib_string_view >= 201603</code>\n+      </entry>\n     </row>\n \n     <row>\n@@ -143,7 +151,9 @@ Feature-testing recommendations for C++</link>.\n \t</link>\n       </entry>\n       <entry align=\"center\"> No </entry>\n-      <entry> <code>__has_include(&lt;memory_resource&gt;)</code> </entry>\n+      <entry> <code>__has_include(&lt;memory_resource&gt;)</code>,\n+              <code>__cpp_lib_memory_resource >= 201603</code>\n+      </entry>\n     </row>\n \n     <row>\n@@ -616,7 +626,9 @@ Feature-testing recommendations for C++</link>.\n       </entry>\n       <entry align=\"center\"> No </entry>\n       <entry><code> __has_include(&lt;execution&gt;) </code>,\n-\t     <code> __cpp_lib_parallel_algorithm >= 201603 </code></entry>\n+\t     <code> __cpp_lib_execution >= 201603 </code>,\n+\t     <code> __cpp_lib_parallel_algorithm >= 201603 </code>\n+      </entry>\n     </row>\n \n     <row>\n@@ -638,9 +650,7 @@ Feature-testing recommendations for C++</link>.\n \t</link>\n       </entry>\n       <entry align=\"center\"> 7 </entry>\n-      <entry><code> __cpp_lib_gcd >= 201606 </code>,\n-\t     <code> __cpp_lib_lcm >= 201606 </code>\n-      </entry>\n+      <entry><code> __cpp_lib_gcd_lcm >= 201606 </code></entry>\n     </row>\n \n     <row>"}, {"sha": "6395f1e6ae08e03a88e66a53ecc3a775534b0595", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=c6888c62577671bdc5b4d71f21bd23897cc1db69", "patch": "@@ -96,7 +96,6 @@ bits_headers = \\\n \t${bits_srcdir}/boost_concept_check.h \\\n \t${bits_srcdir}/c++0x_warning.h \\\n \t${bits_srcdir}/c++14_warning.h \\\n-\t${bits_srcdir}/c++17_warning.h \\\n \t${bits_srcdir}/char_traits.h \\\n \t${bits_srcdir}/codecvt.h \\\n \t${bits_srcdir}/concept_check.h \\"}, {"sha": "745a8495da5fe9b64e0ced4caade902fd2de5b4e", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=c6888c62577671bdc5b4d71f21bd23897cc1db69", "patch": "@@ -389,7 +389,6 @@ bits_headers = \\\n \t${bits_srcdir}/boost_concept_check.h \\\n \t${bits_srcdir}/c++0x_warning.h \\\n \t${bits_srcdir}/c++14_warning.h \\\n-\t${bits_srcdir}/c++17_warning.h \\\n \t${bits_srcdir}/char_traits.h \\\n \t${bits_srcdir}/codecvt.h \\\n \t${bits_srcdir}/concept_check.h \\"}, {"sha": "759fdc92250ba59a5a9652d12b7bca1205956966", "filename": "libstdc++-v3/include/bits/c++17_warning.h", "status": "removed", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2be7a166a93dd2e520476235df013e2900c283c9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2B17_warning.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2be7a166a93dd2e520476235df013e2900c283c9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2B17_warning.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fc%2B%2B17_warning.h?ref=2be7a166a93dd2e520476235df013e2900c283c9", "patch": "@@ -1,37 +0,0 @@\n-// Copyright (C) 2016-2017 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// Under Section 7 of GPL version 3, you are granted additional\n-// permissions described in the GCC Runtime Library Exception, version\n-// 3.1, as published by the Free Software Foundation.\n-\n-// You should have received a copy of the GNU General Public License and\n-// a copy of the GCC Runtime Library Exception along with this program;\n-// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see\n-// <http://www.gnu.org/licenses/>.\n-\n-/** @file bits/c++17_warning.h\n- *  This is an internal header file, included by other library headers.\n- *  Do not attempt to use it directly. @headername{iosfwd}\n- */\n-\n-#ifndef _CXX17_WARNING_H\n-#define _CXX17_WARNING_H 1\n-\n-#if __cplusplus <= 201402L\n-#error This file requires compiler and library support \\\n-for the ISO C++ 2017 standard. This support must be enabled \\\n-with the -std=c++17 or -std=gnu++17 compiler options.\n-#endif\n-\n-#endif"}, {"sha": "4d98f8668a0077ce9e070719367b1c526eb74b23", "filename": "libstdc++-v3/include/bits/string_view.tcc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstring_view.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstring_view.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstring_view.tcc?ref=c6888c62577671bdc5b4d71f21bd23897cc1db69", "patch": "@@ -36,9 +36,7 @@\n \n #pragma GCC system_header\n \n-#if __cplusplus <= 201402L\n-# include <bits/c++17_warning.h>\n-#else\n+#if __cplusplus >= 201703L\n \n namespace std _GLIBCXX_VISIBILITY(default)\n {"}, {"sha": "eef510535d7420999c57a03694d3c423803758f4", "filename": "libstdc++-v3/include/std/any", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fany", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fany", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fany?ref=c6888c62577671bdc5b4d71f21bd23897cc1db69", "patch": "@@ -31,9 +31,7 @@\n \n #pragma GCC system_header\n \n-#if __cplusplus <= 201402L\n-# include <bits/c++17_warning.h>\n-#else\n+#if __cplusplus >= 201703L\n \n #include <typeinfo>\n #include <new>\n@@ -68,6 +66,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #endif\n   }\n \n+#define __cpp_lib_any 201603\n+\n   /**\n    *  @brief A type-safe container of any type.\n    * "}, {"sha": "8c692a88ffdcdfc9544755ee9bfa5426808abe36", "filename": "libstdc++-v3/include/std/mutex", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fmutex?ref=c6888c62577671bdc5b4d71f21bd23897cc1db69", "patch": "@@ -556,8 +556,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n         }\n     }\n \n-#if __cplusplus > 201402L\n-#define __cpp_lib_scoped_lock 201707\n+#if __cplusplus >= 201703L\n+#define __cpp_lib_scoped_lock 201703\n   /** @brief A scoped lock type for multiple lockable objects.\n    *\n    * A scoped_lock controls mutex ownership within a scope, releasing"}, {"sha": "2b804199c7e999053850965cdb591a99a0179e90", "filename": "libstdc++-v3/include/std/numeric", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fnumeric?ref=c6888c62577671bdc5b4d71f21bd23897cc1db69", "patch": "@@ -121,7 +121,11 @@ namespace __detail\n \n #if __cplusplus > 201402L\n \n+#define __cpp_lib_gcd_lcm 201606\n+// These were used in drafts of SD-6:\n #define __cpp_lib_gcd 201606\n+#define __cpp_lib_lcm 201606\n+\n   /// Greatest common divisor\n   template<typename _Mn, typename _Nn>\n     constexpr common_type_t<_Mn, _Nn>\n@@ -134,7 +138,6 @@ namespace __detail\n       return __detail::__gcd(__m, __n);\n     }\n \n-#define __cpp_lib_lcm 201606\n   /// Least common multiple\n   template<typename _Mn, typename _Nn>\n     constexpr common_type_t<_Mn, _Nn>"}, {"sha": "2743ef963b4daf2667103adddf16642cf20c6d1e", "filename": "libstdc++-v3/include/std/optional", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Foptional?ref=c6888c62577671bdc5b4d71f21bd23897cc1db69", "patch": "@@ -29,9 +29,9 @@\n #ifndef _GLIBCXX_OPTIONAL\n #define _GLIBCXX_OPTIONAL 1\n \n-#if __cplusplus <= 201402L\n-# include <bits/c++17_warning.h>\n-#else\n+#pragma GCC system_header\n+\n+#if __cplusplus >= 201703L\n \n #include <utility>\n #include <type_traits>\n@@ -51,6 +51,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n    *  @{\n    */\n \n+#define __cpp_lib_optional 201603\n+\n   template<typename _Tp>\n     class optional;\n "}, {"sha": "295fdc7118c9ca8bea8573f1f96557bb9234f116", "filename": "libstdc++-v3/include/std/shared_mutex", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fshared_mutex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fshared_mutex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fshared_mutex?ref=c6888c62577671bdc5b4d71f21bd23897cc1db69", "patch": "@@ -31,9 +31,7 @@\n \n #pragma GCC system_header\n \n-#if __cplusplus <= 201103L\n-# include <bits/c++14_warning.h>\n-#else\n+#if __cplusplus >= 201402L\n \n #include <bits/c++config.h>\n #include <condition_variable>\n@@ -51,7 +49,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n #ifdef _GLIBCXX_USE_C99_STDINT_TR1\n #ifdef _GLIBCXX_HAS_GTHREADS\n \n-#if __cplusplus > 201402L\n+#if __cplusplus >= 201703L\n #define __cpp_lib_shared_mutex 201505\n   class shared_mutex;\n #endif"}, {"sha": "97316ef49ab92f754150ef3ce5a3de69ff1a6e8e", "filename": "libstdc++-v3/include/std/string_view", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstring_view?ref=c6888c62577671bdc5b4d71f21bd23897cc1db69", "patch": "@@ -35,9 +35,7 @@\n \n #pragma GCC system_header\n \n-#if __cplusplus <= 201402L\n-# include <bits/c++17_warning.h>\n-#else\n+#if __cplusplus >= 201703L\n \n #include <limits>\n #include <iosfwd>\n@@ -49,6 +47,8 @@ namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n+#define __cpp_lib_string_view 201603\n+\n   /**\n    *  @class basic_string_view <string_view>\n    *  @brief  A non-owning reference to a string."}, {"sha": "ee2571b78577c55e0a9a95b696bfdd76c62fef70", "filename": "libstdc++-v3/include/std/variant", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fvariant?ref=c6888c62577671bdc5b4d71f21bd23897cc1db69", "patch": "@@ -31,9 +31,7 @@\n \n #pragma GCC system_header\n \n-#if __cplusplus <= 201402L\n-# include <bits/c++17_warning.h>\n-#else\n+#if __cplusplus >= 201703L\n \n #include <type_traits>\n #include <utility>\n@@ -70,6 +68,8 @@ namespace __variant\n } // namespace __variant\n } // namespace __detail\n \n+#define __cpp_lib_variant 201603\n+\n   template<typename... _Types> class tuple;\n   template<typename... _Types> class variant;\n   template <typename> struct hash;"}, {"sha": "98964eadbde9a3a9e534ce6046be416f78784af1", "filename": "libstdc++-v3/testsuite/20_util/optional/cons/value_neg.cc", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fcons%2Fvalue_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fcons%2Fvalue_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Foptional%2Fcons%2Fvalue_neg.cc?ref=c6888c62577671bdc5b4d71f21bd23897cc1db69", "patch": "@@ -37,8 +37,8 @@ int main()\n     std::optional<std::unique_ptr<int>> oup2 = new int;  // { dg-error \"conversion\" }\n     struct U { explicit U(std::in_place_t); };\n     std::optional<U> ou(std::in_place); // { dg-error \"no matching\" }\n-    // { dg-error \"no type\" \"\" { target { *-*-* } } 493 }\n-    // { dg-error \"no type\" \"\" { target { *-*-* } } 503 }\n-    // { dg-error \"no type\" \"\" { target { *-*-* } } 560 }\n+    // { dg-error \"no type\" \"\" { target { *-*-* } } 495 }\n+    // { dg-error \"no type\" \"\" { target { *-*-* } } 505 }\n+    // { dg-error \"no type\" \"\" { target { *-*-* } } 562 }\n   }\n }"}, {"sha": "0f0b7b85b4e0d234c9d27cf02c84e1d80979a545", "filename": "libstdc++-v3/testsuite/26_numerics/gcd/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fgcd%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fgcd%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fgcd%2F1.cc?ref=c6888c62577671bdc5b4d71f21bd23897cc1db69", "patch": "@@ -20,9 +20,9 @@\n \n #include <numeric>\n \n-#ifndef __cpp_lib_gcd\n+#ifndef __cpp_lib_gcd_lcm\n # error \"Feature-test macro for gcd missing\"\n-#elif __cpp_lib_gcd != 201606\n+#elif __cpp_lib_gcd_lcm != 201606\n # error \"Feature-test macro for gcd has wrong value\"\n #endif\n "}, {"sha": "d88f145d75452ecec938c44c0a9579aff058f8de", "filename": "libstdc++-v3/testsuite/26_numerics/gcd/gcd_neg.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fgcd%2Fgcd_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fgcd%2Fgcd_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Fgcd%2Fgcd_neg.cc?ref=c6888c62577671bdc5b4d71f21bd23897cc1db69", "patch": "@@ -31,9 +31,9 @@ test01()\n   std::gcd(0.1, 0.1);   // { dg-error \"from here\" }\n }\n \n-// { dg-error \"integers\" \"\" { target *-*-* } 130 }\n-// { dg-error \"integers\" \"\" { target *-*-* } 131 }\n-// { dg-error \"not bools\" \"\" { target *-*-* } 132 }\n-// { dg-error \"not bools\" \"\" { target *-*-* } 133 }\n+// { dg-error \"integers\" \"\" { target *-*-* } 134 }\n+// { dg-error \"integers\" \"\" { target *-*-* } 135 }\n+// { dg-error \"not bools\" \"\" { target *-*-* } 136 }\n+// { dg-error \"not bools\" \"\" { target *-*-* } 137 }\n // { dg-prune-output \"deleted function\" }\n // { dg-prune-output \"invalid operands\" }"}, {"sha": "367f0a3e0e3f6de205568877c8f68e27252ca5a9", "filename": "libstdc++-v3/testsuite/26_numerics/lcm/1.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Flcm%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Flcm%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Flcm%2F1.cc?ref=c6888c62577671bdc5b4d71f21bd23897cc1db69", "patch": "@@ -20,9 +20,9 @@\n \n #include <numeric>\n \n-#ifndef __cpp_lib_lcm\n+#ifndef __cpp_lib_gcd_lcm\n # error \"Feature-test macro for lcm missing\"\n-#elif __cpp_lib_lcm != 201606\n+#elif __cpp_lib_gcd_lcm != 201606\n # error \"Feature-test macro for lcm has wrong value\"\n #endif\n "}, {"sha": "7a908a4568ff885bf6729d54b6d33e733a01295b", "filename": "libstdc++-v3/testsuite/26_numerics/lcm/lcm_neg.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Flcm%2Flcm_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Flcm%2Flcm_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Flcm%2Flcm_neg.cc?ref=c6888c62577671bdc5b4d71f21bd23897cc1db69", "patch": "@@ -31,9 +31,9 @@ test01()\n   std::lcm(0.1, 0.1);   // { dg-error \"from here\" }\n }\n \n-// { dg-error \"integers\" \"\" { target *-*-* } 143 }\n-// { dg-error \"integers\" \"\" { target *-*-* } 144 }\n-// { dg-error \"not bools\" \"\" { target *-*-* } 145 }\n-// { dg-error \"not bools\" \"\" { target *-*-* } 146 }\n+// { dg-error \"integers\" \"\" { target *-*-* } 146 }\n+// { dg-error \"integers\" \"\" { target *-*-* } 147 }\n+// { dg-error \"not bools\" \"\" { target *-*-* } 148 }\n+// { dg-error \"not bools\" \"\" { target *-*-* } 149 }\n // { dg-prune-output \"deleted function\" }\n // { dg-prune-output \"invalid operands\" }"}, {"sha": "b8a09042094a150718cbc84f6e0e1b982c7cf9d5", "filename": "libstdc++-v3/testsuite/30_threads/scoped_lock/requirements/typedefs.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fscoped_lock%2Frequirements%2Ftypedefs.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6888c62577671bdc5b4d71f21bd23897cc1db69/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fscoped_lock%2Frequirements%2Ftypedefs.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F30_threads%2Fscoped_lock%2Frequirements%2Ftypedefs.cc?ref=c6888c62577671bdc5b4d71f21bd23897cc1db69", "patch": "@@ -27,7 +27,7 @@\n \n #ifndef __cpp_lib_scoped_lock\n # error \"Feature-test macro for scoped_lock missing\"\n-#elif __cpp_lib_scoped_lock != 201707\n+#elif __cpp_lib_scoped_lock != 201703\n # error \"Feature-test macro for scoped_lock has wrong value\"\n #endif\n "}]}