{"sha": "34785d0514897765d254fe7683089c0fc2252278", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ3ODVkMDUxNDg5Nzc2NWQyNTRmZTc2ODMwODljMGZjMjI1MjI3OA==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-07-07T22:03:52Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1993-07-07T22:03:52Z"}, "message": "(simplify_comparison): Add parentheses to satify gcc.\n\nFrom-SVN: r4877", "tree": {"sha": "f3ef72fc616305bf9a3045ce85619c9a1b2939ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f3ef72fc616305bf9a3045ce85619c9a1b2939ee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34785d0514897765d254fe7683089c0fc2252278", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34785d0514897765d254fe7683089c0fc2252278", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34785d0514897765d254fe7683089c0fc2252278", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34785d0514897765d254fe7683089c0fc2252278/comments", "author": null, "committer": null, "parents": [{"sha": "706fdb4557c4452fa2925c2bba68a5a04b9a13aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/706fdb4557c4452fa2925c2bba68a5a04b9a13aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/706fdb4557c4452fa2925c2bba68a5a04b9a13aa"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3763ab35f79b93f7cc303eb4c3ef905b6bc34bb8", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34785d0514897765d254fe7683089c0fc2252278/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34785d0514897765d254fe7683089c0fc2252278/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=34785d0514897765d254fe7683089c0fc2252278", "patch": "@@ -8731,7 +8731,7 @@ simplify_comparison (code, pop0, pop1)\n \t      && ((INTVAL (XEXP (op0, 1)) + ! equality_comparison_p)\n \t\t  < HOST_BITS_PER_WIDE_INT)\n \t      && ((const_op\n-\t\t   &  ((HOST_WIDE_INT) 1 << INTVAL (XEXP (op0, 1))) - 1) == 0)\n+\t\t   & (((HOST_WIDE_INT) 1 << INTVAL (XEXP (op0, 1))) - 1)) == 0)\n \t      && mode_width <= HOST_BITS_PER_WIDE_INT\n \t      && (nonzero_bits (XEXP (op0, 0), mode)\n \t\t  & ~ (mask >> (INTVAL (XEXP (op0, 1))"}]}