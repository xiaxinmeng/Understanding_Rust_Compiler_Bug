{"sha": "9740ed54a6daf89d224a169d93412e6d821fad3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTc0MGVkNTRhNmRhZjg5ZDIyNGExNjlkOTM0MTJlNmQ4MjFmYWQzYw==", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2017-05-19T13:32:19Z"}, "committer": {"name": "Thomas Schwinge", "email": "tschwinge@gcc.gnu.org", "date": "2017-05-19T13:32:19Z"}, "message": "OpenACC default clause maintenance\n\n\tgcc/cp/\n\t* parser.c (cp_parser_omp_clause_default): Avoid printing more\n\tthan one syntax error message.\n\tgcc/testsuite/\n\t* c-c++-common/goacc/default-1.c: New file.\n\t* c-c++-common/goacc/default-2.c: Likewise.\n\t* c-c++-common/goacc/data-default-1.c: Remove file, including its\n\ttest cases in...\n\t* c-c++-common/goacc/default-3.c: ... this new file, and...\n\t* c-c++-common/goacc/default-4.c: ... this new file.\n\t* gfortran.dg/goacc/default.f95: Remove file, including its test\n\tcases in...\n\t* gfortran.dg/goacc/default-1.f95: ... this new file, and...\n\t* gfortran.dg/goacc/default-2.f: ... this new file.\n\t* gfortran.dg/goacc/default-3.f95: New file.\n\t* gfortran.dg/goacc/default-4.f: Likewise.\n\nFrom-SVN: r248278", "tree": {"sha": "f6d893cb0f914aafcc9e75a70fce7f7445a2d978", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6d893cb0f914aafcc9e75a70fce7f7445a2d978"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9740ed54a6daf89d224a169d93412e6d821fad3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9740ed54a6daf89d224a169d93412e6d821fad3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9740ed54a6daf89d224a169d93412e6d821fad3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9740ed54a6daf89d224a169d93412e6d821fad3c/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0da2f96af06ef8254e87cab0cc4395aa512928f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0da2f96af06ef8254e87cab0cc4395aa512928f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0da2f96af06ef8254e87cab0cc4395aa512928f5"}], "stats": {"total": 335, "additions": 280, "deletions": 55}, "files": [{"sha": "c89f71981e35b22c591f89329502a611a6683fc3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=9740ed54a6daf89d224a169d93412e6d821fad3c", "patch": "@@ -1,3 +1,8 @@\n+2017-05-19  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* parser.c (cp_parser_omp_clause_default): Avoid printing more\n+\tthan one syntax error message.\n+\n 2017-05-19  Nathan Sidwell  <nathan@acm.org>\n \n \t* class.c (class_dump_id): Define."}, {"sha": "6453397b530790efd60528617747557e3be61a74", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=9740ed54a6daf89d224a169d93412e6d821fad3c", "patch": "@@ -31504,7 +31504,8 @@ cp_parser_omp_clause_default (cp_parser *parser, tree list,\n \tcp_parser_error (parser, \"expected %<none%> or %<shared%>\");\n     }\n \n-  if (!cp_parser_require (parser, CPP_CLOSE_PAREN, RT_CLOSE_PAREN))\n+  if (kind == OMP_CLAUSE_DEFAULT_UNSPECIFIED\n+      || !cp_parser_require (parser, CPP_CLOSE_PAREN, RT_CLOSE_PAREN))\n     cp_parser_skip_to_closing_parenthesis (parser, /*recovering=*/true,\n \t\t\t\t\t   /*or_comma=*/false,\n \t\t\t\t\t   /*consume_paren=*/true);"}, {"sha": "ca901c29a665f3b2feb72fbdb7ddd4afe5fadde2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9740ed54a6daf89d224a169d93412e6d821fad3c", "patch": "@@ -1,3 +1,18 @@\n+2017-05-19  Thomas Schwinge  <thomas@codesourcery.com>\n+\n+\t* c-c++-common/goacc/default-1.c: New file.\n+\t* c-c++-common/goacc/default-2.c: Likewise.\n+\t* c-c++-common/goacc/data-default-1.c: Remove file, including its\n+\ttest cases in...\n+\t* c-c++-common/goacc/default-3.c: ... this new file, and...\n+\t* c-c++-common/goacc/default-4.c: ... this new file.\n+\t* gfortran.dg/goacc/default.f95: Remove file, including its test\n+\tcases in...\n+\t* gfortran.dg/goacc/default-1.f95: ... this new file, and...\n+\t* gfortran.dg/goacc/default-2.f: ... this new file.\n+\t* gfortran.dg/goacc/default-3.f95: New file.\n+\t* gfortran.dg/goacc/default-4.f: Likewise.\n+\n 2017-05-19  Nathan Sidwell  <nathan@acm.org>\n \n \t* g++.dg/inherit/covariant7.C: Adjust."}, {"sha": "ec53cbed517dba73b25fbd695aa7c780d6775872", "filename": "gcc/testsuite/c-c++-common/goacc/data-default-1.c", "status": "removed", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da2f96af06ef8254e87cab0cc4395aa512928f5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdata-default-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da2f96af06ef8254e87cab0cc4395aa512928f5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdata-default-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdata-default-1.c?ref=0da2f96af06ef8254e87cab0cc4395aa512928f5", "patch": "@@ -1,37 +0,0 @@\n-/* { dg-do compile } */\n-\n-\n-int main ()\n-{\n-  int n = 2;\n-  int ary[2];\n-  \n-#pragma acc parallel default (none) /* { dg-message \"'parallel' construct\" \"2\" } */\n-  {\n-    ary[0] /* { dg-error \"not specified in enclosing\" } */\n-      = n; /* { dg-error \"not specified in enclosing\" } */\n-  }\n-\n-#pragma acc kernels default (none) /* { dg-message \"'kernels' construct\" \"2\" } */\n-  {\n-    ary[0] /* { dg-error \"not specified in enclosing\" } */\n-      = n; /* { dg-error \"not specified in enclosing\" } */\n-  }\n-\n-#pragma acc data copy (ary, n)\n-  {\n-#pragma acc parallel default (none)\n-    {\n-      ary[0]\n-\t= n;\n-    }\n-\n-#pragma acc kernels default (none)\n-    {\n-      ary[0]\n-\t= n;\n-    }\n-  }\n-\n-  return 0;\n-}"}, {"sha": "4d31dbc981b84144ca028c2a5bf27d06d19d02ee", "filename": "gcc/testsuite/c-c++-common/goacc/default-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-1.c?ref=9740ed54a6daf89d224a169d93412e6d821fad3c", "patch": "@@ -0,0 +1,9 @@\n+/* OpenACC default clause: valid syntax.  */\n+\n+void f1 ()\n+{\n+#pragma acc kernels default (none)\n+  ;\n+#pragma acc parallel default (none)\n+  ;\n+}"}, {"sha": "d6b6cdce4d7d4e7b867040d50a1194320dee1f8b", "filename": "gcc/testsuite/c-c++-common/goacc/default-2.c", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-2.c?ref=9740ed54a6daf89d224a169d93412e6d821fad3c", "patch": "@@ -0,0 +1,59 @@\n+/* OpenACC default clause: invalid syntax.  */\n+\n+void f1 ()\n+{\n+#pragma acc kernels default /* { dg-error \"expected .\\\\(. before end of line\" } */\n+  ;\n+#pragma acc parallel default /* { dg-error \"expected .\\\\(. before end of line\" } */\n+  ;\n+\n+#pragma acc kernels default ( /* { dg-error \"expected .none. before end of line\" } */\n+  ;\n+#pragma acc parallel default ( /* { dg-error \"expected .none. before end of line\" } */\n+  ;\n+\n+#pragma acc kernels default (, /* { dg-error \"expected .none. before .,. token\" } */\n+  ;\n+#pragma acc parallel default (, /* { dg-error \"expected .none. before .,. token\" } */\n+  ;\n+\n+#pragma acc kernels default () /* { dg-error \"expected .none. before .\\\\). token\" } */\n+  ;\n+#pragma acc parallel default () /* { dg-error \"expected .none. before .\\\\). token\" } */\n+  ;\n+\n+#pragma acc kernels default (,) /* { dg-error \"expected .none. before .,. token\" } */\n+  ;\n+#pragma acc parallel default (,) /* { dg-error \"expected .none. before .,. token\" } */\n+  ;\n+\n+#pragma acc kernels default (firstprivate) /* { dg-error \"expected .none. before .firstprivate.\" } */\n+  ;\n+#pragma acc parallel default (firstprivate) /* { dg-error \"expected .none. before .firstprivate.\" } */\n+  ;\n+\n+#pragma acc kernels default (private) /* { dg-error \"expected .none. before .private.\" } */\n+  ;\n+#pragma acc parallel default (private) /* { dg-error \"expected .none. before .private.\" } */\n+  ;\n+\n+#pragma acc kernels default (shared) /* { dg-error \"expected .none. before .shared.\" } */\n+  ;\n+#pragma acc parallel default (shared) /* { dg-error \"expected .none. before .shared.\" } */\n+  ;\n+\n+#pragma acc kernels default (none /* { dg-error \"expected .\\\\). before end of line\" } */\n+  ;\n+#pragma acc parallel default (none /* { dg-error \"expected .\\\\). before end of line\" } */\n+  ;\n+\n+#pragma acc kernels default (none none) /* { dg-error \"expected .\\\\). before .none.\" } */\n+  ;\n+#pragma acc parallel default (none none) /* { dg-error \"expected .\\\\). before .none.\" } */\n+  ;\n+\n+#pragma acc kernels default (none, none) /* { dg-error \"expected .\\\\). before .,. token\" } */\n+  ;\n+#pragma acc parallel default (none, none) /* { dg-error \"expected .\\\\). before .,. token\" } */\n+  ;\n+}"}, {"sha": "ac169a903e9829a6d45b0e56080db76e29be13dd", "filename": "gcc/testsuite/c-c++-common/goacc/default-3.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-3.c?ref=9740ed54a6daf89d224a169d93412e6d821fad3c", "patch": "@@ -0,0 +1,18 @@\n+/* OpenACC default (none) clause.  */\n+\n+void f1 ()\n+{\n+  int f1_a = 2;\n+  float f1_b[2];\n+  \n+#pragma acc kernels default (none) /* { dg-message \"enclosing OpenACC .kernels. construct\" } */\n+  {\n+    f1_b[0] /* { dg-error \".f1_b. not specified in enclosing OpenACC .kernels. construct\" } */\n+      = f1_a; /* { dg-error \".f1_a. not specified in enclosing OpenACC .kernels. construct\" } */\n+  }\n+#pragma acc parallel default (none) /* { dg-message \"enclosing OpenACC .parallel. construct\" } */\n+  {\n+    f1_b[0] /* { dg-error \".f1_b. not specified in enclosing OpenACC .parallel. construct\" } */\n+      = f1_a; /* { dg-error \".f1_a. not specified in enclosing OpenACC .parallel. construct\" } */\n+  }\n+}"}, {"sha": "787b35256dbe65465657a869bbf74e34fc636658", "filename": "gcc/testsuite/c-c++-common/goacc/default-4.c", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fdefault-4.c?ref=9740ed54a6daf89d224a169d93412e6d821fad3c", "patch": "@@ -0,0 +1,45 @@\n+/* OpenACC default clause inside data construct.  */\n+\n+/* { dg-additional-options \"-fdump-tree-gimple\" } */\n+\n+void f1 ()\n+{\n+  int f1_a = 2;\n+  float f1_b[2];\n+\n+#pragma acc data copyin (f1_a) copyout (f1_b)\n+  /* { dg-final { scan-tree-dump-times \"omp target oacc_data map\\\\(force_from:f1_b \\[^\\\\)\\]+\\\\) map\\\\(force_to:f1_a\" 1 \"gimple\" } } */\n+  {\n+#pragma acc kernels\n+    /* { dg-final { scan-tree-dump-times \"omp target oacc_kernels map\\\\(tofrom:f1_b \\[^\\\\)\\]+\\\\) map\\\\(tofrom:f1_a\" 1 \"gimple\" } } */\n+    {\n+      f1_b[0] = f1_a;\n+    }\n+#pragma acc parallel\n+    /* { dg-final { scan-tree-dump-times \"omp target oacc_parallel map\\\\(tofrom:f1_b \\[^\\\\)\\]+\\\\) map\\\\(tofrom:f1_a\" 1 \"gimple\" } } */\n+    {\n+      f1_b[0] = f1_a;\n+    }\n+  }\n+}\n+\n+void f2 ()\n+{\n+  int f2_a = 2;\n+  float f2_b[2];\n+\n+#pragma acc data copyin (f2_a) copyout (f2_b)\n+  /* { dg-final { scan-tree-dump-times \"omp target oacc_data map\\\\(force_from:f2_b \\[^\\\\)\\]+\\\\) map\\\\(force_to:f2_a\" 1 \"gimple\" } } */\n+  {\n+#pragma acc kernels default (none)\n+    /* { dg-final { scan-tree-dump-times \"omp target oacc_kernels default\\\\(none\\\\) map\\\\(tofrom:f2_b \\[^\\\\)\\]+\\\\) map\\\\(tofrom:f2_a\" 1 \"gimple\" } } */\n+    {\n+      f2_b[0] = f2_a;\n+    }\n+#pragma acc parallel default (none)\n+    /* { dg-final { scan-tree-dump-times \"omp target oacc_parallel default\\\\(none\\\\) map\\\\(tofrom:f2_b \\[^\\\\)\\]+\\\\) map\\\\(tofrom:f2_a\" 1 \"gimple\" } } */\n+    {\n+      f2_b[0] = f2_a;\n+    }\n+  }\n+}"}, {"sha": "a79b444f6f488724801561df17c56bb9b21f8a90", "filename": "gcc/testsuite/gfortran.dg/goacc/default-1.f95", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-1.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-1.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-1.f95?ref=9740ed54a6daf89d224a169d93412e6d821fad3c", "patch": "@@ -0,0 +1,10 @@\n+! OpenACC default clause: valid syntax.\n+\n+subroutine f1\n+  implicit none\n+\n+  !$acc kernels default (none)\n+  !$acc end kernels\n+  !$acc parallel default (none)\n+  !$acc end parallel\n+end subroutine f1"}, {"sha": "8f886887f4b2ef7b3af87bf00904ac0698acf801", "filename": "gcc/testsuite/gfortran.dg/goacc/default-2.f", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-2.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-2.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-2.f?ref=9740ed54a6daf89d224a169d93412e6d821fad3c", "patch": "@@ -0,0 +1,60 @@\n+! OpenACC default clause: invalid syntax.\n+\n+      SUBROUTINE F1\n+      IMPLICIT NONE\n+\n+!$ACC KERNELS DEFAULT ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END KERNELS ! { dg-error \"Unexpected\" }\n+!$ACC PARALLEL DEFAULT ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n+\n+!$ACC KERNELS DEFAULT ( ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END KERNELS ! { dg-error \"Unexpected\" }\n+!$ACC PARALLEL DEFAULT ( ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n+\n+!$ACC KERNELS DEFAULT (, ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END KERNELS ! { dg-error \"Unexpected\" }\n+!$ACC PARALLEL DEFAULT (, ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n+\n+!$ACC KERNELS DEFAULT () ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END KERNELS ! { dg-error \"Unexpected\" }\n+!$ACC PARALLEL DEFAULT () ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n+\n+!$ACC KERNELS DEFAULT (,) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END KERNELS ! { dg-error \"Unexpected\" }\n+!$ACC PARALLEL DEFAULT (,) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n+\n+!$ACC KERNELS DEFAULT (FIRSTPRIVATE) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END KERNELS ! { dg-error \"Unexpected\" }\n+!$ACC PARALLEL DEFAULT (FIRSTPRIVATE) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n+\n+!$ACC KERNELS DEFAULT (PRIVATE) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END KERNELS ! { dg-error \"Unexpected\" }\n+!$ACC PARALLEL DEFAULT (PRIVATE) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n+\n+!$ACC KERNELS DEFAULT (SHARED) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END KERNELS ! { dg-error \"Unexpected\" }\n+!$ACC PARALLEL DEFAULT (SHARED) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n+\n+!$ACC KERNELS DEFAULT (NONE ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END KERNELS ! { dg-error \"Unexpected\" }\n+!$ACC PARALLEL DEFAULT (NONE ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n+\n+!$ACC KERNELS DEFAULT (NONE NONE) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END KERNELS ! { dg-error \"Unexpected\" }\n+!$ACC PARALLEL DEFAULT (NONE NONE) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n+\n+!$ACC KERNELS DEFAULT (NONE, NONE) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END KERNELS ! { dg-error \"Unexpected\" }\n+!$ACC PARALLEL DEFAULT (NONE, NONE) ! { dg-error \"Unclassifiable OpenACC directive\" }\n+!$ACC END PARALLEL ! { dg-error \"Unexpected\" }\n+      END SUBROUTINE F1"}, {"sha": "98ed34200c6c279bf7715ba26ad3dd66b0f5f563", "filename": "gcc/testsuite/gfortran.dg/goacc/default-3.f95", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-3.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-3.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-3.f95?ref=9740ed54a6daf89d224a169d93412e6d821fad3c", "patch": "@@ -0,0 +1,18 @@\n+! OpenACC default (none) clause.\n+\n+subroutine f1\n+  implicit none\n+  integer :: f1_a = 2\n+  real, dimension (2) :: f1_b\n+\n+  !$acc kernels default (none) ! { dg-message \"enclosing OpenACC .kernels. construct\" }\n+  f1_b(1) & ! { dg-error \".f1_b. not specified in enclosing OpenACC .kernels. construct\" \"\" { xfail *-*-* } }\n+       = f1_a; ! { dg-error \".f1_a. not specified in enclosing OpenACC .kernels. construct\" }\n+  ! { dg-bogus \".f1_b. not specified in enclosing OpenACC .kernels. construct\" \"\" { xfail *-*-* } .-1 }\n+  !$acc end kernels\n+  !$acc parallel default (none) ! { dg-message \"enclosing OpenACC .parallel. construct\" }\n+  f1_b(1) & ! { dg-error \".f1_b. not specified in enclosing OpenACC .parallel. construct\" \"\" { xfail *-*-* } }\n+       = f1_a; ! { dg-error \".f1_a. not specified in enclosing OpenACC .parallel. construct\" }\n+  ! { dg-bogus \".f1_b. not specified in enclosing OpenACC .parallel. construct\" \"\" { xfail *-*-* } .-1 }\n+  !$acc end parallel\n+end subroutine f1"}, {"sha": "b2f73c3bcfb728ccf4318c42341d18e9ba58eb5d", "filename": "gcc/testsuite/gfortran.dg/goacc/default-4.f", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-4.f", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9740ed54a6daf89d224a169d93412e6d821fad3c/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-4.f", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault-4.f?ref=9740ed54a6daf89d224a169d93412e6d821fad3c", "patch": "@@ -0,0 +1,39 @@\n+! OpenACC default clause inside data construct.\n+\n+! { dg-additional-options \"-fdump-tree-gimple\" } \n+\n+      SUBROUTINE F1\n+      IMPLICIT NONE\n+      INTEGER :: F1_A = 2\n+      REAL, DIMENSION (2) :: F1_B\n+\n+!$ACC DATA COPYIN (F1_A) COPYOUT (F1_B)\n+! { dg-final { scan-tree-dump-times \"omp target oacc_data map\\\\(force_to:f1_a \\[^\\\\)\\]+\\\\) map\\\\(force_from:f1_b\" 1 \"gimple\" } }\n+!$ACC KERNELS\n+! { dg-final { scan-tree-dump-times \"omp target oacc_kernels map\\\\(tofrom:f1_b \\[^\\\\)\\]+\\\\) map\\\\(tofrom:f1_a\" 1 \"gimple\" } }\n+      F1_B(1) = F1_A;\n+!$ACC END KERNELS\n+!$ACC PARALLEL\n+! { dg-final { scan-tree-dump-times \"omp target oacc_parallel map\\\\(tofrom:f1_b \\[^\\\\)\\]+\\\\) map\\\\(tofrom:f1_a\" 1 \"gimple\" } }\n+      F1_B(1) = F1_A;\n+!$ACC END PARALLEL\n+!$ACC END DATA\n+      END SUBROUTINE F1\n+\n+      SUBROUTINE F2\n+      IMPLICIT NONE\n+      INTEGER :: F2_A = 2\n+      REAL, DIMENSION (2) :: F2_B\n+\n+!$ACC DATA COPYIN (F2_A) COPYOUT (F2_B)\n+! { dg-final { scan-tree-dump-times \"omp target oacc_data map\\\\(force_to:f2_a \\[^\\\\)\\]+\\\\) map\\\\(force_from:f2_b\" 1 \"gimple\" } }\n+!$ACC KERNELS DEFAULT (NONE)\n+! { dg-final { scan-tree-dump-times \"omp target oacc_kernels default\\\\(none\\\\) map\\\\(tofrom:f2_b \\[^\\\\)\\]+\\\\) map\\\\(tofrom:f2_a\" 1 \"gimple\" } }\n+      F2_B(1) = F2_A;\n+!$ACC END KERNELS\n+!$ACC PARALLEL DEFAULT (NONE)\n+! { dg-final { scan-tree-dump-times \"omp target oacc_parallel default\\\\(none\\\\) map\\\\(tofrom:f2_b \\[^\\\\)\\]+\\\\) map\\\\(tofrom:f2_a\" 1 \"gimple\" } }\n+      F2_B(1) = F2_A;\n+!$ACC END PARALLEL\n+!$ACC END DATA\n+      END SUBROUTINE F2"}, {"sha": "c1fc52e6014331300ca2c8680e7ed44c64029534", "filename": "gcc/testsuite/gfortran.dg/goacc/default.f95", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0da2f96af06ef8254e87cab0cc4395aa512928f5/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault.f95", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0da2f96af06ef8254e87cab0cc4395aa512928f5/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault.f95", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgoacc%2Fdefault.f95?ref=0da2f96af06ef8254e87cab0cc4395aa512928f5", "patch": "@@ -1,17 +0,0 @@\n-! { dg-do compile }\n-\n-program tile\n-  integer i, j, a\n-\n-  !$acc parallel default (shared) ! { dg-error \"Unclassifiable OpenACC directive\" }\n-  !$acc end parallel ! { dg-error \"Unexpected\" }\n-\n-  !$acc parallel default (private) ! { dg-error \"Unclassifiable OpenACC directive\" }\n-  !$acc end parallel ! { dg-error \"Unexpected\" }\n-\n-  !$acc parallel default (none)\n-  !$acc end parallel\n-\n-  !$acc parallel default (firstprivate) ! { dg-error \"Unclassifiable OpenACC directive\" }\n-  !$acc end parallel ! { dg-error \"Unexpected\" }\n-end program tile"}]}