{"sha": "119af78aa8c30f259b00678717ef67a0619cfe4e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTE5YWY3OGFhOGMzMGYyNTliMDA2Nzg3MTdlZjY3YTA2MTljZmU0ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-02T12:13:33Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-06-02T12:13:33Z"}, "message": "(expand_expr, case ADDR_EXPR): If result is ignored, just return\nconst0_rtx.\n\nFrom-SVN: r7421", "tree": {"sha": "5fd7645b59cca8c3cee69ce3c90c7f68116bb26d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5fd7645b59cca8c3cee69ce3c90c7f68116bb26d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/119af78aa8c30f259b00678717ef67a0619cfe4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/119af78aa8c30f259b00678717ef67a0619cfe4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/119af78aa8c30f259b00678717ef67a0619cfe4e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/119af78aa8c30f259b00678717ef67a0619cfe4e/comments", "author": null, "committer": null, "parents": [{"sha": "94b25f81caba08a4b8a4d031d7df61b287d19b8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/94b25f81caba08a4b8a4d031d7df61b287d19b8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/94b25f81caba08a4b8a4d031d7df61b287d19b8e"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "2e0f5ef9013a41e6c36f7f1f926cdc6f31579236", "filename": "gcc/expr.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/119af78aa8c30f259b00678717ef67a0619cfe4e/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/119af78aa8c30f259b00678717ef67a0619cfe4e/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=119af78aa8c30f259b00678717ef67a0619cfe4e", "patch": "@@ -5863,6 +5863,12 @@ expand_expr (exp, target, tmode, modifier)\n \t\t\t     (modifier == EXPAND_INITIALIZER\n \t\t\t      ? modifier : EXPAND_CONST_ADDRESS));\n \n+\t  /* If we are going to ignore the result, OP0 will have been set\n+\t     to const0_rtx, so just return it.  Don't get confused and\n+\t     think we are taking the address of the constant.  */\n+\t  if (ignore)\n+\t    return op0;\n+\n \t  /* We would like the object in memory.  If it is a constant,\n \t     we can have it be statically allocated into memory.  For\n \t     a non-constant (REG, SUBREG or CONCAT), we need to allocate some"}]}