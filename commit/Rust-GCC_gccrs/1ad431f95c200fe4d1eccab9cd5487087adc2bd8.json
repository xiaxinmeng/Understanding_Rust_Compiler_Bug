{"sha": "1ad431f95c200fe4d1eccab9cd5487087adc2bd8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWFkNDMxZjk1YzIwMGZlNGQxZWNjYWI5Y2Q1NDg3MDg3YWRjMmJkOA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-12-18T12:44:34Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-12-18T12:44:34Z"}, "message": "PR c++/12333 - X::~X() with implicit this->.\n\nthis->X::~X() is handled by finish_class_member_access_expr and its\nlookup_destructor subroutine; let's use it in cp_parser_lookup_name for the\ncase where this-> is implicit.\n\nI tried replacing the other destructor code here with just the call to\nlookup_destructor, but that regressed handling of naming the destructor\noutside a non-static member function.\n\n\t* parser.c (cp_parser_lookup_name): Use lookup_destructor.\n\t* typeck.c (lookup_destructor): No longer static.\n\nFrom-SVN: r279522", "tree": {"sha": "a43658ed7be8f865ba478101168b95d555962029", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a43658ed7be8f865ba478101168b95d555962029"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ad431f95c200fe4d1eccab9cd5487087adc2bd8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ad431f95c200fe4d1eccab9cd5487087adc2bd8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ad431f95c200fe4d1eccab9cd5487087adc2bd8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ad431f95c200fe4d1eccab9cd5487087adc2bd8/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "542803c9adea448854477e0a544455cffda7cd51", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/542803c9adea448854477e0a544455cffda7cd51", "html_url": "https://github.com/Rust-GCC/gccrs/commit/542803c9adea448854477e0a544455cffda7cd51"}], "stats": {"total": 36, "additions": 30, "deletions": 6}, "files": [{"sha": "8b1d4e036d8fcfb3f256bea2e5910270d03a51a5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ad431f95c200fe4d1eccab9cd5487087adc2bd8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ad431f95c200fe4d1eccab9cd5487087adc2bd8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=1ad431f95c200fe4d1eccab9cd5487087adc2bd8", "patch": "@@ -1,3 +1,9 @@\n+2019-12-17  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/12333 - X::~X() with implicit this->.\n+\t* parser.c (cp_parser_lookup_name): Use lookup_destructor.\n+\t* typeck.c (lookup_destructor): No longer static.\n+\n 2019-12-17  Martin Sebor  <msebor@redhat.com>\n \n \tPR c++/61339"}, {"sha": "c35ed9abe08f60e7da906e39fbcd0cfbb1291284", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ad431f95c200fe4d1eccab9cd5487087adc2bd8/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ad431f95c200fe4d1eccab9cd5487087adc2bd8/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=1ad431f95c200fe4d1eccab9cd5487087adc2bd8", "patch": "@@ -7500,6 +7500,7 @@ extern tree build_class_member_access_expr      (cp_expr, tree, tree, bool,\n \t\t\t\t\t\t tsubst_flags_t);\n extern tree finish_class_member_access_expr     (cp_expr, tree, bool,\n \t\t\t\t\t\t tsubst_flags_t);\n+extern tree lookup_destructor\t\t\t(tree, tree, tree, tsubst_flags_t);\n extern tree build_x_indirect_ref\t\t(location_t, tree,\n \t\t\t\t\t\t ref_operator,\n \t\t\t\t\t\t tsubst_flags_t);"}, {"sha": "de7928340505716e49fc0ddb0ab59a647c6d6cd6", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ad431f95c200fe4d1eccab9cd5487087adc2bd8/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ad431f95c200fe4d1eccab9cd5487087adc2bd8/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=1ad431f95c200fe4d1eccab9cd5487087adc2bd8", "patch": "@@ -27939,6 +27939,11 @@ cp_parser_lookup_name (cp_parser *parser, tree name,\n       if (!type || !CLASS_TYPE_P (type))\n \treturn error_mark_node;\n \n+      /* In a non-static member function, check implicit this->.  */\n+      if (current_class_ref)\n+\treturn lookup_destructor (current_class_ref, parser->scope, name,\n+\t\t\t\t  tf_warning_or_error);\n+\n       if (CLASSTYPE_LAZY_DESTRUCTOR (type))\n \tlazily_declare_fn (sfk_destructor, type);\n "}, {"sha": "669ca83cccff6f60da4dade600e84682c68e6098", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ad431f95c200fe4d1eccab9cd5487087adc2bd8/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ad431f95c200fe4d1eccab9cd5487087adc2bd8/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=1ad431f95c200fe4d1eccab9cd5487087adc2bd8", "patch": "@@ -59,7 +59,6 @@ static tree get_delta_difference (tree, tree, bool, bool, tsubst_flags_t);\n static void casts_away_constness_r (tree *, tree *, tsubst_flags_t);\n static bool casts_away_constness (tree, tree, tsubst_flags_t);\n static bool maybe_warn_about_returning_address_of_local (tree);\n-static tree lookup_destructor (tree, tree, tree, tsubst_flags_t);\n static void error_args_num (location_t, tree, bool);\n static int convert_arguments (tree, vec<tree, va_gc> **, tree, int,\n                               tsubst_flags_t);\n@@ -2696,7 +2695,7 @@ build_class_member_access_expr (cp_expr object, tree member,\n /* Return the destructor denoted by OBJECT.SCOPE::DTOR_NAME, or, if\n    SCOPE is NULL, by OBJECT.DTOR_NAME, where DTOR_NAME is ~type.  */\n \n-static tree\n+tree\n lookup_destructor (tree object, tree scope, tree dtor_name,\n \t\t   tsubst_flags_t complain)\n {"}, {"sha": "291228764012626876743814909c9c6a3eb78956", "filename": "gcc/testsuite/g++.dg/lookup/dtor1.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ad431f95c200fe4d1eccab9cd5487087adc2bd8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fdtor1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ad431f95c200fe4d1eccab9cd5487087adc2bd8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fdtor1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fdtor1.C?ref=1ad431f95c200fe4d1eccab9cd5487087adc2bd8", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/12333\n+\n+struct A { };\n+\n+struct X { \n+  void f () {\n+    X::~X ();\n+    this->~X();\n+    ~X();\t\t\t// { dg-error \"\" \"unary ~\" }\n+    A::~A ();\t\t\t// { dg-error \"\" }\n+    X::~A ();  \t\t\t// { dg-error \"\" }\n+  }\n+};"}, {"sha": "6121bed7e8be64b5395476e8668deaa04cb268c4", "filename": "gcc/testsuite/g++.dg/parse/dtor3.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ad431f95c200fe4d1eccab9cd5487087adc2bd8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ad431f95c200fe4d1eccab9cd5487087adc2bd8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fdtor3.C?ref=1ad431f95c200fe4d1eccab9cd5487087adc2bd8", "patch": "@@ -4,13 +4,13 @@\n //  destructor call.\n \n struct Y { \n-  ~Y() {}      // { dg-bogus \"note\" \"implemented DR272\" { xfail *-*-* } }  \n+  ~Y() {}      // { dg-bogus \"note\" \"implemented DR272\" }  \n };\n \n struct X : Y { \n-  ~X() {}      // { dg-bogus \"note\" \"implemented DR272\" { xfail *-*-* } }  \n+  ~X() {}      // { dg-bogus \"note\" \"implemented DR272\" }  \n   void f() { \n-    X::~X();   // { dg-bogus \"\" \"implemented DR272\" { xfail *-*-* } }  \n-    Y::~Y();   // { dg-bogus \"\" \"implemented DR272\" { xfail *-*-* } }  \n+    X::~X();   // { dg-bogus \"\" \"implemented DR272\" }  \n+    Y::~Y();   // { dg-bogus \"\" \"implemented DR272\" }  \n   } \n };"}]}