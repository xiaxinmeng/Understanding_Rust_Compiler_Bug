{"sha": "3dfc96ea690917c6d15775c1189140922dd35bca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RmYzk2ZWE2OTA5MTdjNmQxNTc3NWMxMTg5MTQwOTIyZGQzNWJjYQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2014-10-27T18:40:13Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-10-27T18:40:13Z"}, "message": "spu.c: Include rtl-iter.h\n\ngcc/\n\t* config/spu/spu.c: Include rtl-iter.h\n\t(ea_symbol_ref): Replace with...\n\t(ea_symbol_ref_p): ...this new function.\n\t(spu_legitimate_address_p): Update call accordingly.\n\t(spu_legitimate_constant_p): Likewise.  Use FOR_EACH_SUBRTX.\n\nFrom-SVN: r216752", "tree": {"sha": "3a4eeddddd2e815045886aef32075d970c2df5c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a4eeddddd2e815045886aef32075d970c2df5c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3dfc96ea690917c6d15775c1189140922dd35bca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dfc96ea690917c6d15775c1189140922dd35bca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3dfc96ea690917c6d15775c1189140922dd35bca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3dfc96ea690917c6d15775c1189140922dd35bca/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3e605b20a0c804d57d4be0f4f2bbab8b4e42fce6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e605b20a0c804d57d4be0f4f2bbab8b4e42fce6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e605b20a0c804d57d4be0f4f2bbab8b4e42fce6"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "b5dc7f2f6e74259938cfbb4a2758a19cc13b96d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dfc96ea690917c6d15775c1189140922dd35bca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dfc96ea690917c6d15775c1189140922dd35bca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3dfc96ea690917c6d15775c1189140922dd35bca", "patch": "@@ -1,3 +1,11 @@\n+2014-10-27  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/spu/spu.c: Include rtl-iter.h\n+\t(ea_symbol_ref): Replace with...\n+\t(ea_symbol_ref_p): ...this new function.\n+\t(spu_legitimate_address_p): Update call accordingly.\n+\t(spu_legitimate_constant_p): Likewise.  Use FOR_EACH_SUBRTX.\n+\n 2014-10-27  Phil Muldoon  <pmuldoon@redhat.com>\n \t    Tom Tromey  <tromey@redhat.com>\n "}, {"sha": "ef1ccef0b942f1ec1fe1e98363a5c54f1ab07023", "filename": "gcc/config/spu/spu.c", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3dfc96ea690917c6d15775c1189140922dd35bca/gcc%2Fconfig%2Fspu%2Fspu.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3dfc96ea690917c6d15775c1189140922dd35bca/gcc%2Fconfig%2Fspu%2Fspu.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fspu%2Fspu.c?ref=3dfc96ea690917c6d15775c1189140922dd35bca", "patch": "@@ -77,6 +77,7 @@\n #include \"dumpfile.h\"\n #include \"cfgloop.h\"\n #include \"builtins.h\"\n+#include \"rtl-iter.h\"\n \n /* Builtin types, data and prototypes. */\n \n@@ -3474,10 +3475,9 @@ exp2_immediate_p (rtx op, enum machine_mode mode, int low, int high)\n \n /* Return true if X is a SYMBOL_REF to an __ea qualified variable.  */\n \n-static int\n-ea_symbol_ref (rtx *px, void *data ATTRIBUTE_UNUSED)\n+static bool\n+ea_symbol_ref_p (const_rtx x)\n {\n-  rtx x = *px;\n   tree decl;\n \n   if (GET_CODE (x) == CONST && GET_CODE (XEXP (x, 0)) == PLUS)\n@@ -3504,13 +3504,15 @@ ea_symbol_ref (rtx *px, void *data ATTRIBUTE_UNUSED)\n bool\n spu_legitimate_constant_p (enum machine_mode mode, rtx x)\n {\n+  subrtx_iterator::array_type array;\n   if (GET_CODE (x) == HIGH)\n     x = XEXP (x, 0);\n \n   /* Reject any __ea qualified reference.  These can't appear in\n      instructions but must be forced to the constant pool.  */\n-  if (for_each_rtx (&x, ea_symbol_ref, 0))\n-    return 0;\n+  FOR_EACH_SUBRTX (iter, array, x, ALL)\n+    if (ea_symbol_ref_p (*iter))\n+      return 0;\n \n   /* V4SI with all identical symbols is valid. */\n   if (!flag_pic\n@@ -3556,7 +3558,7 @@ spu_legitimate_address_p (enum machine_mode mode,\n     case CONST:\n       /* Keep __ea references until reload so that spu_expand_mov can see them\n \t in MEMs.  */\n-      if (ea_symbol_ref (&x, 0))\n+      if (ea_symbol_ref_p (x))\n \treturn !reload_in_progress && !reload_completed;\n       return !TARGET_LARGE_MEM;\n "}]}