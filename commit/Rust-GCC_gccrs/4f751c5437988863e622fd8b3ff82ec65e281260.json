{"sha": "4f751c5437988863e622fd8b3ff82ec65e281260", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY3NTFjNTQzNzk4ODg2M2U2MjJmZDhiM2ZmODJlYzY1ZTI4MTI2MA==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-06-09T12:54:53Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-06-09T12:54:53Z"}, "message": "Speed-up indirect-call instrumentation\n\n2017-06-09  Martin Liska  <mliska@suse.cz>\n\n\t* tree-profile.c (gimple_gen_ic_profiler): Update comment.\n\t(gimple_gen_ic_func_profiler): Emit direct comparison\n\tof __gcov_indirect_call_callee with NULL.\n\t(gimple_gen_time_profiler): Change probability from\n\tPROB_VERY_UNLIKELY to PROB_UNLIKELY.\n2017-06-09  Martin Liska  <mliska@suse.cz>\n\n\t* libgcov-profiler.c (__gcov_indirect_call_profiler_v2):\n\tReset __gcov_indirect_call_callee to NULL.\n\nFrom-SVN: r249058", "tree": {"sha": "e9a69c8567c8e3789ca0f89d0560978b67d5d97b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9a69c8567c8e3789ca0f89d0560978b67d5d97b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f751c5437988863e622fd8b3ff82ec65e281260", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f751c5437988863e622fd8b3ff82ec65e281260", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f751c5437988863e622fd8b3ff82ec65e281260", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f751c5437988863e622fd8b3ff82ec65e281260/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f05d82a711d37d7958b6eda223f7afedb3eb5837", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f05d82a711d37d7958b6eda223f7afedb3eb5837", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f05d82a711d37d7958b6eda223f7afedb3eb5837"}], "stats": {"total": 74, "additions": 58, "deletions": 16}, "files": [{"sha": "b9612cf0ba883b5b50e8c4093e0ef344457d2471", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f751c5437988863e622fd8b3ff82ec65e281260/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f751c5437988863e622fd8b3ff82ec65e281260/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f751c5437988863e622fd8b3ff82ec65e281260", "patch": "@@ -1,3 +1,11 @@\n+2017-06-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* tree-profile.c (gimple_gen_ic_profiler): Update comment.\n+\t(gimple_gen_ic_func_profiler): Emit direct comparison\n+\tof __gcov_indirect_call_callee with NULL.\n+\t(gimple_gen_time_profiler): Change probability from\n+\tPROB_VERY_UNLIKELY to PROB_UNLIKELY.\n+\n 2017-06-09  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* profile.c (edge_gcov_counts): Turn to pointer."}, {"sha": "f5c066844022c4050f7cd61e430c5c6bbbdc7be0", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 43, "deletions": 16, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f751c5437988863e622fd8b3ff82ec65e281260/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f751c5437988863e622fd8b3ff82ec65e281260/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=4f751c5437988863e622fd8b3ff82ec65e281260", "patch": "@@ -388,6 +388,13 @@ gimple_gen_ic_profiler (histogram_value value, unsigned tag, unsigned base)\n     stmt1: __gcov_indirect_call_counters = get_relevant_counter_ptr ();\n     stmt2: tmp1 = (void *) (indirect call argument value)\n     stmt3: __gcov_indirect_call_callee = tmp1;\n+\n+    Example:\n+      f_1 = foo;\n+      __gcov_indirect_call_counters = &__gcov4.main[0];\n+      PROF_9 = f_1;\n+      __gcov_indirect_call_callee = PROF_9;\n+      _4 = f_1 ();\n    */\n \n   stmt1 = gimple_build_assign (ic_gcov_type_ptr_var, ref_ptr);\n@@ -410,23 +417,51 @@ void\n gimple_gen_ic_func_profiler (void)\n {\n   struct cgraph_node * c_node = cgraph_node::get (current_function_decl);\n-  gimple_stmt_iterator gsi;\n   gcall *stmt1;\n-  gassign *stmt2;\n   tree tree_uid, cur_func, void0;\n \n   if (c_node->only_called_directly_p ())\n     return;\n \n   gimple_init_gcov_profiler ();\n \n+  basic_block entry = ENTRY_BLOCK_PTR_FOR_FN (cfun);\n+  basic_block cond_bb = split_edge (single_succ_edge (entry));\n+  basic_block update_bb = split_edge (single_succ_edge (cond_bb));\n+\n+  edge true_edge = single_succ_edge (cond_bb);\n+  true_edge->flags = EDGE_TRUE_VALUE;\n+\n+  int probability;\n+  if (DECL_VIRTUAL_P (current_function_decl))\n+    probability = PROB_VERY_LIKELY;\n+  else\n+    probability = PROB_UNLIKELY;\n+\n+  true_edge->probability = probability;\n+  edge e = make_edge (cond_bb, single_succ_edge (update_bb)->dest,\n+\t\t      EDGE_FALSE_VALUE);\n+  e->probability = REG_BR_PROB_BASE - true_edge->probability;\n+\n   /* Insert code:\n \n-    stmt1: __gcov_indirect_call_profiler_v2 (profile_id,\n-\t\t\t\t\t     &current_function_decl)\n-   */\n-  gsi = gsi_after_labels (split_edge (single_succ_edge\n-\t\t\t\t\t (ENTRY_BLOCK_PTR_FOR_FN (cfun))));\n+     if (__gcov_indirect_call_callee != NULL)\n+       __gcov_indirect_call_profiler_v2 (profile_id, &current_function_decl);\n+\n+     The function __gcov_indirect_call_profiler_v2 is responsible for\n+     resetting __gcov_indirect_call_callee to NULL.  */\n+\n+  gimple_stmt_iterator gsi = gsi_start_bb (cond_bb);\n+  void0 = build_int_cst (build_pointer_type (void_type_node), 0);\n+\n+  tree ref = force_gimple_operand_gsi (&gsi, ic_void_ptr_var, true, NULL_TREE,\n+\t\t\t\t       true, GSI_SAME_STMT);\n+\n+  gcond *cond = gimple_build_cond (NE_EXPR, ref,\n+\t\t\t\t   void0, NULL, NULL);\n+  gsi_insert_before (&gsi, cond, GSI_NEW_STMT);\n+\n+  gsi = gsi_after_labels (update_bb);\n \n   cur_func = force_gimple_operand_gsi (&gsi,\n \t\t\t\t       build_addr (current_function_decl),\n@@ -438,13 +473,6 @@ gimple_gen_ic_func_profiler (void)\n   stmt1 = gimple_build_call (tree_indirect_call_profiler_fn, 2,\n \t\t\t     tree_uid, cur_func);\n   gsi_insert_before (&gsi, stmt1, GSI_SAME_STMT);\n-\n-  /* Set __gcov_indirect_call_callee to 0,\n-     so that calls from other modules won't get misattributed\n-     to the last caller of the current callee. */\n-  void0 = build_int_cst (build_pointer_type (void_type_node), 0);\n-  stmt2 = gimple_build_assign (ic_void_ptr_var, void0);\n-  gsi_insert_before (&gsi, stmt2, GSI_SAME_STMT);\n }\n \n /* Output instructions as GIMPLE tree at the beginning for each function.\n@@ -458,11 +486,10 @@ gimple_gen_time_profiler (unsigned tag, unsigned base)\n   basic_block entry = ENTRY_BLOCK_PTR_FOR_FN (cfun);\n   basic_block cond_bb = split_edge (single_succ_edge (entry));\n   basic_block update_bb = split_edge (single_succ_edge (cond_bb));\n-  split_edge (single_succ_edge (update_bb));\n \n   edge true_edge = single_succ_edge (cond_bb);\n   true_edge->flags = EDGE_TRUE_VALUE;\n-  true_edge->probability = PROB_VERY_UNLIKELY;\n+  true_edge->probability = PROB_UNLIKELY;\n   edge e\n     = make_edge (cond_bb, single_succ_edge (update_bb)->dest, EDGE_FALSE_VALUE);\n   e->probability = REG_BR_PROB_BASE - true_edge->probability;"}, {"sha": "9a97dba918fdea82b39de5a4ed21c3e6beb2c4db", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f751c5437988863e622fd8b3ff82ec65e281260/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f751c5437988863e622fd8b3ff82ec65e281260/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=4f751c5437988863e622fd8b3ff82ec65e281260", "patch": "@@ -1,3 +1,8 @@\n+2017-06-09  Martin Liska  <mliska@suse.cz>\n+\n+\t* libgcov-profiler.c (__gcov_indirect_call_profiler_v2):\n+\tReset __gcov_indirect_call_callee to NULL.\n+\n 2017-06-08  Olivier Hainque  <hainque@adacore.com>\n \n \t* config/t-vxworks (LIBGCC2_INCLUDES): Add path to wrn/coreip to"}, {"sha": "e4570a01318b47fa7a038f8a08e4226812abd2ad", "filename": "libgcc/libgcov-profiler.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f751c5437988863e622fd8b3ff82ec65e281260/libgcc%2Flibgcov-profiler.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f751c5437988863e622fd8b3ff82ec65e281260/libgcc%2Flibgcov-profiler.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Flibgcov-profiler.c?ref=4f751c5437988863e622fd8b3ff82ec65e281260", "patch": "@@ -336,6 +336,8 @@ __gcov_indirect_call_profiler_v2 (gcov_type value, void* cur_func)\n       || (__LIBGCC_VTABLE_USES_DESCRIPTORS__ && __gcov_indirect_call_callee\n           && *(void **) cur_func == *(void **) __gcov_indirect_call_callee))\n     __gcov_one_value_profiler_body (__gcov_indirect_call_counters, value, 0);\n+\n+  __gcov_indirect_call_callee = NULL;\n }\n #endif\n "}]}