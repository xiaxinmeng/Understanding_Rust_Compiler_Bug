{"sha": "a05aac0a130cd4e09530ebeb6beae4e5495ad6bc", "node_id": "C_kwDOANBUbNoAKGEwNWFhYzBhMTMwY2Q0ZTA5NTMwZWJlYjZiZWFlNGU1NDk1YWQ2YmM", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2022-05-11T18:43:57Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2022-06-09T19:35:53Z"}, "message": "rs6000: Delete FP_ISA3\n\nFP_ISA3 is exactly the same as SFDF, just a less obvious name.  So,\nlet's delete it.\n\n2022-06-09  Segher Boessenkool  <segher@kernel.crashing.org>\n\n\t* config/rs6000/rs6000.md (FP_ISA3): Delete.\n\t(float<QHI:mode><FP_ISA3:mode>2): Rename to...\n\t(float<QHI:mode><SFDF:mode>2): ... this.  Adjust.\n\t(*float<QHI:mode><FP_ISA3:mode>2_internal): Rename to...\n\t(*float<QHI:mode><SFDF:mode>2_internal): ... this.  Adjust.\n\t(floatuns<QHI:mode><FP_ISA3:mode>2): Rename to...\n\t(floatuns<QHI:mode><SFDF:mode>2): ... this.  Adjust.\n\t(*floatuns<QHI:mode><FP_ISA3:mode>2_internal): Rename to...\n\t(*floatuns<QHI:mode><SFDF:mode>2_internal): ... this.  Adjust.", "tree": {"sha": "3e82716e3bb1bc466700f0669e1558ee9221adec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e82716e3bb1bc466700f0669e1558ee9221adec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a05aac0a130cd4e09530ebeb6beae4e5495ad6bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a05aac0a130cd4e09530ebeb6beae4e5495ad6bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a05aac0a130cd4e09530ebeb6beae4e5495ad6bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a05aac0a130cd4e09530ebeb6beae4e5495ad6bc/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "699e9a0f671875c60c992d4442cba12aea0c25e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/699e9a0f671875c60c992d4442cba12aea0c25e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/699e9a0f671875c60c992d4442cba12aea0c25e9"}], "stats": {"total": 31, "additions": 14, "deletions": 17}, "files": [{"sha": "c55ee7e171a3c86731940427630f310ea8ba2797", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a05aac0a130cd4e09530ebeb6beae4e5495ad6bc/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a05aac0a130cd4e09530ebeb6beae4e5495ad6bc/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=a05aac0a130cd4e09530ebeb6beae4e5495ad6bc", "patch": "@@ -619,9 +619,6 @@\n (define_mode_iterator SIGNBIT [(KF \"FLOAT128_VECTOR_P (KFmode)\")\n \t\t\t       (TF \"FLOAT128_VECTOR_P (TFmode)\")])\n \n-; Iterator for ISA 3.0 supported floating point types\n-(define_mode_iterator FP_ISA3 [SF DF])\n-\n ; Which isa is needed for those float instructions?\n (define_mode_attr Fisa\t\t[(SF \"p8v\")  (DF \"*\") (DI \"*\")])\n \n@@ -6012,9 +6009,9 @@\n ;; the vector registers, rather then loading up a GPR, doing a sign/zero\n ;; extension and then a direct move.\n \n-(define_expand \"float<QHI:mode><FP_ISA3:mode>2\"\n-  [(parallel [(set (match_operand:FP_ISA3 0 \"vsx_register_operand\")\n-\t\t   (float:FP_ISA3\n+(define_expand \"float<QHI:mode><SFDF:mode>2\"\n+  [(parallel [(set (match_operand:SFDF 0 \"vsx_register_operand\")\n+\t\t   (float:SFDF\n \t\t    (match_operand:QHI 1 \"input_operand\")))\n \t      (clobber (match_scratch:DI 2))\n \t      (clobber (match_scratch:DI 3))\n@@ -6025,9 +6022,9 @@\n     operands[1] = rs6000_force_indexed_or_indirect_mem (operands[1]);\n })\n \n-(define_insn_and_split \"*float<QHI:mode><FP_ISA3:mode>2_internal\"\n-  [(set (match_operand:FP_ISA3 0 \"vsx_register_operand\" \"=wa,wa,wa\")\n-\t(float:FP_ISA3\n+(define_insn_and_split \"*float<QHI:mode><SFDF:mode>2_internal\"\n+  [(set (match_operand:SFDF 0 \"vsx_register_operand\" \"=wa,wa,wa\")\n+\t(float:SFDF\n \t (match_operand:QHI 1 \"reg_or_indexed_operand\" \"v,r,Z\")))\n    (clobber (match_scratch:DI 2 \"=v,wa,v\"))\n    (clobber (match_scratch:DI 3 \"=X,r,X\"))\n@@ -6061,14 +6058,14 @@\n       emit_insn (gen_extend<QHI:mode>di2 (di, tmp));\n     }\n \n-  emit_insn (gen_floatdi<FP_ISA3:mode>2 (result, di));\n+  emit_insn (gen_floatdi<SFDF:mode>2 (result, di));\n   DONE;\n }\n   [(set_attr \"isa\" \"p9v,*,p9v\")])\n \n-(define_expand \"floatuns<QHI:mode><FP_ISA3:mode>2\"\n-  [(parallel [(set (match_operand:FP_ISA3 0 \"vsx_register_operand\")\n-\t\t   (unsigned_float:FP_ISA3\n+(define_expand \"floatuns<QHI:mode><SFDF:mode>2\"\n+  [(parallel [(set (match_operand:SFDF 0 \"vsx_register_operand\")\n+\t\t   (unsigned_float:SFDF\n \t\t    (match_operand:QHI 1 \"input_operand\")))\n \t      (clobber (match_scratch:DI 2))\n \t      (clobber (match_scratch:DI 3))])]\n@@ -6078,9 +6075,9 @@\n     operands[1] = rs6000_force_indexed_or_indirect_mem (operands[1]);\n })\n \n-(define_insn_and_split \"*floatuns<QHI:mode><FP_ISA3:mode>2_internal\"\n-  [(set (match_operand:FP_ISA3 0 \"vsx_register_operand\" \"=wa,wa,wa\")\n-\t(unsigned_float:FP_ISA3\n+(define_insn_and_split \"*floatuns<QHI:mode><SFDF:mode>2_internal\"\n+  [(set (match_operand:SFDF 0 \"vsx_register_operand\" \"=wa,wa,wa\")\n+\t(unsigned_float:SFDF\n \t (match_operand:QHI 1 \"reg_or_indexed_operand\" \"v,r,Z\")))\n    (clobber (match_scratch:DI 2 \"=v,wa,wa\"))\n    (clobber (match_scratch:DI 3 \"=X,r,X\"))]\n@@ -6107,7 +6104,7 @@\n \t}\n     }\n \n-  emit_insn (gen_floatdi<FP_ISA3:mode>2 (result, di));\n+  emit_insn (gen_floatdi<SFDF:mode>2 (result, di));\n   DONE;\n }\n   [(set_attr \"isa\" \"p9v,*,p9v\")])"}]}