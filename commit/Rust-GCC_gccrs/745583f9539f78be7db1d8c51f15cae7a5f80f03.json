{"sha": "745583f9539f78be7db1d8c51f15cae7a5f80f03", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQ1NTgzZjk1MzlmNzhiZTdkYjFkOGM1MWYxNWNhZTdhNWY4MGYwMw==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-10-16T12:25:52Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-10-16T12:25:52Z"}, "message": "re PR c/63554 (ice in \"execute_todo, at passes.c:1797\" with -O3)\n\n2014-10-16  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/63554\n\t* builtins.c (fold_builtin_4): Do not call fold_builtin_strncat_chk.\n\t(fold_builtin_strncat_chk): Move ...\n\t* gimple-fold.c (gimple_fold_builtin_strncat_chk): ... here.\n\t(gimple_fold_builtin): Call gimple_fold_builtin_strncat_chk.\n\n\t* gcc.dg/torture/pr63554.c: New testcase.\n\nFrom-SVN: r216315", "tree": {"sha": "3075787c7fa50bcb39399d99d978e00cb128d266", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3075787c7fa50bcb39399d99d978e00cb128d266"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/745583f9539f78be7db1d8c51f15cae7a5f80f03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/745583f9539f78be7db1d8c51f15cae7a5f80f03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/745583f9539f78be7db1d8c51f15cae7a5f80f03", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/745583f9539f78be7db1d8c51f15cae7a5f80f03/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b7359edc20cae432bb68f5f897ba485f34de6f9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7359edc20cae432bb68f5f897ba485f34de6f9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7359edc20cae432bb68f5f897ba485f34de6f9a"}], "stats": {"total": 136, "additions": 80, "deletions": 56}, "files": [{"sha": "9d817c1b24a3cfeb2666a806e6f0a92947fd887e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745583f9539f78be7db1d8c51f15cae7a5f80f03/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745583f9539f78be7db1d8c51f15cae7a5f80f03/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=745583f9539f78be7db1d8c51f15cae7a5f80f03", "patch": "@@ -1,3 +1,11 @@\n+2014-10-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/63554\n+\t* builtins.c (fold_builtin_4): Do not call fold_builtin_strncat_chk.\n+\t(fold_builtin_strncat_chk): Move ...\n+\t* gimple-fold.c (gimple_fold_builtin_strncat_chk): ... here.\n+\t(gimple_fold_builtin): Call gimple_fold_builtin_strncat_chk.\n+\n 2014-10-16  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/59401"}, {"sha": "8d0288fa14a065c7edefa455a85bdb7d35e8e9f1", "filename": "gcc/builtins.c", "status": "modified", "additions": 0, "deletions": 56, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745583f9539f78be7db1d8c51f15cae7a5f80f03/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745583f9539f78be7db1d8c51f15cae7a5f80f03/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=745583f9539f78be7db1d8c51f15cae7a5f80f03", "patch": "@@ -198,7 +198,6 @@ static void maybe_emit_chk_warning (tree, enum built_in_function);\n static void maybe_emit_sprintf_chk_warning (tree, enum built_in_function);\n static void maybe_emit_free_warning (tree);\n static tree fold_builtin_object_size (tree, tree);\n-static tree fold_builtin_strncat_chk (location_t, tree, tree, tree, tree, tree);\n static tree fold_builtin_printf (location_t, tree, tree, tree, bool, enum built_in_function);\n static tree fold_builtin_fprintf (location_t, tree, tree, tree, tree, bool,\n \t\t\t\t  enum built_in_function);\n@@ -10366,9 +10365,6 @@ fold_builtin_4 (location_t loc, tree fndecl,\n \n   switch (fcode)\n     {\n-    case BUILT_IN_STRNCAT_CHK:\n-      return fold_builtin_strncat_chk (loc, fndecl, arg0, arg1, arg2, arg3);\n-\n     case BUILT_IN_FPRINTF_CHK:\n     case BUILT_IN_VFPRINTF_CHK:\n       if (!validate_arg (arg1, INTEGER_TYPE)\n@@ -11584,58 +11580,6 @@ fold_builtin_object_size (tree ptr, tree ost)\n   return NULL_TREE;\n }\n \n-/* Fold a call to the __strncat_chk builtin with arguments DEST, SRC,\n-   LEN, and SIZE.  */\n-\n-static tree\n-fold_builtin_strncat_chk (location_t loc, tree fndecl,\n-\t\t\t  tree dest, tree src, tree len, tree size)\n-{\n-  tree fn;\n-  const char *p;\n-\n-  if (!validate_arg (dest, POINTER_TYPE)\n-      || !validate_arg (src, POINTER_TYPE)\n-      || !validate_arg (size, INTEGER_TYPE)\n-      || !validate_arg (size, INTEGER_TYPE))\n-    return NULL_TREE;\n-\n-  p = c_getstr (src);\n-  /* If the SRC parameter is \"\" or if LEN is 0, return DEST.  */\n-  if (p && *p == '\\0')\n-    return omit_one_operand_loc (loc, TREE_TYPE (TREE_TYPE (fndecl)), dest, len);\n-  else if (integer_zerop (len))\n-    return omit_one_operand_loc (loc, TREE_TYPE (TREE_TYPE (fndecl)), dest, src);\n-\n-  if (! tree_fits_uhwi_p (size))\n-    return NULL_TREE;\n-\n-  if (! integer_all_onesp (size))\n-    {\n-      tree src_len = c_strlen (src, 1);\n-      if (src_len\n-\t  && tree_fits_uhwi_p (src_len)\n-\t  && tree_fits_uhwi_p (len)\n-\t  && ! tree_int_cst_lt (len, src_len))\n-\t{\n-\t  /* If LEN >= strlen (SRC), optimize into __strcat_chk.  */\n-\t  fn = builtin_decl_explicit (BUILT_IN_STRCAT_CHK);\n-\t  if (!fn)\n-\t    return NULL_TREE;\n-\n-\t  return build_call_expr_loc (loc, fn, 3, dest, src, size);\n-\t}\n-      return NULL_TREE;\n-    }\n-\n-  /* If __builtin_strncat_chk is used, assume strncat is available.  */\n-  fn = builtin_decl_explicit (BUILT_IN_STRNCAT);\n-  if (!fn)\n-    return NULL_TREE;\n-\n-  return build_call_expr_loc (loc, fn, 3, dest, src, len);\n-}\n-\n /* Builtins with folding operations that operate on \"...\" arguments\n    need special handling; we need to store the arguments in a convenient\n    data structure before attempting any folding.  Fortunately there are"}, {"sha": "2c79f8a657322c9a832924972ea2c489593d9cc1", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745583f9539f78be7db1d8c51f15cae7a5f80f03/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745583f9539f78be7db1d8c51f15cae7a5f80f03/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=745583f9539f78be7db1d8c51f15cae7a5f80f03", "patch": "@@ -1632,6 +1632,62 @@ gimple_fold_builtin_strcat_chk (gimple_stmt_iterator *gsi)\n   return true;\n }\n \n+/* Fold a call to the __strncat_chk builtin with arguments DEST, SRC,\n+   LEN, and SIZE.  */\n+\n+static bool \n+gimple_fold_builtin_strncat_chk (gimple_stmt_iterator *gsi)\n+{\n+  gimple stmt = gsi_stmt (*gsi);\n+  tree dest = gimple_call_arg (stmt, 0);\n+  tree src = gimple_call_arg (stmt, 1);\n+  tree len = gimple_call_arg (stmt, 2);\n+  tree size = gimple_call_arg (stmt, 3);\n+  tree fn;\n+  const char *p;\n+\n+  p = c_getstr (src);\n+  /* If the SRC parameter is \"\" or if LEN is 0, return DEST.  */\n+  if ((p && *p == '\\0')\n+      || integer_zerop (len))\n+    {\n+      replace_call_with_value (gsi, dest);\n+      return true;\n+    }\n+\n+  if (! tree_fits_uhwi_p (size))\n+    return false;\n+\n+  if (! integer_all_onesp (size))\n+    {\n+      tree src_len = c_strlen (src, 1);\n+      if (src_len\n+\t  && tree_fits_uhwi_p (src_len)\n+\t  && tree_fits_uhwi_p (len)\n+\t  && ! tree_int_cst_lt (len, src_len))\n+\t{\n+\t  /* If LEN >= strlen (SRC), optimize into __strcat_chk.  */\n+\t  fn = builtin_decl_explicit (BUILT_IN_STRCAT_CHK);\n+\t  if (!fn)\n+\t    return false;\n+\n+\t  gimple repl = gimple_build_call (fn, 3, dest, src, size);\n+\t  replace_call_with_call_and_fold (gsi, repl);\n+\t  return true;\n+\t}\n+      return false;\n+    }\n+\n+  /* If __builtin_strncat_chk is used, assume strncat is available.  */\n+  fn = builtin_decl_explicit (BUILT_IN_STRNCAT);\n+  if (!fn)\n+    return false;\n+\n+  gimple repl = gimple_build_call (fn, 3, dest, src, len);\n+  replace_call_with_call_and_fold (gsi, repl);\n+  return true;\n+}\n+\n /* Fold a call to the fputs builtin.  ARG0 and ARG1 are the arguments\n    to the call.  IGNORE is true if the value returned\n    by the builtin will be ignored.  UNLOCKED is true is true if this\n@@ -2457,6 +2513,8 @@ gimple_fold_builtin (gimple_stmt_iterator *gsi)\n       return gimple_fold_builtin_sprintf_chk (gsi, DECL_FUNCTION_CODE (callee));\n     case BUILT_IN_STRCAT_CHK:\n       return gimple_fold_builtin_strcat_chk (gsi);\n+    case BUILT_IN_STRNCAT_CHK:\n+      return gimple_fold_builtin_strncat_chk (gsi);\n     case BUILT_IN_STRLEN:\n       return gimple_fold_builtin_strlen (gsi);\n     case BUILT_IN_STRCPY:"}, {"sha": "72ea6213071a6854274572cac0f21b5ac202464a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745583f9539f78be7db1d8c51f15cae7a5f80f03/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745583f9539f78be7db1d8c51f15cae7a5f80f03/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=745583f9539f78be7db1d8c51f15cae7a5f80f03", "patch": "@@ -1,3 +1,8 @@\n+2014-10-16  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/63554\n+\t* gcc.dg/torture/pr63554.c: New testcase.\n+\n 2014-10-16  Marek Polacek  <polacek@redhat.com>\n \n \t* gcc.target/powerpc/pr58673-1.c: Fix defaulting to int."}, {"sha": "fa06c5a55d1ad2cbd449bb7eaca74653996eb108", "filename": "gcc/testsuite/gcc.dg/torture/pr63554.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/745583f9539f78be7db1d8c51f15cae7a5f80f03/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr63554.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/745583f9539f78be7db1d8c51f15cae7a5f80f03/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr63554.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr63554.c?ref=745583f9539f78be7db1d8c51f15cae7a5f80f03", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile } */\n+\n+char *a;\n+void\n+nssutil_ReadSecmodDB (void)\n+{\n+  long b = __builtin_object_size (0, 0);\n+  a = __builtin___strncat_chk (a, \" \", 1, b);\n+}"}]}