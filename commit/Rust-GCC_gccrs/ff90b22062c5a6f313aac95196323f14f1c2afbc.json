{"sha": "ff90b22062c5a6f313aac95196323f14f1c2afbc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY5MGIyMjA2MmM1YTZmMzEzYWFjOTUxOTYzMjNmMTRmMWMyYWZiYw==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2007-09-05T01:22:05Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2007-09-05T01:22:05Z"}, "message": "ppu_intrinsics.h (__ldarx): Use `Z' constraint, not `m' for *ptrp.\n\n\t* config/rs6000/ppu_intrinsics.h (__ldarx): Use `Z' constraint,\n\tnot `m' for *ptrp.\n\t(__stdcx): Make asm volatile.\n\t(__stwcx, __stdcx): Return only 0 or 1.\n\nFrom-SVN: r128116", "tree": {"sha": "39b00ba25b3f6d817c9f75f0e5b4aeb99b742951", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/39b00ba25b3f6d817c9f75f0e5b4aeb99b742951"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff90b22062c5a6f313aac95196323f14f1c2afbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff90b22062c5a6f313aac95196323f14f1c2afbc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff90b22062c5a6f313aac95196323f14f1c2afbc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff90b22062c5a6f313aac95196323f14f1c2afbc/comments", "author": null, "committer": null, "parents": [{"sha": "c1bb7f86700413fe89cb96f5c4121fd5010c0094", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1bb7f86700413fe89cb96f5c4121fd5010c0094", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1bb7f86700413fe89cb96f5c4121fd5010c0094"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "acede3bfc33fbc028e643f5ff0f65a1ed969ee75", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff90b22062c5a6f313aac95196323f14f1c2afbc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff90b22062c5a6f313aac95196323f14f1c2afbc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ff90b22062c5a6f313aac95196323f14f1c2afbc", "patch": "@@ -1,3 +1,10 @@\n+2007-09-05  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* config/rs6000/ppu_intrinsics.h (__ldarx): Use `Z' constraint,\n+\tnot `m' for *ptrp.\n+\t(__stdcx): Make asm volatile.\n+\t(__stwcx, __stdcx): Return only 0 or 1.\n+\n 2007-09-05  Jan Hubicka  <jh@suse.cz>\n \n \tRevert:"}, {"sha": "2bfe4634389dba74f3b1f34d8d9dc2e438f7206a", "filename": "gcc/config/rs6000/ppu_intrinsics.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff90b22062c5a6f313aac95196323f14f1c2afbc/gcc%2Fconfig%2Frs6000%2Fppu_intrinsics.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff90b22062c5a6f313aac95196323f14f1c2afbc/gcc%2Fconfig%2Frs6000%2Fppu_intrinsics.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fppu_intrinsics.h?ref=ff90b22062c5a6f313aac95196323f14f1c2afbc", "patch": "@@ -356,7 +356,7 @@ typedef int __V4SI __attribute__((vector_size(16)));\n     doublewordsize *ptrp = (doublewordsize*)(void*)(base);\t\\\n   __asm__ volatile (\"ldarx %0,%y1\"\t\t\t\\\n \t   : \"=r\" (result)\t\t\t\t\\\n-\t   : \"m\" (*ptrp));\t\t\t\t\\\n+\t   : \"Z\" (*ptrp));\t\t\t\t\\\n   result; })\n #endif /* __powerpc64__ */\n \n@@ -369,20 +369,20 @@ typedef int __V4SI __attribute__((vector_size(16)));\n \t   : \"=r\" (result),\t\t\t\\\n \t     \"=Z\" (*ptrp)\t\t\t\\\n \t   : \"r\" (value) : \"cr0\");\t\t\\\n-  (result & 0x20000000); })\n+  ((result & 0x20000000) >> 29); })\n \n \n #ifdef __powerpc64__\n #define __stdcx(base, value) __extension__\t\t\\\n   ({unsigned long long result;\t\t\t\t\\\n     typedef  struct {char a[8];} doublewordsize;\t\\\n     doublewordsize *ptrp = (doublewordsize*)(void*)(base);\t\\\n-  __asm__ (\"stdcx. %2,%y1\\n\"\t\t\t\t\\\n+  __asm__ volatile (\"stdcx. %2,%y1\\n\"\t\t\t\\\n \t   \"\\tmfocrf %0,0x80\"\t\t\t\t\\\n \t   : \"=r\" (result),\t\t\t\t\\\n \t     \"=Z\" (*ptrp)\t\t\t\t\\\n \t   : \"r\" (value) : \"cr0\");\t\t\t\\\n-  (result & 0x20000000); })\n+  ((result & 0x20000000) >> 29); })\n #endif /* __powerpc64__ */\n \n #define __mffs() __extension__\t\t\t\\"}]}