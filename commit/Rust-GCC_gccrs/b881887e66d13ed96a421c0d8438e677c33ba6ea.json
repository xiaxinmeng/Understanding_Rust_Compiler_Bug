{"sha": "b881887e66d13ed96a421c0d8438e677c33ba6ea", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg4MTg4N2U2NmQxM2VkOTZhNDIxYzBkODQzOGU2NzdjMzNiYTZlYQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-01-07T15:21:45Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-01-07T15:21:45Z"}, "message": "tree-vrp.c (extract_range_from_assert): CSE calls to compare_values where possible.\n\n2007-01-07  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-vrp.c (extract_range_from_assert): CSE calls to\n\tcompare_values where possible.\n\t(extract_range_from_unary_expr): Likewise.\n\nFrom-SVN: r120547", "tree": {"sha": "e5138b026bffda049169113f572baf658eda7db0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5138b026bffda049169113f572baf658eda7db0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b881887e66d13ed96a421c0d8438e677c33ba6ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b881887e66d13ed96a421c0d8438e677c33ba6ea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b881887e66d13ed96a421c0d8438e677c33ba6ea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b881887e66d13ed96a421c0d8438e677c33ba6ea/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "696e990bdbd5fcc6a8763ee2e2055ecfb6877b88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/696e990bdbd5fcc6a8763ee2e2055ecfb6877b88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/696e990bdbd5fcc6a8763ee2e2055ecfb6877b88"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "4ca66b2a34ef21aedc1f2fa9a520a6d3db8f903c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b881887e66d13ed96a421c0d8438e677c33ba6ea/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b881887e66d13ed96a421c0d8438e677c33ba6ea/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b881887e66d13ed96a421c0d8438e677c33ba6ea", "patch": "@@ -1,3 +1,9 @@\n+2007-01-07  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-vrp.c (extract_range_from_assert): CSE calls to\n+\tcompare_values where possible.\n+\t(extract_range_from_unary_expr): Likewise.\n+\n 2007-01-07  Anatoly Sokolov <aesok@post.ru>\n \n \t* config/avr/avr-protos.h (call_insn_operand): Delete prototype."}, {"sha": "36e9a3be787254b6ce49543de37d808d999c568e", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b881887e66d13ed96a421c0d8438e677c33ba6ea/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b881887e66d13ed96a421c0d8438e677c33ba6ea/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=b881887e66d13ed96a421c0d8438e677c33ba6ea", "patch": "@@ -1066,6 +1066,7 @@ extract_range_from_assert (value_range_t *vr_p, tree expr)\n       else\n \t{\n \t  tree min, max, anti_min, anti_max, real_min, real_max;\n+\t  int cmp;\n \n \t  /* We want to compute the logical AND of the two ranges;\n \t     there are three cases to consider.\n@@ -1130,8 +1131,8 @@ extract_range_from_assert (value_range_t *vr_p, tree expr)\n \t  /* Case 3a, the anti-range extends into the low\n \t     part of the real range.  Thus creating a new\n \t     low for the real range.  */\n-\t  else if ((compare_values (anti_max, real_min) == 1\n-\t\t    || compare_values (anti_max, real_min) == 0)\n+\t  else if (((cmp = compare_values (anti_max, real_min)) == 1\n+\t\t    || cmp == 0)\n \t\t   && compare_values (anti_max, real_max) == -1)\n \t    {\n \t      min = fold_build2 (PLUS_EXPR, TREE_TYPE (var_vr->min),\n@@ -1144,8 +1145,8 @@ extract_range_from_assert (value_range_t *vr_p, tree expr)\n \t     part of the real range.  Thus creating a new\n \t     higher for the real range.  */\n \t  else if (compare_values (anti_min, real_min) == 1\n-\t\t   && (compare_values (anti_min, real_max) == -1\n-\t\t       || compare_values (anti_min, real_max) == 0))\n+\t\t   && ((cmp = compare_values (anti_min, real_max)) == -1\n+\t\t       || cmp == 0))\n \t    {\n \t      max = fold_build2 (MINUS_EXPR, TREE_TYPE (var_vr->min),\n \t\t\t\t anti_min,\n@@ -1734,8 +1735,8 @@ extract_range_from_unary_expr (value_range_t *vr, tree expr)\n \t      && is_gimple_val (new_max)\n \t      && tree_int_cst_equal (new_min, orig_min)\n \t      && tree_int_cst_equal (new_max, orig_max)\n-\t      && compare_values (new_min, new_max) <= 0\n-\t      && compare_values (new_min, new_max) >= -1)\n+\t      && (cmp = compare_values (new_min, new_max)) <= 0\n+\t      && cmp >= -1)\n \t    {\n \t      set_value_range (vr, VR_RANGE, new_min, new_max, vr->equiv);\n \t      return;"}]}