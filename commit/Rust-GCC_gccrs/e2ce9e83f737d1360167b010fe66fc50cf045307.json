{"sha": "e2ce9e83f737d1360167b010fe66fc50cf045307", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTJjZTllODNmNzM3ZDEzNjAxNjdiMDEwZmU2NmZjNTBjZjA0NTMwNw==", "commit": {"author": {"name": "David Malcolm", "email": "dmalcolm@redhat.com", "date": "2016-10-21T13:52:53Z"}, "committer": {"name": "David Malcolm", "email": "dmalcolm@gcc.gnu.org", "date": "2016-10-21T13:52:53Z"}, "message": "Start adding selftests for print_rtx\n\ngcc/ChangeLog:\n\t* print-rtl-function.c (flag_compact): Move extern decl to...\n\t* print-rtl.h (flag_compact): ...here.\n\t* rtl-tests.c (selftests::assert_rtl_dump_eq): New function.\n\t(ASSERT_RTL_DUMP_EQ): New macro.\n\t(selftest::test_dumping_regs): New function.\n\t(selftest::test_dumping_insns): New function.\n\t(selftest::test_uncond_jump): Add uses of ASSERT_RTL_DUMP_EQ on\n\tthe insns.\n\t(selftest::rtl_tests_c_tests): Call the new test functions.\n\nFrom-SVN: r241405", "tree": {"sha": "83e521f45ee2d239465d916880470d9b88ade14f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/83e521f45ee2d239465d916880470d9b88ade14f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e2ce9e83f737d1360167b010fe66fc50cf045307", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2ce9e83f737d1360167b010fe66fc50cf045307", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e2ce9e83f737d1360167b010fe66fc50cf045307", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e2ce9e83f737d1360167b010fe66fc50cf045307/comments", "author": {"login": "davidmalcolm", "id": 1553248, "node_id": "MDQ6VXNlcjE1NTMyNDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1553248?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidmalcolm", "html_url": "https://github.com/davidmalcolm", "followers_url": "https://api.github.com/users/davidmalcolm/followers", "following_url": "https://api.github.com/users/davidmalcolm/following{/other_user}", "gists_url": "https://api.github.com/users/davidmalcolm/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidmalcolm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidmalcolm/subscriptions", "organizations_url": "https://api.github.com/users/davidmalcolm/orgs", "repos_url": "https://api.github.com/users/davidmalcolm/repos", "events_url": "https://api.github.com/users/davidmalcolm/events{/privacy}", "received_events_url": "https://api.github.com/users/davidmalcolm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6652a944dcf82fe518090e8cb2629b473b70ac5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6652a944dcf82fe518090e8cb2629b473b70ac5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6652a944dcf82fe518090e8cb2629b473b70ac5c"}], "stats": {"total": 103, "additions": 101, "deletions": 2}, "files": [{"sha": "9cce6aa0642fcdc5fc78bb94d15d184b05caab02", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ce9e83f737d1360167b010fe66fc50cf045307/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ce9e83f737d1360167b010fe66fc50cf045307/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e2ce9e83f737d1360167b010fe66fc50cf045307", "patch": "@@ -1,3 +1,15 @@\n+2016-10-21  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* print-rtl-function.c (flag_compact): Move extern decl to...\n+\t* print-rtl.h (flag_compact): ...here.\n+\t* rtl-tests.c (selftests::assert_rtl_dump_eq): New function.\n+\t(ASSERT_RTL_DUMP_EQ): New macro.\n+\t(selftest::test_dumping_regs): New function.\n+\t(selftest::test_dumping_insns): New function.\n+\t(selftest::test_uncond_jump): Add uses of ASSERT_RTL_DUMP_EQ on\n+\tthe insns.\n+\t(selftest::rtl_tests_c_tests): Call the new test functions.\n+\n 2016-10-21  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* cfgcleanup.c (merge_blocks_move_successor_nojumps): Adjust."}, {"sha": "7ce1b90dbb6d99ff59feabf9583a74cc5972121a", "filename": "gcc/print-rtl-function.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ce9e83f737d1360167b010fe66fc50cf045307/gcc%2Fprint-rtl-function.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ce9e83f737d1360167b010fe66fc50cf045307/gcc%2Fprint-rtl-function.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl-function.c?ref=e2ce9e83f737d1360167b010fe66fc50cf045307", "patch": "@@ -34,8 +34,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"memmodel.h\"\n #include \"emit-rtl.h\"\n \n-extern bool flag_compact;\n-\n /* Print an \"(edge-from)\" or \"(edge-to)\" directive describing E\n    to OUTFILE.  */\n "}, {"sha": "8dfba8b46ef4a4f0975e4e9227058722ed3a92a3", "filename": "gcc/print-rtl.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ce9e83f737d1360167b010fe66fc50cf045307/gcc%2Fprint-rtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ce9e83f737d1360167b010fe66fc50cf045307/gcc%2Fprint-rtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-rtl.h?ref=e2ce9e83f737d1360167b010fe66fc50cf045307", "patch": "@@ -20,6 +20,8 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_PRINT_RTL_H\n #define GCC_PRINT_RTL_H\n \n+extern bool flag_compact;\n+\n #ifdef BUFSIZ\n extern void print_rtl (FILE *, const_rtx);\n #endif"}, {"sha": "6b3ef7606270e4e7d8cc325729a80edb050cde45", "filename": "gcc/rtl-tests.c", "status": "modified", "additions": 87, "deletions": 0, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e2ce9e83f737d1360167b010fe66fc50cf045307/gcc%2Frtl-tests.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e2ce9e83f737d1360167b010fe66fc50cf045307/gcc%2Frtl-tests.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl-tests.c?ref=e2ce9e83f737d1360167b010fe66fc50cf045307", "patch": "@@ -57,6 +57,82 @@ verify_print_pattern (const char *expected, rtx pat)\n   ASSERT_STREQ (expected, pp_formatted_text (&pp));\n }\n \n+/* Verify that X is dumped as EXPECTED_DUMP, using compact mode.\n+   Use LOC as the effective location when reporting errors.  */\n+\n+static void\n+assert_rtl_dump_eq (const location &loc, const char *expected_dump, rtx x)\n+{\n+  named_temp_file tmp_out (\".rtl\");\n+  FILE *outfile = fopen (tmp_out.get_filename (), \"w\");\n+  flag_compact = true;\n+  print_rtl (outfile, x);\n+  flag_compact = false;\n+  fclose (outfile);\n+\n+  char *dump = read_file (SELFTEST_LOCATION, tmp_out.get_filename ());\n+  ASSERT_STREQ_AT (loc, expected_dump, dump);\n+  free (dump);\n+}\n+\n+/* Verify that RTX is dumped as EXPECTED_DUMP, using compact mode.  */\n+\n+#define ASSERT_RTL_DUMP_EQ(EXPECTED_DUMP, RTX) \\\n+  assert_rtl_dump_eq (SELFTEST_LOCATION, (EXPECTED_DUMP), (RTX))\n+\n+/* Verify that regs are dumped as expected (in compact mode).  */\n+\n+static void\n+test_dumping_regs ()\n+{\n+  /* Dumps of hard regs contain a target-specific name, so we don't test\n+     it here.  */\n+\n+  /* Test dumping of virtual regs.  The various virtual regs are inited as\n+     Pmode, so this is target-specific.  The tests below assume DImode, so\n+     only run the tests for targets where Pmode is DImode.  */\n+  if (Pmode == DImode)\n+    {\n+      ASSERT_RTL_DUMP_EQ (\"(reg:DI virtual-incoming-args)\",\n+\t\t\t  virtual_incoming_args_rtx);\n+      ASSERT_RTL_DUMP_EQ (\"(reg:DI virtual-stack-vars)\",\n+\t\t\t  virtual_stack_vars_rtx);\n+      ASSERT_RTL_DUMP_EQ (\"(reg:DI virtual-stack-dynamic)\",\n+\t\t\t  virtual_stack_dynamic_rtx);\n+      ASSERT_RTL_DUMP_EQ (\"(reg:DI virtual-outgoing-args)\",\n+\t\t\t  virtual_outgoing_args_rtx);\n+      ASSERT_RTL_DUMP_EQ (\"(reg:DI virtual-cfa)\",\n+\t\t\t  virtual_cfa_rtx);\n+      ASSERT_RTL_DUMP_EQ (\"(reg:DI virtual-preferred-stack-boundary)\",\n+\t\t\t  virtual_preferred_stack_boundary_rtx);\n+    }\n+\n+  /* Test dumping of non-virtual pseudos.  */\n+  ASSERT_RTL_DUMP_EQ (\"(reg:SI %0)\",\n+    gen_raw_REG (SImode, LAST_VIRTUAL_REGISTER + 1));\n+  ASSERT_RTL_DUMP_EQ (\"(reg:SI %1)\",\n+    gen_raw_REG (SImode, LAST_VIRTUAL_REGISTER + 2));\n+}\n+\n+/* Verify that insns are dumped as expected (in compact mode).  */\n+\n+static void\n+test_dumping_insns ()\n+{\n+  /* Barriers.  */\n+  rtx_barrier *barrier = as_a <rtx_barrier *> (rtx_alloc (BARRIER));\n+  SET_NEXT_INSN (barrier) = NULL;\n+  ASSERT_RTL_DUMP_EQ (\"(cbarrier)\\n\", barrier);\n+\n+  /* Labels.  */\n+  rtx_insn *label = gen_label_rtx ();\n+  CODE_LABEL_NUMBER (label) = 42;\n+  ASSERT_RTL_DUMP_EQ (\"(clabel 0 42 \\\"\\\")\\n\", label);\n+\n+  LABEL_NAME (label)= \"some_label\";\n+  ASSERT_RTL_DUMP_EQ (\"(clabel 0 42 (\\\"some_label\\\"))\\n\", label);\n+}\n+\n /* Unit testing of \"single_set\".  */\n \n static void\n@@ -92,20 +168,31 @@ test_uncond_jump ()\n \n   verify_print_pattern (\"pc=L0\", jump_pat);\n \n+  ASSERT_RTL_DUMP_EQ (\"(set (pc)\\n\"\n+\t\t      \"    (label_ref 0))\",\n+\t\t      jump_pat);\n+\n   rtx_insn *jump_insn = emit_jump_insn (jump_pat);\n   ASSERT_FALSE (any_condjump_p (jump_insn));\n   ASSERT_TRUE (any_uncondjump_p (jump_insn));\n   ASSERT_TRUE (pc_set (jump_insn));\n   ASSERT_TRUE (simplejump_p (jump_insn));\n   ASSERT_TRUE (onlyjump_p (jump_insn));\n   ASSERT_TRUE (control_flow_insn_p (jump_insn));\n+\n+  ASSERT_RTL_DUMP_EQ (\"(cjump_insn (set (pc)\\n\"\n+\t\t      \"        (label_ref 0))\\n\"\n+\t\t      \"     (nil))\\n\",\n+\t\t      jump_insn);\n }\n \n /* Run all of the selftests within this file.  */\n \n void\n rtl_tests_c_tests ()\n {\n+  test_dumping_regs ();\n+  test_dumping_insns ();\n   test_single_set ();\n   test_uncond_jump ();\n "}]}