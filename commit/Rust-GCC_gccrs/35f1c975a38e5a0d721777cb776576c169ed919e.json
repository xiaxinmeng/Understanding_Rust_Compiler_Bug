{"sha": "35f1c975a38e5a0d721777cb776576c169ed919e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzVmMWM5NzVhMzhlNWEwZDcyMTc3N2NiNzc2NTc2YzE2OWVkOTE5ZQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@libertysurf.fr", "date": "2002-11-19T20:13:20Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2002-11-19T20:13:20Z"}, "message": "re PR c/8588 (ICE in extract_insn, at recog.c:2148)\n\n2002-11-19 \ufffdEric Botcazou \ufffd<ebotcazou@libertysurf.fr>\n\n\tPR c/8588\n\t* optabs.c (expand_binop): Convert CONST_INTs in shift\n\toperations too.\n\nFrom-SVN: r59274", "tree": {"sha": "00ebe901bb960a13502c3619279735ce331441dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00ebe901bb960a13502c3619279735ce331441dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/35f1c975a38e5a0d721777cb776576c169ed919e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35f1c975a38e5a0d721777cb776576c169ed919e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/35f1c975a38e5a0d721777cb776576c169ed919e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/35f1c975a38e5a0d721777cb776576c169ed919e/comments", "author": {"login": "ebotcazou", "id": 48091907, "node_id": "MDQ6VXNlcjQ4MDkxOTA3", "avatar_url": "https://avatars.githubusercontent.com/u/48091907?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebotcazou", "html_url": "https://github.com/ebotcazou", "followers_url": "https://api.github.com/users/ebotcazou/followers", "following_url": "https://api.github.com/users/ebotcazou/following{/other_user}", "gists_url": "https://api.github.com/users/ebotcazou/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebotcazou/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebotcazou/subscriptions", "organizations_url": "https://api.github.com/users/ebotcazou/orgs", "repos_url": "https://api.github.com/users/ebotcazou/repos", "events_url": "https://api.github.com/users/ebotcazou/events{/privacy}", "received_events_url": "https://api.github.com/users/ebotcazou/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a500466ba170808df6f39ce30a92fd6b1555d821", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a500466ba170808df6f39ce30a92fd6b1555d821", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a500466ba170808df6f39ce30a92fd6b1555d821"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "91f8dc988607c70b11674fa29612ad7efad966d8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35f1c975a38e5a0d721777cb776576c169ed919e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35f1c975a38e5a0d721777cb776576c169ed919e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=35f1c975a38e5a0d721777cb776576c169ed919e", "patch": "@@ -1,3 +1,9 @@\n+2002-11-19 \ufffdEric Botcazou \ufffd<ebotcazou@libertysurf.fr>\n+\n+\tPR c/8588\n+\t* optabs.c (expand_binop): Convert CONST_INTs in shift\n+\toperations too.\n+\n 2002-11-19  Roger Sayle  <roger@eyesopen.com>\n \n \t* gcse.c (gcse_emit_move_after): Correct typo in REG_EQUAL note."}, {"sha": "1551ff8e806ce6bd5dfb50b5d23d06214793ab9b", "filename": "gcc/optabs.c", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/35f1c975a38e5a0d721777cb776576c169ed919e/gcc%2Foptabs.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/35f1c975a38e5a0d721777cb776576c169ed919e/gcc%2Foptabs.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foptabs.c?ref=35f1c975a38e5a0d721777cb776576c169ed919e", "patch": "@@ -781,9 +781,8 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n       /* In case the insn wants input operands in modes different from\n \t those of the actual operands, convert the operands.  It would\n \t seem that we don't need to convert CONST_INTs, but we do, so\n-\t that they're properly zero-extended or sign-extended for their\n-\t modes; shift operations are an exception, because the second\n-\t operand need not be extended to the mode of the result.  */\n+\t that they're properly zero-extended, sign-extended or truncated\n+\t for their mode.  */\n \n       if (GET_MODE (op0) != mode0 && mode0 != VOIDmode)\n \txop0 = convert_modes (mode0,\n@@ -796,7 +795,7 @@ expand_binop (mode, binoptab, op0, op1, target, unsignedp, methods)\n \txop1 = convert_modes (mode1,\n \t\t\t      GET_MODE (op1) != VOIDmode\n \t\t\t      ? GET_MODE (op1)\n-\t\t\t      : (shift_op ? mode1 : mode),\n+\t\t\t      : mode,\n \t\t\t      xop1, unsignedp);\n \n       /* Now, if insn's predicates don't allow our operands, put them into\n@@ -2234,8 +2233,8 @@ expand_twoval_binop (binoptab, op0, op1, targ0, targ1, unsignedp)\n       /* In case the insn wants input operands in modes different from\n \t those of the actual operands, convert the operands.  It would\n \t seem that we don't need to convert CONST_INTs, but we do, so\n-\t that they're properly zero-extended or sign-extended for their\n-\t modes.  */\n+\t that they're properly zero-extended, sign-extended or truncated\n+\t for their mode.  */\n \n       if (GET_MODE (op0) != mode0 && mode0 != VOIDmode)\n \txop0 = convert_modes (mode0,"}]}