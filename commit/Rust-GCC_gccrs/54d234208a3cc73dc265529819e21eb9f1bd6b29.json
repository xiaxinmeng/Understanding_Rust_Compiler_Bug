{"sha": "54d234208a3cc73dc265529819e21eb9f1bd6b29", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTRkMjM0MjA4YTNjYzczZGMyNjU1Mjk4MTllMjFlYjlmMWJkNmIyOQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-06-27T17:52:16Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-06-27T17:52:16Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1314", "tree": {"sha": "04d8056c51a5f300b5bb5385ab886f284832d2b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/04d8056c51a5f300b5bb5385ab886f284832d2b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54d234208a3cc73dc265529819e21eb9f1bd6b29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54d234208a3cc73dc265529819e21eb9f1bd6b29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54d234208a3cc73dc265529819e21eb9f1bd6b29", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54d234208a3cc73dc265529819e21eb9f1bd6b29/comments", "author": null, "committer": null, "parents": [{"sha": "e4600702d9905d357c8efa158bc252b05bbc2e8c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4600702d9905d357c8efa158bc252b05bbc2e8c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4600702d9905d357c8efa158bc252b05bbc2e8c"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "a219ff9e3630546b59c6176aa6f35f0047ed99b4", "filename": "gcc/regclass.c", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54d234208a3cc73dc265529819e21eb9f1bd6b29/gcc%2Fregclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54d234208a3cc73dc265529819e21eb9f1bd6b29/gcc%2Fregclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregclass.c?ref=54d234208a3cc73dc265529819e21eb9f1bd6b29", "patch": "@@ -408,18 +408,30 @@ static struct costs op_costs[MAX_RECOG_OPERANDS];\n \n static char *prefclass;\n \n-/* preferred_or_nothing[R] is nonzero if we should put pseudo number R\n-   in memory if we can't get its preferred class.\n+/* altclass[R] is a register class that we should use for allocating\n+   pseudo number R if no register in the preferred class is available.\n+   If no register in this class is available, memory is preferred.\n+\n+   It might appear to be more general to have a bitmask of classes here,\n+   but since it is recommended that there be a class corresponding to the\n+   union of most major pair of classes, that generality is not required. \n+\n    This is available after `regclass' is run.  */\n \n-static char *preferred_or_nothing;\n+static char *altclass;\n \n-/* Record the depth of loops that we are in, 1 for no loops.  */\n+/* Record the depth of loops that we are in.  */\n \n static int loop_depth;\n \n-void reg_class_record ();\n-void record_address_regs ();\n+/* Account for the fact that insns within a loop are executed very commonly,\n+   but don't keep doing this as loops go too deep.  */\n+\n+static int loop_cost;\n+\n+static int copy_cost ();\n+static void record_reg_classes ();\n+static void record_address_regs ();\n \n \n /* Return the reg_class in which pseudo reg number REGNO is best allocated."}]}