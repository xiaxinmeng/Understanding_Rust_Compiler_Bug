{"sha": "1a409f80df7452dbcab228390a2de483bed5b875", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE0MDlmODBkZjc0NTJkYmNhYjIyODM5MGEyZGU0ODNiZWQ1Yjg3NQ==", "commit": {"author": {"name": "Hristian Kirtchev", "email": "kirtchev@adacore.com", "date": "2018-09-26T09:19:28Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-09-26T09:19:28Z"}, "message": "[Ada] Spurious elaboration issue due to inlining\n\nThis patch ensures that the full compilation context is captured prior\nto package or subprogram instantiation/inlining and restored after the\naction takes place.\n\n2018-09-26  Hristian Kirtchev  <kirtchev@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch12.adb (Instantiate_Package_Body): Capture and restore\n\tthe full compilation context.\n\t(Instantiate_Subprogram_Body): Capture and restore the full\n\tcompilation context.\n\ngcc/testsuite/\n\n\t* gnat.dg/elab7.adb, gnat.dg/elab7_pkg1.adb,\n\tgnat.dg/elab7_pkg1.ads, gnat.dg/elab7_pkg2.adb,\n\tgnat.dg/elab7_pkg2.ads: New testcase.\n\nFrom-SVN: r264630", "tree": {"sha": "0358e2c62d3402b7a22eb399e9c80779b756d4c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0358e2c62d3402b7a22eb399e9c80779b756d4c1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a409f80df7452dbcab228390a2de483bed5b875", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a409f80df7452dbcab228390a2de483bed5b875", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a409f80df7452dbcab228390a2de483bed5b875", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a409f80df7452dbcab228390a2de483bed5b875/comments", "author": {"login": "kirtchev-adacore", "id": 60669983, "node_id": "MDQ6VXNlcjYwNjY5OTgz", "avatar_url": "https://avatars.githubusercontent.com/u/60669983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kirtchev-adacore", "html_url": "https://github.com/kirtchev-adacore", "followers_url": "https://api.github.com/users/kirtchev-adacore/followers", "following_url": "https://api.github.com/users/kirtchev-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/kirtchev-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/kirtchev-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kirtchev-adacore/subscriptions", "organizations_url": "https://api.github.com/users/kirtchev-adacore/orgs", "repos_url": "https://api.github.com/users/kirtchev-adacore/repos", "events_url": "https://api.github.com/users/kirtchev-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/kirtchev-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a30a69c1229cbf5270d2048299da5b9ae171e226", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a30a69c1229cbf5270d2048299da5b9ae171e226", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a30a69c1229cbf5270d2048299da5b9ae171e226"}], "stats": {"total": 186, "additions": 132, "deletions": 54}, "files": [{"sha": "80d119d87c798c4833e5579959b990afd6713a3f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a409f80df7452dbcab228390a2de483bed5b875/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a409f80df7452dbcab228390a2de483bed5b875/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1a409f80df7452dbcab228390a2de483bed5b875", "patch": "@@ -1,3 +1,10 @@\n+2018-09-26  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch12.adb (Instantiate_Package_Body): Capture and restore\n+\tthe full compilation context.\n+\t(Instantiate_Subprogram_Body): Capture and restore the full\n+\tcompilation context.\n+\n 2018-09-26  Yannick Moy  <moy@adacore.com>\n \n \t* debug.adb: Add use for -gnatd_f switch."}, {"sha": "5e04895b57976294f8aad3d5eff707dd433482ab", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 79, "deletions": 54, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a409f80df7452dbcab228390a2de483bed5b875/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a409f80df7452dbcab228390a2de483bed5b875/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=1a409f80df7452dbcab228390a2de483bed5b875", "patch": "@@ -11202,10 +11202,6 @@ package body Sem_Ch12 is\n       Gen_Decl    : constant Node_Id    := Unit_Declaration_Node (Gen_Unit);\n       Loc         : constant Source_Ptr := Sloc (Inst_Node);\n \n-      Saved_ISMP        : constant Boolean :=\n-                           Ignore_SPARK_Mode_Pragmas_In_Instance;\n-      Saved_Style_Check : constant Boolean := Style_Check;\n-\n       procedure Check_Initialized_Types;\n       --  In a generic package body, an entity of a generic private type may\n       --  appear uninitialized. This is suspicious, unless the actual is a\n@@ -11276,20 +11272,30 @@ package body Sem_Ch12 is\n \n       --  Local variables\n \n-      Saved_GM  : constant Ghost_Mode_Type := Ghost_Mode;\n-      Saved_IGR : constant Node_Id         := Ignored_Ghost_Region;\n-      Saved_SM  : constant SPARK_Mode_Type := SPARK_Mode;\n-      Saved_SMP : constant Node_Id         := SPARK_Mode_Pragma;\n-      --  Save the Ghost and SPARK mode-related data to restore on exit\n+      --  The following constants capture the context prior to instantiating\n+      --  the package body.\n \n-      Act_Body         : Node_Id;\n-      Act_Body_Id      : Entity_Id;\n-      Act_Body_Name    : Node_Id;\n-      Gen_Body         : Node_Id;\n-      Gen_Body_Id      : Node_Id;\n-      Par_Ent          : Entity_Id := Empty;\n-      Par_Vis          : Boolean   := False;\n-      Parent_Installed : Boolean := False;\n+      Saved_CS   : constant Config_Switches_Type     := Save_Config_Switches;\n+      Saved_GM   : constant Ghost_Mode_Type          := Ghost_Mode;\n+      Saved_IGR  : constant Node_Id                  := Ignored_Ghost_Region;\n+      Saved_ISMP : constant Boolean                  :=\n+                     Ignore_SPARK_Mode_Pragmas_In_Instance;\n+      Saved_LSST : constant Suppress_Stack_Entry_Ptr :=\n+                     Local_Suppress_Stack_Top;\n+      Saved_SC   : constant Boolean                  := Style_Check;\n+      Saved_SM   : constant SPARK_Mode_Type          := SPARK_Mode;\n+      Saved_SMP  : constant Node_Id                  := SPARK_Mode_Pragma;\n+      Saved_SS   : constant Suppress_Record          := Scope_Suppress;\n+      Saved_Warn : constant Warning_Record           := Save_Warnings;\n+\n+      Act_Body      : Node_Id;\n+      Act_Body_Id   : Entity_Id;\n+      Act_Body_Name : Node_Id;\n+      Gen_Body      : Node_Id;\n+      Gen_Body_Id   : Node_Id;\n+      Par_Ent       : Entity_Id := Empty;\n+      Par_Installed : Boolean := False;\n+      Par_Vis       : Boolean   := False;\n \n       Vis_Prims_List : Elist_Id := No_Elist;\n       --  List of primitives made temporarily visible in the instantiation\n@@ -11452,13 +11458,13 @@ package body Sem_Ch12 is\n             Par_Ent := Entity (Prefix (Gen_Id));\n             Par_Vis := Is_Immediately_Visible (Par_Ent);\n             Install_Parent (Par_Ent, In_Body => True);\n-            Parent_Installed := True;\n+            Par_Installed := True;\n \n          elsif Is_Child_Unit (Gen_Unit) then\n             Par_Ent := Scope (Gen_Unit);\n             Par_Vis := Is_Immediately_Visible (Par_Ent);\n             Install_Parent (Par_Ent, In_Body => True);\n-            Parent_Installed := True;\n+            Par_Installed := True;\n          end if;\n \n          --  If the instantiation is a library unit, and this is the main unit,\n@@ -11527,7 +11533,7 @@ package body Sem_Ch12 is\n          --  Remove the parent instances if they have been placed on the scope\n          --  stack to compile the body.\n \n-         if Parent_Installed then\n+         if Par_Installed then\n             Remove_Parent (In_Body => True);\n \n             --  Restore the previous visibility of the parent\n@@ -11599,13 +11605,21 @@ package body Sem_Ch12 is\n          end if;\n       end if;\n \n-      Expander_Mode_Restore;\n-\n    <<Leave>>\n+\n+      --  Restore the context that was in effect prior to instantiating the\n+      --  package body.\n+\n       Ignore_SPARK_Mode_Pragmas_In_Instance := Saved_ISMP;\n-      Restore_Ghost_Region (Saved_GM, Saved_IGR);\n-      Restore_SPARK_Mode   (Saved_SM, Saved_SMP);\n-      Style_Check := Saved_Style_Check;\n+      Local_Suppress_Stack_Top              := Saved_LSST;\n+      Scope_Suppress                        := Saved_SS;\n+      Style_Check                           := Saved_SC;\n+\n+      Expander_Mode_Restore;\n+      Restore_Config_Switches (Saved_CS);\n+      Restore_Ghost_Region    (Saved_GM, Saved_IGR);\n+      Restore_SPARK_Mode      (Saved_SM, Saved_SMP);\n+      Restore_Warnings        (Saved_Warn);\n    end Instantiate_Package_Body;\n \n    ---------------------------------\n@@ -11630,27 +11644,31 @@ package body Sem_Ch12 is\n       Pack_Id     : constant Entity_Id  :=\n                       Defining_Unit_Name (Parent (Act_Decl));\n \n-      Saved_GM   : constant Ghost_Mode_Type := Ghost_Mode;\n-      Saved_IGR  : constant Node_Id         := Ignored_Ghost_Region;\n-      Saved_ISMP : constant Boolean         :=\n-                     Ignore_SPARK_Mode_Pragmas_In_Instance;\n-      Saved_SM   : constant SPARK_Mode_Type := SPARK_Mode;\n-      Saved_SMP  : constant Node_Id         := SPARK_Mode_Pragma;\n-      --  Save the Ghost and SPARK mode-related data to restore on exit\n-\n-      Saved_Style_Check : constant Boolean        := Style_Check;\n-      Saved_Warnings    : constant Warning_Record := Save_Warnings;\n+      --  The following constants capture the context prior to instantiating\n+      --  the subprogram body.\n \n-      Act_Body    : Node_Id;\n-      Act_Body_Id : Entity_Id;\n-      Gen_Body    : Node_Id;\n-      Gen_Body_Id : Node_Id;\n-      Pack_Body   : Node_Id;\n-      Par_Ent     : Entity_Id := Empty;\n-      Par_Vis     : Boolean   := False;\n-      Ret_Expr    : Node_Id;\n-\n-      Parent_Installed : Boolean := False;\n+      Saved_CS   : constant Config_Switches_Type     := Save_Config_Switches;\n+      Saved_GM   : constant Ghost_Mode_Type          := Ghost_Mode;\n+      Saved_IGR  : constant Node_Id                  := Ignored_Ghost_Region;\n+      Saved_ISMP : constant Boolean                  :=\n+                     Ignore_SPARK_Mode_Pragmas_In_Instance;\n+      Saved_LSST : constant Suppress_Stack_Entry_Ptr :=\n+                     Local_Suppress_Stack_Top;\n+      Saved_SC   : constant Boolean                  := Style_Check;\n+      Saved_SM   : constant SPARK_Mode_Type          := SPARK_Mode;\n+      Saved_SMP  : constant Node_Id                  := SPARK_Mode_Pragma;\n+      Saved_SS   : constant Suppress_Record          := Scope_Suppress;\n+      Saved_Warn : constant Warning_Record           := Save_Warnings;\n+\n+      Act_Body      : Node_Id;\n+      Act_Body_Id   : Entity_Id;\n+      Gen_Body      : Node_Id;\n+      Gen_Body_Id   : Node_Id;\n+      Pack_Body     : Node_Id;\n+      Par_Ent       : Entity_Id := Empty;\n+      Par_Installed : Boolean   := False;\n+      Par_Vis       : Boolean   := False;\n+      Ret_Expr      : Node_Id;\n \n    begin\n       Gen_Body_Id := Corresponding_Body (Gen_Decl);\n@@ -11792,13 +11810,13 @@ package body Sem_Ch12 is\n             Par_Ent := Entity (Prefix (Gen_Id));\n             Par_Vis := Is_Immediately_Visible (Par_Ent);\n             Install_Parent (Par_Ent, In_Body => True);\n-            Parent_Installed := True;\n+            Par_Installed := True;\n \n          elsif Is_Child_Unit (Gen_Unit) then\n             Par_Ent := Scope (Gen_Unit);\n             Par_Vis := Is_Immediately_Visible (Par_Ent);\n             Install_Parent (Par_Ent, In_Body => True);\n-            Parent_Installed := True;\n+            Par_Installed := True;\n          end if;\n \n          --  Subprogram body is placed in the body of wrapper package,\n@@ -11843,7 +11861,7 @@ package body Sem_Ch12 is\n \n          Restore_Private_Views (Pack_Id, False);\n \n-         if Parent_Installed then\n+         if Par_Installed then\n             Remove_Parent (In_Body => True);\n \n             --  Restore the previous visibility of the parent\n@@ -11852,7 +11870,6 @@ package body Sem_Ch12 is\n          end if;\n \n          Restore_Env;\n-         Restore_Warnings (Saved_Warnings);\n \n       --  Body not found. Error was emitted already. If there were no previous\n       --  errors, this may be an instance whose scope is a premature instance.\n@@ -11923,13 +11940,21 @@ package body Sem_Ch12 is\n          Analyze (Pack_Body);\n       end if;\n \n-      Expander_Mode_Restore;\n-\n    <<Leave>>\n+\n+      --  Restore the context that was in effect prior to instantiating the\n+      --  subprogram body.\n+\n       Ignore_SPARK_Mode_Pragmas_In_Instance := Saved_ISMP;\n-      Restore_Ghost_Region (Saved_GM, Saved_IGR);\n-      Restore_SPARK_Mode   (Saved_SM, Saved_SMP);\n-      Style_Check := Saved_Style_Check;\n+      Local_Suppress_Stack_Top              := Saved_LSST;\n+      Scope_Suppress                        := Saved_SS;\n+      Style_Check                           := Saved_SC;\n+\n+      Expander_Mode_Restore;\n+      Restore_Config_Switches (Saved_CS);\n+      Restore_Ghost_Region    (Saved_GM, Saved_IGR);\n+      Restore_SPARK_Mode      (Saved_SM, Saved_SMP);\n+      Restore_Warnings        (Saved_Warn);\n    end Instantiate_Subprogram_Body;\n \n    ----------------------"}, {"sha": "cf904eb8466834218e07e88d2378b372e175f8c4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a409f80df7452dbcab228390a2de483bed5b875/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a409f80df7452dbcab228390a2de483bed5b875/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1a409f80df7452dbcab228390a2de483bed5b875", "patch": "@@ -1,3 +1,9 @@\n+2018-09-26  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* gnat.dg/elab7.adb, gnat.dg/elab7_pkg1.adb,\n+\tgnat.dg/elab7_pkg1.ads, gnat.dg/elab7_pkg2.adb,\n+\tgnat.dg/elab7_pkg2.ads: New testcase.\n+\n 2018-09-26  Javier Miranda  <miranda@adacore.com>\n \n \t* gnat.dg/interface8.adb, gnat.dg/interface8.ads: New testcase."}, {"sha": "b5b52f170ecaa376d2435d21c034daaf77daf611", "filename": "gcc/testsuite/gnat.dg/elab7.adb", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a409f80df7452dbcab228390a2de483bed5b875/gcc%2Ftestsuite%2Fgnat.dg%2Felab7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a409f80df7452dbcab228390a2de483bed5b875/gcc%2Ftestsuite%2Fgnat.dg%2Felab7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Felab7.adb?ref=1a409f80df7452dbcab228390a2de483bed5b875", "patch": "@@ -0,0 +1,9 @@\n+--  { dg-do run }\n+--  { dg-options \"-gnatE -gnatn\" }\n+\n+with Elab7_Pkg1;\n+\n+procedure Elab7 is\n+begin\n+   null;\n+end Elab7;"}, {"sha": "e9af99fba108ef8b70c68bd80a4879a9971f7a01", "filename": "gcc/testsuite/gnat.dg/elab7_pkg1.adb", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a409f80df7452dbcab228390a2de483bed5b875/gcc%2Ftestsuite%2Fgnat.dg%2Felab7_pkg1.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a409f80df7452dbcab228390a2de483bed5b875/gcc%2Ftestsuite%2Fgnat.dg%2Felab7_pkg1.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Felab7_pkg1.adb?ref=1a409f80df7452dbcab228390a2de483bed5b875", "patch": "@@ -0,0 +1,8 @@\n+with Elab7_Pkg2;\n+\n+package body Elab7_Pkg1 is\n+   procedure A is\n+   begin\n+      Elab7_Pkg2.A;\n+   end A;\n+end Elab7_Pkg1;"}, {"sha": "bb1db2c1317f80e42726264142bda3a5dac3e6bf", "filename": "gcc/testsuite/gnat.dg/elab7_pkg1.ads", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a409f80df7452dbcab228390a2de483bed5b875/gcc%2Ftestsuite%2Fgnat.dg%2Felab7_pkg1.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a409f80df7452dbcab228390a2de483bed5b875/gcc%2Ftestsuite%2Fgnat.dg%2Felab7_pkg1.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Felab7_pkg1.ads?ref=1a409f80df7452dbcab228390a2de483bed5b875", "patch": "@@ -0,0 +1,3 @@\n+package Elab7_Pkg1 is\n+   procedure A;\n+end Elab7_Pkg1;"}, {"sha": "97a9ba6d3769fd815d6adad97711bc14b6bf96ab", "filename": "gcc/testsuite/gnat.dg/elab7_pkg2.adb", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a409f80df7452dbcab228390a2de483bed5b875/gcc%2Ftestsuite%2Fgnat.dg%2Felab7_pkg2.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a409f80df7452dbcab228390a2de483bed5b875/gcc%2Ftestsuite%2Fgnat.dg%2Felab7_pkg2.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Felab7_pkg2.adb?ref=1a409f80df7452dbcab228390a2de483bed5b875", "patch": "@@ -0,0 +1,15 @@\n+with Elab7_Pkg1;\n+\n+package body Elab7_Pkg2 is\n+   procedure From_Timerep is\n+      Lf1 : Long_Float := 1.0;\n+      Lf2 : Long_Float := Long_Float'Floor(Lf1);\n+   begin\n+      null;\n+   end From_Timerep;\n+\n+   procedure A is\n+   begin\n+      Elab7_Pkg1.A;\n+   end A;\n+end Elab7_Pkg2;"}, {"sha": "8eceb2cce4e8130bf39e621ec44552662d17724e", "filename": "gcc/testsuite/gnat.dg/elab7_pkg2.ads", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a409f80df7452dbcab228390a2de483bed5b875/gcc%2Ftestsuite%2Fgnat.dg%2Felab7_pkg2.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a409f80df7452dbcab228390a2de483bed5b875/gcc%2Ftestsuite%2Fgnat.dg%2Felab7_pkg2.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Felab7_pkg2.ads?ref=1a409f80df7452dbcab228390a2de483bed5b875", "patch": "@@ -0,0 +1,5 @@\n+package Elab7_Pkg2 is\n+   pragma Elaborate_Body;\n+\n+   procedure A;\n+end Elab7_Pkg2;"}]}