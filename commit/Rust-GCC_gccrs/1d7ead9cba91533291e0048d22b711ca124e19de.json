{"sha": "1d7ead9cba91533291e0048d22b711ca124e19de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ3ZWFkOWNiYTkxNTMzMjkxZTAwNDhkMjJiNzExY2ExMjRlMTlkZQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-04-29T10:51:38Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-04-29T10:51:38Z"}, "message": "arm: Extend the PR94780 fix to arm\n\nEssentially the same fix as for x86.\n\n2020-04-29  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/arm/arm-builtins.c (arm_atomic_assign_expand_fenv): Use\n\tTARGET_EXPR instead of MODIFY_EXPR for the first assignments to\n\tfenv_var and new_fenv_var.", "tree": {"sha": "67149aba5c8142598c0874f4b8c29d7b0b635aad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/67149aba5c8142598c0874f4b8c29d7b0b635aad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d7ead9cba91533291e0048d22b711ca124e19de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d7ead9cba91533291e0048d22b711ca124e19de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d7ead9cba91533291e0048d22b711ca124e19de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d7ead9cba91533291e0048d22b711ca124e19de/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "127abeb2e8448b2932bd52245f055d0c5c4b44a0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/127abeb2e8448b2932bd52245f055d0c5c4b44a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/127abeb2e8448b2932bd52245f055d0c5c4b44a0"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "2de5b3c81b424efeab1a9628f7ba3291e95a007a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d7ead9cba91533291e0048d22b711ca124e19de/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d7ead9cba91533291e0048d22b711ca124e19de/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1d7ead9cba91533291e0048d22b711ca124e19de", "patch": "@@ -1,3 +1,9 @@\n+2020-04-29  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/arm/arm-builtins.c (arm_atomic_assign_expand_fenv): Use\n+\tTARGET_EXPR instead of MODIFY_EXPR for the first assignments to\n+\tfenv_var and new_fenv_var.\n+\n 2020-04-29  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* doc/sourcebuild.texi (arm_arch_v8a_hard_ok): Document new"}, {"sha": "f64742e644774a11cb8717a7827c5056b991640e", "filename": "gcc/config/arm/arm-builtins.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d7ead9cba91533291e0048d22b711ca124e19de/gcc%2Fconfig%2Farm%2Farm-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d7ead9cba91533291e0048d22b711ca124e19de/gcc%2Fconfig%2Farm%2Farm-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-builtins.c?ref=1d7ead9cba91533291e0048d22b711ca124e19de", "patch": "@@ -4167,8 +4167,9 @@ arm_atomic_assign_expand_fenv (tree *hold, tree *clear, tree *update)\n   mask = build_int_cst (unsigned_type_node,\n \t\t\t~((ARM_FE_ALL_EXCEPT << ARM_FE_EXCEPT_SHIFT)\n \t\t\t  | ARM_FE_ALL_EXCEPT));\n-  ld_fenv = build2 (MODIFY_EXPR, unsigned_type_node,\n-\t\t    fenv_var, build_call_expr (get_fpscr, 0));\n+  ld_fenv = build4 (TARGET_EXPR, unsigned_type_node,\n+\t\t    fenv_var, build_call_expr (get_fpscr, 0),\n+\t\t    NULL_TREE, NULL_TREE);\n   masked_fenv = build2 (BIT_AND_EXPR, unsigned_type_node, fenv_var, mask);\n   hold_fnclex = build_call_expr (set_fpscr, 1, masked_fenv);\n   *hold = build2 (COMPOUND_EXPR, void_type_node,\n@@ -4189,8 +4190,8 @@ arm_atomic_assign_expand_fenv (tree *hold, tree *clear, tree *update)\n        __atomic_feraiseexcept (new_fenv_var);  */\n \n   new_fenv_var = create_tmp_var_raw (unsigned_type_node);\n-  reload_fenv = build2 (MODIFY_EXPR, unsigned_type_node, new_fenv_var,\n-\t\t\tbuild_call_expr (get_fpscr, 0));\n+  reload_fenv = build4 (TARGET_EXPR, unsigned_type_node, new_fenv_var,\n+\t\t\tbuild_call_expr (get_fpscr, 0), NULL_TREE, NULL_TREE);\n   restore_fnenv = build_call_expr (set_fpscr, 1, fenv_var);\n   atomic_feraiseexcept = builtin_decl_implicit (BUILT_IN_ATOMIC_FERAISEEXCEPT);\n   update_call = build_call_expr (atomic_feraiseexcept, 1,"}]}