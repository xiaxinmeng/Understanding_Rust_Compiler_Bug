{"sha": "c77384a44f4e8b30d90c5a1c7f4593cb76c0d67e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzc3Mzg0YTQ0ZjRlOGIzMGQ5MGM1YTFjN2Y0NTkzY2I3NmMwZDY3ZQ==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2018-05-21T14:50:44Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-21T14:50:44Z"}, "message": "[Ada] Tighten Object_Reader.Get_Memory_Bounds\n\nSymbolization of traceback entries from dwarf info was\nfailing in some cases with shared libraries on ELF targets,\nfrom unexpected overlapping of what we believed were code\nregions for distinct modules.\n\nThis is caused by the inclusion of all SHF_ALLOC sections in\nthe set of sections of possible relevance to determine the span\nof possible code addresses for a module.\n\nThis change renames the Get_memory_Bound subprogram to better\nconvey that we really care about sections hosting executable code\nin particular, matching what the spec comments already claims.\n\nIt also renames the boolean flag conveying the info of relevance\nin the Object_Section record, and adjusts the ELF implementation\nof Get_Section to feed this flag from SHF_EXECINSTR instead of\nSHF_ALLOC.\n\n2018-05-21  Olivier Hainque  <hainque@adacore.com>\n\ngcc/ada/\n\n\t* libgnat/s-objrea.ads (Get_Memory_Bounds): Rename as Get_Xcode_Bounds.\n\t(Object_Section): Rename Flag_Alloc component as Flag_Xcode.\n\t* libgnat/s-objrea.adb (Get_Xcode_Bounds): Adjust to new subprogram and\n\tcomponent name.\n\t(Get_Section, ELF case): Set Flag_Xcode from SHF_EXECINSTR.\n\t* libgnat/s-dwalin.adb (Open): Adjust to the Get_Memory_Bounds name\n\tchange.\n\nFrom-SVN: r260451", "tree": {"sha": "753eba6ee68a4ffae1cc7cb3873caf8d268070b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/753eba6ee68a4ffae1cc7cb3873caf8d268070b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c77384a44f4e8b30d90c5a1c7f4593cb76c0d67e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c77384a44f4e8b30d90c5a1c7f4593cb76c0d67e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c77384a44f4e8b30d90c5a1c7f4593cb76c0d67e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c77384a44f4e8b30d90c5a1c7f4593cb76c0d67e/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0f090200e7ee7d1ee9d6b84b482618dcba14d92f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f090200e7ee7d1ee9d6b84b482618dcba14d92f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f090200e7ee7d1ee9d6b84b482618dcba14d92f"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "faa11548eadbaba619cf7b5eb2d35ef9edcf039c", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c77384a44f4e8b30d90c5a1c7f4593cb76c0d67e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c77384a44f4e8b30d90c5a1c7f4593cb76c0d67e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c77384a44f4e8b30d90c5a1c7f4593cb76c0d67e", "patch": "@@ -1,3 +1,13 @@\n+2018-04-04  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* libgnat/s-objrea.ads (Get_Memory_Bounds): Rename as Get_Xcode_Bounds.\n+\t(Object_Section): Rename Flag_Alloc component as Flag_Xcode.\n+\t* libgnat/s-objrea.adb (Get_Xcode_Bounds): Adjust to new subprogram and\n+\tcomponent name.\n+\t(Get_Section, ELF case): Set Flag_Xcode from SHF_EXECINSTR.\n+\t* libgnat/s-dwalin.adb (Open): Adjust to the Get_Memory_Bounds name\n+\tchange.\n+\n 2018-04-04  Olivier Hainque  <hainque@adacore.com>\n \n \t* libgnat/s-dwalin.ads (Dwarf_Context): Change type of Load_Address to"}, {"sha": "b6fa1111379a18bc0fa0d4cf8645fbf092840c61", "filename": "gcc/ada/libgnat/s-dwalin.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c77384a44f4e8b30d90c5a1c7f4593cb76c0d67e/gcc%2Fada%2Flibgnat%2Fs-dwalin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c77384a44f4e8b30d90c5a1c7f4593cb76c0d67e/gcc%2Fada%2Flibgnat%2Fs-dwalin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-dwalin.adb?ref=c77384a44f4e8b30d90c5a1c7f4593cb76c0d67e", "patch": "@@ -414,9 +414,10 @@ package body System.Dwarf_Lines is\n \n       Success := True;\n \n-      --  Get memory bounds\n+      --  Get memory bounds for executable code.  Note that such code\n+      --  might come from multiple sections.\n \n-      Get_Memory_Bounds (C.Obj.all, Lo, Hi);\n+      Get_Xcode_Bounds (C.Obj.all, Lo, Hi);\n       C.Low  := Storage_Offset (Lo);\n       C.High := Storage_Offset (Hi);\n "}, {"sha": "bea13d937525090561df04c4c41a98a68991569c", "filename": "gcc/ada/libgnat/s-objrea.adb", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c77384a44f4e8b30d90c5a1c7f4593cb76c0d67e/gcc%2Fada%2Flibgnat%2Fs-objrea.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c77384a44f4e8b30d90c5a1c7f4593cb76c0d67e/gcc%2Fada%2Flibgnat%2Fs-objrea.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-objrea.adb?ref=c77384a44f4e8b30d90c5a1c7f4593cb76c0d67e", "patch": "@@ -114,6 +114,7 @@ package body System.Object_Reader is\n       end record;\n \n       SHF_ALLOC : constant := 2;\n+      SHF_EXECINSTR : constant := 4;\n \n       type Symtab_Entry32 is record\n          St_Name  : uint32;  --  Name (string table index)\n@@ -552,7 +553,7 @@ package body System.Object_Reader is\n                  Offset (SHdr.Sh_Offset),\n                  uint64 (SHdr.Sh_Addr),\n                  uint64 (SHdr.Sh_Size),\n-                 (SHdr.Sh_Flags and SHF_ALLOC) /= 0);\n+                 (SHdr.Sh_Flags and SHF_EXECINSTR) /= 0);\n       end Get_Section;\n \n       ------------------------\n@@ -1679,11 +1680,11 @@ package body System.Object_Reader is\n       end if;\n    end Get_Section;\n \n-   -----------------------\n-   -- Get_Memory_Bounds --\n-   -----------------------\n+   ----------------------\n+   -- Get_Xcode_Bounds --\n+   ----------------------\n \n-   procedure Get_Memory_Bounds\n+   procedure Get_Xcode_Bounds\n      (Obj   : in out Object_File;\n       Low, High : out uint64) is\n       Sec : Object_Section;\n@@ -1692,9 +1693,11 @@ package body System.Object_Reader is\n       Low := uint64'Last;\n       High := uint64'First;\n \n+      --  Now find the lowest and highest offsets\n+      --  attached to executable code sections\n       for Idx in 1 .. Num_Sections (Obj) loop\n          Sec := Get_Section (Obj, Idx - 1);\n-         if Sec.Flag_Alloc then\n+         if Sec.Flag_Xcode then\n             if Sec.Addr < Low then\n                Low := Sec.Addr;\n             end if;\n@@ -1703,7 +1706,7 @@ package body System.Object_Reader is\n             end if;\n          end if;\n       end loop;\n-   end Get_Memory_Bounds;\n+   end Get_Xcode_Bounds;\n \n    ----------\n    -- Name --"}, {"sha": "1cb08cffc2b5e7c5981383b34fa65d54a42a9e23", "filename": "gcc/ada/libgnat/s-objrea.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c77384a44f4e8b30d90c5a1c7f4593cb76c0d67e/gcc%2Fada%2Flibgnat%2Fs-objrea.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c77384a44f4e8b30d90c5a1c7f4593cb76c0d67e/gcc%2Fada%2Flibgnat%2Fs-objrea.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fs-objrea.ads?ref=c77384a44f4e8b30d90c5a1c7f4593cb76c0d67e", "patch": "@@ -277,7 +277,7 @@ package System.Object_Reader is\n       Sec : Object_Section) return Mapped_Stream;\n    --  Create a stream for section Sec\n \n-   procedure Get_Memory_Bounds\n+   procedure Get_Xcode_Bounds\n      (Obj   : in out Object_File;\n       Low, High : out uint64);\n    --  Return the low and high addresses of the code for the object file. Can\n@@ -434,8 +434,8 @@ private\n       Size       : uint64 := 0;\n       --  Length of the section in bytes\n \n-      Flag_Alloc : Boolean := False;\n-      --  True if the section is mapped in memory by the OS loader\n+      Flag_Xcode : Boolean := False;\n+      --  True if the section is advertised to contain executable code\n    end record;\n \n    Null_Section : constant Object_Section := (0, 0, 0, 0, False);"}]}