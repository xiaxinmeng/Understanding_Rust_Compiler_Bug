{"sha": "0a2a0a583e9c933457c3577445a83e9af5fef29f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGEyYTBhNTgzZTljOTMzNDU3YzM1Nzc0NDVhODNlOWFmNWZlZjI5Zg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2002-12-02T14:24:11Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2002-12-02T14:24:11Z"}, "message": "h8300.md (stm_h8300s_2): New.\n\n\t* config/h8300/h8300.md (stm_h8300s_2): New.\n\t(stm_h8300s_3): Likewise.\n\t(stm_h8300s_4): Likewise.\n\t(five define_peephole2): Likewise.\n\nFrom-SVN: r59715", "tree": {"sha": "a1fe6f6ee8fe5ba5340131581af9c0a02b92ce3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a1fe6f6ee8fe5ba5340131581af9c0a02b92ce3c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a2a0a583e9c933457c3577445a83e9af5fef29f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2a0a583e9c933457c3577445a83e9af5fef29f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a2a0a583e9c933457c3577445a83e9af5fef29f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2a0a583e9c933457c3577445a83e9af5fef29f/comments", "author": null, "committer": null, "parents": [{"sha": "54806c1855fc8cfb0123b94a1c0f9449298740ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54806c1855fc8cfb0123b94a1c0f9449298740ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54806c1855fc8cfb0123b94a1c0f9449298740ba"}], "stats": {"total": 171, "additions": 171, "deletions": 0}, "files": [{"sha": "f09b4dba68793215155bbb0c5431d58e8eb9222c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2a0a583e9c933457c3577445a83e9af5fef29f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2a0a583e9c933457c3577445a83e9af5fef29f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a2a0a583e9c933457c3577445a83e9af5fef29f", "patch": "@@ -1,3 +1,10 @@\n+2002-12-02  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md (stm_h8300s_2): New.\n+\t(stm_h8300s_3): Likewise.\n+\t(stm_h8300s_4): Likewise.\n+\t(five define_peephole2): Likewise.\n+\n 2002-12-02  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* ra-build.c: Fix a comment typo."}, {"sha": "8fac7dd65c8df5b698bad5afd0e60fc5a9605222", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 164, "deletions": 0, "changes": 164, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a2a0a583e9c933457c3577445a83e9af5fef29f/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a2a0a583e9c933457c3577445a83e9af5fef29f/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=0a2a0a583e9c933457c3577445a83e9af5fef29f", "patch": "@@ -1688,6 +1688,68 @@\n    (set_attr \"length\" \"2\")])\n \f\n ;; ----------------------------------------------------------------------\n+;; PROLOGUE/EPILOGUE-RELATED INSTRUCTIONS\n+;; ----------------------------------------------------------------------\n+\n+(define_insn \"*stm_h8300s_2\"\n+  [(parallel\n+     [(set (reg:SI SP_REG)\n+\t   (plus:SI (reg:SI SP_REG) (const_int -8)))\n+      (set (mem:SI (plus:SI (reg:SI SP_REG) (const_int -4)))\n+\t   (match_operand:SI 0 \"register_operand\" \"\"))\n+      (set (mem:SI (plus:SI (reg:SI SP_REG) (const_int -8)))\n+\t   (match_operand:SI 1 \"register_operand\" \"\"))])]\n+  \"TARGET_H8300S\n+   && ((REGNO (operands[0]) == 0 && REGNO (operands[1]) == 1)\n+       || (REGNO (operands[0]) == 2 && REGNO (operands[1]) == 3)\n+       || (REGNO (operands[0]) == 4 && REGNO (operands[1]) == 5))\"\n+  \"stm.l\\\\t%S0-%S1,@-er7\"\n+  [(set_attr \"cc\" \"none\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*stm_h8300s_3\"\n+  [(parallel\n+     [(set (reg:SI SP_REG)\n+\t   (plus:SI (reg:SI SP_REG) (const_int -12)))\n+      (set (mem:SI (plus:SI (reg:SI SP_REG) (const_int -4)))\n+\t   (match_operand:SI 0 \"register_operand\" \"\"))\n+      (set (mem:SI (plus:SI (reg:SI SP_REG) (const_int -8)))\n+\t   (match_operand:SI 1 \"register_operand\" \"\"))\n+      (set (mem:SI (plus:SI (reg:SI SP_REG) (const_int -12)))\n+\t   (match_operand:SI 2 \"register_operand\" \"\"))])]\n+  \"TARGET_H8300S\n+   && ((REGNO (operands[0]) == 0\n+\t&& REGNO (operands[1]) == 1\n+\t&& REGNO (operands[2]) == 2)\n+       || (REGNO (operands[0]) == 4\n+\t   && REGNO (operands[1]) == 5\n+\t   && REGNO (operands[2]) == 6))\"\n+  \"stm.l\\\\t%S0-%S2,@-er7\"\n+  [(set_attr \"cc\" \"none\")\n+   (set_attr \"length\" \"4\")])\n+\n+(define_insn \"*stm_h8300s_4\"\n+  [(parallel\n+     [(set (reg:SI SP_REG)\n+\t   (plus:SI (reg:SI SP_REG) (const_int -16)))\n+      (set (mem:SI (plus:SI (reg:SI SP_REG) (const_int -4)))\n+\t   (match_operand:SI 0 \"register_operand\" \"\"))\n+      (set (mem:SI (plus:SI (reg:SI SP_REG) (const_int -8)))\n+\t   (match_operand:SI 1 \"register_operand\" \"\"))\n+      (set (mem:SI (plus:SI (reg:SI SP_REG) (const_int -12)))\n+\t   (match_operand:SI 2 \"register_operand\" \"\"))\n+      (set (mem:SI (plus:SI (reg:SI SP_REG) (const_int -16)))\n+\t   (match_operand:SI 3 \"register_operand\" \"\"))])]\n+  \"TARGET_H8300S\n+   && REGNO (operands[0]) == 0\n+   && REGNO (operands[1]) == 1\n+   && REGNO (operands[2]) == 2\n+   && REGNO (operands[3]) == 3\"\n+  \"stm.l\\\\t%S0-%S3,@-er7\"\n+  [(set_attr \"cc\" \"none\")\n+   (set_attr \"length\" \"4\")])\n+\f\n+;; ----------------------------------------------------------------------\n ;; EXTEND INSTRUCTIONS\n ;; ----------------------------------------------------------------------\n \n@@ -2484,3 +2546,105 @@\n \t\t      (match_dup 1)))\n       (clobber (match_dup 2))])]\n   \"\")\n+\n+;; Convert a QImode push into an SImode push so that the\n+;; define_peephole2 below can cram multiple pushes into one stm.l.\n+\n+(define_peephole2\n+  [(parallel [(set (reg:SI SP_REG)\n+                   (plus:SI (reg:SI SP_REG) (const_int -4)))\n+              (set (mem:QI (plus:SI (reg:SI SP_REG) (const_int -3)))\n+                   (match_operand:QI 0 \"register_operand\" \"\"))])]\n+  \"TARGET_H8300S\"\n+  [(set (mem:SI (pre_dec:SI (reg:SI SP_REG)))\n+\t(match_dup 0))]\n+  \"operands[0] = gen_rtx_REG (SImode, REGNO (operands[0]));\")\n+\n+;; Convert a HImode push into an SImode push so that the\n+;; define_peephole2 below can cram multiple pushes into one stm.l.\n+\n+(define_peephole2\n+  [(parallel [(set (reg:SI SP_REG)\n+                   (plus:SI (reg:SI SP_REG) (const_int -4)))\n+              (set (mem:HI (plus:SI (reg:SI SP_REG) (const_int -2)))\n+                   (match_operand:HI 0 \"register_operand\" \"\"))])]\n+  \"TARGET_H8300S\"\n+  [(set (mem:SI (pre_dec:SI (reg:SI SP_REG)))\n+\t(match_dup 0))]\n+  \"operands[0] = gen_rtx_REG (SImode, REGNO (operands[0]));\")\n+\n+;; Cram four pushes into stm.l.\n+\n+(define_peephole2\n+  [(set (mem:SI (pre_dec:SI (reg:SI SP_REG)))\n+\t(match_operand:SI 0 \"register_operand\" \"\"))\n+   (set (mem:SI (pre_dec:SI (reg:SI SP_REG)))\n+\t(match_operand:SI 1 \"register_operand\" \"\"))\n+   (set (mem:SI (pre_dec:SI (reg:SI SP_REG)))\n+\t(match_operand:SI 2 \"register_operand\" \"\"))\n+   (set (mem:SI (pre_dec:SI (reg:SI SP_REG)))\n+\t(match_operand:SI 3 \"register_operand\" \"\"))]\n+  \"TARGET_H8300S\n+   && REGNO (operands[0]) == 0\n+   && REGNO (operands[1]) == 1\n+   && REGNO (operands[2]) == 2\n+   && REGNO (operands[3]) == 3\"\n+  [(parallel [(set (reg:SI SP_REG)\n+\t\t   (plus:SI (reg:SI SP_REG)\n+\t\t\t    (const_int -16)))\n+\t      (set (mem:SI (plus:SI (reg:SI SP_REG) (const_int -4)))\n+\t\t   (match_dup 0))\n+\t      (set (mem:SI (plus:SI (reg:SI SP_REG) (const_int -8)))\n+\t\t   (match_dup 1))\n+\t      (set (mem:SI (plus:SI (reg:SI SP_REG) (const_int -12)))\n+\t\t   (match_dup 2))\n+\t      (set (mem:SI (plus:SI (reg:SI SP_REG) (const_int -16)))\n+\t\t   (match_dup 3))])]\n+  \"\")\n+\n+;; Cram three pushes into stm.l.\n+\n+(define_peephole2\n+  [(set (mem:SI (pre_dec:SI (reg:SI SP_REG)))\n+\t(match_operand:SI 0 \"register_operand\" \"\"))\n+   (set (mem:SI (pre_dec:SI (reg:SI SP_REG)))\n+\t(match_operand:SI 1 \"register_operand\" \"\"))\n+   (set (mem:SI (pre_dec:SI (reg:SI SP_REG)))\n+\t(match_operand:SI 2 \"register_operand\" \"\"))]\n+  \"TARGET_H8300S\n+   && ((REGNO (operands[0]) == 0\n+\t&& REGNO (operands[1]) == 1\n+\t&& REGNO (operands[2]) == 2)\n+       || (REGNO (operands[0]) == 4\n+\t   && REGNO (operands[1]) == 5\n+\t   && REGNO (operands[2]) == 6))\"\n+  [(parallel [(set (reg:SI SP_REG)\n+\t\t   (plus:SI (reg:SI SP_REG)\n+\t\t\t    (const_int -12)))\n+\t      (set (mem:SI (plus:SI (reg:SI SP_REG) (const_int -4)))\n+\t\t   (match_dup 0))\n+\t      (set (mem:SI (plus:SI (reg:SI SP_REG) (const_int -8)))\n+\t\t   (match_dup 1))\n+\t      (set (mem:SI (plus:SI (reg:SI SP_REG) (const_int -12)))\n+\t\t   (match_dup 2))])]\n+  \"\")\n+\n+;; Cram two pushes into stm.l.\n+\n+(define_peephole2\n+  [(set (mem:SI (pre_dec:SI (reg:SI SP_REG)))\n+\t(match_operand:SI 0 \"register_operand\" \"\"))\n+   (set (mem:SI (pre_dec:SI (reg:SI SP_REG)))\n+\t(match_operand:SI 1 \"register_operand\" \"\"))]\n+  \"TARGET_H8300S\n+   && ((REGNO (operands[0]) == 0 && REGNO (operands[1]) == 1)\n+       || (REGNO (operands[0]) == 2 && REGNO (operands[1]) == 3)\n+       || (REGNO (operands[0]) == 4 && REGNO (operands[1]) == 5))\"\n+  [(parallel [(set (reg:SI SP_REG)\n+\t\t   (plus:SI (reg:SI SP_REG)\n+\t\t\t    (const_int -8)))\n+\t      (set (mem:SI (plus:SI (reg:SI SP_REG) (const_int -4)))\n+\t\t   (match_dup 0))\n+\t      (set (mem:SI (plus:SI (reg:SI SP_REG) (const_int -8)))\n+\t\t   (match_dup 1))])]\n+  \"\")"}]}