{"sha": "99c4346a66ed358d49097bb14d9b5cf27528d58e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTljNDM0NmE2NmVkMzU4ZDQ5MDk3YmIxNGQ5YjVjZjI3NTI4ZDU4ZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-01-03T16:51:41Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-01-03T16:51:41Z"}, "message": "re PR c++/53650 (large array causes huge memory use)\n\n\tPR c++/53650\n\t* call.c (type_has_extended_temps): New.\n\t* cp-tree.h: Declare it.\n\t* decl.c (check_initializer): Use build_aggr_init for arrays\n\tif it is false.\n\t* init.c (build_vec_init): Avoid mixed signed/unsigned arithmetic.\n\nFrom-SVN: r194860", "tree": {"sha": "d08a78ce2e0359cdea2dda0c9c83749417566ec0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d08a78ce2e0359cdea2dda0c9c83749417566ec0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99c4346a66ed358d49097bb14d9b5cf27528d58e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99c4346a66ed358d49097bb14d9b5cf27528d58e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99c4346a66ed358d49097bb14d9b5cf27528d58e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99c4346a66ed358d49097bb14d9b5cf27528d58e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bcf1ef005542850e15a6bbb9a148a9b87a693c33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bcf1ef005542850e15a6bbb9a148a9b87a693c33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bcf1ef005542850e15a6bbb9a148a9b87a693c33"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "e349084e499d081c165539d81e658382ce2c3f92", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99c4346a66ed358d49097bb14d9b5cf27528d58e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99c4346a66ed358d49097bb14d9b5cf27528d58e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=99c4346a66ed358d49097bb14d9b5cf27528d58e", "patch": "@@ -1,3 +1,12 @@\n+2013-01-03  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/53650\n+\t* call.c (type_has_extended_temps): New.\n+\t* cp-tree.h: Declare it.\n+\t* decl.c (check_initializer): Use build_aggr_init for arrays\n+\tif it is false.\n+\t* init.c (build_vec_init): Avoid mixed signed/unsigned arithmetic.\n+\n 2013-01-02  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/54325"}, {"sha": "1466c4b4db867f91d061649fb0203fe5f36313d7", "filename": "gcc/cp/call.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99c4346a66ed358d49097bb14d9b5cf27528d58e/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99c4346a66ed358d49097bb14d9b5cf27528d58e/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=99c4346a66ed358d49097bb14d9b5cf27528d58e", "patch": "@@ -9234,6 +9234,28 @@ extend_ref_init_temps (tree decl, tree init, vec<tree, va_gc> **cleanups)\n   return init;\n }\n \n+/* Returns true iff an initializer for TYPE could contain temporaries that\n+   need to be extended because they are bound to references or\n+   std::initializer_list.  */\n+\n+bool\n+type_has_extended_temps (tree type)\n+{\n+  type = strip_array_types (type);\n+  if (TREE_CODE (type) == REFERENCE_TYPE)\n+    return true;\n+  if (CLASS_TYPE_P (type))\n+    {\n+      if (is_std_init_list (type))\n+\treturn true;\n+      for (tree f = next_initializable_field (TYPE_FIELDS (type));\n+\t   f; f = next_initializable_field (DECL_CHAIN (f)))\n+\tif (type_has_extended_temps (TREE_TYPE (f)))\n+\t  return true;\n+    }\n+  return false;\n+}\n+\n /* Returns true iff TYPE is some variant of std::initializer_list.  */\n \n bool"}, {"sha": "810df7de29cd21e6076a646cf0605eb911a2194b", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99c4346a66ed358d49097bb14d9b5cf27528d58e/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99c4346a66ed358d49097bb14d9b5cf27528d58e/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=99c4346a66ed358d49097bb14d9b5cf27528d58e", "patch": "@@ -4952,6 +4952,7 @@ extern tree initialize_reference\t\t(tree, tree, int,\n \t\t\t\t\t\t tsubst_flags_t);\n extern tree extend_ref_init_temps\t\t(tree, tree, vec<tree, va_gc>**);\n extern tree make_temporary_var_for_ref_to_temp\t(tree, tree);\n+extern bool type_has_extended_temps\t\t(tree);\n extern tree strip_top_quals\t\t\t(tree);\n extern bool reference_related_p\t\t\t(tree, tree);\n extern tree perform_implicit_conversion\t\t(tree, tree, tsubst_flags_t);"}, {"sha": "5c268b10b7f5851f505ea5c501f9b1ec905f67e3", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99c4346a66ed358d49097bb14d9b5cf27528d58e/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99c4346a66ed358d49097bb14d9b5cf27528d58e/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=99c4346a66ed358d49097bb14d9b5cf27528d58e", "patch": "@@ -5657,7 +5657,9 @@ check_initializer (tree decl, tree init, int flags, vec<tree, va_gc> **cleanups)\n       if ((type_build_ctor_call (type) || CLASS_TYPE_P (type))\n \t  && !(flags & LOOKUP_ALREADY_DIGESTED)\n \t  && !(init && BRACE_ENCLOSED_INITIALIZER_P (init)\n-\t       && CP_AGGREGATE_TYPE_P (type)))\n+\t       && CP_AGGREGATE_TYPE_P (type)\n+\t       && (CLASS_TYPE_P (type)\n+\t\t   || type_has_extended_temps (type))))\n \t{\n \t  init_code = build_aggr_init_full_exprs (decl, init, flags);\n "}, {"sha": "2ee2473925907bd714154aaafe6a3a828f372557", "filename": "gcc/cp/init.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99c4346a66ed358d49097bb14d9b5cf27528d58e/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99c4346a66ed358d49097bb14d9b5cf27528d58e/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=99c4346a66ed358d49097bb14d9b5cf27528d58e", "patch": "@@ -3637,7 +3637,9 @@ build_vec_init (tree base, tree maxindex, tree init,\n       if (TREE_CODE (type) == ARRAY_TYPE)\n \tm = cp_build_binary_op (input_location,\n \t\t\t\tMULT_EXPR, m,\n-\t\t\t\tarray_type_nelts_total (type),\n+\t\t\t\t/* Avoid mixing signed and unsigned.  */\n+\t\t\t\tconvert (TREE_TYPE (m),\n+\t\t\t\t\t array_type_nelts_total (type)),\n \t\t\t\tcomplain);\n \n       finish_cleanup_try_block (try_block);"}, {"sha": "c5f608b1f877c8b618af58c612378d74ce8f03d3", "filename": "gcc/testsuite/g++.dg/init/array34.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99c4346a66ed358d49097bb14d9b5cf27528d58e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray34.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99c4346a66ed358d49097bb14d9b5cf27528d58e/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray34.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray34.C?ref=99c4346a66ed358d49097bb14d9b5cf27528d58e", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/53650\n+// We should loop over array inits if they don't involve temporaries\n+// that need extending.\n+// { dg-final { scan-assembler-times \"_ZN5ClassC1Ev\" 1 } }\n+\n+struct Class {\n+  Class();\n+};\n+\n+int main() {\n+  Class table [10] = {};\n+  return 0;\n+}"}]}