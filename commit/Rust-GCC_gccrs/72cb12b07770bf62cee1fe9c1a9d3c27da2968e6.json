{"sha": "72cb12b07770bf62cee1fe9c1a9d3c27da2968e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJjYjEyYjA3NzcwYmY2MmNlZTFmZTljMWE5ZDNjMjdkYTI5NjhlNg==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2015-04-21T18:23:20Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2015-04-21T18:23:20Z"}, "message": "re PR libfortran/65234 (Output descriptor (*(1E15.7)) not accepted)\n\n2015-04-21 Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/65234\n\t* io/format.c (parse_format_list): Set the seen_dd flag in all\n\tcases where a data descriptor has been seen.\n\nFrom-SVN: r222274", "tree": {"sha": "d5c3ed5aa7ca5e90fb29fbd5c6867f125b31a42f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d5c3ed5aa7ca5e90fb29fbd5c6867f125b31a42f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72cb12b07770bf62cee1fe9c1a9d3c27da2968e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72cb12b07770bf62cee1fe9c1a9d3c27da2968e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72cb12b07770bf62cee1fe9c1a9d3c27da2968e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72cb12b07770bf62cee1fe9c1a9d3c27da2968e6/comments", "author": null, "committer": null, "parents": [{"sha": "dfce59eba33b2d602fa9c10451f571a596a9a4d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfce59eba33b2d602fa9c10451f571a596a9a4d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfce59eba33b2d602fa9c10451f571a596a9a4d8"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "2df9030d058c45ddbf10fb69345c3d13260cc43b", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72cb12b07770bf62cee1fe9c1a9d3c27da2968e6/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72cb12b07770bf62cee1fe9c1a9d3c27da2968e6/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=72cb12b07770bf62cee1fe9c1a9d3c27da2968e6", "patch": "@@ -1,3 +1,9 @@\n+2015-04-21 Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/65234\n+\t* io/format.c (parse_format_list): Set the seen_dd flag in all\n+\tcases where a data descriptor has been seen.\n+\n 2015-04-21 Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libgfortran/56743"}, {"sha": "2068af7eb849397fffded4403b2348227c6114be", "filename": "libgfortran/io/format.c", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72cb12b07770bf62cee1fe9c1a9d3c27da2968e6/libgfortran%2Fio%2Fformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72cb12b07770bf62cee1fe9c1a9d3c27da2968e6/libgfortran%2Fio%2Fformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fformat.c?ref=72cb12b07770bf62cee1fe9c1a9d3c27da2968e6", "patch": "@@ -624,6 +624,7 @@ parse_format_list (st_parameter_dt *dtp, bool *seen_dd)\n       get_fnode (fmt, &head, &tail, FMT_LPAREN);\n       tail->repeat = -2;  /* Signifies unlimited format.  */\n       tail->u.child = parse_format_list (dtp, &seen_data_desc);\n+      *seen_dd = seen_data_desc;\n       if (fmt->error != NULL)\n \tgoto finished;\n       if (!seen_data_desc)\n@@ -851,6 +852,7 @@ parse_format_list (st_parameter_dt *dtp, bool *seen_dd)\n   switch (t)\n     {\n     case FMT_L:\n+      *seen_dd = true;\n       t = format_lex (fmt);\n       if (t != FMT_POSINT)\n \t{\n@@ -873,6 +875,7 @@ parse_format_list (st_parameter_dt *dtp, bool *seen_dd)\n       break;\n \n     case FMT_A:\n+      *seen_dd = true;\n       t = format_lex (fmt);\n       if (t == FMT_ZERO)\n \t{\n@@ -897,12 +900,14 @@ parse_format_list (st_parameter_dt *dtp, bool *seen_dd)\n     case FMT_G:\n     case FMT_EN:\n     case FMT_ES:\n+      *seen_dd = true;\n       get_fnode (fmt, &head, &tail, t);\n       tail->repeat = repeat;\n \n       u = format_lex (fmt);\n       if (t == FMT_G && u == FMT_ZERO)\n \t{\n+\t  *seen_dd = true;\n \t  if (notification_std (GFC_STD_F2008) == NOTIFICATION_ERROR\n \t      || dtp->u.p.mode == READING)\n \t    {\n@@ -928,6 +933,7 @@ parse_format_list (st_parameter_dt *dtp, bool *seen_dd)\n \t}\n       if (t == FMT_F && dtp->u.p.mode == WRITING)\n \t{\n+\t  *seen_dd = true;\n \t  if (u != FMT_POSINT && u != FMT_ZERO)\n \t    {\n \t      fmt->error = nonneg_required;\n@@ -969,8 +975,10 @@ parse_format_list (st_parameter_dt *dtp, bool *seen_dd)\n       tail->u.real.e = -1;\n \n       if (t2 == FMT_D || t2 == FMT_F)\n-\tbreak;\n-\n+\t{\n+\t  *seen_dd = true;\n+\t  break;\n+\t}\n \n       /* Look for optional exponent */\n       t = format_lex (fmt);\n@@ -1011,6 +1019,7 @@ parse_format_list (st_parameter_dt *dtp, bool *seen_dd)\n     case FMT_B:\n     case FMT_O:\n     case FMT_Z:\n+      *seen_dd = true;\n       get_fnode (fmt, &head, &tail, t);\n       tail->repeat = repeat;\n "}]}