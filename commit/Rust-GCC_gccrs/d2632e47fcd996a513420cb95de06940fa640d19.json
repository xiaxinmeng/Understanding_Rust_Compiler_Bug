{"sha": "d2632e47fcd996a513420cb95de06940fa640d19", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI2MzJlNDdmY2Q5OTZhNTEzNDIwY2I5NWRlMDY5NDBmYTY0MGQxOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-01-21T21:53:49Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-01-21T21:53:49Z"}, "message": "re PR sanitizer/64706 (-fsanitize=vptr is not documented)\n\n\tPR sanitizer/64706\n\t* doc/invoke.texi (-fsanitize=vptr): Document.\n\nFrom-SVN: r219971", "tree": {"sha": "e56d3b2f71bde739b21641c02e9520cda498c974", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e56d3b2f71bde739b21641c02e9520cda498c974"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2632e47fcd996a513420cb95de06940fa640d19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2632e47fcd996a513420cb95de06940fa640d19", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2632e47fcd996a513420cb95de06940fa640d19", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2632e47fcd996a513420cb95de06940fa640d19/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6c5ed3f18ce31e71dc1089e8298c70fd2a0a08c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c5ed3f18ce31e71dc1089e8298c70fd2a0a08c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c5ed3f18ce31e71dc1089e8298c70fd2a0a08c2"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "e96a9e156d03923bfca190a1324336d3628db5b0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2632e47fcd996a513420cb95de06940fa640d19/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2632e47fcd996a513420cb95de06940fa640d19/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d2632e47fcd996a513420cb95de06940fa640d19", "patch": "@@ -1,5 +1,8 @@\n 2015-01-21  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR sanitizer/64706\n+\t* doc/invoke.texi (-fsanitize=vptr): Document.\n+\n \tPR rtl-optimization/62078\n \t* dse.c: Include cfgcleanup.h.\n \t(rest_of_handle_dse): For -fnon-call-exceptions, if DSE removed"}, {"sha": "e76821d7e9ffd7a1827aacfa86691412ef087222", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2632e47fcd996a513420cb95de06940fa640d19/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2632e47fcd996a513420cb95de06940fa640d19/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=d2632e47fcd996a513420cb95de06940fa640d19", "patch": "@@ -5761,6 +5761,13 @@ This option enables instrumentation of loads from an enum type.  If\n a value outside the range of values for the enum type is loaded,\n a run-time error is issued.\n \n+@item -fsanitize=vptr\n+@opindex fsanitize=vptr\n+\n+This option enables instrumentation of C++ member function calls, member\n+accesses and some conversions between pointers to base and derived classes,\n+to verify the referenced object has the correct dynamic type.\n+\n @end table\n \n While @option{-ftrapv} causes traps for signed overflows to be emitted,"}]}