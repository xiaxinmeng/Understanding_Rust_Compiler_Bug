{"sha": "b564df06785ebcfa7a7b223fdd8ee8cf619d6c5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjU2NGRmMDY3ODVlYmNmYTdhN2IyMjNmZGQ4ZWU4Y2Y2MTlkNmM1Zg==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1999-02-16T20:42:28Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-02-16T20:42:28Z"}, "message": "calls.c (store_one_arg): Mark any slots used for the argument as in-use immediately after we're done...\n\n        * calls.c (store_one_arg): Mark any slots used for the argument\n        as in-use immediately after we're done saving any slots which\n        will be overwritten by this argument.\n\nFrom-SVN: r25256", "tree": {"sha": "dfacb7b9b2143b5bc6cc6b075dce7f4a9ba4711b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dfacb7b9b2143b5bc6cc6b075dce7f4a9ba4711b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b564df06785ebcfa7a7b223fdd8ee8cf619d6c5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b564df06785ebcfa7a7b223fdd8ee8cf619d6c5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b564df06785ebcfa7a7b223fdd8ee8cf619d6c5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b564df06785ebcfa7a7b223fdd8ee8cf619d6c5f/comments", "author": null, "committer": null, "parents": [{"sha": "6756293cc3ccfb7d4af73f0e73e57889325f2ba6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6756293cc3ccfb7d4af73f0e73e57889325f2ba6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6756293cc3ccfb7d4af73f0e73e57889325f2ba6"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "687702afd5522734fc44a49a73624004fe9032c7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b564df06785ebcfa7a7b223fdd8ee8cf619d6c5f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b564df06785ebcfa7a7b223fdd8ee8cf619d6c5f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b564df06785ebcfa7a7b223fdd8ee8cf619d6c5f", "patch": "@@ -1,3 +1,9 @@\n+Tue Feb 16 21:29:38 1999  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* calls.c (store_one_arg): Mark any slots used for the argument\n+\tas in-use immediately after we're done saving any slots which\n+\twill be overwritten by this argument. \n+\n Tue Feb 16 21:02:07 1999  Anton Hartl <toni@devsoft.com>\n \n \t* rs6000.md (call_value): Fix typo."}, {"sha": "b8f825c53b6b9e17e963ccad6fa322cadc807238", "filename": "gcc/calls.c", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b564df06785ebcfa7a7b223fdd8ee8cf619d6c5f/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b564df06785ebcfa7a7b223fdd8ee8cf619d6c5f/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=b564df06785ebcfa7a7b223fdd8ee8cf619d6c5f", "patch": "@@ -3558,6 +3558,14 @@ store_one_arg (arg, argblock, may_be_alloca, variable_size,\n \t    }\n \t}\n     }\n+\n+  /* Now that we have saved any slots that will be overwritten by this\n+     store, mark all slots this store will use.  We must do this before\n+     we actually expand the argument since the expansion itself may\n+     trigger library calls which might need to use the same stack slot.  */\n+  if (argblock && ! variable_size && arg->stack)\n+    for (i = lower_bound; i < upper_bound; i++)\n+      stack_usage_map[i] = 1;\n #endif\n \n   /* If this isn't going to be placed on both the stack and in registers,\n@@ -3733,11 +3741,4 @@ store_one_arg (arg, argblock, may_be_alloca, variable_size,\n   preserve_temp_slots (NULL_RTX);\n   free_temp_slots ();\n   pop_temp_slots ();\n-\n-#ifdef ACCUMULATE_OUTGOING_ARGS\n-  /* Now mark the segment we just used.  */\n-  if (argblock && ! variable_size && arg->stack)\n-    for (i = lower_bound; i < upper_bound; i++)\n-      stack_usage_map[i] = 1;\n-#endif\n }"}]}