{"sha": "59a13e0fb4720294366a9a82eccfe6b2e4f5e394", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTlhMTNlMGZiNDcyMDI5NDM2NmE5YTgyZWNjZmU2YjJlNGY1ZTM5NA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2001-08-07T12:09:24Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2001-08-07T12:09:24Z"}, "message": "* tree.c (walk_tree): Walk siblings even if !walk_subtrees.\n\nFrom-SVN: r44686", "tree": {"sha": "efb847d07f127e75a4ce34c2d83d41f081fc1a39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efb847d07f127e75a4ce34c2d83d41f081fc1a39"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59a13e0fb4720294366a9a82eccfe6b2e4f5e394", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59a13e0fb4720294366a9a82eccfe6b2e4f5e394", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59a13e0fb4720294366a9a82eccfe6b2e4f5e394", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59a13e0fb4720294366a9a82eccfe6b2e4f5e394/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "57cf57fbcddc699c279f9298d45be9dcb03d5bcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57cf57fbcddc699c279f9298d45be9dcb03d5bcb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57cf57fbcddc699c279f9298d45be9dcb03d5bcb"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "dbde8050440a3c04d5af244198a8babc5e2974f9", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a13e0fb4720294366a9a82eccfe6b2e4f5e394/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a13e0fb4720294366a9a82eccfe6b2e4f5e394/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=59a13e0fb4720294366a9a82eccfe6b2e4f5e394", "patch": "@@ -1,3 +1,7 @@\n+2001-08-07  Jason Merrill  <jason_merrill@redhat.com>\n+\n+\t* tree.c (walk_tree): Walk siblings even if !walk_subtrees.\n+\n 2001-08-06  Richard Henderson  <rth@redhat.com>\n \n \t* decl2.c (finish_objects): Pass a symbol_ref and priority to\n@@ -140,7 +144,7 @@\n \tdeclaring a function, and create last_function_parms correctly.\n \n 2001-07-25  Jason Merrill  <jason_merrill@redhat.com>\n-\n+\t\n \t* call.c (joust): Only prefer a non-builtin candidate to a builtin\n \tone if they have the same signature.\n "}, {"sha": "3642890f255fe90d98428e816fc921fed7c70742", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59a13e0fb4720294366a9a82eccfe6b2e4f5e394/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59a13e0fb4720294366a9a82eccfe6b2e4f5e394/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=59a13e0fb4720294366a9a82eccfe6b2e4f5e394", "patch": "@@ -1198,12 +1198,18 @@ walk_tree (tp, func, data, htab)\n   if (result)\n     return result;\n \n+  code = TREE_CODE (*tp);\n+\n   /* Even if we didn't, FUNC may have decided that there was nothing\n      interesting below this point in the tree.  */\n   if (!walk_subtrees)\n-    return NULL_TREE;\n-\n-  code = TREE_CODE (*tp);\n+    {\n+      if (statement_code_p (code) || code == TREE_LIST || code == OVERLOAD)\n+\t/* But we still need to check our siblings.  */\n+\treturn walk_tree (&TREE_CHAIN (*tp), func, data, htab);\n+      else\n+\treturn NULL_TREE;\n+    }\n \n   /* Handle common cases up front.  */\n   if (IS_EXPR_CODE_CLASS (TREE_CODE_CLASS (code))"}]}