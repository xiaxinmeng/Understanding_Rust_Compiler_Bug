{"sha": "6b4c3c7b2334c417b1e06612f717f34ae464f305", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI0YzNjN2IyMzM0YzQxN2IxZTA2NjEyZjcxN2YzNGFlNDY0ZjMwNQ==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.com", "date": "2017-03-17T15:39:28Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2017-03-17T15:39:28Z"}, "message": "reload.c (find_reloads): When reloading a nonoffsettable address...\n\n\t* reload.c (find_reloads): When reloading a nonoffsettable address,\n\tuse RELOAD_OTHER for it and its address reloads.\n\nFrom-SVN: r246227", "tree": {"sha": "00d926b4d34639dd94d2c86099b21c3fda58987f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00d926b4d34639dd94d2c86099b21c3fda58987f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b4c3c7b2334c417b1e06612f717f34ae464f305", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b4c3c7b2334c417b1e06612f717f34ae464f305", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b4c3c7b2334c417b1e06612f717f34ae464f305", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b4c3c7b2334c417b1e06612f717f34ae464f305/comments", "author": null, "committer": null, "parents": [{"sha": "4a17943d36f2890fabc5e2f05eb2f8aca4b319c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a17943d36f2890fabc5e2f05eb2f8aca4b319c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a17943d36f2890fabc5e2f05eb2f8aca4b319c2"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "eb0e150d051477b8bea5efda997eb11bb4093c5f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4c3c7b2334c417b1e06612f717f34ae464f305/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4c3c7b2334c417b1e06612f717f34ae464f305/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6b4c3c7b2334c417b1e06612f717f34ae464f305", "patch": "@@ -1,5 +1,8 @@\n 2017-03-17  Bernd Schmidt  <bschmidt@redhat.com>\n \n+\t* reload.c (find_reloads): When reloading a nonoffsettable address,\n+\tuse RELOAD_OTHER for it and its address reloads.\n+\n \tPR rtl-optimization/79910\n \t* combine.c (record_used_regs): New static function.\n \t(try_combine): Handle situations where there is an additional"}, {"sha": "8074e541cee007ebb8c9ef8a24d6f9c022313101", "filename": "gcc/reload.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b4c3c7b2334c417b1e06612f717f34ae464f305/gcc%2Freload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b4c3c7b2334c417b1e06612f717f34ae464f305/gcc%2Freload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload.c?ref=6b4c3c7b2334c417b1e06612f717f34ae464f305", "patch": "@@ -3997,14 +3997,14 @@ find_reloads (rtx_insn *insn, int replace, int ind_levels, int live_known,\n \t\t\t     &XEXP (recog_data.operand[i], 0), (rtx*) 0,\n \t\t\t     base_reg_class (VOIDmode, as, MEM, SCRATCH),\n \t\t\t     address_mode,\n-\t\t\t     VOIDmode, 0, 0, i, RELOAD_FOR_INPUT);\n+\t\t\t     VOIDmode, 0, 0, i, RELOAD_OTHER);\n \t    rld[operand_reloadnum[i]].inc\n \t      = GET_MODE_SIZE (GET_MODE (recog_data.operand[i]));\n \n \t    /* If this operand is an output, we will have made any\n \t       reloads for its address as RELOAD_FOR_OUTPUT_ADDRESS, but\n \t       now we are treating part of the operand as an input, so\n-\t       we must change these to RELOAD_FOR_INPUT_ADDRESS.  */\n+\t       we must change these to RELOAD_FOR_OTHER_ADDRESS.  */\n \n \t    if (modified[i] == RELOAD_WRITE)\n \t      {\n@@ -4013,10 +4013,10 @@ find_reloads (rtx_insn *insn, int replace, int ind_levels, int live_known,\n \t\t    if (rld[j].opnum == i)\n \t\t      {\n \t\t\tif (rld[j].when_needed == RELOAD_FOR_OUTPUT_ADDRESS)\n-\t\t\t  rld[j].when_needed = RELOAD_FOR_INPUT_ADDRESS;\n+\t\t\t  rld[j].when_needed = RELOAD_FOR_OTHER_ADDRESS;\n \t\t\telse if (rld[j].when_needed\n \t\t\t\t == RELOAD_FOR_OUTADDR_ADDRESS)\n-\t\t\t  rld[j].when_needed = RELOAD_FOR_INPADDR_ADDRESS;\n+\t\t\t  rld[j].when_needed = RELOAD_FOR_OTHER_ADDRESS;\n \t\t      }\n \t\t  }\n \t      }"}]}