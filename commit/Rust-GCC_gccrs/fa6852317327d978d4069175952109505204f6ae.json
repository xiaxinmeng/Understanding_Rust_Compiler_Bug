{"sha": "fa6852317327d978d4069175952109505204f6ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmE2ODUyMzE3MzI3ZDk3OGQ0MDY5MTc1OTUyMTA5NTA1MjA0ZjZhZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-06-15T11:08:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-06-15T11:08:30Z"}, "message": "re PR tree-optimization/86159 (g++ ICE at -O1 and above on valid code: incorrect type of vector CONSTRUCTOR elements)\n\n2018-06-15  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/86159\n\t* tree-cfg.c (gimplify_build3): Do not strip sign conversions,\n\tleave useless conversion stripping to force_gimple_operand_gsi.\n\t(gimplify_build2): Likewise.\n\t(gimplify_build1): Likewise.\n\n\t* g++.dg/pr86159.C: New testcase.\n\nFrom-SVN: r261622", "tree": {"sha": "6c97bc6f77ae853b122847e76206cd80db421f8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c97bc6f77ae853b122847e76206cd80db421f8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa6852317327d978d4069175952109505204f6ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa6852317327d978d4069175952109505204f6ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa6852317327d978d4069175952109505204f6ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa6852317327d978d4069175952109505204f6ae/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b32ec103973c3b8f537c6e50fc8d954f27286de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b32ec103973c3b8f537c6e50fc8d954f27286de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b32ec103973c3b8f537c6e50fc8d954f27286de"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "361c6e3a86e89fefba88dfa6abdb291f1d5e20b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa6852317327d978d4069175952109505204f6ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa6852317327d978d4069175952109505204f6ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa6852317327d978d4069175952109505204f6ae", "patch": "@@ -1,3 +1,11 @@\n+2018-06-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/86159\n+\t* tree-cfg.c (gimplify_build3): Do not strip sign conversions,\n+\tleave useless conversion stripping to force_gimple_operand_gsi.\n+\t(gimplify_build2): Likewise.\n+\t(gimplify_build1): Likewise.\n+\n 2018-06-15  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/86076"}, {"sha": "262bb2d3585c357a30ffba0f4a5fcdbfc401a0da", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa6852317327d978d4069175952109505204f6ae/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa6852317327d978d4069175952109505204f6ae/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fa6852317327d978d4069175952109505204f6ae", "patch": "@@ -1,3 +1,8 @@\n+2018-06-15  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/86159\n+\t* g++.dg/pr86159.C: New testcase.\n+\n 2018-06-15  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/86076"}, {"sha": "83168f50c4ac11e04ef882952415ef1c046dec77", "filename": "gcc/testsuite/g++.dg/pr86159.C", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa6852317327d978d4069175952109505204f6ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr86159.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa6852317327d978d4069175952109505204f6ae/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr86159.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr86159.C?ref=fa6852317327d978d4069175952109505204f6ae", "patch": "@@ -0,0 +1,10 @@\n+// { dg-do compile }\n+// { dg-options \"-O -w -Wno-psabi\" }\n+\n+typedef int vec __attribute__((vector_size(32)));\n+vec fn1()\n+{\n+  vec x, zero{};\n+  vec one = zero + 1;\n+  return x < zero ? one : zero;\n+}"}, {"sha": "85e845ff097aa5d1ac0f78f2b657f09dfa0ed3bd", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa6852317327d978d4069175952109505204f6ae/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa6852317327d978d4069175952109505204f6ae/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=fa6852317327d978d4069175952109505204f6ae", "patch": "@@ -8976,8 +8976,6 @@ gimplify_build3 (gimple_stmt_iterator *gsi, enum tree_code code,\n   location_t loc = gimple_location (gsi_stmt (*gsi));\n \n   ret = fold_build3_loc (loc, code, type, a, b, c);\n-  STRIP_NOPS (ret);\n-\n   return force_gimple_operand_gsi (gsi, ret, true, NULL, true,\n                                    GSI_SAME_STMT);\n }\n@@ -8992,8 +8990,6 @@ gimplify_build2 (gimple_stmt_iterator *gsi, enum tree_code code,\n   tree ret;\n \n   ret = fold_build2_loc (gimple_location (gsi_stmt (*gsi)), code, type, a, b);\n-  STRIP_NOPS (ret);\n-\n   return force_gimple_operand_gsi (gsi, ret, true, NULL, true,\n                                    GSI_SAME_STMT);\n }\n@@ -9008,8 +9004,6 @@ gimplify_build1 (gimple_stmt_iterator *gsi, enum tree_code code, tree type,\n   tree ret;\n \n   ret = fold_build1_loc (gimple_location (gsi_stmt (*gsi)), code, type, a);\n-  STRIP_NOPS (ret);\n-\n   return force_gimple_operand_gsi (gsi, ret, true, NULL, true,\n                                    GSI_SAME_STMT);\n }"}]}