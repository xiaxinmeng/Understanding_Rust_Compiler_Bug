{"sha": "d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDMwMDc4YjhlN2RjNmY5NGRiZDhhYTFiNTZmNTliZGY0NzkzMDNhOA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2016-10-10T20:40:59Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2016-10-10T20:40:59Z"}, "message": "re PR tree-optimization/71947 (x ^ y not folded to 0 if x == y by DOM)\n\n        PR tree-optimization/71947\n\t* tree-ssa-dom.c (cprop_into_stmt): Avoid replacing A with B, then\n\tB with A within a single statement.\n\n\tPR tree-optimization/71947\n\t* gcc.dg/tree-ssa/pr71947-1.c: New test.\n\t* gcc.dg/tree-ssa/pr71947-2.c: New test.\n\t* gcc.dg/tree-ssa/pr71947-3.c: New test.\n\t* gcc.dg/tree-ssa/pr71947-4.c: New test.\n\t* gcc.dg/tree-ssa/pr71947-5.c: New test.\n\t* gcc.dg/tree-ssa/pr71947-6.c: New test.\n\nFrom-SVN: r240947", "tree": {"sha": "066715968cbe99237d25613412f7aaa6312ca3c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/066715968cbe99237d25613412f7aaa6312ca3c3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/comments", "author": null, "committer": null, "parents": [{"sha": "db62593447dd61532f7b7411d603d844498fc0a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/db62593447dd61532f7b7411d603d844498fc0a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/db62593447dd61532f7b7411d603d844498fc0a9"}], "stats": {"total": 141, "additions": 140, "deletions": 1}, "files": [{"sha": "16e25bfe2d3df5892f7c606fcd996160d9eee606", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8", "patch": "@@ -1,3 +1,9 @@\n+2016-10-10  Jeff Law  <law@redhat.com>\n+\n+        PR tree-optimization/71947\n+\t* tree-ssa-dom.c (cprop_into_stmt): Avoid replacing A with B, then\n+\tB with A within a single statement.\n+\n 2016-10-10  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR tree-optimization/77824"}, {"sha": "e31bcc6245374f3834cf68e54bb521c44f9effc4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8", "patch": "@@ -1,3 +1,13 @@\n+2016-10-10  Jeff Law  <law@redhat.com>\n+\n+\tPR tree-optimization/71947\n+\t* gcc.dg/tree-ssa/pr71947-1.c: New test.\n+\t* gcc.dg/tree-ssa/pr71947-2.c: New test.\n+\t* gcc.dg/tree-ssa/pr71947-3.c: New test.\n+\t* gcc.dg/tree-ssa/pr71947-4.c: New test.\n+\t* gcc.dg/tree-ssa/pr71947-5.c: New test.\n+\t* gcc.dg/tree-ssa/pr71947-6.c: New test.\n+\n 2016-10-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/77915"}, {"sha": "b03349546fd89134a0665bdf3c31bfd15d5ea625", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr71947-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71947-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71947-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71947-1.c?ref=d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */ \n+/* { dg-options \"-O2 -fno-tree-vrp -fdump-tree-dom-details\" } */\n+\n+\n+int f(int x, int y)\n+{\n+   int ret;\n+\n+   if (x == y)\n+     ret = x ^ y;\n+   else\n+     ret = 1;\n+\n+   return ret;\n+}\n+\n+/* { dg-final { scan-tree-dump \"Folded to: ret_\\[0-9\\]+ = 0;\"  \"dom2\" } } */\n+\n+"}, {"sha": "de8f88b88d7d694c00fc0add378df09717925ba7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr71947-2.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71947-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71947-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71947-2.c?ref=d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-tree-vrp -fdump-tree-dom-details\" } */\n+\n+\n+int f(int x, int y)\n+{\n+  int ret;\n+  if (x == y)\n+    ret = x - y;\n+  else\n+    ret = 1;\n+\n+  return ret;\n+}\n+\n+/* { dg-final { scan-tree-dump \"Folded to: ret_\\[0-9\\]+ = 0;\"  \"dom2\" } } */"}, {"sha": "e79847f83c85e87bea884bbb475d17f7878bcfdc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr71947-3.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71947-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71947-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71947-3.c?ref=d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-tree-vrp -fdump-tree-dom-details\" } */\n+\n+int f(int x, int y)\n+{\n+  int ret = 10;\n+  if (x == y)\n+    ret = x  -  y;\n+  return ret;\n+}\n+\n+/* { dg-final { scan-tree-dump \"Folded to: ret_\\[0-9\\]+ = 0;\"  \"dom2\" } } */"}, {"sha": "a881f0d52cd7eb1140278ae49039db184b2a3196", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr71947-4.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71947-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71947-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71947-4.c?ref=d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-tree-vrp -fdump-tree-dom-details\" } */\n+\n+\n+\n+static inline long load(long *p)\n+{\n+        long ret;\n+        asm (\"movq      %1,%0\\n\\t\" : \"=r\" (ret) : \"m\" (*p));\n+        if (ret != *p)\n+                __builtin_unreachable();\n+        return ret;\n+}\n+\n+long foo(long *mem)\n+{\n+        long ret;\n+        ret = load(mem);\n+        return ret + *mem;\n+}\n+\n+/* { dg-final { scan-tree-dump \"Folded to: _\\[0-9\\]+ = _\\[0-9\\]+ \\\\* 2\"  \"dom2\" } } */"}, {"sha": "fa679f0f9dacce33a0c1f80ebe1a7d6e0db64a66", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr71947-5.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71947-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71947-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71947-5.c?ref=d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-tree-vrp -fdump-tree-dom-details\" } */\n+\n+\n+static inline long load(long *p)\n+{\n+        long ret;\n+        asm (\"movq      %1,%0\\n\\t\" : \"=r\" (ret) : \"m\" (*p));\n+        if (ret != *p)\n+                __builtin_unreachable();\n+        return ret;\n+}\n+\n+long foo(long *mem)\n+{\n+        long ret;\n+        ret = load(mem);\n+        return ret - *mem;\n+}\n+\n+/* { dg-final { scan-tree-dump \"Folded to: _\\[0-9\\]+ = 0;\"  \"dom2\" } } */"}, {"sha": "9cb89cbfe0357910ecba50fd9feb7bcb323d75e9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/pr71947-6.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71947-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71947-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fpr71947-6.c?ref=d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fno-tree-vrp -fdump-tree-dom-details\" } */\n+\n+\n+int f(int x, int y, int a, int b)\n+{\n+  int ret = 10;\n+  if (a == x\n+      && b == y\n+      && a == b)\n+    ret = x - y;\n+\n+  return ret;\n+}\n+\n+/* { dg-final { scan-tree-dump \"Folded to: ret_\\[0-9\\]+ = 0;\"  \"dom2\" { xfail *-*-* } } } */"}, {"sha": "5376ff9fc90036a4c7ada1bdf2d7f859cb11d59a", "filename": "gcc/tree-ssa-dom.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/gcc%2Ftree-ssa-dom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8/gcc%2Ftree-ssa-dom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-dom.c?ref=d30078b8e7dc6f94dbd8aa1b56f59bdf479303a8", "patch": "@@ -1731,9 +1731,26 @@ cprop_into_stmt (gimple *stmt)\n {\n   use_operand_p op_p;\n   ssa_op_iter iter;\n+  tree last_copy_propagated_op = NULL;\n \n   FOR_EACH_SSA_USE_OPERAND (op_p, stmt, iter, SSA_OP_USE)\n-    cprop_operand (stmt, op_p);\n+    {\n+      tree old_op = USE_FROM_PTR (op_p);\n+\n+      /* If we have A = B and B = A in the copy propagation tables\n+\t (due to an equality comparison), avoid substituting B for A\n+\t then A for B in the trivially discovered cases.   This allows\n+\t optimization of statements were A and B appear as input\n+\t operands.  */\n+      if (old_op != last_copy_propagated_op)\n+\t{\n+\t  cprop_operand (stmt, op_p);\n+\n+\t  tree new_op = USE_FROM_PTR (op_p);\n+\t  if (new_op != old_op && TREE_CODE (new_op) == SSA_NAME)\n+\t    last_copy_propagated_op = new_op;\n+\t}\n+    }\n }\n \n /* Optimize the statement in block BB pointed to by iterator SI"}]}