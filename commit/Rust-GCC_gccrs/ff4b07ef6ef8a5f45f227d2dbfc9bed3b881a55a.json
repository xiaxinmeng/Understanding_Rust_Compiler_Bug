{"sha": "ff4b07ef6ef8a5f45f227d2dbfc9bed3b881a55a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY0YjA3ZWY2ZWY4YTVmNDVmMjI3ZDJkYmZjOWJlZDNiODgxYTU1YQ==", "commit": {"author": {"name": "Marco Trudel", "email": "mtrudel@gmx.ch", "date": "2007-03-12T19:48:32Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2007-03-12T19:48:32Z"}, "message": "natString.cc (getBytes (jstring enc)): Fixed the loop for multiple cycles, Code cleanup\n\n2007-03-12  Marco Trudel  <mtrudel@gmx.ch>\n\n\t* java/lang/natString.cc (getBytes (jstring enc)):\n\tFixed the loop for multiple cycles, Code cleanup\n\nFrom-SVN: r122859", "tree": {"sha": "58a95a38cf44e5e20d4c340b3c31889ac3db3fa6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58a95a38cf44e5e20d4c340b3c31889ac3db3fa6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff4b07ef6ef8a5f45f227d2dbfc9bed3b881a55a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff4b07ef6ef8a5f45f227d2dbfc9bed3b881a55a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff4b07ef6ef8a5f45f227d2dbfc9bed3b881a55a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff4b07ef6ef8a5f45f227d2dbfc9bed3b881a55a/comments", "author": null, "committer": null, "parents": [{"sha": "dacb3cda3208dca940e007cc6b9d259bdede193b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dacb3cda3208dca940e007cc6b9d259bdede193b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dacb3cda3208dca940e007cc6b9d259bdede193b"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "ef215ef31a1e5bfe8719f78b34c9f8e7bbe01f0e", "filename": "libjava/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff4b07ef6ef8a5f45f227d2dbfc9bed3b881a55a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff4b07ef6ef8a5f45f227d2dbfc9bed3b881a55a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ff4b07ef6ef8a5f45f227d2dbfc9bed3b881a55a", "patch": "@@ -1,3 +1,8 @@\n+2007-03-12  Marco Trudel  <mtrudel@gmx.ch>\n+\n+\t* java/lang/natString.cc (getBytes (jstring enc)):\n+\tFixed the loop for multiple cycles, Code cleanup\n+\n 2007-03-09  Tom Tromey  <tromey@redhat.com>\n \n \t* sources.am, Makefile.in: Rebuilt."}, {"sha": "39590a3e4e07489a5d294ffa38bd6ba53ed3b6b3", "filename": "libjava/java/lang/natString.cc", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff4b07ef6ef8a5f45f227d2dbfc9bed3b881a55a/libjava%2Fjava%2Flang%2FnatString.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff4b07ef6ef8a5f45f227d2dbfc9bed3b881a55a/libjava%2Fjava%2Flang%2FnatString.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatString.cc?ref=ff4b07ef6ef8a5f45f227d2dbfc9bed3b881a55a", "patch": "@@ -1,6 +1,6 @@\n // natString.cc - Implementation of java.lang.String native methods.\n \n-/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006  Free Software Foundation\n+/* Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -615,22 +615,25 @@ java::lang::String::getBytes (jstring enc)\n   while (todo > 0 || converter->havePendingBytes())\n     {\n       converter->setOutput(buffer, bufpos);\n-      // We only really need to do a single write.\n-      converter->setFinished();\n       int converted = converter->write(this, offset, todo, NULL);\n       bufpos = converter->count;\n-      if (converted == 0 && bufpos == converter->count)\n+      if (converted == 0)\n \t{\n \t  buflen *= 2;\n \t  jbyteArray newbuffer = JvNewByteArray(buflen);\n \t  memcpy (elements (newbuffer), elements (buffer), bufpos);\n \t  buffer = newbuffer;\n \t}\n       else\n-\tbufpos = converter->count;\n-\n-      offset += converted;\n-      todo -= converted;\n+\t{\n+\t  offset += converted;\n+\t  todo -= converted;\n+\t}\n+    }\n+  if (length() > 0)\n+    {\n+      converter->setFinished();\n+      converter->write(this, 0, 0, NULL);\n     }\n   converter->done ();\n   if (bufpos == buflen)"}]}