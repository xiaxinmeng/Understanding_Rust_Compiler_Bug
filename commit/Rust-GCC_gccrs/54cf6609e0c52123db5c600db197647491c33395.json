{"sha": "54cf6609e0c52123db5c600db197647491c33395", "node_id": "C_kwDOANBUbNoAKDU0Y2Y2NjA5ZTBjNTIxMjNkYjVjNjAwZGIxOTc2NDc0OTFjMzMzOTU", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2022-03-30T19:00:27Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-18T08:40:59Z"}, "message": "[Ada] Freezing too strict in instances\n\nShould_Freeze_Type is relaxed to only take the relevant case into\naccount (entities denoted by generic actual parameters as per\n13.14(5/3), as well as profile of any subprograms named as per\n13.14(10.2/4)), instead of being overly conservative wrt instances and\nas a result, wrongly rejecting some legal code.\n\nIn practice this means we only need to worry about profile of\nsubprograms named as part of instances.\n\ngcc/ada/\n\n\t* freeze.adb (Should_Freeze_Type): Fix handling of freezing in\n\tinstances.", "tree": {"sha": "4074356bd2ff7e42c99380bf786ed3eff47650b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4074356bd2ff7e42c99380bf786ed3eff47650b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54cf6609e0c52123db5c600db197647491c33395", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54cf6609e0c52123db5c600db197647491c33395", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54cf6609e0c52123db5c600db197647491c33395", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54cf6609e0c52123db5c600db197647491c33395/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5488c78c836ca71330bc69247bf75aa14d9d2603", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5488c78c836ca71330bc69247bf75aa14d9d2603", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5488c78c836ca71330bc69247bf75aa14d9d2603"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "4ff7036701453380af2c05222fdaf65647587f86", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54cf6609e0c52123db5c600db197647491c33395/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54cf6609e0c52123db5c600db197647491c33395/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=54cf6609e0c52123db5c600db197647491c33395", "patch": "@@ -184,9 +184,11 @@ package body Freeze is\n    --  the designated type. Otherwise freezing the access type does not freeze\n    --  the designated type.\n \n-   function Should_Freeze_Type (Typ : Entity_Id; E : Entity_Id) return Boolean;\n-   --  If Typ is in the current scope or in an instantiation, then return True.\n-   --  ???Expression functions (represented by E) shouldn't freeze types in\n+   function Should_Freeze_Type\n+     (Typ : Entity_Id; E : Entity_Id; N : Node_Id) return Boolean;\n+   --  If Typ is in the current scope, then return True.\n+   --  N is a node whose source location corresponds to the freeze point.\n+   --  ??? Expression functions (represented by E) shouldn't freeze types in\n    --  general, but our current expansion and freezing model requires an early\n    --  freezing when the dispatch table is needed or when building an aggregate\n    --  with a subtype of Typ, so return True also in this case.\n@@ -198,7 +200,7 @@ package body Freeze is\n    ------------------------\n \n    function Should_Freeze_Type\n-     (Typ : Entity_Id; E : Entity_Id) return Boolean\n+     (Typ : Entity_Id; E : Entity_Id; N : Node_Id) return Boolean\n    is\n       function Is_Dispatching_Call_Or_Aggregate\n         (N : Node_Id) return Traverse_Result;\n@@ -244,7 +246,8 @@ package body Freeze is\n \n    begin\n       return Within_Scope (Typ, Current_Scope)\n-        or else In_Instance\n+        or else (Nkind (N) = N_Subprogram_Renaming_Declaration\n+                 and then Present (Corresponding_Formal_Spec (N)))\n         or else (Present (Decl)\n                  and then Nkind (Decl) = N_Expression_Function\n                  and then Need_Dispatch_Table (Expression (Decl)) = Abandon);\n@@ -4606,7 +4609,7 @@ package body Freeze is\n             end if;\n \n             if not From_Limited_With (F_Type)\n-              and then Should_Freeze_Type (F_Type, E)\n+              and then Should_Freeze_Type (F_Type, E, N)\n             then\n                Freeze_And_Append (F_Type, N, Result);\n             end if;\n@@ -4786,7 +4789,7 @@ package body Freeze is\n                Set_Etype (E, R_Type);\n             end if;\n \n-            if Should_Freeze_Type (R_Type, E) then\n+            if Should_Freeze_Type (R_Type, E, N) then\n                Freeze_And_Append (R_Type, N, Result);\n             end if;\n "}]}