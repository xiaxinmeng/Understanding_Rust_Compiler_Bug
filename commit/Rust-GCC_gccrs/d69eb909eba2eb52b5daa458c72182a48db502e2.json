{"sha": "d69eb909eba2eb52b5daa458c72182a48db502e2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDY5ZWI5MDllYmEyZWI1MmI1ZGFhNDU4YzcyMTgyYTQ4ZGI1MDJlMg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-08T20:00:49Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-08T20:00:49Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r420", "tree": {"sha": "f625423a0755de2ac63226327d9a4d1c77d711a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f625423a0755de2ac63226327d9a4d1c77d711a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d69eb909eba2eb52b5daa458c72182a48db502e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d69eb909eba2eb52b5daa458c72182a48db502e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d69eb909eba2eb52b5daa458c72182a48db502e2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d69eb909eba2eb52b5daa458c72182a48db502e2/comments", "author": null, "committer": null, "parents": [{"sha": "43100b143ab67761f2967bc2a1828a3bc302850f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43100b143ab67761f2967bc2a1828a3bc302850f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43100b143ab67761f2967bc2a1828a3bc302850f"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "575b994051c61cfcdd9257c763981dc8dec8714f", "filename": "gcc/config/m68k/3b1.h", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d69eb909eba2eb52b5daa458c72182a48db502e2/gcc%2Fconfig%2Fm68k%2F3b1.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d69eb909eba2eb52b5daa458c72182a48db502e2/gcc%2Fconfig%2Fm68k%2F3b1.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2F3b1.h?ref=d69eb909eba2eb52b5daa458c72182a48db502e2", "patch": "@@ -22,7 +22,6 @@ You should have received a copy of the GNU General Public License\n along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n \n-#define SGS_SWAP_W\t\t/* Use swap.w rather than just plain swap */\n #define SGS_SWITCH_TABLES\t/* Different switch table handling */\n \n #include \"hp320.h\"\n@@ -377,6 +376,11 @@ do { union { float f; long l;} tem;\t\t\t\\\n       while (*(PTR) != ' ')\t\t\t\t\\\n \t{ putc (*(PTR), (FILE)); ++(PTR); }\t\t\\\n       fprintf ((FILE), \".w\"); }\t\t\t\t\\\n+  else if ((PTR)[0] == 's')\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\\\n+      if (!strncmp ((PTR), \"swap\", 4))\t\t\t\\\n+\t{ fprintf ((FILE), \"swap.w\"); (PTR) += 4; }\t\\\n+    }\t\t\t\t\t\t\t\\\n   else if ((PTR)[0] == 'f')\t\t\t\t\\\n     {\t\t\t\t\t\t\t\\\n       if (!strncmp ((PTR), \"fmove\", 5))\t\t\t\\\n@@ -388,20 +392,20 @@ do { union { float f; long l;} tem;\t\t\t\\\n   else if ((PTR)[0] == 'm' && (PTR)[1] == 'o'\t\t\\\n \t   && (PTR)[2] == 'v' && (PTR)[3] == 'e')\t\\\n     { fprintf ((FILE), \"mov\"); (PTR) += 4;\t\t\\\n-       if ((PTR)[0] == 'q' || (PTR)[0] == 'a' ||\t\\\n-\t   (PTR)[0] == 'c') (PTR)++; }\t\t\t\\\n+       if ((PTR)[0] == 'q' || (PTR)[0] == 'a'\t\t\\\n+\t   || (PTR)[0] == 'c') (PTR)++; }\t\t\\\n /* SUB, SUBQ, SUBA, SUBI ==> SUB */\t\t\t\\\n   else if ((PTR)[0] == 's' && (PTR)[1] == 'u' \t\t\\\n \t   && (PTR)[2] == 'b')\t\t\t\t\\\n     { fprintf ((FILE), \"sub\"); (PTR) += 3;\t\t\\\n-       if ((PTR)[0] == 'q' || (PTR)[0] == 'i' || \t\\\n-\t   (PTR)[0] == 'a') (PTR)++; }\t\t\t\\\n+       if ((PTR)[0] == 'q' || (PTR)[0] == 'i'\t \t\\\n+\t   || (PTR)[0] == 'a') (PTR)++; }\t\t\\\n /* CMP, CMPA, CMPI, CMPM ==> CMP\t*/\t\t\\\n   else if ((PTR)[0] == 'c' && (PTR)[1] == 'm'\t\t\\\n \t   && (PTR)[2] == 'p')\t\t\t\t\\\n     { fprintf ((FILE), \"cmp\"); (PTR) += 3;\t\t\\\n-       if ((PTR)[0] == 'a' || (PTR)[0] == 'i' || \t\\\n-\t   (PTR)[0] == 'm') (PTR)++; }\t\t\t\\\n+       if ((PTR)[0] == 'a' || (PTR)[0] == 'i'\t \t\\\n+\t   || (PTR)[0] == 'm') (PTR)++; }\t\t\\\n }\n \n #define ASM_OUTPUT_LOCAL(FILE, NAME, SIZE, ROUNDED)  \\"}]}