{"sha": "6c34a0921352e7ed6058aadf4c950ec700375794", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMzNGEwOTIxMzUyZTdlZDYwNThhYWRmNGM5NTBlYzcwMDM3NTc5NA==", "commit": {"author": {"name": "Paolo Bonzini", "email": "bonzini@gnu.org", "date": "2009-04-22T09:01:43Z"}, "committer": {"name": "Paolo Bonzini", "email": "bonzini@gcc.gnu.org", "date": "2009-04-22T09:01:43Z"}, "message": "sh.c (shift_insns_rtx, [...]): Truncate shift counts to avoid out-of-bounds array accesses.\n\n2009-04-22  Paolo Bonzini  <bonzini@gnu.org>\n\n\t* config/sh/sh.c (shift_insns_rtx, shiftcosts, gen_shifty_op,\n\tsh_dynamicalize_shift_p, shl_and_scr_length): Truncate\n\tshift counts to avoid out-of-bounds array accesses.\n\nFrom-SVN: r146553", "tree": {"sha": "ca5e7d0e19e36c635d191a01bb8fbb1a7afbfb43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca5e7d0e19e36c635d191a01bb8fbb1a7afbfb43"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c34a0921352e7ed6058aadf4c950ec700375794", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c34a0921352e7ed6058aadf4c950ec700375794", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c34a0921352e7ed6058aadf4c950ec700375794", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c34a0921352e7ed6058aadf4c950ec700375794/comments", "author": {"login": "bonzini", "id": 42082, "node_id": "MDQ6VXNlcjQyMDgy", "avatar_url": "https://avatars.githubusercontent.com/u/42082?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonzini", "html_url": "https://github.com/bonzini", "followers_url": "https://api.github.com/users/bonzini/followers", "following_url": "https://api.github.com/users/bonzini/following{/other_user}", "gists_url": "https://api.github.com/users/bonzini/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonzini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonzini/subscriptions", "organizations_url": "https://api.github.com/users/bonzini/orgs", "repos_url": "https://api.github.com/users/bonzini/repos", "events_url": "https://api.github.com/users/bonzini/events{/privacy}", "received_events_url": "https://api.github.com/users/bonzini/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "baa48dfaed600d9bc9340e88ea7f0d8ba87cee00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/baa48dfaed600d9bc9340e88ea7f0d8ba87cee00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/baa48dfaed600d9bc9340e88ea7f0d8ba87cee00"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "d7270194d26b4501ac6bc776755586c3fda505d7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c34a0921352e7ed6058aadf4c950ec700375794/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c34a0921352e7ed6058aadf4c950ec700375794/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6c34a0921352e7ed6058aadf4c950ec700375794", "patch": "@@ -1,3 +1,9 @@\n+2009-04-22  Paolo Bonzini  <bonzini@gnu.org>\n+\n+\t* config/sh/sh.c (shift_insns_rtx, shiftcosts, gen_shifty_op,\n+\tsh_dynamicalize_shift_p, shl_and_scr_length): Truncate\n+\tshift counts to avoid out-of-bounds array accesses.\n+\n 2009-04-22  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* config/sparc/sparc.h (POINTER_SIZE): Fix comment."}, {"sha": "ce45898ff2d869d787da9e875f1d5ac9e2cc647f", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c34a0921352e7ed6058aadf4c950ec700375794/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c34a0921352e7ed6058aadf4c950ec700375794/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=6c34a0921352e7ed6058aadf4c950ec700375794", "patch": "@@ -2247,7 +2247,7 @@ int\n shift_insns_rtx (rtx insn)\n {\n   rtx set_src = SET_SRC (XVECEXP (PATTERN (insn), 0, 0));\n-  int shift_count = INTVAL (XEXP (set_src, 1));\n+  int shift_count = INTVAL (XEXP (set_src, 1)) & 31;\n   enum rtx_code shift_code = GET_CODE (set_src);\n \n   switch (shift_code)\n@@ -2286,9 +2286,10 @@ shiftcosts (rtx x)\n   if (GET_CODE (XEXP (x, 1)) != CONST_INT)\n     return SH_DYNAMIC_SHIFT_COST;\n \n-  value = INTVAL (XEXP (x, 1));\n+  /* Otherwise, return the true cost in instructions.  Cope with out of range\n+     shift counts more or less arbitrarily.  */\n+  value = INTVAL (XEXP (x, 1)) & 31;\n \n-  /* Otherwise, return the true cost in instructions.  */\n   if (GET_CODE (x) == ASHIFTRT)\n     {\n       int cost = ashiftrt_insns[value];\n@@ -2637,7 +2638,7 @@ gen_shifty_op (int code, rtx *operands)\n   int max, i;\n \n   /* Truncate the shift count in case it is out of bounds.  */\n-  value = value & 0x1f;\n+  value = value & 31;\n \n   if (value == 31)\n     {\n@@ -2790,7 +2791,7 @@ expand_ashiftrt (rtx *operands)\n int\n sh_dynamicalize_shift_p (rtx count)\n {\n-  return shift_insns[INTVAL (count)] > 1 + SH_DYNAMIC_SHIFT_COST;\n+  return shift_insns[INTVAL (count) & 31] > 1 + SH_DYNAMIC_SHIFT_COST;\n }\n \n /* Try to find a good way to implement the combiner pattern\n@@ -2950,11 +2951,11 @@ int\n shl_and_scr_length (rtx insn)\n {\n   rtx set_src = SET_SRC (XVECEXP (PATTERN (insn), 0, 0));\n-  int len = shift_insns[INTVAL (XEXP (set_src, 1))];\n+  int len = shift_insns[INTVAL (XEXP (set_src, 1)) & 31];\n   rtx op = XEXP (set_src, 0);\n-  len += shift_insns[INTVAL (XEXP (op, 1))] + 1;\n+  len += shift_insns[INTVAL (XEXP (op, 1)) & 31] + 1;\n   op = XEXP (XEXP (op, 0), 0);\n-  return len + shift_insns[INTVAL (XEXP (op, 1))];\n+  return len + shift_insns[INTVAL (XEXP (op, 1)) & 31];\n }\n \n /* Generate rtl for instructions for which shl_and_kind advised a particular"}]}