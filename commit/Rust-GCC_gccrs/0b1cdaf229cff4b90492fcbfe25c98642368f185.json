{"sha": "0b1cdaf229cff4b90492fcbfe25c98642368f185", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGIxY2RhZjIyOWNmZjRiOTA0OTJmY2JmZTI1Yzk4NjQyMzY4ZjE4NQ==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-05-16T06:34:34Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-05-16T06:34:34Z"}, "message": "c-parse.in (methodtype): New production.\n\n\t* c-parse.in (methodtype): New production.\n\t(methoddef, methodproto): Collapse separate '-' and '+'\n\thandlers into 1.\n\nFrom-SVN: r42133", "tree": {"sha": "7460d879c8e10f3aaf4d73f4fe217dc1499cf88b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7460d879c8e10f3aaf4d73f4fe217dc1499cf88b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0b1cdaf229cff4b90492fcbfe25c98642368f185", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b1cdaf229cff4b90492fcbfe25c98642368f185", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0b1cdaf229cff4b90492fcbfe25c98642368f185", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0b1cdaf229cff4b90492fcbfe25c98642368f185/comments", "author": null, "committer": null, "parents": [{"sha": "4c521bad98510915b9bae91033f03a525a7fe5bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c521bad98510915b9bae91033f03a525a7fe5bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c521bad98510915b9bae91033f03a525a7fe5bd"}], "stats": {"total": 69, "additions": 23, "deletions": 46}, "files": [{"sha": "70561097d88b882660066fdf1bfcd27a69454b64", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b1cdaf229cff4b90492fcbfe25c98642368f185/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b1cdaf229cff4b90492fcbfe25c98642368f185/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0b1cdaf229cff4b90492fcbfe25c98642368f185", "patch": "@@ -1,3 +1,9 @@\n+2001-05-16  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* c-parse.in (methodtype): New production.\n+\t(methoddef, methodproto): Collapse separate '-' and '+'\n+\thandlers into 1.\n+\n 2001-05-16  Neil Booth  <neil@cat.daikokuya.demon.co.uk>\n \n \t* c-common.h (RID_FIRST_PQ): New."}, {"sha": "3eda45c25de454ef926bc84abd034146ce375240", "filename": "gcc/c-parse.in", "status": "modified", "additions": 17, "deletions": 46, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0b1cdaf229cff4b90492fcbfe25c98642368f185/gcc%2Fc-parse.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0b1cdaf229cff4b90492fcbfe25c98642368f185/gcc%2Fc-parse.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parse.in?ref=0b1cdaf229cff4b90492fcbfe25c98642368f185", "patch": "@@ -2947,44 +2947,27 @@ ivar_declarator:\n                 }\n \t;\n \n-methoddef:\n+methodtype:\n \t  '+'\n-\t\t{\n-\t\t  objc_pq_context = 1;\n-\t\t  if (objc_implementation_context)\n-\t\t    objc_inherit_code = CLASS_METHOD_DECL;\n-                  else\n-\t\t    fatal_error (\"method definition not in class context\");\n-\t\t}\n-\t  methoddecl\n-\t\t{\n-\t\t  objc_pq_context = 0;\n-\t\t  add_class_method (objc_implementation_context, $3);\n-\t\t  start_method_def ($3);\n-\t\t  objc_method_context = $3;\n-\t\t}\n-\t  optarglist\n-\t\t{\n-\t\t  continue_method_def ();\n-\t\t}\n-\t  compstmt_or_error\n-\t\t{\n-\t\t  finish_method_def ();\n-\t\t  objc_method_context = NULL_TREE;\n-\t\t}\n-\n+\t\t{ objc_inherit_code = CLASS_METHOD_DECL; }\n \t| '-'\n+\t\t{ objc_inherit_code = INSTANCE_METHOD_DECL; }\n+\t;\n+\n+methoddef:\n+\t  methodtype\n \t\t{\n \t\t  objc_pq_context = 1;\n-\t\t  if (objc_implementation_context)\n-\t\t    objc_inherit_code = INSTANCE_METHOD_DECL;\n-                  else\n+\t\t  if (!objc_implementation_context)\n \t\t    fatal_error (\"method definition not in class context\");\n \t\t}\n \t  methoddecl\n \t\t{\n \t\t  objc_pq_context = 0;\n-\t\t  add_instance_method (objc_implementation_context, $3);\n+\t\t  if (objc_inherit_code == CLASS_METHOD_DECL)\n+\t\t    add_class_method (objc_implementation_context, $3);\n+\t\t  else\n+\t\t    add_instance_method (objc_implementation_context, $3);\n \t\t  start_method_def ($3);\n \t\t  objc_method_context = $3;\n \t\t}\n@@ -3021,31 +3004,19 @@ semi_or_error:\n \t;\n \n methodproto:\n-\t  '+'\n+\t  methodtype\n \t\t{\n \t\t  /* Remember protocol qualifiers in prototypes.  */\n \t\t  objc_pq_context = 1;\n-\t\t  objc_inherit_code = CLASS_METHOD_DECL;\n \t\t}\n \t  methoddecl\n \t\t{\n \t\t  /* Forget protocol qualifiers here.  */\n \t\t  objc_pq_context = 0;\n-\t\t  add_class_method (objc_interface_context, $3);\n-\t\t}\n-\t  semi_or_error\n-\n-\t| '-'\n-\t\t{\n-\t\t  /* Remember protocol qualifiers in prototypes.  */\n-\t\t  objc_pq_context = 1;\n-\t\t  objc_inherit_code = INSTANCE_METHOD_DECL;\n-\t\t}\n-\t  methoddecl\n-\t\t{\n-\t\t  /* Forget protocol qualifiers here.  */\n-\t\t  objc_pq_context = 0;\n-\t\t  add_instance_method (objc_interface_context, $3);\n+\t\t  if (objc_inherit_code == CLASS_METHOD_DECL)\n+\t\t    add_class_method (objc_interface_context, $3);\n+\t\t  else\n+\t\t    add_instance_method (objc_interface_context, $3);\n \t\t}\n \t  semi_or_error\n \t;"}]}