{"sha": "cea71f0a97520aeeba6509688047311a75f35421", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2VhNzFmMGE5NzUyMGFlZWJhNjUwOTY4ODA0NzMxMWE3NWYzNTQyMQ==", "commit": {"author": {"name": "Martin Sebor", "email": "msebor@redhat.com", "date": "2018-02-09T17:58:54Z"}, "committer": {"name": "Martin Sebor", "email": "msebor@gcc.gnu.org", "date": "2018-02-09T17:58:54Z"}, "message": "PR lto/84212 - -Wno-* does not disable warnings from -flto link stage\n\ngcc/c-family/ChangeLog:\n\n\tPR lto/84212\n\t* c.opt (-Wstringop-overflow, -Warray-bounds): Add LTO.\n\t(-Walloc-size-larger-than, -Wformat-truncation=): Same.\n\t(-Wmaybe-uninitialized, -Wnonnull, -Wrestrict): Same.\n\t(-Wstrict-overflow, -Wsuggest-attribute): Same.\n\t(-Wuninitialized): Same.\n\ngcc/testsuite/ChangeLog:\n\n\tPR lto/84212\n\t* gcc.dg/lto/pr84212_0.c: New test file.\n\t* gcc.dg/lto/pr84212_1.c: Same.\n\nFrom-SVN: r257534", "tree": {"sha": "8bfff2558f9a41d6c8acc91bd7eff469ccae8b1b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8bfff2558f9a41d6c8acc91bd7eff469ccae8b1b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cea71f0a97520aeeba6509688047311a75f35421", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cea71f0a97520aeeba6509688047311a75f35421", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cea71f0a97520aeeba6509688047311a75f35421", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cea71f0a97520aeeba6509688047311a75f35421/comments", "author": {"login": "msebor", "id": 381149, "node_id": "MDQ6VXNlcjM4MTE0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/381149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msebor", "html_url": "https://github.com/msebor", "followers_url": "https://api.github.com/users/msebor/followers", "following_url": "https://api.github.com/users/msebor/following{/other_user}", "gists_url": "https://api.github.com/users/msebor/gists{/gist_id}", "starred_url": "https://api.github.com/users/msebor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msebor/subscriptions", "organizations_url": "https://api.github.com/users/msebor/orgs", "repos_url": "https://api.github.com/users/msebor/repos", "events_url": "https://api.github.com/users/msebor/events{/privacy}", "received_events_url": "https://api.github.com/users/msebor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cad5b07905fb24447dced464b6f60b70178f2fea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cad5b07905fb24447dced464b6f60b70178f2fea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cad5b07905fb24447dced464b6f60b70178f2fea"}], "stats": {"total": 61, "additions": 49, "deletions": 12}, "files": [{"sha": "2378181deb43b82518d4199d5b00ae63d390c356", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cea71f0a97520aeeba6509688047311a75f35421/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cea71f0a97520aeeba6509688047311a75f35421/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=cea71f0a97520aeeba6509688047311a75f35421", "patch": "@@ -1,3 +1,12 @@\n+2018-02-09  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR lto/84212\n+\t* c.opt (-Wstringop-overflow, -Warray-bounds): Add LTO.\n+\t(-Walloc-size-larger-than, -Wformat-truncation=): Same.\n+\t(-Wmaybe-uninitialized, -Wnonnull, -Wrestrict): Same.\n+\t(-Wstrict-overflow, -Wsuggest-attribute): Same.\n+\t(-Wuninitialized): Same.\n+\n 2018-02-09  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* c-ada-spec.c (dump_ada_declaration): Do not generate the 'constant'"}, {"sha": "7fb386d456de3a2ab497523a6e1321084fd7de9f", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cea71f0a97520aeeba6509688047311a75f35421/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cea71f0a97520aeeba6509688047311a75f35421/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=cea71f0a97520aeeba6509688047311a75f35421", "patch": "@@ -304,7 +304,7 @@ C ObjC C++ ObjC++ Var(warn_alloca) Warning\n Warn on any use of alloca.\n \n Walloc-size-larger-than=\n-C ObjC C++ ObjC++ Var(warn_alloc_size_limit) Warning Joined LangEnabledBy(C ObjC C++ ObjC++,Wall)\n+C ObjC C++ LTO ObjC++ Var(warn_alloc_size_limit) Warning Joined LangEnabledBy(C ObjC C++ LTO ObjC++,Wall)\n -Walloc-size-larger-than=<bytes> Warn for calls to allocation functions that\n attempt to allocate objects larger than the specified number of bytes.\n \n@@ -319,11 +319,11 @@ alloca, and on bounded uses of alloca whose bound can be larger than\n <number> bytes.\n \n Warray-bounds\n-LangEnabledBy(C ObjC C++ ObjC++,Wall)\n+LangEnabledBy(C ObjC C++ LTO ObjC++,Wall)\n ; in common.opt\n \n Warray-bounds=\n-LangEnabledBy(C ObjC C++ ObjC++,Wall,1,0)\n+LangEnabledBy(C ObjC C++ LTO ObjC++,Wall,1,0)\n ; in common.opt\n \n Wassign-intercept\n@@ -575,12 +575,12 @@ C ObjC C++ ObjC++ Joined RejectNegative UInteger Var(warn_format) Warning LangEn\n Warn about printf/scanf/strftime/strfmon format string anomalies.\n \n Wformat-overflow=\n-C ObjC C++ LTO ObjC++ Joined RejectNegative UInteger Var(warn_format_overflow) Warning LangEnabledBy(C ObjC C++ ObjC++,Wformat=, warn_format >= 1, 0) IntegerRange(0, 2)\n+C ObjC C++ LTO ObjC++ Joined RejectNegative UInteger Var(warn_format_overflow) Warning LangEnabledBy(C ObjC C++ LTO ObjC++,Wformat=, warn_format >= 1, 0) IntegerRange(0, 2)\n Warn about function calls with format strings that write past the end\n of the destination region.\n \n Wformat-truncation=\n-C ObjC C++ ObjC++ Joined RejectNegative UInteger Var(warn_format_trunc) Warning LangEnabledBy(C ObjC C++ ObjC++,Wformat=, warn_format >= 1, 0) IntegerRange(0, 2)\n+C ObjC C++ LTO ObjC++ Joined RejectNegative UInteger Var(warn_format_trunc) Warning LangEnabledBy(C ObjC C++ LTO ObjC++,Wformat=, warn_format >= 1, 0) IntegerRange(0, 2)\n Warn about calls to snprintf and similar functions that truncate output.\n \n Wif-not-aligned\n@@ -739,17 +739,17 @@ C ObjC C++ ObjC++ Var(warn_sizeof_array_argument) Warning Init(1)\n Warn when sizeof is applied on a parameter declared as an array.\n \n Wstringop-overflow\n-C ObjC C++ ObjC++ Warning Alias(Wstringop-overflow=, 2, 0)\n+C ObjC C++ LTO ObjC++ Warning Alias(Wstringop-overflow=, 2, 0)\n Warn about buffer overflow in string manipulation functions like memcpy\n and strcpy.\n \n Wstringop-overflow=\n-C ObjC C++ ObjC++ Joined RejectNegative UInteger Var(warn_stringop_overflow) Init(2) Warning LangEnabledBy(C ObjC C++ ObjC++, Wall, 2, 0) IntegerRange(0, 4)\n+C ObjC C++ LTO ObjC++ Joined RejectNegative UInteger Var(warn_stringop_overflow) Init(2) Warning LangEnabledBy(C ObjC C++ LTO ObjC++, Wall, 2, 0) IntegerRange(0, 4)\n Under the control of Object Size type, warn about buffer overflow in string\n manipulation functions like memcpy and strcpy.\n \n Wstringop-truncation\n-C ObjC C++ ObjC++ Var(warn_stringop_truncation) Warning Init (1) LangEnabledBy(C ObjC C++ ObjC++, Wall)\n+C ObjC C++ LTO ObjC++ Var(warn_stringop_truncation) Warning Init (1) LangEnabledBy(C ObjC C++ LTO ObjC++, Wall)\n Warn about truncation in string manipulation functions like strncat and strncpy.\n \n Wsuggest-attribute=format\n@@ -833,11 +833,11 @@ C++ ObjC++ Var(warn_nonvdtor) Warning LangEnabledBy(C++ ObjC++,Weffc++)\n Warn about non-virtual destructors.\n \n Wnonnull\n-C ObjC C++ ObjC++ Var(warn_nonnull) Warning LangEnabledBy(C ObjC C++ ObjC++,Wformat=,warn_format >= 1,0)\n+C ObjC C++ LTO ObjC++ Var(warn_nonnull) Warning LangEnabledBy(C ObjC C++ LTO ObjC++,Wformat=,warn_format >= 1,0)\n Warn about NULL being passed to argument slots marked as requiring non-NULL.\n \n Wnonnull\n-C ObjC C++ ObjC++ LangEnabledBy(C ObjC C++ ObjC++,Wall)\n+C ObjC C++ LTO ObjC++ LangEnabledBy(C ObjC C++ LTO ObjC++,Wall)\n ;\n \n Wnonnull-compare\n@@ -1084,11 +1084,11 @@ C ObjC C++ ObjC++ CPP(warn_undef) CppReason(CPP_W_UNDEF) Var(cpp_warn_undef) Ini\n Warn if an undefined macro is used in an #if directive.\n \n Wuninitialized\n-C ObjC C++ ObjC++ LangEnabledBy(C ObjC C++ ObjC++,Wall)\n+C ObjC C++ ObjC++ LTO LangEnabledBy(C ObjC C++ ObjC++ LTO,Wall)\n ;\n \n Wmaybe-uninitialized\n-C ObjC C++ ObjC++ LangEnabledBy(C ObjC C++ ObjC++,Wall)\n+C ObjC C++ ObjC++ LTO LangEnabledBy(C ObjC C++ ObjC++ LTO,Wall)\n ;\n \n Wunknown-pragmas"}, {"sha": "c30389548e4325d335713755f53ddab36fb3bcc4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cea71f0a97520aeeba6509688047311a75f35421/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cea71f0a97520aeeba6509688047311a75f35421/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=cea71f0a97520aeeba6509688047311a75f35421", "patch": "@@ -1,3 +1,9 @@\n+2018-02-09  Martin Sebor  <msebor@redhat.com>\n+\n+\tPR lto/84212\n+\t* gcc.dg/lto/pr84212_0.c: New test file.\n+\t* gcc.dg/lto/pr84212_1.c: Same.\n+\n 2018-02-09  Peter Bergner  <bergner@vnet.ibm.com>\n \n \tPR target/83926"}, {"sha": "859b2fa30f7df70fb94b22444969a0483a0a9c57", "filename": "gcc/testsuite/gcc.dg/lto/pr84212_0.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cea71f0a97520aeeba6509688047311a75f35421/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr84212_0.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cea71f0a97520aeeba6509688047311a75f35421/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr84212_0.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr84212_0.c?ref=cea71f0a97520aeeba6509688047311a75f35421", "patch": "@@ -0,0 +1,11 @@\n+/* PR lto/84212 - -Wno-stringop-verflow does not disable warnings from\n+   -flto link stage\n+   { dg-lto-do link }\n+   { dg-lto-options { { -O2 -Werror -Wno-stringop-overflow -flto } } }  */\n+\n+#include <string.h>\n+\n+void clear (char *p, unsigned n)\n+{\n+  memset (p, 0, n);\n+}"}, {"sha": "7ad8a7d64b91a9a95180f55f0cd4fa972bf31d58", "filename": "gcc/testsuite/gcc.dg/lto/pr84212_1.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cea71f0a97520aeeba6509688047311a75f35421/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr84212_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cea71f0a97520aeeba6509688047311a75f35421/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr84212_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Flto%2Fpr84212_1.c?ref=cea71f0a97520aeeba6509688047311a75f35421", "patch": "@@ -0,0 +1,11 @@\n+/* PR lto/84212 - -Wno-stringop-verflow does not disable warnings from\n+   -flto link stage  */\n+\n+extern void clear (char*, unsigned);\n+\n+int main (void)\n+{\n+  char x[3];\n+\n+  clear (x, 4);\n+}"}]}