{"sha": "6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI3YzBiNTU1OTMxNjAyOGQzOTJkMmJmOWE0YTBjYTllNzU2MmNlNw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-12-12T16:13:43Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-12-12T16:13:43Z"}, "message": "PR libstdc++/80762 avoid ambiguous __constructible_from<void, void>\n\nEnsure we don't try to instantiate __is_constructible_from<void, void>,\nbecause there are two partial specializations that are equally good\nmatches.\n\n\tPR libstdc++/80762\n\t* include/bits/fs_path.h (path::_Path): Use remove_cv_t and is_void.\n\t* include/experimental/bits/fs_path.h (path::_Path): Likewise.\n\t* testsuite/27_io/filesystem/path/construct/80762.cc: New test.\n\t* testsuite/experimental/filesystem/path/construct/80762.cc: New test.\n\nFrom-SVN: r267056", "tree": {"sha": "3e41fc81cb2a566f1fdfd23c505cc73b622d5262", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3e41fc81cb2a566f1fdfd23c505cc73b622d5262"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5da5fefeeb90d1f3bc750f2c38c6917634127734", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5da5fefeeb90d1f3bc750f2c38c6917634127734", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5da5fefeeb90d1f3bc750f2c38c6917634127734"}], "stats": {"total": 72, "additions": 70, "deletions": 2}, "files": [{"sha": "886253db410574df2049ec12ccc1241ae7ae6321", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7", "patch": "@@ -1,3 +1,11 @@\n+2018-12-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/80762\n+\t* include/bits/fs_path.h (path::_Path): Use remove_cv_t and is_void.\n+\t* include/experimental/bits/fs_path.h (path::_Path): Likewise.\n+\t* testsuite/27_io/filesystem/path/construct/80762.cc: New test.\n+\t* testsuite/experimental/filesystem/path/construct/80762.cc: New test.\n+\n 2018-12-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tP0595R2 - is_constant_evaluated"}, {"sha": "cbaea7343a33ba1b0e6989aff0a0ae2c97da6219", "filename": "libstdc++-v3/include/bits/fs_path.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_path.h?ref=6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7", "patch": "@@ -110,7 +110,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \n     template<typename _Tp1, typename _Tp2 = void>\n       using _Path = typename\n-\tstd::enable_if<__and_<__not_<is_same<_Tp1, path>>,\n+\tstd::enable_if<__and_<__not_<is_same<remove_cv_t<_Tp1>, path>>,\n+\t\t\t      __not_<is_void<_Tp1>>,\n \t\t\t      __constructible_from<_Tp1, _Tp2>>::value,\n \t\t       path>::type;\n "}, {"sha": "340cc59d541f9c5ec02eb455aed6ca9e7435489b", "filename": "libstdc++-v3/include/experimental/bits/fs_path.h", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_path.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_path.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_path.h?ref=6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7", "patch": "@@ -125,7 +125,9 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n \n     template<typename _Tp1, typename _Tp2 = void>\n       using _Path = typename\n-\tstd::enable_if<__and_<__not_<is_same<_Tp1, path>>,\n+\tstd::enable_if<__and_<__not_<is_same<typename remove_cv<_Tp1>::type,\n+\t\t\t\t\t     path>>,\n+\t\t\t      __not_<is_void<_Tp1>>,\n \t\t\t      __constructible_from<_Tp1, _Tp2>>::value,\n \t\t       path>::type;\n "}, {"sha": "15a79fd4e120554b54340394af710c6df73d253a", "filename": "libstdc++-v3/testsuite/27_io/filesystem/path/construct/80762.cc", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fconstruct%2F80762.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fconstruct%2F80762.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilesystem%2Fpath%2Fconstruct%2F80762.cc?ref=6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7", "patch": "@@ -0,0 +1,29 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++17\" }\n+// { dg-do compile { target c++17 } }\n+\n+#include <filesystem>\n+\n+using std::filesystem::path;\n+\n+static_assert( !std::is_constructible_v<path, void> );\n+static_assert( !std::is_constructible_v<path, volatile path> );\n+static_assert( !std::is_constructible_v<path, volatile path&> );\n+static_assert( !std::is_constructible_v<path, const volatile path> );\n+static_assert( !std::is_constructible_v<path, const volatile path&> );"}, {"sha": "fdd9f768f783442b4dbc7bae239ee0116a599c8a", "filename": "libstdc++-v3/testsuite/experimental/filesystem/path/construct/80762.cc", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fconstruct%2F80762.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fconstruct%2F80762.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Ffilesystem%2Fpath%2Fconstruct%2F80762.cc?ref=6b7c0b5559316028d392d2bf9a4a0ca9e7562ce7", "patch": "@@ -0,0 +1,28 @@\n+// Copyright (C) 2018 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-do compile { target c++11 } }\n+\n+#include <experimental/filesystem>\n+\n+using std::experimental::filesystem::path;\n+\n+static_assert( !std::is_constructible<path, void>::value, \"\" );\n+static_assert( !std::is_constructible<path, volatile path>::value, \"\" );\n+static_assert( !std::is_constructible<path, volatile path&>::value, \"\" );\n+static_assert( !std::is_constructible<path, const volatile path>::value, \"\" );\n+static_assert( !std::is_constructible<path, const volatile path&>::value, \"\" );"}]}