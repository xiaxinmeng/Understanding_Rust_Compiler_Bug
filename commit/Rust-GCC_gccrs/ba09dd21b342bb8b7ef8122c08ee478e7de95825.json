{"sha": "ba09dd21b342bb8b7ef8122c08ee478e7de95825", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmEwOWRkMjFiMzQyYmI4YjdlZjgxMjJjMDhlZTQ3OGU3ZGU5NTgyNQ==", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2017-10-16T09:53:13Z"}, "committer": {"name": "Tamar Christina", "email": "tnfchris@gcc.gnu.org", "date": "2017-10-16T09:53:13Z"}, "message": "arm.h (TARGET_DOTPROD): New.\n\n2017-10-16  Tamar Christina  <tamar.christina@arm.com>\n\n\t* config/arm/arm.h (TARGET_DOTPROD): New.\n\t* config/arm/arm.c (arm_arch_dotprod): New.\n\t(arm_option_reconfigure_globals): Add arm_arch_dotprod.\n\t* config/arm/arm-c.c (__ARM_FEATURE_DOTPROD): New.\n\t* config/arm/arm-cpus.in (armv8.2-a): Enabled +dotprod.\n\t(feature dotprod, group dotprod, ALL_SIMD_INTERNAL): New.\n\t(ALL_FPU_INTERNAL): Use ALL_SIMD_INTERNAL.\n\t* config/arm/t-multilib (v8_2_a_simd_variants): Add dotprod.\n\t* doc/invoke.texi (armv8.2-a): Document dotprod\n\nFrom-SVN: r253780", "tree": {"sha": "326b69788091c3dc0b8b334d33c8ea48a64d9304", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/326b69788091c3dc0b8b334d33c8ea48a64d9304"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba09dd21b342bb8b7ef8122c08ee478e7de95825", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba09dd21b342bb8b7ef8122c08ee478e7de95825", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba09dd21b342bb8b7ef8122c08ee478e7de95825", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba09dd21b342bb8b7ef8122c08ee478e7de95825/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "92d5d01ac65e395ceaecc5d930f6017952aa4934", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92d5d01ac65e395ceaecc5d930f6017952aa4934", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92d5d01ac65e395ceaecc5d930f6017952aa4934"}], "stats": {"total": 57, "additions": 48, "deletions": 9}, "files": [{"sha": "f8ad1dc7c7c4ed16b342fc1d2aaa811594770446", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba09dd21b342bb8b7ef8122c08ee478e7de95825/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba09dd21b342bb8b7ef8122c08ee478e7de95825/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ba09dd21b342bb8b7ef8122c08ee478e7de95825", "patch": "@@ -1,3 +1,15 @@\n+2017-10-16  Tamar Christina  <tamar.christina@arm.com>\n+\n+\t* config/arm/arm.h (TARGET_DOTPROD): New.\n+\t* config/arm/arm.c (arm_arch_dotprod): New.\n+\t(arm_option_reconfigure_globals): Add arm_arch_dotprod.\n+\t* config/arm/arm-c.c (__ARM_FEATURE_DOTPROD): New.\n+\t* config/arm/arm-cpus.in (armv8.2-a): Enabled +dotprod.\n+\t(feature dotprod, group dotprod, ALL_SIMD_INTERNAL): New.\n+\t(ALL_FPU_INTERNAL): Use ALL_SIMD_INTERNAL.\n+\t* config/arm/t-multilib (v8_2_a_simd_variants): Add dotprod.\n+\t* doc/invoke.texi (armv8.2-a): Document dotprod\n+\n 2017-10-14  Jan Hubicka  <hubicka@ucw.cz>\n \n \t* i386.c (ix86_vec_cost): New function."}, {"sha": "295f03bf8ee02be7c89ed2967d283be206e9f25a", "filename": "gcc/config/arm/arm-c.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba09dd21b342bb8b7ef8122c08ee478e7de95825/gcc%2Fconfig%2Farm%2Farm-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba09dd21b342bb8b7ef8122c08ee478e7de95825/gcc%2Fconfig%2Farm%2Farm-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-c.c?ref=ba09dd21b342bb8b7ef8122c08ee478e7de95825", "patch": "@@ -72,11 +72,11 @@ arm_cpu_builtins (struct cpp_reader* pfile)\n \n   def_or_undef_macro (pfile, \"__ARM_FEATURE_QRDMX\", TARGET_NEON_RDMA);\n \n-  if (TARGET_CRC32)\n-    builtin_define (\"__ARM_FEATURE_CRC32\");\n-\n+  def_or_undef_macro (pfile, \"__ARM_FEATURE_CRC32\", TARGET_CRC32);\n+  def_or_undef_macro (pfile, \"__ARM_FEATURE_DOTPROD\", TARGET_DOTPROD);\n   def_or_undef_macro (pfile, \"__ARM_32BIT_STATE\", TARGET_32BIT);\n \n+  cpp_undef (pfile, \"__ARM_FEATURE_CMSE\");\n   if (arm_arch8 && !arm_arch_notm)\n     {\n       if (arm_arch_cmse && use_cmse)"}, {"sha": "2da2a7d8e2b63d3d93ca73172b10ff23c1d8d8f9", "filename": "gcc/config/arm/arm-cpus.in", "status": "modified", "additions": 21, "deletions": 5, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba09dd21b342bb8b7ef8122c08ee478e7de95825/gcc%2Fconfig%2Farm%2Farm-cpus.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba09dd21b342bb8b7ef8122c08ee478e7de95825/gcc%2Fconfig%2Farm%2Farm-cpus.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpus.in?ref=ba09dd21b342bb8b7ef8122c08ee478e7de95825", "patch": "@@ -156,6 +156,8 @@ define feature crypto\n # FP16 data processing (half-precision float).\n define feature fp16\n \n+# Dot Product instructions extension to ARMv8.2-a.\n+define feature dotprod\n \n # ISA Quirks (errata?).  Don't forget to add this to the fgroup\n # ALL_QUIRKS below.\n@@ -173,6 +175,17 @@ define feature quirk_cm3_ldrd\n define feature smallmul\n \n # Feature groups.  Conventionally all (or mostly) upper case.\n+# ALL_FPU lists all the feature bits associated with the floating-point\n+# unit; these will all be removed if the floating-point unit is disabled\n+# (eg -mfloat-abi=soft).  ALL_FPU_INTERNAL must ONLY contain features that\n+# form part of a named -mfpu option; it is used to map the capabilities\n+# back to a named FPU for the benefit of the assembler.\n+#\n+# ALL_SIMD_INTERNAL and ALL_SIMD are similarly defined to help with the\n+# construction of ALL_FPU and ALL_FPU_INTERNAL; they describe the SIMD\n+# extensions that are either part of a named FPU or optional extensions\n+# respectively.\n+\n \n # List of all cryptographic extensions to stripout if crypto is\n # disabled.  Currently, that's trivial, but we define it anyway for\n@@ -182,11 +195,12 @@ define fgroup ALL_CRYPTO\tcrypto\n # List of all SIMD bits to strip out if SIMD is disabled.  This does\n # strip off 32 D-registers, but does not remove support for\n # double-precision FP.\n-define fgroup ALL_SIMD\tfp_d32 neon ALL_CRYPTO\n+define fgroup ALL_SIMD_INTERNAL\tfp_d32 neon ALL_CRYPTO\n+define fgroup ALL_SIMD\tALL_SIMD_INTERNAL dotprod\n \n # List of all FPU bits to strip out if -mfpu is used to override the\n # default.  fp16 is deliberately missing from this list.\n-define fgroup ALL_FPU_INTERNAL\tvfpv2 vfpv3 vfpv4 fpv5 fp16conv fp_dbl ALL_SIMD\n+define fgroup ALL_FPU_INTERNAL\tvfpv2 vfpv3 vfpv4 fpv5 fp16conv fp_dbl ALL_SIMD_INTERNAL\n \n # Similarly, but including fp16 and other extensions that aren't part of\n # -mfpu support.\n@@ -239,6 +253,7 @@ define fgroup FP_D32\tFP_DBL fp_d32\n define fgroup FP_ARMv8\tFPv5 FP_D32\n define fgroup NEON\tFP_D32 neon\n define fgroup CRYPTO\tNEON crypto\n+define fgroup DOTPROD\tNEON dotprod\n \n # List of all quirk bits to strip out when comparing CPU features with\n # architectures.\n@@ -561,6 +576,7 @@ begin arch armv8.2-a\n  option crypto add FP_ARMv8 CRYPTO\n  option nocrypto remove ALL_CRYPTO\n  option nofp remove ALL_FP\n+ option dotprod add FP_ARMv8 DOTPROD\n end arch armv8.2-a\n \n begin arch armv8-m.base\n@@ -1473,7 +1489,7 @@ begin cpu cortex-a55\n  cname cortexa55\n  tune for cortex-a53\n  tune flags LDSCHED\n- architecture armv8.2-a+fp16\n+ architecture armv8.2-a+fp16+dotprod\n  fpu neon-fp-armv8\n  option crypto add FP_ARMv8 CRYPTO\n  option nofp remove ALL_FP\n@@ -1484,7 +1500,7 @@ begin cpu cortex-a75\n  cname cortexa75\n  tune for cortex-a57\n  tune flags LDSCHED\n- architecture armv8.2-a+fp16\n+ architecture armv8.2-a+fp16+dotprod\n  fpu neon-fp-armv8\n  option crypto add FP_ARMv8 CRYPTO\n  costs cortex_a73\n@@ -1496,7 +1512,7 @@ begin cpu cortex-a75.cortex-a55\n  cname cortexa75cortexa55\n  tune for cortex-a53\n  tune flags LDSCHED\n- architecture armv8.2-a+fp16\n+ architecture armv8.2-a+fp16+dotprod\n  fpu neon-fp-armv8\n  option crypto add FP_ARMv8 CRYPTO\n  costs cortex_a73"}, {"sha": "557c971e80dfbf0321c1c64545eaed6ddf5e8c88", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba09dd21b342bb8b7ef8122c08ee478e7de95825/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba09dd21b342bb8b7ef8122c08ee478e7de95825/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=ba09dd21b342bb8b7ef8122c08ee478e7de95825", "patch": "@@ -971,6 +971,9 @@ int arm_condexec_masklen = 0;\n /* Nonzero if chip supports the ARMv8 CRC instructions.  */\n int arm_arch_crc = 0;\n \n+/* Nonzero if chip supports the AdvSIMD Dot Product instructions.  */\n+int arm_arch_dotprod = 0;\n+\n /* Nonzero if chip supports the ARMv8-M security extensions.  */\n int arm_arch_cmse = 0;\n "}, {"sha": "7e1eeb5254c2ce32ced2abdb43d1733ee1a45cd5", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba09dd21b342bb8b7ef8122c08ee478e7de95825/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba09dd21b342bb8b7ef8122c08ee478e7de95825/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=ba09dd21b342bb8b7ef8122c08ee478e7de95825", "patch": "@@ -210,6 +210,11 @@ extern tree arm_fp16_type_node;\n /* FPU supports ARMv8.1 Adv.SIMD extensions.  */\n #define TARGET_NEON_RDMA (TARGET_NEON && arm_arch8_1)\n \n+/* Supports for Dot Product AdvSIMD extensions.  */\n+#define TARGET_DOTPROD (TARGET_NEON\t\t\t\t\t\\\n+\t\t\t&& bitmap_bit_p (arm_active_target.isa,\t\t\\\n+\t\t\t\t\tisa_bit_dotprod))\n+\n /* FPU supports the floating point FP16 instructions for ARMv8.2 and later.  */\n #define TARGET_VFP_FP16INST \\\n   (TARGET_32BIT && TARGET_HARD_FLOAT && TARGET_VFP5 && arm_fp16_inst)"}, {"sha": "47f3673160a766c5b1b8972f7670355f2c357b56", "filename": "gcc/config/arm/t-multilib", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba09dd21b342bb8b7ef8122c08ee478e7de95825/gcc%2Fconfig%2Farm%2Ft-multilib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba09dd21b342bb8b7ef8122c08ee478e7de95825/gcc%2Fconfig%2Farm%2Ft-multilib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-multilib?ref=ba09dd21b342bb8b7ef8122c08ee478e7de95825", "patch": "@@ -68,7 +68,7 @@ v7ve_vfpv4_simd_variants := +simd\n v8_a_nosimd_variants\t:= +crc\n v8_a_simd_variants\t:= $(call all_feat_combs, simd crypto)\n v8_1_a_simd_variants\t:= $(call all_feat_combs, simd crypto)\n-v8_2_a_simd_variants\t:= $(call all_feat_combs, simd fp16 crypto)\n+v8_2_a_simd_variants\t:= $(call all_feat_combs, simd fp16 crypto dotprod)\n \n \n ifneq (,$(HAS_APROFILE))"}, {"sha": "4faeb457b19d3f376dd6f9f9130dffc60682c43b", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba09dd21b342bb8b7ef8122c08ee478e7de95825/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba09dd21b342bb8b7ef8122c08ee478e7de95825/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ba09dd21b342bb8b7ef8122c08ee478e7de95825", "patch": "@@ -15622,6 +15622,9 @@ The ARMv8.1 Advanced SIMD and floating-point instructions.\n The cryptographic instructions.  This also enables the Advanced SIMD and\n floating-point instructions.\n \n+@item +dotprod\n+Enable the Dot Product extension.  This also enables Advanced SIMD instructions.\n+\n @item +nocrypto\n Disable the cryptographic extension.\n "}]}