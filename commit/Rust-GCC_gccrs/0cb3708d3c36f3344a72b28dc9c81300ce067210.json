{"sha": "0cb3708d3c36f3344a72b28dc9c81300ce067210", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGNiMzcwOGQzYzM2ZjMzNDRhNzJiMjhkYzljODEzMDBjZTA2NzIxMA==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2001-08-29T16:17:25Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2001-08-29T16:17:25Z"}, "message": "h8300.md (anonymous movhi pattern): Don't move (reg n) to (mem (pre_dec (reg n)) (anonymous movsi pattern): Likewise.\n\n\t* h8300.md (anonymous movhi pattern): Don't move (reg n) to\n\t(mem (pre_dec (reg n))\n\t(anonymous movsi pattern): Likewise.\n\nFrom-SVN: r45266", "tree": {"sha": "5dede8e81f343d12f82c1ba1cebaf71f44724952", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5dede8e81f343d12f82c1ba1cebaf71f44724952"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0cb3708d3c36f3344a72b28dc9c81300ce067210", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cb3708d3c36f3344a72b28dc9c81300ce067210", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cb3708d3c36f3344a72b28dc9c81300ce067210", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cb3708d3c36f3344a72b28dc9c81300ce067210/comments", "author": null, "committer": null, "parents": [{"sha": "af592bf91d48c28c2828d46bb5a683ca7bb86af3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af592bf91d48c28c2828d46bb5a683ca7bb86af3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af592bf91d48c28c2828d46bb5a683ca7bb86af3"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "86f674efd7de52101e3e680ea67a5753bf7f58c4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb3708d3c36f3344a72b28dc9c81300ce067210/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb3708d3c36f3344a72b28dc9c81300ce067210/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0cb3708d3c36f3344a72b28dc9c81300ce067210", "patch": "@@ -1,3 +1,9 @@\n+2001-08-29  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* h8300.md (anonymous movhi pattern): Don't move (reg n) to\n+\t(mem (pre_dec (reg n))\n+\t(anonymous movsi pattern): Likewise.\n+\n 2001-08-29  Kazu Hirata  <kazu@hxi.com>\n \n \t* h8300.h (RETURN_ADDR_RTX): New."}, {"sha": "b8a9b5e0a9942336ed37de23b5e9133f82ffc042", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0cb3708d3c36f3344a72b28dc9c81300ce067210/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0cb3708d3c36f3344a72b28dc9c81300ce067210/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=0cb3708d3c36f3344a72b28dc9c81300ce067210", "patch": "@@ -175,7 +175,12 @@\n \t(match_operand:HI 1 \"general_operand_src\" \"I,r>,r,i,m,r\"))]\n   \"TARGET_H8300\n    && (register_operand (operands[0],HImode)\n-       || register_operand (operands[1], HImode))\"\n+       || register_operand (operands[1], HImode))\n+   && !(GET_CODE (operands[0]) == MEM\n+\t&& GET_CODE (XEXP (operands[0], 0)) == PRE_DEC\n+\t&& GET_CODE (XEXP (XEXP (operands[0], 0), 0)) == REG\n+\t&& GET_CODE (operands[1]) == REG\n+\t&& REGNO (XEXP (XEXP (operands[0], 0), 0)) == REGNO (operands[1]))\"\n   \"@\n    sub.w\t%T0,%T0\n    mov.w\t%T1,%T0\n@@ -404,7 +409,12 @@\n \t(match_operand:SI 1 \"general_operand_src\" \"I,r,i,m,r,r,>,I,r,*a\"))]\n   \"(TARGET_H8300S || TARGET_H8300H)\n    && (register_operand (operands[0], SImode)\n-       || register_operand (operands[1], SImode))\"\n+       || register_operand (operands[1], SImode))\n+   && !(GET_CODE (operands[0]) == MEM\n+\t&& GET_CODE (XEXP (operands[0], 0)) == PRE_DEC\n+\t&& GET_CODE (XEXP (XEXP (operands[0], 0), 0)) == REG\n+\t&& GET_CODE (operands[1]) == REG\n+\t&& REGNO (XEXP (XEXP (operands[0], 0), 0)) == REGNO (operands[1]))\"\n   \"*\n {\n   switch (which_alternative)"}]}