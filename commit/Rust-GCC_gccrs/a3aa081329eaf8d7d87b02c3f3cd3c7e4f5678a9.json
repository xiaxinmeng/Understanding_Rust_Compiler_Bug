{"sha": "a3aa081329eaf8d7d87b02c3f3cd3c7e4f5678a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNhYTA4MTMyOWVhZjhkN2Q4N2IwMmMzZjNjZDNjN2U0ZjU2NzhhOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-08-28T06:22:51Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-08-28T06:22:51Z"}, "message": "ddg.c (walk_mems_2, [...]): Delete.\n\ngcc/\n\t* ddg.c (walk_mems_2, walk_mems_1): Delete.\n\t(insns_may_alias_p): Use FOR_EACH_SUBRTX rather than for_each_rtx\n\tto iterate over subrtxes.  Return a bool rather than an int.\n\nFrom-SVN: r214633", "tree": {"sha": "5ef9b0eeee337f510c235d15107904628e7750ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ef9b0eeee337f510c235d15107904628e7750ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3aa081329eaf8d7d87b02c3f3cd3c7e4f5678a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3aa081329eaf8d7d87b02c3f3cd3c7e4f5678a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3aa081329eaf8d7d87b02c3f3cd3c7e4f5678a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3aa081329eaf8d7d87b02c3f3cd3c7e4f5678a9/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fbf3fc0fc96c5542f982b68873e2ff8330f8c0c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbf3fc0fc96c5542f982b68873e2ff8330f8c0c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbf3fc0fc96c5542f982b68873e2ff8330f8c0c6"}], "stats": {"total": 54, "additions": 22, "deletions": 32}, "files": [{"sha": "5ca9fb685b9681287fa0f693fd887dbd96787177", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3aa081329eaf8d7d87b02c3f3cd3c7e4f5678a9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3aa081329eaf8d7d87b02c3f3cd3c7e4f5678a9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a3aa081329eaf8d7d87b02c3f3cd3c7e4f5678a9", "patch": "@@ -1,3 +1,9 @@\n+2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* ddg.c (walk_mems_2, walk_mems_1): Delete.\n+\t(insns_may_alias_p): Use FOR_EACH_SUBRTX rather than for_each_rtx\n+\tto iterate over subrtxes.  Return a bool rather than an int.\n+\n 2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* ddg.c: Include rtl-iter.h."}, {"sha": "09757185b2e9388c514a2d6d6d3b7620afbed0c3", "filename": "gcc/ddg.c", "status": "modified", "additions": 16, "deletions": 32, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3aa081329eaf8d7d87b02c3f3cd3c7e4f5678a9/gcc%2Fddg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3aa081329eaf8d7d87b02c3f3cd3c7e4f5678a9/gcc%2Fddg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fddg.c?ref=a3aa081329eaf8d7d87b02c3f3cd3c7e4f5678a9", "patch": "@@ -397,41 +397,25 @@ build_inter_loop_deps (ddg_ptr g)\n }\n \n \n-static int\n-walk_mems_2 (rtx *x, rtx mem)\n-{\n-  if (MEM_P (*x))\n-    {\n-      if (may_alias_p (*x, mem))\n-        return 1;\n-\n-      return -1;\n-    }\n-  return 0;\n-}\n-\n-static int\n-walk_mems_1 (rtx *x, rtx *pat)\n+/* Return true if two specified instructions have mem expr with conflict\n+   alias sets.  */\n+static bool\n+insns_may_alias_p (rtx_insn *insn1, rtx_insn *insn2)\n {\n-  if (MEM_P (*x))\n+  subrtx_iterator::array_type array1;\n+  subrtx_iterator::array_type array2;\n+  FOR_EACH_SUBRTX (iter1, array1, PATTERN (insn1), NONCONST)\n     {\n-      /* Visit all MEMs in *PAT and check independence.  */\n-      if (for_each_rtx (pat, (rtx_function) walk_mems_2, *x))\n-        /* Indicate that dependence was determined and stop traversal.  */\n-        return 1;\n-\n-      return -1;\n+      const_rtx x1 = *iter1;\n+      if (MEM_P (x1))\n+\tFOR_EACH_SUBRTX (iter2, array2, PATTERN (insn2), NONCONST)\n+\t  {\n+\t    const_rtx x2 = *iter2;\n+\t    if (MEM_P (x2) && may_alias_p (x2, x1))\n+\t      return true;\n+\t  }\n     }\n-  return 0;\n-}\n-\n-/* Return 1 if two specified instructions have mem expr with conflict alias sets*/\n-static int\n-insns_may_alias_p (rtx_insn *insn1, rtx_insn *insn2)\n-{\n-  /* For each pair of MEMs in INSN1 and INSN2 check their independence.  */\n-  return  for_each_rtx (&PATTERN (insn1), (rtx_function) walk_mems_1,\n-\t\t\t &PATTERN (insn2));\n+  return false;\n }\n \n /* Given two nodes, analyze their RTL insns and add intra-loop mem deps"}]}