{"sha": "aace91e285d107abd3762c8d5b58e2be42b05512", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWFjZTkxZTI4NWQxMDdhYmQzNzYyYzhkNWI1OGUyYmU0MmIwNTUxMg==", "commit": {"author": {"name": "Harald Anlauf", "email": "anlauf@gmx.de", "date": "2019-04-04T20:38:33Z"}, "committer": {"name": "Harald Anlauf", "email": "anlauf@gcc.gnu.org", "date": "2019-04-04T20:38:33Z"}, "message": "re PR fortran/89904 (ICE in gfortran starting with r270045)\n\n2019-04-04  Harald Anlauf  <anlauf@gmx.de>\n\n\tPR fortran/89004\n\t* check.c (gfc_check_transfer): Reject procedures as actual\n\targuments for SOURCE and MOLD of TRANSFER intrinsic.\n\n\tPR fortran/89004\n\t* gfortran.dg/pr85797.f90: Adjust testcase.\n\nFrom-SVN: r270150", "tree": {"sha": "55349d930398d03fa7fbfe253016d4d885538d14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/55349d930398d03fa7fbfe253016d4d885538d14"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aace91e285d107abd3762c8d5b58e2be42b05512", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aace91e285d107abd3762c8d5b58e2be42b05512", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aace91e285d107abd3762c8d5b58e2be42b05512", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aace91e285d107abd3762c8d5b58e2be42b05512/comments", "author": {"login": "harald-anlauf", "id": 90786862, "node_id": "MDQ6VXNlcjkwNzg2ODYy", "avatar_url": "https://avatars.githubusercontent.com/u/90786862?v=4", "gravatar_id": "", "url": "https://api.github.com/users/harald-anlauf", "html_url": "https://github.com/harald-anlauf", "followers_url": "https://api.github.com/users/harald-anlauf/followers", "following_url": "https://api.github.com/users/harald-anlauf/following{/other_user}", "gists_url": "https://api.github.com/users/harald-anlauf/gists{/gist_id}", "starred_url": "https://api.github.com/users/harald-anlauf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/harald-anlauf/subscriptions", "organizations_url": "https://api.github.com/users/harald-anlauf/orgs", "repos_url": "https://api.github.com/users/harald-anlauf/repos", "events_url": "https://api.github.com/users/harald-anlauf/events{/privacy}", "received_events_url": "https://api.github.com/users/harald-anlauf/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a36c1806aa3d06301d1a177afbad6198b0f9086", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a36c1806aa3d06301d1a177afbad6198b0f9086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a36c1806aa3d06301d1a177afbad6198b0f9086"}], "stats": {"total": 49, "additions": 40, "deletions": 9}, "files": [{"sha": "7b849b0d3fd141617fc2c89e5e52e282abc9402f", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aace91e285d107abd3762c8d5b58e2be42b05512/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aace91e285d107abd3762c8d5b58e2be42b05512/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=aace91e285d107abd3762c8d5b58e2be42b05512", "patch": "@@ -1,3 +1,9 @@\n+2019-04-04  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/89004\n+\t* check.c (gfc_check_transfer): Reject procedures as actual\n+\targuments for SOURCE and MOLD of TRANSFER intrinsic.\n+\n 2019-04-03  Steven G. Kargl  <kargl@gcc.gnu.org>\n \n \tPR fortran/68567"}, {"sha": "a04f0d66655cd51ba34671cfe83906d281b6bae2", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aace91e285d107abd3762c8d5b58e2be42b05512/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aace91e285d107abd3762c8d5b58e2be42b05512/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=aace91e285d107abd3762c8d5b58e2be42b05512", "patch": "@@ -5544,13 +5544,35 @@ gfc_check_transfer (gfc_expr *source, gfc_expr *mold, gfc_expr *size)\n   size_t source_size;\n   size_t result_size;\n \n+  /* SOURCE shall be a scalar or array of any type.  */\n+  if (source->ts.type == BT_PROCEDURE\n+      && source->symtree->n.sym->attr.subroutine == 1)\n+    {\n+      gfc_error (\"%<SOURCE%> argument of %<TRANSFER%> intrinsic at %L \"\n+                 \"must not be a %s\", &source->where,\n+\t\t gfc_basic_typename (source->ts.type));\n+      return false;\n+    }\n+\n+  /* MOLD shall be a scalar or array of any type.  */\n+  if (mold->ts.type == BT_PROCEDURE\n+      && mold->symtree->n.sym->attr.subroutine == 1)\n+    {\n+      gfc_error (\"%<MOLD%> argument of %<TRANSFER%> intrinsic at %L \"\n+                 \"must not be a %s\", &mold->where,\n+\t\t gfc_basic_typename (mold->ts.type));\n+      return false;\n+    }\n+\n   if (mold->ts.type == BT_HOLLERITH)\n     {\n       gfc_error (\"%<MOLD%> argument of %<TRANSFER%> intrinsic at %L must not be\"\n                  \" %s\", &mold->where, gfc_basic_typename (BT_HOLLERITH));\n       return false;\n     }\n \n+  /* SIZE (optional) shall be an integer scalar.  The corresponding actual\n+     argument shall not be an optional dummy argument.  */\n   if (size != NULL)\n     {\n       if (!type_check (size, 2, BT_INTEGER))"}, {"sha": "31c70826d2a878eda2d6076187ef527a47eca559", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aace91e285d107abd3762c8d5b58e2be42b05512/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aace91e285d107abd3762c8d5b58e2be42b05512/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=aace91e285d107abd3762c8d5b58e2be42b05512", "patch": "@@ -1,3 +1,8 @@\n+2019-04-04  Harald Anlauf  <anlauf@gmx.de>\n+\n+\tPR fortran/89004\n+\t* gfortran.dg/pr85797.f90: Adjust testcase.\n+\n 2019-04-04  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/65619"}, {"sha": "01d8e640621e9b76741bc498288782dcdd486d11", "filename": "gcc/testsuite/gfortran.dg/pr85797.f90", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aace91e285d107abd3762c8d5b58e2be42b05512/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr85797.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aace91e285d107abd3762c8d5b58e2be42b05512/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr85797.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr85797.f90?ref=aace91e285d107abd3762c8d5b58e2be42b05512", "patch": "@@ -1,29 +1,27 @@\n ! { dg-do compile }\n-! { dg-options \"-Wall\" }\n ! PR fortran/83515 - ICE: Invalid expression in gfc_element_size \n ! PR fortran/85797 - ICE in gfc_element_size, at fortran/target-memory.c:126\n+! PR fortran/89904 - ICE in gfortran starting with r270045\n \n-subroutine a\n-  c = transfer (a, b)           ! { dg-warning \"Non-RECURSIVE procedure\" }\n+recursive subroutine a\n+  c = transfer (a, b)           ! { dg-error \"'SOURCE' argument of 'TRANSFER'\" }\n end\n \n recursive subroutine d\n-  c = transfer (d, b)\n-end\n-\n-recursive subroutine e\n-  k = transfer (transfer (e, e), 1)\n+  c = transfer (b, d)           ! { dg-error \"'MOLD' argument of 'TRANSFER'\" }\n end\n \n subroutine f\n   use, intrinsic :: iso_c_binding\n   integer(c_intptr_t) :: b, c\n+  procedure(), pointer :: a\n+  c = transfer (a, b)\n   c = transfer (transfer (b, a), b)\n end\n \n module m\n contains\n-  function f () result (z)      ! { dg-warning \"Return value\" }\n+  function f () result (z)\n     class(*), pointer :: z\n   end function f\n   recursive subroutine s (q)"}]}