{"sha": "2f5c071860ba3f8ef67d0b9d8291a73766ce0a44", "node_id": "C_kwDOANBUbNoAKDJmNWMwNzE4NjBiYTNmOGVmNjdkMGI5ZDgyOTFhNzM3NjZjZTBhNDQ", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-16T13:48:39Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-11-16T20:52:37Z"}, "message": "libstdc++: Adjust <format> for Clang compatibility [PR107712]\n\nClang doesn't define __builtin_toupper, so use std::toupper.\n\nAlso add some (not actually required since C++20) typename keywords to\nhelp Clang versions up to and including 15.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR libstdc++/107712\n\t* include/std/format (__format::__formatter_int::format): Use\n\tstd::toupper when __builtin_toupper isn't available.\n\t(basic_format_arg::handle): Add 'typename'.\n\t* include/std/complex (complex<T>): Add 'typename'.", "tree": {"sha": "149f7dbd839ff83133d14069ef7747368b669a0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/149f7dbd839ff83133d14069ef7747368b669a0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f5c071860ba3f8ef67d0b9d8291a73766ce0a44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f5c071860ba3f8ef67d0b9d8291a73766ce0a44", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f5c071860ba3f8ef67d0b9d8291a73766ce0a44", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f5c071860ba3f8ef67d0b9d8291a73766ce0a44/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22cb0fea718fd4dab8c97c8f03054a2fb7dc3d76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22cb0fea718fd4dab8c97c8f03054a2fb7dc3d76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22cb0fea718fd4dab8c97c8f03054a2fb7dc3d76"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "86d5ca3c3e12fcf15b71021d748162a68ed47161", "filename": "libstdc++-v3/include/std/complex", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f5c071860ba3f8ef67d0b9d8291a73766ce0a44/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f5c071860ba3f8ef67d0b9d8291a73766ce0a44/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fcomplex?ref=2f5c071860ba3f8ef67d0b9d8291a73766ce0a44", "patch": "@@ -1840,7 +1840,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     {\n     public:\n       typedef _Tp value_type;\n-      typedef std::__complex_type<_Tp>::type _ComplexT;\n+      typedef typename std::__complex_type<_Tp>::type _ComplexT;\n \n       constexpr complex(_ComplexT __z) : _M_value(__z) { }\n "}, {"sha": "995b05c2ab293019ffff71d1fbfccd7ca808bbbd", "filename": "libstdc++-v3/include/std/format", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f5c071860ba3f8ef67d0b9d8291a73766ce0a44/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f5c071860ba3f8ef67d0b9d8291a73766ce0a44/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fformat?ref=2f5c071860ba3f8ef67d0b9d8291a73766ce0a44", "patch": "@@ -52,6 +52,10 @@\n #include <bits/utility.h>      // tuple_size_v\n #include <ext/numeric_traits.h> // __int_traits\n \n+#if !__has_builtin(__builtin_toupper)\n+# include <cctype>\n+#endif\n+\n namespace std _GLIBCXX_VISIBILITY(default)\n {\n _GLIBCXX_BEGIN_NAMESPACE_VERSION\n@@ -1027,7 +1031,11 @@ namespace __format\n \t      __res = to_chars(__start, __end, __u, 16);\n \t      if (_M_spec._M_type == _Pres_X)\n \t\tfor (auto __p = __start; __p != __res.ptr; ++__p)\n+#if __has_builtin(__builtin_toupper)\n \t\t  *__p = __builtin_toupper(*__p);\n+#else\n+\t\t  *__p = std::toupper(*__p);\n+#endif\n \t      break;\n \t    default:\n \t      __builtin_unreachable();\n@@ -2718,7 +2726,7 @@ namespace __format\n     public:\n       class handle : public __format::_Arg_value<_Context>::_HandleBase\n       {\n-\tusing _Base = __format::_Arg_value<_Context>::_HandleBase;\n+\tusing _Base = typename __format::_Arg_value<_Context>::_HandleBase;\n \n \t// Format as const if possible, to reduce instantiations.\n \ttemplate<typename _Tp>"}]}