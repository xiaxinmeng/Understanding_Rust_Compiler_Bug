{"sha": "a9411cce01dce8213c4133d2078c0b69e4d40844", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTk0MTFjY2UwMWRjZTgyMTNjNDEzM2QyMDc4YzBiNjllNGQ0MDg0NA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-18T04:24:48Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-01-18T04:24:48Z"}, "message": "re PR go/83787 (Many 32-bit Solaris/SPARC Go tests FAIL after Go1.10beta1 update)\n\n\tPR go/83787\n    compiler: pass int to makechan, call makechan64 when appropriate\n    \n    The update to 1.10beta1 changed makechan to take int instead of int64,\n    and added a makechan64 call for large values.  Since the size is the\n    last argument to makechan, the old compiler which always passed a\n    64-bit int worked fine on 64-bit systems and little-endian 32-bit\n    systems, but broke on big-endian 32-bit systems.  This CL fixes the\n    compiler to use the appropriate types.\n    \n    This fixes GCC PR 83787.\n    \n    Reviewed-on: https://go-review.googlesource.com/88077\n\nFrom-SVN: r256835", "tree": {"sha": "5ead98e36600f6316433e622924edc24c1127ea8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ead98e36600f6316433e622924edc24c1127ea8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9411cce01dce8213c4133d2078c0b69e4d40844", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9411cce01dce8213c4133d2078c0b69e4d40844", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9411cce01dce8213c4133d2078c0b69e4d40844", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9411cce01dce8213c4133d2078c0b69e4d40844/comments", "author": null, "committer": null, "parents": [{"sha": "b7e60023a2ec1b4ec164b986444280ac8c6b3881", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7e60023a2ec1b4ec164b986444280ac8c6b3881", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7e60023a2ec1b4ec164b986444280ac8c6b3881"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "93e7215271e3c70516cf72b720d24770739422ed", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9411cce01dce8213c4133d2078c0b69e4d40844/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9411cce01dce8213c4133d2078c0b69e4d40844/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=a9411cce01dce8213c4133d2078c0b69e4d40844", "patch": "@@ -1,4 +1,4 @@\n-1072286ca9249bd6f75628aead325a66286bcf5b\n+925635f067d40d30acf565b620cc859ee7cbc990\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "4f95945e230988615373f3a55d1462061391c786", "filename": "gcc/go/gofrontend/escape.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9411cce01dce8213c4133d2078c0b69e4d40844/gcc%2Fgo%2Fgofrontend%2Fescape.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9411cce01dce8213c4133d2078c0b69e4d40844/gcc%2Fgo%2Fgofrontend%2Fescape.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fescape.cc?ref=a9411cce01dce8213c4133d2078c0b69e4d40844", "patch": "@@ -360,6 +360,7 @@ Node::op_format() const\n \t\t  break;\n \n \t\tcase Runtime::MAKECHAN:\n+\t\tcase Runtime::MAKECHAN64:\n \t\tcase Runtime::MAKEMAP:\n \t\tcase Runtime::MAKESLICE:\n \t\tcase Runtime::MAKESLICE64:\n@@ -1602,6 +1603,7 @@ Escape_analysis_assign::expression(Expression** pexpr)\n \t    switch (fe->runtime_code())\n \t      {\n \t      case Runtime::MAKECHAN:\n+\t      case Runtime::MAKECHAN64:\n \t      case Runtime::MAKEMAP:\n \t      case Runtime::MAKESLICE:\n \t      case Runtime::MAKESLICE64:\n@@ -2284,6 +2286,7 @@ Escape_analysis_assign::assign(Node* dst, Node* src)\n \t\tswitch (fe->runtime_code())\n \t\t  {\n \t\t  case Runtime::MAKECHAN:\n+\t\t  case Runtime::MAKECHAN64:\n \t\t  case Runtime::MAKEMAP:\n \t\t  case Runtime::MAKESLICE:\n \t\t  case Runtime::MAKESLICE64:\n@@ -3056,6 +3059,7 @@ Escape_analysis_flood::flood(Level level, Node* dst, Node* src,\n               switch (call->fn()->func_expression()->runtime_code())\n                 {\n                 case Runtime::MAKECHAN:\n+\t\tcase Runtime::MAKECHAN64:\n                 case Runtime::MAKEMAP:\n                 case Runtime::MAKESLICE:\n                 case Runtime::MAKESLICE64:"}, {"sha": "47be82f823ec591abf92a22b1b9a053ec2e8954f", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9411cce01dce8213c4133d2078c0b69e4d40844/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9411cce01dce8213c4133d2078c0b69e4d40844/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=a9411cce01dce8213c4133d2078c0b69e4d40844", "patch": "@@ -7565,7 +7565,10 @@ Builtin_call_expression::lower_make(Statement_inserter* inserter)\n   else if (is_chan)\n     {\n       Expression* type_arg = Expression::make_type_descriptor(type, type_loc);\n-      call = Runtime::make_call(Runtime::MAKECHAN, loc, 2, type_arg, len_arg);\n+      Runtime::Function code = Runtime::MAKECHAN;\n+      if (!len_small)\n+\tcode = Runtime::MAKECHAN64;\n+      call = Runtime::make_call(code, loc, 2, type_arg, len_arg);\n     }\n   else\n     go_unreachable();"}, {"sha": "fdb159e55057d4a444f22f81437c4f754d42d04d", "filename": "gcc/go/gofrontend/runtime.def", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9411cce01dce8213c4133d2078c0b69e4d40844/gcc%2Fgo%2Fgofrontend%2Fruntime.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9411cce01dce8213c4133d2078c0b69e4d40844/gcc%2Fgo%2Fgofrontend%2Fruntime.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fruntime.def?ref=a9411cce01dce8213c4133d2078c0b69e4d40844", "patch": "@@ -139,7 +139,8 @@ DEF_GO_RUNTIME(MAPITERNEXT, \"runtime.mapiternext\", P1(POINTER), R0())\n \n \n // Make a channel.\n-DEF_GO_RUNTIME(MAKECHAN, \"runtime.makechan\", P2(TYPE, INT64), R1(CHAN))\n+DEF_GO_RUNTIME(MAKECHAN, \"runtime.makechan\", P2(TYPE, INT), R1(CHAN))\n+DEF_GO_RUNTIME(MAKECHAN64, \"runtime.makechan64\", P2(TYPE, INT64), R1(CHAN))\n \n // Send a value on a channel.\n DEF_GO_RUNTIME(CHANSEND, \"runtime.chansend1\", P2(CHAN, POINTER), R0())"}, {"sha": "bf708aec5c439faab1230a334a802339c9151245", "filename": "libgo/go/runtime/chan.go", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9411cce01dce8213c4133d2078c0b69e4d40844/libgo%2Fgo%2Fruntime%2Fchan.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9411cce01dce8213c4133d2078c0b69e4d40844/libgo%2Fgo%2Fruntime%2Fchan.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fruntime%2Fchan.go?ref=a9411cce01dce8213c4133d2078c0b69e4d40844", "patch": "@@ -26,6 +26,7 @@ import (\n // themselves, so that the compiler will export them.\n //\n //go:linkname makechan runtime.makechan\n+//go:linkname makechan64 runtime.makechan64\n //go:linkname chansend1 runtime.chansend1\n //go:linkname chanrecv1 runtime.chanrecv1\n //go:linkname chanrecv2 runtime.chanrecv2"}]}