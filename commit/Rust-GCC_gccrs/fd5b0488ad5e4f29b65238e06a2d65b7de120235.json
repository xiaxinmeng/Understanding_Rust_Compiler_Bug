{"sha": "fd5b0488ad5e4f29b65238e06a2d65b7de120235", "node_id": "C_kwDOANBUbNoAKGZkNWIwNDg4YWQ1ZTRmMjliNjUyMzhlMDZhMmQ2NWI3ZGUxMjAyMzU", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-26T21:55:11Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-01-26T21:55:11Z"}, "message": "rs6000: Fix up *intrin.h for C89 [PR104239]\n\nWhen writing testcases for the previously posted patch, I have noticed\nthat 3 of the headers aren't valid C89 (I didn't have any dg-options\nso -ansi -pedantic-errors was implied and these errors were reported).\n\nThe following patch fixes those, ok for trunk?\n\nNote, as can be seen even in this patch, seems older rs6000/*intrin.h\nheaders uglify not just argument names (__A instead of A etc.), but also\nautomatic variable names and other local identifiers, while e.g. emmintrin.h\nor bmi2intrin.h clearly uglify only the argument names and not local\nvariables.  I think that should be fixed but don't have time for that myself\n(libstdc++ or e.g. the x86 headers uglify everything; this is so that one\ncan\n #define result a + b\n #include <x86intrin.h>\netc.).\n\n2022-01-26  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR target/104239\n\t* config/rs6000/emmintrin.h (_mm_sad_epu8): Use __asm__ instead of\n\tasm.\n\t* config/rs6000/smmintrin.h (_mm_minpos_epu16): Declare iterator\n\tbefore for loop instead of for init clause.\n\t* config/rs6000/bmi2intrin.h (_pext_u64): Likewise.\n\n\t* gcc.target/powerpc/pr104239-3.c: New test.", "tree": {"sha": "0995e5ba4e6e1d0093c898c5737eb293a50f9953", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0995e5ba4e6e1d0093c898c5737eb293a50f9953"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fd5b0488ad5e4f29b65238e06a2d65b7de120235", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd5b0488ad5e4f29b65238e06a2d65b7de120235", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd5b0488ad5e4f29b65238e06a2d65b7de120235", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd5b0488ad5e4f29b65238e06a2d65b7de120235/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2bf8da684b712a16c67f3defc0dd97f175f8f4ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2bf8da684b712a16c67f3defc0dd97f175f8f4ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2bf8da684b712a16c67f3defc0dd97f175f8f4ad"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "f2d7eb532060f2f4c0d0d87117801900194c7e31", "filename": "gcc/config/rs6000/bmi2intrin.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd5b0488ad5e4f29b65238e06a2d65b7de120235/gcc%2Fconfig%2Frs6000%2Fbmi2intrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd5b0488ad5e4f29b65238e06a2d65b7de120235/gcc%2Fconfig%2Frs6000%2Fbmi2intrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fbmi2intrin.h?ref=fd5b0488ad5e4f29b65238e06a2d65b7de120235", "patch": "@@ -118,7 +118,8 @@ _pext_u64 (unsigned long long __X, unsigned long long __M)\n       /* Also if the pext mask is constant, then the popcount is\n        constant, we can evaluate the following loop at compile\n        time and use a constant bit permute vector.  */\n-      for (long i = 0; i < __builtin_popcountl (__M); i++)\n+      long i;\n+      for (i = 0; i < __builtin_popcountl (__M); i++)\n \t{\n \t  c = __builtin_clzl (m);\n \t  p = (p << 8) | c;"}, {"sha": "71abcca73462e7708fbf7f598cab013bcfb5c3e9", "filename": "gcc/config/rs6000/emmintrin.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd5b0488ad5e4f29b65238e06a2d65b7de120235/gcc%2Fconfig%2Frs6000%2Femmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd5b0488ad5e4f29b65238e06a2d65b7de120235/gcc%2Fconfig%2Frs6000%2Femmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Femmintrin.h?ref=fd5b0488ad5e4f29b65238e06a2d65b7de120235", "patch": "@@ -2215,7 +2215,7 @@ _mm_sad_epu8 (__m128i __A, __m128i __B)\n   vsum = (__vector signed int) vec_sum4s (vabsdiff, zero);\n #ifdef __LITTLE_ENDIAN__\n   /* Sum across four integers with two integer results.  */\n-  asm (\"vsum2sws %0,%1,%2\" : \"=v\" (result) : \"v\" (vsum), \"v\" (zero));\n+  __asm__ (\"vsum2sws %0,%1,%2\" : \"=v\" (result) : \"v\" (vsum), \"v\" (zero));\n   /* Note: vec_sum2s could be used here, but on little-endian, vector\n      shifts are added that are not needed for this use-case.\n      A vector shift to correctly position the 32-bit integer results"}, {"sha": "cca2f7d58b9eb5a7b3b0ff44de9c81c56fd3a913", "filename": "gcc/config/rs6000/smmintrin.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd5b0488ad5e4f29b65238e06a2d65b7de120235/gcc%2Fconfig%2Frs6000%2Fsmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd5b0488ad5e4f29b65238e06a2d65b7de120235/gcc%2Fconfig%2Frs6000%2Fsmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsmmintrin.h?ref=fd5b0488ad5e4f29b65238e06a2d65b7de120235", "patch": "@@ -687,7 +687,8 @@ _mm_minpos_epu16 (__m128i __A)\n   union __u __u = { .__m = __A }, __r = { .__m = {0} };\n   unsigned short __ridx = 0;\n   unsigned short __rmin = __u.__uh[__ridx];\n-  for (unsigned long __i = 1; __i < 8; __i++)\n+  unsigned long __i;\n+  for (__i = 1; __i < 8; __i++)\n     {\n       if (__u.__uh[__i] < __rmin)\n \t{"}, {"sha": "6d64e5dcbac36a93e5c36eacf80f6fb7a8d118ac", "filename": "gcc/testsuite/gcc.target/powerpc/pr104239-3.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fd5b0488ad5e4f29b65238e06a2d65b7de120235/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr104239-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fd5b0488ad5e4f29b65238e06a2d65b7de120235/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr104239-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fpowerpc%2Fpr104239-3.c?ref=fd5b0488ad5e4f29b65238e06a2d65b7de120235", "patch": "@@ -0,0 +1,8 @@\n+/* PR target/104239 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mdejagnu-cpu=power8 -DNO_WARN_X86_INTRINSICS -std=c89\" } */\n+/* { dg-require-effective-target powerpc_p8vector_ok } */\n+\n+#include <x86intrin.h>\n+\n+int i;"}]}