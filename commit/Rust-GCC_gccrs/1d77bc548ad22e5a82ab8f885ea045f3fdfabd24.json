{"sha": "1d77bc548ad22e5a82ab8f885ea045f3fdfabd24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWQ3N2JjNTQ4YWQyMmU1YTgyYWI4Zjg4NWVhMDQ1ZjNmZGZhYmQyNA==", "commit": {"author": {"name": "Veres Lajos", "email": "vlajos@gmail.com", "date": "2013-07-04T21:07:44Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2013-07-04T21:07:44Z"}, "message": "codecvt_members.cc: Fix typo.\n\n2013-07-04  Veres Lajos  <vlajos@gmail.com>\n\t    Jonathan Wakely  <jwakely.gcc@gmail.com>\n\n\t* config/locale/generic/codecvt_members.cc: Fix typo.\n\t* configure.host: Likewise.\n\t* doc/html/manual/policy_data_structures_design.html: Likewise.\n\t* doc/xml/manual/policy_data_structures.xml: Likewise.\n\t* include/bits/hashtable.h: Likewise.\n\t* include/bits/random.h: Likewise.\n\t* include/profile/impl/profiler_trace.h: Likewise.\n\t* testsuite/23_containers/deque/cons/2.cc: Likewise.\n\t* testsuite/23_containers/deque/debug/shrink_to_fit.cc: Likewise.\n\t* testsuite/ext/pb_ds/example/basic_multimap.cc: Likewise.\n\t* testsuite/performance/23_containers/insert_erase/41975.cc: Likewise.\n\nCo-Authored-By: Jonathan Wakely <jwakely.gcc@gmail.com>\n\nFrom-SVN: r200681", "tree": {"sha": "fc6531c9a6079e2cf11d574aeb567dcff78f6a5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc6531c9a6079e2cf11d574aeb567dcff78f6a5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/comments", "author": {"login": "vlajos", "id": 3994645, "node_id": "MDQ6VXNlcjM5OTQ2NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/3994645?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vlajos", "html_url": "https://github.com/vlajos", "followers_url": "https://api.github.com/users/vlajos/followers", "following_url": "https://api.github.com/users/vlajos/following{/other_user}", "gists_url": "https://api.github.com/users/vlajos/gists{/gist_id}", "starred_url": "https://api.github.com/users/vlajos/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vlajos/subscriptions", "organizations_url": "https://api.github.com/users/vlajos/orgs", "repos_url": "https://api.github.com/users/vlajos/repos", "events_url": "https://api.github.com/users/vlajos/events{/privacy}", "received_events_url": "https://api.github.com/users/vlajos/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1eb497f6177da39809f9098133a414e75f2e9e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1eb497f6177da39809f9098133a414e75f2e9e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1eb497f6177da39809f9098133a414e75f2e9e5"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "8d864d927f218f4f52d908e1ccc8b28aa03680a0", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1d77bc548ad22e5a82ab8f885ea045f3fdfabd24", "patch": "@@ -1,3 +1,18 @@\n+2013-07-04  Veres Lajos  <vlajos@gmail.com>\n+\t    Jonathan Wakely  <jwakely.gcc@gmail.com>\n+\n+\t* config/locale/generic/codecvt_members.cc: Fix typo.\n+\t* configure.host: Likewise.\n+\t* doc/html/manual/policy_data_structures_design.html: Likewise.\n+\t* doc/xml/manual/policy_data_structures.xml: Likewise.\n+\t* include/bits/hashtable.h: Likewise.\n+\t* include/bits/random.h: Likewise.\n+\t* include/profile/impl/profiler_trace.h: Likewise.\n+\t* testsuite/23_containers/deque/cons/2.cc: Likewise.\n+\t* testsuite/23_containers/deque/debug/shrink_to_fit.cc: Likewise.\n+\t* testsuite/ext/pb_ds/example/basic_multimap.cc: Likewise.\n+\t* testsuite/performance/23_containers/insert_erase/41975.cc: Likewise.\n+\n 2013-07-04  Ray Chason  <chasonr@newsguy.com>\n \t    Paolo Carlini  <paolo.carlini@oracle.com>\n "}, {"sha": "75929a8821afa58fac85457bf0b26764066e720c", "filename": "libstdc++-v3/config/locale/generic/codecvt_members.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fcodecvt_members.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fcodecvt_members.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Flocale%2Fgeneric%2Fcodecvt_members.cc?ref=1d77bc548ad22e5a82ab8f885ea045f3fdfabd24", "patch": "@@ -112,7 +112,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tintern_type*& __to_next) const\n   {\n     result __ret = ok;\n-    // This temporary state object is neccessary so __state won't be modified\n+    // This temporary state object is necessary so __state won't be modified\n     // if [__from, __from_end) is a partial multibyte character.\n     state_type __tmp_state(__state);\n "}, {"sha": "c1684543ca9fabb2ec4bafc96defd0c765af0d09", "filename": "libstdc++-v3/configure.host", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.host?ref=1d77bc548ad22e5a82ab8f885ea045f3fdfabd24", "patch": "@@ -66,7 +66,7 @@\n #                          (defaults to empty in acinclude.m4)\n #\n #   port_specific_symbol_files\n-#                          whitespace-seperated list of files containing\n+#                          whitespace-separated list of files containing\n #                          additional symbols to export from the shared\n #                          library, when symbol versioning is in use\n #"}, {"sha": "0699838a370ebace47407d943ad15a00de6ad1a7", "filename": "libstdc++-v3/doc/html/manual/policy_data_structures_design.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_data_structures_design.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_data_structures_design.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fhtml%2Fmanual%2Fpolicy_data_structures_design.html?ref=1d77bc548ad22e5a82ab8f885ea045f3fdfabd24", "patch": "@@ -862,7 +862,7 @@\n \t<code class=\"classname\">reverse_iterator</code> and <code class=\"classname\">rbegin</code>), and different\n \texception and invalidation guarantees.</p></div><div class=\"section\"><div class=\"titlepage\"><div><div><h5 class=\"title\"><a id=\"container.tree.details\"></a>Details</h5></div></div></div><div class=\"section\"><div class=\"titlepage\"><div><div><h6 class=\"title\"><a id=\"container.tree.node\"></a>Node Invariants</h6></div></div></div><p>Consider the two trees in the graphic below, labels A and B. The first\n \t  is a tree of floats; the second is a tree of pairs, each\n-\t  signifying a geometric line interval. Each element in a tree is refered to as a node of the tree. Of course, each of\n+\t  signifying a geometric line interval. Each element in a tree is referred to as a node of the tree. Of course, each of\n \t  these trees can support the usual queries: the first can easily\n \t  search for <code class=\"classname\">0.4</code>; the second can easily search for\n \t  <code class=\"classname\">std::make_pair(10, 41)</code>.</p><p>Each of these trees can efficiently support other queries."}, {"sha": "4de8236d97fc905c9c8bca8cdb92ccb4d4e49bff", "filename": "libstdc++-v3/doc/xml/manual/policy_data_structures.xml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fpolicy_data_structures.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fpolicy_data_structures.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fpolicy_data_structures.xml?ref=1d77bc548ad22e5a82ab8f885ea045f3fdfabd24", "patch": "@@ -3883,7 +3883,7 @@\n \n \t  <para>Consider the two trees in the graphic below, labels A and B. The first\n \t  is a tree of floats; the second is a tree of pairs, each\n-\t  signifying a geometric line interval. Each element in a tree is refered to as a node of the tree. Of course, each of\n+\t  signifying a geometric line interval. Each element in a tree is referred to as a node of the tree. Of course, each of\n \t  these trees can support the usual queries: the first can easily\n \t  search for <classname>0.4</classname>; the second can easily search for\n \t  <classname>std::make_pair(10, 41)</classname>.</para>"}, {"sha": "4c553ef683a71fc145b883fe41c3c62a14b78ef3", "filename": "libstdc++-v3/include/bits/hashtable.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fhashtable.h?ref=1d77bc548ad22e5a82ab8f885ea045f3fdfabd24", "patch": "@@ -1713,7 +1713,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n \t  this->_M_store_code(__node, __code);\n \n-\t  // Always insert at the begining of the bucket.\n+\t  // Always insert at the beginning of the bucket.\n \t  _M_insert_bucket_begin(__bkt, __node);\n \t  ++_M_element_count;\n \t  return iterator(__node);"}, {"sha": "74ef144300042eb1212c0c6d056779a68f002ffd", "filename": "libstdc++-v3/include/bits/random.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h?ref=1d77bc548ad22e5a82ab8f885ea045f3fdfabd24", "patch": "@@ -3333,7 +3333,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     };\n \n   /**\n-   * @brief Return true if two Fisher f distributions are diferent.\n+   * @brief Return true if two Fisher f distributions are different.\n    */\n   template<typename _RealType>\n     inline bool"}, {"sha": "f7f2216ebb1d1e9d79ad0c0564df0e961ca053d1", "filename": "libstdc++-v3/include/profile/impl/profiler_trace.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_trace.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_trace.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprofile%2Fimpl%2Fprofiler_trace.h?ref=1d77bc548ad22e5a82ab8f885ea045f3fdfabd24", "patch": "@@ -283,7 +283,7 @@ namespace __gnu_profile\n     \n \t  if (__stack_it == __stack_table.end())\n \t    {\n-\t      // First occurence of this call context.\n+\t      // First occurrence of this call context.\n \t      if (__max_mem() == 0 || __stack_table_byte_size < __max_mem()) \n \t\t{\n \t\t  __stack_table_byte_size "}, {"sha": "e90d7b37e88bd41a89c292a8f1e62fc658844dc1", "filename": "libstdc++-v3/testsuite/23_containers/deque/cons/2.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fcons%2F2.cc?ref=1d77bc548ad22e5a82ab8f885ea045f3fdfabd24", "patch": "@@ -195,7 +195,7 @@ copyConstructorCheck()\n // @fn fillConstructorCheck()\n // This test explicitly verifies the basic fill constructor.  Like the default\n // constructor, later tests depend on the fill constructor working correctly.\n-// That means this explicit test should preceed the later tests so the error\n+// That means this explicit test should precede the later tests so the error\n // message given on assertion failure can be more helpful n tracking the\n // problem.\n // "}, {"sha": "6c097d657dfb9251e82d3e51988b7271a7ee4d89", "filename": "libstdc++-v3/testsuite/23_containers/deque/debug/shrink_to_fit.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fshrink_to_fit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fshrink_to_fit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fdeque%2Fdebug%2Fshrink_to_fit.cc?ref=1d77bc548ad22e5a82ab8f885ea045f3fdfabd24", "patch": "@@ -25,7 +25,7 @@ void test01()\n {\n   using std::deque;\n   deque<int> d;\n-  // Lets generate a hole at the begining of the deque:\n+  // Let's generate a hole at the beginning of the deque:\n   d.push_back(0);\n   d.push_back(1);\n   d.pop_front();"}, {"sha": "b0e8ce409f737a29fb35bd9ae5fba50ccfa2ebdc", "filename": "libstdc++-v3/testsuite/ext/pb_ds/example/basic_multimap.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fbasic_multimap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fbasic_multimap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fext%2Fpb_ds%2Fexample%2Fbasic_multimap.cc?ref=1d77bc548ad22e5a82ab8f885ea045f3fdfabd24", "patch": "@@ -127,7 +127,7 @@ int main()\n   assert(it != acc.end());\n   assert(it->second.size() == 2);\n \n-  // The begining of the month has arrived. We need to give a 3%\n+  // The beginning of the month has arrived. We need to give a 3%\n   // interest to all accounts with a positive balance.\n \n   // First we loop over all customers."}, {"sha": "eb786dba289a33e9f7bbb5fe582666d5fa7b906a", "filename": "libstdc++-v3/testsuite/performance/23_containers/insert_erase/41975.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F23_containers%2Finsert_erase%2F41975.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d77bc548ad22e5a82ab8f885ea045f3fdfabd24/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F23_containers%2Finsert_erase%2F41975.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fperformance%2F23_containers%2Finsert_erase%2F41975.cc?ref=1d77bc548ad22e5a82ab8f885ea045f3fdfabd24", "patch": "@@ -69,7 +69,7 @@ namespace\n       start_counters(time, resource);\n \n       // This is a worst insertion use case for the current implementation as\n-      // we insert an element at the begining of the hashtable and then we\n+      // we insert an element at the beginning of the hashtable and then we\n       // insert starting at the end so that each time we need to seek up to the\n       // first bucket to find the first non-empty one.\n       us.insert(0);"}]}