{"sha": "fc475a082ce2d06a0e458438236b01f8e221772e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM0NzVhMDgyY2UyZDA2YTBlNDU4NDM4MjM2YjAxZjhlMjIxNzcyZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-10-28T14:09:12Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2009-10-28T14:09:12Z"}, "message": "[multiple changes]\n\n2009-10-28  Vincent Celier  <celier@adacore.com>\n\n\t* prj-nmsc.adb (Add_To_Or_Remove_From_List): New name of procedure\n\tAdd_If_Not_In_List to account to the fact that a directory may be\n\tremoved from the list. Only remove directory if Removed is True.\n\n2009-10-28  Gary Dismukes  <dismukes@adacore.com>\n\n\t* a-textio.ads, a-textio.ads: Put back function EOF_Char in private\n\tpart. Put back body of function EOF_Char.\n\t* a-tienau.adb: Remove with of Interfaces.C_Streams and change EOF back\n\tto EOF_Char.\n\n2009-10-28  Emmanuel Briot  <briot@adacore.com>\n\n\t* prj-tree.adb (Free): Fix memory leak.\n\n2009-10-28  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-fileio.adb: Minor reformatting\n\nFrom-SVN: r153661", "tree": {"sha": "536c92b8a7dfda324a00f8a487f10e93b999a8fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/536c92b8a7dfda324a00f8a487f10e93b999a8fd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc475a082ce2d06a0e458438236b01f8e221772e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc475a082ce2d06a0e458438236b01f8e221772e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc475a082ce2d06a0e458438236b01f8e221772e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc475a082ce2d06a0e458438236b01f8e221772e/comments", "author": null, "committer": null, "parents": [{"sha": "4d8f8ffee4fd710d6276ae702b43ed690414a85c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4d8f8ffee4fd710d6276ae702b43ed690414a85c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4d8f8ffee4fd710d6276ae702b43ed690414a85c"}], "stats": {"total": 176, "additions": 105, "deletions": 71}, "files": [{"sha": "cb88c2b51bf475b0a9375af4ce21da35621213a3", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc475a082ce2d06a0e458438236b01f8e221772e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc475a082ce2d06a0e458438236b01f8e221772e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=fc475a082ce2d06a0e458438236b01f8e221772e", "patch": "@@ -1,3 +1,24 @@\n+2009-10-28  Vincent Celier  <celier@adacore.com>\n+\n+\t* prj-nmsc.adb (Add_To_Or_Remove_From_List): New name of procedure\n+\tAdd_If_Not_In_List to account to the fact that a directory may be\n+\tremoved from the list. Only remove directory if Removed is True.\n+\n+2009-10-28  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* a-textio.ads, a-textio.ads: Put back function EOF_Char in private\n+\tpart. Put back body of function EOF_Char.\n+\t* a-tienau.adb: Remove with of Interfaces.C_Streams and change EOF back\n+\tto EOF_Char.\n+\n+2009-10-28  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* prj-tree.adb (Free): Fix memory leak.\n+\n+2009-10-28  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-fileio.adb: Minor reformatting\n+\n 2009-10-28  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gcc-interface/Make-lang.in: Update dependencies."}, {"sha": "ceacfe5b127a3659a622e88f34abce6e7601a69d", "filename": "gcc/ada/a-textio.adb", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc475a082ce2d06a0e458438236b01f8e221772e/gcc%2Fada%2Fa-textio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc475a082ce2d06a0e458438236b01f8e221772e/gcc%2Fada%2Fa-textio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.adb?ref=fc475a082ce2d06a0e458438236b01f8e221772e", "patch": "@@ -437,6 +437,15 @@ package body Ada.Text_IO is\n       return End_Of_Page (Current_In);\n    end End_Of_Page;\n \n+   --------------\n+   -- EOF_Char --\n+   --------------\n+\n+   function EOF_Char return Integer is\n+   begin\n+      return EOF;\n+   end EOF_Char;\n+\n    -----------\n    -- Flush --\n    -----------"}, {"sha": "d22b2f9c635a9f6fe530b1b7d6d1db5632e9c920", "filename": "gcc/ada/a-textio.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc475a082ce2d06a0e458438236b01f8e221772e/gcc%2Fada%2Fa-textio.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc475a082ce2d06a0e458438236b01f8e221772e/gcc%2Fada%2Fa-textio.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-textio.ads?ref=fc475a082ce2d06a0e458438236b01f8e221772e", "patch": "@@ -458,6 +458,12 @@ private\n    Current_Err  : aliased File_Type := Standard_Err;\n    --  Current files\n \n+   function EOF_Char return Integer;\n+   --  Returns the system-specific character indicating the end of a text file.\n+   --  This is exported for use by child packages such as Enumeration_Aux to\n+   --  eliminate their needing to depend directly on Interfaces.C_Streams,\n+   --  which is not available in certain target environments (such as AAMP).\n+\n    procedure Initialize_Standard_Files;\n    --  Initializes the file control blocks for the standard files. Called from\n    --  the elaboration routine for this package, and from Reset_Standard_Files"}, {"sha": "f0c1800f9e7c2710b369afbfe983cb45646797ec", "filename": "gcc/ada/a-tienau.adb", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc475a082ce2d06a0e458438236b01f8e221772e/gcc%2Fada%2Fa-tienau.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc475a082ce2d06a0e458438236b01f8e221772e/gcc%2Fada%2Fa-tienau.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-tienau.adb?ref=fc475a082ce2d06a0e458438236b01f8e221772e", "patch": "@@ -32,8 +32,6 @@\n with Ada.Text_IO.Generic_Aux; use Ada.Text_IO.Generic_Aux;\n with Ada.Characters.Handling; use Ada.Characters.Handling;\n \n-with Interfaces.C_Streams;    use Interfaces.C_Streams;\n-\n --  Note: this package does not yet deal properly with wide characters ???\n \n package body Ada.Text_IO.Enumeration_Aux is\n@@ -100,7 +98,7 @@ package body Ada.Text_IO.Enumeration_Aux is\n             Store_Char (File, Character'Pos (To_Upper (C)), Buf, Buflen);\n \n             ch := Getc (File);\n-            exit when ch = EOF;\n+            exit when ch = EOF_Char;\n             C := Character'Val (ch);\n \n             exit when not Is_Letter (C)"}, {"sha": "5e76bce58ac138903603224436ff9fe75717ca59", "filename": "gcc/ada/prj-nmsc.adb", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc475a082ce2d06a0e458438236b01f8e221772e/gcc%2Fada%2Fprj-nmsc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc475a082ce2d06a0e458438236b01f8e221772e/gcc%2Fada%2Fprj-nmsc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-nmsc.adb?ref=fc475a082ce2d06a0e458438236b01f8e221772e", "patch": "@@ -4708,21 +4708,22 @@ package body Prj.Nmsc is\n       is\n          Directory : constant String := Get_Name_String (From);\n \n-         procedure Add_If_Not_In_List\n+         procedure Add_To_Or_Remove_From_List\n            (Path_Id         : Name_Id;\n             Display_Path_Id : Name_Id);\n-         --  Add the directory Path_Id to the list of source_dirs if not\n-         --  already in the list.\n+         --  When Removed = False, the directory Path_Id to the list of\n+         --  source_dirs if not already in the list. When Removed = True,\n+         --  removed directory Path_Id if in the list.\n \n          procedure Recursive_Find_Dirs (Path : Name_Id);\n          --  Find all the subdirectories (recursively) of Path and add them\n          --  to the list of source directories of the project.\n \n-         ------------------------\n-         -- Add_If_Not_In_List --\n-         ------------------------\n+         --------------------------------\n+         -- Add_To_Or_Remove_From_List --\n+         --------------------------------\n \n-         procedure Add_If_Not_In_List\n+         procedure Add_To_Or_Remove_From_List\n            (Path_Id         : Name_Id;\n             Display_Path_Id : Name_Id)\n          is\n@@ -4794,7 +4795,7 @@ package body Prj.Nmsc is\n                Data.Tree.Number_Lists.Table (Last_Src_Dir_Rank) :=\n                  (Number => Rank, Next => No_Number_List);\n \n-            elsif List /= Nil_String then\n+            elsif Removed and then List /= Nil_String then\n \n                --  Remove source dir, if present\n \n@@ -4811,7 +4812,7 @@ package body Prj.Nmsc is\n                     Data.Tree.Number_Lists.Table (Rank_List).Next;\n                end if;\n             end if;\n-         end Add_If_Not_In_List;\n+         end Add_To_Or_Remove_From_List;\n \n          -------------------------\n          -- Recursive_Find_Dirs --\n@@ -4857,7 +4858,7 @@ package body Prj.Nmsc is\n                end if;\n             end if;\n \n-            Add_If_Not_In_List\n+            Add_To_Or_Remove_From_List\n               (Path_Id         => Canonical_Path,\n                Display_Path_Id => Non_Canonical_Path);\n \n@@ -5038,7 +5039,8 @@ package body Prj.Nmsc is\n                                  Directory      =>\n                                    Get_Name_String (Project.Directory.Name),\n                                  Resolve_Links  => Opt.Follow_Links_For_Dirs,\n-                                 Case_Sensitive => True);\n+                                 Case_Sensitive => True) &\n+                              Directory_Separator;\n \n                      Last_Path         : constant Natural :=\n                                            Compute_Directory_Last (Path);\n@@ -5062,7 +5064,7 @@ package body Prj.Nmsc is\n                           (Display_Path'First .. Last_Display_Path));\n                      Display_Path_Id := Name_Find;\n \n-                     Add_If_Not_In_List\n+                     Add_To_Or_Remove_From_List\n                        (Path_Id         => Path_Id,\n                         Display_Path_Id => Display_Path_Id);\n                   end;"}, {"sha": "df6e5acb6cf750799f9f850c968ef10a0d769468", "filename": "gcc/ada/prj-tree.adb", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc475a082ce2d06a0e458438236b01f8e221772e/gcc%2Fada%2Fprj-tree.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc475a082ce2d06a0e458438236b01f8e221772e/gcc%2Fada%2Fprj-tree.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-tree.adb?ref=fc475a082ce2d06a0e458438236b01f8e221772e", "patch": "@@ -23,10 +23,11 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n-with Ada.Unchecked_Deallocation;\n with Osint;   use Osint;\n with Prj.Err;\n \n+with Ada.Unchecked_Deallocation;\n+\n package body Prj.Tree is\n \n    Node_With_Comments : constant array (Project_Node_Kind) of Boolean :=\n@@ -1000,6 +1001,7 @@ package body Prj.Tree is\n       if Proj /= null then\n          Project_Node_Table.Free (Proj.Project_Nodes);\n          Projects_Htable.Reset (Proj.Projects_HT);\n+         Name_To_Name_HTable.Reset (Proj.External_References);\n          Free (Proj.Project_Path);\n          Unchecked_Free (Proj);\n       end if;"}, {"sha": "317a97ae8aae733424a75e6663ed60038ccbdeef", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 51, "deletions": 55, "changes": 106, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc475a082ce2d06a0e458438236b01f8e221772e/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc475a082ce2d06a0e458438236b01f8e221772e/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=fc475a082ce2d06a0e458438236b01f8e221772e", "patch": "@@ -223,15 +223,13 @@ package body System.File_IO is\n \n       --  Sever the association between the given file and its associated\n       --  external file. The given file is left closed. Do not perform system\n-      --  closes on the standard input, output and error files and also do\n-      --  not attempt to close a stream that does not exist (signalled by a\n-      --  null stream value -- happens in some error situations).\n+      --  closes on the standard input, output and error files and also do not\n+      --  attempt to close a stream that does not exist (signalled by a null\n+      --  stream value -- happens in some error situations).\n \n-      if not File.Is_System_File\n-        and then File.Stream /= NULL_Stream\n-      then\n-         --  Do not do an fclose if this is a shared file and there is\n-         --  at least one other instance of the stream that is open.\n+      if not File.Is_System_File and then File.Stream /= NULL_Stream then\n+         --  Do not do an fclose if this is a shared file and there is at least\n+         --  one other instance of the stream that is open.\n \n          if File.Shared_Status = Yes then\n             declare\n@@ -240,9 +238,7 @@ package body System.File_IO is\n             begin\n                P := Open_Files;\n                while P /= null loop\n-                  if P /= File\n-                    and then File.Stream = P.Stream\n-                  then\n+                  if P /= File and then File.Stream = P.Stream then\n                      Dup_Strm := True;\n                      exit;\n                   end if;\n@@ -314,9 +310,9 @@ package body System.File_IO is\n       begin\n          Close (File_Ptr);\n \n-         --  Now unlink the external file. Note that we use the full name\n-         --  in this unlink, because the working directory may have changed\n-         --  since we did the open, and we want to unlink the right file!\n+         --  Now unlink the external file. Note that we use the full name in\n+         --  this unlink, because the working directory may have changed since\n+         --  we did the open, and we want to unlink the right file!\n \n          if unlink (Filename'Address) = -1 then\n             raise Use_Error;\n@@ -369,8 +365,8 @@ package body System.File_IO is\n \n       SSL.Lock_Task.all;\n \n-      --  First close all open files (the slightly complex form of this loop\n-      --  is required because Close as a side effect nulls out its argument)\n+      --  First close all open files (the slightly complex form of this loop is\n+      --  required because Close as a side effect nulls out its argument).\n \n       Fptr1 := Open_Files;\n       while Fptr1 /= null loop\n@@ -379,9 +375,9 @@ package body System.File_IO is\n          Fptr1 := Fptr2;\n       end loop;\n \n-      --  Now unlink all temporary files. We do not bother to free the\n-      --  blocks because we are just about to terminate the program. We\n-      --  also ignore any errors while attempting these unlink operations.\n+      --  Now unlink all temporary files. We do not bother to free the blocks\n+      --  because we are just about to terminate the program. We also ignore\n+      --  any errors while attempting these unlink operations.\n \n       while Temp_Files /= null loop\n          Discard := unlink (Temp_Files.Name'Address);\n@@ -429,20 +425,20 @@ package body System.File_IO is\n    --  you can reset to earlier points in the file. The caller must use the\n    --  Append_Set routine to deal with the necessary positioning.\n \n-   --  Note: in several cases, the fopen mode used allows reading and\n-   --  writing, but the setting of the Ada mode is more restrictive. For\n-   --  instance, Create in In_File mode uses \"w+\" which allows writing,\n-   --  but the Ada mode In_File will cause any write operations to be\n-   --  rejected with Mode_Error in any case.\n+   --  Note: in several cases, the fopen mode used allows reading and writing,\n+   --  but the setting of the Ada mode is more restrictive. For instance,\n+   --  Create in In_File mode uses \"w+\" which allows writing, but the Ada mode\n+   --  In_File will cause any write operations to be rejected with Mode_Error\n+   --  in any case.\n \n-   --  Note: for the Out_File/Open cases for other than the Direct_IO case,\n-   --  an initial call will be made by the caller to first open the file in\n-   --  \"r\" mode to be sure that it exists. The real open, in \"w\" mode, will\n-   --  then destroy this file. This is peculiar, but that's what Ada semantics\n-   --  require and the ACVT tests insist on!\n+   --  Note: for the Out_File/Open cases for other than the Direct_IO case, an\n+   --  initial call will be made by the caller to first open the file in \"r\"\n+   --  mode to be sure that it exists. The real open, in \"w\" mode, will then\n+   --  destroy this file. This is peculiar, but that's what Ada semantics\n+   --  require and the ACATS tests insist on!\n \n-   --  If text file translation is required, then either b or t is\n-   --  added to the mode, depending on the setting of Text.\n+   --  If text file translation is required, then either \"b\" or \"t\" is appended\n+   --  to the mode, depending on the setting of Text.\n \n    procedure Fopen_Mode\n      (Mode    : File_Mode;\n@@ -591,11 +587,9 @@ package body System.File_IO is\n       Keyword : String;\n       Start   : out Natural;\n       Stop    : out Natural)\n-  is\n+   is\n       Klen : constant Integer := Keyword'Length;\n \n-   --  Start of processing for Form_Parameter\n-\n    begin\n       for J in Form'First + Klen .. Form'Last - 1 loop\n          if Form (J) = '='\n@@ -661,6 +655,7 @@ package body System.File_IO is\n \n    begin\n       status := setvbuf (File.Stream, Null_Address, IOLBF, Line_Siz);\n+      --  No error checking???\n    end Make_Line_Buffered;\n \n    ---------------------\n@@ -673,6 +668,7 @@ package body System.File_IO is\n \n    begin\n       status := setvbuf (File.Stream, Null_Address, IONBF, 0);\n+      --  No error checking???\n    end Make_Unbuffered;\n \n    ----------\n@@ -722,7 +718,7 @@ package body System.File_IO is\n \n       procedure Tmp_Name (Buffer : Address);\n       pragma Import (C, Tmp_Name, \"__gnat_tmp_name\");\n-      --  set buffer (a String address) with a temporary filename\n+      --  Set buffer (a String address) with a temporary filename\n \n       Stream : FILEs := C_Stream;\n       --  Stream which we open in response to this request\n@@ -742,9 +738,9 @@ package body System.File_IO is\n       --  Indicates temporary file case\n \n       Namelen : constant Integer := max_path_len;\n-      --  Length required for file name, not including final ASCII.NUL\n-      --  Note that we used to reference L_tmpnam here, which is not\n-      --  reliable since __gnat_tmp_name does not always use tmpnam.\n+      --  Length required for file name, not including final ASCII.NUL.\n+      --  Note that we used to reference L_tmpnam here, which is not reliable\n+      --  since __gnat_tmp_name does not always use tmpnam.\n \n       Namestr : aliased String (1 .. Namelen + 1);\n       --  Name as given or temporary file name with ASCII.NUL appended\n@@ -900,7 +896,7 @@ package body System.File_IO is\n \n          --  Fullname is generated by calling system's full_name. The problem\n          --  is, full_name does nothing about the casing, so a file name\n-         --  comparison may generally speaking not be valid on non-case\n+         --  comparison may generally speaking not be valid on non-case-\n          --  sensitive systems, and in particular we get unexpected failures\n          --  on Windows/Vista because of this. So we use s-casuti to force\n          --  the name to lower case.\n@@ -909,8 +905,8 @@ package body System.File_IO is\n             To_Lower (Fullname (1 .. Full_Name_Len));\n          end if;\n \n-         --  If Shared=None or Shared=Yes, then check for the existence\n-         --  of another file with exactly the same full name.\n+         --  If Shared=None or Shared=Yes, then check for the existence of\n+         --  another file with exactly the same full name.\n \n          if Shared /= No then\n             declare\n@@ -1030,8 +1026,8 @@ package body System.File_IO is\n       end if;\n \n       --  Stream has been successfully located or opened, so now we are\n-      --  committed to completing the opening of the file. Allocate block\n-      --  on heap and fill in its fields.\n+      --  committed to completing the opening of the file. Allocate block on\n+      --  heap and fill in its fields.\n \n       File_Ptr := AFCB_Allocate (Dummy_FCB);\n \n@@ -1103,9 +1099,9 @@ package body System.File_IO is\n       Reset (File_Ptr, File.Mode);\n    end Reset;\n \n-   --  The reset with a change in mode is done using freopen, and is\n-   --  not permitted except for regular files (since otherwise there\n-   --  is no name for the freopen, and in any case it seems meaningless)\n+   --  The reset with a change in mode is done using freopen, and is not\n+   --  permitted except for regular files (since otherwise there is no name for\n+   --  the freopen, and in any case it seems meaningless).\n \n    procedure Reset (File_Ptr : access AFCB_Ptr; Mode : File_Mode) is\n       File   : AFCB_Ptr renames File_Ptr.all;\n@@ -1126,17 +1122,17 @@ package body System.File_IO is\n       then\n          raise Use_Error;\n \n-      --  For In_File or Inout_File for a regular file, we can just do a\n-      --  rewind if the mode is unchanged, which is more efficient than\n-      --  doing a full reopen.\n+      --  For In_File or Inout_File for a regular file, we can just do a rewind\n+      --  if the mode is unchanged, which is more efficient than doing a full\n+      --  reopen.\n \n       elsif Mode = File.Mode\n         and then Mode <= Inout_File\n       then\n          rewind (File.Stream);\n \n-      --  Here the change of mode is permitted, we do it by reopening the\n-      --  file in the new mode and replacing the stream with a new stream.\n+      --  Here the change of mode is permitted, we do it by reopening the file\n+      --  in the new mode and replacing the stream with a new stream.\n \n       else\n          Fopen_Mode\n@@ -1162,10 +1158,10 @@ package body System.File_IO is\n \n    procedure Write_Buf (File : AFCB_Ptr; Buf : Address; Siz : size_t) is\n    begin\n-      --  Note: for most purposes, the Siz and 1 parameters in the fwrite\n-      --  call could be reversed, but on VMS, this is a better choice, since\n-      --  for some file formats, reversing the parameters results in records\n-      --  of one byte each.\n+      --  Note: for most purposes, the Siz and 1 parameters in the fwrite call\n+      --  could be reversed, but on VMS, this is a better choice, since for\n+      --  some file formats, reversing the parameters results in records of one\n+      --  byte each.\n \n       SSL.Abort_Defer.all;\n "}]}