{"sha": "6ff0cdebb1bc281ba2374f3ecdbe358c4fa74093", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmZmMGNkZWJiMWJjMjgxYmEyMzc0ZjNlY2RiZTM1OGM0ZmE3NDA5Mw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-10-31T17:16:31Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-10-31T17:16:31Z"}, "message": "[AArch64] Fix build for non-default languages\n\nThe SVE PCS support broke go, D and Ada because those languages don't\ncall TARGET_INIT_BUILTINS.  We therefore ended up trying to get the\nTYPE_MAIN_VARIANT of a null __SVBool_t.\n\nWe shouldn't really need to apply TYPE_MAIN_VARIANT there anyway,\nsince the ABI-defined types are (and need to be) their own main\nvariants.  This patch asserts for that instead.\n\n2019-10-31  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* config/aarch64/aarch64-sve-builtins.cc (register_builtin_types):\n\tAssert that the type we store in abi_vector_types is its own\n\tmain variant.\n\t(svbool_type_p): Don't apply TYPE_MAIN_VARIANT here.\n\nFrom-SVN: r277680", "tree": {"sha": "32e844c22faf6b6d96e34521ee0fce7707e521b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/32e844c22faf6b6d96e34521ee0fce7707e521b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ff0cdebb1bc281ba2374f3ecdbe358c4fa74093", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ff0cdebb1bc281ba2374f3ecdbe358c4fa74093", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ff0cdebb1bc281ba2374f3ecdbe358c4fa74093", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ff0cdebb1bc281ba2374f3ecdbe358c4fa74093/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aaa80941e042d18dcd5add6e7bb28cb392767a39", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aaa80941e042d18dcd5add6e7bb28cb392767a39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aaa80941e042d18dcd5add6e7bb28cb392767a39"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "affa74cdd255084b58ea8305a1f6059a144736dd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ff0cdebb1bc281ba2374f3ecdbe358c4fa74093/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ff0cdebb1bc281ba2374f3ecdbe358c4fa74093/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ff0cdebb1bc281ba2374f3ecdbe358c4fa74093", "patch": "@@ -1,3 +1,10 @@\n+2019-10-31  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* config/aarch64/aarch64-sve-builtins.cc (register_builtin_types):\n+\tAssert that the type we store in abi_vector_types is its own\n+\tmain variant.\n+\t(svbool_type_p): Don't apply TYPE_MAIN_VARIANT here.\n+\n 2019-10-31  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* config/arm/arm.c (arm_legitimize_address): Don't form negative offsets"}, {"sha": "424f64adfefeefe55c729c7cfbf87020f7bb1d0b", "filename": "gcc/config/aarch64/aarch64-sve-builtins.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ff0cdebb1bc281ba2374f3ecdbe358c4fa74093/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ff0cdebb1bc281ba2374f3ecdbe358c4fa74093/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve-builtins.cc?ref=6ff0cdebb1bc281ba2374f3ecdbe358c4fa74093", "patch": "@@ -2993,6 +2993,7 @@ register_builtin_types ()\n \t\t\t\t   BITS_PER_SVE_VECTOR));\n \t}\n       vectype = build_distinct_type_copy (vectype);\n+      gcc_assert (vectype == TYPE_MAIN_VARIANT (vectype));\n       SET_TYPE_STRUCTURAL_EQUALITY (vectype);\n       TYPE_ARTIFICIAL (vectype) = 1;\n       abi_vector_types[i] = vectype;\n@@ -3235,8 +3236,7 @@ bool\n svbool_type_p (const_tree type)\n {\n   tree abi_type = abi_vector_types[VECTOR_TYPE_svbool_t];\n-  return (type != error_mark_node\n-\t  && TYPE_MAIN_VARIANT (type) == TYPE_MAIN_VARIANT (abi_type));\n+  return type != error_mark_node && TYPE_MAIN_VARIANT (type) == abi_type;\n }\n \n /* If TYPE is a built-in type defined by the SVE ABI, return the mangled name,"}]}