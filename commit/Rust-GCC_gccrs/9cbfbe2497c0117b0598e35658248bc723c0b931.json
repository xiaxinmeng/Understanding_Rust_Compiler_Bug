{"sha": "9cbfbe2497c0117b0598e35658248bc723c0b931", "node_id": "C_kwDOANBUbNoAKDljYmZiZTI0OTdjMDExN2IwNTk4ZTM1NjU4MjQ4YmM3MjNjMGI5MzE", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-01-27T15:01:55Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-01-27T17:44:47Z"}, "message": "contrib: Put gcc-descr and gcc-undescr to file.\n\ncontrib/ChangeLog:\n\n\t* git-descr.sh: New file.\n\t* git-undescr.sh: New file.\n\tSupport optional arguments --long, --short and default\n\tto 14 characters of git hash.\n\t* gcc-git-customization.sh: Use the created files.\n\nCo-Authored-By: Martin Jambor <mjambor@suse.cz>", "tree": {"sha": "2b369a3f9b166db5aa95ea2a9aa4c35fa47dde7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b369a3f9b166db5aa95ea2a9aa4c35fa47dde7e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9cbfbe2497c0117b0598e35658248bc723c0b931", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cbfbe2497c0117b0598e35658248bc723c0b931", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cbfbe2497c0117b0598e35658248bc723c0b931", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cbfbe2497c0117b0598e35658248bc723c0b931/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dec8d0e5fa00ceb2ded78b8a3eba8976d860a90e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dec8d0e5fa00ceb2ded78b8a3eba8976d860a90e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dec8d0e5fa00ceb2ded78b8a3eba8976d860a90e"}], "stats": {"total": 54, "additions": 52, "deletions": 2}, "files": [{"sha": "b24948d9874cc515efdfcd3e737085f0d26eb517", "filename": "contrib/gcc-git-customization.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cbfbe2497c0117b0598e35658248bc723c0b931/contrib%2Fgcc-git-customization.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cbfbe2497c0117b0598e35658248bc723c0b931/contrib%2Fgcc-git-customization.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc-git-customization.sh?ref=9cbfbe2497c0117b0598e35658248bc723c0b931", "patch": "@@ -22,8 +22,8 @@ git config alias.svn-rev '!f() { rev=$1; shift; git log --all --grep=\"^From-SVN:\n \n # Add git commands to convert git commit to monotonically increasing revision number\n # and vice versa\n-git config alias.gcc-descr \\!\"f() { if test \\${1:-no} = --full; then c=\\${2:-master}; r=\\$(git describe --all --abbrev=40 --match 'basepoints/gcc-[0-9]*' \\$c | sed -n 's,^\\\\(tags/\\\\)\\\\?basepoints/gcc-,r,p'); expr match \\${r:-no} '^r[0-9]\\\\+\\$' >/dev/null && r=\\${r}-0-g\\$(git rev-parse \\${2:-master}); else c=\\${1:-master}; r=\\$(git describe --all --match 'basepoints/gcc-[0-9]*' \\$c | sed -n 's,^\\\\(tags/\\\\)\\\\?basepoints/gcc-\\\\([0-9]\\\\+\\\\)-\\\\([0-9]\\\\+\\\\)-g[0-9a-f]*\\$,r\\\\2-\\\\3,p;s,^\\\\(tags/\\\\)\\\\?basepoints/gcc-\\\\([0-9]\\\\+\\\\)\\$,r\\\\2-0,p'); fi; if test -n \\$r; then o=\\$(git config --get gcc-config.upstream); rr=\\$(echo \\$r | sed -n 's,^r\\\\([0-9]\\\\+\\\\)-[0-9]\\\\+\\\\(-g[0-9a-f]\\\\+\\\\)\\\\?\\$,\\\\1,p'); if git rev-parse --verify --quiet \\${o:-origin}/releases/gcc-\\$rr >/dev/null; then m=releases/gcc-\\$rr; else m=master; fi; git merge-base --is-ancestor \\$c \\${o:-origin}/\\$m && \\echo \\${r}; fi; }; f\"\n-git config alias.gcc-undescr \\!\"f() { o=\\$(git config --get gcc-config.upstream); r=\\$(echo \\$1 | sed -n 's,^r\\\\([0-9]\\\\+\\\\)-[0-9]\\\\+\\$,\\\\1,p'); n=\\$(echo \\$1 | sed -n 's,^r[0-9]\\\\+-\\\\([0-9]\\\\+\\\\)\\$,\\\\1,p'); test -z \\$r && echo Invalid id \\$1 && exit 1; h=\\$(git rev-parse --verify --quiet \\${o:-origin}/releases/gcc-\\$r); test -z \\$h && h=\\$(git rev-parse --verify --quiet \\${o:-origin}/master); p=\\$(git describe --all --match 'basepoints/gcc-'\\$r \\$h | sed -n 's,^\\\\(tags/\\\\)\\\\?basepoints/gcc-[0-9]\\\\+-\\\\([0-9]\\\\+\\\\)-g[0-9a-f]*\\$,\\\\2,p;s,^\\\\(tags/\\\\)\\\\?basepoints/gcc-[0-9]\\\\+\\$,0,p'); git rev-parse --verify \\$h~\\$(expr \\$p - \\$n); }; f\"\n+git config alias.gcc-descr '!f() { \"`git rev-parse --show-toplevel`/contrib/git-descr.sh\" $@; } ; f'\n+git config alias.gcc-undescr '!f() { \"`git rev-parse --show-toplevel`/contrib/git-undescr.sh\" $@; } ; f'\n \n git config alias.gcc-verify '!f() { \"`git rev-parse --show-toplevel`/contrib/gcc-changelog/git_check_commit.py\" $@; } ; f'\n git config alias.gcc-backport '!f() { \"`git rev-parse --show-toplevel`/contrib/git-backport.py\" $@; } ; f'"}, {"sha": "eb258148a66e60d85b6746b68f907cf6be0195f2", "filename": "contrib/git-descr.sh", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cbfbe2497c0117b0598e35658248bc723c0b931/contrib%2Fgit-descr.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cbfbe2497c0117b0598e35658248bc723c0b931/contrib%2Fgit-descr.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgit-descr.sh?ref=9cbfbe2497c0117b0598e35658248bc723c0b931", "patch": "@@ -0,0 +1,37 @@\n+#!/bin/sh\n+\n+# Script to describe a GCC revision based on git hash\n+\n+short=no\n+long=no\n+c=master\n+\n+for arg in \"$@\"\n+do\n+    case \"$arg\" in\n+      --short) short=yes long=no\n+\t;;\n+      --long|--full) long=yes short=no\n+\t;;\n+      *) c=$arg\n+    esac\n+done\n+\n+if test x$short = xyes; then\n+    r=$(git describe --all --match 'basepoints/gcc-[0-9]*' $c | sed -n 's,^\\(tags/\\)\\?basepoints/gcc-\\([0-9]\\+\\)-\\([0-9]\\+\\)-g[0-9a-f]*$,r\\2-\\3,p;s,^\\(tags/\\)\\?basepoints/gcc-\\([0-9]\\+\\)$,r\\2-0,p');\n+elif test x$long = xyes; then\n+    r=$(git describe --all --abbrev=40 --match 'basepoints/gcc-[0-9]*' $c | sed -n 's,^\\(tags/\\)\\?basepoints/gcc-,r,p')\n+else\n+    r=$(git describe --all --abbrev=14 --match 'basepoints/gcc-[0-9]*' $c | sed -n 's,^\\(tags/\\)\\?basepoints/gcc-,r,p');\n+    expr match ${r:-no} 'r[0-9]\\+$' >/dev/null && r=${r}-0-g$(git rev-parse $c);\n+fi;\n+if test -n $r; then\n+    o=$(git config --get gcc-config.upstream);\n+    rr=$(echo $r | sed -n 's,^r\\([0-9]\\+\\)-[0-9]\\+\\(-g[0-9a-f]\\+\\)\\?$,\\1,p');\n+    if git rev-parse --verify --quiet ${o:-origin}/releases/gcc-$rr >/dev/null; then\n+\tm=releases/gcc-$rr;\n+    else\n+\tm=master;\n+    fi;\n+    git merge-base --is-ancestor $c ${o:-origin}/$m && echo ${r};\n+fi;"}, {"sha": "7d2efe1a8e7941331fde93146e6af7dfe14542e0", "filename": "contrib/git-undescr.sh", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9cbfbe2497c0117b0598e35658248bc723c0b931/contrib%2Fgit-undescr.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9cbfbe2497c0117b0598e35658248bc723c0b931/contrib%2Fgit-undescr.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgit-undescr.sh?ref=9cbfbe2497c0117b0598e35658248bc723c0b931", "patch": "@@ -0,0 +1,13 @@\n+#!/bin/sh\n+\n+# Script to undescribe a GCC revision\n+\n+o=$(git config --get gcc-config.upstream);\n+r=$(echo $1 | sed -n 's,^r\\([0-9]\\+\\)-[0-9]\\+$,\\1,p');\n+n=$(echo $1 | sed -n 's,^r[0-9]\\+-\\([0-9]\\+\\)$,\\1,p');\n+\n+test -z $r && echo Invalid id $1 && exit 1;\n+h=$(git rev-parse --verify --quiet ${o:-origin}/releases/gcc-$r);\n+test -z $h && h=$(git rev-parse --verify --quiet ${o:-origin}/master);\n+p=$(git describe --all --match 'basepoints/gcc-'$r $h | sed -n 's,^\\(tags/\\)\\?basepoints/gcc-[0-9]\\+-\\([0-9]\\+\\)-g[0-9a-f]*$,\\2,p;s,^\\(tags/\\)\\?basepoints/gcc-[0-9]\\+$,0,p');\n+git rev-parse --verify $h~$(expr $p - $n);"}]}