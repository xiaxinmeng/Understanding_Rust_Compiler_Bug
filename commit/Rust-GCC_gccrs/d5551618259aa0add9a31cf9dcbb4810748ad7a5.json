{"sha": "d5551618259aa0add9a31cf9dcbb4810748ad7a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU1NTE2MTgyNTlhYTBhZGQ5YTMxY2Y5ZGNiYjQ4MTA3NDhhZDdhNQ==", "commit": {"author": {"name": "Daniel Kraft", "email": "d@domob.eu", "date": "2008-09-04T19:16:13Z"}, "committer": {"name": "Daniel Kraft", "email": "domob@gcc.gnu.org", "date": "2008-09-04T19:16:13Z"}, "message": "re PR fortran/37099 (Wrong results when comparing a character array to a character expression)\n\n2008-09-04  Daniel Kraft  <d@domob.eu>\n\n\t* PR fortran/37099\n\t* expr.c (simplify_const_ref): Update expression's character length\n\twhen pulling out a substring reference.\n\n2008-09-04  Daniel Kraft  <d@domob.eu>\n\n\tPR fortran/37099\n\t* gfortran.dg/string_compare_1.f90: New text.\n\t* gfortran.dg/string_compare_2.f90: New text.\n\t* gfortran.dg/string_compare_3.f90: New text.\n\nFrom-SVN: r139997", "tree": {"sha": "9cb63f458e65afa3bc35cb56ef1a431fc14452ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9cb63f458e65afa3bc35cb56ef1a431fc14452ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5551618259aa0add9a31cf9dcbb4810748ad7a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5551618259aa0add9a31cf9dcbb4810748ad7a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5551618259aa0add9a31cf9dcbb4810748ad7a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5551618259aa0add9a31cf9dcbb4810748ad7a5/comments", "author": {"login": "domob1812", "id": 4943644, "node_id": "MDQ6VXNlcjQ5NDM2NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4", "gravatar_id": "", "url": "https://api.github.com/users/domob1812", "html_url": "https://github.com/domob1812", "followers_url": "https://api.github.com/users/domob1812/followers", "following_url": "https://api.github.com/users/domob1812/following{/other_user}", "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}", "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions", "organizations_url": "https://api.github.com/users/domob1812/orgs", "repos_url": "https://api.github.com/users/domob1812/repos", "events_url": "https://api.github.com/users/domob1812/events{/privacy}", "received_events_url": "https://api.github.com/users/domob1812/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5feec5c1de0a23ba2cd8ddf98617b02c033b0b03", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5feec5c1de0a23ba2cd8ddf98617b02c033b0b03", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5feec5c1de0a23ba2cd8ddf98617b02c033b0b03"}], "stats": {"total": 131, "additions": 130, "deletions": 1}, "files": [{"sha": "23dfbdf4345acd20ab4891abb53ac834bd9a7de4", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5551618259aa0add9a31cf9dcbb4810748ad7a5/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5551618259aa0add9a31cf9dcbb4810748ad7a5/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=d5551618259aa0add9a31cf9dcbb4810748ad7a5", "patch": "@@ -1,3 +1,9 @@\n+2008-09-04  Daniel Kraft  <d@domob.eu>\n+\n+\t* PR fortran/37099\n+\t* expr.c (simplify_const_ref): Update expression's character length\n+\twhen pulling out a substring reference.\n+\n 2008-09-04  Ian Lance Taylor  <iant@google.com>\n \n \t* symbol.c (generate_isocbinding_symbol): Compare"}, {"sha": "6ff6d10c6af9ab052b05c45c71274fe94b8120db", "filename": "gcc/fortran/expr.c", "status": "modified", "additions": 34, "deletions": 1, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5551618259aa0add9a31cf9dcbb4810748ad7a5/gcc%2Ffortran%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5551618259aa0add9a31cf9dcbb4810748ad7a5/gcc%2Ffortran%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fexpr.c?ref=d5551618259aa0add9a31cf9dcbb4810748ad7a5", "patch": "@@ -1454,7 +1454,40 @@ simplify_const_ref (gfc_expr *p)\n \t\t  for (; cons; cons = cons->next)\n \t\t    {\n \t\t      cons->expr->ref = gfc_copy_ref (p->ref->next);\n-\t\t      simplify_const_ref (cons->expr);\n+\t\t      if (simplify_const_ref (cons->expr) == FAILURE)\n+\t\t\treturn FAILURE;\n+\t\t    }\n+\n+\t\t  /* If this is a CHARACTER array and we possibly took a\n+\t\t     substring out of it, update the type-spec's character\n+\t\t     length according to the first element (as all should have\n+\t\t     the same length).  */\n+\t\t  if (p->ts.type == BT_CHARACTER)\n+\t\t    {\n+\t\t      int string_len;\n+\n+\t\t      gcc_assert (p->ref->next);\n+\t\t      gcc_assert (!p->ref->next->next);\n+\t\t      gcc_assert (p->ref->next->type == REF_SUBSTRING);\n+\n+\t\t      if (p->value.constructor)\n+\t\t\t{\n+\t\t\t  const gfc_expr* first = p->value.constructor->expr;\n+\t\t\t  gcc_assert (first->expr_type == EXPR_CONSTANT);\n+\t\t\t  gcc_assert (first->ts.type == BT_CHARACTER);\n+\t\t\t  string_len = first->value.character.length;\n+\t\t\t}\n+\t\t      else\n+\t\t\tstring_len = 0;\n+\n+\t\t      if (!p->ts.cl)\n+\t\t\t{\n+\t\t\t  p->ts.cl = gfc_get_charlen ();\n+\t\t\t  p->ts.cl->next = NULL;\n+\t\t\t  p->ts.cl->length = NULL;\n+\t\t\t}\n+\t\t      gfc_free_expr (p->ts.cl->length);\n+\t\t      p->ts.cl->length = gfc_int_expr (string_len);\n \t\t    }\n \t\t}\n \t      gfc_free_ref_list (p->ref);"}, {"sha": "9be16a86dc2161906c2e30e81d417d28404ac001", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5551618259aa0add9a31cf9dcbb4810748ad7a5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5551618259aa0add9a31cf9dcbb4810748ad7a5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d5551618259aa0add9a31cf9dcbb4810748ad7a5", "patch": "@@ -1,3 +1,10 @@\n+2008-09-04  Daniel Kraft  <d@domob.eu>\n+\n+\tPR fortran/37099\n+\t* gfortran.dg/string_compare_1.f90: New text.\n+\t* gfortran.dg/string_compare_2.f90: New text.\n+\t* gfortran.dg/string_compare_3.f90: New text.\n+\n 2008-09-04  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR rtl-optimization/37243"}, {"sha": "30cf357174f467e627721bf2774f97fa12b7774c", "filename": "gcc/testsuite/gfortran.dg/string_compare_1.f90", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5551618259aa0add9a31cf9dcbb4810748ad7a5/gcc%2Ftestsuite%2Fgfortran.dg%2Fstring_compare_1.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5551618259aa0add9a31cf9dcbb4810748ad7a5/gcc%2Ftestsuite%2Fgfortran.dg%2Fstring_compare_1.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstring_compare_1.f90?ref=d5551618259aa0add9a31cf9dcbb4810748ad7a5", "patch": "@@ -0,0 +1,25 @@\n+! { dg-do run }\n+\n+! PR fortran/37099\n+! Check for correct results when comparing array-section-substrings.\n+\n+PROGRAM main\n+  IMPLICIT NONE\n+\n+  CHARACTER(*), PARAMETER :: exprs(1) = (/ 'aa' /)\n+\n+  CHARACTER(*), PARAMETER :: al1 = 'a';\n+  CHARACTER(len=LEN (al1)) :: al2 = al1;\n+\n+  LOGICAL :: tmp(1), tmp2(1)\n+\n+  tmp = (exprs(1:1)(1:1) == al1)\n+  tmp2 = (exprs(1:1)(1:1) == al2)\n+\n+  PRINT '(L1)', tmp\n+  PRINT '(L1)', tmp2\n+\n+  IF (.NOT. tmp(1) .OR. .NOT. tmp2(1)) THEN\n+    CALL abort ()\n+  END IF\n+END PROGRAM main"}, {"sha": "dc68bef2ada6335f90df4f8936c8e7cf54bea50d", "filename": "gcc/testsuite/gfortran.dg/string_compare_2.f90", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5551618259aa0add9a31cf9dcbb4810748ad7a5/gcc%2Ftestsuite%2Fgfortran.dg%2Fstring_compare_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5551618259aa0add9a31cf9dcbb4810748ad7a5/gcc%2Ftestsuite%2Fgfortran.dg%2Fstring_compare_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstring_compare_2.f90?ref=d5551618259aa0add9a31cf9dcbb4810748ad7a5", "patch": "@@ -0,0 +1,37 @@\n+! { dg-do run }\n+\n+! PR fortran/37099\n+! Check for correct results when comparing array-section-substrings.\n+\n+! This is the original test from the PR.\n+! Contributed by Dominique d'Humieres <dominiq@lps.ens.fr>\n+\n+module xparams\n+  integer,parameter :: exprbeg=100,exprend=154\n+  character(*),dimension(exprbeg:exprend),parameter :: &\n+      exprs=(/'nint()  ','log10() ','sqrt()  ','acos()  ','asin()  ',   &\n+      'atan()  ','cosh()  ','sinh()  ','tanh()  ','int()   ',           &\n+      'cos()   ','sin()   ','tan()   ','exp()   ','log()   ','abs()   ',&\n+      'delta() ','step()  ','rect()  ','max(,)  ','min(,)  ','bj0()   ',&\n+      'bj1()   ','bjn(,)  ','by0()   ','by1()   ','byn(,)  ','logb(,) ',&\n+      'erf()   ','erfc()  ','lgamma()','gamma() ','csch()  ','sech()  ',&\n+      'coth()  ','lif(,,) ','gaus()  ','sinc()  ','atan2(,)','mod(,)  ',&\n+      'nthrt(,)','ramp()  ','fbi()   ','fbiq()  ','uran(,) ','aif(,,,)',&\n+      'sgn()   ','cbrt()  ','fact()  ','somb()  ','bk0()   ','bk1()   ',&\n+      'bkn(,)  ','bbi(,,) ','bbiq(,,)'/)\n+  logical :: tmp(55,26)\n+  character(26) :: al = 'abcdefghijklmnopqrstuvwxyz'\n+end\n+\n+program pack_bug\n+  use xparams\n+    do i = 1, 1\n+      tmp(:,i) = (exprs(:)(1:1)==al(i:i))\n+      print '(55L1)', exprs(:)(1:1)=='a'\n+      print '(55L1)', tmp(:,i)\n+\n+      if (any ((exprs(:)(1:1)=='a') .neqv. tmp(:,i))) then\n+        call abort ()\n+      end if\n+    end do\n+end"}, {"sha": "46a11d3f55a70cce2e72755394c04ba2b121793f", "filename": "gcc/testsuite/gfortran.dg/string_compare_3.f90", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5551618259aa0add9a31cf9dcbb4810748ad7a5/gcc%2Ftestsuite%2Fgfortran.dg%2Fstring_compare_3.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5551618259aa0add9a31cf9dcbb4810748ad7a5/gcc%2Ftestsuite%2Fgfortran.dg%2Fstring_compare_3.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fstring_compare_3.f90?ref=d5551618259aa0add9a31cf9dcbb4810748ad7a5", "patch": "@@ -0,0 +1,21 @@\n+! { dg-do run }\n+\n+! PR fortran/37099\n+! Check for correct results when comparing array-section-substrings.\n+\n+! This is the test from comment #1 of the PR.\n+! Contributed by Dominique d'Humieres <dominiq@lps.ens.fr>\n+\n+integer, parameter :: n = 10\n+integer, parameter :: ilst(n) = (/(i,i=1,n)/)\n+character(*), parameter :: c0lst(n) = (/(char(96+i),i=1,n)/)\n+character(*), parameter :: c1lst(n) = (/(char(96+i)//'b',i=1,n)/)\n+logical :: tmp(n)\n+i = 5\n+print *, ilst(:) == i\n+print *, c0lst(:)(1:1) == char(96+i)\n+tmp = c1lst(:)(1:1) == char(96+i)\n+print *, tmp\n+print *, c1lst(:)(1:1) == 'e'\n+if (any(tmp .neqv. (c0lst(:)(1:1) == char(96+i)))) call abort()\n+end"}]}