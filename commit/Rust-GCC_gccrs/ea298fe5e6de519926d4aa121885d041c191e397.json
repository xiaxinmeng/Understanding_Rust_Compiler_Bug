{"sha": "ea298fe5e6de519926d4aa121885d041c191e397", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEyOThmZTVlNmRlNTE5OTI2ZDRhYTEyMTg4NWQwNDFjMTkxZTM5Nw==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-07-19T12:00:59Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-07-19T12:00:59Z"}, "message": "i386: Test __has_attribute (__indirect_return__)\n\nThe new indirect_return attribute is intended to mark swapcontext in\n<ucontext.h>.  Test __has_attribute (__indirect_return__) so that it\ncan be backported to GCC 8.\n\n\tPR target/86560\n\t* gcc.target/i386/pr86560-4.c: New test.\n\t* gcc.target/i386/pr86560-5.c: Likewise.\n---\n gcc/testsuite/gcc.target/i386/pr86560-4.c | 21 +++++++++++++++++++++\n gcc/testsuite/gcc.target/i386/pr86560-5.c | 21 +++++++++++++++++++++\n 2 files changed, 42 insertions(+)\n create mode 100644 gcc/testsuite/gcc.target/i386/pr86560-4.c\n create mode 100644 gcc/testsuite/gcc.target/i386/pr86560-5.c\n\ndiff --git a/gcc/testsuite/gcc.target/i386/pr86560-4.c b/gcc/testsuite/gcc.target/i386/pr86560-4.c\nnew file mode 100644\nindex 00000000000..a623e3dcbeb\n--- /dev/null\n+++ b/gcc/testsuite/gcc.target/i386/pr86560-4.c\n@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fcf-protection\" } */\n+/* { dg-final { scan-assembler-times {\\mendbr} 2 } } */\n+\n+struct ucontext;\n+\n+extern int (*bar) (struct ucontext *)\n+#ifdef __has_attribute\n+# if __has_attribute (indirect_return)\n+  __attribute__((__indirect_return__))\n+# endif\n+#endif\n+;\n+\n+extern int res;\n+\n+void\n+foo (struct ucontext *oucp)\n+{\n+  res = bar (oucp);\n+}\ndiff --git a/gcc/testsuite/gcc.target/i386/pr86560-5.c b/gcc/testsuite/gcc.target/i386/pr86560-5.c\nnew file mode 100644\nindex 00000000000..33b0f6424c2\n--- /dev/null\n+++ b/gcc/testsuite/gcc.target/i386/pr86560-5.c\n@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fcf-protection\" } */\n+/* { dg-final { scan-assembler-times {\\mendbr} 2 } } */\n+\n+struct ucontext;\n+\n+extern int (*bar) (struct ucontext *)\n+#ifdef __has_attribute\n+# if __has_attribute (__indirect_return__)\n+  __attribute__((__indirect_return__))\n+# endif\n+#endif\n+;\n+\n+extern int res;\n+\n+void\n+foo (struct ucontext *oucp)\n+{\n+  res = bar (oucp);\n+}\n-- \n2.17.1\n\nFrom-SVN: r262878", "tree": {"sha": "35f78020eb70f6e3cb8708f1495562c55af5dbcb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/35f78020eb70f6e3cb8708f1495562c55af5dbcb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea298fe5e6de519926d4aa121885d041c191e397", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea298fe5e6de519926d4aa121885d041c191e397", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea298fe5e6de519926d4aa121885d041c191e397", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea298fe5e6de519926d4aa121885d041c191e397/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "39a6a24334f95e047dcd7e0b27c2f27f6340bdc6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39a6a24334f95e047dcd7e0b27c2f27f6340bdc6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39a6a24334f95e047dcd7e0b27c2f27f6340bdc6"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "8ffc1f3f52d2316ff8d9e59b8e84871bf9ee025f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea298fe5e6de519926d4aa121885d041c191e397/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea298fe5e6de519926d4aa121885d041c191e397/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ea298fe5e6de519926d4aa121885d041c191e397", "patch": "@@ -1,3 +1,9 @@\n+2018-07-19  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/86560\n+\t* gcc.target/i386/pr86560-4.c: New test.\n+\t* gcc.target/i386/pr86560-5.c: Likewise.\n+\n 2018-07-19  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/86560"}, {"sha": "a623e3dcbebe3a9a6c252ad9ca1170b00a4baf75", "filename": "gcc/testsuite/gcc.target/i386/pr86560-4.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea298fe5e6de519926d4aa121885d041c191e397/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr86560-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea298fe5e6de519926d4aa121885d041c191e397/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr86560-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr86560-4.c?ref=ea298fe5e6de519926d4aa121885d041c191e397", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fcf-protection\" } */\n+/* { dg-final { scan-assembler-times {\\mendbr} 2 } } */\n+\n+struct ucontext;\n+\n+extern int (*bar) (struct ucontext *)\n+#ifdef __has_attribute\n+# if __has_attribute (indirect_return)\n+  __attribute__((__indirect_return__))\n+# endif\n+#endif\n+;\n+\n+extern int res;\n+\n+void\n+foo (struct ucontext *oucp)\n+{\n+  res = bar (oucp);\n+}"}, {"sha": "33b0f6424c274431163d4c781f2f15673bb27f34", "filename": "gcc/testsuite/gcc.target/i386/pr86560-5.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea298fe5e6de519926d4aa121885d041c191e397/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr86560-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea298fe5e6de519926d4aa121885d041c191e397/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr86560-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr86560-5.c?ref=ea298fe5e6de519926d4aa121885d041c191e397", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fcf-protection\" } */\n+/* { dg-final { scan-assembler-times {\\mendbr} 2 } } */\n+\n+struct ucontext;\n+\n+extern int (*bar) (struct ucontext *)\n+#ifdef __has_attribute\n+# if __has_attribute (__indirect_return__)\n+  __attribute__((__indirect_return__))\n+# endif\n+#endif\n+;\n+\n+extern int res;\n+\n+void\n+foo (struct ucontext *oucp)\n+{\n+  res = bar (oucp);\n+}"}]}