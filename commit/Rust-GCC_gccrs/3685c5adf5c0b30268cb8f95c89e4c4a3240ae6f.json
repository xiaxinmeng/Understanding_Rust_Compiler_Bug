{"sha": "3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzY4NWM1YWRmNWMwYjMwMjY4Y2I4Zjk1Yzg5ZTRjNGEzMjQwYWU2Zg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2020-04-24T11:32:10Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2020-04-24T11:32:10Z"}, "message": "introduce target fileio and require it in tests that use tmpnam\n\nSome target C libraries that aren't recognized as freestanding don't\nhave filesystem support, so calling tmpnam, fopen/open and\nremove/unlink fails to link.\n\nThis patch introduces a fileio effective target to the testsuite, and\nrequires it in the tests that call tmpnam.\n\n\nfor  gcc/testsuite/ChangeLog\n\n\t* lib/target-supports.exp (check_effective_target_fileio): New.\n\t* gcc.c-torture/execute/fprintf-2.c: Require it.\n\t* gcc.c-torture/execute/printf-2.c: Likewise.\n\t* gcc.c-torture/execute/user-printf.c: Likewise.", "tree": {"sha": "b63072d91a0b2fdcd2adce6c4fca24952dcd4abd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b63072d91a0b2fdcd2adce6c4fca24952dcd4abd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f/comments", "author": null, "committer": null, "parents": [{"sha": "c508fd07d7615443f7a62d6745779ec97514e7a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c508fd07d7615443f7a62d6745779ec97514e7a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c508fd07d7615443f7a62d6745779ec97514e7a2"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "e6b8812061debf305fdb4bc28297163caf50c53b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f", "patch": "@@ -1,3 +1,10 @@\n+2020-04-24  Alexandre Oliva <oliva@adacore.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_fileio): New.\n+\t* gcc.c-torture/execute/fprintf-2.c: Require it.\n+\t* gcc.c-torture/execute/printf-2.c: Likewise.\n+\t* gcc.c-torture/execute/user-printf.c: Likewise.\n+\n 2020-04-24  Haijian Zhang <z.zhanghaijian@huawei.com>\n \n \tPR rtl-optimization/94708"}, {"sha": "d8e19e7b2f8f51852facdae03724214ce132da84", "filename": "gcc/testsuite/gcc.c-torture/execute/fprintf-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Ffprintf-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Ffprintf-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Ffprintf-2.c?ref=3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f", "patch": "@@ -1,6 +1,7 @@\n /* Verify that calls to fprintf don't get eliminated even if their\n    result on success can be computed at compile time (they can fail).\n    The calls can still be transformed into those of other functions.\n+   { dg-require-effective-target fileio }\n    { dg-prune-output \"warning: warning: \\[^\\n\\r\\]* possibly used unsafely\" }\n    { dg-skip-if \"requires io\" { avr-*-* } }\n    { dg-skip-if \"requires io\" { freestanding } } */"}, {"sha": "4e7d8f7cdfad6c6023fc8eae469b9f9a0f290be9", "filename": "gcc/testsuite/gcc.c-torture/execute/printf-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fprintf-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fprintf-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fprintf-2.c?ref=3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f", "patch": "@@ -2,6 +2,7 @@\n    result on success can be computed at compile time (they can fail).\n    The calls can still be transformed into those of other functions.\n    { dg-require-effective-target unwrapped }\n+   { dg-require-effective-target fileio }\n    { dg-prune-output \"warning: warning: \\[^\\n\\r\\]* possibly used unsafely\" }\n    { dg-skip-if \"requires io\" { avr-*-* } }\n    { dg-skip-if \"requires io\" { freestanding } } */"}, {"sha": "42a3b17f123d13be09c7748eca2da5105bcc9734", "filename": "gcc/testsuite/gcc.c-torture/execute/user-printf.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fuser-printf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fuser-printf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fuser-printf.c?ref=3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f", "patch": "@@ -2,6 +2,7 @@\n    don't get eliminated even if their result on success can be computed at\n    compile time (they can fail).\n    { dg-require-effective-target unwrapped }\n+   { dg-require-effective-target fileio }\n    { dg-prune-output \"warning: warning: \\[^\\n\\r\\]* possibly used unsafely\" }\n    { dg-skip-if \"requires io\" { avr-*-* } }\n    { dg-skip-if \"requires io\" { freestanding } } */"}, {"sha": "008def691b34fde971756dbec0ffd3496c6ca9b1", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=3685c5adf5c0b30268cb8f95c89e4c4a3240ae6f", "patch": "@@ -751,6 +751,19 @@ proc check_effective_target_freestanding { } {\n     return 0\n }\n \n+# Check to see that file I/O functions are available.\n+proc check_effective_target_fileio { } {\n+    return [check_no_compiler_messages fileio_available executable {\n+#include <stdio.h>\n+int main() {\n+    char *n = tmpnam (NULL);\n+    FILE *f = fopen (n, \"w\");\n+    fclose (f);\n+    remove (n);\n+    return 0;\n+} } \"\"]\n+}\n+\n # Return 1 if target has packed layout of structure members by\n # default, 0 otherwise.  Note that this is slightly different than\n # whether the target has \"natural alignment\": both attributes may be"}]}