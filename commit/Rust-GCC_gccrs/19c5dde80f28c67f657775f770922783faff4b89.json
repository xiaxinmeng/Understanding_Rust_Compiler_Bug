{"sha": "19c5dde80f28c67f657775f770922783faff4b89", "node_id": "C_kwDOANBUbNoAKDE5YzVkZGU4MGYyOGM2N2Y2NTc3NzVmNzcwOTIyNzgzZmFmZjRiODk", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-02-17T10:10:15Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-02-17T13:28:25Z"}, "message": "When we expand a macro we must visit it to ensure any cfg expansions or recursive macro expansion is required", "tree": {"sha": "aae90640247a6165ef0dcaaba6cc1eba1676e7ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aae90640247a6165ef0dcaaba6cc1eba1676e7ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19c5dde80f28c67f657775f770922783faff4b89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19c5dde80f28c67f657775f770922783faff4b89", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19c5dde80f28c67f657775f770922783faff4b89", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19c5dde80f28c67f657775f770922783faff4b89/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c03f34027234cbd0e235de84ac04871ecf7b8f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c03f34027234cbd0e235de84ac04871ecf7b8f0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c03f34027234cbd0e235de84ac04871ecf7b8f0"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "bce524611cbdb7cd209a3215e659c3d80d208892", "filename": "gcc/rust/expand/rust-macro-expand.cc", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19c5dde80f28c67f657775f770922783faff4b89/gcc%2Frust%2Fexpand%2Frust-macro-expand.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19c5dde80f28c67f657775f770922783faff4b89/gcc%2Frust%2Fexpand%2Frust-macro-expand.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fexpand%2Frust-macro-expand.cc?ref=19c5dde80f28c67f657775f770922783faff4b89", "patch": "@@ -2535,6 +2535,11 @@ class AttrVisitor : public AST::ASTVisitor\n     // I don't think any macro token trees can be stripped in any way\n \n     expander.expand_invoc (macro_invoc);\n+\n+    // we need to visit the expanded fragments since it may need cfg expansion\n+    // and it may be recursive\n+    for (auto &node : macro_invoc.get_fragment ().get_nodes ())\n+      node.accept_vis (*this);\n   }\n \n   void visit (AST::MetaItemPath &) override {}\n@@ -3401,11 +3406,16 @@ MacroExpander::match_fragment (Parser<MacroInvocLexer> &parser,\n \n       // is meta attributes?\n     case AST::MacroFragSpec::META:\n+      // parser.parse_inner_attribute ?\n+      // parser.parse_outer_attribute ?\n+      // parser.parse_attribute_body ?\n+      // parser.parse_doc_comment ?\n       gcc_unreachable ();\n       break;\n \n       // what is TT?\n     case AST::MacroFragSpec::TT:\n+      // parser.parse_token_tree() ?\n       gcc_unreachable ();\n       break;\n \n@@ -3425,8 +3435,7 @@ MacroExpander::match_matcher (Parser<MacroInvocLexer> &parser,\n {\n   if (depth_exceeds_recursion_limit ())\n     {\n-      // FIXME location\n-      rust_error_at (Location (), \"reached recursion limit\");\n+      rust_error_at (matcher.get_match_locus (), \"reached recursion limit\");\n       return false;\n     }\n "}]}