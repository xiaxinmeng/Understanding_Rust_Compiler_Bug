{"sha": "0f168ccca1bb7a72e5456f9a6ff82a256e774073", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYxNjhjY2NhMWJiN2E3MmU1NDU2ZjlhNmZmODJhMjU2ZTc3NDA3Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T13:33:32Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T13:33:32Z"}, "message": "Minor reformatting.\n\nFrom-SVN: r247232", "tree": {"sha": "8645044f8bda2e31b6f0c47133ca70f1c3bcfa5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8645044f8bda2e31b6f0c47133ca70f1c3bcfa5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f168ccca1bb7a72e5456f9a6ff82a256e774073", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f168ccca1bb7a72e5456f9a6ff82a256e774073", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f168ccca1bb7a72e5456f9a6ff82a256e774073", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f168ccca1bb7a72e5456f9a6ff82a256e774073/comments", "author": null, "committer": null, "parents": [{"sha": "28ccbd3ff85e3208f4b6ccd990d75834267426db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28ccbd3ff85e3208f4b6ccd990d75834267426db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28ccbd3ff85e3208f4b6ccd990d75834267426db"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "921278329205aa9d5bd447644c84d2afc3796241", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f168ccca1bb7a72e5456f9a6ff82a256e774073/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f168ccca1bb7a72e5456f9a6ff82a256e774073/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=0f168ccca1bb7a72e5456f9a6ff82a256e774073", "patch": "@@ -1978,7 +1978,6 @@ package body Sem_Cat is\n          if Comes_From_Source (Typ) and then Is_Type (Typ)\n            and then Ekind (Typ) /= E_Incomplete_Type\n          then\n-\n             --  Check that the type can be meaningfully transmitted to another\n             --  partition (E.2.2(8)).\n "}, {"sha": "9ce5f6619f033c53a7844b46fe3bc787f0dd6b42", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f168ccca1bb7a72e5456f9a6ff82a256e774073/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f168ccca1bb7a72e5456f9a6ff82a256e774073/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=0f168ccca1bb7a72e5456f9a6ff82a256e774073", "patch": "@@ -1181,11 +1181,11 @@ package body Sem_Ch13 is\n    --  Start of processing for Analyze_Aspects_At_Freeze_Point\n \n    begin\n-      --  Must be visible in current scope, but if this is a type from\n-      --  a nested package it may be frozen from an object declaration\n-      --  in the enclosing scope, so install the package declarations\n-      --  to complete the analysis of the aspects, if any. If the package\n-      --  itself is frozen the type will have been frozen as well.\n+      --  Must be visible in current scope, but if this is a type from a nested\n+      --  package it may be frozen from an object declaration in the enclosing\n+      --  scope, so install the package declarations to complete the analysis\n+      --  of the aspects, if any. If the package itself is frozen the type will\n+      --  have been frozen as well.\n \n       if not Scope_Within_Or_Same (Current_Scope, Scope (E)) then\n          if Is_Type (E) and then From_Nested_Package (E) then\n@@ -1208,11 +1208,10 @@ package body Sem_Ch13 is\n                return;\n             end;\n \n-         else\n-\n-            --  Aspects from other entities in different contexts are\n-            --  analyzed elsewhere.\n+         --  Aspects from other entities in different contexts are analyzed\n+         --  elsewhere.\n \n+         else\n             return;\n          end if;\n       end if;"}, {"sha": "ee57f279a227e724f4a05277c2b3fd4fa31ec89d", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f168ccca1bb7a72e5456f9a6ff82a256e774073/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f168ccca1bb7a72e5456f9a6ff82a256e774073/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=0f168ccca1bb7a72e5456f9a6ff82a256e774073", "patch": "@@ -7581,11 +7581,13 @@ package body Sem_Util is\n \n    function From_Nested_Package (T : Entity_Id) return Boolean is\n       Pack : constant Entity_Id := Scope (T);\n+\n    begin\n-      return Ekind (Pack) = E_Package\n-        and then not Is_Frozen (Pack)\n-        and then not Scope_Within_Or_Same (Current_Scope, Pack)\n-        and then In_Open_Scopes (Scope (Pack));\n+      return\n+        Ekind (Pack) = E_Package\n+          and then not Is_Frozen (Pack)\n+          and then not Scope_Within_Or_Same (Current_Scope, Pack)\n+          and then In_Open_Scopes (Scope (Pack));\n    end From_Nested_Package;\n \n    -----------------------"}]}