{"sha": "505b439a062e6f264161f33c0c50727d5614b28b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA1YjQzOWEwNjJlNmYyNjQxNjFmMzNjMGM1MDcyN2Q1NjE0YjI4Yg==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-08T02:08:59Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-12-08T02:08:59Z"}, "message": "re PR other/46840 (libgo should link against libm)\n\n\tPR other/46840\nLink libgo against -lm.\n\nFrom-SVN: r167582", "tree": {"sha": "52e0279a1051df1f1866f8acb53a0161c02a5317", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52e0279a1051df1f1866f8acb53a0161c02a5317"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/505b439a062e6f264161f33c0c50727d5614b28b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/505b439a062e6f264161f33c0c50727d5614b28b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/505b439a062e6f264161f33c0c50727d5614b28b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/505b439a062e6f264161f33c0c50727d5614b28b/comments", "author": null, "committer": null, "parents": [{"sha": "7550cb35d126320a99f5346af9d87e26fa8095fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7550cb35d126320a99f5346af9d87e26fa8095fa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7550cb35d126320a99f5346af9d87e26fa8095fa"}], "stats": {"total": 65, "additions": 58, "deletions": 7}, "files": [{"sha": "506486285d067eadae181de8a17d733e2a145d71", "filename": "libgo/Makefile.am", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/505b439a062e6f264161f33c0c50727d5614b28b/libgo%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/505b439a062e6f264161f33c0c50727d5614b28b/libgo%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.am?ref=505b439a062e6f264161f33c0c50727d5614b28b", "patch": "@@ -1267,7 +1267,7 @@ libgo_go_objs = \\\n \n libgo_la_SOURCES = $(runtime_files)\n \n-libgo_la_LIBADD = $(libgo_go_objs) $(LIBFFI) $(PTHREAD_LIBS)\n+libgo_la_LIBADD = $(libgo_go_objs) $(LIBFFI) $(PTHREAD_LIBS) $(MATH_LIBS)\n \n libgobegin_a_SOURCES = \\\n \truntime/go-main.c\n@@ -1283,7 +1283,7 @@ LTGOCOMPILE = $(LIBTOOL) --tag GO --mode=compile $(GOC) $(INCLUDES) \\\n \n GOLINK = $(LIBTOOL) --tag GO --mode-link $(GOC) \\\n \t$(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_GOCFLAGS) $(LTLDFLAGS) \\\n-\t$(PTHREAD_LIBS) -o $@\n+\t$(PTHREAD_LIBS) $(MATH_LIBS) -o $@\n \n # Build a package.\n BUILDARCHIVE = \\"}, {"sha": "3e527376bf5b5e6efc9b1672e9e38f9fd70680bf", "filename": "libgo/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/505b439a062e6f264161f33c0c50727d5614b28b/libgo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/505b439a062e6f264161f33c0c50727d5614b28b/libgo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2FMakefile.in?ref=505b439a062e6f264161f33c0c50727d5614b28b", "patch": "@@ -121,7 +121,7 @@ libgobegin_a_OBJECTS = $(am_libgobegin_a_OBJECTS)\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n am__DEPENDENCIES_1 =\n libgo_la_DEPENDENCIES = $(libgo_go_objs) $(am__DEPENDENCIES_1) \\\n-\t$(am__DEPENDENCIES_1)\n+\t$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)\n am__libgo_la_SOURCES_DIST = runtime/go-append.c runtime/go-assert.c \\\n \truntime/go-assert-interface.c \\\n \truntime/go-byte-array-to-string.c runtime/go-breakpoint.c \\\n@@ -325,6 +325,7 @@ LN_S = @LN_S@\n LTLIBOBJS = @LTLIBOBJS@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n+MATH_LIBS = @MATH_LIBS@\n MKDIR_P = @MKDIR_P@\n NM = @NM@\n NMEDIT = @NMEDIT@\n@@ -1564,7 +1565,7 @@ libgo_go_objs = \\\n \ttesting/libscript.la\n \n libgo_la_SOURCES = $(runtime_files)\n-libgo_la_LIBADD = $(libgo_go_objs) $(LIBFFI) $(PTHREAD_LIBS)\n+libgo_la_LIBADD = $(libgo_go_objs) $(LIBFFI) $(PTHREAD_LIBS) $(MATH_LIBS)\n libgobegin_a_SOURCES = \\\n \truntime/go-main.c\n \n@@ -1576,7 +1577,7 @@ LTGOCOMPILE = $(LIBTOOL) --tag GO --mode=compile $(GOC) $(INCLUDES) \\\n \n GOLINK = $(LIBTOOL) --tag GO --mode-link $(GOC) \\\n \t$(OPT_LDFLAGS) $(SECTION_LDFLAGS) $(AM_GOCFLAGS) $(LTLDFLAGS) \\\n-\t$(PTHREAD_LIBS) -o $@\n+\t$(PTHREAD_LIBS) $(MATH_LIBS) -o $@\n \n \n # Build a package."}, {"sha": "cef86b2a1ee29837330746dcb7f7a1773d7b9392", "filename": "libgo/configure", "status": "modified", "additions": 46, "deletions": 2, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/505b439a062e6f264161f33c0c50727d5614b28b/libgo%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/505b439a062e6f264161f33c0c50727d5614b28b/libgo%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure?ref=505b439a062e6f264161f33c0c50727d5614b28b", "patch": "@@ -607,6 +607,7 @@ HAVE_SYS_MMAN_H_FALSE\n HAVE_SYS_MMAN_H_TRUE\n PTHREAD_LIBS\n PTHREAD_CFLAGS\n+MATH_LIBS\n USING_SPLIT_STACK_FALSE\n USING_SPLIT_STACK_TRUE\n SPLIT_STACK\n@@ -10868,7 +10869,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10871 \"configure\"\n+#line 10872 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -10974,7 +10975,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 10977 \"configure\"\n+#line 10978 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13328,6 +13329,49 @@ $as_echo \"#define LINKER_SUPPORTS_SPLIT_STACK 1\" >>confdefs.h\n \n fi\n \n+MATH_LIBS=\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for sqrt in -lm\" >&5\n+$as_echo_n \"checking for sqrt in -lm... \" >&6; }\n+if test \"${ac_cv_lib_m_sqrt+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lm  $LIBS\"\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+\n+/* Override any GCC internal prototype to avoid an error.\n+   Use char because int might match the return type of a GCC\n+   builtin and then its argument prototype would still apply.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+char sqrt ();\n+int\n+main ()\n+{\n+return sqrt ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+if ac_fn_c_try_link \"$LINENO\"; then :\n+  ac_cv_lib_m_sqrt=yes\n+else\n+  ac_cv_lib_m_sqrt=no\n+fi\n+rm -f core conftest.err conftest.$ac_objext \\\n+    conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_m_sqrt\" >&5\n+$as_echo \"$ac_cv_lib_m_sqrt\" >&6; }\n+if test \"x$ac_cv_lib_m_sqrt\" = x\"\"yes; then :\n+  MATH_LIBS=-lm\n+fi\n+\n+\n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether -pthread is supported\" >&5\n $as_echo_n \"checking whether -pthread is supported... \" >&6; }\n if test \"${ac_cv_libgo_pthread_supported+set}\" = set; then :"}, {"sha": "d2cc290fdaf8e74cd3e4749e0c9ba1e0efeb7e3e", "filename": "libgo/configure.ac", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/505b439a062e6f264161f33c0c50727d5614b28b/libgo%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/505b439a062e6f264161f33c0c50727d5614b28b/libgo%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fconfigure.ac?ref=505b439a062e6f264161f33c0c50727d5614b28b", "patch": "@@ -187,6 +187,11 @@ if test \"$ac_cv_libgo_linker_supports_split_stack\" = yes; then\n \t    [Define if the linker support split stack adjustments])\n fi\n \n+dnl Test for the -lm library.\n+MATH_LIBS=\n+AC_CHECK_LIB([m], [sqrt], MATH_LIBS=-lm)\n+AC_SUBST(MATH_LIBS)\n+\n dnl Test whether the compiler supports the -pthread option.\n AC_CACHE_CHECK([whether -pthread is supported],\n [ac_cv_libgo_pthread_supported],"}, {"sha": "113df3b6abe03305cf1f182ff615d3af2e7dc6c9", "filename": "libgo/testsuite/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/505b439a062e6f264161f33c0c50727d5614b28b/libgo%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/505b439a062e6f264161f33c0c50727d5614b28b/libgo%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Ftestsuite%2FMakefile.in?ref=505b439a062e6f264161f33c0c50727d5614b28b", "patch": "@@ -101,6 +101,7 @@ LN_S = @LN_S@\n LTLIBOBJS = @LTLIBOBJS@\n MAINT = @MAINT@\n MAKEINFO = @MAKEINFO@\n+MATH_LIBS = @MATH_LIBS@\n MKDIR_P = @MKDIR_P@\n NM = @NM@\n NMEDIT = @NMEDIT@"}]}