{"sha": "dcab2a0d1d4b2c0b4bba6f5e3834ec0678a2a5c8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNhYjJhMGQxZDRiMmMwYjRiYmE2ZjVlMzgzNGVjMDY3OGEyYTVjOA==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-10-21T06:40:44Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-10-21T06:40:44Z"}, "message": "Pass a vec_info to vect_supportable_direct_optab_p\n\n2019-10-21  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/\n\t* tree-vect-patterns.c (vect_supportable_direct_optab_p): Take\n\ta vec_info.\n\t(vect_recog_dot_prod_pattern): Update call accordingly.\n\t(vect_recog_sad_pattern, vect_recog_pow_pattern): Likewise.\n\t(vect_recog_widen_sum_pattern): Likewise.\n\nFrom-SVN: r277225", "tree": {"sha": "f525858800f7508c79bed28b27a09f94d413adc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f525858800f7508c79bed28b27a09f94d413adc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcab2a0d1d4b2c0b4bba6f5e3834ec0678a2a5c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcab2a0d1d4b2c0b4bba6f5e3834ec0678a2a5c8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcab2a0d1d4b2c0b4bba6f5e3834ec0678a2a5c8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcab2a0d1d4b2c0b4bba6f5e3834ec0678a2a5c8/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a5c3185a503fbdbc1bf05efe8ab9d12850a211c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5c3185a503fbdbc1bf05efe8ab9d12850a211c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5c3185a503fbdbc1bf05efe8ab9d12850a211c1"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "d3cba28319076d711cf441591f4b395a4a6c7d97", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcab2a0d1d4b2c0b4bba6f5e3834ec0678a2a5c8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcab2a0d1d4b2c0b4bba6f5e3834ec0678a2a5c8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dcab2a0d1d4b2c0b4bba6f5e3834ec0678a2a5c8", "patch": "@@ -1,3 +1,11 @@\n+2019-10-21  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* tree-vect-patterns.c (vect_supportable_direct_optab_p): Take\n+\ta vec_info.\n+\t(vect_recog_dot_prod_pattern): Update call accordingly.\n+\t(vect_recog_sad_pattern, vect_recog_pow_pattern): Likewise.\n+\t(vect_recog_widen_sum_pattern): Likewise.\n+\n 2019-10-21  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* tree-vectorizer.h (vect_supportable_shift): Take a vec_info."}, {"sha": "b0b31636e3799dcccb4212ff093174a7db2d4c3f", "filename": "gcc/tree-vect-patterns.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcab2a0d1d4b2c0b4bba6f5e3834ec0678a2a5c8/gcc%2Ftree-vect-patterns.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcab2a0d1d4b2c0b4bba6f5e3834ec0678a2a5c8/gcc%2Ftree-vect-patterns.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-patterns.c?ref=dcab2a0d1d4b2c0b4bba6f5e3834ec0678a2a5c8", "patch": "@@ -187,7 +187,7 @@ vect_get_external_def_edge (vec_info *vinfo, tree var)\n    is nonnull.  */\n \n static bool\n-vect_supportable_direct_optab_p (tree otype, tree_code code,\n+vect_supportable_direct_optab_p (vec_info *, tree otype, tree_code code,\n \t\t\t\t tree itype, tree *vecotype_out,\n \t\t\t\t tree *vecitype_out = NULL)\n {\n@@ -985,7 +985,7 @@ vect_recog_dot_prod_pattern (stmt_vec_info stmt_vinfo, tree *type_out)\n   vect_pattern_detected (\"vect_recog_dot_prod_pattern\", last_stmt);\n \n   tree half_vectype;\n-  if (!vect_supportable_direct_optab_p (type, DOT_PROD_EXPR, half_type,\n+  if (!vect_supportable_direct_optab_p (vinfo, type, DOT_PROD_EXPR, half_type,\n \t\t\t\t\ttype_out, &half_vectype))\n     return NULL;\n \n@@ -1143,7 +1143,7 @@ vect_recog_sad_pattern (stmt_vec_info stmt_vinfo, tree *type_out)\n   vect_pattern_detected (\"vect_recog_sad_pattern\", last_stmt);\n \n   tree half_vectype;\n-  if (!vect_supportable_direct_optab_p (sum_type, SAD_EXPR, half_type,\n+  if (!vect_supportable_direct_optab_p (vinfo, sum_type, SAD_EXPR, half_type,\n \t\t\t\t\ttype_out, &half_vectype))\n     return NULL;\n \n@@ -1273,6 +1273,7 @@ vect_recog_widen_mult_pattern (stmt_vec_info last_stmt_info, tree *type_out)\n static gimple *\n vect_recog_pow_pattern (stmt_vec_info stmt_vinfo, tree *type_out)\n {\n+  vec_info *vinfo = stmt_vinfo->vinfo;\n   gimple *last_stmt = stmt_vinfo->stmt;\n   tree base, exp;\n   gimple *stmt;\n@@ -1366,7 +1367,7 @@ vect_recog_pow_pattern (stmt_vec_info stmt_vinfo, tree *type_out)\n       || (TREE_CODE (exp) == REAL_CST\n           && real_equal (&TREE_REAL_CST (exp), &dconst2)))\n     {\n-      if (!vect_supportable_direct_optab_p (TREE_TYPE (base), MULT_EXPR,\n+      if (!vect_supportable_direct_optab_p (vinfo, TREE_TYPE (base), MULT_EXPR,\n \t\t\t\t\t    TREE_TYPE (base), type_out))\n \treturn NULL;\n \n@@ -1472,8 +1473,8 @@ vect_recog_widen_sum_pattern (stmt_vec_info stmt_vinfo, tree *type_out)\n \n   vect_pattern_detected (\"vect_recog_widen_sum_pattern\", last_stmt);\n \n-  if (!vect_supportable_direct_optab_p (type, WIDEN_SUM_EXPR, unprom0.type,\n-\t\t\t\t\ttype_out))\n+  if (!vect_supportable_direct_optab_p (vinfo, type, WIDEN_SUM_EXPR,\n+\t\t\t\t\tunprom0.type, type_out))\n     return NULL;\n \n   var = vect_recog_temp_ssa_var (type, NULL);"}]}