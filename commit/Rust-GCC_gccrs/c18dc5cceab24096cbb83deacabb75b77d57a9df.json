{"sha": "c18dc5cceab24096cbb83deacabb75b77d57a9df", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzE4ZGM1Y2NlYWIyNDA5NmNiYjgzZGVhY2FiYjc1Yjc3ZDU3YTlkZg==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2010-07-02T10:05:49Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2010-07-02T10:05:49Z"}, "message": "gc++filt.m4: New file.\n\n\tconfig:\n\t* gc++filt.m4: New file.\n\n\tcontrib:\n\t* make_sunver.pl: New file.\n\n\tlibstdc++v3:\n\t* acinclude.m4 (GLIBCXX_ENABLE_SYMVERS): Handle sun style.\n\tRequire GCC_PROG_GNU_CXXFILT.\n\t(_GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT): Define\n\tunless targetting solaris2*.\n\tInclude ../config/gc++filt.m4.\n\t* configure.host (i?86-*-solaris2*): Set abi_baseline_pair.\n\t(sparc-*-solaris2*): Likewise.\n\t* src/Makefile.am [ENABLE_SYMVERS_SUN] (version_dep, version_arg):\n\tNew variables.\n\t(libstdc++-symbols.ver-sun): New target.\n\t* configure: Regenerate.\n\t* config.h.in: Regenerate.\n\t* Makefile.in: Likewise.\n\t* doc/Makefile.in: Likewise.\n\t* include/Makefile.in: Likewise.\n\t* libsupc++/Makefile.in: Likewise.\n\t* po/Makefile.in: Likewise.\n\t* python/Makefile.in: Likewise.\n\t* src/Makefile.in: Likewise.\n\t* src/atomic.cc: Only define/use _GLIBCXX_ASM_SYMVER if\n\t_GLIBCXX_HAVE_SYMVER_RENAMING_RUNTIME_SUPPORT.\n\t* src/compatibility.cc: Likewise.\n\t* testsuite/Makefile.am (baseline_subdir): Define.\n\t(baseline_symbols): Use it.\n\t(new-abi-baseline): Likewise.\n\t* testsuite/Makefile.in: Regenerate.\n\n\t* config/abi/pre/gnu.ver (GLIBCXX_3.4.5): Enclose duplicates in\n\t#ifdef HAVE_SYMVER_RENAMING_RUNTIME_SUPPORT.\n\t(GLIBCXX_3.4.6): Likewise.\n\n\t* doc/xml/manual/configure.xml (--enable-symvers): Document sun\n\tstyle.\n\n\t* doc/xml/manual/abi.xml: Fix grammar.\n\t(Symbol versioning on the libstdc++.so binary): Fix mapfile path.\n\t(Incremental bumping of a library pre-defined macro): Fix\n\tc++config path.\n\t(Incremental bumping of a library pre-defined macro,\n\t_GLIBCPP_VERSION): Likewise.\n\t(Matching each specific C++ compiler release to a specific set of\n\tC++ include files): Fix acinclude.m4 path.\n\t(Prerequisites): Allow for Sun linker on Solaris 2.5+.\n\tUse proper link to Configuring.\n\tFix acinclude.m4 path.\n\t(Checking Active): Allow for additional symbol versioning styles.\n\tProvide Solaris 2 example with pvs -r.\n\t(Bibliography): Update Linker and Libraries Guide, C++ Migration\n\tGuide entries.\n\n\tgcc:\n\t* doc/install.texi (Prerequisites): Document Perl requirement on\n\tSolaris 2.\n\t(Specific, *-*-solaris2*): Document GNU c++filt requirement.\n\nFrom-SVN: r161696", "tree": {"sha": "82af7d224d87b8d826db6015b1d632a682d83bc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/82af7d224d87b8d826db6015b1d632a682d83bc8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c18dc5cceab24096cbb83deacabb75b77d57a9df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c18dc5cceab24096cbb83deacabb75b77d57a9df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c18dc5cceab24096cbb83deacabb75b77d57a9df", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c18dc5cceab24096cbb83deacabb75b77d57a9df/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7dd536f1bce276ba0b9b1cadfe6ce42dbfa150e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7dd536f1bce276ba0b9b1cadfe6ce42dbfa150e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7dd536f1bce276ba0b9b1cadfe6ce42dbfa150e9"}], "stats": {"total": 482, "additions": 430, "deletions": 52}, "files": [{"sha": "41c66e91d15fc5acdb4f7510d250c86f7148bacc", "filename": "config/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -1,3 +1,7 @@\n+2010-07-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* gc++filt.m4: New file.\n+\n 2010-06-20  Alexandre Oliva  <aoliva@redhat.com>\n \n \t* bootstrap-lto.mk: New."}, {"sha": "267627adcdb4daf986669b7449cf312da7a59a26", "filename": "contrib/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/contrib%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/contrib%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2FChangeLog?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -1,3 +1,7 @@\n+2010-07-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* make_sunver.pl: New file.\n+\n 2010-07-02  Iain Sandoe  <iains@gcc.gnu.org>\n \n        * compare-debug (Darwin): Remove '-x' flag from ld-based object"}, {"sha": "c1e0ae775d9e7c1178f44119cc56f143f34c7f25", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -1,3 +1,9 @@\n+2010-07-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* doc/install.texi (Prerequisites): Document Perl requirement on\n+\tSolaris 2.\n+\t(Specific, *-*-solaris2*): Document GNU c++filt requirement.\n+\n 2010-07-02  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/44777"}, {"sha": "6b1e6a329e0fee5d6403a03e07dd811bf5cf449a", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -456,8 +456,13 @@ snapshots of the development sources are also available via FTP@.\n Necessary when regenerating @file{Makefile} dependencies in libiberty.\n Necessary when regenerating @file{libiberty/functions.texi}.\n Necessary when generating manpages from Texinfo manuals.\n-Necessary when targetting Darwin, building libstdc++,\n+Necessary when targetting Darwin, building @samp{libstdc++},\n and not using @option{--disable-symvers}.\n+Necessary when targetting Solaris 2 with Sun @command{ld}, building\n+@samp{libstdc++}, and not using @option{--disable-symvers}.  A helper\n+scripts needs @samp{Glob.pm}, which is missing from @command{perl} 5.005\n+included in Solaris~8.  The bundled @command{perl} in Solaris~9 and up\n+works.\n Used by various scripts to generate some files included in SVN (mainly\n Unicode-related and rarely changing) from source tables.\n \n@@ -4109,6 +4114,12 @@ Solaris 10 cannot be used due to several bugs.  Again, the current\n version (2.20.1) is known to work, but generally lacks platform specific\n features, so better stay with Sun @command{ld}.\n \n+To enable symbol versioning in @samp{libstdc++} with Sun @command{ld},\n+you need to have any version of GNU @command{c++filt}, which is part of\n+GNU binutils.  @samp{libstdc++} symbol versioning will be disabled if no\n+appropriate version is found.  Sun @command{c++filt} from the Sun Studio\n+compilers does @emph{not} work.\n+\n Sun bug 4296832 turns up when compiling X11 headers with GCC 2.95 or\n newer: @command{g++} will complain that types are missing.  These headers\n assume that omitting the type means @code{int}; this assumption worked for"}, {"sha": "4192b896239ffb4fdda7d4158f666798e9b6a9ec", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -1,3 +1,55 @@\n+2010-07-02  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\t* acinclude.m4 (GLIBCXX_ENABLE_SYMVERS): Handle sun style.\n+\tRequire GCC_PROG_GNU_CXXFILT.\n+\t(_GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT): Define\n+\tunless targetting solaris2*.\n+\tInclude ../config/gc++filt.m4.\n+\t* configure.host (i?86-*-solaris2*): Set abi_baseline_pair.\n+\t(sparc-*-solaris2*): Likewise.\n+\t* src/Makefile.am [ENABLE_SYMVERS_SUN] (version_dep, version_arg):\n+\tNew variables.\n+\t(libstdc++-symbols.ver-sun): New target.\n+\t* configure: Regenerate.\n+\t* config.h.in: Regenerate.\n+\t* Makefile.in: Likewise.\n+\t* doc/Makefile.in: Likewise.\n+\t* include/Makefile.in: Likewise.\n+\t* libsupc++/Makefile.in: Likewise.\n+\t* po/Makefile.in: Likewise.\n+\t* python/Makefile.in: Likewise.\n+\t* src/Makefile.in: Likewise.\n+\t* src/atomic.cc: Only define/use _GLIBCXX_ASM_SYMVER if\n+\t_GLIBCXX_HAVE_SYMVER_RENAMING_RUNTIME_SUPPORT.\n+\t* src/compatibility.cc: Likewise.\n+\t* testsuite/Makefile.am (baseline_subdir): Define.\n+\t(baseline_symbols): Use it.\n+\t(new-abi-baseline): Likewise.\n+\t* testsuite/Makefile.in: Regenerate.\n+\n+\t* config/abi/pre/gnu.ver (GLIBCXX_3.4.5): Enclose duplicates in\n+\t#ifdef HAVE_SYMVER_RENAMING_RUNTIME_SUPPORT.\n+\t(GLIBCXX_3.4.6): Likewise.\n+\n+\t* doc/xml/manual/configure.xml (--enable-symvers): Document sun\n+\tstyle.\n+\n+\t* doc/xml/manual/abi.xml: Fix grammar.\n+\t(Symbol versioning on the libstdc++.so binary): Fix mapfile path.\n+\t(Incremental bumping of a library pre-defined macro): Fix\n+\tc++config path.\n+\t(Incremental bumping of a library pre-defined macro,\n+\t_GLIBCPP_VERSION): Likewise.\n+\t(Matching each specific C++ compiler release to a specific set of\n+\tC++ include files): Fix acinclude.m4 path.\n+\t(Prerequisites): Allow for Sun linker on Solaris 2.5+.\n+\tUse proper link to Configuring.\n+\tFix acinclude.m4 path.\n+\t(Checking Active): Allow for additional symbol versioning styles.\n+\tProvide Solaris 2 example with pvs -r.\n+\t(Bibliography): Update Linker and Libraries Guide, C++ Migration\n+\tGuide entries.\n+\n 2010-06-29  Jason Merrill  <jason@redhat.com>\n \n \tEnable implicitly declared move constructor/operator= (N3053)."}, {"sha": "f62595fc2781cac15267b9a4b701cac3fe835f4b", "filename": "libstdc++-v3/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FMakefile.in?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -57,6 +57,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/crossconfig.m4 \\\n \t$(top_srcdir)/linkage.m4 $(top_srcdir)/acinclude.m4 \\\n+\t$(top_srcdir)/../config/gc++filt.m4 \\\n \t$(top_srcdir)/../config/tls.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n@@ -124,6 +125,7 @@ CTIME_CC = @CTIME_CC@\n CTIME_H = @CTIME_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n+CXXFILT = @CXXFILT@\n CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@"}, {"sha": "305710b1e97d81ee1b860fc4e97f9b7af7ea5a06", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 61, "deletions": 2, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -2812,11 +2812,14 @@ AC_DEFUN([GLIBCXX_ENABLE_SYMVERS], [\n \n GLIBCXX_ENABLE(symvers,$1,[=STYLE],\n   [enables symbol versioning of the shared library],\n-  [permit yes|no|gnu|gnu-versioned-namespace|darwin|darwin-export])\n+  [permit yes|no|gnu|gnu-versioned-namespace|darwin|darwin-export|sun])\n \n # If we never went through the GLIBCXX_CHECK_LINKER_FEATURES macro, then we\n # don't know enough about $LD to do tricks...\n AC_REQUIRE([GLIBCXX_CHECK_LINKER_FEATURES])\n+# Sun style symbol versions needs GNU c++filt for make_sunver.pl to work\n+# with extern \"C++\" in version scripts.\n+AC_REQUIRE([GCC_PROG_GNU_CXXFILT])\n \n # Turn a 'yes' into a suitable default.\n if test x$enable_symvers = xyes ; then\n@@ -2834,6 +2837,20 @@ if test x$enable_symvers = xyes ; then\n       case ${target_os} in\n         darwin*)\n \t  enable_symvers=darwin ;;\n+\t# Sun symbol versioning exists since Solaris 2.5.\n+\tsolaris2.[[5-9]]* | solaris2.1[[0-9]]*)\n+\t  # make_sunver.pl needs GNU c++filt to support extern \"C++\" in\n+\t  # version scripts, so disable symbol versioning if none can be\n+\t  # found.\n+\t  if test -z \"$ac_cv_path_CXXFILT\"; then\n+\t    AC_MSG_WARN([=== You have requested Sun symbol versioning, but])\n+\t    AC_MSG_WARN([=== no GNU c++filt could  be found.])\n+\t    AC_MSG_WARN([=== Symbol versioning will be disabled.])\n+\t    enable_symvers=no\n+\t  else\n+\t    enable_symvers=sun\n+\t  fi\n+\t  ;;\n         *)\n           enable_symvers=no ;;\n       esac\n@@ -2846,8 +2863,26 @@ if test x$enable_symvers = xdarwin-export ; then\n     enable_symvers=darwin\n fi\n \n+# Check if 'sun' was requested on non-Solaris 2 platforms.\n+if test x$enable_symvers = xsun ; then\n+  case ${target_os} in\n+    solaris2*)\n+      # All fine.\n+      ;;\n+    *)\n+      # Unlikely to work.\n+      AC_MSG_WARN([=== You have requested Sun symbol versioning, but])\n+      AC_MSG_WARN([=== you are not targetting Solaris 2.])\n+      AC_MSG_WARN([=== Symbol versioning will be disabled.])\n+      enable_symvers=no\n+      ;;\n+  esac\n+fi\n+\n # Check to see if 'gnu' can win.\n-if test $enable_symvers = gnu || test $enable_symvers = gnu-versioned-namespace; then\n+if test $enable_symvers = gnu || \n+  test $enable_symvers = gnu-versioned-namespace || \n+  test $enable_symvers = sun; then\n   # Check to see if libgcc_s exists, indicating that shared libgcc is possible.\n   AC_MSG_CHECKING([for shared libgcc])\n   ac_save_CFLAGS=\"$CFLAGS\"\n@@ -2883,6 +2918,8 @@ changequote([,])dnl\n       AC_MSG_WARN([=== you are not building a shared libgcc_s.])\n       AC_MSG_WARN([=== Symbol versioning will be disabled.])\n       enable_symvers=no\n+  elif test $with_gnu_ld != yes && test $enable_symvers = sun; then\n+    : All interesting versions of Sun ld support sun style symbol versioning.\n   elif test $with_gnu_ld != yes ; then\n     # just fail for now\n     AC_MSG_WARN([=== You have requested GNU symbol versioning, but])\n@@ -2922,6 +2959,11 @@ case $enable_symvers in\n     AC_DEFINE(_GLIBCXX_SYMVER_DARWIN, 1, \n               [Define to use darwin versioning in the shared library.])\n     ;;\n+  sun)\n+    SYMVER_FILE=config/abi/pre/gnu.ver\n+    AC_DEFINE(_GLIBCXX_SYMVER_SUN, 1, \n+              [Define to use Sun versioning in the shared library.])\n+    ;;\n esac\n \n if test x$enable_symvers != xno ; then\n@@ -2945,8 +2987,24 @@ GLIBCXX_CONDITIONAL(ENABLE_SYMVERS, test $enable_symvers != no)\n GLIBCXX_CONDITIONAL(ENABLE_SYMVERS_GNU, test $enable_symvers = gnu)\n GLIBCXX_CONDITIONAL(ENABLE_SYMVERS_GNU_NAMESPACE, test $enable_symvers = gnu-versioned-namespace)\n GLIBCXX_CONDITIONAL(ENABLE_SYMVERS_DARWIN, test $enable_symvers = darwin)\n+GLIBCXX_CONDITIONAL(ENABLE_SYMVERS_SUN, test $enable_symvers = sun)\n AC_MSG_NOTICE(versioning on shared library symbols is $enable_symvers)\n \n+if test $enable_symvers != no ; then\n+   case ${target_os} in\n+     # The Solaris 2 runtime linker doesn't support the GNU extension of\n+     # binding the same symbol to different versions\n+     solaris2*)\n+       symvers_renaming=no  ;;\n+     # Other platforms with GNU symbol versioning (GNU/Linux, more?) do.\n+     *)\n+       AC_DEFINE(_GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT, 1,\n+         [Define to 1 if the target runtime linker supports binding the same symbol to different versions.])\n+       symvers_renaming=yes\n+    esac\n+fi\n+GLIBCXX_CONDITIONAL(ENABLE_SYMVERS_SOL2, test $symvers_renaming = no)\n+\n # Now, set up compatibility support, if any.\n # In addition, need this to deal with std::size_t mangling in\n # src/compatibility.cc.  In a perfect world, could use\n@@ -3083,5 +3141,6 @@ AC_DEFUN([AC_LC_MESSAGES], [\n ])\n \n # Macros from the top-level gcc directory.\n+m4_include([../config/gc++filt.m4])\n m4_include([../config/tls.m4])\n "}, {"sha": "af8459dfa7d4b06b7205699999bedbd2b479a257", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -691,6 +691,10 @@\n /* Define if gthreads library is available. */\n #undef _GLIBCXX_HAS_GTHREADS\n \n+/* Define to 1 if the target runtime linker supports binding the same symbol\n+   to different versions. */\n+#undef _GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT\n+\n /* Define to 1 if a full hosted library is built, or 0 if freestanding. */\n #undef _GLIBCXX_HOSTED\n \n@@ -724,6 +728,9 @@\n /* Define to use GNU namespace versioning in the shared library. */\n #undef _GLIBCXX_SYMVER_GNU_NAMESPACE\n \n+/* Define to use Sun versioning in the shared library. */\n+#undef _GLIBCXX_SYMVER_SUN\n+\n /* Define if C99 functions or macros from <wchar.h>, <math.h>, <complex.h>,\n    <stdio.h>, and <stdlib.h> can be used or exposed. */\n #undef _GLIBCXX_USE_C99"}, {"sha": "3a2856b7d9cfc0411157717f21d5baf4dc769e4e", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -740,6 +740,7 @@ GLIBCXX_3.4 {\n     sqrtl;\n     copysignf;\n \n+#ifdef HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT\n    # GLIBCXX_ABI compatibility only.\n     # std::string\n     _ZNKSs11_M_disjunctEPKc;\n@@ -767,6 +768,7 @@ GLIBCXX_3.4 {\n     _ZNSt11char_traitsI[cw]E2eqERK[cw]S2_;\n \n     _ZNSt19istreambuf_iteratorI[cw]St11char_traitsI[cw]EEppEv;\n+#endif\n \n     # std::locale::Impl _M_ members\n     _ZNSt6locale5_Impl16_M_install_facetEPKNS_2idEPKNS_5facetE;\n@@ -875,7 +877,9 @@ GLIBCXX_3.4.6 {\n \n     _ZNSt15basic_stringbufI[cw]St11char_traitsI[cw]ESaI[cw]EE9showmanycEv;\n \n+#ifdef HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT\n     _ZNKSt15basic_stringbufIwSt11char_traitsIwESaIwEE3strEv;\n+#endif\n \n     _ZN9__gnu_cxx6__poolILb1EE13_M_initializeEv;\n "}, {"sha": "cc46de0ec27d6078d73cbc3624f3779732ffb777", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 155, "deletions": 14, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -623,6 +623,10 @@ GLIBCXX_LDBL_COMPAT_FALSE\n GLIBCXX_LDBL_COMPAT_TRUE\n ENABLE_VISIBILITY_FALSE\n ENABLE_VISIBILITY_TRUE\n+ENABLE_SYMVERS_SOL2_FALSE\n+ENABLE_SYMVERS_SOL2_TRUE\n+ENABLE_SYMVERS_SUN_FALSE\n+ENABLE_SYMVERS_SUN_TRUE\n ENABLE_SYMVERS_DARWIN_FALSE\n ENABLE_SYMVERS_DARWIN_TRUE\n ENABLE_SYMVERS_GNU_NAMESPACE_FALSE\n@@ -633,6 +637,7 @@ ENABLE_SYMVERS_FALSE\n ENABLE_SYMVERS_TRUE\n port_specific_symbol_files\n SYMVER_FILE\n+CXXFILT\n LTLIBICONV\n LIBICONV\n OPT_LDFLAGS\n@@ -852,7 +857,8 @@ CXX\n CXXFLAGS\n CCC\n CPP\n-CXXCPP'\n+CXXCPP\n+CXXFILT'\n \n \n # Initialize some variables set by options.\n@@ -1553,6 +1559,8 @@ Some influential environment variables:\n   CXXFLAGS    C++ compiler flags\n   CPP         C preprocessor\n   CXXCPP      C++ preprocessor\n+  CXXFILT     Location of GNU c++filt. Defaults to the first GNU version of\n+              `c++filt', `gc++filt' on PATH.\n \n Use these variables to override the choices made by `configure' or to help\n it to find libraries and programs with nonstandard names/locations.\n@@ -11460,7 +11468,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11463 \"configure\"\n+#line 11471 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11566,7 +11574,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11569 \"configure\"\n+#line 11577 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -14906,7 +14914,7 @@ fi\n     #\n     # Fake what AC_TRY_COMPILE does.  XXX Look at redoing this new-style.\n     cat > conftest.$ac_ext << EOF\n-#line 14909 \"configure\"\n+#line 14917 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -15274,7 +15282,7 @@ $as_echo \"$glibcxx_cv_atomic_long_long\" >&6; }\n   # Fake what AC_TRY_COMPILE does.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15277 \"configure\"\n+#line 15285 \"configure\"\n int main()\n {\n   typedef bool atomic_type;\n@@ -15311,7 +15319,7 @@ $as_echo \"$glibcxx_cv_atomic_bool\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15314 \"configure\"\n+#line 15322 \"configure\"\n int main()\n {\n   typedef short atomic_type;\n@@ -15348,7 +15356,7 @@ $as_echo \"$glibcxx_cv_atomic_short\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15351 \"configure\"\n+#line 15359 \"configure\"\n int main()\n {\n   // NB: _Atomic_word not necessarily int.\n@@ -15386,7 +15394,7 @@ $as_echo \"$glibcxx_cv_atomic_int\" >&6; }\n     rm -f conftest*\n \n     cat > conftest.$ac_ext << EOF\n-#line 15389 \"configure\"\n+#line 15397 \"configure\"\n int main()\n {\n   typedef long long atomic_type;\n@@ -15462,7 +15470,7 @@ $as_echo \"$as_me: WARNING: Performance of certain classes will degrade as a resu\n   # unnecessary for this test.\n \n     cat > conftest.$ac_ext << EOF\n-#line 15465 \"configure\"\n+#line 15473 \"configure\"\n int main()\n {\n   _Decimal32 d1;\n@@ -25538,7 +25546,7 @@ rm -f core conftest.err conftest.$ac_objext \\\n \tCFLAGS=\"$chktls_save_CFLAGS\"\n \tif test \"X$thread_CFLAGS\" != Xfailed; then\n \t  CFLAGS=\"$thread_CFLAGS $chktls_save_CFLAGS\"\n-\t  if test \"$cross_compiling\" = yes; then :\n+ \t  \t  \t  \t  \t  \t  if test \"$cross_compiling\" = yes; then :\n   { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n $as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n as_fn_error \"cannot run test program while cross compiling\n@@ -44476,7 +44484,7 @@ rm -f core conftest.err conftest.$ac_objext \\\n \tCFLAGS=\"$chktls_save_CFLAGS\"\n \tif test \"X$thread_CFLAGS\" != Xfailed; then\n \t  CFLAGS=\"$thread_CFLAGS $chktls_save_CFLAGS\"\n-\t  if test \"$cross_compiling\" = yes; then :\n+ \t  \t  \t  \t  \t  \t  if test \"$cross_compiling\" = yes; then :\n   { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n $as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n as_fn_error \"cannot run test program while cross compiling\n@@ -50561,7 +50569,7 @@ rm -f core conftest.err conftest.$ac_objext \\\n \tCFLAGS=\"$chktls_save_CFLAGS\"\n \tif test \"X$thread_CFLAGS\" != Xfailed; then\n \t  CFLAGS=\"$thread_CFLAGS $chktls_save_CFLAGS\"\n-\t  if test \"$cross_compiling\" = yes; then :\n+ \t  \t  \t  \t  \t  \t  if test \"$cross_compiling\" = yes; then :\n   { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n $as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n as_fn_error \"cannot run test program while cross compiling\n@@ -58082,12 +58090,53 @@ ac_config_commands=\"$ac_config_commands include/gstdint.h\"\n \n # This depends on GLIBCXX CHECK_LINKER_FEATURES, but without it assumes no.\n \n+  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for GNU c++filt\" >&5\n+$as_echo_n \"checking for GNU c++filt... \" >&6; }\n+if test \"${ac_cv_path_CXXFILT+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  if test -z \"$CXXFILT\"; then\n+  ac_path_CXXFILT_found=false\n+  # Loop through the user's path and test for each of PROGNAME-LIST\n+  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+    for ac_prog in c++filt gc++filt; do\n+    for ac_exec_ext in '' $ac_executable_extensions; do\n+      ac_path_CXXFILT=\"$as_dir/$ac_prog$ac_exec_ext\"\n+      { test -f \"$ac_path_CXXFILT\" && $as_test_x \"$ac_path_CXXFILT\"; } || continue\n+# Check for GNU $ac_path_CXXFILT\n+case `\"$ac_path_CXXFILT\" --version 2>&1` in\n+*GNU*)\n+  ac_cv_path_CXXFILT=$ac_path_CXXFILT && ac_path_CXXFILT_found=:;;\n+esac\n+\n+      $ac_path_CXXFILT_found && break 3\n+    done\n+  done\n+  done\n+IFS=$as_save_IFS\n+  if test -z \"$ac_cv_path_CXXFILT\"; then\n+    :\n+  fi\n+else\n+  ac_cv_path_CXXFILT=$CXXFILT\n+fi\n+\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_CXXFILT\" >&5\n+$as_echo \"$ac_cv_path_CXXFILT\" >&6; }\n+  CXXFILT=$ac_cv_path_CXXFILT\n+\n+\n \n  # Check whether --enable-symvers was given.\n if test \"${enable_symvers+set}\" = set; then :\n   enableval=$enable_symvers;\n       case \"$enableval\" in\n-       yes|no|gnu|gnu-versioned-namespace|darwin|darwin-export) ;;\n+       yes|no|gnu|gnu-versioned-namespace|darwin|darwin-export|sun) ;;\n        *) as_fn_error \"Unknown argument to enable/disable symvers\" \"$LINENO\" 5 ;;\n                           esac\n \n@@ -58100,6 +58149,9 @@ fi\n # If we never went through the GLIBCXX_CHECK_LINKER_FEATURES macro, then we\n # don't know enough about $LD to do tricks...\n \n+# Sun style symbol versions needs GNU c++filt for make_sunver.pl to work\n+# with extern \"C++\" in version scripts.\n+\n \n # Turn a 'yes' into a suitable default.\n if test x$enable_symvers = xyes ; then\n@@ -58117,6 +58169,23 @@ if test x$enable_symvers = xyes ; then\n       case ${target_os} in\n         darwin*)\n \t  enable_symvers=darwin ;;\n+\t# Sun symbol versioning exists since Solaris 2.5.\n+\tsolaris2.[5-9]* | solaris2.1[0-9]*)\n+\t  # make_sunver.pl needs GNU c++filt to support extern \"C++\" in\n+\t  # version scripts, so disable symbol versioning if none can be\n+\t  # found.\n+\t  if test -z \"$ac_cv_path_CXXFILT\"; then\n+\t    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === You have requested Sun symbol versioning, but\" >&5\n+$as_echo \"$as_me: WARNING: === You have requested Sun symbol versioning, but\" >&2;}\n+\t    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === no GNU c++filt could  be found.\" >&5\n+$as_echo \"$as_me: WARNING: === no GNU c++filt could  be found.\" >&2;}\n+\t    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === Symbol versioning will be disabled.\" >&5\n+$as_echo \"$as_me: WARNING: === Symbol versioning will be disabled.\" >&2;}\n+\t    enable_symvers=no\n+\t  else\n+\t    enable_symvers=sun\n+\t  fi\n+\t  ;;\n         *)\n           enable_symvers=no ;;\n       esac\n@@ -58129,8 +58198,29 @@ if test x$enable_symvers = xdarwin-export ; then\n     enable_symvers=darwin\n fi\n \n+# Check if 'sun' was requested on non-Solaris 2 platforms.\n+if test x$enable_symvers = xsun ; then\n+  case ${target_os} in\n+    solaris2*)\n+      # All fine.\n+      ;;\n+    *)\n+      # Unlikely to work.\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === You have requested Sun symbol versioning, but\" >&5\n+$as_echo \"$as_me: WARNING: === You have requested Sun symbol versioning, but\" >&2;}\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === you are not targetting Solaris 2.\" >&5\n+$as_echo \"$as_me: WARNING: === you are not targetting Solaris 2.\" >&2;}\n+      { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === Symbol versioning will be disabled.\" >&5\n+$as_echo \"$as_me: WARNING: === Symbol versioning will be disabled.\" >&2;}\n+      enable_symvers=no\n+      ;;\n+  esac\n+fi\n+\n # Check to see if 'gnu' can win.\n-if test $enable_symvers = gnu || test $enable_symvers = gnu-versioned-namespace; then\n+if test $enable_symvers = gnu ||\n+  test $enable_symvers = gnu-versioned-namespace ||\n+  test $enable_symvers = sun; then\n   # Check to see if libgcc_s exists, indicating that shared libgcc is possible.\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for shared libgcc\" >&5\n $as_echo_n \"checking for shared libgcc... \" >&6; }\n@@ -58207,6 +58297,8 @@ $as_echo \"$as_me: WARNING: === you are not building a shared libgcc_s.\" >&2;}\n       { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === Symbol versioning will be disabled.\" >&5\n $as_echo \"$as_me: WARNING: === Symbol versioning will be disabled.\" >&2;}\n       enable_symvers=no\n+  elif test $with_gnu_ld != yes && test $enable_symvers = sun; then\n+    : All interesting versions of Sun ld support sun style symbol versioning.\n   elif test $with_gnu_ld != yes ; then\n     # just fail for now\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: === You have requested GNU symbol versioning, but\" >&5\n@@ -58256,6 +58348,12 @@ $as_echo \"#define _GLIBCXX_SYMVER_GNU_NAMESPACE 1\" >>confdefs.h\n \n $as_echo \"#define _GLIBCXX_SYMVER_DARWIN 1\" >>confdefs.h\n \n+    ;;\n+  sun)\n+    SYMVER_FILE=config/abi/pre/gnu.ver\n+\n+$as_echo \"#define _GLIBCXX_SYMVER_SUN 1\" >>confdefs.h\n+\n     ;;\n esac\n \n@@ -58303,9 +58401,26 @@ fi\n \n \n \n+\n { $as_echo \"$as_me:${as_lineno-$LINENO}: versioning on shared library symbols is $enable_symvers\" >&5\n $as_echo \"$as_me: versioning on shared library symbols is $enable_symvers\" >&6;}\n \n+if test $enable_symvers != no ; then\n+   case ${target_os} in\n+     # The Solaris 2 runtime linker doesn't support the GNU extension of\n+     # binding the same symbol to different versions\n+     solaris2*)\n+       symvers_renaming=no  ;;\n+     # Other platforms with GNU symbol versioning (GNU/Linux, more?) do.\n+     *)\n+\n+$as_echo \"#define _GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT 1\" >>confdefs.h\n+\n+       symvers_renaming=yes\n+    esac\n+fi\n+\n+\n # Now, set up compatibility support, if any.\n # In addition, need this to deal with std::size_t mangling in\n # src/compatibility.cc.  In a perfect world, could use\n@@ -58911,6 +59026,24 @@ else\n fi\n \n \n+    if test $enable_symvers = sun; then\n+  ENABLE_SYMVERS_SUN_TRUE=\n+  ENABLE_SYMVERS_SUN_FALSE='#'\n+else\n+  ENABLE_SYMVERS_SUN_TRUE='#'\n+  ENABLE_SYMVERS_SUN_FALSE=\n+fi\n+\n+\n+    if test $symvers_renaming = no; then\n+  ENABLE_SYMVERS_SOL2_TRUE=\n+  ENABLE_SYMVERS_SOL2_FALSE='#'\n+else\n+  ENABLE_SYMVERS_SOL2_TRUE='#'\n+  ENABLE_SYMVERS_SOL2_FALSE=\n+fi\n+\n+\n     if test $enable_visibility = yes; then\n   ENABLE_VISIBILITY_TRUE=\n   ENABLE_VISIBILITY_FALSE='#'\n@@ -59324,6 +59457,14 @@ if test -z \"${ENABLE_SYMVERS_DARWIN_TRUE}\" && test -z \"${ENABLE_SYMVERS_DARWIN_F\n   as_fn_error \"conditional \\\"ENABLE_SYMVERS_DARWIN\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${ENABLE_SYMVERS_SUN_TRUE}\" && test -z \"${ENABLE_SYMVERS_SUN_FALSE}\"; then\n+  as_fn_error \"conditional \\\"ENABLE_SYMVERS_SUN\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n+if test -z \"${ENABLE_SYMVERS_SOL2_TRUE}\" && test -z \"${ENABLE_SYMVERS_SOL2_FALSE}\"; then\n+  as_fn_error \"conditional \\\"ENABLE_SYMVERS_SOL2\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${ENABLE_VISIBILITY_TRUE}\" && test -z \"${ENABLE_VISIBILITY_FALSE}\"; then\n   as_fn_error \"conditional \\\"ENABLE_VISIBILITY\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "06874d5cf0a3cae7fc48767885a59f90f586d0a5", "filename": "libstdc++-v3/configure.host", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure.host?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -320,7 +320,13 @@ case \"${host}\" in\n \t;;\n     esac\n     ;;\n+  i?86-*-solaris2*)\n+    abi_baseline_pair=i386-solaris2\n+    ;;\n   powerpc*-*-darwin*)\n     port_specific_symbol_files=\"\\$(srcdir)/../config/os/bsd/darwin/ppc-extra.ver\"\n     ;;\n+  sparc*-*-solaris2*)\n+    abi_baseline_pair=sparc-solaris2\n+    ;;\n esac"}, {"sha": "555b8f02b4baea3e34d7f7457d6801201b25c168", "filename": "libstdc++-v3/doc/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2FMakefile.in?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -54,6 +54,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/crossconfig.m4 \\\n \t$(top_srcdir)/linkage.m4 $(top_srcdir)/acinclude.m4 \\\n+\t$(top_srcdir)/../config/gc++filt.m4 \\\n \t$(top_srcdir)/../config/tls.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n@@ -99,6 +100,7 @@ CTIME_CC = @CTIME_CC@\n CTIME_H = @CTIME_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n+CXXFILT = @CXXFILT@\n CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@"}, {"sha": "400d2a4b931f27aa4f4a4596341ac2a8e5af16b1", "filename": "libstdc++-v3/doc/xml/manual/abi.xml", "status": "modified", "additions": 40, "deletions": 21, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fabi.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fabi.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fabi.xml?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -33,9 +33,9 @@\n <title>The C++ Interface</title>\n \n <para>\n-  C++ applications often dependent on specific language support\n+  C++ applications often depend on specific language support\n   routines, say for throwing exceptions, or catching exceptions, and\n-  perhaps also dependent on features in the C++ Standard Library.\n+  perhaps also depend on features in the C++ Standard Library.\n </para>\n \n <para>\n@@ -122,7 +122,7 @@ as to give distinct versions to the C++ interface.\n releases of library binaries the ability to add new symbols and add\n functionality, all the while retaining compatibility with the previous\n releases in the series. Thus, program binaries linked with the initial\n-release of a library binary will still link correctly if the library\n+release of a library binary will still run correctly if the library\n binary is replaced by carefully-managed subsequent library\n binaries. This is called forward compatibility.\n </para>\n@@ -232,7 +232,7 @@ compatible.\n     <listitem>\n       <para>\n \tRelease versioning on the libstdc++.so binary, implemented in\n-\tthe same was as the libgcc_s.so binary above. Listed is the\n+\tthe same way as the libgcc_s.so binary above. Listed is the\n \tfilename: <constant>DT_SONAME</constant> can be deduced from\n \tthe filename by removing the last two period-delimited numbers. For\n \texample, filename <filename>libstdc++.so.5.0.4</filename>\n@@ -306,10 +306,10 @@ compatible.\n \n     <listitem><para>Symbol versioning on the libstdc++.so binary.</para>\n \n-    <para>mapfile: libstdc++/config/linker-map.gnu</para>\n+    <para>mapfile: libstdc++-v3/config/abi/pre/gnu.ver</para>\n     <para>It is versioned with the following labels and version\n    definitions, where the version definition is the maximum for a\n-   particular release. Note, only symbol which are newly introduced\n+   particular release. Note, only symbols which are newly introduced\n    will use the maximum version definition. Thus, for release series\n    with the same label, but incremented version definitions, the later\n    release has both versions. (An example of this would be the\n@@ -410,7 +410,7 @@ compatible.\n \n     <para>\n     This macro is defined in the file \"c++config\" in the\n-    \"libstdc++/include/bits\" directory. (Up to gcc-4.1.0, it was\n+    \"libstdc++-v3/include/bits\" directory. (Up to gcc-4.1.0, it was\n     changed every night by an automated script. Since gcc-4.1.0, it is\n     the same value as gcc/DATESTAMP.)\n     </para>\n@@ -474,7 +474,7 @@ compatible.\n \n     <para>\n     This macro is defined in the file \"c++config\" in the\n-    \"libstdc++/include/bits\" directory and is generated\n+    \"libstdc++-v3/include/bits\" directory and is generated\n     automatically by autoconf as part of the configure-time generation\n     of config.h.\n     </para>\n@@ -514,7 +514,7 @@ compatible.\n     All C++ includes are installed in include/c++, then nest in a\n     directory hierarchy corresponding to the C++ compiler's released\n     version. This version corresponds to the variable \"gcc_version\" in\n-    \"libstdc++/acinclude.m4,\" and more details can be found in that\n+    \"libstdc++-v3/acinclude.m4,\" and more details can be found in that\n     file's macro GLIBCXX_CONFIGURE (GLIBCPP_CONFIGURE before gcc-3.4.0).\n     </para>\n     <para>\n@@ -584,7 +584,8 @@ compatible.\n     <para>\n       Minimum environment that supports a versioned ABI: A supported\n       dynamic linker, a GNU linker of sufficient vintage to understand\n-      demangled C++ name globbing (ld), a shared executable compiled\n+      demangled C++ name globbing (ld) or the Sun linker, a shared\n+      executable compiled\n       with g++, and shared libraries (libgcc_s, libstdc++) compiled by\n       a compiler (g++) with a compatible ABI. Phew.\n     </para>\n@@ -598,7 +599,7 @@ compatible.\n     <para>\n       Most modern Linux and BSD versions, particularly ones using\n       gcc-3.1.x tools and more recent vintages, will meet the\n-      requirements above.\n+      requirements above, as does Solaris 2.5 and up.\n     </para>\n   </sect3>\n \n@@ -614,7 +615,7 @@ compatible.\n     <para>\n       For more information on configure options, including ABI\n       impacts, see:\n-      http://gcc.gnu.org/onlinedocs/libstdc++/configopts.html\n+      <link linkend=\"manual.intro.setup.configure\">here</link>\n     </para>\n \n     <para>\n@@ -623,7 +624,7 @@ compatible.\n     </para>\n \n     <para>\n-      In particular, libstdc++/acinclude.m4 has a macro called\n+      In particular, libstdc++-v3/acinclude.m4 has a macro called\n       GLIBCXX_ENABLE_SYMVERS that defaults to yes (or the argument\n       passed in via --enable-symvers=foo). At that point, the macro\n       attempts to make sure that all the requirement for symbol\n@@ -648,6 +649,7 @@ compatible.\n </screen>\n \n <para>\n+  or another of the supported styles.\n   If you don't see this line in the configure output, or if this line\n   appears but the last word is 'no', then you are out of luck.\n </para>\n@@ -685,6 +687,23 @@ of the name, then the executable is versioned. Here's an example:\n    <code>U _ZNSt8ios_base4InitC1Ev@@GLIBCXX_3.4</code>\n </para>\n \n+<para>\n+On Solaris 2, you can use <code>pvs -r</code> instead:\n+</para>\n+\n+<programlisting>\n+%g++ hello.cc -o hello.out\n+\n+%pvs -r hello.out\n+        libstdc++.so.6 (GLIBCXX_3.4, GLIBCXX_3.4.12);\n+        libgcc_s.so.1 (GCC_3.0);\n+        libc.so.1 (SUNWprivate_1.1, SYSVABI_1.3);\n+</programlisting>\n+\n+<para>\n+<code>ldd -v</code> works too, but is very verbose.\n+</para>\n+\n   </sect3>\n </sect2>\n \n@@ -735,7 +754,7 @@ number to increase, say from \"libstdc++.so.3.0.4\" to\n <listitem><para> Adding an explicit copy constructor or destructor to a\n class that would otherwise have implicit versions. This will change\n the way the compiler deals with this class in by-value return\n-statements or parameters: instead of being passing instances of this\n+statements or parameters: instead of passing instances of this\n class in registers, the compiler will be forced to use memory. See <ulink url=\"http://www.codesourcery.com/cxx-abi/abi.html#calls\"> this part</ulink>\n  of the C++ ABI documentation for further details.\n  </para></listitem>\n@@ -920,7 +939,7 @@ Use the 'make check-abi' rule in the libstdc++ Makefile.\n </para>\n \n <para>\n-This is a proactive check the library ABI. Currently, exported symbol\n+This is a proactive check of the library ABI. Currently, exported symbol\n names that are either weak or defined are checked against a last known\n good baseline. Currently, this baseline is keyed off of 3.4.0\n binaries, as this was the last time the .so number was incremented. In\n@@ -955,7 +974,7 @@ Another approach might be to use the -fdump-class-hierarchy flag to\n get information. However, currently this approach gives insufficient\n data for use in library testing, as class data members, their offsets,\n and other detailed data is not displayed with this flag.\n-(See g++/7470 on how this was used to find bugs.)\n+(See PR g++/7470 on how this was used to find bugs.)\n </para>\n \n <para>\n@@ -968,7 +987,7 @@ us. We'd like to know about them!\n     <title>Multiple ABI Testing</title>\n <para>\n A \"C\" application, dynamically linked to two shared libraries, liba,\n-libb. The dependent library liba is C++ shared library compiled with\n+libb. The dependent library liba is a C++ shared library compiled with\n gcc-3.3.x, and uses io, exceptions, locale, etc. The dependent library\n libb is a C++ shared library compiled with gcc-3.4.x, and also uses io,\n exceptions, locale, etc.\n@@ -1114,9 +1133,9 @@ gcc test.c -g -O2 -L. -lone -ltwo /usr/lib/libstdc++.so.5 /usr/lib/libstdc++.so.\n \n   <biblioentry>\n     <biblioid class=\"uri\">\n-      <ulink url=\"http://docs.sun.com/app/docs/doc/817-1984\">\n+      <ulink url=\"http://docs.sun.com/app/docs/doc/819-0690\">\n \t<citetitle>\n-\t  Sun Solaris 2.9 : Linker and Libraries Guide (document 816-1386)\n+\t  Linker and Libraries Guide (document 819-0690)\n \t</citetitle>\n       </ulink>\n     </biblioid>\n@@ -1125,9 +1144,9 @@ gcc test.c -g -O2 -L. -lone -ltwo /usr/lib/libstdc++.so.5 /usr/lib/libstdc++.so.\n \n   <biblioentry>\n     <biblioid class=\"uri\">\n-      <ulink url=\"http://docs.sun.com/app/docs/doc/819-5266\">\n+      <ulink url=\"http://docs.sun.com/app/docs/doc/819-3689\">\n \t<citetitle>\n-\t  Sun Solaris 2.9 : C++ Migration Guide (document 816-2459)\n+\t  Sun Studio 11: C++ Migration Guide (document 819-3689)\n \t</citetitle>\n       </ulink>\n     </biblioid>"}, {"sha": "6e81b06f2d4a83b6fc64d240d2508718b0aeaa20", "filename": "libstdc++-v3/doc/xml/manual/configure.xml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fconfigure.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fconfigure.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fconfigure.xml?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -279,8 +279,8 @@\n  <listitem><para>In 3.1 and later, tries to turn on symbol versioning in the\n \tshared library (if a shared library has been\n \trequested). Values for 'style' that are currently supported\n-\tare 'gnu', 'gnu-versioned-namespace', 'darwin', and\n-\t'darwin-export'. Both gnu- options require that a recent\n+\tare 'gnu', 'gnu-versioned-namespace', 'darwin',\n+\t'darwin-export', and 'sun'. Both gnu- options require that a recent\n \tversion of the GNU linker be in use. Both darwin options are\n \tequivalent. With no style given, the configure script will try\n \tto guess correct defaults for the host system, probe to see if"}, {"sha": "430f85a252aa7b86a15651e9a29800d5bc33e20e", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -56,6 +56,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/crossconfig.m4 \\\n \t$(top_srcdir)/linkage.m4 $(top_srcdir)/acinclude.m4 \\\n+\t$(top_srcdir)/../config/gc++filt.m4 \\\n \t$(top_srcdir)/../config/tls.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n@@ -101,6 +102,7 @@ CTIME_CC = @CTIME_CC@\n CTIME_H = @CTIME_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n+CXXFILT = @CXXFILT@\n CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@"}, {"sha": "7c00b672608dd866b2b5f4b7fd97a78addba0d79", "filename": "libstdc++-v3/libsupc++/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Flibsupc%2B%2B%2FMakefile.in?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -56,6 +56,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/crossconfig.m4 \\\n \t$(top_srcdir)/linkage.m4 $(top_srcdir)/acinclude.m4 \\\n+\t$(top_srcdir)/../config/gc++filt.m4 \\\n \t$(top_srcdir)/../config/tls.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n@@ -158,6 +159,7 @@ CTIME_CC = @CTIME_CC@\n CTIME_H = @CTIME_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n+CXXFILT = @CXXFILT@\n CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@"}, {"sha": "d70589472d3be09e727d0e207cd1ee2cf1690425", "filename": "libstdc++-v3/po/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fpo%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpo%2FMakefile.in?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -54,6 +54,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/crossconfig.m4 \\\n \t$(top_srcdir)/linkage.m4 $(top_srcdir)/acinclude.m4 \\\n+\t$(top_srcdir)/../config/gc++filt.m4 \\\n \t$(top_srcdir)/../config/tls.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n@@ -99,6 +100,7 @@ CTIME_CC = @CTIME_CC@\n CTIME_H = @CTIME_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n+CXXFILT = @CXXFILT@\n CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@"}, {"sha": "5499bd2f0ed1173b1511aa7267c029c649bff26e", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -45,14 +45,38 @@ libstdc++-symbols.ver:  ${glibcxx_srcdir}/$(SYMVER_FILE) \\\n \t  fi; \\\n \tfi\n \n+CLEANFILES = libstdc++-symbols.ver\n+\n if ENABLE_SYMVERS_GNU\n+if ENABLE_SYMVERS_SOL2\n+version_arg = -Wl,--version-script,libstdc++-symbols.ver-sol2\n+version_dep = libstdc++-symbols.ver-sol2\n+libstdc++-symbols.ver-sol2 : libstdc++-symbols.ver\n+\tsed -e '/^#ifdef HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT/,/^#endif/d' $< \\\n+\t > $@ || (rm -f $@ ; exit 1)\n+else\n version_arg = -Wl,--version-script=libstdc++-symbols.ver\n version_dep = libstdc++-symbols.ver\n endif\n+endif\n if ENABLE_SYMVERS_GNU_NAMESPACE\n version_arg = -Wl,--version-script=libstdc++-symbols.ver\n version_dep = libstdc++-symbols.ver\n endif\n+if ENABLE_SYMVERS_SUN\n+version_arg = -Wl,-M,libstdc++-symbols.ver-sun\n+version_dep = libstdc++-symbols.ver-sun\n+libstdc++-symbols.ver-sun : libstdc++-symbols.ver \\\n+\t\t$(toplevel_srcdir)/contrib/make_sunver.pl \\\n+\t\t$(libstdc___la_OBJECTS) $(libstdc___la_LIBADD)\n+\tCXXFILT=\"$(CXXFILT)\"; export CXXFILT; \\\n+\tperl $(toplevel_srcdir)/contrib/make_sunver.pl \\\n+\t  libstdc++-symbols.ver \\\n+\t  $(libstdc___la_OBJECTS:%.lo=.libs/%.o) \\\n+\t `echo $(libstdc___la_LIBADD) | \\\n+\t    sed 's,/\\([^/.]*\\)\\.la,/.libs/\\1.a,g'` \\\n+\t > $@ || (rm -f $@ ; exit 1)\n+endif\n if ENABLE_SYMVERS_DARWIN\n version_arg = -Wl,-exported_symbols_list,libstdc++-symbols.explist\n version_dep = libstdc++-symbols.explist\n@@ -66,6 +90,8 @@ libstdc++-symbols.explist : libstdc++-symbols.ver \\\n \t    sed 's,/\\([^/.]*\\)\\.la,/.libs/\\1.a,g'` \\\n \t > $@ || (rm -f $@ ; exit 1)\n endif\n+\n+CLEANFILES += $(version_dep)\n else\n version_arg =\n version_dep ="}, {"sha": "75a97bd990114b1d6867a80652fde5e3c1d07173", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -55,6 +55,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/crossconfig.m4 \\\n \t$(top_srcdir)/linkage.m4 $(top_srcdir)/acinclude.m4 \\\n+\t$(top_srcdir)/../config/gc++filt.m4 \\\n \t$(top_srcdir)/../config/tls.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n@@ -157,6 +158,7 @@ CTIME_CC = @CTIME_CC@\n CTIME_H = @CTIME_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n+CXXFILT = @CXXFILT@\n CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n@@ -321,14 +323,19 @@ AM_CPPFLAGS = $(GLIBCXX_INCLUDES)\n \n # Cross compiler support.\n toolexeclib_LTLIBRARIES = libstdc++.la\n+@ENABLE_SYMVERS_TRUE@CLEANFILES = libstdc++-symbols.ver $(version_dep)\n @ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@version_arg = -Wl,-exported_symbols_list,libstdc++-symbols.explist\n @ENABLE_SYMVERS_FALSE@version_arg = \n @ENABLE_SYMVERS_GNU_NAMESPACE_TRUE@@ENABLE_SYMVERS_TRUE@version_arg = -Wl,--version-script=libstdc++-symbols.ver\n-@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_TRUE@version_arg = -Wl,--version-script=libstdc++-symbols.ver\n+@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_SOL2_FALSE@@ENABLE_SYMVERS_TRUE@version_arg = -Wl,--version-script=libstdc++-symbols.ver\n+@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_SOL2_TRUE@@ENABLE_SYMVERS_TRUE@version_arg = -Wl,--version-script,libstdc++-symbols.ver-sol2\n+@ENABLE_SYMVERS_SUN_TRUE@@ENABLE_SYMVERS_TRUE@version_arg = -Wl,-M,libstdc++-symbols.ver-sun\n @ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.explist\n @ENABLE_SYMVERS_FALSE@version_dep = \n @ENABLE_SYMVERS_GNU_NAMESPACE_TRUE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.ver\n-@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.ver\n+@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_SOL2_FALSE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.ver\n+@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_SOL2_TRUE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.ver-sol2\n+@ENABLE_SYMVERS_SUN_TRUE@@ENABLE_SYMVERS_TRUE@version_dep = libstdc++-symbols.ver-sun\n \n # Source files linked in via configuration/make substitution for a\n # particular host.\n@@ -649,6 +656,7 @@ install-strip:\n mostlyclean-generic:\n \n clean-generic:\n+\t-test -z \"$(CLEANFILES)\" || rm -f $(CLEANFILES)\n \n distclean-generic:\n \t-test -z \"$(CONFIG_CLEAN_FILES)\" || rm -f $(CONFIG_CLEAN_FILES)\n@@ -760,6 +768,19 @@ uninstall-am: uninstall-toolexeclibLTLIBRARIES\n @ENABLE_SYMVERS_TRUE@\t    rm tmp.top tmp.bottom; \\\n @ENABLE_SYMVERS_TRUE@\t  fi; \\\n @ENABLE_SYMVERS_TRUE@\tfi\n+@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_SOL2_TRUE@@ENABLE_SYMVERS_TRUE@libstdc++-symbols.ver-sol2 : libstdc++-symbols.ver\n+@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_SOL2_TRUE@@ENABLE_SYMVERS_TRUE@\tsed -e '/^#ifdef HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT/,/^#endif/d' $< \\\n+@ENABLE_SYMVERS_GNU_TRUE@@ENABLE_SYMVERS_SOL2_TRUE@@ENABLE_SYMVERS_TRUE@\t > $@ || (rm -f $@ ; exit 1)\n+@ENABLE_SYMVERS_SUN_TRUE@@ENABLE_SYMVERS_TRUE@libstdc++-symbols.ver-sun : libstdc++-symbols.ver \\\n+@ENABLE_SYMVERS_SUN_TRUE@@ENABLE_SYMVERS_TRUE@\t\t$(toplevel_srcdir)/contrib/make_sunver.pl \\\n+@ENABLE_SYMVERS_SUN_TRUE@@ENABLE_SYMVERS_TRUE@\t\t$(libstdc___la_OBJECTS) $(libstdc___la_LIBADD)\n+@ENABLE_SYMVERS_SUN_TRUE@@ENABLE_SYMVERS_TRUE@\tCXXFILT=\"$(CXXFILT)\"; export CXXFILT; \\\n+@ENABLE_SYMVERS_SUN_TRUE@@ENABLE_SYMVERS_TRUE@\tperl $(toplevel_srcdir)/contrib/make_sunver.pl \\\n+@ENABLE_SYMVERS_SUN_TRUE@@ENABLE_SYMVERS_TRUE@\t  libstdc++-symbols.ver \\\n+@ENABLE_SYMVERS_SUN_TRUE@@ENABLE_SYMVERS_TRUE@\t  $(libstdc___la_OBJECTS:%.lo=.libs/%.o) \\\n+@ENABLE_SYMVERS_SUN_TRUE@@ENABLE_SYMVERS_TRUE@\t `echo $(libstdc___la_LIBADD) | \\\n+@ENABLE_SYMVERS_SUN_TRUE@@ENABLE_SYMVERS_TRUE@\t    sed 's,/\\([^/.]*\\)\\.la,/.libs/\\1.a,g'` \\\n+@ENABLE_SYMVERS_SUN_TRUE@@ENABLE_SYMVERS_TRUE@\t > $@ || (rm -f $@ ; exit 1)\n @ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@libstdc++-symbols.explist : libstdc++-symbols.ver \\\n @ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@\t\t${glibcxx_srcdir}/scripts/make_exports.pl \\\n @ENABLE_SYMVERS_DARWIN_TRUE@@ENABLE_SYMVERS_TRUE@\t\t$(libstdc___la_OBJECTS) $(libstdc___la_LIBADD)"}, {"sha": "906b0884e2c00dc5b0d856f212863fedb8898258", "filename": "libstdc++-v3/src/atomic.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fsrc%2Fatomic.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fsrc%2Fatomic.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fatomic.cc?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -1,6 +1,6 @@\n // Support for atomic operations -*- C++ -*-\n \n-// Copyright (C) 2008, 2009\n+// Copyright (C) 2008, 2009, 2010\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -127,7 +127,8 @@ namespace std\n // _GLIBCXX_*_SYMVER macros in this file.\n \n #if defined(_GLIBCXX_SYMVER_GNU) && defined(PIC) \\\n-    && defined(_GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE)\n+    && defined(_GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE) \\\n+    && defined(_GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT)\n \n #define _GLIBCXX_ASM_SYMVER(cur, old, version) \\\n    asm (\".symver \" #cur \",\" #old \"@@\" #version);"}, {"sha": "7dcd95cb171919440095f84e8b76628ebd84b95c", "filename": "libstdc++-v3/src/compatibility.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fcompatibility.cc?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -26,7 +26,8 @@\n #include <bits/c++config.h>\n \n #if defined(_GLIBCXX_SYMVER_GNU) && defined(PIC) \\\n-    && defined(_GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE)\n+    && defined(_GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE)\\\n+    && defined(_GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT)\n #define istreambuf_iterator istreambuf_iteratorXX\n #define basic_fstream basic_fstreamXX\n #define basic_ifstream basic_ifstreamXX\n@@ -201,7 +202,8 @@ _GLIBCXX_END_NAMESPACE\n // NB: These symbols renames should go into the shared library only,\n // and only those shared libraries that support versioning.\n #if defined(_GLIBCXX_SYMVER_GNU) && defined(PIC) \\\n-    && defined(_GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE)\n+    && defined(_GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE) \\\n+    && defined(_GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT)\n \n /* gcc-3.4.4\n _ZNSt19istreambuf_iteratorIcSt11char_traitsIcEEppEv"}, {"sha": "43d0ed39557debe23a69b1d1aee9e8d6369da44a", "filename": "libstdc++-v3/testsuite/Makefile.am", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.am?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -69,17 +69,19 @@ site.exp: Makefile\n \n extract_symvers = $(glibcxx_srcdir)/scripts/extract_symvers\n \n+baseline_subdir := $(shell $(CXX) --print-multi-dir)\n+\n baseline_symbols:\n-\t-@(output=${baseline_dir}/baseline_symbols.txt; \\\n+\t-@(output=${baseline_dir}/${baseline_subdir}/baseline_symbols.txt; \\\n \t  if test ! -f $${output}; then \\\n \t    echo \"Baseline file doesn't exist.\"; \\\n \t    echo \"Try 'make new-abi-baseline' to create it.\"; \\\n \t    exit 1; \\\n \t  fi; true)\n \n new-abi-baseline:\n-\t-@$(mkinstalldirs) ${baseline_dir}\n-\t-@(output=${baseline_dir}/baseline_symbols.txt; \\\n+\t-@$(mkinstalldirs) ${baseline_dir}${baseline_subdir}\n+\t-@(output=${baseline_dir}/${baseline_subdir}/baseline_symbols.txt; \\\n \t  if test -f $${output}; then \\\n \t    output=$${output}.new; \\\n \t    t=`echo $${output} | sed 's=.*config/abi/=='`; \\"}, {"sha": "ef177f6ebdb0aa218524b3052e0319f2977e6d74", "filename": "libstdc++-v3/testsuite/Makefile.in", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c18dc5cceab24096cbb83deacabb75b77d57a9df/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2FMakefile.in?ref=c18dc5cceab24096cbb83deacabb75b77d57a9df", "patch": "@@ -54,6 +54,7 @@ am__aclocal_m4_deps = $(top_srcdir)/../config/enable.m4 \\\n \t$(top_srcdir)/../ltsugar.m4 $(top_srcdir)/../ltversion.m4 \\\n \t$(top_srcdir)/../lt~obsolete.m4 $(top_srcdir)/crossconfig.m4 \\\n \t$(top_srcdir)/linkage.m4 $(top_srcdir)/acinclude.m4 \\\n+\t$(top_srcdir)/../config/gc++filt.m4 \\\n \t$(top_srcdir)/../config/tls.m4 $(top_srcdir)/configure.ac\n am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n \t$(ACLOCAL_M4)\n@@ -99,6 +100,7 @@ CTIME_CC = @CTIME_CC@\n CTIME_H = @CTIME_H@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n+CXXFILT = @CXXFILT@\n CXXFLAGS = @CXXFLAGS@\n CYGPATH_W = @CYGPATH_W@\n C_INCLUDE_DIR = @C_INCLUDE_DIR@\n@@ -272,6 +274,7 @@ lists_of_files = \\\n    testsuite_files_performance\n \n extract_symvers = $(glibcxx_srcdir)/scripts/extract_symvers\n+baseline_subdir := $(shell $(CXX) --print-multi-dir)\n check_DEJAGNU_normal_targets = $(patsubst %,check-DEJAGNUnormal%,0 1 2 3)\n \n # Runs the testsuite, but in compile only mode.\n@@ -495,16 +498,16 @@ site.exp: Makefile\n \t@mv site.tmp site.exp\n \n baseline_symbols:\n-\t-@(output=${baseline_dir}/baseline_symbols.txt; \\\n+\t-@(output=${baseline_dir}/${baseline_subdir}/baseline_symbols.txt; \\\n \t  if test ! -f $${output}; then \\\n \t    echo \"Baseline file doesn't exist.\"; \\\n \t    echo \"Try 'make new-abi-baseline' to create it.\"; \\\n \t    exit 1; \\\n \t  fi; true)\n \n new-abi-baseline:\n-\t-@$(mkinstalldirs) ${baseline_dir}\n-\t-@(output=${baseline_dir}/baseline_symbols.txt; \\\n+\t-@$(mkinstalldirs) ${baseline_dir}${baseline_subdir}\n+\t-@(output=${baseline_dir}/${baseline_subdir}/baseline_symbols.txt; \\\n \t  if test -f $${output}; then \\\n \t    output=$${output}.new; \\\n \t    t=`echo $${output} | sed 's=.*config/abi/=='`; \\"}]}