{"sha": "c3fb23f4412328c8079c4990059f7217302ea0d4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNmYjIzZjQ0MTIzMjhjODA3OWM0OTkwMDU5ZjcyMTczMDJlYTBkNA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2001-11-04T02:47:36Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2001-11-04T02:47:36Z"}, "message": "Makefile.in (dbxout.o): Depend on function.h.\n\n\t* Makefile.in (dbxout.o): Depend on function.h.\n\t* collect2.c (is_in_list): Hide unused function.\n\t* dbxout.c: Include function.h.\n\t(source_label_number, dbxout_source_line, dbxout_source_file,\n\tdbxout_function_end, dbxout_begin_function): Wrap/move inside\n\tmacros controlling usage.\n\t* gcc.c (TARGET_EXECUTABLE_SUFFIX): Undef before defining.\n\t* output.h (exports_section): Prototype.\n\nFrom-SVN: r46759", "tree": {"sha": "0dfe5d961b89870d3763a5eaeb8c9233b72e2fa4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dfe5d961b89870d3763a5eaeb8c9233b72e2fa4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3fb23f4412328c8079c4990059f7217302ea0d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3fb23f4412328c8079c4990059f7217302ea0d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3fb23f4412328c8079c4990059f7217302ea0d4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3fb23f4412328c8079c4990059f7217302ea0d4/comments", "author": null, "committer": null, "parents": [{"sha": "55710451f2f81d39b82472cfb3d7be7bd4ea98a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55710451f2f81d39b82472cfb3d7be7bd4ea98a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55710451f2f81d39b82472cfb3d7be7bd4ea98a2"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "33dc5abeaea532f858451e48088270260b65ac64", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3fb23f4412328c8079c4990059f7217302ea0d4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3fb23f4412328c8079c4990059f7217302ea0d4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c3fb23f4412328c8079c4990059f7217302ea0d4", "patch": "@@ -1,5 +1,14 @@\n 2001-11-03  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n+\t* Makefile.in (dbxout.o): Depend on function.h.\n+\t* collect2.c (is_in_list): Hide unused function.\n+\t* dbxout.c: Include function.h.\n+\t(source_label_number, dbxout_source_line, dbxout_source_file,\n+\tdbxout_function_end, dbxout_begin_function): Wrap/move inside\n+\tmacros controlling usage.\n+\t* gcc.c (TARGET_EXECUTABLE_SUFFIX): Undef before defining.\n+\t* output.h (exports_section): Prototype.\n+\n \t* convex.c (convex_output_function_prologue): Fix format specifier\n \twarning.\n \t(asm_declare_function_name): Fix signed/unsigned warning."}, {"sha": "34433f1501c90bdc169a3a27cfad34f6f7e677f2", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3fb23f4412328c8079c4990059f7217302ea0d4/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3fb23f4412328c8079c4990059f7217302ea0d4/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=c3fb23f4412328c8079c4990059f7217302ea0d4", "patch": "@@ -1418,7 +1418,7 @@ optabs.o : optabs.c $(CONFIG_H) $(SYSTEM_H) $(RTL_H) $(TREE_H) flags.h  \\\n    insn-config.h $(EXPR_H) $(OPTABS_H) libfuncs.h $(RECOG_H) reload.h \\\n    toplev.h $(GGC_H) real.h $(TM_P_H) except.h\n dbxout.o : dbxout.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) flags.h \\\n-    $(REGS_H) debug.h $(TM_P_H) $(TARGET_H) \\\n+    $(REGS_H) debug.h $(TM_P_H) $(TARGET_H) function.h \\\n    insn-config.h reload.h gstab.h xcoffout.h output.h dbxout.h toplev.h\n debug.o : debug.c $(CONFIG_H) $(SYSTEM_H)\n sdbout.o : sdbout.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) flags.h \\"}, {"sha": "5821dd13f6aa0a2a77178bcac1918acec573bd27", "filename": "gcc/collect2.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3fb23f4412328c8079c4990059f7217302ea0d4/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3fb23f4412328c8079c4990059f7217302ea0d4/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=c3fb23f4412328c8079c4990059f7217302ea0d4", "patch": "@@ -300,7 +300,9 @@ static void scan_libraries\tPARAMS ((const char *));\n static int is_in_args\t\tPARAMS ((const char *, const char **, const char **));\n #endif\n #ifdef COLLECT_EXPORT_LIST\n+#if 0\n static int is_in_list\t\tPARAMS ((const char *, struct id *));\n+#endif\n static void write_aix_file\tPARAMS ((FILE *, struct id *));\n static char *resolve_lib_name\tPARAMS ((const char *));\n static int ignore_library\tPARAMS ((const char *));\n@@ -1754,6 +1756,7 @@ is_in_args (string, args_begin, args_end)\n \n #ifdef COLLECT_EXPORT_LIST\n /* This function is really used only on AIX, but may be useful.  */\n+#if 0\n static int\n is_in_list (prefix, list)\n      const char *prefix;\n@@ -1767,6 +1770,7 @@ is_in_list (prefix, list)\n     return 0;\n }\n #endif\n+#endif /* COLLECT_EXPORT_LIST */\n \n /* Added for debugging purpose.  */\n #ifdef COLLECT_EXPORT_LIST"}, {"sha": "0a1ced61e0584c9f448cd6c8bf2190953c70e300", "filename": "gcc/dbxout.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3fb23f4412328c8079c4990059f7217302ea0d4/gcc%2Fdbxout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3fb23f4412328c8079c4990059f7217302ea0d4/gcc%2Fdbxout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbxout.c?ref=c3fb23f4412328c8079c4990059f7217302ea0d4", "patch": "@@ -83,6 +83,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"tm_p.h\"\n #include \"ggc.h\"\n #include \"debug.h\"\n+#include \"function.h\"\n #include \"target.h\"\n \n #ifdef XCOFF_DEBUGGING_INFO\n@@ -148,7 +149,9 @@ static int have_used_extensions = 0;\n /* Number for the next N_SOL filename stabs label.  The number 0 is reserved\n    for the N_SO filename stabs label.  */\n \n+#if defined (DBX_DEBUGGING_INFO) && !defined (DBX_OUTPUT_SOURCE_FILENAME)\n static int source_label_number = 1;\n+#endif\n \n #ifdef DEBUG_SYMS_TEXT\n #define FORCE_TEXT text_section ();\n@@ -289,9 +292,6 @@ static void dbxout_init\t\t\tPARAMS ((const char *));\n static void dbxout_finish\t\tPARAMS ((const char *));\n static void dbxout_start_source_file\tPARAMS ((unsigned, const char *));\n static void dbxout_end_source_file\tPARAMS ((unsigned));\n-static void dbxout_source_line\t\tPARAMS ((unsigned int, const char *));\n-static void dbxout_source_file\t\tPARAMS ((FILE *, const char *));\n-static void dbxout_function_end\t\tPARAMS ((void));\n static void dbxout_typedefs\t\tPARAMS ((tree));\n static void dbxout_type_index\t\tPARAMS ((tree));\n #if DBX_CONTIN_LENGTH > 0\n@@ -312,12 +312,15 @@ static void dbxout_symbol_name\t\tPARAMS ((tree, const char *, int));\n static void dbxout_prepare_symbol\tPARAMS ((tree));\n static void dbxout_finish_symbol\tPARAMS ((tree));\n static void dbxout_block\t\tPARAMS ((tree, int, tree));\n-static void dbxout_begin_function\tPARAMS ((tree));\n static void dbxout_global_decl\t\tPARAMS ((tree));\n \f\n /* The debug hooks structure.  */\n #if defined (DBX_DEBUGGING_INFO)\n \n+static void dbxout_source_line\t\tPARAMS ((unsigned int, const char *));\n+static void dbxout_source_file\t\tPARAMS ((FILE *, const char *));\n+static void dbxout_function_end\t\tPARAMS ((void));\n+static void dbxout_begin_function\tPARAMS ((tree));\n static void dbxout_begin_block\t\tPARAMS ((unsigned, unsigned));\n static void dbxout_end_block\t\tPARAMS ((unsigned, unsigned));\n static void dbxout_function_decl\tPARAMS ((tree));\n@@ -377,6 +380,7 @@ struct gcc_debug_hooks xcoff_debug_hooks =\n };\n #endif /* XCOFF_DEBUGGING_INFO  */\n \f\n+#if defined (DBX_DEBUGGING_INFO)\n static void\n dbxout_function_end ()\n {\n@@ -397,6 +401,7 @@ dbxout_function_end ()\n   assemble_name (asmfile, XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0));\n   fprintf (asmfile, \"\\n\");\n }\n+#endif /* DBX_DEBUGGING_INFO */\n \n /* At the beginning of compilation, start writing the symbol table.\n    Initialize `typevec' and output the standard data types of C.  */\n@@ -552,6 +557,7 @@ dbxout_end_source_file (line)\n #endif\n }\n \n+#if defined (DBX_DEBUGGING_INFO)\n /* Output debugging info to FILE to switch to sourcefile FILENAME.  */\n \n static void\n@@ -600,8 +606,6 @@ dbxout_source_line (lineno, filename)\n #endif\n }\n \n-#if defined (DBX_DEBUGGING_INFO)\n-\n /* Describe the beginning of an internal block within a function.  */\n \n static void\n@@ -2824,6 +2828,7 @@ dbxout_block (block, depth, args)\n    Usually this follows the function's code,\n    but on some systems, it comes before.  */\n \n+#if defined (DBX_DEBUGGING_INFO)\n static void\n dbxout_begin_function (decl)\n      tree decl;\n@@ -2833,5 +2838,6 @@ dbxout_begin_function (decl)\n   if (DECL_NAME (DECL_RESULT (decl)) != 0)\n     dbxout_symbol (DECL_RESULT (decl), 1);\n }\n+#endif /* DBX_DEBUGGING_INFO */\n \n #endif /* DBX_DEBUGGING_INFO || XCOFF_DEBUGGING_INFO */"}, {"sha": "2ae9706eaf257c402c06b9ef0d0f193f3c73a0bd", "filename": "gcc/gcc.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3fb23f4412328c8079c4990059f7217302ea0d4/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3fb23f4412328c8079c4990059f7217302ea0d4/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=c3fb23f4412328c8079c4990059f7217302ea0d4", "patch": "@@ -97,6 +97,7 @@ extern int getrusage PARAMS ((int, struct rusage *));\n #if defined(TARGET_EXECUTABLE_SUFFIX) && defined(HOST_EXECUTABLE_SUFFIX)\n #define HAVE_TARGET_EXECUTABLE_SUFFIX\n #else\n+#undef TARGET_EXECUTABLE_SUFFIX\n #define TARGET_EXECUTABLE_SUFFIX \"\"\n #endif\n "}, {"sha": "dc2a6983d35e0d9cdbf36b7b276e6429cb40fa1b", "filename": "gcc/output.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3fb23f4412328c8079c4990059f7217302ea0d4/gcc%2Foutput.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3fb23f4412328c8079c4990059f7217302ea0d4/gcc%2Foutput.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Foutput.h?ref=c3fb23f4412328c8079c4990059f7217302ea0d4", "patch": "@@ -190,6 +190,10 @@ extern void init_section PARAMS ((void));\n extern void fini_section PARAMS ((void));\n #endif\n \n+#ifdef EXPORTS_SECTION_ASM_OP\n+extern void exports_section PARAMS ((void));\n+#endif\n+\n #ifdef TDESC_SECTION_ASM_OP\n extern void tdesc_section PARAMS ((void));\n #endif"}]}