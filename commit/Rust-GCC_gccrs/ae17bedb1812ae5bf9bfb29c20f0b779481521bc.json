{"sha": "ae17bedb1812ae5bf9bfb29c20f0b779481521bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUxN2JlZGIxODEyYWU1YmY5YmZiMjljMjBmMGI3Nzk0ODE1MjFiYw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-11-07T14:58:29Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-11-07T14:58:29Z"}, "message": "(cpp_lex): Correctly parse character constants.\n\nFrom-SVN: r10566", "tree": {"sha": "93512eb05776ef735c23fa9fb762667d0b0ab36d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93512eb05776ef735c23fa9fb762667d0b0ab36d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae17bedb1812ae5bf9bfb29c20f0b779481521bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae17bedb1812ae5bf9bfb29c20f0b779481521bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae17bedb1812ae5bf9bfb29c20f0b779481521bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae17bedb1812ae5bf9bfb29c20f0b779481521bc/comments", "author": null, "committer": null, "parents": [{"sha": "a6cf191be5ea87b90d5a7d0a33dba983ba3b7d08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6cf191be5ea87b90d5a7d0a33dba983ba3b7d08", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6cf191be5ea87b90d5a7d0a33dba983ba3b7d08"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "6b73ad34e4dce09d6edfc7af74662e1755a0f680", "filename": "gcc/cppexp.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae17bedb1812ae5bf9bfb29c20f0b779481521bc/gcc%2Fcppexp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae17bedb1812ae5bf9bfb29c20f0b779481521bc/gcc%2Fcppexp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcppexp.c?ref=ae17bedb1812ae5bf9bfb29c20f0b779481521bc", "patch": "@@ -357,11 +357,9 @@ cpp_reader *pfile;\n \telse\n \t    max_chars = MAX_LONG_TYPE_SIZE / width;\n \n-\twhile (1)\n+\t++ptr;\n+\twhile (ptr < tok_end && ((c = *ptr++) != '\\''))\n \t  {\n-\t    if (ptr >= CPP_PWRITTEN (pfile) || (c = *ptr++) == '\\'')\n-\t      break;\n-\n \t    if (c == '\\\\')\n \t      {\n \t\tc = cpp_parse_escape (pfile, &ptr);"}]}