{"sha": "1f6b0ce0c5a368d88decdbfb9344cc2f325673fe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY2YjBjZTBjNWEzNjhkODhkZWNkYmZiOTM0NGNjMmYzMjU2NzNmZQ==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-09-29T18:41:05Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-09-29T18:41:05Z"}, "message": "ch-tree.h (build_compare_expr): Change first argument's type from `enum chill_tree_code' to `enum tree_code'.\n\n        * ch-tree.h (build_compare_expr): Change first argument's type\n        from `enum chill_tree_code' to `enum tree_code'.\n        (build_compare_discrete_expr): Likewise.\n        * expr.c (build_compare_set_expr): Likewise.\n        (build_compare_string_expr): Likewise.\n        (build_compare_expr): Likewise.\n        (build_compare_discrete_expr): Likewise.  Also add default case in\n        switch statement.\n        (compare_int_csts): Add default case in switch statement.\n\nFrom-SVN: r22643", "tree": {"sha": "ee5b90b6b11d949d33f62b144171d815cf8b87de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee5b90b6b11d949d33f62b144171d815cf8b87de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f6b0ce0c5a368d88decdbfb9344cc2f325673fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f6b0ce0c5a368d88decdbfb9344cc2f325673fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f6b0ce0c5a368d88decdbfb9344cc2f325673fe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f6b0ce0c5a368d88decdbfb9344cc2f325673fe/comments", "author": null, "committer": null, "parents": [{"sha": "98e48780cff38dc8ab91a5e445c462da7b4a29b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98e48780cff38dc8ab91a5e445c462da7b4a29b9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98e48780cff38dc8ab91a5e445c462da7b4a29b9"}], "stats": {"total": 29, "additions": 23, "deletions": 6}, "files": [{"sha": "994abe24312bd91caaa057155408bc7f70450c14", "filename": "gcc/ch/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f6b0ce0c5a368d88decdbfb9344cc2f325673fe/gcc%2Fch%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f6b0ce0c5a368d88decdbfb9344cc2f325673fe/gcc%2Fch%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2FChangeLog?ref=1f6b0ce0c5a368d88decdbfb9344cc2f325673fe", "patch": "@@ -1,3 +1,16 @@\n+Tue Sep 29 21:37:33 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* ch-tree.h (build_compare_expr): Change first argument's type\n+\tfrom `enum chill_tree_code' to `enum tree_code'.\n+\t(build_compare_discrete_expr): Likewise.\n+\n+\t* expr.c (build_compare_set_expr): Likewise.\n+\t(build_compare_string_expr): Likewise.\n+\t(build_compare_expr): Likewise.\n+\t(build_compare_discrete_expr): Likewise.  Also add default case in\n+\tswitch statement.\n+\t(compare_int_csts): Add default case in switch statement.\n+\n Sun Sep 20 11:02:55 1998  Robert Lipe  <robertl@dgii.com>\n \n \t* except.c: Include system.h."}, {"sha": "ae43dd924ac927c6556ac6c9a0f15968b721c1e4", "filename": "gcc/ch/ch-tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f6b0ce0c5a368d88decdbfb9344cc2f325673fe/gcc%2Fch%2Fch-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f6b0ce0c5a368d88decdbfb9344cc2f325673fe/gcc%2Fch%2Fch-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fch-tree.h?ref=1f6b0ce0c5a368d88decdbfb9344cc2f325673fe", "patch": "@@ -895,9 +895,9 @@ extern tree build_chill_compound_expr           PROTO((tree));\n extern tree build_chill_descr                   PROTO((tree));\n extern void build_chill_descr_type              PROTO((void));\n extern void build_chill_inttime_type            PROTO((void));\n-extern tree build_compare_expr\t\t\tPROTO((enum chill_tree_code,\n+extern tree build_compare_expr\t\t\tPROTO((enum tree_code,\n \t\t\t\t\t\t       tree, tree));\n-extern tree build_compare_discrete_expr\t\tPROTO((enum chill_tree_code,\n+extern tree build_compare_discrete_expr\t\tPROTO((enum tree_code,\n \t\t\t\t\t\t       tree, tree));\n extern tree check_case_selector                 PROTO((tree));\n extern tree check_case_selector_list            PROTO((tree));"}, {"sha": "acc1bc7ec04398106b933f674b0c2cf0b60ca434", "filename": "gcc/ch/expr.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f6b0ce0c5a368d88decdbfb9344cc2f325673fe/gcc%2Fch%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f6b0ce0c5a368d88decdbfb9344cc2f325673fe/gcc%2Fch%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fch%2Fexpr.c?ref=1f6b0ce0c5a368d88decdbfb9344cc2f325673fe", "patch": "@@ -3125,7 +3125,7 @@ fold_set_expr (code, op0, op1)\n  */\n static tree\n build_compare_set_expr (code, op0, op1)\n-     enum chill_tree_code code;\n+     enum tree_code code;\n      tree op0, op1;\n {\n   tree result_type = NULL_TREE;\n@@ -3380,7 +3380,7 @@ build_concat_expr (op0, op1)\n  */\n static tree\n build_compare_string_expr (code, op0, op1)\n-     enum chill_tree_code code;\n+     enum tree_code code;\n      tree op0, op1;\n {\n   if (op0 == NULL_TREE || TREE_CODE (op0) == ERROR_MARK)\n@@ -3539,6 +3539,8 @@ compare_int_csts (op, val1, val2)\n       if (op == NE_EXPR)\n \tresult = !result;\n       break;\n+    default:\n+      abort();\n     }\n   return result;\n }\n@@ -3549,7 +3551,7 @@ compare_int_csts (op, val1, val2)\n \n tree\n build_compare_discrete_expr (op, val1, val2)\n-     enum chill_tree_code op;\n+     enum tree_code op;\n      tree val1, val2;\n {\n   tree type1 = TREE_TYPE (val1);\n@@ -3617,6 +3619,8 @@ build_compare_discrete_expr (op, val1, val2)\n \tcase NE_EXPR:\n \t  tmp = build_compare_expr (EQ_EXPR, val1, val2);\n \t  return build_chill_unary_op (TRUTH_NOT_EXPR, tmp);\n+\tdefault:\n+\t  abort();\n \t}\n     }\n   if (TYPE_PRECISION (type1) > TYPE_PRECISION (type2))\n@@ -3628,7 +3632,7 @@ build_compare_discrete_expr (op, val1, val2)\n \n tree\n build_compare_expr (op, val1, val2)\n-     enum chill_tree_code op;\n+     enum tree_code op;\n      tree val1, val2;\n {\n   tree tmp;"}]}