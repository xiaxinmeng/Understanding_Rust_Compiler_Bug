{"sha": "158b18ffa510105b239bd2f4a253ed33e21fcebc", "node_id": "C_kwDOANBUbNoAKDE1OGIxOGZmYTUxMDEwNWIyMzliZDJmNGEyNTNlZDMzZTIxZmNlYmM", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-12-19T13:20:36Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2022-12-19T14:00:08Z"}, "message": "modula2: Fix up bootstrap on powerpc64le-linux [PR108147]\n\nAs mentioned in the PR, bootstrap with m2 enabled currently fails\non powerpc64le-linux, we get weird ICE after printing some diagnostics.\nThe problem is that mc creates from *.def prototypes like\nextern void m2linemap_WarningAtf (m2linemap_location_t location, void * message);\nbut the actual function definitions use\nvoid m2linemap_WarningAtf (m2linemap_location_t location, void * message,\n...) { code }\nand on powerpc64le-linux such lying about the prototype results in\nwrong-code, on the caller side we assume the function isn't varargs\nand so don't reserve 64 bytes in the frame for it, while the callee\nrelies on the area being reserved and stores into it.\n\nFixed by adding non-stdarg wrappers around stdarg functions (because\nwe want va_list and pass it to diagnostics functions).\n\n2022-12-19  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR modula2/108147\n\t* gm2-gcc/m2linemap.def (ErrorAtf, WarningAtf, NoteAtf):\n\tComment out prototypes with varargs.\n\t* gm2-gcc/m2linemap.h (m2linemap_ErrorAtf, m2linemap_WarningAtf,\n\tm2linemap_NoteAtf): No longer varargs.\n\t* gm2-gcc/m2linemap.cc (m2linemap_ErrorAtf): Turned into a\n\tnon-varargs wrapper around ...\n\t(m2linemap_ErrorAtf_1): ... this.  New static function.\n\t(m2linemap_WarningAtf): Turned into a non-varargs wrapper around ...\n\t(m2linemap_WarningAtf_1): ... this.  New static function.\n\t(m2linemap_NoteAtf): Turned into a non-varargs wrapper around ...\n\t(m2linemap_NoteAtf_1): ... this.  New static function.", "tree": {"sha": "d8dd3dbd311c57cace1ee868efa6207c03f0d03d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d8dd3dbd311c57cace1ee868efa6207c03f0d03d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/158b18ffa510105b239bd2f4a253ed33e21fcebc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158b18ffa510105b239bd2f4a253ed33e21fcebc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/158b18ffa510105b239bd2f4a253ed33e21fcebc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/158b18ffa510105b239bd2f4a253ed33e21fcebc/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9f6a2b7f579b684037eaddab97db35096c10c3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9f6a2b7f579b684037eaddab97db35096c10c3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9f6a2b7f579b684037eaddab97db35096c10c3b"}], "stats": {"total": 41, "additions": 27, "deletions": 14}, "files": [{"sha": "c6189b7f1abbbb0039de7b52f59c2a2c8b66a821", "filename": "gcc/m2/gm2-gcc/m2linemap.cc", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158b18ffa510105b239bd2f4a253ed33e21fcebc/gcc%2Fm2%2Fgm2-gcc%2Fm2linemap.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158b18ffa510105b239bd2f4a253ed33e21fcebc/gcc%2Fm2%2Fgm2-gcc%2Fm2linemap.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2linemap.cc?ref=158b18ffa510105b239bd2f4a253ed33e21fcebc", "patch": "@@ -182,8 +182,8 @@ m2linemap_ErrorAt (location_t location, char *message)\n \n /* m2linemap_ErrorAtf - wraps up an error message.  */\n \n-void\n-m2linemap_ErrorAtf (location_t location, const char *message, ...)\n+static void\n+m2linemap_ErrorAtf_1 (location_t location, const char *message, ...)\n {\n   diagnostic_info diagnostic;\n   va_list ap;\n@@ -195,10 +195,16 @@ m2linemap_ErrorAtf (location_t location, const char *message, ...)\n   va_end (ap);\n }\n \n+void\n+m2linemap_ErrorAtf (location_t location, const char *message)\n+{\n+  m2linemap_ErrorAtf_1 (location, message);\n+}\n+\n /* m2linemap_WarningAtf - wraps up a warning message.  */\n \n-void\n-m2linemap_WarningAtf (location_t location, const char *message, ...)\n+static void\n+m2linemap_WarningAtf_1 (location_t location, const char *message, ...)\n {\n   diagnostic_info diagnostic;\n   va_list ap;\n@@ -210,10 +216,16 @@ m2linemap_WarningAtf (location_t location, const char *message, ...)\n   va_end (ap);\n }\n \n+void\n+m2linemap_WarningAtf (location_t location, const char *message)\n+{\n+  m2linemap_WarningAtf_1 (location, message);\n+}\n+\n /* m2linemap_NoteAtf - wraps up a note message.  */\n \n-void\n-m2linemap_NoteAtf (location_t location, const char *message, ...)\n+static void\n+m2linemap_NoteAtf_1 (location_t location, const char *message, ...)\n {\n   diagnostic_info diagnostic;\n   va_list ap;\n@@ -225,6 +237,12 @@ m2linemap_NoteAtf (location_t location, const char *message, ...)\n   va_end (ap);\n }\n \n+void\n+m2linemap_NoteAtf (location_t location, const char *message)\n+{\n+  m2linemap_NoteAtf_1 (location, message);\n+}\n+\n /* m2linemap_internal_error - allow Modula-2 to use the GCC internal error.  */\n \n void"}, {"sha": "689dcb4b4e194043ce4b233ef357e46b0cfcc535", "filename": "gcc/m2/gm2-gcc/m2linemap.def", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158b18ffa510105b239bd2f4a253ed33e21fcebc/gcc%2Fm2%2Fgm2-gcc%2Fm2linemap.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158b18ffa510105b239bd2f4a253ed33e21fcebc/gcc%2Fm2%2Fgm2-gcc%2Fm2linemap.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2linemap.def?ref=158b18ffa510105b239bd2f4a253ed33e21fcebc", "patch": "@@ -47,11 +47,6 @@ PROCEDURE GetLineNoFromLocation (location: location_t) : INTEGER ;\n PROCEDURE GetColumnNoFromLocation (location: location_t) : INTEGER ;\n PROCEDURE GetFilenameFromLocation (location: location_t) : ADDRESS ;\n PROCEDURE ErrorAt (location: location_t; message: ADDRESS) ;\n-(*\n-PROCEDURE ErrorAtf (location: location_t; message: ADDRESS; ...) ;\n-PROCEDURE WarningAtf (location: location_t; message: ADDRESS; ...) ;\n-PROCEDURE NoteAtf (location: location_t; message: ADDRESS; ...) ;\n-*)\n PROCEDURE ErrorAtf (location: location_t; message: ADDRESS) ;\n PROCEDURE WarningAtf (location: location_t; message: ADDRESS) ;\n PROCEDURE NoteAtf (location: location_t; message: ADDRESS) ;"}, {"sha": "6941983284f40e48a53de5c19b916b101d3b6a60", "filename": "gcc/m2/gm2-gcc/m2linemap.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/158b18ffa510105b239bd2f4a253ed33e21fcebc/gcc%2Fm2%2Fgm2-gcc%2Fm2linemap.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/158b18ffa510105b239bd2f4a253ed33e21fcebc/gcc%2Fm2%2Fgm2-gcc%2Fm2linemap.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fm2%2Fgm2-gcc%2Fm2linemap.h?ref=158b18ffa510105b239bd2f4a253ed33e21fcebc", "patch": "@@ -55,9 +55,9 @@ EXTERN int m2linemap_GetLineNoFromLocation (location_t location);\n EXTERN int m2linemap_GetColumnNoFromLocation (location_t location);\n EXTERN const char *m2linemap_GetFilenameFromLocation (location_t location);\n EXTERN void m2linemap_ErrorAt (location_t location, char *message);\n-EXTERN void m2linemap_ErrorAtf (location_t location, const char *message, ...);\n-EXTERN void m2linemap_WarningAtf (location_t location, const char *message, ...);\n-EXTERN void m2linemap_NoteAtf (location_t location, const char *message, ...);\n+EXTERN void m2linemap_ErrorAtf (location_t location, const char *message);\n+EXTERN void m2linemap_WarningAtf (location_t location, const char *message);\n+EXTERN void m2linemap_NoteAtf (location_t location, const char *message);\n EXTERN void m2linemap_internal_error (const char *message);\n \n "}]}