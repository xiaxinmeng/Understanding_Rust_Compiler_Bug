{"sha": "81615bb072cac4840b59c3998514c68e67d241a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE2MTViYjA3MmNhYzQ4NDBiNTljMzk5ODUxNGM2OGU2N2QyNDFhMQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-12-28T20:30:08Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2020-12-28T20:30:08Z"}, "message": "i386: Fix __builtin_rint with FE_DOWNWARD rounding direction [PR96793]\n\nx86_expand_rint expander uses x86_sse_copysign_to_positive, which\nis unable to change the sign from - to +.  When FE_DOWNWARD rounding\ndirection is in effect, the expanded sequence that involves subtraction\ncan trigger x - x = -0.0 special rule.  x86_sse_copysign_to_positive\nfails to change the sign of the intermediate value, assumed to always\nbe positive, back to positive.\n\nThe patch adds one extra fabs that strips the sign from the intermediate\nvalue when flag_rounding_math is in effect.\n\n2020-12-28  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/\n\tPR target/96793\n\t* config/i386/i386-expand.c (ix86_expand_rint):\n\tRemove the sign of the intermediate value for flag_rounding_math.\n\ngcc/testsuite/\n\tPR target/96793\n\t* gcc.target/i386/pr96793-2.c: New test.", "tree": {"sha": "c1e40edf3ede85a2a5c6fab4b52c001ec31586fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1e40edf3ede85a2a5c6fab4b52c001ec31586fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/81615bb072cac4840b59c3998514c68e67d241a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81615bb072cac4840b59c3998514c68e67d241a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/81615bb072cac4840b59c3998514c68e67d241a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/81615bb072cac4840b59c3998514c68e67d241a1/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97d3ddcfc9c67d26e3869a261a506ef70e7f092e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/97d3ddcfc9c67d26e3869a261a506ef70e7f092e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/97d3ddcfc9c67d26e3869a261a506ef70e7f092e"}], "stats": {"total": 44, "additions": 37, "deletions": 7}, "files": [{"sha": "5c48cded9543cf47a2b81df8547c4563393a54c0", "filename": "gcc/config/i386/i386-expand.c", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81615bb072cac4840b59c3998514c68e67d241a1/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81615bb072cac4840b59c3998514c68e67d241a1/gcc%2Fconfig%2Fi386%2Fi386-expand.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-expand.c?ref=81615bb072cac4840b59c3998514c68e67d241a1", "patch": "@@ -16310,7 +16310,7 @@ ix86_expand_rint (rtx operand0, rtx operand1)\n         return copysign (xa, operand1);\n    */\n   machine_mode mode = GET_MODE (operand0);\n-  rtx res, xa, TWO52, two52, mask;\n+  rtx res, xa, TWO52, mask;\n   rtx_code_label *label;\n \n   res = gen_reg_rtx (mode);\n@@ -16323,16 +16323,18 @@ ix86_expand_rint (rtx operand0, rtx operand1)\n   TWO52 = ix86_gen_TWO52 (mode);\n   label = ix86_expand_sse_compare_and_jump (UNLE, TWO52, xa, false);\n \n-  two52 = TWO52;\n   if (flag_rounding_math)\n     {\n-      two52 = gen_reg_rtx (mode);\n-      ix86_sse_copysign_to_positive (two52, TWO52, res, mask);\n+      ix86_sse_copysign_to_positive (TWO52, TWO52, res, mask);\n       xa = res;\n     }\n \n-  xa = expand_simple_binop (mode, PLUS, xa, two52, NULL_RTX, 0, OPTAB_DIRECT);\n-  xa = expand_simple_binop (mode, MINUS, xa, two52, xa, 0, OPTAB_DIRECT);\n+  xa = expand_simple_binop (mode, PLUS, xa, TWO52, NULL_RTX, 0, OPTAB_DIRECT);\n+  xa = expand_simple_binop (mode, MINUS, xa, TWO52, xa, 0, OPTAB_DIRECT);\n+\n+  /* Remove the sign with FE_DOWNWARD, where x - x = -0.0.  */\n+  if (HONOR_SIGNED_ZEROS (mode) && flag_rounding_math)\n+    xa = ix86_expand_sse_fabs (xa, NULL);\n \n   ix86_sse_copysign_to_positive (res, xa, res, mask);\n \n@@ -16577,7 +16579,7 @@ ix86_expand_truncdf_32 (rtx operand0, rtx operand1)\n   tmp = expand_simple_binop (mode, MINUS,\n \t\t\t     xa2, tmp, NULL_RTX, 0, OPTAB_DIRECT);\n   /* Remove the sign with FE_DOWNWARD, where x - x = -0.0.  */\n-  if (flag_rounding_math)\n+  if (HONOR_SIGNED_ZEROS (mode) && flag_rounding_math)\n     tmp = ix86_expand_sse_fabs (tmp, NULL);\n \n   /* res = copysign (xa2, operand1) */"}, {"sha": "14efaab9faa5a9b0ad8ae0560362624e28491cb9", "filename": "gcc/testsuite/gcc.target/i386/pr96793-2.c", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/81615bb072cac4840b59c3998514c68e67d241a1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr96793-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/81615bb072cac4840b59c3998514c68e67d241a1/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr96793-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr96793-2.c?ref=81615bb072cac4840b59c3998514c68e67d241a1", "patch": "@@ -0,0 +1,28 @@\n+/* PR target/96793 */\n+/* { dg-do run { target sse2_runtime } } */\n+/* { dg-require-effective-target fenv } */\n+/* { dg-options \"-O2 -frounding-math -msse2 -mno-sse4 -mfpmath=sse\" } */\n+\n+#include <fenv.h>\n+\n+double\n+__attribute__((noinline))\n+test (double value)\n+{\n+  return __builtin_rint (value);\n+}\n+\n+int\n+main ()\n+{\n+  double result;\n+\n+  fesetround (FE_DOWNWARD);\n+\n+  result = test (0.25);\n+\n+  if (__builtin_signbit (result) != 0)\n+    __builtin_abort ();\n+\n+  return 0;\n+}"}]}