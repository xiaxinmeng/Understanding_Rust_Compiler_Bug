{"sha": "375aa4bcc7c47df4c7892a19cdb4848d825503a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc1YWE0YmNjN2M0N2RmNGM3ODkyYTE5Y2RiNDg0OGQ4MjU1MDNhNg==", "commit": {"author": {"name": "Pat Haugen", "email": "pthaugen@us.ibm.com", "date": "2017-11-16T20:14:22Z"}, "committer": {"name": "Pat Haugen", "email": "pthaugen@gcc.gnu.org", "date": "2017-11-16T20:14:22Z"}, "message": "power9.md (power9fpdiv): New automaton and cpu_unit defined for it.\n\n\t* rs6000/power9.md (power9fpdiv): New automaton and cpu_unit defined\n\tfor it.\n\t(DU_C2_3_power9): Correct reservation combinations.\n\t(FP_DIV_power9, VEC_DIV_power9): New.\n\t(power9-alu): Split out rotate/shift...\n\t(power9-rot): ...to here, correct dispatch resource.\n\t(power9-cracked-alu, power9-mul, power9-mul-compare): Correct dispatch\n\tresource.\n\t(power9-fp): Correct latency.\n\t(power9-sdiv): Add div/sqrt resource.\n\t(power9-ddiv): Correct latency, add div/sqrt resource.\n\t(power9-sqrt, power9-dsqrt): Add div/sqrt resource.\n\t(power9-vecfdiv, power9-vecdiv): Correct latency, add div/sqrt\n\tresource.\n\t(power9-qpdiv, power9-qpmul): Adjust resource usage.\n\nFrom-SVN: r254844", "tree": {"sha": "74e6de8fcbb17c98977c5988266ab46808caedc9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/74e6de8fcbb17c98977c5988266ab46808caedc9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/375aa4bcc7c47df4c7892a19cdb4848d825503a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375aa4bcc7c47df4c7892a19cdb4848d825503a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/375aa4bcc7c47df4c7892a19cdb4848d825503a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/375aa4bcc7c47df4c7892a19cdb4848d825503a6/comments", "author": null, "committer": null, "parents": [{"sha": "6296cf8e099aae43c86a773f93d83a19df85d7e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6296cf8e099aae43c86a773f93d83a19df85d7e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6296cf8e099aae43c86a773f93d83a19df85d7e7"}], "stats": {"total": 83, "additions": 61, "deletions": 22}, "files": [{"sha": "541ec6e73e00a0e72b6a910499a86ea498fa25a9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375aa4bcc7c47df4c7892a19cdb4848d825503a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375aa4bcc7c47df4c7892a19cdb4848d825503a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=375aa4bcc7c47df4c7892a19cdb4848d825503a6", "patch": "@@ -1,3 +1,21 @@\n+2017-11-16  Pat Haugen  <pthaugen@us.ibm.com>\n+\n+\t* rs6000/power9.md (power9fpdiv): New automaton and cpu_unit defined\n+\tfor it.\n+\t(DU_C2_3_power9): Correct reservation combinations.\n+\t(FP_DIV_power9, VEC_DIV_power9): New.\n+\t(power9-alu): Split out rotate/shift...\n+\t(power9-rot): ...to here, correct dispatch resource.\n+\t(power9-cracked-alu, power9-mul, power9-mul-compare): Correct dispatch\n+\tresource.\n+\t(power9-fp): Correct latency.\n+\t(power9-sdiv): Add div/sqrt resource.\n+\t(power9-ddiv): Correct latency, add div/sqrt resource.\n+\t(power9-sqrt, power9-dsqrt): Add div/sqrt resource.\n+\t(power9-vecfdiv, power9-vecdiv): Correct latency, add div/sqrt\n+\tresource.\n+\t(power9-qpdiv, power9-qpmul): Adjust resource usage.\n+\n 2017-11-15  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (rs6000_expand_builtin): Do not do the"}, {"sha": "e0f71fba153c4893777d6a4359142f69726d7e9d", "filename": "gcc/config/rs6000/power9.md", "status": "modified", "additions": 43, "deletions": 22, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/375aa4bcc7c47df4c7892a19cdb4848d825503a6/gcc%2Fconfig%2Frs6000%2Fpower9.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/375aa4bcc7c47df4c7892a19cdb4848d825503a6/gcc%2Fconfig%2Frs6000%2Fpower9.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fpower9.md?ref=375aa4bcc7c47df4c7892a19cdb4848d825503a6", "patch": "@@ -19,7 +19,7 @@\n ;; along with GCC; see the file COPYING3.  If not see\n ;; <http://www.gnu.org/licenses/>.\n \n-(define_automaton \"power9dsp,power9lsu,power9vsu,power9misc\")\n+(define_automaton \"power9dsp,power9lsu,power9vsu,power9fpdiv,power9misc\")\n \n (define_cpu_unit \"lsu0_power9,lsu1_power9,lsu2_power9,lsu3_power9\" \"power9lsu\")\n (define_cpu_unit \"vsu0_power9,vsu1_power9,vsu2_power9,vsu3_power9\" \"power9vsu\")\n@@ -28,6 +28,10 @@\n ; Two fixed point divide units, not pipelined\n (define_cpu_unit \"fx_div0_power9,fx_div1_power9\" \"power9misc\")\n (define_cpu_unit \"bru_power9,cryptu_power9,dfu_power9\" \"power9misc\")\n+; Create a false unit for use by non-pipelined FP div/sqrt\n+(define_cpu_unit \"fp_div0_power9,fp_div1_power9,fp_div2_power9,fp_div3_power9\"\n+\t\t \"power9fpdiv\")\n+\n \n (define_cpu_unit \"x0_power9,x1_power9,xa0_power9,xa1_power9,\n \t\t  x2_power9,x3_power9,xb0_power9,xb1_power9,\n@@ -79,8 +83,7 @@\n \n ; 2-way cracked plus 3rd slot\n (define_reservation \"DU_C2_3_power9\" \"x0_power9+x1_power9+xa0_power9|\n-\t\t\t\t      x1_power9+x2_power9+xa0_power9|\n-\t\t\t\t      x1_power9+x2_power9+xb0_power9|\n+\t\t\t\t      x1_power9+x2_power9+xa1_power9|\n \t\t\t\t      x2_power9+x3_power9+xb0_power9\")\n \n ; 3-way cracked (consumes whole decode/dispatch cycle)\n@@ -108,6 +111,18 @@\n \n (define_reservation \"VSU_PRM_power9\" \"prm0_power9|prm1_power9\")\n \n+; Define the reservation to be used by FP div/sqrt which allows other insns\n+; to be issued to the VSU, but blocks other div/sqrt for a number of cycles.\n+; Note that the number of cycles blocked varies depending on insn, but we\n+; just use the same number for all in order to keep the number of DFA states\n+; reasonable.\n+(define_reservation \"FP_DIV_power9\"\n+\t\t    \"fp_div0_power9*8|fp_div1_power9*8|fp_div2_power9*8|\n+\t\t     fp_div3_power9*8\")\n+(define_reservation \"VEC_DIV_power9\"\n+\t\t    \"fp_div0_power9*8+fp_div1_power9*8|\n+\t\t     fp_div2_power9*8+fp_div3_power9*8\")\n+\n \n ; LS Unit\n (define_insn_reservation \"power9-load\" 4\n@@ -243,21 +258,26 @@\n \n ; Most ALU insns are simple 2 cycle, including record form\n (define_insn_reservation \"power9-alu\" 2\n-  (and (ior (eq_attr \"type\" \"add,exts,integer,logical,isel\")\n-\t    (and (eq_attr \"type\" \"insert,shift\")\n-\t\t (eq_attr \"dot\" \"no\")))\n+  (and (eq_attr \"type\" \"add,exts,integer,logical,isel\")\n        (eq_attr \"cpu\" \"power9\"))\n   \"DU_any_power9,VSU_power9\")\n ; 5 cycle CR latency\n (define_bypass 5 \"power9-alu\"\n \t\t \"power9-crlogical,power9-mfcr,power9-mfcrf\")\n \n+; Rotate/shift prevent use of third slot\n+(define_insn_reservation \"power9-rot\" 2\n+  (and (eq_attr \"type\" \"insert,shift\")\n+       (eq_attr \"dot\" \"no\")\n+       (eq_attr \"cpu\" \"power9\"))\n+  \"DU_slice_3_power9,VSU_power9\")\n+\n ; Record form rotate/shift are cracked\n (define_insn_reservation \"power9-cracked-alu\" 2\n   (and (eq_attr \"type\" \"insert,shift\")\n        (eq_attr \"dot\" \"yes\")\n        (eq_attr \"cpu\" \"power9\"))\n-  \"DU_C2_power9,VSU_power9\")\n+  \"DU_C2_3_power9,VSU_power9\")\n ; 7 cycle CR latency\n (define_bypass 7 \"power9-cracked-alu\"\n \t\t \"power9-crlogical,power9-mfcr,power9-mfcrf\")\n@@ -291,13 +311,13 @@\n   (and (eq_attr \"type\" \"mul\")\n        (eq_attr \"dot\" \"no\")\n        (eq_attr \"cpu\" \"power9\"))\n-  \"DU_any_power9,VSU_power9\")\n+  \"DU_slice_3_power9,VSU_power9\")\n \n (define_insn_reservation \"power9-mul-compare\" 5\n   (and (eq_attr \"type\" \"mul\")\n        (eq_attr \"dot\" \"yes\")\n        (eq_attr \"cpu\" \"power9\"))\n-  \"DU_C2_power9,VSU_power9\")\n+  \"DU_C2_3_power9,VSU_power9\")\n ; 10 cycle CR latency\n (define_bypass 10 \"power9-mul-compare\"\n \t\t \"power9-crlogical,power9-mfcr,power9-mfcrf\")\n@@ -349,7 +369,7 @@\n        (eq_attr \"cpu\" \"power9\"))\n   \"DU_slice_3_power9,VSU_power9\")\n \n-(define_insn_reservation \"power9-fp\" 7\n+(define_insn_reservation \"power9-fp\" 5\n   (and (eq_attr \"type\" \"fp,dmul\")\n        (eq_attr \"cpu\" \"power9\"))\n   \"DU_slice_3_power9,VSU_power9\")\n@@ -360,26 +380,26 @@\n   \"DU_slice_3_power9,VSU_power9\")\n \n ; FP div/sqrt are executed in the VSU slices.  They are not pipelined wrt other\n-; divide insns, but for the most part do not block pipelined ops.\n+; div/sqrt insns, but for the most part do not block pipelined ops.\n (define_insn_reservation \"power9-sdiv\" 22\n   (and (eq_attr \"type\" \"sdiv\")\n        (eq_attr \"cpu\" \"power9\"))\n-  \"DU_slice_3_power9,VSU_power9\")\n+  \"DU_slice_3_power9,VSU_power9,FP_DIV_power9\")\n \n-(define_insn_reservation \"power9-ddiv\" 33\n+(define_insn_reservation \"power9-ddiv\" 27\n   (and (eq_attr \"type\" \"ddiv\")\n        (eq_attr \"cpu\" \"power9\"))\n-  \"DU_slice_3_power9,VSU_power9\")\n+  \"DU_slice_3_power9,VSU_power9,FP_DIV_power9\")\n \n (define_insn_reservation \"power9-sqrt\" 26\n   (and (eq_attr \"type\" \"ssqrt\")\n        (eq_attr \"cpu\" \"power9\"))\n-  \"DU_slice_3_power9,VSU_power9\")\n+  \"DU_slice_3_power9,VSU_power9,FP_DIV_power9\")\n \n (define_insn_reservation \"power9-dsqrt\" 36\n   (and (eq_attr \"type\" \"dsqrt\")\n        (eq_attr \"cpu\" \"power9\"))\n-  \"DU_slice_3_power9,VSU_power9\")\n+  \"DU_slice_3_power9,VSU_power9,FP_DIV_power9\")\n \n (define_insn_reservation \"power9-vec-2cyc\" 2\n   (and (eq_attr \"type\" \"vecmove,veclogical,vecexts,veccmpfx\")\n@@ -419,28 +439,29 @@\n        (eq_attr \"cpu\" \"power9\"))\n   \"DU_super_power9,VSU_super_power9\")\n \n-(define_insn_reservation \"power9-vecfdiv\" 28\n+(define_insn_reservation \"power9-vecfdiv\" 24\n   (and (eq_attr \"type\" \"vecfdiv\")\n        (eq_attr \"cpu\" \"power9\"))\n-  \"DU_super_power9,VSU_super_power9\")\n+  \"DU_super_power9,VSU_super_power9,VEC_DIV_power9\")\n \n-(define_insn_reservation \"power9-vecdiv\" 32\n+(define_insn_reservation \"power9-vecdiv\" 27\n   (and (eq_attr \"type\" \"vecdiv\")\n        (eq_attr \"size\" \"!128\")\n        (eq_attr \"cpu\" \"power9\"))\n-  \"DU_super_power9,VSU_super_power9\")\n+  \"DU_super_power9,VSU_super_power9,VEC_DIV_power9\")\n \n+; Use 8 for DFU reservation on QP div/mul to limit DFA state size\n (define_insn_reservation \"power9-qpdiv\" 56\n   (and (eq_attr \"type\" \"vecdiv\")\n        (eq_attr \"size\" \"128\")\n        (eq_attr \"cpu\" \"power9\"))\n-  \"DU_super_power9,dfu_power9*44\")\n+  \"DU_super_power9,dfu_power9*8\")\n \n (define_insn_reservation \"power9-qpmul\" 24\n   (and (eq_attr \"type\" \"qmul\")\n        (eq_attr \"size\" \"128\")\n        (eq_attr \"cpu\" \"power9\"))\n-  \"DU_super_power9,dfu_power9*12\")\n+  \"DU_super_power9,dfu_power9*8\")\n \n (define_insn_reservation \"power9-mffgpr\" 2\n   (and (eq_attr \"type\" \"mffgpr\")"}]}