{"sha": "d3b41bde961713ff4af7e18011126434c497edba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDNiNDFiZGU5NjE3MTNmZjRhZjdlMTgwMTExMjY0MzRjNDk3ZWRiYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-18T06:18:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-01-18T06:18:46Z"}, "message": "libgomp: Don't access gomp_sem_t as int using atomics unconditionally\n\nThis patch introduces gomp_sem_getcount wrapper, which uses sem_getvalue\nfor POSIX and atomic loads for linux futex and accel.  rtems for now\nremains broken.\n\n2021-01-18  Jakub Jelinek  <jakub@redhat.com>\n\n\t* config/linux/sem.h (gomp_sem_getcount): New function.\n\t* config/posix/sem.h (gomp_sem_getcount): New function.\n\t* config/posix/sem.c (gomp_sem_getcount): New function.\n\t* config/accel/sem.h (gomp_sem_getcount): New function.\n\t* task.c (task_fulfilled_p): Use gomp_sem_getcount.\n\t(omp_fulfill_event): Likewise.", "tree": {"sha": "72a909a9aa158d38893c15a79b86ac0649849b27", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72a909a9aa158d38893c15a79b86ac0649849b27"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d3b41bde961713ff4af7e18011126434c497edba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3b41bde961713ff4af7e18011126434c497edba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d3b41bde961713ff4af7e18011126434c497edba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d3b41bde961713ff4af7e18011126434c497edba/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "994fb69ac1b7d52348e84a021c07b24e285294d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/994fb69ac1b7d52348e84a021c07b24e285294d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/994fb69ac1b7d52348e84a021c07b24e285294d0"}], "stats": {"total": 52, "additions": 50, "deletions": 2}, "files": [{"sha": "1b3cf992fd35c9fd1a13d47b2966e733d3d8c171", "filename": "libgomp/config/accel/sem.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b41bde961713ff4af7e18011126434c497edba/libgomp%2Fconfig%2Faccel%2Fsem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b41bde961713ff4af7e18011126434c497edba/libgomp%2Fconfig%2Faccel%2Fsem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Faccel%2Fsem.h?ref=d3b41bde961713ff4af7e18011126434c497edba", "patch": "@@ -62,4 +62,13 @@ gomp_sem_post (gomp_sem_t *sem)\n {\n   (void) __atomic_add_fetch (sem, 1, MEMMODEL_RELEASE);\n }\n+\n+static inline int\n+gomp_sem_getcount (gomp_sem_t *sem)\n+{\n+  int count = __atomic_load_n (sem, MEMMODEL_RELAXED);\n+  if (count < 0)\n+    return -1;\n+  return count;\n+}\n #endif /* GOMP_SEM_H */"}, {"sha": "bc0627d5e77d4378384638b65e62e3e2e79f9346", "filename": "libgomp/config/linux/sem.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b41bde961713ff4af7e18011126434c497edba/libgomp%2Fconfig%2Flinux%2Fsem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b41bde961713ff4af7e18011126434c497edba/libgomp%2Fconfig%2Flinux%2Fsem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Flinux%2Fsem.h?ref=d3b41bde961713ff4af7e18011126434c497edba", "patch": "@@ -85,4 +85,13 @@ gomp_sem_post (gomp_sem_t *sem)\n   if (__builtin_expect (count & SEM_WAIT, 0))\n     gomp_sem_post_slow (sem);\n }\n+\n+static inline int\n+gomp_sem_getcount (gomp_sem_t *sem)\n+{\n+  int count = __atomic_load_n (sem, MEMMODEL_RELAXED);\n+  if ((count & SEM_WAIT) != 0)\n+    return -1;\n+  return count / SEM_INC;\n+}\n #endif /* GOMP_SEM_H */"}, {"sha": "18db25ba0996e8bcf14a3bef98638c263b99ee2b", "filename": "libgomp/config/posix/sem.c", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b41bde961713ff4af7e18011126434c497edba/libgomp%2Fconfig%2Fposix%2Fsem.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b41bde961713ff4af7e18011126434c497edba/libgomp%2Fconfig%2Fposix%2Fsem.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Fposix%2Fsem.c?ref=d3b41bde961713ff4af7e18011126434c497edba", "patch": "@@ -112,6 +112,26 @@ void gomp_sem_destroy (gomp_sem_t *sem)\n \n   return;\n }\n+\n+int gomp_sem_getcount (gomp_sem_t *sem)\n+{\n+  int ret, count;\n+\n+  ret = pthread_mutex_lock (&sem->mutex);\n+  if (ret)\n+    return -1;\n+\n+  count = sem->value;\n+\n+  ret = pthread_mutex_unlock (&sem->mutex);\n+  if (ret)\n+    return -1;\n+\n+  if (count < 0)\n+    return -1;\n+\n+  return count;\n+}\n #else /* HAVE_BROKEN_POSIX_SEMAPHORES  */\n void\n gomp_sem_wait (gomp_sem_t *sem)"}, {"sha": "4d7921b70a59ad17a40dea574bca759d0d8145c5", "filename": "libgomp/config/posix/sem.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b41bde961713ff4af7e18011126434c497edba/libgomp%2Fconfig%2Fposix%2Fsem.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b41bde961713ff4af7e18011126434c497edba/libgomp%2Fconfig%2Fposix%2Fsem.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Fconfig%2Fposix%2Fsem.h?ref=d3b41bde961713ff4af7e18011126434c497edba", "patch": "@@ -64,6 +64,8 @@ extern void gomp_sem_post (gomp_sem_t *sem);\n \n extern void gomp_sem_destroy (gomp_sem_t *sem);\n \n+extern int gomp_sem_getcount (gomp_sem_t *sem);\n+\n #else /* HAVE_BROKEN_POSIX_SEMAPHORES  */\n \n typedef sem_t gomp_sem_t;\n@@ -84,5 +86,13 @@ static inline void gomp_sem_destroy (gomp_sem_t *sem)\n {\n   sem_destroy (sem);\n }\n+\n+static inline int gomp_sem_getcount (gomp_sem_t *sem)\n+{\n+  int val;\n+  if (sem_getvalue (sem, &val) < 0)\n+    return -1;\n+  return val;  \n+}\n #endif /* doesn't HAVE_BROKEN_POSIX_SEMAPHORES  */\n #endif /* GOMP_SEM_H  */"}, {"sha": "8db031cc05262faa0809e5e7a4e80c9a0610a1f4", "filename": "libgomp/task.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d3b41bde961713ff4af7e18011126434c497edba/libgomp%2Ftask.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d3b41bde961713ff4af7e18011126434c497edba/libgomp%2Ftask.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftask.c?ref=d3b41bde961713ff4af7e18011126434c497edba", "patch": "@@ -330,7 +330,7 @@ gomp_task_handle_depend (struct gomp_task *task, struct gomp_task *parent,\n static bool\n task_fulfilled_p (struct gomp_task *task)\n {\n-  return __atomic_load_n (&task->completion_sem, __ATOMIC_RELAXED);\n+  return gomp_sem_getcount (&task->completion_sem) > 0;\n }\n \n /* Called when encountering an explicit task directive.  If IF_CLAUSE is\n@@ -2406,7 +2406,7 @@ omp_fulfill_event (omp_event_handle_t event)\n   struct gomp_thread *thr = gomp_thread ();\n   struct gomp_team *team = thr ? thr->ts.team : NULL;\n \n-  if (__atomic_load_n (sem, __ATOMIC_RELAXED))\n+  if (gomp_sem_getcount (sem) > 0)\n     gomp_fatal (\"omp_fulfill_event: %p event already fulfilled!\\n\", sem);\n \n   gomp_debug (0, \"omp_fulfill_event: %p\\n\", sem);"}]}