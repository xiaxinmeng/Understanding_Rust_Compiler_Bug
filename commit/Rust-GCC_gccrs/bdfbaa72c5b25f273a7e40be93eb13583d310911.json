{"sha": "bdfbaa72c5b25f273a7e40be93eb13583d310911", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmRmYmFhNzJjNWIyNWYyNzNhN2U0MGJlOTNlYjEzNTgzZDMxMDkxMQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2018-09-29T21:59:59Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2018-09-29T21:59:59Z"}, "message": "i386: Use TImode for BLKmode values in 2 integer registers\n\nWhen passing and returning BLKmode values in 2 integer registers, use\n1 TImode register instead of 2 DImode registers. Otherwise, V1TImode\nmay be used to move and store such BLKmode values, which prevent RTL\noptimizations.\n\ngcc/\n\n\tPR target/87370\n\t* config/i386/i386.c (construct_container): Use TImode for\n\tBLKmode values in 2 integer registers.\n\ngcc/testsuite/\n\n\tPR target/87370\n\t* gcc.target/i386/pr87370.c: New test.\n\nFrom-SVN: r264716", "tree": {"sha": "ea061bd7f0306e9f4ad21b1b0c130d68ff0226bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ea061bd7f0306e9f4ad21b1b0c130d68ff0226bf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bdfbaa72c5b25f273a7e40be93eb13583d310911", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdfbaa72c5b25f273a7e40be93eb13583d310911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bdfbaa72c5b25f273a7e40be93eb13583d310911", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bdfbaa72c5b25f273a7e40be93eb13583d310911/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "29a94bf97da148775cedb260ca8581be9cc2bacd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29a94bf97da148775cedb260ca8581be9cc2bacd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29a94bf97da148775cedb260ca8581be9cc2bacd"}], "stats": {"total": 67, "additions": 65, "deletions": 2}, "files": [{"sha": "d4add9d73aa5cef61e9bf5d8858ab70d30a06067", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdfbaa72c5b25f273a7e40be93eb13583d310911/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdfbaa72c5b25f273a7e40be93eb13583d310911/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bdfbaa72c5b25f273a7e40be93eb13583d310911", "patch": "@@ -1,3 +1,9 @@\n+2018-09-29  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/87370\n+\t* config/i386/i386.c (construct_container): Use TImode for\n+\tBLKmode values in 2 integer registers.\n+\n 2018-09-29  Jeff Law  <law@redhat.com>\n \n \t* builtins.c (unterminated_array): Pass in c_strlen_data * to"}, {"sha": "547525130767dcbb45e0e032b69c2c00999378ef", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdfbaa72c5b25f273a7e40be93eb13583d310911/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdfbaa72c5b25f273a7e40be93eb13583d310911/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=bdfbaa72c5b25f273a7e40be93eb13583d310911", "patch": "@@ -7914,9 +7914,22 @@ construct_container (machine_mode mode, machine_mode orig_mode,\n   if (n == 2\n       && regclass[0] == X86_64_INTEGER_CLASS\n       && regclass[1] == X86_64_INTEGER_CLASS\n-      && (mode == CDImode || mode == TImode)\n+      && (mode == CDImode || mode == TImode || mode == BLKmode)\n       && intreg[0] + 1 == intreg[1])\n-    return gen_rtx_REG (mode, intreg[0]);\n+    {\n+      if (mode == BLKmode)\n+\t{\n+\t  /* Use TImode for BLKmode values in 2 integer registers.  */\n+\t  exp[0] = gen_rtx_EXPR_LIST (VOIDmode,\n+\t\t\t\t      gen_rtx_REG (TImode, intreg[0]),\n+\t\t\t\t      GEN_INT (0));\n+\t  ret = gen_rtx_PARALLEL (mode, rtvec_alloc (1));\n+\t  XVECEXP (ret, 0, 0) = exp[0];\n+\t  return ret;\n+\t}\n+      else\n+\treturn gen_rtx_REG (mode, intreg[0]);\n+    }\n \n   /* Otherwise figure out the entries of the PARALLEL.  */\n   for (i = 0; i < n; i++)"}, {"sha": "2f021f78aac1ce1cada2cc2ee9ee44e8dfa3de46", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdfbaa72c5b25f273a7e40be93eb13583d310911/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdfbaa72c5b25f273a7e40be93eb13583d310911/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bdfbaa72c5b25f273a7e40be93eb13583d310911", "patch": "@@ -1,3 +1,8 @@\n+2018-09-29  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/87370\n+\t* gcc.target/i386/pr87370.c: New test.\n+\n 2018-09-29  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/65667"}, {"sha": "c7b6295a33bc3a330b96170f108ac7cce5c50dc0", "filename": "gcc/testsuite/gcc.target/i386/pr87370.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bdfbaa72c5b25f273a7e40be93eb13583d310911/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr87370.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bdfbaa72c5b25f273a7e40be93eb13583d310911/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr87370.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr87370.c?ref=bdfbaa72c5b25f273a7e40be93eb13583d310911", "patch": "@@ -0,0 +1,39 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2\" } */\n+\n+struct A\n+{\n+  int b[4];\n+};\n+struct B\n+{\n+  char a[12];\n+  int b;\n+};\n+struct C\n+{\n+  char a[16];\n+};\n+\n+struct A\n+f1 (void)\n+{\n+  struct A x = {};\n+  return x;\n+}\n+\n+struct B\n+f2 (void)\n+{\n+  struct B x = {};\n+  return x;\n+}\n+\n+struct C\n+f3 (void)\n+{\n+  struct C x = {};\n+  return x;\n+}\n+\n+/* { dg-final { scan-assembler-not \"xmm\" } } */"}]}