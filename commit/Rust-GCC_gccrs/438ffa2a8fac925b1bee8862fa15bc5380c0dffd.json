{"sha": "438ffa2a8fac925b1bee8862fa15bc5380c0dffd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDM4ZmZhMmE4ZmFjOTI1YjFiZWU4ODYyZmExNWJjNTM4MGMwZGZmZA==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-04-14T13:00:21Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2020-04-14T13:00:32Z"}, "message": "i386: Remove mode size check in ix86_get_ssemov\n\nEven though ix86_hard_regno_mode_ok doesn't allow xmm16-xmm31 nor\nymm16-ymm31 in 128/256 bit modes when AVX512VL is disabled, LRA can\nstill generate reg to reg moves with xmm16-xmm31 and ymm16-ymm31 in\n128/256 bit modes.  Remove mode size check in ix86_get_ssemov.\n\ngcc/\n\n\tPR target/94561\n\t* config/i386/i386.c (ix86_get_ssemov): Remove mode size check.\n\ngcc/testsuite/\n\n\tPR target/94561\n\t* gcc.target/i386/pr94561.c: New test.", "tree": {"sha": "1045934f0c762478b0854b55a8dc7cb6010c3fbc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1045934f0c762478b0854b55a8dc7cb6010c3fbc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/438ffa2a8fac925b1bee8862fa15bc5380c0dffd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/438ffa2a8fac925b1bee8862fa15bc5380c0dffd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/438ffa2a8fac925b1bee8862fa15bc5380c0dffd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/438ffa2a8fac925b1bee8862fa15bc5380c0dffd/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "efd5bd4dfe0fa53858769c0195bb7d9352ad5a95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efd5bd4dfe0fa53858769c0195bb7d9352ad5a95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efd5bd4dfe0fa53858769c0195bb7d9352ad5a95"}], "stats": {"total": 56, "additions": 51, "deletions": 5}, "files": [{"sha": "343b52c051246442517e4658c87850c12f963f6e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438ffa2a8fac925b1bee8862fa15bc5380c0dffd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438ffa2a8fac925b1bee8862fa15bc5380c0dffd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=438ffa2a8fac925b1bee8862fa15bc5380c0dffd", "patch": "@@ -1,3 +1,8 @@\n+2020-04-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/94561\n+\t* config/i386/i386.c (ix86_get_ssemov): Remove mode size check.\n+\n 2020-04-13  Martin Sebor  <msebor@redhat.com>\n \n \t* doc/extend.texi (-Wall): Mention -Wformat-overflow and"}, {"sha": "1a9823ec8440cb03f914681a044d6c4a46167b51", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438ffa2a8fac925b1bee8862fa15bc5380c0dffd/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438ffa2a8fac925b1bee8862fa15bc5380c0dffd/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=438ffa2a8fac925b1bee8862fa15bc5380c0dffd", "patch": "@@ -4969,12 +4969,12 @@ ix86_get_ssemov (rtx *operands, unsigned size,\n       && !TARGET_AVX512VL\n       && GET_MODE_SIZE (mode) < 64)\n     {\n-      /* NB: Since ix86_hard_regno_mode_ok only allows xmm16-xmm31 or\n-\t ymm16-ymm31 in 128/256 bit modes when AVX512VL is enabled,\n-\t we get here only for xmm16-xmm31 or ymm16-ymm31 in 32/64 bit\n+      /* NB: Even though ix86_hard_regno_mode_ok doesn't allow\n+\t xmm16-xmm31 nor ymm16-ymm31 in 128/256 bit modes when\n+\t AVX512VL is disabled, LRA can still generate reg to\n+\t reg moves with xmm16-xmm31 and ymm16-ymm31 in 128/256 bit\n \t modes.  */\n-      if (GET_MODE_SIZE (mode) >= 16\n-\t  || memory_operand (operands[0], mode)\n+      if (memory_operand (operands[0], mode)\n \t  || memory_operand (operands[1], mode))\n \tgcc_unreachable ();\n       size = 64;"}, {"sha": "e7a82389fc6afd004218ec8ebc3bb24db4f0ab44", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438ffa2a8fac925b1bee8862fa15bc5380c0dffd/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438ffa2a8fac925b1bee8862fa15bc5380c0dffd/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=438ffa2a8fac925b1bee8862fa15bc5380c0dffd", "patch": "@@ -1,3 +1,8 @@\n+2020-04-14  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/94561\n+\t* gcc.target/i386/pr94561.c: New test.\n+\n 2020-04-14  Tobias Burnus  <tobias@codesourcery.com>\n \n \t* gfortran.dg/use_rename_10.f90: New."}, {"sha": "49fdf7e687d0dc04bc124fa269cd74f8e875370d", "filename": "gcc/testsuite/gcc.target/i386/pr94561.c", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/438ffa2a8fac925b1bee8862fa15bc5380c0dffd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr94561.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/438ffa2a8fac925b1bee8862fa15bc5380c0dffd/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr94561.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr94561.c?ref=438ffa2a8fac925b1bee8862fa15bc5380c0dffd", "patch": "@@ -0,0 +1,36 @@\n+/* PR target/94561 */\n+/* { dg-do compile } */\n+/* { dg-options \"-march=knl -O3 -funroll-loops\" } */\n+\n+struct xi {\n+  long int mg;\n+  int lx;\n+};\n+\n+struct xi *di;\n+int *eu;\n+\n+void\n+he (void);\n+\n+int\n+m8 (int we, int i8)\n+{\n+  int wd, cj = 0;\n+\n+  for (wd = 0; wd < 80; ++wd)\n+    {\n+      if (di->mg == 0 && (eu[wd] | !!we) == 0 && di->lx == 0)\n+        continue;\n+\n+      if (i8 == 0)\n+        he ();\n+\n+      ++cj;\n+    }\n+\n+  return cj;\n+}\n+\n+/* { dg-final { scan-assembler-not \"vmov\\[^\\n\\r]*%\\[xy\\]mm1\\[6-9\\].*\" } } */\n+/* { dg-final { scan-assembler-not \"vmov\\[^\\n\\r]*%\\[xy\\]mm\\[23\\]\\[0-9\\].*\" } } */"}]}