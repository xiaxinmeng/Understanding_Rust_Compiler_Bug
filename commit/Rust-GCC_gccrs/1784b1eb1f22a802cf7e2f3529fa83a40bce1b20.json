{"sha": "1784b1eb1f22a802cf7e2f3529fa83a40bce1b20", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc4NGIxZWIxZjIyYTgwMmNmN2UyZjM1MjlmYTgzYTQwYmNlMWIyMA==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2019-09-18T08:33:40Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2019-09-18T08:33:40Z"}, "message": "[Ada] Crash on universal case expression in fixed-point division\n\nThis patch fixes a compiler abort on a case expression whose\nalternatives are universal_real constants, when the case expression is\nan operand in a multiplication or division whose other operand is of a\nfixed-point type.\n\n2019-09-18  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* sem_res.adb (Set_Mixed_Node_Expression): If a conditional\n\texpression has universal_real alternaitves and the context is\n\tUniversal_Fixed, as when it is an operand in a fixed-point\n\tmultiplication or division, resolve the expression with a\n\tvisible fixed-point type, which must be unique.\n\ngcc/testsuite/\n\n\t* gnat.dg/fixedpnt8.adb: New testcase.\n\nFrom-SVN: r275864", "tree": {"sha": "5ea4a99b687ba7abbe9f1ac73d3a74b65a87a919", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ea4a99b687ba7abbe9f1ac73d3a74b65a87a919"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1784b1eb1f22a802cf7e2f3529fa83a40bce1b20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1784b1eb1f22a802cf7e2f3529fa83a40bce1b20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1784b1eb1f22a802cf7e2f3529fa83a40bce1b20", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1784b1eb1f22a802cf7e2f3529fa83a40bce1b20/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0cff31f0f67a88fd1bf76bab430eaa0adac94ffa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0cff31f0f67a88fd1bf76bab430eaa0adac94ffa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0cff31f0f67a88fd1bf76bab430eaa0adac94ffa"}], "stats": {"total": 52, "additions": 50, "deletions": 2}, "files": [{"sha": "2a5ca047355bfb26a2246bf234e934b1da757cd7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1784b1eb1f22a802cf7e2f3529fa83a40bce1b20/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1784b1eb1f22a802cf7e2f3529fa83a40bce1b20/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=1784b1eb1f22a802cf7e2f3529fa83a40bce1b20", "patch": "@@ -1,3 +1,11 @@\n+2019-09-18  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_res.adb (Set_Mixed_Node_Expression): If a conditional\n+\texpression has universal_real alternaitves and the context is\n+\tUniversal_Fixed, as when it is an operand in a fixed-point\n+\tmultiplication or division, resolve the expression with a\n+\tvisible fixed-point type, which must be unique.\n+\n 2019-09-18  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch3.adb (Constrain_Component_Type): For a discriminated"}, {"sha": "38de57d6cf5b378f4d77226b39ad46635dfdfc87", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1784b1eb1f22a802cf7e2f3529fa83a40bce1b20/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1784b1eb1f22a802cf7e2f3529fa83a40bce1b20/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=1784b1eb1f22a802cf7e2f3529fa83a40bce1b20", "patch": "@@ -5674,13 +5674,21 @@ package body Sem_Res is\n \n          --  A universal real conditional expression can appear in a fixed-type\n          --  context and must be resolved with that context to facilitate the\n-         --  code generation in the back end.\n+         --  code generation in the back end. However, If the context is\n+         --  Universal_fixed (i.e. as an operand of a multiplication/division\n+         --  involving a fixed-point operand) the conditional expression must\n+         --  resolve to a unique visible fixed_point type, normally Duration.\n \n          elsif Nkind_In (N, N_Case_Expression, N_If_Expression)\n            and then Etype (N) = Universal_Real\n            and then Is_Fixed_Point_Type (B_Typ)\n          then\n-            Resolve (N, B_Typ);\n+            if B_Typ = Universal_Fixed then\n+               Resolve (N, Unique_Fixed_Point_Type (N));\n+\n+            else\n+               Resolve (N, B_Typ);\n+            end if;\n \n          else\n             Resolve (N);"}, {"sha": "7cfdc4cbb2aa04340f077fb9aec8f2dc3d3ab58b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1784b1eb1f22a802cf7e2f3529fa83a40bce1b20/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1784b1eb1f22a802cf7e2f3529fa83a40bce1b20/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1784b1eb1f22a802cf7e2f3529fa83a40bce1b20", "patch": "@@ -1,3 +1,7 @@\n+2019-09-18  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* gnat.dg/fixedpnt8.adb: New testcase.\n+\n 2019-09-18  Ed Schonberg  <schonberg@adacore.com>\n \n \t* gnat.dg/discr58.adb: New testcase."}, {"sha": "1fc5cef0a75fff3588393e662b8cf0c8d42c459a", "filename": "gcc/testsuite/gnat.dg/fixedpnt8.adb", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1784b1eb1f22a802cf7e2f3529fa83a40bce1b20/gcc%2Ftestsuite%2Fgnat.dg%2Ffixedpnt8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1784b1eb1f22a802cf7e2f3529fa83a40bce1b20/gcc%2Ftestsuite%2Fgnat.dg%2Ffixedpnt8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Ffixedpnt8.adb?ref=1784b1eb1f22a802cf7e2f3529fa83a40bce1b20", "patch": "@@ -0,0 +1,28 @@\n+--  { dg-do compile }\n+\n+procedure Fixedpnt8 is\n+\n+   Ct_A : constant := 0.000_000_100;\n+   Ct_B : constant := 0.000_000_025;\n+\n+   Ct_C : constant := 1_000;\n+\n+   type Number_Type is range 0 .. Ct_C;\n+\n+   subtype Index_Type is Number_Type range 1 .. Number_Type'Last;\n+\n+   type Kind_Enumerated_Type is\n+      (A1,\n+       A2);\n+\n+   Kind : Kind_Enumerated_Type := A1;\n+\n+   V : Duration := 10.0;\n+\n+   Last : constant Index_Type :=\n+      Index_Type (V / (case Kind is --  { dg-warning \"universal_fixed expression interpreted as type \\\"Standard.Duration\\\"\" }\n+                          when A1 => Ct_B,\n+                          when A2 => Ct_A));\n+begin\n+   null;\n+end Fixedpnt8;\n\\ No newline at end of file"}]}