{"sha": "e7ebc32a807629769f5848ec0f7a2ba7e3fa281f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdlYmMzMmE4MDc2Mjk3NjlmNTg0OGVjMGY3YTJiYTdlM2ZhMjgxZg==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2004-06-21T16:39:21Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2004-06-21T16:39:21Z"}, "message": "* encoding.c (BITS_PER_UNIT): Define if a definition is not provided.\n\nFrom-SVN: r83438", "tree": {"sha": "84d1916ffb28b84935a242036a29961f90b59908", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/84d1916ffb28b84935a242036a29961f90b59908"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7ebc32a807629769f5848ec0f7a2ba7e3fa281f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7ebc32a807629769f5848ec0f7a2ba7e3fa281f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7ebc32a807629769f5848ec0f7a2ba7e3fa281f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7ebc32a807629769f5848ec0f7a2ba7e3fa281f/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de6f27a82e25b500f5c63f0cf7123c6a0b1669fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6f27a82e25b500f5c63f0cf7123c6a0b1669fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de6f27a82e25b500f5c63f0cf7123c6a0b1669fe"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "619683259e8a1fc53442915d4b64be3540f7fc58", "filename": "libobjc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7ebc32a807629769f5848ec0f7a2ba7e3fa281f/libobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7ebc32a807629769f5848ec0f7a2ba7e3fa281f/libobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2FChangeLog?ref=e7ebc32a807629769f5848ec0f7a2ba7e3fa281f", "patch": "@@ -1,3 +1,8 @@\n+2004-06-21  Nick Clifton  <nickc@redhat.com>\n+\n+\t* encoding.c (BITS_PER_UNIT): Define if a definition is not\n+\tprovided.\n+\n 2004-06-20  Alexander Malmberg  <alexander@malmberg.org>\n \n         * Makefile.in (exception.lo): Remove $(OBJC_GCFLAGS)."}, {"sha": "248ab10bd9a65b3ebf2e4aceecb4bec121b8e3ad", "filename": "libobjc/encoding.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7ebc32a807629769f5848ec0f7a2ba7e3fa281f/libobjc%2Fencoding.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7ebc32a807629769f5848ec0f7a2ba7e3fa281f/libobjc%2Fencoding.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libobjc%2Fencoding.c?ref=e7ebc32a807629769f5848ec0f7a2ba7e3fa281f", "patch": "@@ -79,7 +79,10 @@ Boston, MA 02111-1307, USA.  */\n /* Some ports (eg ARM) allow the structure size boundary to be\n    selected at compile-time.  We override the normal definition with\n    one that has a constant value for this compilation.  */\n-#undef STRUCTURE_SIZE_BOUNDARY\n+#ifndef BITS_PER_UNIT\n+#define BITS_PER_UNIT 8\n+#endif\n+#undef  STRUCTURE_SIZE_BOUNDARY\n #define STRUCTURE_SIZE_BOUNDARY (BITS_PER_UNIT * sizeof (struct{char a;}))\n \n /* Some ROUND_TYPE_ALIGN macros use TARGET_foo, and consequently"}]}