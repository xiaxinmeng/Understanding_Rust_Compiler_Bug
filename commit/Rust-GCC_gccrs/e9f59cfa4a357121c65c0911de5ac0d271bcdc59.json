{"sha": "e9f59cfa4a357121c65c0911de5ac0d271bcdc59", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTlmNTljZmE0YTM1NzEyMWM2NWMwOTExZGU1YWMwZDI3MWJjZGM1OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-04-09T20:40:06Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-04-09T20:40:06Z"}, "message": "PR c++/85277 - ICE with invalid offsetof.\n\n\t* semantics.c (finish_offsetof): Avoid passing non-DECL to %qD.\n\tAdjust -Winvalid-offsetof diagnostic to say conditionally supported.\n\nFrom-SVN: r259254", "tree": {"sha": "8dc93b0559e82d5531fdd344dce915c18881f648", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8dc93b0559e82d5531fdd344dce915c18881f648"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e9f59cfa4a357121c65c0911de5ac0d271bcdc59", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9f59cfa4a357121c65c0911de5ac0d271bcdc59", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e9f59cfa4a357121c65c0911de5ac0d271bcdc59", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e9f59cfa4a357121c65c0911de5ac0d271bcdc59/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "68a8efea502cd7c086f26a4b4c93fd8ea5dd4fdc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a8efea502cd7c086f26a4b4c93fd8ea5dd4fdc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68a8efea502cd7c086f26a4b4c93fd8ea5dd4fdc"}], "stats": {"total": 40, "additions": 23, "deletions": 17}, "files": [{"sha": "0017c34db75a66ef4f169d0491cebdfc4cee981e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9f59cfa4a357121c65c0911de5ac0d271bcdc59/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9f59cfa4a357121c65c0911de5ac0d271bcdc59/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e9f59cfa4a357121c65c0911de5ac0d271bcdc59", "patch": "@@ -1,5 +1,9 @@\n 2018-04-09  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/85277 - ICE with invalid offsetof.\n+\t* semantics.c (finish_offsetof): Avoid passing non-DECL to %qD.\n+\tAdjust -Winvalid-offsetof diagnostic to say conditionally supported.\n+\n \tPR c++/85264 - ICE with excess template-parameter-list.\n \t* parser.c (cp_parser_check_template_parameters): Add template_id_p\n \tparameter.  Don't allow an extra template header if true."}, {"sha": "8c893ed64b0098a7a262379610c37e636ac3f511", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9f59cfa4a357121c65c0911de5ac0d271bcdc59/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9f59cfa4a357121c65c0911de5ac0d271bcdc59/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=e9f59cfa4a357121c65c0911de5ac0d271bcdc59", "patch": "@@ -4043,17 +4043,17 @@ finish_offsetof (tree object_ptr, tree expr, location_t loc)\n       || TREE_CODE (TREE_TYPE (expr)) == METHOD_TYPE\n       || TREE_TYPE (expr) == unknown_type_node)\n     {\n-      if (INDIRECT_REF_P (expr))\n-\terror (\"second operand of %<offsetof%> is neither a single \"\n-\t       \"identifier nor a sequence of member accesses and \"\n-\t       \"array references\");\n-      else\n+      while (TREE_CODE (expr) == COMPONENT_REF\n+\t     || TREE_CODE (expr) == COMPOUND_EXPR)\n+\texpr = TREE_OPERAND (expr, 1);\n+\n+      if (DECL_P (expr))\n \t{\n-\t  if (TREE_CODE (expr) == COMPONENT_REF\n-\t      || TREE_CODE (expr) == COMPOUND_EXPR)\n-\t    expr = TREE_OPERAND (expr, 1);\n \t  error (\"cannot apply %<offsetof%> to member function %qD\", expr);\n+\t  inform (DECL_SOURCE_LOCATION (expr), \"declared here\");\n \t}\n+      else\n+\terror (\"cannot apply %<offsetof%> to member function\");\n       return error_mark_node;\n     }\n   if (TREE_CODE (expr) == CONST_DECL)\n@@ -4069,9 +4069,9 @@ finish_offsetof (tree object_ptr, tree expr, location_t loc)\n       && CLASS_TYPE_P (TREE_TYPE (TREE_TYPE (object_ptr)))\n       && CLASSTYPE_NON_STD_LAYOUT (TREE_TYPE (TREE_TYPE (object_ptr)))\n       && cp_unevaluated_operand == 0)\n-    pedwarn (loc, OPT_Winvalid_offsetof,\n-\t     \"offsetof within non-standard-layout type %qT is undefined\",\n-\t     TREE_TYPE (TREE_TYPE (object_ptr)));\n+    warning_at (loc, OPT_Winvalid_offsetof, \"offsetof within \"\n+\t\t\"non-standard-layout type %qT is conditionally-supported\",\n+\t\tTREE_TYPE (TREE_TYPE (object_ptr)));\n   return fold_offsetof (expr);\n }\n "}, {"sha": "cbc2daafbdd8bfc5b187ba7296ce763d8c8da596", "filename": "gcc/testsuite/g++.dg/ext/builtin-offsetof1.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9f59cfa4a357121c65c0911de5ac0d271bcdc59/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin-offsetof1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9f59cfa4a357121c65c0911de5ac0d271bcdc59/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin-offsetof1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fbuiltin-offsetof1.C?ref=e9f59cfa4a357121c65c0911de5ac0d271bcdc59", "patch": "@@ -1,9 +1,11 @@\n // PR c++/51413\n-// { dg-options \"-w\" }\n+// PR c++/85277\n+// { dg-options \"-Wno-pointer-arith\" }\n \n struct A\n {\n   static void foo();\n };\n \n-int i = __builtin_offsetof(A, foo[1]);  // { dg-error \"neither a single identifier nor a sequence of member accesses and array references\" }\n+int i = __builtin_offsetof(A, foo[1]);  // { dg-error \"offsetof\" }\n+int j = __builtin_offsetof(volatile A, foo[0]);  // { dg-error \"offsetof\" }"}, {"sha": "779fc72670a77e876848203c27afa127b2fdb813", "filename": "gcc/testsuite/g++.dg/other/offsetof3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9f59cfa4a357121c65c0911de5ac0d271bcdc59/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9f59cfa4a357121c65c0911de5ac0d271bcdc59/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof3.C?ref=e9f59cfa4a357121c65c0911de5ac0d271bcdc59", "patch": "@@ -12,4 +12,4 @@ protected:\n typedef X* pX;\n typedef __SIZE_TYPE__ size_t;\n \n-size_t yoff = __builtin_offsetof (X, y); /* { dg-error \"35:non-standard-layout\" } */\n+size_t yoff = __builtin_offsetof (X, y); /* { dg-message \"35:non-standard-layout\" } */"}, {"sha": "8514af087add8004587fff312c04561a62271ba0", "filename": "gcc/testsuite/g++.dg/other/offsetof5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9f59cfa4a357121c65c0911de5ac0d271bcdc59/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9f59cfa4a357121c65c0911de5ac0d271bcdc59/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof5.C?ref=e9f59cfa4a357121c65c0911de5ac0d271bcdc59", "patch": "@@ -9,14 +9,14 @@ struct A\n   int &i;\n };\n \n-int j = offsetof (A, i);\t\t// { dg-error \"offsetof\" }\n+int j = offsetof (A, i);\t\t// { dg-message \"offsetof\" }\n \n template <typename T>\n struct S\n {\n   T h;\n   T &i;\n-  static const int j = offsetof (S, i);\t// { dg-error \"offsetof\" }\n+  static const int j = offsetof (S, i);\t// { dg-message \"offsetof\" }\n };\n \n int k = S<int>::j;\t\t\t// { dg-message \"required from here\" }"}, {"sha": "211c5127026c63e42c53995c3527201de92e5df9", "filename": "gcc/testsuite/g++.dg/other/offsetof8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e9f59cfa4a357121c65c0911de5ac0d271bcdc59/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e9f59cfa4a357121c65c0911de5ac0d271bcdc59/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof8.C?ref=e9f59cfa4a357121c65c0911de5ac0d271bcdc59", "patch": "@@ -9,4 +9,4 @@ struct B: virtual A { };\n int a[]  = {\n   !&((B*)0)->i,    // { dg-error \"invalid access to non-static data member\" }\n   __builtin_offsetof (B, i)   // { dg-error \"invalid access to non-static\" }\n-};\t\t\t      // { dg-error \"offsetof within non-standard-layout type\" \"\" { target *-*-* } .-1 }\n+};\t\t\t      // { dg-message \"offsetof within non-standard-layout type\" \"\" { target *-*-* } .-1 }"}]}