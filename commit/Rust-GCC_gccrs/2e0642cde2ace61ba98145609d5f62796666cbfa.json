{"sha": "2e0642cde2ace61ba98145609d5f62796666cbfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmUwNjQyY2RlMmFjZTYxYmE5ODE0NTYwOWQ1ZjYyNzk2NjY2Y2JmYQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2011-01-19T15:13:01Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2011-01-19T15:13:01Z"}, "message": "re PR rtl-optimization/47337 (Wrong RTL dce of calls)\n\n\tPR rtl-optimization/47337\n\t* dce.c (check_argument_store): New function.\n\t(find_call_stack_args): Ignore debug insns.  Use check_argument_store.\n\n\t* gcc.c-torture/execute/pr47337.c: New test.\n\nFrom-SVN: r168997", "tree": {"sha": "5646308e390bbb76c0d494c9bae522ddbfc05847", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5646308e390bbb76c0d494c9bae522ddbfc05847"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e0642cde2ace61ba98145609d5f62796666cbfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e0642cde2ace61ba98145609d5f62796666cbfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e0642cde2ace61ba98145609d5f62796666cbfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e0642cde2ace61ba98145609d5f62796666cbfa/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "46e7483cbaff644bc21d2a69469921709e1a849c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46e7483cbaff644bc21d2a69469921709e1a849c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46e7483cbaff644bc21d2a69469921709e1a849c"}], "stats": {"total": 133, "additions": 121, "deletions": 12}, "files": [{"sha": "b799162f70bfe112a1e11aa786a4ed7e03251e94", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e0642cde2ace61ba98145609d5f62796666cbfa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e0642cde2ace61ba98145609d5f62796666cbfa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2e0642cde2ace61ba98145609d5f62796666cbfa", "patch": "@@ -1,5 +1,9 @@\n 2011-01-19  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR rtl-optimization/47337\n+\t* dce.c (check_argument_store): New function.\n+\t(find_call_stack_args): Ignore debug insns.  Use check_argument_store.\n+\n \tPR tree-optimization/47290\n \t* tree-eh.c (infinite_empty_loop_p): New function.\n \t(cleanup_empty_eh): Use it."}, {"sha": "f63d09e4164286f8bc52c0b5ca048f599f843744", "filename": "gcc/dce.c", "status": "modified", "additions": 26, "deletions": 12, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e0642cde2ace61ba98145609d5f62796666cbfa/gcc%2Fdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e0642cde2ace61ba98145609d5f62796666cbfa/gcc%2Fdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdce.c?ref=2e0642cde2ace61ba98145609d5f62796666cbfa", "patch": "@@ -1,5 +1,5 @@\n /* RTL dead code elimination.\n-   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010\n+   Copyright (C) 2005, 2006, 2007, 2008, 2009, 2010, 2011\n    Free Software Foundation, Inc.\n \n This file is part of GCC.\n@@ -220,6 +220,26 @@ mark_nonreg_stores (rtx body, rtx insn, bool fast)\n }\n \n \n+/* Return true if store to MEM, starting OFF bytes from stack pointer,\n+   is a call argument store, and clear corresponding bits from SP_BYTES\n+   bitmap if it is.  */\n+\n+static bool\n+check_argument_store (rtx mem, HOST_WIDE_INT off, HOST_WIDE_INT min_sp_off,\n+\t\t      HOST_WIDE_INT max_sp_off, bitmap sp_bytes)\n+{\n+  HOST_WIDE_INT byte;\n+  for (byte = off; byte < off + GET_MODE_SIZE (GET_MODE (mem)); byte++)\n+    {\n+      if (byte < min_sp_off\n+\t  || byte >= max_sp_off\n+\t  || !bitmap_clear_bit (sp_bytes, byte - min_sp_off))\n+\treturn false;\n+    }\n+  return true;\n+}\n+\n+\n /* Try to find all stack stores of CALL_INSN arguments if\n    ACCUMULATE_OUTGOING_ARGS.  If all stack stores have been found\n    and it is therefore safe to eliminate the call, return true,\n@@ -364,7 +384,7 @@ find_call_stack_args (rtx call_insn, bool do_mark, bool fast,\n   for (insn = PREV_INSN (call_insn); insn; insn = prev_insn)\n     {\n       rtx set, mem, addr;\n-      HOST_WIDE_INT off, byte;\n+      HOST_WIDE_INT off;\n \n       if (insn == BB_HEAD (BLOCK_FOR_INSN (call_insn)))\n \tprev_insn = NULL_RTX;\n@@ -374,7 +394,7 @@ find_call_stack_args (rtx call_insn, bool do_mark, bool fast,\n       if (CALL_P (insn))\n \tbreak;\n \n-      if (!INSN_P (insn))\n+      if (!NONDEBUG_INSN_P (insn))\n \tcontinue;\n \n       set = single_set (insn);\n@@ -433,17 +453,11 @@ find_call_stack_args (rtx call_insn, bool do_mark, bool fast,\n \t    break;\n \t}\n \n-      if (GET_MODE_SIZE (GET_MODE (mem)) == 0)\n+      if (GET_MODE_SIZE (GET_MODE (mem)) == 0\n+\t  || !check_argument_store (mem, off, min_sp_off,\n+\t\t\t\t    max_sp_off, sp_bytes))\n \tbreak;\n \n-      for (byte = off; byte < off + GET_MODE_SIZE (GET_MODE (mem)); byte++)\n-\t{\n-\t  if (byte < min_sp_off\n-\t      || byte >= max_sp_off\n-\t      || !bitmap_clear_bit (sp_bytes, byte - min_sp_off))\n-\t    break;\n-\t}\n-\n       if (!deletable_insn_p (insn, fast, NULL))\n \tbreak;\n "}, {"sha": "ef62c3c9b02f7e509a928f54c8f64a75ef6ef561", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e0642cde2ace61ba98145609d5f62796666cbfa/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e0642cde2ace61ba98145609d5f62796666cbfa/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2e0642cde2ace61ba98145609d5f62796666cbfa", "patch": "@@ -1,3 +1,8 @@\n+2011-01-19  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/47337\n+\t* gcc.c-torture/execute/pr47337.c: New test.\n+\n 2011-01-19  Ulrich Weigand  <Ulrich.Weigand@de.ibm.com>\n \n \tPR testsuite/45342"}, {"sha": "ea88484a2469b49cec72a84ebe01327a554f12d2", "filename": "gcc/testsuite/gcc.c-torture/execute/pr47337.c", "status": "added", "additions": 86, "deletions": 0, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e0642cde2ace61ba98145609d5f62796666cbfa/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr47337.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e0642cde2ace61ba98145609d5f62796666cbfa/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr47337.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr47337.c?ref=2e0642cde2ace61ba98145609d5f62796666cbfa", "patch": "@@ -0,0 +1,86 @@\n+/* PR rtl-optimization/47337 */\n+\n+static unsigned int a[256], b = 0;\n+static char c = 0;\n+static int d = 0, *f = &d;\n+static long long e = 0;\n+\n+static short\n+foo (long long x, long long y)\n+{\n+  return x / y;\n+}\n+\n+static char\n+bar (char x, char y)\n+{\n+  return x - y;\n+}\n+\n+static int\n+baz (int x, int y)\n+{\n+  *f = (y != (short) (y * 3));\n+  for (c = 0; c < 2; c++)\n+    {\n+    lab:\n+      if (d)\n+\t{\n+\t  if (e)\n+\t    e = 1;\n+\t  else\n+\t    return x;\n+\t}\n+      else\n+\t{\n+\t  d = 1;\n+\t  goto lab;\n+\t}\n+      f = &d;\n+    }\n+  return x;\n+}\n+\n+static void\n+fnx (unsigned long long x, int y)\n+{\n+  if (!y)\n+    {\n+      b = a[b & 1];\n+      b = a[b & 1];\n+      b = a[(b ^ (x & 1)) & 1];\n+      b = a[(b ^ (x & 1)) & 1];\n+    }\n+}\n+\n+char *volatile w = \"2\";\n+\n+int\n+main ()\n+{\n+  int h = 0;\n+  unsigned int k = 0;\n+  int l[8];\n+  int i, j;\n+\n+  if (__builtin_strcmp (w, \"1\") == 0)\n+    h = 1;\n+\n+  for (i = 0; i < 256; i++)\n+    {\n+      for (j = 8; j > 0; j--)\n+\tk = 1;\n+      a[i] = k;\n+    }\n+  for (i = 0; i < 8; i++)\n+    l[i] = 0;\n+\n+  d = bar (c, c);\n+  d = baz (c, 1 | foo (l[0], 10));\n+  fnx (d, h);\n+  fnx (e, h);\n+\n+  if (d != 0)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}