{"sha": "10db7573014008ff867098206f51012d501ab57b", "node_id": "C_kwDOANBUbNoAKDEwZGI3NTczMDE0MDA4ZmY4NjcwOTgyMDZmNTEwMTJkNTAxYWI1N2I", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-11T09:14:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2021-11-11T09:16:45Z"}, "message": "dwarf2out: Fix up field_byte_offset [PR101378]\n\nFor PCC_BITFIELD_TYPE_MATTERS field_byte_offset has quite large code\nto deal with it since many years ago (see it e.g. in GCC 3.2, although it\nused to be on HOST_WIDE_INTs, then on double_ints, now on offset_ints).\nBut that code apparently isn't able to cope with members with empty class\ntypes with [[no_unique_address]] attribute, because the empty classes have\nnon-zero type size but zero decl size and so one can end up from the\ncomputation with negative offset or offset 1 byte smaller than it should be.\nFor !PCC_BITFIELD_TYPE_MATTERS, we just use\n    tree_result = byte_position (decl);\nwhich seems exactly right even for the empty classes or anything which is\nnot a bitfield (and for which we don't add DW_AT_bit_offset attribute).\nSo, instead of trying to handle those no_unique_address members in the\ncurrent already very complicated code, this limits it to bitfields.\n\nstor-layout.c PCC_BITFIELD_TYPE_MATTERS handling also affects only\nbitfields, twice it checks DECL_BIT_FIELD and once DECL_BIT_FIELD_TYPE.\n\nAs discussed, this patch uses DECL_BIT_FIELD_TYPE check, because\nDECL_BIT_FIELD might be cleared for some bitfields with bitsizes\nmultiple of BITS_PER_UNIT and e.g.\nstruct S { int e; int a : 1, b : 7, c : 8, d : 16; } s;\nstruct T { int a : 1, b : 7; long long c : 8; int d : 16; } t;\n\nint\nmain ()\n{\n  s.c = 0x55;\n  s.d = 0xaaaa;\n  t.c = 0x55;\n  t.d = 0xaaaa;\n  s.e++;\n}\nhas different debug info with DECL_BIT_FIELD check.\n\n2021-11-11  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR debug/101378\n\t* dwarf2out.c (field_byte_offset): Do the PCC_BITFIELD_TYPE_MATTERS\n\thandling only for DECL_BIT_FIELD_TYPE decls.\n\n\t* g++.dg/debug/dwarf2/pr101378.C: New test.", "tree": {"sha": "6e329d4d3f16e7378d503aaa0df4cc2f068ecfc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e329d4d3f16e7378d503aaa0df4cc2f068ecfc5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10db7573014008ff867098206f51012d501ab57b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10db7573014008ff867098206f51012d501ab57b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10db7573014008ff867098206f51012d501ab57b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10db7573014008ff867098206f51012d501ab57b/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "145be5efaf5674a7d25c723dc5684392a6276834", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/145be5efaf5674a7d25c723dc5684392a6276834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/145be5efaf5674a7d25c723dc5684392a6276834"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "e1d6a79ecd7be60315f30b87999142fcb77f2d90", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10db7573014008ff867098206f51012d501ab57b/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10db7573014008ff867098206f51012d501ab57b/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=10db7573014008ff867098206f51012d501ab57b", "patch": "@@ -19646,6 +19646,7 @@ field_byte_offset (const_tree decl, struct vlr_context *ctx,\n      properly dynamic byte offsets only when PCC bitfield type doesn't\n      matter.  */\n   if (PCC_BITFIELD_TYPE_MATTERS\n+      && DECL_BIT_FIELD_TYPE (decl)\n       && TREE_CODE (DECL_FIELD_OFFSET (decl)) == INTEGER_CST)\n     {\n       offset_int object_offset_in_bits;"}, {"sha": "ec5e44df8045202a60b9e003e1285573be1e4a06", "filename": "gcc/testsuite/g++.dg/debug/dwarf2/pr101378.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10db7573014008ff867098206f51012d501ab57b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr101378.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10db7573014008ff867098206f51012d501ab57b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr101378.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fdebug%2Fdwarf2%2Fpr101378.C?ref=10db7573014008ff867098206f51012d501ab57b", "patch": "@@ -0,0 +1,13 @@\n+// PR debug/101378\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-gdwarf-5 -dA\" }\n+// { dg-final { scan-assembler-times \"0\\[^0-9x\\\\r\\\\n\\]* DW_AT_data_member_location\" 1 } }\n+// { dg-final { scan-assembler-times \"1\\[^0-9x\\\\r\\\\n\\]* DW_AT_data_member_location\" 1 } }\n+// { dg-final { scan-assembler-times \"2\\[^0-9x\\\\r\\\\n\\]* DW_AT_data_member_location\" 1 } }\n+// { dg-final { scan-assembler-not \"-1\\[^0-9x\\\\r\\\\n\\]* DW_AT_data_member_location\" } }\n+\n+struct E {};\n+struct S\n+{\n+  [[no_unique_address]] E e, f, g;\n+} s;"}]}