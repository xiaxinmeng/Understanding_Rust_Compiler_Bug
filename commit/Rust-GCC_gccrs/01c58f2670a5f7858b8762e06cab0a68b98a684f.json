{"sha": "01c58f2670a5f7858b8762e06cab0a68b98a684f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFjNThmMjY3MGE1Zjc4NThiODc2MmUwNmNhYjBhNjhiOThhNjg0Zg==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2002-06-01T16:51:00Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2002-06-01T16:51:00Z"}, "message": "fold-const.c (fold_truthop): Transform \"a || b\" into \"(a|b) != 0\" and \"!p && !q\" into \"(p|q) == 0\" under...\n\n\n\t* fold-const.c (fold_truthop): Transform \"a || b\" into \"(a|b) != 0\"\n\tand \"!p && !q\" into \"(p|q) == 0\" under suitable conditions.\n\nFrom-SVN: r54148", "tree": {"sha": "1ca73084ca38923e70f162fc15f33747a48b65c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1ca73084ca38923e70f162fc15f33747a48b65c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01c58f2670a5f7858b8762e06cab0a68b98a684f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01c58f2670a5f7858b8762e06cab0a68b98a684f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01c58f2670a5f7858b8762e06cab0a68b98a684f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01c58f2670a5f7858b8762e06cab0a68b98a684f/comments", "author": null, "committer": null, "parents": [{"sha": "91b1247259cffcd3eb65721d21349b1a9eccafe3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91b1247259cffcd3eb65721d21349b1a9eccafe3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91b1247259cffcd3eb65721d21349b1a9eccafe3"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "0dd65f30b66a24c58279b7426bd7cd79ae5a3861", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01c58f2670a5f7858b8762e06cab0a68b98a684f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01c58f2670a5f7858b8762e06cab0a68b98a684f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=01c58f2670a5f7858b8762e06cab0a68b98a684f", "patch": "@@ -1,3 +1,8 @@\n+2002-06-01  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* fold-const.c (fold_truthop): Transform \"a || b\" into \"(a|b) != 0\"\n+\tand \"!p && !q\" into \"(p|q) == 0\" under suitable conditions.\n+\n 2002-06-01  Andreas Jaeger  <aj@suse.de>\n \n \t* cppexp.c (cpp_classify_number): Cast precission to int for"}, {"sha": "0998a93aa2e433e8e761b92be7dace7ebaecf64f", "filename": "gcc/fold-const.c", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01c58f2670a5f7858b8762e06cab0a68b98a684f/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01c58f2670a5f7858b8762e06cab0a68b98a684f/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=01c58f2670a5f7858b8762e06cab0a68b98a684f", "patch": "@@ -3506,7 +3506,29 @@ fold_truthop (code, truth_type, lhs, rhs)\n       && ! FLOAT_TYPE_P (TREE_TYPE (rl_arg))\n       && simple_operand_p (rl_arg)\n       && simple_operand_p (rr_arg))\n-    return build (code, truth_type, lhs, rhs);\n+    {\n+      /* Convert (a != 0) || (b != 0) into (a | b) != 0.  */\n+      if (code == TRUTH_OR_EXPR\n+\t  && lcode == NE_EXPR && integer_zerop (lr_arg)\n+\t  && rcode == NE_EXPR && integer_zerop (rr_arg)\n+\t  && TREE_TYPE (ll_arg) == TREE_TYPE (rl_arg))\n+\treturn build (NE_EXPR, truth_type,\n+\t\t      build (BIT_IOR_EXPR, TREE_TYPE (ll_arg),\n+\t\t\t     ll_arg, rl_arg),\n+\t\t      integer_zero_node);\n+\n+      /* Convert (a == 0) && (b == 0) into (a | b) == 0.  */\n+      if (code == TRUTH_AND_EXPR\n+\t  && lcode == EQ_EXPR && integer_zerop (lr_arg)\n+\t  && rcode == EQ_EXPR && integer_zerop (rr_arg)\n+\t  && TREE_TYPE (ll_arg) == TREE_TYPE (rl_arg))\n+\treturn build (EQ_EXPR, truth_type,\n+\t\t      build (BIT_IOR_EXPR, TREE_TYPE (ll_arg),\n+\t\t\t     ll_arg, rl_arg),\n+\t\t      integer_zero_node);\n+\n+      return build (code, truth_type, lhs, rhs);\n+    }\n \n   /* See if the comparisons can be merged.  Then get all the parameters for\n      each side.  */"}]}