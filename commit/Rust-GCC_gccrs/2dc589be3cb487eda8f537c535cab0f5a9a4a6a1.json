{"sha": "2dc589be3cb487eda8f537c535cab0f5a9a4a6a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRjNTg5YmUzY2I0ODdlZGE4ZjUzN2M1MzVjYWIwZjVhOWE0YTZhMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2017-09-22T18:55:21Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2017-09-22T18:55:21Z"}, "message": "re PR sanitizer/81929 (exponential slowdown in undefined behavior sanitizer for streaming)\n\n\tPR sanitizer/81929\n\t* tree.c (struct replace_placeholders_t): Add pset field.\n\t(replace_placeholders_r): Call cp_walk_tree with d->pset as\n\tlast argument instead of NULL.  Formatting fix.\n\t(replace_placeholders): Add pset variable, add its address\n\tinto data.  Pass &pset instead of NULL to cp_walk_tree.\n\n\t* g++.dg/ubsan/pr81929.C: New test.\n\nFrom-SVN: r253106", "tree": {"sha": "e20eb730d1aa94bba5c78eaacfb5b7e5fd413900", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e20eb730d1aa94bba5c78eaacfb5b7e5fd413900"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2dc589be3cb487eda8f537c535cab0f5a9a4a6a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dc589be3cb487eda8f537c535cab0f5a9a4a6a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dc589be3cb487eda8f537c535cab0f5a9a4a6a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dc589be3cb487eda8f537c535cab0f5a9a4a6a1/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c90df0d293367452d193f04a18c2233d64a10d1a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c90df0d293367452d193f04a18c2233d64a10d1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c90df0d293367452d193f04a18c2233d64a10d1a"}], "stats": {"total": 41, "additions": 35, "deletions": 6}, "files": [{"sha": "6288dcaf7279a9480f77f33f3043e03a1f921e62", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dc589be3cb487eda8f537c535cab0f5a9a4a6a1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dc589be3cb487eda8f537c535cab0f5a9a4a6a1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2dc589be3cb487eda8f537c535cab0f5a9a4a6a1", "patch": "@@ -1,3 +1,12 @@\n+2017-09-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/81929\n+\t* tree.c (struct replace_placeholders_t): Add pset field.\n+\t(replace_placeholders_r): Call cp_walk_tree with d->pset as\n+\tlast argument instead of NULL.  Formatting fix.\n+\t(replace_placeholders): Add pset variable, add its address\n+\tinto data.  Pass &pset instead of NULL to cp_walk_tree.\n+\n 2017-09-22  David Malcolm  <dmalcolm@redhat.com>\n \n \t* call.c (get_fndecl_argument_location): New function."}, {"sha": "e21ff6a1572f853a2e772f09dcfb315cfbdb74f2", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dc589be3cb487eda8f537c535cab0f5a9a4a6a1/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dc589be3cb487eda8f537c535cab0f5a9a4a6a1/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=2dc589be3cb487eda8f537c535cab0f5a9a4a6a1", "patch": "@@ -3063,6 +3063,7 @@ struct replace_placeholders_t\n {\n   tree obj;\t    /* The object to be substituted for a PLACEHOLDER_EXPR.  */\n   bool seen;\t    /* Whether we've encountered a PLACEHOLDER_EXPR.  */\n+  hash_set<tree> *pset;\t/* To avoid walking same trees multiple times.  */\n };\n \n /* Like substitute_placeholder_in_expr, but handle C++ tree codes and\n@@ -3085,8 +3086,8 @@ replace_placeholders_r (tree* t, int* walk_subtrees, void* data_)\n     case PLACEHOLDER_EXPR:\n       {\n \ttree x = obj;\n-\tfor (; !(same_type_ignoring_top_level_qualifiers_p\n-\t\t (TREE_TYPE (*t), TREE_TYPE (x)));\n+\tfor (; !same_type_ignoring_top_level_qualifiers_p (TREE_TYPE (*t),\n+\t\t\t\t\t\t\t   TREE_TYPE (x));\n \t     x = TREE_OPERAND (x, 0))\n \t  gcc_assert (TREE_CODE (x) == COMPONENT_REF);\n \t*t = x;\n@@ -3118,8 +3119,7 @@ replace_placeholders_r (tree* t, int* walk_subtrees, void* data_)\n \t\t  valp = &TARGET_EXPR_INITIAL (*valp);\n \t      }\n \t    d->obj = subob;\n-\t    cp_walk_tree (valp, replace_placeholders_r,\n-\t\t\t  data_, NULL);\n+\t    cp_walk_tree (valp, replace_placeholders_r, data_, d->pset);\n \t    d->obj = obj;\n \t  }\n \t*walk_subtrees = false;\n@@ -3151,10 +3151,11 @@ replace_placeholders (tree exp, tree obj, bool *seen_p)\n     return exp;\n \n   tree *tp = &exp;\n-  replace_placeholders_t data = { obj, false };\n+  hash_set<tree> pset;\n+  replace_placeholders_t data = { obj, false, &pset };\n   if (TREE_CODE (exp) == TARGET_EXPR)\n     tp = &TARGET_EXPR_INITIAL (exp);\n-  cp_walk_tree (tp, replace_placeholders_r, &data, NULL);\n+  cp_walk_tree (tp, replace_placeholders_r, &data, &pset);\n   if (seen_p)\n     *seen_p = data.seen;\n   return exp;"}, {"sha": "7c5104512c0ec1c92c295ec5c33984e86f1d13d2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dc589be3cb487eda8f537c535cab0f5a9a4a6a1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dc589be3cb487eda8f537c535cab0f5a9a4a6a1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2dc589be3cb487eda8f537c535cab0f5a9a4a6a1", "patch": "@@ -1,3 +1,8 @@\n+2017-09-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR sanitizer/81929\n+\t* g++.dg/ubsan/pr81929.C: New test.\n+\n 2017-09-22  Richard Sandiford  <richard.sandiford@linaro.org>\n \n \tPR tree-optimization/82289"}, {"sha": "90f2628c41dbba17bfaace582762a0dbfd8e556f", "filename": "gcc/testsuite/g++.dg/ubsan/pr81929.C", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dc589be3cb487eda8f537c535cab0f5a9a4a6a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr81929.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dc589be3cb487eda8f537c535cab0f5a9a4a6a1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr81929.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fubsan%2Fpr81929.C?ref=2dc589be3cb487eda8f537c535cab0f5a9a4a6a1", "patch": "@@ -0,0 +1,14 @@\n+// PR sanitizer/81929\n+// { dg-do compile }\n+// { dg-options \"-std=c++14 -fsanitize=undefined\" }\n+\n+struct S { S &operator<< (long); S foo (); S (); };\n+\n+void\n+bar ()\n+{\n+  static_cast<S&>(S () << 0 << 0 << 0 << 0 << 0 << 0 << 0 << 0 << 0 << 0 << 0\n+\t\t       << 0 << 0 << 0 << 0 << 0 << 0 << 0 << 0 << 0 << 0 << 0\n+\t\t       << 0 << 0 << 0 << 0 << 0 << 0 << 0 << 0 << 0 << 0 << 0\n+\t\t       << 0 << 0 << 0 << 0 << 0 << 0 << 0 << 0 << 0 << 0 << 0).foo ();\n+}"}]}