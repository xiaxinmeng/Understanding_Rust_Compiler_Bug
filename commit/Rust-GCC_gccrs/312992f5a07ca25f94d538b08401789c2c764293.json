{"sha": "312992f5a07ca25f94d538b08401789c2c764293", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzEyOTkyZjVhMDdjYTI1Zjk0ZDUzOGIwODQwMTc4OWMyYzc2NDI5Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-11T08:33:52Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-03-11T08:33:52Z"}, "message": "dfp: Fix decimal_to_binary [PR94111]\n\nAs e.g. decimal_from_decnumber shows, the REAL_VALUE_TYPE representation\ncontains a decimal128 embedded in ->sig only if it is rvc_normal, for\nother kinds like rvc_inf or rvc_nan, ->sig is ignored and everything is\ncontained in the REAL_VALUE_TYPE flags (cl, sign, signalling and decimal).\ndecimal_to_binary which is used when folding a decimal{32,64,128} constant\nto a binary floating point type ignores this and thus folds infinities and\nNaNs into +0.0.\nThe following patch fixes that by only doing that for rvc_normal.\nSimilarly to the binary to decimal folding, it goes through a string, in\norder to e.g. deal with canonical NaN mantissas, or binary float formats\nthat don't support infinities and/or NaNs.\n\n2020-03-11  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/94111\n\t* dfp.c (decimal_to_binary): Only use decimal128ToString if from->cl\n\tis rvc_normal, otherwise use real_to_decimal to print the number to\n\tstring.\n\n\t* gcc.dg/dfp/pr94111.c: New test.", "tree": {"sha": "5a36177be134d3b68ae168cd0c6f05442a373e7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a36177be134d3b68ae168cd0c6f05442a373e7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/312992f5a07ca25f94d538b08401789c2c764293", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/312992f5a07ca25f94d538b08401789c2c764293", "html_url": "https://github.com/Rust-GCC/gccrs/commit/312992f5a07ca25f94d538b08401789c2c764293", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/312992f5a07ca25f94d538b08401789c2c764293/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05ac4d9c7b336e30413dd80c3630981151499f9e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/05ac4d9c7b336e30413dd80c3630981151499f9e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/05ac4d9c7b336e30413dd80c3630981151499f9e"}], "stats": {"total": 30, "additions": 27, "deletions": 3}, "files": [{"sha": "b2d8ee1c830b8245f64bd9f62d7c7039b1af3411", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312992f5a07ca25f94d538b08401789c2c764293/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312992f5a07ca25f94d538b08401789c2c764293/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=312992f5a07ca25f94d538b08401789c2c764293", "patch": "@@ -1,5 +1,10 @@\n 2020-03-11  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/94111\n+\t* dfp.c (decimal_to_binary): Only use decimal128ToString if from->cl\n+\tis rvc_normal, otherwise use real_to_decimal to print the number to\n+\tstring.\n+\n \tPR tree-optimization/94114\n \t* tree-loop-distribution.c (generate_memset_builtin): Call\n \trewrite_to_non_trapping_overflow even on mem."}, {"sha": "fef39a5ce399d642cf5bc6879a05d51d187b6301", "filename": "gcc/dfp.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312992f5a07ca25f94d538b08401789c2c764293/gcc%2Fdfp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312992f5a07ca25f94d538b08401789c2c764293/gcc%2Fdfp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdfp.c?ref=312992f5a07ca25f94d538b08401789c2c764293", "patch": "@@ -342,9 +342,13 @@ decimal_to_binary (REAL_VALUE_TYPE *to, const REAL_VALUE_TYPE *from,\n \t\t   const real_format *fmt)\n {\n   char string[256];\n-  const decimal128 *const d128 = (const decimal128 *) from->sig;\n-\n-  decimal128ToString (d128, string);\n+  if (from->cl == rvc_normal)\n+    {\n+      const decimal128 *const d128 = (const decimal128 *) from->sig;\n+      decimal128ToString (d128, string);\n+    }\n+  else\n+    real_to_decimal (string, from, sizeof (string), 0, 1);\n   real_from_string3 (to, string, fmt);\n }\n "}, {"sha": "3a4acce674646db1082b9df1ff8a385dcd9e0cae", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312992f5a07ca25f94d538b08401789c2c764293/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312992f5a07ca25f94d538b08401789c2c764293/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=312992f5a07ca25f94d538b08401789c2c764293", "patch": "@@ -1,5 +1,8 @@\n 2020-03-11  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/94111\n+\t* gcc.dg/dfp/pr94111.c: New test.\n+\n \tPR tree-optimization/94114\n \t* gcc.dg/pr94114.c: New test.\n "}, {"sha": "ea3a132270a28c3fbd0b3dc2b37b0a89dfd35996", "filename": "gcc/testsuite/gcc.dg/dfp/pr94111.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/312992f5a07ca25f94d538b08401789c2c764293/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr94111.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/312992f5a07ca25f94d538b08401789c2c764293/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr94111.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fdfp%2Fpr94111.c?ref=312992f5a07ca25f94d538b08401789c2c764293", "patch": "@@ -0,0 +1,12 @@\n+/* PR middle-end/94111 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+int\n+main ()\n+{\n+  _Decimal32 d = (_Decimal32) __builtin_inff ();\n+  if (!__builtin_isinf ((double) d))\n+    __builtin_abort ();\n+  return 0;\n+}"}]}