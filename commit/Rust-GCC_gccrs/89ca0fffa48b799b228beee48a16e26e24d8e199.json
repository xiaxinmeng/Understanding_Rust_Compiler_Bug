{"sha": "89ca0fffa48b799b228beee48a16e26e24d8e199", "node_id": "C_kwDOANBUbNoAKDg5Y2EwZmZmYTQ4Yjc5OWIyMjhiZWVlNDhhMTZlMjZlMjRkOGUxOTk", "commit": {"author": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2022-04-22T20:52:12Z"}, "committer": {"name": "Mikael Morin", "email": "mikael@gcc.gnu.org", "date": "2022-04-22T20:52:12Z"}, "message": "fortran: Pre-evaluate string pointers. [PR102043]\n\nThis avoids a regression on deferred_character_23.f90 later in the\npatch series when array references are rewritten to use pointer\narithmetic.\n\nThe problem is a SAVE_EXPR tree as TYPE_SIZE_UNIT of one array element\ntype, which is used by the pointer arithmetic expressions.  As these\nexpressions appear in both branches of an if-then-else block, the tree\nis lowered to a variable in one of the branches but it\u2019s used in both\nbranches, which is invalid middle-end code.\n\nThis change pre-evaluates the array references or pointer arithmetics\nto variables before the if-then-else block, so that the SAVE_EXPR are\nexpanded to variables in the parent scope of the if-then-else block,\nand expressions referencing the variables remain valid in both\nbranches.\n\n\tPR fortran/102043\n\ngcc/fortran/ChangeLog:\n\t* trans-expr.cc: Pre-evaluate src and dest to variables\n\tbefore using them.\n\ngcc/testsuite/ChangeLog:\n\t* gfortran.dg/dependency_49.f90: Update variable occurence\n\tcount.", "tree": {"sha": "c547a63bd0c2baff3cf739f247db16506e1745ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c547a63bd0c2baff3cf739f247db16506e1745ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89ca0fffa48b799b228beee48a16e26e24d8e199", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89ca0fffa48b799b228beee48a16e26e24d8e199", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89ca0fffa48b799b228beee48a16e26e24d8e199", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89ca0fffa48b799b228beee48a16e26e24d8e199/comments", "author": null, "committer": null, "parents": [{"sha": "4938888ae1a1680e2aebf394d8fe80faad745bc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4938888ae1a1680e2aebf394d8fe80faad745bc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4938888ae1a1680e2aebf394d8fe80faad745bc7"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "d7a368a685f1f26b2c6c925cbeab009e77a4a580", "filename": "gcc/fortran/trans-expr.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89ca0fffa48b799b228beee48a16e26e24d8e199/gcc%2Ffortran%2Ftrans-expr.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89ca0fffa48b799b228beee48a16e26e24d8e199/gcc%2Ffortran%2Ftrans-expr.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-expr.cc?ref=89ca0fffa48b799b228beee48a16e26e24d8e199", "patch": "@@ -8093,6 +8093,13 @@ gfc_trans_string_copy (stmtblock_t * block, tree dlength, tree dest,\n   cond2 = fold_build2_loc (input_location, LT_EXPR, logical_type_node, slen,\n \t\t\t   dlen);\n \n+  /* Pre-evaluate pointers unless one of the IF arms will be optimized away.  */\n+  if (!CONSTANT_CLASS_P (cond2))\n+    {\n+      dest = gfc_evaluate_now (dest, block);\n+      src = gfc_evaluate_now (src, block);\n+    }\n+\n   /* Copy and pad with spaces.  */\n   tmp3 = build_call_expr_loc (input_location,\n \t\t\t      builtin_decl_explicit (BUILT_IN_MEMMOVE),"}, {"sha": "9638f65c06938e4d0d08f18e1ab805379a8c7eed", "filename": "gcc/testsuite/gfortran.dg/dependency_49.f90", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89ca0fffa48b799b228beee48a16e26e24d8e199/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependency_49.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89ca0fffa48b799b228beee48a16e26e24d8e199/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependency_49.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fdependency_49.f90?ref=89ca0fffa48b799b228beee48a16e26e24d8e199", "patch": "@@ -11,4 +11,5 @@ program main\n   a%x = a%x(2:3)\n   print *,a%x\n end program main\n-! { dg-final { scan-tree-dump-times \"__var_1\" 4 \"original\" } }\n+! The temporary var appears three times: declaration, copy-in and copy-out\n+! { dg-final { scan-tree-dump-times \"__var_1\" 3 \"original\" } }"}]}