{"sha": "59445d742771835d8a0a8f59e10ae1b19f79fff8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk0NDVkNzQyNzcxODM1ZDhhMGE4ZjU5ZTEwYWUxYjE5Zjc5ZmZmOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-01-30T23:37:39Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-01-30T23:37:39Z"}, "message": "re PR c++/13693 ([tree-ssa] build failure in mipsisa64-elf)\n\n        PR c++/13693\n        * method.c (use_thunk): Don't force_target_expr for void thunks.\n        * tree.c (build_target_expr_with_type): Assert non-void type.\n        (force_target_expr): Likewise.\n\nFrom-SVN: r77008", "tree": {"sha": "1d81f008b1896f9ddadfabf50c34307f267b2676", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d81f008b1896f9ddadfabf50c34307f267b2676"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/59445d742771835d8a0a8f59e10ae1b19f79fff8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59445d742771835d8a0a8f59e10ae1b19f79fff8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/59445d742771835d8a0a8f59e10ae1b19f79fff8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/59445d742771835d8a0a8f59e10ae1b19f79fff8/comments", "author": null, "committer": null, "parents": [{"sha": "7c960b3dffaa649a5d7d1a1fc71ed14804dfc445", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7c960b3dffaa649a5d7d1a1fc71ed14804dfc445", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7c960b3dffaa649a5d7d1a1fc71ed14804dfc445"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "825a6e505a17af9f8d2e41914ea58a9441658bab", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59445d742771835d8a0a8f59e10ae1b19f79fff8/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59445d742771835d8a0a8f59e10ae1b19f79fff8/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=59445d742771835d8a0a8f59e10ae1b19f79fff8", "patch": "@@ -1,3 +1,10 @@\n+2004-01-30  Richard Henderson  <rth@redhat.com>\n+\n+        PR c++/13693\n+        * method.c (use_thunk): Don't force_target_expr for void thunks.\n+        * tree.c (build_target_expr_with_type): Assert non-void type.\n+        (force_target_expr): Likewise.\n+\n 2004-01-30  Michael Matz  <matz@suse.de>\n \n \t* parser.c (cp_parser_labeled_statement): Accept case ranges."}, {"sha": "6acab3a902fa39b050f6a5a3c39d64ce0d2ee733", "filename": "gcc/cp/method.c", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59445d742771835d8a0a8f59e10ae1b19f79fff8/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59445d742771835d8a0a8f59e10ae1b19f79fff8/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=59445d742771835d8a0a8f59e10ae1b19f79fff8", "patch": "@@ -487,15 +487,17 @@ use_thunk (tree thunk_fndecl, bool emit_p)\n \tt = tree_cons (NULL_TREE, a, t);\n       t = nreverse (t);\n       t = build_call (alias, t);\n-      t = force_target_expr (TREE_TYPE (t), t);\n-      if (!this_adjusting)\n-\tt = thunk_adjust (t, /*this_adjusting=*/0,\n-\t\t\t  fixed_offset, virtual_offset);\n       \n       if (VOID_TYPE_P (TREE_TYPE (t)))\n \tfinish_expr_stmt (t);\n       else\n-\tfinish_return_stmt (t);\n+\t{\n+\t  t = force_target_expr (TREE_TYPE (t), t);\n+\t  if (!this_adjusting)\n+\t    t = thunk_adjust (t, /*this_adjusting=*/0,\n+\t\t\t      fixed_offset, virtual_offset);\n+\t  finish_return_stmt (t);\n+\t}\n \n       /* Since we want to emit the thunk, we explicitly mark its name as\n \t referenced.  */"}, {"sha": "7d9812856893bfe6718f145846567d1894414f8c", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/59445d742771835d8a0a8f59e10ae1b19f79fff8/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/59445d742771835d8a0a8f59e10ae1b19f79fff8/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=59445d742771835d8a0a8f59e10ae1b19f79fff8", "patch": "@@ -318,6 +318,8 @@ build_target_expr_with_type (tree init, tree type)\n {\n   tree slot;\n \n+  my_friendly_assert (!VOID_TYPE_P (type), 20040130);\n+\n   if (TREE_CODE (init) == TARGET_EXPR)\n     return init;\n   else if (CLASS_TYPE_P (type) && !TYPE_HAS_TRIVIAL_INIT_REF (type)\n@@ -342,7 +344,11 @@ build_target_expr_with_type (tree init, tree type)\n tree\n force_target_expr (tree type, tree init)\n {\n-  tree slot = build_local_temp (type);\n+  tree slot;\n+\n+  my_friendly_assert (!VOID_TYPE_P (type), 20040130);\n+\n+  slot = build_local_temp (type);\n   return build_target_expr (slot, init);\n }\n "}]}