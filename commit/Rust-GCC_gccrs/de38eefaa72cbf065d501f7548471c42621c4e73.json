{"sha": "de38eefaa72cbf065d501f7548471c42621c4e73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGUzOGVlZmFhNzJjYmYwNjVkNTAxZjc1NDg0NzFjNDI2MjFjNGU3Mw==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-06-14T13:51:16Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2011-06-14T13:51:16Z"}, "message": "Change builtin make to runtime call at lowering time.\n\nUse kindNoPointers as 6g does.\n\n\t* Make-lang.in (go/expressions.o): Depend on $(GO_RUNTIME_H).\n\nFrom-SVN: r175020", "tree": {"sha": "b1dabaf44c302fc461ce9c53e78e3903d642301a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1dabaf44c302fc461ce9c53e78e3903d642301a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de38eefaa72cbf065d501f7548471c42621c4e73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de38eefaa72cbf065d501f7548471c42621c4e73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de38eefaa72cbf065d501f7548471c42621c4e73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de38eefaa72cbf065d501f7548471c42621c4e73/comments", "author": null, "committer": null, "parents": [{"sha": "6868b351c74950c9ff5c2bbc041c88ee705d2fc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6868b351c74950c9ff5c2bbc041c88ee705d2fc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6868b351c74950c9ff5c2bbc041c88ee705d2fc8"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "cd2d55bd538dc5d3dfa3ded2450e3c0120e013c9", "filename": "libgo/runtime/go-make-slice.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de38eefaa72cbf065d501f7548471c42621c4e73/libgo%2Fruntime%2Fgo-make-slice.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de38eefaa72cbf065d501f7548471c42621c4e73/libgo%2Fruntime%2Fgo-make-slice.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fgo-make-slice.c?ref=de38eefaa72cbf065d501f7548471c42621c4e73", "patch": "@@ -0,0 +1,57 @@\n+/* go-make-slice.c -- make a slice.\n+\n+   Copyright 2011 The Go Authors. All rights reserved.\n+   Use of this source code is governed by a BSD-style\n+   license that can be found in the LICENSE file.  */\n+\n+#include <stdint.h>\n+\n+#include \"go-alloc.h\"\n+#include \"go-assert.h\"\n+#include \"go-panic.h\"\n+#include \"go-type.h\"\n+#include \"array.h\"\n+#include \"runtime.h\"\n+#include \"malloc.h\"\n+\n+struct __go_open_array\n+__go_make_slice2 (const struct __go_type_descriptor *td, uintptr_t len,\n+\t\t  uintptr_t cap)\n+{\n+  const struct __go_slice_type* std;\n+  int ilen;\n+  int icap;\n+  uintptr_t size;\n+  struct __go_open_array ret;\n+  unsigned int flag;\n+\n+  __go_assert (td->__code == GO_SLICE);\n+  std = (const struct __go_slice_type *) td;\n+\n+  ilen = (int) len;\n+  if (ilen < 0 || (uintptr_t) ilen != len)\n+    __go_panic_msg (\"makeslice: len out of range\");\n+\n+  icap = (int) cap;\n+  if (cap < len\n+      || (uintptr_t) icap != cap\n+      || cap > (uintptr_t) -1U / std->__element_type->__size)\n+    __go_panic_msg (\"makeslice: cap out of range\");\n+\n+  ret.__count = ilen;\n+  ret.__capacity = icap;\n+\n+  size = cap * std->__element_type->__size;\n+  flag = ((std->__element_type->__code & GO_NO_POINTERS) != 0\n+\t  ? FlagNoPointers\n+\t  : 0);\n+  ret.__values = runtime_mallocgc (size, flag, 1, 1);\n+\n+  return ret;\n+}\n+\n+struct __go_open_array\n+__go_make_slice1 (const struct __go_type_descriptor *td, uintptr_t len)\n+{\n+  return __go_make_slice2 (td, len, len);\n+}"}]}