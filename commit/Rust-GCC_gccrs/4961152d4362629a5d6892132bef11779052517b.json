{"sha": "4961152d4362629a5d6892132bef11779052517b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDk2MTE1MmQ0MzYyNjI5YTVkNjg5MjEzMmJlZjExNzc5MDUyNTE3Yg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2005-02-24T18:53:40Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2005-02-24T18:53:40Z"}, "message": "print-tree.c (print_node_brief): Print LABEL_DECL_UID.\n\n\t* print-tree.c (print_node_brief): Print LABEL_DECL_UID.\n\t(print_node): Likewise.\n\tPrint TYPE_SIZES_GIMPLIFIED.\n\nFrom-SVN: r95507", "tree": {"sha": "c4ce911ebb5caaae4abf73b1809c258b0b58fd37", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c4ce911ebb5caaae4abf73b1809c258b0b58fd37"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4961152d4362629a5d6892132bef11779052517b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4961152d4362629a5d6892132bef11779052517b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4961152d4362629a5d6892132bef11779052517b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4961152d4362629a5d6892132bef11779052517b/comments", "author": null, "committer": null, "parents": [{"sha": "cb9e4f55b0bfcbf3b25213774193d4a4bb8a8342", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cb9e4f55b0bfcbf3b25213774193d4a4bb8a8342", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cb9e4f55b0bfcbf3b25213774193d4a4bb8a8342"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "cdc567124ef104bfa7e9c25215d1630852891d77", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4961152d4362629a5d6892132bef11779052517b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4961152d4362629a5d6892132bef11779052517b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4961152d4362629a5d6892132bef11779052517b", "patch": "@@ -1,3 +1,9 @@\n+2005-02-24  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* print-tree.c (print_node_brief): Print LABEL_DECL_UID.\n+\t(print_node): Likewise.\n+\tPrint TYPE_SIZES_GIMPLIFIED.\n+\n 2005-02-24  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* config/cris/cris.md (\"umulhisi3\", \"umulqihi3\", \"mulsi3\")"}, {"sha": "41d029a4bf404c2782a51523f80104d72397199b", "filename": "gcc/print-tree.c", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4961152d4362629a5d6892132bef11779052517b/gcc%2Fprint-tree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4961152d4362629a5d6892132bef11779052517b/gcc%2Fprint-tree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprint-tree.c?ref=4961152d4362629a5d6892132bef11779052517b", "patch": "@@ -79,6 +79,12 @@ print_node_brief (FILE *file, const char *prefix, tree node, int indent)\n     {\n       if (DECL_NAME (node))\n \tfprintf (file, \" %s\", IDENTIFIER_POINTER (DECL_NAME (node)));\n+      else if (TREE_CODE (node) == LABEL_DECL\n+\t       && LABEL_DECL_UID (node) != -1)\n+\tfprintf (file, \" L.\" HOST_WIDE_INT_PRINT_DEC, LABEL_DECL_UID (node));\n+      else\n+\tfprintf (file, \" %c.%u\", TREE_CODE (node) == CONST_DECL ? 'C' : 'D',\n+\t\t DECL_UID (node));\n     }\n   else if (class == tcc_type)\n     {\n@@ -217,6 +223,12 @@ print_node (FILE *file, const char *prefix, tree node, int indent)\n     {\n       if (DECL_NAME (node))\n \tfprintf (file, \" %s\", IDENTIFIER_POINTER (DECL_NAME (node)));\n+      else if (TREE_CODE (node) == LABEL_DECL\n+\t       && LABEL_DECL_UID (node) != -1)\n+\tfprintf (file, \" L.\" HOST_WIDE_INT_PRINT_DEC, LABEL_DECL_UID (node));\n+      else\n+\tfprintf (file, \" %c.%u\", TREE_CODE (node) == CONST_DECL ? 'C' : 'D',\n+\t\t DECL_UID (node));\n     }\n   else if (class == tcc_type)\n     {\n@@ -252,6 +264,9 @@ print_node (FILE *file, const char *prefix, tree node, int indent)\n     fputs (\" readonly\", file);\n   if (!TYPE_P (node) && TREE_CONSTANT (node))\n     fputs (\" constant\", file);\n+  else if (TYPE_P (node) && TYPE_SIZES_GIMPLIFIED (node))\n+    fputs (\" sizes-gimplified\", file);\n+\n   if (TREE_INVARIANT (node))\n     fputs (\" invariant\", file);\n   if (TREE_ADDRESSABLE (node))"}]}