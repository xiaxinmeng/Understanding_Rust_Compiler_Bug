{"sha": "1b7c8d39fb9f98a73adfd125b5f3b768c6401cd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWI3YzhkMzlmYjlmOThhNzNhZGZkMTI1YjVmM2I3NjhjNjQwMWNkMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-04-27T11:42:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-04-27T11:42:57Z"}, "message": "re PR middle-end/80539 (gcc ICE at -O2 and above on valid code on x86_64-linux-gnu in \"chrec_fold_plus_poly_poly\")\n\n2017-04-27  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/80539\n\t* tree-chrec.c (chrec_fold_plus_poly_poly): Deal with not\n\tbeing in loop-closed SSA form conservatively.\n\t(chrec_fold_multiply_poly_poly): Likewise.\n\n\t* gcc.dg/torture/pr80539.c: New testcase.\n\nFrom-SVN: r247322", "tree": {"sha": "0162d1c63f240c0d17e565190baaf3fa6ffa4ea4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0162d1c63f240c0d17e565190baaf3fa6ffa4ea4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1b7c8d39fb9f98a73adfd125b5f3b768c6401cd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b7c8d39fb9f98a73adfd125b5f3b768c6401cd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b7c8d39fb9f98a73adfd125b5f3b768c6401cd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b7c8d39fb9f98a73adfd125b5f3b768c6401cd2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6d25cadecc8f573fa66131b8a89c9047d596794", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6d25cadecc8f573fa66131b8a89c9047d596794", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6d25cadecc8f573fa66131b8a89c9047d596794"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "44580fc15e2ed386dc191cf083e6b0622744b0c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b7c8d39fb9f98a73adfd125b5f3b768c6401cd2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b7c8d39fb9f98a73adfd125b5f3b768c6401cd2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1b7c8d39fb9f98a73adfd125b5f3b768c6401cd2", "patch": "@@ -1,3 +1,10 @@\n+2017-04-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/80539\n+\t* tree-chrec.c (chrec_fold_plus_poly_poly): Deal with not\n+\tbeing in loop-closed SSA form conservatively.\n+\t(chrec_fold_multiply_poly_poly): Likewise.\n+\n 2017-04-27  Tamar Christina  <tamar.christina@arm.com>\n \n \tPR middle-end/79665"}, {"sha": "a28e1a90634a1c66542db3db80b62fd3a709c2cd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b7c8d39fb9f98a73adfd125b5f3b768c6401cd2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b7c8d39fb9f98a73adfd125b5f3b768c6401cd2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1b7c8d39fb9f98a73adfd125b5f3b768c6401cd2", "patch": "@@ -1,3 +1,8 @@\n+2017-04-27  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/80539\n+\t* gcc.dg/torture/pr80539.c: New testcase.\n+\n 2017-04-27  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/77728"}, {"sha": "a66767814d3f639343e3358b7d9a6ca1b556a704", "filename": "gcc/testsuite/gcc.dg/torture/pr80539.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b7c8d39fb9f98a73adfd125b5f3b768c6401cd2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr80539.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b7c8d39fb9f98a73adfd125b5f3b768c6401cd2/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr80539.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr80539.c?ref=1b7c8d39fb9f98a73adfd125b5f3b768c6401cd2", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+\n+signed char a, b;\n+void fn1()\n+{\n+  signed char c, e;\n+  short d;\n+  if (0) {\n+      for (; d;) {\n+l1:\n+\t  for (c = 7; a; c++)\n+\t    ;\n+\t  e = 6;\n+\t  for (; b; e++)\n+\t    ;\n+      }\n+      c -= e;\n+  }\n+  if (d == 7)\n+    goto l1;\n+  a = c;\n+}"}, {"sha": "28c08e7115c3865790a771142563893f5b3284de", "filename": "gcc/tree-chrec.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1b7c8d39fb9f98a73adfd125b5f3b768c6401cd2/gcc%2Ftree-chrec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1b7c8d39fb9f98a73adfd125b5f3b768c6401cd2/gcc%2Ftree-chrec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chrec.c?ref=1b7c8d39fb9f98a73adfd125b5f3b768c6401cd2", "patch": "@@ -149,7 +149,12 @@ chrec_fold_plus_poly_poly (enum tree_code code,\n \n   /* This function should never be called for chrecs of loops that\n      do not belong to the same loop nest.  */\n-  gcc_assert (loop0 == loop1);\n+  if (loop0 != loop1)\n+    {\n+      /* It still can happen if we are not in loop-closed SSA form.  */\n+      gcc_assert (! loops_state_satisfies_p (LOOP_CLOSED_SSA));\n+      return chrec_dont_know;\n+    }\n \n   if (code == PLUS_EXPR || code == POINTER_PLUS_EXPR)\n     {\n@@ -211,7 +216,12 @@ chrec_fold_multiply_poly_poly (tree type,\n        chrec_fold_multiply (type, CHREC_LEFT (poly0), poly1),\n        CHREC_RIGHT (poly0));\n \n-  gcc_assert (loop0 == loop1);\n+  if (loop0 != loop1)\n+    {\n+      /* It still can happen if we are not in loop-closed SSA form.  */\n+      gcc_assert (! loops_state_satisfies_p (LOOP_CLOSED_SSA));\n+      return chrec_dont_know;\n+    }\n \n   /* poly0 and poly1 are two polynomials in the same variable,\n      {a, +, b}_x * {c, +, d}_x  ->  {a*c, +, a*d + b*c + b*d, +, 2*b*d}_x.  */"}]}