{"sha": "37a92c0ca231f3767dd905f155fb8d9a20369f2b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdhOTJjMGNhMjMxZjM3NjdkZDkwNWYxNTVmYjhkOWEyMDM2OWYyYg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2016-07-15T18:38:31Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2016-07-15T18:38:31Z"}, "message": "PR c++/71604 - type definition in range-based for\n\n\tPR c++/54430\n\t* parser.c (cp_parser_range_for): Modify IDENTIFIER_BINDING directly.\n\t(cp_parser_simple_declaration): Diagnose type definition in\n\tfor-range-declaration.\n\nFrom-SVN: r238391", "tree": {"sha": "8579794f6a66c6d0a43e524e60b1dbd9780d1d22", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8579794f6a66c6d0a43e524e60b1dbd9780d1d22"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37a92c0ca231f3767dd905f155fb8d9a20369f2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37a92c0ca231f3767dd905f155fb8d9a20369f2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37a92c0ca231f3767dd905f155fb8d9a20369f2b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37a92c0ca231f3767dd905f155fb8d9a20369f2b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "aa30dfadf3234caa8a29ef23ddc5932101a0e430", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa30dfadf3234caa8a29ef23ddc5932101a0e430", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa30dfadf3234caa8a29ef23ddc5932101a0e430"}], "stats": {"total": 41, "additions": 36, "deletions": 5}, "files": [{"sha": "14bcf8e9e54aede0d712b3a2132c9f5763ca695e", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37a92c0ca231f3767dd905f155fb8d9a20369f2b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37a92c0ca231f3767dd905f155fb8d9a20369f2b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=37a92c0ca231f3767dd905f155fb8d9a20369f2b", "patch": "@@ -1,5 +1,11 @@\n 2016-07-15  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/71604\n+\tPR c++/54430\n+\t* parser.c (cp_parser_range_for): Modify IDENTIFIER_BINDING directly.\n+\t(cp_parser_simple_declaration): Diagnose type definition in\n+\tfor-range-declaration.\n+\n \tPR c++/71711\n \t* operators.def: Add *_FOLD_EXPR.\n \t* cp-tree.h (FOLD_EXPR_P): Parenthesize."}, {"sha": "0a0f67b85e32402d249f111b176278bf601d4ee7", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37a92c0ca231f3767dd905f155fb8d9a20369f2b/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37a92c0ca231f3767dd905f155fb8d9a20369f2b/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=37a92c0ca231f3767dd905f155fb8d9a20369f2b", "patch": "@@ -11187,11 +11187,17 @@ cp_parser_range_for (cp_parser *parser, tree scope, tree init, tree range_decl,\n \t\t     bool ivdep)\n {\n   tree stmt, range_expr;\n+  cxx_binding *binding = NULL;\n+  tree name = NULL_TREE;\n \n   /* Get the range declaration momentarily out of the way so that\n      the range expression doesn't clash with it. */\n   if (range_decl != error_mark_node)\n-    pop_binding (DECL_NAME (range_decl), range_decl);\n+    {\n+      name = DECL_NAME (range_decl);\n+      binding = IDENTIFIER_BINDING (name);\n+      IDENTIFIER_BINDING (name) = binding->previous;\n+    }\n \n   if (cp_lexer_next_token_is (parser->lexer, CPP_OPEN_BRACE))\n     {\n@@ -11203,7 +11209,10 @@ cp_parser_range_for (cp_parser *parser, tree scope, tree init, tree range_decl,\n \n   /* Put the range declaration back into scope. */\n   if (range_decl != error_mark_node)\n-    push_binding (DECL_NAME (range_decl), range_decl, current_binding_level);\n+    {\n+      binding->previous = IDENTIFIER_BINDING (name);\n+      IDENTIFIER_BINDING (name) = binding;\n+    }\n \n   /* If in template, STMT is converted to a normal for-statement\n      at instantiation. If not, it is done just ahead. */\n@@ -12437,8 +12446,15 @@ cp_parser_simple_declaration (cp_parser* parser,\n       if (token->type == CPP_COMMA)\n \t/* will be consumed next time around */;\n       /* If it's a `;', we are done.  */\n-      else if (token->type == CPP_SEMICOLON || maybe_range_for_decl)\n+      else if (token->type == CPP_SEMICOLON)\n \tbreak;\n+      else if (maybe_range_for_decl)\n+\t{\n+\t  if (declares_class_or_enum && token->type == CPP_COLON)\n+\t    permerror (decl_specifiers.locations[ds_type_spec],\n+\t\t       \"types may not be defined in a for-range-declaration\");\n+\t  break;\n+\t}\n       /* Anything else is an error.  */\n       else\n \t{"}, {"sha": "833f510d2cc58ebcff720b333b4bcb99519f10f4", "filename": "gcc/testsuite/g++.dg/cpp0x/range-for31.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37a92c0ca231f3767dd905f155fb8d9a20369f2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37a92c0ca231f3767dd905f155fb8d9a20369f2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for31.C?ref=37a92c0ca231f3767dd905f155fb8d9a20369f2b", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/71604\n+// { dg-do compile { target c++11 } }\n+\n+void foo ()\n+{\n+  int a[2] = { 1, 2 }; \n+  for (struct S { S (int) {} } S : a) // { dg-error \"types may not be defined\" }\n+    ;\n+}"}, {"sha": "38fe4561eb43d55d531cea6b7dfe9eeab2a88d6b", "filename": "gcc/testsuite/g++.dg/cpp0x/range-for8.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37a92c0ca231f3767dd905f155fb8d9a20369f2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37a92c0ca231f3767dd905f155fb8d9a20369f2b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for8.C?ref=37a92c0ca231f3767dd905f155fb8d9a20369f2b", "patch": "@@ -7,9 +7,9 @@\n \n void test()\n {\n-    for (struct S { } *x : { (S*)0, (S*)0 } )\n+    for (struct S { } *x : { (S*)0, (S*)0 } ) // { dg-error \"types may not be defined\" }\n         ;\n \n-    for (struct S { } x : { S(), S() } )\n+    for (struct S { } x : { S(), S() } ) // { dg-error \"types may not be defined\" }\n         ;\n }"}]}