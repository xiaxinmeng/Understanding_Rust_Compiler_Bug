{"sha": "fccd8855ed4ed9d1cc0e55fc1758b3288468657e", "node_id": "C_kwDOANBUbNoAKGZjY2Q4ODU1ZWQ0ZWQ5ZDFjYzBlNTVmYzE3NThiMzI4ODQ2ODY1N2U", "commit": {"author": {"name": "Hongyu Wang", "email": "hongyu.wang@intel.com", "date": "2021-09-18T05:56:37Z"}, "committer": {"name": "liuhongt", "email": "hongtao.liu@intel.com", "date": "2021-09-23T09:05:02Z"}, "message": "AVX512FP16: Add expander for smin/maxhf3.\n\ngcc/ChangeLog:\n\n\t* config/i386/i386.md (<code>hf3): New expander.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/i386/avx512fp16-builtin-minmax-1.c: New test.", "tree": {"sha": "8e704dc8b8a806e4ab6ab82a7f7c48cf011922ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e704dc8b8a806e4ab6ab82a7f7c48cf011922ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fccd8855ed4ed9d1cc0e55fc1758b3288468657e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fccd8855ed4ed9d1cc0e55fc1758b3288468657e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fccd8855ed4ed9d1cc0e55fc1758b3288468657e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fccd8855ed4ed9d1cc0e55fc1758b3288468657e/comments", "author": {"login": "wwwhhhyyy", "id": 5366075, "node_id": "MDQ6VXNlcjUzNjYwNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/5366075?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wwwhhhyyy", "html_url": "https://github.com/wwwhhhyyy", "followers_url": "https://api.github.com/users/wwwhhhyyy/followers", "following_url": "https://api.github.com/users/wwwhhhyyy/following{/other_user}", "gists_url": "https://api.github.com/users/wwwhhhyyy/gists{/gist_id}", "starred_url": "https://api.github.com/users/wwwhhhyyy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wwwhhhyyy/subscriptions", "organizations_url": "https://api.github.com/users/wwwhhhyyy/orgs", "repos_url": "https://api.github.com/users/wwwhhhyyy/repos", "events_url": "https://api.github.com/users/wwwhhhyyy/events{/privacy}", "received_events_url": "https://api.github.com/users/wwwhhhyyy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "algebra84", "id": 22926165, "node_id": "MDQ6VXNlcjIyOTI2MTY1", "avatar_url": "https://avatars.githubusercontent.com/u/22926165?v=4", "gravatar_id": "", "url": "https://api.github.com/users/algebra84", "html_url": "https://github.com/algebra84", "followers_url": "https://api.github.com/users/algebra84/followers", "following_url": "https://api.github.com/users/algebra84/following{/other_user}", "gists_url": "https://api.github.com/users/algebra84/gists{/gist_id}", "starred_url": "https://api.github.com/users/algebra84/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/algebra84/subscriptions", "organizations_url": "https://api.github.com/users/algebra84/orgs", "repos_url": "https://api.github.com/users/algebra84/repos", "events_url": "https://api.github.com/users/algebra84/events{/privacy}", "received_events_url": "https://api.github.com/users/algebra84/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1041111f19849da29117a0e962ce7ad5262a4403", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1041111f19849da29117a0e962ce7ad5262a4403", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1041111f19849da29117a0e962ce7ad5262a4403"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "a087e557d7faa09a32e66f6ccc2c5213ce57b2ef", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccd8855ed4ed9d1cc0e55fc1758b3288468657e/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccd8855ed4ed9d1cc0e55fc1758b3288468657e/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=fccd8855ed4ed9d1cc0e55fc1758b3288468657e", "patch": "@@ -19946,6 +19946,17 @@\n    (set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+(define_insn \"<code>hf3\"\n+  [(set (match_operand:HF 0 \"register_operand\" \"=v\")\n+\t(smaxmin:HF\n+\t  (match_operand:HF 1 \"nonimmediate_operand\" \"%v\")\n+\t  (match_operand:HF 2 \"nonimmediate_operand\" \"vm\")))]\n+  \"TARGET_AVX512FP16\"\n+  \"v<maxmin_float>sh\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"prefix\" \"evex\")\n+   (set_attr \"type\" \"sseadd\")\n+   (set_attr \"mode\" \"HF\")])\n+\n ;; These versions of the min/max patterns implement exactly the operations\n ;;   min = (op1 < op2 ? op1 : op2)\n ;;   max = (!(op1 < op2) ? op1 : op2)"}, {"sha": "90080e44216f57d8385096942c7f43d5f9d5490d", "filename": "gcc/testsuite/gcc.target/i386/avx512fp16-builtin-minmax-1.c", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fccd8855ed4ed9d1cc0e55fc1758b3288468657e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fp16-builtin-minmax-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fccd8855ed4ed9d1cc0e55fc1758b3288468657e/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fp16-builtin-minmax-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx512fp16-builtin-minmax-1.c?ref=fccd8855ed4ed9d1cc0e55fc1758b3288468657e", "patch": "@@ -0,0 +1,35 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -mavx512fp16 -mprefer-vector-width=512\" } */\n+\n+_Float16\n+minf1 (_Float16 a, _Float16 b)\n+{\n+  return __builtin_fminf16 (a, b);\n+}\n+\n+void\n+minf2 (_Float16* __restrict psrc1, _Float16* __restrict psrc2,\n+       _Float16* __restrict pdst)\n+{\n+  for (int i = 0; i != 32; i++)\n+    pdst[i] = __builtin_fminf16 (psrc1[i], psrc2[i]);\n+}\n+\n+_Float16\n+maxf1 (_Float16 a, _Float16 b)\n+{\n+  return __builtin_fmaxf16 (a, b);\n+}\n+\n+void\n+maxf2 (_Float16* __restrict psrc1, _Float16* __restrict psrc2,\n+       _Float16* __restrict pdst)\n+{\n+  for (int i = 0; i != 32; i++)\n+    pdst[i] = __builtin_fmaxf16 (psrc1[i], psrc2[i]);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vmaxsh\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmaxph\\[^\\n\\r\\]*zmm\\[0-9\\]\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vminsh\\[^\\n\\r\\]*xmm\\[0-9\\]\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vminph\\[^\\n\\r\\]*zmm\\[0-9\\]\" 1 } } */"}]}