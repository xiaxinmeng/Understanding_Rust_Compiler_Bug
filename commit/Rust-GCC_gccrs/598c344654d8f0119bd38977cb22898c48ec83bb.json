{"sha": "598c344654d8f0119bd38977cb22898c48ec83bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTk4YzM0NDY1NGQ4ZjAxMTliZDM4OTc3Y2IyMjg5OGM0OGVjODNiYg==", "commit": {"author": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-11T23:14:07Z"}, "committer": {"name": "Geert Bosch", "email": "bosch@gcc.gnu.org", "date": "2001-12-11T23:14:07Z"}, "message": "gnatmain.adb: Initial version.\n\n\t* gnatmain.adb: Initial version.\n\n\t* gnatmain.ads: Initial version.\n\n\t* prj-attr.adb (Initialisation_Data): Add package Gnatstub.\n\n\t* snames.adb: Updated to match snames.ads.\n\n\t* snames.ads: Added Gnatstub.\n\n\t* prj-attr.adb (Initialization_Data): Change name from\n\tInitialisation_Data.\n\n\t* g-regpat.adb (Parse_Literal): Properly handle simple operators ?,\n\t+ and * applied to backslashed expressions like \\r.\n\n\t* g-os_lib.ads: String_List type added, Argument_List type is now\n\tsubtype of String_List.\n\n\t* g-os_lib.ads: Change copyright to FSF\n\tAdd comments for String_List type\n\n\t* g-dirope.adb (Expand_Path): Fix bug. (wrong length when adding a\n\tstring to the buffer).\n\nFrom-SVN: r47905", "tree": {"sha": "e7c51126c4c56276a05c1955bd4b196956a352c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e7c51126c4c56276a05c1955bd4b196956a352c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/598c344654d8f0119bd38977cb22898c48ec83bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/598c344654d8f0119bd38977cb22898c48ec83bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/598c344654d8f0119bd38977cb22898c48ec83bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/598c344654d8f0119bd38977cb22898c48ec83bb/comments", "author": null, "committer": null, "parents": [{"sha": "0d7839daeef826108df3788cc82c198df2e56b2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d7839daeef826108df3788cc82c198df2e56b2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d7839daeef826108df3788cc82c198df2e56b2d"}], "stats": {"total": 737, "additions": 712, "deletions": 25}, "files": [{"sha": "a1f258911165ae08dd5cbe49b5222010cf19a422", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598c344654d8f0119bd38977cb22898c48ec83bb/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598c344654d8f0119bd38977cb22898c48ec83bb/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=598c344654d8f0119bd38977cb22898c48ec83bb", "patch": "@@ -1,3 +1,40 @@\n+2001-12-11  Vincent Celier <celier@gnat.com>\n+\n+\t* gnatmain.adb: Initial version.\n+\t\n+\t* gnatmain.ads: Initial version.\n+\t\n+\t* prj-attr.adb (Initialisation_Data): Add package Gnatstub.\n+\t\n+\t* snames.adb: Updated to match snames.ads.\n+\t\n+\t* snames.ads: Added Gnatstub.\n+\t\n+2001-12-11  Vincent Celier <celier@gnat.com>\n+\n+\t* prj-attr.adb (Initialization_Data): Change name from \n+\tInitialisation_Data.\n+\t\n+2001-12-11  Emmanuel Briot <briot@gnat.com>\n+\n+\t* g-regpat.adb (Parse_Literal): Properly handle simple operators ?,\n+\t+ and * applied to backslashed expressions like \\r.\n+\t\n+2001-12-11  Vasiliy Fofanov <fofanov@gnat.com>\n+\n+\t* g-os_lib.ads: String_List type added, Argument_List type is now \n+\tsubtype of String_List.\n+\t\n+2001-12-11  Robert Dewar <dewar@gnat.com>\n+\n+\t* g-os_lib.ads: Change copyright to FSF\n+\tAdd comments for String_List type\n+\t\n+2001-12-11  Vincent Celier <celier@gnat.com>\n+\n+\t* g-dirope.adb (Expand_Path): Fix bug. (wrong length when adding a \n+\tstring to the buffer).\n+\n 2001-12-11  Ed Schonberg <schonber@gnat.com>\n \n \t* freeze.adb: Make Freeze_Fixed_Point_Type visible, for use in"}, {"sha": "4755584168d6ec008748a13823677d32cbc0ca75", "filename": "gcc/ada/g-dirope.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598c344654d8f0119bd38977cb22898c48ec83bb/gcc%2Fada%2Fg-dirope.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598c344654d8f0119bd38977cb22898c48ec83bb/gcc%2Fada%2Fg-dirope.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-dirope.adb?ref=598c344654d8f0119bd38977cb22898c48ec83bb", "patch": "@@ -253,8 +253,8 @@ package body GNAT.Directory_Operations is\n             Double_Result_Size;\n          end loop;\n \n-         Result (Result_Last + 1 .. Result_Last + S'Length - 1) := S;\n-         Result_Last := Result_Last + S'Length - 1;\n+         Result (Result_Last + 1 .. Result_Last + S'Length) := S;\n+         Result_Last := Result_Last + S'Length;\n       end Append;\n \n       ------------------------"}, {"sha": "761e01904de85199e646fe93d1efe06e10f39155", "filename": "gcc/ada/g-os_lib.ads", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598c344654d8f0119bd38977cb22898c48ec83bb/gcc%2Fada%2Fg-os_lib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598c344654d8f0119bd38977cb22898c48ec83bb/gcc%2Fada%2Fg-os_lib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-os_lib.ads?ref=598c344654d8f0119bd38977cb22898c48ec83bb", "patch": "@@ -6,9 +6,9 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---                            $Revision: 1.79 $\n+--                            $Revision$\n --                                                                          --\n---           Copyright (C) 1995-2001 Ada Core Technologies, Inc.            --\n+--          Copyright (C) 1995-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -56,10 +56,15 @@ package GNAT.OS_Lib is\n pragma Elaborate_Body (OS_Lib);\n \n    type String_Access is access all String;\n+   --  General purpose string access type\n \n    procedure Free is new Unchecked_Deallocation\n      (Object => String, Name => String_Access);\n \n+   type String_List is array (Positive range <>) of String_Access;\n+   type String_List_Access is access all String_List;\n+   --  General purpose array and pointer for list of string accesses\n+\n    ---------------------\n    -- Time/Date Stuff --\n    ---------------------\n@@ -381,12 +386,12 @@ pragma Elaborate_Body (OS_Lib);\n    -- Subprocesses --\n    ------------------\n \n-   type Argument_List is array (Positive range <>) of String_Access;\n+   subtype Argument_List is String_List;\n    --  Type used for argument list in call to Spawn. The lower bound\n    --  of the array should be 1, and the length of the array indicates\n    --  the number of arguments.\n \n-   type Argument_List_Access is access all Argument_List;\n+   subtype Argument_List_Access is String_List_Access;\n    --  Type used to return an Argument_List without dragging in secondary\n    --  stack.\n "}, {"sha": "ab1b69c79d0391b621f817227335409fe300d512", "filename": "gcc/ada/g-regpat.adb", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598c344654d8f0119bd38977cb22898c48ec83bb/gcc%2Fada%2Fg-regpat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598c344654d8f0119bd38977cb22898c48ec83bb/gcc%2Fada%2Fg-regpat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-regpat.adb?ref=598c344654d8f0119bd38977cb22898c48ec83bb", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.31 $\n+--                            $Revision$\n --                                                                          --\n --               Copyright (C) 1986 by University of Toronto.               --\n --           Copyright (C) 1996-2001 Ada Core Technologies, Inc.            --\n@@ -1563,6 +1563,7 @@ package body GNAT.Regpat is\n          Start_Pos  : Natural := 0;\n          C          : Character;\n          Length_Ptr : Pointer;\n+         Has_Special_Operator : Boolean := False;\n \n       begin\n          Parse_Pos := Parse_Pos - 1;      --  Look at current character\n@@ -1585,6 +1586,7 @@ package body GNAT.Regpat is\n                when '.' | '[' | '(' | ')' | '|' | ASCII.LF | '$' | '^' =>\n \n                   if Start_Pos = 0 then\n+                     Start_Pos := Parse_Pos;\n                      Emit (C);         --  First character is always emitted\n                   else\n                      exit Parse_Loop;  --  Else we are done\n@@ -1593,24 +1595,27 @@ package body GNAT.Regpat is\n                when '?' | '+' | '*' | '{' =>\n \n                   if Start_Pos = 0 then\n+                     Start_Pos := Parse_Pos;\n                      Emit (C);         --  First character is always emitted\n \n                   --  Are we looking at an operator, or is this\n                   --  simply a normal character ?\n                   elsif not Is_Mult (Parse_Pos) then\n-                        Case_Emit (C);\n+                     Start_Pos := Parse_Pos;\n+                     Case_Emit (C);\n                   else\n                      --  We've got something like \"abc?d\".  Mark this as a\n                      --  special case. What we want to emit is a first\n                      --  constant string for \"ab\", then one for \"c\" that will\n                      --  ultimately be transformed with a CURLY operator, A\n                      --  special case has to be handled for \"a?\", since there\n                      --  is no initial string to emit.\n-                     Start_Pos := Natural'Last;\n+                     Has_Special_Operator := True;\n                      exit Parse_Loop;\n                   end if;\n \n                when '\\' =>\n+                  Start_Pos := Parse_Pos;\n                   if Parse_Pos = Parse_End then\n                      Fail (\"Trailing \\\");\n                   else\n@@ -1629,12 +1634,13 @@ package body GNAT.Regpat is\n                      Parse_Pos := Parse_Pos + 1;\n                   end if;\n \n-               when others => Case_Emit (C);\n+               when others =>\n+                  Start_Pos := Parse_Pos;\n+                  Case_Emit (C);\n             end case;\n \n             exit Parse_Loop when Emit_Ptr - Length_Ptr = 254;\n \n-            Start_Pos := Parse_Pos;\n             Parse_Pos := Parse_Pos + 1;\n \n             exit Parse_Loop when Parse_Pos > Parse_End;\n@@ -1643,11 +1649,11 @@ package body GNAT.Regpat is\n          --  Is the string followed by a '*+?{' operator ? If yes, and if there\n          --  is an initial string to emit, do it now.\n \n-         if Start_Pos = Natural'Last\n+         if Has_Special_Operator\n            and then Emit_Ptr >= Length_Ptr + 3\n          then\n             Emit_Ptr := Emit_Ptr - 1;\n-            Parse_Pos := Parse_Pos - 1;\n+            Parse_Pos := Start_Pos;\n          end if;\n \n          if Emit_Code then"}, {"sha": "0903f516175c786c35d7214b170de468f7170918", "filename": "gcc/ada/gnatmain.adb", "status": "added", "additions": 594, "deletions": 0, "changes": 594, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598c344654d8f0119bd38977cb22898c48ec83bb/gcc%2Fada%2Fgnatmain.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598c344654d8f0119bd38977cb22898c48ec83bb/gcc%2Fada%2Fgnatmain.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatmain.adb?ref=598c344654d8f0119bd38977cb22898c48ec83bb", "patch": "@@ -0,0 +1,594 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                            G N A T M A I N                               --\n+--                                                                          --\n+--                                 B o d y                                  --\n+--                                                                          --\n+--                            $Revision$\n+--                                                                          --\n+--          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- It is now maintained by Ada Core Technologies Inc (http://www.gnat.com). --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+with Csets;\n+with GNAT.Case_Util;\n+with GNAT.OS_Lib;  use GNAT.OS_Lib;\n+with Namet;        use Namet;\n+with Opt;\n+with Osint;        use Osint;\n+with Output;       use Output;\n+with Prj;          use Prj;\n+with Prj.Env;\n+with Prj.Ext;      use Prj.Ext;\n+with Prj.Pars;\n+with Prj.Util;     use Prj.Util;\n+with Snames;       use Snames;\n+with Stringt;      use Stringt;\n+with Table;\n+with Types;        use Types;\n+\n+procedure Gnatmain is\n+\n+   Ada_Include_Path : constant String := \"ADA_INCLUDE_PATH\";\n+   Ada_Objects_Path : constant String := \"ADA_OBJECTS_PATH\";\n+\n+   type Tool_Type is (None, List, Xref, Find, Stub, Make, Comp, Bind, Link);\n+\n+   --  The tool that is going to be called\n+\n+   Tool : Tool_Type := None;\n+\n+   --  For each tool, Tool_Package_Names contains the name of the\n+   --  corresponding package in the project file.\n+\n+   Tool_Package_Names : constant array (Tool_Type) of Name_Id :=\n+     (None    => No_Name,\n+      List    => Name_Gnatls,\n+      Xref    => Name_Cross_Reference,\n+      Find    => Name_Finder,\n+      Stub    => Name_Gnatstub,\n+      Comp    => No_Name,\n+      Make    => No_Name,\n+      Bind    => No_Name,\n+      Link    => No_Name);\n+\n+   --  For each tool, Tool_Names contains the name of the executable\n+   --  to be spawned.\n+\n+   Gnatmake : constant String_Access := new String'(\"gnatmake\");\n+\n+   Tool_Names : constant array (Tool_Type) of String_Access :=\n+     (None    => null,\n+      List    => new String'(\"gnatls\"),\n+      Xref    => new String'(\"gnatxref\"),\n+      Find    => new String'(\"gnatfind\"),\n+      Stub    => new String'(\"gnatstub\"),\n+      Comp    => Gnatmake,\n+      Make    => Gnatmake,\n+      Bind    => Gnatmake,\n+      Link    => Gnatmake);\n+\n+   Project_File      : String_Access;\n+   Project           : Prj.Project_Id;\n+   Current_Verbosity : Prj.Verbosity := Prj.Default;\n+\n+   --  This flag indicates a switch -p (for gnatxref and gnatfind) for\n+   --  an old fashioned project file. -p cannot be used in conjonction\n+   --  with -P.\n+\n+   Old_Project_File_Used : Boolean := False;\n+\n+   Next_Arg : Positive;\n+\n+   --  A table to keep the switches on the command line\n+\n+   package Saved_Switches is new Table.Table (\n+     Table_Component_Type => String_Access,\n+     Table_Index_Type     => Integer,\n+     Table_Low_Bound      => 1,\n+     Table_Initial        => 20,\n+     Table_Increment      => 100,\n+     Table_Name           => \"Gnatmain.Saved_Switches\");\n+\n+   --  A table to keep the switches from the project file\n+\n+   package Switches is new Table.Table (\n+     Table_Component_Type => String_Access,\n+     Table_Index_Type     => Integer,\n+     Table_Low_Bound      => 1,\n+     Table_Initial        => 20,\n+     Table_Increment      => 100,\n+     Table_Name           => \"Gnatmain.Switches\");\n+\n+   procedure Add_Switch (Argv : String; And_Save : Boolean);\n+   --  Add a switch in one of the tables above\n+\n+   procedure Display (Program : String; Args : Argument_List);\n+   --  Displays Program followed by the arguments in Args\n+\n+   function Index (Char : Character; Str : String) return Natural;\n+   --  Returns the first occurence of Char in Str.\n+   --  Returns 0 if Char is not in Str.\n+\n+   procedure Scan_Arg (Argv : String; And_Save : Boolean);\n+   --  Scan and process arguments. Argv is a single argument.\n+\n+   procedure Usage;\n+   --  Output usage\n+\n+   ----------------\n+   -- Add_Switch --\n+   ----------------\n+\n+   procedure Add_Switch (Argv : String; And_Save : Boolean) is\n+   begin\n+      if And_Save then\n+         Saved_Switches.Increment_Last;\n+         Saved_Switches.Table (Saved_Switches.Last) := new String'(Argv);\n+\n+      else\n+         Switches.Increment_Last;\n+         Switches.Table (Switches.Last) := new String'(Argv);\n+      end if;\n+   end Add_Switch;\n+\n+   -------------\n+   -- Display --\n+   -------------\n+\n+   procedure Display (Program : String; Args : Argument_List) is\n+   begin\n+      if not Opt.Quiet_Output then\n+         Write_Str (Program);\n+\n+         for J in Args'Range loop\n+            Write_Str (\" \");\n+            Write_Str (Args (J).all);\n+         end loop;\n+\n+         Write_Eol;\n+      end if;\n+   end Display;\n+\n+   -----------\n+   -- Index --\n+   -----------\n+\n+   function Index (Char : Character; Str : String) return Natural is\n+   begin\n+      for Index in Str'Range loop\n+         if Str (Index) = Char then\n+            return Index;\n+         end if;\n+      end loop;\n+\n+      return 0;\n+   end Index;\n+\n+   --------------\n+   -- Scan_Arg --\n+   --------------\n+\n+   procedure Scan_Arg (Argv : String; And_Save : Boolean) is\n+   begin\n+      pragma Assert (Argv'First = 1);\n+\n+      if Argv'Length = 0 then\n+         return;\n+      end if;\n+\n+      if Argv (1) = Switch_Character or else Argv (1) = '-' then\n+\n+         if Argv'Length = 1 then\n+            Fail (\"switch character cannot be followed by a blank\");\n+         end if;\n+\n+         --  The two style project files (-p and -P) cannot be used together\n+\n+         if (Tool = Find or else Tool = Xref)\n+           and then Argv (2) = 'p'\n+         then\n+            Old_Project_File_Used := True;\n+            if Project_File /= null then\n+               Fail (\"-P and -p cannot be used together\");\n+            end if;\n+         end if;\n+\n+         --  -q Be quiet: do not output tool command\n+\n+         if Argv (2 .. Argv'Last) = \"q\" then\n+            Opt.Quiet_Output := True;\n+\n+            --  Only gnatstub and gnatmake have a -q switch\n+\n+            if Tool = Stub or else Tool_Names (Tool) = Gnatmake then\n+               Add_Switch (Argv, And_Save);\n+            end if;\n+\n+         --  gnatmake will take care of the project file related switches\n+\n+         elsif Tool_Names (Tool) = Gnatmake then\n+            Add_Switch (Argv, And_Save);\n+\n+         --  -vPx  Specify verbosity while parsing project files\n+\n+         elsif Argv'Length = 4 and then Argv (2 .. 3) = \"vP\" then\n+            case Argv (4) is\n+               when '0' =>\n+                  Current_Verbosity := Prj.Default;\n+               when '1' =>\n+                  Current_Verbosity := Prj.Medium;\n+               when '2' =>\n+                  Current_Verbosity := Prj.High;\n+               when others =>\n+                  null;\n+            end case;\n+\n+         --  -Pproject_file  Specify project file to be used\n+\n+         elsif Argv'Length >= 3 and then Argv (2) = 'P' then\n+\n+            --  Only one -P switch can be used\n+\n+            if Project_File /= null then\n+               Fail (Argv & \": second project file forbidden (first is \"\"\" &\n+                     Project_File.all & \"\"\")\");\n+\n+            --  The two style project files (-p and -P) cannot be used together\n+\n+            elsif Old_Project_File_Used then\n+               Fail (\"-p and -P cannot be used together\");\n+\n+            else\n+               Project_File := new String'(Argv (3 .. Argv'Last));\n+            end if;\n+\n+         --  -Xexternal=value Specify an external reference to be used\n+         --                   in project files\n+\n+         elsif Argv'Length >= 5 and then Argv (2) = 'X' then\n+            declare\n+               Equal_Pos : constant Natural :=\n+                 Index ('=', Argv (3 .. Argv'Last));\n+            begin\n+               if Equal_Pos >= 4 and then\n+                  Equal_Pos /= Argv'Last then\n+                  Add (External_Name => Argv (3 .. Equal_Pos - 1),\n+                       Value => Argv (Equal_Pos + 1 .. Argv'Last));\n+               else\n+                  Fail (Argv & \" is not a valid external assignment.\");\n+               end if;\n+            end;\n+\n+         else\n+            Add_Switch (Argv, And_Save);\n+         end if;\n+\n+      else\n+         Add_Switch (Argv, And_Save);\n+      end if;\n+\n+   end Scan_Arg;\n+\n+   -----------\n+   -- Usage --\n+   -----------\n+\n+   procedure Usage is\n+   begin\n+      Write_Str (\"Usage: \");\n+      Write_Eol;\n+\n+      Osint.Write_Program_Name;\n+      Write_Str (\"  list  switches [list of object files]\");\n+      Write_Eol;\n+\n+      Osint.Write_Program_Name;\n+      Write_Str (\"  xref  switches file1 file2 ...\");\n+      Write_Eol;\n+\n+      Osint.Write_Program_Name;\n+      Write_Str (\"  find  switches pattern[:sourcefile[:line[:column]]] \" &\n+                 \"[file1 file2 ...]\");\n+      Write_Eol;\n+\n+      Osint.Write_Program_Name;\n+      Write_Str (\"  stub  switches filename [directory]\");\n+      Write_Eol;\n+\n+      Osint.Write_Program_Name;\n+      Write_Str (\"  comp  switches files\");\n+      Write_Eol;\n+\n+      Osint.Write_Program_Name;\n+      Write_Str (\"  make  switches [files]\");\n+      Write_Eol;\n+\n+      Osint.Write_Program_Name;\n+      Write_Str (\"  bind  switches files\");\n+      Write_Eol;\n+\n+      Osint.Write_Program_Name;\n+      Write_Str (\"  link  switches files\");\n+      Write_Eol;\n+\n+      Write_Eol;\n+\n+      Write_Str (\"switches interpreted by \");\n+      Osint.Write_Program_Name;\n+      Write_Str (\" for List Xref and Find:\");\n+      Write_Eol;\n+\n+      Write_Str (\"  -q       Be quiet: do not output tool command\");\n+      Write_Eol;\n+\n+      Write_Str (\"  -Pproj   Use GNAT Project File proj\");\n+      Write_Eol;\n+\n+      Write_Str (\"  -vPx     Specify verbosity when parsing \" &\n+                 \"GNAT Project Files\");\n+      Write_Eol;\n+\n+      Write_Str (\"  -Xnm=val Specify an external reference for \" &\n+                 \"GNAT Project Files\");\n+      Write_Eol;\n+\n+      Write_Eol;\n+\n+      Write_Str (\"all other arguments are transmited to the tool\");\n+      Write_Eol;\n+\n+      Write_Eol;\n+\n+   end Usage;\n+\n+begin\n+\n+   Osint.Initialize (Unspecified);\n+\n+   Namet.Initialize;\n+   Csets.Initialize;\n+\n+   Snames.Initialize;\n+\n+   Prj.Initialize;\n+\n+   if Arg_Count = 1 then\n+      Usage;\n+      return;\n+   end if;\n+\n+   --  Get the name of the tool\n+\n+   declare\n+      Tool_Name : String (1 .. Len_Arg (1));\n+\n+   begin\n+      Fill_Arg (Tool_Name'Address, 1);\n+      GNAT.Case_Util.To_Lower (Tool_Name);\n+\n+      if Tool_Name = \"list\" then\n+         Tool := List;\n+\n+      elsif Tool_Name = \"xref\" then\n+         Tool := Xref;\n+\n+      elsif Tool_Name = \"find\" then\n+         Tool := Find;\n+\n+      elsif Tool_Name = \"stub\" then\n+         Tool := Stub;\n+\n+      elsif Tool_Name = \"comp\" then\n+         Tool := Comp;\n+\n+      elsif Tool_Name = \"make\" then\n+         Tool := Make;\n+\n+      elsif Tool_Name = \"bind\" then\n+         Tool := Bind;\n+\n+      elsif Tool_Name = \"link\" then\n+         Tool := Link;\n+\n+      else\n+         Fail (\"first argument needs to be \"\"list\"\", \"\"xref\"\", \"\"find\"\"\" &\n+               \", \"\"stub\"\", \"\"comp\"\", \"\"make\"\", \"\"bind\"\" or \"\"link\"\"\");\n+      end if;\n+   end;\n+\n+   Next_Arg := 2;\n+\n+   --  Get the command line switches that follow the name of the tool\n+\n+   Scan_Args : while Next_Arg < Arg_Count loop\n+      declare\n+         Next_Argv : String (1 .. Len_Arg (Next_Arg));\n+\n+      begin\n+         Fill_Arg (Next_Argv'Address, Next_Arg);\n+         Scan_Arg (Next_Argv, And_Save => True);\n+      end;\n+\n+      Next_Arg := Next_Arg + 1;\n+   end loop Scan_Args;\n+\n+   --  If a switch -P was specified, parse the project file.\n+   --  Project_File is always null if we are going to invoke gnatmake,\n+   --  that is when Tool is Comp, Make, Bind or Link.\n+\n+   if Project_File /= null then\n+\n+      Prj.Pars.Set_Verbosity (To => Current_Verbosity);\n+\n+      Prj.Pars.Parse\n+        (Project           => Project,\n+         Project_File_Name => Project_File.all);\n+\n+      if Project = Prj.No_Project then\n+         Fail (\"\"\"\" & Project_File.all & \"\"\" processing failed\");\n+      end if;\n+\n+      --  Check if a package with the name of the tool is in the project file\n+      --  and if there is one, get the switches, if any, and scan them.\n+\n+      declare\n+         Data       : Prj.Project_Data := Prj.Projects.Table (Project);\n+         Pkg        : Prj.Package_Id :=\n+                        Prj.Util.Value_Of\n+                          (Name        => Tool_Package_Names (Tool),\n+                           In_Packages => Data.Decl.Packages);\n+         Element    : Package_Element;\n+         Default_Switches_Array : Array_Element_Id;\n+         Switches   : Prj.Variable_Value;\n+         Current    : Prj.String_List_Id;\n+         The_String : String_Element;\n+\n+      begin\n+         if Pkg /= No_Package then\n+            Element := Packages.Table (Pkg);\n+\n+            --  Packages Gnatls and Gnatstub have a single attribute Switches,\n+            --  that is not an associative array.\n+\n+            if Tool = List or else Tool = Stub then\n+               Switches :=\n+                 Prj.Util.Value_Of\n+                   (Variable_Name => Name_Switches,\n+                    In_Variables => Element.Decl.Attributes);\n+\n+               --  Packages Cross_Reference (for gnatxref) and Finder\n+               --  (for gnatfind) have an attributed Default_Switches,\n+               --  an associative array, indexed by the name of the\n+               --  programming language.\n+            else\n+               Default_Switches_Array :=\n+                 Prj.Util.Value_Of\n+                   (Name => Name_Default_Switches,\n+                    In_Arrays => Packages.Table (Pkg).Decl.Arrays);\n+               Switches := Prj.Util.Value_Of\n+                 (Index => Name_Ada,\n+                  In_Array => Default_Switches_Array);\n+\n+            end if;\n+\n+            --  If there are switches specified in the package of the\n+            --  project file corresponding to the tool, scan them.\n+\n+            case Switches.Kind is\n+               when Prj.Undefined =>\n+                  null;\n+\n+               when Prj.Single =>\n+                  if String_Length (Switches.Value) > 0 then\n+                     String_To_Name_Buffer (Switches.Value);\n+                     Scan_Arg\n+                       (Name_Buffer (1 .. Name_Len),\n+                        And_Save => False);\n+                  end if;\n+\n+               when Prj.List =>\n+                  Current := Switches.Values;\n+                  while Current /= Prj.Nil_String loop\n+                     The_String := String_Elements.Table (Current);\n+\n+                     if String_Length (The_String.Value) > 0 then\n+                        String_To_Name_Buffer (The_String.Value);\n+                        Scan_Arg\n+                          (Name_Buffer (1 .. Name_Len),\n+                           And_Save => False);\n+                     end if;\n+\n+                     Current := The_String.Next;\n+                  end loop;\n+            end case;\n+         end if;\n+      end;\n+\n+      --  Set up the environment variables ADA_INCLUDE_PATH and\n+      --  ADA_OBJECTS_PATH.\n+\n+      Setenv\n+        (Name  => Ada_Include_Path,\n+         Value => Prj.Env.Ada_Include_Path (Project).all);\n+      Setenv\n+        (Name  => Ada_Objects_Path,\n+         Value => Prj.Env.Ada_Objects_Path\n+                       (Project, Including_Libraries => False).all);\n+\n+   end if;\n+\n+   --  Gather all the arguments, those from the project file first,\n+   --  locate the tool and call it with the arguments.\n+\n+   declare\n+      Args    : Argument_List (1 .. Switches.Last + Saved_Switches.Last + 4);\n+      Arg_Num : Natural := 0;\n+      Tool_Path : String_Access;\n+      Success : Boolean;\n+\n+      procedure Add (Arg : String_Access);\n+\n+      procedure Add (Arg : String_Access) is\n+      begin\n+         Arg_Num := Arg_Num + 1;\n+         Args (Arg_Num) := Arg;\n+      end Add;\n+\n+   begin\n+\n+      case Tool is\n+         when Comp =>\n+            Add (new String'(\"-u\"));\n+            Add (new String'(\"-f\"));\n+\n+         when Bind =>\n+            Add (new String'(\"-b\"));\n+\n+         when Link =>\n+            Add (new String'(\"-l\"));\n+\n+         when others =>\n+            null;\n+\n+      end case;\n+\n+      for Index in 1 .. Switches.Last loop\n+         Arg_Num := Arg_Num + 1;\n+         Args (Arg_Num) := Switches.Table (Index);\n+      end loop;\n+\n+      for Index in 1 .. Saved_Switches.Last loop\n+         Arg_Num := Arg_Num + 1;\n+         Args (Arg_Num) := Saved_Switches.Table (Index);\n+      end loop;\n+\n+      Tool_Path := GNAT.OS_Lib.Locate_Exec_On_Path (Tool_Names (Tool).all);\n+\n+      if Tool_Path = null then\n+         Fail (\"error, unable to locate \" & Tool_Names (Tool).all);\n+      end if;\n+\n+      Display (Tool_Names (Tool).all, Args (1 .. Arg_Num));\n+\n+      GNAT.OS_Lib.Spawn (Tool_Path.all, Args (1 .. Arg_Num), Success);\n+\n+   end;\n+\n+end Gnatmain;"}, {"sha": "5f81d8f9c1f00046ca54106a33d6d3ab6ef3d9ef", "filename": "gcc/ada/gnatmain.ads", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598c344654d8f0119bd38977cb22898c48ec83bb/gcc%2Fada%2Fgnatmain.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598c344654d8f0119bd38977cb22898c48ec83bb/gcc%2Fada%2Fgnatmain.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnatmain.ads?ref=598c344654d8f0119bd38977cb22898c48ec83bb", "patch": "@@ -0,0 +1,38 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                         GNAT COMPILER COMPONENTS                         --\n+--                                                                          --\n+--                            G N A T M A I N                               --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                                                                          --\n+--                            $Revision$\n+--                                                                          --\n+--          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- It is now maintained by Ada Core Technologies Inc (http://www.gnat.com). --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+--  This procedure is the project-aware driver for the GNAT tools.\n+--  For gnatls, gnatxref, gnatfind and gnatstub, it setup the environment\n+--  variables ADA_INCLUDE_PATH and ADA_OBJECT_PATH and gather the switches\n+--  and file names from the project file (if any) and from the common line,\n+--  then call the non project-aware tool (gnatls, gnatxref, gnatfind or\n+--  gnatstub).\n+--  For other tools (compiler, binder, linker, gnatmake), it invokes\n+--  gnatmake with the proper switches.\n+\n+procedure Gnatmain;"}, {"sha": "6710f2119df9a9fb056a98ffda0648eb66b0d573", "filename": "gcc/ada/prj-attr.adb", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598c344654d8f0119bd38977cb22898c48ec83bb/gcc%2Fada%2Fprj-attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598c344654d8f0119bd38977cb22898c48ec83bb/gcc%2Fada%2Fprj-attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-attr.adb?ref=598c344654d8f0119bd38977cb22898c48ec83bb", "patch": "@@ -49,7 +49,7 @@ package body Prj.Attr is\n \n    --  End is indicated by two consecutive '#'.\n \n-   Initialisation_Data : constant String :=\n+   Initialization_Data : constant String :=\n \n    --  project attributes\n \n@@ -121,14 +121,19 @@ package body Prj.Attr is\n      \"Ladefault_switches#\" &\n      \"LAswitches#\" &\n \n+   --  package Gnatstub\n+\n+     \"Pgnatstub#\" &\n+     \"LVswitches#\" &\n+\n      \"#\";\n \n    ----------------\n    -- Initialize --\n    ----------------\n \n    procedure Initialize is\n-      Start             : Positive           := Initialisation_Data'First;\n+      Start             : Positive           := Initialization_Data'First;\n       Finish            : Positive           := Start;\n       Current_Package   : Package_Node_Id    := Empty_Package;\n       Current_Attribute : Attribute_Node_Id  := Empty_Attribute;\n@@ -145,29 +150,29 @@ package body Prj.Attr is\n       Attributes.Set_Last (Attributes.First);\n       Package_Attributes.Set_Last (Package_Attributes.First);\n \n-      while Initialisation_Data (Start) /= '#' loop\n+      while Initialization_Data (Start) /= '#' loop\n          Is_An_Attribute := True;\n-         case Initialisation_Data (Start) is\n+         case Initialization_Data (Start) is\n             when 'P' =>\n \n                --  New allowed package\n \n                Start := Start + 1;\n \n                Finish := Start;\n-               while Initialisation_Data (Finish) /= '#' loop\n+               while Initialization_Data (Finish) /= '#' loop\n                   Finish := Finish + 1;\n                end loop;\n \n                Name_Len := Finish - Start;\n                Name_Buffer (1 .. Name_Len) :=\n-                 To_Lower (Initialisation_Data (Start .. Finish - 1));\n+                 To_Lower (Initialization_Data (Start .. Finish - 1));\n                Package_Name := Name_Find;\n \n                for Index in Package_First .. Package_Attributes.Last loop\n                   if Package_Name = Package_Attributes.Table (Index).Name then\n                      Write_Line (\"Duplicate package name \"\"\" &\n-                                 Initialisation_Data (Start .. Finish - 1) &\n+                                 Initialization_Data (Start .. Finish - 1) &\n                                  \"\"\" in Prj.Attr body.\");\n                      raise Program_Error;\n                   end if;\n@@ -196,7 +201,7 @@ package body Prj.Attr is\n             --  New attribute\n \n             Start := Start + 1;\n-            case Initialisation_Data (Start) is\n+            case Initialization_Data (Start) is\n                when 'V' =>\n                   Kind_2 := Single;\n                when 'A' =>\n@@ -210,13 +215,13 @@ package body Prj.Attr is\n             Start := Start + 1;\n             Finish := Start;\n \n-            while Initialisation_Data (Finish) /= '#' loop\n+            while Initialization_Data (Finish) /= '#' loop\n                Finish := Finish + 1;\n             end loop;\n \n             Name_Len := Finish - Start;\n             Name_Buffer (1 .. Name_Len) :=\n-              To_Lower (Initialisation_Data (Start .. Finish - 1));\n+              To_Lower (Initialization_Data (Start .. Finish - 1));\n             Attribute_Name := Name_Find;\n             Attributes.Increment_Last;\n             if Current_Attribute = Empty_Attribute then\n@@ -234,7 +239,7 @@ package body Prj.Attr is\n                   if Attribute_Name =\n                     Attributes.Table (Index).Name then\n                      Write_Line (\"Duplicate attribute name \"\"\" &\n-                                 Initialisation_Data (Start .. Finish - 1) &\n+                                 Initialization_Data (Start .. Finish - 1) &\n                                  \"\"\" in Prj.Attr body.\");\n                      raise Program_Error;\n                   end if;"}, {"sha": "d72b0b8f1cadc076b8e522a622c2b8c3768359a2", "filename": "gcc/ada/snames.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598c344654d8f0119bd38977cb22898c48ec83bb/gcc%2Fada%2Fsnames.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598c344654d8f0119bd38977cb22898c48ec83bb/gcc%2Fada%2Fsnames.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.adb?ref=598c344654d8f0119bd38977cb22898c48ec83bb", "patch": "@@ -595,6 +595,7 @@ package body Snames is\n      \"binder#\" &\n      \"linker#\" &\n      \"compiler#\" &\n+     \"gnatstub#\" &\n       \"#\";\n \n    ---------------------"}, {"sha": "f56403f128252a3dbb88a26cb2c53d4177b91f89", "filename": "gcc/ada/snames.ads", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/598c344654d8f0119bd38977cb22898c48ec83bb/gcc%2Fada%2Fsnames.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/598c344654d8f0119bd38977cb22898c48ec83bb/gcc%2Fada%2Fsnames.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads?ref=598c344654d8f0119bd38977cb22898c48ec83bb", "patch": "@@ -894,10 +894,11 @@ package Snames is\n    Name_Binder                         : constant Name_Id := N + 549;\n    Name_Linker                         : constant Name_Id := N + 550;\n    Name_Compiler                       : constant Name_Id := N + 551;\n+   Name_Gnatstub                       : constant Name_Id := N + 552;\n \n    --  Mark last defined name for consistency check in Snames body\n \n-   Last_Predefined_Name                : constant Name_Id := N + 551;\n+   Last_Predefined_Name                : constant Name_Id := N + 552;\n \n    subtype Any_Operator_Name is Name_Id range\n      First_Operator_Name .. Last_Operator_Name;"}]}