{"sha": "248081bc932cc9f1bba6ce780d447070f6e9cd6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQ4MDgxYmM5MzJjYzlmMWJiYTZjZTc4MGQ0NDcwNzBmNmU5Y2Q2Zg==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2010-03-13T17:35:29Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2010-03-13T17:35:29Z"}, "message": "Use ssizetype when long_long_integer_type_node is NULL.\n\n2010-03-11  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* graphite-clast-to-gimple.c (my_long_long): Defined.\n\t(gcc_type_for_cloog_iv): Use it instead of long_long_integer_type_node.\n\t* graphite-sese-to-poly.c (my_long_long): Defined.\n\t(scop_ivs_can_be_represented): Use it.\n\nFrom-SVN: r157438", "tree": {"sha": "6698db35a015a43ce24f4e7d029bdc6971e13f9a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6698db35a015a43ce24f4e7d029bdc6971e13f9a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/248081bc932cc9f1bba6ce780d447070f6e9cd6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/248081bc932cc9f1bba6ce780d447070f6e9cd6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/248081bc932cc9f1bba6ce780d447070f6e9cd6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/248081bc932cc9f1bba6ce780d447070f6e9cd6f/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d97c90ae336fd2af978d82deb17e2ef6c50f2d71", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d97c90ae336fd2af978d82deb17e2ef6c50f2d71", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d97c90ae336fd2af978d82deb17e2ef6c50f2d71"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "abd98882293e33c5eeaf9d8633666c0897ee59ce", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248081bc932cc9f1bba6ce780d447070f6e9cd6f/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248081bc932cc9f1bba6ce780d447070f6e9cd6f/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=248081bc932cc9f1bba6ce780d447070f6e9cd6f", "patch": "@@ -1,3 +1,10 @@\n+2010-03-11  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* graphite-clast-to-gimple.c (my_long_long): Defined.\n+\t(gcc_type_for_cloog_iv): Use it instead of long_long_integer_type_node.\n+\t* graphite-sese-to-poly.c (my_long_long): Defined.\n+\t(scop_ivs_can_be_represented): Use it.\n+\n 2010-03-10  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* doc/invoke.texi: Fix documentation of graphite-max-nb-scop-params,"}, {"sha": "f99a158ac423a5ae7b26d29800d1c42c153b7972", "filename": "gcc/graphite-clast-to-gimple.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248081bc932cc9f1bba6ce780d447070f6e9cd6f/gcc%2Fgraphite-clast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248081bc932cc9f1bba6ce780d447070f6e9cd6f/gcc%2Fgraphite-clast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-clast-to-gimple.c?ref=248081bc932cc9f1bba6ce780d447070f6e9cd6f", "patch": "@@ -547,6 +547,9 @@ clast_get_body_of_loop (struct clast_stmt *stmt)\n   gcc_unreachable ();\n }\n \n+/* Java does not initialize long_long_integer_type_node.  */\n+#define my_long_long (long_long_integer_type_node ? long_long_integer_type_node : ssizetype)\n+\n /* Given a CLOOG_IV, return the type that CLOOG_IV should have in GCC\n    land.  The selected type is big enough to include the original loop\n    iteration variable, but signed to work with the subtractions CLooG\n@@ -581,8 +584,8 @@ gcc_type_for_cloog_iv (const char *cloog_iv, gimple_bb_p gbb)\n \t  if (type_precision <= TYPE_PRECISION (long_integer_type_node))\n \t    return long_integer_type_node;\n \n-\t  if (type_precision <= TYPE_PRECISION (long_long_integer_type_node))\n-\t    return long_long_integer_type_node;\n+\t  if (type_precision <= TYPE_PRECISION (my_long_long))\n+\t    return my_long_long;\n \n \t  gcc_unreachable ();\n \t}\n@@ -593,17 +596,19 @@ gcc_type_for_cloog_iv (const char *cloog_iv, gimple_bb_p gbb)\n       if (type_precision < TYPE_PRECISION (long_integer_type_node))\n \treturn long_integer_type_node;\n \n-      if (type_precision < TYPE_PRECISION (long_long_integer_type_node))\n-\treturn long_long_integer_type_node;\n+      if (type_precision < TYPE_PRECISION (my_long_long))\n+\treturn my_long_long;\n \n       /* There is no signed type available, that is large enough to hold the\n \t original value.  */\n       gcc_unreachable ();\n     }\n \n-  return long_long_integer_type_node;\n+  return my_long_long;\n }\n \n+#undef my_long_long\n+\n /* Returns the induction variable for the loop that gets translated to\n    STMT.  */\n "}, {"sha": "0f370a8066769343b300e057262a8efd6fcff7f0", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/248081bc932cc9f1bba6ce780d447070f6e9cd6f/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/248081bc932cc9f1bba6ce780d447070f6e9cd6f/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=248081bc932cc9f1bba6ce780d447070f6e9cd6f", "patch": "@@ -2910,6 +2910,9 @@ scop_canonicalize_loops (scop_p scop)\n       graphite_loop_normal_form (loop);\n }\n \n+/* Java does not initialize long_long_integer_type_node.  */\n+#define my_long_long (long_long_integer_type_node ? long_long_integer_type_node : ssizetype)\n+\n /* Can all ivs be represented by a signed integer?\n    As CLooG might generate negative values in its expressions, signed loop ivs\n    are required in the backend. */\n@@ -2934,13 +2937,14 @@ scop_ivs_can_be_represented (scop_p scop)\n       precision = TYPE_PRECISION (type);\n \n       if (TYPE_UNSIGNED (type)\n-\t  && precision >= TYPE_PRECISION (long_long_integer_type_node))\n+\t  && precision >= TYPE_PRECISION (my_long_long))\n \treturn false;\n     }\n \n   return true;\n }\n \n+#undef my_long_long\n \n /* Builds the polyhedral representation for a SESE region.  */\n "}]}