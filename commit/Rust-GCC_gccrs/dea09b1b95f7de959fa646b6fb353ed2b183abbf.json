{"sha": "dea09b1b95f7de959fa646b6fb353ed2b183abbf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGVhMDliMWI5NWY3ZGU5NTlmYTY0NmI2ZmIzNTNlZDJiMTgzYWJiZg==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2002-09-18T18:57:18Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2002-09-18T18:57:18Z"}, "message": "s390.c (s390_address_cost): New function.\n\n\t* config/s390/s390.c (s390_address_cost): New function.\n\tconfig/s390/s390-protos.h (s390_address_cost): Add prototype.\n\tconfig/s390/s390.h (ADDRESS_COST): Call s390_address_cost.\n\t(RTX_COST): Use COSTS_N_INSNS.\n\nFrom-SVN: r57282", "tree": {"sha": "249cbe370ab2c67d5c41f167074a682a6f132ba9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/249cbe370ab2c67d5c41f167074a682a6f132ba9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dea09b1b95f7de959fa646b6fb353ed2b183abbf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dea09b1b95f7de959fa646b6fb353ed2b183abbf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dea09b1b95f7de959fa646b6fb353ed2b183abbf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dea09b1b95f7de959fa646b6fb353ed2b183abbf/comments", "author": null, "committer": null, "parents": [{"sha": "e4850f36e545325e3309870d13dfe4582e7cb9d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4850f36e545325e3309870d13dfe4582e7cb9d4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4850f36e545325e3309870d13dfe4582e7cb9d4"}], "stats": {"total": 39, "additions": 28, "deletions": 11}, "files": [{"sha": "37ae8149c1ec60fd17cf8c1a9eaf37caf237b3b1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dea09b1b95f7de959fa646b6fb353ed2b183abbf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dea09b1b95f7de959fa646b6fb353ed2b183abbf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dea09b1b95f7de959fa646b6fb353ed2b183abbf", "patch": "@@ -1,3 +1,10 @@\n+2002-09-18  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_address_cost): New function.\n+\tconfig/s390/s390-protos.h (s390_address_cost): Add prototype.\n+\tconfig/s390/s390.h (ADDRESS_COST): Call s390_address_cost.\n+\t(RTX_COST): Use COSTS_N_INSNS.\n+\n 2002-09-18  Douglas Rupp  <rupp@gnat.com>\n \t    Donn Terry  <donnte@microsoft.com>\n "}, {"sha": "f5a190fd9e927ce763cadb171f05b56c4be952b8", "filename": "gcc/config/s390/s390-protos.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dea09b1b95f7de959fa646b6fb353ed2b183abbf/gcc%2Fconfig%2Fs390%2Fs390-protos.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dea09b1b95f7de959fa646b6fb353ed2b183abbf/gcc%2Fconfig%2Fs390%2Fs390-protos.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390-protos.h?ref=dea09b1b95f7de959fa646b6fb353ed2b183abbf", "patch": "@@ -29,6 +29,7 @@ extern void s390_emit_epilogue PARAMS ((void));\n extern void s390_function_profiler PARAMS ((FILE *, int));\n \n #ifdef RTX_CODE\n+extern int s390_address_cost PARAMS ((rtx));\n extern int q_constraint PARAMS ((rtx));\n extern int const0_operand PARAMS ((rtx, enum machine_mode));\n extern int consttable_operand PARAMS ((rtx, enum machine_mode));"}, {"sha": "ecc1679cd4dabd22b9a43f7f63d532817ee21b77", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dea09b1b95f7de959fa646b6fb353ed2b183abbf/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dea09b1b95f7de959fa646b6fb353ed2b183abbf/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=dea09b1b95f7de959fa646b6fb353ed2b183abbf", "patch": "@@ -1050,6 +1050,19 @@ q_constraint (op)\n   return 1;\n }\n \n+/* Return the cost of an address rtx ADDR.  */\n+\n+int\n+s390_address_cost (addr)\n+     rtx addr;\n+{\n+  struct s390_address ad;\n+  if (!s390_decompose_address (addr, &ad))\n+    return 1000;\n+\n+  return ad.indx? COSTS_N_INSNS (1) + 1 : COSTS_N_INSNS (1);\n+}\n+\n /* Return true if OP is a valid operand for the BRAS instruction.\n    OP is the current operation.\n    MODE is the current operation mode.  */"}, {"sha": "58ad2e71829e92e9fe8900e19c4a6d40917c4687", "filename": "gcc/config/s390/s390.h", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dea09b1b95f7de959fa646b6fb353ed2b183abbf/gcc%2Fconfig%2Fs390%2Fs390.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dea09b1b95f7de959fa646b6fb353ed2b183abbf/gcc%2Fconfig%2Fs390%2Fs390.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.h?ref=dea09b1b95f7de959fa646b6fb353ed2b183abbf", "patch": "@@ -1145,17 +1145,17 @@ CUMULATIVE_ARGS;\n   case MINUS:                                                           \\\n   case NEG:                                                             \\\n   case NOT:                                                             \\\n-          return 1;                                                     \\\n+    return COSTS_N_INSNS (1);                                           \\\n   case MULT:                                                            \\\n     if (GET_MODE (XEXP (X, 0)) == DImode)                               \\\n-      return 40;                                                        \\\n-        else                                                            \\\n-      return 7;                                                         \\\n+      return COSTS_N_INSNS (40);                                        \\\n+    else                                                                \\\n+      return COSTS_N_INSNS (7);                                         \\\n   case DIV:                                                             \\\n   case UDIV:                                                            \\\n   case MOD:                                                             \\\n   case UMOD:                                                            \\\n-          return 33;\n+    return COSTS_N_INSNS (33);\n \n \n /* An expression giving the cost of an addressing mode that contains\n@@ -1197,13 +1197,9 @@ CUMULATIVE_ARGS;\n    of registers on machines with lots of registers.\n \n    This macro will normally either not be defined or be defined as a\n-   constant.\n+   constant.  */\n \n-   On s390 symbols are expensive if compiled with fpic\n-   lifetimes.  */\n-\n-#define ADDRESS_COST(RTX) \\\n-  ((flag_pic && GET_CODE (RTX) == SYMBOL_REF) ? 2 : 1)\n+#define ADDRESS_COST(RTX) s390_address_cost ((RTX))\n \n /* On s390, copy between fprs and gprs is expensive.  */\n "}]}