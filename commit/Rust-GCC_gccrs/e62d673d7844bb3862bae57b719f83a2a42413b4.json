{"sha": "e62d673d7844bb3862bae57b719f83a2a42413b4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYyZDY3M2Q3ODQ0YmIzODYyYmFlNTdiNzE5ZjgzYTJhNDI0MTNiNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2018-03-15T03:49:07Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2018-03-15T03:49:07Z"}, "message": "PR c++/84801 - ICE with unexpanded pack in lambda.\n\n\tWe avoid complaining about unexpanded packs when inside a lambda,\n\tsince the lambda as a whole could be part of a pack expansion.\n\tBut that can only be true if the lambda is in a template context.\n\n   \t* pt.c (check_for_bare_parameter_packs): Don't return early for a\n\tlambda in non-template context.\n\nFrom-SVN: r258548", "tree": {"sha": "e68f9cf1b8d37966c566b511223f632a00a7e942", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e68f9cf1b8d37966c566b511223f632a00a7e942"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e62d673d7844bb3862bae57b719f83a2a42413b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e62d673d7844bb3862bae57b719f83a2a42413b4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e62d673d7844bb3862bae57b719f83a2a42413b4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e62d673d7844bb3862bae57b719f83a2a42413b4/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b149eb04c87823dc2f0b9f141fbbc149fd21598a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b149eb04c87823dc2f0b9f141fbbc149fd21598a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b149eb04c87823dc2f0b9f141fbbc149fd21598a"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "4a526b9b3a055f50bd1daa66e6b9701c0d4a145d", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62d673d7844bb3862bae57b719f83a2a42413b4/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62d673d7844bb3862bae57b719f83a2a42413b4/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e62d673d7844bb3862bae57b719f83a2a42413b4", "patch": "@@ -1,5 +1,9 @@\n 2018-03-14  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/84801 - ICE with unexpanded pack in lambda.\n+\t* pt.c (check_for_bare_parameter_packs): Don't return early for a\n+\tlambda in non-template context.\n+\n \tPR c++/81236 - auto variable and auto function\n \t* pt.c (tsubst_baselink): Update the type of the BASELINK after\n \tmark_used."}, {"sha": "32af3a4822e30f21e839d4948688a823688771fe", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62d673d7844bb3862bae57b719f83a2a42413b4/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62d673d7844bb3862bae57b719f83a2a42413b4/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=e62d673d7844bb3862bae57b719f83a2a42413b4", "patch": "@@ -4043,7 +4043,8 @@ check_for_bare_parameter_packs (tree t)\n     return false;\n \n   /* A lambda might use a parameter pack from the containing context.  */\n-  if (current_class_type && LAMBDA_TYPE_P (current_class_type))\n+  if (current_class_type && LAMBDA_TYPE_P (current_class_type)\n+      && CLASSTYPE_TEMPLATE_INFO (current_class_type))\n     return false;\n \n   if (TREE_CODE (t) == TYPE_DECL)"}, {"sha": "1de72712643a4c542dbaa8a796ca1cfdffe81c52", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-variadic15.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62d673d7844bb3862bae57b719f83a2a42413b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-variadic15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62d673d7844bb3862bae57b719f83a2a42413b4/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-variadic15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-variadic15.C?ref=e62d673d7844bb3862bae57b719f83a2a42413b4", "patch": "@@ -0,0 +1,5 @@\n+// PR c++/84801\n+// { dg-do compile { target c++14 } }\n+\n+int v;\n+int main() { [](auto... c) { v = c; }(1); } // { dg-error \"not expanded\" }"}]}