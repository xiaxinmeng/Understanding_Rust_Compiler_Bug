{"sha": "a0abd652e3878bd79ed802e868324ae3f617c380", "node_id": "C_kwDOANBUbNoAKGEwYWJkNjUyZTM4NzhiZDc5ZWQ4MDJlODY4MzI0YWUzZjYxN2MzODA", "commit": {"author": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-20T15:54:51Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-22T12:20:33Z"}, "message": "RISC-V: Adjust vsetvl testcase.\n\n- Fitler out 'Oz' for vsetvl testcases.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/vsetvl/avl_multiple-1.c: Filter out '-Oz'.\n\t* gcc.target/riscv/rvv/vsetvl/avl_multiple-10.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_multiple-11.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_multiple-12.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_multiple-13.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_multiple-14.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_multiple-15.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_multiple-16.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_multiple-2.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_multiple-3.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_multiple-4.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_multiple-7.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_multiple-8.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_multiple-9.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-1.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-10.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-11.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-13.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-14.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-16.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-2.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-23.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-27.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-3.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-30.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-38.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-4.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-41.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-42.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-43.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-44.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-45.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-48.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-5.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-50.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-51.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-6.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-65.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-66.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-67.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-68.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-69.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-70.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-71.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-73.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-74.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-75.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/avl_single-8.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-2.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-3.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-4.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/imm_conflict-4.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/imm_conflict-5.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-12.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-13.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-14.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-15.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-16.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/imm_switch-5.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/imm_switch-6.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/imm_switch-7.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/imm_switch-8.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/imm_switch-9.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-1.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-10.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-11.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-12.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-13.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-14.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-15.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-16.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-17.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-18.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-19.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-2.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-20.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-21.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-22.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-23.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-24.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-25.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-26.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-27.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-28.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-29.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-3.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-30.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-31.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-32.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-33.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-34.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-35.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-36.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-37.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-38.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-39.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-4.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-40.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-41.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-42.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-43.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-44.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-45.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-46.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-6.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-7.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-8.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-9.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-1.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-10.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-11.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-12.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-13.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-14.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-15.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-16.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-17.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-18.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-19.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-2.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-20.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-21.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-22.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-23.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-24.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-25.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-26.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-27.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-28.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-3.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-4.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-5.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-6.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-7.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-8.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-9.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_call-1.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_call-2.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_call-3.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_call-4.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_complex_loop-1.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_complex_loop-2.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-1.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-10.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-11.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-12.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-2.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-3.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-4.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-5.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-6.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-7.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-8.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-9.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-1.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-10.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-11.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-12.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-13.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-14.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-15.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-16.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-17.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-18.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-19.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-2.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-20.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-21.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-22.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-23.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-24.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-25.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-26.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-27.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-28.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-3.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-4.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-5.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-6.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-7.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-8.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-9.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-1.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-10.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-11.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-12.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-13.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-14.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-15.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-16.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-17.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-18.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-19.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-2.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-20.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-21.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-22.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-23.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-24.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-25.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-26.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-27.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-28.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-3.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-4.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-5.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-6.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-7.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-8.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_phi-9.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-19.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-1.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-2.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-3.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-4.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-5.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-6.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-7.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-8.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-1.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-10.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-11.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-12.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-13.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-14.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-15.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-16.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-2.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-3.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-4.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-5.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-6.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-7.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-8.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-9.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vsetvl-16.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vsetvl-2.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vsetvl-3.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vsetvl-4.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vsetvl-5.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vsetvl-6.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vsetvl-7.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vsetvl-8.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vsetvlmax-1.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vsetvlmax-14.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vsetvlmax-18.c: Ditto.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-17.c: Filter\n\tout -Oz and -Og -g.\n\t* gcc.target/riscv/rvv/vsetvl/vlmax_single_block-18.c: Ditto.", "tree": {"sha": "02a52b10f35ea6a9739441591af9d918855148ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02a52b10f35ea6a9739441591af9d918855148ca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0abd652e3878bd79ed802e868324ae3f617c380", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0abd652e3878bd79ed802e868324ae3f617c380", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0abd652e3878bd79ed802e868324ae3f617c380", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0abd652e3878bd79ed802e868324ae3f617c380/comments", "author": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb5365907317551cf9e4661aa78dd4f773e7a18a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb5365907317551cf9e4661aa78dd4f773e7a18a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb5365907317551cf9e4661aa78dd4f773e7a18a"}], "stats": {"total": 1666, "additions": 833, "deletions": 833}, "files": [{"sha": "7bad3fb9a3f8120fd0b628796b2e716e856c8549", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_multiple-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-1.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -32,4 +32,4 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "77adaa7d07354344bb252050e77cdec19d4e4548", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_multiple-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-10.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -70,4 +70,4 @@ void f (void * restrict in, void * restrict out, int l, int n, int m, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+add\\s+\\s*[a-x0-9]+,\\s*[a-x0-9]+,\\s*[a-x0-9]+\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+add\\s+\\s*[a-x0-9]+,\\s*[a-x0-9]+,\\s*[a-x0-9]+\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "06cae83ef1e7528772cb1992be7ac76b76aa6d00", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_multiple-11.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-11.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -36,5 +36,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n }\n \n /* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "c94c38710a485f4d2704bfef754c146ad365b905", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_multiple-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-12.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -35,5 +35,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n "}, {"sha": "41674f4f557dec158df1f09cb3e6424e33b9e609", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_multiple-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-13.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -43,4 +43,4 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "10be734dd9b2faa300d277a34f0980d8525dddb7", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_multiple-14.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-14.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -63,4 +63,4 @@ void f (void * restrict in, void * restrict out, int n, int m, int cond, int con\n       __riscv_vse8_v_i8mf8 (out + i + 200, v2, vl2);\n     }\n }\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-O1\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O1\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "2e2eb3efce2156dca881e5faab7ed32d827df8c6", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_multiple-15.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-15.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -64,4 +64,4 @@ void f (void * restrict in, void * restrict out, int n, int m, int cond, int con\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-O1\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O1\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "777d9095d3779a5b9d6d972738e559f430a3d180", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_multiple-16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-16.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -64,4 +64,4 @@ void f (void * restrict in, void * restrict out, int n, int m, int cond, int con\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-O1\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O1\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "0f0370d056c77f1c20c39df2214853f5b569a7d6", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_multiple-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-2.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -31,5 +31,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "43f272f267cead3b9264d31c2e4dd093e4d6f6c7", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_multiple-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-3.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -36,4 +36,4 @@ void f (void * restrict in, void * restrict out, int l, int n, int m, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "c1f3cfc44bad80c4af85cf9ef7535fb791568573", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_multiple-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-4.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -35,4 +35,4 @@ void f (void * restrict in, void * restrict out, int l, int n, int m, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "c1d1986528c769b40bed37162b78d6bb976fdda2", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_multiple-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-7.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -37,4 +37,4 @@ void f (void * restrict in, void * restrict out, int l, int n, int m, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler {add\\s+\\s*[a-x0-9]+,\\s*[a-x0-9]+,\\s*[a-x0-9]+\\s+vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler {add\\s+\\s*[a-x0-9]+,\\s*[a-x0-9]+,\\s*[a-x0-9]+\\s+vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "7ccb712417415baec77237f8b6232608adf26b2d", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_multiple-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-8.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -36,4 +36,4 @@ void f (void * restrict in, void * restrict out, int l, int n, int m, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler {add\\s+\\s*[a-x0-9]+,\\s*[a-x0-9]+,\\s*[a-x0-9]+\\s+vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler {add\\s+\\s*[a-x0-9]+,\\s*[a-x0-9]+,\\s*[a-x0-9]+\\s+vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "803c6961e31b2628724002f23f3d59dff465f39b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_multiple-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_multiple-9.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -71,4 +71,4 @@ void f (void * restrict in, void * restrict out, int l, int n, int m, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+add\\s+\\s*[a-x0-9]+,\\s*[a-x0-9]+,\\s*[a-x0-9]+\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+add\\s+\\s*[a-x0-9]+,\\s*[a-x0-9]+,\\s*[a-x0-9]+\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "83f7f1da49f159951d3fbff5f7436738f04ccbce", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-1.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -12,6 +12,6 @@ void f (void * restrict in, void * restrict out, int n, int vl)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "01fc236114cdeb56b76d4fc9092aa69abaca2a59", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-10.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -17,5 +17,5 @@ void f (void * restrict in, void * restrict out, int n)\n }\n \n /* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "3cb776eaefbd78e34dabd0a9f5087e916ec72942", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-11.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -16,6 +16,6 @@ void f (void * restrict in, void * restrict out, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "6b0ff255298a556403654142bb5aa15e9b9a6199", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-13.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-13.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -24,5 +24,5 @@ void f (int8_t * restrict in, int8_t * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "b3a1d46b3c023e7da2da06939a81832423521f36", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-14.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-14.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -23,5 +23,5 @@ void f (int8_t * restrict in, int8_t * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "d15499b3bf6664207acbc0ce50b426259908b2a7", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-16.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -28,5 +28,5 @@ void f (int8_t * restrict in, int8_t * restrict out, int n, int m, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "4108dd30cd228047561667ed92f98892202b2106", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-2.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -12,7 +12,7 @@ void f (void * restrict in, void * restrict out, int n, size_t vl)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {slli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "708f04b46be448a81fd3fe5e3c6251de9ec64dad", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-23.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-23.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -29,6 +29,6 @@ void f (int8_t * restrict in, int8_t * restrict out, int n, int m, int cond)\n \n /* { dg-final { scan-assembler {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu} { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 4 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 4 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {li\\s+[a-x0-9]+,101} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {li\\s+[a-x0-9]+,102} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "22004dab18c4d7d802b6127a737bf0eefd635597", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-27.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-27.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -32,5 +32,5 @@ void f2 (int8_t * restrict in, int8_t * restrict out, int n, int m, unsigned con\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "136dcb483caec4f595f4b93695e3600fda4ea190", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-3.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -13,7 +13,7 @@ void f (void * restrict in, void * restrict out, int n, size_t vl)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {slli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "687d84dcf8ca6ab61fe1c24903643676da4d9a64", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-30.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-30.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -25,5 +25,5 @@ void f (int8_t * restrict in, int8_t * restrict out, int n, int m, unsigned cond\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-O1\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O1\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "34f1cd43a21421302068db1821d8c8ab7e0eefa7", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-38.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-38.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-38.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-38.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -51,7 +51,7 @@ void f2 (int8_t * restrict in, int8_t * restrict out, int n, int m, unsigned con\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,22,\\s*e32,\\s*mf2,\\s*tu,\\s*mu} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 4 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetivli} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,22,\\s*e32,\\s*mf2,\\s*tu,\\s*mu} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*mu} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 4 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetivli} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "51c1f8319ec348329db3eec61395cfe8eb66bed9", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-4.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -16,6 +16,6 @@ void f (void * restrict in, void * restrict out, int l, int n, int m, size_t vl)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "29ce79a4c06dcdb93901439f6788d9ea0af0230d", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-41.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-41.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-41.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-41.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -15,5 +15,5 @@ void f (int8_t *base, int8_t *out, size_t m, size_t n) {\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "5e66bc4dbb6178ed0d4e2fb7d9984397b31f8da1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-42.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-42.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-42.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-42.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -12,4 +12,4 @@ void f (int8_t *base, int8_t *out, size_t m, size_t n) {\n     }\n   }\n }\n-/* { dg-final { scan-assembler {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "1523d4bd7b61ea74729a3e102492ad13dbdbd613", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-43.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-43.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-43.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-43.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -11,6 +11,6 @@ void f(int8_t *base, int8_t *out, size_t vl, size_t m) {\n   }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\),v0\\.t} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\),v0\\.t} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*mu} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "443758d7793cf3c2437bcdd8f151f14afcca7f8c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-44.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-44.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-44.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-44.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -15,4 +15,4 @@ void f(int8_t *base, int8_t *out, size_t vl, size_t m) {\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "0ff82266bea1904cb4ec3ad76cab2b32fc2c4957", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-45.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-45.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-45.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-45.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -14,6 +14,6 @@ void foo1_7(int8_t *base, int8_t *out, size_t vl, size_t m, size_t n, size_t o,\n   }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "a1f4b70d4b47af490d3584f910c5fdd4b046082d", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-48.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-48.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-48.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-48.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -28,5 +28,5 @@ void f (int8_t * restrict in, int8_t * restrict out, int n, int n2)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "aa3b93777cfbf97be715892023d04a4e4aa64af0", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-5.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -13,6 +13,6 @@ void f (void * restrict in, void * restrict out, int n, int vl)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "1ee2ce3e71a46b101402d8951cd8872e3d603fb3", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-50.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-50.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-50.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-50.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -18,6 +18,6 @@ void f(void *base, void *out, void *mask_in, size_t m) {\n     }\n   }\n }\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n "}, {"sha": "dc0da57e1eb0dbd8aa43e658fa416be94a139242", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-51.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-51.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-51.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-51.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -21,5 +21,5 @@ void f(void *base, void *out, void *mask_in, size_t m, size_t n) {\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*mu} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "7a8163925f852979273295e98850b97e7188186b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-6.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -18,5 +18,5 @@ void f (void * restrict in, void * restrict out, int l, int n, int m, size_t vl)\n }\n \n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\s+\\s*[a-x0-9]+,\\s*[a-x0-9]+,\\s*[a-x0-9]+\\s+vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\s+\\s*[a-x0-9]+,\\s*[a-x0-9]+,\\s*[a-x0-9]+\\s+vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {add\\s+\\s*[a-x0-9]+,\\s*[a-x0-9]+,\\s*[a-x0-9]+\\s+li\\s+[a-x0-9]+,0\\s+vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-O2\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "1ccd23462ec067c077ce592280cc7e4f4200c998", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-65.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-65.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-65.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-65.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -29,5 +29,5 @@ void f (int8_t * restrict in, int8_t * restrict out, int n, int n2)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "77b1d2ac1e4db9cf1d3b4d04732882038c6a3d31", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-66.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-66.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-66.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-66.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -17,5 +17,5 @@ void f2 (void * restrict in, void * restrict out, int l, int n, int m, size_t vl\n   }\n }\n \n-/* { dg-final { scan-assembler-times {add\\s+\\s*[a-x0-9]+,\\s*[a-x0-9]+,\\s*[a-x0-9]+\\s+vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\s+\\s*[a-x0-9]+,\\s*[a-x0-9]+,\\s*[a-x0-9]+\\s+vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "8890c32020ef764d2addc0faf1610be242481236", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-67.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-67.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-67.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-67.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -21,7 +21,7 @@ void f2 (void * restrict in, void * restrict out, int l, int n, int m)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {addi\\s+[a-x0-9]+,\\s*[a-x0-9]+,\\s*44} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {addi\\s+[a-x0-9]+,\\s*[a-x0-9]+,\\s*44} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "0a4855a2eea2cd62f6585a2207a72655be8798a5", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-68.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-68.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-68.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-68.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -21,6 +21,6 @@ void f2 (void * restrict in, void * restrict out, int l, int n, int m)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {addi\\s+[a-x0-9]+,\\s*[a-x0-9]+,\\s*44} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {addi\\s+[a-x0-9]+,\\s*[a-x0-9]+,\\s*44} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "37707b00488dd82a6d1a39bb49b480a31db61c0f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-69.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-69.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-69.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-69.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -36,5 +36,5 @@ void f (int8_t * restrict in, int8_t * restrict out, int l, int n, int m, size_t\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "c066510336ad196d4f93c4af47d5fd7a87175bb8", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-70.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-70.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-70.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-70.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -42,5 +42,5 @@ void f (int8_t * restrict in, int8_t * restrict out, int l, int n, int m, size_t\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "8409d06796a516c72fc776166a9deb5b409b9354", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-71.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-71.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-71.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-71.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -50,5 +50,5 @@ void f (int8_t * restrict in, int8_t * restrict out, int l, int n, int m, size_t\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "53d4500c8cf733e217b85097ddce4af825859831", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-73.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-73.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-73.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-73.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -21,5 +21,5 @@ void f (int8_t * restrict in, int8_t * restrict out, int n, int cond, size_t vl,\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "ff540ec792db629b476e8c28d27dbfac4041a802", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-74.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-74.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-74.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-74.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -23,5 +23,5 @@ void f (int8_t * restrict in, int8_t * restrict out, int n, int cond, size_t vl,\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "c85f186518bb68241d6f68d260e89dd6a2e95d0f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-75.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-75.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-75.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-75.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -23,5 +23,5 @@ void f (int8_t * restrict in, int8_t * restrict out, int n, int cond, size_t vl,\n       __riscv_vse8_v_i8mf8 (out + i + 100, v2, vl);\n     }\n }\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "1eb7546166abc526289a2247b3a0496f50f81dab", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/avl_single-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Favl_single-8.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -13,6 +13,6 @@ void f (void * restrict in, void * restrict out, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "3fa7cf3bcbe3a07fa1cab28bf04c343523f574da", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/imm_bb_prop-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_bb_prop-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_bb_prop-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_bb_prop-2.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -26,4 +26,4 @@ void f (int8_t * restrict in, int8_t * restrict out, int n, int n2)\n }\n \n /* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*9,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*5,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-O1\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*5,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O1\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "dbe6c67ee87b1681e3f6430a93f276a2a4762532", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/imm_bb_prop-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_bb_prop-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_bb_prop-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_bb_prop-3.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -19,4 +19,4 @@ void f(void *base, void *out, void *mask_in, size_t vl, size_t m) {\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*4,\\s*e8,\\s*mf8,\\s*tu,\\s*mu} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*4,\\s*e8,\\s*mf8,\\s*tu,\\s*mu} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "4fbeffb8b5433a366ebf395dc067e041442d70dc", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/imm_bb_prop-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_bb_prop-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_bb_prop-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_bb_prop-4.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -21,5 +21,5 @@ void f(void *base, void *out, void *mask_in, size_t vl, size_t m, size_t n) {\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*4,\\s*e8,\\s*mf8,\\s*tu,\\s*mu} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*4,\\s*e8,\\s*mf8,\\s*tu,\\s*mu} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n "}, {"sha": "0262ff1cb3c930a6bf7d0c0797f922cb62184fdd", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/imm_conflict-4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_conflict-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_conflict-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_conflict-4.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -30,7 +30,7 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler {vsetivli\\s+zero,\\s*5,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler {vsetivli\\s+zero,\\s*19,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler {vsetivli\\s+zero,\\s*8,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\"  no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler {vsetivli\\s+zero,\\s*5,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler {vsetivli\\s+zero,\\s*19,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler {vsetivli\\s+zero,\\s*8,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\"  no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "9b5917e15055649d53ba5abf9bc0c610c82a4a76", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/imm_conflict-5.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_conflict-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_conflict-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_conflict-5.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -37,7 +37,7 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler {vsetivli\\s+zero,\\s*5,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler {vsetivli\\s+zero,\\s*19,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler {vsetivli\\s+zero,\\s*8,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\"  no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler {vsetivli\\s+zero,\\s*5,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler {vsetivli\\s+zero,\\s*19,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler {vsetivli\\s+zero,\\s*8,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\"  no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "bca708906e02a833a87d305897bd27e52ed96e40", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_loop_invariant-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_loop_invariant-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_loop_invariant-12.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -23,6 +23,6 @@ void f (void * restrict in, void * restrict out, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*4,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetivli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "21cd0298e2432b8079e7c085660c65d45ca8f2c5", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_loop_invariant-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_loop_invariant-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_loop_invariant-13.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -24,7 +24,7 @@ void f (void * restrict in, void * restrict out, void * restrict mask_in, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle16\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\),\\s*v0.t} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle16\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\),\\s*v0.t} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*4,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetivli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "834328db017e2a4ce2eee27b4764698944074e07", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-14.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_loop_invariant-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_loop_invariant-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_loop_invariant-14.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -25,7 +25,7 @@ void f (void * restrict in, void * restrict out, void * restrict mask_in, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle16\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\),\\s*v0.t} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle16\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\),\\s*v0.t} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*4,\\s*e16,\\s*mf2,\\s*tu,\\s*mu} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetivli} 2 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "e535f8dab0cad13bdd8e25b373b706facc8ca36e", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-15.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_loop_invariant-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_loop_invariant-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_loop_invariant-15.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -25,7 +25,7 @@ void f (void * restrict in, void * restrict out, void * restrict mask_in, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle16\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\),\\s*v0.t} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle16\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\),\\s*v0.t} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*4,\\s*e16,\\s*mf2,\\s*t[au],\\s*mu} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetivli} 2 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "b4dee19fd8bca5b8b708190f1c515e4ee03fc9dc", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_loop_invariant-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_loop_invariant-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_loop_invariant-16.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -23,7 +23,7 @@ void f (void * restrict in, void * restrict out, void * restrict mask_in, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle16\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\),\\s*v0.t} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle16\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\),\\s*v0.t} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*4,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetivli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "7adf9aaf9973409dbc6a544eccc90050c9c7097d", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/imm_switch-5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_switch-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_switch-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_switch-5.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -25,5 +25,5 @@ void f (void * restrict in, void * restrict out, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*5,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vsetivli\\s+zero,\\s*7,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*5,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vsetivli\\s+zero,\\s*7,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "e4f379d4ff729388292c0ad382e5e2825e379b34", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/imm_switch-6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_switch-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_switch-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_switch-6.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -25,6 +25,6 @@ void f (void * restrict in, void * restrict out, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*5,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vsetivli\\s+zero,\\s*5,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*5,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vsetivli\\s+zero,\\s*5,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n "}, {"sha": "8b67dcc216c49d7a687b330ac54d0093740cbf6e", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/imm_switch-7.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_switch-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_switch-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_switch-7.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -24,6 +24,6 @@ void f (void * restrict in, void * restrict out, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*5,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vsetivli\\s+zero,\\s*5,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*8,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*5,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vsetivli\\s+zero,\\s*5,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*8,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "4a1ef3ce5e98a54de08f210c7112af1c62f67627", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/imm_switch-8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_switch-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_switch-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_switch-8.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -31,5 +31,5 @@ void f (void * restrict in, void * restrict out, int * restrict out2, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*5,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetivli} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*5,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetivli} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "3825aea16f1574421876e7fbeaf7012446386cba", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/imm_switch-9.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_switch-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_switch-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fimm_switch-9.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -41,7 +41,7 @@ void f (void * restrict in, void * restrict out, void * restrict mask_in, int n,\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*5,\\s*e16,\\s*mf4,\\s*tu,\\s*mu} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*5,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*5,\\s*e16,\\s*mf4,\\s*tu,\\s*mu} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*5,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n "}, {"sha": "b0c40e8a0cb22ffb5164424555ee296e305673ca", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-1.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-1.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -31,6 +31,6 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "d1713ba803dd30d8d7731e29c44fac5ba681f10d", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-10.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -54,6 +54,6 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond, int cond\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "627debf7d6343a13dba136447e367e68a9dae00b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-11.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-11.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -58,6 +58,6 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond, int cond\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "192f1f313f79f26f37dddfa95f5a2af76253d45d", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-12.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-12.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -58,7 +58,7 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond, int cond\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */"}, {"sha": "50c4fbd2a9afabbb0992bea9df1f03ea2987b284", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-13.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-13.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -58,7 +58,7 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond, int cond\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */"}, {"sha": "efb45ff7105e679b9857f76c2e5409ba333a4779", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-14.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-14.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -53,6 +53,6 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond)\n     *(vint16mf4_t*)(out + i + 700) = v;\n   }\n }\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "d0d9ec9fdf153e8ee450bb0c0ce8540b581fe273", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-15.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-15.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -138,6 +138,6 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond)\n     *(vint16mf4_t*)(out + i + 700) = v;\n   }\n }\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "b0e23b9a4c3d83667e451b8297db47e2cf457eeb", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-16.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -50,5 +50,5 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "52f61b2afa43146c66095f239e04ed1450d3b1fd", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-17.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-17.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -54,6 +54,6 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "82d06f9e07a07159d4687bab3078539ff7868aa5", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-18.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-18.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -52,7 +52,7 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "604597d6b226f9988e19526cf0b3389d19f15664", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-19.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-19.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -43,6 +43,6 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "a09f50439249bf4c4f407d9d6dd02a570ee6fa62", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-2.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-2.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -45,6 +45,6 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond)\n     *(vint16mf4_t*)(out + i + 700) = v;\n   }\n }\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "52f61b2afa43146c66095f239e04ed1450d3b1fd", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-20.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-20.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -54,6 +54,6 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "9018deb917cbad19e61a4c218de2d10a9dae4ccb", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-21.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-21.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -45,6 +45,6 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "6b773e0946ec42505db32a357b9b92a914a8aa8f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-22.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-22.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -52,7 +52,7 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "91e75b068c4707e8718432ed0da0b73e40ec6d77", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-23.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-23.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -35,7 +35,7 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 4 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 4 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "bc98e5f8269f08756bc9dab51bd6b532129ca6a4", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-24.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-24.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -35,7 +35,7 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "0a10827daf515b844bb254f121268b10081af1f0", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-25.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-25.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -88,9 +88,9 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 10 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 20 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 10 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 20 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "a654075139864300db3246139114196d7f32256f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-26.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-26.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -80,10 +80,10 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 8 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 17 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 8 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 17 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "f2391145cfcdb2fbce9df628cd4eb9a5724384bc", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-27.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-27.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -38,14 +38,14 @@ void f (void * restrict in, void * restrict out, void * restrict in2, void * res\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 10 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 10 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "464457c6284ae85fef09362735e02852e37b439c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-28.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-28.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -40,15 +40,15 @@ void f (void * restrict in, void * restrict out, void * restrict in2, void * res\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 11 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 11 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "2a20b3281ec3dbec7ea89aee4e37022a02b8a418", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-29.c", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-29.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-29.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-29.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -40,15 +40,15 @@ void f (void * restrict in, void * restrict out, void * restrict in2, void * res\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 11 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 11 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "a16c5f506347217c5b5a383b0ae1190864c2eda9", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-3.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-3.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -41,7 +41,7 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond)\n     *(vint16mf4_t*)(out + i + 700) = v;\n   }\n }\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "227ceed0ffb09768113aa4f5cfd5e11a43219dfc", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-30.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-30.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-30.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-30.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -32,13 +32,13 @@ void f (void * restrict in, void * restrict out, void * restrict in2, void * res\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli} 9 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 9 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "0632eacc999f800df03c88b65b6ed72c2886a826", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-31.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-31.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-31.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-31.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -32,15 +32,15 @@ void f (void * restrict in, void * restrict out, void * restrict in2, void * res\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli} 9 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 9 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "dfae53197861ae7ae2382f08757b8e0b0f5ce5a2", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-32.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-32.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -32,15 +32,15 @@ void f (void * restrict in, void * restrict out, void * restrict in2, void * res\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]:+} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]:+} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli} 8 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 8 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "aa01648565778fe5e60202b9157bada69deeeeff", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-33.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-33.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-33.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-33.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -32,14 +32,14 @@ void f (void * restrict in, void * restrict out, void * restrict in2, void * res\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli} 8 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 8 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "6feecdfe959656f3358fc548f0188677151c6949", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-34.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-34.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-34.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-34.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -41,5 +41,5 @@ void f (int32_t * restrict in, int32_t * restrict out, int32_t * restrict in2, i\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "e0b5fbb403c53ec3650b1ad07d57079aa0a97c5c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-35.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-35.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-35.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-35.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -34,5 +34,5 @@ void f (int32_t * restrict in, int32_t * restrict out, int32_t * restrict in2, i\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "a6009b74101d5d14d4cdc4e950fde6b52a65d801", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-36.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-36.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-36.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-36.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -42,6 +42,6 @@ void f (int32_t * restrict in, int32_t * restrict out, int32_t * restrict in2, i\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+:} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+:} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "3625f04b76379aa7617b0ff42012bdc599ba5a56", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-37.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-37.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-37.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-37.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -36,6 +36,6 @@ void f (int32_t * restrict in, int32_t * restrict out, int32_t * restrict in2, i\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "cae22dd5164e28904cf89a2298ca5cd5e72fe96e", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-38.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-38.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-38.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-38.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -67,7 +67,7 @@ void f (int32_t * restrict in, int32_t * restrict out, int32_t * restrict in2, i\n }\n \n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 4 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 4 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "9fca90c2c8bb05b9ed7701b4196451a6c6decd47", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-39.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-39.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-39.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-39.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -16,5 +16,5 @@ void foo5_3 (int32_t * restrict in, int32_t * restrict out, size_t n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+j\\s+\\.L[0-9]+} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+j\\s+\\.L[0-9]+} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "fd2ba4470e6f4d4f05c3dd04653cf099c3c753ed", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-4.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-4.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -98,7 +98,7 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond)\n     *(vint16mf4_t*)(out + i + 700) = v;\n   }\n }\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "c3acdea23fb70a86d09e6c547c6ffcedea82e357", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-40.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-40.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-40.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-40.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -18,5 +18,5 @@ void foo5_4 (int32_t * restrict in, int32_t * restrict out, size_t n, size_t m,\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "d8a6aa268398518e75485cdb11d12c7beab6b279", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-41.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-41.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-41.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-41.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -22,5 +22,5 @@ void foo5_5 (int32_t * restrict in, int32_t * restrict out, size_t n, size_t m,\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "739d4bcfe0cc981505a2c665d370f218ad72e84c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-42.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-42.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-42.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-42.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -21,6 +21,6 @@ void foo5_6 (int32_t * restrict in, int32_t * restrict out, size_t n, size_t m,\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "f8e2c4da433be54cd03c28e8f089ab23c7569f08", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-43.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-43.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-43.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-43.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -23,5 +23,5 @@ void foo5_3 (int32_t * restrict in, int32_t * restrict out, size_t n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "e5239be1e3282988b1a71a853f86b4ddb2e9eb27", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-44.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-44.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-44.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-44.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -25,4 +25,4 @@ void foo5_4 (int32_t * restrict in, int32_t * restrict out, size_t n, size_t m,\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "f6ddacc8f8eaeb707dc33840c39f90e044d23fd0", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-45.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-45.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-45.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-45.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -30,5 +30,5 @@ void foo5_5 (int32_t * restrict in, int32_t * restrict out, size_t n, size_t m,\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+j\\s+\\.L[0-9]+} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+j\\s+\\.L[0-9]+} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "ca64d4953ea6bb9dfb709bd23c3952417c18385c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-46.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-46.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-46.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-46.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -28,5 +28,5 @@ void foo5_6 (int32_t * restrict in, int32_t * restrict out, size_t n, size_t m,\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "e98596fa01c2a9a9f7a3ab3756914145f06d39a9", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-6.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-6.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -150,6 +150,6 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond)\n     *(vint16mf4_t*)(out + i + 700) = v;\n   }\n }\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "b508abd9076d75f14396527787fedf0adadce1bd", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-7.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-7.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -38,6 +38,6 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "dd4797bd65334a725132285060103411d66280e9", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-8.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -144,6 +144,6 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond)\n     *(vint16mf4_t*)(out + i + 700) = v;\n   }\n }\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "4f31d1420898c82895a506e90e3d7d377ce59895", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-9.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_back_prop-9.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -38,7 +38,7 @@ void f (int32_t * restrict in, int32_t * restrict out, int n, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "24958def604f859d36157bfc5315557e7a2880ce", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-1.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-1.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -171,12 +171,12 @@ void f6 (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */"}, {"sha": "cf6470cea0d30b283b63f64d2f3482ba41fcf382", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-10.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-10.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -219,12 +219,12 @@ void f6 (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */"}, {"sha": "4e2a717197b97e31f964a33ae716f6cee6f04c0e", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-11.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-11.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -39,5 +39,5 @@ void f (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "026b40944c5c79ca7d4ff5c70b7f5f4b7c9acb9a", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-12.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-12.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -255,12 +255,12 @@ void f7 (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" no-opts \"-O1\" } } } } */"}, {"sha": "76e360519f6f9af2abb76f0fbdb663023dff8788", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-13.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-13.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -207,9 +207,9 @@ void f6 (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "3e5e88744fe5dc1895493626adb2d4b1bef5997f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-14.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-14.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -207,9 +207,9 @@ void f6 (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "b66df6addbf104acb07b4630f0fb4a48f91d8814", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-15.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-15.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -37,4 +37,4 @@ void f (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "1b33c17ee2fd80a7c51059535b4c8b7d265931eb", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-16.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-16.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -241,10 +241,10 @@ void f7 (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */"}, {"sha": "b5b31fdb5939994800e079ece35c71f10d803388", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-17.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-17.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -165,13 +165,13 @@ void f6 (int * restrict in, int * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "d2ec69a76f8452bc863f527e03b211cbf712e76b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-18.c", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-18.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -165,13 +165,13 @@ void f6 (int * restrict in, int * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "9fdc8aee6a152d27165dd7a0249f4da9f66920c3", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-19.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-19.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -30,5 +30,5 @@ void f6 (int * restrict in, int * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "e61eb40b7c5ce775e7e4350ddd67b3ae20e2668d", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-2.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-2.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -171,12 +171,12 @@ void f6 (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" no-opts \"-O1\" } } } } */"}, {"sha": "e4caff3f9d158a0474bf4cf0328387b30713d62b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-20.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-20.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -192,12 +192,12 @@ void f7 (int * restrict in, int * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 6 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 6 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "26f115c5cf4ff8e9f82cb5f9b08dfee96dfe9f53", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-21.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-21.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -141,15 +141,15 @@ void f6 (int * restrict in, int * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "6fb81c518b2cc98b8f14b07fcca7776ab5991a3c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-22.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-22.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -141,15 +141,15 @@ void f6 (int * restrict in, int * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "728761d21dc4f062880b118960e1296028722d20", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-23.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-23.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -26,5 +26,5 @@ void f (int * restrict in, int * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "8dbcccdebe36209c6092d6ebcc6e7dc54330a751", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-24.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-24.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -164,17 +164,17 @@ void f7 (int * restrict in, int * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "1dee56d1f8b04e8c0ec55ec2864d7e40eb14cae9", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-25.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-25.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -563,10 +563,10 @@ void f7 (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "8547d4a35a7581e1dcce65c9cc62fe9cac1482d1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-26.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-26.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -483,10 +483,10 @@ void f6 (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "5240fe33c2f8bf218e3b57efa6a1d40b28142b6a", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-27.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-27.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -483,9 +483,9 @@ void f6 (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "f0e1ada628666f6c9fa9c8138b02a34502065956", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-28.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-28.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -83,4 +83,4 @@ void f6 (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "ca57ecad7cfd95f9d61a93753ff7fddef203cf73", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-3.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -31,5 +31,5 @@ void f (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "fc6161edbbafa6a889ddd7cec6da4c08085856d1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-4.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-4.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -199,12 +199,12 @@ void f7 (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 6 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 6 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O2\" } } } } */"}, {"sha": "de84f9ea32bdfb86d10035531a10a8c42eff953b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-5.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-5.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -153,15 +153,15 @@ void f6 (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */"}, {"sha": "9054d86122d0d1e1f4ebb7541772cb4c1a28b04e", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-6.c", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-6.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -153,15 +153,15 @@ void f6 (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */"}, {"sha": "8265b5ed2e167f999da8bf81d49c1130146c98fd", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-7.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-7.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -28,5 +28,5 @@ void f (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */"}, {"sha": "516153094e8e8455250155cdbbabcc702feaa841", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-8.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-8.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -178,17 +178,17 @@ void f7 (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */"}, {"sha": "a01b39184047fe3d3816292decbfce64f4196dbd", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-9.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_bb_prop-9.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -219,12 +219,12 @@ void f6 (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n-/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */\n+/* { dg-final { scan-assembler-times {add\\ta[0-7],a[0-7],a[0-7]\\s+\\.L[0-9][0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-O1\" } } } } */"}, {"sha": "3441b1f06b762754eabcd063b5e71afd42ffc8d0", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_call-1.c", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_call-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_call-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_call-1.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -222,18 +222,18 @@ int f7 (int8_t * restrict in, int8_t * restrict out, int n)\n \n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "da560972a0e6e2960d853f15ed76a3a04ff24425", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_call-2.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_call-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_call-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_call-2.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -191,17 +191,17 @@ void f6 (int8_t * restrict in, int8_t * restrict out, int n)\n \n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "748f54e391c30dfa448dce9317f76131aa53ecac", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_call-3.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_call-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_call-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_call-3.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -191,17 +191,17 @@ void f6 (int8_t * restrict in, int8_t * restrict out, int n)\n \n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "164c44a7eafea1629a557ae86d148ebb559d28d0", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_call-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_call-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_call-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_call-4.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -35,5 +35,5 @@ void f6 (int8_t * restrict in, int8_t * restrict out, int n)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 5 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "6ca0d175b9a6413c96304208d44fd58771f3c4c5", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_complex_loop-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_complex_loop-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_complex_loop-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_complex_loop-1.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -49,4 +49,4 @@ void f (int32_t * restrict in, int32_t * restrict out, size_t n, size_t m, int c\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "2c436d8ce0cdde5dc5e7e3a5e3dd4584d70c8ee4", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_complex_loop-2.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_complex_loop-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_complex_loop-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_complex_loop-2.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -49,8 +49,8 @@ void f (int32_t * restrict in, int32_t * restrict out, size_t n, size_t m, int c\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 5 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-not {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 5 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-not {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "bb75c509ffd20095821ce66791f26ee08c104f2a", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_conflict-1.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-1.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -17,7 +17,7 @@ void f (int32_t * restrict in, int32_t * restrict out, size_t n, size_t cond, si\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+j\\s+\\.L[0-9]+} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+j\\s+\\.L[0-9]+} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "30de699d32ea03968e347d021b48ffb8095429de", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_conflict-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-10.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -24,4 +24,4 @@ void f (int32_t * restrict in, int32_t * restrict out, size_t n, size_t m, size_\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 5 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 5 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "653aba8a1980c390e88a69a80069c50b5bbfa70b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_conflict-11.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-11.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -19,6 +19,6 @@ void f (int32_t * restrict in, int32_t * restrict out, size_t n, size_t m, size_\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "fb20a547d47b52aff3a49607f36f3ff317a11f9f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_conflict-12.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-12.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -35,5 +35,5 @@ void f2 (int32_t * restrict in, int32_t * restrict in2, int32_t * restrict out,\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "72f49f3e53f71f074236d0f0675f1154f0ca9bd4", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_conflict-2.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-2.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -17,7 +17,7 @@ void f (int32_t * restrict in, int32_t * restrict out, size_t n, size_t cond, si\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+j\\s+\\.L[0-9]+} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+j\\s+\\.L[0-9]+} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "a5ffd27b3df0b1a1f611309078581fbca7ed2008", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_conflict-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-3.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -26,5 +26,5 @@ void f2 (int32_t * restrict in, int32_t * restrict in2, int32_t * restrict out,\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "b0ca3942d42df92e3d06da411b298d1530d48d50", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_conflict-4.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-4.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -21,9 +21,9 @@ void f (int32_t * restrict in, int32_t * restrict out, size_t n, size_t cond, si\n }\n \n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]:+} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 5 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]:+} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 5 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "efba512269f69f06b10350c35fd9246285013a91", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_conflict-5.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-5.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -23,10 +23,10 @@ void f (int32_t * restrict in, int32_t * restrict out, size_t n, size_t cond, si\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]:+} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 7 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]:+} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 7 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "01396ef1c1b39a0b475de326a8d38713dd76cf9f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_conflict-6.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-6.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -19,7 +19,7 @@ void f (int32_t * in, int32_t * out, int n, int cond)\n   }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+:\\s+vle8\\.v} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+:\\s+vle8\\.v} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "60ad108666f801788982e4c09e1db7ba3d9fff00", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_conflict-7.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-7.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -20,6 +20,6 @@ void f (int32_t * restrict in, int32_t * restrict out, size_t n, size_t cond, si\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 4 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {j\\s+\\.L[0-9]+\\s+\\.L[0-9]+:\\s+vlm\\.v} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 4 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {j\\s+\\.L[0-9]+\\s+\\.L[0-9]+:\\s+vlm\\.v} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "7b9574cc332d8b3accb9634559b21dfe3ad1ead1", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_conflict-8.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-8.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -20,8 +20,8 @@ void f (int32_t * restrict in, int32_t * restrict out, size_t n, size_t cond, si\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 5 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {j\\s+\\.L[0-9]+\\s+\\.L[0-9]+:\\s+vlm\\.v} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 5 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {j\\s+\\.L[0-9]+\\s+\\.L[0-9]+:\\s+vlm\\.v} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "bc52e5a88c0ca850e63ec6fd442bc58f2e160c01", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_conflict-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_conflict-9.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -24,4 +24,4 @@ void f (int32_t * restrict in, int32_t * restrict out, size_t n, size_t m, size_\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 7 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 7 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "429d4942d75842a0eea364b811165e1addbc95bb", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-1.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -28,5 +28,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "2fe6605bc1bb8205e5c48efcd52e1ce597d2c448", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-10.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-10.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -28,4 +28,4 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "3c45894489494391c77b8c5acdca627ea0fe7706", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-11.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -28,5 +28,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "2f2f0893d87d375206e4c45e5741f7cf595391ec", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-12.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -28,5 +28,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "8774155aa95d141d3f6c7fe4abf1f2a94d4b87db", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-13.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-13.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -28,5 +28,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "8004854327a948b26d2b389a0e62a6691589c35f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-14.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-14.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -172,12 +172,12 @@ void f7 (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n \n "}, {"sha": "9e8f8018a86804e526450bafa4cd650d6ba50e48", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-15.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-15.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -34,5 +34,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "204fe958c450090e2fc26e3e4196f87fa1d42f24", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-16.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -34,5 +34,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "0868c0102f4dab4a3a3fbb65cb83e4d05b9754d2", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-17.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-17.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -34,5 +34,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "44e170bbda1c18cfa75cfc24678454e9a0552753", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-18.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-18.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -34,5 +34,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "80bd0081b24be896eb9b8dcbb274435a0d39b9fc", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-19.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-19.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -34,5 +34,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "9cdaa0649fae17bb3c55734c4688f748c0ac39d6", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-2.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -28,5 +28,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "55171805a7ed5219eb5195778026d3ae95c0d58f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-20.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-20.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -34,5 +34,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "26190478d5d44945f79271f2bdf40c0e07ada8cc", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-21.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-21.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -34,5 +34,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "d5e8728b42b783da44d007e93d5f9d0be149725f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-22.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-22.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -34,5 +34,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "19bfd58b8680f79d6fea716981345e5db6e73493", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-23.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-23.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -34,5 +34,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "2f13d2cc62dc5bfb05661258e147cad9271355f9", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-24.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-24.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -34,5 +34,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "32a8edb0097859061f41b2706418803e3016665a", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-25.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-25.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -34,5 +34,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "897c1ab31bcdaf5e7b41038da5ff7bcde87dbfdf", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-26.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-26.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -34,5 +34,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "2ba5e282f3236ecb5ca8079a185dbfb9b0265dc0", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-27.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-27.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -34,5 +34,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "d56d264d0c25d790d021997b50ac126c146c4c69", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-28.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-28.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -213,19 +213,19 @@ void f7 (void * restrict in, void * restrict out, int n, int cond)\n       *(vbool1_t*)(out + i) = v;\n     }\n }\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]+\\:} 1 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "f3183426873da417dbab373424fb67f481a71de5", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-3.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -28,5 +28,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "4cf5a00319e1e08b9e346ad8570a195c01cd9122", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-4.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -28,5 +28,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "f708e4a5732e3c34e414bed837b85a87e02b8f1f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-5.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -28,5 +28,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "f3dbffb8ebc2be80ff28b43309e6413b79895dcc", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-6.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-6.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -28,5 +28,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "6e2689698be8dc93a277e5fcdea8de0376e0756d", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-7.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -28,5 +28,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "6dde53e517b6c273bf0071709e871d5186a8c7bf", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-8.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-8.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -28,5 +28,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "903c46cbbbfa0d75d9b35b795a585f8691e14eee", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-9.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_miss_default-9.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -28,5 +28,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"   no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "9dc7392556a160ca6ff919f31b78e9d13468cc1a", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-1.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -33,5 +33,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,\\.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,\\.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */"}, {"sha": "e132c036e7d42052e95b2e018a061dc03f152ddf", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-10.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-10.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -33,5 +33,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle16\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle16\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */"}, {"sha": "10eb69a676e823f4f7d9ab187d81d876420fca04", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-11.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-11.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -33,5 +33,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle32\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle32\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */"}, {"sha": "fb13306a13ba1607aec6ab74564f8ab15af9c160", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-12.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-12.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -33,5 +33,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle32\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle32\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */"}, {"sha": "bfa51c0188e5df2daf511f011b70f74520d27950", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-13.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-13.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -33,5 +33,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle32\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle32\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */"}, {"sha": "402ec1bbccd2eaa6e0b237540d7872d24f86a759", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-14.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-14.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -207,11 +207,11 @@ void f7 (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s+\\.L[0-9]+\\:\\s+vlm\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 7 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s+\\.L[0-9]+\\:\\s+vlm\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 7 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */"}, {"sha": "1389c162f3647aa64955551f1e08a461bb02d6f2", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-15.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-15.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -36,5 +36,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */"}, {"sha": "5e3dd66493153d65a4d0b8f20f71742a9f9dce30", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-16.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-16.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -36,5 +36,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */"}, {"sha": "0de0549c19fc75e7e9737e1283a2d1e13559c09b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-17.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-17.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -36,5 +36,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */"}, {"sha": "e76f934b8fe457b283f349786b11d3ddc33af7e4", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-18.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-18.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -36,5 +36,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */"}, {"sha": "c544b9b9d14a00bdaa7e8a1b4d0d5242b58a4bdd", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-19.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-19.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -36,5 +36,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"   } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s+\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"   } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"   } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s+\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"   } } } } */"}, {"sha": "7caccee722693dc9e2959c9db11831a9f56433c2", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-2.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -33,5 +33,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\"  no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\"  no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */"}, {"sha": "5a3c986ade111ea60ff471911d82e972cf969bbe", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-20.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-20.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -36,5 +36,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s+\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s+\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */"}, {"sha": "5ef9c607038136272a4b049099d04740dd65fa35", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-21.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-21.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -36,5 +36,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s+\\.L[0-9]+\\:\\s+vle16\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s+\\.L[0-9]+\\:\\s+vle16\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */"}, {"sha": "46621b04b9e34891162cf7cf10bfbfcf0e5ee735", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-22.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-22.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-22.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-22.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -36,5 +36,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle16\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle16\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */"}, {"sha": "50e484677f0b84e151724f46f25a430b3476112b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-23.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-23.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-23.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-23.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -36,5 +36,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle16\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle16\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */"}, {"sha": "3d8bdbc1ef00707b10d0bc8b2cc3cf9a475e6f49", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-24.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-24.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-24.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-24.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -36,5 +36,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle16\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle16\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */"}, {"sha": "c4ffa48fccd18477fc6c86f5682a208824c17a67", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-25.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-25.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-25.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-25.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -36,5 +36,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle32\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle32\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */"}, {"sha": "ee4be66b3601ccf80e9622c2860d686ef5a91c58", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-26.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-26.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-26.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-26.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -36,5 +36,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle32\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle32\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */"}, {"sha": "d521e427b881671d1b846ccf7fc55fe0ddb7e87c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-27.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-27.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-27.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-27.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -36,5 +36,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle32\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle32\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */"}, {"sha": "f215ac5ffba6bdf7a318d887312d5609f7879186", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-28.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-28.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-28.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-28.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -227,11 +227,11 @@ void f7 (void * restrict in, void * restrict out, int n, int cond)\n       *(vbool1_t*)(out + i) = v;\n     }\n }\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vlm\\.v\\s*v[0-9]+,0\\([a-x0-9]+\\)} 7 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vlm\\.v\\s*v[0-9]+,0\\([a-x0-9]+\\)} 7 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\"  } } } } */"}, {"sha": "3121f43384038367abeabf6765fa16eb1ca06bea", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-3.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-3.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -33,5 +33,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\"   no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\"   no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\"   no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\"   no-opts \"-flto\" } } } } */"}, {"sha": "1009517c60916432e489172ecc8f84bc3b0e2845", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-4.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -33,5 +33,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\"  no-opts \"-flto\"  } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\"  no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\"  no-opts \"-flto\"  } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\"  no-opts \"-flto\"  } } } } */"}, {"sha": "7c8e5d3d859589254d3edc3e110db851da049b2e", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-5.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -33,5 +33,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */"}, {"sha": "35bb54eaef129b7951b3f9aa2cacaf4c9f8d5524", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-6.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -33,5 +33,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle8\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */"}, {"sha": "1d766651ce64fef5a35e20340c6605a62d02bff2", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-7.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-7.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -33,5 +33,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle16\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle16\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */"}, {"sha": "8c401140e8250ba36c6f9227c5a20eff90680246", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-8.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -33,5 +33,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle16\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle16\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */"}, {"sha": "c6f9c0904cf1a5d8c2001767100db3b2dd0fc2b0", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_phi-9.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_phi-9.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -33,5 +33,5 @@ void f (void * restrict in, void * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle16\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 4 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {ble\\t[a-x0-9]+,zero,.L[0-9]+\\s*\\.L[0-9]+\\:\\s*vle16\\.v\\s+v[0-9]+,0\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */"}, {"sha": "d5f27c614bdd858446a4fb9949245be624ebe2a2", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_single_block-17.c", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_block-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_block-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_block-17.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -21,12 +21,12 @@ void foo7 (void * restrict in, void * restrict out)\n   *(vbool64_t*)(out + 7) = v7;\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" } } } } */\n-/* { dg-final { scan-assembler-times {vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 7 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" } } } } */\n-/* { dg-final { scan-assembler-times {vsm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 7 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-Og -g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-Og -g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-Og -g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-Og -g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-Og -g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-Og -g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-Og -g\" } } } } */\n+/* { dg-final { scan-assembler-times {vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 7 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-Og -g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 7 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-Og -g\" } } } } */"}, {"sha": "c676b6b7aefd126a6046034eaa9fe34ef14a1ef7", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_single_block-18.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_block-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_block-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_block-18.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -26,7 +26,7 @@ void f (void * restrict in, void * restrict out)\n   *(vint8mf2_t*)(out + 7) = v7;\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-Og -g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-Og -g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-Og -g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-Og -g\" } } } } */"}, {"sha": "11f1da32200590d0dd371aebdea10e5fb71cff64", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_single_block-19.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_block-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_block-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_block-19.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -81,25 +81,25 @@ void f (void * restrict in, void * restrict out)\n   *(vint16m8_t*)(out + 30) = v30;\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O2\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O2\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O2\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O2\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-O2\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O2\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O2\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli} 15 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-O2\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 15 { target { no-opts \"-O0\" no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-O2\" } } } } */"}, {"sha": "15b10e6bac603655d1375f2207234e2fe1c69708", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-1.c", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-1.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -69,18 +69,18 @@ void foo7 (void * restrict in, void * restrict out, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vlm\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "823e50a2f094a52daa0d4cb8ee5699a9b706e0bc", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-2.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-2.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -33,10 +33,10 @@ void foo3 (void * restrict in, void * restrict out, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "1dac01c678f49825e98a6fbd1b21232993cc6806", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-3.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-3.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -33,6 +33,6 @@ void foo3 (void * restrict in, void * restrict out, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9][0-9]\\:\\s+vle8\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "05321bf68b167e9fa1972e00ae0fa81204a98af2", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-4.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-4.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -24,8 +24,8 @@ void foo3 (void * restrict in, void * restrict out, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "016ad75ac426d61926bffd22869efaad8d3af0b9", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-5.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-5.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -24,8 +24,8 @@ void foo3 (void * restrict in, void * restrict out, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle16\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "f96b8c5774507e049103d9a83afa2f9b82b0b83c", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-6.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -14,5 +14,5 @@ void foo2 (void * restrict in, void * restrict out, int n)\n       *(vint32mf2_t*)(out + i) = v;\n     }\n }\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "c20e7b87016a5ff32d1d40d6ab25f1a00db3476a", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-7.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-7.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -14,5 +14,5 @@ void foo2 (void * restrict in, void * restrict out, int n)\n       *(vuint32mf2_t*)(out + i) = v;\n     }\n }\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "ca6b7fe0951a5e2d35c25564ec7a5c5ea2030bc4", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_single_vtype-8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_single_vtype-8.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -14,5 +14,5 @@ void foo2 (void * restrict in, void * restrict out, int n)\n       *(vfloat32mf2_t*)(out + i) = v;\n     }\n }\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+\\.L[0-9]\\:\\s+vle32\\.v\\s+(?:v[0-9]|v[1-2][0-9]|v3[0-1]),0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "eebc6c0862e8080d589c3ccc53e61d8e56e3d397", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-1.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-1.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -22,5 +22,5 @@ void f (void * restrict in, void * restrict out, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-funroll-loops\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-funroll-loops\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */"}, {"sha": "204058a43bce57014978c22bc5dc856f0fa301d8", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-10.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-10.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -41,6 +41,6 @@ void foo (int8_t * restrict in, int8_t * restrict out, int n, int cond)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 9 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 9 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" no-opts \"-flto\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "99cf3bd583e07a374e3f6a343fe0127d6aa60f5b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-11.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-11.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -52,4 +52,4 @@ void foo (int8_t * restrict in, int8_t * restrict out, int n, int cond1, int con\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 7 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 7 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "b79758527b7a8dd903fc89525d98701f854f2e68", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-12.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-12.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-12.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-12.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -51,5 +51,5 @@ void foo (int8_t * restrict in, int8_t * restrict out, int n, int cond1, int con\n       *(vint16mf4_t*)(out + 30000) = v;\n     }\n }\n-/* { dg-final { scan-assembler-times {vsetvli} 9 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 9 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n "}, {"sha": "29b850832f29e2e06232e8196d8db9047e11cc73", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-13.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-13.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-13.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-13.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -12,6 +12,6 @@ void f (void * restrict in, void * restrict out, int n)\n   *(vint16mf4_t*)(out + 2) = v2;\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-funroll-loops\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-funroll-loops\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */"}, {"sha": "f416a231f0e0c9591c569022183bdc19d2e44921", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-14.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-14.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -32,8 +32,8 @@ void f (void * restrict in, void * restrict out, int32_t * a, int32_t * b, int n\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 4 { target { no-opts \"-O0\" no-opts \"-funroll-loops\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 4 { target { no-opts \"-O0\" no-opts \"-funroll-loops\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */"}, {"sha": "a39b48ccb9986cb791d625b488ac57996aa33be6", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-15.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-15.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -44,9 +44,9 @@ void f (void * restrict in, void * restrict out, int32_t * a, int32_t * b, int n\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 7 { target { no-opts \"-O0\" no-opts \"-funroll-loops\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 7 { target { no-opts \"-O0\" no-opts \"-funroll-loops\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */"}, {"sha": "1ab92df0fdca87890f949ed0aabb4f9381381256", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-16.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-16.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -51,10 +51,10 @@ void f (void * restrict in, void * restrict out, int32_t * a, int32_t * b, int n\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 10 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-funroll-loops\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 3 { target { no-opts \"-O0\"  no-opts \"-funroll-loops\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 10 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-funroll-loops\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */"}, {"sha": "1702885796a91d603fdf8db8ca15bd2aebdaa966", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-2.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -22,5 +22,5 @@ void f (void * restrict in, void * restrict out, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-funroll-loops\" no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-funroll-loops\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" } } } } */"}, {"sha": "00b883f2f38ab079140504f2d7481e3b57e968ef", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-3.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -22,4 +22,4 @@ void f (void * restrict in, void * restrict out, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "ce30f3aac69e7e9ad79a4b497e195173d29c41fc", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-4.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-4.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -16,5 +16,5 @@ void f (void * restrict in, void * restrict out, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "ce30f3aac69e7e9ad79a4b497e195173d29c41fc", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-5.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-5.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -16,5 +16,5 @@ void f (void * restrict in, void * restrict out, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-flto\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]} 1 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\"  no-opts \"-O1\"  no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-flto\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "f7e354314b5a8638875bebe19a64b8569cf86633", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-6.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -29,5 +29,5 @@ void foo (void * restrict in, void * restrict out, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 7 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 7 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "28c017d6130fc0e40c70d4815521f0260fed1671", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-7.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-7.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -39,5 +39,5 @@ void foo (int8_t * restrict in, int8_t * restrict out, int n)\n     }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 7 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 7 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "06bb695f7d12ac5b88810e7906c6ae732099d335", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-8.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-8.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -40,6 +40,6 @@ void foo (int8_t * restrict in, int8_t * restrict out, int n, int cond)\n       *(vint32mf2_t*)(out + i + 700) = v6;\n     }\n }\n-/* { dg-final { scan-assembler-times {vsetvli} 7 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-not {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16\\s*mf4,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 7 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-not {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16\\s*mf4,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "06bb695f7d12ac5b88810e7906c6ae732099d335", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-9.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvlmax_switch_vtype-9.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -40,6 +40,6 @@ void foo (int8_t * restrict in, int8_t * restrict out, int n, int cond)\n       *(vint32mf2_t*)(out + i + 700) = v6;\n     }\n }\n-/* { dg-final { scan-assembler-times {vsetvli} 7 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n-/* { dg-final { scan-assembler-not {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16\\s*mf4,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 7 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]} 2 { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */\n+/* { dg-final { scan-assembler-not {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e16\\s*mf4,\\s*t[au],\\s*m[au]} { target { no-opts \"-O0\" no-opts \"-O1\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-funroll-loops\" no-opts \"-g\" } } } } */"}, {"sha": "e0c6588b1db1c8c8d178db27f6fcca08fc9109ed", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vsetvl-16.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-16.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -16,5 +16,5 @@ void f(int8_t *base, int8_t *out, size_t vl, size_t m) {\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {slli\\s+[a-x0-9]+,\\s*[a-x0-9]+,\\s*10} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "0c5da5e640c6ec1d64af323e336dd778f50656c3", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vsetvl-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-2.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -17,4 +17,4 @@ void f(int8_t *base, int8_t *out, size_t vl, size_t m) {\n }\n \n /* { dg-final { scan-assembler-times {slli\\s+[a-x0-9]+,\\s*[a-x0-9]+,\\s*10} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "f995e04aacc1436aee1eee6fc883dedf6ff696dd", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vsetvl-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-3.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -18,4 +18,4 @@ void f(int8_t *base, int8_t *out, size_t vl, size_t m) {\n }\n \n /* { dg-final { scan-assembler-times {slli\\s+[a-x0-9]+,\\s*[a-x0-9]+,\\s*10} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 3 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "41639317d0506a2c88e8784cdd91c91f831674cd", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vsetvl-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-4.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -18,4 +18,4 @@ void f(int8_t *base, int8_t *out, size_t vl, size_t m) {\n }\n \n /* { dg-final { scan-assembler-times {slli\\s+[a-x0-9]+,\\s*[a-x0-9]+,\\s*10} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "e84e32b25094619a83e4faf6c7137eaf56befe92", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vsetvl-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-5.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -12,6 +12,6 @@ void foo(int32_t *in1, int32_t *in2, int32_t *in3, int32_t *out, size_t n, size_\n   }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle32\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle32\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "fb7abdeb96865b724d881f053eb3d5aca5ad6c23", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vsetvl-6.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-6.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -17,6 +17,6 @@ void foo(int32_t *in1, int32_t *in2, int32_t *in3, int32_t *out, size_t n, size_\n   }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle32\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle32\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "5fa2f2bc29476719eda027bdcbf7d797e156a9dc", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vsetvl-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-7.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -12,6 +12,6 @@ void foo(int32_t *in1, int32_t *in2, int32_t *in3, int32_t *out, size_t n, size_\n   }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle32\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle32\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "55cc770cfde799d91818bc2c26c3a28ff0b5cf17", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vsetvl-8.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvl-8.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -17,6 +17,6 @@ void foo(int32_t *in1, int32_t *in2, int32_t *in3, int32_t *out, size_t n, size_\n   }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle32\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle32\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 2 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n-/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "96f169079500dfdf94a61c6c6fe693f178eefeeb", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vsetvlmax-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvlmax-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvlmax-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvlmax-1.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -12,6 +12,6 @@ void foo(int32_t *in1, int32_t *in2, int32_t *in3, int32_t *out, size_t n) {\n   }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle32\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle32\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}, {"sha": "ae1db0a905fa7cda5f3e86fc476325caa2011057", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vsetvlmax-14.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvlmax-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvlmax-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvlmax-14.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -13,6 +13,6 @@ void f(int8_t *base, int8_t *out, size_t vl, size_t m) {\n   }\n }\n \n-/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {\\.L[0-9]+\\:\\s+vle8\\.v\\s+v[0-9]+,\\s*0\\s*\\([a-x0-9]+\\)} 1 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli\\s+[a-x0-9]+,\\s*zero,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n /* { dg-final { scan-assembler-times {vsetvli} 1 { target { no-opts \"-O0\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n\\ No newline at end of file"}, {"sha": "e34e2c99e889b903084e5ef2702fff94a675a044", "filename": "gcc/testsuite/gcc.target/riscv/rvv/vsetvl/vsetvlmax-18.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvlmax-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0abd652e3878bd79ed802e868324ae3f617c380/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvlmax-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fvsetvl%2Fvsetvlmax-18.c?ref=a0abd652e3878bd79ed802e868324ae3f617c380", "patch": "@@ -16,4 +16,4 @@ void f(int8_t *base, int8_t *out, size_t vl, size_t m, size_t n) {\n   }\n }\n \n-/* { dg-final { scan-assembler-times {vsetvli} 4 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */\n+/* { dg-final { scan-assembler-times {vsetvli} 4 { target { no-opts \"-O0\" no-opts \"-Os\" no-opts \"-Oz\" no-opts \"-g\" no-opts \"-funroll-loops\" } } } } */"}]}