{"sha": "aa40952cda882dd9e6a116247281aeeac0d38baa", "node_id": "C_kwDOANBUbNoAKGFhNDA5NTJjZGE4ODJkZDllNmExMTYyNDcyODFhZWVhYzBkMzhiYWE", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2021-08-17T08:37:02Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-04T08:45:11Z"}, "message": "[Ada] Implement CUDA_Device\n\ngcc/ada/\n\n\t* gnat_cuda.adb (Remove_CUDA_Device_Entities): New function.\n\t(Expand_CUDA_Package): Call Remove_CUDA_Device_Entities.\n\t* gnat_cuda.ads (Expand_CUDA_Package): Expand documentation.\n\t* sem_prag.adb (Analyze_Pragma): Remove warning about\n\tCUDA_Device not being implemented.", "tree": {"sha": "223a53b27012a8e129199e3a302cdfb152ff52e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/223a53b27012a8e129199e3a302cdfb152ff52e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa40952cda882dd9e6a116247281aeeac0d38baa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa40952cda882dd9e6a116247281aeeac0d38baa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa40952cda882dd9e6a116247281aeeac0d38baa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa40952cda882dd9e6a116247281aeeac0d38baa/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70aec3a1b8efd09a951e4d52f396345a740879d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70aec3a1b8efd09a951e4d52f396345a740879d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70aec3a1b8efd09a951e4d52f396345a740879d3"}], "stats": {"total": 110, "additions": 88, "deletions": 22}, "files": [{"sha": "a1739be5031847c0f6bd915eff255dde81a3aa3d", "filename": "gcc/ada/gnat_cuda.adb", "status": "modified", "additions": 78, "deletions": 16, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa40952cda882dd9e6a116247281aeeac0d38baa/gcc%2Fada%2Fgnat_cuda.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa40952cda882dd9e6a116247281aeeac0d38baa/gcc%2Fada%2Fgnat_cuda.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_cuda.adb?ref=aa40952cda882dd9e6a116247281aeeac0d38baa", "patch": "@@ -25,22 +25,25 @@\n \n --  This package defines CUDA-specific datastructures and functions.\n \n-with Atree;       use Atree;\n-with Debug;       use Debug;\n-with Elists;      use Elists;\n-with Namet;       use Namet;\n-with Nlists;      use Nlists;\n-with Nmake;       use Nmake;\n-with Rtsfind;     use Rtsfind;\n-with Sinfo;       use Sinfo;\n-with Sinfo.Nodes; use Sinfo.Nodes;\n-with Stringt;     use Stringt;\n-with Tbuild;      use Tbuild;\n-with Uintp;       use Uintp;\n-with Sem;         use Sem;\n-with Sem_Aux;     use Sem_Aux;\n-with Sem_Util;    use Sem_Util;\n-with Snames;      use Snames;\n+with Atree;          use Atree;\n+with Debug;          use Debug;\n+with Einfo.Entities; use Einfo.Entities;\n+with Einfo.Utils;    use Einfo.Utils;\n+with Elists;         use Elists;\n+with Errout;         use Errout;\n+with Namet;          use Namet;\n+with Nlists;         use Nlists;\n+with Nmake;          use Nmake;\n+with Rtsfind;        use Rtsfind;\n+with Sem;            use Sem;\n+with Sem_Aux;        use Sem_Aux;\n+with Sem_Util;       use Sem_Util;\n+with Sinfo.Nodes;    use Sinfo.Nodes;\n+with Sinfo;          use Sinfo;\n+with Snames;         use Snames;\n+with Stringt;        use Stringt;\n+with Tbuild;         use Tbuild;\n+with Uintp;          use Uintp;\n \n with GNAT.HTable;\n \n@@ -120,6 +123,10 @@ package body GNAT_CUDA is\n    --  are declared within package body Pack_Body. Returns No_Elist if Pack_Id\n    --  does not contain such procedures.\n \n+   procedure Remove_CUDA_Device_Entities (Pack_Id : Entity_Id);\n+   --  Removes all entities marked with the CUDA_Device pragma from package\n+   --  Pack_Id. Must only be called when compiling for the host.\n+\n    procedure Set_CUDA_Device_Entities\n      (Pack_Id : Entity_Id;\n       E       : Elist_Id);\n@@ -226,6 +233,13 @@ package body GNAT_CUDA is\n \n       Empty_CUDA_Global_Subprograms (N);\n \n+      --  Remove CUDA_Device entities (except if they are also CUDA_Host), as\n+      --  they can only be referenced from the device and might reference\n+      --  device-only symbols.\n+\n+      Remove_CUDA_Device_Entities\n+        (Package_Specification (Corresponding_Spec (N)));\n+\n       --  If procedures marked with CUDA_Global have been defined within N,\n       --  we need to register them with the CUDA runtime at program startup.\n       --  This requires multiple declarations and function calls which need\n@@ -718,6 +732,54 @@ package body GNAT_CUDA is\n       Analyze (New_Stmt);\n    end Build_And_Insert_CUDA_Initialization;\n \n+   ---------------------------------\n+   -- Remove_CUDA_Device_Entities --\n+   ---------------------------------\n+\n+   procedure Remove_CUDA_Device_Entities (Pack_Id : Entity_Id) is\n+      Device_Entities : constant Elist_Id :=\n+        Get_CUDA_Device_Entities (Pack_Id);\n+      Device_Elmt     : Elmt_Id;\n+      Device_Entity   : Entity_Id;\n+      Bod             : Node_Id;\n+   begin\n+      pragma Assert (Debug_Flag_Underscore_C);\n+\n+      if Device_Entities = No_Elist then\n+         return;\n+      end if;\n+\n+      Device_Elmt := First_Elmt (Device_Entities);\n+      while Present (Device_Elmt) loop\n+         Device_Entity := Node (Device_Elmt);\n+         Next_Elmt (Device_Elmt);\n+\n+         case Ekind (Device_Entity) is\n+            when E_Function | E_Procedure =>\n+               Bod := Subprogram_Body (Device_Entity);\n+\n+               if Nkind (Parent (Bod)) = N_Subunit\n+                 and then Present (Corresponding_Stub (Parent (Bod)))\n+               then\n+                  Error_Msg_N\n+                    (\"Cuda_Device not suported on separate subprograms\",\n+                     Corresponding_Stub (Parent (Bod)));\n+               else\n+                  Remove (Bod);\n+                  Remove (Subprogram_Spec (Device_Entity));\n+               end if;\n+\n+            when E_Variable | E_Constant =>\n+               Remove (Declaration_Node (Device_Entity));\n+\n+            when others =>\n+               pragma Assert (False);\n+         end case;\n+\n+         Remove_Entity_And_Homonym (Device_Entity);\n+      end loop;\n+   end Remove_CUDA_Device_Entities;\n+\n    ------------------------------\n    -- Set_CUDA_Device_Entities --\n    ------------------------------"}, {"sha": "390f5de846b8367daea45eb42dbf2135ae50073d", "filename": "gcc/ada/gnat_cuda.ads", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa40952cda882dd9e6a116247281aeeac0d38baa/gcc%2Fada%2Fgnat_cuda.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa40952cda882dd9e6a116247281aeeac0d38baa/gcc%2Fada%2Fgnat_cuda.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_cuda.ads?ref=aa40952cda882dd9e6a116247281aeeac0d38baa", "patch": "@@ -86,7 +86,10 @@ package GNAT_CUDA is\n    --  entity of its parent package body.\n \n    procedure Expand_CUDA_Package (N : Node_Id);\n-   --  When compiling for the host, generate code to register kernels with the\n-   --  CUDA runtime and post-process kernels.\n+   --  When compiling for the host:\n+   --  - Generate code to register kernels with the CUDA runtime and\n+   --    post-process kernels.\n+   --  - Empty content of CUDA_Global procedures.\n+   --  - Remove declarations of CUDA_Device entities.\n \n end GNAT_CUDA;"}, {"sha": "43bf577e1a5df8c84b5e9d3fecb18bb0e14b2931", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa40952cda882dd9e6a116247281aeeac0d38baa/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa40952cda882dd9e6a116247281aeeac0d38baa/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=aa40952cda882dd9e6a116247281aeeac0d38baa", "patch": "@@ -14849,18 +14849,19 @@ package body Sem_Prag is\n          begin\n             GNAT_Pragma;\n             Check_Arg_Count (1);\n-            Arg_Node := Get_Pragma_Arg (Arg1);\n+            Check_Arg_Is_Library_Level_Local_Name (Arg1);\n \n-            Check_Arg_Is_Library_Level_Local_Name (Arg_Node);\n+            Arg_Node := Get_Pragma_Arg (Arg1);\n             Device_Entity := Entity (Arg_Node);\n \n             if Ekind (Device_Entity) in E_Variable\n                                       | E_Constant\n                                       | E_Procedure\n                                       | E_Function\n             then\n-               Add_CUDA_Device_Entity (Scope (Device_Entity), Device_Entity);\n-               Error_Msg_N (\"??& not implemented yet\", N);\n+               Add_CUDA_Device_Entity\n+                 (Package_Specification_Of_Scope (Scope (Device_Entity)),\n+                  Device_Entity);\n \n             else\n                Error_Msg_NE (\"& must be constant, variable or subprogram\","}]}