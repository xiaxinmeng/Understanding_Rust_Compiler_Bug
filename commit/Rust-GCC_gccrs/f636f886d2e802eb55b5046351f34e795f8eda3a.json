{"sha": "f636f886d2e802eb55b5046351f34e795f8eda3a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYzNmY4ODZkMmU4MDJlYjU1YjUwNDYzNTFmMzRlNzk1ZjhlZGEzYQ==", "commit": {"author": {"name": "Dimitris Papavasiliou", "email": "dpapavas@gmail.com", "date": "2014-05-12T20:55:54Z"}, "committer": {"name": "Mike Stump", "email": "mrs@gcc.gnu.org", "date": "2014-05-12T20:55:54Z"}, "message": "invoke.texi: Document new switches -Wno-shadow-ivar, -fno-local-ivars and -fivar-visibility.\n\n2014-05-12  Dimitris Papavasiliou  <dpapavas@gmail.com>\n\n            * doc/invoke.texi: Document new switches -Wno-shadow-ivar,\n            -fno-local-ivars and -fivar-visibility.\n            * c-family/c.opt: Make -Wshadow also implicitly enable\n            -Wshadow-ivar.\n\ntestsuite:\n            * objc.dg/shadow-1.m: New test.\n            * objc.dg/shadow-2.m: New test.\n            * objc.dg/ivar-scope-1.m: New test.\n            * objc.dg/ivar-scope-2.m: New test.\n            * objc.dg/ivar-scope-3.m: New test.\n            * objc.dg/ivar-scope-4.m: New test.\n            * objc.dg/ivar-visibility-1.m: New test.\n            * objc.dg/ivar-visibility-2.m: New test.\n            * objc.dg/ivar-visibility-3.m: New test.\n            * objc.dg/ivar-visibility-4.m: New test.\n\nNow, actuatally add the files....\n\nFrom-SVN: r210339", "tree": {"sha": "89e1b74abd9a0e400a35d335b11456f551ac5d9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89e1b74abd9a0e400a35d335b11456f551ac5d9f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f636f886d2e802eb55b5046351f34e795f8eda3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f636f886d2e802eb55b5046351f34e795f8eda3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f636f886d2e802eb55b5046351f34e795f8eda3a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f636f886d2e802eb55b5046351f34e795f8eda3a/comments", "author": null, "committer": null, "parents": [{"sha": "16e60fff0b97c8d4a166afc60dad088ce907dd0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/16e60fff0b97c8d4a166afc60dad088ce907dd0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/16e60fff0b97c8d4a166afc60dad088ce907dd0f"}], "stats": {"total": 404, "additions": 404, "deletions": 0}, "files": [{"sha": "34443a442fe0e3dfca7b8d1405922ae20b21e147", "filename": "gcc/testsuite/objc.dg/ivar-scope-1.m", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-1.m?ref=f636f886d2e802eb55b5046351f34e795f8eda3a", "patch": "@@ -0,0 +1,24 @@\n+/* Test instance variable scope.  */\n+/* Author: Dimitris Papavasiliou <dpapavas@gmail.com>.  */\n+/* { dg-do compile } */\n+#include <objc/objc.h>\n+\n+@interface MyClass\n+{\n+  int someivar;\n+}\n+- (void) test;\n+@end\n+\n+@implementation MyClass\n+- (void) test\n+{\n+  int a;\n+\n+  /* Make sure instance variables do have local scope when\n+     -fno-local-ivar isn't specified. */\n+  \n+  a = self->someivar;  /* No warning or error. */\n+  a = someivar;        /* No error. */\n+}\n+@end"}, {"sha": "ff795d08d6a352f945b7ac71eb90475acc190d9e", "filename": "gcc/testsuite/objc.dg/ivar-scope-2.m", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-2.m?ref=f636f886d2e802eb55b5046351f34e795f8eda3a", "patch": "@@ -0,0 +1,34 @@\n+/* Test instance variable scope.  */\n+/* Author: Dimitris Papavasiliou <dpapavas@gmail.com>.  */\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-fno-local-ivars\" } */\n+#include <objc/objc.h>\n+\n+@interface MyClass\n+{\n+  int someivar;\n+}\n+- (void) testscope;\n+- (void) testshadowing;\n+@end\n+\n+@implementation MyClass\n+- (void) testscope\n+{\n+  int a;\n+\n+  a = self->someivar;  /* No warning or error. */\n+  a = someivar;        /* { dg-error \".someivar. undeclared\" } */\n+}\n+\n+- (void) testshadowing\n+{\n+  int someivar = 1;\n+  int a;\n+\n+  /* Since instance variables don't have local scope no shadowing\n+     should occur. */\n+  \n+  a = someivar; /* No warning. */\n+}\n+@end"}, {"sha": "0bf7aa1a114ad2ab53d7f56962839162115fbc80", "filename": "gcc/testsuite/objc.dg/ivar-scope-3.m", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-3.m?ref=f636f886d2e802eb55b5046351f34e795f8eda3a", "patch": "@@ -0,0 +1,60 @@\n+/* Test instance variable scope.  */\n+/* Author: Dimitris Papavasiliou <dpapavas@gmail.com>.  */\n+/* { dg-do run } */\n+/* { dg-additional-options \"-Wno-shadow-ivar\" } */\n+#include \"../objc-obj-c++-shared/TestsuiteObject.m\"\n+#include <objc/objc.h>\n+\n+extern void abort(void);\n+\n+int someivar = 1;\n+\n+@interface MyClass: TestsuiteObject\n+{\n+  int someivar;\n+}\n+- (int) get;\n+- (int) getHidden;\n+@end\n+\n+@implementation MyClass\n+- init\n+{\n+  someivar = 2;\n+\n+  return self;\n+}\n+\n+- (int) get\n+{\n+  return someivar;\n+}\n+\n+- (int) getHidden\n+{\n+  int someivar = 3;\n+  \n+  return someivar;\n+}\n+@end\n+\n+int main(void)\n+{\n+  MyClass *object;\n+\n+  object = [[MyClass alloc] init];\n+\n+  /* Check whether the instance variable hides the global variable. */\n+  \n+  if ([object get] != 2) {\n+    abort();\n+  }\n+\n+  /* Check whether the local variable hides the instance variable. */\n+  \n+  if ([object getHidden] != 3) {\n+    abort();\n+  }\n+\n+  return 0;\n+}"}, {"sha": "f7209724be998c12d5a3fd21aeade16b65c096cd", "filename": "gcc/testsuite/objc.dg/ivar-scope-4.m", "status": "added", "additions": 83, "deletions": 0, "changes": 83, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-4.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-4.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-scope-4.m?ref=f636f886d2e802eb55b5046351f34e795f8eda3a", "patch": "@@ -0,0 +1,83 @@\n+/* Test instance variable scope.  */\n+/* Author: Dimitris Papavasiliou <dpapavas@gmail.com>.  */\n+/* { dg-do run } */\n+/* { dg-additional-options \"-Wno-shadow-ivar -fno-local-ivars\" } */\n+#include \"../objc-obj-c++-shared/runtime.h\"\n+#include <objc/objc.h>\n+\n+extern void abort(void);\n+\n+int someivar = 1;\n+\n+/* The testsuite object depends on local variable scope so we need to\n+   implement our own minimal base object here. */\n+\n+@interface MyClass\n+{\n+  Class isa;\n+  int someivar;\n+}\n+\n++ (id) alloc;\n+- (id) init;\n+- (int) getGlobal;\n+- (int) getInstance;\n+- (int) getHidden;\n+@end\n+\n+@implementation MyClass\n++ (id) alloc\n+{\n+  return class_createInstance (self, 0);\n+}\n+\n+- (id) init\n+{\n+  self->someivar = 2;\n+\n+  return self;\n+}\n+\n+- (int) getGlobal\n+{\n+  return someivar;\n+}\n+\n+- (int) getInstance\n+{\n+  return self->someivar;\n+}\n+\n+- (int) getHidden\n+{\n+  int someivar = 3;\n+  \n+  return someivar;\n+}\n+@end\n+\n+int main(void)\n+{\n+  id object;\n+\n+  object = [[MyClass alloc] init];\n+\n+  /* Check for aliasing between instance variable and global\n+     variable. */\n+\n+  if ([object getGlobal] != 1) {\n+    abort();\n+  }\n+  \n+  if ([object getInstance] != 2) {\n+    abort();\n+  }\n+\n+  /* Check whether the local variable hides the instance variable. */\n+  \n+  if ([object getHidden] != 3) {\n+    abort();\n+  }\n+\n+  return 0;\n+}"}, {"sha": "5a222591d19ab05254a47adf83acf25ad02c5bb9", "filename": "gcc/testsuite/objc.dg/ivar-visibility-1.m", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-1.m?ref=f636f886d2e802eb55b5046351f34e795f8eda3a", "patch": "@@ -0,0 +1,33 @@\n+/* Test instance variable visibility.  */\n+/* Author: Dimitris Papavasiliou <dpapavas@gmail.com>.  */\n+/* { dg-do compile } */\n+#include <objc/objc.h>\n+\n+@interface MySuperClass\n+{\n+    int someivar;\n+}\n+@end\n+\n+@implementation MySuperClass\n+@end\n+\n+\n+@interface MyClass : MySuperClass \n+@end\n+\n+@implementation MyClass\n+@end\n+\n+@interface MyOtherClass\n+- (void) test: (MyClass *) object;\n+@end\n+\n+@implementation MyOtherClass\n+- (void) test: (MyClass *) object\n+{\n+  int a;\n+\n+  a = object->someivar;   /* { dg-error \"instance variable .someivar. is declared protected\" } */\n+}\n+@end"}, {"sha": "eb41c8f4db025e917bbb28de16aa32d7608a6cd9", "filename": "gcc/testsuite/objc.dg/ivar-visibility-2.m", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-2.m?ref=f636f886d2e802eb55b5046351f34e795f8eda3a", "patch": "@@ -0,0 +1,34 @@\n+/* Test instance variable visibility.  */\n+/* Author: Dimitris Papavasiliou <dpapavas@gmail.com>.  */\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-fivar-visibility=protected\" } */\n+#include <objc/objc.h>\n+\n+@interface MySuperClass\n+{\n+    int someivar;\n+}\n+@end\n+\n+@implementation MySuperClass\n+@end\n+\n+\n+@interface MyClass : MySuperClass \n+@end\n+\n+@implementation MyClass\n+@end\n+\n+@interface MyOtherClass\n+- (void) test: (MyClass *) object;\n+@end\n+\n+@implementation MyOtherClass\n+- (void) test: (MyClass *) object\n+{\n+  int a;\n+\n+  a = object->someivar;   /* { dg-error \"instance variable .someivar. is declared protected\" } */\n+}\n+@end"}, {"sha": "ecc6f99c7605848d9d3a6876784b1ad48011416e", "filename": "gcc/testsuite/objc.dg/ivar-visibility-3.m", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-3.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-3.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-3.m?ref=f636f886d2e802eb55b5046351f34e795f8eda3a", "patch": "@@ -0,0 +1,34 @@\n+/* Test instance variable visibility.  */\n+/* Author: Dimitris Papavasiliou <dpapavas@gmail.com>.  */\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-fivar-visibility=private\" } */\n+#include <objc/objc.h>\n+\n+@interface MySuperClass\n+{\n+    int someivar;\n+}\n+@end\n+\n+@implementation MySuperClass\n+@end\n+\n+\n+@interface MyClass : MySuperClass \n+@end\n+\n+@implementation MyClass\n+@end\n+\n+@interface MyOtherClass\n+- (void) test: (MyClass *) object;\n+@end\n+\n+@implementation MyOtherClass\n+- (void) test: (MyClass *) object\n+{\n+  int a;\n+\n+  a = object->someivar;   /* { dg-error \"instance variable .someivar. is declared private\" } */\n+}\n+@end"}, {"sha": "adfeb449e55b3bf660887b3ac098f60d6c7cc5b9", "filename": "gcc/testsuite/objc.dg/ivar-visibility-4.m", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-4.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-4.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fivar-visibility-4.m?ref=f636f886d2e802eb55b5046351f34e795f8eda3a", "patch": "@@ -0,0 +1,36 @@\n+/* Test instance variable visibility.  */\n+/* Author: Dimitris Papavasiliou <dpapavas@gmail.com>.  */\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-fivar-visibility=public\" } */\n+#include <objc/objc.h>\n+\n+@interface MySuperClass\n+{\n+    int someivar;\n+}\n+@end\n+\n+@implementation MySuperClass\n+@end\n+\n+\n+@interface MyClass : MySuperClass \n+@end\n+\n+@implementation MyClass\n+@end\n+\n+@interface MyOtherClass\n+- (void) test: (MyClass *) object;\n+@end\n+\n+@implementation MyOtherClass\n+- (void) test: (MyClass *) object\n+{\n+  int a;\n+\n+  /* someivar is public so we shouldn't get any errors here. */\n+  \n+  a = object->someivar;\n+}\n+@end"}, {"sha": "739a0d0312e7fd21eef033f51a4211ceb8978e84", "filename": "gcc/testsuite/objc.dg/shadow-1.m", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fshadow-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fshadow-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fshadow-1.m?ref=f636f886d2e802eb55b5046351f34e795f8eda3a", "patch": "@@ -0,0 +1,33 @@\n+/* Test disabling of warnings for shadowing instance variables.  */\n+/* Author: Dimitris Papavasiliou <dpapavas@gmail.com>.  */\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-shadow-ivar\" } */\n+#include <objc/objc.h>\n+\n+@interface MyClass\n+{\n+@private\n+  int private;\n+\n+@protected\n+  int protected;\n+\n+@public\n+  int public;\n+}\n+- (void) test;\n+@end\n+\n+@implementation MyClass\n+- (void) test\n+{\n+  int private = 12;\n+  int protected = 12;\n+  int public = 12;\n+  int a;\n+  \n+  a = private;    /* No warning. */\n+  a = protected;  /* No warning. */\n+  a = public;     /* No warning. */\n+}\n+@end"}, {"sha": "16261b94a2178ff4d4f15aaa19e9409000893cd7", "filename": "gcc/testsuite/objc.dg/shadow-2.m", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fshadow-2.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f636f886d2e802eb55b5046351f34e795f8eda3a/gcc%2Ftestsuite%2Fobjc.dg%2Fshadow-2.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fshadow-2.m?ref=f636f886d2e802eb55b5046351f34e795f8eda3a", "patch": "@@ -0,0 +1,33 @@\n+/* Test disabling of warnings for shadowing instance variables.  */\n+/* Author: Dimitris Papavasiliou <dpapavas@gmail.com>.  */\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-Wno-shadow\" } */\n+#include <objc/objc.h>\n+\n+@interface MyClass\n+{\n+@private\n+  int private;\n+\n+@protected\n+  int protected;\n+\n+@public\n+  int public;\n+}\n+- (void) test;\n+@end\n+\n+@implementation MyClass\n+- (void) test\n+{\n+  int private = 12;\n+  int protected = 12;\n+  int public = 12;\n+  int a;\n+  \n+  a = private;    /* No warning. */\n+  a = protected;  /* No warning. */\n+  a = public;     /* No warning. */\n+}\n+@end"}]}