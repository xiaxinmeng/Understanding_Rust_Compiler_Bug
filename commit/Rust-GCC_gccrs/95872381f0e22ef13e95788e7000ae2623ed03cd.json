{"sha": "95872381f0e22ef13e95788e7000ae2623ed03cd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU4NzIzODFmMGUyMmVmMTNlOTU3ODhlNzAwMGFlMjYyM2VkMDNjZA==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2018-05-23T10:21:47Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-23T10:21:47Z"}, "message": "[Ada] Minor reformatting\n\n2018-05-23  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* einfo.ads: Minor reformatting.\n\t* sem_ch3.adb: Likewise.\n\t* sinfo.ads: Likewise.\n\nFrom-SVN: r260573", "tree": {"sha": "de14f61f4a7533dc6f6c8502fb2828d9487c5b1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de14f61f4a7533dc6f6c8502fb2828d9487c5b1c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/95872381f0e22ef13e95788e7000ae2623ed03cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95872381f0e22ef13e95788e7000ae2623ed03cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/95872381f0e22ef13e95788e7000ae2623ed03cd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/95872381f0e22ef13e95788e7000ae2623ed03cd/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "40016fa77fa2d0e814f9cd851c8863628c677c52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40016fa77fa2d0e814f9cd851c8863628c677c52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40016fa77fa2d0e814f9cd851c8863628c677c52"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "98720a392a2194bc7a925c887554f99e796bd0b9", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95872381f0e22ef13e95788e7000ae2623ed03cd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95872381f0e22ef13e95788e7000ae2623ed03cd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=95872381f0e22ef13e95788e7000ae2623ed03cd", "patch": "@@ -1,3 +1,9 @@\n+2018-05-23  Bob Duff  <duff@adacore.com>\n+\n+\t* einfo.ads: Minor reformatting.\n+\t* sem_ch3.adb: Likewise.\n+\t* sinfo.ads: Likewise.\n+\n 2018-05-23  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* exp_ch3.adb (Default_Initialize_Object): Do not optimize scalar array"}, {"sha": "8657a97a801cea8b8ad128e1d8b9d1dd75e7e8bf", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95872381f0e22ef13e95788e7000ae2623ed03cd/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95872381f0e22ef13e95788e7000ae2623ed03cd/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=95872381f0e22ef13e95788e7000ae2623ed03cd", "patch": "@@ -2865,7 +2865,7 @@ package Einfo is\n --\n --       For types and subtypes, the flag is set if all possible bit patterns\n --       of length Object_Size (i.e. Esize of the type) represent valid values\n---       of the type. In general for such tytpes, all values are valid, the\n+--       of the type. In general for such types, all values are valid, the\n --       only exception being the case where an object of the type has an\n --       explicit size that is greater than Object_Size.\n --"}, {"sha": "747b3cdbfd113f88d922978dcb62637b2a891d1a", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95872381f0e22ef13e95788e7000ae2623ed03cd/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95872381f0e22ef13e95788e7000ae2623ed03cd/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=95872381f0e22ef13e95788e7000ae2623ed03cd", "patch": "@@ -3664,7 +3664,7 @@ package body Sem_Ch3 is\n       function Delayed_Aspect_Present return Boolean;\n       --  If the declaration has an expression that is an aggregate, and it\n       --  has aspects that require delayed analysis, the resolution of the\n-      --  aggregate must be deferred to the freeze point of the objet. This\n+      --  aggregate must be deferred to the freeze point of the object. This\n       --  special processing was created for address clauses, but it must\n       --  also apply to Alignment. This must be done before the aspect\n       --  specifications are analyzed because we must handle the aggregate"}, {"sha": "0e53aa9b0eb580dbeb501c41d2baa961a855f937", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/95872381f0e22ef13e95788e7000ae2623ed03cd/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/95872381f0e22ef13e95788e7000ae2623ed03cd/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=95872381f0e22ef13e95788e7000ae2623ed03cd", "patch": "@@ -4136,7 +4136,7 @@ package Sinfo is\n       --  makes no attempt to enforce consistency here, so it is up to the\n       --  semantic phase to make sure that the aggregate is consistent (i.e.\n       --  that it is not a \"half-and-half\" case that mixes record and array\n-      --  syntax. In particular, for a record aggregate, the expressions\n+      --  syntax). In particular, for a record aggregate, the expressions\n       --  field will be set if there are positional associations.\n \n       --  Note: N_Aggregate is not used for all aggregates; in particular,"}]}