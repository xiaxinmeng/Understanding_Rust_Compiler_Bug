{"sha": "6bd2c800d55cf42bb9adf4466136bf10e88cb6ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJkMmM4MDBkNTVjZjQyYmI5YWRmNDQ2NjEzNmJmMTBlODhjYjZjYQ==", "commit": {"author": {"name": "Ond\u0159ej B\u00edlka", "email": "neleai@seznam.cz", "date": "2013-07-23T11:39:41Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2013-07-23T11:39:41Z"}, "message": "decl.c: Fix comment typos.\n\n2013-07-23   Ond\u0159ej B\u00edlka  <neleai@seznam.cz>\n\n        * decl.c: Fix comment typos.\n        * interface.c: Likewise.\n        * trans-array.c: Likewise.\n        * trans.c: Likewise.\n\nFrom-SVN: r201162", "tree": {"sha": "1912c97f55f5dad8444c17bddaef412044b7604d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1912c97f55f5dad8444c17bddaef412044b7604d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bd2c800d55cf42bb9adf4466136bf10e88cb6ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bd2c800d55cf42bb9adf4466136bf10e88cb6ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bd2c800d55cf42bb9adf4466136bf10e88cb6ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bd2c800d55cf42bb9adf4466136bf10e88cb6ca/comments", "author": {"login": "neleai", "id": 48067, "node_id": "MDQ6VXNlcjQ4MDY3", "avatar_url": "https://avatars.githubusercontent.com/u/48067?v=4", "gravatar_id": "", "url": "https://api.github.com/users/neleai", "html_url": "https://github.com/neleai", "followers_url": "https://api.github.com/users/neleai/followers", "following_url": "https://api.github.com/users/neleai/following{/other_user}", "gists_url": "https://api.github.com/users/neleai/gists{/gist_id}", "starred_url": "https://api.github.com/users/neleai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/neleai/subscriptions", "organizations_url": "https://api.github.com/users/neleai/orgs", "repos_url": "https://api.github.com/users/neleai/repos", "events_url": "https://api.github.com/users/neleai/events{/privacy}", "received_events_url": "https://api.github.com/users/neleai/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d7172355ef66f85961bc9908372b48e285a3fd48", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7172355ef66f85961bc9908372b48e285a3fd48", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7172355ef66f85961bc9908372b48e285a3fd48"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "0de32ddda6b56f398cb191b4b468e7e0c6e91014", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bd2c800d55cf42bb9adf4466136bf10e88cb6ca/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bd2c800d55cf42bb9adf4466136bf10e88cb6ca/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=6bd2c800d55cf42bb9adf4466136bf10e88cb6ca", "patch": "@@ -1,3 +1,10 @@\n+2013-07-23   Ond\u0159ej B\u00edlka  <neleai@seznam.cz>\n+\n+\t* decl.c: Fix comment typos.\n+\t* interface.c: Likewise.\n+\t* trans-array.c: Likewise.\n+\t* trans.c: Likewise.\n+\n 2013-07-22  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/57906\n@@ -20,7 +27,7 @@\n \t* trans-array.c (gfc_array_allocate,\n \tgfc_trans_deferred_array): Plug memory leak.\n \n-2013-07-21   Ond\u0159ej B\u00edlka  <neleai@seznam.cz>\n+2013-07-21  Ond\u0159ej B\u00edlka  <neleai@seznam.cz>\n \n \t* trans-decl.c: Fix comment typos.\n \t* trans-expr.c: Ditto."}, {"sha": "152511962d9efaccbae0f46a6639f9d9dc156b8f", "filename": "gcc/fortran/decl.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bd2c800d55cf42bb9adf4466136bf10e88cb6ca/gcc%2Ffortran%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bd2c800d55cf42bb9adf4466136bf10e88cb6ca/gcc%2Ffortran%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fdecl.c?ref=6bd2c800d55cf42bb9adf4466136bf10e88cb6ca", "patch": "@@ -8255,7 +8255,7 @@ match_procedure_in_type (void)\n \t}\n \n       /* See if we already have a binding with this name in the symtree which\n-\t would be an error.  If a GENERIC already targetted this binding, it may\n+\t would be an error.  If a GENERIC already targeted this binding, it may\n \t be already there but then typebound is still NULL.  */\n       stree = gfc_find_symtree (ns->tb_sym_root, name);\n       if (stree && stree->n.tb)"}, {"sha": "8d31d1c73749564192b57a4f0c386d98c59cb9a4", "filename": "gcc/fortran/interface.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bd2c800d55cf42bb9adf4466136bf10e88cb6ca/gcc%2Ffortran%2Finterface.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bd2c800d55cf42bb9adf4466136bf10e88cb6ca/gcc%2Ffortran%2Finterface.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Finterface.c?ref=6bd2c800d55cf42bb9adf4466136bf10e88cb6ca", "patch": "@@ -3170,7 +3170,7 @@ gfc_procedure_use (gfc_symbol *sym, gfc_actual_arglist **ap, locus *where)\n   gfc_formal_arglist *dummy_args;\n \n   /* Warn about calls with an implicit interface.  Special case\n-     for calling a ISO_C_BINDING becase c_loc and c_funloc\n+     for calling a ISO_C_BINDING because c_loc and c_funloc\n      are pseudo-unknown.  Additionally, warn about procedures not\n      explicitly declared at all if requested.  */\n   if (sym->attr.if_source == IFSRC_UNKNOWN && ! sym->attr.is_iso_c)\n@@ -3287,7 +3287,7 @@ void\n gfc_ppc_use (gfc_component *comp, gfc_actual_arglist **ap, locus *where)\n {\n   /* Warn about calls with an implicit interface.  Special case\n-     for calling a ISO_C_BINDING becase c_loc and c_funloc\n+     for calling a ISO_C_BINDING because c_loc and c_funloc\n      are pseudo-unknown.  */\n   if (gfc_option.warn_implicit_interface\n       && comp->attr.if_source == IFSRC_UNKNOWN"}, {"sha": "c269ea8bbf1c711d59d73ffc8797ead8a5139785", "filename": "gcc/fortran/trans-array.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bd2c800d55cf42bb9adf4466136bf10e88cb6ca/gcc%2Ffortran%2Ftrans-array.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bd2c800d55cf42bb9adf4466136bf10e88cb6ca/gcc%2Ffortran%2Ftrans-array.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-array.c?ref=6bd2c800d55cf42bb9adf4466136bf10e88cb6ca", "patch": "@@ -994,7 +994,7 @@ get_array_ref_dim_for_loop_dim (gfc_ss *ss, int loop_dim)\n \n    'eltype' == NULL signals that the temporary should be a class object.\n    The 'initial' expression is used to obtain the size of the dynamic\n-   type; otherwise the allocation and initialisation proceeds as for any\n+   type; otherwise the allocation and initialization proceeds as for any\n    other expression\n \n    PRE, POST, INITIAL, DYNAMIC and DEALLOC are as for"}, {"sha": "b7863b2d51119ee5bd4914444875a3d9daa7459c", "filename": "gcc/fortran/trans.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bd2c800d55cf42bb9adf4466136bf10e88cb6ca/gcc%2Ffortran%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bd2c800d55cf42bb9adf4466136bf10e88cb6ca/gcc%2Ffortran%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans.c?ref=6bd2c800d55cf42bb9adf4466136bf10e88cb6ca", "patch": "@@ -1568,7 +1568,7 @@ gfc_set_backend_locus (locus * loc)\n }\n \n \n-/* Restore the saved locus. Only used in conjonction with\n+/* Restore the saved locus. Only used in conjunction with\n    gfc_save_backend_locus, to free the memory when we are done.  */\n \n void"}]}