{"sha": "33b43b0d8cd2de722d177ef823930500948a7487", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNiNDNiMGQ4Y2QyZGU3MjJkMTc3ZWY4MjM5MzA1MDA5NDhhNzQ4Nw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-10-09T13:06:46Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-10-09T13:06:46Z"}, "message": "Define std::string and related typedefs outside __cxx11 namespace\n\nThe typedefs for common specializations of std::__cxx11::basic_string do\nnot need to be in the std::__cxx11 namespace. Those typedefs are never\nused for linkage purposes so don't appear in mangled names, and so don't\nneed to be distinct from the equivalent typedefs for the COW\nstd::basic_string specializations. It is OK for the same typedef to\nrefer to different types in different translation units.\n\nDefining them directly in namespace std improves diagnostics that use\nthose typedefs. For example:\n\nerror: could not convert '1' from 'int' to 'std::__cxx11::string' {aka 'std::__cxx11::basic_string<char>'}\n\nwill now be printed as:\n\nerror: could not convert '1' from 'int' to 'std::string' {aka 'std::__cxx11::basic_string<char>'}\n\nThe precise type is still shown, but the typedef is not obfuscated with\nthe inline namespace.\n\n\t* include/bits/stringfwd.h (string, wstring, u16string, u32string):\n\tDefine typedefs outside of __cxx11 inline namespace.\n\t* python/libstdcxx/v6/printers.py (register_type_printers): Also\n\tregister printers for typedefs in new location.\n\nFrom-SVN: r264958", "tree": {"sha": "fe52c12f4745d6dc6e912bdf1181fc9c1d0aec2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe52c12f4745d6dc6e912bdf1181fc9c1d0aec2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33b43b0d8cd2de722d177ef823930500948a7487", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33b43b0d8cd2de722d177ef823930500948a7487", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33b43b0d8cd2de722d177ef823930500948a7487", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33b43b0d8cd2de722d177ef823930500948a7487/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe8a86e1f445c4f97c06ddc36ce68ca40627a1cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe8a86e1f445c4f97c06ddc36ce68ca40627a1cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe8a86e1f445c4f97c06ddc36ce68ca40627a1cc"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "114a2ffb66c712d4f88538ff704a35961a4b07ae", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33b43b0d8cd2de722d177ef823930500948a7487/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33b43b0d8cd2de722d177ef823930500948a7487/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=33b43b0d8cd2de722d177ef823930500948a7487", "patch": "@@ -1,3 +1,10 @@\n+2018-10-09  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/bits/stringfwd.h (string, wstring, u16string, u32string):\n+\tDefine typedefs outside of __cxx11 inline namespace.\n+\t* python/libstdcxx/v6/printers.py (register_type_printers): Also\n+\tregister printers for typedefs in new location.\n+\n 2018-10-08  Jonathan Wakely  <jwakely@redhat.com>\n \n \tPR libstdc++/87538"}, {"sha": "2b7f4612cbcc93bd9015f87a68d98867836eeb3e", "filename": "libstdc++-v3/include/bits/stringfwd.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33b43b0d8cd2de722d177ef823930500948a7487/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstringfwd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33b43b0d8cd2de722d177ef823930500948a7487/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstringfwd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstringfwd.h?ref=33b43b0d8cd2de722d177ef823930500948a7487", "patch": "@@ -69,6 +69,8 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n            typename _Alloc = allocator<_CharT> >\n     class basic_string;\n \n+_GLIBCXX_END_NAMESPACE_CXX11\n+\n   /// A string of @c char\n   typedef basic_string<char>    string;   \n \n@@ -85,8 +87,6 @@ _GLIBCXX_BEGIN_NAMESPACE_CXX11\n   typedef basic_string<char32_t> u32string; \n #endif\n \n-_GLIBCXX_END_NAMESPACE_CXX11\n-\n   /** @}  */\n \n _GLIBCXX_END_NAMESPACE_VERSION"}, {"sha": "827c87b70ea50f98d58892b7d953198f2ddcd93b", "filename": "libstdc++-v3/python/libstdcxx/v6/printers.py", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33b43b0d8cd2de722d177ef823930500948a7487/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33b43b0d8cd2de722d177ef823930500948a7487/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fpython%2Flibstdcxx%2Fv6%2Fprinters.py?ref=33b43b0d8cd2de722d177ef823930500948a7487", "patch": "@@ -1556,6 +1556,8 @@ def register_type_printers(obj):\n     # Add type printers for typedefs std::string, std::wstring etc.\n     for ch in ('', 'w', 'u16', 'u32'):\n         add_one_type_printer(obj, 'basic_string', ch + 'string')\n+        add_one_type_printer(obj, '__cxx11::basic_string', ch + 'string')\n+        # Typedefs for __cxx11::basic_string used to be in namespace __cxx11:\n         add_one_type_printer(obj, '__cxx11::basic_string',\n                              '__cxx11::' + ch + 'string')\n         add_one_type_printer(obj, 'basic_string_view', ch + 'string_view')\n@@ -1568,7 +1570,7 @@ def register_type_printers(obj):\n         for x in ('stringbuf', 'istringstream', 'ostringstream',\n                   'stringstream'):\n             add_one_type_printer(obj, 'basic_' + x, ch + x)\n-            # <sstream> types are in __cxx11 namespace, but typedefs aren'x:\n+            # <sstream> types are in __cxx11 namespace, but typedefs aren't:\n             add_one_type_printer(obj, '__cxx11::basic_' + x, ch + x)\n \n     # Add type printers for typedefs regex, wregex, cmatch, wcmatch etc."}]}