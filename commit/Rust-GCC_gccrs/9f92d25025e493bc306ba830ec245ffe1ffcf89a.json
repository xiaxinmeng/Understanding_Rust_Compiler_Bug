{"sha": "9f92d25025e493bc306ba830ec245ffe1ffcf89a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWY5MmQyNTAyNWU0OTNiYzMwNmJhODMwZWMyNDVmZmUxZmZjZjg5YQ==", "commit": {"author": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2002-04-19T17:50:40Z"}, "committer": {"name": "Andreas Schwab", "email": "schwab@gcc.gnu.org", "date": "2002-04-19T17:50:40Z"}, "message": "Add some explanation for last change.\n\nFrom-SVN: r52531", "tree": {"sha": "02a641976d6635598dfa673359112971b2074731", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02a641976d6635598dfa673359112971b2074731"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f92d25025e493bc306ba830ec245ffe1ffcf89a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f92d25025e493bc306ba830ec245ffe1ffcf89a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f92d25025e493bc306ba830ec245ffe1ffcf89a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f92d25025e493bc306ba830ec245ffe1ffcf89a/comments", "author": null, "committer": null, "parents": [{"sha": "704c9a14022cd20ab666e348fd443e86f3a6fb3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/704c9a14022cd20ab666e348fd443e86f3a6fb3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/704c9a14022cd20ab666e348fd443e86f3a6fb3f"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "56b365ef3635481c0ae286ab9e2d87b1a2028af4", "filename": "gcc/real.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f92d25025e493bc306ba830ec245ffe1ffcf89a/gcc%2Freal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f92d25025e493bc306ba830ec245ffe1ffcf89a/gcc%2Freal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freal.c?ref=9f92d25025e493bc306ba830ec245ffe1ffcf89a", "patch": "@@ -209,7 +209,10 @@ typedef unsigned int UHItype __attribute__ ((mode (HI)));\n #endif\n \n /* Calculate the size of the generic \"e\" type.  This always has\n-   identical in-memory size to REAL_VALUE_TYPE.\n+   identical in-memory size to REAL_VALUE_TYPE.  The sizes are supposed\n+   to be the same as well, but when REAL_VALUE_TYPE_SIZE is not evenly\n+   divisible by HOST_BITS_PER_WIDE_INT we have some padding in\n+   REAL_VALUE_TYPE.\n    There are only two supported sizes: ten and six 16-bit words (160\n    or 96 bits).  */\n "}]}