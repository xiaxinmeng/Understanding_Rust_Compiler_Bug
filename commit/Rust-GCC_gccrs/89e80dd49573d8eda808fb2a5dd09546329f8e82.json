{"sha": "89e80dd49573d8eda808fb2a5dd09546329f8e82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODllODBkZDQ5NTczZDhlZGE4MDhmYjJhNWRkMDk1NDYzMjlmOGU4Mg==", "commit": {"author": {"name": "Diego Novillo", "email": "dnovillo@redhat.com", "date": "2005-07-29T16:32:00Z"}, "committer": {"name": "Diego Novillo", "email": "dnovillo@gcc.gnu.org", "date": "2005-07-29T16:32:00Z"}, "message": "re PR tree-optimization/22550 (ICE in vrp_evaluate_conditional)\n\n\n\tPR 22550\n\t* tree-cfgcleanup.c (cleanup_tree_cfg_1): Extract from ...\n\t(cleanup_tree_cfg): ... here.\n\tCall cleanup_tree_cfg_1 until there are no more cleanups to\n\tdo.\n\ntestsuite/ChangeLog\n\n\tPR 22550\n\t* g++.dg/tree-ssa/pr22550.C: New test.\n\nFrom-SVN: r102559", "tree": {"sha": "b726ec8795790e3c447d315a30f79bfbbd34ed85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b726ec8795790e3c447d315a30f79bfbbd34ed85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/89e80dd49573d8eda808fb2a5dd09546329f8e82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89e80dd49573d8eda808fb2a5dd09546329f8e82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/89e80dd49573d8eda808fb2a5dd09546329f8e82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/89e80dd49573d8eda808fb2a5dd09546329f8e82/comments", "author": null, "committer": null, "parents": [{"sha": "d2f3ffba9a32449f59973e11b846de08c2683583", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2f3ffba9a32449f59973e11b846de08c2683583", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2f3ffba9a32449f59973e11b846de08c2683583"}], "stats": {"total": 79, "additions": 69, "deletions": 10}, "files": [{"sha": "0acf31f32cf4a6af3ad2c90af7a63eaf1a9b30eb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e80dd49573d8eda808fb2a5dd09546329f8e82/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e80dd49573d8eda808fb2a5dd09546329f8e82/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=89e80dd49573d8eda808fb2a5dd09546329f8e82", "patch": "@@ -1,3 +1,11 @@\n+2005-07-29  Diego Novillo  <dnovillo@redhat.com>\n+\n+\tPR 22550\n+\t* tree-cfgcleanup.c (cleanup_tree_cfg_1): Extract from ...\n+\t(cleanup_tree_cfg): ... here.\n+\tCall cleanup_tree_cfg_1 until there are no more cleanups to\n+\tdo.\n+\n 2005-07-29  James A. Morrison  <phython@gcc.gnu.org>\n \n \t* tree-vrp.c (compare_range_with_value): Return true or false"}, {"sha": "aa60bc1a194001904a109f1b61f3077815fa52bf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e80dd49573d8eda808fb2a5dd09546329f8e82/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e80dd49573d8eda808fb2a5dd09546329f8e82/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=89e80dd49573d8eda808fb2a5dd09546329f8e82", "patch": "@@ -1,3 +1,8 @@\n+2005-07-29  Diego Novillo  <dnovillo@redhat.com>\n+\n+\tPR 22550\n+\t* g++.dg/tree-ssa/pr22550.C: New test.\n+\n 2005-07-29  James A. Morrison  <phython@gcc.gnu.org>\n \n \t* gcc.dg/tree-ssa/vrp19.c: New test."}, {"sha": "5f557762069f85dad6757f005903c6c46b0197d3", "filename": "gcc/testsuite/g++.dg/tree-ssa/pr22550.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e80dd49573d8eda808fb2a5dd09546329f8e82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr22550.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e80dd49573d8eda808fb2a5dd09546329f8e82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr22550.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftree-ssa%2Fpr22550.C?ref=89e80dd49573d8eda808fb2a5dd09546329f8e82", "patch": "@@ -0,0 +1,28 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+class X {\n+public:\n+  int mfunc1 () {\n+    return 1;\n+  }\n+  int mfunc2 () {\n+    return 2;\n+  }\n+  X (int a, int b) { }\n+};\n+\n+typedef int (X::*memfunc_p_t) ();\n+\n+memfunc_p_t mf_arr[2] = { &X::mfunc1, &X::mfunc2 };\n+\n+int\n+main ()\n+{\n+  // Get pntr to the array of pointers to member-funcs\n+  memfunc_p_t (*mf_arr_p)[2] = &mf_arr;\n+  // Compare indirect against direct access to an array element\n+  if ((*mf_arr_p)[0] != mf_arr[0])\n+    return 1;\n+  return 0;\n+}"}, {"sha": "f2454b0111917e7dcdb212a49d1b217a508e5c78", "filename": "gcc/tree-cfgcleanup.c", "status": "modified", "additions": 28, "deletions": 10, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/89e80dd49573d8eda808fb2a5dd09546329f8e82/gcc%2Ftree-cfgcleanup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/89e80dd49573d8eda808fb2a5dd09546329f8e82/gcc%2Ftree-cfgcleanup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfgcleanup.c?ref=89e80dd49573d8eda808fb2a5dd09546329f8e82", "patch": "@@ -489,14 +489,12 @@ cleanup_forwarder_blocks (void)\n   return changed;\n }\n \n-/* Remove unreachable blocks and other miscellaneous clean up work.  */\n+/* Do one round of CFG cleanup.  */\n \n-bool\n-cleanup_tree_cfg (void)\n+static bool\n+cleanup_tree_cfg_1 (void)\n {\n-  bool retval = false;\n-\n-  timevar_push (TV_TREE_CLEANUP_CFG);\n+  bool retval;\n \n   retval = cleanup_control_flow ();\n   retval |= delete_unreachable_blocks ();\n@@ -516,6 +514,28 @@ cleanup_tree_cfg (void)\n       end_recording_case_labels ();\n     }\n \n+  /* Merging the blocks may create new opportunities for folding\n+     conditional branches (due to the elimination of single-valued PHI\n+     nodes).  */\n+  retval |= merge_seq_blocks ();\n+\n+  return retval;\n+}\n+\n+\n+/* Remove unreachable blocks and other miscellaneous clean up work.  */\n+\n+bool\n+cleanup_tree_cfg (void)\n+{\n+  bool retval;\n+  int i;\n+\n+  timevar_push (TV_TREE_CLEANUP_CFG);\n+\n+  for (retval = true, i = 0; i < 5 && retval; i++)\n+    retval = cleanup_tree_cfg_1 ();\n+\n #ifdef ENABLE_CHECKING\n   if (retval)\n     {\n@@ -526,16 +546,14 @@ cleanup_tree_cfg (void)\n     }\n #endif\n \n-  /* Merging the blocks creates no new opportunities for the other\n-     optimizations, so do it here.  */\n-  retval |= merge_seq_blocks ();\n-\n   compact_blocks ();\n \n #ifdef ENABLE_CHECKING\n   verify_flow_info ();\n #endif\n+\n   timevar_pop (TV_TREE_CLEANUP_CFG);\n+\n   return retval;\n }\n "}]}