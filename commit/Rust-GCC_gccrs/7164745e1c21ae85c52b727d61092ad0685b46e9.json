{"sha": "7164745e1c21ae85c52b727d61092ad0685b46e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE2NDc0NWUxYzIxYWU4NWM1MmI3MjdkNjEwOTJhZDA2ODViNDZlOQ==", "commit": {"author": {"name": "Nikhil Benesch", "email": "nikhil.benesch@gmail.com", "date": "2020-10-04T06:03:36Z"}, "committer": {"name": "Ian Lance Taylor", "email": "iant@golang.org", "date": "2020-10-06T00:37:32Z"}, "message": "gofrontend: correct file reading logic in Stream_from_file\n\nThe implementation of Stream_from_file mishandled several cases:\n\n  * It reversed the check for whether bytes were already available in\n    the peek buffer.\n\n  * It considered positive return values from lseek to be an error, when\n    only a -1 return value indicates an error.\n\nReviewed-on: https://go-review.googlesource.com/c/gofrontend/+/259437", "tree": {"sha": "7bdec0e840d3a7868cb172b7725a2689e434a1f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bdec0e840d3a7868cb172b7725a2689e434a1f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7164745e1c21ae85c52b727d61092ad0685b46e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7164745e1c21ae85c52b727d61092ad0685b46e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7164745e1c21ae85c52b727d61092ad0685b46e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7164745e1c21ae85c52b727d61092ad0685b46e9/comments", "author": {"login": "benesch", "id": 882976, "node_id": "MDQ6VXNlcjg4Mjk3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/882976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/benesch", "html_url": "https://github.com/benesch", "followers_url": "https://api.github.com/users/benesch/followers", "following_url": "https://api.github.com/users/benesch/following{/other_user}", "gists_url": "https://api.github.com/users/benesch/gists{/gist_id}", "starred_url": "https://api.github.com/users/benesch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/benesch/subscriptions", "organizations_url": "https://api.github.com/users/benesch/orgs", "repos_url": "https://api.github.com/users/benesch/repos", "events_url": "https://api.github.com/users/benesch/events{/privacy}", "received_events_url": "https://api.github.com/users/benesch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e9282ae62f5318686dcd58498337090531cd6fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e9282ae62f5318686dcd58498337090531cd6fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e9282ae62f5318686dcd58498337090531cd6fc"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "701b2d427e32b68a531dfacee224bf8661b9cefc", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7164745e1c21ae85c52b727d61092ad0685b46e9/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7164745e1c21ae85c52b727d61092ad0685b46e9/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=7164745e1c21ae85c52b727d61092ad0685b46e9", "patch": "@@ -1,4 +1,4 @@\n-801c458a562d22260ff176c26d65639dd32c8a90\n+d00febdab0535546ccbf1ef634be1f23b09c8b77\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "081afefa0838d6498db9f900d43724c0af5bc68f", "filename": "gcc/go/gofrontend/import.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7164745e1c21ae85c52b727d61092ad0685b46e9/gcc%2Fgo%2Fgofrontend%2Fimport.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7164745e1c21ae85c52b727d61092ad0685b46e9/gcc%2Fgo%2Fgofrontend%2Fimport.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fimport.cc?ref=7164745e1c21ae85c52b727d61092ad0685b46e9", "patch": "@@ -1487,7 +1487,7 @@ Stream_from_file::~Stream_from_file()\n bool\n Stream_from_file::do_peek(size_t length, const char** bytes)\n {\n-  if (this->data_.length() <= length)\n+  if (this->data_.length() >= length)\n     {\n       *bytes = this->data_.data();\n       return true;\n@@ -1504,7 +1504,7 @@ Stream_from_file::do_peek(size_t length, const char** bytes)\n       return false;\n     }\n \n-  if (lseek(this->fd_, - got, SEEK_CUR) != 0)\n+  if (lseek(this->fd_, - got, SEEK_CUR) < 0)\n     {\n       if (!this->saw_error())\n \tgo_fatal_error(Linemap::unknown_location(), \"lseek failed: %m\");\n@@ -1524,15 +1524,15 @@ Stream_from_file::do_peek(size_t length, const char** bytes)\n void\n Stream_from_file::do_advance(size_t skip)\n {\n-  if (lseek(this->fd_, skip, SEEK_CUR) != 0)\n+  if (lseek(this->fd_, skip, SEEK_CUR) < 0)\n     {\n       if (!this->saw_error())\n \tgo_fatal_error(Linemap::unknown_location(), \"lseek failed: %m\");\n       this->set_saw_error();\n     }\n   if (!this->data_.empty())\n     {\n-      if (this->data_.length() < skip)\n+      if (this->data_.length() > skip)\n \tthis->data_.erase(0, skip);\n       else\n \tthis->data_.clear();"}]}