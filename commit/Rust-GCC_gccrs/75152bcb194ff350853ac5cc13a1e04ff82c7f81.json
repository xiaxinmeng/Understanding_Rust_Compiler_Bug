{"sha": "75152bcb194ff350853ac5cc13a1e04ff82c7f81", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzUxNTJiY2IxOTRmZjM1MDg1M2FjNWNjMTNhMWUwNGZmODJjN2Y4MQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2009-09-13T03:44:34Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2009-09-13T03:44:34Z"}, "message": "re PR fortran/41328 (bad iostat when reading DOS file in a character array (non-advancing))\n\n2009-09-12  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libgfortran/41328\n\t* gfortran.dg/cr_lf.f90: New test.\n\nFrom-SVN: r151666", "tree": {"sha": "ded4b844641cda24ff87fbd1a671cafd0943b495", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ded4b844641cda24ff87fbd1a671cafd0943b495"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75152bcb194ff350853ac5cc13a1e04ff82c7f81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75152bcb194ff350853ac5cc13a1e04ff82c7f81", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75152bcb194ff350853ac5cc13a1e04ff82c7f81", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75152bcb194ff350853ac5cc13a1e04ff82c7f81/comments", "author": null, "committer": null, "parents": [{"sha": "ee3eb6a416c996acf33fca5ecb5cd281b2c70c09", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee3eb6a416c996acf33fca5ecb5cd281b2c70c09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee3eb6a416c996acf33fca5ecb5cd281b2c70c09"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "cc1b26b3b2e3527da53237c16be6426785c9b230", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75152bcb194ff350853ac5cc13a1e04ff82c7f81/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75152bcb194ff350853ac5cc13a1e04ff82c7f81/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=75152bcb194ff350853ac5cc13a1e04ff82c7f81", "patch": "@@ -1,3 +1,8 @@\n+2009-09-12  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libgfortran/41328\n+\t* gfortran.dg/cr_lf.f90: New test.\n+\n 2009-09-11  Michael Matz  <matz@suse.de>\n \n \tPR middle-end/41275"}, {"sha": "855e70360953d675e64b24accecf06407fa7fea7", "filename": "gcc/testsuite/gfortran.dg/cr_lf.f90", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75152bcb194ff350853ac5cc13a1e04ff82c7f81/gcc%2Ftestsuite%2Fgfortran.dg%2Fcr_lf.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75152bcb194ff350853ac5cc13a1e04ff82c7f81/gcc%2Ftestsuite%2Fgfortran.dg%2Fcr_lf.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fcr_lf.f90?ref=75152bcb194ff350853ac5cc13a1e04ff82c7f81", "patch": "@@ -0,0 +1,36 @@\n+! { dg-do run }\n+! { dg-options \"-fbackslash\" }\n+! PR41328 and PR41168 Improper read of CR-LF sequences.\n+! Test case prepared by Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+program main\n+   implicit none\n+   integer :: iostat, n_chars_read\n+   character(len=1) :: buffer(64) = \"\"\n+   open( unit=10, form=\"formatted\", access=\"stream\", status=\"scratch\")\n+   write(10, fmt=\"(a)\", advance=\"no\") \"a\\rb\\rc\\r\"\n+   rewind(10)\n+   \n+   read( unit=10, fmt='(64A)', advance='NO', iostat=iostat,          &\n+         size=n_chars_read ) buffer\n+   if (n_chars_read.ne.1) call abort\n+   if (any(buffer(1:n_chars_read).ne.\"a\")) call abort\n+   if (.not.is_iostat_eor(iostat)) call abort\n+\n+   read( unit=10, fmt='(64A)', advance='NO', iostat=iostat,          &\n+         size=n_chars_read ) buffer\n+   if (n_chars_read.ne.1) call abort\n+   if (any(buffer(1:n_chars_read).ne.\"b\")) call abort\n+   if (.not.is_iostat_eor(iostat)) call abort\n+\n+   read( unit=10, fmt='(64A)', advance='NO', iostat=iostat,          &\n+         size=n_chars_read ) buffer\n+   if (n_chars_read.ne.1) call abort\n+   if (any(buffer(1:n_chars_read).ne.\"c\")) call abort\n+   if (.not.is_iostat_eor(iostat)) call abort\n+\n+   read( unit=10, fmt='(64A)', advance='NO', iostat=iostat,          &\n+         size=n_chars_read ) buffer\n+   if (n_chars_read.ne.0) call abort\n+   if (any(buffer(1:n_chars_read).ne.\"a\")) call abort\n+   if (.not.is_iostat_end(iostat)) call abort\n+end program main"}]}