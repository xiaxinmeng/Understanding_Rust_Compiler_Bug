{"sha": "8c8e9a6bb656fc50b9a166ba452d252fe05a2c38", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM4ZTlhNmJiNjU2ZmM1MGI5YTE2NmJhNDUyZDI1MmZlMDVhMmMzOA==", "commit": {"author": {"name": "Tom de Vries", "email": "tom@codesourcery.com", "date": "2018-01-19T16:29:41Z"}, "committer": {"name": "Tom de Vries", "email": "vries@gcc.gnu.org", "date": "2018-01-19T16:29:41Z"}, "message": "[nvptx] Fix bug in jit bug workaround\n\n2018-01-19  Tom de Vries  <tom@codesourcery.com>\n\t    Cesar Philippidis  <cesar@codesourcery.com>\n\n\tPR target/83920\n\n\t* config/nvptx/nvptx.c (nvptx_single): Fix jit workaround.\n\n\t* testsuite/libgomp.oacc-c-c++-common/pr83920.c: New test.\n\t* testsuite/libgomp.oacc-fortran/pr83920.f90: New test.\n\nCo-Authored-By: Cesar Philippidis <cesar@codesourcery.com>\n\nFrom-SVN: r256894", "tree": {"sha": "07ec11d9f2a5ce4fdfbaeff61f7818ad75d626bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07ec11d9f2a5ce4fdfbaeff61f7818ad75d626bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c8e9a6bb656fc50b9a166ba452d252fe05a2c38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c8e9a6bb656fc50b9a166ba452d252fe05a2c38", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c8e9a6bb656fc50b9a166ba452d252fe05a2c38", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c8e9a6bb656fc50b9a166ba452d252fe05a2c38/comments", "author": null, "committer": null, "parents": [{"sha": "6c7c47081ac481c28f31c30e8845d0337556e8a2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c7c47081ac481c28f31c30e8845d0337556e8a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c7c47081ac481c28f31c30e8845d0337556e8a2"}], "stats": {"total": 101, "additions": 99, "deletions": 2}, "files": [{"sha": "162ae1b1283f70efc7ded1906bfff5e022db09f6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8e9a6bb656fc50b9a166ba452d252fe05a2c38/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8e9a6bb656fc50b9a166ba452d252fe05a2c38/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c8e9a6bb656fc50b9a166ba452d252fe05a2c38", "patch": "@@ -1,3 +1,9 @@\n+2018-01-19  Tom de Vries  <tom@codesourcery.com>\n+\t    Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\tPR target/83920\n+\t* config/nvptx/nvptx.c (nvptx_single): Fix jit workaround.\n+\n 2018-01-19  Cesar Philippidis  <cesar@codesourcery.com>\n \n \tPR target/83790"}, {"sha": "f5bb438786573f09426b0f3d1b733a737bd3141f", "filename": "gcc/config/nvptx/nvptx.c", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8e9a6bb656fc50b9a166ba452d252fe05a2c38/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8e9a6bb656fc50b9a166ba452d252fe05a2c38/gcc%2Fconfig%2Fnvptx%2Fnvptx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnvptx%2Fnvptx.c?ref=8c8e9a6bb656fc50b9a166ba452d252fe05a2c38", "patch": "@@ -4102,9 +4102,33 @@ nvptx_single (unsigned mask, basic_block from, basic_block to)\n \n \t     There is nothing in the PTX spec to suggest that this is wrong, or\n \t     to explain why the extra initialization is needed.  So, we classify\n-\t     it as a JIT bug, and the extra initialization as workaround.  */\n-\t  emit_insn_before (gen_movbi (pvar, const0_rtx),\n+\t     it as a JIT bug, and the extra initialization as workaround:\n+\n+\t\t{\n+\t\t    .reg .u32 %x;\n+\t\t    mov.u32 %x,%tid.x;\n+\t\t    setp.ne.u32 %rnotvzero,%x,0;\n+\t\t}\n+\n+\t\t+.reg .pred %rcond2;\n+\t\t+setp.eq.u32 %rcond2, 1, 0;\n+\n+\t\t @%rnotvzero bra Lskip;\n+\t\t setp.<op>.<type> %rcond,op1,op2;\n+\t\t+mov.pred %rcond2, %rcond;\n+\t\t Lskip:\n+\t\t+mov.pred %rcond, %rcond2;\n+\t\t selp.u32 %rcondu32,1,0,%rcond;\n+\t\t shfl.idx.b32 %rcondu32,%rcondu32,0,31;\n+\t\t setp.ne.u32 %rcond,%rcondu32,0;\n+\t  */\n+\t  rtx_insn *label = PREV_INSN (tail);\n+\t  gcc_assert (label && LABEL_P (label));\n+\t  rtx tmp = gen_reg_rtx (BImode);\n+\t  emit_insn_before (gen_movbi (tmp, const0_rtx),\n \t\t\t    bb_first_real_insn (from));\n+\t  emit_insn_before (gen_rtx_SET (tmp, pvar), label);\n+\t  emit_insn_before (gen_rtx_SET (pvar, tmp), tail);\n #endif\n \t  emit_insn_before (nvptx_gen_vcast (pvar), tail);\n \t}"}, {"sha": "c308227951b948161b03f2474a7ee205533ea71a", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8e9a6bb656fc50b9a166ba452d252fe05a2c38/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8e9a6bb656fc50b9a166ba452d252fe05a2c38/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=8c8e9a6bb656fc50b9a166ba452d252fe05a2c38", "patch": "@@ -1,3 +1,10 @@\n+2018-01-19  Tom de Vries  <tom@codesourcery.com>\n+\t    Cesar Philippidis  <cesar@codesourcery.com>\n+\n+\tPR target/83920\n+\t* testsuite/libgomp.oacc-c-c++-common/pr83920.c: New test.\n+\t* testsuite/libgomp.oacc-fortran/pr83920.f90: New test.\n+\n 2018-01-03  Jakub Jelinek  <jakub@redhat.com>\n \n \tUpdate copyright years."}, {"sha": "6cd3b5d6f06773eab0b675bba4e0b3012a6b53c3", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/pr83920.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8e9a6bb656fc50b9a166ba452d252fe05a2c38/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr83920.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8e9a6bb656fc50b9a166ba452d252fe05a2c38/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr83920.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fpr83920.c?ref=8c8e9a6bb656fc50b9a166ba452d252fe05a2c38", "patch": "@@ -0,0 +1,32 @@\n+/* { dg-do run } */\n+\n+#include <stdlib.h>\n+\n+#define n 10\n+\n+static void __attribute__((noinline)) __attribute__((noclone))\n+foo (int beta, int *c)\n+{\n+  #pragma acc parallel copy(c[0:(n * n) - 1]) num_gangs(2)\n+  #pragma acc loop gang\n+  for (int j = 0; j < n; ++j)\n+    if (beta != 1)\n+      {\n+        #pragma acc loop vector\n+\tfor (int i = 0; i < n; ++i)\n+\t  c[i + (j * n)] = 0;\n+      }\n+}\n+\n+int\n+main (void)\n+{\n+  int c[n * n];\n+\n+  c[0] = 1;\n+  foo (0, c);\n+  if (c[0] != 0)\n+    abort ();\n+\n+  return 0;\n+}"}, {"sha": "34ad001abcd3e4f5843b7b232b3c13528773201f", "filename": "libgomp/testsuite/libgomp.oacc-fortran/pr83920.f90", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c8e9a6bb656fc50b9a166ba452d252fe05a2c38/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr83920.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c8e9a6bb656fc50b9a166ba452d252fe05a2c38/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr83920.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-fortran%2Fpr83920.f90?ref=8c8e9a6bb656fc50b9a166ba452d252fe05a2c38", "patch": "@@ -0,0 +1,28 @@\n+! { dg-do run }\n+\n+subroutine foo (BETA, C)\n+  real ::  C(100,100)\n+  integer :: i, j, l\n+  real, parameter :: one = 1.0\n+  real :: beta\n+\n+  !$acc parallel copy(c(1:100,1:100)) num_gangs(2)\n+  !$acc loop gang\n+  do j = 1, 100\n+     if (beta /= one) then\n+        !$acc loop vector\n+        do i = 1, 100\n+           C(i,j) = 0.0\n+        end do\n+     end if\n+  end do\n+  !$acc end parallel\n+end subroutine foo\n+\n+program test_foo\n+  real :: c(100,100), beta\n+  beta = 0.0\n+  c(:,:) = 1.0\n+  call foo (beta, c)\n+  if (c(1,1) /= 0.0) call abort ()\n+end program test_foo"}]}