{"sha": "505e038544dc82a5be5e4742ef443a32c5eb967c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTA1ZTAzODU0NGRjODJhNWJlNWU0NzQyZWY0NDNhMzJjNWViOTY3Yw==", "commit": {"author": {"name": "Dave Brolley", "email": "brolley@cygnus.com", "date": "1999-06-07T11:12:38Z"}, "committer": {"name": "Dave Brolley", "email": "brolley@gcc.gnu.org", "date": "1999-06-07T11:12:38Z"}, "message": "c-lex.c (GETC): Redefine to call getch.\n\nMon Jun  7 14:07:39 1999  Dave Brolley  <brolley@cygnus.com>\n\t* c-lex.c (GETC): Redefine to call getch.\n\t(UNGETC): Redefine to call put_back.\n\t(putback_buffer): New structure type.\n\t(putback): New static structure.\n\t(getch): New function.\n\t(put_back): New function.\n\t(yylex): Replace unused bytes from bad multibyte character.\n\nFrom-SVN: r27393", "tree": {"sha": "aa345c251614d282169a1d808bb8f24771524aa7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa345c251614d282169a1d808bb8f24771524aa7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/505e038544dc82a5be5e4742ef443a32c5eb967c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/505e038544dc82a5be5e4742ef443a32c5eb967c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/505e038544dc82a5be5e4742ef443a32c5eb967c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/505e038544dc82a5be5e4742ef443a32c5eb967c/comments", "author": null, "committer": null, "parents": [{"sha": "cd28936cf092e2d5cc361bb503b5bfb920fbcb5f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd28936cf092e2d5cc361bb503b5bfb920fbcb5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd28936cf092e2d5cc361bb503b5bfb920fbcb5f"}], "stats": {"total": 98, "additions": 77, "deletions": 21}, "files": [{"sha": "431ad8d5d327d89ede865048e9638ada5feaacab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/505e038544dc82a5be5e4742ef443a32c5eb967c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/505e038544dc82a5be5e4742ef443a32c5eb967c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=505e038544dc82a5be5e4742ef443a32c5eb967c", "patch": "@@ -1,3 +1,13 @@\n+Mon Jun  7 14:07:39 1999  Dave Brolley  <brolley@cygnus.com>\n+\n+\t* c-lex.c (GETC): Redefine to call getch.\n+\t(UNGETC): Redefine to call put_back.\n+\t(putback_buffer): New structure type.\n+\t(putback): New static structure.\n+\t(getch): New function.\n+\t(put_back): New function.\n+\t(yylex): Replace unused bytes from bad multibyte character.\n+\n Mon Jun  7 13:33:39 1999  Dave Brolley  <brolley@cygnus.com>\n \n \t* cpplib.c (do_define): Cast `alloca' return value."}, {"sha": "96ca224bf7c21106417a7c2cd478c84abadbe40b", "filename": "gcc/c-lex.c", "status": "modified", "additions": 67, "deletions": 21, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/505e038544dc82a5be5e4742ef443a32c5eb967c/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/505e038544dc82a5be5e4742ef443a32c5eb967c/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=505e038544dc82a5be5e4742ef443a32c5eb967c", "patch": "@@ -71,10 +71,47 @@ extern int yy_get_token ();\n \n #define GETC() (yy_cur < yy_lim ? *yy_cur++ : yy_get_token ())\n #define UNGETC(c) ((c) == EOF ? 0 : yy_cur--)\n-#else\n-#define GETC() getc (finput)\n-#define UNGETC(c) ungetc (c, finput)\n-#endif\n+\n+#else /* ! USE_CPPLIB */\n+\n+#define GETC() getch ()\n+#define UNGETC(c) put_back (c)\n+\n+struct putback_buffer {\n+  char *buffer;\n+  int   buffer_size;\n+  int   index;\n+};\n+\n+static struct putback_buffer putback = {NULL, 0, -1};\n+\n+static inline int\n+getch ()\n+{\n+  if (putback.index != -1)\n+    {\n+      int ch = putback.buffer[putback.index];\n+      --putback.index;\n+      return ch;\n+    }\n+  return getc (finput);\n+}\n+\n+static inline void\n+put_back (ch)\n+     int ch;\n+{\n+  if (ch != EOF)\n+    {\n+      if (putback.index == putback.buffer_size - 1)\n+\t{\n+\t  putback.buffer_size += 16;\n+\t  putback.buffer = xrealloc (putback.buffer, putback.buffer_size);\n+\t}\n+      putback.buffer[++putback.index] = ch;\n+    }\n+}\n+#endif /* ! USE_CPPLIB */\n \n /* the declaration found for the last IDENTIFIER token read in.\n    yylex must look this up to detect typedefs, which get token type TYPENAME,\n@@ -1972,12 +2009,17 @@ yylex ()\n \t\telse\n \t\t  {\n \t\t    if (char_len == -1)\n-\t\t      warning (\"Ignoring invalid multibyte character\");\n-\t\t    if (wide_flag)\n-\t\t      c = wc;\n+\t\t      {\n+\t\t\twarning (\"Ignoring invalid multibyte character\");\n+\t\t\t/* Replace all but the first byte.  */\n+\t\t\tfor (--i; i > 1; --i)\n+\t\t\t  UNGETC (token_buffer[i]);\n+\t\t\twc = token_buffer[1];\n+\t\t      }\n #ifdef MAP_CHARACTER\n-\t\t    else\n-\t\t      c = MAP_CHARACTER (c);\n+\t\t      c = MAP_CHARACTER (wc);\n+#else\n+\t\t      c = wc;\n #endif\n \t\t  }\n #else /* ! MULTIBYTE_CHARS */\n@@ -2095,20 +2137,24 @@ yylex ()\n \t\t    c = GETC ();\n \t\t  }\n \t\tif (char_len == -1)\n-\t\t  warning (\"Ignoring invalid multibyte character\");\n-\t\telse\n \t\t  {\n-\t\t    /* mbtowc sometimes needs an extra char before accepting */\n-\t\t    if (char_len <= i)\n-\t\t      UNGETC (c);\n-\t\t    if (! wide_flag)\n-\t\t      {\n-\t\t\tp += (i + 1);\n-\t\t\tc = GETC ();\n-\t\t\tcontinue;\n-\t\t      }\n-\t\t    c = wc;\n+\t\t    warning (\"Ignoring invalid multibyte character\");\n+\t\t    /* Replace all except the first byte.  */\n+\t\t    UNGETC (c);\n+\t\t    for (--i; i > 0; --i)\n+\t\t      UNGETC (p[i]);\n+\t\t    char_len = 1;\n+\t\t  }\n+\t\t/* mbtowc sometimes needs an extra char before accepting */\n+\t\tif (char_len <= i)\n+\t\t  UNGETC (c);\n+\t\tif (! wide_flag)\n+\t\t  {\n+\t\t    p += (i + 1);\n+\t\t    c = GETC ();\n+\t\t    continue;\n \t\t  }\n+\t\tc = wc;\n #endif /* MULTIBYTE_CHARS */\n \t      }\n "}]}