{"sha": "8d2696f95892c43a2caab289143f81ecb5db8cfa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQyNjk2Zjk1ODkyYzQzYTJjYWFiMjg5MTQzZjgxZWNiNWRiOGNmYQ==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2017-04-08T19:18:42Z"}, "committer": {"name": "Vladimir Makarov", "email": "vmakarov@gcc.gnu.org", "date": "2017-04-08T19:18:42Z"}, "message": "re PR rtl-optimization/70478 ([LRA] S/390: Performance regression - superfluous stack frame)\n\n2017-04-08  Vladimir Makarov  <vmakarov@redhat.com>\n\n\tPR rtl-optimization/70478\n\t* lra-constraints.c: Reverse the last patch.\n\nFrom-SVN: r246789", "tree": {"sha": "3eaf132d5099b6da1b70003599aaa544d1824013", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3eaf132d5099b6da1b70003599aaa544d1824013"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d2696f95892c43a2caab289143f81ecb5db8cfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d2696f95892c43a2caab289143f81ecb5db8cfa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d2696f95892c43a2caab289143f81ecb5db8cfa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d2696f95892c43a2caab289143f81ecb5db8cfa/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8cfd4a906455b29296c85178b1766aba743a9339", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cfd4a906455b29296c85178b1766aba743a9339", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cfd4a906455b29296c85178b1766aba743a9339"}], "stats": {"total": 20, "additions": 5, "deletions": 15}, "files": [{"sha": "be2e4945638cee7c253009480dfad1c661c91f5c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d2696f95892c43a2caab289143f81ecb5db8cfa/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d2696f95892c43a2caab289143f81ecb5db8cfa/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8d2696f95892c43a2caab289143f81ecb5db8cfa", "patch": "@@ -1,3 +1,8 @@\n+2017-04-08  Vladimir Makarov  <vmakarov@redhat.com>\n+\n+\tPR rtl-optimization/70478\n+\t* lra-constraints.c: Reverse the last patch.\n+\n 2017-04-08  Andreas Tobler  <andreast@gcc.gnu.org>\n \n \t* config/aarch64/aarch64-freebsd.h: Define MCOUNT_NAME."}, {"sha": "4d986249a6fa6df1ad497d0830395dc3fed23f92", "filename": "gcc/lra-constraints.c", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d2696f95892c43a2caab289143f81ecb5db8cfa/gcc%2Flra-constraints.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d2696f95892c43a2caab289143f81ecb5db8cfa/gcc%2Flra-constraints.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flra-constraints.c?ref=8d2696f95892c43a2caab289143f81ecb5db8cfa", "patch": "@@ -2685,21 +2685,6 @@ process_alt_operands (int only_alternative)\n \t\t    }\n \t\t}\n \n-\t      /* When we use memory operand, the insn should read the\n-\t\t value from memory and even if we just wrote a value\n-\t\t into the memory it is costly in comparison with an\n-\t\t insn alternative which does not use memory\n-\t\t (e.g. register or immediate operand).  */\n-\t      if (no_regs_p && offmemok)\n-\t\t{\n-\t\t  if (lra_dump_file != NULL)\n-\t\t    fprintf\n-\t\t      (lra_dump_file,\n-\t\t       \"            Using memory insn operand %d: reject+=3\\n\",\n-\t\t       nop);\n-\t\t  reject += 3;\n-\t\t}\n-\t      \n #ifdef SECONDARY_MEMORY_NEEDED\n \t      /* If reload requires moving value through secondary\n \t\t memory, it will need one more insn at least.  */"}]}