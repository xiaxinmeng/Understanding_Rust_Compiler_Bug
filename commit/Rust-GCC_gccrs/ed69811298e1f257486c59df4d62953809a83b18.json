{"sha": "ed69811298e1f257486c59df4d62953809a83b18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ2OTgxMTI5OGUxZjI1NzQ4NmM1OWRmNGQ2Mjk1MzgwOWE4M2IxOA==", "commit": {"author": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-08-03T19:40:56Z"}, "committer": {"name": "Nathanael Nerode", "email": "neroden@gcc.gnu.org", "date": "2004-08-03T19:40:56Z"}, "message": "acinclude.m4: Include no-executables.m4.\n\n\t* acinclude.m4: Include no-executables.m4.\n\t* aclocal.m4: Rebuild.\n\t* configure.in: Convert to the autoconf 2.59 version of\n\tof the no-executables hack, and also of the nonstandard CXX\n\thack and the multilibbed CC and CXX hack.  Change prerequisite\n\tto autoconf 2.59.\n\t* configure: Rebuild with autoconf 2.59.  (Woo-hoo!)\n\t* Makefile.in, gcj/Makefile.in, include/Makefile.in,\n\ttestsuite/Makefile.in: Regenerate.\n\nFrom-SVN: r85495", "tree": {"sha": "26e49635650726c4963f58b4e942f67d87bcfde4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26e49635650726c4963f58b4e942f67d87bcfde4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed69811298e1f257486c59df4d62953809a83b18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed69811298e1f257486c59df4d62953809a83b18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed69811298e1f257486c59df4d62953809a83b18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed69811298e1f257486c59df4d62953809a83b18/comments", "author": null, "committer": null, "parents": [{"sha": "d974312d077aeccd53b6a042d40f6e1789b6efb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d974312d077aeccd53b6a042d40f6e1789b6efb7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d974312d077aeccd53b6a042d40f6e1789b6efb7"}], "stats": {"total": 17280, "additions": 12304, "deletions": 4976}, "files": [{"sha": "e958f0c93c222457eee8e75095efc2f7fe7fabe1", "filename": "libjava/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed69811298e1f257486c59df4d62953809a83b18/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed69811298e1f257486c59df4d62953809a83b18/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=ed69811298e1f257486c59df4d62953809a83b18", "patch": "@@ -1,3 +1,15 @@\n+2004-07-17  Nathanael Nerode  <neroden@gcc.gnu.org>\n+\n+\t* acinclude.m4: Include no-executables.m4.\n+\t* aclocal.m4: Rebuild.\n+\t* configure.in: Convert to the autoconf 2.59 version of\n+\tof the no-executables hack, and also of the nonstandard CXX\n+\thack and the multilibbed CC and CXX hack.  Change prerequisite\n+\tto autoconf 2.59.\n+\t* configure: Rebuild with autoconf 2.59.  (Woo-hoo!)\n+\t* Makefile.in, gcj/Makefile.in, include/Makefile.in,\n+\ttestsuite/Makefile.in: Regenerate.\n+\n 2004-08-03  Tom Tromey  <tromey@redhat.com>\n \n \t* jni.cc: Reindented."}, {"sha": "0352b791d9f33243c10edd95fe621a8b21c57a83", "filename": "libjava/Makefile.in", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed69811298e1f257486c59df4d62953809a83b18/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed69811298e1f257486c59df4d62953809a83b18/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=ed69811298e1f257486c59df4d62953809a83b18", "patch": "@@ -69,11 +69,13 @@ BACKTRACESPEC = @BACKTRACESPEC@\n CAIRO_CFLAGS = @CAIRO_CFLAGS@\n CAIRO_LIBS = @CAIRO_LIBS@\n CC = @CC@\n+CFLAGS = @CFLAGS@\n CHECKREFSPEC = @CHECKREFSPEC@\n COMPPATH = @COMPPATH@\n CPP = @CPP@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n+CXXFLAGS = @CXXFLAGS@\n DIRLTDL = @DIRLTDL@\n DIVIDESPEC = @DIVIDESPEC@\n DLLTOOL = @DLLTOOL@\n@@ -99,6 +101,7 @@ IEEESPEC = @IEEESPEC@\n INCLTDL = @INCLTDL@\n INTERPRETER = @INTERPRETER@\n JC1GCSPEC = @JC1GCSPEC@\n+LDFLAGS = @LDFLAGS@\n LIBART_CFLAGS = @LIBART_CFLAGS@\n LIBART_LIBS = @LIBART_LIBS@\n LIBFFI = @LIBFFI@\n@@ -143,7 +146,6 @@ ZLIBTESTSPEC = @ZLIBTESTSPEC@\n build_subdir = @build_subdir@\n do_compare = @do_compare@\n gcc_version = @gcc_version@\n-glibjava_CXX = @glibjava_CXX@\n here = @here@\n host_subdir = @host_subdir@\n libgcj_basedir = @libgcj_basedir@\n@@ -2805,7 +2807,6 @@ LTLIBRARIES =  $(toolexeclib_LTLIBRARIES)\n \n DEFS = @DEFS@ -I. -I$(srcdir) -I./include -I./gcj\n CPPFLAGS = @CPPFLAGS@\n-LDFLAGS = @LDFLAGS@\n LIBS = @LIBS@\n X_CFLAGS = @X_CFLAGS@\n X_LIBS = @X_LIBS@\n@@ -3074,11 +3075,9 @@ gen_from_JIS_OBJECTS =\n gen_from_JIS_LDFLAGS = \n SCRIPTS =  $(bin_SCRIPTS)\n \n-CXXFLAGS = @CXXFLAGS@\n CXXCOMPILE = $(CXX) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)\n CXXLD = $(CXX)\n CXXLINK = $(LIBTOOL) --mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(LDFLAGS) -o $@\n-CFLAGS = @CFLAGS@\n COMPILE = $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n CCLD = $(CC)"}, {"sha": "adaaa709ad881da82bea39838507b19cfed4710b", "filename": "libjava/acinclude.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed69811298e1f257486c59df4d62953809a83b18/libjava%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed69811298e1f257486c59df4d62953809a83b18/libjava%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Facinclude.m4?ref=ed69811298e1f257486c59df4d62953809a83b18", "patch": "@@ -1,5 +1,6 @@\n sinclude(../config/accross.m4)\n sinclude(../config/acx.m4)\n+sinclude(../config/no-executables.m4)\n \n sinclude(../libtool.m4)\n dnl The lines below arrange for aclocal not to bring libtool.m4"}, {"sha": "ab373cf8c74e7511a70500f12f9646ea492ee0d0", "filename": "libjava/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed69811298e1f257486c59df4d62953809a83b18/libjava%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed69811298e1f257486c59df4d62953809a83b18/libjava%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Faclocal.m4?ref=ed69811298e1f257486c59df4d62953809a83b18", "patch": "@@ -12,6 +12,7 @@ dnl PARTICULAR PURPOSE.\n \n sinclude(../config/accross.m4)\n sinclude(../config/acx.m4)\n+sinclude(../config/no-executables.m4)\n \n sinclude(../libtool.m4)\n dnl The lines below arrange for aclocal not to bring libtool.m4"}, {"sha": "6ef7952335fd133d43054f7b3be2d040f7e17889", "filename": "libjava/configure", "status": "modified", "additions": 12253, "deletions": 4918, "changes": 17171, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed69811298e1f257486c59df4d62953809a83b18/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed69811298e1f257486c59df4d62953809a83b18/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=ed69811298e1f257486c59df4d62953809a83b18"}, {"sha": "38ccec5ac0e5af69c14163fa94f771b838dbdd31", "filename": "libjava/configure.in", "status": "modified", "additions": 25, "deletions": 51, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed69811298e1f257486c59df4d62953809a83b18/libjava%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed69811298e1f257486c59df4d62953809a83b18/libjava%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.in?ref=ed69811298e1f257486c59df4d62953809a83b18", "patch": "@@ -1,5 +1,5 @@\n dnl Process this with autoconf to create configure\n-AC_PREREQ(2.13)\n+AC_PREREQ(2.59)\n AC_INIT(java/lang/System.java)\n \n dnl We use these options to decide which functions to include.\n@@ -84,57 +84,31 @@ AC_ARG_ENABLE(multilib,\n   *)   AC_MSG_ERROR(bad value ${enableval} for multilib option) ;;\n  esac], [multilib=yes])dnl\n \n-dnl This shouldn't be needed, as long as top-level dependencies are\n-dnl defined correctly and shared-library paths are set up so that\n-dnl execution tests succeed.  FIXME.\n-define([AC_PROG_CC_WORKS],[])\n-define([AC_PROG_CXX_WORKS],[])\n-\n+dnl # It may not be safe to run linking tests in AC_PROG_CC/AC_PROG_CXX.\n+GCC_NO_EXECUTABLES\n+\n+# (1) We use an abnormal CXX (without library references), so we\n+# must cache it under a different name.\n+# (2) CC, CFLAGS, CXX, CXXFLAGS, LDFLAGS must not be 'precious', or\n+# the non-multilib-adjusted value will be used in multilibs.\n+# (3) As a side effect, we must SUBST CXXFLAGS, CFLAGS, and LDFLAGS ourselves.\n+# (4) As another side effect, automake doesn't automatically include them\n+# in Makefile.in.\n+# (5) For libstdc++-v3, -fno-builtin must be present here so that a\n+# non-conflicting form of std::exit can be guessed by AC_PROG_CXX, and\n+# used in later tests.  This may not be necessary in libjava; I don't know.\n+m4_define([ac_cv_prog_CXX],[glibcxx_cv_prog_CXX])\n+m4_rename([_AC_ARG_VAR_PRECIOUS],[glibcxx_PRECIOUS])\n+m4_define([_AC_ARG_VAR_PRECIOUS],[])\n+save_CXXFLAGS=\"$CXXFLAGS\"\n+CXXFLAGS=\"$CXXFLAGS -fno-builtin\"\n AC_PROG_CC\n-\n-# We use the libstdc++-v3 version of LIB_AC_PROG_CXX, but use\n-# glibjava_CXX instead of glibcpp_CXX.  That's because we're passed a\n-# different definition of CXX than other directories, since we don't\n-# depend on libstdc++-v3 having already been built.\n-AC_DEFUN(LIB_AC_PROG_CXX,\n-[AC_BEFORE([$0], [AC_PROG_CXXCPP])dnl\n-dnl Fool anybody using AC_PROG_CXX.\n-AC_PROVIDE([AC_PROG_CXX])\n-# Use glibjava_CXX so that we do not cause CXX to be cached with the\n-# flags that come in CXX while configuring libjava.  They're different\n-# from those used for all other target libraries.  If CXX is set in\n-# the environment, respect that here.\n-glibjava_CXX=$CXX\n-AC_CHECK_PROGS(glibjava_CXX, $CCC c++ g++ gcc CC cxx cc++, gcc)\n-AC_SUBST(CXX)\n-CXX=$glibjava_CXX\n-test -z \"$glibjava_CXX\" && AC_MSG_ERROR([no acceptable c++ found in \\$PATH])\n-\n-AC_PROG_CXX_GNU\n-\n-if test $ac_cv_prog_gxx = yes; then\n-  GXX=yes\n-dnl Check whether -g works, even if CXXFLAGS is set, in case the package\n-dnl plays around with CXXFLAGS (such as to build both debugging and\n-dnl normal versions of a library), tasteless as that idea is.\n-  ac_test_CXXFLAGS=\"${CXXFLAGS+set}\"\n-  ac_save_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\n-  AC_PROG_CXX_G\n-  if test \"$ac_test_CXXFLAGS\" = set; then\n-    CXXFLAGS=\"$ac_save_CXXFLAGS\"\n-  elif test $ac_cv_prog_cxx_g = yes; then\n-    CXXFLAGS=\"-g -O2\"\n-  else\n-    CXXFLAGS=\"-O2\"\n-  fi\n-else\n-  GXX=\n-  test \"${CXXFLAGS+set}\" = set || CXXFLAGS=\"-g\"\n-fi\n-])\n-\n-LIB_AC_PROG_CXX\n+AC_PROG_CXX\n+CXXFLAGS=\"$save_CXXFLAGS\"\n+m4_rename([glibcxx_PRECIOUS],[_AC_ARG_VAR_PRECIOUS])\n+AC_SUBST(CFLAGS)\n+AC_SUBST(CXXFLAGS)\n+AC_SUBST(LDFLAGS)\n \n dnl version is pulled out to make it a bit easier to change using sed.\n version=0.0.7"}, {"sha": "e6927beb95d0cb15672679769c9db251c39c707b", "filename": "libjava/gcj/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed69811298e1f257486c59df4d62953809a83b18/libjava%2Fgcj%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed69811298e1f257486c59df4d62953809a83b18/libjava%2Fgcj%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2FMakefile.in?ref=ed69811298e1f257486c59df4d62953809a83b18", "patch": "@@ -69,11 +69,13 @@ BACKTRACESPEC = @BACKTRACESPEC@\n CAIRO_CFLAGS = @CAIRO_CFLAGS@\n CAIRO_LIBS = @CAIRO_LIBS@\n CC = @CC@\n+CFLAGS = @CFLAGS@\n CHECKREFSPEC = @CHECKREFSPEC@\n COMPPATH = @COMPPATH@\n CPP = @CPP@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n+CXXFLAGS = @CXXFLAGS@\n DIRLTDL = @DIRLTDL@\n DIVIDESPEC = @DIVIDESPEC@\n DLLTOOL = @DLLTOOL@\n@@ -101,6 +103,7 @@ IEEESPEC = @IEEESPEC@\n INCLTDL = @INCLTDL@\n INTERPRETER = @INTERPRETER@\n JC1GCSPEC = @JC1GCSPEC@\n+LDFLAGS = @LDFLAGS@\n LIBART_CFLAGS = @LIBART_CFLAGS@\n LIBART_LIBS = @LIBART_LIBS@\n LIBFFI = @LIBFFI@\n@@ -147,7 +150,6 @@ ZLIBTESTSPEC = @ZLIBTESTSPEC@\n build_subdir = @build_subdir@\n do_compare = @do_compare@\n gcc_version = @gcc_version@\n-glibjava_CXX = @glibjava_CXX@\n here = @here@\n host_subdir = @host_subdir@\n libgcj_basedir = @libgcj_basedir@"}, {"sha": "6c5976dd76bd6a448c9c111b90bdd2750dda4c98", "filename": "libjava/include/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed69811298e1f257486c59df4d62953809a83b18/libjava%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed69811298e1f257486c59df4d62953809a83b18/libjava%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2FMakefile.in?ref=ed69811298e1f257486c59df4d62953809a83b18", "patch": "@@ -69,11 +69,13 @@ BACKTRACESPEC = @BACKTRACESPEC@\n CAIRO_CFLAGS = @CAIRO_CFLAGS@\n CAIRO_LIBS = @CAIRO_LIBS@\n CC = @CC@\n+CFLAGS = @CFLAGS@\n CHECKREFSPEC = @CHECKREFSPEC@\n COMPPATH = @COMPPATH@\n CPP = @CPP@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n+CXXFLAGS = @CXXFLAGS@\n DIRLTDL = @DIRLTDL@\n DIVIDESPEC = @DIVIDESPEC@\n DLLTOOL = @DLLTOOL@\n@@ -101,6 +103,7 @@ IEEESPEC = @IEEESPEC@\n INCLTDL = @INCLTDL@\n INTERPRETER = @INTERPRETER@\n JC1GCSPEC = @JC1GCSPEC@\n+LDFLAGS = @LDFLAGS@\n LIBART_CFLAGS = @LIBART_CFLAGS@\n LIBART_LIBS = @LIBART_LIBS@\n LIBFFI = @LIBFFI@\n@@ -147,7 +150,6 @@ ZLIBTESTSPEC = @ZLIBTESTSPEC@\n build_subdir = @build_subdir@\n do_compare = @do_compare@\n gcc_version = @gcc_version@\n-glibjava_CXX = @glibjava_CXX@\n here = @here@\n host_subdir = @host_subdir@\n libgcj_basedir = @libgcj_basedir@"}, {"sha": "0b450dfaf463d84247ad40363e419e0a0eeefcc3", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed69811298e1f257486c59df4d62953809a83b18/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed69811298e1f257486c59df4d62953809a83b18/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=ed69811298e1f257486c59df4d62953809a83b18", "patch": "@@ -69,11 +69,13 @@ BACKTRACESPEC = @BACKTRACESPEC@\n CAIRO_CFLAGS = @CAIRO_CFLAGS@\n CAIRO_LIBS = @CAIRO_LIBS@\n CC = @CC@\n+CFLAGS = @CFLAGS@\n CHECKREFSPEC = @CHECKREFSPEC@\n COMPPATH = @COMPPATH@\n CPP = @CPP@\n CXX = @CXX@\n CXXCPP = @CXXCPP@\n+CXXFLAGS = @CXXFLAGS@\n DIRLTDL = @DIRLTDL@\n DIVIDESPEC = @DIVIDESPEC@\n DLLTOOL = @DLLTOOL@\n@@ -101,6 +103,7 @@ IEEESPEC = @IEEESPEC@\n INCLTDL = @INCLTDL@\n INTERPRETER = @INTERPRETER@\n JC1GCSPEC = @JC1GCSPEC@\n+LDFLAGS = @LDFLAGS@\n LIBART_CFLAGS = @LIBART_CFLAGS@\n LIBART_LIBS = @LIBART_LIBS@\n LIBFFI = @LIBFFI@\n@@ -147,7 +150,6 @@ ZLIBTESTSPEC = @ZLIBTESTSPEC@\n build_subdir = @build_subdir@\n do_compare = @do_compare@\n gcc_version = @gcc_version@\n-glibjava_CXX = @glibjava_CXX@\n here = @here@\n host_subdir = @host_subdir@\n libgcj_basedir = @libgcj_basedir@"}]}