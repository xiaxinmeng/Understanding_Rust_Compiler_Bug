{"sha": "3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E1NzI5ZWEyYTg0NDFmZTJmOWU1ODNmYjJhZTI4YjU2ZGYyZTI0Yw==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "2009-12-06T16:11:06Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "2009-12-06T16:11:06Z"}, "message": "re PR middle-end/30447 (Evaluate complex math functions at compile-time)\n\n\tPR middle-end/30447\n\tPR middle-end/30789\n\tPR other/40302\n\n\t* configure.ac: Require MPC.\n\t* configure: Regenerate.\ngcc:\n\t* doc/install.texi: Document MPC is required.\n\nFrom-SVN: r155023", "tree": {"sha": "a04b6f17ad0c012c98a09d540227bd781ca58190", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a04b6f17ad0c012c98a09d540227bd781ca58190"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c/comments", "author": null, "committer": null, "parents": [{"sha": "2ef0f9c6ebaa083a936c6cfa6c90295a8c4b89b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ef0f9c6ebaa083a936c6cfa6c90295a8c4b89b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ef0f9c6ebaa083a936c6cfa6c90295a8c4b89b6"}], "stats": {"total": 249, "additions": 89, "deletions": 160}, "files": [{"sha": "6989afa85ac5a259ca82b42463f8a0266b240020", "filename": "ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c", "patch": "@@ -1,3 +1,12 @@\n+2009-12-06  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\tPR middle-end/30447\n+\tPR middle-end/30789\n+\tPR other/40302\n+\n+\t* configure.ac: Require MPC.\n+\t* configure: Regenerate.\n+\n 2009-12-05  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \tPR target/38384"}, {"sha": "022368379820129b0f2c914d0007568a6f21b992", "filename": "configure", "status": "modified", "additions": 34, "deletions": 84, "changes": 118, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c", "patch": "@@ -5285,12 +5285,9 @@ fi\n \n \n # Check for GMP, MPFR and MPC\n-gmplibs=\"-lmpfr -lgmp\"\n+gmplibs=\"-lmpc -lmpfr -lgmp\"\n gmpinc=\n have_gmp=no\n-mpclibs=-lmpc\n-mpcinc=\n-have_mpc=no\n \n # Specify a location for mpc\n # check for this first so it ends up on the link line before mpfr.\n@@ -5314,23 +5311,23 @@ fi\n \n \n if test \"x$with_mpc\" != x; then\n-  mpclibs=\"-L$with_mpc/lib -lmpc\"\n-  mpcinc=\"-I$with_mpc/include $mpcinc\"\n+  gmplibs=\"-L$with_mpc/lib $gmplibs\"\n+  gmpinc=\"-I$with_mpc/include $gmpinc\"\n fi\n if test \"x$with_mpc_include\" != x; then\n-  mpcinc=\"-I$with_mpc_include $mpcinc\"\n+  gmpinc=\"-I$with_mpc_include $gmpinc\"\n fi\n if test \"x$with_mpc_lib\" != x; then\n-  mpclibs=\"-L$with_mpc_lib -lmpc\"\n+  gmplibs=\"-L$with_mpc_lib $gmplibs\"\n fi\n if test \"x$with_mpc$with_mpc_include$with_mpc_lib\" = x && test -d ${srcdir}/mpc; then\n-  mpclibs='-L$$r/$(HOST_SUBDIR)/mpc/src/.libs -L$$r/$(HOST_SUBDIR)/mpc/src/_libs -lmpc'\n-  mpcinc='-I$$s/mpc/src '\"$mpcinc\"\n+  gmplibs='-L$$r/$(HOST_SUBDIR)/mpc/src/.libs -L$$r/$(HOST_SUBDIR)/mpc/src/_libs '\"$gmplibs\"\n+  gmpinc='-I$$s/mpc/src '\"$gmpinc\"\n   # Do not test the mpc version.  Assume that it is sufficient, since\n   # it is in the source tree, and the library has not been built yet\n   # but it would be included on the link line in the version check below\n   # hence making the test fail.\n-  have_mpc=yes\n+  have_gmp=yes\n fi\n \n # Specify a location for mpfr\n@@ -5364,10 +5361,10 @@ fi\n \n if test \"x$with_mpfr\" != x; then\n   gmplibs=\"-L$with_mpfr/lib $gmplibs\"\n-  gmpinc=\"-I$with_mpfr/include\"\n+  gmpinc=\"-I$with_mpfr/include $gmpinc\"\n fi\n if test \"x$with_mpfr_include\" != x; then\n-  gmpinc=\"-I$with_mpfr_include\"\n+  gmpinc=\"-I$with_mpfr_include $gmpinc\"\n fi\n if test \"x$with_mpfr_lib\" != x; then\n   gmplibs=\"-L$with_mpfr_lib $gmplibs\"\n@@ -5519,8 +5516,7 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   fi\n \n   # Check for the MPC header version.\n-  if test x\"$have_mpc\" != xyes ; then\n-    CFLAGS=\"$CFLAGS $mpcinc\"\n+  if test x\"$have_gmp\" = xyes ; then\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of mpc.h\" >&5\n $as_echo_n \"checking for the correct version of mpc.h... \" >&6; }\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n@@ -5540,10 +5536,10 @@ main ()\n _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n-$as_echo \"yes\" >&6; }; have_mpc=maybe\n+$as_echo \"yes\" >&6; }\n else\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }; have_mpc=no; mpclibs= ; mpcinc=\n+$as_echo \"no\" >&6; }; have_gmp=no\n fi\n rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   fi\n@@ -5552,24 +5548,32 @@ rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   if test x\"$have_gmp\" = xyes; then\n     saved_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $gmplibs\"\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of the gmp/mpfr libraries\" >&5\n-$as_echo_n \"checking for the correct version of the gmp/mpfr libraries... \" >&6; }\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of the gmp/mpfr/mpc libraries\" >&5\n+$as_echo_n \"checking for the correct version of the gmp/mpfr/mpc libraries... \" >&6; }\n     cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n-#include <gmp.h>\n-    #include <mpfr.h>\n+#include <mpc.h>\n int\n main ()\n {\n \n     mpfr_t n;\n     mpfr_t x;\n+    mpc_t c;\n     int t;\n     mpfr_init (n);\n     mpfr_init (x);\n     mpfr_atan2 (n, n, x, GMP_RNDN);\n     mpfr_erfc (n, x, GMP_RNDN);\n     mpfr_subnormalize (x, t, GMP_RNDN);\n+    mpfr_clear(n);\n+    mpfr_clear(x);\n+    mpc_init2 (c, 53);\n+    mpc_set_ui_ui (c, 1, 1, MPC_RNDNN);\n+    mpc_cosh (c, c, MPC_RNDNN);\n+    mpc_pow (c, c, c, MPC_RNDNN);\n+    mpc_acosh (c, c, MPC_RNDNN);\n+    mpc_clear (c);\n \n   ;\n   return 0;\n@@ -5587,75 +5591,21 @@ rm -f core conftest.err conftest.$ac_objext \\\n     LIBS=\"$saved_LIBS\"\n   fi\n \n-  if test x\"$have_mpc\" = xmaybe; then\n-    saved_LIBS=\"$LIBS\"\n-    LIBS=\"$LIBS $mpclibs $gmplibs\"\n-    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for the correct version of the mpc library\" >&5\n-$as_echo_n \"checking for the correct version of the mpc library... \" >&6; }\n-    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-#include <mpc.h>\n-int\n-main ()\n-{\n-\n-    mpc_t n;\n-    mpc_init2 (n, 53);\n-    mpc_set_ui_ui (n, 1, 1, MPC_RNDNN);\n-    mpc_sin (n, n, MPC_RNDNN);\n-    mpc_cos (n, n, MPC_RNDNN);\n-    mpc_tan (n, n, MPC_RNDNN);\n-    mpc_sinh (n, n, MPC_RNDNN);\n-    mpc_cosh (n, n, MPC_RNDNN);\n-    mpc_tanh (n, n, MPC_RNDNN);\n-    mpc_exp (n, n, MPC_RNDNN);\n-    mpc_log (n, n, MPC_RNDNN);\n-    mpc_sqrt (n, n, MPC_RNDNN);\n-    mpc_proj (n, n, MPC_RNDNN);\n-    mpc_neg (n, n, MPC_RNDNN);\n-    mpc_sqr (n, n, MPC_RNDNN);\n-    mpc_pow (n, n, n, MPC_RNDNN);\n-    mpc_acosh (n, n, MPC_RNDNN);\n-    mpc_clear (n);\n-\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-if ac_fn_c_try_link \"$LINENO\"; then :\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n-$as_echo \"yes\" >&6; }; have_mpc=yes\n-else\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }; have_mpc=no; mpclibs= ; mpcinc=\n-fi\n-rm -f core conftest.err conftest.$ac_objext \\\n-    conftest$ac_exeext conftest.$ac_ext\n-    LIBS=\"$saved_LIBS\"\n-  fi\n-\n   CFLAGS=\"$saved_CFLAGS\"\n \n   if test x$have_gmp != xyes; then\n-    as_fn_error \"Building GCC requires GMP 4.2+ and MPFR 2.3.2+.\n-Try the --with-gmp and/or --with-mpfr options to specify their locations.\n-Copies of these libraries' source code can be found at their respective\n-hosting sites as well as at ftp://gcc.gnu.org/pub/gcc/infrastructure/.\n-See also http://gcc.gnu.org/install/prerequisites.html for additional info.\n-If you obtained GMP and/or MPFR from a vendor distribution package, make\n-sure that you have installed both the libraries and the header files.\n-They may be located in separate packages.\" \"$LINENO\" 5\n+    as_fn_error \"Building GCC requires GMP 4.2+, MPFR 2.3.2+ and MPC 0.8.0+.\n+Try the --with-gmp, --with-mpfr and/or --with-mpc options to specify\n+their locations.  Source code for these libraries can be found at\n+their respective hosting sites as well as at\n+ftp://gcc.gnu.org/pub/gcc/infrastructure/.  See also\n+http://gcc.gnu.org/install/prerequisites.html for additional info.  If\n+you obtained GMP, MPFR and/or MPC from a vendor distribution package,\n+make sure that you have installed both the libraries and the header\n+files.  They may be located in separate packages.\" \"$LINENO\" 5\n   fi\n fi\n \n-if test x$have_mpc != xyes ; then\n-  mpcinc=\n-  mpclibs=\n-fi\n-\n-gmpinc=\"$mpcinc $gmpinc\"\n-gmplibs=\"$mpclibs $gmplibs\"\n-\n # Flags needed for both GMP, MPFR and/or MPC.\n \n "}, {"sha": "dbc1565ec2a6b30d532f6c2a828f1537ecce0334", "filename": "configure.ac", "status": "modified", "additions": 32, "deletions": 64, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c", "patch": "@@ -1228,12 +1228,9 @@ ENABLE_BUILD_WITH_CXX=$enableval,\n ENABLE_BUILD_WITH_CXX=no)\n \n # Check for GMP, MPFR and MPC\n-gmplibs=\"-lmpfr -lgmp\"\n+gmplibs=\"-lmpc -lmpfr -lgmp\"\n gmpinc=\n have_gmp=no\n-mpclibs=-lmpc\n-mpcinc=\n-have_mpc=no\n \n # Specify a location for mpc\n # check for this first so it ends up on the link line before mpfr.\n@@ -1245,23 +1242,23 @@ AC_ARG_WITH(mpc_include, [  --with-mpc-include=PATH\n AC_ARG_WITH(mpc_lib, [  --with-mpc-lib=PATH    specify directory for the installed MPC library])\n \n if test \"x$with_mpc\" != x; then\n-  mpclibs=\"-L$with_mpc/lib -lmpc\"\n-  mpcinc=\"-I$with_mpc/include $mpcinc\"\n+  gmplibs=\"-L$with_mpc/lib $gmplibs\"\n+  gmpinc=\"-I$with_mpc/include $gmpinc\"\n fi\n if test \"x$with_mpc_include\" != x; then\n-  mpcinc=\"-I$with_mpc_include $mpcinc\"\n+  gmpinc=\"-I$with_mpc_include $gmpinc\"\n fi\n if test \"x$with_mpc_lib\" != x; then\n-  mpclibs=\"-L$with_mpc_lib -lmpc\"\n+  gmplibs=\"-L$with_mpc_lib $gmplibs\"\n fi\n if test \"x$with_mpc$with_mpc_include$with_mpc_lib\" = x && test -d ${srcdir}/mpc; then\n-  mpclibs='-L$$r/$(HOST_SUBDIR)/mpc/src/.libs -L$$r/$(HOST_SUBDIR)/mpc/src/_libs -lmpc'\n-  mpcinc='-I$$s/mpc/src '\"$mpcinc\"\n+  gmplibs='-L$$r/$(HOST_SUBDIR)/mpc/src/.libs -L$$r/$(HOST_SUBDIR)/mpc/src/_libs '\"$gmplibs\"\n+  gmpinc='-I$$s/mpc/src '\"$gmpinc\"\n   # Do not test the mpc version.  Assume that it is sufficient, since\n   # it is in the source tree, and the library has not been built yet\n   # but it would be included on the link line in the version check below\n   # hence making the test fail.\n-  have_mpc=yes\n+  have_gmp=yes\n fi\n \n # Specify a location for mpfr\n@@ -1279,10 +1276,10 @@ AC_ARG_WITH(mpfr_lib, [  --with-mpfr-lib=PATH    specify directory for the insta\n \n if test \"x$with_mpfr\" != x; then\n   gmplibs=\"-L$with_mpfr/lib $gmplibs\"\n-  gmpinc=\"-I$with_mpfr/include\"\n+  gmpinc=\"-I$with_mpfr/include $gmpinc\"\n fi\n if test \"x$with_mpfr_include\" != x; then\n-  gmpinc=\"-I$with_mpfr_include\"\n+  gmpinc=\"-I$with_mpfr_include $gmpinc\"\n fi\n if test \"x$with_mpfr_lib\" != x; then\n   gmplibs=\"-L$with_mpfr_lib $gmplibs\"\n@@ -1363,86 +1360,57 @@ if test -d ${srcdir}/gcc && test \"x$have_gmp\" = xno; then\n   fi\n \n   # Check for the MPC header version.\n-  if test x\"$have_mpc\" != xyes ; then\n-    CFLAGS=\"$CFLAGS $mpcinc\"\n+  if test x\"$have_gmp\" = xyes ; then\n     AC_MSG_CHECKING([for the correct version of mpc.h])\n     AC_TRY_COMPILE([#include <mpc.h>],[\n     #if MPC_VERSION < MPC_VERSION_NUM (0,8,0)\n     choke me\n     #endif\n-    ], [AC_MSG_RESULT([yes]); have_mpc=maybe],\n-       [AC_MSG_RESULT([no]); have_mpc=no; mpclibs= ; mpcinc= ])\n+    ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no]); have_gmp=no])\n   fi\n \n   # Now check the MPFR library.\n   if test x\"$have_gmp\" = xyes; then\n     saved_LIBS=\"$LIBS\"\n     LIBS=\"$LIBS $gmplibs\"\n-    AC_MSG_CHECKING([for the correct version of the gmp/mpfr libraries])\n-    AC_TRY_LINK([#include <gmp.h>\n-    #include <mpfr.h>],[\n+    AC_MSG_CHECKING([for the correct version of the gmp/mpfr/mpc libraries])\n+    AC_TRY_LINK([#include <mpc.h>],[\n     mpfr_t n;\n     mpfr_t x;\n+    mpc_t c;\n     int t;\n     mpfr_init (n);\n     mpfr_init (x);\n     mpfr_atan2 (n, n, x, GMP_RNDN);\n     mpfr_erfc (n, x, GMP_RNDN);\n     mpfr_subnormalize (x, t, GMP_RNDN);\n+    mpfr_clear(n);\n+    mpfr_clear(x);\n+    mpc_init2 (c, 53);\n+    mpc_set_ui_ui (c, 1, 1, MPC_RNDNN);\n+    mpc_cosh (c, c, MPC_RNDNN);\n+    mpc_pow (c, c, c, MPC_RNDNN);\n+    mpc_acosh (c, c, MPC_RNDNN);\n+    mpc_clear (c);\n     ], [AC_MSG_RESULT([yes])], [AC_MSG_RESULT([no]); have_gmp=no])\n     LIBS=\"$saved_LIBS\"\n   fi\n \n-  if test x\"$have_mpc\" = xmaybe; then\n-    saved_LIBS=\"$LIBS\"\n-    LIBS=\"$LIBS $mpclibs $gmplibs\"\n-    AC_MSG_CHECKING([for the correct version of the mpc library])\n-    AC_TRY_LINK([#include <mpc.h>],[\n-    mpc_t n;\n-    mpc_init2 (n, 53);\n-    mpc_set_ui_ui (n, 1, 1, MPC_RNDNN);\n-    mpc_sin (n, n, MPC_RNDNN);\n-    mpc_cos (n, n, MPC_RNDNN);\n-    mpc_tan (n, n, MPC_RNDNN);\n-    mpc_sinh (n, n, MPC_RNDNN);\n-    mpc_cosh (n, n, MPC_RNDNN);\n-    mpc_tanh (n, n, MPC_RNDNN);\n-    mpc_exp (n, n, MPC_RNDNN);\n-    mpc_log (n, n, MPC_RNDNN);\n-    mpc_sqrt (n, n, MPC_RNDNN);\n-    mpc_proj (n, n, MPC_RNDNN);\n-    mpc_neg (n, n, MPC_RNDNN);\n-    mpc_sqr (n, n, MPC_RNDNN);\n-    mpc_pow (n, n, n, MPC_RNDNN);\n-    mpc_acosh (n, n, MPC_RNDNN);\n-    mpc_clear (n);\n-    ], [AC_MSG_RESULT([yes]); have_mpc=yes],\n-       [AC_MSG_RESULT([no]); have_mpc=no; mpclibs= ; mpcinc= ])\n-    LIBS=\"$saved_LIBS\"\n-  fi\n-\n   CFLAGS=\"$saved_CFLAGS\"\n \n   if test x$have_gmp != xyes; then\n-    AC_MSG_ERROR([Building GCC requires GMP 4.2+ and MPFR 2.3.2+.\n-Try the --with-gmp and/or --with-mpfr options to specify their locations.\n-Copies of these libraries' source code can be found at their respective\n-hosting sites as well as at ftp://gcc.gnu.org/pub/gcc/infrastructure/.\n-See also http://gcc.gnu.org/install/prerequisites.html for additional info.\n-If you obtained GMP and/or MPFR from a vendor distribution package, make\n-sure that you have installed both the libraries and the header files.\n-They may be located in separate packages.])\n+    AC_MSG_ERROR([Building GCC requires GMP 4.2+, MPFR 2.3.2+ and MPC 0.8.0+.\n+Try the --with-gmp, --with-mpfr and/or --with-mpc options to specify\n+their locations.  Source code for these libraries can be found at\n+their respective hosting sites as well as at\n+ftp://gcc.gnu.org/pub/gcc/infrastructure/.  See also\n+http://gcc.gnu.org/install/prerequisites.html for additional info.  If\n+you obtained GMP, MPFR and/or MPC from a vendor distribution package,\n+make sure that you have installed both the libraries and the header\n+files.  They may be located in separate packages.])\n   fi\n fi\n \n-if test x$have_mpc != xyes ; then\n-  mpcinc=\n-  mpclibs=\n-fi\n-\n-gmpinc=\"$mpcinc $gmpinc\"\n-gmplibs=\"$mpclibs $gmplibs\"\n-\n # Flags needed for both GMP, MPFR and/or MPC.\n AC_SUBST(gmplibs)\n AC_SUBST(gmpinc)"}, {"sha": "f172477c672efb1b09124a53d7e688c1b6a6cadc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c", "patch": "@@ -1,3 +1,7 @@\n+2009-12-06  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* doc/install.texi: Document MPC is required.\n+\n 2009-12-06  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386-md (g): Add HImode and QImode."}, {"sha": "977aa80fe4d8bf8db6a65a809a8815c76f28d73d", "filename": "gcc/doc/install.texi", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c/gcc%2Fdoc%2Finstall.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c/gcc%2Fdoc%2Finstall.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finstall.texi?ref=3a5729ea2a8441fe2f9e583fb2ae28b56df2e24c", "patch": "@@ -321,6 +321,16 @@ default library search path.  See also @option{--with-mpfr-lib} and\n distribution is found in a subdirectory of your GCC sources named\n @file{mpfr}, it will be built together with GCC@.\n \n+@item MPC Library version 0.8.0 (or later)\n+\n+Necessary to build GCC@.  It can be downloaded from\n+@uref{http://www.multiprecision.org/}.  The @option{--with-mpc}\n+configure option should be used if your MPC Library is not installed\n+in your default library search path.  See also @option{--with-mpc-lib}\n+and @option{--with-mpc-include}.  Alternatively, if an MPC source\n+distribution is found in a subdirectory of your GCC sources named\n+@file{mpc}, it will be built together with GCC@.\n+\n @item Parma Polyhedra Library (PPL) version 0.10\n \n Necessary to build GCC with the Graphite loop optimizations.\n@@ -344,18 +354,6 @@ not installed in your default library search path.\n \n Necessary to build libgcj, the GCJ runtime.\n \n-@item MPC Library version 0.8.0 (or later)\n-\n-Optional when building GCC@.  Having this library will enable\n-additional optimizations on complex numbers.  It can be downloaded\n-from @uref{http://www.multiprecision.org/mpc/}.  The\n-@option{--with-mpc} configure option should be used if your MPC\n-Library is not installed in your default library search path.  See\n-also @option{--with-mpc-lib} and @option{--with-mpc-include}.\n-Alternatively, if an MPC source distribution is found in a\n-subdirectory of your GCC sources named @file{mpc}, it will be built\n-together with GCC@.\n-\n @item libelf version 0.8.12 (or later)\n \n Necessary to build link-time optimization (LTO) support.  It can be"}]}