{"sha": "980e0aa0ce3bdfec61ca766a71a31a89c12f882e", "node_id": "C_kwDOANBUbNoAKDk4MGUwYWEwY2UzYmRmZWM2MWNhNzY2YTcxYTMxYTg5YzEyZjg4MmU", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-08-25T15:11:04Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2022-08-25T15:11:04Z"}, "message": "libstdc++: Some minor <ranges> cleanups\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/std/ranges (lazy_split_view::_OuterIter::_M_current):\n\tRemove redundant comment.\n\t(lazy_split_view::_M_current): Likewise.\n\t(common_view::common_view): Remove commented out view-converting\n\tconstructor as per LWG3405.\n\t(elements_view::_Iterator::_Iterator): Uglify 'current' and 'i'.", "tree": {"sha": "f6d75c8f79fa55cd661d9a2a7d06be76e8425a60", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6d75c8f79fa55cd661d9a2a7d06be76e8425a60"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/980e0aa0ce3bdfec61ca766a71a31a89c12f882e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/980e0aa0ce3bdfec61ca766a71a31a89c12f882e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/980e0aa0ce3bdfec61ca766a71a31a89c12f882e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/980e0aa0ce3bdfec61ca766a71a31a89c12f882e/comments", "author": null, "committer": null, "parents": [{"sha": "585a21bab3ec688c2039bff2922cc372d8558283", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/585a21bab3ec688c2039bff2922cc372d8558283", "html_url": "https://github.com/Rust-GCC/gccrs/commit/585a21bab3ec688c2039bff2922cc372d8558283"}], "stats": {"total": 20, "additions": 4, "deletions": 16}, "files": [{"sha": "fb815c48f993c02d54e4c3716e1bfb9621db08b0", "filename": "libstdc++-v3/include/std/ranges", "status": "modified", "additions": 4, "deletions": 16, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/980e0aa0ce3bdfec61ca766a71a31a89c12f882e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/980e0aa0ce3bdfec61ca766a71a31a89c12f882e/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Franges?ref=980e0aa0ce3bdfec61ca766a71a31a89c12f882e", "patch": "@@ -3116,7 +3116,6 @@ namespace views::__adaptor\n \n \t  _Parent* _M_parent = nullptr;\n \n-\t  // XXX: _M_current is present only if \"V models forward_range\"\n \t  [[no_unique_address]]\n \t    __detail::__maybe_present_t<forward_range<_Vp>,\n \t\t\t\t\titerator_t<_Base>> _M_current;\n@@ -3370,7 +3369,6 @@ namespace views::__adaptor\n \n       _Vp _M_base = _Vp();\n       _Pattern _M_pattern = _Pattern();\n-      // XXX: _M_current is \"present only if !forward_range<V>\"\n       [[no_unique_address]]\n \t__detail::__maybe_present_t<!forward_range<_Vp>,\n \t  __detail::__non_propagating_cache<iterator_t<_Vp>>> _M_current;\n@@ -3725,16 +3723,6 @@ namespace views::__adaptor\n \t: _M_base(std::move(__r))\n       { }\n \n-      /* XXX: LWG 3280 didn't remove this constructor, but I think it should?\n-      template<viewable_range _Range>\n-\trequires (!common_range<_Range>)\n-\t  && constructible_from<_Vp, views::all_t<_Range>>\n-\tconstexpr explicit\n-\tcommon_view(_Range&& __r)\n-\t  : _M_base(views::all(std::forward<_Range>(__r)))\n-\t{ }\n-      */\n-\n       constexpr _Vp\n       base() const& requires copy_constructible<_Vp>\n       { return _M_base; }\n@@ -4115,14 +4103,14 @@ namespace views::__adaptor\n \t  _Iterator() requires default_initializable<iterator_t<_Base>> = default;\n \n \t  constexpr explicit\n-\t  _Iterator(iterator_t<_Base> current)\n-\t    : _M_current(std::move(current))\n+\t  _Iterator(iterator_t<_Base> __current)\n+\t    : _M_current(std::move(__current))\n \t  { }\n \n \t  constexpr\n-\t  _Iterator(_Iterator<!_Const> i)\n+\t  _Iterator(_Iterator<!_Const> __i)\n \t    requires _Const && convertible_to<iterator_t<_Vp>, iterator_t<_Base>>\n-\t    : _M_current(std::move(i._M_current))\n+\t    : _M_current(std::move(__i._M_current))\n \t  { }\n \n \t  constexpr const iterator_t<_Base>&"}]}