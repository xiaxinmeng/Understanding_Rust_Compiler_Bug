{"sha": "67c6812fe3af0c0094818cc58a7fd702db71235e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjdjNjgxMmZlM2FmMGMwMDk0ODE4Y2M1OGE3ZmQ3MDJkYjcxMjM1ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-11-09T19:04:44Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-11-09T19:04:44Z"}, "message": "re PR debug/46171 (ICE: in gen_rtx_SUBREG, at emit-rtl.c:774 with -fno-tree-dce -g)\n\n\tPR debug/46171\n\t* df-problems.c (struct dead_debug_use, struct dead_debug): Move\n\tearlier.\n\t(df_set_unused_notes_for_mw, df_create_unused_note): Add DEBUG\n\targument, call dead_debug_reset when adding REG_UNUSED note.\n\t(dead_debug_reset): New function.\n\t(df_note_bb_compute): Adjust df_set_unused_notes_for_mw and\n\tdf_create_unused_note callers.\n\n\t* gcc.dg/pr46171.c: New test.\n\nFrom-SVN: r166504", "tree": {"sha": "f7c935d24979694daebd7751d1df497001c7acb3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f7c935d24979694daebd7751d1df497001c7acb3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/67c6812fe3af0c0094818cc58a7fd702db71235e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67c6812fe3af0c0094818cc58a7fd702db71235e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/67c6812fe3af0c0094818cc58a7fd702db71235e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/67c6812fe3af0c0094818cc58a7fd702db71235e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cc577f3f11304190ce0659587eff0910780cd485", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc577f3f11304190ce0659587eff0910780cd485", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc577f3f11304190ce0659587eff0910780cd485"}], "stats": {"total": 109, "additions": 88, "deletions": 21}, "files": [{"sha": "d41cabca05dd9cdf5daf8d942955e901cfdb2f17", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c6812fe3af0c0094818cc58a7fd702db71235e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c6812fe3af0c0094818cc58a7fd702db71235e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=67c6812fe3af0c0094818cc58a7fd702db71235e", "patch": "@@ -1,3 +1,14 @@\n+2010-11-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/46171\n+\t* df-problems.c (struct dead_debug_use, struct dead_debug): Move\n+\tearlier.\n+\t(df_set_unused_notes_for_mw, df_create_unused_note): Add DEBUG\n+\targument, call dead_debug_reset when adding REG_UNUSED note.\n+\t(dead_debug_reset): New function.\n+\t(df_note_bb_compute): Adjust df_set_unused_notes_for_mw and\n+\tdf_create_unused_note callers.\n+\n 2010-11-09  Anatoly Sokolov  <aesok@post.ru>\n \n \t* config/fr30/fr30.c: Include \"df.h\"."}, {"sha": "3f5627fb8c0ab368a1ce477c94a43cb1ae11fe76", "filename": "gcc/df-problems.c", "status": "modified", "additions": 59, "deletions": 21, "changes": 80, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c6812fe3af0c0094818cc58a7fd702db71235e/gcc%2Fdf-problems.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c6812fe3af0c0094818cc58a7fd702db71235e/gcc%2Fdf-problems.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdf-problems.c?ref=67c6812fe3af0c0094818cc58a7fd702db71235e", "patch": "@@ -2837,6 +2837,26 @@ df_whole_mw_reg_unused_p (struct df_mw_hardreg *mws,\n   return true;\n }\n \n+\n+/* Node of a linked list of uses of dead REGs in debug insns.  */\n+struct dead_debug_use\n+{\n+  df_ref use;\n+  struct dead_debug_use *next;\n+};\n+\n+/* Linked list of the above, with a bitmap of the REGs in the\n+   list.  */\n+struct dead_debug\n+{\n+  struct dead_debug_use *head;\n+  bitmap used;\n+  bitmap to_rescan;\n+};\n+\n+static void dead_debug_reset (struct dead_debug *, unsigned int);\n+\n+\n /* Set the REG_UNUSED notes for the multiword hardreg defs in INSN\n    based on the bits in LIVE.  Do not generate notes for registers in\n    artificial uses.  DO_NOT_GEN is updated so that REG_DEAD notes are\n@@ -2847,7 +2867,8 @@ df_whole_mw_reg_unused_p (struct df_mw_hardreg *mws,\n static void\n df_set_unused_notes_for_mw (rtx insn, struct df_mw_hardreg *mws,\n \t\t\t    bitmap live, bitmap do_not_gen,\n-\t\t\t    bitmap artificial_uses)\n+\t\t\t    bitmap artificial_uses,\n+\t\t\t    struct dead_debug *debug)\n {\n   unsigned int r;\n \n@@ -2861,6 +2882,7 @@ df_set_unused_notes_for_mw (rtx insn, struct df_mw_hardreg *mws,\n     {\n       unsigned int regno = mws->start_regno;\n       df_set_note (REG_UNUSED, insn, mws->mw_reg);\n+      dead_debug_reset (debug, regno);\n \n #ifdef REG_DEAD_DEBUGGING\n       df_print_note (\"adding 1: \", insn, REG_NOTES (insn));\n@@ -2875,6 +2897,7 @@ df_set_unused_notes_for_mw (rtx insn, struct df_mw_hardreg *mws,\n \t    && !bitmap_bit_p (artificial_uses, r))\n \t  {\n \t    df_set_note (REG_UNUSED, insn, regno_reg_rtx[r]);\n+\t    dead_debug_reset (debug, r);\n #ifdef REG_DEAD_DEBUGGING\n \t    df_print_note (\"adding 2: \", insn, REG_NOTES (insn));\n #endif\n@@ -2980,7 +3003,8 @@ df_set_dead_notes_for_mw (rtx insn, struct df_mw_hardreg *mws,\n \n static void\n df_create_unused_note (rtx insn, df_ref def,\n-\t\t       bitmap live, bitmap artificial_uses)\n+\t\t       bitmap live, bitmap artificial_uses,\n+\t\t       struct dead_debug *debug)\n {\n   unsigned int dregno = DF_REF_REGNO (def);\n \n@@ -3000,6 +3024,7 @@ df_create_unused_note (rtx insn, df_ref def,\n       rtx reg = (DF_REF_LOC (def))\n                 ? *DF_REF_REAL_LOC (def): DF_REF_REG (def);\n       df_set_note (REG_UNUSED, insn, reg);\n+      dead_debug_reset (debug, dregno);\n #ifdef REG_DEAD_DEBUGGING\n       df_print_note (\"adding 3: \", insn, REG_NOTES (insn));\n #endif\n@@ -3008,21 +3033,6 @@ df_create_unused_note (rtx insn, df_ref def,\n   return;\n }\n \n-/* Node of a linked list of uses of dead REGs in debug insns.  */\n-struct dead_debug_use\n-{\n-  df_ref use;\n-  struct dead_debug_use *next;\n-};\n-\n-/* Linked list of the above, with a bitmap of the REGs in the\n-   list.  */\n-struct dead_debug\n-{\n-  struct dead_debug_use *head;\n-  bitmap used;\n-  bitmap to_rescan;\n-};\n \n /* Initialize DEBUG to an empty list, and clear USED, if given.  */\n static inline void\n@@ -3076,6 +3086,34 @@ dead_debug_finish (struct dead_debug *debug, bitmap used)\n     }\n }\n \n+/* Reset DEBUG_INSNs with pending uses of DREGNO.  */\n+static void\n+dead_debug_reset (struct dead_debug *debug, unsigned int dregno)\n+{\n+  struct dead_debug_use **tailp = &debug->head;\n+  struct dead_debug_use *cur;\n+  rtx insn;\n+\n+  if (!debug->used || !bitmap_clear_bit (debug->used, dregno))\n+    return;\n+\n+  while ((cur = *tailp))\n+    {\n+      if (DF_REF_REGNO (cur->use) == dregno)\n+\t{\n+\t  *tailp = cur->next;\n+\t  insn = DF_REF_INSN (cur->use);\n+\t  INSN_VAR_LOCATION_LOC (insn) = gen_rtx_UNKNOWN_VAR_LOC ();\n+\t  if (debug->to_rescan == NULL)\n+\t    debug->to_rescan = BITMAP_ALLOC (NULL);\n+\t  bitmap_set_bit (debug->to_rescan, INSN_UID (insn));\n+\t  XDELETE (cur);\n+\t}\n+      else\n+\ttailp = &(*tailp)->next;\n+    }\n+}\n+\n /* Add USE to DEBUG.  It must be a dead reference to UREGNO in a debug\n    insn.  Create a bitmap for DEBUG as needed.  */\n static inline void\n@@ -3258,7 +3296,7 @@ df_note_bb_compute (unsigned int bb_index,\n \t\t  && !df_ignore_stack_reg (mws->start_regno))\n \t      df_set_unused_notes_for_mw (insn,\n \t\t\t\t\t  mws, live, do_not_gen,\n-\t\t\t\t\t  artificial_uses);\n+\t\t\t\t\t  artificial_uses, &debug);\n \t      mws_rec++;\n \t    }\n \n@@ -3271,7 +3309,7 @@ df_note_bb_compute (unsigned int bb_index,\n \t      if (!DF_REF_FLAGS_IS_SET (def, DF_REF_MUST_CLOBBER | DF_REF_MAY_CLOBBER))\n \t\t{\n \t\t  df_create_unused_note (insn,\n-\t\t\t\t\t def, live, artificial_uses);\n+\t\t\t\t\t def, live, artificial_uses, &debug);\n \t\t  bitmap_set_bit (do_not_gen, dregno);\n \t\t}\n \n@@ -3289,7 +3327,7 @@ df_note_bb_compute (unsigned int bb_index,\n \t      if (DF_MWS_REG_DEF_P (mws))\n \t\tdf_set_unused_notes_for_mw (insn,\n \t\t\t\t\t    mws, live, do_not_gen,\n-\t\t\t\t\t    artificial_uses);\n+\t\t\t\t\t    artificial_uses, &debug);\n \t      mws_rec++;\n \t    }\n \n@@ -3298,7 +3336,7 @@ df_note_bb_compute (unsigned int bb_index,\n \t      df_ref def = *def_rec;\n \t      unsigned int dregno = DF_REF_REGNO (def);\n \t      df_create_unused_note (insn,\n-\t\t\t\t     def, live, artificial_uses);\n+\t\t\t\t     def, live, artificial_uses, &debug);\n \n \t      if (!DF_REF_FLAGS_IS_SET (def, DF_REF_MUST_CLOBBER | DF_REF_MAY_CLOBBER))\n \t\tbitmap_set_bit (do_not_gen, dregno);"}, {"sha": "709248859cefd2f34beb298b3269392f17f7458d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c6812fe3af0c0094818cc58a7fd702db71235e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c6812fe3af0c0094818cc58a7fd702db71235e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=67c6812fe3af0c0094818cc58a7fd702db71235e", "patch": "@@ -1,3 +1,8 @@\n+2010-11-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR debug/46171\n+\t* gcc.dg/pr46171.c: New test.\n+\n 2010-11-09  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/46355"}, {"sha": "f43cab025bd8e8d6a31496b108cf77c9910cff06", "filename": "gcc/testsuite/gcc.dg/pr46171.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/67c6812fe3af0c0094818cc58a7fd702db71235e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46171.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/67c6812fe3af0c0094818cc58a7fd702db71235e/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46171.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46171.c?ref=67c6812fe3af0c0094818cc58a7fd702db71235e", "patch": "@@ -0,0 +1,13 @@\n+/* PR debug/46171 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fno-tree-dce -g\" } */\n+\n+double bard ();\n+float barf (float);\n+\n+void\n+foo (float f)\n+{\n+  f = barf (f);\n+  double d = bard ();\n+}"}]}