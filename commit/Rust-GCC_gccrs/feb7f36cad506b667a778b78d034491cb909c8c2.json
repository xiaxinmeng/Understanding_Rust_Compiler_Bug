{"sha": "feb7f36cad506b667a778b78d034491cb909c8c2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmViN2YzNmNhZDUwNmI2NjdhNzc4Yjc4ZDAzNDQ5MWNiOTA5YzhjMg==", "commit": {"author": {"name": "Piotr Trojanek", "email": "trojanek@adacore.com", "date": "2018-07-16T14:11:25Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-07-16T14:11:25Z"}, "message": "[Ada] Deconstruct always-false calls to Withed_Body in Walk_Library_Items\n\nWe previously removed the calls to Set_Withed_Body; this commit deconstructs\ncalls to Withed_Body, which always returned False.\n\nThe Set_Withed_Body/Withed_Body were helping the Walk_Library_Items routine\ntraverse the AST of several compilation units such that declarations are\nvisited before references. However, this never worked as it should and there is\nno point to keep the code more complicated than necessary.\n\nNo test provided, because thie removed code was ineffective (and only used in\nthe non-compiler backends, i.e. CodePeer and GNATprove).\n\n2018-07-16  Piotr Trojanek  <trojanek@adacore.com>\n\ngcc/ada/\n\n\t* sem.adb (Walk_Library_Items): Deconstruct dead code.\n\nFrom-SVN: r262718", "tree": {"sha": "fa77ff3a79db958884c625643647d578d95ad160", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fa77ff3a79db958884c625643647d578d95ad160"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/feb7f36cad506b667a778b78d034491cb909c8c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feb7f36cad506b667a778b78d034491cb909c8c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/feb7f36cad506b667a778b78d034491cb909c8c2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/feb7f36cad506b667a778b78d034491cb909c8c2/comments", "author": {"login": "ptroja", "id": 161602, "node_id": "MDQ6VXNlcjE2MTYwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/161602?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ptroja", "html_url": "https://github.com/ptroja", "followers_url": "https://api.github.com/users/ptroja/followers", "following_url": "https://api.github.com/users/ptroja/following{/other_user}", "gists_url": "https://api.github.com/users/ptroja/gists{/gist_id}", "starred_url": "https://api.github.com/users/ptroja/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ptroja/subscriptions", "organizations_url": "https://api.github.com/users/ptroja/orgs", "repos_url": "https://api.github.com/users/ptroja/repos", "events_url": "https://api.github.com/users/ptroja/events{/privacy}", "received_events_url": "https://api.github.com/users/ptroja/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9cd7bc5e000a2be07995aea4ff762f89c0e0661e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9cd7bc5e000a2be07995aea4ff762f89c0e0661e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9cd7bc5e000a2be07995aea4ff762f89c0e0661e"}], "stats": {"total": 35, "additions": 6, "deletions": 29}, "files": [{"sha": "b7a434a48398c052d2e7aeb68b3bc68525853256", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb7f36cad506b667a778b78d034491cb909c8c2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb7f36cad506b667a778b78d034491cb909c8c2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=feb7f36cad506b667a778b78d034491cb909c8c2", "patch": "@@ -1,3 +1,7 @@\n+2018-07-16  Piotr Trojanek  <trojanek@adacore.com>\n+\n+\t* sem.adb (Walk_Library_Items): Deconstruct dead code.\n+\n 2018-07-16  Ed Schonberg  <schonberg@adacore.com>\n \n \t* exp_ch4.adb (Expand_N_Op_Xor): Use common routine"}, {"sha": "59f290028d59b2022568b774d431a178a4a2626d", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 2, "deletions": 29, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/feb7f36cad506b667a778b78d034491cb909c8c2/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/feb7f36cad506b667a778b78d034491cb909c8c2/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=feb7f36cad506b667a778b78d034491cb909c8c2", "patch": "@@ -36,7 +36,6 @@ with Nlists;    use Nlists;\n with Output;    use Output;\n with Restrict;  use Restrict;\n with Sem_Attr;  use Sem_Attr;\n-with Sem_Aux;   use Sem_Aux;\n with Sem_Ch2;   use Sem_Ch2;\n with Sem_Ch3;   use Sem_Ch3;\n with Sem_Ch4;   use Sem_Ch4;\n@@ -1705,7 +1704,7 @@ package body Sem is\n       --  The main unit and its spec may depend on bodies that contain generics\n       --  that are instantiated in them. Iterate through the corresponding\n       --  contexts before processing main (spec/body) itself, to process bodies\n-      --  that may be present, together with their  context. The spec of main\n+      --  that may be present, together with their context. The spec of main\n       --  is processed wherever it appears in the list of units, while the body\n       --  is processed as the last unit in the list.\n \n@@ -2020,8 +2019,7 @@ package body Sem is\n                if Present (Body_CU)\n                  and then Body_CU /= Cunit (Main_Unit)\n                  and then Nkind (Unit (Body_CU)) /= N_Subprogram_Body\n-                 and then (Nkind (Unit (Comp)) /= N_Package_Declaration\n-                             or else Present (Withed_Body (Clause)))\n+                 and then Nkind (Unit (Comp)) /= N_Package_Declaration\n                then\n                   Body_U := Get_Cunit_Unit_Number (Body_CU);\n \n@@ -2335,7 +2333,6 @@ package body Sem is\n \n       Context_Item : Node_Id;\n       Lib_Unit     : Node_Id;\n-      Body_CU      : Node_Id;\n \n    begin\n       Context_Item := First (Context_Items (CU));\n@@ -2346,30 +2343,6 @@ package body Sem is\n          then\n             Lib_Unit := Library_Unit (Context_Item);\n             Action (Lib_Unit);\n-\n-            --  If the context item indicates that a package body is needed\n-            --  because of an instantiation in CU, traverse the body now, even\n-            --  if CU is not related to the main unit. If the generic itself\n-            --  appears in a package body, the context item is this body, and\n-            --  it already appears in the traversal order, so we only need to\n-            --  examine the case of a context item being a package declaration.\n-\n-            if Present (Withed_Body (Context_Item))\n-              and then Nkind (Unit (Lib_Unit)) = N_Package_Declaration\n-              and then Present (Corresponding_Body (Unit (Lib_Unit)))\n-            then\n-               Body_CU :=\n-                 Parent\n-                   (Unit_Declaration_Node\n-                     (Corresponding_Body (Unit (Lib_Unit))));\n-\n-               --  A body may have an implicit with on its own spec, in which\n-               --  case we must ignore this context item to prevent looping.\n-\n-               if Unit (CU) /= Unit (Body_CU) then\n-                  Action (Body_CU);\n-               end if;\n-            end if;\n          end if;\n \n          Context_Item := Next (Context_Item);"}]}