{"sha": "e631262b77b5ce1aba09a822e30f2ba2882b0ba6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYzMTI2MmI3N2I1Y2UxYWJhMDlhODIyZTMwZjJiYTI4ODJiMGJhNg==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2010-10-01T00:04:18Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2010-10-01T00:04:18Z"}, "message": "sh.c (sh_expand_prologue): Set current_function_static_stack_size.\n\n\t* config/sh/sh.c (sh_expand_prologue): Set\n\tcurrent_function_static_stack_size.\n\nFrom-SVN: r164819", "tree": {"sha": "a4e3b1489efb13d8e244e1f2572b20450d010df9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4e3b1489efb13d8e244e1f2572b20450d010df9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e631262b77b5ce1aba09a822e30f2ba2882b0ba6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e631262b77b5ce1aba09a822e30f2ba2882b0ba6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e631262b77b5ce1aba09a822e30f2ba2882b0ba6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e631262b77b5ce1aba09a822e30f2ba2882b0ba6/comments", "author": null, "committer": null, "parents": [{"sha": "0e247093e0be627a46d1fc6d51c3afe6ca24754b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e247093e0be627a46d1fc6d51c3afe6ca24754b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e247093e0be627a46d1fc6d51c3afe6ca24754b"}], "stats": {"total": 18, "additions": 17, "deletions": 1}, "files": [{"sha": "3fb99f79ab5a92a7993c3f333abe06ee505f5838", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e631262b77b5ce1aba09a822e30f2ba2882b0ba6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e631262b77b5ce1aba09a822e30f2ba2882b0ba6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e631262b77b5ce1aba09a822e30f2ba2882b0ba6", "patch": "@@ -1,3 +1,8 @@\n+2010-09-30  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* config/sh/sh.c (sh_expand_prologue): Set\n+\tcurrent_function_static_stack_size.\n+\n 2010-09-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* configure.ac: Check for Solaris 8 ld with .hidden support."}, {"sha": "1c201bbe6a396136542536b896623e0aae264870", "filename": "gcc/config/sh/sh.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e631262b77b5ce1aba09a822e30f2ba2882b0ba6/gcc%2Fconfig%2Fsh%2Fsh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e631262b77b5ce1aba09a822e30f2ba2882b0ba6/gcc%2Fconfig%2Fsh%2Fsh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Fsh.c?ref=e631262b77b5ce1aba09a822e30f2ba2882b0ba6", "patch": "@@ -6860,6 +6860,7 @@ sh_expand_prologue (void)\n   int d_rounding = 0;\n   int save_flags = target_flags;\n   int pretend_args;\n+  int stack_usage;\n   tree sp_switch_attr\n     = lookup_attribute (\"sp_switch\", DECL_ATTRIBUTES (current_function_decl));\n \n@@ -6876,6 +6877,7 @@ sh_expand_prologue (void)\n   output_stack_adjust (-pretend_args\n \t\t       - crtl->args.info.stack_regs * 8,\n \t\t       stack_pointer_rtx, 0, NULL, false);\n+  stack_usage = pretend_args + crtl->args.info.stack_regs * 8;\n \n   if (TARGET_SHCOMPACT && flag_pic && crtl->args.info.call_cookie)\n     /* We're going to use the PIC register to load the address of the\n@@ -6934,6 +6936,7 @@ sh_expand_prologue (void)\n \t\t\t))\n \t\tbreak;\n \t      push (rn);\n+\t      stack_usage += GET_MODE_SIZE (SImode);\n \t    }\n \t}\n     }\n@@ -7006,6 +7009,7 @@ sh_expand_prologue (void)\n \n       output_stack_adjust (-(save_size + d_rounding), stack_pointer_rtx,\n \t\t\t   0, NULL, true);\n+      stack_usage += save_size + d_rounding;\n \n       sh5_schedule_saves (&live_regs_mask, &schedule, offset_base);\n       tmp_pnt = schedule.temps;\n@@ -7157,7 +7161,10 @@ sh_expand_prologue (void)\n       gcc_assert (entry->offset == d_rounding);\n     }\n   else\n-    push_regs (&live_regs_mask, current_function_interrupt);\n+    {\n+      push_regs (&live_regs_mask, current_function_interrupt);\n+      stack_usage += d;\n+    }\n \n   if (flag_pic && df_regs_ever_live_p (PIC_OFFSET_TABLE_REGNUM))\n     emit_insn (gen_GOTaddr2picreg ());\n@@ -7181,6 +7188,7 @@ sh_expand_prologue (void)\n \n   output_stack_adjust (-rounded_frame_size (d) + d_rounding,\n \t\t       stack_pointer_rtx, 0, NULL, true);\n+  stack_usage += rounded_frame_size (d) - d_rounding;\n \n   if (frame_pointer_needed)\n     frame_insn (GEN_MOV (hard_frame_pointer_rtx, stack_pointer_rtx));\n@@ -7194,6 +7202,9 @@ sh_expand_prologue (void)\n \t\t      \"__GCC_shcompact_incoming_args\", SFUNC_GOT);\n       emit_insn (gen_shcompact_incoming_args ());\n     }\n+\n+  if (flag_stack_usage)\n+    current_function_static_stack_size = stack_usage;\n }\n \n void"}]}