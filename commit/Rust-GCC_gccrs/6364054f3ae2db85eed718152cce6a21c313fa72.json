{"sha": "6364054f3ae2db85eed718152cce6a21c313fa72", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM2NDA1NGYzYWUyZGI4NWVlZDcxODE1MmNjZTZhMjFjMzEzZmE3Mg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@redhat.com", "date": "2002-07-24T07:55:34Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2002-07-24T07:55:34Z"}, "message": "documentation.html: Remove libstdc++-v3.0.86 links...\n\n\n2002-07-23  Benjamin Kosnik  <bkoz@redhat.com>\n\n\t* docs/html/documentation.html: Remove libstdc++-v3.0.86 links,\n\tconfusing usage of \"latest.\"\n\tDe-tangle contributor information from introductory notes.\n\tMove abi.txt link placement, activate.\n\tRe-organize.\n\tMove chapter info into old FAQ format.\n\t* docs/html/organization.html: Removed, obsoleted by doxygen work.\n\t* docs/html/abi.txt: Add notes on testing ABI changes.\n\nFrom-SVN: r55702", "tree": {"sha": "e9b12abcf923275f2b7a9a0b1793439e26607033", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e9b12abcf923275f2b7a9a0b1793439e26607033"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6364054f3ae2db85eed718152cce6a21c313fa72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6364054f3ae2db85eed718152cce6a21c313fa72", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6364054f3ae2db85eed718152cce6a21c313fa72", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6364054f3ae2db85eed718152cce6a21c313fa72/comments", "author": null, "committer": null, "parents": [{"sha": "0ba1b2ff0fe1f3bfd13ca72ce09736d65ed45c6c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ba1b2ff0fe1f3bfd13ca72ce09736d65ed45c6c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ba1b2ff0fe1f3bfd13ca72ce09736d65ed45c6c"}], "stats": {"total": 382, "additions": 225, "deletions": 157}, "files": [{"sha": "a6fcda07ebbf7aa3050fc79c886b8a13702b22c4", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6364054f3ae2db85eed718152cce6a21c313fa72/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6364054f3ae2db85eed718152cce6a21c313fa72/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=6364054f3ae2db85eed718152cce6a21c313fa72", "patch": "@@ -1,3 +1,14 @@\n+2002-07-23  Benjamin Kosnik  <bkoz@redhat.com>\n+\n+\t* docs/html/documentation.html: Remove libstdc++-v3.0.86 links,\n+\tconfusing usage of \"latest.\"\n+\tDe-tangle contributor information from introductory notes.\n+\tMove abi.txt link placement, activate.\n+\tRe-organize.\n+\tMove chapter info into old FAQ format. \n+\t* docs/html/organization.html: Removed, obsoleted by doxygen work.\n+\t* docs/html/abi.txt: Add notes on testing ABI changes.\n+\t\n 2002-07-20  Phil Edwards  <pme@gcc.gnu.org>\n \n \t* docs/html/abi.txt:  New file."}, {"sha": "828a81128341489519704a4faa2e53318edd9e1d", "filename": "libstdc++-v3/docs/html/17_intro/organization", "status": "removed", "additions": 0, "deletions": 84, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ba1b2ff0fe1f3bfd13ca72ce09736d65ed45c6c/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Forganization", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ba1b2ff0fe1f3bfd13ca72ce09736d65ed45c6c/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Forganization", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2F17_intro%2Forganization?ref=0ba1b2ff0fe1f3bfd13ca72ce09736d65ed45c6c", "patch": "@@ -1,84 +0,0 @@\n-20 [lib.utilities]\n-\t<utility>\n-\t\tnamespace rel_ops { operators !=, >, <=, >= }\n-\t\tstruct pair;\n-\t\tpair binary operators { operators ==, <, !=, >, >=, <= }\n-\t<functional>\n-\t\t// function objects, or objects with operator() defined\n-\t<memory>\n-\t\ttemplate<T> class allocator;\n-\t\ttemplate<> class allocator<void>;\n-\t\ttemplate<OutI, T> class raw_storage_iterator;\n-\t\ttemporary buffers\n-\t\tspecialized algorithms for uninitialized_{copy, fill, fill_n}\n-\t\ttemplate<T> class auto_ptr;\n-\t<ctime>\n-\t<cstdlib>\n-\t<cstring>\n-\n-21 [lib.strings]\n-\t<string>\n-\t\ttemplate<T> struct char_traits\n-\t\ttemplate<> struct char_traits<char>\n-\t\ttemplate<> struct char_traits<wchar_t>\n-\t\ttemplate<C, T=c_t<T>, A=a<T> > class basic_string;\n-\n-\t\ttypedef basic_string<char> string;\n-\t\ttypedef basic_string<wchar_t> wstring;\n-\t\t\n-\t\ttemplate<C, T, A> void swap(string&, string&)\n-\t\ttemplate<C, T, A> istream& operator>>(istream&, string&);\n-\t\ttemplate<C, T, A> istream& getline(istream&, string&, C);\n-\t\ttemplate<C, T, A> istream& getline(istream&, string&);\n-\t\ttemplate<C, T, A> ostream& operator<<(ostream&, string&);\n-\t<cctype>\n-\t<cwctype>\n-\t<cstring>\n-\t<cwchar>\n-\t<cstdlib>\n-\n-23 [lib.containers]\n-\t<deque>\n-\t<list>\n-\t<queue>\n-\t<stack>\n-\t<vector>\n-\t<map>\n-\t<set>\n-\t<bitset>\n-\n-24 [lib.iterators]\n-\t<iterator>\n-\n-25 [lib.algorithms]\n-\t<algorithm>\n-\t\tnon-modifying sequence operations \n-\t\t\tfor_each, find, find_if, find_end, find_first_of, \n-\t\t\tadjacent_find, count, count_if, mismatch, equal, \n-\t\t\tsearch, search_n\n-\t\tmodifying sequence operations\n-\t\t\tcopy, copy_backward, swap, swap_ranges, iter_swap, \n-\t\t\ttransform, replace, replace_if, replace_copy,\n-\t\t\treplace_copy_if, fill, fill_n, generate, generate_n, \n-\t\t\tremove, remove_if, remove_copy, remove_copy_if, unique,\n-\t\t\tunique_copy, reverse, reverse_copy, rotate, \n-\t\t\trotate_copy, random_shuffle\n-\t\tsorting and related operations\n-\t\t\tsort, stable_sort, partial_sort, partial_sort_copy, \n-\t\t\tnth_element, lower_bound, upper_bound, equal_range, \n-\t\t\tbinary_search, merge, inplace_merge, includes, \n-\t\t\tset_union, set_intersection, set_difference, \n-\t\t\tset_symmetric_difference, push_heap, pop_heap, \n-\t\t\tmake_heap, sort_heap, min, max, min_element, \n-\t\t\tmax_element, lexicographical_compare, next_permutation,\n-\t\t\tprev_permutation\n-\t<cstdlib>\n-\n-\n-\n-\n-\n-\n-\n-\n-"}, {"sha": "cbb0426e41611ee0b55cc38de0e83f27dbec1cfe", "filename": "libstdc++-v3/docs/html/abi.txt", "status": "modified", "additions": 32, "deletions": 4, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6364054f3ae2db85eed718152cce6a21c313fa72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fabi.txt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6364054f3ae2db85eed718152cce6a21c313fa72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fabi.txt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fabi.txt?ref=6364054f3ae2db85eed718152cce6a21c313fa72", "patch": "@@ -6,7 +6,7 @@ document exists, why it's incomplete, and what needs to be done still.\n \n ===========================\n \n-2002-07-01 Benjamin Kosnik\n+2002-07-23 Benjamin Kosnik\n \n Description of the libstdc++ ABI.\n \n@@ -123,9 +123,37 @@ III. Versioning\n \n IV. Testing ABI changes\n \n-- 'make check-abi'??\n-\n-- other ABI checkers\n+Currently, there is no formal testing for changes in the libstdc++\n+ABI. It would be in the best interest of GNU C++ users everywhere to\n+have such a test, and work to develop this test is ongoing.\n+\n+There is a formal method for checking the compiler parts of the C++\n+ABI, donated by Intel. More information can be obtained\n+<a href=\"http://developer.intel.com/software/products/opensource/\">here.</a>\n+\n+To test the library, the following two ideas have been suggested:\n+\n+One. \n+(Brendan Kehoe, Jeff Law suggestion to run 'make check-c++' two ways, \n+one with a new compiler and an old library, and the other with an old\n+compiler and a new library, and look for testsuite regressions)\n+\n+Two.  \n+Have the libstdc++ testesuite proactively check the library\n+ABI. Probably a couple of items would be covered, although perhaps not\n+all would need to be done at once for this to be useful. Compute the\n+list of names exported in the shared version of libstdc++\n+binary. Then, save this list of names. Have this list of names\n+re-computed for each new binary of the same version. Next, use sizeof\n+and offset to compute offsets for each structure and type in the\n+standard library, saving to another datafile. Then, compute this for\n+new binaries, and look for differences.\n+\n+The thought is to choose one or both of these approaches, and to use a\n+Makefile hook, perhaps 'make check-abi', to add this capability to the\n+libstdc++ testsuite.\n+\n+Perhaps there are other Library ABI checkers. If so, please notify us.\n \n \n V. Issues not directly addressed, and possible suggestions"}, {"sha": "72e0aa4ceed1be060a4ff3e51a4ccd3d02c6e315", "filename": "libstdc++-v3/docs/html/documentation.html", "status": "modified", "additions": 182, "deletions": 69, "changes": 251, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6364054f3ae2db85eed718152cce6a21c313fa72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6364054f3ae2db85eed718152cce6a21c313fa72/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdocs%2Fhtml%2Fdocumentation.html?ref=6364054f3ae2db85eed718152cce6a21c313fa72", "patch": "@@ -1,7 +1,8 @@\n <html>\n <head>\n- <meta name=\"KEYWORDS\" content=\"libstdc++, homepage, home, g++, libg++, STL\">\n- <title>Standard C++ Library v3</title>\n+ <meta name=\"KEYWORDS\" \n+  content=\"libstdc++, homepage, home, C++, library, c++, std, g++, ABI, STL\">\n+ <title>GNU C++ Standard Library</title>\n <link rel=\"StyleSheet\" href=\"lib3styles.css\">\n </head>\n <body>\n@@ -13,103 +14,215 @@\n    automatically-generated source documentation, available separately.\n </p>\n \n+\n <hr />\n+<br>\n+<h2><a name=\"1\">Introduction</a></h2>\n+   <p>This is a short list of text files pertaining to this implementation of\n+      ISO 14882.  A brief description may follow the name of the file.\n+      <ul>\n+         <li><a href=\"17_intro/COPYING\">License</a>\n+         - GPL v2 license terms\n+\t <li><a href=\"abi.txt\">ABI Policy and Guidelines</a> \n+         <li><a href=\"17_intro/BUGS\">BUGS</a>\n+         <li><a href=\"17_intro/PROBLEMS\">PROBLEMS</a>\n+         - target-specific known issues\n+         <!-- Linking to \"../README\" doesn't work; we are at the top level\n+              of the web pages.  Punt.  -->\n+         <li>README - directory structure\n+         <li><a href=\"17_intro/RELEASE-NOTES\">RELEASE-NOTES</a>\n+         - latest version info, recent changes and news\n+         <li><a href=\"17_intro/TODO\">TODO</a>\n+         - tasks yet undone\n+      </ul>\n+   </p>\n \n-<h2><a name=\"4\">Source Documentation</a></h2>\n-<p>In addition to the distribution documentation (these pages), we also\n-   have a set of HTML documents generated from the sources themselves,\n-   using the Doxygen tool.  These are useful for examining the signatures\n-   of public member functions for the library classes, etc.\n-</p>\n-<p>The collections are available in the libstdc++ snapshots directory at\n-   <code>&lt;URL:ftp://gcc.gnu.org/pub/gcc/libstdc++/doxygen/&gt;</code>.\n-   You will almost certainly need to use one of the\n-   <a href=\"http://gcc.gnu.org/mirrors.html\">mirror sites</a> to download\n-   the tarball.  After unpacking, simply load libstdc++-html-*/index.html\n-   into a browser.  Feedback (and additional documentation!) is welcome.\n+\n+<hr />\n+<br>\n+<h2><a name=\"2\">Configuring, Building, Installing</a></h2>\n+  <ul>\n+   <li><a href=\"configopts.html\">Configure options</a>\n+   <li><a href=\"install.html\">Getting started:  configure, build, install</a>\n+  </ul>\n+\n+\n+<hr />\n+<br>\n+<h2><a name=\"4\">Source-Level Documentation</a></h2>\n+<p>The library sources have been specially formatted so that with the\n+   proper invocation of another tool (Doxygen), a set of HTML pages\n+   are generated from the sources files themselves.  The resultant\n+   documentation is referred to as Source-Level Documentation, and is\n+   useful for examining the signatures of public member functions for\n+   the library classes, finding out what is in a particular include\n+   file, looking at inheritance diagrams, etc.\n </p>\n-<p>The available user-level collections are also viewable online:\n+<p>The Source-Level documentation can be viewed online:\n    <ul>\n-   <li><a href=\"libstdc++-html-USERS-3.1/index.html\">docs for the 3.1 release</a>\n-   <li><a href=\"libstdc++-html-USERS-3.0.96/index.html\">docs for the most\n-       recent libstdc++ snapshot (3.0.96)</a>\n+   <li><a href=\"libstdc++-html-USERS-3.1/index.html\">For the 3.1 release</a>\n    <li><a href=\"latest-doxygen/index.html\">&quot;the latest collection&quot;</a>\n        (for the snapshot or later; see the date on the first page)\n    </ul>\n-   Other collections (man pages, maintainer docs) are only available on the\n-   FTP sites.\n </p>\n-\n-<p>Beginning with 3.0.95, an initial set of man pages are also available in\n-   the same place as the HTML collections.  Start with <code>Intro(3)</code>.\n+<p>This generated HTML collection, as above, is also available for download in\n+   the libstdc++ snapshots directory at\n+   <code>&lt;URL:ftp://gcc.gnu.org/pub/gcc/libstdc++/doxygen/&gt;</code>.\n+   You will almost certainly need to use one of the <a\n+   href=\"http://gcc.gnu.org/mirrors.html\">mirror sites</a> to download\n+   the tarball.  After unpacking, simply load\n+   libstdc++-html-*/index.html into a browser.  Feedback (and\n+   additional documentation!) is welcome.\n+</p>\n+<p>\n+ In addition, an initial set of man pages are also available in the\n+ same place as the HTML collections. Start with Intro(3).\n </p>\n \n-<hr />\n-\n-<h2><a name=\"2\">Configuring, Building, Installing</a></h2>\n-  <ul>\n-   <li><a href=\"configopts.html\">Configure options</a>\n-   <li><a href=\"install.html\">Getting started:  configure, build, install</a>\n-   <!-- initial guess:  <li><a href=\"abi.txt\">ABI documentation</a> -->\n-  </ul>\n \n <hr />\n+<br>\n+<h2><a name=\"3\">Chapter-Specific Documentation</a></h2>\n+<p>Information, extensions, notes and advice on specific implementation \n+   capabilites and or liabilities broken down into chapter names based on the \n+   C++ standard.\n+</p>\n+      <ul>\n+         <li>Intro (Chapter 17)\n+\t <ul>\n+         <li><a href=\"17_intro/howto.html#1\">Header files</a>\n+         <li><a href=\"17_intro/howto.html#3\">Using <foo> vs <foo.h></a>\n+         <li><a href=\"17_intro/howto.html#2\">Multithreading</a>\n+         <li><a href=\"17_intro/howto.html#4\">Porting</a>\n+         <li><a href=\"17_intro/howto.html#5\">Implementation-specific behavior</a>\n+         <li><a href=\"17_intro/howto.html#6\">Using preprocessor macros to change behavior of the library</a>\n+\t </ul>\n+\n+         <li>Library Support (Chapter 18)\n+\t <ul>\n+         <li><a href=\"18_support/howto.html#1\">Types</a>\n+         <li><a href=\"18_support/howto.html#2\">Implementation properties</a>\n+         <li><a href=\"18_support/howto.html#3\">Start and Termination</a>\n+         <li><a href=\"18_support/howto.html#4\">Dynamic memory management</a>\n+         <li><a href=\"18_support/howto.html#5\">RTTI, the ABI, and demangling</a>\n+\t </ul>\n+\n+\n+         <li>Diagnostics (Chapter 19)\n+\t <ul>\n+         <li><a href=\"19_diagnostics/howto.html#1\">Adding data to exceptions</a>\n+         <li><a href=\"19_diagnostics/howto.html#2\">Exception class hierarchy diagram</a>\n+         <li><a href=\"19_diagnostics/howto.html#3\">Concept checkers -- new and improved!</a>\n+         <li><a href=\"19_diagnostics/howto.html#4\">Verbose terminate</a>\n+\t </ul>\n+\n+         <li>Utilities (Chapter 20)\n+\t <ul>\n+         <li><a href=\"20_util/howto.html#1\">auto_ptr is not omnipotent</a>\n+         <li><a href=\"20_util/howto.html#1\">auto_ptr inside container classes</a>\n+         <li><a href=\"20_util/howto.html#1\">Functors</a>\n+         <li><a href=\"20_util/howto.html#1\">Pairs</a>\n+\t </ul>\n+\n+\n+         <li>Strings (Chapter 21)\n+\t <ul>\n+         <li><a href=\"21_strings/howto.html#1\">MFC's CString</a>\n+         <li><a href=\"21_strings/howto.html#2\">A case-insensitive string class</a>\n+         <li><a href=\"21_strings/howto.html#3\">Breaking a C++ string into tokens</a>\n+         <li><a href=\"21_strings/howto.html#4\">Simple transformations</a>\n+\t </ul>\n+\n+         <li>Localization (Chapter 22)\n+\t <ul>\n+         <li><a href=\"22_locale/howto.html#1\">Class locale</a>\n+         <li><a href=\"22_locale/howto.html#2\">Class codecvt</a>\n+         <li><a href=\"22_locale/howto.html#3\">Class ctype</a>\n+         <li><a href=\"22_locale/howto.html#4\">Class messages</a>\n+         <li><a href=\"22_locale/howto.html#5\">Bjarne Stroustrup on Locales</a>\n+         <li><a href=\"22_locale/howto.html#6\">Nathan Myers on Locales</a>\n+         <li><a href=\"22_locale/howto.html#7\">Correct Transformations </a>\n+\t </ul>\n+\n+         <li>Containers (Chapter 23)\n+\t <ul>\n+         <li><a href=\"23_containers/howto.html#1\">Making code unaware of the container/array difference</a>\n+         <li><a href=\"23_containers/howto.html#2\">Variable-sized bitmasks</a>\n+         <li><a href=\"23_containers/howto.html#3\">Containers and multithreading</a>\n+         <li><a href=\"23_containers/howto.html#4\">\"Hinting\" during insertion</a>\n+         <li><a href=\"23_containers/howto.html#5\">Bitmasks and string arguments</a>\n+         <li><a href=\"23_containers/howto.html#6\">std::list::size() is O(n)!</a>\n+         <li><a href=\"23_containers/howto.html#7\">Space overhead management for vectors </a>\n+\t </ul>\n+\n+         <li>Iterators (Chapter24)\n+\t <ul>\n+         <li><a href=\"24_iterators/howto.html#1\">They aren't pointers!</a>\n+         <li><a href=\"24_iterators/howto.html#1\">It ends where?</a>\n+\t </ul>\n+\n+         <li>Algorithms (Chapter 25)\n+\t <ul>\n+         <li><a href=\"25_algorithms/howto.html#1\">Prerequisites</a>\n+         <li><a href=\"25_algorithms/howto.html#2\">Special swaps</a>\n+\t </ul>\n+\n+         <li>Numerics (Chapter 26)\n+\t <ul>\n+         <li><a href=\"26_numerics/howto.html#1\">Complex Number Processing</a>\n+         <li><a href=\"26_numerics/howto.html#2\">Array Processing</a>\n+         <li><a href=\"26_numerics/howto.html#3\">Numerical Functions</a>\n+         <li><a href=\"26_numerics/howto.html#4\">C99</a>\n+\t </ul>\n+\n+         <li>I/O (Chapter 27)\n+\t <ul>\n+         <li><a href=\"27_io/howto.html#1\">Copying a file</a>\n+         <li><a href=\"27_io/howto.html#2\">The buffering is screwing up my program!</a>\n+\t </ul>\n+\t <ul>\n+         <li><a href=\"27_io/howto.html#3\">Binary I/O</a>\n+         <li><a href=\"27_io/howto.html#6\">More on binary I/O</a>\n+         <li><a href=\"27_io/howto.html#5\">Deriving a stream buffer</a>\n+         <li><a href=\"27_io/howto.html#4\">What is this <sstream>/stringstreams thing?</a>\n+         <li><a href=\"27_io/howto.html#7\">Pathetic performance? Ditch C.</a>\n+         <li><a href=\"27_io/howto.html#8\">Threads and I/O</a>\n+\t </ul>\n+\n+         <li>Extensions to the Standard Library\n+\t <ul>\n+         <li><a href=\"ext/howto.html#1\">Ropes and trees and hashes, oh my!</a>\n+         <li><a href=\"ext/howto.html#2\">Added members and types</a>\n+         <li><a href=\"ext/howto.html#3\">Allocators (versions 3.0, 3.1, 3.2)</a>\n+         <li><a href=\"ext/howto.html#4\">Allocators (version 3.3)</a>\n+         <li><a href=\"ext/howto.html#5\">Compile-time checks</a>\n+         <li><a href=\"ext/howto.html#6\">LWG Issues</a>\n+\t </ul>\n+      </ul>\n \n-<h2><a name=\"1\">Introductory notes for libstdc++</a></h2>\n-   <p>This is a short list of text files pertaining to this implementation of\n-      ISO 14882.  A brief description follows the name of the file.\n+<hr />\n+<br>\n+<h2><a name=\"5\">Contributor-Specific Information</a></h2>\n       <ul>\n+         <li><a href=\"17_intro/contribute.html\">Contributor checklist</a>\n+         <li><a href=\"17_intro/libstdc++-assign.txt\">Copyright assignment form for libstdc++-v3</a>\n          <li><a href=\"17_intro/BADNAMES\">BADNAMES</a>\n          - names to avoid because of potential collisions\n-         <li><a href=\"17_intro/BUGS\">BUGS</a>\n          <li><a href=\"17_intro/C++STYLE\">C++STYLE</a>\n          - coding style by example\n          <li><a href=\"17_intro/CHECKLIST\">CHECKLIST</a>\n          - a list of required features and their status.\n-         <li><a href=\"17_intro/COPYING\">COPYING</a>\n-         - GPL v2 license terms\n          <li><a href=\"17_intro/DESIGN\">DESIGN</a>\n          - overview of the implementation plan\n          <li><a href=\"17_intro/HEADER_POLICY\">HEADER_POLICY</a>\n          - header naming and sub-include structure\n-         <li><a href=\"17_intro/PROBLEMS\">PROBLEMS</a>\n-         <!-- Linking to \"../README\" doesn't work; we are at the top level\n-              of the web pages.  Punt.  -->\n-         <li>README - directory structure\n-         <li><a href=\"17_intro/RELEASE-NOTES\">RELEASE-NOTES</a>\n-         - instructions for building, using\n-         <li><a href=\"17_intro/TODO\">TODO</a>\n-         - tasks and known bugs\n-         <li><a href=\"17_intro/organization\">organization</a>\n-         <li><a href=\"17_intro/contribute.html\">Contributor checklist</a>\n-         <li><a href=\"17_intro/libstdc++-assign.txt\">Copyright assignment form for libstdc++-v3</a>\n       </ul>\n-   </p>\n-\n-<hr />\n-\n-<h2><a name=\"3\">Chapter-Specific Information, Extensions, Notes and Advice</a></h2>\n-      <ol>\n-         <li><a href=\"17_intro/howto.html\">Chapter 17 (Intro)</a>\n-         <li><a href=\"18_support/howto.html\">Chapter 18 (Library Support)</a>\n-         <li><a href=\"19_diagnostics/howto.html\">Chapter 19 (Diagnostics)</a>\n-         <li><a href=\"20_util/howto.html\">Chapter 20 (Utilities)</a>\n-         <li><a href=\"21_strings/howto.html\">Chapter 21 (Strings)</a>\n-         <li><a href=\"22_locale/howto.html\">Chapter 22 (Localization)</a>\n-         <li><a href=\"23_containers/howto.html\">Chapter 23 (Containers)</a>\n-         <li><a href=\"24_iterators/howto.html\">Chapter 24 (Iterators)</a>\n-         <li><a href=\"25_algorithms/howto.html\">Chapter 25 (Algorithms)</a>\n-         <li><a href=\"26_numerics/howto.html\">Chapter 26 (Numerics)</a>\n-         <li><a href=\"27_io/howto.html\">Chapter 27 (I/O)</a>\n-         <li><a href=\"ext/howto.html\">Extensions to the Standard Library</a>\n-      </ol>\n-\n \n <!-- ####################################################### -->\n \n <p>Return <a href=\"http://gcc.gnu.org/libstdc++/\">to the libstdc++ homepage</a>.</p>\n \n-<hr>\n+<hr />\n <p class=\"fineprint\"><em>\n See <a href=\"17_intro/license.html\">license.html</a> for copying conditions.\n Comments and suggestions are welcome, and may be sent to"}]}