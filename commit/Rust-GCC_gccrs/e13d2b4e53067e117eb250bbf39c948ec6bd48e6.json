{"sha": "e13d2b4e53067e117eb250bbf39c948ec6bd48e6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTEzZDJiNGU1MzA2N2UxMTdlYjI1MGJiZjM5Yzk0OGVjNmJkNDhlNg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2006-04-16T18:12:41Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2006-04-16T18:12:41Z"}, "message": "re PR c++/26365 (ICE in finish_class_member_access_expr, at cp/typeck.c)\n\n\tPR c++/26365\n\t* typeck.c (finish_class_member_access_expr): Robustify\n\tPR c++/26365\n\t* g++.dg/template/crash45.C: New test.\n\nFrom-SVN: r112986", "tree": {"sha": "a03a1b83baed977b18a6063a3f851c38d4b4d907", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a03a1b83baed977b18a6063a3f851c38d4b4d907"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e13d2b4e53067e117eb250bbf39c948ec6bd48e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e13d2b4e53067e117eb250bbf39c948ec6bd48e6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e13d2b4e53067e117eb250bbf39c948ec6bd48e6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e13d2b4e53067e117eb250bbf39c948ec6bd48e6/comments", "author": null, "committer": null, "parents": [{"sha": "8a9b2875db44f9b611122e8d9e8f4087db7feaa1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8a9b2875db44f9b611122e8d9e8f4087db7feaa1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8a9b2875db44f9b611122e8d9e8f4087db7feaa1"}], "stats": {"total": 38, "additions": 30, "deletions": 8}, "files": [{"sha": "78cac4853cae0e90e8fe770b07fec7dd5007e903", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13d2b4e53067e117eb250bbf39c948ec6bd48e6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13d2b4e53067e117eb250bbf39c948ec6bd48e6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e13d2b4e53067e117eb250bbf39c948ec6bd48e6", "patch": "@@ -1,3 +1,8 @@\n+2006-04-16  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/26365\n+\t* typeck.c (finish_class_member_access_expr): Robustify\n+\n 2006-04-15  Kazu Hirata  <kazu@codesourcery.com>\n \n \t* Make-lang.in (cp/pt.o): Depend on vecprim.h."}, {"sha": "e5763e7a8d341acc249daad533e9c774398745a4", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13d2b4e53067e117eb250bbf39c948ec6bd48e6/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13d2b4e53067e117eb250bbf39c948ec6bd48e6/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=e13d2b4e53067e117eb250bbf39c948ec6bd48e6", "patch": "@@ -2046,16 +2046,11 @@ finish_class_member_access_expr (tree object, tree name, bool template_p)\n \n       if (TREE_CODE (name) == SCOPE_REF)\n \t{\n-\t  /* A qualified name.  The qualifying class or namespace `S' has\n-\t     already been looked up; it is either a TYPE or a\n-\t     NAMESPACE_DECL.  The member name is either an IDENTIFIER_NODE\n-\t     or a BIT_NOT_EXPR.  */\n+\t  /* A qualified name.  The qualifying class or namespace `S'\n+\t     has already been looked up; it is either a TYPE or a\n+\t     NAMESPACE_DECL.  */\n \t  scope = TREE_OPERAND (name, 0);\n \t  name = TREE_OPERAND (name, 1);\n-\t  gcc_assert (CLASS_TYPE_P (scope)\n-\t\t      || TREE_CODE (scope) == NAMESPACE_DECL);\n-\t  gcc_assert (TREE_CODE (name) == IDENTIFIER_NODE\n-\t\t      || TREE_CODE (name) == BIT_NOT_EXPR);\n \n \t  /* If SCOPE is a namespace, then the qualified name does not\n \t     name a member of OBJECT_TYPE.  */\n@@ -2066,6 +2061,10 @@ finish_class_member_access_expr (tree object, tree name, bool template_p)\n \t      return error_mark_node;\n \t    }\n \n+\t  gcc_assert (CLASS_TYPE_P (scope));\n+\t  gcc_assert (TREE_CODE (name) == IDENTIFIER_NODE\n+\t\t      || TREE_CODE (name) == BIT_NOT_EXPR);\n+\n \t  /* Find the base of OBJECT_TYPE corresponding to SCOPE.  */\n \t  access_path = lookup_base (object_type, scope, ba_check, NULL);\n \t  if (access_path == error_mark_node)"}, {"sha": "8aa7f6793e73421b543864c972efdd5364af8030", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13d2b4e53067e117eb250bbf39c948ec6bd48e6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13d2b4e53067e117eb250bbf39c948ec6bd48e6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e13d2b4e53067e117eb250bbf39c948ec6bd48e6", "patch": "@@ -1,3 +1,8 @@\n+2006-04-16  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/26365\n+\t* g++.dg/template/crash45.C: New test.\n+\n 2006-04-16  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/26787"}, {"sha": "f138e3d6169fcb9380f6b98576dcbdee7a55171c", "filename": "gcc/testsuite/g++.dg/template/crash45.C", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13d2b4e53067e117eb250bbf39c948ec6bd48e6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash45.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13d2b4e53067e117eb250bbf39c948ec6bd48e6/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash45.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash45.C?ref=e13d2b4e53067e117eb250bbf39c948ec6bd48e6", "patch": "@@ -0,0 +1,13 @@\n+// PR c++/26365\n+\n+struct A {};\n+\n+namespace N\n+{\n+  template<int> void foo();\n+}\n+\n+void bar(A *p)\n+{\n+  p->N::foo<0>; // { dg-error \"not a member\" } \n+}"}]}