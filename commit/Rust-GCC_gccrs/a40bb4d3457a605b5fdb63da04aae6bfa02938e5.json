{"sha": "a40bb4d3457a605b5fdb63da04aae6bfa02938e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQwYmI0ZDM0NTdhNjA1YjVmZGI2M2RhMDRhYWU2YmZhMDI5MzhlNQ==", "commit": {"author": {"name": "Toon Moene", "email": "toon@moene.indiv.nluug.nl", "date": "2000-12-09T15:34:53Z"}, "committer": {"name": "Toon Moene", "email": "toon@gcc.gnu.org", "date": "2000-12-09T15:34:53Z"}, "message": "Update to Netlib version 20001205.\n\n2000-12-09  Toon Moene  <toon@moene.indiv.nluug.nl>\n\n\tUpdate to Netlib version 20001205.\n\tThanks go to David M. Gay for these updates.\n\n\t* libF77/Version.c: Update version information.\n\t* libF77/z_log.c: Improve accuracy of real(log(z)) for\n\tz near (+-1,eps) with |eps| small.\n\t* libF77/s_cat.c: Adjust call when ftnint and ftnlen are\n\tof different size.\n\t* libF77/dtime_.c, libF77/etime_.c: Use floating point divide.\n\n\t* libI77/Version.c: Update version information.\n\t* libI77/rsne.c, libI77/xwsne.c: Adjust code for when ftnint\n\tand ftnlen differ in size.\n\t* libI77/lread.c: Fix reading of namelist logical values followed\n\tby <name>= where <name> starts with T or F.\n\nFrom-SVN: r38152", "tree": {"sha": "e96069addc998cc95cee16e821cf01a3d8ae6b6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e96069addc998cc95cee16e821cf01a3d8ae6b6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a40bb4d3457a605b5fdb63da04aae6bfa02938e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40bb4d3457a605b5fdb63da04aae6bfa02938e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a40bb4d3457a605b5fdb63da04aae6bfa02938e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/comments", "author": null, "committer": null, "parents": [{"sha": "976654912051f4b6680973c01da45c3697645f24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/976654912051f4b6680973c01da45c3697645f24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/976654912051f4b6680973c01da45c3697645f24"}], "stats": {"total": 211, "additions": 193, "deletions": 18}, "files": [{"sha": "0b6e261d3bc7119f86c447026a540457991ab863", "filename": "libf2c/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FChangeLog?ref=a40bb4d3457a605b5fdb63da04aae6bfa02938e5", "patch": "@@ -1,3 +1,21 @@\n+2000-12-09  Toon Moene  <toon@moene.indiv.nluug.nl>\n+\n+\tUpdate to Netlib version 20001205.\n+\tThanks go to David M. Gay for these updates.\n+\n+\t* libF77/Version.c: Update version information.\n+\t* libF77/z_log.c: Improve accuracy of real(log(z)) for\n+\tz near (+-1,eps) with |eps| small.\n+\t* libF77/s_cat.c: Adjust call when ftnint and ftnlen are\n+\tof different size.\n+\t* libF77/dtime_.c, libF77/etime_.c: Use floating point divide.\n+\n+\t* libI77/Version.c: Update version information.\n+\t* libI77/rsne.c, libI77/xwsne.c: Adjust code for when ftnint\n+\tand ftnlen differ in size.\n+\t* libI77/lread.c: Fix reading of namelist logical values followed\n+\tby <name>= where <name> starts with T or F.\n+\n 2000-11-26  Toon Moene  <toon@moene.indiv.nluug.nl>\n \n \t* libI77/Version.c, libF77/Version.c, libU77/Version.c:"}, {"sha": "aa32ebfc4e6641b29294680daa9ce766d7c4fbba", "filename": "libf2c/libF77/Version.c", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FlibF77%2FVersion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FlibF77%2FVersion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2FVersion.c?ref=a40bb4d3457a605b5fdb63da04aae6bfa02938e5", "patch": "@@ -1,4 +1,4 @@\n-static char junk[] = \"\\n@(#)LIBF77 VERSION 19991115\\n\";\n+static char junk[] = \"\\n@(#)LIBF77 VERSION 20000929\\n\";\n \n /*\n */\n@@ -69,6 +69,17 @@ char __G77_LIBF77_VERSION__[] = \"0.5.26 20001209 (experimental)\";\n \t\t\talso vanishes or not.  VERSION not changed.\n \t15 Nov. 1999: s_rnge.c: add casts for the case of\n \t\t\tsizeof(ftnint) == sizeof(int) < sizeof(long).\n+\t10 March 2000: z_log.c: improve accuracy of Real(log(z)) for, e.g.,\n+\t\t\tz near (+-1,eps) with |eps| small.  For the old\n+\t\t\tevaluation, compile with -DPre20000310 .\n+\t20 April 2000: s_cat.c: tweak argument types to accord with\n+\t\t\tcalls by f2c when ftnint and ftnlen are of\n+\t\t\tdifferent sizes (different numbers of bits).\n+\t4 July 2000: adjustments to permit compilation by C++ compilers;\n+\t\t\tVERSION string remains unchanged. NOT APPLIED FOR G77.\n+\t29 Sept. 2000: dtime_.c, etime_.c: use floating-point divide.\n+\t\t\tdtime_.d, erf_.c, erfc_.c, etime.c: for use with\n+\t\t\t\"f2c -R\", compile with -DREAL=float.\n */\n \n #include <stdio.h>"}, {"sha": "e2c3a03cb7ad4f76f0eaf2abf988be0eff71f154", "filename": "libf2c/libF77/dtime_.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FlibF77%2Fdtime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FlibF77%2Fdtime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fdtime_.c?ref=a40bb4d3457a605b5fdb63da04aae6bfa02938e5", "patch": "@@ -45,8 +45,8 @@ dtime_(float *tarray)\n \tstatic struct tms t0;\n \n \ttimes(&t);\n-\ttarray[0] = (t.tms_utime - t0.tms_utime) / Hz;\n-\ttarray[1] = (t.tms_stime - t0.tms_stime) / Hz;\n+\ttarray[0] = (double)(t.tms_utime - t0.tms_utime) / Hz;\n+\ttarray[1] = (double)(t.tms_stime - t0.tms_stime) / Hz;\n \tt0 = t;\n \treturn tarray[0] + tarray[1];\n #endif"}, {"sha": "0c3209d26126cff4ac1cf90099c98639bd77b09f", "filename": "libf2c/libF77/etime_.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FlibF77%2Fetime_.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FlibF77%2Fetime_.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fetime_.c?ref=a40bb4d3457a605b5fdb63da04aae6bfa02938e5", "patch": "@@ -41,6 +41,7 @@ etime_(float *tarray)\n \tstruct tms t;\n \n \ttimes(&t);\n-\treturn (tarray[0] = t.tms_utime/Hz) + (tarray[1] = t.tms_stime/Hz);\n+\treturn\t  (tarray[0] = (double)t.tms_utime/Hz)\n+\t\t+ (tarray[1] = (double)t.tms_stime/Hz);\n #endif\n \t}"}, {"sha": "77a94f64745347e0ce0278447200cb445dbdd4da", "filename": "libf2c/libF77/s_cat.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FlibF77%2Fs_cat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FlibF77%2Fs_cat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fs_cat.c?ref=a40bb4d3457a605b5fdb63da04aae6bfa02938e5", "patch": "@@ -22,9 +22,9 @@\n \n  VOID\n #ifdef KR_headers\n-s_cat(lp, rpp, rnp, np, ll) char *lp, *rpp[]; ftnlen rnp[], *np, ll;\n+s_cat(lp, rpp, rnp, np, ll) char *lp, *rpp[]; ftnint rnp[], *np; ftnlen ll;\n #else\n-s_cat(char *lp, char *rpp[], ftnlen rnp[], ftnlen *np, ftnlen ll)\n+s_cat(char *lp, char *rpp[], ftnint rnp[], ftnint *np, ftnlen ll)\n #endif\n {\n \tftnlen i, nc;"}, {"sha": "9dcc7f73fe5da8d1196d9fd2ad12a161cf6f9ea9", "filename": "libf2c/libF77/z_log.c", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FlibF77%2Fz_log.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FlibF77%2Fz_log.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibF77%2Fz_log.c?ref=a40bb4d3457a605b5fdb63da04aae6bfa02938e5", "patch": "@@ -10,7 +10,54 @@ extern double f__cabs(double, double);\n void z_log(doublecomplex *r, doublecomplex *z)\n #endif\n {\n+\tdouble s, s0, t, t2, u, v;\n \tdouble zi = z->i, zr = z->r;\n+\n \tr->i = atan2(zi, zr);\n+#ifdef Pre20000310\n \tr->r = log( f__cabs( zr, zi ) );\n+#else\n+\tif (zi < 0)\n+\t\tzi = -zi;\n+\tif (zr < 0)\n+\t\tzr = -zr;\n+\tif (zr < zi) {\n+\t\tt = zi;\n+\t\tzi = zr;\n+\t\tzr = t;\n+\t\t}\n+\tt = zi/zr;\n+\ts = zr * sqrt(1 + t*t);\n+\t/* now s = f__cabs(zi,zr), and zr = |zr| >= |zi| = zi */\n+\tif ((t = s - 1) < 0)\n+\t\tt = -t;\n+\tif (t > .01)\n+\t\tr->r = log(s);\n+\telse {\n+\n+#ifdef Comment\n+\n+\tlog(1+x) = x - x^2/2 + x^3/3 - x^4/4 + - ...\n+\n+\t\t = x(1 - x/2 + x^2/3 -+...)\n+\n+\t[sqrt(y^2 + z^2) - 1] * [sqrt(y^2 + z^2) + 1] = y^2 + z^2 - 1, so\n+\n+\tsqrt(y^2 + z^2) - 1 = (y^2 + z^2 - 1) / [sqrt(y^2 + z^2) + 1]\n+\n+#endif /*Comment*/\n+\n+\t\tt = ((zr*zr - 1.) + zi*zi) / (s + 1);\n+\t\tt2 = t*t;\n+\t\ts = 1. - 0.5*t;\n+\t\tu = v = 1;\n+\t\tdo {\n+\t\t\ts0 = s;\n+\t\t\tu *= t2;\n+\t\t\tv += 2;\n+\t\t\ts += u/v - t*u/(v+1);\n+\t\t\t} while(s > s0);\n+\t\tr->r = s*t;\n+\t\t}\n+#endif\n \t}"}, {"sha": "1d994a1318dd870058886392fad84b930a58a19b", "filename": "libf2c/libI77/Version.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FlibI77%2FVersion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FlibI77%2FVersion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2FVersion.c?ref=a40bb4d3457a605b5fdb63da04aae6bfa02938e5", "patch": "@@ -1,4 +1,4 @@\n-static char junk[] = \"\\n@(#) LIBI77 VERSION pjw,dmg-mods 19991115\\n\";\n+static char junk[] = \"\\n@(#) LIBI77 VERSION pjw,dmg-mods 20001205\\n\";\n \n /*\n */\n@@ -314,6 +314,15 @@ wrtfmt.c:\n /*\t\tCompiling libf2c with -DALWAYS_FLUSH should prevent losing */\n /*\t\tany data in buffers should the program fault.  It also */\n /*\t\tmakes the program run more slowly. */\n+/* 20 April 2000: rsne.c, xwsne.c: tweaks that only matter if ftnint and */\n+/*\t\tftnlen are of different fundamental types (different numbers */\n+/*\t\tof bits).  Since these files will not compile when this */\n+/*\t\tchange matters, the above VERSION string remains unchanged. */\n+/* 4 July 2000: adjustments to permit compilation by C++ compilers; */\n+/*\t\tVERSION string remains unchanged. NOT APPLIED FOR G77 */\n+/* 5 Dec. 2000: lread.c: under namelist input, when reading a logical array, */\n+/*\t\ttreat Tstuff= and Fstuff= as new assignments rather than as */\n+/*\t\tlogical constants. */\n \n \n "}, {"sha": "4b62a5cbadfb1a6630d5e07b93a3657a788ecf98", "filename": "libf2c/libI77/lread.c", "status": "modified", "additions": 93, "deletions": 3, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FlibI77%2Flread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FlibI77%2Flread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Flread.c?ref=a40bb4d3457a605b5fdb63da04aae6bfa02938e5", "patch": "@@ -339,11 +339,93 @@ l_C(Void)\n \treturn(0);\n }\n \n+ static char nmLbuf[256], *nmL_next;\n+ static int (*nmL_getc_save)(Void);\n+#ifdef KR_headers\n+ static int (*nmL_ungetc_save)(/* int, FILE* */);\n+#else\n+ static int (*nmL_ungetc_save)(int, FILE*);\n+#endif\n+\n+ static int\n+nmL_getc(Void)\n+{\n+\tint rv;\n+\tif (rv = *nmL_next++)\n+\t\treturn rv;\n+\tl_getc = nmL_getc_save;\n+\tl_ungetc = nmL_ungetc_save;\n+\treturn (*l_getc)();\n+\t}\n+\n+ static int\n+#ifdef KR_headers\n+nmL_ungetc(x, f) int x; FILE *f;\n+#else\n+nmL_ungetc(int x, FILE *f)\n+#endif\n+{\n+\tf = f;\t/* banish non-use warning */\n+\treturn *--nmL_next = x;\n+\t}\n+\n+ static int\n+#ifdef KR_headers\n+Lfinish(ch, dot, rvp) int ch, dot, *rvp;\n+#else\n+Lfinish(int ch, int dot, int *rvp)\n+#endif\n+{\n+\tchar *s, *se;\n+\tstatic char what[] = \"namelist input\";\n+\n+\ts = nmLbuf + 2;\n+\tse = nmLbuf + sizeof(nmLbuf) - 1;\n+\t*s++ = ch;\n+\twhile(!issep(GETC(ch)) && ch!=EOF) {\n+\t\tif (s >= se) {\n+ nmLbuf_ovfl:\n+\t\t\treturn *rvp = err__fl(f__elist->cierr,131,what);\n+\t\t\t}\n+\t\t*s++ = ch;\n+\t\tif (ch != '=')\n+\t\t\tcontinue;\n+\t\tif (dot)\n+\t\t\treturn *rvp = err__fl(f__elist->cierr,112,what);\n+ got_eq:\n+\t\t*s = 0;\n+\t\tnmL_getc_save = l_getc;\n+\t\tl_getc = nmL_getc;\n+\t\tnmL_ungetc_save = l_ungetc;\n+\t\tl_ungetc = nmL_ungetc;\n+\t\tnmLbuf[1] = *(nmL_next = nmLbuf) = ',';\n+\t\t*rvp = f__lcount = 0;\n+\t\treturn 1;\n+\t\t}\n+\tif (dot)\n+\t\tgoto done;\n+\tfor(;;) {\n+\t\tif (s >= se)\n+\t\t\tgoto nmLbuf_ovfl;\n+\t\t*s++ = ch;\n+\t\tif (!isblnk(ch))\n+\t\t\tbreak;\n+\t\tif (GETC(ch) == EOF)\n+\t\t\tgoto done;\n+\t\t}\n+\tif (ch == '=')\n+\t\tgoto got_eq;\n+ done:\n+\tUngetc(ch, f__cf);\n+\treturn 0;\n+\t}\n+\n  static int\n l_L(Void)\n {\n-\tint ch;\n-\tif(f__lcount>0) return(0);\n+\tint ch, rv, sawdot;\n+\tif(f__lcount>0)\n+\t\treturn(0);\n \tf__lcount = 1;\n \tf__ltype=0;\n \tGETC(ch);\n@@ -357,15 +439,23 @@ l_L(Void)\n \t\t\t\terr(f__elist->cierr,(EOF),\"lread\");\n \t\tGETC(ch);\n \t}\n-\tif(ch == '.') GETC(ch);\n+\tsawdot = 0;\n+\tif(ch == '.') {\n+\t\tsawdot = 1;\n+\t\tGETC(ch);\n+\t\t}\n \tswitch(ch)\n \t{\n \tcase 't':\n \tcase 'T':\n+\t\tif (nml_read && Lfinish(ch, sawdot, &rv))\n+\t\t\treturn rv;\n \t\tf__lx=1;\n \t\tbreak;\n \tcase 'f':\n \tcase 'F':\n+\t\tif (nml_read && Lfinish(ch, sawdot, &rv))\n+\t\t\treturn rv;\n \t\tf__lx=0;\n \t\tbreak;\n \tdefault:"}, {"sha": "77ffdf70bd2227abdb3c9e3084f09caf6705bded", "filename": "libf2c/libI77/rsne.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FlibI77%2Frsne.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FlibI77%2Frsne.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Frsne.c?ref=a40bb4d3457a605b5fdb63da04aae6bfa02938e5", "patch": "@@ -302,8 +302,8 @@ x_rsne(cilist *a)\n \tVardesc *v;\n \tdimen *dn, *dn0, *dn1;\n \tftnlen *dims, *dims1;\n-\tftnlen b, b0, b1, ex, no, no1, nomax, size, span;\n-\tftnint type;\n+\tftnlen b, b0, b1, ex, no, nomax, size, span;\n+\tftnint no1, type;\n \tchar *vaddr;\n \tlong iva, ivae;\n \tdimen dimens[MAXDIM], substr;\n@@ -338,7 +338,7 @@ x_rsne(cilist *a)\n #endif\n \t\t}\n  have_amp:\n-\tif (ch = getname(buf,(int) sizeof(buf)))\n+\tif (ch = getname(buf,sizeof(buf)))\n \t\treturn ch;\n \tnl = (Namelist *)a->cifmt;\n \tif (strcmp(buf, nl->name))\n@@ -393,7 +393,7 @@ x_rsne(cilist *a)\n \t\t\t\tif (ch <= ' ' && ch >= 0 || ch == ',')\n \t\t\t\t\tcontinue;\n \t\t\t\tUngetc(ch,f__cf);\n-\t\t\t\tif (ch = getname(buf,(int) sizeof(buf)))\n+\t\t\t\tif (ch = getname(buf,sizeof(buf)))\n \t\t\t\t\treturn ch;\n \t\t\t\tgoto havename;\n \t\t\t}"}, {"sha": "babec4753251d71448cd7d2cd42bc491901a2431", "filename": "libf2c/libI77/xwsne.c", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FlibI77%2Fxwsne.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a40bb4d3457a605b5fdb63da04aae6bfa02938e5/libf2c%2FlibI77%2Fxwsne.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libf2c%2FlibI77%2Fxwsne.c?ref=a40bb4d3457a605b5fdb63da04aae6bfa02938e5", "patch": "@@ -24,10 +24,9 @@ x_wsne(cilist *a)\n \tNamelist *nl;\n \tchar *s;\n \tVardesc *v, **vd, **vde;\n-\tftnint *number, type;\n+\tftnint number, type;\n \tftnlen *dims;\n \tftnlen size;\n-\tstatic ftnint one = 1;\n \textern ftnlen f__typesize[];\n \n \tnl = (Namelist *)a->cifmt;\n@@ -49,15 +48,15 @@ x_wsne(cilist *a)\n \t\t\tPUT(*s++);\n \t\tPUT(' ');\n \t\tPUT('=');\n-\t\tnumber = (dims = v->dims) ? dims + 1 : &one;\n+\t\tnumber = (dims = v->dims) ? dims[1] : 1;\n \t\ttype = v->type;\n \t\tif (type < 0) {\n \t\t\tsize = -type;\n \t\t\ttype = TYCHAR;\n \t\t\t}\n \t\telse\n \t\t\tsize = f__typesize[type];\n-\t\tl_write(number, v->addr, size, type);\n+\t\tl_write(&number, v->addr, size, type);\n \t\tif (vd < vde) {\n \t\t\tif (f__recpos+2 >= L_len)\n \t\t\t\tnl_donewrec();"}]}