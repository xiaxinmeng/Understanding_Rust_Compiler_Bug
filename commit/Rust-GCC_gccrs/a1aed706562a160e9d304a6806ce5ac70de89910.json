{"sha": "a1aed706562a160e9d304a6806ce5ac70de89910", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFhZWQ3MDY1NjJhMTYwZTlkMzA0YTY4MDZjZTVhYzcwZGU4OTkxMA==", "commit": {"author": {"name": "Adrian Straetling", "email": "straetling@de.ibm.com", "date": "2005-05-13T12:21:01Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2005-05-13T12:21:01Z"}, "message": "s390.md: (\"DBL\"): New mode attribute.\n\n2005-05-13  Adrian Straetling  <straetling@de.ibm.com>\n\n\t* config/s390.md: (\"DBL\"): New mode attribute.\n\t(\"*movmem_long_64\", \"*movmem_long_31\"): Merge to \"*movmem_long\".\n\t(\"*clrmem_long_64\", \"*clrmem_long_31\"): Merge to \"*clrmem_long\".\n\t(\"*cmpmem_long_64\", \"*cmpmem_long_31\"): Merge to \"*cmpmem_long\".\n\nFrom-SVN: r99654", "tree": {"sha": "36f7eda908e02cda38aff002225706531b970997", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36f7eda908e02cda38aff002225706531b970997"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1aed706562a160e9d304a6806ce5ac70de89910", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1aed706562a160e9d304a6806ce5ac70de89910", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1aed706562a160e9d304a6806ce5ac70de89910", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1aed706562a160e9d304a6806ce5ac70de89910/comments", "author": null, "committer": null, "parents": [{"sha": "f5c9a09777ebdaa3fd74d356e00c1777d2610cd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5c9a09777ebdaa3fd74d356e00c1777d2610cd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5c9a09777ebdaa3fd74d356e00c1777d2610cd4"}], "stats": {"total": 83, "additions": 28, "deletions": 55}, "files": [{"sha": "00f3607a13f8e5571fa52e4a58a4c7437d984dbf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1aed706562a160e9d304a6806ce5ac70de89910/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1aed706562a160e9d304a6806ce5ac70de89910/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a1aed706562a160e9d304a6806ce5ac70de89910", "patch": "@@ -1,3 +1,10 @@\n+2005-05-13  Adrian Straetling  <straetling@de.ibm.com>\n+\n+\t* config/s390.md: (\"DBL\"): New mode attribute.\n+\t(\"*movmem_long_64\", \"*movmem_long_31\"): Merge to \"*movmem_long\".\n+\t(\"*clrmem_long_64\", \"*clrmem_long_31\"): Merge to \"*clrmem_long\".\n+\t(\"*cmpmem_long_64\", \"*cmpmem_long_31\"): Merge to \"*cmpmem_long\".\n+\n 2005-05-13  Richard Guenther  <rguenth@gcc.gnu.org>\n \n \t* c-format.c (check_format_arg): Handle string literals of"}, {"sha": "93f805ed7f99502cd2fe40f5f9c903270548f520", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 21, "deletions": 55, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1aed706562a160e9d304a6806ce5ac70de89910/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1aed706562a160e9d304a6806ce5ac70de89910/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=a1aed706562a160e9d304a6806ce5ac70de89910", "patch": "@@ -329,6 +329,10 @@\n ;; HImode and \"llgc\" in QImode.\n (define_mode_attr hc [(HI \"h\") (QI \"c\")])\n \n+;; In P templates, the mode <DBL> will expand to \"TI\" in DImode and \"DI\"\n+;; in SImode.\n+(define_mode_attr DBL [(DI \"TI\") (SI \"DI\")])\n+\n ;; Maximum unsigned integer that fits in MODE.\n (define_mode_attr max_uint [(HI \"65535\") (QI \"255\")])\n \n@@ -1897,28 +1901,15 @@\n   operands[3] = reg1;\n })\n \n-(define_insn \"*movmem_long_64\"\n-  [(clobber (match_operand:TI 0 \"register_operand\" \"=d\"))\n-   (clobber (match_operand:TI 1 \"register_operand\" \"=d\"))\n-   (set (mem:BLK (subreg:DI (match_operand:TI 2 \"register_operand\" \"0\") 0))\n-        (mem:BLK (subreg:DI (match_operand:TI 3 \"register_operand\" \"1\") 0)))\n-   (use (match_dup 2))\n-   (use (match_dup 3))\n-   (clobber (reg:CC CC_REGNUM))]\n-  \"TARGET_64BIT\"\n-  \"mvcle\\t%0,%1,0\\;jo\\t.-4\"\n-  [(set_attr \"length\" \"8\")\n-   (set_attr \"type\" \"vs\")])\n-\n-(define_insn \"*movmem_long_31\"\n-  [(clobber (match_operand:DI 0 \"register_operand\" \"=d\"))\n-   (clobber (match_operand:DI 1 \"register_operand\" \"=d\"))\n-   (set (mem:BLK (subreg:SI (match_operand:DI 2 \"register_operand\" \"0\") 0))\n-        (mem:BLK (subreg:SI (match_operand:DI 3 \"register_operand\" \"1\") 0)))\n+(define_insn \"*movmem_long\"\n+  [(clobber (match_operand:<DBL> 0 \"register_operand\" \"=d\"))\n+   (clobber (match_operand:<DBL> 1 \"register_operand\" \"=d\"))\n+   (set (mem:BLK (subreg:P (match_operand:<DBL> 2 \"register_operand\" \"0\") 0))\n+        (mem:BLK (subreg:P (match_operand:<DBL> 3 \"register_operand\" \"1\") 0)))\n    (use (match_dup 2))\n    (use (match_dup 3))\n    (clobber (reg:CC CC_REGNUM))]\n-  \"!TARGET_64BIT\"\n+  \"\"\n   \"mvcle\\t%0,%1,0\\;jo\\t.-4\"\n   [(set_attr \"length\" \"8\")\n    (set_attr \"type\" \"vs\")])\n@@ -2037,26 +2028,14 @@\n   operands[2] = reg1;\n })\n \n-(define_insn \"*clrmem_long_64\"\n-  [(clobber (match_operand:TI 0 \"register_operand\" \"=d\"))\n-   (set (mem:BLK (subreg:DI (match_operand:TI 2 \"register_operand\" \"0\") 0))\n+(define_insn \"*clrmem_long\"\n+  [(clobber (match_operand:<DBL> 0 \"register_operand\" \"=d\"))\n+   (set (mem:BLK (subreg:P (match_operand:<DBL> 2 \"register_operand\" \"0\") 0))\n         (const_int 0))\n    (use (match_dup 2))\n-   (use (match_operand:TI 1 \"register_operand\" \"d\"))\n+   (use (match_operand:<DBL> 1 \"register_operand\" \"d\"))\n    (clobber (reg:CC CC_REGNUM))]\n-  \"TARGET_64BIT\"\n-  \"mvcle\\t%0,%1,0\\;jo\\t.-4\"\n-  [(set_attr \"length\" \"8\")\n-   (set_attr \"type\" \"vs\")])\n-\n-(define_insn \"*clrmem_long_31\"\n-  [(clobber (match_operand:DI 0 \"register_operand\" \"=d\"))\n-   (set (mem:BLK (subreg:SI (match_operand:DI 2 \"register_operand\" \"0\") 0))\n-        (const_int 0))\n-   (use (match_dup 2))\n-   (use (match_operand:DI 1 \"register_operand\" \"d\"))\n-   (clobber (reg:CC CC_REGNUM))]\n-  \"!TARGET_64BIT\"\n+  \"\"\n   \"mvcle\\t%0,%1,0\\;jo\\t.-4\"\n   [(set_attr \"length\" \"8\")\n    (set_attr \"type\" \"vs\")])\n@@ -2180,28 +2159,15 @@\n   operands[3] = reg1;\n })\n \n-(define_insn \"*cmpmem_long_64\"\n-  [(clobber (match_operand:TI 0 \"register_operand\" \"=d\"))\n-   (clobber (match_operand:TI 1 \"register_operand\" \"=d\"))\n+(define_insn \"*cmpmem_long\"\n+  [(clobber (match_operand:<DBL> 0 \"register_operand\" \"=d\"))\n+   (clobber (match_operand:<DBL> 1 \"register_operand\" \"=d\"))\n    (set (reg:CCU CC_REGNUM)\n-        (compare:CCU (mem:BLK (subreg:DI (match_operand:TI 2 \"register_operand\" \"0\") 0))\n-                     (mem:BLK (subreg:DI (match_operand:TI 3 \"register_operand\" \"1\") 0))))\n+        (compare:CCU (mem:BLK (subreg:P (match_operand:<DBL> 2 \"register_operand\" \"0\") 0))\n+                     (mem:BLK (subreg:P (match_operand:<DBL> 3 \"register_operand\" \"1\") 0))))\n    (use (match_dup 2))\n    (use (match_dup 3))]\n-  \"TARGET_64BIT\"\n-  \"clcle\\t%0,%1,0\\;jo\\t.-4\"\n-  [(set_attr \"length\" \"8\")\n-   (set_attr \"type\" \"vs\")])\n-\n-(define_insn \"*cmpmem_long_31\"\n-  [(clobber (match_operand:DI 0 \"register_operand\" \"=d\"))\n-   (clobber (match_operand:DI 1 \"register_operand\" \"=d\"))\n-   (set (reg:CCU CC_REGNUM)\n-        (compare:CCU (mem:BLK (subreg:SI (match_operand:DI 2 \"register_operand\" \"0\") 0))\n-                     (mem:BLK (subreg:SI (match_operand:DI 3 \"register_operand\" \"1\") 0))))\n-   (use (match_dup 2))\n-   (use (match_dup 3))]\n-  \"!TARGET_64BIT\"\n+  \"\"\n   \"clcle\\t%0,%1,0\\;jo\\t.-4\"\n   [(set_attr \"length\" \"8\")\n    (set_attr \"type\" \"vs\")])"}]}