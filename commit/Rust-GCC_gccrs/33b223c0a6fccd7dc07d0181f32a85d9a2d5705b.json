{"sha": "33b223c0a6fccd7dc07d0181f32a85d9a2d5705b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzNiMjIzYzBhNmZjY2Q3ZGMwN2QwMTgxZjMyYTg1ZDlhMmQ1NzA1Yg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-04-27T08:26:40Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-04-27T08:26:40Z"}, "message": "tree-flow-inline.h (function_ann): Remove.\n\n2009-04-27  Richard Guenther  <rguenther@suse.de>\n\n\t* tree-flow-inline.h (function_ann): Remove.\n\t(get_function_ann): Likewise.\n\t* tree-dfa.c (create_function_ann): Remove.\n\t* tree-flow.h (struct static_var_ann_d): Remove.\n\t(struct function_ann_d): Likewise.\n\t(union tree_ann_d): Remove fdecl member.\n\t(function_ann_t): Remove.\n\t(function_ann, get_function_ann, create_function_ann): Remove\n\tdeclarations.\n\nFrom-SVN: r146828", "tree": {"sha": "7bd96046e8e540d4d965847fd834d09264a8bb2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7bd96046e8e540d4d965847fd834d09264a8bb2f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/33b223c0a6fccd7dc07d0181f32a85d9a2d5705b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33b223c0a6fccd7dc07d0181f32a85d9a2d5705b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/33b223c0a6fccd7dc07d0181f32a85d9a2d5705b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/33b223c0a6fccd7dc07d0181f32a85d9a2d5705b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e3136fa27deb0cc0509b1960e89e8a3e2ae1afd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e3136fa27deb0cc0509b1960e89e8a3e2ae1afd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e3136fa27deb0cc0509b1960e89e8a3e2ae1afd2"}], "stats": {"total": 74, "additions": 12, "deletions": 62}, "files": [{"sha": "849123e802b121f173e7d0a9b9e885ef25d56b1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33b223c0a6fccd7dc07d0181f32a85d9a2d5705b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33b223c0a6fccd7dc07d0181f32a85d9a2d5705b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=33b223c0a6fccd7dc07d0181f32a85d9a2d5705b", "patch": "@@ -1,3 +1,15 @@\n+2009-04-27  Richard Guenther  <rguenther@suse.de>\n+\n+\t* tree-flow-inline.h (function_ann): Remove.\n+\t(get_function_ann): Likewise.\n+\t* tree-dfa.c (create_function_ann): Remove.\n+\t* tree-flow.h (struct static_var_ann_d): Remove.\n+\t(struct function_ann_d): Likewise.\n+\t(union tree_ann_d): Remove fdecl member.\n+\t(function_ann_t): Remove.\n+\t(function_ann, get_function_ann, create_function_ann): Remove\n+\tdeclarations.\n+\n 2009-04-27  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/alpha/alpha.c (code_for_builtin): Declare as enum insn_code."}, {"sha": "d00324a348e0c5d5727e10e0ac76906419d0e57d", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33b223c0a6fccd7dc07d0181f32a85d9a2d5705b/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33b223c0a6fccd7dc07d0181f32a85d9a2d5705b/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=33b223c0a6fccd7dc07d0181f32a85d9a2d5705b", "patch": "@@ -138,27 +138,6 @@ create_var_ann (tree t)\n   return ann;\n }\n \n-/* Create a new annotation for a FUNCTION_DECL node T.  */\n-\n-function_ann_t\n-create_function_ann (tree t)\n-{\n-  function_ann_t ann;\n-\n-  gcc_assert (t);\n-  gcc_assert (TREE_CODE (t) == FUNCTION_DECL);\n-  gcc_assert (!t->base.ann || t->base.ann->common.type == FUNCTION_ANN);\n-\n-  ann = (function_ann_t) ggc_alloc (sizeof (*ann));\n-  memset ((void *) ann, 0, sizeof (*ann));\n-\n-  ann->common.type = FUNCTION_ANN;\n-\n-  t->base.ann = (tree_ann_t) ann;\n-\n-  return ann;\n-}\n-\n /* Renumber all of the gimple stmt uids.  */\n \n void "}, {"sha": "6a1ae4ce7db6666a1a26199f1c35afe3d8de202c", "filename": "gcc/tree-flow-inline.h", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33b223c0a6fccd7dc07d0181f32a85d9a2d5705b/gcc%2Ftree-flow-inline.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33b223c0a6fccd7dc07d0181f32a85d9a2d5705b/gcc%2Ftree-flow-inline.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow-inline.h?ref=33b223c0a6fccd7dc07d0181f32a85d9a2d5705b", "patch": "@@ -172,29 +172,6 @@ get_var_ann (tree var)\n   return (ann) ? ann : create_var_ann (var);\n }\n \n-/* Return the function annotation for T, which must be a FUNCTION_DECL node.\n-   Return NULL if the function annotation doesn't already exist.  */\n-static inline function_ann_t\n-function_ann (const_tree t)\n-{\n-  gcc_assert (t);\n-  gcc_assert (TREE_CODE (t) == FUNCTION_DECL);\n-  gcc_assert (!t->base.ann\n-\t      || t->base.ann->common.type == FUNCTION_ANN);\n-\n-  return (function_ann_t) t->base.ann;\n-}\n-\n-/* Return the function annotation for T, which must be a FUNCTION_DECL node.\n-   Create the function annotation if it doesn't exist.  */\n-static inline function_ann_t\n-get_function_ann (tree var)\n-{\n-  function_ann_t ann = function_ann (var);\n-  gcc_assert (!var->base.ann || var->base.ann->common.type == FUNCTION_ANN);\n-  return (ann) ? ann : create_function_ann (var);\n-}\n-\n /* Get the number of the next statement uid to be allocated.  */\n static inline unsigned int\n gimple_stmt_max_uid (struct function *fn)"}, {"sha": "5fe75391ad752c50417777a52d95524242e8791b", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/33b223c0a6fccd7dc07d0181f32a85d9a2d5705b/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/33b223c0a6fccd7dc07d0181f32a85d9a2d5705b/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=33b223c0a6fccd7dc07d0181f32a85d9a2d5705b", "patch": "@@ -32,8 +32,6 @@ along with GCC; see the file COPYING3.  If not see\n #include \"ipa-reference.h\"\n #include \"tree-ssa-alias.h\"\n \n-struct static_var_ann_d;\n-\n \n /* Gimple dataflow datastructure. All publicly available fields shall have\n    gimple_ accessor defined in tree-flow-inline.h, all publicly modifiable\n@@ -221,17 +219,6 @@ struct GTY(()) var_ann_d {\n   tree current_def;\n };\n \n-/* Container for variable annotation used by hashtable for annotations for\n-   static variables.  */\n-struct GTY(()) static_var_ann_d {\n-  struct var_ann_d ann;\n-  unsigned int uid;\n-};\n-\n-struct GTY(()) function_ann_d {\n-  struct tree_ann_common_d common;\n-};\n-\n \n /* Immediate use lists are used to directly access all uses for an SSA\n    name and get pointers to the statement for each use. \n@@ -330,20 +317,16 @@ typedef struct immediate_use_iterator_d\n union GTY((desc (\"ann_type ((tree_ann_t)&%h)\"))) tree_ann_d {\n   struct tree_ann_common_d GTY((tag (\"TREE_ANN_COMMON\"))) common;\n   struct var_ann_d GTY((tag (\"VAR_ANN\"))) vdecl;\n-  struct function_ann_d GTY((tag (\"FUNCTION_ANN\"))) fdecl;\n };\n \n typedef union tree_ann_d *tree_ann_t;\n typedef struct var_ann_d *var_ann_t;\n-typedef struct function_ann_d *function_ann_t;\n typedef struct tree_ann_common_d *tree_ann_common_t;\n \n static inline tree_ann_common_t tree_common_ann (const_tree);\n static inline tree_ann_common_t get_tree_common_ann (tree);\n static inline var_ann_t var_ann (const_tree);\n static inline var_ann_t get_var_ann (tree);\n-static inline function_ann_t function_ann (const_tree);\n-static inline function_ann_t get_function_ann (tree);\n static inline enum tree_ann_type ann_type (tree_ann_t);\n static inline void update_stmt (gimple);\n static inline int get_lineno (const_gimple);\n@@ -566,7 +549,6 @@ extern const char *op_symbol_code (enum tree_code);\n \n /* In tree-dfa.c  */\n extern var_ann_t create_var_ann (tree);\n-extern function_ann_t create_function_ann (tree);\n extern void renumber_gimple_stmt_uids (void);\n extern tree_ann_common_t create_tree_common_ann (tree);\n extern void dump_dfa_stats (FILE *);"}]}