{"sha": "68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjhiOTJmNzg3ZTUzNGRkMWExZmZmNGUyMzlmZGY5ZTlmNmFlYjg4Yw==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2006-11-02T00:56:38Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2006-11-02T00:56:38Z"}, "message": "configure.ac (HAVE_AS_IX86_DIFF_SECT_DELTA): New test to determine whether the assembler supports taking the difference of...\n\n\n\t* configure.ac (HAVE_AS_IX86_DIFF_SECT_DELTA): New test to determine\n\twhether the assembler supports taking the difference of symbols in\n\tdifferent sections.  On x86/Solaris, GAS does but Solaris as doesn't.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.\n\t* config/i386/sol2-10.h (JUMP_TABLES_IN_TEXT_SECTION): Define if\n\tthe assembler doesn't support taking the difference of symbols in\n\tdifferent sections, i.e. we're using the native solaris assembler.\n\nFrom-SVN: r118405", "tree": {"sha": "b4c4ef2e2161d7f7ffc787b9cd387863c9bd470c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4c4ef2e2161d7f7ffc787b9cd387863c9bd470c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c/comments", "author": null, "committer": null, "parents": [{"sha": "fc354c12ad2ca565b7c45ef7493b43ae85d14f36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc354c12ad2ca565b7c45ef7493b43ae85d14f36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc354c12ad2ca565b7c45ef7493b43ae85d14f36"}], "stats": {"total": 79, "additions": 78, "deletions": 1}, "files": [{"sha": "65fdde091f26cc599723436a656e8a0393458aca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c", "patch": "@@ -1,3 +1,14 @@\n+2006-11-01  Roger Sayle  <roger@eyesopen.com>\n+\n+\t* configure.ac (HAVE_AS_IX86_DIFF_SECT_DELTA): New test to determine\n+\twhether the assembler supports taking the difference of symbols in\n+\tdifferent sections.  On x86/Solaris, GAS does but Solaris as doesn't.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\t* config/i386/sol2-10.h (JUMP_TABLES_IN_TEXT_SECTION): Define if\n+\tthe assembler doesn't support taking the difference of symbols in\n+\tdifferent sections, i.e. we're using the native solaris assembler.\n+\n 2006-11-01  Pete Steinmetz  <steinmtz@us.ibm.com>\n \t    Peter Bergner  <bergner@vnet.ibm.com>\n "}, {"sha": "a8e18bc3bb762ea59c6abd1d56ff3a3a0e0d8e8e", "filename": "gcc/config.in", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c", "patch": "@@ -203,6 +203,13 @@\n #endif\n \n \n+/* Define if your assembler supports the subtraction of symbols in different\n+   sections. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_AS_IX86_DIFF_SECT_DELTA\n+#endif\n+\n+\n /* Define if your assembler supports the ffreep mnemonic. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_IX86_FFREEP"}, {"sha": "587e56fe7fa9351a8373f35c81192e9a5de7f97f", "filename": "gcc/config/i386/sol2-10.h", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c/gcc%2Fconfig%2Fi386%2Fsol2-10.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c/gcc%2Fconfig%2Fi386%2Fsol2-10.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2-10.h?ref=68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c", "patch": "@@ -1,5 +1,5 @@\n /* Solaris 10 configuration.\n-   Copyright (C) 2004 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2006 Free Software Foundation, Inc.\n    Contributed by CodeSourcery, LLC.\n \n This file is part of GCC.\n@@ -34,6 +34,14 @@ Boston, MA 02110-1301, USA.  */\n \t\t \"-s %(asm_cpu)\"\n #endif\n \n+/* The native Solaris assembler can't calculate the difference between\n+   symbols in different sections, which causes problems for -fPIC jump\n+   tables in .rodata.  */\n+#ifndef HAVE_AS_IX86_DIFF_SECT_DELTA\n+#undef JUMP_TABLES_IN_TEXT_SECTION\n+#define JUMP_TABLES_IN_TEXT_SECTION 1\n+#endif\n+\n #undef NO_PROFILE_COUNTERS\n \n #undef MCOUNT_NAME"}, {"sha": "582e37b1a93e87ed7649ec1be3348a700e06a6a4", "filename": "gcc/configure", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c", "patch": "@@ -15251,6 +15251,45 @@ cat >>confdefs.h <<\\_ACEOF\n #define HAVE_AS_IX86_FFREEP 1\n _ACEOF\n \n+fi\n+\n+    echo \"$as_me:$LINENO: checking assembler for different section symbol subtraction\" >&5\n+echo $ECHO_N \"checking assembler for different section symbol subtraction... $ECHO_C\" >&6\n+if test \"${gcc_cv_as_ix86_diff_sect_delta+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  gcc_cv_as_ix86_diff_sect_delta=no\n+  if test x$gcc_cv_as != x; then\n+    echo '.section .rodata\n+.L1:\n+        .long .L2-.L1\n+        .long .L3-.L1\n+        .text\n+.L3:    nop\n+.L2:    nop' > conftest.s\n+    if { ac_try='$gcc_cv_as  -o conftest.o conftest.s >&5'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }\n+    then\n+\tgcc_cv_as_ix86_diff_sect_delta=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+echo \"$as_me:$LINENO: result: $gcc_cv_as_ix86_diff_sect_delta\" >&5\n+echo \"${ECHO_T}$gcc_cv_as_ix86_diff_sect_delta\" >&6\n+if test $gcc_cv_as_ix86_diff_sect_delta = yes; then\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define HAVE_AS_IX86_DIFF_SECT_DELTA 1\n+_ACEOF\n+\n fi\n \n     # This one is used unconditionally by i386.[ch]; it is to be defined"}, {"sha": "b089f607a757eb90cf3806e687b06435d7a18858", "filename": "gcc/configure.ac", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=68b92f787e534dd1a1fff4e239fdf9e9f6aeb88c", "patch": "@@ -2850,6 +2850,18 @@ foo:\tnop\n       [AC_DEFINE(HAVE_AS_IX86_FFREEP, 1,\n         [Define if your assembler supports the ffreep mnemonic.])])\n \n+    gcc_GAS_CHECK_FEATURE([different section symbol subtraction],\n+      gcc_cv_as_ix86_diff_sect_delta,,,\n+      [.section .rodata\n+.L1:\n+        .long .L2-.L1\n+        .long .L3-.L1\n+        .text\n+.L3:    nop\n+.L2:    nop],,\n+      [AC_DEFINE(HAVE_AS_IX86_DIFF_SECT_DELTA, 1,\n+        [Define if your assembler supports the subtraction of symbols in different sections.])])\n+\n     # This one is used unconditionally by i386.[ch]; it is to be defined\n     # to 1 if the feature is present, 0 otherwise.\n     gcc_GAS_CHECK_FEATURE([GOTOFF in data],"}]}