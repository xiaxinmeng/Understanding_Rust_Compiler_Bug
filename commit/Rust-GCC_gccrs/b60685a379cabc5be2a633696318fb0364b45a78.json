{"sha": "b60685a379cabc5be2a633696318fb0364b45a78", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjYwNjg1YTM3OWNhYmM1YmUyYTYzMzY5NjMxOGZiMDM2NGI0NWE3OA==", "commit": {"author": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2015-05-27T21:13:25Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2015-05-27T21:13:25Z"}, "message": "re PR target/39726 ([cond-optab] ColdFire pessimizations on QImode/HImode tests)\n\n        PR target/39726\n        * gcc.dg/target/m68k/pr39726-1.c: New test.\n\nFrom-SVN: r223781", "tree": {"sha": "6305227d026e8f9a61cead8154aa08900a9fda30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6305227d026e8f9a61cead8154aa08900a9fda30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b60685a379cabc5be2a633696318fb0364b45a78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b60685a379cabc5be2a633696318fb0364b45a78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b60685a379cabc5be2a633696318fb0364b45a78", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b60685a379cabc5be2a633696318fb0364b45a78/comments", "author": null, "committer": null, "parents": [{"sha": "8ed501f167373f40d9a5187323b5771725550b69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8ed501f167373f40d9a5187323b5771725550b69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8ed501f167373f40d9a5187323b5771725550b69"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "6528d42438a84a62d71c705986a405cbffe6cf1f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b60685a379cabc5be2a633696318fb0364b45a78/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b60685a379cabc5be2a633696318fb0364b45a78/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b60685a379cabc5be2a633696318fb0364b45a78", "patch": "@@ -2964,6 +2964,7 @@\n \n 2015-05-07  Jeff Law  <law@redhat.com>\n \n+\tPR target/39726\n \t* match.pd (bit_and (plus/minus (convert @0) (convert @1) mask): New\n \tsimplifier to narrow arithmetic.\n \t* generic-match-head.c: (types_match, single_use): New functions."}, {"sha": "a1a242e3bb52f77163a95ca19310dbc969089e0b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b60685a379cabc5be2a633696318fb0364b45a78/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b60685a379cabc5be2a633696318fb0364b45a78/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b60685a379cabc5be2a633696318fb0364b45a78", "patch": "@@ -1,3 +1,8 @@\n+2015-05-27  Jeff Law  <law@redhat.com>\n+\n+\tPR target/39726\n+\t* gcc.dg/target/m68k/pr39726-1.c: New test.\n+\n 2015-05-27  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/66270"}, {"sha": "94d41ba2159957482e3fb53bee2fed53560fc751", "filename": "gcc/testsuite/gcc.target/m68k/pr39726.c", "status": "added", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b60685a379cabc5be2a633696318fb0364b45a78/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Fpr39726.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b60685a379cabc5be2a633696318fb0364b45a78/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Fpr39726.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fm68k%2Fpr39726.c?ref=b60685a379cabc5be2a633696318fb0364b45a78", "patch": "@@ -0,0 +1,65 @@\n+/* { dg-do assemble } /*\n+/* { dg-options \"-O2 -fomit-frame-pointer\" } */\n+/* { dg-final { object-size text <= 228 } } */\n+\n+unsigned char v;\n+\n+int a0bs (unsigned char u, unsigned char w)\n+{\n+  if ((u - w) & 0x80)\n+    v = 1;\n+}\n+\n+int a1bs (unsigned char u, unsigned char w)\n+{\n+  if ((u + w) & 0x80)\n+    v = 1;\n+}\n+\n+int a0b (unsigned char u, unsigned char w)\n+{\n+  if ((u - w) & 0x22)\n+    v = 1;\n+}\n+\n+int a1b (unsigned char u, unsigned char w)\n+{\n+  if ((u + w) & 0x22)\n+    v = 1;\n+}\n+\n+int a0ws (unsigned short u, unsigned short w)\n+{\n+  if ((u - w) & 0x8000)\n+    v = 1;\n+}\n+\n+int a1ws (unsigned short u, unsigned short w)\n+{\n+  if ((u + w) & 0x8000)\n+    v = 1;\n+}\n+\n+int a0wbs (unsigned short u, unsigned short w)\n+{\n+  if ((u - w) & 0x80)\n+    v = 1;\n+}\n+\n+int a1wbs (unsigned short u, unsigned short w)\n+{\n+  if ((u + w) & 0x80)\n+    v = 1;\n+}\n+\n+int a0w (unsigned short u, unsigned short w)\n+{\n+  if ((u - w) & 0x8421)\n+    v = 1;\n+}\n+\n+int a1w (unsigned short u, unsigned short w)\n+{\n+  if ((u + w) & 0x8421)\n+    v = 1;\n+}"}]}