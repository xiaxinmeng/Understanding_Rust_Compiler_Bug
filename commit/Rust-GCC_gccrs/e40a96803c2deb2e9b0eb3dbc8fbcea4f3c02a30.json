{"sha": "e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTQwYTk2ODAzYzJkZWIyZTliMGViM2RiYzhmYmNlYTRmM2MwMmEzMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-05-30T12:29:26Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-05-30T12:29:26Z"}, "message": "re PR tree-optimization/53501 (scev introduces signed overflow)\n\n2012-05-30  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/53501\n\t* fold-const.c (fold_binary_loc): Make sure to call\n\tfold_plusminus_mult_expr with the original sign of operands.\n\n\t* gcc.dg/torture/pr53501.c: New testcase.\n\t* c-c++-common/restrict-2.c: Adjust.\n\nFrom-SVN: r188009", "tree": {"sha": "618c3869f54a501b0026e00d36d8f0bce2a3cb72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/618c3869f54a501b0026e00d36d8f0bce2a3cb72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "08cad606cd17afa03e68debc31cc6ee532b3f951", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08cad606cd17afa03e68debc31cc6ee532b3f951", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08cad606cd17afa03e68debc31cc6ee532b3f951"}], "stats": {"total": 48, "additions": 41, "deletions": 7}, "files": [{"sha": "df7d3e8692073b53a211f4abb84c5a2e18b57a88", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30", "patch": "@@ -1,3 +1,9 @@\n+2012-05-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/53501\n+\t* fold-const.c (fold_binary_loc): Make sure to call\n+\tfold_plusminus_mult_expr with the original sign of operands.\n+\n 2012-05-30  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* Makefile.in: Fix many dependencies."}, {"sha": "64a0d7fd29ad84c311b933ee4d001debf78b6e83", "filename": "gcc/fold-const.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30", "patch": "@@ -10045,12 +10045,12 @@ fold_binary_loc (location_t loc,\n       /* Handle (A1 * C1) + (A2 * C2) with A1, A2 or C1, C2 being the\n \t same or one.  Make sure type is not saturating.\n \t fold_plusminus_mult_expr will re-associate.  */\n-      if ((TREE_CODE (arg0) == MULT_EXPR\n-\t   || TREE_CODE (arg1) == MULT_EXPR)\n+      if ((TREE_CODE (op0) == MULT_EXPR\n+\t   || TREE_CODE (op1) == MULT_EXPR)\n \t  && !TYPE_SATURATING (type)\n \t  && (!FLOAT_TYPE_P (type) || flag_associative_math))\n         {\n-\t  tree tem = fold_plusminus_mult_expr (loc, code, type, arg0, arg1);\n+\t  tree tem = fold_plusminus_mult_expr (loc, code, type, op0, op1);\n \t  if (tem)\n \t    return tem;\n \t}\n@@ -10668,12 +10668,12 @@ fold_binary_loc (location_t loc,\n       /* Handle (A1 * C1) - (A2 * C2) with A1, A2 or C1, C2 being the\n \t same or one.  Make sure type is not saturating.\n \t fold_plusminus_mult_expr will re-associate.  */\n-      if ((TREE_CODE (arg0) == MULT_EXPR\n-\t   || TREE_CODE (arg1) == MULT_EXPR)\n+      if ((TREE_CODE (op0) == MULT_EXPR\n+\t   || TREE_CODE (op1) == MULT_EXPR)\n \t  && !TYPE_SATURATING (type)\n \t  && (!FLOAT_TYPE_P (type) || flag_associative_math))\n         {\n-\t  tree tem = fold_plusminus_mult_expr (loc, code, type, arg0, arg1);\n+\t  tree tem = fold_plusminus_mult_expr (loc, code, type, op0, op1);\n \t  if (tem)\n \t    return tem;\n \t}"}, {"sha": "49d88e728b5630a66b8dc8637939414074ea6d9a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30", "patch": "@@ -1,3 +1,9 @@\n+2012-05-30  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/53501\n+\t* gcc.dg/torture/pr53501.c: New testcase.\n+\t* c-c++-common/restrict-2.c: Adjust.\n+\n 2012-05-30  Alan Modra  <amodra@gmail.com>\n \n \t* gcc.target/powerpc/powerpc.exp: Load torture-options.exp, call"}, {"sha": "42ed398f67085a8192683d2e5f1662c9f0e328b5", "filename": "gcc/testsuite/c-c++-common/restrict-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Frestrict-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Frestrict-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Frestrict-2.c?ref=e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30", "patch": "@@ -10,5 +10,5 @@ void foo (float * __restrict__ a, float * __restrict__ b, int n, int j)\n \n /* We should move the RHS of the store out of the loop.  */\n \n-/* { dg-final { scan-tree-dump-times \"Moving statement\" 11 \"lim1\" } } */\n+/* { dg-final { scan-tree-dump-times \"Moving statement\" 10 \"lim1\" } } */\n /* { dg-final { cleanup-tree-dump \"lim1\" } } */"}, {"sha": "36e3ae61e8f8d712c7edce7fe4fd140f89acc926", "filename": "gcc/testsuite/gcc.dg/torture/pr53501.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53501.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53501.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr53501.c?ref=e40a96803c2deb2e9b0eb3dbc8fbcea4f3c02a30", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do run } */\n+\n+extern void abort (void);\n+\n+int e[100], n, here;\n+\n+void __attribute__((noinline))\n+foo(void)\n+{\n+  int i, k = 0;\n+  for (i = 0; i < n; ++i) { e[k] = 10; ++k; e[k] = 10; ++k; }\n+  for (i = 0; i < k; ++i) here = 1;\n+  if (here != 1)\n+    abort ();\n+}\n+\n+int main(void)\n+{\n+  n = 10;\n+  foo();\n+  return 0;\n+}"}]}