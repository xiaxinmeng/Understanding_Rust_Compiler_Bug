{"sha": "ea0a7f390a26152d2a7986e78fdf476cabc6630e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWEwYTdmMzkwYTI2MTUyZDJhNzk4NmU3OGZkZjQ3NmNhYmM2NjMwZQ==", "commit": {"author": {"name": "Samuel Tardieu", "email": "sam@gcc.gnu.org", "date": "2008-05-12T20:34:31Z"}, "committer": {"name": "Samuel Tardieu", "email": "sam@gcc.gnu.org", "date": "2008-05-12T20:34:31Z"}, "message": "sem_ch3.adb (Build_Derived_Record_Type): Accept statically matching constraint expressions.\n\n    gcc/ada/\n\t* sem_ch3.adb (Build_Derived_Record_Type): Accept statically matching\n\tconstraint expressions.\n\n    gcc/testsuite/\n\t* gnat.dg/specs/statically_matching.ads: New.\n\nFrom-SVN: r135230", "tree": {"sha": "bca3e051348964537c82c2b16cc149370071262d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bca3e051348964537c82c2b16cc149370071262d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea0a7f390a26152d2a7986e78fdf476cabc6630e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea0a7f390a26152d2a7986e78fdf476cabc6630e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea0a7f390a26152d2a7986e78fdf476cabc6630e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea0a7f390a26152d2a7986e78fdf476cabc6630e/comments", "author": null, "committer": null, "parents": [{"sha": "fcc9fe1e6a3ce2e0af318fc3988456673dfa0239", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcc9fe1e6a3ce2e0af318fc3988456673dfa0239", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcc9fe1e6a3ce2e0af318fc3988456673dfa0239"}], "stats": {"total": 50, "additions": 38, "deletions": 12}, "files": [{"sha": "5330ee5308379775b5257cfafc24f3e810f140d6", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0a7f390a26152d2a7986e78fdf476cabc6630e/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0a7f390a26152d2a7986e78fdf476cabc6630e/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ea0a7f390a26152d2a7986e78fdf476cabc6630e", "patch": "@@ -1,13 +1,19 @@\n+2008-05-12  Samuel Tardieu  <sam@rfc1149.net>\n+            Ed Schonberg <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Build_Derived_Record_Type): Accept statically matching\n+\tconstraint expressions.\n+\n 2008-05-12  Tomas Bily  <tbily@suse.cz>\n \n-        * utils2.c (known_alignment, contains_save_expr_p)\n-        (gnat_mark_addressable): Use CASE_CONVERT.\n-        * decl.c (annotate_value): Likewise.\n-        * trans.c (maybe_stabilize_reference): Likewise.\n-        * utils2.c (build_binary_op): Use CONVERT_EXPR_P.\n-        * utils.c (rest_of_record_type_compilation): Likewise.\n-        * trans.c (protect_multiple_eval, Attribute_to_gnu)\n-        (protect_multiple_eval): Likewise.\n+\t* utils2.c (known_alignment, contains_save_expr_p)\n+\t(gnat_mark_addressable): Use CASE_CONVERT.\n+\t* decl.c (annotate_value): Likewise.\n+\t* trans.c (maybe_stabilize_reference): Likewise.\n+\t* utils2.c (build_binary_op): Use CONVERT_EXPR_P.\n+\t* utils.c (rest_of_record_type_compilation): Likewise.\n+\t* trans.c (protect_multiple_eval, Attribute_to_gnu)\n+\t(protect_multiple_eval): Likewise.\n \n 2008-05-08  Andreas Schwab  <schwab@suse.de>\n "}, {"sha": "dd08710e37e97f684e98f0ef9935ce5002375f9f", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0a7f390a26152d2a7986e78fdf476cabc6630e/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0a7f390a26152d2a7986e78fdf476cabc6630e/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=ea0a7f390a26152d2a7986e78fdf476cabc6630e", "patch": "@@ -6268,8 +6268,8 @@ package body Sem_Ch3 is\n               and then Has_Private_Declaration (Derived_Type)\n               and then Present (Discriminant_Constraint (Derived_Type))\n             then\n-               --  Verify that constraints of the full view conform to those\n-               --  given in partial view.\n+               --  Verify that constraints of the full view statically match\n+               --  those given in the partial view.\n \n                declare\n                   C1, C2 : Elmt_Id;\n@@ -6278,9 +6278,18 @@ package body Sem_Ch3 is\n                   C1 := First_Elmt (New_Discrs);\n                   C2 := First_Elmt (Discriminant_Constraint (Derived_Type));\n                   while Present (C1) and then Present (C2) loop\n-                     if not\n-                       Fully_Conformant_Expressions (Node (C1), Node (C2))\n+\n+                     if Fully_Conformant_Expressions (Node (C1), Node (C2))\n+                       or else\n+                     (Is_OK_Static_Expression (Node (C1))\n+                        and then\n+                      Is_OK_Static_Expression (Node (C2))\n+                        and then\n+                      Expr_Value (Node (C1)) = Expr_Value (Node (C2)))\n                      then\n+                        null;\n+\n+                     else\n                         Error_Msg_N (\n                           \"constraint not conformant to previous declaration\",\n                              Node (C1));"}, {"sha": "b9de6a88adbcca6a3966155c30f35a29a1cbac50", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0a7f390a26152d2a7986e78fdf476cabc6630e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0a7f390a26152d2a7986e78fdf476cabc6630e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ea0a7f390a26152d2a7986e78fdf476cabc6630e", "patch": "@@ -1,3 +1,7 @@\n+2008-05-12  Samuel Tardieu  <sam@rfc1149.net>\n+\n+\t* gnat.dg/specs/statically_matching.ads: New.\n+\n 2008-05-12  H.J. Lu  <hongjiu.lu@intel.com>\n \n \t* gcc.target/i386/sse2-set-epi32-1.c: New."}, {"sha": "de2ba1b0bea78321b3b74d537df7b2dd381b3844", "filename": "gcc/testsuite/gnat.dg/statically_matching.ads", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea0a7f390a26152d2a7986e78fdf476cabc6630e/gcc%2Ftestsuite%2Fgnat.dg%2Fstatically_matching.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea0a7f390a26152d2a7986e78fdf476cabc6630e/gcc%2Ftestsuite%2Fgnat.dg%2Fstatically_matching.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fstatically_matching.ads?ref=ea0a7f390a26152d2a7986e78fdf476cabc6630e", "patch": "@@ -0,0 +1,7 @@\n+package Statically_Matching is\n+   type T1(b: boolean) is tagged null record;\n+   type T2 is new T1(b => false) with private;\n+private\n+   F: constant boolean := false;\n+   type T2 is new T1(b => F) with null record;  -- OK\n+end Statically_Matching;"}]}