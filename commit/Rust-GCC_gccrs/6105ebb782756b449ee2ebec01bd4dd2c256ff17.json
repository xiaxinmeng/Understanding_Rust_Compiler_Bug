{"sha": "6105ebb782756b449ee2ebec01bd4dd2c256ff17", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjEwNWViYjc4Mjc1NmI0NDllZTJlYmVjMDFiZDRkZDJjMjU2ZmYxNw==", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2021-05-26T16:02:34Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-07-08T13:34:19Z"}, "message": "[Ada] Fix use of single question mark in error message\n\ngcc/ada/\n\n\t* exp_prag.adb (Expand_Pragma_Inspection_Point): Fix error\n\tmessage.", "tree": {"sha": "09e51deaf592456f68886668a4f083e21fea8c4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09e51deaf592456f68886668a4f083e21fea8c4c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6105ebb782756b449ee2ebec01bd4dd2c256ff17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6105ebb782756b449ee2ebec01bd4dd2c256ff17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6105ebb782756b449ee2ebec01bd4dd2c256ff17", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6105ebb782756b449ee2ebec01bd4dd2c256ff17/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cb2bcba3f31c6ec93fe76ff5e0f67db43556ef7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cb2bcba3f31c6ec93fe76ff5e0f67db43556ef7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cb2bcba3f31c6ec93fe76ff5e0f67db43556ef7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "43ecdcdd333a18c4959c72749f408321c72f2406", "filename": "gcc/ada/exp_prag.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6105ebb782756b449ee2ebec01bd4dd2c256ff17/gcc%2Fada%2Fexp_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6105ebb782756b449ee2ebec01bd4dd2c256ff17/gcc%2Fada%2Fexp_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_prag.adb?ref=6105ebb782756b449ee2ebec01bd4dd2c256ff17", "patch": "@@ -2413,7 +2413,7 @@ package body Exp_Prag is\n          if Present (Freeze_Node (Entity (Expression (Assoc)))) and then\n            not Is_Frozen (Entity (Expression (Assoc)))\n          then\n-            Error_Msg_NE (\"?inspection point references unfrozen object &\",\n+            Error_Msg_NE (\"??inspection point references unfrozen object &\",\n               Assoc,\n               Entity (Expression (Assoc)));\n             Remove_Inspection_Point := True;"}]}