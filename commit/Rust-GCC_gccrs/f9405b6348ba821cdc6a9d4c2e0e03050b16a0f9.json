{"sha": "f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjk0MDViNjM0OGJhODIxY2RjNmE5ZDRjMmUwZTAzMDUwYjE2YTBmOQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-06-22T09:25:54Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-06-22T09:25:54Z"}, "message": "[ARM] Add initial support for Cortex-A73\n\n        * config/arm/arm.c (arm_cortex_a73_tune): New struct.\n        * config/arm/arm-cores.def (cortex-a73): New entry.\n        (cortex-a73.cortex-a35): Likewise.\n        (cortex-a73.cortex-a53): Likewise.\n        * config/arm/arm-tables.opt: Regenerate.\n        * config/arm/arm-tune.md: Likewise.\n        * config/arm/bpabi.h (BE8_LINK_SPEC): Handle mcpu=cortex-a73,\n        mcpu=cortex-a73.cortex-a35 and mcpu=cortex-a73.cortex-a53.\n        * config/arm/t-aprofile: Handle mcpu=cortex-a73,\n        mcpu=cortex-a73.cortex-a35 and mcpu=cortex-a73.cortex-a53.\n        * doc/invoke.texi (ARM Options): Document cortex-a73,\n        cortex-a73.cortex-a35 and cortex-a73.cortex-a53.\n\nFrom-SVN: r237681", "tree": {"sha": "491e57db013a5acacd39bacc37b2d0f9518a04e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/491e57db013a5acacd39bacc37b2d0f9518a04e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7320a4b5193d7edfe9eb2266b910c2e088b52b20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7320a4b5193d7edfe9eb2266b910c2e088b52b20", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7320a4b5193d7edfe9eb2266b910c2e088b52b20"}], "stats": {"total": 70, "additions": 66, "deletions": 4}, "files": [{"sha": "b779396ed81c62dfd10e534d59fb00f1213a0a30", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9", "patch": "@@ -1,3 +1,18 @@\n+2016-06-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.c (arm_cortex_a73_tune): New struct.\n+\t* config/arm/arm-cores.def (cortex-a73): New entry.\n+\t(cortex-a73.cortex-a35): Likewise.\n+\t(cortex-a73.cortex-a53): Likewise.\n+\t* config/arm/arm-tables.opt: Regenerate.\n+\t* config/arm/arm-tune.md: Likewise.\n+\t* config/arm/bpabi.h (BE8_LINK_SPEC): Handle mcpu=cortex-a73,\n+\tmcpu=cortex-a73.cortex-a35 and mcpu=cortex-a73.cortex-a53.\n+\t* config/arm/t-aprofile: Handle mcpu=cortex-a73,\n+\tmcpu=cortex-a73.cortex-a35 and mcpu=cortex-a73.cortex-a53.\n+\t* doc/invoke.texi (ARM Options): Document cortex-a73,\n+\tcortex-a73.cortex-a35 and cortex-a73.cortex-a53.\n+\n 2016-06-22  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \t* config/aarch64/aarch64.c (cortexa73_tunings): New struct."}, {"sha": "a53c7d819f58efd2b2756574b6fafaa415cfd0e4", "filename": "gcc/config/arm/arm-cores.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9/gcc%2Fconfig%2Farm%2Farm-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9/gcc%2Fconfig%2Farm%2Farm-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cores.def?ref=f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9", "patch": "@@ -171,10 +171,14 @@ ARM_CORE(\"cortex-a35\",\tcortexa35, cortexa53,\t8A,\tARM_FSET_MAKE_CPU1 (FL_LDSCHED\n ARM_CORE(\"cortex-a53\",\tcortexa53, cortexa53,\t8A,\tARM_FSET_MAKE_CPU1 (FL_LDSCHED | FL_CRC32 | FL_FOR_ARCH8A), cortex_a53)\n ARM_CORE(\"cortex-a57\",\tcortexa57, cortexa57,\t8A,\tARM_FSET_MAKE_CPU1 (FL_LDSCHED | FL_CRC32 | FL_FOR_ARCH8A), cortex_a57)\n ARM_CORE(\"cortex-a72\",\tcortexa72, cortexa57,\t8A,\tARM_FSET_MAKE_CPU1 (FL_LDSCHED | FL_CRC32 | FL_FOR_ARCH8A), cortex_a57)\n+ARM_CORE(\"cortex-a73\",\tcortexa73, cortexa57,\t8A,\tARM_FSET_MAKE_CPU1 (FL_LDSCHED | FL_CRC32 | FL_FOR_ARCH8A), cortex_a73)\n ARM_CORE(\"exynos-m1\",\texynosm1,  exynosm1,\t8A,\tARM_FSET_MAKE_CPU1 (FL_LDSCHED | FL_CRC32 | FL_FOR_ARCH8A), exynosm1)\n ARM_CORE(\"qdf24xx\",\tqdf24xx,   cortexa57,\t8A,\tARM_FSET_MAKE_CPU1 (FL_LDSCHED | FL_CRC32 | FL_FOR_ARCH8A), cortex_a57)\n ARM_CORE(\"xgene1\",      xgene1,    xgene1,      8A,\tARM_FSET_MAKE_CPU1 (FL_LDSCHED | FL_FOR_ARCH8A),            xgene1)\n \n /* V8 big.LITTLE implementations */\n ARM_CORE(\"cortex-a57.cortex-a53\", cortexa57cortexa53, cortexa53, 8A,\tARM_FSET_MAKE_CPU1 (FL_LDSCHED | FL_CRC32 | FL_FOR_ARCH8A), cortex_a57)\n ARM_CORE(\"cortex-a72.cortex-a53\", cortexa72cortexa53, cortexa53, 8A,\tARM_FSET_MAKE_CPU1 (FL_LDSCHED | FL_CRC32 | FL_FOR_ARCH8A), cortex_a57)\n+ARM_CORE(\"cortex-a73.cortex-a35\", cortexa73cortexa35, cortexa53, 8A,\tARM_FSET_MAKE_CPU1 (FL_LDSCHED | FL_CRC32 | FL_FOR_ARCH8A), cortex_a73)\n+ARM_CORE(\"cortex-a73.cortex-a53\", cortexa73cortexa53, cortexa53, 8A,\tARM_FSET_MAKE_CPU1 (FL_LDSCHED | FL_CRC32 | FL_FOR_ARCH8A), cortex_a73)\n+"}, {"sha": "a5fe2c36da284a31b9f3025c4d7ed327330e45b1", "filename": "gcc/config/arm/arm-tables.opt", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9/gcc%2Fconfig%2Farm%2Farm-tables.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9/gcc%2Fconfig%2Farm%2Farm-tables.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tables.opt?ref=f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9", "patch": "@@ -321,6 +321,9 @@ Enum(processor_type) String(cortex-a57) Value(cortexa57)\n EnumValue\n Enum(processor_type) String(cortex-a72) Value(cortexa72)\n \n+EnumValue\n+Enum(processor_type) String(cortex-a73) Value(cortexa73)\n+\n EnumValue\n Enum(processor_type) String(exynos-m1) Value(exynosm1)\n \n@@ -336,6 +339,12 @@ Enum(processor_type) String(cortex-a57.cortex-a53) Value(cortexa57cortexa53)\n EnumValue\n Enum(processor_type) String(cortex-a72.cortex-a53) Value(cortexa72cortexa53)\n \n+EnumValue\n+Enum(processor_type) String(cortex-a73.cortex-a35) Value(cortexa73cortexa35)\n+\n+EnumValue\n+Enum(processor_type) String(cortex-a73.cortex-a53) Value(cortexa73cortexa53)\n+\n Enum\n Name(arm_arch) Type(int)\n Known ARM architectures (for use with the -march= option):"}, {"sha": "594ce9d1734451f89812200191cb35f1f579289e", "filename": "gcc/config/arm/arm-tune.md", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9/gcc%2Fconfig%2Farm%2Farm-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9/gcc%2Fconfig%2Farm%2Farm-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-tune.md?ref=f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9", "patch": "@@ -34,6 +34,7 @@\n \tcortexm3,marvell_pj4,cortexa15cortexa7,\n \tcortexa17cortexa7,cortexa32,cortexa35,\n \tcortexa53,cortexa57,cortexa72,\n-\texynosm1,qdf24xx,xgene1,\n-\tcortexa57cortexa53,cortexa72cortexa53\"\n+\tcortexa73,exynosm1,qdf24xx,\n+\txgene1,cortexa57cortexa53,cortexa72cortexa53,\n+\tcortexa73cortexa35,cortexa73cortexa53\"\n \t(const (symbol_ref \"((enum attr_tune) arm_tune)\")))"}, {"sha": "a7dda1f53ca1db3d135296e759fccc30a36656c9", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9", "patch": "@@ -2125,6 +2125,29 @@ const struct tune_params arm_cortex_a12_tune =\n   tune_params::SCHED_AUTOPREF_OFF\n };\n \n+const struct tune_params arm_cortex_a73_tune =\n+{\n+  arm_9e_rtx_costs,\n+  &cortexa57_extra_costs,\n+  NULL,\t\t\t\t\t\t/* Sched adj cost.  */\n+  arm_default_branch_cost,\n+  &arm_default_vec_cost,\t\t\t/* Vectorizer costs.  */\n+  1,\t\t\t\t\t\t/* Constant limit.  */\n+  2,\t\t\t\t\t\t/* Max cond insns.  */\n+  8,\t\t\t\t\t\t/* Memset max inline.  */\n+  2,\t\t\t\t\t\t/* Issue rate.  */\n+  ARM_PREFETCH_NOT_BENEFICIAL,\n+  tune_params::PREF_CONST_POOL_FALSE,\n+  tune_params::PREF_LDRD_TRUE,\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* Thumb.  */\n+  tune_params::LOG_OP_NON_SHORT_CIRCUIT_TRUE,\t\t/* ARM.  */\n+  tune_params::DISPARAGE_FLAGS_ALL,\n+  tune_params::PREF_NEON_64_FALSE,\n+  tune_params::PREF_NEON_STRINGOPS_TRUE,\n+  FUSE_OPS (tune_params::FUSE_AES_AESMC | tune_params::FUSE_MOVW_MOVT),\n+  tune_params::SCHED_AUTOPREF_FULL\n+};\n+\n /* armv7m tuning.  On Cortex-M4 cores for example, MOVW/MOVT take a single\n    cycle to execute each.  An LDR from the constant pool also takes two cycles\n    to execute, but mildly increases pipelining opportunity (consecutive"}, {"sha": "d6d394ace44cd7858b47c95e68c5d57282d31b0d", "filename": "gcc/config/arm/bpabi.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9/gcc%2Fconfig%2Farm%2Fbpabi.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9/gcc%2Fconfig%2Farm%2Fbpabi.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fbpabi.h?ref=f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9", "patch": "@@ -75,6 +75,9 @@\n    |mcpu=cortex-a57.cortex-a53\t\t\t\t\\\n    |mcpu=cortex-a72\t\t\t\t\t\\\n    |mcpu=cortex-a72.cortex-a53\t\t\t\t\\\n+   |mcpu=cortex-a73\t\t\t\t\t\\\n+   |mcpu=cortex-a73.cortex-a35\t\t\t\t\\\n+   |mcpu=cortex-a73.cortex-a53\t\t\t\t\\\n    |mcpu=exynos-m1                                      \\\n    |mcpu=qdf24xx\t\t\t\t\t\\\n    |mcpu=xgene1                                         \\\n@@ -105,6 +108,9 @@\n    |mcpu=cortex-a57.cortex-a53\t\t\t\t\\\n    |mcpu=cortex-a72\t\t\t\t\t\\\n    |mcpu=cortex-a72.cortex-a53\t\t\t\t\\\n+   |mcpu=cortex-a73\t\t\t\t\t\\\n+   |mcpu=cortex-a73.cortex-a35\t\t\t\t\\\n+   |mcpu=cortex-a73.cortex-a53\t\t\t\t\\\n    |mcpu=exynos-m1                                      \\\n    |mcpu=qdf24xx\t\t\t\t\t\\\n    |mcpu=xgene1                                         \\"}, {"sha": "1b34b5444aaddf4234b3aa9041cb758b4328e02a", "filename": "gcc/config/arm/t-aprofile", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9/gcc%2Fconfig%2Farm%2Ft-aprofile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9/gcc%2Fconfig%2Farm%2Ft-aprofile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-aprofile?ref=f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9", "patch": "@@ -93,6 +93,9 @@ MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a57\n MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a57.cortex-a53\n MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a72\n MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a72.cortex-a53\n+MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a73\n+MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a73.cortex-a35\n+MULTILIB_MATCHES       += march?armv8-a=mcpu?cortex-a73.cortex-a53\n MULTILIB_MATCHES       += march?armv8-a=mcpu?exynos-m1\n MULTILIB_MATCHES       += march?armv8-a=mcpu?qdf24xx\n MULTILIB_MATCHES       += march?armv8-a=mcpu?xgene1"}, {"sha": "fdb65f025a1aa626da771a8b58651c7541385fe2", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=f9405b6348ba821cdc6a9d4c2e0e03050b16a0f9", "patch": "@@ -14158,7 +14158,7 @@ Permissible names are: @samp{arm2}, @samp{arm250},\n @samp{generic-armv7-a}, @samp{cortex-a5}, @samp{cortex-a7}, @samp{cortex-a8},\n @samp{cortex-a9}, @samp{cortex-a12}, @samp{cortex-a15}, @samp{cortex-a17},\n @samp{cortex-a32}, @samp{cortex-a35}, @samp{cortex-a53}, @samp{cortex-a57},\n-@samp{cortex-a72}, @samp{cortex-r4},\n+@samp{cortex-a72}, @samp{cortex-a73}, @samp{cortex-r4},\n @samp{cortex-r4f}, @samp{cortex-r5}, @samp{cortex-r7}, @samp{cortex-r8},\n @samp{cortex-m7},\n @samp{cortex-m4},\n@@ -14180,7 +14180,8 @@ Permissible names are: @samp{arm2}, @samp{arm250},\n Additionally, this option can specify that GCC should tune the performance\n of the code for a big.LITTLE system.  Permissible names are:\n @samp{cortex-a15.cortex-a7}, @samp{cortex-a17.cortex-a7},\n-@samp{cortex-a57.cortex-a53}, @samp{cortex-a72.cortex-a53}.\n+@samp{cortex-a57.cortex-a53}, @samp{cortex-a72.cortex-a53},\n+@samp{cortex-a72.cortex-a35}, @samp{cortex-a73.cortex-a53}.\n \n @option{-mtune=generic-@var{arch}} specifies that GCC should tune the\n performance for a blend of processors within architecture @var{arch}."}]}