{"sha": "f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjg5Yjk0ZDk1NGI4N2MxYjkwMjkzZDE0ZjFjYTFlZDE1ZDJlZThmMQ==", "commit": {"author": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2010-02-21T21:20:04Z"}, "committer": {"name": "Manuel L\u00f3pez-Ib\u00e1\u00f1ez", "email": "manu@gcc.gnu.org", "date": "2010-02-21T21:20:04Z"}, "message": "re PR c++/23510 (skip some instantation contexts if there are too many)\n\n2010-02-21  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n\n\tPR c++/23510\ncp/\n\t* error.c (print_instantiation_partial_context_line): New.\n\t(print_instantiation_partial_context): Print at most 12 contexts,\n\tskip the rest with a message.\ntestsuite/\n\t* g++.dg/template/recurse.C: Adjust.\n\t* g++.dg/template/pr23510.C: New.\n\nFrom-SVN: r156942", "tree": {"sha": "1a705e9468f4fd9553bcd09117ccf45e69d324ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a705e9468f4fd9553bcd09117ccf45e69d324ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1/comments", "author": null, "committer": null, "parents": [{"sha": "681f05d4f0195b8566bdc0c985afb6ac4cd95069", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/681f05d4f0195b8566bdc0c985afb6ac4cd95069", "html_url": "https://github.com/Rust-GCC/gccrs/commit/681f05d4f0195b8566bdc0c985afb6ac4cd95069"}], "stats": {"total": 141, "additions": 116, "deletions": 25}, "files": [{"sha": "e933965fec4b2f8cb24862c865172b2f4c1836e1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1", "patch": "@@ -1,3 +1,10 @@\n+2010-02-21  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR c++/23510\n+\t* error.c (print_instantiation_partial_context_line): New.\n+\t(print_instantiation_partial_context): Print at most 12 contexts,\n+\tskip the rest with a message.\n+\n 2010-02-21  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/42824"}, {"sha": "b03c83ff152d0fee7be889c583110216ba9f89ea", "filename": "gcc/cp/error.c", "status": "modified", "additions": 77, "deletions": 24, "changes": 101, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1/gcc%2Fcp%2Ferror.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1/gcc%2Fcp%2Ferror.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferror.c?ref=f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1", "patch": "@@ -2728,36 +2728,89 @@ print_instantiation_full_context (diagnostic_context *context)\n   print_instantiation_partial_context (context, p, location);\n }\n \n-/* Same as above but less verbose.  */\n+/* Helper function of print_instantiation_partial_context() that\n+   prints a single line of instantiation context.  */\n+\n static void\n-print_instantiation_partial_context (diagnostic_context *context,\n-\t\t\t\t     struct tinst_level *t, location_t loc)\n+print_instantiation_partial_context_line (diagnostic_context *context,\n+\t\t\t\t\t  const struct tinst_level *t, location_t loc)\n {\n   expanded_location xloc;\n-  const char *str;\n-  for (; ; t = t->next)\n+  xloc = expand_location (loc);\n+\n+  if (t != NULL) {\n+    const char *str;\n+    str = decl_as_string_translate (t->decl,\n+\t\t\t\t    TFF_DECL_SPECIFIERS | TFF_RETURN_TYPE);\n+    if (flag_show_column)\n+      pp_verbatim (context->printer,\n+\t\t   _(\"%s:%d:%d:   instantiated from %qs\\n\"),\n+\t\t   xloc.file, xloc.line, xloc.column, str);\n+    else\n+      pp_verbatim (context->printer,\n+\t\t   _(\"%s:%d:   instantiated from %qs\\n\"),\n+\t\t   xloc.file, xloc.line, str);\n+  } else {\n+    if (flag_show_column)\n+      pp_verbatim (context->printer, _(\"%s:%d:%d:   instantiated from here\"),\n+\t\t   xloc.file, xloc.line, xloc.column);\n+    else\n+      pp_verbatim (context->printer, _(\"%s:%d:   instantiated from here\"),\n+\t\t   xloc.file, xloc.line);\n+  }\n+}\n+\n+/* Same as print_instantiation_full_context but less verbose.  */\n+\n+static void\n+print_instantiation_partial_context (diagnostic_context *context,\n+\t\t\t\t     struct tinst_level *t0, location_t loc)\n+{\n+  struct tinst_level *t;\n+  int n_total = 0;\n+  int n;\n+\n+  for (t = t0; t != NULL; t = t->next)\n+    n_total++;\n+\n+  t = t0;\n+\n+  if (n_total >= 12) \n     {\n-      xloc = expand_location (loc);\n-      if (t == NULL)\n-\tbreak;\n-      str = decl_as_string_translate (t->decl,\n-\t  \t\t\t      TFF_DECL_SPECIFIERS | TFF_RETURN_TYPE);\n-      if (flag_show_column)\n-\tpp_verbatim (context->printer,\n-\t\t     _(\"%s:%d:%d:   instantiated from %qs\\n\"),\n-\t\t     xloc.file, xloc.line, xloc.column, str);\n-      else\n-\tpp_verbatim (context->printer,\n-\t\t     _(\"%s:%d:   instantiated from %qs\\n\"),\n-\t\t     xloc.file, xloc.line, str);\n+      int skip = n_total - 10;\n+      for (n = 0; n < 5; n++)\n+\t{\n+\t  gcc_assert (t != NULL);\n+\t  print_instantiation_partial_context_line (context, t, loc);\n+\t  loc = t->locus;\n+\t  t = t->next;\n+\t}\n+      if (skip > 1) \n+\t{\n+\t  expanded_location xloc;\n+\t  xloc = expand_location (loc);\n+\t  if (flag_show_column)\n+\t    pp_verbatim (context->printer,\n+\t\t\t _(\"%s:%d:%d:   [ skipping %d instantiation contexts ]\\n\"),\n+\t\t\t xloc.file, xloc.line, xloc.column, skip);\n+\t  else\n+\t    pp_verbatim (context->printer,\n+\t\t\t _(\"%s:%d:   [ skipping %d instantiation contexts ]\\n\"),\n+\t\t\t xloc.file, xloc.line, skip);\n+\t  \n+\t  do {\n+\t      loc = t->locus;\n+\t      t = t->next;\n+\t  } while (--skip > 0);\n+\t}\n+    }\n+  \n+  for (; t != NULL; t = t->next)\n+    {\n+      print_instantiation_partial_context_line (context, t, loc);\n       loc = t->locus;\n     }\n-  if (flag_show_column)\n-    pp_verbatim (context->printer, _(\"%s:%d:%d:   instantiated from here\"),\n-\t\t xloc.file, xloc.line, xloc.column);\n-  else\n-    pp_verbatim (context->printer, _(\"%s:%d:   instantiated from here\"),\n-\t\t xloc.file, xloc.line);\n+  print_instantiation_partial_context_line (context, NULL, loc);\n   pp_base_newline (context->printer);\n }\n "}, {"sha": "7db619e31be6150d39d3b82e9f209221b1bffc72", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1", "patch": "@@ -1,3 +1,9 @@\n+2010-02-21  Manuel L\u00f3pez-Ib\u00e1\u00f1ez  <manu@gcc.gnu.org>\n+\n+\tPR c++/23510\n+\t* g++.dg/template/recurse.C: Adjust.\n+\t* g++.dg/template/pr23510.C: New.\n+\n 2010-02-21  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/42824"}, {"sha": "a0806e245c59f0e3de508e3398d776ef1acab80e", "filename": "gcc/testsuite/g++.dg/template/pr23510.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr23510.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr23510.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fpr23510.C?ref=f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1", "patch": "@@ -0,0 +1,23 @@\n+// { dg-do compile } \n+// { dg-options \"-ftemplate-depth-15\" }\n+template<unsigned int nFactor>\n+struct Factorial\n+{\n+  enum { nValue = nFactor * Factorial<nFactor - 1>::nValue }; // { dg-error \"depth exceeds maximum\" } \n+  // { dg-message \"skipping 5 instantiation contexts\" \"\" { target *-*-* } 6 } \n+  // { dg-error \"incomplete type\" \"\" { target *-*-* } 6 } \n+} \n+\n+  template<> // { dg-error \"expected\" } \n+  struct Factorial<0>\n+  {\n+    enum { nValue = 1 };\n+  }\n+\n+    static const unsigned int FACTOR = 20;\n+\n+int main()\n+{\n+  Factorial<FACTOR>::nValue;\n+  return 0;\n+}"}, {"sha": "17fe1866eb2098bacaa75dabfe5a54a8d6643f62", "filename": "gcc/testsuite/g++.dg/template/recurse.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Frecurse.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Frecurse.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Frecurse.C?ref=f89b94d954b87c1b90293d14f1ca1ed15d2ee8f1", "patch": "@@ -6,8 +6,10 @@ template <int I> struct F\n   int operator()()\n     {\n       F<I+1> f;\t\t\t// { dg-error \"incomplete type\" \"incomplete\" }\n-\t\t\t\t// { dg-error \"exceeds maximum\" \"exceeds\" { target *-*-* } 8 }\n+\t\t\t\t// { dg-bogus \"exceeds maximum.*exceeds maximum\" \"exceeds\" { xfail *-*-* } 8 }\n+                                // { dg-error \"exceeds maximum\" \"exceeds\" { xfail *-*-* } 8 }\n       return f()*I;             // { dg-message \"instantiated\" \"recurse\" }\n+      // { dg-message \"skipping 40 instantiation contexts\" \"\" { target *-*-* } 11 }\n     }\n };\n "}]}