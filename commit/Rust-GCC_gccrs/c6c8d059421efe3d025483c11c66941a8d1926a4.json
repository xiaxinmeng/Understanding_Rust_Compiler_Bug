{"sha": "c6c8d059421efe3d025483c11c66941a8d1926a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzZjOGQwNTk0MjFlZmUzZDAyNTQ4M2MxMWM2Njk0MWE4ZDE5MjZhNA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-27T12:52:02Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-27T12:52:02Z"}, "message": "[multiple changes]\n\n2016-04-27  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* lib-xref.adb, exp_ch3.adb: Minor reformatting.\n\n2016-04-27  Nicolas Roche  <roche@adacore.com>\n\n\t* rtinit.c: Add weak symbol __gnat_do_argv_expansion.\n\nFrom-SVN: r235496", "tree": {"sha": "6adc74957dfe249421b3ed8f7d5b54493566637c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6adc74957dfe249421b3ed8f7d5b54493566637c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c6c8d059421efe3d025483c11c66941a8d1926a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6c8d059421efe3d025483c11c66941a8d1926a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c6c8d059421efe3d025483c11c66941a8d1926a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c6c8d059421efe3d025483c11c66941a8d1926a4/comments", "author": null, "committer": null, "parents": [{"sha": "caa64a44ace7776c08a1ca261380bee9a74e2dff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/caa64a44ace7776c08a1ca261380bee9a74e2dff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/caa64a44ace7776c08a1ca261380bee9a74e2dff"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "49106b90e1c48b3be7e63bc93439149f59f9e804", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6c8d059421efe3d025483c11c66941a8d1926a4/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6c8d059421efe3d025483c11c66941a8d1926a4/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c6c8d059421efe3d025483c11c66941a8d1926a4", "patch": "@@ -1,3 +1,11 @@\n+2016-04-27  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* lib-xref.adb, exp_ch3.adb: Minor reformatting.\n+\n+2016-04-27  Nicolas Roche  <roche@adacore.com>\n+\n+\t* rtinit.c: Add weak symbol __gnat_do_argv_expansion.\n+\n 2016-04-27  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_prag.adb (Process_Atomic_Independent_Shared_Volatile): Code"}, {"sha": "f0213ff7480ed8b08a7da8871e90aeec864f2847", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6c8d059421efe3d025483c11c66941a8d1926a4/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6c8d059421efe3d025483c11c66941a8d1926a4/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=c6c8d059421efe3d025483c11c66941a8d1926a4", "patch": "@@ -6351,7 +6351,7 @@ package body Exp_Ch3 is\n          --  would otherwise make two copies. The RM allows removing redunant\n          --  Adjust/Finalize calls, but does not allow insertion of extra ones.\n \n-         --  This part is disabled for now, because it breaks GPS builds.\n+         --  This part is disabled for now, because it breaks GPS builds\n \n          return (False -- ???\n              and then Nkind (Expr_Q) = N_Explicit_Dereference"}, {"sha": "3b489e521c648690afade1bab1fe825de067f66d", "filename": "gcc/ada/lib-xref.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6c8d059421efe3d025483c11c66941a8d1926a4/gcc%2Fada%2Flib-xref.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6c8d059421efe3d025483c11c66941a8d1926a4/gcc%2Fada%2Flib-xref.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-xref.adb?ref=c6c8d059421efe3d025483c11c66941a8d1926a4", "patch": "@@ -1478,10 +1478,10 @@ package body Lib.Xref is\n                   begin\n                      if Nkind (Decl) = N_Object_Declaration\n                        and then Is_Entity_Name\n-                         (Original_Node ((Object_Definition (Decl))))\n+                                  (Original_Node (Object_Definition (Decl)))\n                      then\n                         Tref :=\n-                         Entity ((Original_Node ((Object_Definition (Decl)))));\n+                          Entity (Original_Node (Object_Definition (Decl)));\n                      end if;\n                   end;\n                end if;"}, {"sha": "dcd0903db5df91fea3ac74386cad8c91a6388403", "filename": "gcc/ada/rtinit.c", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c6c8d059421efe3d025483c11c66941a8d1926a4/gcc%2Fada%2Frtinit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c6c8d059421efe3d025483c11c66941a8d1926a4/gcc%2Fada%2Frtinit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frtinit.c?ref=c6c8d059421efe3d025483c11c66941a8d1926a4", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *            Copyright (C) 2014-2015, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 2014-2016, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -86,6 +86,9 @@ extern HANDLE ProcListEvt;\n \n #define EXPAND_ARGV_RATE 128\n \n+int __gnat_do_argv_expansion = 1;\n+#pragma weak __gnat_do_argv_expansion\n+\n static void\n append_arg (int *index, LPWSTR dir, LPWSTR value,\n \t    char ***argv, int *last, int quoted)\n@@ -238,7 +241,7 @@ __gnat_runtime_initialize(int install_handler)\n \t     quoted = (wargv[k][0] == _T('\\''));\n \n \t     /* Check for wildcard expansion if the argument is not quoted. */\n-\t     if (!quoted\n+\t     if (!quoted && __gnat_do_argv_expansion\n \t\t && (_tcsstr (wargv[k], _T(\"?\")) != 0 ||\n \t\t     _tcsstr (wargv[k], _T(\"*\")) != 0))\n \t       {\n@@ -289,7 +292,8 @@ __gnat_runtime_initialize(int install_handler)\n \t\t /*  No wildcard. Store parameter as-is. Remove quote if\n \t\t     needed. */\n \t\t append_arg (&argc_expanded, NULL, wargv[k],\n-\t\t\t     &gnat_argv, &last, quoted);\n+\t\t\t     &gnat_argv, &last,\n+                             quoted && __gnat_do_argv_expansion);\n \t       }\n \t   }\n "}]}