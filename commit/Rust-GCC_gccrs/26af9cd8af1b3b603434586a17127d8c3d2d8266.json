{"sha": "26af9cd8af1b3b603434586a17127d8c3d2d8266", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZhZjljZDhhZjFiM2I2MDM0MzQ1ODZhMTcxMjdkOGMzZDJkODI2Ng==", "commit": {"author": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-03-03T03:32:22Z"}, "committer": {"name": "Patrick Palka", "email": "ppalka@redhat.com", "date": "2020-03-04T03:44:39Z"}, "message": "libstdc++: Add a testsuite range type that has a sized sentinel\n\nThis adds a testsuite range type whose end() is a sized sentinel to\n<testsuite_iterators.h>, which will be used in the tests that verify LWG 3355.\n\nlibstdc++-v3/ChangeLog:\n\n\t* testsuite/util/testsuite_iterators.h (test_range::get_iterator): Make\n\tprotected instead of private.\n\t(test_sized_range_sized_sent): New.", "tree": {"sha": "8a0eb4a0543be48f189b6ba65ede2d3c760d6f17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a0eb4a0543be48f189b6ba65ede2d3c760d6f17"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26af9cd8af1b3b603434586a17127d8c3d2d8266", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26af9cd8af1b3b603434586a17127d8c3d2d8266", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26af9cd8af1b3b603434586a17127d8c3d2d8266", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26af9cd8af1b3b603434586a17127d8c3d2d8266/comments", "author": null, "committer": null, "parents": [{"sha": "d6d4b339f5b77070ee9ae896c2f20ba315b7b7e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d6d4b339f5b77070ee9ae896c2f20ba315b7b7e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d6d4b339f5b77070ee9ae896c2f20ba315b7b7e0"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "ca5f0d0f3f894e6b13c3589bf9470cc731af7d16", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26af9cd8af1b3b603434586a17127d8c3d2d8266/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26af9cd8af1b3b603434586a17127d8c3d2d8266/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=26af9cd8af1b3b603434586a17127d8c3d2d8266", "patch": "@@ -1,5 +1,9 @@\n 2020-03-04  Patrick Palka  <ppalka@redhat.com>\n \n+\t* testsuite/util/testsuite_iterators.h (test_range::get_iterator): Make\n+\tprotected instead of private.\n+\t(test_sized_range_sized_sent): New.\n+\n \t* testsuite/util/testsuite_iterators.h (input_iterator_wrapper_nocopy):\n \tNew testsuite iterator.\n \t* testsuite/24_iterators/counted_iterator/lwg3389.cc: use it."}, {"sha": "a915c02248b8ef7a7bb834a4585414210a6bde45", "filename": "libstdc++-v3/testsuite/util/testsuite_iterators.h", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26af9cd8af1b3b603434586a17127d8c3d2d8266/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_iterators.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26af9cd8af1b3b603434586a17127d8c3d2d8266/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_iterators.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Futil%2Ftestsuite_iterators.h?ref=26af9cd8af1b3b603434586a17127d8c3d2d8266", "patch": "@@ -735,6 +735,7 @@ namespace __gnu_test\n \t  { return i.ptr - s.end; }\n \t};\n \n+    protected:\n       auto\n       get_iterator(T* p)\n       {\n@@ -812,6 +813,37 @@ namespace __gnu_test\n     using test_output_sized_range\n       = test_sized_range<T, output_iterator_wrapper>;\n \n+  // A type meeting the minimum std::sized_range requirements, and whose end()\n+  // returns a sized sentinel.\n+  template<typename T, template<typename> class Iter>\n+    struct test_sized_range_sized_sent : test_sized_range<T, Iter>\n+    {\n+      using test_sized_range<T, Iter>::test_sized_range;\n+\n+      template<typename I>\n+\tstruct sentinel\n+\t{\n+\t  T* end;\n+\n+\t  friend bool operator==(const sentinel& s, const I& i) noexcept\n+\t  { return s.end == i.ptr; }\n+\n+\t  friend std::iter_difference_t<I>\n+\t  operator-(const sentinel& s, const I& i) noexcept\n+\t  { return s.end - i.ptr; }\n+\n+\t  friend std::iter_difference_t<I>\n+\t  operator-(const I& i, const sentinel& s) noexcept\n+\t  { return i.ptr - s.end; }\n+\t};\n+\n+      auto end() &\n+      {\n+\tusing I = decltype(this->get_iterator(this->bounds.last));\n+\treturn sentinel<I>{this->bounds.last};\n+      }\n+    };\n+\n // test_range and test_sized_range do not own their elements, so they model\n // std::ranges::borrowed_range.  This file does not define specializations of\n // std::ranges::enable_borrowed_range, so that individual tests can decide"}]}