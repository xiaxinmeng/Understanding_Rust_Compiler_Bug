{"sha": "1fea874e7a0868d3d77c06286226c974237c45e9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZlYTg3NGU3YTA4NjhkM2Q3N2MwNjI4NjIyNmM5NzQyMzdjNDVlOQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2008-10-14T15:02:45Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-10-14T15:02:45Z"}, "message": "stl_tree.h (_Rb_tree<>::max_size): Use Node_allocator for improved accuracy.\n\n2008-10-14  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\t* include/bits/stl_tree.h (_Rb_tree<>::max_size): Use Node_allocator\n\tfor improved accuracy.\n\t* include/bits/stl_list.h (list<>::max_size): Likewise.\n\t* testsuite/23_containers/multimap/capacity/29134.cc: Adjust.\n\t* testsuite/23_containers/set/capacity/29134.cc: Likewise.\n\t* testsuite/23_containers/multiset/capacity/29134.cc: Likewise.\n\t* testsuite/23_containers/list/capacity/29134.cc: Likewise.\n\t* testsuite/23_containers/map/capacity/29134.cc: Likewise.\n\nFrom-SVN: r141110", "tree": {"sha": "efd3bf734f741b00465f21ae7061f609c28b42fa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efd3bf734f741b00465f21ae7061f609c28b42fa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fea874e7a0868d3d77c06286226c974237c45e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fea874e7a0868d3d77c06286226c974237c45e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fea874e7a0868d3d77c06286226c974237c45e9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fea874e7a0868d3d77c06286226c974237c45e9/comments", "author": null, "committer": null, "parents": [{"sha": "388092d5b419ad5573c6dcd1c6478691e8417087", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/388092d5b419ad5573c6dcd1c6478691e8417087", "html_url": "https://github.com/Rust-GCC/gccrs/commit/388092d5b419ad5573c6dcd1c6478691e8417087"}], "stats": {"total": 47, "additions": 34, "deletions": 13}, "files": [{"sha": "63cb52f169a69e4f6a6133434fb95df412352433", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fea874e7a0868d3d77c06286226c974237c45e9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fea874e7a0868d3d77c06286226c974237c45e9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1fea874e7a0868d3d77c06286226c974237c45e9", "patch": "@@ -1,3 +1,14 @@\n+2008-10-14  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\t* include/bits/stl_tree.h (_Rb_tree<>::max_size): Use Node_allocator\n+\tfor improved accuracy.\n+\t* include/bits/stl_list.h (list<>::max_size): Likewise.\n+\t* testsuite/23_containers/multimap/capacity/29134.cc: Adjust.\n+\t* testsuite/23_containers/set/capacity/29134.cc: Likewise.\n+\t* testsuite/23_containers/multiset/capacity/29134.cc: Likewise.\n+\t* testsuite/23_containers/list/capacity/29134.cc: Likewise.\n+\t* testsuite/23_containers/map/capacity/29134.cc: Likewise.\n+\n 2008-10-10  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/20_util/reference_wrapper/24803.cc: Avoid uninitialized"}, {"sha": "7f31e3ccfc1624fe03bca6661752b5aae26b8b35", "filename": "libstdc++-v3/include/bits/stl_list.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fea874e7a0868d3d77c06286226c974237c45e9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fea874e7a0868d3d77c06286226c974237c45e9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_list.h?ref=1fea874e7a0868d3d77c06286226c974237c45e9", "patch": "@@ -807,7 +807,7 @@ _GLIBCXX_BEGIN_NESTED_NAMESPACE(std, _GLIBCXX_STD_D)\n       /**  Returns the size() of the largest possible %list.  */\n       size_type\n       max_size() const\n-      { return _M_get_Tp_allocator().max_size(); }\n+      { return _M_get_Node_allocator().max_size(); }\n \n       /**\n        *  @brief Resizes the %list to the specified number of elements."}, {"sha": "73b75e46268343e63fdfeb36fc8cdbe1e4f3b436", "filename": "libstdc++-v3/include/bits/stl_tree.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fea874e7a0868d3d77c06286226c974237c45e9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fea874e7a0868d3d77c06286226c974237c45e9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstl_tree.h?ref=1fea874e7a0868d3d77c06286226c974237c45e9", "patch": "@@ -1,6 +1,6 @@\n // RB tree implementation -*- C++ -*-\n \n-// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007\n+// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008\n // Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n@@ -643,7 +643,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n \n       size_type\n       max_size() const\n-      { return get_allocator().max_size(); }\n+      { return _M_get_Node_allocator().max_size(); }\n \n       void\n #ifdef __GXX_EXPERIMENTAL_CXX0X__"}, {"sha": "f334479431a7b5679d0ea60aeb764f00c7139249", "filename": "libstdc++-v3/testsuite/23_containers/list/capacity/29134.cc", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fea874e7a0868d3d77c06286226c974237c45e9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2F29134.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fea874e7a0868d3d77c06286226c974237c45e9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2F29134.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Flist%2Fcapacity%2F29134.cc?ref=1fea874e7a0868d3d77c06286226c974237c45e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,7 +28,13 @@ void test01()\n \n   std::list<int> l;\n \n-  VERIFY( l.max_size() == l.get_allocator().max_size() );\n+#ifndef _GLIBCXX_DEBUG\n+  using std::_List_node;\n+#else\n+  using std::_GLIBCXX_STD_D::_List_node;\n+#endif\n+\n+  VERIFY( l.max_size() == std::allocator<_List_node<int> >().max_size() );\n }\n \n int main()"}, {"sha": "b43f091e31ff0e58618d53904bbc2ae80d00985f", "filename": "libstdc++-v3/testsuite/23_containers/map/capacity/29134.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fea874e7a0868d3d77c06286226c974237c45e9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fcapacity%2F29134.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fea874e7a0868d3d77c06286226c974237c45e9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fcapacity%2F29134.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmap%2Fcapacity%2F29134.cc?ref=1fea874e7a0868d3d77c06286226c974237c45e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,7 +28,8 @@ void test01()\n \n   std::map<int, int> m;\n \n-  VERIFY( m.max_size() == m.get_allocator().max_size() );\n+  VERIFY( (m.max_size() == std::allocator<std::_Rb_tree_node<\n+\t                   std::pair<const int, int> > >().max_size()) );\n }\n \n int main()"}, {"sha": "c592fd1f1bde7d2ab45fd785a4772272f1732075", "filename": "libstdc++-v3/testsuite/23_containers/multimap/capacity/29134.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fea874e7a0868d3d77c06286226c974237c45e9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fcapacity%2F29134.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fea874e7a0868d3d77c06286226c974237c45e9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fcapacity%2F29134.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultimap%2Fcapacity%2F29134.cc?ref=1fea874e7a0868d3d77c06286226c974237c45e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,7 +28,8 @@ void test01()\n \n   std::multimap<int, int> mm;\n \n-  VERIFY( mm.max_size() == mm.get_allocator().max_size() );\n+  VERIFY( (mm.max_size() == std::allocator<std::_Rb_tree_node<\n+\t                    std::pair<const int, int> > >().max_size()) );\n }\n \n int main()"}, {"sha": "f75e65268ffc1e5dfda2ae289e0ea2fdd86b431a", "filename": "libstdc++-v3/testsuite/23_containers/multiset/capacity/29134.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fea874e7a0868d3d77c06286226c974237c45e9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fcapacity%2F29134.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fea874e7a0868d3d77c06286226c974237c45e9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fcapacity%2F29134.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fmultiset%2Fcapacity%2F29134.cc?ref=1fea874e7a0868d3d77c06286226c974237c45e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,7 +28,8 @@ void test01()\n \n   std::multiset<int> ms;\n \n-  VERIFY( ms.max_size() == ms.get_allocator().max_size() );\n+  VERIFY( ms.max_size()\n+\t  == std::allocator<std::_Rb_tree_node<int> >().max_size() );\n }\n \n int main()"}, {"sha": "6669f27d1eacb0d628fd045d09f0f1df16cadeca", "filename": "libstdc++-v3/testsuite/23_containers/set/capacity/29134.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fea874e7a0868d3d77c06286226c974237c45e9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fcapacity%2F29134.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fea874e7a0868d3d77c06286226c974237c45e9/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fcapacity%2F29134.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F23_containers%2Fset%2Fcapacity%2F29134.cc?ref=1fea874e7a0868d3d77c06286226c974237c45e9", "patch": "@@ -1,4 +1,4 @@\n-// Copyright (C) 2006 Free Software Foundation, Inc.\n+// Copyright (C) 2006, 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -28,7 +28,8 @@ void test01()\n \n   std::set<int> s;\n \n-  VERIFY( s.max_size() == s.get_allocator().max_size() );\n+  VERIFY( s.max_size() ==\n+\t  std::allocator<std::_Rb_tree_node<int> >().max_size() );\n }\n \n int main()"}]}