{"sha": "3abd6c1abf56fcaf3bc4c9eca06fb4a27a6847dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2FiZDZjMWFiZjU2ZmNhZjNiYzRjOWVjYTA2ZmI0YTI3YTY4NDdkYw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-07-28T10:32:54Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-07-28T10:32:54Z"}, "message": "re PR target/44903 (FAIL: gcc.dg/pr35258.c execution test)\n\n2010-07-28  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/44903\n\t* builtins.c (fold_builtin_memory_op): On STRICT_ALIGNMENT\n\ttargets try harder to not generate unaligned accesses.\n\nFrom-SVN: r162624", "tree": {"sha": "24f323c2263a9fb7668117d254c9b2b8744a55e7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/24f323c2263a9fb7668117d254c9b2b8744a55e7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3abd6c1abf56fcaf3bc4c9eca06fb4a27a6847dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3abd6c1abf56fcaf3bc4c9eca06fb4a27a6847dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3abd6c1abf56fcaf3bc4c9eca06fb4a27a6847dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3abd6c1abf56fcaf3bc4c9eca06fb4a27a6847dc/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb801fa63ca424c28279ffcea1129c95b78c9d6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb801fa63ca424c28279ffcea1129c95b78c9d6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb801fa63ca424c28279ffcea1129c95b78c9d6e"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "f2fe41f7a9fcde03403b2ee67ff938241cd2d1cb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3abd6c1abf56fcaf3bc4c9eca06fb4a27a6847dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3abd6c1abf56fcaf3bc4c9eca06fb4a27a6847dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3abd6c1abf56fcaf3bc4c9eca06fb4a27a6847dc", "patch": "@@ -1,3 +1,9 @@\n+2010-07-28  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/44903\n+\t* builtins.c (fold_builtin_memory_op): On STRICT_ALIGNMENT\n+\ttargets try harder to not generate unaligned accesses.\n+\n 2010-07-28  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \tPR rtl-optimization/45101"}, {"sha": "b20426cd784cb333632ca0b7bd2e01f9bc1173f3", "filename": "gcc/builtins.c", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3abd6c1abf56fcaf3bc4c9eca06fb4a27a6847dc/gcc%2Fbuiltins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3abd6c1abf56fcaf3bc4c9eca06fb4a27a6847dc/gcc%2Fbuiltins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltins.c?ref=3abd6c1abf56fcaf3bc4c9eca06fb4a27a6847dc", "patch": "@@ -8474,7 +8474,10 @@ fold_builtin_memory_op (location_t loc, tree dest, tree src,\n       STRIP_NOPS (srcvar);\n       if (TREE_CODE (srcvar) == ADDR_EXPR\n \t  && var_decl_component_p (TREE_OPERAND (srcvar, 0))\n-\t  && tree_int_cst_equal (TYPE_SIZE_UNIT (srctype), len))\n+\t  && tree_int_cst_equal (TYPE_SIZE_UNIT (srctype), len)\n+\t  && (!STRICT_ALIGNMENT\n+\t      || !destvar\n+\t      || src_align >= (int) TYPE_ALIGN (desttype)))\n \tsrcvar = fold_build2 (MEM_REF, destvar ? desttype : srctype,\n \t\t\t      srcvar, off0);\n       else\n@@ -8485,11 +8488,17 @@ fold_builtin_memory_op (location_t loc, tree dest, tree src,\n \n       if (srcvar == NULL_TREE)\n \t{\n+\t  if (STRICT_ALIGNMENT\n+\t      && src_align < (int) TYPE_ALIGN (desttype))\n+\t    return NULL_TREE;\n \t  STRIP_NOPS (src);\n \t  srcvar = fold_build2 (MEM_REF, desttype, src, off0);\n \t}\n       else if (destvar == NULL_TREE)\n \t{\n+\t  if (STRICT_ALIGNMENT\n+\t      && dest_align < (int) TYPE_ALIGN (srctype))\n+\t    return NULL_TREE;\n \t  STRIP_NOPS (dest);\n \t  destvar = fold_build2 (MEM_REF, srctype, dest, off0);\n \t}"}]}