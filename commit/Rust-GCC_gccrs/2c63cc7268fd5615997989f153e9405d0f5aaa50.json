{"sha": "2c63cc7268fd5615997989f153e9405d0f5aaa50", "node_id": "C_kwDOANBUbNoAKDJjNjNjYzcyNjhmZDU2MTU5OTc5ODlmMTUzZTk0MDVkMGY1YWFhNTA", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-10T09:10:24Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2023-03-10T09:10:24Z"}, "message": "c, c++, cgraphunit: Prevent duplicated -Wunused-value warnings [PR108079]\n\nOn the following testcase, we warn with -Wunused-value twice, once\nin the FEs and later on cgraphunit again with slightly different\nwording.\n\nThe following patch fixes that by registering a warning suppression in the\nFEs when we warn and not warning in cgraphunit anymore if that happened.\n\n2023-03-10  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR c/108079\ngcc/\n\t* cgraphunit.cc (check_global_declaration): Don't warn for unused\n\tvariables which have OPT_Wunused_variable warning suppressed.\ngcc/c/\n\t* c-decl.cc (pop_scope): Suppress OPT_Wunused_variable warning\n\tafter diagnosing it.\ngcc/cp/\n\t* decl.cc (poplevel): Suppress OPT_Wunused_variable warning\n\tafter diagnosing it.\ngcc/testsuite/\n\t* c-c++-common/Wunused-var-18.c: New test.", "tree": {"sha": "a69a983a22dcf7ae8e273865b1dbb204a11ccb91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a69a983a22dcf7ae8e273865b1dbb204a11ccb91"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2c63cc7268fd5615997989f153e9405d0f5aaa50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c63cc7268fd5615997989f153e9405d0f5aaa50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c63cc7268fd5615997989f153e9405d0f5aaa50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c63cc7268fd5615997989f153e9405d0f5aaa50/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1d5c729ceeb112af26e3298314a0de3058f1d82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1d5c729ceeb112af26e3298314a0de3058f1d82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1d5c729ceeb112af26e3298314a0de3058f1d82"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "e537d33f3986083c039f671bcf5eb4c6f0408300", "filename": "gcc/c/c-decl.cc", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c63cc7268fd5615997989f153e9405d0f5aaa50/gcc%2Fc%2Fc-decl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c63cc7268fd5615997989f153e9405d0f5aaa50/gcc%2Fc%2Fc-decl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.cc?ref=2c63cc7268fd5615997989f153e9405d0f5aaa50", "patch": "@@ -1310,7 +1310,10 @@ pop_scope (void)\n \t      && scope != external_scope)\n \t    {\n \t      if (!TREE_USED (p))\n-\t\twarning (OPT_Wunused_variable, \"unused variable %q+D\", p);\n+\t\t{\n+\t\t  warning (OPT_Wunused_variable, \"unused variable %q+D\", p);\n+\t\t  suppress_warning (p, OPT_Wunused_variable);\n+\t\t}\n \t      else if (DECL_CONTEXT (p) == current_function_decl)\n \t\twarning_at (DECL_SOURCE_LOCATION (p),\n \t\t\t    OPT_Wunused_but_set_variable,"}, {"sha": "e12764f2f906ec3f605ca43d9d1870d68179def9", "filename": "gcc/cgraphunit.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c63cc7268fd5615997989f153e9405d0f5aaa50/gcc%2Fcgraphunit.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c63cc7268fd5615997989f153e9405d0f5aaa50/gcc%2Fcgraphunit.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraphunit.cc?ref=2c63cc7268fd5615997989f153e9405d0f5aaa50", "patch": "@@ -1120,6 +1120,7 @@ check_global_declaration (symtab_node *snode)\n       && (TREE_CODE (decl) != FUNCTION_DECL\n \t  || (!DECL_STATIC_CONSTRUCTOR (decl)\n \t      && !DECL_STATIC_DESTRUCTOR (decl)))\n+      && (! VAR_P (decl) || !warning_suppressed_p (decl, OPT_Wunused_variable))\n       /* Otherwise, ask the language.  */\n       && lang_hooks.decls.warn_unused_global (decl))\n     warning_at (DECL_SOURCE_LOCATION (decl),"}, {"sha": "51199bb311a89d2ab1805faf168499f61a49dbc3", "filename": "gcc/cp/decl.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c63cc7268fd5615997989f153e9405d0f5aaa50/gcc%2Fcp%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c63cc7268fd5615997989f153e9405d0f5aaa50/gcc%2Fcp%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.cc?ref=2c63cc7268fd5615997989f153e9405d0f5aaa50", "patch": "@@ -693,6 +693,7 @@ poplevel (int keep, int reverse, int functionbody)\n \t\telse\n \t\t  warning_at (DECL_SOURCE_LOCATION (decl),\n \t\t\t      OPT_Wunused_variable, \"unused variable %qD\", decl);\n+\t\tsuppress_warning (decl, OPT_Wunused_variable);\n \t      }\n \t    else if (DECL_CONTEXT (decl) == current_function_decl\n \t\t     // For -Wunused-but-set-variable leave references alone."}, {"sha": "5ff772b74c1d18a07418aebfb4fb8dcc196375c6", "filename": "gcc/testsuite/c-c++-common/Wunused-var-18.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2c63cc7268fd5615997989f153e9405d0f5aaa50/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWunused-var-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2c63cc7268fd5615997989f153e9405d0f5aaa50/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWunused-var-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2FWunused-var-18.c?ref=2c63cc7268fd5615997989f153e9405d0f5aaa50", "patch": "@@ -0,0 +1,10 @@\n+/* PR c/108079 */\n+/* { dg-do compile } */\n+/* { dg-options \"-Wunused-variable\" } */\n+\n+int\n+main ()\n+{\n+  static int x;\t/* { dg-warning \"unused variable 'x'\" } */\n+\t\t/* { dg-bogus \"'x' defined but not used\" \"\" { target *-*-* } .-1 } */\n+}"}]}