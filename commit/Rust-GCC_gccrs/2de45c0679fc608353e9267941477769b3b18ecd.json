{"sha": "2de45c0679fc608353e9267941477769b3b18ecd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRlNDVjMDY3OWZjNjA4MzUzZTkyNjc5NDE0Nzc3NjliM2IxOGVjZA==", "commit": {"author": {"name": "Martin v. L\u00f6wis", "email": "loewis@informatik.hu-berlin.de", "date": "1999-04-14T05:34:55Z"}, "committer": {"name": "Martin v. L\u00f6wis", "email": "loewis@gcc.gnu.org", "date": "1999-04-14T05:34:55Z"}, "message": "extend.texi (Deprecated Features): New node.\n\n\t* extend.texi (Deprecated Features): New node.\n\t* invoke.texi (-Wdeprecated): Document.\n\t* cp/lang-options.h (-Wdeprecated): New flag.\n\t* cp/decl2.c (warn_deprecated): New flag.\n\t(lang_decode_option): Deprecated this-is-variable,\n\texternal-templates, alt-external-templates.\n\tSupport -Wdeprecated.\n\t* cp/errfn.c (cp_deprecated): New function.\n\nFrom-SVN: r26438", "tree": {"sha": "e1d858eaef48804c0e8d8e939fbfdb6f3a5e58bd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e1d858eaef48804c0e8d8e939fbfdb6f3a5e58bd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2de45c0679fc608353e9267941477769b3b18ecd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2de45c0679fc608353e9267941477769b3b18ecd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2de45c0679fc608353e9267941477769b3b18ecd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2de45c0679fc608353e9267941477769b3b18ecd/comments", "author": null, "committer": null, "parents": [{"sha": "853c37e365f729d9ece936f0432138cbf1abdeb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/853c37e365f729d9ece936f0432138cbf1abdeb5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/853c37e365f729d9ece936f0432138cbf1abdeb5"}], "stats": {"total": 86, "additions": 84, "deletions": 2}, "files": [{"sha": "55c15dd3896ad084a44c869e751b7e9b46f4a6ea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2de45c0679fc608353e9267941477769b3b18ecd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2de45c0679fc608353e9267941477769b3b18ecd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2de45c0679fc608353e9267941477769b3b18ecd", "patch": "@@ -1,3 +1,8 @@\n+Wed Apr 14 13:59:27 1999  Martin von Loewis  <loewis@informatik.hu-berlin.de>\n+\n+\t* extend.texi (Deprecated Features): New node.\n+\t* invoke.texi (-Wdeprecated): Document.\n+\n Wed Apr 14 00:18:22 1999  Jan Hubicka <hubicka@freesoft.cz>\n \n \t* i386.md (SImode logical compare): Avoid outputing non-pariable testw"}, {"sha": "2f00fdd980388b879f2ec86e72dcfe33dcbeb80a", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2de45c0679fc608353e9267941477769b3b18ecd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2de45c0679fc608353e9267941477769b3b18ecd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2de45c0679fc608353e9267941477769b3b18ecd", "patch": "@@ -1,3 +1,12 @@\n+1999-04-13  Martin von Loewis  <loewis@informatik.hu-berlin.de>\n+\n+\t* lang-options.h (-Wdeprecated): New flag.\n+\t* decl2.c (warn_deprecated): New flag.\n+\t(lang_decode_option): Deprecated this-is-variable,\n+\texternal-templates, alt-external-templates.\n+\tSupport -Wdeprecated.\n+\t* errfn.c (cp_deprecated): New function.\n+\n 1999-04-13  Jason Merrill  <jason@yorick.cygnus.com>\n \n \t* decl2.c (setup_initp): Compare DECL_ASSEMBLER_NAME instead"}, {"sha": "acb94d5e91c6168ecbd233ec5c5fd885ffdd2b45", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2de45c0679fc608353e9267941477769b3b18ecd/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2de45c0679fc608353e9267941477769b3b18ecd/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=2de45c0679fc608353e9267941477769b3b18ecd", "patch": "@@ -2959,6 +2959,7 @@ extern void cp_pedwarn\t\t\t\tPVPROTO((const char *, ...));\n extern void cp_pedwarn_at\t\t\tPVPROTO((const char *, ...));\n extern void cp_compiler_error\t\t\tPVPROTO((const char *, ...));\n extern void cp_sprintf\t\t\t\tPVPROTO((const char *, ...));\n+extern void cp_deprecated                       PROTO((const char*));\n \n /* in error.c */\n extern void init_error\t\t\t\tPROTO((void));"}, {"sha": "8f0375b82d43cb33846b3af141c7571ca4766fb5", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2de45c0679fc608353e9267941477769b3b18ecd/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2de45c0679fc608353e9267941477769b3b18ecd/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=2de45c0679fc608353e9267941477769b3b18ecd", "patch": "@@ -315,6 +315,10 @@ int warn_multichar = 1;\n \n int warn_nontemplate_friend = 1;\n \n+/* Nonzero means complain about deprecated features.  */\n+\n+int warn_deprecated = 1;\n+\n /* Nonzero means `$' can be in an identifier.  */\n \n #ifndef DOLLARS_IN_IDENTIFIERS\n@@ -566,6 +570,7 @@ lang_decode_option (argc, argv)\n \t  flag_external_templates = 1;\n \t  flag_alt_external_templates = 1;\n \t  found = 1;\n+          cp_deprecated (\"-falt-external-templates\");\n \t}\n       else if (! strcmp (p, \"no-alt-external-templates\"))\n \t{\n@@ -589,6 +594,18 @@ lang_decode_option (argc, argv)\n \t  flag_guiding_decls = 0;\n \t  found = 1;\n \t}\n+      else if (!strcmp (p, \"this-is-variable\"))\n+        {\n+          flag_this_is_variable = 1;\n+          found = 1;\n+          cp_deprecated (\"-fthis-is-variable\");\n+        }\n+      else if (!strcmp (p, \"external-templates\"))\n+        {\n+          flag_external_templates = 1;\n+          found = 1;\n+          cp_deprecated (\"-fexternal-templates\");\n+        }\n       else if (!strcmp (p, \"new-abi\"))\n \t{\n \t  flag_new_abi = 1;\n@@ -698,6 +715,8 @@ lang_decode_option (argc, argv)\n \twarn_unknown_pragmas = setting * 2;\n       else if (!strcmp (p, \"non-template-friend\"))\n \twarn_nontemplate_friend = setting;\n+      else if (!strcmp (p, \"deprecated\"))\n+        warn_deprecated = setting;\n       else if (!strcmp (p, \"comment\"))\n \t;\t\t\t/* cpp handles this one.  */\n       else if (!strcmp (p, \"comments\"))"}, {"sha": "b5d3eeccd5a9fa283323a2d70e850c103fe44c8c", "filename": "gcc/cp/errfn.c", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2de45c0679fc608353e9267941477769b3b18ecd/gcc%2Fcp%2Ferrfn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2de45c0679fc608353e9267941477769b3b18ecd/gcc%2Fcp%2Ferrfn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ferrfn.c?ref=2de45c0679fc608353e9267941477769b3b18ecd", "patch": "@@ -265,6 +265,17 @@ cp_compiler_error VPROTO((const char *format, ...))\n   va_end (ap);\n }\n \n+void\n+cp_deprecated (msg)\n+  const char *msg;\n+{\n+  extern int warn_deprecated;\n+  if (!warn_deprecated)\n+    return;\n+  cp_warning (\"%s is deprecated.\", msg);\n+  cp_warning (\"Please see the documentation for details.\");\n+}\n+\n void\n cp_sprintf VPROTO((const char *format, ...))\n {"}, {"sha": "cfc64564028f965eb822801e436f7546f6e52699", "filename": "gcc/cp/lang-options.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2de45c0679fc608353e9267941477769b3b18ecd/gcc%2Fcp%2Flang-options.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2de45c0679fc608353e9267941477769b3b18ecd/gcc%2Fcp%2Flang-options.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flang-options.h?ref=2de45c0679fc608353e9267941477769b3b18ecd", "patch": "@@ -130,4 +130,5 @@ DEFINE_LANG_NAME (\"C++\")\n   { \"-Wno-old-style-cast\", \"\" },\n   { \"-Wnon-template-friend\", \"\" }, \n   { \"-Wno-non-template-friend\", \"Don't warn when non-templatized friend functions are declared within a template\" },\n-\n+  { \"-Wdeprecated\", \"\" },\n+  { \"-Wno-deprecated\", \"Don't announce deprecation of compiler features\" },"}, {"sha": "f969f65b1892f64cd45b6d5078eb9ae39a03588f", "filename": "gcc/extend.texi", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2de45c0679fc608353e9267941477769b3b18ecd/gcc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2de45c0679fc608353e9267941477769b3b18ecd/gcc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fextend.texi?ref=2de45c0679fc608353e9267941477769b3b18ecd", "patch": "@@ -65,6 +65,7 @@ C++ Language}, for extensions that apply @emph{only} to C++.\n \t\t\t function.\n * Return Address::      Getting the return or frame address of a function.\n * Other Builtins::      Other built-in functions.\n+* Deprecated Features:: Things might disappear from g++.\n @end menu\n @end ifset\n @ifclear INTERNALS\n@@ -112,6 +113,7 @@ C++ Language}, for extensions that apply @emph{only} to C++.\n * Function Names::\tPrintable strings which are the name of the current\n \t\t\t function.\n * Return Address::      Getting the return or frame address of a function.\n+* Deprecated Features:: Things might disappear from g++.\n @end menu\n @end ifclear\n \n@@ -3090,6 +3092,36 @@ or constructor expression (@pxref{Constructors}) and will not return 1\n when you pass a constant numeric value to the inline function unless you\n specify the @samp{-O} option.\n \n+@node Deprecated Features\n+@section Deprecated Features\n+\n+In the past, the GNU C++ compiler was extended to experiment with new\n+features, at a time when the C++ language was still evolving. Now that\n+the C++ standard is complete, some of those features are superceded by\n+superior alternatives. Using the old features might cause a warning in\n+some cases that the feature will be dropped in the future. In other\n+cases, the feature might be gone already.\n+\n+While the list below is not exhaustive, it documents some of the options\n+that are now deprecated:\n+\n+@table @code\n+@item -fthis-is-variable\n+In early versions of C++, assignment to this could be used to implement\n+application-defined memory allocation. Now, allocation functions\n+(@samp{operator new}) are the standard-conforming way to achieve the\n+same effect.\n+\n+@item -fexternal-templates\n+@itemx -falt-external-templates\n+These are two of the many ways for g++ to implement template\n+instantiation. @xref{Template Instantiation}. The C++ standard clearly\n+defines how template definitions have to be organized across\n+implementation units. g++ has an implicit instantiation mechanism that\n+should work just fine for standard-conforming code.\n+\n+@end table\n+\n @node C++ Extensions\n @chapter Extensions to the C++ Language\n @cindex extensions, C++ language"}, {"sha": "a8eb92369dcc4b248a2159f58484fe48729f0a84", "filename": "gcc/invoke.texi", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2de45c0679fc608353e9267941477769b3b18ecd/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2de45c0679fc608353e9267941477769b3b18ecd/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=2de45c0679fc608353e9267941477769b3b18ecd", "patch": "@@ -109,7 +109,8 @@ in the following sections.\n -fno-implement-inlines -fname-mangling-version-@var{n}  -fno-default-inline  \n -foperator-names  -fno-optional-diags  -frepo  -fstrict-prototype\n -fsquangle  -ftemplate-depth-@var{n}  -fthis-is-variable  -fvtable-thunks\n--nostdinc++  -Wctor-dtor-privacy  -Weffc++  -Wno-non-template-friend \n+-nostdinc++  -Wctor-dtor-privacy -Wno-deprecated -Weffc++  \n+-Wno-non-template-friend \n -Wnon-virtual-dtor  -Wold-style-cast  -Woverloaded-virtual  \n -Wno-pmf-conversions  -Wreorder  -Wsign-promo  -Wsynth\n @end smallexample\n@@ -1218,6 +1219,9 @@ Warn about violations of various style guidelines from Scott Meyers'\n that the standard library headers do not obey all of these guidelines;\n you can use @samp{grep -v} to filter out those warnings.\n \n+@item -Wno-deprecated (C++ only)\n+Do not warn about usage of deprecated features. @xref{Deprecated Features}.\n+\n @item -Wno-non-template-friend (C++ only)\n Disable warnings when non-templatized friend functions are declared\n within a template. With the advent of explicit template specification"}]}