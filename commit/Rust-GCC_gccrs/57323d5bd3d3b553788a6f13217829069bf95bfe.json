{"sha": "57323d5bd3d3b553788a6f13217829069bf95bfe", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTczMjNkNWJkM2QzYjU1Mzc4OGE2ZjEzMjE3ODI5MDY5YmY5NWJmZQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-27T13:25:54Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-27T13:25:54Z"}, "message": "[multiple changes]\n\n2016-04-27  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_ch10.adb, sem_case.adb: Mark messages udner -gnatwr when needed.\n\n2016-04-27  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* errout.adb, errutil.adb: Minor reformatting.\n\n2016-04-27  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch13.adb (Analyze_Aspect_Specifications, case Pre/Post):\n\tCheck that the classwide version is illegal when the prefix is\n\tan operation of an untagged synchronized type.\n\nFrom-SVN: r235504", "tree": {"sha": "cadf403001fefe729cb1479ae866998d44cc4fd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cadf403001fefe729cb1479ae866998d44cc4fd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57323d5bd3d3b553788a6f13217829069bf95bfe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57323d5bd3d3b553788a6f13217829069bf95bfe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57323d5bd3d3b553788a6f13217829069bf95bfe", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57323d5bd3d3b553788a6f13217829069bf95bfe/comments", "author": null, "committer": null, "parents": [{"sha": "ac566cbe4b11e71b0c9c3b595e1787fe06487310", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac566cbe4b11e71b0c9c3b595e1787fe06487310", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac566cbe4b11e71b0c9c3b595e1787fe06487310"}], "stats": {"total": 45, "additions": 37, "deletions": 8}, "files": [{"sha": "0a0f0390c7eaace827913c77d7a658dd29e24208", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57323d5bd3d3b553788a6f13217829069bf95bfe/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57323d5bd3d3b553788a6f13217829069bf95bfe/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=57323d5bd3d3b553788a6f13217829069bf95bfe", "patch": "@@ -1,3 +1,17 @@\n+2016-04-27  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_ch10.adb, sem_case.adb: Mark messages udner -gnatwr when needed.\n+\n+2016-04-27  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* errout.adb, errutil.adb: Minor reformatting.\n+\n+2016-04-27  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch13.adb (Analyze_Aspect_Specifications, case Pre/Post):\n+\tCheck that the classwide version is illegal when the prefix is\n+\tan operation of an untagged synchronized type.\n+\n 2016-04-27  Arnaud Charlet  <charleT@adacore.com>\n \n \t* sinput-l.ads, sem_ch13.adb: Minor editing."}, {"sha": "1c794de3c9b075576a896bcd6ad2855f6cc08e08", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57323d5bd3d3b553788a6f13217829069bf95bfe/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57323d5bd3d3b553788a6f13217829069bf95bfe/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=57323d5bd3d3b553788a6f13217829069bf95bfe", "patch": "@@ -3082,6 +3082,7 @@ package body Errout is\n \n    begin\n       if Is_Serious_Error then\n+\n          --  We always set Error_Posted on the node itself\n \n          Set_Error_Posted (N);"}, {"sha": "3a8f0fbf5d8671f870350ad481f8481b2e2dfd56", "filename": "gcc/ada/errutil.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57323d5bd3d3b553788a6f13217829069bf95bfe/gcc%2Fada%2Ferrutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57323d5bd3d3b553788a6f13217829069bf95bfe/gcc%2Fada%2Ferrutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.adb?ref=57323d5bd3d3b553788a6f13217829069bf95bfe", "patch": "@@ -314,8 +314,7 @@ package body Errutil is\n          end if;\n \n       elsif Errors.Table (Cur_Msg).Warn\n-           or else\n-         Errors.Table (Cur_Msg).Style\n+        or else Errors.Table (Cur_Msg).Style\n       then\n          Warnings_Detected := Warnings_Detected + 1;\n "}, {"sha": "8df46f067deabf05b058f5545783ff2c7ffaa224", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57323d5bd3d3b553788a6f13217829069bf95bfe/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57323d5bd3d3b553788a6f13217829069bf95bfe/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=57323d5bd3d3b553788a6f13217829069bf95bfe", "patch": "@@ -1128,10 +1128,7 @@ package body Sem_Case is\n    procedure No_OP (C : Node_Id) is\n    begin\n       if Nkind (C) = N_Range and then Warn_On_Redundant_Constructs then\n-         Error_Msg_N (\"choice is an empty range?\", C);\n-\n-      else\n-         null;\n+         Error_Msg_N (\"choice is an empty range?r?\", C);\n       end if;\n    end No_OP;\n "}, {"sha": "5ab4afb4be8ae5e9be14344edffc6b5889267abc", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57323d5bd3d3b553788a6f13217829069bf95bfe/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57323d5bd3d3b553788a6f13217829069bf95bfe/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=57323d5bd3d3b553788a6f13217829069bf95bfe", "patch": "@@ -557,7 +557,7 @@ package body Sem_Ch10 is\n                                   or else Used_In_Spec)\n                      then\n                         Error_Msg_N -- CODEFIX\n-                          (\"redundant with clause in body??\", Clause);\n+                          (\"redundant with clause in body?r?\", Clause);\n                      end if;\n \n                      Used_In_Body := False;\n@@ -586,7 +586,7 @@ package body Sem_Ch10 is\n \n                      if Withed then\n                         Error_Msg_N -- CODEFIX\n-                          (\"redundant with clause??\", Clause);\n+                          (\"redundant with clause?r?\", Clause);\n                      end if;\n                   end;\n                end if;"}, {"sha": "54cc886a6a5ad003b34a524c794c0c71fab9285d", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57323d5bd3d3b553788a6f13217829069bf95bfe/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57323d5bd3d3b553788a6f13217829069bf95bfe/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=57323d5bd3d3b553788a6f13217829069bf95bfe", "patch": "@@ -3129,6 +3129,24 @@ package body Sem_Ch13 is\n                      Pname := Name_Postcondition;\n                   end if;\n \n+                  --  Check that the class-wide predicate cannot be applied to\n+                  --  an operation of a synchronized type that is not a tagged\n+                  --  type. Other legality checks are performed when analyzing\n+                  --  the contract of the operation.\n+\n+                  if Class_Present (Aspect)\n+                    and then Is_Concurrent_Type (Current_Scope)\n+                    and then not Is_Tagged_Type (Current_Scope)\n+                    and then Ekind_In (E, E_Entry, E_Function, E_Procedure)\n+                  then\n+                     Error_Msg_Name_1 := Original_Aspect_Pragma_Name (Aspect);\n+                     Error_Msg_N\n+                       (\"aspect % can only be specified for a primitive \"\n+                        & \"operation of a tagged type\", Aspect);\n+\n+                     goto Continue;\n+                  end if;\n+\n                   --  If the expressions is of the form A and then B, then\n                   --  we generate separate Pre/Post aspects for the separate\n                   --  clauses. Since we allow multiple pragmas, there is no"}]}