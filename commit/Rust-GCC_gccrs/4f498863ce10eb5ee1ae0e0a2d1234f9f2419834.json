{"sha": "4f498863ce10eb5ee1ae0e0a2d1234f9f2419834", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGY0OTg4NjNjZTEwZWI1ZWUxYWUwZTBhMmQxMjM0ZjlmMjQxOTgzNA==", "commit": {"author": {"name": "Richard Sandiford", "email": "rdsandiford@googlemail.com", "date": "2014-08-28T06:24:53Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2014-08-28T06:24:53Z"}, "message": "var-tracking.c: Include rtl-iter.h.\n\ngcc/\n\t* var-tracking.c: Include rtl-iter.h.\n\t(rtx_debug_expr_p): Turn from being a for_each_rtx callback\n\tto being a function that examines each subrtx itself.\n\t(use_type): Update accordingly.\n\nFrom-SVN: r214661", "tree": {"sha": "3f1d44b70def67e70df19ea222c171ca8ec0ac5a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f1d44b70def67e70df19ea222c171ca8ec0ac5a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4f498863ce10eb5ee1ae0e0a2d1234f9f2419834", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f498863ce10eb5ee1ae0e0a2d1234f9f2419834", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4f498863ce10eb5ee1ae0e0a2d1234f9f2419834", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4f498863ce10eb5ee1ae0e0a2d1234f9f2419834/comments", "author": {"login": "rsandifo", "id": 4235983, "node_id": "MDQ6VXNlcjQyMzU5ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/4235983?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo", "html_url": "https://github.com/rsandifo", "followers_url": "https://api.github.com/users/rsandifo/followers", "following_url": "https://api.github.com/users/rsandifo/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo/orgs", "repos_url": "https://api.github.com/users/rsandifo/repos", "events_url": "https://api.github.com/users/rsandifo/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "638e18a4f236204b61e6a6e74583f689926ec812", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/638e18a4f236204b61e6a6e74583f689926ec812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/638e18a4f236204b61e6a6e74583f689926ec812"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "4ca32242176aecfec8f9009f3c6910b9dc5967ad", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f498863ce10eb5ee1ae0e0a2d1234f9f2419834/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f498863ce10eb5ee1ae0e0a2d1234f9f2419834/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4f498863ce10eb5ee1ae0e0a2d1234f9f2419834", "patch": "@@ -1,3 +1,10 @@\n+2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n+\n+\t* var-tracking.c: Include rtl-iter.h.\n+\t(rtx_debug_expr_p): Turn from being a for_each_rtx callback\n+\tto being a function that examines each subrtx itself.\n+\t(use_type): Update accordingly.\n+\n 2014-08-28  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* store-motion.c: Include rtl-iter.h."}, {"sha": "1cd2276c750f16496f14aaa3ca81f2eb28eebf20", "filename": "gcc/var-tracking.c", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4f498863ce10eb5ee1ae0e0a2d1234f9f2419834/gcc%2Fvar-tracking.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4f498863ce10eb5ee1ae0e0a2d1234f9f2419834/gcc%2Fvar-tracking.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvar-tracking.c?ref=4f498863ce10eb5ee1ae0e0a2d1234f9f2419834", "patch": "@@ -118,6 +118,7 @@\n #include \"recog.h\"\n #include \"tm_p.h\"\n #include \"alias.h\"\n+#include \"rtl-iter.h\"\n \n /* var-tracking.c assumes that tree code with the same value as VALUE rtx code\n    has no chance to appear in REG_EXPR/MEM_EXPRs and isn't a decl.\n@@ -5366,16 +5367,16 @@ replace_expr_with_values (rtx loc)\n     return cselib_subst_to_values (loc, VOIDmode);\n }\n \n-/* Return true if *X is a DEBUG_EXPR.  Usable as an argument to\n-   for_each_rtx to tell whether there are any DEBUG_EXPRs within\n-   RTX.  */\n+/* Return true if X contains a DEBUG_EXPR.  */\n \n-static int\n-rtx_debug_expr_p (rtx *x, void *data ATTRIBUTE_UNUSED)\n+static bool\n+rtx_debug_expr_p (const_rtx x)\n {\n-  rtx loc = *x;\n-\n-  return GET_CODE (loc) == DEBUG_EXPR;\n+  subrtx_iterator::array_type array;\n+  FOR_EACH_SUBRTX (iter, array, x, ALL)\n+    if (GET_CODE (*iter) == DEBUG_EXPR)\n+      return true;\n+  return false;\n }\n \n /* Determine what kind of micro operation to choose for a USE.  Return\n@@ -5465,7 +5466,7 @@ use_type (rtx loc, struct count_use_info *cui, enum machine_mode *modep)\n \t\t  DEBUG_EXPRs (only happens in the presence of debug\n \t\t  insns).  */\n \t       && (!MAY_HAVE_DEBUG_INSNS\n-\t\t   || !for_each_rtx (&XEXP (loc, 0), rtx_debug_expr_p, NULL)))\n+\t\t   || !rtx_debug_expr_p (XEXP (loc, 0))))\n \treturn MO_USE;\n       else\n \treturn MO_CLOBBER;"}]}