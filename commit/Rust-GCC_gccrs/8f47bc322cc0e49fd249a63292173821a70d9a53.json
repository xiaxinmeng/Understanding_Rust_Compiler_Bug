{"sha": "8f47bc322cc0e49fd249a63292173821a70d9a53", "node_id": "C_kwDOANBUbNoAKDhmNDdiYzMyMmNjMGU0OWZkMjQ5YTYzMjkyMTczODIxYTcwZDlhNTM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-06-08T15:25:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-08T15:25:06Z"}, "message": "Merge #1299 #1300\n\n1299: rust/lex: skip broken string expression r=philberty a=liushuyu\n\n- rust/lex: skip broken string expression and unstuck the parser when it could not advance\r\n\r\nshould fix #1297\r\n\n\n1300: docker: Fix GCCRS_BUILD info r=CohenArthur a=CohenArthur\n\nSometimes, the GCCRS_BUILD file would end up empty. I believe this is\r\ndue to how Dockerfiles work in that there was a \"race condition\" between\r\nthe two `RUN` commands. Hopefully this should fix it.\r\n\n\nCo-authored-by: liushuyu <liushuyu011@gmail.com>\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>", "tree": {"sha": "3a207171f22bcdf46ef3aaca904511a7f0725edc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3a207171f22bcdf46ef3aaca904511a7f0725edc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f47bc322cc0e49fd249a63292173821a70d9a53", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJioL9SCRBK7hj4Ov3rIwAAv6sIAHj9FFCYxCOyfkyOMzZasueK\nHC9py3M7b6rHJ1rD5I7Xq332sdI+4EigQMfmcFnB9dETYNA/FgXy1EWeQPwKvka4\nrKCrgCZG3hUM3L/ZkWcKJBAgMTZ31PiKLGMs7eqKG49ybKyI3+lh17QPb//DendC\n4/4laJfYZXKl7OO/gpyEBadmHL5JY3yn/dFD5NPMO2ttTPHqZc0PiWnVJCjv5kXO\ncQNDUkjMdFp7TV5EBpKK73YVF4TaFaCBShLqLm7FT91NSGHqaPHI6XCcM7Xfglia\nhiyimhlAtO3XQWJhXJKz7cayvnkmHj4ysZm50DovQlkJ279iL2PodYcHR7wQqkw=\n=k1fQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 3a207171f22bcdf46ef3aaca904511a7f0725edc\nparent 9d81164aa0447c738fe0435de14ec9666a03d5da\nparent 46e248fb7fe7af696f5bd331f1b981cfe2ffca76\nparent ab0f9f9e1b9e55522e649d58520fdedcdb6c8859\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1654701906 +0000\ncommitter GitHub <noreply@github.com> 1654701906 +0000\n\nMerge #1299 #1300\n\n1299: rust/lex: skip broken string expression r=philberty a=liushuyu\n\n- rust/lex: skip broken string expression and unstuck the parser when it could not advance\r\n\r\nshould fix #1297\r\n\n\n1300: docker: Fix GCCRS_BUILD info r=CohenArthur a=CohenArthur\n\nSometimes, the GCCRS_BUILD file would end up empty. I believe this is\r\ndue to how Dockerfiles work in that there was a \"race condition\" between\r\nthe two `RUN` commands. Hopefully this should fix it.\r\n\n\nCo-authored-by: liushuyu <liushuyu011@gmail.com>\nCo-authored-by: Arthur Cohen <arthur.cohen@embecosm.com>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f47bc322cc0e49fd249a63292173821a70d9a53", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f47bc322cc0e49fd249a63292173821a70d9a53", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f47bc322cc0e49fd249a63292173821a70d9a53/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d81164aa0447c738fe0435de14ec9666a03d5da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d81164aa0447c738fe0435de14ec9666a03d5da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d81164aa0447c738fe0435de14ec9666a03d5da"}, {"sha": "46e248fb7fe7af696f5bd331f1b981cfe2ffca76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46e248fb7fe7af696f5bd331f1b981cfe2ffca76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46e248fb7fe7af696f5bd331f1b981cfe2ffca76"}, {"sha": "ab0f9f9e1b9e55522e649d58520fdedcdb6c8859", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ab0f9f9e1b9e55522e649d58520fdedcdb6c8859", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ab0f9f9e1b9e55522e649d58520fdedcdb6c8859"}], "stats": {"total": 56, "additions": 52, "deletions": 4}, "files": [{"sha": "759b934fc427a668e2296ea47129bd2dceec760e", "filename": "Dockerfile", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f47bc322cc0e49fd249a63292173821a70d9a53/Dockerfile", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f47bc322cc0e49fd249a63292173821a70d9a53/Dockerfile", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/Dockerfile?ref=8f47bc322cc0e49fd249a63292173821a70d9a53", "patch": "@@ -50,6 +50,7 @@ RUN apt-get update; \\\n ADD . /usr/src/gcc\n RUN /bin/sh -c set -ex; \\\n     cd /usr/src/gcc; \\\n+    git log -1 --format=\"%h\" > /GCCRS_BUILD; \\\n     ./contrib/download_prerequisites; \t{ rm *.tar.* || true; }; \\\n     mkdir -p /usr/src/gcc/gcc-build; \\\n     cd /usr/src/gcc/gcc-build; \\\n@@ -59,9 +60,6 @@ RUN /bin/sh -c set -ex; \\\n     cd /root; \\\n     rm -rf /usr/src/gcc\n \n-RUN cd /usr/src/gcc; \\\n-  git log -1 --format=\"%h\" > /GCCRS_BUILD; \\\n-\n RUN /bin/sh -c set -ex; \\\n     echo '/usr/local/lib64' > /etc/ld.so.conf.d/local-lib64.conf; \\\n     ldconfig -v"}, {"sha": "023b67651b71acf3f7a76ec2addf69f134343262", "filename": "gcc/rust/lex/rust-lex.cc", "status": "modified", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f47bc322cc0e49fd249a63292173821a70d9a53/gcc%2Frust%2Flex%2Frust-lex.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f47bc322cc0e49fd249a63292173821a70d9a53/gcc%2Frust%2Flex%2Frust-lex.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flex%2Frust-lex.cc?ref=8f47bc322cc0e49fd249a63292173821a70d9a53", "patch": "@@ -1856,6 +1856,35 @@ Lexer::parse_raw_identifier (Location loc)\n     }\n }\n \n+// skip broken string input (unterminated strings)\n+void\n+Lexer::skip_broken_string_input (int current_char)\n+{\n+  while (current_char != '\"' && current_char != EOF)\n+    {\n+      if (current_char == '\\n')\n+\t{\n+\t  current_line++;\n+\t  current_column = 1;\n+\t}\n+      else\n+\t{\n+\t  current_column++;\n+\t}\n+      skip_input ();\n+      current_char = peek_input ();\n+    }\n+  if (current_char == '\"')\n+    {\n+      current_column++;\n+\n+      skip_input ();\n+      current_char = peek_input ();\n+    }\n+  rust_debug (\"skipped to %d:%d due to bad quotes\", current_line,\n+\t      current_column);\n+}\n+\n // Parses a unicode string.\n TokenPtr\n Lexer::parse_string (Location loc)\n@@ -1903,6 +1932,9 @@ Lexer::parse_string (Location loc)\n   if (current_char32.value == '\\n')\n     {\n       rust_error_at (get_current_location (), \"unended string literal\");\n+      // by this point, the parser will stuck at this position due to\n+      // undetermined string termination. we now need to unstuck the parser\n+      skip_broken_string_input (current_char32.value);\n     }\n   else if (current_char32.value == '\"')\n     {"}, {"sha": "429b9e129c1c4b1d9a4d5f29a536684094e80efc", "filename": "gcc/rust/lex/rust-lex.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f47bc322cc0e49fd249a63292173821a70d9a53/gcc%2Frust%2Flex%2Frust-lex.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f47bc322cc0e49fd249a63292173821a70d9a53/gcc%2Frust%2Flex%2Frust-lex.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flex%2Frust-lex.h?ref=8f47bc322cc0e49fd249a63292173821a70d9a53", "patch": "@@ -114,6 +114,7 @@ class Lexer\n   Codepoint peek_codepoint_input ();\n   Codepoint test_peek_codepoint_input (int n);\n   void skip_codepoint_input ();\n+  void skip_broken_string_input (int current_char);\n \n   TokenPtr parse_byte_char (Location loc);\n   TokenPtr parse_byte_string (Location loc);"}, {"sha": "0fc1c1fe3ac6fc0be05135c3df6d30cb9f65a4aa", "filename": "gcc/rust/parse/rust-parse-impl.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f47bc322cc0e49fd249a63292173821a70d9a53/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f47bc322cc0e49fd249a63292173821a70d9a53/gcc%2Frust%2Fparse%2Frust-parse-impl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Fparse%2Frust-parse-impl.h?ref=8f47bc322cc0e49fd249a63292173821a70d9a53", "patch": "@@ -914,7 +914,8 @@ Parser<ManagedTokenSource>::parse_delim_token_tree ()\n \n   // repeat loop until finding the matching delimiter\n   t = lexer.peek_token ();\n-  while (!token_id_matches_delims (t->get_id (), delim_type))\n+  while (!token_id_matches_delims (t->get_id (), delim_type)\n+\t && t->get_id () != END_OF_FILE)\n     {\n       std::unique_ptr<AST::TokenTree> tok_tree = parse_token_tree ();\n "}, {"sha": "33001c01fd0047d927ed5f000783a0e36f608d60", "filename": "gcc/testsuite/rust/compile/torture/check-doc-attr-string.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f47bc322cc0e49fd249a63292173821a70d9a53/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fcheck-doc-attr-string.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f47bc322cc0e49fd249a63292173821a70d9a53/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fcheck-doc-attr-string.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fcheck-doc-attr-string.rs?ref=8f47bc322cc0e49fd249a63292173821a70d9a53", "patch": "@@ -0,0 +1,13 @@\n+#![crate_type = \"lib\"]\n+\n+#[doc(alias = \"foo\")] // ok!\n+#[doc(alias(\"bar\", \"baz\"))] // ok!\n+pub struct Bar;\n+\n+#[doc(alias = \"\n+\")] // { dg-error \"unended string literal\" \"\" { target *-*-* } .-1 }\n+pub struct Foo;\n+\n+#[doc(alias(\"\n+\"))] // { dg-error \"unended string literal\" \"\" { target *-*-* } .-1 }\n+pub struct Foo2;"}, {"sha": "832ba7b8ec9551f8274a8e73b8e9089d3fa5a118", "filename": "gcc/testsuite/rust/compile/torture/very-broken-attr-string.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f47bc322cc0e49fd249a63292173821a70d9a53/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fvery-broken-attr-string.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f47bc322cc0e49fd249a63292173821a70d9a53/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fvery-broken-attr-string.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Ftorture%2Fvery-broken-attr-string.rs?ref=8f47bc322cc0e49fd249a63292173821a70d9a53", "patch": "@@ -0,0 +1,3 @@\n+// { dg-excess-errors \"....\" }\n+// { dg-error \"unended string literal\" \"\" { target *-*-* } .+1 }\n+#[doc(alias = \"123"}]}