{"sha": "9d0862bf58535670c144a264d3c567f74cbf1565", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQwODYyYmY1ODUzNTY3MGMxNDRhMjY0ZDNjNTY3Zjc0Y2JmMTU2NQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-07-10T07:53:06Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-07-10T07:53:06Z"}, "message": "re PR tree-optimization/66823 (-ftree-loop-if-convert-stores miscompiles gfortran.dg/elemental_optional_args_3.f90)\n\n2015-07-10  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/66823\n\t* tree-if-conv.c (memrefs_read_or_written_unconditionally): Fix\n\tinverted predicate.\n\n\t* gcc.dg/vect/pr61194.c: Remove -ftree-loop-if-convert-stores\n\twhich should not be necessary.  XFAIL.\n\nFrom-SVN: r225652", "tree": {"sha": "aa3837c7898b7d28284a981cb9c95e87efffa6cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/aa3837c7898b7d28284a981cb9c95e87efffa6cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d0862bf58535670c144a264d3c567f74cbf1565", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d0862bf58535670c144a264d3c567f74cbf1565", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d0862bf58535670c144a264d3c567f74cbf1565", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d0862bf58535670c144a264d3c567f74cbf1565/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3baeecac5fbccd8f32e0a2938290693aa18264ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3baeecac5fbccd8f32e0a2938290693aa18264ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3baeecac5fbccd8f32e0a2938290693aa18264ac"}], "stats": {"total": 17, "additions": 14, "deletions": 3}, "files": [{"sha": "3eabd3c4ab50d79a267b4f96d13908cc2096c037", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d0862bf58535670c144a264d3c567f74cbf1565/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d0862bf58535670c144a264d3c567f74cbf1565/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9d0862bf58535670c144a264d3c567f74cbf1565", "patch": "@@ -1,3 +1,9 @@\n+2015-07-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66823\n+\t* tree-if-conv.c (memrefs_read_or_written_unconditionally): Fix\n+\tinverted predicate.\n+\n 2015-07-09  Steve Ellcey  <sellcey@imgtec.com>\n \n \t* config/mips/mti-linux.h (MIPS_SYSVERSION_SPEC): Update"}, {"sha": "30717ceaf054417b2bbf15ede060761c6abe90c5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d0862bf58535670c144a264d3c567f74cbf1565/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d0862bf58535670c144a264d3c567f74cbf1565/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=9d0862bf58535670c144a264d3c567f74cbf1565", "patch": "@@ -1,3 +1,9 @@\n+2015-07-10  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/66823\n+\t* gcc.dg/vect/pr61194.c: Remove -ftree-loop-if-convert-stores\n+\twhich should not be necessary.  XFAIL.\n+\n 2015-07-09  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/64848"}, {"sha": "8d74e0096949eb1876c3620983d59d9816ada47d", "filename": "gcc/testsuite/gcc.dg/vect/pr61194.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d0862bf58535670c144a264d3c567f74cbf1565/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr61194.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d0862bf58535670c144a264d3c567f74cbf1565/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr61194.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr61194.c?ref=9d0862bf58535670c144a264d3c567f74cbf1565", "patch": "@@ -1,5 +1,4 @@\n /* { dg-require-effective-target vect_cond_mixed } */\n-/* { dg-additional-options \"-ftree-loop-if-convert-stores\" } */\n \n #include \"tree-vect.h\"\n \n@@ -39,4 +38,4 @@ int main()\n   return 0;\n }\n \n-/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" } } */\n+/* { dg-final { scan-tree-dump-times \"vectorized 1 loops\" 1 \"vect\" { xfail *-*-* } } } */"}, {"sha": "ef2612c959c3733fbcc9cfb09aa8c09bd26fc549", "filename": "gcc/tree-if-conv.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d0862bf58535670c144a264d3c567f74cbf1565/gcc%2Ftree-if-conv.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d0862bf58535670c144a264d3c567f74cbf1565/gcc%2Ftree-if-conv.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-if-conv.c?ref=9d0862bf58535670c144a264d3c567f74cbf1565", "patch": "@@ -642,7 +642,7 @@ memrefs_read_or_written_unconditionally (gimple stmt,\n                    || TREE_CODE (ref_base_b) == REALPART_EXPR)\n               ref_base_b = TREE_OPERAND (ref_base_b, 0);\n \n-  \t    if (!operand_equal_p (ref_base_a, ref_base_b, 0))\n+  \t    if (operand_equal_p (ref_base_a, ref_base_b, 0))\n \t      {\n \t        tree cb = bb_predicate (gimple_bb (DR_STMT (b)));\n "}]}