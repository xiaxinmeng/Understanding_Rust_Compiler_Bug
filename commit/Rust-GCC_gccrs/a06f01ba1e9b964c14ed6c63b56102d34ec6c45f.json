{"sha": "a06f01ba1e9b964c14ed6c63b56102d34ec6c45f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA2ZjAxYmExZTliOTY0YzE0ZWQ2YzYzYjU2MTAyZDM0ZWM2YzQ1Zg==", "commit": {"author": {"name": "James E Wilson", "email": "wilson@specifixinc.com", "date": "2003-12-20T02:39:43Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2003-12-20T02:39:43Z"}, "message": "Patch for asm clobber of fp.\n\n* flow.c (mark_set_regs, case PARALLEL): Scan loop forwards.\nAdd case for ASM_OPERANDS.\n* global.c (global_alloc): Set regs_ever_live for regs_asm_clobbered\nregisters.\n\nFrom-SVN: r74869", "tree": {"sha": "efcdb3a3200c268a6543afc46e842ac9d31ecbed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efcdb3a3200c268a6543afc46e842ac9d31ecbed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a06f01ba1e9b964c14ed6c63b56102d34ec6c45f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a06f01ba1e9b964c14ed6c63b56102d34ec6c45f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a06f01ba1e9b964c14ed6c63b56102d34ec6c45f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a06f01ba1e9b964c14ed6c63b56102d34ec6c45f/comments", "author": null, "committer": null, "parents": [{"sha": "020036b90ebb42cee83694d332800d98960f9e6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/020036b90ebb42cee83694d332800d98960f9e6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/020036b90ebb42cee83694d332800d98960f9e6b"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "eea65d3f8d7096aad1f44f75cb4ba3696460ca70", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a06f01ba1e9b964c14ed6c63b56102d34ec6c45f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a06f01ba1e9b964c14ed6c63b56102d34ec6c45f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a06f01ba1e9b964c14ed6c63b56102d34ec6c45f", "patch": "@@ -1,3 +1,10 @@\n+2003-12-19  James E Wilson  <wilson@specifixinc.com>\n+\n+\t* flow.c (mark_set_regs, case PARALLEL): Scan loop forwards.\n+\tAdd case for ASM_OPERANDS.\n+\t* global.c (global_alloc): Set regs_ever_live for regs_asm_clobbered\n+\tregisters.\n+\n 2003-12-19  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* expr.c (check_max_integer_computation_mode): Remove."}, {"sha": "c146310cb0a902b4b2cc35709cd1d3c17270355c", "filename": "gcc/flow.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a06f01ba1e9b964c14ed6c63b56102d34ec6c45f/gcc%2Fflow.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a06f01ba1e9b964c14ed6c63b56102d34ec6c45f/gcc%2Fflow.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflow.c?ref=a06f01ba1e9b964c14ed6c63b56102d34ec6c45f", "patch": "@@ -2468,7 +2468,9 @@ mark_set_regs (struct propagate_block_info *pbi, rtx x, rtx insn)\n       {\n \tint i;\n \n-\tfor (i = XVECLEN (x, 0) - 1; i >= 0; i--)\n+\t/* We must scan forwards.  If we have an asm, we need to set\n+\t   the PROP_ASM_SCAN flag before scanning the clobbers.  */\n+\tfor (i = 0; i < XVECLEN (x, 0); i++)\n \t  {\n \t    rtx sub = XVECEXP (x, 0, i);\n \t    switch (code = GET_CODE (sub))\n@@ -2495,6 +2497,10 @@ mark_set_regs (struct propagate_block_info *pbi, rtx x, rtx insn)\n \t\tmark_set_1 (pbi, code, SET_DEST (sub), cond, insn, flags);\n \t\tbreak;\n \n+\t      case ASM_OPERANDS:\n+\t\tflags |= PROP_ASM_SCAN;\n+\t\tbreak;\n+\n \t      default:\n \t\tbreak;\n \t      }"}, {"sha": "de765b36731e24a0d4a59c52b21e01f17f0b58d2", "filename": "gcc/global.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a06f01ba1e9b964c14ed6c63b56102d34ec6c45f/gcc%2Fglobal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a06f01ba1e9b964c14ed6c63b56102d34ec6c45f/gcc%2Fglobal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fglobal.c?ref=a06f01ba1e9b964c14ed6c63b56102d34ec6c45f", "patch": "@@ -355,6 +355,8 @@ global_alloc (FILE *file)\n       else if (cannot_elim)\n \terror (\"%s cannot be used in asm here\",\n \t       reg_names[eliminables[i].from]);\n+      else\n+\tregs_ever_live[eliminables[i].from] = 1;\n     }\n #if FRAME_POINTER_REGNUM != HARD_FRAME_POINTER_REGNUM\n   if (!regs_asm_clobbered[HARD_FRAME_POINTER_REGNUM])\n@@ -366,6 +368,8 @@ global_alloc (FILE *file)\n   else if (need_fp)\n     error (\"%s cannot be used in asm here\",\n \t   reg_names[HARD_FRAME_POINTER_REGNUM]);\n+  else\n+    regs_ever_live[HARD_FRAME_POINTER_REGNUM] = 1;\n #endif\n \n #else\n@@ -377,6 +381,8 @@ global_alloc (FILE *file)\n     }\n   else if (need_fp)\n     error (\"%s cannot be used in asm here\", reg_names[FRAME_POINTER_REGNUM]);\n+  else\n+    regs_ever_live[FRAME_POINTER_REGNUM] = 1;\n #endif\n \n   /* Track which registers have already been used.  Start with registers"}]}