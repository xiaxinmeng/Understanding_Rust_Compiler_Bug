{"sha": "2283164d2efd0603c1f7694aa45164cc6e3198e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjI4MzE2NGQyZWZkMDYwM2MxZjc2OTRhYTQ1MTY0Y2M2ZTMxOThlOA==", "commit": {"author": {"name": "Tristan Gingold", "email": "gingold@adacore.com", "date": "2012-03-27T09:44:00Z"}, "committer": {"name": "Tristan Gingold", "email": "gingold@gcc.gnu.org", "date": "2012-03-27T09:44:00Z"}, "message": "vms.h (CASE_VECTOR_MODE): Define.\n\n2012-03-27  Tristan Gingold  <gingold@adacore.com>\n\n\t* config/ia64/vms.h (CASE_VECTOR_MODE): Define.\n\t* config/ia64/ia64.md: Remove mode in template.\n\tSign extend operand in expand_simple_binop.\n\t* config/ia64/ia64.h (ASM_OUTPUT_ADDR_DIFF_ELT): Use\n\tCASE_VECTOR_MODE instead of TARGET_ILP32.\n\t(ADDR_VEC_ALIGN): Make it depends on CASE_VECTOR_MODE.\n\nFrom-SVN: r185851", "tree": {"sha": "08ced2df68811a8af9a6d918db35a23416627a23", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08ced2df68811a8af9a6d918db35a23416627a23"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2283164d2efd0603c1f7694aa45164cc6e3198e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2283164d2efd0603c1f7694aa45164cc6e3198e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2283164d2efd0603c1f7694aa45164cc6e3198e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2283164d2efd0603c1f7694aa45164cc6e3198e8/comments", "author": {"login": "gingold-adacore", "id": 16334725, "node_id": "MDQ6VXNlcjE2MzM0NzI1", "avatar_url": "https://avatars.githubusercontent.com/u/16334725?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gingold-adacore", "html_url": "https://github.com/gingold-adacore", "followers_url": "https://api.github.com/users/gingold-adacore/followers", "following_url": "https://api.github.com/users/gingold-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/gingold-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/gingold-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gingold-adacore/subscriptions", "organizations_url": "https://api.github.com/users/gingold-adacore/orgs", "repos_url": "https://api.github.com/users/gingold-adacore/repos", "events_url": "https://api.github.com/users/gingold-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/gingold-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f1cdfa016aff0305825b1f018aa50fbe93ce8cd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1cdfa016aff0305825b1f018aa50fbe93ce8cd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1cdfa016aff0305825b1f018aa50fbe93ce8cd2"}], "stats": {"total": 23, "additions": 18, "deletions": 5}, "files": [{"sha": "8321a8e27506a5441357793f2972c3a65d46dc7c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2283164d2efd0603c1f7694aa45164cc6e3198e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2283164d2efd0603c1f7694aa45164cc6e3198e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2283164d2efd0603c1f7694aa45164cc6e3198e8", "patch": "@@ -1,3 +1,12 @@\n+2012-03-27  Tristan Gingold  <gingold@adacore.com>\n+\n+\t* config/ia64/vms.h (CASE_VECTOR_MODE): Define.\n+\t* config/ia64/ia64.md: Remove mode in template.\n+\tSign extend operand in expand_simple_binop.\n+\t* config/ia64/ia64.h (ASM_OUTPUT_ADDR_DIFF_ELT): Use\n+\tCASE_VECTOR_MODE instead of TARGET_ILP32.\n+\t(ADDR_VEC_ALIGN): Make it depends on CASE_VECTOR_MODE.\n+\n 2012-03-26  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* varasm.c (assemble_external): #if 0 out the new assert from the"}, {"sha": "2f0a9295877dad6426f4b2871f77e7e38f52a7d0", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2283164d2efd0603c1f7694aa45164cc6e3198e8/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2283164d2efd0603c1f7694aa45164cc6e3198e8/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=2283164d2efd0603c1f7694aa45164cc6e3198e8", "patch": "@@ -1484,15 +1484,15 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define ASM_OUTPUT_ADDR_DIFF_ELT(STREAM, BODY, VALUE, REL)\t\\\n   do {\t\t\t\t\t\t\t\t\\\n-  if (TARGET_ILP32)\t\t\t\t\t\t\\\n+  if (CASE_VECTOR_MODE == SImode)\t\t\t\t\\\n     fprintf (STREAM, \"\\tdata4 @pcrel(.L%d)\\n\", VALUE);\t\t\\\n   else\t\t\t\t\t\t\t\t\\\n     fprintf (STREAM, \"\\tdata8 @pcrel(.L%d)\\n\", VALUE);\t\t\\\n   } while (0)\n \n-/* Jump tables only need 8 byte alignment.  */\n+/* Jump tables only need 4 or 8 byte alignment.  */\n \n-#define ADDR_VEC_ALIGN(ADDR_VEC) 3\n+#define ADDR_VEC_ALIGN(ADDR_VEC) (CASE_VECTOR_MODE == SImode ? 2 : 3)\n \n \f\n /* Assembler Commands for Exception Regions.  */"}, {"sha": "349da7ba9969b721e3ee4bfb09678bee6564aa38", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2283164d2efd0603c1f7694aa45164cc6e3198e8/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2283164d2efd0603c1f7694aa45164cc6e3198e8/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=2283164d2efd0603c1f7694aa45164cc6e3198e8", "patch": "@@ -4578,7 +4578,7 @@\n   [(set_attr \"itanium_class\" \"br\")])\n \n (define_expand \"tablejump\"\n-  [(parallel [(set (pc) (match_operand:DI 0 \"memory_operand\" \"\"))\n+  [(parallel [(set (pc) (match_operand 0 \"memory_operand\" \"\"))\n \t      (use (label_ref (match_operand 1 \"\" \"\")))])]\n   \"\"\n {\n@@ -4614,7 +4614,7 @@\n      from the entry to the label.  Thus to convert to an absolute address\n      we add the address of the memory from which the value is loaded.  */\n   operands[0] = expand_simple_binop (DImode, PLUS, op0, addr,\n-\t\t\t\t     NULL_RTX, 1, OPTAB_DIRECT);\n+\t\t\t\t     NULL_RTX, 0, OPTAB_DIRECT);\n })\n \n (define_insn \"*tablejump_internal\""}, {"sha": "11f017663b52fcc8bcb0063f64b541186cc80e06", "filename": "gcc/config/ia64/vms.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2283164d2efd0603c1f7694aa45164cc6e3198e8/gcc%2Fconfig%2Fia64%2Fvms.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2283164d2efd0603c1f7694aa45164cc6e3198e8/gcc%2Fconfig%2Fia64%2Fvms.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fvms.h?ref=2283164d2efd0603c1f7694aa45164cc6e3198e8", "patch": "@@ -146,6 +146,10 @@ STATIC func_ptr __CTOR_LIST__[1]                                             \\\n #undef TARGET_PROMOTE_FUNCTION_MODE\n #define TARGET_PROMOTE_FUNCTION_MODE default_promote_function_mode_always_promote\n \n+/* Code is always in P0/P1 (lower 32 bit addresses) on VMS.  */\n+#undef CASE_VECTOR_MODE\n+#define CASE_VECTOR_MODE SImode\n+\n /* IA64 VMS doesn't fully support COMDAT sections.  */\n \n #define SUPPORTS_ONE_ONLY 0"}]}