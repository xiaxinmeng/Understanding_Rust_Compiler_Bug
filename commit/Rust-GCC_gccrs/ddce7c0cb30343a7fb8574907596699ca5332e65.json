{"sha": "ddce7c0cb30343a7fb8574907596699ca5332e65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGRjZTdjMGNiMzAzNDNhN2ZiODU3NDkwNzU5NjY5OWNhNTMzMmU2NQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2020-04-22T13:45:05Z"}, "committer": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2020-04-22T13:56:51Z"}, "message": "testsuite: [arm/mve] Use arm_softfp and arm_hard as needed in MVE tests\n\nSome MVE tests explicitly test a -mfloat-abi=hard option, but we need\nto check that the toolchain actually supports it (which may not be the\ncase for arm-linux-gnueabi* targets). We can thus remove the related\ndg-skip directives.\n\nWe also make use of dg-add-options arm_v8_1m_mve_fp and arm_v8_1m_mve\ninstead of duplicating the corresponding options in\ndg-additional-options where we keep only -mfloat-abi to override the\noption selected by arm_v8_1m_mve_fp.\n\n2020-04-22  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\tgcc/testsuite/\n\t* gcc.target/arm/mve/intrinsics/mve_fp_fpu1.c: Use arm_hard_ok\n\teffective target and arm_v8_1m_mve_fp options.\n\t* gcc.target/arm/mve/intrinsics/mve_fp_fpu2.c: Use arm_softfp_ok\n\teffective target and arm_v8_1m_mve_fp options.\n\t* gcc.target/arm/mve/intrinsics/mve_fpu1.c: Use arm_hard_ok\n\teffective target and arm_v8_1m_mve options.\n\t* gcc.target/arm/mve/intrinsics/mve_fpu2.c: Use arm_softfp_ok\n\teffective target and arm_v8_1m_mve options.", "tree": {"sha": "5600960f6a9304905246e3eb603471ab5e4ab72f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5600960f6a9304905246e3eb603471ab5e4ab72f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ddce7c0cb30343a7fb8574907596699ca5332e65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddce7c0cb30343a7fb8574907596699ca5332e65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ddce7c0cb30343a7fb8574907596699ca5332e65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ddce7c0cb30343a7fb8574907596699ca5332e65/comments", "author": null, "committer": null, "parents": [{"sha": "d414c91510bec4f640de29661062d5672a5684e8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d414c91510bec4f640de29661062d5672a5684e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d414c91510bec4f640de29661062d5672a5684e8"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "81f3caeb3d2029342b17512b38da112334fa0217", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddce7c0cb30343a7fb8574907596699ca5332e65/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddce7c0cb30343a7fb8574907596699ca5332e65/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ddce7c0cb30343a7fb8574907596699ca5332e65", "patch": "@@ -1,3 +1,14 @@\n+2020-04-22  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+        * gcc.target/arm/mve/intrinsics/mve_fp_fpu1.c: Use arm_hard_ok\n+        effective target and arm_v8_1m_mve_fp options.\n+        * gcc.target/arm/mve/intrinsics/mve_fp_fpu2.c: Use arm_softfp_ok\n+        effective target and arm_v8_1m_mve_fp options.\n+        * gcc.target/arm/mve/intrinsics/mve_fpu1.c: Use arm_hard_ok\n+        effective target and arm_v8_1m_mve options.\n+        * gcc.target/arm/mve/intrinsics/mve_fpu2.c: Use arm_softfp_ok\n+        effective target and arm_v8_1m_mve options.\n+\n 2020-04-22  Christophe Lyon  <christophe.lyon@linaro.org>\n \n         * lib/target-supports.exp (arm_softfp_ok): New effective target."}, {"sha": "e375327fb97da1379506af68bdeba0b782a5ddd2", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_fp_fpu1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddce7c0cb30343a7fb8574907596699ca5332e65/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fp_fpu1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddce7c0cb30343a7fb8574907596699ca5332e65/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fp_fpu1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fp_fpu1.c?ref=ddce7c0cb30343a7fb8574907596699ca5332e65", "patch": "@@ -1,6 +1,7 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n-/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n-/* { dg-additional-options \"-march=armv8.1-m.main+mve.fp -mfloat-abi=hard -mthumb -mfpu=auto --save-temps\" } */\n+/* { dg-require-effective-target arm_hard_ok } */\n+/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-additional-options \"-mfloat-abi=hard\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "1fca1100cf0d5a3f02c39e43bbd88bdc0dddc5eb", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_fp_fpu2.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddce7c0cb30343a7fb8574907596699ca5332e65/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fp_fpu2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddce7c0cb30343a7fb8574907596699ca5332e65/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fp_fpu2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fp_fpu2.c?ref=ddce7c0cb30343a7fb8574907596699ca5332e65", "patch": "@@ -1,5 +1,7 @@\n /* { dg-require-effective-target arm_v8_1m_mve_fp_ok } */\n-/* { dg-additional-options \"-march=armv8.1-m.main+mve.fp -mfloat-abi=softfp -mthumb -mfpu=auto --save-temps\" } */\n+/* { dg-require-effective-target arm_softfp_ok } */\n+/* { dg-add-options arm_v8_1m_mve_fp } */\n+/* { dg-additional-options \"-mfloat-abi=softfp\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "611097ec956bce517e51dcda10cd97f4fc5678db", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_fpu1.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddce7c0cb30343a7fb8574907596699ca5332e65/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fpu1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddce7c0cb30343a7fb8574907596699ca5332e65/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fpu1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fpu1.c?ref=ddce7c0cb30343a7fb8574907596699ca5332e65", "patch": "@@ -1,6 +1,7 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n-/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n-/* { dg-additional-options \"-march=armv8.1-m.main+mve -mfloat-abi=hard -mthumb -mfpu=auto --save-temps\" } */\n+/* { dg-require-effective-target arm_hard_ok } */\n+/* { dg-add-options arm_v8_1m_mve } */\n+/* { dg-additional-options \"-mfloat-abi=hard\" } */\n \n #include \"arm_mve.h\"\n "}, {"sha": "b8e105111de719fd65cd94831071949a95efdf9a", "filename": "gcc/testsuite/gcc.target/arm/mve/intrinsics/mve_fpu2.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ddce7c0cb30343a7fb8574907596699ca5332e65/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fpu2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ddce7c0cb30343a7fb8574907596699ca5332e65/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fpu2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fmve%2Fintrinsics%2Fmve_fpu2.c?ref=ddce7c0cb30343a7fb8574907596699ca5332e65", "patch": "@@ -1,6 +1,7 @@\n /* { dg-require-effective-target arm_v8_1m_mve_ok } */\n-/* { dg-skip-if \"Incompatible float ABI\" { *-*-* } { \"-mfloat-abi=soft\" } {\"\"} } */\n-/* { dg-additional-options \"-march=armv8.1-m.main+mve -mfloat-abi=softfp -mthumb -mfpu=auto --save-temps\" } */\n+/* { dg-require-effective-target arm_softfp_ok } */\n+/* { dg-add-options arm_v8_1m_mve } */\n+/* { dg-additional-options \"-mfloat-abi=softfp\" } */\n \n #include \"arm_mve.h\"\n "}]}