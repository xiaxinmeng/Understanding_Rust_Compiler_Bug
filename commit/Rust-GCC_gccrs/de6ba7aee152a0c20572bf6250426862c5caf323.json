{"sha": "de6ba7aee152a0c20572bf6250426862c5caf323", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGU2YmE3YWVlMTUyYTBjMjA1NzJiZjYyNTA0MjY4NjJjNWNhZjMyMw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2010-09-24T11:59:12Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2010-09-24T11:59:12Z"}, "message": "Makefile.in (OBJS-onestep): Remove.\n\n2010-09-24  Richard Guenther  <rguenther@suse.de>\n\n\t* Makefile.in (OBJS-onestep): Remove.\n\t(ALL_HOST_BACKEND_OBJS): Remove libbackend.o.\n\t(libbackend.a): Remove onestep support.\n\t(libbackend.o): Remove.\n\t* configure.ac (--enable-intermodule): Remove.\n\t* configure: Regenerate.\n\nFrom-SVN: r164590", "tree": {"sha": "9f8c601e37da8aa5bdf61697105df09cd6ab8620", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9f8c601e37da8aa5bdf61697105df09cd6ab8620"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de6ba7aee152a0c20572bf6250426862c5caf323", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6ba7aee152a0c20572bf6250426862c5caf323", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de6ba7aee152a0c20572bf6250426862c5caf323", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6ba7aee152a0c20572bf6250426862c5caf323/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "662592e1bac8b26f51e4b3c3e694b7d909487d3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/662592e1bac8b26f51e4b3c3e694b7d909487d3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/662592e1bac8b26f51e4b3c3e694b7d909487d3b"}], "stats": {"total": 60, "additions": 14, "deletions": 46}, "files": [{"sha": "75d35baf4522ca1e37028dc55a38c83fa5904bc9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6ba7aee152a0c20572bf6250426862c5caf323/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6ba7aee152a0c20572bf6250426862c5caf323/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=de6ba7aee152a0c20572bf6250426862c5caf323", "patch": "@@ -1,3 +1,12 @@\n+2010-09-24  Richard Guenther  <rguenther@suse.de>\n+\n+\t* Makefile.in (OBJS-onestep): Remove.\n+\t(ALL_HOST_BACKEND_OBJS): Remove libbackend.o.\n+\t(libbackend.a): Remove onestep support.\n+\t(libbackend.o): Remove.\n+\t* configure.ac (--enable-intermodule): Remove.\n+\t* configure: Regenerate.\n+\n 2010-09-24  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* cfgcleanup.c (flow_find_head_matching_sequence): Terminate when"}, {"sha": "0243accac6005206dfa69da73c0f67a3c89fd91f", "filename": "gcc/Makefile.in", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6ba7aee152a0c20572bf6250426862c5caf323/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6ba7aee152a0c20572bf6250426862c5caf323/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=de6ba7aee152a0c20572bf6250426862c5caf323", "patch": "@@ -1469,13 +1469,11 @@ OBJS-archive = \\\n \n OBJS = $(OBJS-common) $(OBJS-md) $(OBJS-archive)\n \n-OBJS-onestep = libbackend.o $(OBJS-archive)\n-\n # This lists all host objects for the front ends.\n ALL_HOST_FRONTEND_OBJS = $(C_OBJS) \\\n   $(foreach v,$(CONFIG_LANGUAGES),$($(v)_OBJS))\n \n-ALL_HOST_BACKEND_OBJS = $(GCC_OBJS) $(OBJS) libbackend.o \\\n+ALL_HOST_BACKEND_OBJS = $(GCC_OBJS) $(OBJS) \\\n   @TREEBROWSER@ main.o gccspec.o version.o intl.o prefix.o cppspec.o \\\n   $(COLLECT2_OBJS) $(EXTRA_GCC_OBJS) mips-tfile.o mips-tdump.o \\\n   $(GCOV_OBJS) $(GCOV_DUMP_OBJS)\n@@ -1800,9 +1798,9 @@ rest.cross: specs\n compilations: $(BACKEND)\n \n # This archive is strictly for the host.\n-libbackend.a: $(OBJS@onestep@)\n+libbackend.a: $(OBJS)\n \t-rm -rf libbackend.a\n-\t$(AR) $(AR_FLAGS) libbackend.a $(OBJS@onestep@)\n+\t$(AR) $(AR_FLAGS) libbackend.a $(OBJS)\n \t-$(RANLIB) $(RANLIB_FLAGS) libbackend.a\n \n # We call this executable `xgcc' rather than `gcc'\n@@ -3525,19 +3523,6 @@ mips-tdump: mips-tdump.o version.o $(LIBDEPS)\n mips-tdump.o : mips-tdump.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) coretypes.h \\\n    $(TM_H) version.h $(srcdir)/../include/getopt.h stab.def\n \n-# FIXME: writing proper dependencies for this is a *LOT* of work.\n-libbackend.o : $(OBJS-common:.o=.c) $(out_file) \\\n-  insn-config.h insn-flags.h insn-codes.h insn-constants.h \\\n-  insn-attr.h  $(DATESTAMP) $(BASEVER) $(DEVPHASE) gcov-iov.h\n-\t$(COMPILER) $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) \\\n-\t  -DTARGET_NAME=\\\"$(target_noncanonical)\\\" \\\n-\t  -DLOCALEDIR=\\\"$(localedir)\\\" \\\n-\t  -c $(filter %.c,$^) -o $@  \\\n-\t  -DBASEVER=$(BASEVER_s) -DDATESTAMP=$(DATESTAMP_s) \\\n-\t  -DREVISION=$(REVISION_s) \\\n-\t  -DDEVPHASE=$(DEVPHASE_s) -DPKGVERSION=$(PKGVERSION_s) \\\n-\t  -DBUGURL=$(BUGURL_s) -combine\n-\n #\f\n # Generate header and source files from the machine description,\n # and compile them."}, {"sha": "c392323c643377b38d8595b56ce671902737139d", "filename": "gcc/configure", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6ba7aee152a0c20572bf6250426862c5caf323/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6ba7aee152a0c20572bf6250426862c5caf323/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=de6ba7aee152a0c20572bf6250426862c5caf323", "patch": "@@ -759,7 +759,6 @@ SET_MAKE\n REPORT_BUGS_TEXI\n REPORT_BUGS_TO\n PKGVERSION\n-onestep\n CONFIGURE_SPECS\n CROSS_SYSTEM_HEADER_DIR\n TARGET_SYSTEM_ROOT_DEFINE\n@@ -885,7 +884,6 @@ enable_shared\n with_build_sysroot\n with_sysroot\n with_specs\n-enable_intermodule\n with_pkgversion\n with_bugurl\n enable_languages\n@@ -1588,7 +1586,6 @@ Optional Features:\n   --enable-objc-gc\t  enable the use of Boehm's garbage collector with\n \t\t\t  the GNU Objective-C runtime\n   --disable-shared        don't provide a shared libgcc\n-  --enable-intermodule    build the compiler in one step\n   --enable-languages=LIST specify which front-ends to build\n   --disable-rpath         do not hardcode runtime library paths\n   --enable-initfini-array\tuse .init_array/.fini_array sections\n@@ -6886,19 +6883,6 @@ fi\n \n \n \n-# Build with intermodule optimisations\n-# Check whether --enable-intermodule was given.\n-if test \"${enable_intermodule+set}\" = set; then :\n-  enableval=$enable_intermodule; case ${enable_intermodule} in\n-  yes) onestep=\"-onestep\";;\n-  *) onestep=\"\";;\n-esac\n-else\n-  onestep=\"\"\n-fi\n-\n-\n-\n \n \n # Check whether --with-pkgversion was given.\n@@ -17139,7 +17123,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17142 \"configure\"\n+#line 17126 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -17245,7 +17229,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 17248 \"configure\"\n+#line 17232 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "6ada451f2fe4ebef2c1921ab0c4a454623d269b7", "filename": "gcc/configure.ac", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6ba7aee152a0c20572bf6250426862c5caf323/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6ba7aee152a0c20572bf6250426862c5caf323/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=de6ba7aee152a0c20572bf6250426862c5caf323", "patch": "@@ -754,16 +754,6 @@ AC_ARG_WITH(specs,\n )\n AC_SUBST(CONFIGURE_SPECS)\n \n-# Build with intermodule optimisations\n-AC_ARG_ENABLE(intermodule,\n-[  --enable-intermodule    build the compiler in one step],\n-[case ${enable_intermodule} in\n-  yes) onestep=\"-onestep\";;\n-  *) onestep=\"\";;\n-esac],\n-[onestep=\"\"])\n-AC_SUBST(onestep)\n-\n ACX_PKGVERSION([GCC])\n ACX_BUGURL([http://gcc.gnu.org/bugs.html])\n "}]}