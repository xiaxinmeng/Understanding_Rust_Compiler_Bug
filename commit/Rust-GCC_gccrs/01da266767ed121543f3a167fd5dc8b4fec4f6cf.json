{"sha": "01da266767ed121543f3a167fd5dc8b4fec4f6cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFkYTI2Njc2N2VkMTIxNTQzZjNhMTY3ZmQ1ZGM4YjRmZWM0ZjZjZg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2003-12-19T20:42:00Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-12-19T20:42:00Z"}, "message": "ChannelOutputStream.java: New file.\n\n2003-12-19  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/nio/ChannelOutputStream.java: New file.\n\t* java/nio/channels/Channels.java\n\t(newOutputStream): Implemented.\n\t* Makefile.am (ordinary_java_source_files)\n\tAdded gnu/java/nio/ChannelOutputStream.java.\n\t* Makefile.in: Regenerated.\n\nFrom-SVN: r74847", "tree": {"sha": "913ee2e445f2bb041f84440f1de8e9903ace3c1d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/913ee2e445f2bb041f84440f1de8e9903ace3c1d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01da266767ed121543f3a167fd5dc8b4fec4f6cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01da266767ed121543f3a167fd5dc8b4fec4f6cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01da266767ed121543f3a167fd5dc8b4fec4f6cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01da266767ed121543f3a167fd5dc8b4fec4f6cf/comments", "author": null, "committer": null, "parents": [{"sha": "60cd3e8bab61b02cee0d0c57e7e3eeb9e9672354", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/60cd3e8bab61b02cee0d0c57e7e3eeb9e9672354", "html_url": "https://github.com/Rust-GCC/gccrs/commit/60cd3e8bab61b02cee0d0c57e7e3eeb9e9672354"}], "stats": {"total": 84, "additions": 82, "deletions": 2}, "files": [{"sha": "4e9299caaa833b39f37bdec54b28891500c39099", "filename": "libjava/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01da266767ed121543f3a167fd5dc8b4fec4f6cf/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01da266767ed121543f3a167fd5dc8b4fec4f6cf/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=01da266767ed121543f3a167fd5dc8b4fec4f6cf", "patch": "@@ -1,3 +1,12 @@\n+2003-12-19  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/nio/ChannelOutputStream.java: New file.\n+\t* java/nio/channels/Channels.java\n+\t(newOutputStream): Implemented.\n+\t* Makefile.am (ordinary_java_source_files)\n+\tAdded gnu/java/nio/ChannelOutputStream.java.\n+\t* Makefile.in: Regenerated.\n+\n 2003-12-19  Thomas Fitzsimmons  <fitzsim@redhat.com>\n \n \t* java/awt/FlowLayout.java (layoutContainer): Let components"}, {"sha": "e76e64c567c22c3a5c5d509310e0c191e91124c3", "filename": "libjava/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01da266767ed121543f3a167fd5dc8b4fec4f6cf/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01da266767ed121543f3a167fd5dc8b4fec4f6cf/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=01da266767ed121543f3a167fd5dc8b4fec4f6cf", "patch": "@@ -2225,6 +2225,7 @@ gnu/java/nio/NIODatagramSocket.java \\\n gnu/java/nio/NIOServerSocket.java \\\n gnu/java/nio/NIOSocket.java \\\n gnu/java/nio/ChannelInputStream.java \\\n+gnu/java/nio/ChannelOutputStream.java \\\n gnu/java/nio/InputStreamChannel.java \\\n gnu/java/nio/OutputStreamChannel.java \\\n gnu/java/nio/PipeImpl.java \\"}, {"sha": "f887b94af0f570a44630cb3fbb571025806042ca", "filename": "libjava/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01da266767ed121543f3a167fd5dc8b4fec4f6cf/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01da266767ed121543f3a167fd5dc8b4fec4f6cf/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=01da266767ed121543f3a167fd5dc8b4fec4f6cf", "patch": "@@ -1932,6 +1932,7 @@ gnu/java/nio/NIODatagramSocket.java \\\n gnu/java/nio/NIOServerSocket.java \\\n gnu/java/nio/NIOSocket.java \\\n gnu/java/nio/ChannelInputStream.java \\\n+gnu/java/nio/ChannelOutputStream.java \\\n gnu/java/nio/InputStreamChannel.java \\\n gnu/java/nio/OutputStreamChannel.java \\\n gnu/java/nio/PipeImpl.java \\\n@@ -3066,6 +3067,7 @@ DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n .deps/gnu/java/net/protocol/jar/Connection.P \\\n .deps/gnu/java/net/protocol/jar/Handler.P \\\n .deps/gnu/java/nio/ChannelInputStream.P \\\n+.deps/gnu/java/nio/ChannelOutputStream.P \\\n .deps/gnu/java/nio/DatagramChannelImpl.P \\\n .deps/gnu/java/nio/DatagramChannelSelectionKey.P \\\n .deps/gnu/java/nio/FileLockImpl.P \\"}, {"sha": "96dc761065434fb3f8d76e2a69af52c3827570a5", "filename": "libjava/gnu/java/nio/ChannelOutputStream.java", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01da266767ed121543f3a167fd5dc8b4fec4f6cf/libjava%2Fgnu%2Fjava%2Fnio%2FChannelOutputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01da266767ed121543f3a167fd5dc8b4fec4f6cf/libjava%2Fgnu%2Fjava%2Fnio%2FChannelOutputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FChannelOutputStream.java?ref=01da266767ed121543f3a167fd5dc8b4fec4f6cf", "patch": "@@ -0,0 +1,67 @@\n+/* ChannelOutputStream.java -- \n+   Copyright (C) 2003 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.nio;\n+\n+import java.io.OutputStream;\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.WritableByteChannel;\n+\n+/**\n+ * @author Michael Koch\n+ */\n+public final class ChannelOutputStream extends OutputStream\n+{\n+  private WritableByteChannel ch;\n+  \n+  public ChannelOutputStream (WritableByteChannel ch)\n+  {\n+    super();\n+    \n+    this.ch = ch;\n+  }\n+\n+  public void write (int value) throws IOException\n+  {\n+    ByteBuffer buffer = ByteBuffer.allocate (1);\n+    buffer.put ((byte) (value & 0xff));\n+    buffer.flip();\n+    ch.write (buffer);\n+  }\n+}"}, {"sha": "cb6154e968dd6734f3038891e16765763f7b110d", "filename": "libjava/java/nio/channels/Channels.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01da266767ed121543f3a167fd5dc8b4fec4f6cf/libjava%2Fjava%2Fnio%2Fchannels%2FChannels.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01da266767ed121543f3a167fd5dc8b4fec4f6cf/libjava%2Fjava%2Fnio%2Fchannels%2FChannels.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fnio%2Fchannels%2FChannels.java?ref=01da266767ed121543f3a167fd5dc8b4fec4f6cf", "patch": "@@ -38,6 +38,7 @@\n package java.nio.channels;\n \n import gnu.java.nio.ChannelInputStream;\n+import gnu.java.nio.ChannelOutputStream;\n import gnu.java.nio.InputStreamChannel;\n import gnu.java.nio.OutputStreamChannel;\n import java.io.InputStream;\n@@ -64,9 +65,9 @@ public static InputStream newInputStream(ReadableByteChannel ch)\n   /**\n    * Constructs a stream that writes bytes to the given channel.\n    */\n-  public static OutputStream newOutputStream (WritableByteChannel ch) \n+  public static OutputStream newOutputStream(WritableByteChannel ch) \n   {\n-    throw new Error (\"not implemented\");\n+    return new ChannelOutputStream(ch);\n   }\n   \n   /**"}]}