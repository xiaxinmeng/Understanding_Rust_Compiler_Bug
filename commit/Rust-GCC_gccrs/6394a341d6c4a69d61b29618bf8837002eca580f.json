{"sha": "6394a341d6c4a69d61b29618bf8837002eca580f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM5NGEzNDFkNmM0YTY5ZDYxYjI5NjE4YmY4ODM3MDAyZWNhNTgwZg==", "commit": {"author": {"name": "Matthias Kretz", "email": "m.kretz@gsi.de", "date": "2019-11-06T16:06:08Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-11-06T16:06:08Z"}, "message": "Fix parser to recognize operator?:\n\nThis change lets grok_op_properties print its useful \"ISO C++ prohibits\noverloading operator ?:\" message instead of the cryptic error message about\na missing type-specifier before '?' token.\n\n2019-11-06  Matthias Kretz  <m.kretz@gsi.de>\n\n\t* parser.c (cp_parser_operator): Parse operator?: as an\n\tattempt to overload the conditional operator.\n\nFrom-SVN: r277887", "tree": {"sha": "9a691b9f60b25f72e388c699df5e8084d40e64d4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9a691b9f60b25f72e388c699df5e8084d40e64d4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6394a341d6c4a69d61b29618bf8837002eca580f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6394a341d6c4a69d61b29618bf8837002eca580f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6394a341d6c4a69d61b29618bf8837002eca580f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6394a341d6c4a69d61b29618bf8837002eca580f/comments", "author": {"login": "mattkretz", "id": 3306474, "node_id": "MDQ6VXNlcjMzMDY0NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3306474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mattkretz", "html_url": "https://github.com/mattkretz", "followers_url": "https://api.github.com/users/mattkretz/followers", "following_url": "https://api.github.com/users/mattkretz/following{/other_user}", "gists_url": "https://api.github.com/users/mattkretz/gists{/gist_id}", "starred_url": "https://api.github.com/users/mattkretz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mattkretz/subscriptions", "organizations_url": "https://api.github.com/users/mattkretz/orgs", "repos_url": "https://api.github.com/users/mattkretz/repos", "events_url": "https://api.github.com/users/mattkretz/events{/privacy}", "received_events_url": "https://api.github.com/users/mattkretz/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4b205bf82d06c4d9d0ae7b78e54c712d79d5b021", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b205bf82d06c4d9d0ae7b78e54c712d79d5b021", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b205bf82d06c4d9d0ae7b78e54c712d79d5b021"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "e60a45b869ea575dbb8b03b85acfca1fa6594a9b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6394a341d6c4a69d61b29618bf8837002eca580f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6394a341d6c4a69d61b29618bf8837002eca580f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6394a341d6c4a69d61b29618bf8837002eca580f", "patch": "@@ -1,3 +1,8 @@\n+2019-11-06  Matthias Kretz  <m.kretz@gsi.de>\n+\n+\t* parser.c (cp_parser_operator): Parse operator?: as an\n+\tattempt to overload the conditional operator.\n+\n 2019-11-05  Jason Merrill  <jason@redhat.com>\n \n \tImplement C++20 operator<=>."}, {"sha": "b17e0336e1c988d696da43624fc99e813a54074a", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6394a341d6c4a69d61b29618bf8837002eca580f/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6394a341d6c4a69d61b29618bf8837002eca580f/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=6394a341d6c4a69d61b29618bf8837002eca580f", "patch": "@@ -15542,6 +15542,15 @@ cp_parser_operator (cp_parser* parser, location_t start_loc)\n       op = COMPONENT_REF;\n       break;\n \n+    case CPP_QUERY:\n+      op = COND_EXPR;\n+      /* Consume the `?'.  */\n+      cp_lexer_consume_token (parser->lexer);\n+      /* Look for the matching `:'.  */\n+      cp_parser_require (parser, CPP_COLON, RT_COLON);\n+      consumed = true;\n+      break;\n+\n     case CPP_OPEN_PAREN:\n       {\n         /* Consume the `('.  */"}, {"sha": "d66355afab5d93e0c33850699313f567a41e4ccc", "filename": "gcc/testsuite/g++.dg/parse/operator9.C", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6394a341d6c4a69d61b29618bf8837002eca580f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Foperator9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6394a341d6c4a69d61b29618bf8837002eca580f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Foperator9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Foperator9.C?ref=6394a341d6c4a69d61b29618bf8837002eca580f", "patch": "@@ -0,0 +1,5 @@\n+// { dg-do compile }\n+\n+struct A {};\n+struct B {};\n+int operator?:(bool, A, B);  // { dg-error \"prohibits overloading\" }"}, {"sha": "69a41cf244844fec2539d9c0301419eef9186082", "filename": "gcc/testsuite/g++.old-deja/g++.jason/operator.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6394a341d6c4a69d61b29618bf8837002eca580f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foperator.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6394a341d6c4a69d61b29618bf8837002eca580f/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foperator.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foperator.C?ref=6394a341d6c4a69d61b29618bf8837002eca580f", "patch": "@@ -5,7 +5,7 @@\n typedef __SIZE_TYPE__ size_t;\n \n struct A {\n-  int operator?:(int a, int b);\t   // { dg-error \"expected type-specifier\" } \n+  int operator?:(int a, int b);\t   // { dg-error \"prohibits overloading\" } \n   static int operator()(int a);\t   // { dg-error \"14:.static int A::operator\\\\(\\\\)\\\\(int\\\\). must be a nonstatic member function\" }\n   static int operator+(A,A);\t   // { dg-error \"14:.static int A::operator\\\\+\\\\(A, A\\\\). must be either a non-static member function or a non-member function\" } \n   int operator+(int a, int b = 1); // { dg-error \"7:.int A::operator\\\\+\\\\(int, int\\\\). must have either zero or one argument\" }"}]}