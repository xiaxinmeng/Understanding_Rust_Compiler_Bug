{"sha": "f618d33ef115544bb371c67ff937e9ce97969712", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYxOGQzM2VmMTE1NTQ0YmIzNzFjNjdmZjkzN2U5Y2U5Nzk2OTcxMg==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2009-02-25T17:34:40Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2009-02-25T17:34:40Z"}, "message": "tree-inline.c (initialize_cfun): Remove asserts for calls_setjmp and alls_alloca function flags.\n\n2009-02-25  Martin Jambor  <mjambor@suse.cz>\n\n\t* tree-inline.c (initialize_cfun): Remove asserts for calls_setjmp and\n\talls_alloca function flags.\n\t(copy_bb): Set calls_setjmp and alls_alloca function flags if such\n\tcalls are detected.\n\nFrom-SVN: r144428", "tree": {"sha": "4182e728b6903dec746f498b358c66957fd4f37f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4182e728b6903dec746f498b358c66957fd4f37f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f618d33ef115544bb371c67ff937e9ce97969712", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f618d33ef115544bb371c67ff937e9ce97969712", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f618d33ef115544bb371c67ff937e9ce97969712", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f618d33ef115544bb371c67ff937e9ce97969712/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "054efbba9dbf01e8f1b52f01aafa324f57f701ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/054efbba9dbf01e8f1b52f01aafa324f57f701ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/054efbba9dbf01e8f1b52f01aafa324f57f701ba"}], "stats": {"total": 64, "additions": 60, "deletions": 4}, "files": [{"sha": "2aa1030c022ab9d77cd68538063bb5092eadd85a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f618d33ef115544bb371c67ff937e9ce97969712/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f618d33ef115544bb371c67ff937e9ce97969712/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f618d33ef115544bb371c67ff937e9ce97969712", "patch": "@@ -1,3 +1,11 @@\n+2009-02-25  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR tree-optimization/39259\n+\t* tree-inline.c (initialize_cfun): Remove asserts for calls_setjmp and\n+\talls_alloca function flags.\n+\t(copy_bb): Set calls_setjmp and alls_alloca function flags if such\n+\tcalls are detected.\n+\n 2009-02-25  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* regmove.c (discover_flags_reg, flags_set_1, mark_flags_life_zones,"}, {"sha": "4e54e54b06de3afc12de8dbfc40b44e08a9d89dd", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f618d33ef115544bb371c67ff937e9ce97969712/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f618d33ef115544bb371c67ff937e9ce97969712/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f618d33ef115544bb371c67ff937e9ce97969712", "patch": "@@ -1,3 +1,7 @@\n+2009-02-25  Martin Jambor  <mjambor@suse.cz>\n+\tPR tree-optimizations/39259\n+\t* g++.dg/torture/pr39259.C: New testcase.\n+\n 2009-02-24  Richard Guenther  <rguenther@suse.de>\n \n \tPR c++/39242"}, {"sha": "256181fa655fd72bcb4950bdb628d110ce0650e3", "filename": "gcc/testsuite/g++.dg/torture/pr39259.C", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f618d33ef115544bb371c67ff937e9ce97969712/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr39259.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f618d33ef115544bb371c67ff937e9ce97969712/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr39259.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr39259.C?ref=f618d33ef115544bb371c67ff937e9ce97969712", "patch": "@@ -0,0 +1,40 @@\n+// PR tree-optimization/39259\n+// { dg-do compile }\n+// { dg-options \"-O2\" }\n+\n+\n+extern \"C\" int __mysetjmp () __attribute__ ((__returns_twice__));\n+\n+class TContStatus {};\n+\n+class TContEvent\n+{\n+public:\n+  inline void Execute () throw();\n+};\n+\n+class TCont\n+{\n+public:\n+  TContStatus ReadD (void* buf, int deadline)\n+  {\n+    TContEvent event;\n+    event.Execute ();\n+    return TContStatus();\n+  }\n+  TContStatus ReadI (void *buf)\n+  {\n+    return ReadD (buf, 1);\n+  }\n+};\n+\n+void TContEvent::Execute () throw ()\n+{\n+  __mysetjmp();\n+}\n+\n+void Broken (TCont *mCont)\n+{\n+  mCont->ReadI(0);\n+  mCont->ReadI(0);\n+}"}, {"sha": "fd4443c74f9cbabf15984e150089f9ae266dbc7e", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f618d33ef115544bb371c67ff937e9ce97969712/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f618d33ef115544bb371c67ff937e9ce97969712/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=f618d33ef115544bb371c67ff937e9ce97969712", "patch": "@@ -1398,6 +1398,7 @@ copy_bb (copy_body_data *id, basic_block bb, int frequency_scale,\n \t    {\n \t      struct cgraph_node *node;\n \t      struct cgraph_edge *edge;\n+\t      int flags;\n \n \t      switch (id->transform_call_graph_edges)\n \t\t{\n@@ -1429,6 +1430,13 @@ copy_bb (copy_body_data *id, basic_block bb, int frequency_scale,\n \t      default:\n \t\tgcc_unreachable ();\n \t\t}\n+\n+\t      flags = gimple_call_flags (stmt);\n+\n+\t      if (flags & ECF_MAY_BE_ALLOCA)\n+\t\tcfun->calls_alloca = true;\n+\t      if (flags & ECF_RETURNS_TWICE)\n+\t\tcfun->calls_setjmp = true;\n \t    }\n \n \t  /* If you think we can abort here, you are wrong.\n@@ -1745,10 +1753,6 @@ initialize_cfun (tree new_fndecl, tree callee_fndecl, gcov_type count,\n   gcc_assert (cfun->cfg == NULL);\n   gcc_assert (cfun->decl == new_fndecl);\n \n-  /* No need to copy; this is initialized later in compilation.  */\n-  gcc_assert (!src_cfun->calls_setjmp);\n-  gcc_assert (!src_cfun->calls_alloca);\n-\n   /* Copy items we preserve during clonning.  */\n   cfun->static_chain_decl = src_cfun->static_chain_decl;\n   cfun->nonlocal_goto_save_area = src_cfun->nonlocal_goto_save_area;"}]}