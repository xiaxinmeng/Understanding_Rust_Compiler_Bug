{"sha": "1be07046359570d2e482b49f1d2a184141410a2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJlMDcwNDYzNTk1NzBkMmU0ODJiNDlmMWQyYTE4NDE0MTQxMGEyYQ==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-23T06:19:36Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-11-23T06:19:36Z"}, "message": "(expand_function_end): New arg END_BINDINGS.\n\nFrom-SVN: r6141", "tree": {"sha": "26df665a09044f4265de32d1c2d5e78fc5e1964c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26df665a09044f4265de32d1c2d5e78fc5e1964c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1be07046359570d2e482b49f1d2a184141410a2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1be07046359570d2e482b49f1d2a184141410a2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1be07046359570d2e482b49f1d2a184141410a2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1be07046359570d2e482b49f1d2a184141410a2a/comments", "author": null, "committer": null, "parents": [{"sha": "0e5eedfeb07de9302f853038fb3a94f8086558ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e5eedfeb07de9302f853038fb3a94f8086558ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e5eedfeb07de9302f853038fb3a94f8086558ec"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "3e388f6025af2af7976b6cde72c39bc3fb9cd464", "filename": "gcc/function.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1be07046359570d2e482b49f1d2a184141410a2a/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1be07046359570d2e482b49f1d2a184141410a2a/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=1be07046359570d2e482b49f1d2a184141410a2a", "patch": "@@ -4887,12 +4887,14 @@ expand_function_start (subr, parms_have_cleanups)\n /* Generate RTL for the end of the current function.\n    FILENAME and LINE are the current position in the source file.  */\n \n-/* It is up to language-specific callers to do cleanups for parameters.  */\n+/* It is up to language-specific callers to do cleanups for parameters--\n+   or else, supply 1 for END_BINDINGS and we will call expand_end_bindings.  */\n \n void\n-expand_function_end (filename, line)\n+expand_function_end (filename, line, end_bindings)\n      char *filename;\n      int line;\n+     int end_bindings;\n {\n   register int i;\n   tree link;\n@@ -5022,6 +5024,10 @@ expand_function_end (filename, line)\n   if (return_label)\n     emit_label (return_label);\n \n+  /* C++ uses this.  */\n+  if (end_bindings)\n+    expand_end_bindings (0, 0, 0);\n+\n   /* If we had calls to alloca, and this machine needs\n      an accurate stack pointer to exit the function,\n      insert some code to save and restore the stack pointer.  */"}]}