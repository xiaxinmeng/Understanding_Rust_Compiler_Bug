{"sha": "ea77e738038687830313955979daa746dceb6d7a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWE3N2U3MzgwMzg2ODc4MzAzMTM5NTU5NzlkYWE3NDZkY2ViNmQ3YQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2004-09-28T21:39:28Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-09-28T21:39:28Z"}, "message": "s390.c (s390_adjust_cost): Remove.\n\n\t* config/s390/s390.c (s390_adjust_cost): Remove.\n\t(TARGET_SCHED_ADJUST_COST): Do not redefine.\n\t(s390_adjust_priority): Handle TYPE_STM like TYPE_STORE.\n\t* config/s390/s390.md (\"main_pool\"): Use \"larl\" type\n\tattribute if TARGET_CPU_ZARCH.\n\nFrom-SVN: r88254", "tree": {"sha": "840efeeb218941e87581e65cd487c2ad7556fac1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/840efeeb218941e87581e65cd487c2ad7556fac1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ea77e738038687830313955979daa746dceb6d7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea77e738038687830313955979daa746dceb6d7a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea77e738038687830313955979daa746dceb6d7a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea77e738038687830313955979daa746dceb6d7a/comments", "author": null, "committer": null, "parents": [{"sha": "9924d7d8d81740b9d64bef0089c61050af55b768", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9924d7d8d81740b9d64bef0089c61050af55b768", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9924d7d8d81740b9d64bef0089c61050af55b768"}], "stats": {"total": 52, "additions": 13, "deletions": 39}, "files": [{"sha": "11e0ce2325b8fe1b5dd4c39c95f25712500dca61", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea77e738038687830313955979daa746dceb6d7a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea77e738038687830313955979daa746dceb6d7a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ea77e738038687830313955979daa746dceb6d7a", "patch": "@@ -1,3 +1,11 @@\n+2004-09-28  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/s390.c (s390_adjust_cost): Remove.\n+\t(TARGET_SCHED_ADJUST_COST): Do not redefine.\n+\t(s390_adjust_priority): Handle TYPE_STM like TYPE_STORE.\n+\t* config/s390/s390.md (\"main_pool\"): Use \"larl\" type \n+\tattribute if TARGET_CPU_ZARCH.\n+\n 2004-09-28  Jakub Jelinek  <jakub@redhat.com>\n \n \t* config/ia64/ia64.c (ia64_expand_prologue): Declare ei"}, {"sha": "3fff67ce1f2c3a8e41ff64776e4ec53537de3e52", "filename": "gcc/config/s390/s390.c", "status": "modified", "additions": 1, "deletions": 38, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea77e738038687830313955979daa746dceb6d7a/gcc%2Fconfig%2Fs390%2Fs390.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea77e738038687830313955979daa746dceb6d7a/gcc%2Fconfig%2Fs390%2Fs390.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.c?ref=ea77e738038687830313955979daa746dceb6d7a", "patch": "@@ -67,7 +67,6 @@ static void s390_output_mi_thunk (FILE *, tree, HOST_WIDE_INT,\n \t\t\t\t  HOST_WIDE_INT, tree);\n static enum attr_type s390_safe_attr_type (rtx);\n \n-static int s390_adjust_cost (rtx, rtx, rtx, int);\n static int s390_adjust_priority (rtx, int);\n static int s390_issue_rate (void);\n static int s390_first_cycle_multipass_dfa_lookahead (void);\n@@ -121,8 +120,6 @@ static bool s390_pass_by_reference (CUMULATIVE_ARGS *, enum machine_mode mode,\n #undef TARGET_ASM_CAN_OUTPUT_MI_THUNK\n #define TARGET_ASM_CAN_OUTPUT_MI_THUNK hook_bool_tree_hwi_hwi_tree_true\n \n-#undef  TARGET_SCHED_ADJUST_COST\n-#define TARGET_SCHED_ADJUST_COST s390_adjust_cost\n #undef  TARGET_SCHED_ADJUST_PRIORITY\n #define TARGET_SCHED_ADJUST_PRIORITY s390_adjust_priority\n #undef TARGET_SCHED_ISSUE_RATE\n@@ -4167,41 +4164,6 @@ s390_agen_dep_p (rtx dep_insn, rtx insn)\n   return 0;\n }\n \n-/* Return the modified cost of the dependency of instruction INSN\n-   on instruction DEP_INSN through the link LINK.  COST is the\n-   default cost of that dependency.\n-\n-   Data dependencies are all handled without delay.  However, if a\n-   register is modified and subsequently used as base or index\n-   register of a memory reference, at least 4 cycles need to pass\n-   between setting and using the register to avoid pipeline stalls.\n-   An exception is the LA instruction. An address generated by LA can\n-   be used by introducing only a one cycle stall on the pipeline.  */\n-\n-static int\n-s390_adjust_cost (rtx insn, rtx link, rtx dep_insn, int cost)\n-{\n-  /* If the dependence is an anti-dependence, there is no cost.  For an\n-     output dependence, there is sometimes a cost, but it doesn't seem\n-     worth handling those few cases.  */\n-\n-  if (REG_NOTE_KIND (link) != 0)\n-    return 0;\n-\n-  /* If we can't recognize the insns, we can't really do anything.  */\n-  if (recog_memoized (insn) < 0 || recog_memoized (dep_insn) < 0)\n-    return cost;\n-\n-  /* Operand forward in case of lr, load and la.  */\n-  if (s390_tune == PROCESSOR_2084_Z990\n-      && cost == 1\n-      && (s390_safe_attr_type (dep_insn) == TYPE_LA\n-\t  || s390_safe_attr_type (dep_insn) == TYPE_LR\n-\t  || s390_safe_attr_type (dep_insn) == TYPE_LOAD))\n-    return 0;\n-  return cost;\n-}\n-\n /* A C statement (sans semicolon) to update the integer scheduling priority\n    INSN_PRIORITY (INSN).  Increase the priority to execute the INSN earlier,\n    reduce the priority to execute INSN later.  Do not define this macro if\n@@ -4226,6 +4188,7 @@ s390_adjust_priority (rtx insn ATTRIBUTE_UNUSED, int priority)\n \tpriority = priority << 3;\n \tbreak;\n       case TYPE_STORE:\n+      case TYPE_STM:\n \tpriority = priority << 1;\n \tbreak;\n       default:"}, {"sha": "d7f0e0763b405cba5e9856b660381296c0f4e74d", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ea77e738038687830313955979daa746dceb6d7a/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ea77e738038687830313955979daa746dceb6d7a/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=ea77e738038687830313955979daa746dceb6d7a", "patch": "@@ -7405,7 +7405,10 @@\n         (unspec_volatile [(const_int 0)] UNSPECV_MAIN_POOL))]\n   \"GET_MODE (operands[0]) == Pmode\"\n   \"* abort ();\"\n-  [(set_attr \"op_type\" \"NN\")])\n+  [(set_attr \"op_type\" \"NN\")\n+   (set (attr \"type\") \n+        (if_then_else (ne (symbol_ref \"TARGET_CPU_ZARCH\") (const_int 0))\n+                      (const_string \"larl\") (const_string \"la\")))])\n \n (define_insn \"reload_base_31\"\n   [(set (match_operand 0 \"register_operand\" \"=a\")"}]}