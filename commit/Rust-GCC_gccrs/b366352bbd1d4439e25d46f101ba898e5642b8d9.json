{"sha": "b366352bbd1d4439e25d46f101ba898e5642b8d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjM2NjM1MmJiZDFkNDQzOWUyNWQ0NmYxMDFiYTg5OGU1NjQyYjhkOQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-07-22T02:16:55Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-07-22T02:16:55Z"}, "message": "defaults.h (DWARF2_GENERATE_TEXT_SECTION_LABEL): New macro.\n\n\t* defaults.h (DWARF2_GENERATE_TEXT_SECTION_LABEL): New macro.\n\t* tm.texi (DWARF2_GENERATE_TEXT_SECTION_LABEL): Define it.\n \t* dwarf2out.c (dwarf2out_init): Don't output a label to mark the\n \tstart of the text section if DWARF2_GENERATE_TEXT_SECTION_LABEL is\n\tfalse.\n\t* config/mips/iris6.h (DWARF2_GENERATE_TEXT_SECTION_LABEL):\n\tDefine to zero.\n\nFrom-SVN: r28213", "tree": {"sha": "7776410b059bf060eae695d3334b90bfa73b4174", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7776410b059bf060eae695d3334b90bfa73b4174"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b366352bbd1d4439e25d46f101ba898e5642b8d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b366352bbd1d4439e25d46f101ba898e5642b8d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b366352bbd1d4439e25d46f101ba898e5642b8d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b366352bbd1d4439e25d46f101ba898e5642b8d9/comments", "author": null, "committer": null, "parents": [{"sha": "a6c7a886f4c73309caea4f1eaa3c95a01fa18563", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6c7a886f4c73309caea4f1eaa3c95a01fa18563", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6c7a886f4c73309caea4f1eaa3c95a01fa18563"}], "stats": {"total": 40, "additions": 38, "deletions": 2}, "files": [{"sha": "fb6fc1e11f9373f79d89f714838c9ad49e0f8936", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b366352bbd1d4439e25d46f101ba898e5642b8d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b366352bbd1d4439e25d46f101ba898e5642b8d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b366352bbd1d4439e25d46f101ba898e5642b8d9", "patch": "@@ -1,3 +1,13 @@\n+Wed Jul 21 00:46:58 1999  Mark P. Mitchell  <mark@codesourcery.com>\n+\n+\t* defaults.h (DWARF2_GENERATE_TEXT_SECTION_LABEL): New macro.\n+\t* tm.texi (DWARF2_GENERATE_TEXT_SECTION_LABEL): Define it.\n+ \t* dwarf2out.c (dwarf2out_init): Don't output a label to mark the\n+ \tstart of the text section if DWARF2_GENERATE_TEXT_SECTION_LABEL is\n+\tfalse.\n+\t* config/mips/iris6.h (DWARF2_GENERATE_TEXT_SECTION_LABEL): \n+\tDefine to zero.\n+\t\n 1999-07-21  Michael Meissner  <meissner@cygnus.com>\n \n \t* print-rtl.c (print_rtx): Print the names of the virtual"}, {"sha": "47d4ea85d398e2b551f342d2e5cddb9360201295", "filename": "gcc/config/mips/iris6.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b366352bbd1d4439e25d46f101ba898e5642b8d9/gcc%2Fconfig%2Fmips%2Firis6.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b366352bbd1d4439e25d46f101ba898e5642b8d9/gcc%2Fconfig%2Fmips%2Firis6.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Firis6.h?ref=b366352bbd1d4439e25d46f101ba898e5642b8d9", "patch": "@@ -34,6 +34,11 @@ Boston, MA 02111-1307, USA.  */\n  irix5.h file.  */\n #undef DWARF2_UNWIND_INFO\n \n+/* The Irix6 assembler will sometimes assign labels to the wrong\n+   section unless the labels are within .ent/.end blocks.  Therefore,\n+   we avoid creating such labels.  */\n+#define DWARF2_GENERATE_TEXT_SECTION_LABEL 0\n+\n /* For Irix 6, -mabi=64 implies TARGET_LONG64.  */\n /* This is handled in override_options.  */\n "}, {"sha": "14c365a2b44002ecae7578878cb0c9b7e1d8a2eb", "filename": "gcc/defaults.h", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b366352bbd1d4439e25d46f101ba898e5642b8d9/gcc%2Fdefaults.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b366352bbd1d4439e25d46f101ba898e5642b8d9/gcc%2Fdefaults.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdefaults.h?ref=b366352bbd1d4439e25d46f101ba898e5642b8d9", "patch": "@@ -154,3 +154,13 @@ do { fprintf (FILE, \"\\t%s\\t\", ASM_LONG);\t\t\t\t\\\n #if !defined (DWARF2_UNWIND_INFO) && defined (INCOMING_RETURN_ADDR_RTX)\n #define DWARF2_UNWIND_INFO 1\n #endif\n+\n+/* By default, we generate a label at the beginning and end of the\n+   text section, and compute the size of the text section by\n+   subtracting the two.  However, on some platforms that doesn't \n+   work, and we use the section itself, rather than a label at the\n+   beginning of it, to indicate the start of the section.  On such\n+   platforms, define this to zero.  */\n+#ifndef DWARF2_GENERATE_TEXT_SECTION_LABEL\n+#define DWARF2_GENERATE_TEXT_SECTION_LABEL 1\n+#endif"}, {"sha": "4e1ebee44adf68b70a533110902ee5f25d2c3cfe", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b366352bbd1d4439e25d46f101ba898e5642b8d9/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b366352bbd1d4439e25d46f101ba898e5642b8d9/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=b366352bbd1d4439e25d46f101ba898e5642b8d9", "patch": "@@ -10008,7 +10008,10 @@ dwarf2out_init (asm_out_file, main_input_filename)\n \n   ASM_GENERATE_INTERNAL_LABEL (text_end_label, TEXT_END_LABEL, 0);\n   ASM_GENERATE_INTERNAL_LABEL (abbrev_section_label, ABBREV_SECTION_LABEL, 0);\n-  ASM_GENERATE_INTERNAL_LABEL (text_section_label, TEXT_SECTION_LABEL, 0);\n+  if (DWARF2_GENERATE_TEXT_SECTION_LABEL)\n+    ASM_GENERATE_INTERNAL_LABEL (text_section_label, TEXT_SECTION_LABEL, 0);\n+  else\n+    strcpy (text_section_label, stripattributes (TEXT_SECTION));\n   ASM_GENERATE_INTERNAL_LABEL (debug_info_section_label, \n \t\t\t       DEBUG_INFO_SECTION_LABEL, 0);\n   ASM_GENERATE_INTERNAL_LABEL (debug_line_section_label, \n@@ -10017,7 +10020,8 @@ dwarf2out_init (asm_out_file, main_input_filename)\n   ASM_OUTPUT_SECTION (asm_out_file, ABBREV_SECTION);\n   ASM_OUTPUT_LABEL (asm_out_file, abbrev_section_label);\n   ASM_OUTPUT_SECTION (asm_out_file, TEXT_SECTION);\n-  ASM_OUTPUT_LABEL (asm_out_file, text_section_label);\n+  if (DWARF2_GENERATE_TEXT_SECTION_LABEL)\n+    ASM_OUTPUT_LABEL (asm_out_file, text_section_label);\n   ASM_OUTPUT_SECTION (asm_out_file, DEBUG_INFO_SECTION);\n   ASM_OUTPUT_LABEL (asm_out_file, debug_info_section_label);\n   ASM_OUTPUT_SECTION (asm_out_file, DEBUG_LINE_SECTION);"}, {"sha": "a44c27bc5a2ada4511cbc4d4b1a08f39dc5118d5", "filename": "gcc/tm.texi", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b366352bbd1d4439e25d46f101ba898e5642b8d9/gcc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b366352bbd1d4439e25d46f101ba898e5642b8d9/gcc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftm.texi?ref=b366352bbd1d4439e25d46f101ba898e5642b8d9", "patch": "@@ -6908,6 +6908,13 @@ Normally, if the user specifies only @samp{-ggdb} GNU CC will use Dwarf\n version 2 if available; this macro disables this.  See the description\n of the @code{PREFERRED_DEBUGGING_TYPE} macro for more details.\n \n+@findex DWARF2_GENERATE_TEXT_SECTION_LABEL\n+@item DWARF2_GENERATE_TEXT_SECTION_LABEL\n+By default, the Dwarf 2 debugging information generator will generate a\n+label to mark the beginning of the text section.  If it is better simply\n+to use the name of the text section itself, rather than an explicit label,\n+to indicate the beginning of the text section, define this macro to zero.\n+\n @findex PUT_SDB_@dots{}\n @item PUT_SDB_@dots{}\n Define these macros to override the assembler syntax for the special"}]}