{"sha": "0eb31ee3566c07d81e5dfeb500215e224b42169f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGViMzFlZTM1NjZjMDdkODFlNWRmZWI1MDAyMTVlMjI0YjQyMTY5Zg==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2003-12-08T04:18:44Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2003-12-08T04:18:44Z"}, "message": "collect2.c (GCC_OK_SYMBOL): Add support for AIX C_WEAKEXT.\n\n        * collect2.c (GCC_OK_SYMBOL): Add support for AIX C_WEAKEXT.\n        (GCC_UNDEF_SYMBOL): Same.\n\nCo-Authored-By: Graham Reed <greed@pobox.com>\n\nFrom-SVN: r74407", "tree": {"sha": "ef24f32400467f1946cffdbca90dcc5187add008", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef24f32400467f1946cffdbca90dcc5187add008"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0eb31ee3566c07d81e5dfeb500215e224b42169f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eb31ee3566c07d81e5dfeb500215e224b42169f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0eb31ee3566c07d81e5dfeb500215e224b42169f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0eb31ee3566c07d81e5dfeb500215e224b42169f/comments", "author": null, "committer": null, "parents": [{"sha": "6f1ec3b946775850e9a6b6209c816cf94a78ae43", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f1ec3b946775850e9a6b6209c816cf94a78ae43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f1ec3b946775850e9a6b6209c816cf94a78ae43"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "b3bffc0dc562aad8921b788d27bce3da989f2148", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eb31ee3566c07d81e5dfeb500215e224b42169f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eb31ee3566c07d81e5dfeb500215e224b42169f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0eb31ee3566c07d81e5dfeb500215e224b42169f", "patch": "@@ -1,3 +1,9 @@\n+2003-12-07  David Edelsohn  <edelsohn@gnu.org>\n+\t    Graham Reed <greed@pobox.com>\n+\n+\t* collect2.c (GCC_OK_SYMBOL): Add support for AIX C_WEAKEXT.\n+\t(GCC_UNDEF_SYMBOL): Same.\n+\n 2003-12-07  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* final.c (final_scan_insn): Don't use FINAL_PRESCAN_LABEL."}, {"sha": "0d20b4d9e4a9efadec0ab2d641606842c0154d57", "filename": "gcc/collect2.c", "status": "modified", "additions": 21, "deletions": 9, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0eb31ee3566c07d81e5dfeb500215e224b42169f/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0eb31ee3566c07d81e5dfeb500215e224b42169f/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=0eb31ee3566c07d81e5dfeb500215e224b42169f", "patch": "@@ -2552,7 +2552,7 @@ scan_libraries (const char *prog_name)\n \n #ifdef OBJECT_FORMAT_COFF\n \n-#if defined(EXTENDED_COFF)\n+#if defined (EXTENDED_COFF)\n \n #   define GCC_SYMBOLS(X)\t(SYMHEADER(X).isymMax + SYMHEADER(X).iextMax)\n #   define GCC_SYMENT\t\tSYMR\n@@ -2565,14 +2565,26 @@ scan_libraries (const char *prog_name)\n \n #   define GCC_SYMBOLS(X)\t(HEADER(ldptr).f_nsyms)\n #   define GCC_SYMENT\t\tSYMENT\n-#   define GCC_OK_SYMBOL(X) \\\n-     (((X).n_sclass == C_EXT) && \\\n-      ((X).n_scnum > N_UNDEF) && \\\n-      (aix64_flag \\\n-       || (((X).n_type & N_TMASK) == (DT_NON << N_BTSHFT) \\\n-           || ((X).n_type & N_TMASK) == (DT_FCN << N_BTSHFT))))\n-#   define GCC_UNDEF_SYMBOL(X) \\\n-     (((X).n_sclass == C_EXT) && ((X).n_scnum == N_UNDEF))\n+#   if defined (C_WEAKEXT)\n+#     define GCC_OK_SYMBOL(X) \\\n+       (((X).n_sclass == C_EXT || (X).n_sclass == C_WEAKEXT) && \\\n+        ((X).n_scnum > N_UNDEF) && \\\n+        (aix64_flag \\\n+         || (((X).n_type & N_TMASK) == (DT_NON << N_BTSHFT) \\\n+             || ((X).n_type & N_TMASK) == (DT_FCN << N_BTSHFT))))\n+#     define GCC_UNDEF_SYMBOL(X) \\\n+       (((X).n_sclass == C_EXT || (X).n_sclass == C_WEAKEXT) && \\\n+        ((X).n_scnum == N_UNDEF))\n+#   else\n+#     define GCC_OK_SYMBOL(X) \\\n+       (((X).n_sclass == C_EXT) && \\\n+        ((X).n_scnum > N_UNDEF) && \\\n+        (aix64_flag \\\n+         || (((X).n_type & N_TMASK) == (DT_NON << N_BTSHFT) \\\n+             || ((X).n_type & N_TMASK) == (DT_FCN << N_BTSHFT))))\n+#     define GCC_UNDEF_SYMBOL(X) \\\n+       (((X).n_sclass == C_EXT) && ((X).n_scnum == N_UNDEF))\n+#   endif\n #   define GCC_SYMINC(X)\t((X).n_numaux+1)\n #   define GCC_SYMZERO(X)\t0\n "}]}