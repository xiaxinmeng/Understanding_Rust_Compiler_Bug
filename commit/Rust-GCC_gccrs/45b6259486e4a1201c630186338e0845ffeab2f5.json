{"sha": "45b6259486e4a1201c630186338e0845ffeab2f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDViNjI1OTQ4NmU0YTEyMDFjNjMwMTg2MzM4ZTA4NDVmZmVhYjJmNQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2014-04-04T11:52:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2014-04-04T11:52:35Z"}, "message": "re PR middle-end/60746 (ICE segfault in gimple-expr.c:314)\n\n2014-04-04  Richard Biener  <rguenther@suse.de>\n\n\tPR ipa/60746\n\t* tree-ssanames.c (make_ssa_name_fn): Fix assert.\n\t* gimple.c (gimple_set_bb): Avoid ICEing for NULL cfun for\n\tnon-GIMPLE_LABELs.\n\t* gimplify.h (gimple_add_tmp_var_fn): Declare.\n\t* gimplify.c (gimple_add_tmp_var_fn): New function.\n\t* gimple-expr.h (create_tmp_reg_fn): Declare.\n\t* gimple-expr.c (create_tmp_reg_fn): New function.\n\t* gimple-low.c (record_vars_into): Don't change cfun.\n\t* cgraph.c (cgraph_redirect_edge_call_stmt_to_callee): Fix\n\tcode generation without cfun.\n\n\t* g++.dg/torture/pr60746.C: New testcase.\n\nFrom-SVN: r209079", "tree": {"sha": "5d195f2c96f8f418bd1d795709474cd7c6d0007d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5d195f2c96f8f418bd1d795709474cd7c6d0007d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45b6259486e4a1201c630186338e0845ffeab2f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45b6259486e4a1201c630186338e0845ffeab2f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45b6259486e4a1201c630186338e0845ffeab2f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45b6259486e4a1201c630186338e0845ffeab2f5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb609c35be50a8b8a89005d1f5f4896a29c4ffae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb609c35be50a8b8a89005d1f5f4896a29c4ffae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb609c35be50a8b8a89005d1f5f4896a29c4ffae"}], "stats": {"total": 111, "additions": 94, "deletions": 17}, "files": [{"sha": "4dc3a9ea7f71cf7447c44d02de99e531728c8019", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45b6259486e4a1201c630186338e0845ffeab2f5", "patch": "@@ -1,3 +1,17 @@\n+2014-04-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/60746\n+\t* tree-ssanames.c (make_ssa_name_fn): Fix assert.\n+\t* gimple.c (gimple_set_bb): Avoid ICEing for NULL cfun for\n+\tnon-GIMPLE_LABELs.\n+\t* gimplify.h (gimple_add_tmp_var_fn): Declare.\n+\t* gimplify.c (gimple_add_tmp_var_fn): New function.\n+\t* gimple-expr.h (create_tmp_reg_fn): Declare.\n+\t* gimple-expr.c (create_tmp_reg_fn): New function.\n+\t* gimple-low.c (record_vars_into): Don't change cfun.\n+\t* cgraph.c (cgraph_redirect_edge_call_stmt_to_callee): Fix\n+\tcode generation without cfun.\n+\n 2014-04-04  Thomas Schwinge  <thomas@codesourcery.com>\n \n \tPR bootstrap/60719"}, {"sha": "281ad6326b51559c9be8943c51f02fa7704c971d", "filename": "gcc/cgraph.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Fcgraph.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Fcgraph.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.c?ref=45b6259486e4a1201c630186338e0845ffeab2f5", "patch": "@@ -1479,13 +1479,14 @@ cgraph_redirect_edge_call_stmt_to_callee (struct cgraph_edge *e)\n     {\n       if (TREE_CODE (lhs) == SSA_NAME)\n \t{\n+\t  tree var = create_tmp_reg_fn (DECL_STRUCT_FUNCTION (e->caller->decl),\n+\t\t\t\t\tTREE_TYPE (lhs), NULL);\n+\t  var = get_or_create_ssa_default_def\n+\t\t  (DECL_STRUCT_FUNCTION (e->caller->decl), var);\n+\t  gimple set_stmt = gimple_build_assign (lhs, var);\n           gsi = gsi_for_stmt (new_stmt);\n-\n-\t  tree var = create_tmp_var (TREE_TYPE (lhs), NULL);\n-\t  tree def = get_or_create_ssa_default_def\n-\t\t      (DECL_STRUCT_FUNCTION (e->caller->decl), var);\n-\t  gimple set_stmt = gimple_build_assign (lhs, def);\n-\t  gsi_insert_before (&gsi, set_stmt, GSI_SAME_STMT);\n+\t  gsi_insert_before_without_update (&gsi, set_stmt, GSI_SAME_STMT);\n+\t  update_stmt_fn (DECL_STRUCT_FUNCTION (e->caller->decl), set_stmt);\n \t}\n       gimple_call_set_lhs (new_stmt, NULL_TREE);\n       update_stmt_fn (DECL_STRUCT_FUNCTION (e->caller->decl), new_stmt);"}, {"sha": "da663d6fb79908fce3d4d4669a232545712eac7a", "filename": "gcc/gimple-expr.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Fgimple-expr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Fgimple-expr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-expr.c?ref=45b6259486e4a1201c630186338e0845ffeab2f5", "patch": "@@ -527,6 +527,24 @@ create_tmp_reg (tree type, const char *prefix)\n   return tmp;\n }\n \n+/* Create a new temporary variable declaration of type TYPE by calling\n+   create_tmp_var and if TYPE is a vector or a complex number, mark the new\n+   temporary as gimple register.  */\n+\n+tree\n+create_tmp_reg_fn (struct function *fn, tree type, const char *prefix)\n+{\n+  tree tmp;\n+\n+  tmp = create_tmp_var_raw (type, prefix);\n+  gimple_add_tmp_var_fn (fn, tmp);\n+  if (TREE_CODE (type) == COMPLEX_TYPE\n+      || TREE_CODE (type) == VECTOR_TYPE)\n+    DECL_GIMPLE_REG_P (tmp) = 1;\n+\n+  return tmp;\n+}\n+\n \n /* ----- Expression related -----  */\n "}, {"sha": "3b6cda8441b1b124de6656044230e8e0fa4b35a5", "filename": "gcc/gimple-expr.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Fgimple-expr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Fgimple-expr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-expr.h?ref=45b6259486e4a1201c630186338e0845ffeab2f5", "patch": "@@ -33,6 +33,7 @@ extern tree create_tmp_var_name (const char *);\n extern tree create_tmp_var_raw (tree, const char *);\n extern tree create_tmp_var (tree, const char *);\n extern tree create_tmp_reg (tree, const char *);\n+extern tree create_tmp_reg_fn (struct function *, tree, const char *);\n \n \n extern void extract_ops_from_tree_1 (tree, enum tree_code *, tree *, tree *,"}, {"sha": "da3fb9fb35eb771f420d19a82b47043c15702f4b", "filename": "gcc/gimple-low.c", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Fgimple-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Fgimple-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-low.c?ref=45b6259486e4a1201c630186338e0845ffeab2f5", "patch": "@@ -841,11 +841,6 @@ lower_builtin_posix_memalign (gimple_stmt_iterator *gsi)\n void\n record_vars_into (tree vars, tree fn)\n {\n-  bool change_cfun = fn != current_function_decl;\n-\n-  if (change_cfun)\n-    push_cfun (DECL_STRUCT_FUNCTION (fn));\n-\n   for (; vars; vars = DECL_CHAIN (vars))\n     {\n       tree var = vars;\n@@ -860,11 +855,8 @@ record_vars_into (tree vars, tree fn)\n \tcontinue;\n \n       /* Record the variable.  */\n-      add_local_decl (cfun, var);\n+      add_local_decl (DECL_STRUCT_FUNCTION (fn), var);\n     }\n-\n-  if (change_cfun)\n-    pop_cfun ();\n }\n \n "}, {"sha": "2a278e41e9dff8f5227fd086225123f839c4031c", "filename": "gcc/gimple.c", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=45b6259486e4a1201c630186338e0845ffeab2f5", "patch": "@@ -1464,9 +1464,12 @@ gimple_set_bb (gimple stmt, basic_block bb)\n {\n   stmt->bb = bb;\n \n+  if (gimple_code (stmt) != GIMPLE_LABEL)\n+    return;\n+\n   /* If the statement is a label, add the label to block-to-labels map\n      so that we can speed up edge creation for GIMPLE_GOTOs.  */\n-  if (cfun->cfg && gimple_code (stmt) == GIMPLE_LABEL)\n+  if (cfun->cfg)\n     {\n       tree t;\n       int uid;"}, {"sha": "744178420ab70242f48b055a2c37825e60ed7b2d", "filename": "gcc/gimplify.c", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=45b6259486e4a1201c630186338e0845ffeab2f5", "patch": "@@ -626,6 +626,25 @@ force_constant_size (tree var)\n \n /* Push the temporary variable TMP into the current binding.  */\n \n+void\n+gimple_add_tmp_var_fn (struct function *fn, tree tmp)\n+{\n+  gcc_assert (!DECL_CHAIN (tmp) && !DECL_SEEN_IN_BIND_EXPR_P (tmp));\n+\n+  /* Later processing assumes that the object size is constant, which might\n+     not be true at this point.  Force the use of a constant upper bound in\n+     this case.  */\n+  if (!tree_fits_uhwi_p (DECL_SIZE_UNIT (tmp)))\n+    force_constant_size (tmp);\n+\n+  DECL_CONTEXT (tmp) = fn->decl;\n+  DECL_SEEN_IN_BIND_EXPR_P (tmp) = 1;\n+\n+  record_vars_into (tmp, fn->decl);\n+}\n+\n+/* Push the temporary variable TMP into the current binding.  */\n+\n void\n gimple_add_tmp_var (tree tmp)\n {"}, {"sha": "47e72130add6f0c3c331ba4f84d401fb68c15899", "filename": "gcc/gimplify.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Fgimplify.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Fgimplify.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.h?ref=45b6259486e4a1201c630186338e0845ffeab2f5", "patch": "@@ -60,6 +60,7 @@ extern tree get_formal_tmp_var (tree, gimple_seq *);\n extern tree get_initialized_tmp_var (tree, gimple_seq *, gimple_seq *);\n extern void declare_vars (tree, gimple, bool);\n extern void gimple_add_tmp_var (tree);\n+extern void gimple_add_tmp_var_fn (struct function *, tree);\n extern tree unshare_expr (tree);\n extern tree unshare_expr_without_location (tree);\n extern tree voidify_wrapper_expr (tree, tree);"}, {"sha": "3c64a2bf96b858e0a38723d04933117e31319276", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=45b6259486e4a1201c630186338e0845ffeab2f5", "patch": "@@ -1,3 +1,8 @@\n+2014-04-04  Richard Biener  <rguenther@suse.de>\n+\n+\tPR ipa/60746\n+\t* g++.dg/torture/pr60746.C: New testcase.\n+\n 2014-04-04  Fabien Ch\u00eane  <fabien@gcc.gnu.org>\n \n \t* g++.old-deja/g++.robertl/eb121.C: Adjust."}, {"sha": "7ce6ebe6bc0d8fc1f9092841ca9e960dedb99667", "filename": "gcc/testsuite/g++.dg/torture/pr60746.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr60746.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr60746.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr60746.C?ref=45b6259486e4a1201c630186338e0845ffeab2f5", "patch": "@@ -0,0 +1,23 @@\n+// { dg-do compile }\n+\n+class One\n+{\n+public:\n+  virtual unsigned long getSize () const;\n+};\n+\n+class Two\n+{\n+  virtual int run ();\n+};\n+\n+int\n+Two::run ()\n+{\n+  One list_arry[5][2];\n+  int orig = 0;\n+  if (list_arry[3][orig].getSize () > 0\n+      || list_arry[4][orig].getSize () > 0)\n+    {\n+    }\n+}"}, {"sha": "2b535a1fef0ee974aa51962e567dc76e1f9fb4bf", "filename": "gcc/tree-ssanames.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Ftree-ssanames.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45b6259486e4a1201c630186338e0845ffeab2f5/gcc%2Ftree-ssanames.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssanames.c?ref=45b6259486e4a1201c630186338e0845ffeab2f5", "patch": "@@ -144,7 +144,7 @@ make_ssa_name_fn (struct function *fn, tree var, gimple stmt)\n \n       /* The node was cleared out when we put it on the free list, so\n \t there is no need to do so again here.  */\n-      gcc_assert (ssa_name (SSA_NAME_VERSION (t)) == NULL);\n+      gcc_assert ((*SSANAMES (fn))[SSA_NAME_VERSION (t)] == NULL);\n       (*SSANAMES (fn))[SSA_NAME_VERSION (t)] = t;\n     }\n   else"}]}