{"sha": "2e6a6644db0ef0f369df4e5b1b337122d84c1a39", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmU2YTY2NDRkYjBlZjBmMzY5ZGY0ZTViMWIzMzcxMjJkODRjMWEzOQ==", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2020-06-06T01:31:19Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2020-06-06T01:31:19Z"}, "message": "[PR95456] avoid memcpy (_, NULL, 0) in gcc.c\n\nSome newly-added code in gcc.c might call memcpy with a NULL source\npointer and zero-length inputs.  Avoid such calls by rearranging the\ncode a little.\n\n\nfor  gcc/ChangeLog\n\n\tPR driver/95456\n\t* gcc.c (do_spec_1): Don't call memcpy (_, NULL, 0).", "tree": {"sha": "8eb06e227b6734b1986fd29fa551ad62a87ffb42", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8eb06e227b6734b1986fd29fa551ad62a87ffb42"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2e6a6644db0ef0f369df4e5b1b337122d84c1a39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e6a6644db0ef0f369df4e5b1b337122d84c1a39", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e6a6644db0ef0f369df4e5b1b337122d84c1a39", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e6a6644db0ef0f369df4e5b1b337122d84c1a39/comments", "author": null, "committer": null, "parents": [{"sha": "1a59f3db4a4174d02256be51e9e08e9c68478a41", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a59f3db4a4174d02256be51e9e08e9c68478a41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a59f3db4a4174d02256be51e9e08e9c68478a41"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "c0eb3c10cfd63f8d073c2927d66b827aac60fb1c", "filename": "gcc/gcc.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2e6a6644db0ef0f369df4e5b1b337122d84c1a39/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2e6a6644db0ef0f369df4e5b1b337122d84c1a39/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=2e6a6644db0ef0f369df4e5b1b337122d84c1a39", "patch": "@@ -6024,19 +6024,19 @@ do_spec_1 (const char *spec, int inswitch, const char *soft_matched_part)\n \t\t      }\n \t\t    temp_filename_length\n \t\t      = dumpdir_length + suffix_length + 1;\n-\t\t    if (!outbase_length)\n-\t\t      temp_filename_length += basename_length;\n-\t\t    else\n+\t\t    if (outbase_length)\n \t\t      temp_filename_length += outbase_length;\n+\t\t    else\n+\t\t      temp_filename_length += basename_length;\n \t\t    tmp = (char *) alloca (temp_filename_length);\n \t\t    if (dumpdir_length)\n \t\t      memcpy (tmp, dumpdir, dumpdir_length);\n-\t\t    if (!outbase_length)\n-\t\t      memcpy (tmp + dumpdir_length, input_basename,\n-\t\t\t      basename_length);\n-\t\t    else\n+\t\t    if (outbase_length)\n \t\t      memcpy (tmp + dumpdir_length, outbase,\n \t\t\t      outbase_length);\n+\t\t    else if (basename_length)\n+\t\t      memcpy (tmp + dumpdir_length, input_basename,\n+\t\t\t      basename_length);\n \t\t    memcpy (tmp + temp_filename_length - suffix_length - 1,\n \t\t\t    suffix, suffix_length);\n \t\t    if (adjusted_suffix)"}]}