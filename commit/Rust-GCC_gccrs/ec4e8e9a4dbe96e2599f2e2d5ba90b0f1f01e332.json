{"sha": "ec4e8e9a4dbe96e2599f2e2d5ba90b0f1f01e332", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM0ZThlOWE0ZGJlOTZlMjU5OWYyZTJkNWJhOTBiMGYxZjAxZTMzMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-24T15:56:14Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-24T15:56:14Z"}, "message": "[multiple changes]\n\n2014-02-24  Olivier Ramonat  <ramonat@adacore.com>\n\n\t* gnat_rm.texi, gnat_ugn.texi: Replace Ada Compiler by Ada Development\n\tEnvironment.\n\n2014-02-24  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_prag.adb (Check_Constituent_Usage): Remove leading spaces in\n\terror messages.\n\t(Inconsistent_Mode_Error): Remove leading spaces in error messages.\n\tMerge the expected and available mode errors.\n\t(Report_Unused_Constituents): Remove leading spaces in error messages.\n\t(Report_Unused_States): Remove leading spaces in error messages.\n\nFrom-SVN: r208073", "tree": {"sha": "1c8c035780f3cd8ca7e884355e8c04c0fe4d1d50", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1c8c035780f3cd8ca7e884355e8c04c0fe4d1d50"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec4e8e9a4dbe96e2599f2e2d5ba90b0f1f01e332", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec4e8e9a4dbe96e2599f2e2d5ba90b0f1f01e332", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec4e8e9a4dbe96e2599f2e2d5ba90b0f1f01e332", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec4e8e9a4dbe96e2599f2e2d5ba90b0f1f01e332/comments", "author": null, "committer": null, "parents": [{"sha": "e19137bce2231c3494d161746c1485a241056ba3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e19137bce2231c3494d161746c1485a241056ba3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e19137bce2231c3494d161746c1485a241056ba3"}], "stats": {"total": 41, "additions": 26, "deletions": 15}, "files": [{"sha": "2c18069d8f8f0cbf0f77d4b8a3026148e21fe484", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec4e8e9a4dbe96e2599f2e2d5ba90b0f1f01e332/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec4e8e9a4dbe96e2599f2e2d5ba90b0f1f01e332/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ec4e8e9a4dbe96e2599f2e2d5ba90b0f1f01e332", "patch": "@@ -1,3 +1,17 @@\n+2014-02-24  Olivier Ramonat  <ramonat@adacore.com>\n+\n+\t* gnat_rm.texi, gnat_ugn.texi: Replace Ada Compiler by Ada Development\n+\tEnvironment.\n+\n+2014-02-24  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_prag.adb (Check_Constituent_Usage): Remove leading spaces in\n+\terror messages.\n+\t(Inconsistent_Mode_Error): Remove leading spaces in error messages.\n+\tMerge the expected and available mode errors.\n+\t(Report_Unused_Constituents): Remove leading spaces in error messages.\n+\t(Report_Unused_States): Remove leading spaces in error messages.\n+\n 2014-02-24  Thomas Quinot  <quinot@adacore.com>\n \n \t* par_sco.adb (Traverse_One): Refine categorization of statement"}, {"sha": "2b71259edb9d9a854b703bd3ebb414acb13292d9", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec4e8e9a4dbe96e2599f2e2d5ba90b0f1f01e332/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec4e8e9a4dbe96e2599f2e2d5ba90b0f1f01e332/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=ec4e8e9a4dbe96e2599f2e2d5ba90b0f1f01e332", "patch": "@@ -41,7 +41,7 @@ included in the section entitled ``GNU Free Documentation License''.\n \n @titlepage\n @title GNAT Reference Manual\n-@subtitle GNAT, The GNU Ada Compiler\n+@subtitle GNAT, The GNU Ada Development Environment\n @versionsubtitle\n @author AdaCore\n @page\n@@ -59,7 +59,7 @@ included in the section entitled ``GNU Free Documentation License''.\n GNAT Reference Manual\n \n @noindent\n-GNAT, The GNU Ada Compiler@*\n+GNAT, The GNU Ada Development Environment@*\n GCC version @value{version-GCC}@*\n \n @noindent"}, {"sha": "d12c889948f421a35a763b3037ee54852b1f2b56", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec4e8e9a4dbe96e2599f2e2d5ba90b0f1f01e332/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec4e8e9a4dbe96e2599f2e2d5ba90b0f1f01e332/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=ec4e8e9a4dbe96e2599f2e2d5ba90b0f1f01e332", "patch": "@@ -138,7 +138,7 @@ Texts.  A copy of the license is included in the section entitled\n \n @sp 2\n \n-@subtitle GNAT, The GNU Ada Compiler\n+@subtitle GNAT, The GNU Ada Development Environment\n @versionsubtitle\n @author AdaCore\n \n@@ -157,7 +157,7 @@ Texts.  A copy of the license is included in the section entitled\n @value{EDITION} User's Guide @value{PLATFORM}\n \n @noindent\n-GNAT, The GNU Ada Compiler@*\n+GNAT, The GNU Ada Development Environment@*\n GCC version @value{version-GCC}@*\n \n @noindent"}, {"sha": "f21bacacdb134e8f13270bf835b505aa35dcb8a6", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec4e8e9a4dbe96e2599f2e2d5ba90b0f1f01e332/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec4e8e9a4dbe96e2599f2e2d5ba90b0f1f01e332/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=ec4e8e9a4dbe96e2599f2e2d5ba90b0f1f01e332", "patch": "@@ -4637,8 +4637,7 @@ package body Sem_Prag is\n             procedure Grouping_Error (Prag : Node_Id) is\n             begin\n                Error_Msg_Sloc := Sloc (Prag);\n-               Error_Pragma\n-                 (\"pragma% should appear immediately after pragma#\");\n+               Error_Pragma (\"pragma% must appear next to pragma#\");\n             end Grouping_Error;\n \n          --  Start of processing for Check_Loop_Pragma_Grouping\n@@ -22604,7 +22603,7 @@ package body Sem_Prag is\n                   end if;\n \n                   Error_Msg_NE\n-                    (\"\\\\  constituent & is missing in output list\",\n+                    (\"\\\\constituent & is missing in output list\",\n                      N, Constit_Id);\n                end if;\n \n@@ -22764,10 +22763,8 @@ package body Sem_Prag is\n                  (\"global item & has inconsistent modes\", Item, Item_Id);\n \n                Error_Msg_Name_1 := Global_Mode;\n-               Error_Msg_N (\"\\\\  expected mode %\", Item);\n-\n-               Error_Msg_Name_1 := Expect;\n-               Error_Msg_N (\"\\\\  found mode %\", Item);\n+               Error_Msg_Name_2 := Expect;\n+               Error_Msg_N (\"\\\\expected mode %, found mode %\", Item);\n             end Inconsistent_Mode_Error;\n \n          --  Start of processing for Check_Refined_Global_Item\n@@ -23472,10 +23469,10 @@ package body Sem_Prag is\n \n                   if Ekind (Constit_Id) = E_Abstract_State then\n                      Error_Msg_NE\n-                       (\"\\\\  abstract state & defined #\", State, Constit_Id);\n+                       (\"\\\\abstract state & defined #\", State, Constit_Id);\n                   else\n                      Error_Msg_NE\n-                       (\"\\\\  variable & defined #\", State, Constit_Id);\n+                       (\"\\\\variable & defined #\", State, Constit_Id);\n                   end if;\n \n                   Next_Elmt (Constit_Elmt);\n@@ -23794,10 +23791,10 @@ package body Sem_Prag is\n \n                if Ekind (State_Id) = E_Abstract_State then\n                   Error_Msg_NE\n-                    (\"\\\\  abstract state & defined #\", Body_Id, State_Id);\n+                    (\"\\\\abstract state & defined #\", Body_Id, State_Id);\n                else\n                   Error_Msg_NE\n-                    (\"\\\\  variable & defined #\", Body_Id, State_Id);\n+                    (\"\\\\variable & defined #\", Body_Id, State_Id);\n                end if;\n \n                Next_Elmt (State_Elmt);"}]}