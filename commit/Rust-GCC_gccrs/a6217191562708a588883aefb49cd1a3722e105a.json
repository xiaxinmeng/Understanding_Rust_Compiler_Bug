{"sha": "a6217191562708a588883aefb49cd1a3722e105a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTYyMTcxOTE1NjI3MDhhNTg4ODgzYWVmYjQ5Y2QxYTM3MjJlMTA1YQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@linaro.org", "date": "2011-03-30T14:52:38Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2011-03-30T14:52:38Z"}, "message": "re PR target/43590 (ICE in spill_failure, at reload1.c:2158)\n\ngcc/\n2011-03-30  Richard Sandiford  <richard.sandiford@linaro.org>\n\t    Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n\n\tPR target/43590\n\t* config/arm/neon.md (neon_vld3qa<mode>, neon_vld4qa<mode>): Remove\n\toperand 1 and reshuffle the operands to match.\n\t(neon_vld3<mode>, neon_vld4<mode>): Update accordingly.\n\nCo-Authored-By: Ramana Radhakrishnan <ramana.radhakrishnan@linaro.org>\n\nFrom-SVN: r171729", "tree": {"sha": "e0461870fb0f6ec07ef1dade59af099b96569e90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e0461870fb0f6ec07ef1dade59af099b96569e90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a6217191562708a588883aefb49cd1a3722e105a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6217191562708a588883aefb49cd1a3722e105a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6217191562708a588883aefb49cd1a3722e105a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6217191562708a588883aefb49cd1a3722e105a/comments", "author": null, "committer": null, "parents": [{"sha": "6955d771048231e7f1f0e7bef9dbfc68b245c82d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6955d771048231e7f1f0e7bef9dbfc68b245c82d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6955d771048231e7f1f0e7bef9dbfc68b245c82d"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "ff4a5e287052f4755d3bd2fffb7bab5750acba4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6217191562708a588883aefb49cd1a3722e105a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6217191562708a588883aefb49cd1a3722e105a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a6217191562708a588883aefb49cd1a3722e105a", "patch": "@@ -1,3 +1,11 @@\n+2011-03-30  Richard Sandiford  <richard.sandiford@linaro.org>\n+\t    Ramana Radhakrishnan  <ramana.radhakrishnan@linaro.org>\n+\n+\tPR target/43590\n+\t* config/arm/neon.md (neon_vld3qa<mode>, neon_vld4qa<mode>): Remove\n+\toperand 1 and reshuffle the operands to match.\n+\t(neon_vld3<mode>, neon_vld4<mode>): Update accordingly.\n+\n 2011-03-30  Christian Sch\u00fcler  <cschueler@gmx.de>\n \n \tPR driver/48208"}, {"sha": "27070a69d41c4a74659429790c0ff1c884b5a6d5", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a6217191562708a588883aefb49cd1a3722e105a/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a6217191562708a588883aefb49cd1a3722e105a/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=a6217191562708a588883aefb49cd1a3722e105a", "patch": "@@ -4617,21 +4617,19 @@\n    (unspec:VQ [(const_int 0)] UNSPEC_VSTRUCTDUMMY)]\n   \"TARGET_NEON\"\n {\n-  emit_insn (gen_neon_vld3qa<mode> (operands[0], operands[0],\n-                                    operands[1], operands[1]));\n+  emit_insn (gen_neon_vld3qa<mode> (operands[0], operands[1], operands[1]));\n   emit_insn (gen_neon_vld3qb<mode> (operands[0], operands[0],\n                                     operands[1], operands[1]));\n   DONE;\n })\n \n (define_insn \"neon_vld3qa<mode>\"\n   [(set (match_operand:CI 0 \"s_register_operand\" \"=w\")\n-        (unspec:CI [(mem:CI (match_operand:SI 3 \"s_register_operand\" \"2\"))\n-                    (match_operand:CI 1 \"s_register_operand\" \"0\")\n+        (unspec:CI [(mem:CI (match_operand:SI 2 \"s_register_operand\" \"1\"))\n                     (unspec:VQ [(const_int 0)] UNSPEC_VSTRUCTDUMMY)]\n                    UNSPEC_VLD3A))\n-   (set (match_operand:SI 2 \"s_register_operand\" \"=r\")\n-        (plus:SI (match_dup 3)\n+   (set (match_operand:SI 1 \"s_register_operand\" \"=r\")\n+        (plus:SI (match_dup 2)\n \t\t (const_int 24)))]\n   \"TARGET_NEON\"\n {\n@@ -4640,7 +4638,7 @@\n   ops[0] = gen_rtx_REG (DImode, regno);\n   ops[1] = gen_rtx_REG (DImode, regno + 4);\n   ops[2] = gen_rtx_REG (DImode, regno + 8);\n-  ops[3] = operands[2];\n+  ops[3] = operands[1];\n   output_asm_insn (\"vld3.<V_sz_elem>\\t{%P0, %P1, %P2}, [%3]!\", ops);\n   return \"\";\n }\n@@ -4909,21 +4907,19 @@\n    (unspec:VQ [(const_int 0)] UNSPEC_VSTRUCTDUMMY)]\n   \"TARGET_NEON\"\n {\n-  emit_insn (gen_neon_vld4qa<mode> (operands[0], operands[0],\n-                                    operands[1], operands[1]));\n+  emit_insn (gen_neon_vld4qa<mode> (operands[0], operands[1], operands[1]));\n   emit_insn (gen_neon_vld4qb<mode> (operands[0], operands[0],\n                                     operands[1], operands[1]));\n   DONE;\n })\n \n (define_insn \"neon_vld4qa<mode>\"\n   [(set (match_operand:XI 0 \"s_register_operand\" \"=w\")\n-        (unspec:XI [(mem:XI (match_operand:SI 3 \"s_register_operand\" \"2\"))\n-                    (match_operand:XI 1 \"s_register_operand\" \"0\")\n+        (unspec:XI [(mem:XI (match_operand:SI 2 \"s_register_operand\" \"1\"))\n                     (unspec:VQ [(const_int 0)] UNSPEC_VSTRUCTDUMMY)]\n                    UNSPEC_VLD4A))\n-   (set (match_operand:SI 2 \"s_register_operand\" \"=r\")\n-        (plus:SI (match_dup 3)\n+   (set (match_operand:SI 1 \"s_register_operand\" \"=r\")\n+        (plus:SI (match_dup 2)\n \t\t (const_int 32)))]\n   \"TARGET_NEON\"\n {\n@@ -4933,7 +4929,7 @@\n   ops[1] = gen_rtx_REG (DImode, regno + 4);\n   ops[2] = gen_rtx_REG (DImode, regno + 8);\n   ops[3] = gen_rtx_REG (DImode, regno + 12);\n-  ops[4] = operands[2];\n+  ops[4] = operands[1];\n   output_asm_insn (\"vld4.<V_sz_elem>\\t{%P0, %P1, %P2, %P3}, [%4]!\", ops);\n   return \"\";\n }"}]}