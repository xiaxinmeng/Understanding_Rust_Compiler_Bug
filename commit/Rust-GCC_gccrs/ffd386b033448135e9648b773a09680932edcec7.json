{"sha": "ffd386b033448135e9648b773a09680932edcec7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmZkMzg2YjAzMzQ0ODEzNWU5NjQ4Yjc3M2EwOTY4MDkzMmVkY2VjNw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2002-04-04T20:57:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2002-04-04T20:57:53Z"}, "message": "sparc.md (pic): New attribute.\n\n\t* config/sparc/sparc.md (pic): New attribute.\n\t(do_builtin_setjmp_setup): Save %fp, %i7 and %l7 for TARGET_V9\n\tinto stack slots.\n\t(split after do_builtin_setjmp_setup): New.\n\nFrom-SVN: r51870", "tree": {"sha": "b71732a83bbce52ca54e1b32817e783f81eeda72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b71732a83bbce52ca54e1b32817e783f81eeda72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffd386b033448135e9648b773a09680932edcec7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffd386b033448135e9648b773a09680932edcec7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffd386b033448135e9648b773a09680932edcec7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffd386b033448135e9648b773a09680932edcec7/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3c55704ebb8c75fcc39e022f674075aecf4b2eda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c55704ebb8c75fcc39e022f674075aecf4b2eda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c55704ebb8c75fcc39e022f674075aecf4b2eda"}], "stats": {"total": 49, "additions": 39, "deletions": 10}, "files": [{"sha": "2566a78a80c48ecb7ce3ca98e111f875ad855187", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffd386b033448135e9648b773a09680932edcec7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffd386b033448135e9648b773a09680932edcec7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ffd386b033448135e9648b773a09680932edcec7", "patch": "@@ -1,3 +1,10 @@\n+2002-04-04  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* config/sparc/sparc.md (pic): New attribute.\n+\t(do_builtin_setjmp_setup): Save %fp, %i7 and %l7 for TARGET_V9\n+\tinto stack slots.\n+\t(split after do_builtin_setjmp_setup): New.\n+\n 2002-04-04  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/6106"}, {"sha": "981249f8c209127928ae0b19edc1d6f93b44629e", "filename": "gcc/config/sparc/sparc.md", "status": "modified", "additions": 32, "deletions": 10, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffd386b033448135e9648b773a09680932edcec7/gcc%2Fconfig%2Fsparc%2Fsparc.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffd386b033448135e9648b773a09680932edcec7/gcc%2Fconfig%2Fsparc%2Fsparc.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.md?ref=ffd386b033448135e9648b773a09680932edcec7", "patch": "@@ -93,6 +93,9 @@\n \n (define_attr \"branch_type\" \"none,icc,fcc,reg\" (const_string \"none\"))\n \n+(define_attr \"pic\" \"false,true\"\n+  (symbol_ref \"flag_pic != 0\"))\n+\n ;; Length (in # of insns).\n (define_attr \"length\" \"\"\n   (cond [(eq_attr \"type\" \"uncond_branch,call,sibcall\")\n@@ -8877,22 +8880,41 @@\n   DONE;\n }\")\n \n-;; ??? Should set length to zero when !current_function_calls_alloca,\n-;; ??? but there is no easy way to get at that definition.  It would\n-;; ??? require including function.h into sparc-protos.h and that is\n-;; ??? likely not a good idea. -DaveM\n (define_insn \"do_builtin_setjmp_setup\"\n   [(unspec_volatile [(const_int 0)] 5)]\n   \"\"\n   \"*\n {\n-  if (!current_function_calls_alloca)\n-    return \\\"\\\";\n-  if (TARGET_V9)\n-    return \\\"flushw\\\";\n-  return \\\"ta\\\\t3\\\";\n+  if (! current_function_calls_alloca || ! TARGET_V9 || TARGET_FLAT)\n+    return \\\"#\\\";\n+  fputs (\\\"\\tflushw\\n\\\", asm_out_file);\n+  if (flag_pic)\n+    fprintf (asm_out_file, \\\"\\tst%c\\t%%l7, [%%sp+%d]\\n\\\",\n+\t     TARGET_ARCH64 ? 'x' : 'w',\n+\t     SPARC_STACK_BIAS + 7 * UNITS_PER_WORD);\n+  fprintf (asm_out_file, \\\"\\tst%c\\t%%fp, [%%sp+%d]\\n\\\",\n+\t   TARGET_ARCH64 ? 'x' : 'w',\n+\t   SPARC_STACK_BIAS + 14 * UNITS_PER_WORD);\n+  fprintf (asm_out_file, \\\"\\tst%c\\t%%i7, [%%sp+%d]\\n\\\",\n+\t   TARGET_ARCH64 ? 'x' : 'w',\n+\t   SPARC_STACK_BIAS + 15 * UNITS_PER_WORD);\n+  return \\\"\\\";\n }\"\n-  [(set_attr \"type\" \"misc\")])\n+  [(set_attr \"type\" \"misc\")\n+   (set (attr \"length\") (if_then_else (eq_attr \"pic\" \"true\")\n+\t\t\t\t       (const_int 4)\n+\t\t\t\t       (const_int 3)))])\n+\n+(define_split\n+  [(unspec_volatile [(const_int 0)] 5)]\n+  \"! current_function_calls_alloca || ! TARGET_V9 || TARGET_FLAT\"\n+  [(const_int 0)]\n+  \"\n+{\n+  if (current_function_calls_alloca)\n+    emit_insn (gen_flush_register_windows ());\n+  DONE;\n+}\")\n \n ;; Pattern for use after a setjmp to store FP and the return register\n ;; into the stack area."}]}