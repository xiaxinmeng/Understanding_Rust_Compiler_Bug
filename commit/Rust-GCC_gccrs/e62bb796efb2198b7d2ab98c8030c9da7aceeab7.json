{"sha": "e62bb796efb2198b7d2ab98c8030c9da7aceeab7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYyYmI3OTZlZmIyMTk4YjdkMmFiOThjODAzMGM5ZGE3YWNlZWFiNw==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2015-07-02T16:27:11Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2015-07-02T16:27:11Z"}, "message": "re PR rtl-optimization/66706 (Redundant bitmask instruction on x >> (n & 32))\n\n\tPR rtl-optimization/66706\n\t* combine.c (make_compound_operation): If an AND of SUBREG of\n\tLSHIFTRT does not simplify, see if just the AND of SUBREG does.\n\nFrom-SVN: r225344", "tree": {"sha": "d174096834a05a5f44f5c2a50ff943b93ef3cce3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d174096834a05a5f44f5c2a50ff943b93ef3cce3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e62bb796efb2198b7d2ab98c8030c9da7aceeab7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e62bb796efb2198b7d2ab98c8030c9da7aceeab7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e62bb796efb2198b7d2ab98c8030c9da7aceeab7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e62bb796efb2198b7d2ab98c8030c9da7aceeab7/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "54e378516d0f5f61de13da1c6bdd0884c2b0b5aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54e378516d0f5f61de13da1c6bdd0884c2b0b5aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54e378516d0f5f61de13da1c6bdd0884c2b0b5aa"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "c358b6f1ec6c34e0066e96dd27cdb1e3b86402c0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62bb796efb2198b7d2ab98c8030c9da7aceeab7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62bb796efb2198b7d2ab98c8030c9da7aceeab7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e62bb796efb2198b7d2ab98c8030c9da7aceeab7", "patch": "@@ -1,3 +1,9 @@\n+2015-07-02  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR rtl-optimization/66706\n+\t* combine.c (make_compound_operation): If an AND of SUBREG of\n+\tLSHIFTRT does not simplify, see if just the AND of SUBREG does.\n+\n 2015-07-02  Alan Lawrence  <alan.lawrence@arm.com>\n \n \t* tree-pass.h (make_pass_ch_vect): New."}, {"sha": "b97aa10be0799ec53ce50f8a735959d58f3ab0c9", "filename": "gcc/combine.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e62bb796efb2198b7d2ab98c8030c9da7aceeab7/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e62bb796efb2198b7d2ab98c8030c9da7aceeab7/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=e62bb796efb2198b7d2ab98c8030c9da7aceeab7", "patch": "@@ -7893,6 +7893,15 @@ make_compound_operation (rtx x, enum rtx_code in_code)\n \t  new_rtx = make_extraction (GET_MODE (SUBREG_REG (XEXP (x, 0))), new_rtx, 0,\n \t\t\t\t XEXP (SUBREG_REG (XEXP (x, 0)), 1), i, 1,\n \t\t\t\t 0, in_code == COMPARE);\n+\n+\t  /* If that didn't give anything, see if the AND simplifies on\n+\t     its own.  */\n+\t  if (!new_rtx && i >= 0)\n+\t    {\n+\t      new_rtx = make_compound_operation (XEXP (x, 0), next_code);\n+\t      new_rtx = make_extraction (mode, new_rtx, 0, NULL_RTX, i, 1,\n+\t\t\t\t\t 0, in_code == COMPARE);\n+\t    }\n \t}\n       /* Same as previous, but for (xor/ior (lshiftrt...) (lshiftrt...)).  */\n       else if ((GET_CODE (XEXP (x, 0)) == XOR"}]}