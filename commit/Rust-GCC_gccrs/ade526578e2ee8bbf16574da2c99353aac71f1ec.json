{"sha": "ade526578e2ee8bbf16574da2c99353aac71f1ec", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWRlNTI2NTc4ZTJlZThiYmYxNjU3NGRhMmM5OTM1M2FhYzcxZjFlYw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-05-27T11:36:26Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-05-27T11:36:26Z"}, "message": "ChangeLog: Fix whitespace.\n\n\t* ChangeLog: Fix whitespace.\n\t* testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r159915", "tree": {"sha": "af06aeb4ffc2d238fcc9b9b6de66fa54334e78a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af06aeb4ffc2d238fcc9b9b6de66fa54334e78a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ade526578e2ee8bbf16574da2c99353aac71f1ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ade526578e2ee8bbf16574da2c99353aac71f1ec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ade526578e2ee8bbf16574da2c99353aac71f1ec", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ade526578e2ee8bbf16574da2c99353aac71f1ec/comments", "author": null, "committer": null, "parents": [{"sha": "447924ef3b084b400c2e1586d5fa404d625d6407", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/447924ef3b084b400c2e1586d5fa404d625d6407", "html_url": "https://github.com/Rust-GCC/gccrs/commit/447924ef3b084b400c2e1586d5fa404d625d6407"}], "stats": {"total": 80, "additions": 32, "deletions": 48}, "files": [{"sha": "52ab87ed67a13657f415e3e9b29dda517bc35da0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 42, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ade526578e2ee8bbf16574da2c99353aac71f1ec/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ade526578e2ee8bbf16574da2c99353aac71f1ec/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ade526578e2ee8bbf16574da2c99353aac71f1ec", "patch": "@@ -152,8 +152,7 @@\n \t* c-common.h (enum rid): Add RID_INT128.\n \t* c-cppbuiltin.c (c_cpp_builtins): Define __SIZEOF_INT128__\n \tif target supports 128-bit integer scalar.\n-\t* c-decl.c (declspecs_add_type): Handle new keyword\n-\t__int128.\n+\t* c-decl.c (declspecs_add_type): Handle new keyword __int128.\n \t(finish_declspecs): Likewise.\n \t* c-parser.c (c_token_starts_typename): Handle RID_INT128.\n \t(c_token_starts_declspecs): Likewise.\n@@ -168,7 +167,7 @@\n \t(build_common_tree_nodes_2): Likewise.\n \t* tree.h (enum integer_type_kind): Add itk_int128 and\n \titk_unsigned_int128.\n-\t(int128_integer_type_node): New define..\n+\t(int128_integer_type_node): New define.\n \t(int128_unsigned_type_node): New define.\n \t* doc/extend.texi: Add documentation about __int128 type.\n \n@@ -189,8 +188,7 @@\n \n 2010-05-26  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n \n-\t* ggc.h (ggc_min_expand_heuristic, ggc_min_heapsize_heuristic):\n-\tRemove.\n+\t* ggc.h (ggc_min_expand_heuristic, ggc_min_heapsize_heuristic): Remove.\n \n 2010-05-26  Richard Guenther  <rguenther@suse.de>\n \n@@ -406,8 +404,7 @@\n \there.  Pass context to internal_error callback.\n \t* diagnostic.h (struct diagnostic_context): Add context parameter\n \tto internal_error callback.\n-\t* plugin.c (warn_if_plugins, plugins_internal_error_function):\n-\tNew.\n+\t* plugin.c (warn_if_plugins, plugins_internal_error_function): New.\n \t* plugin.h (struct diagnostic_context): Declare.\n \t(warn_if_plugins, plugins_internal_error_function): Declare.\n \t* toplev.c (general_init): Set global_dc->internal_error.\n@@ -434,8 +431,7 @@\n \t* target.h (struct gcc_target): Add handle_ofast.\n \t* target-def.h (TARGET_HANDLE_OFAST): Add.\n \t(TARGET_INITIALIZER): Adjust.\n-\t* opts.c (decode_options): Handle -Ofast.  Enable\n-\t-ffast-math with it.\n+\t* opts.c (decode_options): Handle -Ofast.  Enable -ffast-math with it.\n \t* common.opt (Ofast): Add.\n \n 2010-05-25  Paolo Bonzini  <bonzini@gnu.org>\n@@ -455,8 +451,7 @@\n \n \t* dwarf2out.c (loc_descr_plus_const): When offset is negative, use\n \tDW_OP_minus with negated offset instead of DW_OP_plus.\n-\t(loc_list_from_tree): Don't test whether second operand is\n-\tINTEGER_CST.\n+\t(loc_list_from_tree): Don't test whether second operand is INTEGER_CST.\n \n 2010-05-25  Wei Guozhi  <carrot@google.com>\n \n@@ -488,18 +483,14 @@\n \n \t* diagnostic.c: Don't include flags.h.\n \t(pedantic_warning_kind, permissive_error_kind): Take diagnostic\n-\tcontext parameters.  Check flags in the context passed as a\n-\tparameter.\n+\tcontext parameters.  Check flags in the context passed as a parameter.\n \t(diagnostic_build_prefix): Add context parameter.  Check\n \tshow_column flag in context.\n-\t(diagnostic_action_after_output): Check fatal_errors flag in\n-\tcontext.\n-\t(diagnostic_report_current_module): Check show_column flag in\n-\tcontext.\n+\t(diagnostic_action_after_output): Check fatal_errors flag in context.\n+\t(diagnostic_report_current_module): Check show_column flag in context.\n \t(default_diagnostic_starter): Update call to\n \tdiagnostic_build_prefix.\n-\t(diagnostic_report_diagnostic): Pass context to\n-\tpedantic_warning_kind.\n+\t(diagnostic_report_diagnostic): Pass context to pedantic_warning_kind.\n \t(emit_diagnostic): Pass context to permissive_error_kind.\n \t(permerror): Pass context to permissive_error_kind.\n \t* diagnostic.h (struct diagnostic_context): Add show_column,\n@@ -528,7 +519,7 @@\n \tDECL_VISIBILITY_SPECIFIED, DECL_RESTRICTED_P.\n \t(emutls_finalize_control_var): New callback.\n \t(emutls_finish): Finalize emutls control variables.\n-\t* toplev.c (compile_file): Move the call to emutls_finish () \n+\t* toplev.c (compile_file): Move the call to emutls_finish ()\n \tbefore varpool_assemble_pending_decls ().\n \n 2010-05-24  Daniel Gutson  <dgutson@codesourcery.com>\n@@ -572,8 +563,7 @@\n \n 2010-05-23  Steven Bosscher  <steven@gcc.gnu.org>\n \n-\t* regs.h: Do not include obstack.h, basic-block.h.\n-\tInclude machmode.h.\n+\t* regs.h: Do not include obstack.h, basic-block.h.  Include machmode.h.\n \t* jump.c: Include basic-block.h.\n \t* profile.c: Likewise.\n \t* tree-profile.c: Likewise.\n@@ -758,10 +748,8 @@\n \t* tree.c: Include tree-diagnostic.h and tree-pretty-print.h.\n \t(free_lang_data): Use default_tree_diagnostic_starter.\n \t* c-pretty-print.c: Include tree-pretty-print.h.\n-\t* cfgexpand.c: Include tree-pretty-print.h and\n-\tgimple-pretty-print.h.\n-\t* cgraphunit.c: Include tree-pretty-print.h and\n-\tgimple-pretty-print.h.\n+\t* cfgexpand.c: Include tree-pretty-print.h and gimple-pretty-print.h.\n+\t* cgraphunit.c: Include tree-pretty-print.h and gimple-pretty-print.h.\n \t* dwarf2out.c: Include tree-pretty-print.h.\n \t* except.c: Include tree-pretty-print.h.\n \t* gimple-pretty-print.c: Include tree-pretty-print.h and\n@@ -771,8 +759,7 @@\n \tgimple-pretty-print.h.\n \t* ipa-cp.c: Include tree-pretty-print.h.\n \t* ipa-inline.c: Include gimple-pretty-print.h.\n-\t* ipa-prop.c: Include tree-pretty-print.h and\n-\tgimple-pretty-print.h.\n+\t* ipa-prop.c: Include tree-pretty-print.h and gimple-pretty-print.h.\n \t* ipa-pure-const.c: Include gimple-pretty-print.h.\n \t* ipa-struct-reorg.c: Include tree-pretty-print.h and\n \tgimple-pretty-print.h.\n@@ -783,8 +770,7 @@\n \t* tree-affine.c: Include tree-pretty-print.h.\n \t* tree-browser.c: Include tree-pretty-print.h.\n \t* tree-call-cdce.c: Include gimple-pretty-print.h.\n-\t* tree-cfg.c: Include tree-pretty-print.h and\n-\tgimple-pretty-print.h.\n+\t* tree-cfg.c: Include tree-pretty-print.h and gimple-pretty-print.h.\n \t* tree-chrec.c: Include tree-pretty-print.h.\n \t* tree-data-ref.c: Include tree-pretty-print.h and\n \tgimple-pretty-print.h.\n@@ -1020,8 +1006,7 @@\n \tconfig/score/score7.c, config/score/score.c, config/arm/arm.c,\n \tconfig/pa/pa.c, config/mips/mips.c, config/vax/vax.c,\n \tconfig/h8300/h8300.c, config/v850/v850.c, config/mmix/mmix.c,\n-\tconfig/bfin/bfin.c:\n-\tClean up redundant includes.\n+\tconfig/bfin/bfin.c: Clean up redundant includes.\n \t* Makefile.in: Update accordingly.\n \n 2010-05-21  Nathan Froyd  <froydnj@codesourcery.com>\n@@ -1052,7 +1037,7 @@\n 2009-09-14  Vladimir Makarov <vmakarov@redhat.com>\n \n \t* ira.c (ira_non_ordered_class_hard_regs): Define.\n-        (setup_class_hard_regs): Initialize ira_non_ordered_class_hard_regs.\n+\t(setup_class_hard_regs): Initialize ira_non_ordered_class_hard_regs.\n \t* ira-int.h (ira_non_ordered_class_hard_regs): Declare.\n \t* ira-costs.c (ira_tune_allocno_costs_and_cover_classes): Increase\n \tcost of unaligned hard regs when allocating multi-reg pseudos.\n@@ -1076,8 +1061,7 @@\n \n 2010-05-20  Segher Boessenkool  <segher@kernel.crashing.org>\n \n-\t* ipa-prop.c (compute_complex_ancestor_jump_func): Bail\n-\tout if !cond.\n+\t* ipa-prop.c (compute_complex_ancestor_jump_func): Bail out if !cond.\n \n 2010-05-20  Uros Bizjak  <ubizjak@gmail.com>\n \n@@ -1159,7 +1143,7 @@\n \t* langhooks.h (struct lang_hooks): Add new field deep_unsharing.\n \t* langhooks-def.h (LANG_HOOKS_DEEP_UNSHARING): New macro.\n \t(LANG_HOOKS_INITIALIZER): Add LANG_HOOKS_DEEP_UNSHARING.\n-\t* gimplify.c: (mostly_copy_tree_r): Copy trees under SAVE_EXPR and\n+\t* gimplify.c (mostly_copy_tree_r): Copy trees under SAVE_EXPR and\n \tTARGET_EXPR nodes, but only once, if instructed to do so.  Do not\n \tpropagate the 'data' argument to copy_tree_r.\n \t(copy_if_shared_r): Remove bogus ATTRIBUTE_UNUSED marker.\n@@ -1177,7 +1161,7 @@\n \t* hooks.c: Likewise.\n \t* target-def.h (TARGET_FOLD_BUILTIN): Define to\n \thook_tree_tree_int_treep_bool_null.\n-\t* target.h: (struct gcc_target): Update signature of fold_builtin\n+\t* target.h (struct gcc_target): Update signature of fold_builtin\n \tfield.\n \t* doc/tm.texi (TARGET_FOLD_BUILTIN): Update description and signature.\n \t* builtins.c (fold_call_expr): Pass call_expr_nargs and CALL_EXPR_ARGP\n@@ -2172,9 +2156,9 @@\n \t* targhooks.h (default_mode_dependent_address_p): Declare function.\n \t* doc/tm.texi (TARGET_MODE_DEPENDENT_ADDRESS_P): New.\n \t(GO_IF_MODE_DEPENDENT_ADDRESS): Update.\n-\t* recog.c: (mode_dependent_address_p): Call mode_dependent_address_p\n+\t* recog.c (mode_dependent_address_p): Call mode_dependent_address_p\n \ttarget hook. Change return type to bool.\n-\t* recog.h: (mode_dependent_address_p): Change return type to bool.\n+\t* recog.h (mode_dependent_address_p): Change return type to bool.\n \n 2010-05-12  Kazu Hirata  <kazu@codesourcery.com>\n \t    Nathan Froyd  <froydnj@codesourcery.com>\n@@ -2931,7 +2915,7 @@\n \t(input_refs): New.\n \t(input_cgraph): Call input_refs.\n \t* lto-section-in.c (lto_section_name): Add refs.\n-\t* Makefile.in: (cgraph.h): Include ipa-ref.h and ipa-ref-inline.h\n+\t* Makefile.in (cgraph.h): Include ipa-ref.h and ipa-ref-inline.h\n \t(ipa-ref.o): New file.\n \t* varpool.c (varpool_node): Clear ipa ref list.\n \t(varpool_remove_node): Remove references.\n@@ -5058,7 +5042,7 @@\n \t(SUBTARGET_FRAME_POINTER_REQUIRED): Define.\n \t(ACCUMULATE_OUTGOING_ARGS): Define.\n \t* doc/invoke.texi (maccumulate-outgoing-args): Document for SH.\n-\t* gcc/config/sh/sh.opt: (maccumulate-outgoing-args): New option.\n+\t* gcc/config/sh/sh.opt (maccumulate-outgoing-args): New option.\n \n 2010-04-15  Kaz Kojima  <kkojima@gcc.gnu.org>\n \n@@ -5912,7 +5896,7 @@\n \tPR bootstrap/43684\n \t* varasm.c (default_assemble_visibility): Wrap vars that are\n \tset, but unused, by targets without GAS.\n-\t* config/rs6000/rs6000.c: (paired_emit_vector_compare):\n+\t* config/rs6000/rs6000.c (paired_emit_vector_compare):\n \tRemove set, but unused, vars.\n \t(rs6000_legitimize_tls_address): Likewise.\n \t(altivec_expand_dst_builtin): Likewise."}, {"sha": "77efe9c0c8962e4f1b3d85c33293c78a06543e74", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ade526578e2ee8bbf16574da2c99353aac71f1ec/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ade526578e2ee8bbf16574da2c99353aac71f1ec/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ade526578e2ee8bbf16574da2c99353aac71f1ec", "patch": "@@ -129,7 +129,7 @@\n \t* gcc.target/arm/neon/polytypes.c,\n \tgcc.target/arm/neon-vmla-1.c, gcc.target/arm/neon-vmls-1.c,\n \tgcc.target/arm/neon-cond-1.c, gcc.target/arm/neon/vfp-shift-a2t2.c,\n-\tgcc.target/arm/neon-thumb2-move.c, gcc.dg/torture/arm-fp16-ops-8.c, \n+\tgcc.target/arm/neon-thumb2-move.c, gcc.dg/torture/arm-fp16-ops-8.c,\n \tgcc.dg/torture/arm-fp16-ops-7.c, g++.dg/ext/arm-fp16/arm-fp16-ops-7.C,\n \tg++.dg/ext/arm-fp16/arm-fp16-ops-8.C, g++.dg/abi/mangle-neon.C: Use\n \tdg-add-options arm_neon.\n@@ -219,9 +219,9 @@\n \n 2010-05-20  Daniel Franke  <franke.daniel@gmail.com>\n \n-        PR fortran/38407\n-        * warn_unused_dummy_argument_1.f90: New.\n-        * warn_unused_dummy_argument_2.f90: New.\n+\tPR fortran/38407\n+\t* warn_unused_dummy_argument_1.f90: New.\n+\t* warn_unused_dummy_argument_2.f90: New.\n \n 2010-05-20  Paolo Carlini  <paolo.carlini@oracle.com>\n \n@@ -240,7 +240,7 @@\n \t* gcc.dg/tree-ssa/prefetch-6.c: Add\n \t--param min-insn-to-prefetch-ratio=6.\n \t* gcc.dg/tree-ssa/prefetch-7.c: Remove --param max-unrolled-insns=1 to\n-        allow unrolling, and adjust the movnti count.\n+\tallow unrolling, and adjust the movnti count.\n \n 2010-05-20  Jan Hubicka  <jh@suse.cz>\n \n@@ -317,7 +317,7 @@\n \t* gcc.target/i386/3dnowA-2.c: Likewise.\n \t* gcc.target/i386/pr42549.c: Likewise.\n \n-\t* gcc.target/i386/sse3-lddqu.c: Use dg-require-effective-target sse3. \n+\t* gcc.target/i386/sse3-lddqu.c: Use dg-require-effective-target sse3.\n \t* gcc.target/i386/sse3-addsubpd.c: Likewise.\n \t* gcc.target/i386/sse3-addsubps.c: Likewise.\n \t* gcc.target/i386/sse3-haddpd.c: Likewise."}]}