{"sha": "a47a0ed53b1068e5100befb6bb6b7d5af211a382", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ3YTBlZDUzYjEwNjhlNTEwMGJlZmI2YmI2YjdkNWFmMjExYTM4Mg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-18T19:25:32Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-04-18T19:25:32Z"}, "message": "(yylex): If FP value is NaN, use value of zero.\n\nFrom-SVN: r7071", "tree": {"sha": "f8fb9b4a3aed4311f41914b21a118c7b381e6edb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8fb9b4a3aed4311f41914b21a118c7b381e6edb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a47a0ed53b1068e5100befb6bb6b7d5af211a382", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a47a0ed53b1068e5100befb6bb6b7d5af211a382", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a47a0ed53b1068e5100befb6bb6b7d5af211a382", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a47a0ed53b1068e5100befb6bb6b7d5af211a382/comments", "author": null, "committer": null, "parents": [{"sha": "28612f9eb6f0aa1a5e441a1c42bc261a08c3d7e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/28612f9eb6f0aa1a5e441a1c42bc261a08c3d7e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/28612f9eb6f0aa1a5e441a1c42bc261a08c3d7e2"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "ad34e601327b7c70d2188c65fc940715f0e048f7", "filename": "gcc/c-lex.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a47a0ed53b1068e5100befb6bb6b7d5af211a382/gcc%2Fc-lex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a47a0ed53b1068e5100befb6bb6b7d5af211a382/gcc%2Fc-lex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-lex.c?ref=a47a0ed53b1068e5100befb6bb6b7d5af211a382", "patch": "@@ -1407,6 +1407,12 @@ yylex ()\n \t    if (garbage_chars > 0)\n \t      error (\"garbage at end of number\");\n \n+\t    /* If the result is not a number, assume it must have been\n+\t       due to some error message above, so silently convert\n+\t       it to a zero.  */\n+\t    if (REAL_VALUE_ISNAN (value))\n+\t      value = dconst0;\n+\n \t    /* Create a node with determined type and value.  */\n \t    if (imag)\n \t      yylval.ttype = build_complex (convert (type, integer_zero_node),"}]}