{"sha": "d391688a17b00a0a7ec88b986fd84749266a39c7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDM5MTY4OGExN2IwMGEwYTdlYzg4Yjk4NmZkODQ3NDkyNjZhMzljNw==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-02-27T23:19:49Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1994-02-27T23:19:49Z"}, "message": "(expand_call): Set nregs to -1 for BLKmode parameter,\n\nthen before move_block_to_reg call set it to the type size.\n\nFrom-SVN: r6660", "tree": {"sha": "848942c6dfeaa7c8229edca4155bde0fd6bc02da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/848942c6dfeaa7c8229edca4155bde0fd6bc02da"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d391688a17b00a0a7ec88b986fd84749266a39c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d391688a17b00a0a7ec88b986fd84749266a39c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d391688a17b00a0a7ec88b986fd84749266a39c7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d391688a17b00a0a7ec88b986fd84749266a39c7/comments", "author": null, "committer": null, "parents": [{"sha": "d58b6986f4e552292ab24b8ac2f0d66b0cea083f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d58b6986f4e552292ab24b8ac2f0d66b0cea083f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d58b6986f4e552292ab24b8ac2f0d66b0cea083f"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "fd32bebd32fc989d040f8e121eea3a7c4542ee80", "filename": "gcc/calls.c", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d391688a17b00a0a7ec88b986fd84749266a39c7/gcc%2Fcalls.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d391688a17b00a0a7ec88b986fd84749266a39c7/gcc%2Fcalls.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcalls.c?ref=d391688a17b00a0a7ec88b986fd84749266a39c7", "patch": "@@ -1787,8 +1787,7 @@ expand_call (exp, target, ignore)\n \t     we just use a normal move insn.  */\n \t  nregs = (partial ? partial\n \t\t   : (TYPE_MODE (TREE_TYPE (args[i].tree_value)) == BLKmode\n-\t\t      ? ((int_size_in_bytes (TREE_TYPE (args[i].tree_value))\n-\t\t\t  + (UNITS_PER_WORD - 1)) / UNITS_PER_WORD)\n+\t\t      ? -1\n \t\t      : 0));\n \n \t  /* If simple case, just do move.  If normal partial, store_one_arg\n@@ -1809,9 +1808,16 @@ expand_call (exp, target, ignore)\n #endif\n \n \t  else if (args[i].partial == 0 || args[i].pass_on_stack)\n-\t    move_block_to_reg (REGNO (reg),\n-\t\t\t       validize_mem (args[i].value), nregs,\n-\t\t\t       args[i].mode);\n+\t    {\n+\t      /* This value might be zero, if the argument is a zero size\n+\t\t structure with no fields, so we can't use it to set nregs\n+\t\t above.  */\n+\t      nregs = ((int_size_in_bytes (TREE_TYPE (args[i].tree_value))\n+\t\t\t+ (UNITS_PER_WORD - 1)) / UNITS_PER_WORD);\n+\t      move_block_to_reg (REGNO (reg),\n+\t\t\t\t validize_mem (args[i].value), nregs,\n+\t\t\t\t args[i].mode);\n+\t    }\n \t\n \t  push_to_sequence (use_insns);\n \t  if (nregs == 0)"}]}