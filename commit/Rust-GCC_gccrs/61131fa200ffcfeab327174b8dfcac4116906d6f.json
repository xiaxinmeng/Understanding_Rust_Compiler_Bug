{"sha": "61131fa200ffcfeab327174b8dfcac4116906d6f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjExMzFmYTIwMGZmY2ZlYWIzMjcxNzRiOGRmY2FjNDExNjkwNmQ2Zg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-17T04:15:55Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-07-17T04:15:55Z"}, "message": "(struct tree_block):  New struct type definition added.\n\n(BLOCK_VARS, BLOCK_TYPE_TAGS, BLOCK_SUBBLOCKS, BLOCK_HANDLER_BLOCK):\nChanged to reference fields of the new `struct tree_block' type.\n(BLOCK_ABSTRACT_ORIGIN, BLOCK_ABSTRACT):  Definitions added.\n(union tree_node):  Added `struct tree_block' as a new variant.\n\nFrom-SVN: r1602", "tree": {"sha": "8c82feb6cda9f786b1122aa680ebc5983b16cc66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c82feb6cda9f786b1122aa680ebc5983b16cc66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/61131fa200ffcfeab327174b8dfcac4116906d6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61131fa200ffcfeab327174b8dfcac4116906d6f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/61131fa200ffcfeab327174b8dfcac4116906d6f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/61131fa200ffcfeab327174b8dfcac4116906d6f/comments", "author": null, "committer": null, "parents": [{"sha": "ece0ca60b808b326b3163eed25d784801a38e086", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ece0ca60b808b326b3163eed25d784801a38e086", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ece0ca60b808b326b3163eed25d784801a38e086"}], "stats": {"total": 41, "additions": 29, "deletions": 12}, "files": [{"sha": "d8dc82aeeb9992f34dcba5558d4d77957ccad4d0", "filename": "gcc/tree.h", "status": "modified", "additions": 29, "deletions": 12, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/61131fa200ffcfeab327174b8dfcac4116906d6f/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/61131fa200ffcfeab327174b8dfcac4116906d6f/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=61131fa200ffcfeab327174b8dfcac4116906d6f", "patch": "@@ -464,28 +464,44 @@ struct tree_vec\n /* In a CONSTRUCTOR node.  */\n #define CONSTRUCTOR_ELTS(NODE) TREE_OPERAND (NODE, 1)\n \n+/* In ordinary expression nodes.  */\n+#define TREE_OPERAND(NODE, I) ((NODE)->exp.operands[I])\n+#define TREE_COMPLEXITY(NODE) ((NODE)->exp.complexity)\n+\n+struct tree_exp\n+{\n+  char common[sizeof (struct tree_common)];\n+  int complexity;\n+  union tree_node *operands[1];\n+};\n+\f\n /* In a BLOCK node.  */\n-#define BLOCK_VARS(NODE) ((NODE)->exp.operands[0])\n-#define BLOCK_TYPE_TAGS(NODE) ((NODE)->exp.operands[1])\n-#define BLOCK_SUBBLOCKS(NODE) ((NODE)->exp.operands[2])\n-#define BLOCK_SUPERCONTEXT(NODE) ((NODE)->exp.operands[3])\n+#define BLOCK_VARS(NODE) ((NODE)->block.vars)\n+#define BLOCK_TYPE_TAGS(NODE) ((NODE)->block.type_tags)\n+#define BLOCK_SUBBLOCKS(NODE) ((NODE)->block.subblocks)\n+#define BLOCK_SUPERCONTEXT(NODE) ((NODE)->block.supercontext)\n /* Note: when changing this, make sure to find the places\n    that use chainon or nreverse.  */\n #define BLOCK_CHAIN(NODE) TREE_CHAIN (NODE)\n+#define BLOCK_ABSTRACT_ORIGIN(NODE) ((NODE)->block.abstract_origin)\n+#define BLOCK_ABSTRACT(NODE) ((NODE)->block.abstract_flag)\n \n /* Nonzero means that this block is prepared to handle exceptions\n    listed in the BLOCK_VARS slot.  */\n-#define BLOCK_HANDLER_BLOCK(NODE) TREE_PROTECTED(NODE)\n+#define BLOCK_HANDLER_BLOCK(NODE) ((NODE)->block.handler_block_flag)\n \n-/* In ordinary expression nodes.  */\n-#define TREE_OPERAND(NODE, I) ((NODE)->exp.operands[I])\n-#define TREE_COMPLEXITY(NODE) ((NODE)->exp.complexity)\n-\n-struct tree_exp\n+struct tree_block\n {\n   char common[sizeof (struct tree_common)];\n-  int complexity;\n-  union tree_node *operands[1];\n+\n+  unsigned handler_block_flag : 1;\n+  unsigned abstract_flag : 1;\n+\n+  union tree_node *vars;\n+  union tree_node *type_tags;\n+  union tree_node *subblocks;\n+  union tree_node *supercontext;\n+  union tree_node *abstract_origin;\n };\n \f\n /* Define fields and accessors for nodes representing data types.  */\n@@ -898,6 +914,7 @@ union tree_node\n   struct tree_list list;\n   struct tree_vec vec;\n   struct tree_exp exp;\n+  struct tree_block block;\n  };\n \n /* Format for global names of constructor and destructor functions.  */"}]}