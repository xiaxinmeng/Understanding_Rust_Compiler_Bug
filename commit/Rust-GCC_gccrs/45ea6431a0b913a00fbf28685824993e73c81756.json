{"sha": "45ea6431a0b913a00fbf28685824993e73c81756", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDVlYTY0MzFhMGI5MTNhMDBmYmYyODY4NTgyNDk5M2U3M2M4MTc1Ng==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-02-19T11:06:26Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-02-19T11:06:26Z"}, "message": "hooks.c (hook_void_tree_int): Remove.\n\n\t* hooks.c (hook_void_tree_int): Remove.\n\t(hook_void_constcharptr): Likewise.\n\t(hook_int_void_0): Likewise.\n\t* hooks.h: Remove the prototypes for the above three\n\tfunctions.\n\t* targhooks.c (hook_bool_machine_mode_true): Remove.\n\t* targhooks.h: Remove the prototype for\n\thook_bool_machine_mode_true.\n\nFrom-SVN: r78093", "tree": {"sha": "ee9485e15b966266d2907c08b8e4331026f82493", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee9485e15b966266d2907c08b8e4331026f82493"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45ea6431a0b913a00fbf28685824993e73c81756", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45ea6431a0b913a00fbf28685824993e73c81756", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45ea6431a0b913a00fbf28685824993e73c81756", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45ea6431a0b913a00fbf28685824993e73c81756/comments", "author": null, "committer": null, "parents": [{"sha": "c59102b4ae4423568d8eaba2e7d8c665c5aeb5af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c59102b4ae4423568d8eaba2e7d8c665c5aeb5af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c59102b4ae4423568d8eaba2e7d8c665c5aeb5af"}], "stats": {"total": 41, "additions": 11, "deletions": 30}, "files": [{"sha": "3baa40e342bcfe9636153e3b6d9cbd192c9f8329", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ea6431a0b913a00fbf28685824993e73c81756/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ea6431a0b913a00fbf28685824993e73c81756/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45ea6431a0b913a00fbf28685824993e73c81756", "patch": "@@ -1,3 +1,14 @@\n+2004-02-19  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* hooks.c (hook_void_tree_int): Remove.\n+\t(hook_void_constcharptr): Likewise.\n+\t(hook_int_void_0): Likewise.\n+\t* hooks.h: Remove the prototypes for the above three\n+\tfunctions.\n+\t* targhooks.c (hook_bool_machine_mode_true): Remove.\n+\t* targhooks.h: Remove the prototype for\n+\thook_bool_machine_mode_true.\n+\n 2004-02-19  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* emit-rtl.c (subreg_realpart_p): Remove."}, {"sha": "090a45aba290e83a98f0c27bfbaa6d21df6b870f", "filename": "gcc/hooks.c", "status": "modified", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ea6431a0b913a00fbf28685824993e73c81756/gcc%2Fhooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ea6431a0b913a00fbf28685824993e73c81756/gcc%2Fhooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhooks.c?ref=45ea6431a0b913a00fbf28685824993e73c81756", "patch": "@@ -55,24 +55,12 @@ hook_bool_bool_false (bool a ATTRIBUTE_UNUSED)\n   return false;\n }\n \n-\n-/* Generic hook that takes (tree, int) and does nothing.  */\n-void\n-hook_void_tree_int (tree a ATTRIBUTE_UNUSED, int b ATTRIBUTE_UNUSED)\n-{\n-}\n-\n /* Generic hook that takes (FILE *, const char *) and does nothing.  */\n void\n hook_void_FILEptr_constcharptr (FILE *a ATTRIBUTE_UNUSED, const char *b ATTRIBUTE_UNUSED)\n {\n }\n \n-void\n-hook_void_constcharptr (const char *a ATTRIBUTE_UNUSED)\n-{\n-}\n-\n /* Used for the TARGET_ASM_CAN_OUTPUT_MI_THUNK hook.  */\n bool\n hook_bool_tree_hwi_hwi_tree_false (tree a ATTRIBUTE_UNUSED,\n@@ -121,12 +109,6 @@ hook_int_rtx_0 (rtx a ATTRIBUTE_UNUSED)\n   return 0;\n }\n \n-int\n-hook_int_void_0 (void)\n-{\n-  return 0;\n-}\n-\n int\n hook_int_size_t_constcharptr_int_0 (size_t a ATTRIBUTE_UNUSED,\n \t\t\t\t    const char *b ATTRIBUTE_UNUSED,"}, {"sha": "60355f5f169326938aa69f698b7cee4799395a22", "filename": "gcc/hooks.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ea6431a0b913a00fbf28685824993e73c81756/gcc%2Fhooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ea6431a0b913a00fbf28685824993e73c81756/gcc%2Fhooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fhooks.h?ref=45ea6431a0b913a00fbf28685824993e73c81756", "patch": "@@ -35,16 +35,13 @@ extern bool hook_bool_uintp_uintp_false (unsigned int *, unsigned int *);\n extern bool hook_bool_rtx_int_int_intp_false (rtx, int, int, int *);\n extern bool hook_bool_constcharptr_size_t_false (const char *, size_t);\n \n-extern void hook_void_tree_int (tree, int);\n extern void hook_void_void (void);\n extern void hook_void_FILEptr_constcharptr (FILE *, const char *);\n extern void hook_void_tree (tree);\n extern void hook_void_tree_treeptr (tree, tree *);\n-extern void hook_void_constcharptr (const char *);\n \n extern int hook_int_tree_tree_1 (tree, tree);\n extern int hook_int_rtx_0 (rtx);\n-extern int hook_int_void_0 (void);\n extern int hook_int_size_t_constcharptr_int_0 (size_t, const char *, int);\n extern int hook_int_void_no_regs (void);\n "}, {"sha": "03735a64edaf480831d4282a2046cbd59e082b24", "filename": "gcc/targhooks.c", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ea6431a0b913a00fbf28685824993e73c81756/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ea6431a0b913a00fbf28685824993e73c81756/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=45ea6431a0b913a00fbf28685824993e73c81756", "patch": "@@ -126,11 +126,3 @@ hook_bool_CUMULATIVE_ARGS_true (CUMULATIVE_ARGS * a ATTRIBUTE_UNUSED)\n {\n   return true;\n }\n-\n-/* Generic hook that takes a machine mode and returns true.  */\n-\n-bool\n-hook_bool_machine_mode_true (enum machine_mode a ATTRIBUTE_UNUSED)\n-{\n-  return true;\n-}"}, {"sha": "f755b0f19b543756a8bbbb10ba46536c729ae4d7", "filename": "gcc/targhooks.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45ea6431a0b913a00fbf28685824993e73c81756/gcc%2Ftarghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45ea6431a0b913a00fbf28685824993e73c81756/gcc%2Ftarghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.h?ref=45ea6431a0b913a00fbf28685824993e73c81756", "patch": "@@ -31,4 +31,3 @@ extern bool hook_bool_CUMULATIVE_ARGS_false (CUMULATIVE_ARGS *);\n extern bool default_pretend_outgoing_varargs_named (CUMULATIVE_ARGS *);\n \n extern bool hook_bool_CUMULATIVE_ARGS_true (CUMULATIVE_ARGS *);\n-extern bool hook_bool_machine_mode_true (enum machine_mode);"}]}