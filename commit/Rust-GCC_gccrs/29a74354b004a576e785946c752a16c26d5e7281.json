{"sha": "29a74354b004a576e785946c752a16c26d5e7281", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjlhNzQzNTRiMDA0YTU3NmU3ODU5NDZjNzUyYTE2YzI2ZDVlNzI4MQ==", "commit": {"author": {"name": "Ulrich Weigand", "email": "uweigand@de.ibm.com", "date": "2004-11-06T19:57:41Z"}, "committer": {"name": "Ulrich Weigand", "email": "uweigand@gcc.gnu.org", "date": "2004-11-06T19:57:41Z"}, "message": "2064.md (\"z_int\", \"z_agen\"): Ensure the condition matches no insns already matched by other reservations.\n\n\t* config/s390/2064.md (\"z_int\", \"z_agen\"): Ensure the condition\n\tmatches no insns already matched by other reservations.\n\t* config/s390/2084.md (\"x_int\", \"x_agen\"): Ensure the condition\n\tmatches no insns already matched by other reservations.\n\t(\"x_ss\"): Remove, replace by ...\n\t(\"x_cs\"): ... this new reservation.  Check type instead of op_type.\n\tUpdate bypasses to use x_cs instead of x_ss.\n\t(\"x_nn\"): Remove, replace by ...\n\t(\"x_other\"): ... this new reservation.  Check type instead of op_type.\n\tAdd x_other and x_branch to bypasses.\n\t(\"x_vs\"): New reservation.\n\t* config/s390/s390.md (attribute \"type\"): Default according to op_type.\n\t(\"*execute\"): Set type to \"cs\".\n\nFrom-SVN: r90190", "tree": {"sha": "4f831f5fa5c96b2383994ecb79b41ccb31af2dbf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f831f5fa5c96b2383994ecb79b41ccb31af2dbf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29a74354b004a576e785946c752a16c26d5e7281", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29a74354b004a576e785946c752a16c26d5e7281", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29a74354b004a576e785946c752a16c26d5e7281", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29a74354b004a576e785946c752a16c26d5e7281/comments", "author": null, "committer": null, "parents": [{"sha": "a8f48325ac79f3237e0cb79613b8db3057cb0bba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8f48325ac79f3237e0cb79613b8db3057cb0bba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8f48325ac79f3237e0cb79613b8db3057cb0bba"}], "stats": {"total": 131, "additions": 76, "deletions": 55}, "files": [{"sha": "c9f797b9d9e0009fcf5e11fdb9c0455d621e5022", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a74354b004a576e785946c752a16c26d5e7281/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a74354b004a576e785946c752a16c26d5e7281/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=29a74354b004a576e785946c752a16c26d5e7281", "patch": "@@ -1,3 +1,19 @@\n+2004-11-06  Ulrich Weigand  <uweigand@de.ibm.com>\n+\n+\t* config/s390/2064.md (\"z_int\", \"z_agen\"): Ensure the condition\n+\tmatches no insns already matched by other reservations.\n+\t* config/s390/2084.md (\"x_int\", \"x_agen\"): Ensure the condition\n+\tmatches no insns already matched by other reservations.\n+\t(\"x_ss\"): Remove, replace by ...\n+\t(\"x_cs\"): ... this new reservation.  Check type instead of op_type.\n+\tUpdate bypasses to use x_cs instead of x_ss.\n+\t(\"x_nn\"): Remove, replace by ...\n+\t(\"x_other\"): ... this new reservation.  Check type instead of op_type.\n+\tAdd x_other and x_branch to bypasses.\n+\t(\"x_vs\"): New reservation.\n+\t* config/s390/s390.md (attribute \"type\"): Default according to op_type.\n+\t(\"*execute\"): Set type to \"cs\".\n+\n 2004-11-06  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* fold-const.c (non_lvalue): Don't construct NON_LVALUE_EXPR"}, {"sha": "211cd024d01ce15a6f53d24584e93c08cb7c000d", "filename": "gcc/config/s390/2064.md", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a74354b004a576e785946c752a16c26d5e7281/gcc%2Fconfig%2Fs390%2F2064.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a74354b004a576e785946c752a16c26d5e7281/gcc%2Fconfig%2Fs390%2F2064.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2F2064.md?ref=29a74354b004a576e785946c752a16c26d5e7281", "patch": "@@ -72,22 +72,20 @@\n        (eq_attr \"type\" \"jsr\"))\n   \"z_e1*5,z_wr\")\n \n-;\n-; Insn still not mentioned are check for\n-; the usage of the agen unit \n-;\n+;; For everything else we check the atype flag.\n \n (define_insn_reservation \"z_int\" 1\n   (and (eq_attr \"cpu\" \"z900,g5,g6\")\n-       (eq_attr \"atype\" \"reg\"))\n+       (and (not (eq_attr \"type\" \"la,larl,load,store,jsr\"))\n+            (eq_attr \"atype\" \"reg\")))\n   \"z_e1,z_wr\")\n \n (define_insn_reservation \"z_agen\" 1\n   (and (eq_attr \"cpu\" \"z900,g5,g6\")\n-       (eq_attr \"atype\" \"agen\"))\n+       (and (not (eq_attr \"type\" \"la,larl,load,store,jsr\"))\n+            (eq_attr \"atype\" \"agen\")))\n   \"z_e1,z_wr\")\n \n-\n ;;\n ;; s390_agen_dep_p returns 1, if a register is set in the \n ;; first insn and used in the dependent insn to form a address."}, {"sha": "c07f4cf9ffd3f6be6addeedc33c21688517ffb68", "filename": "gcc/config/s390/2084.md", "status": "modified", "additions": 24, "deletions": 22, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a74354b004a576e785946c752a16c26d5e7281/gcc%2Fconfig%2Fs390%2F2084.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a74354b004a576e785946c752a16c26d5e7281/gcc%2Fconfig%2Fs390%2F2084.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2F2084.md?ref=29a74354b004a576e785946c752a16c26d5e7281", "patch": "@@ -61,6 +61,18 @@\n ;; Simple insns\n ;;\n \n+(define_insn_reservation \"x_int\" 1\n+  (and (eq_attr \"cpu\" \"z990\")\n+       (and (eq_attr \"type\" \"integer\")\n+            (eq_attr \"atype\" \"reg\")))\n+  \"x-e1-st,x-wr-st\")\n+\n+(define_insn_reservation \"x_agen\" 1\n+  (and (eq_attr \"cpu\" \"z990\")\n+       (and (eq_attr \"type\" \"integer\")\n+            (eq_attr \"atype\" \"agen\")))\n+  \"x-e1-st,x-wr-st\")\n+\n (define_insn_reservation \"x_lr\" 1\n   (and (eq_attr \"cpu\" \"z990\")\n        (eq_attr \"type\" \"lr\"))\n@@ -100,11 +112,16 @@\n ;; Multicycle insns\n ;;\n \n-(define_insn_reservation \"x_ss\" 1 \n+(define_insn_reservation \"x_cs\" 1 \n   (and (eq_attr \"cpu\" \"z990\")\n-       (eq_attr \"op_type\" \"SS\"))\n+       (eq_attr \"type\" \"cs\"))\n   \"x-e1-np,x-wr-np\") \n \n+(define_insn_reservation \"x_vs\" 1 \n+  (and (eq_attr \"cpu\" \"z990\")\n+       (eq_attr \"type\" \"vs\"))\n+  \"x-e1-np*10,x-wr-np\") \n+\n (define_insn_reservation \"x_stm\" 1 \n   (and (eq_attr \"cpu\" \"z990\")\n        (eq_attr \"type\" \"stm\"))\n@@ -115,9 +132,9 @@\n        (eq_attr \"type\" \"lm\"))\n   \"x-e1-np*10,x-wr-np\") \n \n-(define_insn_reservation \"x_nn\" 1 \n+(define_insn_reservation \"x_other\" 1 \n   (and (eq_attr \"cpu\" \"z990\")\n-       (eq_attr \"op_type\" \"NN\"))\n+       (eq_attr \"type\" \"other\"))\n   \"x-e1-np,x-wr-np\") \n \n ;;\n@@ -182,21 +199,6 @@\n \t         \n (define_bypass 1 \"x_floads\" \"x_fsimps,x_fstores,x_floads\")\n \n-;;\n-;; Insns still not mentioned are checked for\n-;; the usage of the agen unit \n-;;\n-\n-(define_insn_reservation \"x_int\" 1\n-  (and (eq_attr \"cpu\" \"z990\")\n-       (eq_attr \"atype\" \"reg\"))\n-  \"x-e1-st,x-wr-st\") \n-\n-(define_insn_reservation \"x_agen\" 1\n-  (and (eq_attr \"cpu\" \"z990\")\n-       (eq_attr \"atype\" \"agen\"))\n-  \"x-e1-st+x-mem,x-wr-st\") \n-\n ;;\n ;; s390_agen_dep_p returns 1, if a register is set in the \n ;; first insn and used in the dependent insn to form a address.\n@@ -208,7 +210,7 @@\n ;; \n \n (define_bypass 5 \"x_int,x_agen,x_lr\" \n-                 \"x_agen,x_la,x_call,x_load,x_store,x_ss,x_stm,x_lm\"\n+                 \"x_agen,x_la,x_branch,x_call,x_load,x_store,x_cs,x_stm,x_lm,x_other\"\n \t         \"s390_agen_dep_p\")\n \n (define_bypass 9 \"x_int,x_agen,x_lr\" \n@@ -221,7 +223,7 @@\n ;;\n \n (define_bypass 4 \"x_load\"    \n-                 \"x_agen,x_la,x_call,x_load,x_store,x_ss,x_stm,x_lm\"\n+                 \"x_agen,x_la,x_branch,x_call,x_load,x_store,x_cs,x_stm,x_lm,x_other\"\n \t         \"s390_agen_dep_p\")\n \n (define_bypass 5 \"x_load\"\n@@ -235,7 +237,7 @@\n ;;\n \n (define_bypass 3 \"x_larl,x_la\" \n-                 \"x_agen,x_la,x_call,x_load,x_store,x_ss,x_stm,x_lm\"\n+                 \"x_agen,x_la,x_branch,x_call,x_load,x_store,x_cs,x_stm,x_lm,x_other\"\n \t         \"s390_agen_dep_p\")\n \n (define_bypass 5 \"x_larl, x_la\""}, {"sha": "ed19615514b5a5e25b2e90f0a156c043166b7b41", "filename": "gcc/config/s390/s390.md", "status": "modified", "additions": 31, "deletions": 26, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29a74354b004a576e785946c752a16c26d5e7281/gcc%2Fconfig%2Fs390%2Fs390.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29a74354b004a576e785946c752a16c26d5e7281/gcc%2Fconfig%2Fs390%2Fs390.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fs390%2Fs390.md?ref=29a74354b004a576e785946c752a16c26d5e7281", "patch": "@@ -143,16 +143,14 @@\n   ])\n \n \n-;; Processor type.  This attribute must exactly match the processor_type\n-;; enumeration in s390.h.  The current machine description does not\n-;; distinguish between g5 and g6, but there are differences between the two\n-;; CPUs could in theory be modeled.\n+;; Instruction operand type as used in the Principles of Operation.\n+;; Used to determine defaults for length and other attribute values.\n \n-(define_attr \"cpu\" \"g5,g6,z900,z990\"\n-  (const (symbol_ref \"s390_tune\")))\n+(define_attr \"op_type\"\n+  \"NN,E,RR,RRE,RX,RS,RSI,RI,SI,S,SS,SSE,RXE,RSE,RIL,RIE,RXY,RSY,SIY\"\n+  (const_string \"RX\"))\n \n-;; Define an insn type attribute.  This is used in function unit delay\n-;; computations.\n+;; Instruction type attribute used for scheduling.\n \n (define_attr \"type\" \"none,integer,load,lr,la,larl,lm,stm,\n \t             cs,vs,store,imul,idiv,\n@@ -161,17 +159,13 @@\n \t\t     fmuld,fmuls,fdivd,fdivs,\n \t\t     ftoi,itof,fsqrtd,fsqrts,\n                      other\"\n-  (const_string \"integer\"))\n+  (cond [(eq_attr \"op_type\" \"NN\")  (const_string \"other\")\n+         (eq_attr \"op_type\" \"SS\")  (const_string \"cs\")]\n+    (const_string \"integer\")))\n \n-;; Operand type. Used to default length attribute values\n-\n-(define_attr \"op_type\"\n-  \"NN,E,RR,RRE,RX,RS,RSI,RI,SI,S,SS,SSE,RXE,RSE,RIL,RIE,RXY,RSY,SIY\"\n-  (const_string \"RX\"))\n-\n-;; Insn are devide in two classes:\n-;;   agen: Insn using agen\n-;;   reg: Insn not using agen\n+;; Another attribute used for scheduling purposes:\n+;;   agen: Instruction uses the address generation unit\n+;;   reg: Instruction does not use the agen unit\n \n (define_attr \"atype\" \"agen,reg\"\n (cond [ (eq_attr \"op_type\" \"E\")    (const_string \"reg\")\n@@ -193,13 +187,6 @@\n          (eq_attr \"op_type\" \"SIY\") (const_string \"agen\")]\n   (const_string \"reg\")))\n \n-;; Pipeline description for z900.  For lack of anything better,\n-;; this description is also used for the g5 and g6.\n-(include \"2064.md\")\n-\n-;; Pipeline description for z990. \n-(include \"2084.md\")\n-\n ;; Length in bytes.\n \n (define_attr \"length\" \"\"\n@@ -227,6 +214,23 @@\n (define_asm_attributes [(set_attr \"type\" \"other\")\n                         (set_attr \"op_type\" \"NN\")])\n \n+\n+;; Processor type.  This attribute must exactly match the processor_type\n+;; enumeration in s390.h.  The current machine description does not\n+;; distinguish between g5 and g6, but there are differences between the two\n+;; CPUs could in theory be modeled.\n+\n+(define_attr \"cpu\" \"g5,g6,z900,z990\"\n+  (const (symbol_ref \"s390_tune\")))\n+\n+;; Pipeline description for z900.  For lack of anything better,\n+;; this description is also used for the g5 and g6.\n+(include \"2064.md\")\n+\n+;; Pipeline description for z990. \n+(include \"2084.md\")\n+\n+\n ;;\n ;;  Condition Codes\n ;;\n@@ -1760,7 +1764,8 @@\n   \"GET_MODE_CLASS (GET_MODE (operands[1])) == MODE_INT\n    && GET_MODE_SIZE (GET_MODE (operands[1])) <= UNITS_PER_WORD\"\n   \"ex\\t%1,%2\"\n-  [(set_attr \"op_type\" \"RX\")])\n+  [(set_attr \"op_type\" \"RX\")\n+   (set_attr \"type\" \"cs\")])\n \n \n ;"}]}