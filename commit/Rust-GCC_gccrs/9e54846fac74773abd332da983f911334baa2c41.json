{"sha": "9e54846fac74773abd332da983f911334baa2c41", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWU1NDg0NmZhYzc0NzczYWJkMzMyZGE5ODNmOTExMzM0YmFhMmM0MQ==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-09-24T06:41:57Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-09-24T06:41:57Z"}, "message": "PipeImpl.java: Use VMPipe for native stuff.\n\n2004-09-24  Michael Koch  <konqueror@gmx.de>\n\n\t* gnu/java/nio/PipeImpl.java: Use VMPipe for native stuff.\n\t* gnu/java/nio/SelectorImpl.java: Use VMSelector for native stuff.\n\t* gnu/java/nio/VMPipe.java,\n\tgnu/java/nio/VMSelector.java:\n\tNew files.\n\t* gnu/java/nio/natPipeImplEcos.cc,\n\tgnu/java/nio/natPipeImplPosix.cc,\n\tgnu/java/nio/natPipeImplWin32.cc:\n\tPorted to VMPipe.\n\t* gnu/java/nio/natSelectorImplEcos.cc,\n\tgnu/java/nio/natSelectorImplPosix.cc,\n\tgnu/java/nio/natSelectorImplWin32.cc:\n\tPorted to VMSelector.\n\t* Makefile.am: Added new files gnu/java/nio/VMPipe.java and\n\tgnu/java/nio/VMSelector.java.\n\t* Makefile.in: Regenerated.\n\nFrom-SVN: r88014", "tree": {"sha": "de044ead0279b2f067cae39ad2fe643a03b72d02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de044ead0279b2f067cae39ad2fe643a03b72d02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9e54846fac74773abd332da983f911334baa2c41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e54846fac74773abd332da983f911334baa2c41", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e54846fac74773abd332da983f911334baa2c41", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e54846fac74773abd332da983f911334baa2c41/comments", "author": null, "committer": null, "parents": [{"sha": "5d865dace2bb4f577bbd3a9b640cf5a55788c153", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d865dace2bb4f577bbd3a9b640cf5a55788c153", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d865dace2bb4f577bbd3a9b640cf5a55788c153"}], "stats": {"total": 220, "additions": 184, "deletions": 36}, "files": [{"sha": "1a43194cd23bbe2eaf2d5b504f5458c014067c18", "filename": "libjava/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e54846fac74773abd332da983f911334baa2c41/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e54846fac74773abd332da983f911334baa2c41/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=9e54846fac74773abd332da983f911334baa2c41", "patch": "@@ -1,3 +1,22 @@\n+2004-09-24  Michael Koch  <konqueror@gmx.de>\n+\n+\t* gnu/java/nio/PipeImpl.java: Use VMPipe for native stuff.\n+\t* gnu/java/nio/SelectorImpl.java: Use VMSelector for native stuff.\n+\t* gnu/java/nio/VMPipe.java,\n+\tgnu/java/nio/VMSelector.java:\n+\tNew files.\n+\t* gnu/java/nio/natPipeImplEcos.cc,\n+\tgnu/java/nio/natPipeImplPosix.cc,\n+\tgnu/java/nio/natPipeImplWin32.cc:\n+\tPorted to VMPipe.\n+\t* gnu/java/nio/natSelectorImplEcos.cc,\n+\tgnu/java/nio/natSelectorImplPosix.cc,\n+\tgnu/java/nio/natSelectorImplWin32.cc:\n+\tPorted to VMSelector.\n+\t* Makefile.am: Added new files gnu/java/nio/VMPipe.java and\n+\tgnu/java/nio/VMSelector.java.\n+\t* Makefile.in: Regenerated.\n+\n 2004-09-24  Jeroen Frijters  <jeroen@frijters.net>\n \n \t* java/lang/StackTraceElement.java"}, {"sha": "4b127042324e446bf77d944208f094c9f5754ddb", "filename": "libjava/Makefile.am", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e54846fac74773abd332da983f911334baa2c41/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e54846fac74773abd332da983f911334baa2c41/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=9e54846fac74773abd332da983f911334baa2c41", "patch": "@@ -2663,6 +2663,8 @@ gnu/java/nio/ServerSocketChannelImpl.java \\\n gnu/java/nio/ServerSocketChannelSelectionKey.java \\\n gnu/java/nio/SocketChannelImpl.java \\\n gnu/java/nio/SocketChannelSelectionKey.java \\\n+gnu/java/nio/VMPipe.java \\\n+gnu/java/nio/VMSelector.java \\\n gnu/java/nio/channels/FileChannelImpl.java \\\n gnu/java/nio/charset/ISO_8859_1.java \\\n gnu/java/nio/charset/Provider.java \\"}, {"sha": "a65ca2587a83db78831979ebc87ce5c662832881", "filename": "libjava/Makefile.in", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e54846fac74773abd332da983f911334baa2c41/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e54846fac74773abd332da983f911334baa2c41/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=9e54846fac74773abd332da983f911334baa2c41", "patch": "@@ -781,6 +781,7 @@ am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc resolve.cc \\\n \tgnu/java/nio/ServerSocketChannelSelectionKey.java \\\n \tgnu/java/nio/SocketChannelImpl.java \\\n \tgnu/java/nio/SocketChannelSelectionKey.java \\\n+\tgnu/java/nio/VMPipe.java gnu/java/nio/VMSelector.java \\\n \tgnu/java/nio/channels/FileChannelImpl.java \\\n \tgnu/java/nio/charset/ISO_8859_1.java \\\n \tgnu/java/nio/charset/Provider.java \\\n@@ -3679,6 +3680,7 @@ am__objects_14 = $(am__objects_9) gnu/classpath/ServiceFactory.lo \\\n \tgnu/java/nio/ServerSocketChannelSelectionKey.lo \\\n \tgnu/java/nio/SocketChannelImpl.lo \\\n \tgnu/java/nio/SocketChannelSelectionKey.lo \\\n+\tgnu/java/nio/VMPipe.lo gnu/java/nio/VMSelector.lo \\\n \tgnu/java/nio/channels/FileChannelImpl.lo \\\n \tgnu/java/nio/charset/ISO_8859_1.lo \\\n \tgnu/java/nio/charset/Provider.lo \\\n@@ -6466,6 +6468,8 @@ gnu/java/nio/ServerSocketChannelImpl.java \\\n gnu/java/nio/ServerSocketChannelSelectionKey.java \\\n gnu/java/nio/SocketChannelImpl.java \\\n gnu/java/nio/SocketChannelSelectionKey.java \\\n+gnu/java/nio/VMPipe.java \\\n+gnu/java/nio/VMSelector.java \\\n gnu/java/nio/channels/FileChannelImpl.java \\\n gnu/java/nio/charset/ISO_8859_1.java \\\n gnu/java/nio/charset/Provider.java \\\n@@ -9228,6 +9232,10 @@ gnu/java/nio/SocketChannelImpl.lo: gnu/java/nio/$(am__dirstamp) \\\n gnu/java/nio/SocketChannelSelectionKey.lo:  \\\n \tgnu/java/nio/$(am__dirstamp) \\\n \tgnu/java/nio/$(DEPDIR)/$(am__dirstamp)\n+gnu/java/nio/VMPipe.lo: gnu/java/nio/$(am__dirstamp) \\\n+\tgnu/java/nio/$(DEPDIR)/$(am__dirstamp)\n+gnu/java/nio/VMSelector.lo: gnu/java/nio/$(am__dirstamp) \\\n+\tgnu/java/nio/$(DEPDIR)/$(am__dirstamp)\n gnu/java/nio/channels/FileChannelImpl.lo:  \\\n \tgnu/java/nio/channels/$(am__dirstamp) \\\n \tgnu/java/nio/channels/$(DEPDIR)/$(am__dirstamp)\n@@ -14776,6 +14784,10 @@ mostlyclean-compile:\n \t-rm -f gnu/java/nio/SocketChannelImpl.lo\n \t-rm -f gnu/java/nio/SocketChannelSelectionKey.$(OBJEXT)\n \t-rm -f gnu/java/nio/SocketChannelSelectionKey.lo\n+\t-rm -f gnu/java/nio/VMPipe.$(OBJEXT)\n+\t-rm -f gnu/java/nio/VMPipe.lo\n+\t-rm -f gnu/java/nio/VMSelector.$(OBJEXT)\n+\t-rm -f gnu/java/nio/VMSelector.lo\n \t-rm -f gnu/java/nio/channels/FileChannelImpl.$(OBJEXT)\n \t-rm -f gnu/java/nio/channels/FileChannelImpl.lo\n \t-rm -f gnu/java/nio/channels/natFileChannelImpl.$(OBJEXT)\n@@ -19345,6 +19357,8 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/nio/$(DEPDIR)/ServerSocketChannelSelectionKey.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/nio/$(DEPDIR)/SocketChannelImpl.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/nio/$(DEPDIR)/SocketChannelSelectionKey.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@gnu/java/nio/$(DEPDIR)/VMPipe.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@gnu/java/nio/$(DEPDIR)/VMSelector.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/nio/$(DEPDIR)/natNIOServerSocket.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/nio/$(DEPDIR)/natPipeImpl.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@gnu/java/nio/$(DEPDIR)/natSelectorImpl.Plo@am__quote@"}, {"sha": "df79e17fd2b0e44da564100c5a638597bf71e64d", "filename": "libjava/gnu/java/nio/PipeImpl.java", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FPipeImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FPipeImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FPipeImpl.java?ref=9e54846fac74773abd332da983f911334baa2c41", "patch": "@@ -168,12 +168,9 @@ public PipeImpl (SelectorProvider provider)\n     throws IOException\n   {\n     super();\n-    nativeInit (provider);\n+    VMPipe.init (this, provider);\n   }\n \n-  private native void nativeInit (SelectorProvider provider)\n-    throws IOException;\n-    \n   public Pipe.SinkChannel sink()\n   {\n     return sink;"}, {"sha": "62d06624616d98970f6318fdeaaffe2796faf226", "filename": "libjava/gnu/java/nio/SelectorImpl.java", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FSelectorImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FSelectorImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FSelectorImpl.java?ref=9e54846fac74773abd332da983f911334baa2c41", "patch": "@@ -53,14 +53,6 @@\n \n public class SelectorImpl extends AbstractSelector\n {\n-  static\n-  {\n-    // load the shared library needed for native methods.\n-    if (Configuration.INIT_LOAD_LIBRARY)\n-      {\n-        System.loadLibrary (\"javanio\");\n-      }\n-  }\n   \n   private Set keys;\n   private Set selected;\n@@ -140,11 +132,6 @@ public final int select()\n     return select (0);\n   }\n \n-  // A timeout value of 0 means block forever.\n-  private static native int implSelect (int[] read, int[] write,\n-                                        int[] except, long timeout)\n-    throws IOException;\n-\n   private final int[] getFDsAsArray (int ops)\n   {\n     int[] result;\n@@ -237,7 +224,7 @@ public synchronized int select (long timeout)\n             try\n               {\n                 begin();\n-                result = implSelect (read, write, except, timeout);\n+                result = VMSelector.select (read, write, except, timeout);\n               }\n             finally\n               {"}, {"sha": "15693e52e2c2b0777d8ecd760654a7dce961455b", "filename": "libjava/gnu/java/nio/VMPipe.java", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FVMPipe.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FVMPipe.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FVMPipe.java?ref=9e54846fac74773abd332da983f911334baa2c41", "patch": "@@ -0,0 +1,64 @@\n+/* VMPipe.java -- Reference implementation for VM hooks used by PipeImpl\n+   Copyright (C) 2004 Free Software Foundation\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.nio;\n+\n+import java.io.IOException;\n+import java.nio.channels.spi.SelectorProvider;\n+import gnu.classpath.Configuration;\n+\n+/**\n+ * This class contains the native methods for gnu.java.nio.PipeImpl\n+ * As such, it needs help from the VM.\n+ *\n+ * @author Patrik Reali\n+ */\n+final class VMPipe\n+{\n+\n+  static\n+  {\n+    // load the shared library needed for native methods.\n+    if (Configuration.INIT_LOAD_LIBRARY)\n+      {\n+        System.loadLibrary (\"javanio\");\n+      }\n+  }\n+\n+  static native void init(PipeImpl self, SelectorProvider provider)\n+    throws IOException;\n+}"}, {"sha": "7d0606a77062f745c287abaf36658076c1f384d5", "filename": "libjava/gnu/java/nio/VMSelector.java", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FVMSelector.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FVMSelector.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FVMSelector.java?ref=9e54846fac74773abd332da983f911334baa2c41", "patch": "@@ -0,0 +1,59 @@\n+/* VMSelector.java -- \n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\n+02111-1307 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.nio;\n+\n+import gnu.classpath.Configuration;\n+import java.io.IOException;\n+\n+public final class VMSelector\n+{\n+  static\n+  {\n+    // load the shared library needed for native methods.\n+    if (Configuration.INIT_LOAD_LIBRARY)\n+      {\n+        System.loadLibrary (\"javanio\");\n+      }\n+  }\n+  \n+  // A timeout value of 0 means block forever.\n+  static native int select (int[] read, int[] write,\n+                                        int[] except, long timeout)\n+    throws IOException;\n+\n+}"}, {"sha": "75af4eb627efde06d4996318246725e74f9c0609", "filename": "libjava/gnu/java/nio/natPipeImplEcos.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FnatPipeImplEcos.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FnatPipeImplEcos.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatPipeImplEcos.cc?ref=9e54846fac74773abd332da983f911334baa2c41", "patch": "@@ -1,6 +1,6 @@\n // natPipeImplEcos.cc\n \n-/* Copyright (C) 2003  Free Software Foundation\n+/* Copyright (C) 2003, 2004  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -16,10 +16,12 @@ details.  */\n #include <unistd.h>\n \n #include <gnu/java/nio/PipeImpl.h>\n+#include <gnu/java/nio/VMPipe.h>\n #include <java/io/IOException.h>\n \n void\n-gnu::java::nio::PipeImpl::nativeInit (::java::nio::channels::spi::SelectorProvider*)\n+gnu::java::nio::VMPipe::init (gnu::java::nio::PipeImpl *self,\n+\t\t\t      ::java::nio::channels::spi::SelectorProvider*)\n {\n   throw new ::java::io::IOException (JvNewStringUTF (\"nativeInit() not implemented\"));\n }"}, {"sha": "7285dbac40b4f4ecb61e6528cbbdf46fe5bebdd4", "filename": "libjava/gnu/java/nio/natPipeImplPosix.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FnatPipeImplPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FnatPipeImplPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatPipeImplPosix.cc?ref=9e54846fac74773abd332da983f911334baa2c41", "patch": "@@ -1,6 +1,6 @@\n // natPipeImplPosix.cc\n \n-/* Copyright (C) 2003  Free Software Foundation\n+/* Copyright (C) 2003, 2004  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -16,13 +16,15 @@ details.  */\n #include <unistd.h>\n \n #include <gnu/java/nio/PipeImpl.h>\n+#include <gnu/java/nio/VMPipe.h>\n //#include <gnu/java/nio/PipeImpl$SinkChannelImpl.h>\n //#include <gnu/java/nio/PipeImpl$SourceChannelImpl.h>\n #include <java/io/IOException.h>\n #include <java/nio/channels/spi/SelectorProvider.h>\n \n void\n-gnu::java::nio::PipeImpl::nativeInit (::java::nio::channels::spi::SelectorProvider* /*provider*/)\n+gnu::java::nio::VMPipe::init (gnu::java::nio::PipeImpl *self,\n+\t\t\t      ::java::nio::channels::spi::SelectorProvider* /*provider*/)\n {\n   int filedes [2];\n "}, {"sha": "2f14b50a14d45bcb527fd03ca785b3521cdfde8e", "filename": "libjava/gnu/java/nio/natPipeImplWin32.cc", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FnatPipeImplWin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FnatPipeImplWin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatPipeImplWin32.cc?ref=9e54846fac74773abd332da983f911334baa2c41", "patch": "@@ -1,6 +1,6 @@\n // natPipeImplWin32.cc\n \n-/* Copyright (C) 2003  Free Software Foundation\n+/* Copyright (C) 2003, 2004  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -16,13 +16,15 @@ details.  */\n #include <unistd.h>\n \n #include <gnu/java/nio/PipeImpl.h>\n+#include <gnu/java/nio/VMPipe.h>\n //#include <gnu/java/nio/PipeImpl$SinkChannelImpl.h>\n //#include <gnu/java/nio/PipeImpl$SourceChannelImpl.h>\n #include <java/io/IOException.h>\n #include <java/nio/channels/spi/SelectorProvider.h>\n \n void\n-gnu::java::nio::PipeImpl::nativeInit (::java::nio::channels::spi::SelectorProvider* /*provider*/)\n+gnu::java::nio::VMPipe::init (gnu::java::nio::PipeImpl *self,\n+\t\t\t      ::java::nio::channels::spi::SelectorProvider* /*provider*/)\n {\n   int filedes [2];\n "}, {"sha": "15fbafde70f644a4dcc4e66181a1aa10396e35fd", "filename": "libjava/gnu/java/nio/natSelectorImplEcos.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FnatSelectorImplEcos.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FnatSelectorImplEcos.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatSelectorImplEcos.cc?ref=9e54846fac74773abd332da983f911334baa2c41", "patch": "@@ -1,6 +1,6 @@\n // natSelectorImplEcos.cc\n \n-/* Copyright (C) 2003  Free Software Foundation\n+/* Copyright (C) 2003, 2004  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -14,12 +14,12 @@ details.  */\n #include <errno.h>\n #include <string.h>\n \n-#include <gnu/java/nio/SelectorImpl.h>\n+#include <gnu/java/nio/VMSelector.h>\n #include <java/io/IOException.h>\n \n jint\n-gnu::java::nio::SelectorImpl::implSelect (jintArray read, jintArray write,\n-                                          jintArray except, jlong timeout)\n+gnu::java::nio::VMSelector::select (jintArray read, jintArray write,\n+                                    jintArray except, jlong timeout)\n {\n   throw new ::java::io::IOException (JvNewStringUTF (\"implSelect() not implemented\"));\n }"}, {"sha": "b433900abb080bf98d30aa51eeb0b7e4c3e7f85a", "filename": "libjava/gnu/java/nio/natSelectorImplPosix.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FnatSelectorImplPosix.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FnatSelectorImplPosix.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatSelectorImplPosix.cc?ref=9e54846fac74773abd332da983f911334baa2c41", "patch": "@@ -1,6 +1,6 @@\n // natSelectorImplPosix.cc\n \n-/* Copyright (C) 2002, 2003  Free Software Foundation\n+/* Copyright (C) 2002, 2003, 2004  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -14,7 +14,7 @@ details.  */\n #include <errno.h>\n #include <string.h>\n \n-#include <gnu/java/nio/SelectorImpl.h>\n+#include <gnu/java/nio/VMSelector.h>\n #include <java/io/InterruptedIOException.h>\n #include <java/io/IOException.h>\n #include <java/lang/Thread.h>\n@@ -60,8 +60,8 @@ helper_reset (jintArray& fdArray)\n }\n \n jint\n-gnu::java::nio::SelectorImpl::implSelect (jintArray read, jintArray write,\n-                                          jintArray except, jlong timeout)\n+gnu::java::nio::VMSelector::select (jintArray read, jintArray write,\n+                                    jintArray except, jlong timeout)\n {\n   jint result;\n   int max_fd = 0;"}, {"sha": "860f654890ad9f62c5fed567df5b19d4ad2c1a79", "filename": "libjava/gnu/java/nio/natSelectorImplWin32.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FnatSelectorImplWin32.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9e54846fac74773abd332da983f911334baa2c41/libjava%2Fgnu%2Fjava%2Fnio%2FnatSelectorImplWin32.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fnio%2FnatSelectorImplWin32.cc?ref=9e54846fac74773abd332da983f911334baa2c41", "patch": "@@ -1,6 +1,6 @@\n // natSelectorImplWin32.cc\n \n-/* Copyright (C) 2003  Free Software Foundation\n+/* Copyright (C) 2003, 2004  Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -11,12 +11,12 @@ details.  */\n #include <config.h>\n #include <platform.h>\n \n-#include <gnu/java/nio/SelectorImpl.h>\n+#include <gnu/java/nio/VMSelector.h>\n #include <java/lang/Thread.h>\n \n jint\n-gnu::java::nio::SelectorImpl::implSelect (jintArray read, jintArray write,\n-                                          jintArray except, jlong timeout)\n+gnu::java::nio::VMSelector::select (jintArray read, jintArray write,\n+                                    jintArray except, jlong timeout)\n {\n   // FIXME: The API for implSelect is biased towards POSIX implementations.\n   jint* pReadFD = elements (read);"}]}