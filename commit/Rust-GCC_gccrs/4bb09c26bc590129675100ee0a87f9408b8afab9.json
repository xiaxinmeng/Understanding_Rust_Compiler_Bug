{"sha": "4bb09c26bc590129675100ee0a87f9408b8afab9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGJiMDljMjZiYzU5MDEyOTY3NTEwMGVlMGE4N2Y5NDA4YjhhZmFiOQ==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2009-02-21T21:25:39Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2009-02-21T21:25:39Z"}, "message": "lex.c (lex_string): Return a CPP_LESS token for missing '>' in a header name.\n\nlibcpp:\n\t* lex.c (lex_string): Return a CPP_LESS token for missing '>' in a\n\theader name.\n\t(_cpp_lex_direct): Handle this.\n\ngcc/testsuite:\n\t* gcc.dg/cpp/include4.c: New test.\n\nFrom-SVN: r144361", "tree": {"sha": "7886f1b6dbd2bde455eb82ab0f653f93286218f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7886f1b6dbd2bde455eb82ab0f653f93286218f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4bb09c26bc590129675100ee0a87f9408b8afab9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb09c26bc590129675100ee0a87f9408b8afab9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bb09c26bc590129675100ee0a87f9408b8afab9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb09c26bc590129675100ee0a87f9408b8afab9/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e361f234b4c853d77a8a8146d093b13ce005ce2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e361f234b4c853d77a8a8146d093b13ce005ce2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e361f234b4c853d77a8a8146d093b13ce005ce2"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "1d2db2ea3f07af29f6e8b987bc871d163fc21307", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb09c26bc590129675100ee0a87f9408b8afab9/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb09c26bc590129675100ee0a87f9408b8afab9/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4bb09c26bc590129675100ee0a87f9408b8afab9", "patch": "@@ -1,3 +1,7 @@\n+2009-02-21  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* gcc.dg/cpp/include4.c: New test.\n+\n 2008-02-21  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/39256"}, {"sha": "d5e7fee881b227d4c3e4e51b621d81286c482c39", "filename": "gcc/testsuite/gcc.dg/cpp/include4.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb09c26bc590129675100ee0a87f9408b8afab9/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb09c26bc590129675100ee0a87f9408b8afab9/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Finclude4.c?ref=4bb09c26bc590129675100ee0a87f9408b8afab9", "patch": "@@ -0,0 +1,14 @@\n+/* Preprocessing tokens are always formed according to a greedy algorithm,\n+   so \"#include <stddef.h\" must be interpreted as a sequence of tokens,\n+   of which the \"h\" then gets macro expanded.  Likewise the other\n+   examples.  */\n+\n+#define h h>\n+#include <stddef.h\n+#undef h\n+\n+#define foo stddef.h>\n+#include <foo\n+\n+#include <foo /*\n+> */"}, {"sha": "d86092b677c076959adc00f5e437d3ad6a0f02df", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb09c26bc590129675100ee0a87f9408b8afab9/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb09c26bc590129675100ee0a87f9408b8afab9/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=4bb09c26bc590129675100ee0a87f9408b8afab9", "patch": "@@ -1,3 +1,9 @@\n+2009-02-21  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* lex.c (lex_string): Return a CPP_LESS token for missing '>' in a\n+\theader name.\n+\t(_cpp_lex_direct): Handle this.\n+\n 2009-02-15  Richard Guenther  <rguenther@suse.de>\n \n \tRevert last change."}, {"sha": "452e8eafce59bd4ae182d3851631648d865bb6b5", "filename": "libcpp/lex.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4bb09c26bc590129675100ee0a87f9408b8afab9/libcpp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4bb09c26bc590129675100ee0a87f9408b8afab9/libcpp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Flex.c?ref=4bb09c26bc590129675100ee0a87f9408b8afab9", "patch": "@@ -613,7 +613,9 @@ create_literal (cpp_reader *pfile, cpp_token *token, const uchar *base,\n /* Lexes a string, character constant, or angle-bracketed header file\n    name.  The stored string contains the spelling, including opening\n    quote and leading any leading 'L', 'u' or 'U'.  It returns the type\n-   of the literal, or CPP_OTHER if it was not properly terminated.\n+   of the literal, or CPP_OTHER if it was not properly terminated, or\n+   CPP_LESS for an unterminated header name which must be relexed as\n+   normal tokens.\n \n    The spelling is NUL-terminated, but it is not guaranteed that this\n    is the first NUL since embedded NULs are preserved.  */\n@@ -652,6 +654,14 @@ lex_string (cpp_reader *pfile, cpp_token *token, const uchar *base)\n       else if (c == '\\n')\n \t{\n \t  cur--;\n+\t  /* Unmatched quotes always yield undefined behavior, but\n+\t     greedy lexing means that what appears to be an unterminated\n+\t     header name may actually be a legitimate sequence of tokens.  */\n+\t  if (terminator == '>')\n+\t    {\n+\t      token->type = CPP_LESS;\n+\t      return;\n+\t    }\n \t  type = CPP_OTHER;\n \t  break;\n \t}\n@@ -1181,7 +1191,8 @@ _cpp_lex_direct (cpp_reader *pfile)\n       if (pfile->state.angled_headers)\n \t{\n \t  lex_string (pfile, result, buffer->cur - 1);\n-\t  break;\n+\t  if (result->type != CPP_LESS)\n+\t    break;\n \t}\n \n       result->type = CPP_LESS;"}]}