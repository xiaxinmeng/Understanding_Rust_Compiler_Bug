{"sha": "1bcce263a7257de484931932d1a7a971a45f54e0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJjY2UyNjNhNzI1N2RlNDg0OTMxOTMyZDFhN2E5NzFhNDVmNTRlMA==", "commit": {"author": {"name": "Joseph Myers", "email": "joseph@codesourcery.com", "date": "2011-03-25T13:06:37Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2011-03-25T13:06:37Z"}, "message": "configure.ac (native_only): Remove.\n\n\t* configure.ac (native_only): Remove.\n\t(i[[3456789]]86-*-msdosdjgpp*): Don't disable expect dejagnu\n\tsend-pr uudecode guile gnuserv on host.\n\t(x86_64-*-mingw*): Don't disable expect dejagnu autoconf automake\n\tsend-pr rcs guile perl texinfo libtool on host.\n\t(i[[3456789]]86-*-mingw32*): Don't disable expect dejagnu autoconf\n\tautomake send-pr rcs guile perl texinfo libtool on host.\n\t(*-*-cygwin*, *-*-netbsd*): Remove host cases.\n\t(*-*-kaos*): Don't disable target-examples target-gperf on target.\n\t(alpha*-dec-osf*): Don't disable fileutils on target.\n\t(sh*-*-pe|mips*-*-pe|*arm-wince-pe): Don't disable target-examples\n\ttexinfo send-pr expect dejagnu on target.\n\t(arm-*-elf* | arm*-*-eabi*, arm*-*-linux-gnueabi): Don't disable\n\ttarget-qthreads on target.\n\t(hppa*-hp-hpux11*, hppa*-*-*): Don't disable shellutils on target.\n\t(ia64*-*-elf*, ia64*-*-*vms*): Don't disable mmalloc on target.\n\t(i[[3456789]]86-w64-mingw*, i[[3456789]]86-*-mingw*,\n\tx86_64-*-mingw*): Don't disable expect on target.\n\t(*-*-cygwin*): Don't disable target-gperf on target.\n\t(powerpc*-*-winnt* | powerpc*-*-pe*): Don't disable make expect\n\tgnuserv on target.\n\t(powerpcle-*-solaris*): Don't disable make expect gnuserv on\n\ttarget.\n\t* configure: Regenerate.\n\nFrom-SVN: r171452", "tree": {"sha": "de3da247ff3ed041088f0451ee6ea271cd2ab52a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de3da247ff3ed041088f0451ee6ea271cd2ab52a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bcce263a7257de484931932d1a7a971a45f54e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bcce263a7257de484931932d1a7a971a45f54e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bcce263a7257de484931932d1a7a971a45f54e0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bcce263a7257de484931932d1a7a971a45f54e0/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bff5ad8e7e02b62f122ba093d21f001f436d9458", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bff5ad8e7e02b62f122ba093d21f001f436d9458", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bff5ad8e7e02b62f122ba093d21f001f436d9458"}], "stats": {"total": 139, "additions": 69, "deletions": 70}, "files": [{"sha": "d06ac84fa626e4596d7ebdb6ada16e372ac83699", "filename": "ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bcce263a7257de484931932d1a7a971a45f54e0/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bcce263a7257de484931932d1a7a971a45f54e0/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=1bcce263a7257de484931932d1a7a971a45f54e0", "patch": "@@ -1,3 +1,30 @@\n+2011-03-25  Joseph Myers  <joseph@codesourcery.com>\n+\n+\t* configure.ac (native_only): Remove.\n+\t(i[[3456789]]86-*-msdosdjgpp*): Don't disable expect dejagnu\n+\tsend-pr uudecode guile gnuserv on host.\n+\t(x86_64-*-mingw*): Don't disable expect dejagnu autoconf automake\n+\tsend-pr rcs guile perl texinfo libtool on host.\n+\t(i[[3456789]]86-*-mingw32*): Don't disable expect dejagnu autoconf\n+\tautomake send-pr rcs guile perl texinfo libtool on host.\n+\t(*-*-cygwin*, *-*-netbsd*): Remove host cases.\n+\t(*-*-kaos*): Don't disable target-examples target-gperf on target.\n+\t(alpha*-dec-osf*): Don't disable fileutils on target.\n+\t(sh*-*-pe|mips*-*-pe|*arm-wince-pe): Don't disable target-examples\n+\ttexinfo send-pr expect dejagnu on target.\n+\t(arm-*-elf* | arm*-*-eabi*, arm*-*-linux-gnueabi): Don't disable\n+\ttarget-qthreads on target.\n+\t(hppa*-hp-hpux11*, hppa*-*-*): Don't disable shellutils on target.\n+\t(ia64*-*-elf*, ia64*-*-*vms*): Don't disable mmalloc on target.\n+\t(i[[3456789]]86-w64-mingw*, i[[3456789]]86-*-mingw*,\n+\tx86_64-*-mingw*): Don't disable expect on target.\n+\t(*-*-cygwin*): Don't disable target-gperf on target.\n+\t(powerpc*-*-winnt* | powerpc*-*-pe*): Don't disable make expect\n+\tgnuserv on target.\n+\t(powerpcle-*-solaris*): Don't disable make expect gnuserv on\n+\ttarget.\n+\t* configure: Regenerate.\n+\n 2011-03-25  Joseph Myers  <joseph@codesourcery.com>\n \n \t* configure.ac (target_tools): Remove target-groff."}, {"sha": "a922c682028d13714f81b46ec68046e234e656f3", "filename": "configure", "status": "modified", "additions": 21, "deletions": 35, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bcce263a7257de484931932d1a7a971a45f54e0/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bcce263a7257de484931932d1a7a971a45f54e0/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=1bcce263a7257de484931932d1a7a971a45f54e0", "patch": "@@ -2726,8 +2726,7 @@ target_libraries=\"target-libgcc \\\n # run only in the target environment\n #\n # note: any program that *uses* libraries that are in the \"target_libraries\"\n-# list belongs in this list.  those programs are also very likely\n-# candidates for the \"native_only\" list which follows\n+# list belongs in this list.\n #\n target_tools=\"target-examples target-gperf target-rda\"\n \n@@ -2835,17 +2834,12 @@ case ${with_x} in\n   *)  echo \"*** bad value \\\"${with_x}\\\" for -with-x flag; ignored\" 1>&2 ;;\n esac\n \n-# Some tools are only suitable for building in a \"native\" situation.\n-# Remove these if host!=target.\n-native_only=\"autoconf automake libtool fileutils find gawk gettext gzip hello indent m4 rcs recode sed shellutils tar textutils uudecode wdiff guile perl time ash bash bzip2 prms gnuserv target-gperf\"\n-\n-# Similarly, some are only suitable for cross toolchains.\n+# Some are only suitable for cross toolchains.\n # Remove these if host=target.\n cross_only=\"target-libgloss target-newlib target-opcodes\"\n \n case $is_cross_compiler in\n   no) skipdirs=\"${skipdirs} ${cross_only}\" ;;\n-  yes) skipdirs=\"${skipdirs} ${native_only}\" ;;\n esac\n \n # If both --with-headers and --with-libs are specified, default to\n@@ -2971,19 +2965,13 @@ unsupported_languages=\n \n case \"${host}\" in\n   i[3456789]86-*-msdosdjgpp*)\n-    noconfigdirs=\"$noconfigdirs tcl tk expect dejagnu send-pr uudecode guile itcl gnuserv libffi\"\n+    noconfigdirs=\"$noconfigdirs tcl tk itcl libffi\"\n     ;;\n   x86_64-*-mingw*)\n-    noconfigdirs=\"$noconfigdirs expect dejagnu autoconf automake send-pr rcs guile perl texinfo libtool newlib\"\n+    noconfigdirs=\"$noconfigdirs newlib\"\n     ;;\n   i[3456789]86-*-mingw32*)\n-    noconfigdirs=\"$noconfigdirs expect dejagnu autoconf automake send-pr rcs guile perl texinfo libtool newlib\"\n-    ;;\n-  *-*-cygwin*)\n-    noconfigdirs=\"$noconfigdirs autoconf automake send-pr rcs guile perl\"\n-    ;;\n-  *-*-netbsd*)\n-    noconfigdirs=\"$noconfigdirs rcs\"\n+    noconfigdirs=\"$noconfigdirs newlib\"\n     ;;\n esac\n \n@@ -3134,7 +3122,7 @@ case \"${target}\" in\n   *-*-kaos*)\n     # Remove unsupported stuff on all kaOS configurations.\n     skipdirs=\"target-libiberty ${libgcj} target-libstdc++-v3\"\n-    skipdirs=\"$skipdirs target-libobjc target-examples target-gperf\"\n+    skipdirs=\"$skipdirs target-libobjc\"\n     skipdirs=\"$skipdirs zlib fastjar target-libjava target-boehm-gc target-zlib\"\n     noconfigdirs=\"$noconfigdirs target-libgloss\"\n     ;;\n@@ -3170,9 +3158,9 @@ case \"${target}\" in\n     ;;\n   alpha*-dec-osf*)\n     # ld works, but does not support shared libraries.\n-    # newlib is not 64 bit ready.  I'm not sure about fileutils.\n+    # newlib is not 64 bit ready.\n     # gas doesn't generate exception information.\n-    noconfigdirs=\"$noconfigdirs gas ld fileutils target-newlib target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs gas ld target-newlib target-libgloss\"\n     ;;\n   alpha*-*-*vms*)\n     noconfigdirs=\"$noconfigdirs gdb target-newlib target-libgloss ${libgcj}\"\n@@ -3193,10 +3181,8 @@ case \"${target}\" in\n     ;;\n   sh*-*-pe|mips*-*-pe|*arm-wince-pe)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n-    noconfigdirs=\"$noconfigdirs target-examples\"\n-    noconfigdirs=\"$noconfigdirs target-libiberty texinfo send-pr\"\n+    noconfigdirs=\"$noconfigdirs target-libiberty\"\n     noconfigdirs=\"$noconfigdirs tcl tk itcl libgui sim\"\n-    noconfigdirs=\"$noconfigdirs expect dejagnu\"\n     # the C++ libraries don't build on top of CE's C libraries\n     noconfigdirs=\"$noconfigdirs target-libstdc++-v3\"\n     noconfigdirs=\"$noconfigdirs target-newlib\"\n@@ -3210,11 +3196,11 @@ case \"${target}\" in\n     libgloss_dir=arm\n     ;;\n   arm-*-elf* | arm*-*-eabi* )\n-    noconfigdirs=\"$noconfigdirs target-libffi target-qthreads\"\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n     libgloss_dir=arm\n     ;;\n   arm*-*-linux-gnueabi)\n-    noconfigdirs=\"$noconfigdirs target-qthreads\"\n+    noconfigdirs=\"$noconfigdirs\"\n     case ${with_newlib} in\n       no) noconfigdirs=\"$noconfigdirs target-newlib target-libgloss\"\n     esac\n@@ -3304,30 +3290,30 @@ case \"${target}\" in\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n     ;;\n   hppa*-hp-hpux11*)\n-    noconfigdirs=\"$noconfigdirs ld shellutils\"\n+    noconfigdirs=\"$noconfigdirs ld\"\n     ;;\n   hppa*-*-pro*)\n     libgloss_dir=pa\n     ;;\n   hppa*-*-*)\n     # According to Alexandre Oliva <aoliva@redhat.com>, libjava won't\n     # build on HP-UX 10.20.\n-    noconfigdirs=\"$noconfigdirs ld shellutils ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs ld ${libgcj}\"\n     ;;\n   i960-*-*)\n     noconfigdirs=\"$noconfigdirs ${libgcj} gdb\"\n     ;;\n   ia64*-*-elf*)\n     # No gdb support yet.\n-    noconfigdirs=\"$noconfigdirs readline mmalloc libgui itcl gdb\"\n+    noconfigdirs=\"$noconfigdirs readline libgui itcl gdb\"\n     ;;\n   ia64*-**-hpux*)\n     # No ld support yet.\n     noconfigdirs=\"$noconfigdirs ${libgcj} libgui itcl ld\"\n     ;;\n   ia64*-*-*vms*)\n     # No gdb or ld support yet.\n-    noconfigdirs=\"$noconfigdirs ${libgcj} readline mmalloc libgui itcl gdb ld\"\n+    noconfigdirs=\"$noconfigdirs ${libgcj} readline libgui itcl gdb ld\"\n     ;;\n   i[3456789]86-*-coff | i[3456789]86-*-elf)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n@@ -3353,18 +3339,18 @@ case \"${target}\" in\n     # 'target-newlib' will appear in skipdirs.\n     ;;\n   i[3456789]86-w64-mingw*)\n-    noconfigdirs=\"$noconfigdirs expect target-libgloss target-newlib ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss target-newlib ${libgcj}\"\n     ;;\n   i[3456789]86-*-mingw*)\n     target_configdirs=\"$target_configdirs target-winsup\"\n-    noconfigdirs=\"$noconfigdirs expect target-libgloss target-newlib ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss target-newlib ${libgcj}\"\n     ;;\n   x86_64-*-mingw*)\n-    noconfigdirs=\"$noconfigdirs expect target-libgloss target-newlib ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss target-newlib ${libgcj}\"\n     ;;\n   *-*-cygwin*)\n     target_configdirs=\"$target_configdirs target-libtermcap target-winsup\"\n-    noconfigdirs=\"$noconfigdirs target-gperf target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss\"\n     # always build newlib if winsup directory is present.\n     if test -d \"$srcdir/winsup/cygwin\"; then\n       skipdirs=`echo \" ${skipdirs} \" | sed -e 's/ target-newlib / /'`\n@@ -3435,13 +3421,13 @@ case \"${target}\" in\n     ;;\n   powerpc*-*-winnt* | powerpc*-*-pe*)\n     target_configdirs=\"$target_configdirs target-winsup\"\n-    noconfigdirs=\"$noconfigdirs gdb tcl tk make expect target-libgloss itcl gnuserv ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs gdb tcl tk target-libgloss itcl ${libgcj}\"\n     # always build newlib.\n     skipdirs=`echo \" ${skipdirs} \" | sed -e 's/ target-newlib / /'`\n     ;;\n     # This is temporary until we can link against shared libraries\n   powerpcle-*-solaris*)\n-    noconfigdirs=\"$noconfigdirs gdb sim make tcl tk expect itcl gnuserv ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs gdb sim tcl tk itcl ${libgcj}\"\n     libgloss_dir=rs6000\n     ;;\n   powerpc-*-beos*)"}, {"sha": "bac6486bcc3a1e6057cdfbf9c168c73898204116", "filename": "configure.ac", "status": "modified", "additions": 21, "deletions": 35, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bcce263a7257de484931932d1a7a971a45f54e0/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bcce263a7257de484931932d1a7a971a45f54e0/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=1bcce263a7257de484931932d1a7a971a45f54e0", "patch": "@@ -207,8 +207,7 @@ target_libraries=\"target-libgcc \\\n # run only in the target environment\n #\n # note: any program that *uses* libraries that are in the \"target_libraries\"\n-# list belongs in this list.  those programs are also very likely\n-# candidates for the \"native_only\" list which follows\n+# list belongs in this list.\n #\n target_tools=\"target-examples target-gperf target-rda\"\n \n@@ -296,17 +295,12 @@ case ${with_x} in\n   *)  echo \"*** bad value \\\"${with_x}\\\" for -with-x flag; ignored\" 1>&2 ;;\n esac\n \n-# Some tools are only suitable for building in a \"native\" situation.\n-# Remove these if host!=target.  \n-native_only=\"autoconf automake libtool fileutils find gawk gettext gzip hello indent m4 rcs recode sed shellutils tar textutils uudecode wdiff guile perl time ash bash bzip2 prms gnuserv target-gperf\"\n-\n-# Similarly, some are only suitable for cross toolchains.\n+# Some are only suitable for cross toolchains.\n # Remove these if host=target.\n cross_only=\"target-libgloss target-newlib target-opcodes\"\n \n case $is_cross_compiler in\n   no) skipdirs=\"${skipdirs} ${cross_only}\" ;;\n-  yes) skipdirs=\"${skipdirs} ${native_only}\" ;;\n esac\n \n # If both --with-headers and --with-libs are specified, default to\n@@ -427,19 +421,13 @@ unsupported_languages=\n \n case \"${host}\" in\n   i[[3456789]]86-*-msdosdjgpp*)\n-    noconfigdirs=\"$noconfigdirs tcl tk expect dejagnu send-pr uudecode guile itcl gnuserv libffi\"\n+    noconfigdirs=\"$noconfigdirs tcl tk itcl libffi\"\n     ;;\n   x86_64-*-mingw*)\n-    noconfigdirs=\"$noconfigdirs expect dejagnu autoconf automake send-pr rcs guile perl texinfo libtool newlib\"\n+    noconfigdirs=\"$noconfigdirs newlib\"\n     ;;\n   i[[3456789]]86-*-mingw32*)\n-    noconfigdirs=\"$noconfigdirs expect dejagnu autoconf automake send-pr rcs guile perl texinfo libtool newlib\"\n-    ;;\n-  *-*-cygwin*)\n-    noconfigdirs=\"$noconfigdirs autoconf automake send-pr rcs guile perl\"\n-    ;;\n-  *-*-netbsd*)\n-    noconfigdirs=\"$noconfigdirs rcs\"\n+    noconfigdirs=\"$noconfigdirs newlib\"\n     ;;\n esac\n \n@@ -580,7 +568,7 @@ case \"${target}\" in\n   *-*-kaos*)\n     # Remove unsupported stuff on all kaOS configurations.\n     skipdirs=\"target-libiberty ${libgcj} target-libstdc++-v3\"\n-    skipdirs=\"$skipdirs target-libobjc target-examples target-gperf\"\n+    skipdirs=\"$skipdirs target-libobjc\"\n     skipdirs=\"$skipdirs zlib fastjar target-libjava target-boehm-gc target-zlib\"\n     noconfigdirs=\"$noconfigdirs target-libgloss\"\n     ;;\n@@ -616,9 +604,9 @@ case \"${target}\" in\n     ;;\n   alpha*-dec-osf*)\n     # ld works, but does not support shared libraries.\n-    # newlib is not 64 bit ready.  I'm not sure about fileutils.\n+    # newlib is not 64 bit ready.\n     # gas doesn't generate exception information.\n-    noconfigdirs=\"$noconfigdirs gas ld fileutils target-newlib target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs gas ld target-newlib target-libgloss\"\n     ;;\n   alpha*-*-*vms*)\n     noconfigdirs=\"$noconfigdirs gdb target-newlib target-libgloss ${libgcj}\"\n@@ -639,10 +627,8 @@ case \"${target}\" in\n     ;;    \n   sh*-*-pe|mips*-*-pe|*arm-wince-pe)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n-    noconfigdirs=\"$noconfigdirs target-examples\"\n-    noconfigdirs=\"$noconfigdirs target-libiberty texinfo send-pr\"\n+    noconfigdirs=\"$noconfigdirs target-libiberty\"\n     noconfigdirs=\"$noconfigdirs tcl tk itcl libgui sim\"\n-    noconfigdirs=\"$noconfigdirs expect dejagnu\"\n     # the C++ libraries don't build on top of CE's C libraries\n     noconfigdirs=\"$noconfigdirs target-libstdc++-v3\"\n     noconfigdirs=\"$noconfigdirs target-newlib\"\n@@ -656,11 +642,11 @@ case \"${target}\" in\n     libgloss_dir=arm\n     ;;\n   arm-*-elf* | arm*-*-eabi* )\n-    noconfigdirs=\"$noconfigdirs target-libffi target-qthreads\"\n+    noconfigdirs=\"$noconfigdirs target-libffi\"\n     libgloss_dir=arm\n     ;;\n   arm*-*-linux-gnueabi)\n-    noconfigdirs=\"$noconfigdirs target-qthreads\"\n+    noconfigdirs=\"$noconfigdirs\"\n     case ${with_newlib} in\n       no) noconfigdirs=\"$noconfigdirs target-newlib target-libgloss\"\n     esac\n@@ -750,30 +736,30 @@ case \"${target}\" in\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n     ;;\n   hppa*-hp-hpux11*)\n-    noconfigdirs=\"$noconfigdirs ld shellutils\"\n+    noconfigdirs=\"$noconfigdirs ld\"\n     ;;\n   hppa*-*-pro*)\n     libgloss_dir=pa\n     ;;\n   hppa*-*-*)\n     # According to Alexandre Oliva <aoliva@redhat.com>, libjava won't\n     # build on HP-UX 10.20.\n-    noconfigdirs=\"$noconfigdirs ld shellutils ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs ld ${libgcj}\"\n     ;;\n   i960-*-*)\n     noconfigdirs=\"$noconfigdirs ${libgcj} gdb\"\n     ;;\n   ia64*-*-elf*)\n     # No gdb support yet.\n-    noconfigdirs=\"$noconfigdirs readline mmalloc libgui itcl gdb\"\n+    noconfigdirs=\"$noconfigdirs readline libgui itcl gdb\"\n     ;;\n   ia64*-**-hpux*)\n     # No ld support yet.\n     noconfigdirs=\"$noconfigdirs ${libgcj} libgui itcl ld\"\n     ;;\n   ia64*-*-*vms*)\n     # No gdb or ld support yet.\n-    noconfigdirs=\"$noconfigdirs ${libgcj} readline mmalloc libgui itcl gdb ld\"\n+    noconfigdirs=\"$noconfigdirs ${libgcj} readline libgui itcl gdb ld\"\n     ;;\n   i[[3456789]]86-*-coff | i[[3456789]]86-*-elf)\n     noconfigdirs=\"$noconfigdirs ${libgcj}\"\n@@ -799,18 +785,18 @@ case \"${target}\" in\n     # 'target-newlib' will appear in skipdirs.\n     ;;\n   i[[3456789]]86-w64-mingw*)\n-    noconfigdirs=\"$noconfigdirs expect target-libgloss target-newlib ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss target-newlib ${libgcj}\"\n     ;;\n   i[[3456789]]86-*-mingw*)\n     target_configdirs=\"$target_configdirs target-winsup\"\n-    noconfigdirs=\"$noconfigdirs expect target-libgloss target-newlib ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss target-newlib ${libgcj}\"\n     ;;\n   x86_64-*-mingw*)\n-    noconfigdirs=\"$noconfigdirs expect target-libgloss target-newlib ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss target-newlib ${libgcj}\"\n     ;;\n   *-*-cygwin*)\n     target_configdirs=\"$target_configdirs target-libtermcap target-winsup\"\n-    noconfigdirs=\"$noconfigdirs target-gperf target-libgloss\"\n+    noconfigdirs=\"$noconfigdirs target-libgloss\"\n     # always build newlib if winsup directory is present.\n     if test -d \"$srcdir/winsup/cygwin\"; then\n       skipdirs=`echo \" ${skipdirs} \" | sed -e 's/ target-newlib / /'`\n@@ -881,13 +867,13 @@ case \"${target}\" in\n     ;;\n   powerpc*-*-winnt* | powerpc*-*-pe*)\n     target_configdirs=\"$target_configdirs target-winsup\"\n-    noconfigdirs=\"$noconfigdirs gdb tcl tk make expect target-libgloss itcl gnuserv ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs gdb tcl tk target-libgloss itcl ${libgcj}\"\n     # always build newlib.\n     skipdirs=`echo \" ${skipdirs} \" | sed -e 's/ target-newlib / /'`\n     ;;\n     # This is temporary until we can link against shared libraries\n   powerpcle-*-solaris*)\n-    noconfigdirs=\"$noconfigdirs gdb sim make tcl tk expect itcl gnuserv ${libgcj}\"\n+    noconfigdirs=\"$noconfigdirs gdb sim tcl tk itcl ${libgcj}\"\n     libgloss_dir=rs6000\n     ;;\n   powerpc-*-beos*)"}]}