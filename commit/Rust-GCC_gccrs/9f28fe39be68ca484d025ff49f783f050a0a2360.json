{"sha": "9f28fe39be68ca484d025ff49f783f050a0a2360", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWYyOGZlMzliZTY4Y2E0ODRkMDI1ZmY0OWY3ODNmMDUwYTBhMjM2MA==", "commit": {"author": {"name": "Thomas Preud'homme", "email": "thomas.preudhomme@arm.com", "date": "2017-11-09T16:34:43Z"}, "committer": {"name": "Thomas Preud'homme", "email": "thopre01@gcc.gnu.org", "date": "2017-11-09T16:34:43Z"}, "message": "[ARM] Fix cmse_nonsecure_entry return insn size\n\nA number of instructions are output in assembler form by\noutput_return_instruction () when compiling a function with the\ncmse_nonsecure_entry attribute for Armv8-M Mainline with hardfloat float\nABI. However, the corresponding thumb2_cmse_entry_return insn pattern\ndoes not account for all these instructions in its computing of the\nlength of the instruction.\n\nThis may lead GCC to use the wrong branching instruction due to\nincorrect computation of the offset between the branch instruction's\naddress and the target address.\n\nThis commit fixes the mismatch between what output_return_instruction ()\ndoes and what the pattern think it does and adds a note warning about\nmismatch in the affected functions' heading comments to ensure code does\nnot get out of sync again.\n\nNote: no test is provided because the C testcase is fragile (only works\non GCC 6) and the extracted RTL test fails to compile due to bugs in the\nRTL frontend (PR82815 and PR82817)\n\n2017-11-09  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n\n    gcc/\n    * config/arm/arm.c (output_return_instruction): Add comments to\n    indicate requirement for cmse_nonsecure_entry return to account\n    for the size of clearing instruction output here.\n    (thumb_exit): Likewise.\n    * config/arm/thumb2.md (thumb2_cmse_entry_return): Fix length for\n    return in hardfloat mode.\n\nFrom-SVN: r254601", "tree": {"sha": "b73603173913a3bac468233bff4b41854e42eebe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b73603173913a3bac468233bff4b41854e42eebe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9f28fe39be68ca484d025ff49f783f050a0a2360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f28fe39be68ca484d025ff49f783f050a0a2360", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9f28fe39be68ca484d025ff49f783f050a0a2360", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9f28fe39be68ca484d025ff49f783f050a0a2360/comments", "author": {"login": "RoboTux", "id": 272327, "node_id": "MDQ6VXNlcjI3MjMyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/272327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RoboTux", "html_url": "https://github.com/RoboTux", "followers_url": "https://api.github.com/users/RoboTux/followers", "following_url": "https://api.github.com/users/RoboTux/following{/other_user}", "gists_url": "https://api.github.com/users/RoboTux/gists{/gist_id}", "starred_url": "https://api.github.com/users/RoboTux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RoboTux/subscriptions", "organizations_url": "https://api.github.com/users/RoboTux/orgs", "repos_url": "https://api.github.com/users/RoboTux/repos", "events_url": "https://api.github.com/users/RoboTux/events{/privacy}", "received_events_url": "https://api.github.com/users/RoboTux/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9222c9e36869c345790b2b654e8cba059ec50b14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9222c9e36869c345790b2b654e8cba059ec50b14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9222c9e36869c345790b2b654e8cba059ec50b14"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "67d925c0014b7f16eb1b36268927ef9a112c8c1a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f28fe39be68ca484d025ff49f783f050a0a2360/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f28fe39be68ca484d025ff49f783f050a0a2360/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9f28fe39be68ca484d025ff49f783f050a0a2360", "patch": "@@ -1,3 +1,12 @@\n+2017-11-09  Thomas Preud'homme  <thomas.preudhomme@arm.com>\n+\n+\t* config/arm/arm.c (output_return_instruction): Add comments to\n+\tindicate requirement for cmse_nonsecure_entry return to account\n+\tfor the size of clearing instruction output here.\n+\t(thumb_exit): Likewise.\n+\t* config/arm/thumb2.md (thumb2_cmse_entry_return): Fix length for\n+\treturn in hardfloat mode.\n+\n 2017-11-09  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.c (machine_function): Add a bool,"}, {"sha": "f1ac70ff0895b79df6f14811fc9095b73ff8ee26", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f28fe39be68ca484d025ff49f783f050a0a2360/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f28fe39be68ca484d025ff49f783f050a0a2360/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=9f28fe39be68ca484d025ff49f783f050a0a2360", "patch": "@@ -19417,7 +19417,12 @@ arm_get_vfp_saved_size (void)\n \n /* Generate a function exit sequence.  If REALLY_RETURN is false, then do\n    everything bar the final return instruction.  If simple_return is true,\n-   then do not output epilogue, because it has already been emitted in RTL.  */\n+   then do not output epilogue, because it has already been emitted in RTL.\n+\n+   Note: do not forget to update length attribute of corresponding insn pattern\n+   when changing assembly output (eg. length attribute of\n+   thumb2_cmse_entry_return when updating Armv8-M Mainline Security Extensions\n+   register clearing sequences).  */\n const char *\n output_return_instruction (rtx operand, bool really_return, bool reverse,\n                            bool simple_return)\n@@ -23950,7 +23955,12 @@ thumb_pop (FILE *f, unsigned long mask)\n \n /* Generate code to return from a thumb function.\n    If 'reg_containing_return_addr' is -1, then the return address is\n-   actually on the stack, at the stack pointer.  */\n+   actually on the stack, at the stack pointer.\n+\n+   Note: do not forget to update length attribute of corresponding insn pattern\n+   when changing assembly output (eg. length attribute of epilogue_insns when\n+   updating Armv8-M Baseline Security Extensions register clearing\n+   sequences).  */\n static void\n thumb_exit (FILE *f, int reg_containing_return_addr)\n {"}, {"sha": "abe90d4f4e4509f643a2cfcd6e0d225b3b4186a9", "filename": "gcc/config/arm/thumb2.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9f28fe39be68ca484d025ff49f783f050a0a2360/gcc%2Fconfig%2Farm%2Fthumb2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9f28fe39be68ca484d025ff49f783f050a0a2360/gcc%2Fconfig%2Farm%2Fthumb2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb2.md?ref=9f28fe39be68ca484d025ff49f783f050a0a2360", "patch": "@@ -1126,7 +1126,7 @@\n    ; we adapt the length accordingly.\n    (set (attr \"length\")\n      (if_then_else (match_test \"TARGET_HARD_FLOAT\")\n-      (const_int 12)\n+      (const_int 34)\n       (const_int 8)))\n    ; We do not support predicate execution of returns from cmse_nonsecure_entry\n    ; functions because we need to clear the APSR.  Since predicable has to be"}]}