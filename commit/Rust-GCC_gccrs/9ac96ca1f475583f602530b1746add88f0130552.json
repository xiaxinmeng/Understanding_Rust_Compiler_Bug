{"sha": "9ac96ca1f475583f602530b1746add88f0130552", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWFjOTZjYTFmNDc1NTgzZjYwMjUzMGIxNzQ2YWRkODhmMDEzMDU1Mg==", "commit": {"author": {"name": "Mark Wielaard", "email": "mark@klomp.org", "date": "2000-08-27T22:26:27Z"}, "committer": {"name": "Mark Wielaard", "email": "mark@gcc.gnu.org", "date": "2000-08-27T22:26:27Z"}, "message": "ZipFile.java: Implement OPEN_DELETE mode...\n\n    * java/util/zip/ZipFile.java: Implement OPEN_DELETE mode, new constructor,\n    close can delete the file, finalize calls close.\n    * java/util/jar/JarFile.java: Constructor that takes mode now calls super.\n\nFrom-SVN: r36007", "tree": {"sha": "a46a5682294e3e06ba5793c02331a7c8ab8e3167", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a46a5682294e3e06ba5793c02331a7c8ab8e3167"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9ac96ca1f475583f602530b1746add88f0130552", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ac96ca1f475583f602530b1746add88f0130552", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9ac96ca1f475583f602530b1746add88f0130552", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9ac96ca1f475583f602530b1746add88f0130552/comments", "author": null, "committer": null, "parents": [{"sha": "6f09c307172fb7beb8202da1ca8cb44346f4874c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f09c307172fb7beb8202da1ca8cb44346f4874c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f09c307172fb7beb8202da1ca8cb44346f4874c"}], "stats": {"total": 63, "additions": 49, "deletions": 14}, "files": [{"sha": "e3a76e7659e75b973bb1ffe362f48722899cf12a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ac96ca1f475583f602530b1746add88f0130552/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ac96ca1f475583f602530b1746add88f0130552/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=9ac96ca1f475583f602530b1746add88f0130552", "patch": "@@ -1,3 +1,9 @@\n+2000-08-27  Mark Wielaard  <mark@klomp.org>\n+\n+\t* java/util/zip/ZipFile.java: Implement OPEN_DELETE mode, new constructor,\n+\tclose can delete the file, finalize calls close.\n+\t* java/util/jar/JarFile.java: Constructor that takes mode now calls super.\n+\n 2000-08-27  Anthony Green  <green@redhat.com>\n \n \t* java/util/ArrayList.java, java/util/Timer.java,"}, {"sha": "5e0f73b6c3b3a24611ec29b210b1a1bcd1d5e7a7", "filename": "libjava/java/util/jar/JarFile.java", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ac96ca1f475583f602530b1746add88f0130552/libjava%2Fjava%2Futil%2Fjar%2FJarFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ac96ca1f475583f602530b1746add88f0130552/libjava%2Fjava%2Futil%2Fjar%2FJarFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fjar%2FJarFile.java?ref=9ac96ca1f475583f602530b1746add88f0130552", "patch": "@@ -129,28 +129,28 @@ public JarFile(File file, boolean verify) throws FileNotFoundException,\n     }\n \n     /**\n-     * XXX - not yet implemented in java.util.zip.ZipFile\n+     * Creates a new JarFile with the indicated mode, tries to read the\n+     * manifest and if the manifest exists and verify is true verfies it.\n      *\n      * @param file the file to open to open as a jar file\n      * @param verify checks manifest and entries when true and a manifest\n      * exists, when false no checks are made\n-     * @param mode XXX - see ZipFile\n-     * @exception FileNotFoundException XXX\n-     * @exception IOException XXX\n-     * @exception IllegalArgumentException XXX\n+     * @param mode either ZipFile.OPEN_READ or\n+     *             (ZipFile.OPEN_READ | ZipFile.OPEN_DELETE)\n+     * @exception FileNotFoundException if the file does not exist\n+     * @exception IOException if another IO exception occurs while reading\n+     * @exception IllegalArgumentException when given an illegal mode\n      * \n      * @since 1.3\n      */\n     public JarFile(File file, boolean verify, int mode) throws\n                                                     FileNotFoundException,\n                                                     IOException,\n                                                     IllegalArgumentException {\n-        // XXX - For now don't use super(file, mode)\n-        this(file, verify);\n-        /* super(file, mode);\n-           manifest = readManifest();\n-           if (verify)\n-               verify(); */\n+        super(file, mode);\n+        manifest = readManifest();\n+        if (verify)\n+            verify();\n     }\n \n     // Methods"}, {"sha": "bb6eab4714656b002e076cdbb491d5f6e1c73891", "filename": "libjava/java/util/zip/ZipFile.java", "status": "modified", "additions": 32, "deletions": 3, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9ac96ca1f475583f602530b1746add88f0130552/libjava%2Fjava%2Futil%2Fzip%2FZipFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9ac96ca1f475583f602530b1746add88f0130552/libjava%2Fjava%2Futil%2Fzip%2FZipFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FZipFile.java?ref=9ac96ca1f475583f602530b1746add88f0130552", "patch": "@@ -18,15 +18,35 @@\n \n public class ZipFile implements ZipConstants\n {\n+  public static final int OPEN_READ = 1;\n+  public static final int OPEN_DELETE = 4;\n+\n   public ZipFile (String fname) throws IOException\n   {\n-    file = new RandomAccessFile(fname, \"r\");\n-    name = fname;\n-    readDirectory ();\n+    this(new File(fname));\n   }\n \n   public ZipFile (File f) throws IOException\n   {\n+    this(f, OPEN_READ);\n+  }\n+\n+  public ZipFile (File f, int mode) throws IOException\n+  {\n+    if (mode != OPEN_READ && mode != (OPEN_READ | OPEN_DELETE))\n+        throw new IllegalArgumentException\n+            (\"mode can only be OPEN_READ or OPEN_READ | OPEN_DELETE\");\n+\n+    if ((mode & OPEN_DELETE) != 0)\n+      {\n+\tdelete_on_close = f;\n+\t// f.deleteOnExit(); XXX - Not yet implemented in libgcj\n+      }\n+    else\n+      {\n+\tdelete_on_close = null;\n+      }\n+\n     file = new RandomAccessFile(f, \"r\");\n     name = f.getName();\n     readDirectory ();\n@@ -107,6 +127,8 @@ public void close() throws IOException\n     file.close();\n     entries = null;\n     numEntries = 0;\n+    if (delete_on_close != null)\n+\tdelete_on_close.delete();\n   }\n \n   public ZipEntry getEntry(String name)\n@@ -148,6 +170,10 @@ public int size () {\n       return numEntries;\n   }\n \n+  protected void finalize () throws IOException {\n+    close();\n+  }\n+\n   private int readu2 () throws IOException\n   {\n     int byte0 = file.read();\n@@ -173,6 +199,9 @@ private int read4 () throws IOException\n   int numEntries;\n   RandomAccessFile file;\n   String name;\n+  /** File to delete on close or null. */\n+  File delete_on_close;\n+    \n }\n \n final class ZipEnumeration implements java.util.Enumeration"}]}