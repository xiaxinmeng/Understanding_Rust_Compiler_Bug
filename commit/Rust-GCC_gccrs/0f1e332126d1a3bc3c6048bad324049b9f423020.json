{"sha": "0f1e332126d1a3bc3c6048bad324049b9f423020", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGYxZTMzMjEyNmQxYTNiYzNjNjA0OGJhZDMyNDA0OWI5ZjQyMzAyMA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2007-10-26T11:57:46Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2007-10-26T11:57:46Z"}, "message": "re PR c++/33744 (function-style cast and '>' not allowed in template argument)\n\n\tPR c++/33744\n\t* parser.c (cp_parser_parenthesized_expression_list): Set\n\tgreater_than_is_operator_p to true in between the parens.\n\n\t* g++.dg/template/arg6.C: New test.\n\nFrom-SVN: r129648", "tree": {"sha": "0f2100f84eda6d636341fd372ff10793572e611e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0f2100f84eda6d636341fd372ff10793572e611e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0f1e332126d1a3bc3c6048bad324049b9f423020", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f1e332126d1a3bc3c6048bad324049b9f423020", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f1e332126d1a3bc3c6048bad324049b9f423020", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f1e332126d1a3bc3c6048bad324049b9f423020/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9b70c6b0780bc6fef0278d6af9f551bc3f21eaa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9b70c6b0780bc6fef0278d6af9f551bc3f21eaa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9b70c6b0780bc6fef0278d6af9f551bc3f21eaa3"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "cabde879e8fddb5a6407109573e03d0977547178", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f1e332126d1a3bc3c6048bad324049b9f423020/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f1e332126d1a3bc3c6048bad324049b9f423020/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=0f1e332126d1a3bc3c6048bad324049b9f423020", "patch": "@@ -1,3 +1,9 @@\n+2007-10-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/33744\n+\t* parser.c (cp_parser_parenthesized_expression_list): Set\n+\tgreater_than_is_operator_p to true in between the parens.\n+\n 2007-10-26  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR c++/31747"}, {"sha": "0b94375d358a92d191e79796b4ae9d0a0082e1f4", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f1e332126d1a3bc3c6048bad324049b9f423020/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f1e332126d1a3bc3c6048bad324049b9f423020/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=0f1e332126d1a3bc3c6048bad324049b9f423020", "patch": "@@ -4976,6 +4976,7 @@ cp_parser_parenthesized_expression_list (cp_parser* parser,\n   tree expression_list = NULL_TREE;\n   bool fold_expr_p = is_attribute_list;\n   tree identifier = NULL_TREE;\n+  bool saved_greater_than_is_operator_p;\n \n   /* Assume all the expressions will be constant.  */\n   if (non_constant_p)\n@@ -4984,6 +4985,12 @@ cp_parser_parenthesized_expression_list (cp_parser* parser,\n   if (!cp_parser_require (parser, CPP_OPEN_PAREN, \"`('\"))\n     return error_mark_node;\n \n+  /* Within a parenthesized expression, a `>' token is always\n+     the greater-than operator.  */\n+  saved_greater_than_is_operator_p\n+    = parser->greater_than_is_operator_p;\n+  parser->greater_than_is_operator_p = true;\n+\n   /* Consume expressions until there are no more.  */\n   if (cp_lexer_next_token_is_not (parser->lexer, CPP_CLOSE_PAREN))\n     while (true)\n@@ -5069,9 +5076,16 @@ cp_parser_parenthesized_expression_list (cp_parser* parser,\n       if (ending < 0)\n \tgoto get_comma;\n       if (!ending)\n-\treturn error_mark_node;\n+\t{\n+\t  parser->greater_than_is_operator_p\n+\t    = saved_greater_than_is_operator_p;\n+\t  return error_mark_node;\n+\t}\n     }\n \n+  parser->greater_than_is_operator_p\n+    = saved_greater_than_is_operator_p;\n+\n   /* We built up the list in reverse order so we must reverse it now.  */\n   expression_list = nreverse (expression_list);\n   if (identifier)"}, {"sha": "0293ed0bdac9e4fa23023803d04ae1d9be3c4f89", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f1e332126d1a3bc3c6048bad324049b9f423020/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f1e332126d1a3bc3c6048bad324049b9f423020/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=0f1e332126d1a3bc3c6048bad324049b9f423020", "patch": "@@ -1,3 +1,8 @@\n+2007-10-26  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/33744\n+\t* g++.dg/template/arg6.C: New test.\n+\n 2007-10-26  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR c++/31747"}, {"sha": "ef05abaeedaef225212b9ef2992156f00c67d7ce", "filename": "gcc/testsuite/g++.dg/template/arg6.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0f1e332126d1a3bc3c6048bad324049b9f423020/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farg6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0f1e332126d1a3bc3c6048bad324049b9f423020/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farg6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Farg6.C?ref=0f1e332126d1a3bc3c6048bad324049b9f423020", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/33744\n+// { dg-do run }\n+\n+template <bool B> struct A { bool b; A() : b(B) {}; };\n+A<bool(1)> a;\n+A<bool(1<2)> b;\n+A<(bool)(2>1)> c;\n+A<bool((2>1))> d;\n+A<bool(2>1)> e;\n+\n+int\n+main ()\n+{\n+  return (a.b && b.b && c.b && d.b && e.b) ? 0 : 1;\n+}"}]}