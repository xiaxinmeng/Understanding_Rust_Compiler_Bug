{"sha": "6b5ba2ce344516cca0db965ae63b1988efa2668e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmI1YmEyY2UzNDQ1MTZjY2EwZGI5NjVhZTYzYjE5ODhlZmEyNjY4ZQ==", "commit": {"author": {"name": "Bryce McKinlay", "email": "bryce@albatross.co.nz", "date": "1999-11-01T01:15:37Z"}, "committer": {"name": "Bryce McKinlay", "email": "bryce@gcc.gnu.org", "date": "1999-11-01T01:15:37Z"}, "message": "PrintStream (PrintStream): Fix illegal usage of \"this\" before \"super\".\n\n1999-11-01  Bryce McKinlay  <bryce@albatross.co.nz>\n\n        * java/io/PrintStream (PrintStream): Fix illegal usage of \"this\"\n          before \"super\".\n        * java/io/OutputStreamWriter (OutputStreamWriter): ditto.\n        * java/io/InputStreamReader (InputStreamReader): ditto.\n\nFrom-SVN: r30300", "tree": {"sha": "09c6d1054b21dc2ee32e4024ae07ff7843f8177a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09c6d1054b21dc2ee32e4024ae07ff7843f8177a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6b5ba2ce344516cca0db965ae63b1988efa2668e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b5ba2ce344516cca0db965ae63b1988efa2668e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6b5ba2ce344516cca0db965ae63b1988efa2668e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6b5ba2ce344516cca0db965ae63b1988efa2668e/comments", "author": null, "committer": null, "parents": [{"sha": "14a774a9d22db91fb6387cb8eb61060b61782f29", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14a774a9d22db91fb6387cb8eb61060b61782f29", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14a774a9d22db91fb6387cb8eb61060b61782f29"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "fb71da38449e5c99c709d787de0edd8bb16e2798", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b5ba2ce344516cca0db965ae63b1988efa2668e/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b5ba2ce344516cca0db965ae63b1988efa2668e/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6b5ba2ce344516cca0db965ae63b1988efa2668e", "patch": "@@ -1,3 +1,10 @@\n+1999-11-01  Bryce McKinlay  <bryce@albatross.co.nz>\n+\n+\t* java/io/PrintStream (PrintStream): Fix illegal usage of \"this\" \n+\t  before \"super\".\n+\t* java/io/OutputStreamWriter (OutputStreamWriter): ditto.\n+\t* java/io/InputStreamReader (InputStreamReader): ditto.\n+\n 1999-10-22  Tom Tromey  <tromey@cygnus.com>\n \n \t* Makefile.in: Rebuilt."}, {"sha": "f8f5dec4e368852a2ad772238ae5a7d6e774f31a", "filename": "libjava/java/io/InputStreamReader.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b5ba2ce344516cca0db965ae63b1988efa2668e/libjava%2Fjava%2Fio%2FInputStreamReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b5ba2ce344516cca0db965ae63b1988efa2668e/libjava%2Fjava%2Fio%2FInputStreamReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FInputStreamReader.java?ref=6b5ba2ce344516cca0db965ae63b1988efa2668e", "patch": "@@ -44,9 +44,11 @@ public InputStreamReader(InputStream in, String enc)\n \n   private InputStreamReader(InputStream in, BytesToUnicode decoder)\n   {\n-    super((this.in = (in instanceof BufferedInputStream\n-\t\t      ? (BufferedInputStream) in\n-\t\t      : new BufferedInputStream(in, 250))));\n+    this.in = in instanceof BufferedInputStream\n+              ? (BufferedInputStream) in\n+              : new BufferedInputStream(in, 250);\n+    /* Don't need to call super(in) here as long as the lock gets set. */\n+    this.lock = in;\n     converter = decoder;\n     converter.setInput(this.in.buf, 0, 0);\n   }"}, {"sha": "23a974e53da07c740ced04061d90c2631e8efb9b", "filename": "libjava/java/io/OutputStreamWriter.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b5ba2ce344516cca0db965ae63b1988efa2668e/libjava%2Fjava%2Fio%2FOutputStreamWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b5ba2ce344516cca0db965ae63b1988efa2668e/libjava%2Fjava%2Fio%2FOutputStreamWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FOutputStreamWriter.java?ref=6b5ba2ce344516cca0db965ae63b1988efa2668e", "patch": "@@ -32,11 +32,13 @@ public class OutputStreamWriter extends Writer\n \n   private OutputStreamWriter(OutputStream out, UnicodeToBytes encoder)\n   {\n-    super((this.out = (out instanceof BufferedOutputStream\n-\t\t       ? (BufferedOutputStream) out\n-\t\t       : new BufferedOutputStream(out, 250))));\n+    this.out = out instanceof BufferedOutputStream \n+\t       ? (BufferedOutputStream) out\n+\t       : new BufferedOutputStream(out, 250);\n+    /* Don't need to call super(out) here as long as the lock gets set. */\n+    this.lock = out;\n     this.converter = encoder;\n-  } \n+  }\n \n   public OutputStreamWriter(OutputStream out, String enc)\n    throws UnsupportedEncodingException"}, {"sha": "f024a69a0ed6644cf1f93f5432b6ec415f7334f5", "filename": "libjava/java/io/PrintStream.java", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6b5ba2ce344516cca0db965ae63b1988efa2668e/libjava%2Fjava%2Fio%2FPrintStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6b5ba2ce344516cca0db965ae63b1988efa2668e/libjava%2Fjava%2Fio%2FPrintStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fio%2FPrintStream.java?ref=6b5ba2ce344516cca0db965ae63b1988efa2668e", "patch": "@@ -238,9 +238,16 @@ public PrintStream (OutputStream out)\n \n   public PrintStream (OutputStream out, boolean af)\n   {\n-    super ((this.out = (out instanceof BufferedOutputStream\n-\t\t\t ? (BufferedOutputStream) out\n-\t\t\t : new BufferedOutputStream(out, 250))));\n+    super(out);\n+    if (out instanceof BufferedOutputStream)\n+      this.out = (BufferedOutputStream) out;\n+    else\n+      {\n+        this.out = new BufferedOutputStream(out, 250);\n+\t/* PrintStream redefines \"out\". Explicitly reset FilterOutputStream's\n+\t * \"out\" so that they're referring to the same thing. */\n+\tsuper.out = this.out;    \n+      }\n     converter = UnicodeToBytes.getDefaultEncoder();\n     error = false;\n     auto_flush = af;"}]}