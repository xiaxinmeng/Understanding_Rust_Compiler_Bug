{"sha": "a1b680597178df866e6de80444695fab82b90492", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTFiNjgwNTk3MTc4ZGY4NjZlNmRlODA0NDQ2OTVmYWI4MmI5MDQ5Mg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2019-11-04T21:14:22Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2019-11-04T21:14:22Z"}, "message": "[D] Remove unchecked to_constant in VECTOR_TYPE handling\n\nThe SVE port now tries to register variable-length VECTOR_TYPEs\nat start-up, so it's no longer possible to use the asserting\nto_constant on the number of vector elements.  This patch punts\non variable element counts instead, just like we do for other\nthings that the frontend doesn't recognise.\n\nThe brace indentation matches the surrounding style.\n\n2019-11-04  Richard Sandiford  <richard.sandiford@arm.com>\n\ngcc/d/\n\t* d-builtins.cc (build_frontend_type): Cope with variable\n\tTYPE_VECTOR_SUBPARTS.\n\nFrom-SVN: r277793", "tree": {"sha": "60cbd63325d8259537e2405caa2c2c9021bcd475", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/60cbd63325d8259537e2405caa2c2c9021bcd475"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a1b680597178df866e6de80444695fab82b90492", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1b680597178df866e6de80444695fab82b90492", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1b680597178df866e6de80444695fab82b90492", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1b680597178df866e6de80444695fab82b90492/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "63b7a614dddaddea738de266f11cbcdeee01076c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63b7a614dddaddea738de266f11cbcdeee01076c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63b7a614dddaddea738de266f11cbcdeee01076c"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "2591b4c727f8833fa1b8b28b7800ae5717a96a16", "filename": "gcc/d/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1b680597178df866e6de80444695fab82b90492/gcc%2Fd%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1b680597178df866e6de80444695fab82b90492/gcc%2Fd%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2FChangeLog?ref=a1b680597178df866e6de80444695fab82b90492", "patch": "@@ -1,3 +1,8 @@\n+2019-11-04  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* d-builtins.cc (build_frontend_type): Cope with variable\n+\tTYPE_VECTOR_SUBPARTS.\n+\n 2019-08-23  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/91283"}, {"sha": "2ad0f8b87400cd4ad4b5ee806d6117cad093dc9e", "filename": "gcc/d/d-builtins.cc", "status": "modified", "additions": 14, "deletions": 11, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a1b680597178df866e6de80444695fab82b90492/gcc%2Fd%2Fd-builtins.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a1b680597178df866e6de80444695fab82b90492/gcc%2Fd%2Fd-builtins.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-builtins.cc?ref=a1b680597178df866e6de80444695fab82b90492", "patch": "@@ -197,20 +197,23 @@ build_frontend_type (tree type)\n       break;\n \n     case VECTOR_TYPE:\n+    {\n+      unsigned HOST_WIDE_INT nunits;\n+      if (!TYPE_VECTOR_SUBPARTS (type).is_constant (&nunits))\n+\tbreak;\n+\n       dtype = build_frontend_type (TREE_TYPE (type));\n-      if (dtype)\n-\t{\n-\t  poly_uint64 nunits = TYPE_VECTOR_SUBPARTS (type);\n-\t  dtype = dtype->sarrayOf (nunits.to_constant ())->addMod (mod);\n+      if (!dtype)\n+\tbreak;\n \n-\t  if (dtype->nextOf ()->isTypeBasic () == NULL)\n-\t    break;\n+      dtype = dtype->sarrayOf (nunits)->addMod (mod);\n+      if (dtype->nextOf ()->isTypeBasic () == NULL)\n+\tbreak;\n \n-\t  dtype = (TypeVector::create (Loc (), dtype))->addMod (mod);\n-\t  builtin_converted_decls.safe_push (builtin_data (dtype, type));\n-\t  return dtype;\n-\t}\n-      break;\n+      dtype = (TypeVector::create (Loc (), dtype))->addMod (mod);\n+      builtin_converted_decls.safe_push (builtin_data (dtype, type));\n+      return dtype;\n+    }\n \n     case RECORD_TYPE:\n     {"}]}