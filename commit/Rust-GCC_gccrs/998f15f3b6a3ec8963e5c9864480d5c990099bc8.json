{"sha": "998f15f3b6a3ec8963e5c9864480d5c990099bc8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk4ZjE1ZjNiNmEzZWM4OTYzZTVjOTg2NDQ4MGQ1Yzk5MDA5OWJjOA==", "commit": {"author": {"name": "Senthil Kumar Selvaraj", "email": "senthil_kumar.selvaraj@atmel.com", "date": "2015-12-17T16:55:39Z"}, "committer": {"name": "Denis Chertykov", "email": "denisc@gcc.gnu.org", "date": "2015-12-17T16:55:39Z"}, "message": "avr.h (MOVE_MAX): Set value to 1.\n\n        * config/avr/avr.h (MOVE_MAX): Set value to 1.\n        (MOVE_MAX_PIECES): Define.\n        (MOVE_RATIO): Define.\n        * config/avr/avr.c (TARGET_USE_BY_PIECES_INFRASTRUCTURE_P):\n        Provide target hook.\n        (avr_use_by_pieces_infrastructure_p): New function.\n\nFrom-SVN: r231782", "tree": {"sha": "48f5a33661807489ccc663e4534c63ea77d68b2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48f5a33661807489ccc663e4534c63ea77d68b2d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/998f15f3b6a3ec8963e5c9864480d5c990099bc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/998f15f3b6a3ec8963e5c9864480d5c990099bc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/998f15f3b6a3ec8963e5c9864480d5c990099bc8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/998f15f3b6a3ec8963e5c9864480d5c990099bc8/comments", "author": null, "committer": null, "parents": [{"sha": "62f9ab0d432554c33c8d9c449ebcae73b2789812", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62f9ab0d432554c33c8d9c449ebcae73b2789812", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62f9ab0d432554c33c8d9c449ebcae73b2789812"}], "stats": {"total": 53, "additions": 51, "deletions": 2}, "files": [{"sha": "4e5c967e62974abc700a2856238a9e4e28798cde", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/998f15f3b6a3ec8963e5c9864480d5c990099bc8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/998f15f3b6a3ec8963e5c9864480d5c990099bc8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=998f15f3b6a3ec8963e5c9864480d5c990099bc8", "patch": "@@ -1,3 +1,12 @@\n+2015-12-17  Senthil Kumar Selvaraj  <senthil_kumar.selvaraj@atmel.com>\n+\n+\t* config/avr/avr.h (MOVE_MAX): Set value to 1.\n+\t(MOVE_MAX_PIECES): Define.\n+\t(MOVE_RATIO): Define.\n+\t* config/avr/avr.c (TARGET_USE_BY_PIECES_INFRASTRUCTURE_P):\n+\tProvide target hook.\n+\t(avr_use_by_pieces_infrastructure_p): New function.\n+\n 2015-12-17  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n \n \t* config.gcc: mark *-interix* as obsolete.\n@@ -349,7 +358,7 @@\n \t* configure.ac: Remove checks for functions that exist in isl 0.13\n \tor later.\n \t* graphite-isl-ast-to-gimple.c: Remove #ifdefs and code for isl 0.12.\n-        * graphite-optimize-isl.c: Same.\n+\t* graphite-optimize-isl.c: Same.\n \t* graphite-poly.c: Same.\n \t* graphite-sese-to-poly.c: Same.\n \t* graphite.h: Add comment for isl 0.14."}, {"sha": "9cc95dbc78245bf38812f29cf3aa89e123ba13ea", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/998f15f3b6a3ec8963e5c9864480d5c990099bc8/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/998f15f3b6a3ec8963e5c9864480d5c990099bc8/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=998f15f3b6a3ec8963e5c9864480d5c990099bc8", "patch": "@@ -2431,6 +2431,27 @@ avr_print_operand (FILE *file, rtx x, int code)\n }\n \n \n+/* Implement TARGET_USE_BY_PIECES_INFRASTRUCTURE_P.  */\n+\n+/* Prefer sequence of loads/stores for moves of size upto\n+   two - two pairs of load/store instructions are always better\n+   than the 5 instruction sequence for a loop (1 instruction\n+   for loop counter setup, and 4 for the body of the loop). */\n+\n+static bool\n+avr_use_by_pieces_infrastructure_p (unsigned HOST_WIDE_INT size,\n+\t\t\t\t     unsigned int align ATTRIBUTE_UNUSED,\n+\t\t\t\t     enum by_pieces_operation op,\n+\t\t\t\t     bool speed_p)\n+{\n+\n+  if (op != MOVE_BY_PIECES || (speed_p && (size > (MOVE_MAX_PIECES))))\n+    return default_use_by_pieces_infrastructure_p (size, align, op, speed_p);\n+\n+  return size <= (MOVE_MAX_PIECES);\n+}\n+\n+\n /* Worker function for `NOTICE_UPDATE_CC'.  */\n /* Update the condition code in the INSN.  */\n \n@@ -13763,6 +13784,10 @@ avr_fold_builtin (tree fndecl, int n_args ATTRIBUTE_UNUSED, tree *arg,\n #undef  TARGET_PRINT_OPERAND_PUNCT_VALID_P\n #define TARGET_PRINT_OPERAND_PUNCT_VALID_P avr_print_operand_punct_valid_p\n \n+#undef TARGET_USE_BY_PIECES_INFRASTRUCTURE_P\n+#define TARGET_USE_BY_PIECES_INFRASTRUCTURE_P \\\n+  avr_use_by_pieces_infrastructure_p\n+\n struct gcc_target targetm = TARGET_INITIALIZER;\n \n \f"}, {"sha": "9872884458a59b4888d2f713f45509cf86b5df2a", "filename": "gcc/config/avr/avr.h", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/998f15f3b6a3ec8963e5c9864480d5c990099bc8/gcc%2Fconfig%2Favr%2Favr.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/998f15f3b6a3ec8963e5c9864480d5c990099bc8/gcc%2Fconfig%2Favr%2Favr.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.h?ref=998f15f3b6a3ec8963e5c9864480d5c990099bc8", "patch": "@@ -453,7 +453,22 @@ typedef struct avr_args\n \n #undef WORD_REGISTER_OPERATIONS\n \n-#define MOVE_MAX 4\n+/* Can move only a single byte from memory to reg in a\n+   single instruction. */\n+\n+#define MOVE_MAX 1\n+\n+/* Allow upto two bytes moves to occur using by_pieces\n+   infrastructure */\n+\n+#define MOVE_MAX_PIECES 2\n+\n+/* Set MOVE_RATIO to 3 to allow memory moves upto 4 bytes to happen\n+   by pieces when optimizing for speed, like it did when MOVE_MAX_PIECES\n+   was 4. When optimizing for size, allow memory moves upto 2 bytes. \n+   Also see avr_use_by_pieces_infrastructure_p. */\n+\n+#define MOVE_RATIO(speed) ((speed) ? 3 : 2)\n \n #define TRULY_NOOP_TRUNCATION(OUTPREC, INPREC) 1\n "}]}