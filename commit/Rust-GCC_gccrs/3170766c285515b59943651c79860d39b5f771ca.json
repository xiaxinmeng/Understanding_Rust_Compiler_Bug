{"sha": "3170766c285515b59943651c79860d39b5f771ca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzE3MDc2NmMyODU1MTViNTk5NDM2NTFjNzk4NjBkMzliNWY3NzFjYQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2013-10-17T19:12:57Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "2013-10-17T19:12:57Z"}, "message": "rs6000.c (enum rs6000_reload_reg_type): Add new fields to the reg_addr array that describes the valid addressing mode...\n\n2013-10-17  Michael Meissner  <meissner@linux.vnet.ibm.com>\n\n\t* config/rs6000/rs6000.c (enum rs6000_reload_reg_type): Add new\n\tfields to the reg_addr array that describes the valid addressing\n\tmode for any register, general purpose registers, floating point\n\tregisters, and Altivec registers.\n\t(FIRST_RELOAD_REG_CLASS): Likewise.\n\t(LAST_RELOAD_REG_CLASS): Likewise.\n\t(struct reload_reg_map_type): Likewise.\n\t(reload_reg_map_type): Likewise.\n\t(RELOAD_REG_VALID): Likewise.\n\t(RELOAD_REG_MULTIPLE): Likewise.\n\t(RELOAD_REG_INDEXED): Likewise.\n\t(RELOAD_REG_OFFSET): Likewise.\n\t(RELOAD_REG_PRE_INCDEC): Likewise.\n\t(RELOAD_REG_PRE_MODIFY): Likewise.\n\t(reg_addr): Likewise.\n\t(mode_supports_pre_incdec_p): New helper functions to say whether\n\ta given mode supports PRE_INC, PRE_DEC, and PRE_MODIFY.\n\t(mode_supports_pre_modify_p): Likewise.\n\t(rs6000_debug_vector_unit): Rearrange the -mdebug=reg output to\n\tprint the valid address mode bits for each mode.\n\t(rs6000_debug_print_mode): Likewise.\n\t(rs6000_debug_reg_global): Likewise.\n\t(rs6000_setup_reg_addr_masks): New function to set up the address\n\tmask bits for each type.\n\t(rs6000_init_hard_regno_mode_ok): Use memset to clear arrays.\n\tCall rs6000_setup_reg_addr_masks to set up the address mask bits.\n\t(rs6000_legitimate_address_p): Use mode_supports_pre_incdec_p and\n\tmode_supports_pre_modify_p to determine if PRE_INC, PRE_DEC, and\n\tPRE_MODIFY are supported.\n\t(rs6000_output_move_128bit): Change to use {src,dest}_vmx_p for altivec\n\tregisters, instead of {src,dest}_av_p.\n\t(rs6000_print_options_internal): Tweak the debug output slightly.\n\nFrom-SVN: r203791", "tree": {"sha": "d290f27d2b6065d1b955ba5787a2bfc25b3be0d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d290f27d2b6065d1b955ba5787a2bfc25b3be0d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3170766c285515b59943651c79860d39b5f771ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3170766c285515b59943651c79860d39b5f771ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3170766c285515b59943651c79860d39b5f771ca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3170766c285515b59943651c79860d39b5f771ca/comments", "author": null, "committer": null, "parents": [{"sha": "5845f602f0e7b2d423064b6871a03e4d70cf5bcd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5845f602f0e7b2d423064b6871a03e4d70cf5bcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5845f602f0e7b2d423064b6871a03e4d70cf5bcd"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "0c53f55f4bcff4700763f8c39cb12131d3556109", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3170766c285515b59943651c79860d39b5f771ca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3170766c285515b59943651c79860d39b5f771ca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3170766c285515b59943651c79860d39b5f771ca", "patch": "@@ -1,4 +1,4 @@\n-2013-10-07  Michael Meissner  <meissner@linux.vnet.ibm.com>\n+2013-10-17  Michael Meissner  <meissner@linux.vnet.ibm.com>\n \n \t* config/rs6000/rs6000.c (enum rs6000_reload_reg_type): Add new\n \tfields to the reg_addr array that describes the valid addressing\n@@ -29,6 +29,8 @@\n \t(rs6000_legitimate_address_p): Use mode_supports_pre_incdec_p and\n \tmode_supports_pre_modify_p to determine if PRE_INC, PRE_DEC, and\n \tPRE_MODIFY are supported.\n+\t(rs6000_output_move_128bit): Change to use {src,dest}_vmx_p for altivec\n+\tregisters, instead of {src,dest}_av_p.\n \t(rs6000_print_options_internal): Tweak the debug output slightly.\n \n 2013-10-17  Uros Bizjak  <ubizjak@gmail.com>"}]}