{"sha": "ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWJjOGYwYmIzYThhYzc0NWRkNzEwYzdjZTVjYzkxOGQ5OTg1NjBjNg==", "commit": {"author": {"name": "Jan Hubicka", "email": "hubicka@ucw.cz", "date": "2015-02-03T16:57:20Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2015-02-03T16:57:20Z"}, "message": "ipa-inline-analysis.c (simple_edge_hints): Fix check for cross-module inlining.\n\n\t* ipa-inline-analysis.c (simple_edge_hints): Fix check for\n\tcross-module inlining.\n\t* cgraph.h (cgraph_node): Add flag merged.\n\t* ipa-icf.c (sem_function::merge): Maintain it.\n\n\t* lto-symtab.c (lto_cgraph_replace_node): Maintain merged flag.\n\nFrom-SVN: r220372", "tree": {"sha": "408b784036755534b78b84759445181515b9be75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/408b784036755534b78b84759445181515b9be75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6/comments", "author": null, "committer": null, "parents": [{"sha": "901e59b2bd947255b6a3fdacf387f37b4440aa0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/901e59b2bd947255b6a3fdacf387f37b4440aa0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/901e59b2bd947255b6a3fdacf387f37b4440aa0e"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "b5dcf0cf51bb60b7c05737a466e7cad7066e4926", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6", "patch": "@@ -1,3 +1,10 @@\n+2015-02-03  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* ipa-inline-analysis.c (simple_edge_hints): Fix check for\n+\tcross-module inlining.\n+\t* cgraph.h (cgraph_node): Add flag merged.\n+\t* ipa-icf.c (sem_function::merge): Maintain it.\n+\n 2015-02-03  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* config/arm/arm.c (thumb2_reorg): Test UNARY_P and BINARY_P"}, {"sha": "0fdb459ab00917b483a519d1eeed3e92fac18714", "filename": "gcc/cgraph.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6/gcc%2Fcgraph.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6/gcc%2Fcgraph.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcgraph.h?ref=ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6", "patch": "@@ -1296,6 +1296,8 @@ struct GTY((tag (\"SYMTAB_FUNCTION\"))) cgraph_node : public symtab_node {\n      other operation that could make previously non-trapping memory\n      accesses trapping.  */\n   unsigned nonfreeing_fn : 1;\n+  /* True if there was multiple COMDAT bodies merged by lto-symtab.  */\n+  unsigned merged : 1;\n };\n \n /* A cgraph node set is a collection of cgraph nodes.  A cgraph node"}, {"sha": "cf5e5d929687b0f96e73701374b59cb00a1328c3", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6", "patch": "@@ -711,6 +711,10 @@ sem_function::merge (sem_item *alias_item)\n \t}\n \n       alias->icf_merged = true;\n+      if (local_original->lto_file_data\n+\t  && alias->lto_file_data\n+\t  && local_original->lto_file_data != alias->lto_file_data)\n+      local_original->merged = true;\n \n       /* The alias function is removed if symbol address\n          does not matter.  */\n@@ -725,6 +729,10 @@ sem_function::merge (sem_item *alias_item)\n   else if (create_alias)\n     {\n       alias->icf_merged = true;\n+      if (local_original->lto_file_data\n+\t  && alias->lto_file_data\n+\t  && local_original->lto_file_data != alias->lto_file_data)\n+      local_original->merged = true;\n \n       /* Remove the function's body.  */\n       ipa_merge_profiles (original, alias);\n@@ -762,6 +770,10 @@ sem_function::merge (sem_item *alias_item)\n         }\n \n       alias->icf_merged = true;\n+      if (local_original->lto_file_data\n+\t  && alias->lto_file_data\n+\t  && local_original->lto_file_data != alias->lto_file_data)\n+      local_original->merged = true;\n       ipa_merge_profiles (local_original, alias, true);\n       alias->create_wrapper (local_original);\n "}, {"sha": "a628a9e987d8b81a406ebe28a09c3fa1433437b5", "filename": "gcc/ipa-inline-analysis.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6/gcc%2Fipa-inline-analysis.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6/gcc%2Fipa-inline-analysis.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline-analysis.c?ref=ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6", "patch": "@@ -3702,13 +3702,16 @@ simple_edge_hints (struct cgraph_edge *edge)\n   int hints = 0;\n   struct cgraph_node *to = (edge->caller->global.inlined_to\n \t\t\t    ? edge->caller->global.inlined_to : edge->caller);\n+  struct cgraph_node *callee = edge->callee->ultimate_alias_target ();\n   if (inline_summaries->get (to)->scc_no\n-      && inline_summaries->get (to)->scc_no == inline_summaries->get (edge->callee)->scc_no\n+      && inline_summaries->get (to)->scc_no\n+\t == inline_summaries->get (callee)->scc_no\n       && !edge->recursive_p ())\n     hints |= INLINE_HINT_same_scc;\n \n-  if (to->lto_file_data && edge->callee->lto_file_data\n-      && to->lto_file_data != edge->callee->lto_file_data)\n+  if (callee->lto_file_data && edge->caller->lto_file_data\n+      && edge->caller->lto_file_data != callee->lto_file_data\n+      && !callee->merged)\n     hints |= INLINE_HINT_cross_module;\n \n   return hints;"}, {"sha": "87f1988ac0b907c23f522a43c62a9ed132298ae9", "filename": "gcc/lto/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6/gcc%2Flto%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6/gcc%2Flto%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2FChangeLog?ref=ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6", "patch": "@@ -1,3 +1,7 @@\n+2015-02-03  Jan Hubicka  <hubicka@ucw.cz>\n+\n+\t* lto-symtab.c (lto_cgraph_replace_node): Maintain merged flag.\n+\n 2015-01-30  Joseph Myers  <joseph@codesourcery.com>\n \n \t* lto-object.c, lto-symtab.c, lto.c: All callers of fatal_error"}, {"sha": "c00fd87483a0d9dd6dd03fc014e273ba468e9c0f", "filename": "gcc/lto/lto-symtab.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6/gcc%2Flto%2Flto-symtab.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6/gcc%2Flto%2Flto-symtab.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto%2Flto-symtab.c?ref=ebc8f0bb3a8ac745dd710c7ce5cc918d998560c6", "patch": "@@ -88,6 +88,8 @@ lto_cgraph_replace_node (struct cgraph_node *node,\n       gcc_assert (!prevailing_node->global.inlined_to);\n       prevailing_node->mark_address_taken ();\n     }\n+  if (node->definition && prevailing_node->definition)\n+    prevailing_node->merged = true;\n \n   /* Redirect all incoming edges.  */\n   compatible_p"}]}