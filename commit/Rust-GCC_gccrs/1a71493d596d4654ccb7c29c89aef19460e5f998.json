{"sha": "1a71493d596d4654ccb7c29c89aef19460e5f998", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE3MTQ5M2Q1OTZkNDY1NGNjYjdjMjljODlhZWYxOTQ2MGU1Zjk5OA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-10-31T08:10:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-10-31T08:10:58Z"}, "message": "tree-eh.c (replace_trapping_overflow): Simplify ABS_EXPR case using ABSU_EXPR.\n\n2018-10-31  Richard Biener  <rguenther@suse.de>\n\n\t* tree-eh.c (replace_trapping_overflow): Simplify ABS_EXPR case\n\tusing ABSU_EXPR.\n\nFrom-SVN: r265654", "tree": {"sha": "f437d4a094b4eb237f8f75ed0bb8f8f1f62fb312", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f437d4a094b4eb237f8f75ed0bb8f8f1f62fb312"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a71493d596d4654ccb7c29c89aef19460e5f998", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a71493d596d4654ccb7c29c89aef19460e5f998", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a71493d596d4654ccb7c29c89aef19460e5f998", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a71493d596d4654ccb7c29c89aef19460e5f998/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2e9d500e4ec1da287d34f34c55c1ca8fe4abaa3a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e9d500e4ec1da287d34f34c55c1ca8fe4abaa3a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e9d500e4ec1da287d34f34c55c1ca8fe4abaa3a"}], "stats": {"total": 29, "additions": 8, "deletions": 21}, "files": [{"sha": "660bafb20c0427d4c3274ff104b41eb6c498d719", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a71493d596d4654ccb7c29c89aef19460e5f998/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a71493d596d4654ccb7c29c89aef19460e5f998/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1a71493d596d4654ccb7c29c89aef19460e5f998", "patch": "@@ -1,3 +1,8 @@\n+2018-10-31  Richard Biener  <rguenther@suse.de>\n+\n+\t* tree-eh.c (replace_trapping_overflow): Simplify ABS_EXPR case\n+\tusing ABSU_EXPR.\n+\n 2018-10-31 Sameera Deshpande <sameera.deshpande@linaro.org>\n \n \t* config/aarch64/aarch64-cores.def (saphira): Use saphira pipeline."}, {"sha": "61414b3c78ecfa57aa5dd164dcd29bc62414f7e9", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 3, "deletions": 21, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a71493d596d4654ccb7c29c89aef19460e5f998/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a71493d596d4654ccb7c29c89aef19460e5f998/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=1a71493d596d4654ccb7c29c89aef19460e5f998", "patch": "@@ -2759,27 +2759,9 @@ replace_trapping_overflow (tree *tp, int *walk_subtrees, void *data)\n \n       if (TREE_CODE (*tp) == ABS_EXPR)\n \t{\n-\t  tree op = TREE_OPERAND (*tp, 0);\n-\t  op = save_expr (op);\n-\t  /* save_expr skips simple arithmetics, which is undesirable\n-\t     here, if it might trap due to flag_trapv.  We need to\n-\t     force a SAVE_EXPR in the COND_EXPR condition, to evaluate\n-\t     it before the comparison.  */\n-\t  if (EXPR_P (op)\n-\t      && TREE_CODE (op) != SAVE_EXPR\n-\t      && walk_tree (&op, find_trapping_overflow, NULL, NULL))\n-\t    {\n-\t      op = build1_loc (EXPR_LOCATION (op), SAVE_EXPR, type, op);\n-\t      TREE_SIDE_EFFECTS (op) = 1;\n-\t    }\n-\t  /* Change abs (op) to op < 0 ? -op : op and handle the NEGATE_EXPR\n-\t     like other signed integer trapping operations.  */\n-\t  tree cond = fold_build2 (LT_EXPR, boolean_type_node,\n-\t\t\t\t   op, build_int_cst (type, 0));\n-\t  tree neg = fold_build1 (NEGATE_EXPR, utype,\n-\t\t\t\t  fold_convert (utype, op));\n-\t  *tp = fold_build3 (COND_EXPR, type, cond,\n-\t\t\t     fold_convert (type, neg), op);\n+\t  TREE_SET_CODE (*tp, ABSU_EXPR);\n+\t  TREE_TYPE (*tp) = utype;\n+\t  *tp = fold_convert (type, *tp);\n \t}\n       else\n \t{"}]}