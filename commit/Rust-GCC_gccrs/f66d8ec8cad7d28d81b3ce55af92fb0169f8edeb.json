{"sha": "f66d8ec8cad7d28d81b3ce55af92fb0169f8edeb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjY2ZDhlYzhjYWQ3ZDI4ZDgxYjNjZTU1YWY5MmZiMDE2OWY4ZWRlYg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-04-09T19:51:08Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-04-09T19:51:08Z"}, "message": "re PR tree-optimization/65709 (Bad code for LZ4 decompression with -O3 on x86_64)\n\n\tPR tree-optimization/65709\n\t* ubsan.c (instrument_mem_ref): Use TREE_TYPE (base) instead of\n\tTREE_TYPE (TREE_TYPE (t)).\n\n\t* c-c++-common/ubsan/align-9.c: New test.\n\nFrom-SVN: r221958", "tree": {"sha": "56c73dc57db10b175afc7f8555c35f76881ce281", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/56c73dc57db10b175afc7f8555c35f76881ce281"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f66d8ec8cad7d28d81b3ce55af92fb0169f8edeb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f66d8ec8cad7d28d81b3ce55af92fb0169f8edeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f66d8ec8cad7d28d81b3ce55af92fb0169f8edeb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f66d8ec8cad7d28d81b3ce55af92fb0169f8edeb/comments", "author": null, "committer": null, "parents": [{"sha": "8fd827b8e58b04cdefeb3d5c4de4d53566fdc3ff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8fd827b8e58b04cdefeb3d5c4de4d53566fdc3ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8fd827b8e58b04cdefeb3d5c4de4d53566fdc3ff"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "cedbd18db9d493541ed597b2b660fc22b7557cd0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f66d8ec8cad7d28d81b3ce55af92fb0169f8edeb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f66d8ec8cad7d28d81b3ce55af92fb0169f8edeb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f66d8ec8cad7d28d81b3ce55af92fb0169f8edeb", "patch": "@@ -1,3 +1,9 @@\n+2015-04-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/65709\n+\t* ubsan.c (instrument_mem_ref): Use TREE_TYPE (base) instead of\n+\tTREE_TYPE (TREE_TYPE (t)).\n+\n 2015-04-09  Vladimir Makarov  <vmakarov@redhat.com>\n \n \tPR target/65710"}, {"sha": "4be085d3bbe018d6d4545da83abaec42a9c66f26", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f66d8ec8cad7d28d81b3ce55af92fb0169f8edeb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f66d8ec8cad7d28d81b3ce55af92fb0169f8edeb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f66d8ec8cad7d28d81b3ce55af92fb0169f8edeb", "patch": "@@ -1,7 +1,12 @@\n+2015-04-09  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR tree-optimization/65709\n+\t* c-c++-common/ubsan/align-9.c: New test.\n+\n 2013-04-09  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/56852\n-\t* gfortran.dg/pr56852.f90 : New test\n+\t* gfortran.dg/pr56852.f90: New test.\n \n 2015-04-09  Marek Polacek  <polacek@redhat.com>\n \t    Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "24cba94f277f59f4dceb1899061d88518e14d8aa", "filename": "gcc/testsuite/c-c++-common/ubsan/align-9.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f66d8ec8cad7d28d81b3ce55af92fb0169f8edeb/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Falign-9.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f66d8ec8cad7d28d81b3ce55af92fb0169f8edeb/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Falign-9.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fubsan%2Falign-9.c?ref=f66d8ec8cad7d28d81b3ce55af92fb0169f8edeb", "patch": "@@ -0,0 +1,21 @@\n+/* Limit this to known non-strict alignment targets.  */\n+/* { dg-do run { target { i?86-*-linux* x86_64-*-linux* } } } */\n+/* { dg-options \"-O2 -fsanitize=alignment -fsanitize-recover=alignment\" } */\n+\n+__attribute__((noinline, noclone)) void\n+foo (void *p, const void *q)\n+{\n+  *(long int *) p = *(const long int *) q;\n+}\n+\n+int\n+main ()\n+{\n+  struct S { long c; char f[64]; char d; char e[2 * sizeof (long)]; char g[64]; } s;\n+  __builtin_memset (&s, '\\0', sizeof s);\n+  foo (&s.e[0], &s.e[sizeof (long)]);\n+  return 0;\n+}\n+\n+/* { dg-output \"\\.c:8:\\[0-9]*: \\[^\\n\\r]*load of misaligned address 0x\\[0-9a-fA-F]* for type 'const long int', which requires \\[48] byte alignment.*\" } */\n+/* { dg-output \"\\.c:8:\\[0-9]*: \\[^\\n\\r]*store to misaligned address 0x\\[0-9a-fA-F]* for type 'long int', which requires \\[48] byte alignment\" } */"}, {"sha": "701e9f292289ba48d3ab03af8e5e7e5abb51438d", "filename": "gcc/ubsan.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f66d8ec8cad7d28d81b3ce55af92fb0169f8edeb/gcc%2Fubsan.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f66d8ec8cad7d28d81b3ce55af92fb0169f8edeb/gcc%2Fubsan.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fubsan.c?ref=f66d8ec8cad7d28d81b3ce55af92fb0169f8edeb", "patch": "@@ -1232,9 +1232,9 @@ instrument_mem_ref (tree mem, tree base, gimple_stmt_iterator *iter,\n   tree t = TREE_OPERAND (base, 0);\n   if (!POINTER_TYPE_P (TREE_TYPE (t)))\n     return;\n-  if (RECORD_OR_UNION_TYPE_P (TREE_TYPE (TREE_TYPE (t))) && mem != base)\n+  if (RECORD_OR_UNION_TYPE_P (TREE_TYPE (base)) && mem != base)\n     ikind = UBSAN_MEMBER_ACCESS;\n-  tree kind = build_int_cst (TREE_TYPE (t), ikind);\n+  tree kind = build_int_cst (build_pointer_type (TREE_TYPE (base)), ikind);\n   tree alignt = build_int_cst (pointer_sized_int_node, align);\n   gcall *g = gimple_build_call_internal (IFN_UBSAN_NULL, 3, t, kind, alignt);\n   gimple_set_location (g, gimple_location (gsi_stmt (*iter)));"}]}