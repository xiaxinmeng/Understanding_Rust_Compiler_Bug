{"sha": "439dae60ebf25ad432e9a654d10e10581771713a", "node_id": "C_kwDOANBUbNoAKDQzOWRhZTYwZWJmMjVhZDQzMmU5YTY1NGQxMGUxMDU4MTc3MTcxM2E", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2021-09-09T16:24:32Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-10-05T08:20:01Z"}, "message": "[Ada] Improve message on missing all/for in pre-Ada-2022 modes\n\ngcc/ada/\n\n\t* par-ch4.adb (P_Iterated_Component_Association): Parse these\n\tfeatures the same way in all language versions.  Move the call\n\tto Error_Msg_Ada_2022_Feature into semantic analysis.\n\t* sem_aggr.adb (Resolve_Iterated_Component_Association,\n\tResolve_Iterated_Association): Move the call to\n\tError_Msg_Ada_2022_Feature here from par-ch4.adb.", "tree": {"sha": "68153c62775994bdba552c6130398133108f72c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68153c62775994bdba552c6130398133108f72c9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/439dae60ebf25ad432e9a654d10e10581771713a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/439dae60ebf25ad432e9a654d10e10581771713a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/439dae60ebf25ad432e9a654d10e10581771713a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/439dae60ebf25ad432e9a654d10e10581771713a/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f88db1839a2492645c894946b24311cf592fd0fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f88db1839a2492645c894946b24311cf592fd0fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f88db1839a2492645c894946b24311cf592fd0fc"}], "stats": {"total": 93, "additions": 49, "deletions": 44}, "files": [{"sha": "b6cc1a0729ddb58c385bd1f4498e65779a6573c3", "filename": "gcc/ada/par-ch4.adb", "status": "modified", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/439dae60ebf25ad432e9a654d10e10581771713a/gcc%2Fada%2Fpar-ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/439dae60ebf25ad432e9a654d10e10581771713a/gcc%2Fada%2Fpar-ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch4.adb?ref=439dae60ebf25ad432e9a654d10e10581771713a", "patch": "@@ -3518,62 +3518,62 @@ package body Ch4 is\n       Assoc_Node :=\n         New_Node (N_Iterated_Component_Association, Prev_Token_Ptr);\n \n-      if Token = Tok_In then\n-         Set_Defining_Identifier (Assoc_Node, Id);\n-         T_In;\n-         Set_Discrete_Choices (Assoc_Node, P_Discrete_Choice_List);\n+      case Token is\n+         when Tok_In =>\n+            Set_Defining_Identifier (Assoc_Node, Id);\n+            T_In;\n+            Set_Discrete_Choices (Assoc_Node, P_Discrete_Choice_List);\n \n-         --  The iterator may include a filter\n+            --  The iterator may include a filter\n \n-         if Token = Tok_When then\n-            Scan;    -- past WHEN\n-            Filter := P_Condition;\n-         end if;\n+            if Token = Tok_When then\n+               Scan;    -- past WHEN\n+               Filter := P_Condition;\n+            end if;\n \n-         if Token = Tok_Use then\n+            if Token = Tok_Use then\n \n-            --  Ada 2022 Key-expression is present, rewrite node as an\n-            --  Iterated_Element_Association.\n+               --  Ada 2022 Key-expression is present, rewrite node as an\n+               --  Iterated_Element_Association.\n \n-            Scan;  --  past USE\n-            Build_Iterated_Element_Association;\n-            Set_Key_Expression (Assoc_Node, P_Expression);\n+               Scan;  --  past USE\n+               Build_Iterated_Element_Association;\n+               Set_Key_Expression (Assoc_Node, P_Expression);\n \n-         elsif Present (Filter) then\n-            --  A loop_parameter_specification also indicates an Ada 2022\n-            --  construct, in contrast with a subtype indication used in\n-            --  array aggregates.\n+            elsif Present (Filter) then\n+               --  A loop_parameter_specification also indicates an Ada 2022\n+               --  construct, in contrast with a subtype indication used in\n+               --  array aggregates.\n \n-            Build_Iterated_Element_Association;\n-         end if;\n+               Build_Iterated_Element_Association;\n+            end if;\n \n-         TF_Arrow;\n-         Set_Expression (Assoc_Node, P_Expression);\n+            TF_Arrow;\n+            Set_Expression (Assoc_Node, P_Expression);\n \n-      elsif Ada_Version >= Ada_2022\n-        and then Token = Tok_Of\n-      then\n-         Restore_Scan_State (State);\n-         Scan;  -- past OF\n-         Set_Defining_Identifier (Assoc_Node, Id);\n-         Iter_Spec := P_Iterator_Specification (Id);\n-         Set_Iterator_Specification (Assoc_Node, Iter_Spec);\n-\n-         if Token = Tok_Use then\n-            Scan;  -- past USE\n-            --  This is an iterated_element_association\n-\n-            Assoc_Node :=\n-              New_Node (N_Iterated_Element_Association, Prev_Token_Ptr);\n+         when Tok_Of =>\n+            Restore_Scan_State (State);\n+            Scan;  -- past OF\n+            Set_Defining_Identifier (Assoc_Node, Id);\n+            Iter_Spec := P_Iterator_Specification (Id);\n             Set_Iterator_Specification (Assoc_Node, Iter_Spec);\n-            Set_Key_Expression (Assoc_Node, P_Expression);\n-         end if;\n \n-         TF_Arrow;\n-         Set_Expression (Assoc_Node, P_Expression);\n-      end if;\n+            if Token = Tok_Use then\n+               Scan;  -- past USE\n+               --  This is an iterated_element_association\n \n-      Error_Msg_Ada_2022_Feature (\"iterated component\", Token_Ptr);\n+               Assoc_Node :=\n+                 New_Node (N_Iterated_Element_Association, Prev_Token_Ptr);\n+               Set_Iterator_Specification (Assoc_Node, Iter_Spec);\n+               Set_Key_Expression (Assoc_Node, P_Expression);\n+            end if;\n+\n+            TF_Arrow;\n+            Set_Expression (Assoc_Node, P_Expression);\n+\n+         when others =>\n+            Error_Msg_AP (\"missing IN or OF\");\n+      end case;\n \n       return Assoc_Node;\n    end P_Iterated_Component_Association;"}, {"sha": "3283fbbb8d956c93ab5a7e29e1bd5711029e6019", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/439dae60ebf25ad432e9a654d10e10581771713a/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/439dae60ebf25ad432e9a654d10e10581771713a/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=439dae60ebf25ad432e9a654d10e10581771713a", "patch": "@@ -1640,6 +1640,8 @@ package body Sem_Aggr is\n       --  Start of processing for Resolve_Iterated_Component_Association\n \n       begin\n+         Error_Msg_Ada_2022_Feature (\"iterated component\", Loc);\n+\n          if Present (Iterator_Specification (N)) then\n             Analyze (Name (Iterator_Specification (N)));\n \n@@ -2867,6 +2869,7 @@ package body Sem_Aggr is\n         Key_Type  : Entity_Id;\n         Elmt_Type : Entity_Id)\n       is\n+         Loc      : constant Source_Ptr := Sloc (N);\n          Choice   : Node_Id;\n          Ent      : Entity_Id;\n          Expr     : Node_Id;\n@@ -2877,6 +2880,8 @@ package body Sem_Aggr is\n          Typ      : Entity_Id := Empty;\n \n       begin\n+         Error_Msg_Ada_2022_Feature (\"iterated component\", Loc);\n+\n          --  If this is an Iterated_Element_Association then either a\n          --  an Iterator_Specification or a Loop_Parameter specification\n          --  is present. In both cases a Key_Expression is present."}]}