{"sha": "3a53e16539952155bef788660ea6f623de9f025d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2E1M2UxNjUzOTk1MjE1NWJlZjc4ODY2MGVhNmY2MjNkZTlmMDI1ZA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-01-20T11:12:35Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-01-20T11:12:35Z"}, "message": "re PR fortran/30223 (Fortran frontend does not know about cbrt, cexpi and sincos)\n\n2007-01-20  Richard Guenther  <rguenther@suse.de>\n\n\tPR fortran/30223\n\t* f95-lang.c (gfc_init_builtin_functions): Provide cbrt and\n\tcexpi builtins if we have TARGET_C99_FUNCTIONS.  Provide\n\tsincos builtins if the target has sincos.\n\nFrom-SVN: r120998", "tree": {"sha": "370af2256f5029bc5c18ceac40cf9de355a830ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/370af2256f5029bc5c18ceac40cf9de355a830ed"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a53e16539952155bef788660ea6f623de9f025d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a53e16539952155bef788660ea6f623de9f025d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a53e16539952155bef788660ea6f623de9f025d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a53e16539952155bef788660ea6f623de9f025d/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d9c91e9f886c13a6712cd7ac17c1c2cdadcc703", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d9c91e9f886c13a6712cd7ac17c1c2cdadcc703", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d9c91e9f886c13a6712cd7ac17c1c2cdadcc703"}], "stats": {"total": 76, "additions": 72, "deletions": 4}, "files": [{"sha": "d33233f944847068261b821885bcf7853366599a", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a53e16539952155bef788660ea6f623de9f025d/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a53e16539952155bef788660ea6f623de9f025d/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3a53e16539952155bef788660ea6f623de9f025d", "patch": "@@ -1,3 +1,10 @@\n+2007-01-20  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR fortran/30223\n+\t* f95-lang.c (gfc_init_builtin_functions): Provide cbrt and\n+\tcexpi builtins if we have TARGET_C99_FUNCTIONS.  Provide\n+\tsincos builtins if the target has sincos.\n+\n 2007-01-19  Brooks Moses  <brooks.moses@codesourcery.com>\n \n \t* intrinsic.texi (MATMUL): Corrected a typo."}, {"sha": "bf0ae81cc46c6d5fc3161c6343b39ef01d5c25ee", "filename": "gcc/fortran/f95-lang.c", "status": "modified", "additions": 65, "deletions": 4, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a53e16539952155bef788660ea6f623de9f025d/gcc%2Ffortran%2Ff95-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a53e16539952155bef788660ea6f623de9f025d/gcc%2Ffortran%2Ff95-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ff95-lang.c?ref=3a53e16539952155bef788660ea6f623de9f025d", "patch": "@@ -852,10 +852,13 @@ gfc_init_builtin_functions (void)\n   tree mfunc_cfloat[3];\n   tree mfunc_cdouble[3];\n   tree mfunc_clongdouble[3];\n-  tree func_cfloat_float;\n-  tree func_cdouble_double;\n-  tree func_clongdouble_longdouble;\n-  tree ftype;\n+  tree func_cfloat_float, func_float_cfloat;\n+  tree func_cdouble_double, func_double_cdouble;\n+  tree func_clongdouble_longdouble, func_longdouble_clongdouble;\n+  tree func_float_floatp_floatp;\n+  tree func_double_doublep_doublep;\n+  tree func_longdouble_longdoublep_longdoublep;\n+  tree ftype, ptype;\n   tree tmp;\n   tree builtin_types[(int) BT_LAST + 1];\n \n@@ -869,13 +872,44 @@ gfc_init_builtin_functions (void)\n   tmp = tree_cons (NULL_TREE, complex_float_type_node, void_list_node);\n   func_cfloat_float = build_function_type (float_type_node, tmp);\n \n+  tmp = tree_cons (NULL_TREE, float_type_node, void_list_node);\n+  func_float_cfloat = build_function_type (complex_float_type_node, tmp);\n+\n   tmp = tree_cons (NULL_TREE, complex_double_type_node, void_list_node);\n   func_cdouble_double = build_function_type (double_type_node, tmp);\n \n+  tmp = tree_cons (NULL_TREE, double_type_node, void_list_node);\n+  func_double_cdouble = build_function_type (complex_double_type_node, tmp);\n+\n   tmp = tree_cons (NULL_TREE, complex_long_double_type_node, void_list_node);\n   func_clongdouble_longdouble =\n     build_function_type (long_double_type_node, tmp);\n \n+  tmp = tree_cons (NULL_TREE, long_double_type_node, void_list_node);\n+  func_longdouble_clongdouble =\n+    build_function_type (complex_long_double_type_node, tmp);\n+\n+  ptype = build_pointer_type (float_type_node);\n+  tmp = tree_cons (NULL_TREE, float_type_node,\n+\t\t   tree_cons (NULL_TREE, ptype,\n+\t\t   \t      build_tree_list (NULL_TREE, ptype)));\n+  func_float_floatp_floatp =\n+    build_function_type (void_type_node, tmp);\n+\n+  ptype = build_pointer_type (double_type_node);\n+  tmp = tree_cons (NULL_TREE, double_type_node,\n+\t\t   tree_cons (NULL_TREE, ptype,\n+\t\t   \t      build_tree_list (NULL_TREE, ptype)));\n+  func_double_doublep_doublep =\n+    build_function_type (void_type_node, tmp);\n+\n+  ptype = build_pointer_type (long_double_type_node);\n+  tmp = tree_cons (NULL_TREE, long_double_type_node,\n+\t\t   tree_cons (NULL_TREE, ptype,\n+\t\t   \t      build_tree_list (NULL_TREE, ptype)));\n+  func_longdouble_longdoublep_longdoublep =\n+    build_function_type (void_type_node, tmp);\n+\n #include \"mathbuiltins.def\"\n \n   /* We define these separately as the fortran versions have different\n@@ -923,6 +957,33 @@ gfc_init_builtin_functions (void)\n   gfc_define_builtin (\"__builtin_powf\", mfunc_float[1], \n \t\t      BUILT_IN_POWF, \"powf\", true);\n \n+  if (TARGET_C99_FUNCTIONS)\n+    {\n+      gfc_define_builtin (\"__builtin_cbrtl\", mfunc_longdouble[0],\n+\t\t\t  BUILT_IN_CBRTL, \"cbrtl\", true);\n+      gfc_define_builtin (\"__builtin_cbrt\", mfunc_double[0],\n+\t\t\t  BUILT_IN_CBRT, \"cbrt\", true);\n+      gfc_define_builtin (\"__builtin_cbrtf\", mfunc_float[0],\n+\t\t\t  BUILT_IN_CBRTF, \"cbrtf\", true);\n+      gfc_define_builtin (\"__builtin_cexpil\", func_longdouble_clongdouble, \n+\t\t          BUILT_IN_CEXPIL, \"cexpil\", true);\n+      gfc_define_builtin (\"__builtin_cexpi\", func_double_cdouble,\n+\t\t          BUILT_IN_CEXPI, \"cexpi\", true);\n+      gfc_define_builtin (\"__builtin_cexpif\", func_float_cfloat,\n+\t\t          BUILT_IN_CEXPIF, \"cexpif\", true);\n+    }\n+\n+  if (TARGET_HAS_SINCOS)\n+    {\n+      gfc_define_builtin (\"__builtin_sincosl\",\n+\t\t\t  func_longdouble_longdoublep_longdoublep,\n+\t\t          BUILT_IN_SINCOSL, \"sincosl\", false);\n+      gfc_define_builtin (\"__builtin_sincos\", func_double_doublep_doublep,\n+\t\t          BUILT_IN_SINCOS, \"sincos\", false);\n+      gfc_define_builtin (\"__builtin_sincosf\", func_float_floatp_floatp,\n+\t\t          BUILT_IN_SINCOSF, \"sincosf\", false);\n+    }\n+\n   /* Other builtin functions we use.  */\n \n   tmp = tree_cons (NULL_TREE, long_integer_type_node, void_list_node);"}]}