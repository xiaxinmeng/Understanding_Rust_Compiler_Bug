{"sha": "697701ad65fdb31eadfbd1927d6da6845b558bbd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk3NzAxYWQ2NWZkYjMxZWFkZmJkMTkyN2Q2ZGE2ODQ1YjU1OGJiZA==", "commit": {"author": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2006-03-15T11:50:24Z"}, "committer": {"name": "Kaz Kojima", "email": "kkojima@gcc.gnu.org", "date": "2006-03-15T11:50:24Z"}, "message": "ffi.c (ffi_prep_cif_machdep): Handle float arguments passed with FP registers correctly.\n\n\t* src/sh64/ffi.c (ffi_prep_cif_machdep): Handle float arguments\n\tpassed with FP registers correctly.\n\t(ffi_closure_helper_SYSV): Likewise.\n\t* src/sh64/sysv.S: Likewise.\n\nFrom-SVN: r112083", "tree": {"sha": "9435cef835d70c2e699f1ebc93176d8bd6e6cb0f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9435cef835d70c2e699f1ebc93176d8bd6e6cb0f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/697701ad65fdb31eadfbd1927d6da6845b558bbd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/697701ad65fdb31eadfbd1927d6da6845b558bbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/697701ad65fdb31eadfbd1927d6da6845b558bbd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/697701ad65fdb31eadfbd1927d6da6845b558bbd/comments", "author": null, "committer": null, "parents": [{"sha": "8b96512fccf39032a88036515273cdb54124fcb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8b96512fccf39032a88036515273cdb54124fcb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8b96512fccf39032a88036515273cdb54124fcb6"}], "stats": {"total": 58, "additions": 46, "deletions": 12}, "files": [{"sha": "0622223c04e1c5e86a55a564b85e4aa30ce7e14a", "filename": "libffi/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/697701ad65fdb31eadfbd1927d6da6845b558bbd/libffi%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/697701ad65fdb31eadfbd1927d6da6845b558bbd/libffi%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2FChangeLog?ref=697701ad65fdb31eadfbd1927d6da6845b558bbd", "patch": "@@ -1,3 +1,10 @@\n+2006-03-15  Kaz Kojima  <kkojima@gcc.gnu.org>\n+\n+\t* src/sh64/ffi.c (ffi_prep_cif_machdep): Handle float arguments\n+\tpassed with FP registers correctly.\n+\t(ffi_closure_helper_SYSV): Likewise.\n+\t* src/sh64/sysv.S: Likewise.\n+\n 2006-03-01  Andreas Tobler  <a.tobler@schweiz.ch>\n \n \t* testsuite/libffi.special/unwindtest.cc (closure_test_fn): Mark cif,"}, {"sha": "9c40dadc410fdc9bfb159536d873d9cd99f8e7d1", "filename": "libffi/src/sh64/ffi.c", "status": "modified", "additions": 26, "deletions": 7, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/697701ad65fdb31eadfbd1927d6da6845b558bbd/libffi%2Fsrc%2Fsh64%2Fffi.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/697701ad65fdb31eadfbd1927d6da6845b558bbd/libffi%2Fsrc%2Fsh64%2Fffi.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsh64%2Fffi.c?ref=697701ad65fdb31eadfbd1927d6da6845b558bbd", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   ffi.c - Copyright (c) 2003, 2004 Kaz Kojima\n+   ffi.c - Copyright (c) 2003, 2004, 2006 Kaz Kojima\n    \n    SuperH SHmedia Foreign Function Interface \n \n@@ -160,6 +160,7 @@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n   int n, m;\n   int greg;\n   int freg;\n+  int fpair = -1;\n \n   greg = (return_type (cif->rtype) == FFI_TYPE_STRUCT ? 1 : 0);\n   freg = 0;\n@@ -175,7 +176,13 @@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n \t  cif->bytes += sizeof (UINT64) - sizeof (float);\n \t  if (freg >= NFREGARG - 1)\n \t    continue;\n-\t  freg++;\n+\t  if (fpair < 0)\n+\t    {\n+\t      fpair = freg;\n+\t      freg += 2;\n+\t    }\n+\t  else\n+\t    fpair = -1;\n \t  cif->flags2 += ((cif->arg_types)[i]->type) << (2 * j++);\n \t  break;\n \n@@ -184,7 +191,6 @@ ffi_status ffi_prep_cif_machdep(ffi_cif *cif)\n \t    continue;\n \t  if ((freg + 1) < NFREGARG)\n \t    {\n-\t      freg = (freg + 1) & ~1;\n \t      freg += 2;\n \t      cif->flags2 += ((cif->arg_types)[i]->type) << (2 * j++);\n \t    }\n@@ -350,6 +356,7 @@ ffi_closure_helper_SYSV (ffi_closure *closure, UINT64 *rvalue,\n   int i, avn;\n   int greg, freg;\n   ffi_cif *cif;\n+  int fpair = -1;\n \n   cif = closure->cif;\n   avalue = alloca (cif->nargs * sizeof (void *));\n@@ -358,7 +365,7 @@ ffi_closure_helper_SYSV (ffi_closure *closure, UINT64 *rvalue,\n      returns the data directly to the caller.  */\n   if (return_type (cif->rtype) == FFI_TYPE_STRUCT)\n     {\n-      rvalue = *pgr;\n+      rvalue = (UINT64 *) *pgr;\n       greg = 1;\n     }\n   else\n@@ -402,11 +409,24 @@ ffi_closure_helper_SYSV (ffi_closure *closure, UINT64 *rvalue,\n \t  if ((*p_arg)->type == FFI_TYPE_FLOAT)\n \t    {\n \t      if (freg < NFREGARG - 1)\n+\t\t{\n+\t\t  if (fpair >= 0)\n+\t\t    {\n+\t\t      avalue[i] = (UINT32 *) pfr + fpair;\n+\t\t      fpair = -1;\n+\t\t    }\n+\t\t  else\n+\t\t    {\n #ifdef __LITTLE_ENDIAN__\n-\t\tavalue[i] = (UINT32 *) pfr + (1 ^ freg++);\n+\t\t      fpair = freg;\n+\t\t      avalue[i] = (UINT32 *) pfr + (1 ^ freg);\n #else\n-\t\tavalue[i] = (UINT32 *) pfr + freg++;\n+\t\t      fpair = 1 ^ freg;\n+\t\t      avalue[i] = (UINT32 *) pfr + freg;\n #endif\n+\t\t      freg += 2;\n+\t\t    }\n+\t\t}\n \t      else\n #ifdef __LITTLE_ENDIAN__\n \t\tavalue[i] = pgr + greg;\n@@ -428,7 +448,6 @@ ffi_closure_helper_SYSV (ffi_closure *closure, UINT64 *rvalue,\n \t    avalue[i] = pgr + greg;\n \t  else\n \t    {\n-\t      freg = (freg + 1) & ~1;\n \t      avalue[i] = pfr + (freg >> 1);\n \t      freg += 2;\n \t    }"}, {"sha": "bdee4188ec187bac7e0107d57cc1b1a291167c85", "filename": "libffi/src/sh64/sysv.S", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/697701ad65fdb31eadfbd1927d6da6845b558bbd/libffi%2Fsrc%2Fsh64%2Fsysv.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/697701ad65fdb31eadfbd1927d6da6845b558bbd/libffi%2Fsrc%2Fsh64%2Fsysv.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libffi%2Fsrc%2Fsh64%2Fsysv.S?ref=697701ad65fdb31eadfbd1927d6da6845b558bbd", "patch": "@@ -1,5 +1,5 @@\n /* -----------------------------------------------------------------------\n-   sysv.S - Copyright (c) 2003, 2004 Kaz Kojima\n+   sysv.S - Copyright (c) 2003, 2004, 2006 Kaz Kojima\n    \n    SuperH SHmedia Foreign Function Interface \n \n@@ -84,6 +84,7 @@ ENTRY(ffi_call_SYSV)\n \taddi\tr15, 64, r22\n \tmovi\t0, r0\n \tmovi\t0, r1\n+\tmovi\t-1, r23\n \n \tpt/l\t1f, tr1\n \tbnei/l\tr29, FFI_TYPE_STRUCT, tr1\n@@ -106,9 +107,6 @@ ENTRY(ffi_call_SYSV)\n \n .L_pass_d:\n \taddi\tr0, 1, r0\n-\taddi\tr1, 1, r1\n-\tandi\tr1, ~1, r1\n-\n \tpt/l\t3f, tr0\n \tmovi\t12, r20\n \tbge/l\tr1, r20, tr0\n@@ -158,13 +156,23 @@ ENTRY(ffi_call_SYSV)\n \taddi.l\tr15, 8, r15\n 3:\n \tpt/l\t.L_pass, tr0\n-\taddi\tr1, 1, r1\n \tblink\ttr0, r63\n \n .L_pop_f:\n \tpt/l\t.L_pop_f_tbl, tr1\n+\tpt/l\t5f, tr2\n \tgettr\ttr1, r20\n+\tbge/l\tr23, r63, tr2\n+\tadd\tr1, r63, r23 \n \tshlli\tr1, 3, r21\n+\taddi\tr1, 2, r1\n+\tadd\tr20, r21, r20\n+\tptabs/l\tr20, tr1\n+\tblink\ttr1, r63\n+5:\n+\taddi\tr23, 1, r21\n+\tmovi\t-1, r23\n+\tshlli\tr21, 3, r21\n \tadd\tr20, r21, r20\n \tptabs/l\tr20, tr1\n \tblink\ttr1, r63"}]}