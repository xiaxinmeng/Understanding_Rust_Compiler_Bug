{"sha": "a3f58be687bf7db8033ab77cc65e6b8c7b50911e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTNmNThiZTY4N2JmN2RiODAzM2FiNzdjYzY1ZTZiOGM3YjUwOTExZQ==", "commit": {"author": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2014-05-14T14:00:30Z"}, "committer": {"name": "Christian Bruel", "email": "chrbr@gcc.gnu.org", "date": "2014-05-14T14:00:30Z"}, "message": "cleanup bogus entry\n\nFrom-SVN: r210424", "tree": {"sha": "09b13ba987a7d840a56a2acf3da1db01e931cc08", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/09b13ba987a7d840a56a2acf3da1db01e931cc08"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a3f58be687bf7db8033ab77cc65e6b8c7b50911e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3f58be687bf7db8033ab77cc65e6b8c7b50911e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3f58be687bf7db8033ab77cc65e6b8c7b50911e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3f58be687bf7db8033ab77cc65e6b8c7b50911e/comments", "author": null, "committer": null, "parents": [{"sha": "23b02de3a34b9da303256e658c591c2c7995b9f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23b02de3a34b9da303256e658c591c2c7995b9f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23b02de3a34b9da303256e658c591c2c7995b9f6"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "c3b3e82a9c063e98afcfd5f44b478005a0d1d420", "filename": "gcc/ChangeLog", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a3f58be687bf7db8033ab77cc65e6b8c7b50911e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a3f58be687bf7db8033ab77cc65e6b8c7b50911e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a3f58be687bf7db8033ab77cc65e6b8c7b50911e", "patch": "@@ -270,8 +270,6 @@\n \t(mode_exit, modepriority_to_mode): Likewise.\n \t* mode-switching.c (MODE_NEEDED, MODE_AFTER, MODE_ENTRY): Hookify.\n \t(MODE_EXIT, MODE_PRIORITY_TO_MODE, EMIT_MODE_SET): Likewise.\n-\t(default_priority_to_mode): Define.\n-\t* targhooks.h (default_priority_to_mode): Declare.\n \t* target.h: Include tm.h and hard-reg-set.h.\n \t* doc/tm.texi.in (EMIT_MODE_SET, MODE_NEEDED, MODE_AFTER, MODE_ENTRY)\n \t(MODE_EXIT, MODE_PRIORITY_TO_MODE): Delete and hookify.\n@@ -289,10 +287,6 @@\n \t* config/epiphany/epiphany.h (MODE_NEEDED, MODE_AFTER, MODE_ENTRY):\n \tDelete\n \t(MODE_EXIT, MODE_PRIORITY_TO_MODE, EMIT_MODE_SET): Likewise.\n-\t* config/sh/sh.h (MODE_NEEDED, MODE_AFTER, MODE_ENTRY): Delete\n-\t(MODE_EXIT, MODE_PRIORITY_TO_MODE, EMIT_MODE_SET): Likewise.\n-\t* config/sh/sh.c (sh4_emit_mode_set, sh4_mode_needed): Hookify.\n-\t(sh4_mode_after, sh4_mode_entry, sh4_mode_exit): Likewise.\n \t* config/epiphany/epiphany-protos.h (epiphany_mode_needed)\n \t(emit_set_fp_mode, epiphany_mode_entry_exit, epiphany_mode_after)\n \t(epiphany_mode_priority_to_mode): Remove declaration."}]}