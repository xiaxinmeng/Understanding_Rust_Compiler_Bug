{"sha": "bab0ad3a30b79e086b55bdb5337a2e5cab0cf437", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmFiMGFkM2EzMGI3OWUwODZiNTViZGI1MzM3YTJlNWNhYjBjZjQzNw==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2016-01-14T12:36:31Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2016-01-14T12:36:31Z"}, "message": "* lib/target-supports.exp\n\t(check_effective_target_arm_neon_ok_nocache): Add an option\n\tsequence that includes setting the ARM architecture to ARMv7-A.\n\t* gcc.target/arm/attr-neon.c: Use dg-add-options to add the\n\tcommand line options necessary to enable Neon support.\n\t* gcc.target/arm/neon-vlshr-imm-1.c: Likewise.\n\t* gcc.target/arm/neon-vshl-imm-1.c: Likewise.\n\t* gcc.target/arm/neon-vshr-imm-1.c: Likewise.\n\t* gcc.target/arm/pr69180.c: Likewise.\n\nFrom-SVN: r232362", "tree": {"sha": "339017edaae9e8a0876941f477dcb9858f0ac4ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/339017edaae9e8a0876941f477dcb9858f0ac4ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bab0ad3a30b79e086b55bdb5337a2e5cab0cf437", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bab0ad3a30b79e086b55bdb5337a2e5cab0cf437", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bab0ad3a30b79e086b55bdb5337a2e5cab0cf437", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bab0ad3a30b79e086b55bdb5337a2e5cab0cf437/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "947c2ce56cf736fb2c48ad3d777e7c352585ce16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/947c2ce56cf736fb2c48ad3d777e7c352585ce16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/947c2ce56cf736fb2c48ad3d777e7c352585ce16"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "ef76d22a56e2b7b8e6cfd55ab3c513c54bababb0", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab0ad3a30b79e086b55bdb5337a2e5cab0cf437/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab0ad3a30b79e086b55bdb5337a2e5cab0cf437/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bab0ad3a30b79e086b55bdb5337a2e5cab0cf437", "patch": "@@ -1,3 +1,15 @@\n+2016-01-14  Nick Clifton  <nickc@redhat.com>\n+\n+\t* lib/target-supports.exp\n+\t(check_effective_target_arm_neon_ok_nocache): Add an option\n+\tsequence that includes setting the ARM architecture to ARMv7-A.\n+\t* gcc.target/arm/attr-neon.c: Use dg-add-options to add the\n+\tcommand line options necessary to enable Neon support.\n+\t* gcc.target/arm/neon-vlshr-imm-1.c: Likewise.\n+\t* gcc.target/arm/neon-vshl-imm-1.c: Likewise.\n+\t* gcc.target/arm/neon-vshr-imm-1.c: Likewise.\n+\t* gcc.target/arm/pr69180.c: Likewise.\n+\n 2016-01-14  Jeff Law  <law@redhat.com>\n \n \tPR tree-optimization/69270"}, {"sha": "689e5e489937858b5d21eec5fb39737a510d268f", "filename": "gcc/testsuite/gcc.target/arm/attr-neon.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab0ad3a30b79e086b55bdb5337a2e5cab0cf437/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fattr-neon.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab0ad3a30b79e086b55bdb5337a2e5cab0cf437/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fattr-neon.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fattr-neon.c?ref=bab0ad3a30b79e086b55bdb5337a2e5cab0cf437", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target arm_neon_ok } */\n-/* { dg-options \"-O2 -mfloat-abi=softfp -ftree-vectorize\" } */\n+/* { dg-options \"-O2 -ftree-vectorize\" } */\n+/* { dg-add-options arm_neon } */\n \n /* Verify that neon instructions are emitted once.  */\n void __attribute__ ((target(\"fpu=neon\")))"}, {"sha": "aaf190594dcbc8295b944260d8bfde96a5ec5d77", "filename": "gcc/testsuite/gcc.target/arm/neon-vlshr-imm-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab0ad3a30b79e086b55bdb5337a2e5cab0cf437/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vlshr-imm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab0ad3a30b79e086b55bdb5337a2e5cab0cf437/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vlshr-imm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vlshr-imm-1.c?ref=bab0ad3a30b79e086b55bdb5337a2e5cab0cf437", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target arm_neon_ok } */\n-/* { dg-options \"-O2 -mfpu=neon -mfloat-abi=softfp -ftree-vectorize\" } */\n+/* { dg-options \"-O2 -ftree-vectorize\" } */\n+/* { dg-add-options arm_neon } */\n /* { dg-final { scan-assembler \"vshr\\.u32.*#3\" } } */\n \n /* Verify that VSHR immediate is used.  */"}, {"sha": "2830c6deb86907b41b20dccef1fa2834b36dafe4", "filename": "gcc/testsuite/gcc.target/arm/neon-vshl-imm-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab0ad3a30b79e086b55bdb5337a2e5cab0cf437/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vshl-imm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab0ad3a30b79e086b55bdb5337a2e5cab0cf437/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vshl-imm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vshl-imm-1.c?ref=bab0ad3a30b79e086b55bdb5337a2e5cab0cf437", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target arm_neon_ok } */\n-/* { dg-options \"-O2 -mfpu=neon -mfloat-abi=softfp -ftree-vectorize\" } */\n+/* { dg-options \"-O2 -ftree-vectorize\" } */\n+/* { dg-add-options arm_neon } */\n /* { dg-final { scan-assembler \"vshl\\.i32.*#3\" } } */\n \n /* Verify that VSHR immediate is used.  */"}, {"sha": "d79e3ed66f3d35f71af2fa08f22883340e58690b", "filename": "gcc/testsuite/gcc.target/arm/neon-vshr-imm-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab0ad3a30b79e086b55bdb5337a2e5cab0cf437/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vshr-imm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab0ad3a30b79e086b55bdb5337a2e5cab0cf437/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vshr-imm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fneon-vshr-imm-1.c?ref=bab0ad3a30b79e086b55bdb5337a2e5cab0cf437", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-require-effective-target arm_neon_ok } */\n-/* { dg-options \"-O2 -mfpu=neon -mfloat-abi=softfp -ftree-vectorize\" } */\n+/* { dg-options \"-O2 -ftree-vectorize\" } */\n+/* { dg-add-options arm_neon } */\n /* { dg-final { scan-assembler \"vshr\\.s32.*#3\" } } */\n \n /* Verify that VSHR immediate is used.  */"}, {"sha": "998c73426a24a73af38304a6672622a6eaa7c4dc", "filename": "gcc/testsuite/gcc.target/arm/pr69180.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab0ad3a30b79e086b55bdb5337a2e5cab0cf437/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr69180.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab0ad3a30b79e086b55bdb5337a2e5cab0cf437/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr69180.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fpr69180.c?ref=bab0ad3a30b79e086b55bdb5337a2e5cab0cf437", "patch": "@@ -3,8 +3,8 @@\n    #pragma GCC target.  */\n /* { dg-do compile } */\n /* { dg-require-effective-target arm_neon_ok } */\n-/* { dg-options \"-mfloat-abi=softfp -mfpu=neon\" } */\n-\n+/* { dg-options \" \" } */ /* Necessary to  prevent the harness from adding -ansi -pedantic-errors to the command line.  */\n+/* { dg-add-options arm_neon } */\n #pragma GCC target (\"fpu=neon-fp-armv8\")\n \n #define __ARM_NEON_FP 0"}, {"sha": "a930bd2aab590601c6e89ea7fe50c6c1136d82f0", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bab0ad3a30b79e086b55bdb5337a2e5cab0cf437/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bab0ad3a30b79e086b55bdb5337a2e5cab0cf437/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=bab0ad3a30b79e086b55bdb5337a2e5cab0cf437", "patch": "@@ -2888,7 +2888,7 @@ proc check_effective_target_arm_neon_ok_nocache { } {\n     global et_arm_neon_flags\n     set et_arm_neon_flags \"\"\n     if { [check_effective_target_arm32] } {\n-\tforeach flags {\"\" \"-mfloat-abi=softfp\" \"-mfpu=neon\" \"-mfpu=neon -mfloat-abi=softfp\"} {\n+\tforeach flags {\"\" \"-mfloat-abi=softfp\" \"-mfpu=neon\" \"-mfpu=neon -mfloat-abi=softfp\" \"-mfpu=neon -mfloat-abi=softfp -march=armv7-a\"} {\n \t    if { [check_no_compiler_messages_nocache arm_neon_ok object {\n \t\tint dummy;\n \t\t#ifndef __ARM_NEON__"}]}