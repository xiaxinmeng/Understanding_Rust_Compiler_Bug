{"sha": "b2e4c071d7be806aae1a9d13190ed1a91fbb5480", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjJlNGMwNzFkN2JlODA2YWFlMWE5ZDEzMTkwZWQxYTkxZmJiNTQ4MA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2015-10-19T23:50:30Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2015-10-19T23:50:30Z"}, "message": "PR66870 PowerPC64 Enable gold linker with split stack\n\nA powerpc-linux/powerpc64-linux biarch compiler can default to either\n-m32 or -m64, and we need to notice both -m32 and -m64 on the gccgo\ncommand line.  It's also possible to build a -m64 only compiler, so in\nthat case we can define TARGET_CAN_SPLIT_STACK.\n\ngcc/\n\tPR go/66870\n\t* config/rs6000/sysv4.h (TARGET_CAN_SPLIT_STACK_64BIT): Don't define.\n\t* config/rs6000/linux64.h (TARGET_CAN_SPLIT_STACK): Define.\n\t(TARGET_CAN_SPLIT_STACK_64BIT): Define.\ngcc/go/\n\tPR go/66870\n\t* gospec.c (saw_opt_m32): Rename to..\n\t(is_m64): ..this, initialised by TARGET_CAN_SPLIT_STACK_64BIT.\n\tUpdate uses.\n\t(lang_specific_driver): Set is_m64 if OPT_m64, clear if OPT_m32.\n\nFrom-SVN: r229009", "tree": {"sha": "f5d8ff4dbc0bc1de9017a02daa70e6e4f5fe7f2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5d8ff4dbc0bc1de9017a02daa70e6e4f5fe7f2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b2e4c071d7be806aae1a9d13190ed1a91fbb5480", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2e4c071d7be806aae1a9d13190ed1a91fbb5480", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b2e4c071d7be806aae1a9d13190ed1a91fbb5480", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b2e4c071d7be806aae1a9d13190ed1a91fbb5480/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "524d9b4b9035ff69f1024ca2c32c7217128f3cf9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/524d9b4b9035ff69f1024ca2c32c7217128f3cf9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/524d9b4b9035ff69f1024ca2c32c7217128f3cf9"}], "stats": {"total": 52, "additions": 40, "deletions": 12}, "files": [{"sha": "a342d6a9618f614ec52d672b091247b2654454de", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2e4c071d7be806aae1a9d13190ed1a91fbb5480/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2e4c071d7be806aae1a9d13190ed1a91fbb5480/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b2e4c071d7be806aae1a9d13190ed1a91fbb5480", "patch": "@@ -1,3 +1,10 @@\n+2015-10-20  Alan Modra  <amodra@gmail.com>\n+\n+\tPR go/66870\n+\t* config/rs6000/sysv4.h (TARGET_CAN_SPLIT_STACK_64BIT): Don't define.\n+\t* config/rs6000/linux64.h (TARGET_CAN_SPLIT_STACK): Define.\n+\t(TARGET_CAN_SPLIT_STACK_64BIT): Define.\n+\n 2015-10-19  Pierre-Marie de Rodat  <derodat@adacore.com>\n \n \tPR rtl-optimization/66790"}, {"sha": "1948e8679b5a5b7619d7f5bd5118d7a3aeb2c513", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2e4c071d7be806aae1a9d13190ed1a91fbb5480/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2e4c071d7be806aae1a9d13190ed1a91fbb5480/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=b2e4c071d7be806aae1a9d13190ed1a91fbb5480", "patch": "@@ -245,6 +245,21 @@ extern int dot_symbols;\n #define MULTILIB_DEFAULTS { \"m32\" }\n #endif\n \n+/* Split stack is only supported for 64 bit, and requires glibc >= 2.18.  */\n+#if TARGET_GLIBC_MAJOR * 1000 + TARGET_GLIBC_MINOR >= 2018\n+# ifndef RS6000_BI_ARCH\n+#  define TARGET_CAN_SPLIT_STACK\n+# else\n+#  if DEFAULT_ARCH64_P\n+/* Supported, and the default is -m64  */\n+#   define TARGET_CAN_SPLIT_STACK_64BIT 1\n+#  else\n+/* Supported, and the default is -m32  */\n+#   define TARGET_CAN_SPLIT_STACK_64BIT 0\n+#  endif\n+# endif\n+#endif\n+\n #ifndef RS6000_BI_ARCH\n \n /* 64-bit PowerPC Linux always has a TOC.  */"}, {"sha": "f48af43e7c508abc44bb0d7dc5edc80b7ed8cac9", "filename": "gcc/config/rs6000/sysv4.h", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2e4c071d7be806aae1a9d13190ed1a91fbb5480/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2e4c071d7be806aae1a9d13190ed1a91fbb5480/gcc%2Fconfig%2Frs6000%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fsysv4.h?ref=b2e4c071d7be806aae1a9d13190ed1a91fbb5480", "patch": "@@ -940,14 +940,6 @@ ncrtn.o%s\"\n #undef TARGET_ASAN_SHADOW_OFFSET\n #define TARGET_ASAN_SHADOW_OFFSET rs6000_asan_shadow_offset\n \n-/* On ppc64 and ppc64le, split stack is only support for\n-   64 bit. */\n-#undef TARGET_CAN_SPLIT_STACK_64BIT\n-#if TARGET_GLIBC_MAJOR > 2 \\\n-  || (TARGET_GLIBC_MAJOR == 2 && TARGET_GLIBC_MINOR >= 18)\n-#define TARGET_CAN_SPLIT_STACK_64BIT\n-#endif\n-\n /* This target uses the sysv4.opt file.  */\n #define TARGET_USES_SYSV4_OPT 1\n "}, {"sha": "f25c898782b445256f8bc0d70a19ad5304056639", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2e4c071d7be806aae1a9d13190ed1a91fbb5480/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2e4c071d7be806aae1a9d13190ed1a91fbb5480/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=b2e4c071d7be806aae1a9d13190ed1a91fbb5480", "patch": "@@ -1,3 +1,11 @@\n+2015-10-20  Alan Modra  <amodra@gmail.com>\n+\n+\tPR go/66870\n+\t* gospec.c (saw_opt_m32): Rename to..\n+\t(is_m64): ..this, initialised by TARGET_CAN_SPLIT_STACK_64BIT.\n+\tUpdate uses.\n+\t(lang_specific_driver): Set is_m64 if OPT_m64, clear if OPT_m32.\n+\n 2015-10-01  Ian Lance Taylor  <iant@google.com>\n \n \tPR go/66870"}, {"sha": "a56ffe0fad10597847f62569d8be197ee18036b4", "filename": "gcc/go/gospec.c", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b2e4c071d7be806aae1a9d13190ed1a91fbb5480/gcc%2Fgo%2Fgospec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b2e4c071d7be806aae1a9d13190ed1a91fbb5480/gcc%2Fgo%2Fgospec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgospec.c?ref=b2e4c071d7be806aae1a9d13190ed1a91fbb5480", "patch": "@@ -120,8 +120,10 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n   /* Whether the -S option was used.  */\n   bool saw_opt_S = false;\n \n-  /* Whether the -m32 option was used. */\n-  bool saw_opt_m32 ATTRIBUTE_UNUSED = false;\n+#ifdef TARGET_CAN_SPLIT_STACK_64BIT\n+  /* Whether the -m64 option is in force. */\n+  bool is_m64 = TARGET_CAN_SPLIT_STACK_64BIT;\n+#endif\n \n   /* The first input file with an extension of .go.  */\n   const char *first_go_file = NULL;  \n@@ -160,7 +162,11 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n \n #ifdef TARGET_CAN_SPLIT_STACK_64BIT\n \tcase OPT_m32:\n-\t  saw_opt_m32 = true;\n+\t  is_m64 = false;\n+\t  break;\n+\n+\tcase OPT_m64:\n+\t  is_m64 = true;\n \t  break;\n #endif\n \n@@ -253,7 +259,7 @@ lang_specific_driver (struct cl_decoded_option **in_decoded_options,\n #endif\n \n #ifdef TARGET_CAN_SPLIT_STACK_64BIT\n-  if (!saw_opt_m32)\n+  if (is_m64)\n     supports_split_stack = 1;\n #endif\n "}]}