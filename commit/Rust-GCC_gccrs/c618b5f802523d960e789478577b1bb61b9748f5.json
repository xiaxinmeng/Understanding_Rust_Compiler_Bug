{"sha": "c618b5f802523d960e789478577b1bb61b9748f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzYxOGI1ZjgwMjUyM2Q5NjBlNzg5NDc4NTc3YjFiYjYxYjk3NDhmNQ==", "commit": {"author": {"name": "Guilhem Lavaux", "email": "guilhem@kaffe.org", "date": "2003-11-19T12:06:38Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2003-11-19T12:06:38Z"}, "message": "[multiple changes]\n\n2003-11-19  Guilhem Lavaux <guilhem@kaffe.org>\n\t    Jim Pick  <jim@kaffe.org>\n\n\t* java/text/DecimalFormat.java (getCurrency, setCurrency): New\n\tmethods.\n\n2003-11-19  Guilhem Lavaux  <guilhem@kaffe.org>\n\n\t* java/text/DecimalFormatSymbols.java (getCurrency,\n\tsetCurrency): New methods.\n\nCo-Authored-By: Jim Pick <jim@kaffe.org>\n\nFrom-SVN: r73735", "tree": {"sha": "efd1ae3135ad154661b80fde9e3378b0ad905389", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/efd1ae3135ad154661b80fde9e3378b0ad905389"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c618b5f802523d960e789478577b1bb61b9748f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c618b5f802523d960e789478577b1bb61b9748f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c618b5f802523d960e789478577b1bb61b9748f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c618b5f802523d960e789478577b1bb61b9748f5/comments", "author": null, "committer": null, "parents": [{"sha": "b6b8f690470abd887a1f4de734548edc510f9290", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6b8f690470abd887a1f4de734548edc510f9290", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6b8f690470abd887a1f4de734548edc510f9290"}], "stats": {"total": 58, "additions": 58, "deletions": 0}, "files": [{"sha": "98cc75e7279724cebc211e3a6fe36883bce8b88b", "filename": "libjava/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c618b5f802523d960e789478577b1bb61b9748f5/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c618b5f802523d960e789478577b1bb61b9748f5/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=c618b5f802523d960e789478577b1bb61b9748f5", "patch": "@@ -1,3 +1,14 @@\n+2003-11-19  Guilhem Lavaux <guilhem@kaffe.org>\n+\t    Jim Pick  <jim@kaffe.org>\n+\n+\t* java/text/DecimalFormat.java (getCurrency, setCurrency): New\n+\tmethods.\n+\n+2003-11-19  Guilhem Lavaux  <guilhem@kaffe.org>\n+\n+\t* java/text/DecimalFormatSymbols.java (getCurrency,\n+\tsetCurrency): New methods.\n+\n 2003-11-19  Sascha Brawer  <brawer@dandelis.ch>\n \n \t* java/awt/geom/FlatteningPathIterator.java: Entirely re-written."}, {"sha": "359ad5591b0513816502c2c05f696e5d0dbd0660", "filename": "libjava/java/text/DecimalFormat.java", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c618b5f802523d960e789478577b1bb61b9748f5/libjava%2Fjava%2Ftext%2FDecimalFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c618b5f802523d960e789478577b1bb61b9748f5/libjava%2Fjava%2Ftext%2FDecimalFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDecimalFormat.java?ref=c618b5f802523d960e789478577b1bb61b9748f5", "patch": "@@ -37,6 +37,7 @@\n \n package java.text;\n \n+import java.util.Currency;\n import java.util.Locale;\n import java.util.MissingResourceException;\n import java.util.ResourceBundle;\n@@ -637,6 +638,19 @@ public StringBuffer format (long number, StringBuffer dest,\n     return dest;\n   }\n \n+  /**\n+   * Returns the currency corresponding to the currency symbol stored\n+   * in the instance of <code>DecimalFormatSymbols</code> used by this\n+   * <code>DecimalFormat</code>.\n+   *\n+   * @return A new instance of <code>Currency</code> if\n+   * the currency code matches a known one, null otherwise.\n+   */\n+  public Currency getCurrency()\n+  {\n+    return symbols.getCurrency();\n+  }\n+\n   public DecimalFormatSymbols getDecimalFormatSymbols ()\n   {\n     return symbols;\n@@ -856,6 +870,16 @@ else if (got_pos != got_pos_suf && got_neg != got_neg_suf)\n     return result;\n   }\n \n+  /**\n+   * Sets the <code>Currency</code> on the\n+   * <code>DecimalFormatSymbols</code> used, which also sets the\n+   * currency symbols on those symbols.\n+   */\n+  public void setCurrency(Currency currency)\n+  {\n+    symbols.setCurrency(currency);\n+  }\n+\n   public void setDecimalFormatSymbols (DecimalFormatSymbols newSymbols)\n   {\n     symbols = newSymbols;"}, {"sha": "1cb8f4f17690c2300449f887a03723f75a9e10c2", "filename": "libjava/java/text/DecimalFormatSymbols.java", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c618b5f802523d960e789478577b1bb61b9748f5/libjava%2Fjava%2Ftext%2FDecimalFormatSymbols.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c618b5f802523d960e789478577b1bb61b9748f5/libjava%2Fjava%2Ftext%2FDecimalFormatSymbols.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDecimalFormatSymbols.java?ref=c618b5f802523d960e789478577b1bb61b9748f5", "patch": "@@ -39,6 +39,7 @@\n package java.text;\n \n import java.io.Serializable;\n+import java.util.Currency;\n import java.util.Locale;\n import java.util.MissingResourceException;\n import java.util.ResourceBundle;\n@@ -194,6 +195,18 @@ public boolean equals (Object obj)\n \t    && zeroDigit == dfs.zeroDigit);\n   }\n \n+  /**\n+   * Returns the currency corresponding to the currency symbol stored\n+   * in the instance of <code>DecimalFormatSymbols</code>.\n+   *\n+   * @return A new instance of <code>Currency</code> if\n+   * the currency code matches a known one.\n+   */\n+  public Currency getCurrency ()\n+  {\n+    return Currency.getInstance (currencySymbol);\n+  }\n+\n   /**\n    * This method returns the currency symbol in local format.  For example,\n    * \"$\" for Canadian dollars.\n@@ -353,6 +366,16 @@ public int hashCode ()\n     return zeroDigit << 16 + groupingSeparator << 8 + decimalSeparator;\n   }\n \n+  /**\n+   * This method sets the currency to the specified value.\n+   *\n+   * @param currency The new currency\n+   */\n+  public void setCurrency (Currency currency)\n+  {\n+    setCurrencySymbol (currency.getSymbol());\n+  }\n+\n   /**\n    * This method sets the currency symbol to the specified value.\n    *"}]}