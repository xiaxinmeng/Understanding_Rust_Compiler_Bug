{"sha": "238fe3c54bfc0cabfca41322ad09f21bfdbced3c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM4ZmUzYzU0YmZjMGNhYmZjYTQxMzIyYWQwOWYyMWJmZGJjZWQzYw==", "commit": {"author": {"name": "Rafael Avila de Espindola", "email": "espindola@google.com", "date": "2008-07-16T09:14:27Z"}, "committer": {"name": "Rafael Espindola", "email": "espindola@gcc.gnu.org", "date": "2008-07-16T09:14:27Z"}, "message": "c-decl.c (merge_decls): Keep DECL_SOURCE_LOCATION and DECL_IN_SYSTEM_HEADER in sync.\n\n2007-07-16  Rafael Avila de Espindola  <espindola@google.com>\n\n       * c-decl.c (merge_decls): Keep DECL_SOURCE_LOCATION and\n       DECL_IN_SYSTEM_HEADER in sync.\n\nFrom-SVN: r137873", "tree": {"sha": "128c129ddee6f1d8e9344eed3b207fa7e6c83982", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/128c129ddee6f1d8e9344eed3b207fa7e6c83982"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/238fe3c54bfc0cabfca41322ad09f21bfdbced3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/238fe3c54bfc0cabfca41322ad09f21bfdbced3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/238fe3c54bfc0cabfca41322ad09f21bfdbced3c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/238fe3c54bfc0cabfca41322ad09f21bfdbced3c/comments", "author": null, "committer": null, "parents": [{"sha": "20d85a99604c39fd8ff01946ed418506957aa30b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20d85a99604c39fd8ff01946ed418506957aa30b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20d85a99604c39fd8ff01946ed418506957aa30b"}], "stats": {"total": 38, "additions": 26, "deletions": 12}, "files": [{"sha": "a6788fb08e055f40ce338679075ca403ebbc8c7a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/238fe3c54bfc0cabfca41322ad09f21bfdbced3c/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/238fe3c54bfc0cabfca41322ad09f21bfdbced3c/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=238fe3c54bfc0cabfca41322ad09f21bfdbced3c", "patch": "@@ -1,3 +1,8 @@\n+2007-07-16  Rafael Avila de Espindola  <espindola@google.com>\n+\n+       * c-decl.c (merge_decls): Keep DECL_SOURCE_LOCATION and\n+       DECL_IN_SYSTEM_HEADER in sync.\n+\n 2008-07-15  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree-ssa-sccvn.c (expressions_equal_p): Check type equality."}, {"sha": "4815797e56470cc0d41e168c9d94a83eed337161", "filename": "gcc/c-decl.c", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/238fe3c54bfc0cabfca41322ad09f21bfdbced3c/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/238fe3c54bfc0cabfca41322ad09f21bfdbced3c/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=238fe3c54bfc0cabfca41322ad09f21bfdbced3c", "patch": "@@ -1679,12 +1679,27 @@ merge_decls (tree newdecl, tree olddecl, tree newtype, tree oldtype)\n   if (TREE_DEPRECATED (newdecl))\n     TREE_DEPRECATED (olddecl) = 1;\n \n-  /* Keep source location of definition rather than declaration and of\n-     prototype rather than non-prototype unless that prototype is\n-     built-in.  */\n-  if ((DECL_INITIAL (newdecl) == 0 && DECL_INITIAL (olddecl) != 0)\n-      || (old_is_prototype && !new_is_prototype\n-\t  && !C_DECL_BUILTIN_PROTOTYPE (olddecl)))\n+  /* If a decl is in a system header and the other isn't, keep the one on the\n+     system header. Otherwise, keep source location of definition rather than\n+     declaration and of prototype rather than non-prototype unless that\n+     prototype is built-in.  */\n+  if (CODE_CONTAINS_STRUCT (TREE_CODE (olddecl), TS_DECL_WITH_VIS)\n+      && DECL_IN_SYSTEM_HEADER (olddecl)\n+      && !DECL_IN_SYSTEM_HEADER (newdecl) )\n+    {\n+      DECL_IN_SYSTEM_HEADER (newdecl) = 1;\n+      DECL_SOURCE_LOCATION (newdecl) = DECL_SOURCE_LOCATION (olddecl);\n+    }\n+  else if (CODE_CONTAINS_STRUCT (TREE_CODE (olddecl), TS_DECL_WITH_VIS)\n+\t   && DECL_IN_SYSTEM_HEADER (newdecl)\n+\t   && !DECL_IN_SYSTEM_HEADER (olddecl))\n+    {\n+      DECL_IN_SYSTEM_HEADER (olddecl) = 1;\n+      DECL_SOURCE_LOCATION (olddecl) = DECL_SOURCE_LOCATION (newdecl);\n+    }\n+  else if ((DECL_INITIAL (newdecl) == 0 && DECL_INITIAL (olddecl) != 0)\n+\t   || (old_is_prototype && !new_is_prototype\n+\t       && !C_DECL_BUILTIN_PROTOTYPE (olddecl)))\n     DECL_SOURCE_LOCATION (newdecl) = DECL_SOURCE_LOCATION (olddecl);\n \n   /* Merge the initialization information.  */\n@@ -1700,12 +1715,6 @@ merge_decls (tree newdecl, tree olddecl, tree newtype, tree oldtype)\n \n   if (CODE_CONTAINS_STRUCT (TREE_CODE (olddecl), TS_DECL_WITH_VIS))\n     {\n-      /* Merge the unused-warning information.  */\n-      if (DECL_IN_SYSTEM_HEADER (olddecl))\n-\tDECL_IN_SYSTEM_HEADER (newdecl) = 1;\n-      else if (DECL_IN_SYSTEM_HEADER (newdecl))\n-\tDECL_IN_SYSTEM_HEADER (olddecl) = 1;\n-\n       /* Merge the section attribute.\n \t We want to issue an error if the sections conflict but that\n \t must be done later in decl_attributes since we are called"}]}