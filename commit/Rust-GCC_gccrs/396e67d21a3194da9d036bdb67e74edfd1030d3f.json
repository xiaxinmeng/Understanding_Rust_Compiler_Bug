{"sha": "396e67d21a3194da9d036bdb67e74edfd1030d3f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzk2ZTY3ZDIxYTMxOTRkYTlkMDM2YmRiNjdlNzRlZGZkMTAzMGQzZg==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2015-05-28T15:45:08Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2015-05-28T15:45:08Z"}, "message": "utils.c (max_size): Add special code to deal with the subtraction of a \"negative\" value in an...\n\n\t* gcc-interface/utils.c (max_size) <tcc_binary>: Add special code to\n\tdeal with the subtraction of a \"negative\" value in an unsigned type.\n\nFrom-SVN: r223837", "tree": {"sha": "e352ee1b9a722c241fbc82e1122572bc6e8956cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e352ee1b9a722c241fbc82e1122572bc6e8956cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/396e67d21a3194da9d036bdb67e74edfd1030d3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/396e67d21a3194da9d036bdb67e74edfd1030d3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/396e67d21a3194da9d036bdb67e74edfd1030d3f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/396e67d21a3194da9d036bdb67e74edfd1030d3f/comments", "author": null, "committer": null, "parents": [{"sha": "afd6f7023570710172c76f5afc870d7ebd32678e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afd6f7023570710172c76f5afc870d7ebd32678e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afd6f7023570710172c76f5afc870d7ebd32678e"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "61ec1df1807dc91ab32c6af225c62697f6fd7273", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/396e67d21a3194da9d036bdb67e74edfd1030d3f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/396e67d21a3194da9d036bdb67e74edfd1030d3f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=396e67d21a3194da9d036bdb67e74edfd1030d3f", "patch": "@@ -1,3 +1,8 @@\n+2015-05-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gcc-interface/utils.c (max_size) <tcc_binary>: Add special code to\n+\tdeal with the subtraction of a \"negative\" value in an unsigned type.\n+\n 2015-05-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Subprogram_Type>: Do"}, {"sha": "0871c3cbe3b48c6c3f4d81ffdd69517f8e10dc47", "filename": "gcc/ada/gcc-interface/utils.c", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/396e67d21a3194da9d036bdb67e74edfd1030d3f/gcc%2Fada%2Fgcc-interface%2Futils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/396e67d21a3194da9d036bdb67e74edfd1030d3f/gcc%2Fada%2Fgcc-interface%2Futils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Futils.c?ref=396e67d21a3194da9d036bdb67e74edfd1030d3f", "patch": "@@ -3443,9 +3443,23 @@ max_size (tree exp, bool max_p)\n \tif ((code == MINUS_EXPR || code == PLUS_EXPR)\n \t    && TREE_CODE (lhs) == INTEGER_CST\n \t    && TREE_OVERFLOW (lhs)\n-\t    && !TREE_CONSTANT (rhs))\n+\t    && TREE_CODE (rhs) != INTEGER_CST)\n \t  return lhs;\n \n+\t/* If we are going to subtract a \"negative\" value in an unsigned type,\n+\t   do the operation as an addition of the negated value, in order to\n+\t   avoid creating a spurious overflow below.  */\n+\tif (code == MINUS_EXPR\n+\t    && TYPE_UNSIGNED (type)\n+\t    && TREE_CODE (rhs) == INTEGER_CST\n+\t    && !TREE_OVERFLOW (rhs)\n+\t    && tree_int_cst_sign_bit (rhs) != 0)\n+\t  {\n+\t    rhs = fold_build1 (NEGATE_EXPR, type, rhs);\n+\t    code = PLUS_EXPR;\n+\t  }\n+\n+\t/* We need to detect overflows so we call size_binop here.  */\n \treturn size_binop (code, lhs, rhs);\n       }\n "}, {"sha": "f9864884d4f436552dc8fd15c1476bcb1a67501b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/396e67d21a3194da9d036bdb67e74edfd1030d3f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/396e67d21a3194da9d036bdb67e74edfd1030d3f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=396e67d21a3194da9d036bdb67e74edfd1030d3f", "patch": "@@ -1,3 +1,7 @@\n+2015-05-28  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/discr43.adb: New test.\n+\n 2015-05-28  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/varsize_temp.adb: Rename into..."}, {"sha": "e0d43904eca4b850e30abdb2c19f73e13bc5a598", "filename": "gcc/testsuite/gnat.dg/discr43.adb", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/396e67d21a3194da9d036bdb67e74edfd1030d3f/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr43.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/396e67d21a3194da9d036bdb67e74edfd1030d3f/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr43.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fdiscr43.adb?ref=396e67d21a3194da9d036bdb67e74edfd1030d3f", "patch": "@@ -0,0 +1,16 @@\n+-- { dg-do compile }\n+\n+with Text_IO; use Text_IO;\n+\n+procedure Discr43 is\n+\n+  type Arr is array (Short_Integer range <>) of Boolean;\n+\n+  type Rec (LB : Short_Integer; UB : Short_Integer) is record\n+    A : Arr (LB .. UB);\n+  end record;\n+\n+begin\n+  Put_Line (\"Arr'Max_Size =\" & Arr'Max_Size_In_Storage_Elements'Img);\n+  Put_Line (\"Rec'Max_Size =\" & Rec'Max_Size_In_Storage_Elements'Img);\n+end;"}]}