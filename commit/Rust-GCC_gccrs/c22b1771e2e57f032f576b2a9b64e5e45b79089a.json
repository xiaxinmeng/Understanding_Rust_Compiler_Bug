{"sha": "c22b1771e2e57f032f576b2a9b64e5e45b79089a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzIyYjE3NzFlMmU1N2YwMzJmNTc2YjJhOWI2NGU1ZTQ1Yjc5MDg5YQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2006-04-05T13:41:01Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2006-04-05T13:41:01Z"}, "message": "Add missing word in comment.\n\nFrom-SVN: r112702", "tree": {"sha": "ec1f65fa99c39f61663ea4a200a4833d32be97e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec1f65fa99c39f61663ea4a200a4833d32be97e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c22b1771e2e57f032f576b2a9b64e5e45b79089a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c22b1771e2e57f032f576b2a9b64e5e45b79089a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c22b1771e2e57f032f576b2a9b64e5e45b79089a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c22b1771e2e57f032f576b2a9b64e5e45b79089a/comments", "author": null, "committer": null, "parents": [{"sha": "5de09539d33fea2099868f28895878256d39d41c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5de09539d33fea2099868f28895878256d39d41c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5de09539d33fea2099868f28895878256d39d41c"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b9cd33f60909a662e5a0827dea4106d96c27a40e", "filename": "gcc/gimplify.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c22b1771e2e57f032f576b2a9b64e5e45b79089a/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c22b1771e2e57f032f576b2a9b64e5e45b79089a/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=c22b1771e2e57f032f576b2a9b64e5e45b79089a", "patch": "@@ -5703,7 +5703,7 @@ gimplify_expr (tree *expr_p, tree *pre_p, tree *post_p,\n \t  /* Historically, the compiler has treated a bare\n \t     reference to a volatile lvalue as forcing a load.  */\n \t  tree type = TYPE_MAIN_VARIANT (TREE_TYPE (*expr_p));\n-\t  /* Normally, we do want to create a temporary for a\n+\t  /* Normally, we do not want to create a temporary for a\n \t     TREE_ADDRESSABLE type because such a type should not be\n \t     copied by bitwise-assignment.  However, we make an\n \t     exception here, as all we are doing here is ensuring that"}]}