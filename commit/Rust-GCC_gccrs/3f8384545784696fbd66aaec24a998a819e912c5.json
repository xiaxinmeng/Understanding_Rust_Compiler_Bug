{"sha": "3f8384545784696fbd66aaec24a998a819e912c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2Y4Mzg0NTQ1Nzg0Njk2ZmJkNjZhYWVjMjRhOTk4YTgxOWU5MTJjNQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-02-23T08:01:53Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-02-23T15:03:09Z"}, "message": "IPA ICF + ASAN: do not merge vars with different alignment\n\ngcc/ChangeLog:\n\n\tPR sanitizer/99168\n\t* ipa-icf.c (sem_variable::merge): Do not merge 2 variables\n\twith different alignment. That leads to an invalid red zone\n\tsize allocated in runtime.\n\ngcc/testsuite/ChangeLog:\n\n\tPR sanitizer/99168\n\t* c-c++-common/asan/pr99168.c: New test.", "tree": {"sha": "58147e9a0e45c847d92ba489a54b5a973ecdb31f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/58147e9a0e45c847d92ba489a54b5a973ecdb31f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3f8384545784696fbd66aaec24a998a819e912c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f8384545784696fbd66aaec24a998a819e912c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f8384545784696fbd66aaec24a998a819e912c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f8384545784696fbd66aaec24a998a819e912c5/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bd7afb71fca3a5a6e9f8586d86903bae1849193", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bd7afb71fca3a5a6e9f8586d86903bae1849193", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bd7afb71fca3a5a6e9f8586d86903bae1849193"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "5dd33a75c3a2b5213765cb3ea2f28e608af05ffb", "filename": "gcc/ipa-icf.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f8384545784696fbd66aaec24a998a819e912c5/gcc%2Fipa-icf.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f8384545784696fbd66aaec24a998a819e912c5/gcc%2Fipa-icf.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-icf.c?ref=3f8384545784696fbd66aaec24a998a819e912c5", "patch": "@@ -88,6 +88,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"tree-vector-builder.h\"\n #include \"symtab-thunks.h\"\n #include \"alias.h\"\n+#include \"asan.h\"\n \n using namespace ipa_icf_gimple;\n \n@@ -2022,6 +2023,18 @@ sem_variable::merge (sem_item *alias_item)\n       return false;\n     }\n \n+  if (DECL_ALIGN (original->decl) != DECL_ALIGN (alias->decl)\n+      && (sanitize_flags_p (SANITIZE_ADDRESS, original->decl)\n+\t  || sanitize_flags_p (SANITIZE_ADDRESS, alias->decl)))\n+    {\n+      if (dump_enabled_p ())\n+\tdump_printf (MSG_MISSED_OPTIMIZATION,\n+\t\t     \"Not unifying; \"\n+\t\t     \"ASAN requires equal alignments for original and alias\\n\");\n+\n+      return false;\n+    }\n+\n   if (DECL_ALIGN (original->decl) < DECL_ALIGN (alias->decl))\n     {\n       if (dump_enabled_p ())"}, {"sha": "ed59ffb3d48d6a1dcb53d990515be47471b6f140", "filename": "gcc/testsuite/c-c++-common/asan/pr99168.c", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3f8384545784696fbd66aaec24a998a819e912c5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr99168.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3f8384545784696fbd66aaec24a998a819e912c5/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr99168.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fasan%2Fpr99168.c?ref=3f8384545784696fbd66aaec24a998a819e912c5", "patch": "@@ -0,0 +1,26 @@\n+/* PR sanitizer/99168 */\n+/* { dg-do run } */\n+\n+struct my_struct\n+{\n+  unsigned long volatile x;\n+} __attribute__((aligned(128)));\n+\n+static int variablek[5][6] = {};\n+static struct my_struct variables1 = {0UL};\n+static struct my_struct variables2 __attribute__((aligned(32))) = {0UL};\n+\n+int main() {\n+  int i, j;\n+  for (i = 0; i < 5; i++) {\n+    for (j = 0; j < 6; j++) {\n+      __builtin_printf(\"%d \", variablek[i][j]);\n+    }\n+  }\n+  __builtin_printf(\"\\n\");\n+\n+  __builtin_printf(\"%lu\\n\", variables1.x);\n+  __builtin_printf(\"%lu\\n\", variables2.x);\n+\n+  return 0;\n+}"}]}