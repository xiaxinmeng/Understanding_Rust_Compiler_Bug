{"sha": "4acd1c8460f069aed1e8c36656e4f7b330763035", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFjZDFjODQ2MGYwNjlhZWQxZThjMzY2NTZlNGY3YjMzMDc2MzAzNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2011-12-19T13:37:06Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2011-12-19T13:37:06Z"}, "message": "re PR bootstrap/51572 (LTO bootstrap failed with bootstrap-profiled)\n\n2011-12-19  Richard Guenther  <rguenther@suse.de>\n\n\tPR lto/51572\n\t* tree.c (free_lang_data_in_type): Do not unlink TYPE_DECL\n\tfrom TYPE_FIELDS.\n\t(find_decls_types_r): Walk TYPE_DECLs in TYPE_FIELDS.\n\t* tree-streamer-out.c (write_ts_field_decl_tree_pointers): Do\n\tnot stream TREE_CHAIN.\n\t(write_ts_type_non_common_tree_pointers): Stream TYPE_FIELDS\n\tusing streamer_write_chain.\n\t* tree-streamer-in.c (lto_input_ts_field_decl_tree_pointers):\n\tDo not stream TREE_CHAIN.\n\t(lto_input_ts_type_non_common_tree_pointers): Stream TYPE_FIELDS\n\tusing streamer_read_chain.\n\t* gimple-streamer-in.c (input_gimple_stmt): Skip non-FIELD_DECLs.\n\t* gimple.c (gimple_canonical_types_compatible_p): Properly\n\thandle trailing non-FIELD_DECLs in TYPE_FIELDS.\n\n\t* g++.dg/lto/pr51572-2_0.C: New testcase.\n\nFrom-SVN: r182479", "tree": {"sha": "8678308941db6bfb85a842ad2b1eb1d57223cf57", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8678308941db6bfb85a842ad2b1eb1d57223cf57"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4acd1c8460f069aed1e8c36656e4f7b330763035", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4acd1c8460f069aed1e8c36656e4f7b330763035", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4acd1c8460f069aed1e8c36656e4f7b330763035", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4acd1c8460f069aed1e8c36656e4f7b330763035/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "095af58f2c2f45926912ab8d30195e4ca0d69462", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/095af58f2c2f45926912ab8d30195e4ca0d69462", "html_url": "https://github.com/Rust-GCC/gccrs/commit/095af58f2c2f45926912ab8d30195e4ca0d69462"}], "stats": {"total": 55, "additions": 48, "deletions": 7}, "files": [{"sha": "c874164d5904daa502665cb81108e98a2a2294b2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4acd1c8460f069aed1e8c36656e4f7b330763035/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4acd1c8460f069aed1e8c36656e4f7b330763035/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4acd1c8460f069aed1e8c36656e4f7b330763035", "patch": "@@ -1,3 +1,21 @@\n+2011-12-19  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/51572\n+\t* tree.c (free_lang_data_in_type): Do not unlink TYPE_DECL\n+\tfrom TYPE_FIELDS.\n+\t(find_decls_types_r): Walk TYPE_DECLs in TYPE_FIELDS.\n+\t* tree-streamer-out.c (write_ts_field_decl_tree_pointers): Do\n+\tnot stream TREE_CHAIN.\n+\t(write_ts_type_non_common_tree_pointers): Stream TYPE_FIELDS\n+\tusing streamer_write_chain.\n+\t* tree-streamer-in.c (lto_input_ts_field_decl_tree_pointers):\n+\tDo not stream TREE_CHAIN.\n+\t(lto_input_ts_type_non_common_tree_pointers): Stream TYPE_FIELDS\n+\tusing streamer_read_chain.\n+\t* gimple-streamer-in.c (input_gimple_stmt): Skip non-FIELD_DECLs.\n+\t* gimple.c (gimple_canonical_types_compatible_p): Properly\n+\thandle trailing non-FIELD_DECLs in TYPE_FIELDS.\n+\n 2011-12-19  Andreas Schwab  <schwab@linux-m68k.org>\n \n \t* configure: Regenerate."}, {"sha": "1b6bf4bd6d78cdadb482d98b5a84971aba2fcc0f", "filename": "gcc/gimple-streamer-in.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4acd1c8460f069aed1e8c36656e4f7b330763035/gcc%2Fgimple-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4acd1c8460f069aed1e8c36656e4f7b330763035/gcc%2Fgimple-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-streamer-in.c?ref=4acd1c8460f069aed1e8c36656e4f7b330763035", "patch": "@@ -162,6 +162,8 @@ input_gimple_stmt (struct lto_input_block *ib, struct data_in *data_in,\n \t\t  type = DECL_CONTEXT (field);\n \t\t  for (tem = TYPE_FIELDS (type); tem; tem = TREE_CHAIN (tem))\n \t\t    {\n+\t\t      if (TREE_CODE (tem) != FIELD_DECL)\n+\t\t\tcontinue;\n \t\t      if (tem == field)\n \t\t\tbreak;\n \t\t      if (DECL_NONADDRESSABLE_P (tem)"}, {"sha": "1f8f102712844bbe1b062556e0b37f743db14d2c", "filename": "gcc/gimple.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4acd1c8460f069aed1e8c36656e4f7b330763035/gcc%2Fgimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4acd1c8460f069aed1e8c36656e4f7b330763035/gcc%2Fgimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple.c?ref=4acd1c8460f069aed1e8c36656e4f7b330763035", "patch": "@@ -4702,7 +4702,7 @@ gimple_canonical_types_compatible_p (tree t1, tree t2)\n \n \t/* For aggregate types, all the fields must be the same.  */\n \tfor (f1 = TYPE_FIELDS (t1), f2 = TYPE_FIELDS (t2);\n-\t     f1 && f2;\n+\t     f1 || f2;\n \t     f1 = TREE_CHAIN (f1), f2 = TREE_CHAIN (f2))\n \t  {\n \t    /* Skip non-fields.  */"}, {"sha": "bf2b3c18a71370b1f803cf04ce478c2d59517f5a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4acd1c8460f069aed1e8c36656e4f7b330763035/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4acd1c8460f069aed1e8c36656e4f7b330763035/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4acd1c8460f069aed1e8c36656e4f7b330763035", "patch": "@@ -1,3 +1,8 @@\n+2011-12-19  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR lto/51572\n+\t* g++.dg/lto/pr51572-2_0.C: New testcase.\n+\n 2011-12-19  Dodji Seketeli  <dodji@redhat.com>\n \n \tPR c++/51477"}, {"sha": "f7de4f06aef73f62302900980635cac66b0de0d6", "filename": "gcc/testsuite/g++.dg/lto/pr51572-2_0.C", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4acd1c8460f069aed1e8c36656e4f7b330763035/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr51572-2_0.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4acd1c8460f069aed1e8c36656e4f7b330763035/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr51572-2_0.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flto%2Fpr51572-2_0.C?ref=4acd1c8460f069aed1e8c36656e4f7b330763035", "patch": "@@ -0,0 +1,16 @@\n+// Copy of g++.dg/debug/pr45660\n+// { dg-lto-do link }\n+// { dg-lto-options { { -g -flto } } }\n+\n+int\n+main ()\n+{\n+  struct S\n+  {\n+    typedef void (**T) (void);\n+    static T i (void) { return 0; }\n+  };\n+  S s;\n+  if (s.i ())\n+    *s.i () = 0;\n+}"}, {"sha": "8a18a995b7588f81b8a353abe649ea237cbcb01e", "filename": "gcc/tree-streamer-in.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4acd1c8460f069aed1e8c36656e4f7b330763035/gcc%2Ftree-streamer-in.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4acd1c8460f069aed1e8c36656e4f7b330763035/gcc%2Ftree-streamer-in.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-in.c?ref=4acd1c8460f069aed1e8c36656e4f7b330763035", "patch": "@@ -643,7 +643,6 @@ lto_input_ts_field_decl_tree_pointers (struct lto_input_block *ib,\n   DECL_QUALIFIER (expr) = stream_read_tree (ib, data_in);\n   DECL_FIELD_BIT_OFFSET (expr) = stream_read_tree (ib, data_in);\n   DECL_FCONTEXT (expr) = stream_read_tree (ib, data_in);\n-  TREE_CHAIN (expr) = streamer_read_chain (ib, data_in);\n }\n \n \n@@ -706,7 +705,7 @@ lto_input_ts_type_non_common_tree_pointers (struct lto_input_block *ib,\n   else if (TREE_CODE (expr) == ARRAY_TYPE)\n     TYPE_DOMAIN (expr) = stream_read_tree (ib, data_in);\n   else if (RECORD_OR_UNION_TYPE_P (expr))\n-    TYPE_FIELDS (expr) = stream_read_tree (ib, data_in);\n+    TYPE_FIELDS (expr) = streamer_read_chain (ib, data_in);\n   else if (TREE_CODE (expr) == FUNCTION_TYPE\n \t   || TREE_CODE (expr) == METHOD_TYPE)\n     TYPE_ARG_TYPES (expr) = stream_read_tree (ib, data_in);"}, {"sha": "0e4d278fb5a925ddbbba2fc2fa0105baa05cadd0", "filename": "gcc/tree-streamer-out.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4acd1c8460f069aed1e8c36656e4f7b330763035/gcc%2Ftree-streamer-out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4acd1c8460f069aed1e8c36656e4f7b330763035/gcc%2Ftree-streamer-out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-streamer-out.c?ref=4acd1c8460f069aed1e8c36656e4f7b330763035", "patch": "@@ -553,7 +553,6 @@ write_ts_field_decl_tree_pointers (struct output_block *ob, tree expr,\n   stream_write_tree (ob, DECL_QUALIFIER (expr), ref_p);\n   stream_write_tree (ob, DECL_FIELD_BIT_OFFSET (expr), ref_p);\n   stream_write_tree (ob, DECL_FCONTEXT (expr), ref_p);\n-  streamer_write_chain (ob, TREE_CHAIN (expr), ref_p);\n }\n \n \n@@ -609,7 +608,7 @@ write_ts_type_non_common_tree_pointers (struct output_block *ob, tree expr,\n   else if (TREE_CODE (expr) == ARRAY_TYPE)\n     stream_write_tree (ob, TYPE_DOMAIN (expr), ref_p);\n   else if (RECORD_OR_UNION_TYPE_P (expr))\n-    stream_write_tree (ob, TYPE_FIELDS (expr), ref_p);\n+    streamer_write_chain (ob, TYPE_FIELDS (expr), ref_p);\n   else if (TREE_CODE (expr) == FUNCTION_TYPE\n \t   || TREE_CODE (expr) == METHOD_TYPE)\n     stream_write_tree (ob, TYPE_ARG_TYPES (expr), ref_p);"}, {"sha": "d7bbae3c6756979252b12305ffcae85f69d9ea7f", "filename": "gcc/tree.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4acd1c8460f069aed1e8c36656e4f7b330763035/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4acd1c8460f069aed1e8c36656e4f7b330763035/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=4acd1c8460f069aed1e8c36656e4f7b330763035", "patch": "@@ -4477,7 +4477,8 @@ free_lang_data_in_type (tree type)\n       member = TYPE_FIELDS (type);\n       while (member)\n \t{\n-\t  if (TREE_CODE (member) == FIELD_DECL)\n+\t  if (TREE_CODE (member) == FIELD_DECL\n+\t      || TREE_CODE (member) == TYPE_DECL)\n \t    {\n \t      if (prev)\n \t\tTREE_CHAIN (prev) = member;\n@@ -4872,7 +4873,8 @@ find_decls_types_r (tree *tp, int *ws, void *data)\n \t  tem = TYPE_FIELDS (t);\n \t  while (tem)\n \t    {\n-\t      if (TREE_CODE (tem) == FIELD_DECL)\n+\t      if (TREE_CODE (tem) == FIELD_DECL\n+\t\t  || TREE_CODE (tem) == TYPE_DECL)\n \t\tfld_worklist_push (tem, fld);\n \t      tem = TREE_CHAIN (tem);\n \t    }"}]}