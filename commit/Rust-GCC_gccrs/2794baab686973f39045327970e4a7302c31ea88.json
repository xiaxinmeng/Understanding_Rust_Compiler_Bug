{"sha": "2794baab686973f39045327970e4a7302c31ea88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjc5NGJhYWI2ODY5NzNmMzkwNDUzMjc5NzBlNGE3MzAyYzMxZWE4OA==", "commit": {"author": {"name": "Cherry Zhang", "email": "cherryyz@google.com", "date": "2018-02-02T00:00:04Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2018-02-02T00:00:04Z"}, "message": "compiler: turn on escape analysis by default\n    \n    The escape analysis now runs by default. It can be disabled with\n    the negative flag, -fno-go-optimize-allocs.\n    \n    Reviewed-on: https://go-review.googlesource.com/86247\n\n\t* lang.opt (fgo-optimize): Remove RejectNegative.\n\t* go-c.h (go_enable_optimize): Update declaration to take value\n\targument.\n\t* go-lang.c (go_langhook_handle_option): Pass value to\n\tgo_enable_optimize.\n\t* gccgo.texi (Invoking gccgo): Update -fgo-optimize-allocs doc.\n\nFrom-SVN: r257319", "tree": {"sha": "86c02d77baa7232c84a3d624601cc0f9e7405174", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86c02d77baa7232c84a3d624601cc0f9e7405174"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2794baab686973f39045327970e4a7302c31ea88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2794baab686973f39045327970e4a7302c31ea88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2794baab686973f39045327970e4a7302c31ea88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2794baab686973f39045327970e4a7302c31ea88/comments", "author": {"login": "cherrymui", "id": 14119929, "node_id": "MDQ6VXNlcjE0MTE5OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/14119929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cherrymui", "html_url": "https://github.com/cherrymui", "followers_url": "https://api.github.com/users/cherrymui/followers", "following_url": "https://api.github.com/users/cherrymui/following{/other_user}", "gists_url": "https://api.github.com/users/cherrymui/gists{/gist_id}", "starred_url": "https://api.github.com/users/cherrymui/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cherrymui/subscriptions", "organizations_url": "https://api.github.com/users/cherrymui/orgs", "repos_url": "https://api.github.com/users/cherrymui/repos", "events_url": "https://api.github.com/users/cherrymui/events{/privacy}", "received_events_url": "https://api.github.com/users/cherrymui/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "90bf94878bea2883158d02370cb2692d4b2ed4a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90bf94878bea2883158d02370cb2692d4b2ed4a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90bf94878bea2883158d02370cb2692d4b2ed4a1"}], "stats": {"total": 49, "additions": 29, "deletions": 20}, "files": [{"sha": "92abf590c29c6f86e14086f1842bac736b169264", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2794baab686973f39045327970e4a7302c31ea88/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2794baab686973f39045327970e4a7302c31ea88/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=2794baab686973f39045327970e4a7302c31ea88", "patch": "@@ -1,3 +1,12 @@\n+2018-02-01  Cherry Zhang  <cherryyz@google.com>\n+\n+\t* lang.opt (fgo-optimize): Remove RejectNegative.\n+\t* go-c.h (go_enable_optimize): Update declaration to take value\n+\targument.\n+\t* go-lang.c (go_langhook_handle_option): Pass value to\n+\tgo_enable_optimize.\n+\t* gccgo.texi (Invoking gccgo): Update -fgo-optimize-allocs doc.\n+\n 2018-01-30  Ian Lance Taylor  <iant@golang.org>\n \n \t* go-gcc.cc (Gcc_backend::convert_tree): New private method."}, {"sha": "f42be9a52a6ca780c8024e74ee6b0d6cd176ca77", "filename": "gcc/go/gccgo.texi", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2794baab686973f39045327970e4a7302c31ea88/gcc%2Fgo%2Fgccgo.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2794baab686973f39045327970e4a7302c31ea88/gcc%2Fgo%2Fgccgo.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgccgo.texi?ref=2794baab686973f39045327970e4a7302c31ea88", "patch": "@@ -229,10 +229,10 @@ may be used.  Or the checks may be removed via\n by default, but in the future may be off by default on systems that do\n not require it.\n \n-@item -fgo-optimize-allocs\n-@cindex @option{-fgo-optimize-allocs}\n-Use escape analysis to allocate objects on the stack rather than the\n-heap when possible.  In the future this may be the default.\n+@item -fno-go-optimize-allocs\n+@cindex @option{-fno-go-optimize-allocs}\n+Disable escape analysis, which tries to allocate objects on the stack\n+rather than the heap.\n \n @item -fgo-debug-escape@var{n}\n @cindex @option{-fgo-debug-escape}"}, {"sha": "2dc1d434bd5cd1c0073e0bacbbcbbd35d233099c", "filename": "gcc/go/go-c.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2794baab686973f39045327970e4a7302c31ea88/gcc%2Fgo%2Fgo-c.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2794baab686973f39045327970e4a7302c31ea88/gcc%2Fgo%2Fgo-c.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-c.h?ref=2794baab686973f39045327970e4a7302c31ea88", "patch": "@@ -29,7 +29,7 @@ class Backend;\n    interface.  */\n \n extern int go_enable_dump (const char*);\n-extern int go_enable_optimize (const char*);\n+extern int go_enable_optimize (const char*, int);\n \n extern void go_add_search_path (const char*);\n "}, {"sha": "45dee88fe485bf1065ea8ae7342a4429debe5afd", "filename": "gcc/go/go-lang.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2794baab686973f39045327970e4a7302c31ea88/gcc%2Fgo%2Fgo-lang.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2794baab686973f39045327970e4a7302c31ea88/gcc%2Fgo%2Fgo-lang.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-lang.c?ref=2794baab686973f39045327970e4a7302c31ea88", "patch": "@@ -194,7 +194,7 @@ static bool\n go_langhook_handle_option (\n     size_t scode,\n     const char *arg,\n-    int value ATTRIBUTE_UNUSED,\n+    int value,\n     int kind ATTRIBUTE_UNUSED,\n     location_t loc ATTRIBUTE_UNUSED,\n     const struct cl_option_handlers *handlers ATTRIBUTE_UNUSED)\n@@ -251,7 +251,7 @@ go_langhook_handle_option (\n       break;\n \n     case OPT_fgo_optimize_:\n-      ret = go_enable_optimize (arg) ? true : false;\n+      ret = go_enable_optimize (arg, value) ? true : false;\n       break;\n \n     case OPT_fgo_pkgpath_:"}, {"sha": "cc64fad98ce9e9ebe65632374ad73e001e1813d4", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2794baab686973f39045327970e4a7302c31ea88/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2794baab686973f39045327970e4a7302c31ea88/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=2794baab686973f39045327970e4a7302c31ea88", "patch": "@@ -1,4 +1,4 @@\n-023c3d4358d101c71ac1436065690eaec2ce138e\n+e148068360699f24118950b728f23a5c98e1f85e\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "51e80e446451388f251a4a25679c7828da87e80d", "filename": "gcc/go/gofrontend/escape.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2794baab686973f39045327970e4a7302c31ea88/gcc%2Fgo%2Fgofrontend%2Fescape.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2794baab686973f39045327970e4a7302c31ea88/gcc%2Fgo%2Fgofrontend%2Fescape.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fescape.cc?ref=2794baab686973f39045327970e4a7302c31ea88", "patch": "@@ -825,7 +825,7 @@ Escape_note::parse_tag(std::string* tag)\n \n // The -fgo-optimize-alloc flag activates this escape analysis.\n \n-Go_optimize optimize_allocation_flag(\"allocs\");\n+Go_optimize optimize_allocation_flag(\"allocs\", true);\n \n // A helper function to compute whether a function name has a\n // matching hash value."}, {"sha": "d24f35c58d3fca659376fd1e06a72856a9a61396", "filename": "gcc/go/gofrontend/go-optimize.cc", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2794baab686973f39045327970e4a7302c31ea88/gcc%2Fgo%2Fgofrontend%2Fgo-optimize.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2794baab686973f39045327970e4a7302c31ea88/gcc%2Fgo%2Fgofrontend%2Fgo-optimize.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgo-optimize.cc?ref=2794baab686973f39045327970e4a7302c31ea88", "patch": "@@ -19,35 +19,35 @@ Go_optimize* optimizations;\n \n // Create a new optimization.\n \n-Go_optimize::Go_optimize(const char* name)\n-  : next_(optimizations), name_(name), is_enabled_(false)\n+Go_optimize::Go_optimize(const char* name, bool enabled)\n+  : next_(optimizations), name_(name), is_enabled_(enabled)\n {\n   optimizations = this;\n }\n \n // Enable an optimization by name.\n \n bool\n-Go_optimize::enable_by_name(const char* name)\n+Go_optimize::enable_by_name(const char* name, bool value)\n {\n   bool is_all = strcmp(name, \"all\") == 0;\n   bool found = false;\n   for (Go_optimize* p = optimizations; p != NULL; p = p->next_)\n     {\n       if (is_all || strcmp(name, p->name_) == 0)\n \t{\n-\t  p->is_enabled_ = true;\n+\t  p->is_enabled_ = value;\n \t  found = true;\n \t}\n     }\n   return found;\n }\n \n-// Enable an optimization.  Return 1 if this is a real name, 0 if not.\n+// Enable/disable an optimization.  Return 1 if this is a real name, 0 if not.\n \n GO_EXTERN_C\n int\n-go_enable_optimize(const char* name)\n+go_enable_optimize(const char* name, int value)\n {\n-  return Go_optimize::enable_by_name(name) ? 1 : 0;\n+  return Go_optimize::enable_by_name(name, (bool)value) ? 1 : 0;\n }"}, {"sha": "1ca68deba0825cd20c73a7118a2e2efca18f9963", "filename": "gcc/go/gofrontend/go-optimize.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2794baab686973f39045327970e4a7302c31ea88/gcc%2Fgo%2Fgofrontend%2Fgo-optimize.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2794baab686973f39045327970e4a7302c31ea88/gcc%2Fgo%2Fgofrontend%2Fgo-optimize.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fgo-optimize.h?ref=2794baab686973f39045327970e4a7302c31ea88", "patch": "@@ -15,16 +15,16 @@\n class Go_optimize\n {\n  public:\n-  Go_optimize(const char* name);\n+  Go_optimize(const char*, bool);\n \n   // Whether this optimizaiton was enabled.\n   bool\n   is_enabled() const\n   { return this->is_enabled_; }\n \n-  // Enable an optimization by name.  Return true if found.\n+  // Enable/disable an optimization by name.  Return true if found.\n   static bool\n-  enable_by_name(const char*);\n+  enable_by_name(const char*, bool);\n \n  private:\n   // The next optimize flag.  These are not in any order."}, {"sha": "ee1c2913f2733eda507e8bc256ff1944f5243249", "filename": "gcc/go/lang.opt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2794baab686973f39045327970e4a7302c31ea88/gcc%2Fgo%2Flang.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2794baab686973f39045327970e4a7302c31ea88/gcc%2Fgo%2Flang.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Flang.opt?ref=2794baab686973f39045327970e4a7302c31ea88", "patch": "@@ -58,7 +58,7 @@ Go Joined RejectNegative\n -fgo-dump-<type>\tDump Go frontend internal information.\n \n fgo-optimize-\n-Go Joined RejectNegative\n+Go Joined\n -fgo-optimize-<type>\tTurn on optimization passes in the frontend.\n \n fgo-pkgpath="}]}