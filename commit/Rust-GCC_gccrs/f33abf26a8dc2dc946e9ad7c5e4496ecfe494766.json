{"sha": "f33abf26a8dc2dc946e9ad7c5e4496ecfe494766", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjMzYWJmMjZhOGRjMmRjOTQ2ZTlhZDdjNWU0NDk2ZWNmZTQ5NDc2Ng==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2007-08-31T10:24:20Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-08-31T10:24:20Z"}, "message": "s-fileio.adb (Open): Normalize file name to lower case in non-case sensitive file name systems to...\n\n2007-08-31  Robert Dewar  <dewar@adacore.com>\n\n\t* s-fileio.adb (Open): Normalize file name to lower case in non-case\n\tsensitive file name systems to avoid unexpected mismatch in Vista.\n\nFrom-SVN: r127981", "tree": {"sha": "d99a0c533d70f992091ba4507f08ac572ce64102", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d99a0c533d70f992091ba4507f08ac572ce64102"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f33abf26a8dc2dc946e9ad7c5e4496ecfe494766", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f33abf26a8dc2dc946e9ad7c5e4496ecfe494766", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f33abf26a8dc2dc946e9ad7c5e4496ecfe494766", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f33abf26a8dc2dc946e9ad7c5e4496ecfe494766/comments", "author": null, "committer": null, "parents": [{"sha": "9c5108032251ba012f8671abaf40a6a58d83efc5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9c5108032251ba012f8671abaf40a6a58d83efc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9c5108032251ba012f8671abaf40a6a58d83efc5"}], "stats": {"total": 68, "additions": 43, "deletions": 25}, "files": [{"sha": "40a02fb010feaf52b811bc87765c087527500b49", "filename": "gcc/ada/s-fileio.adb", "status": "modified", "additions": 43, "deletions": 25, "changes": 68, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f33abf26a8dc2dc946e9ad7c5e4496ecfe494766/gcc%2Fada%2Fs-fileio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f33abf26a8dc2dc946e9ad7c5e4496ecfe494766/gcc%2Fada%2Fs-fileio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-fileio.adb?ref=f33abf26a8dc2dc946e9ad7c5e4496ecfe494766", "patch": "@@ -34,8 +34,11 @@\n with Ada.Finalization;            use Ada.Finalization;\n with Ada.IO_Exceptions;           use Ada.IO_Exceptions;\n with Interfaces.C_Streams;        use Interfaces.C_Streams;\n+\n with System.CRTL;\n+with System.Case_Util;            use System.Case_Util;\n with System.Soft_Links;\n+\n with Ada.Unchecked_Deallocation;\n \n package body System.File_IO is\n@@ -91,6 +94,14 @@ package body System.File_IO is\n      (C, text_translation_required, \"__gnat_text_translation_required\");\n    --  If true, add appropriate suffix to control string for Open\n \n+   function Get_Case_Sensitive return Integer;\n+   pragma Import (C, Get_Case_Sensitive,\n+                  \"__gnat_get_file_names_case_sensitive\");\n+   File_Names_Case_Sensitive : constant Boolean := Get_Case_Sensitive /= 0;\n+   --  Set to indicate whether the operating system convention is for file\n+   --  names to be case sensitive (e.g., in Unix, set True), or non case\n+   --  sensitive (e.g., in OS/2, set False).\n+\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n@@ -870,6 +881,17 @@ package body System.File_IO is\n             Full_Name_Len := Full_Name_Len + 1;\n          end loop;\n \n+         --  Fullname is generated by calling system's full_name. The problem\n+         --  is, full_name does nothing about the casing, so a file name\n+         --  comparison may generally speaking not be valid on non-case\n+         --  sensitive systems, and in particular we get unexpected failures\n+         --  on Windows/Vista because of this. So we use s-casuti to force\n+         --  the name to lower case.\n+\n+         if not File_Names_Case_Sensitive then\n+            To_Lower (Fullname (1 .. Full_Name_Len));\n+         end if;\n+\n          --  If Shared=None or Shared=Yes, then check for the existence\n          --  of another file with exactly the same full name.\n \n@@ -889,9 +911,9 @@ package body System.File_IO is\n                   if Fullname (1 .. Full_Name_Len) = P.Name.all then\n \n                      --  If we get a match, and either file has Shared=None,\n-                     --  then raise Use_Error, since we don't allow two\n-                     --  files of the same name to be opened unless they\n-                     --  specify the required sharing mode.\n+                     --  then raise Use_Error, since we don't allow two files\n+                     --  of the same name to be opened unless they specify the\n+                     --  required sharing mode.\n \n                      if Shared = None\n                        or else P.Shared_Status = None\n@@ -907,13 +929,12 @@ package body System.File_IO is\n                         Stream := P.Stream;\n                         exit;\n \n-                     --  Otherwise one of the files has Shared=Yes and one\n-                     --  has Shared=No. If the current file has Shared=No\n-                     --  then all is well but we don't want to share any\n-                     --  other file's stream. If the current file has\n-                     --  Shared=Yes, we would like to share a stream, but\n-                     --  not from a file that has Shared=No, so in either\n-                     --  case we just keep going on the search.\n+                     --  Otherwise one of the files has Shared=Yes and one has\n+                     --  Shared=No. If the current file has Shared=No then all\n+                     --  is well but we don't want to share any other file's\n+                     --  stream. If the current file has Shared=Yes, we would\n+                     --  like to share a stream, but not from a file that has\n+                     --  Shared=No, so either way, we just continue the search.\n \n                      else\n                         null;\n@@ -937,28 +958,25 @@ package body System.File_IO is\n          if Stream = NULL_Stream then\n             Fopen_Mode (Mode, Text, Creat, Amethod, Fopstr);\n \n-            --  A special case, if we are opening (OPEN case) a file and\n-            --  the mode returned by Fopen_Mode is not \"r\" or \"r+\", then\n-            --  we first make sure that the file exists as required by\n-            --  Ada semantics.\n+            --  A special case, if we are opening (OPEN case) a file and the\n+            --  mode returned by Fopen_Mode is not \"r\" or \"r+\", then we first\n+            --  make sure that the file exists as required by Ada semantics.\n \n             if Creat = False and then Fopstr (1) /= 'r' then\n                if file_exists (Namestr'Address) = 0 then\n                   raise Name_Error;\n                end if;\n             end if;\n \n-            --  Now open the file. Note that we use the name as given\n-            --  in the original Open call for this purpose, since that\n-            --  seems the clearest implementation of the intent. It\n-            --  would presumably work to use the full name here, but\n-            --  if there is any difference, then we should use the\n-            --  name used in the call.\n-\n-            --  Note: for a corresponding delete, we will use the\n-            --  full name, since by the time of the delete, the\n-            --  current working directory may have changed and\n-            --  we do not want to delete a different file!\n+            --  Now open the file. Note that we use the name as given in the\n+            --  original Open call for this purpose, since that seems the\n+            --  clearest implementation of the intent. It would presumably\n+            --  work to use the full name here, but if there is any difference,\n+            --  then we should use the name used in the call.\n+\n+            --  Note: for a corresponding delete, we will use the full name,\n+            --  since by the time of the delete, the current working directory\n+            --  may have changed and we do not want to delete a different file!\n \n             Stream := fopen (Namestr'Address, Fopstr'Address, Encoding);\n "}]}