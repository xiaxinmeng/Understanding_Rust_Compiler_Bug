{"sha": "a8a1da109efe9b12183353faa87b113f6992898f", "node_id": "C_kwDOANBUbNoAKGE4YTFkYTEwOWVmZTliMTIxODMzNTNmYWE4N2IxMTNmNjk5Mjg5OGY", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2022-05-23T13:47:18Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-07-04T07:45:53Z"}, "message": "[Ada] Add Ada 2022 features to sets containers\n\nThis patch adds some Ada 2022 features to the set children of\nAda.Containers.\n\ngcc/ada/\n\n\t* libgnat/a-cbhase.adb, libgnat/a-cbhase.ads,\n\tlibgnat/a-cborse.adb, libgnat/a-cborse.ads,\n\tlibgnat/a-cihase.adb, libgnat/a-cihase.ads,\n\tlibgnat/a-ciorse.adb, libgnat/a-ciorse.ads,\n\tlibgnat/a-cohase.adb, libgnat/a-cohase.ads,\n\tlibgnat/a-conhel.adb, libgnat/a-conhel.ads,\n\tlibgnat/a-coorse.adb, libgnat/a-coorse.ads: Add Has_Element,\n\tElement, Query_Element, and Next subprograms that take a Set\n\tparameter. Add Tampering_With_Cursors_Prohibited function. These\n\tare all new in Ada 2022.", "tree": {"sha": "17cd94e9ec1f0f7da1d0d7063300ab919cc45a55", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17cd94e9ec1f0f7da1d0d7063300ab919cc45a55"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a8a1da109efe9b12183353faa87b113f6992898f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8a1da109efe9b12183353faa87b113f6992898f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a8a1da109efe9b12183353faa87b113f6992898f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a8a1da109efe9b12183353faa87b113f6992898f/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e9b2ab3b5bf6e4a0bdabfeb7358206b18253e3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e9b2ab3b5bf6e4a0bdabfeb7358206b18253e3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e9b2ab3b5bf6e4a0bdabfeb7358206b18253e3c"}], "stats": {"total": 490, "additions": 482, "deletions": 8}, "files": [{"sha": "b83ab8038f8dde2c9f2bf915e42f97425567ffe2", "filename": "gcc/ada/libgnat/a-cbhase.adb", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-cbhase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-cbhase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbhase.adb?ref=a8a1da109efe9b12183353faa87b113f6992898f", "patch": "@@ -1599,6 +1599,64 @@ is\n       raise Program_Error with \"attempt to stream reference\";\n    end Write;\n \n+   --  Ada 2022 features:\n+\n+   function Has_Element (Container : Set; Position : Cursor) return Boolean is\n+   begin\n+      pragma Assert (Vet (Position), \"bad cursor in Has_Element\");\n+      pragma Assert ((Position.Container = null) = (Position.Node = 0),\n+                     \"bad nullity in Has_Element\");\n+      return Position.Container = Container'Unrestricted_Access;\n+   end Has_Element;\n+\n+   function Tampering_With_Cursors_Prohibited\n+     (Container : Set) return Boolean\n+   is\n+   begin\n+      return Is_Busy (Container.TC);\n+   end Tampering_With_Cursors_Prohibited;\n+\n+   function Element (Container : Set; Position : Cursor) return Element_Type is\n+   begin\n+      if Checks and then not Has_Element (Container, Position) then\n+         raise Program_Error with \"Position for wrong Container\";\n+      end if;\n+\n+      return Element (Position);\n+   end Element;\n+\n+   procedure Query_Element\n+     (Container : Set;\n+      Position  : Cursor;\n+      Process   : not null access procedure (Element : Element_Type)) is\n+   begin\n+      if Checks and then not Has_Element (Container, Position) then\n+         raise Program_Error with \"Position for wrong Container\";\n+      end if;\n+\n+      Query_Element (Position, Process);\n+   end Query_Element;\n+\n+   function Next (Container : Set; Position : Cursor) return Cursor is\n+   begin\n+      if Checks and then\n+        not (Position = No_Element or else Has_Element (Container, Position))\n+      then\n+         raise Program_Error with \"Position for wrong Container\";\n+      end if;\n+\n+      return Next (Position);\n+   end Next;\n+\n+   procedure Next (Container : Set; Position : in out Cursor) is\n+   begin\n+      Position := Next (Container, Position);\n+   end Next;\n+\n+   ------------------\n+   -- Generic_Keys --\n+   ------------------\n+\n    package body Generic_Keys is\n \n       -----------------------"}, {"sha": "7079c51741824f3cd82207e39fd4ca917787d839", "filename": "gcc/ada/libgnat/a-cbhase.ads", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-cbhase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-cbhase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cbhase.ads?ref=a8a1da109efe9b12183353faa87b113f6992898f", "patch": "@@ -369,6 +369,25 @@ is\n      (Container : Set)\n       return Set_Iterator_Interfaces.Forward_Iterator'Class;\n \n+   --  Ada 2022 features:\n+\n+   function Has_Element (Container : Set; Position : Cursor) return Boolean;\n+\n+   function Tampering_With_Cursors_Prohibited (Container : Set) return Boolean;\n+\n+   function Element (Container : Set; Position : Cursor) return Element_Type;\n+\n+   procedure Query_Element\n+     (Container : Set;\n+      Position  : Cursor;\n+      Process   : not null access procedure (Element : Element_Type));\n+\n+   function Next (Container : Set; Position : Cursor) return Cursor;\n+\n+   procedure Next (Container : Set; Position : in out Cursor);\n+\n+   ----------------\n+\n    generic\n       type Key_Type (<>) is private;\n "}, {"sha": "bc52b4553a5fea6d0860ea789b1f76e9a21f7894", "filename": "gcc/ada/libgnat/a-cborse.adb", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-cborse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-cborse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cborse.adb?ref=a8a1da109efe9b12183353faa87b113f6992898f", "patch": "@@ -688,6 +688,62 @@ is\n               else Cursor'(Container'Unrestricted_Access, Node));\n    end Floor;\n \n+   --  Ada 2022 features:\n+\n+   function Has_Element (Container : Set; Position : Cursor) return Boolean is\n+   begin\n+      pragma Assert\n+        (Position.Container = null or else Vet (Container, Position.Node),\n+         \"bad cursor in Has_Element\");\n+      pragma Assert ((Position.Container = null) = (Position.Node = 0),\n+                     \"bad nullity in Has_Element\");\n+      return Position.Container = Container'Unrestricted_Access;\n+   end Has_Element;\n+\n+   function Tampering_With_Cursors_Prohibited\n+     (Container : Set) return Boolean\n+   is\n+   begin\n+      return Is_Busy (Container.TC);\n+   end Tampering_With_Cursors_Prohibited;\n+\n+   function Element (Container : Set; Position : Cursor) return Element_Type is\n+   begin\n+      if Checks and then not Has_Element (Container, Position) then\n+         raise Program_Error with \"Position for wrong Container\";\n+      end if;\n+\n+      return Element (Position);\n+   end Element;\n+\n+   procedure Query_Element\n+     (Container : Set;\n+      Position  : Cursor;\n+      Process   : not null access procedure (Element : Element_Type)) is\n+   begin\n+      if Checks and then not Has_Element (Container, Position) then\n+         raise Program_Error with \"Position for wrong Container\";\n+      end if;\n+\n+      Query_Element (Position, Process);\n+   end Query_Element;\n+\n+   function Next (Container : Set; Position : Cursor) return Cursor is\n+   begin\n+      if Checks and then\n+        not (Position = No_Element or else Has_Element (Container, Position))\n+      then\n+         raise Program_Error with \"Position for wrong Container\";\n+      end if;\n+\n+      return Next (Position);\n+   end Next;\n+\n+   procedure Next (Container : Set; Position : in out Cursor) is\n+   begin\n+      Position := Next (Container, Position);\n+   end Next;\n+\n    ------------------\n    -- Generic_Keys --\n    ------------------"}, {"sha": "be22c250714b3dbf1675683a77633053d08d0584", "filename": "gcc/ada/libgnat/a-cborse.ads", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-cborse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-cborse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cborse.ads?ref=a8a1da109efe9b12183353faa87b113f6992898f", "patch": "@@ -230,6 +230,25 @@ is\n       Start     : Cursor)\n       return Set_Iterator_Interfaces.Reversible_Iterator'class;\n \n+   --  Ada 2022 features:\n+\n+   function Has_Element (Container : Set; Position : Cursor) return Boolean;\n+\n+   function Tampering_With_Cursors_Prohibited (Container : Set) return Boolean;\n+\n+   function Element (Container : Set; Position : Cursor) return Element_Type;\n+\n+   procedure Query_Element\n+     (Container : Set;\n+      Position  : Cursor;\n+      Process   : not null access procedure (Element : Element_Type));\n+\n+   function Next (Container : Set; Position : Cursor) return Cursor;\n+\n+   procedure Next (Container : Set; Position : in out Cursor);\n+\n+   ----------------\n+\n    generic\n       type Key_Type (<>) is private;\n "}, {"sha": "0a9aabdeaa69ab382dcb296267f387726b08bd9d", "filename": "gcc/ada/libgnat/a-cihase.adb", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-cihase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-cihase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cihase.adb?ref=a8a1da109efe9b12183353faa87b113f6992898f", "patch": "@@ -2031,6 +2031,64 @@ is\n       Element_Type'Output (Stream, Node.Element.all);\n    end Write_Node;\n \n+   --  Ada 2022 features:\n+\n+   function Has_Element (Container : Set; Position : Cursor) return Boolean is\n+   begin\n+      pragma Assert (Vet (Position), \"bad cursor in Has_Element\");\n+      pragma Assert ((Position.Container = null) = (Position.Node = null),\n+                     \"bad nullity in Has_Element\");\n+      return Position.Container = Container'Unrestricted_Access;\n+   end Has_Element;\n+\n+   function Tampering_With_Cursors_Prohibited\n+     (Container : Set) return Boolean\n+   is\n+   begin\n+      return Is_Busy (Container.HT.TC);\n+   end Tampering_With_Cursors_Prohibited;\n+\n+   function Element (Container : Set; Position : Cursor) return Element_Type is\n+   begin\n+      if Checks and then not Has_Element (Container, Position) then\n+         raise Program_Error with \"Position for wrong Container\";\n+      end if;\n+\n+      return Element (Position);\n+   end Element;\n+\n+   procedure Query_Element\n+     (Container : Set;\n+      Position  : Cursor;\n+      Process   : not null access procedure (Element : Element_Type)) is\n+   begin\n+      if Checks and then not Has_Element (Container, Position) then\n+         raise Program_Error with \"Position for wrong Container\";\n+      end if;\n+\n+      Query_Element (Position, Process);\n+   end Query_Element;\n+\n+   function Next (Container : Set; Position : Cursor) return Cursor is\n+   begin\n+      if Checks and then\n+        not (Position = No_Element or else Has_Element (Container, Position))\n+      then\n+         raise Program_Error with \"Position for wrong Container\";\n+      end if;\n+\n+      return Next (Position);\n+   end Next;\n+\n+   procedure Next (Container : Set; Position : in out Cursor) is\n+   begin\n+      Position := Next (Container, Position);\n+   end Next;\n+\n+   ------------------\n+   -- Generic_Keys --\n+   ------------------\n+\n    package body Generic_Keys is\n \n       -----------------------"}, {"sha": "dcd1d6a86fa11efc21e47a17611492e09ee69f26", "filename": "gcc/ada/libgnat/a-cihase.ads", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-cihase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-cihase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cihase.ads?ref=a8a1da109efe9b12183353faa87b113f6992898f", "patch": "@@ -355,6 +355,25 @@ is\n    function Iterate (Container : Set)\n      return Set_Iterator_Interfaces.Forward_Iterator'Class;\n \n+   --  Ada 2022 features:\n+\n+   function Has_Element (Container : Set; Position : Cursor) return Boolean;\n+\n+   function Tampering_With_Cursors_Prohibited (Container : Set) return Boolean;\n+\n+   function Element (Container : Set; Position : Cursor) return Element_Type;\n+\n+   procedure Query_Element\n+     (Container : Set;\n+      Position  : Cursor;\n+      Process   : not null access procedure (Element : Element_Type));\n+\n+   function Next (Container : Set; Position : Cursor) return Cursor;\n+\n+   procedure Next (Container : Set; Position : in out Cursor);\n+\n+   ----------------\n+\n    generic\n       type Key_Type (<>) is private;\n "}, {"sha": "d5502eaea464e64556f6005ce23112d99f313bf9", "filename": "gcc/ada/libgnat/a-ciorse.adb", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-ciorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-ciorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ciorse.adb?ref=a8a1da109efe9b12183353faa87b113f6992898f", "patch": "@@ -721,6 +721,61 @@ is\n       Deallocate (X);\n    end Free;\n \n+   --  Ada 2022 features:\n+\n+   function Has_Element (Container : Set; Position : Cursor) return Boolean is\n+   begin\n+      pragma Assert\n+        (Vet (Container.Tree, Position.Node), \"bad cursor in Has_Element\");\n+      pragma Assert ((Position.Container = null) = (Position.Node = null),\n+                     \"bad nullity in Has_Element\");\n+      return Position.Container = Container'Unrestricted_Access;\n+   end Has_Element;\n+\n+   function Tampering_With_Cursors_Prohibited\n+     (Container : Set) return Boolean\n+   is\n+   begin\n+      return Is_Busy (Container.Tree.TC);\n+   end Tampering_With_Cursors_Prohibited;\n+\n+   function Element (Container : Set; Position : Cursor) return Element_Type is\n+   begin\n+      if Checks and then not Has_Element (Container, Position) then\n+         raise Program_Error with \"Position for wrong Container\";\n+      end if;\n+\n+      return Element (Position);\n+   end Element;\n+\n+   procedure Query_Element\n+     (Container : Set;\n+      Position  : Cursor;\n+      Process   : not null access procedure (Element : Element_Type)) is\n+   begin\n+      if Checks and then not Has_Element (Container, Position) then\n+         raise Program_Error with \"Position for wrong Container\";\n+      end if;\n+\n+      Query_Element (Position, Process);\n+   end Query_Element;\n+\n+   function Next (Container : Set; Position : Cursor) return Cursor is\n+   begin\n+      if Checks and then\n+        not (Position = No_Element or else Has_Element (Container, Position))\n+      then\n+         raise Program_Error with \"Position for wrong Container\";\n+      end if;\n+\n+      return Next (Position);\n+   end Next;\n+\n+   procedure Next (Container : Set; Position : in out Cursor) is\n+   begin\n+      Position := Next (Container, Position);\n+   end Next;\n+\n    ------------------\n    -- Generic_Keys --\n    ------------------"}, {"sha": "d053ac72649ed53bb58568755179d7b7506db59f", "filename": "gcc/ada/libgnat/a-ciorse.ads", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-ciorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-ciorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ciorse.ads?ref=a8a1da109efe9b12183353faa87b113f6992898f", "patch": "@@ -238,6 +238,25 @@ is\n       Start     : Cursor)\n       return Set_Iterator_Interfaces.Reversible_Iterator'class;\n \n+   --  Ada 2022 features:\n+\n+   function Has_Element (Container : Set; Position : Cursor) return Boolean;\n+\n+   function Tampering_With_Cursors_Prohibited (Container : Set) return Boolean;\n+\n+   function Element (Container : Set; Position : Cursor) return Element_Type;\n+\n+   procedure Query_Element\n+     (Container : Set;\n+      Position  : Cursor;\n+      Process   : not null access procedure (Element : Element_Type));\n+\n+   function Next (Container : Set; Position : Cursor) return Cursor;\n+\n+   procedure Next (Container : Set; Position : in out Cursor);\n+\n+   ----------------\n+\n    generic\n       type Key_Type (<>) is private;\n "}, {"sha": "4656868d59c0b60c52d380882de271a3f0aea280", "filename": "gcc/ada/libgnat/a-cohase.adb", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-cohase.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-cohase.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cohase.adb?ref=a8a1da109efe9b12183353faa87b113f6992898f", "patch": "@@ -1844,6 +1844,64 @@ is\n       Element_Type'Write (Stream, Node.Element);\n    end Write_Node;\n \n+   --  Ada 2022 features:\n+\n+   function Has_Element (Container : Set; Position : Cursor) return Boolean is\n+   begin\n+      pragma Assert (Vet (Position), \"bad cursor in Has_Element\");\n+      pragma Assert ((Position.Container = null) = (Position.Node = null),\n+                     \"bad nullity in Has_Element\");\n+      return Position.Container = Container'Unrestricted_Access;\n+   end Has_Element;\n+\n+   function Tampering_With_Cursors_Prohibited\n+     (Container : Set) return Boolean\n+   is\n+   begin\n+      return Is_Busy (Container.HT.TC);\n+   end Tampering_With_Cursors_Prohibited;\n+\n+   function Element (Container : Set; Position : Cursor) return Element_Type is\n+   begin\n+      if Checks and then not Has_Element (Container, Position) then\n+         raise Program_Error with \"Position for wrong Container\";\n+      end if;\n+\n+      return Element (Position);\n+   end Element;\n+\n+   procedure Query_Element\n+     (Container : Set;\n+      Position  : Cursor;\n+      Process   : not null access procedure (Element : Element_Type)) is\n+   begin\n+      if Checks and then not Has_Element (Container, Position) then\n+         raise Program_Error with \"Position for wrong Container\";\n+      end if;\n+\n+      Query_Element (Position, Process);\n+   end Query_Element;\n+\n+   function Next (Container : Set; Position : Cursor) return Cursor is\n+   begin\n+      if Checks and then\n+        not (Position = No_Element or else Has_Element (Container, Position))\n+      then\n+         raise Program_Error with \"Position for wrong Container\";\n+      end if;\n+\n+      return Next (Position);\n+   end Next;\n+\n+   procedure Next (Container : Set; Position : in out Cursor) is\n+   begin\n+      Position := Next (Container, Position);\n+   end Next;\n+\n+   ------------------\n+   -- Generic_Keys --\n+   ------------------\n+\n    package body Generic_Keys is\n \n       -----------------------"}, {"sha": "9f562d899b9e3a580b9233ee1719f83771e2a520", "filename": "gcc/ada/libgnat/a-cohase.ads", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-cohase.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-cohase.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-cohase.ads?ref=a8a1da109efe9b12183353faa87b113f6992898f", "patch": "@@ -367,6 +367,25 @@ is\n    function Iterate\n      (Container : Set) return Set_Iterator_Interfaces.Forward_Iterator'Class;\n \n+   --  Ada 2022 features:\n+\n+   function Has_Element (Container : Set; Position : Cursor) return Boolean;\n+\n+   function Tampering_With_Cursors_Prohibited (Container : Set) return Boolean;\n+\n+   function Element (Container : Set; Position : Cursor) return Element_Type;\n+\n+   procedure Query_Element\n+     (Container : Set;\n+      Position  : Cursor;\n+      Process   : not null access procedure (Element : Element_Type));\n+\n+   function Next (Container : Set; Position : Cursor) return Cursor;\n+\n+   procedure Next (Container : Set; Position : in out Cursor);\n+\n+   ----------------\n+\n    generic\n       type Key_Type (<>) is private;\n "}, {"sha": "46f1bcc436b67d5fcaaf099b30a01a4a2bd06921", "filename": "gcc/ada/libgnat/a-conhel.adb", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-conhel.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-conhel.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-conhel.adb?ref=a8a1da109efe9b12183353faa87b113f6992898f", "patch": "@@ -36,8 +36,6 @@ package body Ada.Containers.Helpers is\n \n    package body Generic_Implementation is\n \n-      use type SAC.Atomic_Unsigned;\n-\n       ------------\n       -- Adjust --\n       ------------\n@@ -133,7 +131,7 @@ package body Ada.Containers.Helpers is\n       procedure TC_Check (T_Counts : Tamper_Counts) is\n       begin\n          if T_Check then\n-            if T_Counts.Busy > 0 then\n+            if Is_Busy (T_Counts) then\n                raise Program_Error with\n                  \"attempt to tamper with cursors\";\n             end if;\n@@ -144,7 +142,7 @@ package body Ada.Containers.Helpers is\n             --  Thus if the busy count is zero, then the lock count\n             --  must also be zero.\n \n-            pragma Assert (T_Counts.Lock = 0);\n+            pragma Assert (not Is_Locked (T_Counts));\n          end if;\n       end TC_Check;\n \n@@ -154,7 +152,7 @@ package body Ada.Containers.Helpers is\n \n       procedure TE_Check (T_Counts : Tamper_Counts) is\n       begin\n-         if T_Check and then T_Counts.Lock > 0 then\n+         if T_Check and then Is_Locked (T_Counts) then\n             raise Program_Error with\n               \"attempt to tamper with elements\";\n          end if;"}, {"sha": "92e23d0f6df97524867adcedfaafbe359ffe651e", "filename": "gcc/ada/libgnat/a-conhel.ads", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-conhel.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-conhel.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-conhel.ads?ref=a8a1da109efe9b12183353faa87b113f6992898f", "patch": "@@ -121,9 +121,31 @@ package Ada.Containers.Helpers is\n       pragma Inline (TE_Check);\n       --  Tampering-with-elements check\n \n-      -----------------\n-      --  RAII Types --\n-      -----------------\n+      ---------------------------------------\n+      -- Queries of busy and locked status --\n+      ---------------------------------------\n+\n+      --  These are never called when tampering checks are suppressed.\n+\n+      use type SAC.Atomic_Unsigned;\n+\n+      pragma Warnings (Off);\n+      --  Otherwise, the -gnatw.n switch triggers unwanted warnings on the\n+      --  references to atomic variables below.\n+\n+      function Is_Busy (T_Counts : Tamper_Counts) return Boolean is\n+        (if T_Check then T_Counts.Busy > 0 else raise Program_Error);\n+      pragma Inline (Is_Busy);\n+\n+      function Is_Locked (T_Counts : Tamper_Counts) return Boolean is\n+        (if T_Check then T_Counts.Lock > 0 else raise Program_Error);\n+      pragma Inline (Is_Locked);\n+\n+      pragma Warnings (On);\n+\n+      ----------------\n+      -- RAII Types --\n+      ----------------\n \n       --  Initialize of With_Busy increments the Busy count, and Finalize\n       --  decrements it. Thus, to prohibit tampering with elements within a"}, {"sha": "848022e1c41fd155a7bf5006bca443a2bbaa0642", "filename": "gcc/ada/libgnat/a-coorse.adb", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-coorse.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-coorse.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-coorse.adb?ref=a8a1da109efe9b12183353faa87b113f6992898f", "patch": "@@ -643,6 +643,61 @@ is\n       end if;\n    end Free;\n \n+   --  Ada 2022 features:\n+\n+   function Has_Element (Container : Set; Position : Cursor) return Boolean is\n+   begin\n+      pragma Assert\n+        (Vet (Container.Tree, Position.Node), \"bad cursor in Has_Element\");\n+      pragma Assert ((Position.Container = null) = (Position.Node = null),\n+                     \"bad nullity in Has_Element\");\n+      return Position.Container = Container'Unrestricted_Access;\n+   end Has_Element;\n+\n+   function Tampering_With_Cursors_Prohibited\n+     (Container : Set) return Boolean\n+   is\n+   begin\n+      return Is_Busy (Container.Tree.TC);\n+   end Tampering_With_Cursors_Prohibited;\n+\n+   function Element (Container : Set; Position : Cursor) return Element_Type is\n+   begin\n+      if Checks and then not Has_Element (Container, Position) then\n+         raise Program_Error with \"Position for wrong Container\";\n+      end if;\n+\n+      return Element (Position);\n+   end Element;\n+\n+   procedure Query_Element\n+     (Container : Set;\n+      Position  : Cursor;\n+      Process   : not null access procedure (Element : Element_Type)) is\n+   begin\n+      if Checks and then not Has_Element (Container, Position) then\n+         raise Program_Error with \"Position for wrong Container\";\n+      end if;\n+\n+      Query_Element (Position, Process);\n+   end Query_Element;\n+\n+   function Next (Container : Set; Position : Cursor) return Cursor is\n+   begin\n+      if Checks and then\n+        not (Position = No_Element or else Has_Element (Container, Position))\n+      then\n+         raise Program_Error with \"Position for wrong Container\";\n+      end if;\n+\n+      return Next (Position);\n+   end Next;\n+\n+   procedure Next (Container : Set; Position : in out Cursor) is\n+   begin\n+      Position := Next (Container, Position);\n+   end Next;\n+\n    ------------------\n    -- Generic_Keys --\n    ------------------"}, {"sha": "9619599a5b73143cad46e13f8735918fd0ff30b7", "filename": "gcc/ada/libgnat/a-coorse.ads", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-coorse.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a8a1da109efe9b12183353faa87b113f6992898f/gcc%2Fada%2Flibgnat%2Fa-coorse.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-coorse.ads?ref=a8a1da109efe9b12183353faa87b113f6992898f", "patch": "@@ -231,6 +231,25 @@ is\n       Start     : Cursor)\n       return Set_Iterator_Interfaces.Reversible_Iterator'class;\n \n+   --  Ada 2022 features:\n+\n+   function Has_Element (Container : Set; Position : Cursor) return Boolean;\n+\n+   function Tampering_With_Cursors_Prohibited (Container : Set) return Boolean;\n+\n+   function Element (Container : Set; Position : Cursor) return Element_Type;\n+\n+   procedure Query_Element\n+     (Container : Set;\n+      Position  : Cursor;\n+      Process   : not null access procedure (Element : Element_Type));\n+\n+   function Next (Container : Set; Position : Cursor) return Cursor;\n+\n+   procedure Next (Container : Set; Position : in out Cursor);\n+\n+   ----------------\n+\n    generic\n       type Key_Type (<>) is private;\n "}]}