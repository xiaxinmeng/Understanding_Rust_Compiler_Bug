{"sha": "e5844e6d3984a967559f02386556127d12c8746f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU4NDRlNmQzOTg0YTk2NzU1OWYwMjM4NjU1NjEyN2QxMmM4NzQ2Zg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-02-28T10:44:05Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-02-28T10:44:05Z"}, "message": "Remove floating point and complex type template constant parms.\n\ncp:\n\tRemove floating point and complex type template constant parms.\n\t* pt.c (convert_nontype_argument): Remove REAL_TYPE and\n\tCOMPLEX_TYPE extensions.\n\t(invalid_nontype_parm_type_p): Likewise.\ntestuite:\n\t* g++.old-deja/g++.ext/realpt1.C: Remove.\n\nFrom-SVN: r40117", "tree": {"sha": "3d7b4003dbce2a25cd1ed0d2a8170738781bc609", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3d7b4003dbce2a25cd1ed0d2a8170738781bc609"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5844e6d3984a967559f02386556127d12c8746f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5844e6d3984a967559f02386556127d12c8746f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5844e6d3984a967559f02386556127d12c8746f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5844e6d3984a967559f02386556127d12c8746f/comments", "author": null, "committer": null, "parents": [{"sha": "323c6a747943b8f3b29e02fde96edfa61d1851f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/323c6a747943b8f3b29e02fde96edfa61d1851f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/323c6a747943b8f3b29e02fde96edfa61d1851f5"}], "stats": {"total": 52, "additions": 12, "deletions": 40}, "files": [{"sha": "fc3fb94597b42aaf583f132493ee8be8d1d444f3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5844e6d3984a967559f02386556127d12c8746f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5844e6d3984a967559f02386556127d12c8746f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=e5844e6d3984a967559f02386556127d12c8746f", "patch": "@@ -1,3 +1,10 @@\n+2001-02-28  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\tRemove floating point and complex type template constant parms.\n+\t* pt.c (convert_nontype_argument): Remove REAL_TYPE and\n+\tCOMPLEX_TYPE extensions.\n+\t(invalid_nontype_parm_type_p): Likewise.\n+\n 2001-02-27  Jeffrey Oldham  <oldham@codesourcery.com>\n \n \t* except.c (call_eh_info): Revert \"match_function\"'s type."}, {"sha": "331b307dc3d22133b06f54baf3cb7d7bd8969834", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 21, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5844e6d3984a967559f02386556127d12c8746f/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5844e6d3984a967559f02386556127d12c8746f/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=e5844e6d3984a967559f02386556127d12c8746f", "patch": "@@ -2945,10 +2945,7 @@ convert_nontype_argument (type, expr)\n     }\n   else if (INTEGRAL_TYPE_P (expr_type) \n \t   || TYPE_PTRMEM_P (expr_type) \n-\t   || TYPE_PTRMEMFUNC_P (expr_type)\n-\t   /* The next two are g++ extensions.  */\n-\t   || TREE_CODE (expr_type) == REAL_TYPE\n-\t   || TREE_CODE (expr_type) == COMPLEX_TYPE)\n+\t   || TYPE_PTRMEMFUNC_P (expr_type))\n     {\n       if (! TREE_CONSTANT (expr))\n \t{\n@@ -2987,19 +2984,6 @@ convert_nontype_argument (type, expr)\n       \n       return expr;\n \t\n-    case REAL_TYPE:\n-    case COMPLEX_TYPE:\n-      /* These are g++ extensions.  */\n-      if (TREE_CODE (expr_type) != TREE_CODE (type))\n-\treturn error_mark_node;\n-\n-      expr = digest_init (type, expr, (tree*) 0);\n-      \n-      if (TREE_CODE (expr) != REAL_CST)\n-\tgoto non_constant;\n-\n-      return expr;\n-\n     case POINTER_TYPE:\n       {\n \ttree type_pointed_to = TREE_TYPE (type);\n@@ -10355,10 +10339,6 @@ invalid_nontype_parm_type_p (type, complain)\n     return 0;\n   else if (TYPE_PTRMEMFUNC_P (type))\n     return 0;\n-  else if (!pedantic && TREE_CODE (type) == REAL_TYPE)\n-    return 0; /* GNU extension */\n-  else if (!pedantic && TREE_CODE (type) == COMPLEX_TYPE)\n-    return 0; /* GNU extension */\n   else if (TREE_CODE (type) == TEMPLATE_TYPE_PARM)\n     return 0;\n   else if (TREE_CODE (type) == TYPENAME_TYPE)"}, {"sha": "82d82b3e6087fff89b178365260d344e07c10e4f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5844e6d3984a967559f02386556127d12c8746f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5844e6d3984a967559f02386556127d12c8746f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e5844e6d3984a967559f02386556127d12c8746f", "patch": "@@ -1,3 +1,7 @@\n+2001-02-28  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.ext/realpt1.C: Remove.\n+\n 2001-02-27  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* g++.old-deja/g++.abi/vtable3.h: Check vcall offsets too."}, {"sha": "7e8ea9164bcf8d4c7de25e0dad2b9ecec82e0f5e", "filename": "gcc/testsuite/g++.old-deja/g++.ext/realpt1.C", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/323c6a747943b8f3b29e02fde96edfa61d1851f5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Frealpt1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/323c6a747943b8f3b29e02fde96edfa61d1851f5/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Frealpt1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Frealpt1.C?ref=323c6a747943b8f3b29e02fde96edfa61d1851f5", "patch": "@@ -1,19 +0,0 @@\n-// Build don't link:\n-// Special g++ Options:\n-// Origin: Mark Mitchell <mark@codesourcery.com>\n-\n-template <double d>\n-struct S;\n-\n-template <double d, double e>\n-void f (S<d>*, S<e>*, S<d + e>*);\n-\n-void g ()\n-{\n-  S<2.0>* s1;\n-  S<3.7>* s2;\n-  S<5.7>* s3;\n-  \n-  f (s1, s2, s3);\n-}\n-"}]}