{"sha": "4b6133ea8b7a4db9e69e7a72459aa7e754b8c596", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGI2MTMzZWE4YjdhNGRiOWU2OWU3YTcyNDU5YWE3ZTc1NGI4YzU5Ng==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-09T13:08:01Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2010-09-09T13:08:01Z"}, "message": "[multiple changes]\n\n2010-09-09  Yannick Moy  <moy@adacore.com>\n\n\t* a-cihama.adb, a-cohama.adb: Fix comments.\n\n2010-09-09  Arnaud Charlet  <charlet@adacore.com>\n\n\t* i-cexten.ads: Add comments.\n\t(Signed_128): New type, used by some C bindings.\n\t* debug.adb: Update comment.\n\n2010-09-09  Sergey Rybin  <rybin@adacore.com>\n\n\t* gnat_ugn.texi: For ASIS tools (gnatpp, gnatcheck, gnatelim,\n\tgnatmetric and gnatstub) add a note that '-gnat05' should be used if\n\tthe tool should process Ada 2005 sources.\n\n2010-09-09  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch12.adb (Remove_Parent): If the scope containing the child\n\tinstance is a block, examine the enclosing scope to determine if it is\n\ta parent instance.\n\nFrom-SVN: r164089", "tree": {"sha": "91b70bf21f49e1c2f84c24477d4bf41bfe75ea3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91b70bf21f49e1c2f84c24477d4bf41bfe75ea3b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b6133ea8b7a4db9e69e7a72459aa7e754b8c596", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b6133ea8b7a4db9e69e7a72459aa7e754b8c596", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b6133ea8b7a4db9e69e7a72459aa7e754b8c596", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b6133ea8b7a4db9e69e7a72459aa7e754b8c596/comments", "author": null, "committer": null, "parents": [{"sha": "7425962bec2aea95fced4c13d7cb5a46df97cb36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7425962bec2aea95fced4c13d7cb5a46df97cb36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7425962bec2aea95fced4c13d7cb5a46df97cb36"}], "stats": {"total": 109, "additions": 81, "deletions": 28}, "files": [{"sha": "8cc6557c7b3a21eeb3f394c41d9799dddc4c7fee", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6133ea8b7a4db9e69e7a72459aa7e754b8c596/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6133ea8b7a4db9e69e7a72459aa7e754b8c596/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4b6133ea8b7a4db9e69e7a72459aa7e754b8c596", "patch": "@@ -1,3 +1,25 @@\n+2010-09-09  Yannick Moy  <moy@adacore.com>\n+\n+\t* a-cihama.adb, a-cohama.adb: Fix comments.\n+\n+2010-09-09  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* i-cexten.ads: Add comments.\n+\t(Signed_128): New type, used by some C bindings.\n+\t* debug.adb: Update comment.\n+\n+2010-09-09  Sergey Rybin  <rybin@adacore.com>\n+\n+\t* gnat_ugn.texi: For ASIS tools (gnatpp, gnatcheck, gnatelim,\n+\tgnatmetric and gnatstub) add a note that '-gnat05' should be used if\n+\tthe tool should process Ada 2005 sources.\n+\n+2010-09-09  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch12.adb (Remove_Parent): If the scope containing the child\n+\tinstance is a block, examine the enclosing scope to determine if it is\n+\ta parent instance.\n+\n 2010-09-09  Doug Rupp  <rupp@adacore.com>\n \n \t* sem_prag.adb (pragma Ident): Pass --identification= vice "}, {"sha": "e2e961bd173c44e4bdc7d38eec2b1688583513a2", "filename": "gcc/ada/a-cihama.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6133ea8b7a4db9e69e7a72459aa7e754b8c596/gcc%2Fada%2Fa-cihama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6133ea8b7a4db9e69e7a72459aa7e754b8c596/gcc%2Fada%2Fa-cihama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cihama.adb?ref=4b6133ea8b7a4db9e69e7a72459aa7e754b8c596", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1031,7 +1031,7 @@ package body Ada.Containers.Indefinite_Hashed_Maps is\n                return False;\n             end if;\n \n-            if X = X.Next then -- to prevent endless loop\n+            if X = X.Next then  --  to prevent unnecessary looping\n                return False;\n             end if;\n "}, {"sha": "fb86bef36a8c144e507fc72ba123ca694f62ef0f", "filename": "gcc/ada/a-cohama.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6133ea8b7a4db9e69e7a72459aa7e754b8c596/gcc%2Fada%2Fa-cohama.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6133ea8b7a4db9e69e7a72459aa7e754b8c596/gcc%2Fada%2Fa-cohama.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cohama.adb?ref=4b6133ea8b7a4db9e69e7a72459aa7e754b8c596", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2004-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2004-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -908,7 +908,7 @@ package body Ada.Containers.Hashed_Maps is\n                return False;\n             end if;\n \n-            if X = X.Next then  --  to prevent endless loop\n+            if X = X.Next then  --  to prevent unnecessary looping\n                return False;\n             end if;\n "}, {"sha": "5b4f245e70bf701ea3cdc8c64c0d0237125f0862", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6133ea8b7a4db9e69e7a72459aa7e754b8c596/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6133ea8b7a4db9e69e7a72459aa7e754b8c596/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=4b6133ea8b7a4db9e69e7a72459aa7e754b8c596", "patch": "@@ -581,8 +581,7 @@ package body Debug is\n    --  d.T  Force Optimize_Alignment (Time) mode as the default\n \n    --  d.W  Print out debugging information for Walk_Library_Items, including\n-   --       the order in which units are walked. This is primarily for SofCheck\n-   --       Inspector.\n+   --       the order in which units are walked. This is primarily for CodePeer\n \n    --  d.X  By default, the compiler uses an elaborate rewriting framework for\n    --       short-circuited forms where the right hand condition generates"}, {"sha": "e7fbbf6b70a50e6a28833e63e49fbda3b45f2f83", "filename": "gcc/ada/gnat_ugn.texi", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6133ea8b7a4db9e69e7a72459aa7e754b8c596/gcc%2Fada%2Fgnat_ugn.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6133ea8b7a4db9e69e7a72459aa7e754b8c596/gcc%2Fada%2Fgnat_ugn.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_ugn.texi?ref=4b6133ea8b7a4db9e69e7a72459aa7e754b8c596", "patch": "@@ -10755,7 +10755,9 @@ the file name may contain path information.\n @command{gcc}. They will be passed on to all compiler invocations made by\n @command{gnatelim} to generate the ASIS trees. Here you can provide\n @option{^-I^/INCLUDE_DIRS=^} switches to form the source search path,\n-use the @option{-gnatec} switch to set the configuration file etc.\n+use the @option{-gnatec} switch to set the configuration file,\n+use the @option{-gnat05} switch if sources should be compiled in\n+Ada 2005 mode etc.\n \n @code{gnatelim} has the following switches:\n \n@@ -12652,7 +12654,9 @@ follow the GNAT file naming rules\n @command{gcc}. They will be passed on to all compiler invocations made by\n @command{gnatelim} to generate the ASIS trees. Here you can provide\n @option{^-I^/INCLUDE_DIRS=^} switches to form the source search path,\n-use the @option{-gnatec} switch to set the configuration file etc.\n+use the @option{-gnatec} switch to set the configuration file,\n+use the @option{-gnat05} switch if sources should be compiled in\n+Ada 2005 mode  etc.\n @end itemize\n \n @menu\n@@ -13766,7 +13770,9 @@ Including both a @option{-files} switch and one or more\n @command{gcc}. They will be passed on to all compiler invocations made by\n @command{gnatmetric} to generate the ASIS trees. Here you can provide\n @option{^-I^/INCLUDE_DIRS=^} switches to form the source search path,\n-and use the @option{-gnatec} switch to set the configuration file.\n+and use the @option{-gnatec} switch to set the configuration file,\n+use the @option{-gnat05} switch if sources should be compiled in\n+Ada 2005 mode etc.\n @end itemize\n \n @menu\n@@ -17151,7 +17157,9 @@ or line breaks.\n @command{gcc}. They will be passed on to all compiler invocations made by\n @command{gnatcheck} to generate the ASIS trees. Here you can provide\n @option{^-I^/INCLUDE_DIRS=^} switches to form the source search path,\n-and use the @option{-gnatec} switch to set the configuration file.\n+and use the @option{-gnatec} switch to set the configuration file,\n+use the @option{-gnat05} switch if sources should be compiled in\n+Ada 2005 mode etc.\n \n @item\n @var{rule_options} is a list of options for controlling a set of\n@@ -17816,7 +17824,9 @@ current directory)\n @command{gcc}. They will be passed on to all compiler invocations made by\n @command{gnatelim} to generate the ASIS trees. Here you can provide\n @option{^-I^/INCLUDE_DIRS=^} switches to form the source search path,\n-use the @option{-gnatec} switch to set the configuration file etc.\n+use the @option{-gnatec} switch to set the configuration file,\n+use the @option{-gnat05} switch if sources should be compiled in\n+Ada 2005 mode etc.\n \n @item switches\n is an optional sequence of switches as described in the next section"}, {"sha": "c2dd33b48db42a79cc2eeef06f0f9ab31a534b8f", "filename": "gcc/ada/i-cexten.ads", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6133ea8b7a4db9e69e7a72459aa7e754b8c596/gcc%2Fada%2Fi-cexten.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6133ea8b7a4db9e69e7a72459aa7e754b8c596/gcc%2Fada%2Fi-cexten.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fi-cexten.ads?ref=4b6133ea8b7a4db9e69e7a72459aa7e754b8c596", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -36,24 +36,39 @@ with System;\n \n package Interfaces.C.Extensions is\n \n-   --  Following 7 declarations need comments ???\n+   --  Definitions for C \"void\" and \"void*\" types\n \n    subtype void     is System.Address;\n    subtype void_ptr is System.Address;\n \n+   --  Definitions for C incomplete/unknown structs\n+\n    subtype opaque_structure_def is System.Address;\n    type opaque_structure_def_ptr is access opaque_structure_def;\n \n+   --  Definitions for C++ incomplete/unknown classes\n+\n    subtype incomplete_class_def is System.Address;\n    type incomplete_class_def_ptr is access incomplete_class_def;\n \n+   --  C bool\n+\n    subtype bool is plain_char;\n \n    --  64bit integer types\n \n    subtype long_long is Long_Long_Integer;\n    type unsigned_long_long is mod 2 ** 64;\n \n+   --  128bit integer type available on 64bit platforms:\n+   --  typedef int signed_128 __attribute__ ((mode (TI)));\n+\n+   type Signed_128 is record\n+      low, high : unsigned_long_long;\n+   end record;\n+   pragma Convention (C_Pass_By_Copy, Signed_128);\n+   for Signed_128'Alignment use unsigned_long_long'Alignment * 2;\n+\n    --  Types for bitfields\n \n    type Unsigned_1 is mod 2 ** 1;"}, {"sha": "41459671f3e689a89381a4f59344e88f7652a6dd", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 22, "deletions": 15, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b6133ea8b7a4db9e69e7a72459aa7e754b8c596/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b6133ea8b7a4db9e69e7a72459aa7e754b8c596/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=4b6133ea8b7a4db9e69e7a72459aa7e754b8c596", "patch": "@@ -11212,6 +11212,7 @@ package body Sem_Ch12 is\n       --  stack contains the parent instances of the instantiation, followed by\n       --  the original S.\n \n+      Cur_P  : Entity_Id;\n       E      : Entity_Id;\n       P      : Entity_Id;\n       Hidden : Elmt_Id;\n@@ -11234,9 +11235,17 @@ package body Sem_Ch12 is\n                   Next_Entity (E);\n                end loop;\n \n-               if Is_Generic_Instance (Current_Scope)\n-                 and then P /= Current_Scope\n-               then\n+               --  If instantiation is declared in a block, it is the enclosing\n+               --  scope that might be a parent instance. Note that only one\n+               --  block can be involved, because the parent instances have\n+               --  been installed within it.\n+\n+               Cur_P := P;\n+               if Ekind (P) = E_Block then\n+                  Cur_P := Scope (Cur_P);\n+               end if;\n+\n+               if Is_Generic_Instance (Cur_P) and then P /= Current_Scope then\n                   --  We are within an instance of some sibling. Retain\n                   --  visibility of parent, for proper subsequent cleanup, and\n                   --  reinstall private declarations as well.\n@@ -11246,7 +11255,7 @@ package body Sem_Ch12 is\n                end if;\n \n             --  If the ultimate parent is a top-level unit recorded in\n-            --  Instance_Parent_Unit, then reset its visibility to what is was\n+            --  Instance_Parent_Unit, then reset its visibility to what it was\n             --  before instantiation. (It's not clear what the purpose is of\n             --  testing whether Scope (P) is In_Open_Scopes, but that test was\n             --  present before the ultimate parent test was added.???)\n@@ -11389,11 +11398,11 @@ package body Sem_Ch12 is\n       while Present (M) loop\n          Typ := Node (M);\n \n-         --  Subtypes of types whose views have been exchanged, and that\n-         --  are defined within the instance, were not on the list of\n-         --  Private_Dependents on entry to the instance, so they have to be\n-         --  exchanged explicitly now, in order to remain consistent with the\n-         --  view of the parent type.\n+         --  Subtypes of types whose views have been exchanged, and that are\n+         --  defined within the instance, were not on the Private_Dependents\n+         --  list on entry to the instance, so they have to be exchanged\n+         --  explicitly now, in order to remain consistent with the view of the\n+         --  parent type.\n \n          if Ekind_In (Typ, E_Private_Type,\n                            E_Limited_Private_Type,\n@@ -11437,11 +11446,11 @@ package body Sem_Ch12 is\n             --  An unusual case of aliasing: the actual may also be directly\n             --  visible in the generic, and be private there, while it is fully\n             --  visible in the context of the instance. The internal subtype\n-            --  is private in the instance, but has full visibility like its\n+            --  is private in the instance but has full visibility like its\n             --  parent in the enclosing scope. This enforces the invariant that\n             --  the privacy status of all private dependents of a type coincide\n             --  with that of the parent type. This can only happen when a\n-            --  generic child unit is instantiated within sibling.\n+            --  generic child unit is instantiated within a sibling.\n \n             if Is_Private_Type (E)\n               and then not Is_Private_Type (Etype (E))\n@@ -11457,16 +11466,14 @@ package body Sem_Ch12 is\n             --  a formal package, make its own formals private as well. The\n             --  actual in this case is itself the renaming of an instantiation.\n             --  If the entity is not a package renaming, it is the entity\n-            --  created to validate formal package actuals: ignore.\n+            --  created to validate formal package actuals: ignore it.\n \n             --  If the actual is itself a formal package for the enclosing\n             --  generic, or the actual for such a formal package, it remains\n             --  visible on exit from the instance, and therefore nothing needs\n             --  to be done either, except to keep it accessible.\n \n-            if Is_Package\n-              and then Renamed_Object (E) = Pack_Id\n-            then\n+            if Is_Package and then Renamed_Object (E) = Pack_Id then\n                exit;\n \n             elsif Nkind (Parent (E)) /= N_Package_Renaming_Declaration then"}]}