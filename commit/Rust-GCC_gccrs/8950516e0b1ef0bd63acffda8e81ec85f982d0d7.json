{"sha": "8950516e0b1ef0bd63acffda8e81ec85f982d0d7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODk1MDUxNmUwYjFlZjBiZDYzYWNmZmRhOGU4MWVjODVmOTgyZDBkNw==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2011-05-27T15:45:56Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2011-05-27T15:45:56Z"}, "message": "configure.ac (gcc_cv_as_ix86_tlsgdplt): Check for @tlsgdplt\n\n2011-05-27  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n\t    Uros Bizjak <ubizjak@gmail.com>\n\n\t* configure.ac (gcc_cv_as_ix86_tlsgdplt): Check for @tlsgdplt\n\t(HAVE_AS_IX86_TLSGDPTL): Define.\n\t(gcc_cv_as_ix86_tlsldmplt): Check for @tlsldmplt.\n\t(HAVE_AS_IX86_TLSLDMPLT): Define.\n\t* configure: Regenerate.\n\t* config.in: Regenerate.\n\t* config/i386/i386.c (ix86_print_operand): Handle code 'p'.\n\t* config/i386/i386.md (*tls_global_dynamic_32_gnu): If\n\tTARGET_SUN_TLS, use @tlsgdplt or @plt.\n\t(*tls_global_dynamic_64): Use @plt if TARGET_SUN_TLS.\n\t(*tls_local_dynamic_base_32_gnu): If TARGET_SUN_TLS, use\n\t@tlsldmplt or @plt.\n\t(*tls_local_dynamic_base_64): Use @plt if TARGET_SUN_TLS.\n\nCo-Authored-By: Uros Bizjak <ubizjak@gmail.com>\n\nFrom-SVN: r174340", "tree": {"sha": "6959c1008e95bad5b7bbf23e9a75513970e5d619", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6959c1008e95bad5b7bbf23e9a75513970e5d619"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8950516e0b1ef0bd63acffda8e81ec85f982d0d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8950516e0b1ef0bd63acffda8e81ec85f982d0d7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8950516e0b1ef0bd63acffda8e81ec85f982d0d7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8950516e0b1ef0bd63acffda8e81ec85f982d0d7/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fd5dbe4f5ecf6c92b3db9f323c479ad1015497e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd5dbe4f5ecf6c92b3db9f323c479ad1015497e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd5dbe4f5ecf6c92b3db9f323c479ad1015497e9"}], "stats": {"total": 124, "additions": 123, "deletions": 1}, "files": [{"sha": "7bd31937544a4d348f1b8c7d5aefdfe3be07062a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8950516e0b1ef0bd63acffda8e81ec85f982d0d7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8950516e0b1ef0bd63acffda8e81ec85f982d0d7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8950516e0b1ef0bd63acffda8e81ec85f982d0d7", "patch": "@@ -1,3 +1,20 @@\n+2011-05-27  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\t    Uros Bizjak <ubizjak@gmail.com>\n+\n+\t* configure.ac (gcc_cv_as_ix86_tlsgdplt): Check for @tlsgdplt\n+\t(HAVE_AS_IX86_TLSGDPTL): Define.\n+\t(gcc_cv_as_ix86_tlsldmplt): Check for @tlsldmplt.\n+\t(HAVE_AS_IX86_TLSLDMPLT): Define.\n+\t* configure: Regenerate.\n+\t* config.in: Regenerate.\n+\t* config/i386/i386.c (ix86_print_operand): Handle code 'p'.\n+\t* config/i386/i386.md (*tls_global_dynamic_32_gnu): If\n+\tTARGET_SUN_TLS, use @tlsgdplt or @plt.\n+\t(*tls_global_dynamic_64): Use @plt if TARGET_SUN_TLS.\n+\t(*tls_local_dynamic_base_32_gnu): If TARGET_SUN_TLS, use\n+\t@tlsldmplt or @plt.\n+\t(*tls_local_dynamic_base_64): Use @plt if TARGET_SUN_TLS.\n+\n 2011-05-27  Bernd Schmidt  <bernds@codesourcery.com>\n \n \t* sched-int.h (struct _haifa_deps_insn_data): New members cond"}, {"sha": "d202b038e6eee914d3b9234e591269499a80e9ef", "filename": "gcc/config.in", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8950516e0b1ef0bd63acffda8e81ec85f982d0d7/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8950516e0b1ef0bd63acffda8e81ec85f982d0d7/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=8950516e0b1ef0bd63acffda8e81ec85f982d0d7", "patch": "@@ -351,6 +351,18 @@\n #endif\n \n \n+/* Define if your assembler supports @tlsgdplt. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_AS_IX86_TLSGDPLT\n+#endif\n+\n+\n+/* Define if your assembler supports @tlsldmplt. */\n+#ifndef USED_FOR_TARGET\n+#undef HAVE_AS_IX86_TLSLDMPLT\n+#endif\n+\n+\n /* Define if your assembler supports the lituse_jsrdirect relocation. */\n #ifndef USED_FOR_TARGET\n #undef HAVE_AS_JSRDIRECT_RELOCS"}, {"sha": "ae81d62caa971370df96ca96e88a3e695f3775bb", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8950516e0b1ef0bd63acffda8e81ec85f982d0d7/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8950516e0b1ef0bd63acffda8e81ec85f982d0d7/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=8950516e0b1ef0bd63acffda8e81ec85f982d0d7", "patch": "@@ -13918,6 +13918,7 @@ get_some_local_dynamic_name (void)\n    d -- print duplicated register operand for AVX instruction.\n    D -- print condition for SSE cmp instruction.\n    P -- if PIC, print an @PLT suffix.\n+   p -- print raw symbol name.\n    X -- don't print any sort of PIC '@' suffix for a symbol.\n    & -- print some in-use local-dynamic symbol name.\n    H -- print a memory address offset by 8; used for sse high-parts\n@@ -14123,6 +14124,7 @@ ix86_print_operand (FILE *file, rtx x, int code)\n \tcase 'x':\n \tcase 'X':\n \tcase 'P':\n+\tcase 'p':\n \t  break;\n \n \tcase 's':\n@@ -14522,7 +14524,7 @@ ix86_print_operand (FILE *file, rtx x, int code)\n \t  x = const0_rtx;\n \t}\n \n-      if (code != 'P')\n+      if (code != 'P' && code != 'p')\n \t{\n \t  if (CONST_INT_P (x) || GET_CODE (x) == CONST_DOUBLE)\n \t    {"}, {"sha": "2e7633dfc7de9afdf193b8def5c5837abfdeca75", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8950516e0b1ef0bd63acffda8e81ec85f982d0d7/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8950516e0b1ef0bd63acffda8e81ec85f982d0d7/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=8950516e0b1ef0bd63acffda8e81ec85f982d0d7", "patch": "@@ -53,6 +53,7 @@\n ;; d -- print duplicated register operand for AVX instruction.\n ;; D -- print condition for SSE cmp instruction.\n ;; P -- if PIC, print an @PLT suffix.\n+;; p -- print raw symbol name.\n ;; X -- don't print any sort of PIC '@' suffix for a symbol.\n ;; & -- print some in-use local-dynamic symbol name.\n ;; H -- print a memory address offset by 8; used for sse high-parts\n@@ -12367,6 +12368,12 @@\n {\n   output_asm_insn\n     (\"lea{l}\\t{%a2@tlsgd(,%1,1), %0|%0, %a2@tlsgd[%1*1]}\", operands);\n+  if (TARGET_SUN_TLS)\n+#ifdef HAVE_AS_IX86_TLSGDPLT\n+    return \"call\\t%a2@tlsgdplt\";\n+#else\n+    return \"call\\t%p3@plt\";\n+#endif\n   return \"call\\t%P3\";\n }\n   [(set_attr \"type\" \"multi\")\n@@ -12397,6 +12404,8 @@\n     (\"lea{q}\\t{%a1@tlsgd(%%rip), %%rdi|rdi, %a1@tlsgd[rip]}\", operands);\n   fputs (ASM_SHORT \"0x6666\\n\", asm_out_file);\n   fputs (\"\\trex64\\n\", asm_out_file);\n+  if (TARGET_SUN_TLS)\n+    return \"call\\t%p2@plt\";\n   return \"call\\t%P2\";\n }\n   [(set_attr \"type\" \"multi\")\n@@ -12424,6 +12433,12 @@\n {\n   output_asm_insn\n     (\"lea{l}\\t{%&@tlsldm(%1), %0|%0, %&@tlsldm[%1]}\", operands);\n+  if (TARGET_SUN_TLS)\n+#ifdef HAVE_AS_IX86_TLSLDMPLT\n+    return \"call\\t%&@tlsldmplt\";\n+#else\n+    return \"call\\t%p2@plt\";\n+#endif\n   return \"call\\t%P2\";\n }\n   [(set_attr \"type\" \"multi\")\n@@ -12450,6 +12465,8 @@\n {\n   output_asm_insn\n     (\"lea{q}\\t{%&@tlsld(%%rip), %%rdi|rdi, %&@tlsld[rip]}\", operands);\n+  if (TARGET_SUN_TLS)\n+    return \"call\\t%p1@plt\";\n   return \"call\\t%P1\";\n }\n   [(set_attr \"type\" \"multi\")"}, {"sha": "0873e98212c4485cc00db33e4c5ac20eaa0254a5", "filename": "gcc/configure", "status": "modified", "additions": 62, "deletions": 0, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8950516e0b1ef0bd63acffda8e81ec85f982d0d7/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8950516e0b1ef0bd63acffda8e81ec85f982d0d7/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=8950516e0b1ef0bd63acffda8e81ec85f982d0d7", "patch": "@@ -24084,6 +24084,68 @@ if test $gcc_cv_as_ix86_rep_lock_prefix = yes; then\n \n $as_echo \"#define HAVE_AS_IX86_REP_LOCK_PREFIX 1\" >>confdefs.h\n \n+fi\n+\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for R_386_TLS_GD_PLT reloc\" >&5\n+$as_echo_n \"checking assembler for R_386_TLS_GD_PLT reloc... \" >&6; }\n+if test \"${gcc_cv_as_ix86_tlsgdplt+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_ix86_tlsgdplt=no\n+  if test x$gcc_cv_as != x; then\n+    echo 'call    tls_gd@tlsgdplt' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgcc_cv_as_ix86_tlsgdplt=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_ix86_tlsgdplt\" >&5\n+$as_echo \"$gcc_cv_as_ix86_tlsgdplt\" >&6; }\n+if test $gcc_cv_as_ix86_tlsgdplt = yes; then\n+\n+$as_echo \"#define HAVE_AS_IX86_TLSGDPLT 1\" >>confdefs.h\n+\n+fi\n+\n+    { $as_echo \"$as_me:${as_lineno-$LINENO}: checking assembler for R_386_TLS_LDM_PLT reloc\" >&5\n+$as_echo_n \"checking assembler for R_386_TLS_LDM_PLT reloc... \" >&6; }\n+if test \"${gcc_cv_as_ix86_tlsldmplt+set}\" = set; then :\n+  $as_echo_n \"(cached) \" >&6\n+else\n+  gcc_cv_as_ix86_tlsldmplt=no\n+  if test x$gcc_cv_as != x; then\n+    echo 'call    tls_ld@tlsldmplt' > conftest.s\n+    if { ac_try='$gcc_cv_as $gcc_cv_as_flags  -o conftest.o conftest.s >&5'\n+  { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_try\\\"\"; } >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n+  test $ac_status = 0; }; }\n+    then\n+\tgcc_cv_as_ix86_tlsldmplt=yes\n+    else\n+      echo \"configure: failed program was\" >&5\n+      cat conftest.s >&5\n+    fi\n+    rm -f conftest.o conftest.s\n+  fi\n+fi\n+{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_as_ix86_tlsldmplt\" >&5\n+$as_echo \"$gcc_cv_as_ix86_tlsldmplt\" >&6; }\n+if test $gcc_cv_as_ix86_tlsldmplt = yes; then\n+\n+$as_echo \"#define HAVE_AS_IX86_TLSLDMPLT 1\" >>confdefs.h\n+\n fi\n \n     ;;"}, {"sha": "dbc825adfc6d18be49350fb13db7c0c8c3c278a8", "filename": "gcc/configure.ac", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8950516e0b1ef0bd63acffda8e81ec85f982d0d7/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8950516e0b1ef0bd63acffda8e81ec85f982d0d7/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=8950516e0b1ef0bd63acffda8e81ec85f982d0d7", "patch": "@@ -3550,6 +3550,18 @@ foo:\tnop\n         [AC_DEFINE(HAVE_AS_IX86_REP_LOCK_PREFIX, 1,\n           [Define if the assembler supports 'rep <insn>, lock <insn>'.])])\n \n+    gcc_GAS_CHECK_FEATURE([R_386_TLS_GD_PLT reloc],\n+        gcc_cv_as_ix86_tlsgdplt,,,\n+\t[call    tls_gd@tlsgdplt],,\n+      [AC_DEFINE(HAVE_AS_IX86_TLSGDPLT, 1,\n+        [Define if your assembler supports @tlsgdplt.])])\n+\n+    gcc_GAS_CHECK_FEATURE([R_386_TLS_LDM_PLT reloc],\n+        gcc_cv_as_ix86_tlsldmplt,,,\n+\t[call    tls_ld@tlsldmplt],,\n+      [AC_DEFINE(HAVE_AS_IX86_TLSLDMPLT, 1,\n+        [Define if your assembler supports @tlsldmplt.])])\n+\n     ;;\n \n   ia64*-*-*)"}]}