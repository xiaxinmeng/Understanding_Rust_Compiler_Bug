{"sha": "762cca0023c9bdbd762c44f33a954845bbccd568", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzYyY2NhMDAyM2M5YmRiZDc2MmM0NGYzM2E5NTQ4NDViYmNjZDU2OA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-10-02T13:56:12Z"}, "committer": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2020-10-02T13:56:12Z"}, "message": "Perforate fnspec strings\n\ngcc/ChangeLog:\n\n2020-10-02  Jan Hubicka  <hubicka@ucw.cz>\n\n\t* attr-fnspec.h: Update documentation.\n\t(attr_fnsec::return_desc_size): Set to 2\n\t(attr_fnsec::arg_desc_size): Set to 2\n\t* builtin-attrs.def (STR1): Update fnspec.\n\t* internal-fn.def (UBSAN_NULL): Update fnspec.\n\t(UBSAN_VPTR): Update fnspec.\n\t(UBSAN_PTR): Update fnspec.\n\t(ASAN_CHECK): Update fnspec.\n\t(GOACC_DIM_SIZE): Remove fnspec.\n\t(GOACC_DIM_POS): Remove fnspec.\n\t* tree-ssa-alias.c (attr_fnspec::verify): Update verification.\n\ngcc/fortran/ChangeLog:\n\n2020-10-02  Jan Hubicka  <hubicka@ucw.cz>\n\n\t* trans-decl.c (gfc_build_library_function_decl_with_spec): Verify\n\tfnspec.\n\t(gfc_build_intrinsic_function_decls): Update fnspecs.\n\t(gfc_build_builtin_function_decls): Update fnspecs.\n\t* trans-io.c (gfc_build_io_library_fndecls): Update fnspecs.\n\t* trans-types.c (create_fn_spec): Update fnspecs.", "tree": {"sha": "3850ad6516b7ef5ae3d17d8c5116904c73a9a629", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3850ad6516b7ef5ae3d17d8c5116904c73a9a629"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/762cca0023c9bdbd762c44f33a954845bbccd568", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/762cca0023c9bdbd762c44f33a954845bbccd568", "html_url": "https://github.com/Rust-GCC/gccrs/commit/762cca0023c9bdbd762c44f33a954845bbccd568", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/762cca0023c9bdbd762c44f33a954845bbccd568/comments", "author": null, "committer": null, "parents": [{"sha": "1d3e12c469e5f5627c2e271232e1a3d8a88783be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d3e12c469e5f5627c2e271232e1a3d8a88783be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d3e12c469e5f5627c2e271232e1a3d8a88783be"}], "stats": {"total": 333, "additions": 191, "deletions": 142}, "files": [{"sha": "921bb48ae6a0202f2d68cd6f33a234fcd98bc48c", "filename": "gcc/attr-fnspec.h", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/762cca0023c9bdbd762c44f33a954845bbccd568/gcc%2Fattr-fnspec.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/762cca0023c9bdbd762c44f33a954845bbccd568/gcc%2Fattr-fnspec.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fattr-fnspec.h?ref=762cca0023c9bdbd762c44f33a954845bbccd568", "patch": "@@ -25,15 +25,22 @@\n      '1'...'4'  specifies number of argument function returns (as in memset)\n      'm'\tspecifies that returned value is noalias (as in malloc)\n      '.'\tspecifies that nothing is known.\n+   character 1  specifies additional function properties\n+     ' '        specifies that nothing is known\n \n-   character 1+i specifies properties of argument number i as follows:\n+   character 2+2i specifies properties of argument number i as follows:\n      'x' or 'X' specifies that parameter is unused.\n      'r' or 'R' specifies that parameter is only read and memory pointed to is\n \t\tnever dereferenced.\n      'w' or 'W' specifies that parameter is only written to.\n      '.'\tspecifies that nothing is known.\n    The uppercase letter in addition specifies that parameter\n-   is non-escaping.  */\n+   is non-escaping. \n+\n+   character 3+2i specifies additional properties of argument number i\n+   as follows:\n+     ' '        nothing is known\n+ */\n \n #ifndef ATTR_FNSPEC_H\n #define ATTR_FNSPEC_H\n@@ -46,9 +53,9 @@ class attr_fnspec\n   /* length of the fn spec string.  */\n   const unsigned len;\n   /* Number of characters specifying return value.  */\n-  const unsigned int return_desc_size = 1;\n+  const unsigned int return_desc_size = 2;\n   /* Number of characters specifying size.  */\n-  const unsigned int arg_desc_size = 1;\n+  const unsigned int arg_desc_size = 2;\n \n   /* Return start of specifier of arg i.  */\n   unsigned int arg_idx (int i)"}, {"sha": "778bc8a43a1bafd8b9149f915bc0901251481b0f", "filename": "gcc/builtin-attrs.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/762cca0023c9bdbd762c44f33a954845bbccd568/gcc%2Fbuiltin-attrs.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/762cca0023c9bdbd762c44f33a954845bbccd568/gcc%2Fbuiltin-attrs.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fbuiltin-attrs.def?ref=762cca0023c9bdbd762c44f33a954845bbccd568", "patch": "@@ -66,7 +66,7 @@ DEF_ATTR_FOR_INT (6)\n   DEF_ATTR_STRING (ATTR_##ENUM, VALUE)\t\t\t\\\n   DEF_ATTR_TREE_LIST (ATTR_LIST_##ENUM, ATTR_NULL,\t\\\n \t\t      ATTR_##ENUM, ATTR_NULL)\n-DEF_ATTR_FOR_STRING (STR1, \"1\")\n+DEF_ATTR_FOR_STRING (STR1, \"1 \")\n #undef DEF_ATTR_FOR_STRING\n \n /* Construct a tree for a list of two integers.  */"}, {"sha": "5940a1fd10c2014327aa2e43c081ed1e0b8f3403", "filename": "gcc/fortran/trans-decl.c", "status": "modified", "additions": 94, "deletions": 82, "changes": 176, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/762cca0023c9bdbd762c44f33a954845bbccd568/gcc%2Ffortran%2Ftrans-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/762cca0023c9bdbd762c44f33a954845bbccd568/gcc%2Ffortran%2Ftrans-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-decl.c?ref=762cca0023c9bdbd762c44f33a954845bbccd568", "patch": "@@ -48,6 +48,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"gomp-constants.h\"\n #include \"gimplify.h\"\n #include \"omp-general.h\"\n+#include \"attr-fnspec.h\"\n \n #define MAX_LABEL_VALUE 99999\n \n@@ -3306,6 +3307,11 @@ gfc_build_library_function_decl_with_spec (tree name, const char *spec,\n   tree ret;\n   va_list args;\n   va_start (args, nargs);\n+  if (flag_checking)\n+    {\n+      attr_fnspec fnspec (spec, strlen (spec));\n+      fnspec.verify ();\n+    }\n   ret = build_library_function_decl_1 (name, spec, rettype, nargs, args);\n   va_end (args);\n   return ret;\n@@ -3325,144 +3331,144 @@ gfc_build_intrinsic_function_decls (void)\n \n   /* String functions.  */\n   gfor_fndecl_compare_string = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"compare_string\")), \"..R.R\",\n+\tget_identifier (PREFIX(\"compare_string\")), \". . R . R \",\n \tinteger_type_node, 4, gfc_charlen_type_node, pchar1_type_node,\n \tgfc_charlen_type_node, pchar1_type_node);\n   DECL_PURE_P (gfor_fndecl_compare_string) = 1;\n   TREE_NOTHROW (gfor_fndecl_compare_string) = 1;\n \n   gfor_fndecl_concat_string = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"concat_string\")), \"..W.R.R\",\n+\tget_identifier (PREFIX(\"concat_string\")), \". . W . R . R \",\n \tvoid_type_node, 6, gfc_charlen_type_node, pchar1_type_node,\n \tgfc_charlen_type_node, pchar1_type_node,\n \tgfc_charlen_type_node, pchar1_type_node);\n   TREE_NOTHROW (gfor_fndecl_concat_string) = 1;\n \n   gfor_fndecl_string_len_trim = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"string_len_trim\")), \"..R\",\n+\tget_identifier (PREFIX(\"string_len_trim\")), \". . R \",\n \tgfc_charlen_type_node, 2, gfc_charlen_type_node, pchar1_type_node);\n   DECL_PURE_P (gfor_fndecl_string_len_trim) = 1;\n   TREE_NOTHROW (gfor_fndecl_string_len_trim) = 1;\n \n   gfor_fndecl_string_index = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"string_index\")), \"..R.R.\",\n+\tget_identifier (PREFIX(\"string_index\")), \". . R . R . \",\n \tgfc_charlen_type_node, 5, gfc_charlen_type_node, pchar1_type_node,\n \tgfc_charlen_type_node, pchar1_type_node, gfc_logical4_type_node);\n   DECL_PURE_P (gfor_fndecl_string_index) = 1;\n   TREE_NOTHROW (gfor_fndecl_string_index) = 1;\n \n   gfor_fndecl_string_scan = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"string_scan\")), \"..R.R.\",\n+\tget_identifier (PREFIX(\"string_scan\")), \". . R . R . \",\n \tgfc_charlen_type_node, 5, gfc_charlen_type_node, pchar1_type_node,\n \tgfc_charlen_type_node, pchar1_type_node, gfc_logical4_type_node);\n   DECL_PURE_P (gfor_fndecl_string_scan) = 1;\n   TREE_NOTHROW (gfor_fndecl_string_scan) = 1;\n \n   gfor_fndecl_string_verify = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"string_verify\")), \"..R.R.\",\n+\tget_identifier (PREFIX(\"string_verify\")), \". . R . R . \",\n \tgfc_charlen_type_node, 5, gfc_charlen_type_node, pchar1_type_node,\n \tgfc_charlen_type_node, pchar1_type_node, gfc_logical4_type_node);\n   DECL_PURE_P (gfor_fndecl_string_verify) = 1;\n   TREE_NOTHROW (gfor_fndecl_string_verify) = 1;\n \n   gfor_fndecl_string_trim = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"string_trim\")), \".Ww.R\",\n+\tget_identifier (PREFIX(\"string_trim\")), \". W w . R \",\n \tvoid_type_node, 4, build_pointer_type (gfc_charlen_type_node),\n \tbuild_pointer_type (pchar1_type_node), gfc_charlen_type_node,\n \tpchar1_type_node);\n \n   gfor_fndecl_string_minmax = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"string_minmax\")), \".Ww.R\",\n+\tget_identifier (PREFIX(\"string_minmax\")), \". W w . R \",\n \tvoid_type_node, -4, build_pointer_type (gfc_charlen_type_node),\n \tbuild_pointer_type (pchar1_type_node), integer_type_node,\n \tinteger_type_node);\n \n   gfor_fndecl_adjustl = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"adjustl\")), \".W.R\",\n+\tget_identifier (PREFIX(\"adjustl\")), \". W . R \",\n \tvoid_type_node, 3, pchar1_type_node, gfc_charlen_type_node,\n \tpchar1_type_node);\n   TREE_NOTHROW (gfor_fndecl_adjustl) = 1;\n \n   gfor_fndecl_adjustr = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"adjustr\")), \".W.R\",\n+\tget_identifier (PREFIX(\"adjustr\")), \". W . R \",\n \tvoid_type_node, 3, pchar1_type_node, gfc_charlen_type_node,\n \tpchar1_type_node);\n   TREE_NOTHROW (gfor_fndecl_adjustr) = 1;\n \n   gfor_fndecl_select_string =  gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"select_string\")), \".R.R.\",\n+\tget_identifier (PREFIX(\"select_string\")), \". R . R . \",\n \tinteger_type_node, 4, pvoid_type_node, integer_type_node,\n \tpchar1_type_node, gfc_charlen_type_node);\n   DECL_PURE_P (gfor_fndecl_select_string) = 1;\n   TREE_NOTHROW (gfor_fndecl_select_string) = 1;\n \n   gfor_fndecl_compare_string_char4 = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"compare_string_char4\")), \"..R.R\",\n+\tget_identifier (PREFIX(\"compare_string_char4\")), \". . R . R \",\n \tinteger_type_node, 4, gfc_charlen_type_node, pchar4_type_node,\n \tgfc_charlen_type_node, pchar4_type_node);\n   DECL_PURE_P (gfor_fndecl_compare_string_char4) = 1;\n   TREE_NOTHROW (gfor_fndecl_compare_string_char4) = 1;\n \n   gfor_fndecl_concat_string_char4 = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"concat_string_char4\")), \"..W.R.R\",\n+\tget_identifier (PREFIX(\"concat_string_char4\")), \". . W . R . R \",\n \tvoid_type_node, 6, gfc_charlen_type_node, pchar4_type_node,\n \tgfc_charlen_type_node, pchar4_type_node, gfc_charlen_type_node,\n \tpchar4_type_node);\n   TREE_NOTHROW (gfor_fndecl_concat_string_char4) = 1;\n \n   gfor_fndecl_string_len_trim_char4 = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"string_len_trim_char4\")), \"..R\",\n+\tget_identifier (PREFIX(\"string_len_trim_char4\")), \". . R \",\n \tgfc_charlen_type_node, 2, gfc_charlen_type_node, pchar4_type_node);\n   DECL_PURE_P (gfor_fndecl_string_len_trim_char4) = 1;\n   TREE_NOTHROW (gfor_fndecl_string_len_trim_char4) = 1;\n \n   gfor_fndecl_string_index_char4 = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"string_index_char4\")), \"..R.R.\",\n+\tget_identifier (PREFIX(\"string_index_char4\")), \". . R . R . \",\n \tgfc_charlen_type_node, 5, gfc_charlen_type_node, pchar4_type_node,\n \tgfc_charlen_type_node, pchar4_type_node, gfc_logical4_type_node);\n   DECL_PURE_P (gfor_fndecl_string_index_char4) = 1;\n   TREE_NOTHROW (gfor_fndecl_string_index_char4) = 1;\n \n   gfor_fndecl_string_scan_char4 = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"string_scan_char4\")), \"..R.R.\",\n+\tget_identifier (PREFIX(\"string_scan_char4\")), \". . R . R . \",\n \tgfc_charlen_type_node, 5, gfc_charlen_type_node, pchar4_type_node,\n \tgfc_charlen_type_node, pchar4_type_node, gfc_logical4_type_node);\n   DECL_PURE_P (gfor_fndecl_string_scan_char4) = 1;\n   TREE_NOTHROW (gfor_fndecl_string_scan_char4) = 1;\n \n   gfor_fndecl_string_verify_char4 = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"string_verify_char4\")), \"..R.R.\",\n+\tget_identifier (PREFIX(\"string_verify_char4\")), \". . R . R . \",\n \tgfc_charlen_type_node, 5, gfc_charlen_type_node, pchar4_type_node,\n \tgfc_charlen_type_node, pchar4_type_node, gfc_logical4_type_node);\n   DECL_PURE_P (gfor_fndecl_string_verify_char4) = 1;\n   TREE_NOTHROW (gfor_fndecl_string_verify_char4) = 1;\n \n   gfor_fndecl_string_trim_char4 = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"string_trim_char4\")), \".Ww.R\",\n+\tget_identifier (PREFIX(\"string_trim_char4\")), \". W w . R \",\n \tvoid_type_node, 4, build_pointer_type (gfc_charlen_type_node),\n \tbuild_pointer_type (pchar4_type_node), gfc_charlen_type_node,\n \tpchar4_type_node);\n \n   gfor_fndecl_string_minmax_char4 = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"string_minmax_char4\")), \".Ww.R\",\n+\tget_identifier (PREFIX(\"string_minmax_char4\")), \". W w . R \",\n \tvoid_type_node, -4, build_pointer_type (gfc_charlen_type_node),\n \tbuild_pointer_type (pchar4_type_node), integer_type_node,\n \tinteger_type_node);\n \n   gfor_fndecl_adjustl_char4 = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"adjustl_char4\")), \".W.R\",\n+\tget_identifier (PREFIX(\"adjustl_char4\")), \". W . R \",\n \tvoid_type_node, 3, pchar4_type_node, gfc_charlen_type_node,\n \tpchar4_type_node);\n   TREE_NOTHROW (gfor_fndecl_adjustl_char4) = 1;\n \n   gfor_fndecl_adjustr_char4 = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"adjustr_char4\")), \".W.R\",\n+\tget_identifier (PREFIX(\"adjustr_char4\")), \". W . R \",\n \tvoid_type_node, 3, pchar4_type_node, gfc_charlen_type_node,\n \tpchar4_type_node);\n   TREE_NOTHROW (gfor_fndecl_adjustr_char4) = 1;\n \n   gfor_fndecl_select_string_char4 = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"select_string_char4\")), \".R.R.\",\n+\tget_identifier (PREFIX(\"select_string_char4\")), \". R . R . \",\n \tinteger_type_node, 4, pvoid_type_node, integer_type_node,\n \tpvoid_type_node, gfc_charlen_type_node);\n   DECL_PURE_P (gfor_fndecl_select_string_char4) = 1;\n@@ -3472,28 +3478,28 @@ gfc_build_intrinsic_function_decls (void)\n   /* Conversion between character kinds.  */\n \n   gfor_fndecl_convert_char1_to_char4 = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"convert_char1_to_char4\")), \".w.R\",\n+\tget_identifier (PREFIX(\"convert_char1_to_char4\")), \". w . R \",\n \tvoid_type_node, 3, build_pointer_type (pchar4_type_node),\n \tgfc_charlen_type_node, pchar1_type_node);\n \n   gfor_fndecl_convert_char4_to_char1 = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"convert_char4_to_char1\")), \".w.R\",\n+\tget_identifier (PREFIX(\"convert_char4_to_char1\")), \". w . R \",\n \tvoid_type_node, 3, build_pointer_type (pchar1_type_node),\n \tgfc_charlen_type_node, pchar4_type_node);\n \n   /* Misc. functions.  */\n \n   gfor_fndecl_ttynam = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"ttynam\")), \".W..\",\n+\tget_identifier (PREFIX(\"ttynam\")), \". W . . \",\n \tvoid_type_node, 3, pchar_type_node, gfc_charlen_type_node,\n \tinteger_type_node);\n \n   gfor_fndecl_fdate = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"fdate\")), \".W.\",\n+\tget_identifier (PREFIX(\"fdate\")), \". W . \",\n \tvoid_type_node, 2, pchar_type_node, gfc_charlen_type_node);\n \n   gfor_fndecl_ctime = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"ctime\")), \".W..\",\n+\tget_identifier (PREFIX(\"ctime\")), \". W . . \",\n \tvoid_type_node, 3, pchar_type_node, gfc_charlen_type_node,\n \tgfc_int8_type_node);\n \n@@ -3503,19 +3509,19 @@ gfc_build_intrinsic_function_decls (void)\n \tgfc_int4_type_node);\n \n   gfor_fndecl_sc_kind = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"selected_char_kind\")), \"..R\",\n+\tget_identifier (PREFIX(\"selected_char_kind\")), \". . R \",\n \tgfc_int4_type_node, 2, gfc_charlen_type_node, pchar_type_node);\n   DECL_PURE_P (gfor_fndecl_sc_kind) = 1;\n   TREE_NOTHROW (gfor_fndecl_sc_kind) = 1;\n \n   gfor_fndecl_si_kind = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"selected_int_kind\")), \".R\",\n+\tget_identifier (PREFIX(\"selected_int_kind\")), \". R \",\n \tgfc_int4_type_node, 1, pvoid_type_node);\n   DECL_PURE_P (gfor_fndecl_si_kind) = 1;\n   TREE_NOTHROW (gfor_fndecl_si_kind) = 1;\n \n   gfor_fndecl_sr_kind = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"selected_real_kind2008\")), \".RR\",\n+\tget_identifier (PREFIX(\"selected_real_kind2008\")), \". R R \",\n \tgfc_int4_type_node, 3, pvoid_type_node, pvoid_type_node,\n \tpvoid_type_node);\n   DECL_PURE_P (gfor_fndecl_sr_kind) = 1;\n@@ -3656,13 +3662,13 @@ gfc_build_intrinsic_function_decls (void)\n \n   /* Other functions.  */\n   gfor_fndecl_size0 = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"size0\")), \".R\",\n+\tget_identifier (PREFIX(\"size0\")), \". R \",\n \tgfc_array_index_type, 1, pvoid_type_node);\n   DECL_PURE_P (gfor_fndecl_size0) = 1;\n   TREE_NOTHROW (gfor_fndecl_size0) = 1;\n \n   gfor_fndecl_size1 = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"size1\")), \".R.\",\n+\tget_identifier (PREFIX(\"size1\")), \". R . \",\n \tgfc_array_index_type, 2, pvoid_type_node, gfc_array_index_type);\n   DECL_PURE_P (gfor_fndecl_size1) = 1;\n   TREE_NOTHROW (gfor_fndecl_size1) = 1;\n@@ -3680,7 +3686,7 @@ gfc_build_intrinsic_function_decls (void)\n \t2, gfc_int4_type_node, gfc_int4_type_node);\n \n   gfor_fndecl_is_contiguous0 = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"is_contiguous0\")), \".R\",\n+\tget_identifier (PREFIX(\"is_contiguous0\")), \". R \",\n \tgfc_int4_type_node, 1, pvoid_type_node);\n   DECL_PURE_P (gfor_fndecl_is_contiguous0) = 1;\n   TREE_NOTHROW (gfor_fndecl_is_contiguous0) = 1;\n@@ -3701,7 +3707,7 @@ gfc_build_builtin_function_decls (void)\n   TREE_THIS_VOLATILE (gfor_fndecl_stop_numeric) = 1;\n \n   gfor_fndecl_stop_string = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"stop_string\")), \".R..\",\n+\tget_identifier (PREFIX(\"stop_string\")), \". R . . \",\n \tvoid_type_node, 3, pchar_type_node, size_type_node,\n \tboolean_type_node);\n   /* STOP doesn't return.  */\n@@ -3714,7 +3720,7 @@ gfc_build_builtin_function_decls (void)\n   TREE_THIS_VOLATILE (gfor_fndecl_error_stop_numeric) = 1;\n \n   gfor_fndecl_error_stop_string = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"error_stop_string\")), \".R..\",\n+\tget_identifier (PREFIX(\"error_stop_string\")), \". R . . \",\n \tvoid_type_node, 3, pchar_type_node, size_type_node,\n \tboolean_type_node);\n   /* ERROR STOP doesn't return.  */\n@@ -3725,32 +3731,32 @@ gfc_build_builtin_function_decls (void)\n \tvoid_type_node, 1, gfc_int8_type_node);\n \n   gfor_fndecl_pause_string = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"pause_string\")), \".R.\",\n+\tget_identifier (PREFIX(\"pause_string\")), \". R . \",\n \tvoid_type_node, 2, pchar_type_node, size_type_node);\n \n   gfor_fndecl_runtime_error = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"runtime_error\")), \".R\",\n+\tget_identifier (PREFIX(\"runtime_error\")), \". R \",\n \tvoid_type_node, -1, pchar_type_node);\n   /* The runtime_error function does not return.  */\n   TREE_THIS_VOLATILE (gfor_fndecl_runtime_error) = 1;\n \n   gfor_fndecl_runtime_error_at = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"runtime_error_at\")), \".RR\",\n+\tget_identifier (PREFIX(\"runtime_error_at\")), \". R R \",\n \tvoid_type_node, -2, pchar_type_node, pchar_type_node);\n   /* The runtime_error_at function does not return.  */\n   TREE_THIS_VOLATILE (gfor_fndecl_runtime_error_at) = 1;\n \n   gfor_fndecl_runtime_warning_at = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"runtime_warning_at\")), \".RR\",\n+\tget_identifier (PREFIX(\"runtime_warning_at\")), \". R R \",\n \tvoid_type_node, -2, pchar_type_node, pchar_type_node);\n \n   gfor_fndecl_generate_error = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"generate_error\")), \".R.R\",\n+\tget_identifier (PREFIX(\"generate_error\")), \". R . R \",\n \tvoid_type_node, 3, pvoid_type_node, integer_type_node,\n \tpchar_type_node);\n \n   gfor_fndecl_os_error_at = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"os_error_at\")), \".RR\",\n+\tget_identifier (PREFIX(\"os_error_at\")), \". R R \",\n \tvoid_type_node, -2, pchar_type_node, pchar_type_node);\n   /* The os_error_at function does not return.  */\n   TREE_THIS_VOLATILE (gfor_fndecl_os_error_at) = 1;\n@@ -3774,7 +3780,7 @@ gfc_build_builtin_function_decls (void)\n \n   /* Keep the array dimension in sync with the call, later in this file.  */\n   gfor_fndecl_set_options = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"set_options\")), \"..R\",\n+\tget_identifier (PREFIX(\"set_options\")), \". . R \",\n \tvoid_type_node, 2, integer_type_node,\n \tbuild_pointer_type (integer_type_node));\n \n@@ -3791,11 +3797,11 @@ gfc_build_builtin_function_decls (void)\n \tvoid_type_node, 1, integer_type_node);\n \n   gfor_fndecl_in_pack = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"internal_pack\")), \".r\",\n+\tget_identifier (PREFIX(\"internal_pack\")), \". r \",\n \tpvoid_type_node, 1, pvoid_type_node);\n \n   gfor_fndecl_in_unpack = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"internal_unpack\")), \".wR\",\n+\tget_identifier (PREFIX(\"internal_unpack\")), \". w R \",\n \tvoid_type_node, 2, pvoid_type_node, pvoid_type_node);\n \n   /* These two builtins write into what the first argument points to and\n@@ -3804,15 +3810,15 @@ gfc_build_builtin_function_decls (void)\n      which is copied into the descriptor pointed by the first argument,\n      effectively escaping that way.  See PR92123.  */\n   gfor_fndecl_cfi_to_gfc = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"cfi_desc_to_gfc_desc\")), \".w.\",\n+\tget_identifier (PREFIX(\"cfi_desc_to_gfc_desc\")), \". w . \",\n \tvoid_type_node, 2, pvoid_type_node, ppvoid_type_node);\n \n   gfor_fndecl_gfc_to_cfi = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"gfc_desc_to_cfi_desc\")), \".w.\",\n+\tget_identifier (PREFIX(\"gfc_desc_to_cfi_desc\")), \". w . \",\n \tvoid_type_node, 2, ppvoid_type_node, pvoid_type_node);\n \n   gfor_fndecl_associated = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"associated\")), \".RR\",\n+\tget_identifier (PREFIX(\"associated\")), \". R R \",\n \tinteger_type_node, 2, ppvoid_type_node, ppvoid_type_node);\n   DECL_PURE_P (gfor_fndecl_associated) = 1;\n   TREE_NOTHROW (gfor_fndecl_associated) = 1;\n@@ -3842,65 +3848,71 @@ gfc_build_builtin_function_decls (void)\n \t2, integer_type_node, integer_type_node);\n \n       gfor_fndecl_caf_register = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_register\")), \"RRWWWWR\", void_type_node, 7,\n+\tget_identifier (PREFIX(\"caf_register\")), \"R R W W W W R \",\n+\tvoid_type_node, 7,\n \tsize_type_node, integer_type_node, ppvoid_type_node, pvoid_type_node,\n \tpint_type, pchar_type_node, size_type_node);\n \n       gfor_fndecl_caf_deregister = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_deregister\")), \"WRWWR\", void_type_node, 5,\n+\tget_identifier (PREFIX(\"caf_deregister\")), \"W R W W R \",\n+\tvoid_type_node, 5,\n \tppvoid_type_node, integer_type_node, pint_type, pchar_type_node,\n \tsize_type_node);\n \n       gfor_fndecl_caf_get = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_get\")), \".R.RRWRRRW\", void_type_node, 10,\n+\tget_identifier (PREFIX(\"caf_get\")), \". R . R R W R R R W \",\n+\tvoid_type_node, 10,\n \tpvoid_type_node, size_type_node, integer_type_node, pvoid_type_node,\n \tpvoid_type_node, pvoid_type_node, integer_type_node, integer_type_node,\n \tboolean_type_node, pint_type);\n \n       gfor_fndecl_caf_send = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_send\")), \".R.RRRRRRWR\", void_type_node, 11,\n+\tget_identifier (PREFIX(\"caf_send\")), \". R . R R R R R R W R \",\n+\tvoid_type_node, 11,\n \tpvoid_type_node, size_type_node, integer_type_node, pvoid_type_node,\n \tpvoid_type_node, pvoid_type_node, integer_type_node, integer_type_node,\n \tboolean_type_node, pint_type, pvoid_type_node);\n \n       gfor_fndecl_caf_sendget = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_sendget\")), \".R.RRRR.RRRRRR\",\n+\tget_identifier (PREFIX(\"caf_sendget\")), \". R . R R R R . R R R R R R \",\n \tvoid_type_node,\t14, pvoid_type_node, size_type_node, integer_type_node,\n \tpvoid_type_node, pvoid_type_node, pvoid_type_node, size_type_node,\n \tinteger_type_node, pvoid_type_node, pvoid_type_node, integer_type_node,\n \tinteger_type_node, boolean_type_node, integer_type_node);\n \n       gfor_fndecl_caf_get_by_ref = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_get_by_ref\")), \".RWRRRRRWR\", void_type_node,\n+\tget_identifier (PREFIX(\"caf_get_by_ref\")), \". R W R R R R R W R \",\n+\tvoid_type_node,\n \t10, pvoid_type_node, integer_type_node, pvoid_type_node,\n \tpvoid_type_node, integer_type_node, integer_type_node,\n \tboolean_type_node, boolean_type_node, pint_type, integer_type_node);\n \n       gfor_fndecl_caf_send_by_ref = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_send_by_ref\")), \".RRRRRRRWR\",\n+\tget_identifier (PREFIX(\"caf_send_by_ref\")), \". R R R R R R R W R \",\n \tvoid_type_node,\t10, pvoid_type_node, integer_type_node, pvoid_type_node,\n \tpvoid_type_node, integer_type_node, integer_type_node,\n \tboolean_type_node, boolean_type_node, pint_type, integer_type_node);\n \n       gfor_fndecl_caf_sendget_by_ref\n \t  = gfc_build_library_function_decl_with_spec (\n-\t    get_identifier (PREFIX(\"caf_sendget_by_ref\")), \".RR.RRRRRWWRR\",\n+\t    get_identifier (PREFIX(\"caf_sendget_by_ref\")),\n+\t    \". R R . R R R R R W W R R \",\n \t    void_type_node, 13, pvoid_type_node, integer_type_node,\n \t    pvoid_type_node, pvoid_type_node, integer_type_node,\n \t    pvoid_type_node, integer_type_node, integer_type_node,\n \t    boolean_type_node, pint_type, pint_type, integer_type_node,\n \t    integer_type_node);\n \n       gfor_fndecl_caf_sync_all = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_sync_all\")), \".WW.\", void_type_node,\n+\tget_identifier (PREFIX(\"caf_sync_all\")), \". W W . \", void_type_node,\n \t3, pint_type, pchar_type_node, size_type_node);\n \n       gfor_fndecl_caf_sync_memory = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_sync_memory\")), \".WW.\", void_type_node,\n+\tget_identifier (PREFIX(\"caf_sync_memory\")), \". W W . \", void_type_node,\n \t3, pint_type, pchar_type_node, size_type_node);\n \n       gfor_fndecl_caf_sync_images = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_sync_images\")), \"..RWW.\", void_type_node,\n+\tget_identifier (PREFIX(\"caf_sync_images\")), \". . R W W . \", void_type_node,\n \t5, integer_type_node, pint_type, pint_type,\n \tpchar_type_node, size_type_node);\n \n@@ -3911,7 +3923,7 @@ gfc_build_builtin_function_decls (void)\n       TREE_THIS_VOLATILE (gfor_fndecl_caf_error_stop) = 1;\n \n       gfor_fndecl_caf_error_stop_str = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_error_stop_str\")), \".R.\",\n+\tget_identifier (PREFIX(\"caf_error_stop_str\")), \". R . \",\n \tvoid_type_node, 2, pchar_type_node, size_type_node);\n       /* CAF's ERROR STOP doesn't return.  */\n       TREE_THIS_VOLATILE (gfor_fndecl_caf_error_stop_str) = 1;\n@@ -3923,55 +3935,55 @@ gfc_build_builtin_function_decls (void)\n       TREE_THIS_VOLATILE (gfor_fndecl_caf_stop_numeric) = 1;\n \n       gfor_fndecl_caf_stop_str = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_stop_str\")), \".R.\",\n+\tget_identifier (PREFIX(\"caf_stop_str\")), \". R . \",\n \tvoid_type_node, 2, pchar_type_node, size_type_node);\n       /* CAF's STOP doesn't return.  */\n       TREE_THIS_VOLATILE (gfor_fndecl_caf_stop_str) = 1;\n \n       gfor_fndecl_caf_atomic_def = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_atomic_define\")), \"R..RW\",\n+\tget_identifier (PREFIX(\"caf_atomic_define\")), \"R . . R W \",\n \tvoid_type_node, 7, pvoid_type_node, size_type_node, integer_type_node,\n \tpvoid_type_node, pint_type, integer_type_node, integer_type_node);\n \n       gfor_fndecl_caf_atomic_ref = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_atomic_ref\")), \"R..WW\",\n+\tget_identifier (PREFIX(\"caf_atomic_ref\")), \"R . . W W \",\n \tvoid_type_node, 7, pvoid_type_node, size_type_node, integer_type_node,\n \tpvoid_type_node, pint_type, integer_type_node, integer_type_node);\n \n       gfor_fndecl_caf_atomic_cas = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_atomic_cas\")), \"R..WRRW\",\n+\tget_identifier (PREFIX(\"caf_atomic_cas\")), \"R . . W R R W \",\n \tvoid_type_node, 9, pvoid_type_node, size_type_node, integer_type_node,\n \tpvoid_type_node, pvoid_type_node, pvoid_type_node, pint_type,\n \tinteger_type_node, integer_type_node);\n \n       gfor_fndecl_caf_atomic_op = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_atomic_op\")), \".R..RWW\",\n+\tget_identifier (PREFIX(\"caf_atomic_op\")), \". R . . R W W \",\n \tvoid_type_node, 9, integer_type_node, pvoid_type_node, size_type_node,\n \tinteger_type_node, pvoid_type_node, pvoid_type_node, pint_type,\n \tinteger_type_node, integer_type_node);\n \n       gfor_fndecl_caf_lock = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_lock\")), \"R..WWW\",\n+\tget_identifier (PREFIX(\"caf_lock\")), \"R . . W W W \",\n \tvoid_type_node, 7, pvoid_type_node, size_type_node, integer_type_node,\n \tpint_type, pint_type, pchar_type_node, size_type_node);\n \n       gfor_fndecl_caf_unlock = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_unlock\")), \"R..WW\",\n+\tget_identifier (PREFIX(\"caf_unlock\")), \"R . . W W \",\n \tvoid_type_node, 6, pvoid_type_node, size_type_node, integer_type_node,\n \tpint_type, pchar_type_node, size_type_node);\n \n       gfor_fndecl_caf_event_post = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_event_post\")), \"R..WW\",\n+\tget_identifier (PREFIX(\"caf_event_post\")), \"R . . W W \",\n \tvoid_type_node, 6, pvoid_type_node, size_type_node, integer_type_node,\n \tpint_type, pchar_type_node, size_type_node);\n \n       gfor_fndecl_caf_event_wait = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_event_wait\")), \"R..WW\",\n+\tget_identifier (PREFIX(\"caf_event_wait\")), \"R . . W W \",\n \tvoid_type_node, 6, pvoid_type_node, size_type_node, integer_type_node,\n \tpint_type, pchar_type_node, size_type_node);\n \n       gfor_fndecl_caf_event_query = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_event_query\")), \"R..WW\",\n+\tget_identifier (PREFIX(\"caf_event_query\")), \"R . . W W \",\n \tvoid_type_node, 5, pvoid_type_node, size_type_node, integer_type_node,\n \tpint_type, pint_type);\n \n@@ -3982,19 +3994,19 @@ gfc_build_builtin_function_decls (void)\n \n       gfor_fndecl_caf_failed_images\n \t= gfc_build_library_function_decl_with_spec (\n-\t    get_identifier (PREFIX(\"caf_failed_images\")), \"WRR\",\n+\t    get_identifier (PREFIX(\"caf_failed_images\")), \"W R R \",\n \t    void_type_node, 3, pvoid_type_node, ppvoid_type_node,\n \t    integer_type_node);\n \n       gfor_fndecl_caf_form_team\n \t= gfc_build_library_function_decl_with_spec (\n-\t    get_identifier (PREFIX(\"caf_form_team\")), \"RWR\",\n+\t    get_identifier (PREFIX(\"caf_form_team\")), \"R W R \",\n \t    void_type_node, 3, integer_type_node, ppvoid_type_node,\n \t    integer_type_node);\n \n       gfor_fndecl_caf_change_team\n \t= gfc_build_library_function_decl_with_spec (\n-\t    get_identifier (PREFIX(\"caf_change_team\")), \"RR\",\n+\t    get_identifier (PREFIX(\"caf_change_team\")), \"R R \",\n \t    void_type_node, 2, ppvoid_type_node,\n \t    integer_type_node);\n \n@@ -4009,56 +4021,56 @@ gfc_build_builtin_function_decls (void)\n \n       gfor_fndecl_caf_sync_team\n \t= gfc_build_library_function_decl_with_spec (\n-\t    get_identifier (PREFIX(\"caf_sync_team\")), \"RR\",\n+\t    get_identifier (PREFIX(\"caf_sync_team\")), \"R R \",\n \t    void_type_node, 2, ppvoid_type_node,\n \t    integer_type_node);\n \n       gfor_fndecl_caf_team_number\n       \t= gfc_build_library_function_decl_with_spec (\n-      \t    get_identifier (PREFIX(\"caf_team_number\")), \"R\",\n+\t    get_identifier (PREFIX(\"caf_team_number\")), \"R \",\n       \t    integer_type_node, 1, integer_type_node);\n \n       gfor_fndecl_caf_image_status\n \t= gfc_build_library_function_decl_with_spec (\n-\t    get_identifier (PREFIX(\"caf_image_status\")), \"RR\",\n+\t    get_identifier (PREFIX(\"caf_image_status\")), \"R R \",\n \t    integer_type_node, 2, integer_type_node, ppvoid_type_node);\n \n       gfor_fndecl_caf_stopped_images\n \t= gfc_build_library_function_decl_with_spec (\n-\t    get_identifier (PREFIX(\"caf_stopped_images\")), \"WRR\",\n+\t    get_identifier (PREFIX(\"caf_stopped_images\")), \"W R R \",\n \t    void_type_node, 3, pvoid_type_node, ppvoid_type_node,\n \t    integer_type_node);\n \n       gfor_fndecl_co_broadcast = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_co_broadcast\")), \"W.WW\",\n+\tget_identifier (PREFIX(\"caf_co_broadcast\")), \"W . W W \",\n \tvoid_type_node, 5, pvoid_type_node, integer_type_node,\n \tpint_type, pchar_type_node, size_type_node);\n \n       gfor_fndecl_co_max = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_co_max\")), \"W.WW\",\n+\tget_identifier (PREFIX(\"caf_co_max\")), \"W . W W \",\n \tvoid_type_node, 6, pvoid_type_node, integer_type_node,\n \tpint_type, pchar_type_node, integer_type_node, size_type_node);\n \n       gfor_fndecl_co_min = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_co_min\")), \"W.WW\",\n+\tget_identifier (PREFIX(\"caf_co_min\")), \"W . W W \",\n \tvoid_type_node, 6, pvoid_type_node, integer_type_node,\n \tpint_type, pchar_type_node, integer_type_node, size_type_node);\n \n       gfor_fndecl_co_reduce = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_co_reduce\")), \"W.R.WW\",\n+\tget_identifier (PREFIX(\"caf_co_reduce\")), \"W . R . W W \",\n \tvoid_type_node, 8, pvoid_type_node,\n \tbuild_pointer_type (build_varargs_function_type_list (void_type_node,\n \t\t\t\t\t\t\t      NULL_TREE)),\n \tinteger_type_node, integer_type_node, pint_type, pchar_type_node,\n \tinteger_type_node, size_type_node);\n \n       gfor_fndecl_co_sum = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_co_sum\")), \"W.WW\",\n+\tget_identifier (PREFIX(\"caf_co_sum\")), \"W . W W \",\n \tvoid_type_node, 5, pvoid_type_node, integer_type_node,\n \tpint_type, pchar_type_node, size_type_node);\n \n       gfor_fndecl_caf_is_present = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"caf_is_present\")), \"RRR\",\n+\tget_identifier (PREFIX(\"caf_is_present\")), \"R R R \",\n \tinteger_type_node, 3, pvoid_type_node, integer_type_node,\n \tpvoid_type_node);\n     }"}, {"sha": "666dc370959744391e7b6afddb85d344606eef94", "filename": "gcc/fortran/trans-io.c", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/762cca0023c9bdbd762c44f33a954845bbccd568/gcc%2Ffortran%2Ftrans-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/762cca0023c9bdbd762c44f33a954845bbccd568/gcc%2Ffortran%2Ftrans-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-io.c?ref=762cca0023c9bdbd762c44f33a954845bbccd568", "patch": "@@ -328,165 +328,165 @@ gfc_build_io_library_fndecls (void)\n   dt_parm_type = build_pointer_type (st_parameter[IOPARM_ptype_dt].type);\n \n   iocall[IOCALL_X_INTEGER] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_integer\")), \".wW.\",\n+\tget_identifier (PREFIX(\"transfer_integer\")), \". w W . \",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_INTEGER_WRITE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_integer_write\")), \".wR.\",\n+\tget_identifier (PREFIX(\"transfer_integer_write\")), \". w R . \",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_LOGICAL] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_logical\")), \".wW.\",\n+\tget_identifier (PREFIX(\"transfer_logical\")), \". w W . \",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_LOGICAL_WRITE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_logical_write\")), \".wR.\",\n+\tget_identifier (PREFIX(\"transfer_logical_write\")), \". w R . \",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_CHARACTER] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_character\")), \".wW.\",\n+\tget_identifier (PREFIX(\"transfer_character\")), \". w W . \",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_charlen_type_node);\n \n   iocall[IOCALL_X_CHARACTER_WRITE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_character_write\")), \".wR.\",\n+\tget_identifier (PREFIX(\"transfer_character_write\")), \". w R . \",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_charlen_type_node);\n \n   iocall[IOCALL_X_CHARACTER_WIDE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_character_wide\")), \".wW..\",\n+\tget_identifier (PREFIX(\"transfer_character_wide\")), \". w W . . \",\n \tvoid_type_node, 4, dt_parm_type, pvoid_type_node,\n \tgfc_charlen_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_CHARACTER_WIDE_WRITE] =\n     gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_character_wide_write\")), \".wR..\",\n+\tget_identifier (PREFIX(\"transfer_character_wide_write\")), \". w R . . \",\n \tvoid_type_node, 4, dt_parm_type, pvoid_type_node,\n \tgfc_charlen_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_REAL] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_real\")), \".wW.\",\n+\tget_identifier (PREFIX(\"transfer_real\")), \". w W . \",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_REAL_WRITE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_real_write\")), \".wR.\",\n+\tget_identifier (PREFIX(\"transfer_real_write\")), \". w R . \",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_COMPLEX] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_complex\")), \".wW.\",\n+\tget_identifier (PREFIX(\"transfer_complex\")), \". w W . \",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_COMPLEX_WRITE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_complex_write\")), \".wR.\",\n+\tget_identifier (PREFIX(\"transfer_complex_write\")), \". w R . \",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   /* Version for __float128.  */\n   iocall[IOCALL_X_REAL128] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_real128\")), \".wW.\",\n+\tget_identifier (PREFIX(\"transfer_real128\")), \". w W . \",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_REAL128_WRITE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_real128_write\")), \".wR.\",\n+\tget_identifier (PREFIX(\"transfer_real128_write\")), \". w R . \",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_COMPLEX128] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_complex128\")), \".wW.\",\n+\tget_identifier (PREFIX(\"transfer_complex128\")), \". w W . \",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_COMPLEX128_WRITE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_complex128_write\")), \".wR.\",\n+\tget_identifier (PREFIX(\"transfer_complex128_write\")), \". w R . \",\n \tvoid_type_node, 3, dt_parm_type, pvoid_type_node, gfc_int4_type_node);\n \n   iocall[IOCALL_X_ARRAY] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_array\")), \".ww..\",\n+\tget_identifier (PREFIX(\"transfer_array\")), \". w w . . \",\n \tvoid_type_node, 4, dt_parm_type, pvoid_type_node,\n \tinteger_type_node, gfc_charlen_type_node);\n \n   iocall[IOCALL_X_ARRAY_WRITE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_array_write\")), \".wr..\",\n+\tget_identifier (PREFIX(\"transfer_array_write\")), \". w r . . \",\n \tvoid_type_node, 4, dt_parm_type, pvoid_type_node,\n \tinteger_type_node, gfc_charlen_type_node);\n \n   iocall[IOCALL_X_DERIVED] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"transfer_derived\")), \".wr\",\n+\tget_identifier (PREFIX(\"transfer_derived\")), \". w r \",\n \tvoid_type_node, 2, dt_parm_type, pvoid_type_node);\n \n   /* Library entry points */\n \n   iocall[IOCALL_READ] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_read\")), \".w\",\n+\tget_identifier (PREFIX(\"st_read\")), \". w \",\n \tvoid_type_node, 1, dt_parm_type);\n \n   iocall[IOCALL_WRITE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_write\")), \".w\",\n+\tget_identifier (PREFIX(\"st_write\")), \". w \",\n \tvoid_type_node, 1, dt_parm_type);\n \n   parm_type = build_pointer_type (st_parameter[IOPARM_ptype_open].type);\n   iocall[IOCALL_OPEN] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_open\")), \".w\",\n+\tget_identifier (PREFIX(\"st_open\")), \". w \",\n \tvoid_type_node, 1, parm_type);\n \n   parm_type = build_pointer_type (st_parameter[IOPARM_ptype_close].type);\n   iocall[IOCALL_CLOSE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_close\")), \".w\",\n+\tget_identifier (PREFIX(\"st_close\")), \". w \",\n \tvoid_type_node, 1, parm_type);\n \n   parm_type = build_pointer_type (st_parameter[IOPARM_ptype_inquire].type);\n   iocall[IOCALL_INQUIRE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_inquire\")), \".w\",\n+\tget_identifier (PREFIX(\"st_inquire\")), \". w \",\n \tvoid_type_node, 1, parm_type);\n \n   iocall[IOCALL_IOLENGTH] = gfc_build_library_function_decl_with_spec(\n-\tget_identifier (PREFIX(\"st_iolength\")), \".w\",\n+\tget_identifier (PREFIX(\"st_iolength\")), \". w \",\n \tvoid_type_node, 1, dt_parm_type);\n \n   parm_type = build_pointer_type (st_parameter[IOPARM_ptype_wait].type);\n   iocall[IOCALL_WAIT] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_wait_async\")), \".w\",\n+\tget_identifier (PREFIX(\"st_wait_async\")), \". w \",\n \tvoid_type_node, 1, parm_type);\n \n   parm_type = build_pointer_type (st_parameter[IOPARM_ptype_filepos].type);\n   iocall[IOCALL_REWIND] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_rewind\")), \".w\",\n+\tget_identifier (PREFIX(\"st_rewind\")), \". w \",\n \tvoid_type_node, 1, parm_type);\n \n   iocall[IOCALL_BACKSPACE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_backspace\")), \".w\",\n+\tget_identifier (PREFIX(\"st_backspace\")), \". w \",\n \tvoid_type_node, 1, parm_type);\n \n   iocall[IOCALL_ENDFILE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_endfile\")), \".w\",\n+\tget_identifier (PREFIX(\"st_endfile\")), \". w \",\n \tvoid_type_node, 1, parm_type);\n \n   iocall[IOCALL_FLUSH] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_flush\")), \".w\",\n+\tget_identifier (PREFIX(\"st_flush\")), \". w \",\n \tvoid_type_node, 1, parm_type);\n \n   /* Library helpers */\n \n   iocall[IOCALL_READ_DONE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_read_done\")), \".w\",\n+\tget_identifier (PREFIX(\"st_read_done\")), \". w \",\n \tvoid_type_node, 1, dt_parm_type);\n \n   iocall[IOCALL_WRITE_DONE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_write_done\")), \".w\",\n+\tget_identifier (PREFIX(\"st_write_done\")), \". w \",\n \tvoid_type_node, 1, dt_parm_type);\n \n   iocall[IOCALL_IOLENGTH_DONE] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_iolength_done\")), \".w\",\n+\tget_identifier (PREFIX(\"st_iolength_done\")), \". w \",\n \tvoid_type_node, 1, dt_parm_type);\n \n   iocall[IOCALL_SET_NML_VAL] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_set_nml_var\")), \".w.R...\",\n+\tget_identifier (PREFIX(\"st_set_nml_var\")), \". w . R . . . \",\n \tvoid_type_node, 6, dt_parm_type, pvoid_type_node, pvoid_type_node,\n \tgfc_int4_type_node, gfc_charlen_type_node, get_dtype_type_node());\n \n   iocall[IOCALL_SET_NML_DTIO_VAL] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_set_nml_dtio_var\")), \".w.R.....\",\n+\tget_identifier (PREFIX(\"st_set_nml_dtio_var\")), \". w . R . . . . . \",\n \tvoid_type_node, 8, dt_parm_type, pvoid_type_node, pvoid_type_node,\n \tgfc_int4_type_node, gfc_charlen_type_node, get_dtype_type_node(),\n \tpvoid_type_node, pvoid_type_node);\n \n   iocall[IOCALL_SET_NML_VAL_DIM] = gfc_build_library_function_decl_with_spec (\n-\tget_identifier (PREFIX(\"st_set_nml_var_dim\")), \".w....\",\n+\tget_identifier (PREFIX(\"st_set_nml_var_dim\")), \". w . . . . \",\n \tvoid_type_node, 5, dt_parm_type, gfc_int4_type_node,\n \tgfc_array_index_type, gfc_array_index_type, gfc_array_index_type);\n }"}, {"sha": "17f3ccc1d4e9bf1d3ebb4e3a8cb1e8cee035653d", "filename": "gcc/fortran/trans-types.c", "status": "modified", "additions": 30, "deletions": 8, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/762cca0023c9bdbd762c44f33a954845bbccd568/gcc%2Ffortran%2Ftrans-types.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/762cca0023c9bdbd762c44f33a954845bbccd568/gcc%2Ffortran%2Ftrans-types.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Ftrans-types.c?ref=762cca0023c9bdbd762c44f33a954845bbccd568", "patch": "@@ -2940,20 +2940,33 @@ create_fn_spec (gfc_symbol *sym, tree fntype)\n \n   memset (&spec, 0, sizeof (spec));\n   spec[0] = '.';\n-  spec_len = 1;\n+  spec[1] = ' ';\n+  spec_len = 2;\n \n   if (sym->attr.entry_master)\n-    spec[spec_len++] = 'R';\n+    {\n+      spec[spec_len++] = 'R';\n+      spec[spec_len++] = ' ';\n+    }\n   if (gfc_return_by_reference (sym))\n     {\n       gfc_symbol *result = sym->result ? sym->result : sym;\n \n       if (result->attr.pointer || sym->attr.proc_pointer)\n-\tspec[spec_len++] = '.';\n+\t{\n+\t  spec[spec_len++] = '.';\n+\t  spec[spec_len++] = ' ';\n+\t}\n       else\n-\tspec[spec_len++] = 'w';\n+\t{\n+\t  spec[spec_len++] = 'w';\n+\t  spec[spec_len++] = ' ';\n+\t}\n       if (sym->ts.type == BT_CHARACTER)\n-\tspec[spec_len++] = 'R';\n+\t{\n+\t  spec[spec_len++] = 'R';\n+\t  spec[spec_len++] = ' ';\n+\t}\n     }\n \n   for (f = gfc_sym_get_dummy_args (sym); f; f = f->next)\n@@ -2968,11 +2981,20 @@ create_fn_spec (gfc_symbol *sym, tree fntype)\n \t\t&& (CLASS_DATA (f->sym)->ts.u.derived->attr.proc_pointer_comp\n \t\t    || CLASS_DATA (f->sym)->ts.u.derived->attr.pointer_comp))\n \t    || (f->sym->ts.type == BT_INTEGER && f->sym->ts.is_c_interop))\n-\t  spec[spec_len++] = '.';\n+\t  {\n+\t    spec[spec_len++] = '.';\n+\t    spec[spec_len++] = ' ';\n+\t  }\n \telse if (f->sym->attr.intent == INTENT_IN)\n-\t  spec[spec_len++] = 'r';\n+\t  {\n+\t    spec[spec_len++] = 'r';\n+\t    spec[spec_len++] = ' ';\n+\t  }\n \telse if (f->sym)\n-\t  spec[spec_len++] = 'w';\n+\t  {\n+\t    spec[spec_len++] = 'w';\n+\t    spec[spec_len++] = ' ';\n+\t  }\n       }\n \n   tmp = build_tree_list (NULL_TREE, build_string (spec_len, spec));"}, {"sha": "310d37aa53819791b5df1683afca831f08e5892a", "filename": "gcc/internal-fn.def", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/762cca0023c9bdbd762c44f33a954845bbccd568/gcc%2Finternal-fn.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/762cca0023c9bdbd762c44f33a954845bbccd568/gcc%2Finternal-fn.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.def?ref=762cca0023c9bdbd762c44f33a954845bbccd568", "patch": "@@ -311,17 +311,18 @@ DEF_INTERNAL_FN (GOMP_SIMD_ORDERED_END, ECF_LEAF | ECF_NOTHROW, NULL)\n DEF_INTERNAL_FN (LOOP_VECTORIZED, ECF_NOVOPS | ECF_LEAF | ECF_NOTHROW, NULL)\n DEF_INTERNAL_FN (LOOP_DIST_ALIAS, ECF_NOVOPS | ECF_LEAF | ECF_NOTHROW, NULL)\n DEF_INTERNAL_FN (ANNOTATE,  ECF_CONST | ECF_LEAF | ECF_NOTHROW, NULL)\n-DEF_INTERNAL_FN (UBSAN_NULL, ECF_LEAF | ECF_NOTHROW, \".R.\")\n+DEF_INTERNAL_FN (UBSAN_NULL, ECF_LEAF | ECF_NOTHROW, \". R . \")\n DEF_INTERNAL_FN (UBSAN_BOUNDS, ECF_LEAF | ECF_NOTHROW, NULL)\n-DEF_INTERNAL_FN (UBSAN_VPTR, ECF_LEAF | ECF_NOTHROW, \".RR..\")\n+DEF_INTERNAL_FN (UBSAN_VPTR, ECF_LEAF | ECF_NOTHROW, \". R R . . \")\n DEF_INTERNAL_FN (UBSAN_CHECK_ADD, ECF_CONST | ECF_LEAF | ECF_NOTHROW, NULL)\n DEF_INTERNAL_FN (UBSAN_CHECK_SUB, ECF_CONST | ECF_LEAF | ECF_NOTHROW, NULL)\n DEF_INTERNAL_FN (UBSAN_CHECK_MUL, ECF_CONST | ECF_LEAF | ECF_NOTHROW, NULL)\n-DEF_INTERNAL_FN (UBSAN_PTR, ECF_LEAF | ECF_NOTHROW, \".R.\")\n+DEF_INTERNAL_FN (UBSAN_PTR, ECF_LEAF | ECF_NOTHROW, \". R . \")\n DEF_INTERNAL_FN (UBSAN_OBJECT_SIZE, ECF_LEAF | ECF_NOTHROW, NULL)\n DEF_INTERNAL_FN (ABNORMAL_DISPATCHER, ECF_NORETURN, NULL)\n DEF_INTERNAL_FN (BUILTIN_EXPECT, ECF_CONST | ECF_LEAF | ECF_NOTHROW, NULL)\n-DEF_INTERNAL_FN (ASAN_CHECK, ECF_TM_PURE | ECF_LEAF | ECF_NOTHROW, \"..R..\")\n+DEF_INTERNAL_FN (ASAN_CHECK, ECF_TM_PURE | ECF_LEAF | ECF_NOTHROW,\n+\t\t \". . R . . \")\n DEF_INTERNAL_FN (ASAN_MARK, ECF_LEAF | ECF_NOTHROW, NULL)\n DEF_INTERNAL_FN (ASAN_POISON, ECF_LEAF | ECF_NOTHROW | ECF_NOVOPS, NULL)\n DEF_INTERNAL_FN (ASAN_POISON_USE, ECF_LEAF | ECF_NOTHROW | ECF_NOVOPS, NULL)\n@@ -345,8 +346,8 @@ DEF_INTERNAL_FN (PHI, 0, NULL)\n    thought to clobber memory and can be gcse'd within a single\n    parallel region, but not across FORK/JOIN boundaries.  They take a\n    single INTEGER_CST argument.  This might be overly conservative.  */\n-DEF_INTERNAL_FN (GOACC_DIM_SIZE, ECF_CONST | ECF_NOTHROW | ECF_LEAF, \".\")\n-DEF_INTERNAL_FN (GOACC_DIM_POS, ECF_PURE | ECF_NOTHROW | ECF_LEAF, \".\")\n+DEF_INTERNAL_FN (GOACC_DIM_SIZE, ECF_CONST | ECF_NOTHROW | ECF_LEAF, NULL)\n+DEF_INTERNAL_FN (GOACC_DIM_POS, ECF_PURE | ECF_NOTHROW | ECF_LEAF, NULL)\n \n /* OpenACC looping abstraction.  See internal-fn.h for usage.  */\n DEF_INTERNAL_FN (GOACC_LOOP, ECF_PURE | ECF_NOTHROW, NULL)"}, {"sha": "3d3a91cfd46d6fdbe381f72fdee31238c463add4", "filename": "gcc/tree-ssa-alias.c", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/762cca0023c9bdbd762c44f33a954845bbccd568/gcc%2Ftree-ssa-alias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/762cca0023c9bdbd762c44f33a954845bbccd568/gcc%2Ftree-ssa-alias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-alias.c?ref=762cca0023c9bdbd762c44f33a954845bbccd568", "patch": "@@ -4020,16 +4020,21 @@ walk_aliased_vdefs (ao_ref *ref, tree vdef,\n void\n attr_fnspec::verify ()\n {\n-  /* FIXME: Fortran trans-decl.c contains multiple wrong fnspec strings.\n-     re-enable verification after these are fixed.  */\n-  return;\n   bool err = false;\n \n   /* Check return value specifier.  */\n   if (len < return_desc_size)\n     err = true;\n+  else if ((len - return_desc_size) % arg_desc_size)\n+    err = true;\n   else if ((str[0] < '1' || str[0] > '4')\n-\t   && str[0] != '.' && str[0] != 'm')\n+\t   && str[0] != '.' && str[0] != 'm'\n+\t   /* FIXME: Fortran trans-decl.c contains multiple wrong fnspec\n+\t      strings.  The following characters have no meaning.  */\n+\t   && str[0] != 'R' && str[0] != 'W')\n+    err = true;\n+\n+  if (str[1] != ' ')\n     err = true;\n \n   /* Now check all parameters.  */\n@@ -4049,7 +4054,9 @@ attr_fnspec::verify ()\n \t  default:\n \t    err = true;\n \t}\n+      if (str[idx + 1] != ' ')\n+\terr = true;\n     }\n   if (err)\n-    internal_error (\"invalid fn spec attribute %s\", str);\n+    internal_error (\"invalid fn spec attribute \\\"%s\\\"\", str);\n }"}]}