{"sha": "8f279ed7be97a4cafd8701062618fb06068793a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGYyNzllZDdiZTk3YTRjYWZkODcwMTA2MjYxOGZiMDYwNjg3OTNhMQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-03-04T11:56:29Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-03-04T11:56:29Z"}, "message": "typeck.c (unary_complex_lvalue): &D::i has type B::* if i comes from B.\n\n\t* typeck.c (unary_complex_lvalue): &D::i has type B::* if i comes\n\tfrom B.\n\nFrom-SVN: r18400", "tree": {"sha": "c0ce379d9329ca054c35fdef7909677fe998e1f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0ce379d9329ca054c35fdef7909677fe998e1f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f279ed7be97a4cafd8701062618fb06068793a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f279ed7be97a4cafd8701062618fb06068793a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f279ed7be97a4cafd8701062618fb06068793a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f279ed7be97a4cafd8701062618fb06068793a1/comments", "author": null, "committer": null, "parents": [{"sha": "a1da6cbacfac48657e23fe42e44ee8bb635314f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a1da6cbacfac48657e23fe42e44ee8bb635314f3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a1da6cbacfac48657e23fe42e44ee8bb635314f3"}], "stats": {"total": 35, "additions": 18, "deletions": 17}, "files": [{"sha": "582567a4e7e124729482884a278450b8e0ad5746", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f279ed7be97a4cafd8701062618fb06068793a1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f279ed7be97a4cafd8701062618fb06068793a1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=8f279ed7be97a4cafd8701062618fb06068793a1", "patch": "@@ -1,10 +1,19 @@\n+Wed Mar  4 11:47:55 1998  Jason Merrill  <jason@yorick.cygnus.com>\n+\n+\t* typeck.c (unary_complex_lvalue): &D::i has type B::* if i comes\n+\tfrom B.\n+\n Wed Mar  4 11:28:08 1998  Mark Mitchell  <mmitchell@usa.net>\n \n \t* pt.c (finish_member_template_decl): Deal more gracefully with\n \tinvalid declarations.\n \n Tue Mar  3 01:38:17 1998  Jason Merrill  <jason@yorick.cygnus.com>\n \n+\t* cvt.c, decl.c, decl2.c, init.c, rtti.c, typeck.c, typeck2.c,\n+\tcp-tree.h: Clean up more old overloading code, old RTTI code, and\n+\tsome formatting quirks.\n+\n \t* call.c, class.c, cp-tree.h, cvt.c, decl.c, init.c, lex.c,\n \tmethod.c, pt.c, ptree.c, typeck.c: Remove support for \n \t-fno-ansi-overloading and overloading METHOD_CALL_EXPR."}, {"sha": "f7aa982dcb5b737a378e9bd7e3b52bde7e2356ad", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f279ed7be97a4cafd8701062618fb06068793a1/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f279ed7be97a4cafd8701062618fb06068793a1/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=8f279ed7be97a4cafd8701062618fb06068793a1", "patch": "@@ -4733,7 +4733,7 @@ unary_complex_lvalue (code, arg)\n       else\n \t{\n \t  tree type;\n-\t  tree offset = integer_zero_node;\n+\t  tree offset;\n \n \t  if (TREE_OPERAND (arg, 0)\n \t      && (TREE_CODE (TREE_OPERAND (arg, 0)) != NOP_EXPR\n@@ -4747,29 +4747,21 @@ unary_complex_lvalue (code, arg)\n \t\treturn error_mark_node;\n \t      }\n \n-\t  type = TYPE_OFFSET_BASETYPE (TREE_TYPE (arg));\n-\n-\t  /* Now in the offset to the final subobject.  */\n-\t  offset = size_binop (PLUS_EXPR,\n-\t\t\t       offset,\n-\t\t\t       get_delta_difference (DECL_FIELD_CONTEXT (t), \n-\t\t\t\t\t\t     type,\n-\t\t\t\t\t\t     0));\n-\n \t  /* Add in the offset to the field.  */\n-\t  offset = size_binop (PLUS_EXPR, offset,\n-\t\t\t       convert (sizetype,\n-\t\t\t\t\tsize_binop (EASY_DIV_EXPR,\n-\t\t\t\t\t\t    DECL_FIELD_BITPOS (t),\n-\t\t\t\t\t\t    size_int (BITS_PER_UNIT))\n-\t\t\t\t\t));\n+\t  offset = convert (sizetype,\n+\t\t\t    size_binop (EASY_DIV_EXPR,\n+\t\t\t\t\tDECL_FIELD_BITPOS (t),\n+\t\t\t\t\tsize_int (BITS_PER_UNIT)));\n \n \t  /* We offset all pointer to data members by 1 so that we can\n \t     distinguish between a null pointer to data member and the first\n \t     data member of a structure.  */\n \t  offset = size_binop (PLUS_EXPR, offset, size_int (1));\n \n-\t  return cp_convert (build_pointer_type (TREE_TYPE (arg)), offset);\n+\t  type = build_offset_type (DECL_FIELD_CONTEXT (t), TREE_TYPE (t));\n+\t  type = build_pointer_type (type);\n+\n+\t  return cp_convert (type, offset);\n \t}\n     }\n "}]}