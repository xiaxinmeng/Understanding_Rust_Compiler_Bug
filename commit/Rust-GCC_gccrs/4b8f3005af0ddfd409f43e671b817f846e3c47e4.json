{"sha": "4b8f3005af0ddfd409f43e671b817f846e3c47e4", "node_id": "C_kwDOANBUbNoAKDRiOGYzMDA1YWYwZGRmZDQwOWY0M2U2NzFiODE3Zjg0NmUzYzQ3ZTQ", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-08-23T14:59:12Z"}, "committer": {"name": "Arthur Cohen", "email": "arthur.cohen@embecosm.com", "date": "2022-12-13T13:00:03Z"}, "message": "gccrs: Add Debug info testsuite\n\nThis testsuite is specifically about testcases which scan the asm debug\ninfo for results.\n\n\tgcc/testsuite/\n\t* rust/debug/chartype.rs: New.\n\t* rust/debug/custom_link_section.rs: New.\n\t* rust/debug/debug.exp: New.\n\t* rust/debug/i8u8.rs: New.\n\t* rust/debug/lang.rs: New.\n\t* rust/debug/no_mangle.rs: New.\n\t* rust/debug/oldlang.rs: New.\n\t* rust/debug/tuple.rs: New.\n\t* rust/debug/win64-abi.rs: New.\n\nCo-authored-by: Tom Tromey <tom@tromey.com>\nCo-authored-by: Mark Wielaard <mark@klomp.org>\nCo-authored-by: Marc Poulhi\u00e8s <dkm@kataplop.net>", "tree": {"sha": "b1b99dfaedd8be3b8705f8ac55f6d84edcb0ea61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b1b99dfaedd8be3b8705f8ac55f6d84edcb0ea61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4b8f3005af0ddfd409f43e671b817f846e3c47e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b8f3005af0ddfd409f43e671b817f846e3c47e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b8f3005af0ddfd409f43e671b817f846e3c47e4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b8f3005af0ddfd409f43e671b817f846e3c47e4/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CohenArthur", "id": 43524065, "node_id": "MDQ6VXNlcjQzNTI0MDY1", "avatar_url": "https://avatars.githubusercontent.com/u/43524065?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CohenArthur", "html_url": "https://github.com/CohenArthur", "followers_url": "https://api.github.com/users/CohenArthur/followers", "following_url": "https://api.github.com/users/CohenArthur/following{/other_user}", "gists_url": "https://api.github.com/users/CohenArthur/gists{/gist_id}", "starred_url": "https://api.github.com/users/CohenArthur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CohenArthur/subscriptions", "organizations_url": "https://api.github.com/users/CohenArthur/orgs", "repos_url": "https://api.github.com/users/CohenArthur/repos", "events_url": "https://api.github.com/users/CohenArthur/events{/privacy}", "received_events_url": "https://api.github.com/users/CohenArthur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b772a504eff27c4260772752a7ad3ccaefcfc4af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b772a504eff27c4260772752a7ad3ccaefcfc4af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b772a504eff27c4260772752a7ad3ccaefcfc4af"}], "stats": {"total": 116, "additions": 116, "deletions": 0}, "files": [{"sha": "69e7ab0b17f0854651649b6ea8fc473f31ebd4b8", "filename": "gcc/testsuite/rust/debug/chartype.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8f3005af0ddfd409f43e671b817f846e3c47e4/gcc%2Ftestsuite%2Frust%2Fdebug%2Fchartype.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8f3005af0ddfd409f43e671b817f846e3c47e4/gcc%2Ftestsuite%2Frust%2Fdebug%2Fchartype.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fdebug%2Fchartype.rs?ref=4b8f3005af0ddfd409f43e671b817f846e3c47e4", "patch": "@@ -0,0 +1,10 @@\n+// 'char' should use DW_ATE_UTF\n+fn main () {\n+    let c = 'x';\n+// { dg-do compile }\n+// Use -w to avoid warnings about the unused variables\n+// DW_ATE_UTF entered in DWARF 4.\n+// { dg-options \"-w -gdwarf-4 -dA\" }\n+// DW_ATE_UTF = 0x10\n+// { dg-final { scan-assembler \"0x10\\[ \\t]\\[^\\n\\r]* DW_AT_encoding\" } } */\n+}"}, {"sha": "142f351313661b813e6d71db96f153794ff8068a", "filename": "gcc/testsuite/rust/debug/custom_link_section.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8f3005af0ddfd409f43e671b817f846e3c47e4/gcc%2Ftestsuite%2Frust%2Fdebug%2Fcustom_link_section.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8f3005af0ddfd409f43e671b817f846e3c47e4/gcc%2Ftestsuite%2Frust%2Fdebug%2Fcustom_link_section.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fdebug%2Fcustom_link_section.rs?ref=4b8f3005af0ddfd409f43e671b817f846e3c47e4", "patch": "@@ -0,0 +1,13 @@\n+#[link_section = \".universe\"]\n+fn not_in_text() -> i32 {\n+    42\n+}\n+\n+fn main() -> i32 {\n+// { dg-do compile }\n+// { dg-options \"-gdwarf-5 -dA -w\" }\n+    not_in_text();\n+// { dg-final { scan-assembler \".universe\" } } */\n+\n+    0\n+}"}, {"sha": "c71b5930d9047236e53706e913b34ff99a439c91", "filename": "gcc/testsuite/rust/debug/debug.exp", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8f3005af0ddfd409f43e671b817f846e3c47e4/gcc%2Ftestsuite%2Frust%2Fdebug%2Fdebug.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8f3005af0ddfd409f43e671b817f846e3c47e4/gcc%2Ftestsuite%2Frust%2Fdebug%2Fdebug.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fdebug%2Fdebug.exp?ref=4b8f3005af0ddfd409f43e671b817f846e3c47e4", "patch": "@@ -0,0 +1,33 @@\n+# Copyright (C) 2021-2022 Free Software Foundation, Inc.\n+\n+# This program is free software; you can redistribute it and/or modify\n+# it under the terms of the GNU General Public License as published by\n+# the Free Software Foundation; either version 3 of the License, or\n+# (at your option) any later version.\n+# \n+# This program is distributed in the hope that it will be useful,\n+# but WITHOUT ANY WARRANTY; without even the implied warranty of\n+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+# GNU General Public License for more details.\n+# \n+# You should have received a copy of the GNU General Public License\n+# along with GCC; see the file COPYING3.  If not see\n+# <http://www.gnu.org/licenses/>.\n+\n+# Debugging tests.\n+\n+# Load support procs.\n+load_lib rust-dg.exp\n+\n+# Initialize `dg'.\n+dg-init\n+\n+# Main loop.\n+set saved-dg-do-what-default ${dg-do-what-default}\n+\n+set dg-do-what-default \"compile\"\n+dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.rs]] \"\" \"\"\n+set dg-do-what-default ${saved-dg-do-what-default}\n+\n+# All done.\n+dg-finish"}, {"sha": "1cd21a4a8ffc70a69480596c40e7149810be63c3", "filename": "gcc/testsuite/rust/debug/i8u8.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8f3005af0ddfd409f43e671b817f846e3c47e4/gcc%2Ftestsuite%2Frust%2Fdebug%2Fi8u8.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8f3005af0ddfd409f43e671b817f846e3c47e4/gcc%2Ftestsuite%2Frust%2Fdebug%2Fi8u8.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fdebug%2Fi8u8.rs?ref=4b8f3005af0ddfd409f43e671b817f846e3c47e4", "patch": "@@ -0,0 +1,12 @@\n+// i8 and u8 types should not have the DWARF 'char' encoding.\n+fn main () {\n+    let x : i8 = 5;\n+    let y : u8 = 7;\n+// { dg-do compile }\n+// Use -w to avoid warnings about the unused variables\n+// { dg-options \"-w -g -dA\" }\n+// DW_ATE_signed_char = 6\n+// { dg-final { scan-assembler-not \"0x6\\[ \\t]\\[^\\n\\r]* DW_AT_encoding\" } } */\n+// DW_ATE_unsigned_char = 8\n+// { dg-final { scan-assembler-not \"0x8\\[ \\t]\\[^\\n\\r]* DW_AT_encoding\" } } */\n+}"}, {"sha": "12e0b587a02e4d1215539e5bf344cf789cf408fe", "filename": "gcc/testsuite/rust/debug/lang.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8f3005af0ddfd409f43e671b817f846e3c47e4/gcc%2Ftestsuite%2Frust%2Fdebug%2Flang.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8f3005af0ddfd409f43e671b817f846e3c47e4/gcc%2Ftestsuite%2Frust%2Fdebug%2Flang.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fdebug%2Flang.rs?ref=4b8f3005af0ddfd409f43e671b817f846e3c47e4", "patch": "@@ -0,0 +1,6 @@\n+fn main () {\n+// { dg-do compile }\n+// { dg-options \"-gdwarf-5 -dA\" }\n+// DW_LANG_Rust is 0x1c\n+// { dg-final { scan-assembler \"0x1c\\[ \\t]\\[^\\n\\r]* DW_AT_language\" } } */\n+}"}, {"sha": "0cef40482f4b71d92bd11b1f688519ba436eaf1c", "filename": "gcc/testsuite/rust/debug/no_mangle.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8f3005af0ddfd409f43e671b817f846e3c47e4/gcc%2Ftestsuite%2Frust%2Fdebug%2Fno_mangle.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8f3005af0ddfd409f43e671b817f846e3c47e4/gcc%2Ftestsuite%2Frust%2Fdebug%2Fno_mangle.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fdebug%2Fno_mangle.rs?ref=4b8f3005af0ddfd409f43e671b817f846e3c47e4", "patch": "@@ -0,0 +1,17 @@\n+#[no_mangle]\n+fn do_not_mangle() -> i32 {\n+    0 \n+}\n+\n+fn please_mangle() {}\n+\n+fn main() {\n+// { dg-do compile }\n+// { dg-options \"-gdwarf-5 -dA\" }\n+    let _ = do_not_mangle();\n+    please_mangle();\n+// look for unmangled function name:\n+// { dg-final { scan-assembler \"do_not_mangle:\" } } */\n+// look for legacy mangled function name:\n+// { dg-final { scan-assembler \"13please_mangle\" } } */\n+}"}, {"sha": "648d6b78f06f4716b0a2184e5f20cedc5d8dbc49", "filename": "gcc/testsuite/rust/debug/oldlang.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8f3005af0ddfd409f43e671b817f846e3c47e4/gcc%2Ftestsuite%2Frust%2Fdebug%2Foldlang.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8f3005af0ddfd409f43e671b817f846e3c47e4/gcc%2Ftestsuite%2Frust%2Fdebug%2Foldlang.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fdebug%2Foldlang.rs?ref=4b8f3005af0ddfd409f43e671b817f846e3c47e4", "patch": "@@ -0,0 +1,6 @@\n+fn main () {\n+// { dg-do compile }\n+// { dg-options \"-gstrict-dwarf -gdwarf-3 -dA\" }\n+// Strict DWARF < 5 uses DW_LANG_C = 0x0002\n+// { dg-final { scan-assembler \"0x2\\[ \\t]\\[^\\n\\r]* DW_AT_language\" } } */\n+}"}, {"sha": "e51a5ffdbb646f30c37bc6339438d3782ff5a113", "filename": "gcc/testsuite/rust/debug/tuple.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8f3005af0ddfd409f43e671b817f846e3c47e4/gcc%2Ftestsuite%2Frust%2Fdebug%2Ftuple.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8f3005af0ddfd409f43e671b817f846e3c47e4/gcc%2Ftestsuite%2Frust%2Fdebug%2Ftuple.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fdebug%2Ftuple.rs?ref=4b8f3005af0ddfd409f43e671b817f846e3c47e4", "patch": "@@ -0,0 +1,8 @@\n+fn main () {\n+// { dg-do compile }\n+// { dg-options \"-gdwarf-5 -dA -w\" }\n+    let x = (32, 32);\n+// Look for field __0 and __1\n+// { dg-final { scan-assembler \"__0\" } } */\n+// { dg-final { scan-assembler \"__1\" } } */\n+}"}, {"sha": "b2b08cd51141b062626de107adfeba7cd13677df", "filename": "gcc/testsuite/rust/debug/win64-abi.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4b8f3005af0ddfd409f43e671b817f846e3c47e4/gcc%2Ftestsuite%2Frust%2Fdebug%2Fwin64-abi.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4b8f3005af0ddfd409f43e671b817f846e3c47e4/gcc%2Ftestsuite%2Frust%2Fdebug%2Fwin64-abi.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fdebug%2Fwin64-abi.rs?ref=4b8f3005af0ddfd409f43e671b817f846e3c47e4", "patch": "@@ -0,0 +1,11 @@\n+// { dg-do compile { target { x86_64-*-* } } }\n+// { dg-options \"-gdwarf-5 -dA -w -O1 -m64\" }\n+pub extern \"win64\" fn square(num: i32) -> i32 {\n+    num * num\n+}\n+\n+fn main() {\n+    // MS ABI dictates that the first argument is ecx instead of edi from the sysv world\n+    // { dg-final { scan-assembler \"%ecx, %ecx\" } }\n+    square(1);\n+}"}]}