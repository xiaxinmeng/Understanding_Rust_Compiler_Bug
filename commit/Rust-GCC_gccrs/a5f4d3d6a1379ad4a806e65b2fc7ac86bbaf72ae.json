{"sha": "a5f4d3d6a1379ad4a806e65b2fc7ac86bbaf72ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTVmNGQzZDZhMTM3OWFkNGE4MDZlNjViMmZjN2FjODZiYmFmNzJhZQ==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2018-08-30T12:58:42Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2018-08-30T12:58:42Z"}, "message": "sreal.h (SREAL_PART_BITS): Change to 31; remove seemingly unnecessary comment that it has to be even number.\n\n\n\t* sreal.h (SREAL_PART_BITS): Change to 31; remove seemingly unnecessary\n\tcomment that it has to be even number.\n\t(class sreal): Change m_sig type to int32_t.\n\t* sreal.c (sreal::dump, sreal::to_int, opreator+, operator-): Use\n\tint64_t for temporary calculations.\n\t(sreal_verify_basics): Drop one bit from minimum and maximum.\n\nFrom-SVN: r263981", "tree": {"sha": "36987055a6347d3f684dd6e9707d49cf4a97dd2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/36987055a6347d3f684dd6e9707d49cf4a97dd2b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a5f4d3d6a1379ad4a806e65b2fc7ac86bbaf72ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5f4d3d6a1379ad4a806e65b2fc7ac86bbaf72ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5f4d3d6a1379ad4a806e65b2fc7ac86bbaf72ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5f4d3d6a1379ad4a806e65b2fc7ac86bbaf72ae/comments", "author": null, "committer": null, "parents": [{"sha": "b1d5f644929182de05cf2bb940a6c417ec28f29a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b1d5f644929182de05cf2bb940a6c417ec28f29a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b1d5f644929182de05cf2bb940a6c417ec28f29a"}], "stats": {"total": 30, "additions": 19, "deletions": 11}, "files": [{"sha": "86c96a9bf700e226a672184151d2dc815b449018", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5f4d3d6a1379ad4a806e65b2fc7ac86bbaf72ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5f4d3d6a1379ad4a806e65b2fc7ac86bbaf72ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a5f4d3d6a1379ad4a806e65b2fc7ac86bbaf72ae", "patch": "@@ -1,3 +1,12 @@\n+2018-08-29  Jan Hubicka  <jh@suse.cz>\n+\n+\t* sreal.h (SREAL_PART_BITS): Change to 31; remove seemingly unnecessary\n+\tcomment that it has to be even number.\n+\t(class sreal): Change m_sig type to int32_t.\n+\t* sreal.c (sreal::dump, sreal::to_int, opreator+, operator-): Use\n+\tint64_t for temporary calculations.\n+\t(sreal_verify_basics): Drop one bit from minimum and maximum.\n+\n 2018-08-30  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/87147"}, {"sha": "e17d93afb6a7b1f6df4a2f15647d74a4f5e221d7", "filename": "gcc/sreal.c", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5f4d3d6a1379ad4a806e65b2fc7ac86bbaf72ae/gcc%2Fsreal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5f4d3d6a1379ad4a806e65b2fc7ac86bbaf72ae/gcc%2Fsreal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsreal.c?ref=a5f4d3d6a1379ad4a806e65b2fc7ac86bbaf72ae", "patch": "@@ -64,7 +64,7 @@ along with GCC; see the file COPYING3.  If not see\n void\n sreal::dump (FILE *file) const\n {\n-  fprintf (file, \"(%\" PRIi64 \" * 2^%d)\", m_sig, m_exp);\n+  fprintf (file, \"(%\" PRIi64 \" * 2^%d)\", (int64_t)m_sig, m_exp);\n }\n \n DEBUG_FUNCTION void\n@@ -114,7 +114,7 @@ sreal::to_int () const\n   if (m_exp >= SREAL_PART_BITS)\n     return sign * INTTYPE_MAXIMUM (int64_t);\n   if (m_exp > 0)\n-    return sign * (SREAL_ABS (m_sig) << m_exp);\n+    return sign * (SREAL_ABS ((int64_t)m_sig) << m_exp);\n   if (m_exp < 0)\n     return m_sig >> -m_exp;\n   return m_sig;\n@@ -167,7 +167,7 @@ sreal::operator+ (const sreal &other) const\n       bb = &tmp;\n     }\n \n-  r_sig = a_p->m_sig + bb->m_sig;\n+  r_sig = a_p->m_sig + (int64_t)bb->m_sig;\n   sreal r (r_sig, r_exp);\n   return r;\n }\n@@ -211,7 +211,7 @@ sreal::operator- (const sreal &other) const\n       bb = &tmp;\n     }\n \n-  r_sig = sign * ((int64_t) a_p->m_sig - bb->m_sig);\n+  r_sig = sign * ((int64_t) a_p->m_sig - (int64_t)bb->m_sig);\n   sreal r (r_sig, r_exp);\n   return r;\n }\n@@ -277,15 +277,15 @@ namespace selftest {\n static void\n sreal_verify_basics (void)\n {\n-  sreal minimum = INT_MIN;\n-  sreal maximum = INT_MAX;\n+  sreal minimum = INT_MIN/2;\n+  sreal maximum = INT_MAX/2;\n \n   sreal seven = 7;\n   sreal minus_two = -2;\n   sreal minus_nine = -9;\n \n-  ASSERT_EQ (INT_MIN, minimum.to_int ());\n-  ASSERT_EQ (INT_MAX, maximum.to_int ());\n+  ASSERT_EQ (INT_MIN/2, minimum.to_int ());\n+  ASSERT_EQ (INT_MAX/2, maximum.to_int ());\n \n   ASSERT_FALSE (minus_two < minus_two);\n   ASSERT_FALSE (seven < seven);"}, {"sha": "e2ad1a38e3e461324dba121235e22236e4e8d763", "filename": "gcc/sreal.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a5f4d3d6a1379ad4a806e65b2fc7ac86bbaf72ae/gcc%2Fsreal.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a5f4d3d6a1379ad4a806e65b2fc7ac86bbaf72ae/gcc%2Fsreal.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fsreal.h?ref=a5f4d3d6a1379ad4a806e65b2fc7ac86bbaf72ae", "patch": "@@ -20,8 +20,7 @@ along with GCC; see the file COPYING3.  If not see\n #ifndef GCC_SREAL_H\n #define GCC_SREAL_H\n \n-/* SREAL_PART_BITS has to be an even number.  */\n-#define SREAL_PART_BITS 32\n+#define SREAL_PART_BITS 31\n \n #define UINT64_BITS\t64\n \n@@ -137,7 +136,7 @@ class sreal\n   static sreal signedless_plus (const sreal &a, const sreal &b, bool negative);\n   static sreal signedless_minus (const sreal &a, const sreal &b, bool negative);\n \n-  int64_t m_sig;\t\t\t/* Significant.  */\n+  int32_t m_sig;\t\t\t/* Significant.  */\n   signed int m_exp;\t\t\t/* Exponent.  */\n };\n "}]}