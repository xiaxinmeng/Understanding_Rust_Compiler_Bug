{"sha": "f37cb70b6b5a0af23c753086b5136e7df73bceee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM3Y2I3MGI2YjVhMGFmMjNjNzUzMDg2YjUxMzZlN2RmNzNiY2VlZQ==", "commit": {"author": {"name": "Segher Boessenkool", "email": "segher@kernel.crashing.org", "date": "2016-09-19T15:54:12Z"}, "committer": {"name": "Segher Boessenkool", "email": "segher@gcc.gnu.org", "date": "2016-09-19T15:54:12Z"}, "message": "Fix lra_p text\n\n\n\t* target.def (lra_p): Wordsmithing.\n\t* doc/tm.texi: Regenerate.\n\nFrom-SVN: r240236", "tree": {"sha": "e2f6264f3ffd96b0ab8bd10cfd2b4c3b0e8c1bc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2f6264f3ffd96b0ab8bd10cfd2b4c3b0e8c1bc0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f37cb70b6b5a0af23c753086b5136e7df73bceee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f37cb70b6b5a0af23c753086b5136e7df73bceee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f37cb70b6b5a0af23c753086b5136e7df73bceee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f37cb70b6b5a0af23c753086b5136e7df73bceee/comments", "author": {"login": "segher", "id": 417629, "node_id": "MDQ6VXNlcjQxNzYyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/417629?v=4", "gravatar_id": "", "url": "https://api.github.com/users/segher", "html_url": "https://github.com/segher", "followers_url": "https://api.github.com/users/segher/followers", "following_url": "https://api.github.com/users/segher/following{/other_user}", "gists_url": "https://api.github.com/users/segher/gists{/gist_id}", "starred_url": "https://api.github.com/users/segher/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/segher/subscriptions", "organizations_url": "https://api.github.com/users/segher/orgs", "repos_url": "https://api.github.com/users/segher/repos", "events_url": "https://api.github.com/users/segher/events{/privacy}", "received_events_url": "https://api.github.com/users/segher/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a0a1009abf4802538f9f8687e99a27be0ab1dc17", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0a1009abf4802538f9f8687e99a27be0ab1dc17", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0a1009abf4802538f9f8687e99a27be0ab1dc17"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "905316d281450b7abdb8a0d671aed91ccd92b9cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37cb70b6b5a0af23c753086b5136e7df73bceee/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37cb70b6b5a0af23c753086b5136e7df73bceee/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f37cb70b6b5a0af23c753086b5136e7df73bceee", "patch": "@@ -1,3 +1,8 @@\n+2016-09-19  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\t* target.def (lra_p): Wordsmithing.\n+\t* doc/tm.texi: Regenerate.\n+\n 2016-09-19  Jakub Jelinek  <jakub@redhat.com>\n \t    Jan Hubicka  <jh@suse.cz>\n "}, {"sha": "92554d686208cdda1123fa4b0a5ff0729efb637b", "filename": "gcc/doc/tm.texi", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37cb70b6b5a0af23c753086b5136e7df73bceee/gcc%2Fdoc%2Ftm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37cb70b6b5a0af23c753086b5136e7df73bceee/gcc%2Fdoc%2Ftm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Ftm.texi?ref=f37cb70b6b5a0af23c753086b5136e7df73bceee", "patch": "@@ -2861,7 +2861,7 @@ A target hook which can change allocno class for given pseudo from\n @end deftypefn\n \n @deftypefn {Target Hook} bool TARGET_LRA_P (void)\n-A target hook which returns true if we use LRA instead of reload pass.    The default version of this target hook returns always true.  New ports  should use LRA, and existing ports are encouraged to convert.\n+A target hook which returns true if we use LRA instead of reload pass.    The default version of this target hook returns true.  New ports  should use LRA, and existing ports are encouraged to convert.\n @end deftypefn\n \n @deftypefn {Target Hook} int TARGET_REGISTER_PRIORITY (int)"}, {"sha": "0e10d6f03c8b488402b7c420f7c1c570152c632c", "filename": "gcc/target.def", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f37cb70b6b5a0af23c753086b5136e7df73bceee/gcc%2Ftarget.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f37cb70b6b5a0af23c753086b5136e7df73bceee/gcc%2Ftarget.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarget.def?ref=f37cb70b6b5a0af23c753086b5136e7df73bceee", "patch": "@@ -4929,7 +4929,7 @@ DEFHOOK\n (lra_p,\n  \"A target hook which returns true if we use LRA instead of reload pass.\\\n   \\\n-  The default version of this target hook returns always true.  New ports\\\n+  The default version of this target hook returns true.  New ports\\\n   should use LRA, and existing ports are encouraged to convert.\",\n  bool, (void),\n  default_lra_p)"}]}