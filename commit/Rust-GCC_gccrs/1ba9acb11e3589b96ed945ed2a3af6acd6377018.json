{"sha": "1ba9acb11e3589b96ed945ed2a3af6acd6377018", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJhOWFjYjExZTM1ODliOTZlZDk0NWVkMmEzYWY2YWNkNjM3NzAxOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-03-18T12:11:30Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2020-03-18T12:12:28Z"}, "message": "middle-end/94206 fix memset folding to avoid types with padding\n\nThis makes sure that the store a memset is folded to uses a type\ncovering all bits.\n\n2020-03-18   Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/94206\n\t* gimple-fold.c (gimple_fold_builtin_memset): Avoid using\n\tpartial int modes or not mode-precision integer types for\n\tthe store.\n\n\t* gcc.dg/torture/pr94206.c: New testcase.", "tree": {"sha": "f24e9a4f4d9f59dcc926bfbb5574e58158bba56e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f24e9a4f4d9f59dcc926bfbb5574e58158bba56e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1ba9acb11e3589b96ed945ed2a3af6acd6377018", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ba9acb11e3589b96ed945ed2a3af6acd6377018", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1ba9acb11e3589b96ed945ed2a3af6acd6377018", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1ba9acb11e3589b96ed945ed2a3af6acd6377018/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5029d45940e8c12b425b4d1a23081b4155caa61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5029d45940e8c12b425b4d1a23081b4155caa61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5029d45940e8c12b425b4d1a23081b4155caa61"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "114d2992bcd2ab9cda170b41569dc0ed160da4f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba9acb11e3589b96ed945ed2a3af6acd6377018/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba9acb11e3589b96ed945ed2a3af6acd6377018/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1ba9acb11e3589b96ed945ed2a3af6acd6377018", "patch": "@@ -1,3 +1,10 @@\n+2020-03-18   Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/94206\n+\t* gimple-fold.c (gimple_fold_builtin_memset): Avoid using\n+\tpartial int modes or not mode-precision integer types for\n+\tthe store.\n+\n 2020-03-18  Jakub Jelinek  <jakub@redhat.com>\n \n \t* asan.c (get_mem_refs_of_builtin_call): Fix up duplicated word issue"}, {"sha": "c5939f19f59a3b823622e2fd222134a243b3ffc4", "filename": "gcc/gimple-fold.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba9acb11e3589b96ed945ed2a3af6acd6377018/gcc%2Fgimple-fold.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba9acb11e3589b96ed945ed2a3af6acd6377018/gcc%2Fgimple-fold.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-fold.c?ref=1ba9acb11e3589b96ed945ed2a3af6acd6377018", "patch": "@@ -1235,12 +1235,18 @@ gimple_fold_builtin_memset (gimple_stmt_iterator *gsi, tree c, tree len)\n \n   length = tree_to_uhwi (len);\n   if (GET_MODE_SIZE (SCALAR_INT_TYPE_MODE (etype)) != length\n+      || (GET_MODE_PRECISION (SCALAR_INT_TYPE_MODE (etype))\n+\t  != GET_MODE_BITSIZE (SCALAR_INT_TYPE_MODE (etype)))\n       || get_pointer_alignment (dest) / BITS_PER_UNIT < length)\n     return NULL_TREE;\n \n   if (length > HOST_BITS_PER_WIDE_INT / BITS_PER_UNIT)\n     return NULL_TREE;\n \n+  if (!type_has_mode_precision_p (etype))\n+    etype = lang_hooks.types.type_for_mode (SCALAR_INT_TYPE_MODE (etype),\n+\t\t\t\t\t    TYPE_UNSIGNED (etype));\n+\n   if (integer_zerop (c))\n     cval = 0;\n   else"}, {"sha": "4aa798f8a48cfb95b0a654344be0482adc687804", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba9acb11e3589b96ed945ed2a3af6acd6377018/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba9acb11e3589b96ed945ed2a3af6acd6377018/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1ba9acb11e3589b96ed945ed2a3af6acd6377018", "patch": "@@ -1,3 +1,8 @@\n+2020-03-18   Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/94206\n+\t* gcc.dg/torture/pr94206.c: New testcase.\n+\n 2020-03-18  Duan bo  <duanbo3@huawei.com>\n \n \tPR target/94201"}, {"sha": "9e54bba4ed400430768fe9231fa7ec3abb992791", "filename": "gcc/testsuite/gcc.dg/torture/pr94206.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1ba9acb11e3589b96ed945ed2a3af6acd6377018/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr94206.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1ba9acb11e3589b96ed945ed2a3af6acd6377018/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr94206.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr94206.c?ref=1ba9acb11e3589b96ed945ed2a3af6acd6377018", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do run { target lp64 } } */\n+\n+struct {\n+    unsigned long x:33;\n+} s;\n+typedef __typeof__(s.x + 0) uint33;\n+\n+int main()\n+{\n+  uint33 x;\n+  __builtin_memset(&x, -1, sizeof x);\n+  unsigned long u;\n+  __builtin_memcpy(&u, &x, sizeof u);\n+  if (u != -1ul)\n+    __builtin_abort ();\n+  return 0;\n+}"}]}