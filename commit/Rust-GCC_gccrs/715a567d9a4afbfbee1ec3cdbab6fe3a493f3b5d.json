{"sha": "715a567d9a4afbfbee1ec3cdbab6fe3a493f3b5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzE1YTU2N2Q5YTRhZmJmYmVlMWVjM2NkYmFiNmZlM2E0OTNmM2I1ZA==", "commit": {"author": {"name": "John David Anglin", "email": "dave.anglin@nrc-cnrc.gc.ca", "date": "2010-10-02T17:38:35Z"}, "committer": {"name": "John David Anglin", "email": "danglin@gcc.gnu.org", "date": "2010-10-02T17:38:35Z"}, "message": "re PR target/45820 (FAIL: gcc.c-torture/compile/pr45728.c at -O1 and above)\n\n\tPR target/45820\n\t* config/pa/pa.c (pa_secondary_reload): Handle symbolic operands\n\tearlier.\n\nFrom-SVN: r164905", "tree": {"sha": "5ca193e456097d9fb5dec3890db036884bc3e983", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5ca193e456097d9fb5dec3890db036884bc3e983"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/715a567d9a4afbfbee1ec3cdbab6fe3a493f3b5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/715a567d9a4afbfbee1ec3cdbab6fe3a493f3b5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/715a567d9a4afbfbee1ec3cdbab6fe3a493f3b5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/715a567d9a4afbfbee1ec3cdbab6fe3a493f3b5d/comments", "author": null, "committer": null, "parents": [{"sha": "ffedf5114c8bdd5b024fb87e23b935e7d90c6ff3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffedf5114c8bdd5b024fb87e23b935e7d90c6ff3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffedf5114c8bdd5b024fb87e23b935e7d90c6ff3"}], "stats": {"total": 73, "additions": 27, "deletions": 46}, "files": [{"sha": "121a273c48e1d8478586dcbedd8f0c64c20d00e2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/715a567d9a4afbfbee1ec3cdbab6fe3a493f3b5d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/715a567d9a4afbfbee1ec3cdbab6fe3a493f3b5d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=715a567d9a4afbfbee1ec3cdbab6fe3a493f3b5d", "patch": "@@ -1,3 +1,9 @@\n+2010-10-02  John David Anglin  <dave.anglin@nrc-cnrc.gc.ca>\n+\n+\tPR target/45820\n+\t* config/pa/pa.c (pa_secondary_reload): Handle symbolic operands\n+\tearlier.\n+\n 2010-10-02  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* doc/install.texi (Configuration): Document build_configargs,"}, {"sha": "e114dd1fc149f276b0f29f05a5cd6c350bf1e74a", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 21, "deletions": 46, "changes": 67, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/715a567d9a4afbfbee1ec3cdbab6fe3a493f3b5d/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/715a567d9a4afbfbee1ec3cdbab6fe3a493f3b5d/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=715a567d9a4afbfbee1ec3cdbab6fe3a493f3b5d", "patch": "@@ -5762,7 +5762,7 @@ static reg_class_t\n pa_secondary_reload (bool in_p, rtx x, reg_class_t rclass_i,\n \t\t     enum machine_mode mode, secondary_reload_info *sri)\n {\n-  int is_symbolic, regno;\n+  int regno;\n   enum reg_class rclass = (enum reg_class) rclass_i;\n \n   /* Handle the easy stuff first.  */\n@@ -5796,6 +5796,23 @@ pa_secondary_reload (bool in_p, rtx x, reg_class_t rclass_i,\n       return NO_REGS;\n     }\n \n+  /* Secondary reloads of symbolic operands require %r1 as a scratch\n+     register when we're generating PIC code and when the operand isn't\n+     readonly.  */\n+  if (symbolic_expression_p (x))\n+    {\n+      if (GET_CODE (x) == HIGH)\n+\tx = XEXP (x, 0);\n+\n+      if (flag_pic || !read_only_operand (x, VOIDmode))\n+\t{\n+\t  gcc_assert (mode == SImode || mode == DImode);\n+\t  sri->icode = (mode == SImode ? CODE_FOR_reload_insi_r1\n+\t\t\t: CODE_FOR_reload_indi_r1);\n+\t  return NO_REGS;\n+\t}\n+    }\n+\n   /* Profiling showed the PA port spends about 1.3% of its compilation\n      time in true_regnum from calls inside pa_secondary_reload_class.  */\n   if (regno >= FIRST_PSEUDO_REGISTER || GET_CODE (x) == SUBREG)\n@@ -5858,51 +5875,9 @@ pa_secondary_reload (bool in_p, rtx x, reg_class_t rclass_i,\n   if (regno >= 0 && regno < FIRST_PSEUDO_REGISTER\n       && (REGNO_REG_CLASS (regno) == SHIFT_REGS\n       && FP_REG_CLASS_P (rclass)))\n-    {\n-      sri->icode = (in_p\n-\t\t    ? direct_optab_handler (reload_in_optab, mode)\n-\t\t    : direct_optab_handler (reload_out_optab, mode));\n-      return NO_REGS;\n-    }\n-\n-  /* Secondary reloads of symbolic operands require %r1 as a scratch\n-     register when we're generating PIC code and when the operand isn't\n-     readonly.  */\n-  if (GET_CODE (x) == HIGH)\n-    x = XEXP (x, 0);\n-\n-  /* Profiling has showed GCC spends about 2.6% of its compilation\n-     time in symbolic_operand from calls inside pa_secondary_reload_class.\n-     So, we use an inline copy to avoid useless work.  */\n-  switch (GET_CODE (x))\n-    {\n-      rtx op;\n-\n-      case SYMBOL_REF:\n-        is_symbolic = !SYMBOL_REF_TLS_MODEL (x);\n-        break;\n-      case LABEL_REF:\n-        is_symbolic = 1;\n-        break;\n-      case CONST:\n-\top = XEXP (x, 0);\n-\tis_symbolic = (GET_CODE (op) == PLUS\n-\t\t       && ((GET_CODE (XEXP (op, 0)) == SYMBOL_REF\n-\t\t\t    && !SYMBOL_REF_TLS_MODEL (XEXP (op, 0)))\n-\t\t\t   || GET_CODE (XEXP (op, 0)) == LABEL_REF)\n-\t\t       && GET_CODE (XEXP (op, 1)) == CONST_INT);\n-        break;\n-      default:\n-        is_symbolic = 0;\n-        break;\n-    }\n-\n-  if (is_symbolic && (flag_pic || !read_only_operand (x, VOIDmode)))\n-    {\n-      gcc_assert (mode == SImode || mode == DImode);\n-      sri->icode = (mode == SImode ? CODE_FOR_reload_insi_r1\n-\t\t    : CODE_FOR_reload_indi_r1);\n-    }\n+    sri->icode = (in_p\n+\t\t  ? direct_optab_handler (reload_in_optab, mode)\n+\t\t  : direct_optab_handler (reload_out_optab, mode));\n \n   return NO_REGS;\n }"}]}