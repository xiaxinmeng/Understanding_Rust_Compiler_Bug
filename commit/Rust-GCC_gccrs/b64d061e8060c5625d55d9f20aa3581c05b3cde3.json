{"sha": "b64d061e8060c5625d55d9f20aa3581c05b3cde3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjY0ZDA2MWU4MDYwYzU2MjVkNTVkOWYyMGFhMzU4MWMwNWIzY2RlMw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-08-22T05:21:10Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-08-22T05:21:10Z"}, "message": "ifcvt.c (find_if_block): Allow join_bb as EXIT.\n\n        * ifcvt.c (find_if_block): Allow join_bb as EXIT.\n        (merge_if_block): Handle fallout from same.\n\nFrom-SVN: r45093", "tree": {"sha": "52b47aa01a9ec67a95b7c255f3990bda897b57d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/52b47aa01a9ec67a95b7c255f3990bda897b57d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b64d061e8060c5625d55d9f20aa3581c05b3cde3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b64d061e8060c5625d55d9f20aa3581c05b3cde3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b64d061e8060c5625d55d9f20aa3581c05b3cde3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b64d061e8060c5625d55d9f20aa3581c05b3cde3/comments", "author": null, "committer": null, "parents": [{"sha": "91db4a92c6c22c25265d07fd97be83154a3c47da", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91db4a92c6c22c25265d07fd97be83154a3c47da", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91db4a92c6c22c25265d07fd97be83154a3c47da"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "55dfa7072b921e48951ccf4ec5bf60a5d3259122", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64d061e8060c5625d55d9f20aa3581c05b3cde3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64d061e8060c5625d55d9f20aa3581c05b3cde3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b64d061e8060c5625d55d9f20aa3581c05b3cde3", "patch": "@@ -1,3 +1,8 @@\n+2001-08-21  Richard Henderson  <rth@redhat.com>\n+\n+\t* ifcvt.c (find_if_block): Allow join_bb as EXIT.\n+\t(merge_if_block): Handle fallout from same.\n+\n 2001-08-21  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* builtins.c (type_to_class): Fix typo in last change."}, {"sha": "dc78672a54f74dbaf0a3af4f7d546a29ecd6ccfa", "filename": "gcc/ifcvt.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b64d061e8060c5625d55d9f20aa3581c05b3cde3/gcc%2Fifcvt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b64d061e8060c5625d55d9f20aa3581c05b3cde3/gcc%2Fifcvt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fifcvt.c?ref=b64d061e8060c5625d55d9f20aa3581c05b3cde3", "patch": "@@ -1881,7 +1881,9 @@ merge_if_block (test_bb, then_bb, else_bb, join_bb)\n      is more than one remaining edge, it must come from elsewhere.  There\n      may be zero incoming edges if the THEN block didn't actually join \n      back up (as with a call to abort).  */\n-  else if (join_bb->pred == NULL || join_bb->pred->pred_next == NULL)\n+  else if ((join_bb->pred == NULL\n+\t    || join_bb->pred->pred_next == NULL)\n+\t   && join_bb != EXIT_BLOCK_PTR)\n     {\n       /* We can merge the JOIN.  */\n       if (life_data_ok)\n@@ -1901,7 +1903,8 @@ merge_if_block (test_bb, then_bb, else_bb, join_bb)\n \tabort ();\n \n       /* Remove the jump and cruft from the end of the COMBO block.  */\n-      tidy_fallthru_edge (combo_bb->succ, combo_bb, join_bb);\n+      if (join_bb != EXIT_BLOCK_PTR)\n+        tidy_fallthru_edge (combo_bb->succ, combo_bb, join_bb);\n     }\n \n   /* Make sure we update life info properly.  */\n@@ -2067,7 +2070,7 @@ find_if_block (test_bb, then_edge, else_edge)\n   next_index = then_bb->index;\n   if (else_bb && ++next_index != else_bb->index)\n     return FALSE;\n-  if (++next_index != join_bb->index)\n+  if (++next_index != join_bb->index && join_bb->index != EXIT_BLOCK)\n     {\n       if (else_bb)\n \tjoin_bb = NULL;"}]}