{"sha": "e7c8f75569e792f81a4f4ceee4e1b20f2544e7a4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTdjOGY3NTU2OWU3OTJmODFhNGY0Y2VlZTRlMWIyMGYyNTQ0ZTdhNA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-08-31T02:56:55Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2019-08-31T02:56:55Z"}, "message": "compiler: don't report runtime escapes if we've seen errors\n    \n    If we get errors during compilation, we skip the escape analysis pass.\n    If we are compiling the runtime package, we report an error if a bound\n    method expression escapes.  The effect is that if we get an error\n    while compiling the runtime package, we would report confusing and\n    meaningless errors about bound method expressions escaping.\n    \n    This CL stops doing that.\n    \n    Reviewed-on: https://go-review.googlesource.com/c/gofrontend/+/192720\n\nFrom-SVN: r275238", "tree": {"sha": "8df5d7cc13e2da84e81cf635d1c6596651a9dae8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8df5d7cc13e2da84e81cf635d1c6596651a9dae8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e7c8f75569e792f81a4f4ceee4e1b20f2544e7a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7c8f75569e792f81a4f4ceee4e1b20f2544e7a4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7c8f75569e792f81a4f4ceee4e1b20f2544e7a4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7c8f75569e792f81a4f4ceee4e1b20f2544e7a4/comments", "author": null, "committer": null, "parents": [{"sha": "d24c41ef1a44b72aaf03edc6eb40cae711b27f95", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d24c41ef1a44b72aaf03edc6eb40cae711b27f95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d24c41ef1a44b72aaf03edc6eb40cae711b27f95"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "888e96d1911aec68d9e20070a3958d2f930d665d", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7c8f75569e792f81a4f4ceee4e1b20f2544e7a4/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7c8f75569e792f81a4f4ceee4e1b20f2544e7a4/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=e7c8f75569e792f81a4f4ceee4e1b20f2544e7a4", "patch": "@@ -1,4 +1,4 @@\n-2444eb1e8c697531f8beb403679e4ab00b16dbf5\n+80403eb9e95c9642ebabb4d7c43deedaa763211f\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "4db4e4a59bfd73bb591970915fc12cb49e0c9651", "filename": "gcc/go/gofrontend/expressions.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e7c8f75569e792f81a4f4ceee4e1b20f2544e7a4/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e7c8f75569e792f81a4f4ceee4e1b20f2544e7a4/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2Fexpressions.cc?ref=e7c8f75569e792f81a4f4ceee4e1b20f2544e7a4", "patch": "@@ -7948,7 +7948,9 @@ Bound_method_expression::do_flatten(Gogo* gogo, Named_object*,\n   Node* n = Node::make_node(this);\n   if ((n->encoding() & ESCAPE_MASK) == Node::ESCAPE_NONE)\n     ret->heap_expression()->set_allocate_on_stack();\n-  else if (gogo->compiling_runtime() && gogo->package_name() == \"runtime\")\n+  else if (gogo->compiling_runtime()\n+\t   && gogo->package_name() == \"runtime\"\n+\t   && !saw_errors())\n     go_error_at(loc, \"%s escapes to heap, not allowed in runtime\",\n                 n->ast_format(gogo).c_str());\n "}]}