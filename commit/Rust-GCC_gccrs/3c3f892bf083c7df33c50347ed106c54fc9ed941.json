{"sha": "3c3f892bf083c7df33c50347ed106c54fc9ed941", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2MzZjg5MmJmMDgzYzdkZjMzYzUwMzQ3ZWQxMDZjNTRmYzllZDk0MQ==", "commit": {"author": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2014-02-28T21:30:04Z"}, "committer": {"name": "Janus Weil", "email": "janus@gcc.gnu.org", "date": "2014-02-28T21:30:04Z"}, "message": "re PR fortran/60359 ([OOP] symbol `__io_MOD___copy_character_1' is already defined)\n\n2014-02-28  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/60359\n\t* class.c (find_intrinsic_vtab): Prevent duplicate creation of copy\n\tprocedure for characters.\n\n\n2014-02-28  Janus Weil  <janus@gcc.gnu.org>\n\n\tPR fortran/60359\n\t* gfortran.dg/unlimited_polymorphic_16.f90: New.\n\nFrom-SVN: r208227", "tree": {"sha": "e96ed2ec0e0b7b9c6b9c6f687dd08b8c59c6a7cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e96ed2ec0e0b7b9c6b9c6f687dd08b8c59c6a7cd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3c3f892bf083c7df33c50347ed106c54fc9ed941", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c3f892bf083c7df33c50347ed106c54fc9ed941", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c3f892bf083c7df33c50347ed106c54fc9ed941", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c3f892bf083c7df33c50347ed106c54fc9ed941/comments", "author": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "janusw", "id": 484108, "node_id": "MDQ6VXNlcjQ4NDEwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/484108?v=4", "gravatar_id": "", "url": "https://api.github.com/users/janusw", "html_url": "https://github.com/janusw", "followers_url": "https://api.github.com/users/janusw/followers", "following_url": "https://api.github.com/users/janusw/following{/other_user}", "gists_url": "https://api.github.com/users/janusw/gists{/gist_id}", "starred_url": "https://api.github.com/users/janusw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/janusw/subscriptions", "organizations_url": "https://api.github.com/users/janusw/orgs", "repos_url": "https://api.github.com/users/janusw/repos", "events_url": "https://api.github.com/users/janusw/events{/privacy}", "received_events_url": "https://api.github.com/users/janusw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1ee5eaf07345816fd6b1adf90e53ead9800076b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1ee5eaf07345816fd6b1adf90e53ead9800076b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1ee5eaf07345816fd6b1adf90e53ead9800076b"}], "stats": {"total": 67, "additions": 51, "deletions": 16}, "files": [{"sha": "415a4cbaedf5d25b454c45a5b29c2fa322dccb3d", "filename": "gcc/fortran/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c3f892bf083c7df33c50347ed106c54fc9ed941/gcc%2Ffortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c3f892bf083c7df33c50347ed106c54fc9ed941/gcc%2Ffortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2FChangeLog?ref=3c3f892bf083c7df33c50347ed106c54fc9ed941", "patch": "@@ -1,3 +1,9 @@\n+2014-02-28  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/60359\n+\t* class.c (find_intrinsic_vtab): Prevent duplicate creation of copy\n+\tprocedure for characters.\n+\n 2014-02-21  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/60302"}, {"sha": "d01d7d8c97a975017c1213e1fbc6f15cf1bb52f6", "filename": "gcc/fortran/class.c", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c3f892bf083c7df33c50347ed106c54fc9ed941/gcc%2Ffortran%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c3f892bf083c7df33c50347ed106c54fc9ed941/gcc%2Ffortran%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fclass.c?ref=3c3f892bf083c7df33c50347ed106c54fc9ed941", "patch": "@@ -2532,29 +2532,29 @@ find_intrinsic_vtab (gfc_typespec *ts)\n \t      c->tb = XCNEW (gfc_typebound_proc);\n \t      c->tb->ppc = 1;\n \n-\t      /* Check to see if copy function already exists.  Note\n-\t\t that this is only used for characters of different\n-\t\t lengths.  */\n-\t      contained = ns->contained;\n-\t      for (; contained; contained = contained->sibling)\n-\t\tif (contained->proc_name\n-\t\t    && strcmp (name, contained->proc_name->name) == 0)\n-\t\t  {\n-\t\t    copy = contained->proc_name;\n-\t\t    goto got_char_copy;\n-\t\t  }\n+\t      if (ts->type != BT_CHARACTER)\n+\t\tsprintf (name, \"__copy_%s\", tname);\n+\t      else\n+\t\t{\n+\t\t  /* __copy is always the same for characters.\n+\t\t     Check to see if copy function already exists.  */\n+\t\t  sprintf (name, \"__copy_character_%d\", ts->kind);\n+\t\t  contained = ns->contained;\n+\t\t  for (; contained; contained = contained->sibling)\n+\t\t    if (contained->proc_name\n+\t\t\t&& strcmp (name, contained->proc_name->name) == 0)\n+\t\t      {\n+\t\t\tcopy = contained->proc_name;\n+\t\t\tgoto got_char_copy;\n+\t\t      }\n+\t\t}\n \n \t      /* Set up namespace.  */\n \t      sub_ns = gfc_get_namespace (ns, 0);\n \t      sub_ns->sibling = ns->contained;\n \t      ns->contained = sub_ns;\n \t      sub_ns->resolved = 1;\n \t      /* Set up procedure symbol.  */\n-\t      if (ts->type != BT_CHARACTER)\n-\t\tsprintf (name, \"__copy_%s\", tname);\n-\t      else\n-\t\t/* __copy is always the same for characters.  */\n-\t\tsprintf (name, \"__copy_character_%d\", ts->kind);\n \t      gfc_get_symbol (name, sub_ns, &copy);\n \t      sub_ns->proc_name = copy;\n \t      copy->attr.flavor = FL_PROCEDURE;"}, {"sha": "5a831bfdd5cc5cfc73c7b82291805bd48bab0c4a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c3f892bf083c7df33c50347ed106c54fc9ed941/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c3f892bf083c7df33c50347ed106c54fc9ed941/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3c3f892bf083c7df33c50347ed106c54fc9ed941", "patch": "@@ -1,3 +1,8 @@\n+2014-02-28  Janus Weil  <janus@gcc.gnu.org>\n+\n+\tPR fortran/60359\n+\t* gfortran.dg/unlimited_polymorphic_16.f90: New.\n+\n 2014-02-28  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/58610"}, {"sha": "99e186d5c14937cf6c219033aadda2f98d295e37", "filename": "gcc/testsuite/gfortran.dg/unlimited_polymorphic_16.f90", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3c3f892bf083c7df33c50347ed106c54fc9ed941/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_16.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3c3f892bf083c7df33c50347ed106c54fc9ed941/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_16.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Funlimited_polymorphic_16.f90?ref=3c3f892bf083c7df33c50347ed106c54fc9ed941", "patch": "@@ -0,0 +1,24 @@\n+! { dg-do compile }\n+!\n+! PR 60359: [OOP] symbol `__io_MOD___copy_character_1' is already defined\n+!\n+! Contributed by Antony Lewis <antony@cosmologist.info>\n+\n+module IO\n+implicit none\n+\n+contains\n+\n+  subroutine FWRite(S)\n+    class(*) :: S\n+  end subroutine\n+\n+  subroutine IO_OutputMargeStats()\n+    character(len=128) tag\n+    call FWrite(tag)\n+    call FWrite(' '//tag)\n+  end subroutine\n+\n+end module\n+\n+! { dg-final { cleanup-modules \"IO\" } }"}]}