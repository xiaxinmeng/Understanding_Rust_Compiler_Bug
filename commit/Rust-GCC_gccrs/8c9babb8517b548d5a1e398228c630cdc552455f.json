{"sha": "8c9babb8517b548d5a1e398228c630cdc552455f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGM5YmFiYjg1MTdiNTQ4ZDVhMWUzOTgyMjhjNjMwY2RjNTUyNDU1Zg==", "commit": {"author": {"name": "Chung-Ju Wu", "email": "jasonwucj@gmail.com", "date": "2018-05-19T14:51:09Z"}, "committer": {"name": "Chung-Ju Wu", "email": "jasonwucj@gcc.gnu.org", "date": "2018-05-19T14:51:09Z"}, "message": "[NDS32] Add abssi2 pattern.\n\ngcc/\n\t* common/config/nds32/nds32-common.c (TARGET_DEFAULT_TARGET_FLAGS): Add\n\tMASK_HW_ABS.\n\t* config/nds32/nds32.md (abssi2): New pattern.\n\nFrom-SVN: r260398", "tree": {"sha": "2e530a26bfb53e64a75eae09b1a7addd4ac7d442", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e530a26bfb53e64a75eae09b1a7addd4ac7d442"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8c9babb8517b548d5a1e398228c630cdc552455f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c9babb8517b548d5a1e398228c630cdc552455f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8c9babb8517b548d5a1e398228c630cdc552455f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8c9babb8517b548d5a1e398228c630cdc552455f/comments", "author": {"login": "jasonwucj", "id": 5520732, "node_id": "MDQ6VXNlcjU1MjA3MzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5520732?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jasonwucj", "html_url": "https://github.com/jasonwucj", "followers_url": "https://api.github.com/users/jasonwucj/followers", "following_url": "https://api.github.com/users/jasonwucj/following{/other_user}", "gists_url": "https://api.github.com/users/jasonwucj/gists{/gist_id}", "starred_url": "https://api.github.com/users/jasonwucj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jasonwucj/subscriptions", "organizations_url": "https://api.github.com/users/jasonwucj/orgs", "repos_url": "https://api.github.com/users/jasonwucj/repos", "events_url": "https://api.github.com/users/jasonwucj/events{/privacy}", "received_events_url": "https://api.github.com/users/jasonwucj/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cca59a3cfcd29b6485d4f0da92f4baa04714b5c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cca59a3cfcd29b6485d4f0da92f4baa04714b5c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cca59a3cfcd29b6485d4f0da92f4baa04714b5c5"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "fb259255a16d82d6392c98e91400b1ec2d6b0bea", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9babb8517b548d5a1e398228c630cdc552455f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9babb8517b548d5a1e398228c630cdc552455f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8c9babb8517b548d5a1e398228c630cdc552455f", "patch": "@@ -1,3 +1,9 @@\n+2018-05-19  Chung-Ju Wu  <jasonwucj@gmail.com>\n+\n+\t* common/config/nds32/nds32-common.c (TARGET_DEFAULT_TARGET_FLAGS): Add\n+\tMASK_HW_ABS.\n+\t* config/nds32/nds32.md (abssi2): New pattern.\n+\n 2018-05-19  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (rex64namesuffix): New mode attribute."}, {"sha": "04dc8646ffbe0831fa74425a4a4a1573e3f7b1cb", "filename": "gcc/common/config/nds32/nds32-common.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9babb8517b548d5a1e398228c630cdc552455f/gcc%2Fcommon%2Fconfig%2Fnds32%2Fnds32-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9babb8517b548d5a1e398228c630cdc552455f/gcc%2Fcommon%2Fconfig%2Fnds32%2Fnds32-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Fnds32%2Fnds32-common.c?ref=8c9babb8517b548d5a1e398228c630cdc552455f", "patch": "@@ -103,6 +103,7 @@ static const struct default_options nds32_option_optimization_table[] =\n      TARGET_EXT_PERF   : Generate performance extention instrcution.\n      TARGET_EXT_PERF2  : Generate performance extention version 2 instrcution.\n      TARGET_EXT_STRING : Generate string extention instrcution.\n+     TARGET_HW_ABS     : Generate hardware abs instruction.\n      TARGET_CMOV       : Generate conditional move instruction.  */\n #undef TARGET_DEFAULT_TARGET_FLAGS\n #define TARGET_DEFAULT_TARGET_FLAGS\t\t\\\n@@ -113,6 +114,7 @@ static const struct default_options nds32_option_optimization_table[] =\n    | MASK_EXT_PERF\t\t\t\t\\\n    | MASK_EXT_PERF2\t\t\t\t\\\n    | MASK_EXT_STRING\t\t\t\t\\\n+   | MASK_HW_ABS\t\t\t\t\\\n    | MASK_CMOV)\n \n #undef TARGET_HANDLE_OPTION"}, {"sha": "f63ca686c2403cb71bb64c6ed5274e56c4948ac2", "filename": "gcc/config/nds32/nds32.md", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8c9babb8517b548d5a1e398228c630cdc552455f/gcc%2Fconfig%2Fnds32%2Fnds32.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8c9babb8517b548d5a1e398228c630cdc552455f/gcc%2Fconfig%2Fnds32%2Fnds32.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnds32%2Fnds32.md?ref=8c9babb8517b548d5a1e398228c630cdc552455f", "patch": "@@ -2086,6 +2086,20 @@\n \n ;; Performance Extension\n \n+; If -fwrapv option is issued, GCC expects there will be\n+; signed overflow situation.  So the ABS(INT_MIN) is still INT_MIN\n+; (e.g. ABS(0x80000000)=0x80000000).\n+; However, the hardware ABS instruction of nds32 target\n+; always performs saturation: abs 0x80000000 -> 0x7fffffff.\n+; So that we can only enable abssi2 pattern if flag_wrapv is NOT presented.\n+(define_insn \"abssi2\"\n+  [(set (match_operand:SI 0 \"register_operand\"         \"=r\")\n+\t(abs:SI (match_operand:SI 1 \"register_operand\" \" r\")))]\n+  \"TARGET_EXT_PERF && TARGET_HW_ABS && !flag_wrapv\"\n+  \"abs\\t%0, %1\"\n+  [(set_attr \"type\" \"alu\")\n+   (set_attr \"length\" \"4\")])\n+\n (define_insn \"clzsi2\"\n   [(set (match_operand:SI 0 \"register_operand\"         \"=r\")\n \t(clz:SI (match_operand:SI 1 \"register_operand\" \" r\")))]"}]}