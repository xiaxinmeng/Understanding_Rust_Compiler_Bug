{"sha": "355e94aaeb469d9012bd71ef7cbd9654a9e58169", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzU1ZTk0YWFlYjQ2OWQ5MDEyYmQ3MWVmN2NiZDk2NTRhOWU1ODE2OQ==", "commit": {"author": {"name": "Martin v. L\u00f6wis", "email": "loewis@informatik.hu-berlin.de", "date": "1999-12-15T07:37:36Z"}, "committer": {"name": "Martin v. L\u00f6wis", "email": "loewis@gcc.gnu.org", "date": "1999-12-15T07:37:36Z"}, "message": "bastring.h (basic_string::basic_string): Rename parameters to avoid shadow warnings.\n\n\t* std/bastring.h (basic_string::basic_string): Rename parameters\n\tto avoid shadow warnings.\n\t* std/bastring.cc (alloc): Likewise.\n\nFrom-SVN: r30938", "tree": {"sha": "deb0a026b4ee27784c6c0790db5f9f42d08b2362", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/deb0a026b4ee27784c6c0790db5f9f42d08b2362"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/355e94aaeb469d9012bd71ef7cbd9654a9e58169", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/355e94aaeb469d9012bd71ef7cbd9654a9e58169", "html_url": "https://github.com/Rust-GCC/gccrs/commit/355e94aaeb469d9012bd71ef7cbd9654a9e58169", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/355e94aaeb469d9012bd71ef7cbd9654a9e58169/comments", "author": null, "committer": null, "parents": [{"sha": "fd2a10921e97cbdb7e39311eabe38f5213e46b85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fd2a10921e97cbdb7e39311eabe38f5213e46b85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fd2a10921e97cbdb7e39311eabe38f5213e46b85"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "d51fb29428fc61a6134079bfe148b8450be49ba8", "filename": "libstdc++/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/355e94aaeb469d9012bd71ef7cbd9654a9e58169/libstdc%2B%2B%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/355e94aaeb469d9012bd71ef7cbd9654a9e58169/libstdc%2B%2B%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2FChangeLog?ref=355e94aaeb469d9012bd71ef7cbd9654a9e58169", "patch": "@@ -1,3 +1,9 @@\n+1999-12-14  Martin v. L\ufffdwis  <loewis@informatik.hu-berlin.de>\n+\n+\t* std/bastring.h (basic_string::basic_string): Rename parameters\n+\tto avoid shadow warnings.\n+\t* std/bastring.cc (alloc): Likewise.\n+\n 1999-12-13  Jakub Jelinek  <jakub@redhat.com>\n \n \t* std/bastring.h (class basic_string::Rep): Use proper defines"}, {"sha": "f86f6d30157c602fb5c30ced6fa93cba1acafc09", "filename": "libstdc++/std/bastring.cc", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/355e94aaeb469d9012bd71ef7cbd9654a9e58169/libstdc%2B%2B%2Fstd%2Fbastring.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/355e94aaeb469d9012bd71ef7cbd9654a9e58169/libstdc%2B%2B%2Fstd%2Fbastring.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fbastring.cc?ref=355e94aaeb469d9012bd71ef7cbd9654a9e58169", "patch": "@@ -1,5 +1,5 @@\n // Member templates for the -*- C++ -*- string classes.\n-// Copyright (C) 1994 Free Software Foundation\n+// Copyright (C) 1994, 1999 Free Software Foundation\n \n // This file is part of the GNU ANSI C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -94,14 +94,14 @@ check_realloc (basic_string::size_type s) const\n \n template <class charT, class traits, class Allocator>\n void basic_string <charT, traits, Allocator>::\n-alloc (basic_string::size_type size, bool save)\n+alloc (basic_string::size_type __size, bool __save)\n {\n-  if (! check_realloc (size))\n+  if (! check_realloc (__size))\n     return;\n \n-  Rep *p = Rep::create (size);\n+  Rep *p = Rep::create (__size);\n \n-  if (save)\n+  if (__save)\n     {\n       p->copy (0, data (), length ());\n       p->len = length ();"}, {"sha": "bfa80bfc2e170f01c6db3c1a7ab931b11f9b617d", "filename": "libstdc++/std/bastring.h", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/355e94aaeb469d9012bd71ef7cbd9654a9e58169/libstdc%2B%2B%2Fstd%2Fbastring.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/355e94aaeb469d9012bd71ef7cbd9654a9e58169/libstdc%2B%2B%2Fstd%2Fbastring.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B%2Fstd%2Fbastring.h?ref=355e94aaeb469d9012bd71ef7cbd9654a9e58169", "patch": "@@ -1,5 +1,5 @@\n // Main templates for the -*- C++ -*- string classes.\n-// Copyright (C) 1994, 1995 Free Software Foundation\n+// Copyright (C) 1994, 1995, 1999 Free Software Foundation\n \n // This file is part of the GNU ANSI C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -144,8 +144,8 @@ class basic_string\n   typedef const charT* const_pointer;\n   typedef pointer iterator;\n   typedef const_pointer const_iterator;\n-  typedef ::reverse_iterator<iterator> reverse_iterator;\n-  typedef ::reverse_iterator<const_iterator> const_reverse_iterator;\n+  typedef std::reverse_iterator<iterator> reverse_iterator;\n+  typedef std::reverse_iterator<const_iterator> const_reverse_iterator;\n   static const size_type npos = static_cast<size_type>(-1);\n \n private:\n@@ -185,11 +185,11 @@ class basic_string\n     : dat (nilRep.grab ()) { assign (n, c); }\n #ifdef __STL_MEMBER_TEMPLATES\n   template<class InputIterator>\n-    basic_string(InputIterator begin, InputIterator end)\n+    basic_string(InputIterator __begin, InputIterator __end)\n #else\n-  basic_string(const_iterator begin, const_iterator end)\n+  basic_string(const_iterator __begin, const_iterator __end)\n #endif\n-    : dat (nilRep.grab ()) { assign (begin, end); }\n+    : dat (nilRep.grab ()) { assign (__begin, __end); }\n \n   ~basic_string ()\n     { rep ()->release (); }"}]}