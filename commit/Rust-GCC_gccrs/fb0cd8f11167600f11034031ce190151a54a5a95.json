{"sha": "fb0cd8f11167600f11034031ce190151a54a5a95", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmIwY2Q4ZjExMTY3NjAwZjExMDM0MDMxY2UxOTAxNTFhNTRhNWE5NQ==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2021-08-11T21:33:40Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2021-08-12T12:10:12Z"}, "message": "gfortran.dg/PR82376.f90: Avoid matching a file-path\n\nI had a file-path to sources with the substring \"new\" in it,\nand (only) this test regressed compared to results from\nanother build without \"new\" in the name.\n\nThe test does\n ! { dg-final { scan-tree-dump-times \"new\" 4 \"original\" } }\ni.e. the contents of the tree-dump-file .original needs to match\nthe undelimited string \"new\" exactly four times.  Very brittle.\n\nIn the dump-file, there are three lines with calls to new:\n     D.908 = new ((integer(kind=4) *) data);\n integer(kind=4) * new (integer(kind=4) & data)\n   static integer(kind=4) * new (integer(kind=4) &);\n\nBut, there's also a line, which for me and cris-elf looked like:\n _gfortran_runtime_error_at (&\"At line 46 of file\n  /X/xyzzynewfrob/gcc/testsuite/gfortran.dg/PR82376.f90\"[1]{lb: 1 sz: 1},\n  &\"Pointer actual argument \\'new\\' is not associated\"[1]{lb: 1 sz: 1});\nThe fourth match is obviously intended to match this line, but only\nwith *one* match, whereas the path can as above yield another hit.\n\nWith Tcl, the regexp for matching the \" \" *and* the \"'\"\n*and* the \"\\\" gets a bit unsightly, so I suggest just\nmatching the \"new\" calls, which according to the comment in\nthe test is the key point.  You can't have a file-path with\nspaces and parentheses in a gcc build.  I'm also making use\nof {} rather than \"\" needing one level of quoting; the \"\\(\"\nis needed because the matched string is a regexp.\n\ntestsuite:\n\t* gfortran.dg/PR82376.f90: Robustify match.", "tree": {"sha": "6740635fab9145eb4550287ce09a86a262d4fbf3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6740635fab9145eb4550287ce09a86a262d4fbf3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fb0cd8f11167600f11034031ce190151a54a5a95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb0cd8f11167600f11034031ce190151a54a5a95", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fb0cd8f11167600f11034031ce190151a54a5a95", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fb0cd8f11167600f11034031ce190151a54a5a95/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04b4f3152593f85b05974528d1607619dd77d702", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/04b4f3152593f85b05974528d1607619dd77d702", "html_url": "https://github.com/Rust-GCC/gccrs/commit/04b4f3152593f85b05974528d1607619dd77d702"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "b99779ce9d8a41c8a527911ca9854b018851c788", "filename": "gcc/testsuite/gfortran.dg/PR82376.f90", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fb0cd8f11167600f11034031ce190151a54a5a95/gcc%2Ftestsuite%2Fgfortran.dg%2FPR82376.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fb0cd8f11167600f11034031ce190151a54a5a95/gcc%2Ftestsuite%2Fgfortran.dg%2FPR82376.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2FPR82376.f90?ref=fb0cd8f11167600f11034031ce190151a54a5a95", "patch": "@@ -2,7 +2,8 @@\n ! { dg-options \"-fdump-tree-original -fcheck=pointer\" }\n !\n ! Test the fix for PR82376. The pointer check was doubling up the call\n-! to new. The fix reduces the count of 'new' from 5 to 4.\n+! to new. The fix reduces the count of 'new' from 5 to 4, or to 3, when\n+! counting only calls.\n !\n ! Contributed by Jos\u00e9 Rui Faustino de Sousa  <jrfsousa@gmail.com>\n !\n@@ -56,4 +57,4 @@ subroutine set(this, that)\n   end subroutine set\n \n end program main_p\n-! { dg-final { scan-tree-dump-times \"new\" 4 \"original\" } }\n+! { dg-final { scan-tree-dump-times { new \\(} 3 \"original\" } }"}]}