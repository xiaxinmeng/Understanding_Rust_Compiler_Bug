{"sha": "8f2e963bd6684223571cda40201961d4cbe755d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGYyZTk2M2JkNjY4NDIyMzU3MWNkYTQwMjAxOTYxZDRjYmU3NTVkOQ==", "commit": {"author": {"name": "Loren J. Rittle", "email": "ljrittle@acm.org", "date": "2002-01-28T14:17:11Z"}, "committer": {"name": "Loren J. Rittle", "email": "ljrittle@gcc.gnu.org", "date": "2002-01-28T14:17:11Z"}, "message": "inclhack.def (strict_ansi_not): Add a bypass based on the old, removed AAA_standards fix.\n\n\t* fixinc/inclhack.def (strict_ansi_not): Add a bypass based on\n\tthe old, removed AAA_standards fix.\n\t* fixinc/fixincl.x: Rebuilt.\n\nFrom-SVN: r49282", "tree": {"sha": "ecfdfee8577fbd2d6f7acd39c9c4e5f270b698bb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ecfdfee8577fbd2d6f7acd39c9c4e5f270b698bb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8f2e963bd6684223571cda40201961d4cbe755d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f2e963bd6684223571cda40201961d4cbe755d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f2e963bd6684223571cda40201961d4cbe755d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f2e963bd6684223571cda40201961d4cbe755d9/comments", "author": null, "committer": null, "parents": [{"sha": "fdae5767f002780de4b83d84417e1faf73e1e947", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdae5767f002780de4b83d84417e1faf73e1e947", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdae5767f002780de4b83d84417e1faf73e1e947"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "364d76ffcc3cf2e9bc9511b497bd17512f789114", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f2e963bd6684223571cda40201961d4cbe755d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f2e963bd6684223571cda40201961d4cbe755d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8f2e963bd6684223571cda40201961d4cbe755d9", "patch": "@@ -1,3 +1,9 @@\n+2002-01-28  Loren J. Rittle  <ljrittle@acm.org>\n+\n+\t* fixinc/inclhack.def (strict_ansi_not): Add a bypass based on\n+\tthe old, removed AAA_standards fix.\n+\t* fixinc/fixincl.x: Rebuilt.\n+\n 2002-01-28  Hans-Peter Nilsson  <hp@axis.com>\n \n \t* config/cris/cris.h (CRT_CALL_STATIC_FUNCTION): Change to emit"}, {"sha": "e2a2222125762956f7c6a823b3988fedca963c0d", "filename": "gcc/fixinc/fixincl.x", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f2e963bd6684223571cda40201961d4cbe755d9/gcc%2Ffixinc%2Ffixincl.x", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f2e963bd6684223571cda40201961d4cbe755d9/gcc%2Ffixinc%2Ffixincl.x", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.x?ref=8f2e963bd6684223571cda40201961d4cbe755d9", "patch": "@@ -144,14 +144,14 @@ static const char* apzAab_Fd_Zero_Asm_Posix_Types_HPatch[] = {\n #define __FD_ZERO(fdsetp) \\\\\\n\\\n   do { \\\\\\n\\\n     int __d0, __d1; \\\\\\n\\\n-\\t\\t__asm__ __volatile__(\\\"cld ; rep ; stosl\\\" \\\\\\n\\\n-\\t\\t\\t: \\\"=&c\\\" (__d0), \\\"=&D\\\" (__d1) \\\\\\n\\\n-\\t\\t\\t: \\\"a\\\" (0), \\\"0\\\" (__FDSET_LONGS), \\\\\\n\\\n-\\t\\t\\t  \\\"1\\\" ((__kernel_fd_set *) (fdsetp)) :\\\"memory\\\"); \\\\\\n\\\n+__asm__ __volatile__(\\\"cld ; rep ; stosl\\\" \\\\\\n\\\n+: \\\"=&c\\\" (__d0), \\\"=&D\\\" (__d1) \\\\\\n\\\n+: \\\"a\\\" (0), \\\"0\\\" (__FDSET_LONGS), \\\\\\n\\\n+  \\\"1\\\" ((__kernel_fd_set *) (fdsetp)) :\\\"memory\\\"); \\\\\\n\\\n   } while (0)\\n\\\n #endif\\n\\n\\\n #define _POSIX_TYPES_H_WRAPPER\\n\\\n-#endif /* _POSIX_TYPES_H_WRAPPER */\\n\",\n+#endif /* _POSIX_TYPES_H_WRAPPER */\",\n     (char*)NULL };\n \n /* * * * * * * * * * * * * * * * * * * * * * * * * *\n@@ -3763,14 +3763,21 @@ tSCC zStrict_Ansi_NotName[] =\n tSCC zStrict_Ansi_NotSelect0[] =\n        \"^([ \\t]*#[ \\t]*if.*)(!__STDC__|__STDC__[ \\t]*==[ \\t]*0|__STDC__[ \\t]*!=[ \\t]*1|__STDC__[ \\t]*-[ \\t]*0[ \\t]*==[ \\t]*0)\";\n \n+/*\n+ *  content bypass pattern - skip fix if pattern found\n+ */\n+tSCC zStrict_Ansi_NotBypass0[] =\n+       \"GNU and MIPS C compilers define __STDC__ differently\";\n+\n /*\n  *  perform the C function call test\n  */\n tSCC zStrict_Ansi_NotFTst0[] = \"stdc_0_in_system_headers\";\n \n-#define    STRICT_ANSI_NOT_TEST_CT  2\n+#define    STRICT_ANSI_NOT_TEST_CT  3\n static tTestDesc aStrict_Ansi_NotTests[] = {\n   { TT_FUNCTION, zStrict_Ansi_NotFTst0,   0 /* unused */ },\n+  { TT_NEGREP,   zStrict_Ansi_NotBypass0, (regex_t*)NULL },\n   { TT_EGREP,    zStrict_Ansi_NotSelect0, (regex_t*)NULL }, };\n \n /*\n@@ -5428,7 +5435,7 @@ static const char* apzX11_SprintfPatch[] = {\n  *\n  *  List of all fixes\n  */\n-#define REGEX_COUNT          146\n+#define REGEX_COUNT          147\n #define MACH_LIST_SIZE_LIMIT 279\n #define FIX_COUNT            138\n "}, {"sha": "d322d2f1e55f90d490c20cdf72ef5cf1ce7e809d", "filename": "gcc/fixinc/inclhack.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8f2e963bd6684223571cda40201961d4cbe755d9/gcc%2Ffixinc%2Finclhack.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8f2e963bd6684223571cda40201961d4cbe755d9/gcc%2Ffixinc%2Finclhack.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Finclhack.def?ref=8f2e963bd6684223571cda40201961d4cbe755d9", "patch": "@@ -2173,6 +2173,8 @@ fix = {\n                \"|__STDC__[ \\t]*==[ \\t]*0\"\n                \"|__STDC__[ \\t]*!=[ \\t]*1\"\n                \"|__STDC__[ \\t]*-[ \\t]*0[ \\t]*==[ \\t]*0)\";\n+    /* Tru64 UNIX V4.0F/V5.1 <standards.h> supports GCC usage of __STDC__. */\n+    bypass = 'GNU and MIPS C compilers define __STDC__ differently';\n     c_test   = stdc_0_in_system_headers;\n \n     c_fix     = format;"}]}