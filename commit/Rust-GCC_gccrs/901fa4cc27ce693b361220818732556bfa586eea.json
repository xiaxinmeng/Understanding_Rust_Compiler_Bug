{"sha": "901fa4cc27ce693b361220818732556bfa586eea", "node_id": "C_kwDOANBUbNoAKDkwMWZhNGNjMjdjZTY5M2IzNjEyMjA4MTg3MzI1NTZiZmE1ODZlZWE", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-09-30T13:39:36Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-10-01T14:04:02Z"}, "message": "libstdc++: Add noexcept to istream_iterator and ostream_iterator\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/stream_iterator.h (istream_iterator): Add\n\tnoexcept to constructors and non-throwing member functions and\n\tfriend functions.\n\t(ostream_iterator): Likewise.", "tree": {"sha": "b2404f52d6a59f7457dd466b0514b1c2f998d68d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2404f52d6a59f7457dd466b0514b1c2f998d68d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/901fa4cc27ce693b361220818732556bfa586eea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/901fa4cc27ce693b361220818732556bfa586eea", "html_url": "https://github.com/Rust-GCC/gccrs/commit/901fa4cc27ce693b361220818732556bfa586eea", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/901fa4cc27ce693b361220818732556bfa586eea/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c67339d12653c33f85f8141789d7a7cf38831cbd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c67339d12653c33f85f8141789d7a7cf38831cbd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c67339d12653c33f85f8141789d7a7cf38831cbd"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "5a1323191116edb308992ae59e328c9544019916", "filename": "libstdc++-v3/include/bits/stream_iterator.h", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/901fa4cc27ce693b361220818732556bfa586eea/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstream_iterator.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/901fa4cc27ce693b361220818732556bfa586eea/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstream_iterator.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstream_iterator.h?ref=901fa4cc27ce693b361220818732556bfa586eea", "patch": "@@ -65,6 +65,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     public:\n       ///  Construct end of input stream iterator.\n       _GLIBCXX_CONSTEXPR istream_iterator()\n+      _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Tp>::value)\n       : _M_stream(0), _M_value(), _M_ok(false) {}\n \n       ///  Construct start of input stream iterator.\n@@ -73,6 +74,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       { _M_read(); }\n \n       istream_iterator(const istream_iterator& __obj)\n+      _GLIBCXX_NOEXCEPT_IF(is_nothrow_copy_constructible<_Tp>::value)\n       : _M_stream(__obj._M_stream), _M_value(__obj._M_value),\n         _M_ok(__obj._M_ok)\n       { }\n@@ -91,7 +93,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       _GLIBCXX_NODISCARD\n       const _Tp&\n-      operator*() const\n+      operator*() const _GLIBCXX_NOEXCEPT\n       {\n \t__glibcxx_requires_cond(_M_ok,\n \t\t\t\t_M_message(__gnu_debug::__msg_deref_istream)\n@@ -101,7 +103,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       _GLIBCXX_NODISCARD\n       const _Tp*\n-      operator->() const { return std::__addressof((operator*())); }\n+      operator->() const _GLIBCXX_NOEXCEPT\n+      { return std::__addressof((operator*())); }\n \n       istream_iterator&\n       operator++()\n@@ -126,7 +129,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     private:\n       bool\n-      _M_equal(const istream_iterator& __x) const\n+      _M_equal(const istream_iterator& __x) const _GLIBCXX_NOEXCEPT\n       {\n \t// Ideally this would just return _M_stream == __x._M_stream,\n \t// but code compiled with old versions never sets _M_stream to null.\n@@ -148,6 +151,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _GLIBCXX_NODISCARD\n       friend bool\n       operator==(const istream_iterator& __x, const istream_iterator& __y)\n+      _GLIBCXX_NOEXCEPT\n       { return __x._M_equal(__y); }\n \n #if __cpp_impl_three_way_comparison < 201907L\n@@ -156,13 +160,14 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       _GLIBCXX_NODISCARD\n       friend bool\n       operator!=(const istream_iterator& __x, const istream_iterator& __y)\n+      _GLIBCXX_NOEXCEPT\n       { return !__x._M_equal(__y); }\n #endif\n \n #if __cplusplus > 201703L && __cpp_lib_concepts\n       [[nodiscard]]\n       friend bool\n-      operator==(const istream_iterator& __i, default_sentinel_t)\n+      operator==(const istream_iterator& __i, default_sentinel_t) noexcept\n       { return !__i._M_stream; }\n #endif\n     };\n@@ -200,7 +205,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     public:\n       /// Construct from an ostream.\n-      ostream_iterator(ostream_type& __s)\n+      ostream_iterator(ostream_type& __s) _GLIBCXX_NOEXCEPT\n       : _M_stream(std::__addressof(__s)), _M_string(0) {}\n \n       /**\n@@ -213,11 +218,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n        *  @param  __s  Underlying ostream to write to.\n        *  @param  __c  CharT delimiter string to insert.\n       */\n-      ostream_iterator(ostream_type& __s, const _CharT* __c)\n+      ostream_iterator(ostream_type& __s, const _CharT* __c) _GLIBCXX_NOEXCEPT\n       : _M_stream(std::__addressof(__s)), _M_string(__c)  { }\n \n       /// Copy constructor.\n-      ostream_iterator(const ostream_iterator& __obj)\n+      ostream_iterator(const ostream_iterator& __obj) _GLIBCXX_NOEXCEPT\n       : _M_stream(__obj._M_stream), _M_string(__obj._M_string)  { }\n \n #if __cplusplus >= 201103L\n@@ -240,15 +245,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       _GLIBCXX_NODISCARD\n       ostream_iterator&\n-      operator*()\n+      operator*() _GLIBCXX_NOEXCEPT\n       { return *this; }\n \n       ostream_iterator&\n-      operator++()\n+      operator++() _GLIBCXX_NOEXCEPT\n       { return *this; }\n \n       ostream_iterator&\n-      operator++(int)\n+      operator++(int) _GLIBCXX_NOEXCEPT\n       { return *this; }\n     };\n "}]}