{"sha": "cd1db1088e0d55527415056906f5fab878253b0f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2QxZGIxMDg4ZTBkNTU1Mjc0MTUwNTY5MDZmNWZhYjg3ODI1M2IwZg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-26T20:45:13Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-26T20:45:13Z"}, "message": "(expand_assignment): If FROM is scalar function call,\n\nexpand_expr FROM before TO.\n\nFrom-SVN: r4759", "tree": {"sha": "9d13e1457b242ede6b0fd6cf871f68e8dac2713b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d13e1457b242ede6b0fd6cf871f68e8dac2713b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd1db1088e0d55527415056906f5fab878253b0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd1db1088e0d55527415056906f5fab878253b0f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd1db1088e0d55527415056906f5fab878253b0f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd1db1088e0d55527415056906f5fab878253b0f/comments", "author": null, "committer": null, "parents": [{"sha": "fff26804c900ea7c3efbbf7da8ae17a424f3a39c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fff26804c900ea7c3efbbf7da8ae17a424f3a39c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fff26804c900ea7c3efbbf7da8ae17a424f3a39c"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "f12391783ff69c1f48b47c36e28ae8f377323d1d", "filename": "gcc/expr.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd1db1088e0d55527415056906f5fab878253b0f/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd1db1088e0d55527415056906f5fab878253b0f/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=cd1db1088e0d55527415056906f5fab878253b0f", "patch": "@@ -2205,6 +2205,22 @@ expand_assignment (to, from, want_value, suggest_reg)\n \t      : result);\n     }\n \n+  /* If the rhs is a function call and its value is not an aggregate,\n+     call the function before we start to compute the lhs.\n+     This is needed for correct code for cases such as\n+     val = setjmp (buf) on machines where reference to val\n+     requires loading up part of an address in a separate insn.  */\n+  if (TREE_CODE (from) == CALL_EXPR && ! aggregate_value_p (from))\n+    {\n+      rtx value = expand_expr (from, NULL_RTX, VOIDmode, 0);\n+      if (to_rtx == 0)\n+\tto_rtx = expand_expr (to, NULL_RTX, VOIDmode, 0);\n+      emit_move_insn (to_rtx, value);\n+      preserve_temp_slots (to_rtx);\n+      free_temp_slots ();\n+      return to_rtx;\n+    }\n+\n   /* Ordinary treatment.  Expand TO to get a REG or MEM rtx.\n      Don't re-expand if it was expanded already (in COMPONENT_REF case).  */\n "}]}