{"sha": "e13971e036199cf5f581ca31b43567b9b5aeab34", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTEzOTcxZTAzNjE5OWNmNWY1ODFjYTMxYjQzNTY3YjliNWFlYWIzNA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@bigpond.net.au", "date": "2004-11-29T11:29:09Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2004-11-29T11:29:09Z"}, "message": "varasm.c (default_elf_select_section_1): Only pass DECL_P decl to named_section.\n\n\t* varasm.c (default_elf_select_section_1): Only pass DECL_P decl\n\tto named_section.\n\nFrom-SVN: r91464", "tree": {"sha": "1fb1586f0e2bbc68bc57cc5672534e09892616af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1fb1586f0e2bbc68bc57cc5672534e09892616af"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e13971e036199cf5f581ca31b43567b9b5aeab34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e13971e036199cf5f581ca31b43567b9b5aeab34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e13971e036199cf5f581ca31b43567b9b5aeab34", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e13971e036199cf5f581ca31b43567b9b5aeab34/comments", "author": null, "committer": null, "parents": [{"sha": "d41ca8e68fa9ac43688da71f09aedd8bde74f26e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d41ca8e68fa9ac43688da71f09aedd8bde74f26e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d41ca8e68fa9ac43688da71f09aedd8bde74f26e"}], "stats": {"total": 43, "additions": 27, "deletions": 16}, "files": [{"sha": "4a65e98b915cc0da0eeb7af6d12fe96421d0e34f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13971e036199cf5f581ca31b43567b9b5aeab34/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13971e036199cf5f581ca31b43567b9b5aeab34/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e13971e036199cf5f581ca31b43567b9b5aeab34", "patch": "@@ -1,3 +1,8 @@\n+2004-11-29  Alan Modra  <amodra@bigpond.net.au>\n+\n+\t* varasm.c (default_elf_select_section_1): Only pass DECL_P decl\n+\tto named_section.\n+\n 2004-11-29  Nathan Sidwell  <nathan@codesourcery.com>\n \n \t* opts.c (decode_options): Do not set max-inline-insns-rtl."}, {"sha": "e58422d664d73c348bc07431a9eeb5b8700a6e1a", "filename": "gcc/varasm.c", "status": "modified", "additions": 22, "deletions": 16, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e13971e036199cf5f581ca31b43567b9b5aeab34/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e13971e036199cf5f581ca31b43567b9b5aeab34/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=e13971e036199cf5f581ca31b43567b9b5aeab34", "patch": "@@ -4897,63 +4897,69 @@ void\n default_elf_select_section_1 (tree decl, int reloc,\n \t\t\t      unsigned HOST_WIDE_INT align, int shlib)\n {\n+  const char *sname;\n   switch (categorize_decl_for_section (decl, reloc, shlib))\n     {\n     case SECCAT_TEXT:\n       /* We're not supposed to be called on FUNCTION_DECLs.  */\n       abort ();\n     case SECCAT_RODATA:\n       readonly_data_section ();\n-      break;\n+      return;\n     case SECCAT_RODATA_MERGE_STR:\n       mergeable_string_section (decl, align, 0);\n-      break;\n+      return;\n     case SECCAT_RODATA_MERGE_STR_INIT:\n       mergeable_string_section (DECL_INITIAL (decl), align, 0);\n-      break;\n+      return;\n     case SECCAT_RODATA_MERGE_CONST:\n       mergeable_constant_section (DECL_MODE (decl), align, 0);\n-      break;\n+      return;\n     case SECCAT_SRODATA:\n-      named_section (decl, \".sdata2\", reloc);\n+      sname = \".sdata2\";\n       break;\n     case SECCAT_DATA:\n       data_section ();\n-      break;\n+      return;\n     case SECCAT_DATA_REL:\n-      named_section (decl, \".data.rel\", reloc);\n+      sname = \".data.rel\";\n       break;\n     case SECCAT_DATA_REL_LOCAL:\n-      named_section (decl, \".data.rel.local\", reloc);\n+      sname = \".data.rel.local\";\n       break;\n     case SECCAT_DATA_REL_RO:\n-      named_section (decl, \".data.rel.ro\", reloc);\n+      sname = \".data.rel.ro\";\n       break;\n     case SECCAT_DATA_REL_RO_LOCAL:\n-      named_section (decl, \".data.rel.ro.local\", reloc);\n+      sname = \".data.rel.ro.local\";\n       break;\n     case SECCAT_SDATA:\n-      named_section (decl, \".sdata\", reloc);\n+      sname = \".sdata\";\n       break;\n     case SECCAT_TDATA:\n-      named_section (decl, \".tdata\", reloc);\n+      sname = \".tdata\";\n       break;\n     case SECCAT_BSS:\n #ifdef BSS_SECTION_ASM_OP\n       bss_section ();\n+      return;\n #else\n-      named_section (decl, \".bss\", reloc);\n-#endif\n+      sname = \".bss\";\n       break;\n+#endif\n     case SECCAT_SBSS:\n-      named_section (decl, \".sbss\", reloc);\n+      sname = \".sbss\";\n       break;\n     case SECCAT_TBSS:\n-      named_section (decl, \".tbss\", reloc);\n+      sname = \".tbss\";\n       break;\n     default:\n       abort ();\n     }\n+\n+  if (!DECL_P (decl))\n+    decl = NULL_TREE;\n+  named_section (decl, sname, reloc);\n }\n \n /* Construct a unique section name based on the decl name and the"}]}