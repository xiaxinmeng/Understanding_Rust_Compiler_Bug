{"sha": "52ec0ea334753fbe7a81c15c17636fb22a3c7d2d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJlYzBlYTMzNDc1M2ZiZTdhODFjMTVjMTc2MzZmYjIyYTNjN2QyZA==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2014-07-01T08:53:12Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2014-07-01T08:53:12Z"}, "message": "invoke.texi: Document -Wint-conversion.\n\n\t* doc/invoke.texi: Document -Wint-conversion.\nc-family/\n\t* c.opt (Wint-conversion): New option.\nc/\n\t* c-typeck.c (convert_for_assignment): Pass OPT_Wint_conversion\n\tinstead of 0 to WARN_FOR_ASSIGNMENT.\ntestsuite/\n\t* gcc.dg/Wint-conversion.c: New test.\n\nFrom-SVN: r212193", "tree": {"sha": "98e47da6bde5358750ba0aac6b53b099e2e8eee6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/98e47da6bde5358750ba0aac6b53b099e2e8eee6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d5c3d343bdc26d8d16d2a3b20c25dce3c619ff69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5c3d343bdc26d8d16d2a3b20c25dce3c619ff69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5c3d343bdc26d8d16d2a3b20c25dce3c619ff69"}], "stats": {"total": 59, "additions": 56, "deletions": 3}, "files": [{"sha": "14d19098562ec580cc9e9ae37b8a15addf5708cc", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52ec0ea334753fbe7a81c15c17636fb22a3c7d2d", "patch": "@@ -1,3 +1,7 @@\n+2014-07-01  Marek Polacek  <polacek@redhat.com>\n+\n+\t* doc/invoke.texi: Document -Wint-conversion.\n+\n 2014-07-01  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/58286"}, {"sha": "25acae88e95b4871f3910611a91533e83d3c0fa9", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=52ec0ea334753fbe7a81c15c17636fb22a3c7d2d", "patch": "@@ -1,3 +1,7 @@\n+2014-07-01  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c.opt (Wint-conversion): New option.\n+\n 2014-07-01  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/58286"}, {"sha": "c89040abf9ee962fb379c50a907b0d0b93b4a25d", "filename": "gcc/c-family/c.opt", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d/gcc%2Fc-family%2Fc.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d/gcc%2Fc-family%2Fc.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc.opt?ref=52ec0ea334753fbe7a81c15c17636fb22a3c7d2d", "patch": "@@ -474,6 +474,10 @@ Winherited-variadic-ctor\n C++ ObjC++ Var(warn_inh_var_ctor) Init(1) Warning\n Warn about C++11 inheriting constructors when the base has a variadic constructor\n \n+Wint-conversion\n+C ObjC Var(warn_int_conversion) Init(1) Warning\n+Warn about incompatible integer to pointer and pointer to integer conversions\n+\n Wint-to-pointer-cast\n C ObjC C++ ObjC++ Var(warn_int_to_pointer_cast) Init(1) Warning\n Warn when there is a cast to a pointer from an integer of a different size"}, {"sha": "1c1936245d86ef0388a0df413c0991ecc9edf2bb", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=52ec0ea334753fbe7a81c15c17636fb22a3c7d2d", "patch": "@@ -1,3 +1,8 @@\n+2014-07-01  Marek Polacek  <polacek@redhat.com>\n+\n+\t* c-typeck.c (convert_for_assignment): Pass OPT_Wint_conversion\n+\tinstead of 0 to WARN_FOR_ASSIGNMENT.\n+\n 2014-07-01  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/58286"}, {"sha": "35bfd1498769e4991b99d65422d4844969d8dedc", "filename": "gcc/c/c-typeck.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d/gcc%2Fc%2Fc-typeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d/gcc%2Fc%2Fc-typeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-typeck.c?ref=52ec0ea334753fbe7a81c15c17636fb22a3c7d2d", "patch": "@@ -6213,7 +6213,8 @@ convert_for_assignment (location_t location, location_t expr_loc, tree type,\n \t or one that results from arithmetic, even including\n \t a cast to integer type.  */\n       if (!null_pointer_constant)\n-\tWARN_FOR_ASSIGNMENT (location, expr_loc, 0,\n+\tWARN_FOR_ASSIGNMENT (location, expr_loc,\n+\t\t\t     OPT_Wint_conversion,\n \t\t\t     G_(\"passing argument %d of %qE makes \"\n \t\t\t\t\"pointer from integer without a cast\"),\n \t\t\t     G_(\"assignment makes pointer from integer \"\n@@ -6227,7 +6228,8 @@ convert_for_assignment (location_t location, location_t expr_loc, tree type,\n     }\n   else if (codel == INTEGER_TYPE && coder == POINTER_TYPE)\n     {\n-      WARN_FOR_ASSIGNMENT (location, expr_loc, 0,\n+      WARN_FOR_ASSIGNMENT (location, expr_loc,\n+\t\t\t   OPT_Wint_conversion,\n \t\t\t   G_(\"passing argument %d of %qE makes integer \"\n \t\t\t      \"from pointer without a cast\"),\n \t\t\t   G_(\"assignment makes integer from pointer \""}, {"sha": "b1f6f4bcb57620495548fd41eed3a8f0d16063b6", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=52ec0ea334753fbe7a81c15c17636fb22a3c7d2d", "patch": "@@ -253,7 +253,7 @@ Objective-C and Objective-C++ Dialects}.\n -Wframe-larger-than=@var{len} -Wno-free-nonheap-object -Wjump-misses-init @gol\n -Wignored-qualifiers  -Wincompatible-pointer-types @gol\n -Wimplicit  -Wimplicit-function-declaration  -Wimplicit-int @gol\n--Winit-self  -Winline @gol\n+-Winit-self  -Winline  -Wno-int-conversion @gol\n -Wno-int-to-pointer-cast -Wno-invalid-offsetof @gol\n -Winvalid-pch -Wlarger-than=@var{len}  -Wunsafe-loop-optimizations @gol\n -Wlogical-op -Wlogical-not-parentheses -Wlong-long @gol\n@@ -4214,6 +4214,14 @@ Do not warn when there is a conversion between pointers that have incompatible\n types.  This warning is for cases not covered by @option{-Wno-pointer-sign},\n which warns for pointer argument passing or assignment with different signedness\n \n+@item -Wno-int-conversion @r{(C and Objective-C only)}\n+@opindex Wno-int-conversion\n+@opindex Wint-conversion\n+Do not warn about incompatible integer to pointer and pointer to integer\n+conversions.  This warning is about implicit conversions; for explicit\n+conversions the warnings @option{-Wno-int-to-pointer-cast} and\n+@option{-Wno-pointer-to-int-cast} may be used.\n+\n @item -Wno-div-by-zero\n @opindex Wno-div-by-zero\n @opindex Wdiv-by-zero"}, {"sha": "0bb4e903ab7376bd7167f91b2865ff048809f953", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=52ec0ea334753fbe7a81c15c17636fb22a3c7d2d", "patch": "@@ -1,3 +1,7 @@\n+2014-07-01  Marek Polacek  <polacek@redhat.com>\n+\n+\t* gcc.dg/Wint-conversion.c: New test.\n+\n 2014-07-01  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/58286"}, {"sha": "1b7a03e431121ab9b4710ef5e7684f35821807c5", "filename": "gcc/testsuite/gcc.dg/Wint-conversion.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d/gcc%2Ftestsuite%2Fgcc.dg%2FWint-conversion.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52ec0ea334753fbe7a81c15c17636fb22a3c7d2d/gcc%2Ftestsuite%2Fgcc.dg%2FWint-conversion.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWint-conversion.c?ref=52ec0ea334753fbe7a81c15c17636fb22a3c7d2d", "patch": "@@ -0,0 +1,22 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Wno-int-conversion\" } */\n+\n+int fn1 (int *), *fn2 (int);\n+\n+int\n+fn1 (int *p)\n+{\n+  int i = p;\n+  i = p;\n+  fn2 (p);\n+  return p;\n+}\n+\n+int *\n+fn2 (int i)\n+{\n+  int *p = i;\n+  p = i;\n+  fn1 (i);\n+  return i;\n+}"}]}