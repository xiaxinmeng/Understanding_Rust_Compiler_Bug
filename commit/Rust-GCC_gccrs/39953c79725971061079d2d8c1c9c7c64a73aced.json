{"sha": "39953c79725971061079d2d8c1c9c7c64a73aced", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzk5NTNjNzk3MjU5NzEwNjEwNzlkMmQ4YzFjOWM3YzY0YTczYWNlZA==", "commit": {"author": {"name": "Dehao Chen", "email": "dehao@google.com", "date": "2013-06-24T17:31:45Z"}, "committer": {"name": "Dehao Chen", "email": "dehao@gcc.gnu.org", "date": "2013-06-24T17:31:45Z"}, "message": "files.c (_cpp_stack_include): Fix the highest_location when header file is guarded by #ifndef and is included...\n\n2013-06-24  Dehao Chen  <dehao@google.com>\n\n\t* files.c (_cpp_stack_include): Fix the highest_location when header\n\tfile is guarded by #ifndef and is included twice.\n\nFrom-SVN: r200376", "tree": {"sha": "3b9c9611a734feb6674eb7cd7b3c35fb4e916f6f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3b9c9611a734feb6674eb7cd7b3c35fb4e916f6f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39953c79725971061079d2d8c1c9c7c64a73aced", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39953c79725971061079d2d8c1c9c7c64a73aced", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39953c79725971061079d2d8c1c9c7c64a73aced", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39953c79725971061079d2d8c1c9c7c64a73aced/comments", "author": {"login": "danielcdh", "id": 694263, "node_id": "MDQ6VXNlcjY5NDI2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/694263?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielcdh", "html_url": "https://github.com/danielcdh", "followers_url": "https://api.github.com/users/danielcdh/followers", "following_url": "https://api.github.com/users/danielcdh/following{/other_user}", "gists_url": "https://api.github.com/users/danielcdh/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielcdh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielcdh/subscriptions", "organizations_url": "https://api.github.com/users/danielcdh/orgs", "repos_url": "https://api.github.com/users/danielcdh/repos", "events_url": "https://api.github.com/users/danielcdh/events{/privacy}", "received_events_url": "https://api.github.com/users/danielcdh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b4005c71a2c5d04ee673a0b14d63ab5e8c35c072", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4005c71a2c5d04ee673a0b14d63ab5e8c35c072", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4005c71a2c5d04ee673a0b14d63ab5e8c35c072"}], "stats": {"total": 31, "additions": 22, "deletions": 9}, "files": [{"sha": "ca29119c953322a354497f3525e3738e35301bc6", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39953c79725971061079d2d8c1c9c7c64a73aced/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39953c79725971061079d2d8c1c9c7c64a73aced/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=39953c79725971061079d2d8c1c9c7c64a73aced", "patch": "@@ -1,3 +1,8 @@\n+2013-06-24  Dehao Chen  <dehao@google.com>\n+\n+\t* files.c (_cpp_stack_include): Fix the highest_location when header\n+\tfile is guarded by #ifndef and is included twice.\n+\n 2013-04-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tN3472 binary constants"}, {"sha": "ea91b02047da4c6989cdb8d1341fa008597ef3f4", "filename": "libcpp/files.c", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39953c79725971061079d2d8c1c9c7c64a73aced/libcpp%2Ffiles.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39953c79725971061079d2d8c1c9c7c64a73aced/libcpp%2Ffiles.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Ffiles.c?ref=39953c79725971061079d2d8c1c9c7c64a73aced", "patch": "@@ -983,6 +983,7 @@ _cpp_stack_include (cpp_reader *pfile, const char *fname, int angle_brackets,\n {\n   struct cpp_dir *dir;\n   _cpp_file *file;\n+  bool stacked;\n \n   dir = search_path_head (pfile, fname, angle_brackets, type);\n   if (!dir)\n@@ -993,19 +994,26 @@ _cpp_stack_include (cpp_reader *pfile, const char *fname, int angle_brackets,\n   if (type == IT_DEFAULT && file == NULL)\n     return false;\n \n-  /* Compensate for the increment in linemap_add that occurs in\n-     _cpp_stack_file.  In the case of a normal #include, we're\n-     currently at the start of the line *following* the #include.  A\n-     separate source_location for this location makes no sense (until\n-     we do the LC_LEAVE), and complicates LAST_SOURCE_LINE_LOCATION.\n-     This does not apply if we found a PCH file (in which case\n-     linemap_add is not called) or we were included from the\n-     command-line.  */\n+  /* Compensate for the increment in linemap_add that occurs if\n+      _cpp_stack_file actually stacks the file.  In the case of a\n+     normal #include, we're currently at the start of the line\n+     *following* the #include.  A separate source_location for this\n+     location makes no sense (until we do the LC_LEAVE), and\n+     complicates LAST_SOURCE_LINE_LOCATION.  This does not apply if we\n+     found a PCH file (in which case linemap_add is not called) or we\n+     were included from the command-line.  */\n   if (file->pchname == NULL && file->err_no == 0\n       && type != IT_CMDLINE && type != IT_DEFAULT)\n     pfile->line_table->highest_location--;\n \n-  return _cpp_stack_file (pfile, file, type == IT_IMPORT);\n+  stacked = _cpp_stack_file (pfile, file, type == IT_IMPORT);\n+\n+  if (!stacked)\n+    /* _cpp_stack_file didn't stack the file, so let's rollback the\n+       compensation dance we performed above.  */\n+    pfile->line_table->highest_location++;\n+\n+  return stacked;\n }\n \n /* Could not open FILE.  The complication is dependency output.  */"}]}