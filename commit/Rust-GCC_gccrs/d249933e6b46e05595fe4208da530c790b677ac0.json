{"sha": "d249933e6b46e05595fe4208da530c790b677ac0", "node_id": "C_kwDOANBUbNoAKGQyNDk5MzNlNmI0NmUwNTU5NWZlNDIwOGRhNTMwYzc5MGI2NzdhYzA", "commit": {"author": {"name": "Robin Dapp", "email": "rdapp@linux.ibm.com", "date": "2019-11-28T12:26:56Z"}, "committer": {"name": "Robin Dapp", "email": "rdapp@linux.ibm.com", "date": "2022-01-19T17:37:46Z"}, "message": "testsuite/s390: Add tests for noce_convert_multiple.\n\nAdd new s390-specific tests that check if we convert two SETs into two\nloads on condition.  Remove the s390-specific target-check in\ngcc.dg/ifcvt-4.c.\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.dg/ifcvt-4.c: Remove s390-specific check.\n\t* gcc.target/s390/ifcvt-two-insns-bool.c: New test.\n\t* gcc.target/s390/ifcvt-two-insns-int.c: New test.\n\t* gcc.target/s390/ifcvt-two-insns-long.c: New test.", "tree": {"sha": "61d8620e517abbd79085e94521362668ed27fa87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/61d8620e517abbd79085e94521362668ed27fa87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d249933e6b46e05595fe4208da530c790b677ac0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d249933e6b46e05595fe4208da530c790b677ac0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d249933e6b46e05595fe4208da530c790b677ac0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d249933e6b46e05595fe4208da530c790b677ac0/comments", "author": {"login": "rdapp-ibm", "id": 80318053, "node_id": "MDQ6VXNlcjgwMzE4MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/80318053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp-ibm", "html_url": "https://github.com/rdapp-ibm", "followers_url": "https://api.github.com/users/rdapp-ibm/followers", "following_url": "https://api.github.com/users/rdapp-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp-ibm/subscriptions", "organizations_url": "https://api.github.com/users/rdapp-ibm/orgs", "repos_url": "https://api.github.com/users/rdapp-ibm/repos", "events_url": "https://api.github.com/users/rdapp-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp-ibm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rdapp-ibm", "id": 80318053, "node_id": "MDQ6VXNlcjgwMzE4MDUz", "avatar_url": "https://avatars.githubusercontent.com/u/80318053?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdapp-ibm", "html_url": "https://github.com/rdapp-ibm", "followers_url": "https://api.github.com/users/rdapp-ibm/followers", "following_url": "https://api.github.com/users/rdapp-ibm/following{/other_user}", "gists_url": "https://api.github.com/users/rdapp-ibm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdapp-ibm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdapp-ibm/subscriptions", "organizations_url": "https://api.github.com/users/rdapp-ibm/orgs", "repos_url": "https://api.github.com/users/rdapp-ibm/repos", "events_url": "https://api.github.com/users/rdapp-ibm/events{/privacy}", "received_events_url": "https://api.github.com/users/rdapp-ibm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa8cfe785953a0e87d2472311e1260cd98c605c0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa8cfe785953a0e87d2472311e1260cd98c605c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa8cfe785953a0e87d2472311e1260cd98c605c0"}], "stats": {"total": 119, "additions": 118, "deletions": 1}, "files": [{"sha": "37aa76a0d1bfcfc00202c1228a043f3406aa4d54", "filename": "gcc/testsuite/gcc.dg/ifcvt-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d249933e6b46e05595fe4208da530c790b677ac0/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d249933e6b46e05595fe4208da530c790b677ac0/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fifcvt-4.c?ref=d249933e6b46e05595fe4208da530c790b677ac0", "patch": "@@ -2,7 +2,7 @@\n /* { dg-additional-options \"-misel\" { target { powerpc*-*-* } } } */\n /* { dg-additional-options \"-march=z196\" { target { s390x-*-* } } } */\n /* { dg-additional-options \"-mtune-ctrl=^one_if_conv_insn\" { target { i?86-*-* x86_64-*-* } } } */\n-/* { dg-skip-if \"Multiple set if-conversion not guaranteed on all subtargets\" { \"arm*-*-* avr-*-* hppa*64*-*-* s390-*-* visium-*-*\" riscv*-*-* msp430-*-* nios2-*-*} }  */\n+/* { dg-skip-if \"Multiple set if-conversion not guaranteed on all subtargets\" { \"arm*-*-* avr-*-* hppa*64*-*-* visium-*-*\" riscv*-*-* msp430-*-* nios2-*-*} }  */\n /* { dg-skip-if \"\" { \"s390x-*-*\" } { \"-m31\" } }  */\n \n typedef int word __attribute__((mode(word)));"}, {"sha": "d2f18f58e45575fb8ee6a62c128690cb91b1dc6e", "filename": "gcc/testsuite/gcc.target/s390/ifcvt-two-insns-bool.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d249933e6b46e05595fe4208da530c790b677ac0/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fifcvt-two-insns-bool.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d249933e6b46e05595fe4208da530c790b677ac0/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fifcvt-two-insns-bool.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fifcvt-two-insns-bool.c?ref=d249933e6b46e05595fe4208da530c790b677ac0", "patch": "@@ -0,0 +1,39 @@\n+/* Check if conversion for two instructions.  */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -march=z13 --save-temps\" } */\n+\n+/* { dg-final { scan-assembler \"lochinle\\t%r.?,1\" } } */\n+/* { dg-final { scan-assembler \"locrnle\\t.*\" } } */\n+#include <stdbool.h>\n+#include <limits.h>\n+#include <stdio.h>\n+#include <assert.h>\n+\n+__attribute__ ((noinline))\n+int foo (int *a, unsigned int n)\n+{\n+  int min = 999999;\n+  bool bla = false;\n+  for (int i = 0; i < n; i++)\n+    {\n+      if (a[i] < min)\n+\t{\n+\t  min = a[i];\n+\t  bla = true;\n+\t}\n+    }\n+\n+  if (bla)\n+    min += 1;\n+  return min;\n+}\n+\n+int main()\n+{\n+  int a[] = {2, 1, -13, INT_MAX, INT_MIN, 0};\n+\n+  int res = foo (a, sizeof (a));\n+\n+  assert (res == (INT_MIN + 1));\n+}"}, {"sha": "1ced7107de0c93242f5f4f7d1cfdaeb72be8dfaf", "filename": "gcc/testsuite/gcc.target/s390/ifcvt-two-insns-int.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d249933e6b46e05595fe4208da530c790b677ac0/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fifcvt-two-insns-int.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d249933e6b46e05595fe4208da530c790b677ac0/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fifcvt-two-insns-int.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fifcvt-two-insns-int.c?ref=d249933e6b46e05595fe4208da530c790b677ac0", "patch": "@@ -0,0 +1,39 @@\n+/* Check if conversion for two instructions.  */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -march=z13 --save-temps\" } */\n+\n+/* { dg-final { scan-assembler \"lochinle\\t%r.?,1\" } } */\n+/* { dg-final { scan-assembler \"locrnle\\t.*\" } } */\n+#include <stdbool.h>\n+#include <limits.h>\n+#include <stdio.h>\n+#include <assert.h>\n+\n+__attribute__ ((noinline))\n+int foo (int *a, unsigned int n)\n+{\n+  int min = 999999;\n+  int bla = 0;\n+  for (int i = 0; i < n; i++)\n+    {\n+      if (a[i] < min)\n+\t{\n+\t  min = a[i];\n+\t  bla = 1;\n+\t}\n+    }\n+\n+  if (bla)\n+    min += 1;\n+  return min;\n+}\n+\n+int main()\n+{\n+  int a[] = {2, 1, -13, INT_MAX, INT_MIN, 0};\n+\n+  int res = foo (a, sizeof (a));\n+\n+  assert (res == (INT_MIN + 1));\n+}"}, {"sha": "5a1173fc6efa9cbadb4dbb569076e33e05188c85", "filename": "gcc/testsuite/gcc.target/s390/ifcvt-two-insns-long.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d249933e6b46e05595fe4208da530c790b677ac0/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fifcvt-two-insns-long.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d249933e6b46e05595fe4208da530c790b677ac0/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fifcvt-two-insns-long.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fs390%2Fifcvt-two-insns-long.c?ref=d249933e6b46e05595fe4208da530c790b677ac0", "patch": "@@ -0,0 +1,39 @@\n+/* Check if conversion for two instructions.  */\n+\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -march=z13 --save-temps\" } */\n+\n+/* { dg-final { scan-assembler \"locghinle\\t%r.?,1\" } } */\n+/* { dg-final { scan-assembler \"locgrnle\\t.*\" } } */\n+#include <stdbool.h>\n+#include <limits.h>\n+#include <stdio.h>\n+#include <assert.h>\n+\n+__attribute__ ((noinline))\n+long foo (long *a, unsigned long n)\n+{\n+  long min = 999999;\n+  long bla = 0;\n+  for (int i = 0; i < n; i++)\n+    {\n+      if (a[i] < min)\n+\t{\n+\t  min = a[i];\n+\t  bla = 1;\n+\t}\n+    }\n+\n+  if (bla)\n+    min += 1;\n+  return min;\n+}\n+\n+int main()\n+{\n+  long a[] = {2, 1, -13, LONG_MAX, LONG_MIN, 0};\n+\n+  long res = foo (a, sizeof (a));\n+\n+  assert (res == (LONG_MIN + 1));\n+}"}]}