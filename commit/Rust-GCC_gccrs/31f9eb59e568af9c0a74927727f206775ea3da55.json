{"sha": "31f9eb59e568af9c0a74927727f206775ea3da55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFmOWViNTllNTY4YWY5YzBhNzQ5Mjc3MjdmMjA2Nzc1ZWEzZGE1NQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2011-05-18T22:12:28Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2011-05-18T22:12:28Z"}, "message": "Properly handle 256bit load cast.\n\ngcc/\n\n2011-05-18  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/49002\n\t* config/i386/sse.md (avx_<ssemodesuffix><avxsizesuffix>_<ssemodesuffix>):\n\tProperly handle load cast.\n\ngcc/testsuite/\n\n2011-05-18  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/49002\n\t* gcc.target/i386/pr49002-1.c: New test.\n\t* gcc.target/i386/pr49002-2.c: Likewise.\n\nFrom-SVN: r173880", "tree": {"sha": "a0df70dd6edb758bc96b5b93d1c1da01b776c115", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a0df70dd6edb758bc96b5b93d1c1da01b776c115"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31f9eb59e568af9c0a74927727f206775ea3da55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31f9eb59e568af9c0a74927727f206775ea3da55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31f9eb59e568af9c0a74927727f206775ea3da55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31f9eb59e568af9c0a74927727f206775ea3da55/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "137b5a4c6805be8170b1d5e1956d716c69028576", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/137b5a4c6805be8170b1d5e1956d716c69028576", "html_url": "https://github.com/Rust-GCC/gccrs/commit/137b5a4c6805be8170b1d5e1956d716c69028576"}], "stats": {"total": 51, "additions": 47, "deletions": 4}, "files": [{"sha": "c695f9b7998723033a9bb43a2bf8de02beb4b642", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31f9eb59e568af9c0a74927727f206775ea3da55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31f9eb59e568af9c0a74927727f206775ea3da55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=31f9eb59e568af9c0a74927727f206775ea3da55", "patch": "@@ -1,3 +1,9 @@\n+2011-05-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/49002\n+\t* config/i386/sse.md (avx_<ssemodesuffix><avxsizesuffix>_<ssemodesuffix>):\n+\tProperly handle load cast.\n+\n 2011-05-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/49039"}, {"sha": "cf12a6d0c045fa75b2b43ac64c07dc3e46a9c929", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31f9eb59e568af9c0a74927727f206775ea3da55/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31f9eb59e568af9c0a74927727f206775ea3da55/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=31f9eb59e568af9c0a74927727f206775ea3da55", "patch": "@@ -10294,12 +10294,13 @@\n   \"&& reload_completed\"\n   [(const_int 0)]\n {\n+  rtx op0 = operands[0];\n   rtx op1 = operands[1];\n-  if (REG_P (op1))\n+  if (REG_P (op0))\n+    op0 = gen_rtx_REG (<ssehalfvecmode>mode, REGNO (op0));\n+  else \n     op1 = gen_rtx_REG (<MODE>mode, REGNO (op1));\n-  else\n-    op1 = gen_lowpart (<MODE>mode, op1);\n-  emit_move_insn (operands[0], op1);\n+  emit_move_insn (op0, op1);\n   DONE;\n })\n "}, {"sha": "649ac62f6895c97754e12f997dc8ddc15df0a279", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31f9eb59e568af9c0a74927727f206775ea3da55/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31f9eb59e568af9c0a74927727f206775ea3da55/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=31f9eb59e568af9c0a74927727f206775ea3da55", "patch": "@@ -1,3 +1,9 @@\n+2011-05-18  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/49002\n+\t* gcc.target/i386/pr49002-1.c: New test.\n+\t* gcc.target/i386/pr49002-2.c: Likewise.\n+\n 2011-05-18  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/49039"}, {"sha": "7553e8290e5596c2d4eeb150539fd4fee30d9850", "filename": "gcc/testsuite/gcc.target/i386/pr49002-1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31f9eb59e568af9c0a74927727f206775ea3da55/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49002-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31f9eb59e568af9c0a74927727f206775ea3da55/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49002-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49002-1.c?ref=31f9eb59e568af9c0a74927727f206775ea3da55", "patch": "@@ -0,0 +1,16 @@\n+/* PR target/49002 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -mavx\" } */\n+\n+#include <immintrin.h>\n+\n+void foo(const __m128d *from, __m256d *to, int s)\n+{\n+  __m256d var = _mm256_castpd128_pd256(from[0]);\n+  var = _mm256_insertf128_pd(var, from[s], 1);\n+  to[0] = var;\n+}\n+\n+/* Ensure we load into xmm, not ymm.  */\n+/* { dg-final { scan-assembler-not \"vmovapd\\[\\t \\]*\\[^,\\]*,\\[\\t \\]*%ymm\" } } */\n+/* { dg-final { scan-assembler \"vmovapd\\[\\t \\]*\\[^,\\]*,\\[\\t \\]*%xmm\" } } */"}, {"sha": "b0e10091b5ce8530a93f71148c09e2183365819d", "filename": "gcc/testsuite/gcc.target/i386/pr49002-2.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31f9eb59e568af9c0a74927727f206775ea3da55/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49002-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31f9eb59e568af9c0a74927727f206775ea3da55/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49002-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr49002-2.c?ref=31f9eb59e568af9c0a74927727f206775ea3da55", "patch": "@@ -0,0 +1,14 @@\n+/* PR target/49002 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -mavx\" } */\n+\n+#include <immintrin.h>\n+\n+void foo(const __m128d from, __m256d *to)\n+{\n+  *to = _mm256_castpd128_pd256(from);\n+}\n+\n+/* Ensure we store ymm, not xmm.  */\n+/* { dg-final { scan-assembler-not \"vmovapd\\[\\t \\]*%xmm\\[0-9\\]\\+,\\[^,\\]*\" } } */\n+/* { dg-final { scan-assembler \"vmovapd\\[\\t \\]*%ymm\\[0-9\\]\\+,\\[^,\\]*\" } } */"}]}