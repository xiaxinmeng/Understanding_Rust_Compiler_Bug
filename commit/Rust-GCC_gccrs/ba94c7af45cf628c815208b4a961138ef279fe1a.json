{"sha": "ba94c7af45cf628c815208b4a961138ef279fe1a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmE5NGM3YWY0NWNmNjI4YzgxNTIwOGI0YTk2MTEzOGVmMjc5ZmUxYQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-06-11T10:10:08Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2011-06-11T10:10:08Z"}, "message": "i386.md: Use default value in \"isa\" attribute.\n\n\t* config/i386/i386.md: Use default value in \"isa\" attribute.\n\t* config/i386/sse.md: Ditto.\n\t* config/i386/mmx.md: Ditto.\n\nFrom-SVN: r174945", "tree": {"sha": "07973d176bfded88946f9ed3115576c061c7a8f8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07973d176bfded88946f9ed3115576c061c7a8f8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ba94c7af45cf628c815208b4a961138ef279fe1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba94c7af45cf628c815208b4a961138ef279fe1a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ba94c7af45cf628c815208b4a961138ef279fe1a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ba94c7af45cf628c815208b4a961138ef279fe1a/comments", "author": null, "committer": null, "parents": [{"sha": "b5ee9d1c0d9955335e7d8a0cf7653f44d0afb2ab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5ee9d1c0d9955335e7d8a0cf7653f44d0afb2ab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5ee9d1c0d9955335e7d8a0cf7653f44d0afb2ab"}], "stats": {"total": 202, "additions": 136, "deletions": 66}, "files": [{"sha": "204cb4fa9c82692a089d98ea2f591a5a90cc5fe7", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba94c7af45cf628c815208b4a961138ef279fe1a/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba94c7af45cf628c815208b4a961138ef279fe1a/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=ba94c7af45cf628c815208b4a961138ef279fe1a", "patch": "@@ -2151,7 +2151,7 @@\n   [(set (attr \"isa\")\n      (if_then_else (eq_attr \"alternative\" \"9,10,11,12\")\n        (const_string \"noavx\")\n-       (const_string \"base\")))\n+       (const_string \"*\")))\n    (set (attr \"type\")\n      (cond [(eq_attr \"alternative\" \"0,1\")\n \t      (const_string \"multi\")\n@@ -12700,7 +12700,7 @@\n \t   (if_then_else (match_operand:MODEF 3 \"mult_operator\" \"\")\n \t      (const_string \"fmul\")\n \t      (const_string \"fop\"))))\n-   (set_attr \"isa\" \"base,noavx,avx\")\n+   (set_attr \"isa\" \"*,noavx,avx\")\n    (set_attr \"prefix\" \"orig,orig,vex\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n@@ -12760,7 +12760,7 @@\n                  (const_string \"fdiv\")\n               ]\n               (const_string \"fop\")))\n-   (set_attr \"isa\" \"base,base,noavx,avx\")\n+   (set_attr \"isa\" \"*,*,noavx,avx\")\n    (set_attr \"prefix\" \"orig,orig,orig,vex\")\n    (set_attr \"mode\" \"<MODE>\")])\n "}, {"sha": "f3b949ef02a6de3ffa924f56a8065fbcadf0734c", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 55, "deletions": 7, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba94c7af45cf628c815208b4a961138ef279fe1a/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba94c7af45cf628c815208b4a961138ef279fe1a/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=ba94c7af45cf628c815208b4a961138ef279fe1a", "patch": "@@ -85,7 +85,19 @@\n     %vmovq\\t{%1, %0|%0, %1}\n     %vmovd\\t{%1, %0|%0, %1}\n     %vmovd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"imov,imov,mmx,mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,sselog1,ssemov,ssemov,ssemov,ssemov\")\n+  [(set (attr \"type\")\n+     (cond [(eq_attr \"alternative\" \"0,1\")\n+\t      (const_string \"imov\")\n+\t    (eq_attr \"alternative\" \"2\")\n+\t      (const_string \"mmx\")\n+\t    (eq_attr \"alternative\" \"3,4,5\")\n+\t      (const_string \"mmxmov\")\n+\t    (eq_attr \"alternative\" \"6,7\")\n+\t      (const_string \"ssecvt\")\n+\t    (eq_attr \"alternative\" \"8\")\n+\t      (const_string \"sselog1\")\n+\t   ]\n+\t   (const_string \"ssemov\")))\n    (set_attr \"unit\" \"*,*,*,*,*,*,mmx,mmx,*,*,*,*,*\")\n    (set_attr \"prefix_rep\" \"*,*,*,*,*,*,1,1,*,1,*,*,*\")\n    (set_attr \"prefix_data16\" \"*,*,*,*,*,*,*,*,*,*,1,1,1\")\n@@ -125,8 +137,20 @@\n   [(set (attr \"isa\")\n      (if_then_else (eq_attr \"alternative\" \"9,10,11,12\")\n        (const_string \"noavx\")\n-       (const_string \"base\")))\n-   (set_attr \"type\" \"mmx,mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,sselog1,ssemov,ssemov,sselog1,ssemov,ssemov,ssemov,*,*\")\n+       (const_string \"*\")))\n+   (set (attr \"type\")\n+     (cond [(eq_attr \"alternative\" \"0\")\n+\t      (const_string \"mmx\")\n+\t    (eq_attr \"alternative\" \"1,2,3\")\n+\t      (const_string \"mmxmov\")\n+\t    (eq_attr \"alternative\" \"4,5\")\n+\t      (const_string \"ssecvt\")\n+\t    (eq_attr \"alternative\" \"6,9\")\n+\t      (const_string \"sselog1\")\n+\t    (eq_attr \"alternative\" \"13,14\")\n+\t      (const_string \"multi\")\n+\t   ]\n+\t   (const_string \"ssemov\")))\n    (set_attr \"unit\" \"*,*,*,*,mmx,mmx,*,*,*,*,*,*,*,*,*\")\n    (set (attr \"prefix_rep\")\n      (if_then_else\n@@ -179,7 +203,19 @@\n     %vmovlps\\t{%1, %0|%0, %1}\n     %vmovd\\t{%1, %0|%0, %1}\n     %vmovd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"imov,imov,mmx,mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,ssemov,sselog1,ssemov,ssemov,ssemov,ssemov\")\n+  [(set (attr \"type\")\n+     (cond [(eq_attr \"alternative\" \"0,1\")\n+\t      (const_string \"imov\")\n+\t    (eq_attr \"alternative\" \"2\")\n+\t      (const_string \"mmx\")\n+\t    (eq_attr \"alternative\" \"3,4,5\")\n+\t      (const_string \"mmxmov\")\n+\t    (eq_attr \"alternative\" \"6,7\")\n+\t      (const_string \"ssecvt\")\n+\t    (eq_attr \"alternative\" \"9\")\n+\t      (const_string \"sselog1\")\n+\t   ]\n+\t   (const_string \"ssemov\")))\n    (set_attr \"unit\" \"*,*,*,*,*,*,mmx,mmx,*,*,*,*,*,*\")\n    (set_attr \"prefix_rep\" \"*,*,*,*,*,*,1,1,*,*,*,*,*,*\")\n    (set (attr \"length_vex\")\n@@ -214,7 +250,19 @@\n     %vmovlps\\t{%1, %0|%0, %1}\n     #\n     #\"\n-  [(set_attr \"type\" \"mmx,mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,sselog1,ssemov,ssemov,ssemov,*,*\")\n+  [(set (attr \"type\")\n+     (cond [(eq_attr \"alternative\" \"0\")\n+\t      (const_string \"mmx\")\n+\t    (eq_attr \"alternative\" \"1,2,3\")\n+\t      (const_string \"mmxmov\")\n+\t    (eq_attr \"alternative\" \"4,5\")\n+\t      (const_string \"ssecvt\")\n+\t    (eq_attr \"alternative\" \"6\")\n+\t      (const_string \"sselog1\")\n+\t    (eq_attr \"alternative\" \"10,11\")\n+\t      (const_string \"multi\")\n+\t   ]\n+\t   (const_string \"ssemov\")))\n    (set_attr \"unit\" \"*,*,*,*,mmx,mmx,*,*,*,*,*,*\")\n    (set_attr \"prefix_rep\" \"*,*,*,*,1,1,*,*,*,*,*,*\")\n    (set (attr \"prefix\")\n@@ -228,8 +276,8 @@\n   [(set (match_operand:MMXMODE 0 \"nonimmediate_operand\" \"\")\n         (match_operand:MMXMODE 1 \"general_operand\" \"\"))]\n   \"!TARGET_64BIT && reload_completed\n-   && (!MMX_REG_P (operands[0]) && !SSE_REG_P (operands[0]))\n-   && (!MMX_REG_P (operands[1]) && !SSE_REG_P (operands[1]))\"\n+   && !(MMX_REG_P (operands[0]) || SSE_REG_P (operands[0])\n+\t|| MMX_REG_P (operands[1]) || SSE_REG_P (operands[1]))\"\n   [(const_int 0)]\n   \"ix86_split_long_move (operands); DONE;\")\n "}, {"sha": "0dd4c304d67acd60dd1040430bd469f8526c150f", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 78, "deletions": 56, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ba94c7af45cf628c815208b4a961138ef279fe1a/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ba94c7af45cf628c815208b4a961138ef279fe1a/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=ba94c7af45cf628c815208b4a961138ef279fe1a", "patch": "@@ -2792,7 +2792,7 @@\n    movlps\\t{%H2, %0|%0, %H2}\n    vmovlps\\t{%H2, %1, %0|%0, %1, %H2}\n    %vmovhps\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"isa\" \"noavx,avx,noavx,avx,base\")\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx,*\")\n    (set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex\")\n    (set_attr \"mode\" \"V4SF,V4SF,V2SF,V2SF,V2SF\")])\n@@ -2837,7 +2837,7 @@\n    movhps\\t{%2, %0|%0, %2}\n    vmovhps\\t{%2, %1, %0|%0, %1, %2}\n    %vmovlps\\t{%2, %H0|%H0, %2}\"\n-  [(set_attr \"isa\" \"noavx,avx,noavx,avx,base\")\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx,*\")\n    (set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex\")\n    (set_attr \"mode\" \"V4SF,V4SF,V2SF,V2SF,V2SF\")])\n@@ -3200,7 +3200,7 @@\n    movlhps\\t{%2, %0|%0, %2}\n    vmovlhps\\t{%2, %1, %0|%0, %1, %2}\n    %vmovlps\\t{%2, %H0|%H0, %2}\"\n-  [(set_attr \"isa\" \"noavx,avx,noavx,avx,base\")\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx,*\")\n    (set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex\")\n    (set_attr \"mode\" \"V2SF,V2SF,V4SF,V4SF,V2SF\")])\n@@ -3253,7 +3253,7 @@\n    movlps\\t{%2, %0|%0, %2}\n    vmovlps\\t{%2, %1, %0|%0, %1, %2}\n    %vmovlps\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"isa\" \"noavx,avx,noavx,avx,base\")\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx,*\")\n    (set_attr \"type\" \"sselog,sselog,ssemov,ssemov,ssemov\")\n    (set_attr \"length_immediate\" \"1,1,*,*,*\")\n    (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex\")\n@@ -3324,7 +3324,7 @@\n    %vmovss\\t{%1, %0|%0, %1}\n    punpckldq\\t{%2, %0|%0, %2}\n    movd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"isa\" \"noavx,avx,noavx,avx,base,base,base\")\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx,*,*,*\")\n    (set_attr \"type\" \"sselog,sselog,sselog,sselog,ssemov,mmxcvt,mmxmov\")\n    (set_attr \"prefix_data16\" \"*,*,1,*,*,*,*\")\n    (set_attr \"prefix_extra\" \"*,*,1,1,*,*,*\")\n@@ -3378,11 +3378,11 @@\n ;; see comment above inline_secondary_memory_needed function in i386.c\n (define_insn \"vec_set<mode>_0\"\n   [(set (match_operand:VI4F_128 0 \"nonimmediate_operand\"\n-\t  \"=Y4,Y2,Y2,x,x,x,Y4 ,x  ,m,m,m\")\n+\t  \"=Y4,Y2,Y2,x,x,x,Y4 ,x  ,m,m ,m\")\n \t(vec_merge:VI4F_128\n \t  (vec_duplicate:VI4F_128\n \t    (match_operand:<ssescalarmode> 2 \"general_operand\"\n-\t  \" Y4,m ,*r,m,x,x,*rm,*rm,x,*r,fF\"))\n+\t  \" Y4,m ,*r,m,x,x,*rm,*rm,x,fF,*r\"))\n \t  (match_operand:VI4F_128 1 \"vector_move_operand\"\n \t  \" C ,C ,C ,C,0,x,0  ,x  ,0,0 ,0\")\n \t  (const_int 1)))]\n@@ -3399,8 +3399,16 @@\n    #\n    #\n    #\"\n-  [(set_attr \"isa\" \"base,base,base,noavx,noavx,avx,noavx,avx,base,base,base\")\n-   (set_attr \"type\" \"sselog,ssemov,ssemov,ssemov,ssemov,ssemov,sselog,sselog,*,*,*\")\n+  [(set_attr \"isa\" \"*,*,*,noavx,noavx,avx,noavx,avx,*,*,*\")\n+   (set (attr \"type\")\n+     (cond [(eq_attr \"alternative\" \"0,6,7\")\n+\t      (const_string \"sselog\")\n+\t    (eq_attr \"alternative\" \"9\")\n+\t      (const_string \"fmov\")\n+\t    (eq_attr \"alternative\" \"10\")\n+\t      (const_string \"imov\")\n+\t   ]\n+\t   (const_string \"ssemov\")))\n    (set_attr \"prefix_extra\" \"*,*,*,*,*,*,1,1,*,*,*\")\n    (set_attr \"length_immediate\" \"*,*,*,*,*,*,1,1,*,*,*\")\n    (set_attr \"prefix\" \"maybe_vex,maybe_vex,maybe_vex,orig,orig,vex,orig,vex,*,*,*\")\n@@ -3820,7 +3828,7 @@\n    movlpd\\t{%H1, %0|%0, %H1}\n    vmovlpd\\t{%H1, %2, %0|%0, %2, %H1}\n    %vmovhpd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"isa\" \"noavx,avx,base,noavx,avx,base\")\n+  [(set_attr \"isa\" \"noavx,avx,*,noavx,avx,*\")\n   (set_attr \"type\" \"sselog,sselog,sselog,ssemov,ssemov,ssemov\")\n    (set_attr \"prefix_data16\" \"*,*,*,1,*,1\")\n    (set_attr \"prefix\" \"orig,vex,maybe_vex,orig,vex,maybe_vex\")\n@@ -3922,7 +3930,7 @@\n    movhpd\\t{%2, %0|%0, %2}\n    vmovhpd\\t{%2, %1, %0|%0, %1, %2}\n    %vmovlpd\\t{%2, %H0|%H0, %2}\"\n-  [(set_attr \"isa\" \"noavx,avx,base,noavx,avx,base\")\n+  [(set_attr \"isa\" \"noavx,avx,*,noavx,avx,*\")\n    (set_attr \"type\" \"sselog,sselog,sselog,ssemov,ssemov,ssemov\")\n    (set_attr \"prefix_data16\" \"*,*,*,1,*,1\")\n    (set_attr \"prefix\" \"orig,vex,maybe_vex,orig,vex,maybe_vex\")\n@@ -4128,7 +4136,7 @@\n    #\n    #\n    #\"\n-  [(set_attr \"isa\" \"base,noavx,avx,base,base,base\")\n+  [(set_attr \"isa\" \"*,noavx,avx,*,*,*\")\n    (set_attr \"type\" \"ssemov,sselog1,sselog1,ssemov,fmov,imov\")\n    (set (attr \"prefix_data16\")\n      (if_then_else\n@@ -4148,6 +4156,20 @@\n   [(set (match_dup 0) (match_dup 1))]\n   \"operands[1] = adjust_address (operands[1], DFmode, 8);\")\n \n+(define_insn \"*vec_extractv2df_1_sse\"\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=m,x,x\")\n+\t(vec_select:DF\n+\t  (match_operand:V2DF 1 \"nonimmediate_operand\" \"x,x,o\")\n+\t  (parallel [(const_int 1)])))]\n+  \"!TARGET_SSE2 && TARGET_SSE\n+   && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n+  \"@\n+   movhps\\t{%1, %0|%0, %1}\n+   movhlps\\t{%1, %0|%0, %1}\n+   movlps\\t{%H1, %0|%0, %H1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"mode\" \"V2SF,V4SF,V2SF\")])\n+\n ;; Avoid combining registers from different units in a single alternative,\n ;; see comment above inline_secondary_memory_needed function in i386.c\n (define_insn \"sse2_storelpd\"\n@@ -4184,6 +4206,20 @@\n   DONE;\n })\n \n+(define_insn \"*vec_extractv2df_0_sse\"\n+  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=m,x,x\")\n+\t(vec_select:DF\n+\t  (match_operand:V2DF 1 \"nonimmediate_operand\" \"x,x,m\")\n+\t  (parallel [(const_int 0)])))]\n+  \"!TARGET_SSE2 && TARGET_SSE\n+   && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n+  \"@\n+   movlps\\t{%1, %0|%0, %1}\n+   movaps\\t{%1, %0|%0, %1}\n+   movlps\\t{%1, %0|%0, %1}\"\n+  [(set_attr \"type\" \"ssemov\")\n+   (set_attr \"mode\" \"V2SF,V4SF,V2SF\")])\n+\n (define_expand \"sse2_loadhpd_exp\"\n   [(set (match_operand:V2DF 0 \"nonimmediate_operand\" \"\")\n \t(vec_concat:V2DF\n@@ -4225,7 +4261,7 @@\n    #\n    #\n    #\"\n-  [(set_attr \"isa\" \"noavx,avx,noavx,avx,base,base,base\")\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx,*,*,*\")\n    (set_attr \"type\" \"ssemov,ssemov,sselog,sselog,ssemov,fmov,imov\")\n    (set_attr \"prefix_data16\" \"1,*,*,*,*,*,*\")\n    (set_attr \"prefix\" \"orig,vex,orig,vex,*,*,*\")\n@@ -4285,8 +4321,16 @@\n    #\n    #\n    #\"\n-  [(set_attr \"isa\" \"base,noavx,avx,noavx,avx,noavx,noavx,avx,base,base,base\")\n-   (set_attr \"type\" \"ssemov,ssemov,ssemov,ssemov,ssemov,sselog,ssemov,ssemov,ssemov,fmov,imov\")\n+  [(set_attr \"isa\" \"*,noavx,avx,noavx,avx,noavx,noavx,avx,*,*,*\")\n+   (set (attr \"type\")\n+     (cond [(eq_attr \"alternative\" \"5\")\n+\t      (const_string \"sselog\")\n+\t    (eq_attr \"alternative\" \"9\")\n+\t      (const_string \"fmov\")\n+\t    (eq_attr \"alternative\" \"10\")\n+\t      (const_string \"imov\")\n+\t   ]\n+\t   (const_string \"ssemov\")))\n    (set_attr \"prefix_data16\" \"*,1,*,*,*,*,1,*,*,*,*\")\n    (set_attr \"length_immediate\" \"*,*,*,*,*,1,*,*,*,*,*\")\n    (set_attr \"prefix\" \"maybe_vex,orig,vex,orig,vex,orig,orig,vex,*,*,*\")\n@@ -4301,36 +4345,6 @@\n   [(set (match_dup 0) (match_dup 1))]\n   \"operands[0] = adjust_address (operands[0], DFmode, 8);\")\n \n-;; Not sure these two are ever used, but it doesn't hurt to have\n-;; them. -aoliva\n-(define_insn \"*vec_extractv2df_1_sse\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=m,x,x\")\n-\t(vec_select:DF\n-\t  (match_operand:V2DF 1 \"nonimmediate_operand\" \"x,x,o\")\n-\t  (parallel [(const_int 1)])))]\n-  \"!TARGET_SSE2 && TARGET_SSE\n-   && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n-  \"@\n-   movhps\\t{%1, %0|%0, %1}\n-   movhlps\\t{%1, %0|%0, %1}\n-   movlps\\t{%H1, %0|%0, %H1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"V2SF,V4SF,V2SF\")])\n-\n-(define_insn \"*vec_extractv2df_0_sse\"\n-  [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=m,x,x\")\n-\t(vec_select:DF\n-\t  (match_operand:V2DF 1 \"nonimmediate_operand\" \"x,x,m\")\n-\t  (parallel [(const_int 0)])))]\n-  \"!TARGET_SSE2 && TARGET_SSE\n-   && !(MEM_P (operands[0]) && MEM_P (operands[1]))\"\n-  \"@\n-   movlps\\t{%1, %0|%0, %1}\n-   movaps\\t{%1, %0|%0, %1}\n-   movlps\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssemov\")\n-   (set_attr \"mode\" \"V2SF,V4SF,V2SF\")])\n-\n (define_insn \"sse2_movsd\"\n   [(set (match_operand:V2DF 0 \"nonimmediate_operand\"   \"=x,x,x,x,m,x,x,x,o\")\n \t(vec_merge:V2DF\n@@ -4348,8 +4362,12 @@\n    movhps\\t{%H1, %0|%0, %H1}\n    vmovhps\\t{%H1, %2, %0|%0, %2, %H1}\n    %vmovhps\\t{%1, %H0|%H0, %1}\"\n-  [(set_attr \"isa\" \"noavx,avx,noavx,avx,base,noavx,noavx,avx,base\")\n-   (set_attr \"type\" \"ssemov,ssemov,ssemov,ssemov,ssemov,sselog,ssemov,ssemov,ssemov\")\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx,*,noavx,noavx,avx,*\")\n+   (set (attr \"type\")\n+     (if_then_else\n+       (eq_attr \"alternative\" \"5\")\n+       (const_string \"sselog\")\n+       (const_string \"ssemov\")))\n    (set (attr \"prefix_data16\")\n      (if_then_else\n        (and (eq_attr \"alternative\" \"2,4\")\n@@ -4404,8 +4422,12 @@\n    %vmovsd\\t{%1, %0|%0, %1}\n    movlhps\\t{%2, %0|%0, %2}\n    movhps\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"isa\" \"noavx,avx,noavx,avx,base,noavx,noavx\")\n-   (set_attr \"type\" \"sselog,sselog,ssemov,ssemov,ssemov,ssemov,ssemov\")\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx,*,noavx,noavx\")\n+   (set (attr \"type\")\n+     (if_then_else\n+       (eq_attr \"alternative\" \"0,1\")\n+       (const_string \"sselog\")\n+       (const_string \"ssemov\")))\n    (set_attr \"prefix_data16\" \"*,*,1,*,*,*,*\")\n    (set_attr \"prefix\" \"orig,vex,orig,vex,maybe_vex,orig,orig\")\n    (set_attr \"mode\" \"V2DF,V2DF,V1DF,V1DF,DF,V4SF,V2SF\")])\n@@ -6305,7 +6327,7 @@\n    movss\\t{%2, %0|%0, %2}\n    movss\\t{%2, %0|%0, %2}\n    vmovss\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"isa\" \"base,base,noavx,noavx,avx\")\n+  [(set_attr \"isa\" \"*,*,noavx,noavx,avx\")\n    (set_attr \"type\" \"ssemov\")\n    (set_attr \"prefix\" \"maybe_vex,maybe_vex,orig,orig,vex\")\n    (set_attr \"mode\" \"TI,TI,V4SF,SF,SF\")])\n@@ -6393,7 +6415,7 @@\n    vpsrldq\\t{$8, %1, %0|%0, %1, 8}\n    %vmovq\\t{%H1, %0|%0, %H1}\n    mov{q}\\t{%H1, %0|%0, %H1}\"\n-  [(set_attr \"isa\" \"base,noavx,avx,base,base\")\n+  [(set_attr \"isa\" \"*,noavx,avx,*,*\")\n    (set_attr \"type\" \"ssemov,sseishft1,sseishft1,ssemov,imov\")\n    (set_attr \"length_immediate\" \"*,1,1,*,*\")\n    (set_attr \"memory\" \"*,none,none,*,*\")\n@@ -6414,7 +6436,7 @@\n    %vmovq\\t{%H1, %0|%0, %H1}\n    movhlps\\t{%1, %0|%0, %1}\n    movlps\\t{%H1, %0|%0, %H1}\"\n-  [(set_attr \"isa\" \"base,noavx,avx,base,noavx,noavx\")\n+  [(set_attr \"isa\" \"*,noavx,avx,*,noavx,noavx\")\n    (set_attr \"type\" \"ssemov,sseishft1,sseishft1,ssemov,ssemov,ssemov\")\n    (set_attr \"length_immediate\" \"*,1,1,*,*,*\")\n    (set_attr \"memory\" \"*,none,none,*,*,*\")\n@@ -6456,7 +6478,7 @@\n    punpcklqdq\\t%0, %0\n    vpunpcklqdq\\t{%d1, %0|%0, %d1}\n    %vmovddup\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"isa\" \"noavx,avx,base\")\n+  [(set_attr \"isa\" \"noavx,avx,*\")\n    (set_attr \"type\" \"sselog1\")\n    (set_attr \"prefix\" \"orig,vex,maybe_vex\")\n    (set_attr \"mode\" \"TI,TI,DF\")])\n@@ -6486,7 +6508,7 @@\n    %vmovd\\t{%1, %0|%0, %1}\n    punpckldq\\t{%2, %0|%0, %2}\n    movd\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"isa\" \"noavx,avx,noavx,avx,base,base,base\")\n+  [(set_attr \"isa\" \"noavx,avx,noavx,avx,*,*,*\")\n    (set_attr \"type\" \"sselog,sselog,sselog,sselog,ssemov,mmxcvt,mmxmov\")\n    (set_attr \"prefix_extra\" \"1,1,*,*,*,*,*\")\n    (set_attr \"length_immediate\" \"1,1,*,*,*,*,*\")\n@@ -6561,7 +6583,7 @@\n    vpunpcklqdq\\t{%2, %1, %0|%0, %1, %2}\n    movhps\\t{%2, %0|%0, %2}\n    vmovhps\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"isa\" \"noavx,avx,base,base,base,noavx,avx,noavx,avx\")\n+  [(set_attr \"isa\" \"noavx,avx,*,*,*,noavx,avx,noavx,avx\")\n    (set (attr \"type\")\n      (if_then_else\n        (eq_attr \"alternative\" \"0,1,5,6\")\n@@ -6592,7 +6614,7 @@\n    movlhps\\t{%2, %0|%0, %2}\n    movhps\\t{%2, %0|%0, %2}\n    vmovhps\\t{%2, %1, %0|%0, %1, %2}\"\n-  [(set_attr \"isa\" \"base,base,noavx,avx,noavx,noavx,avx\")\n+  [(set_attr \"isa\" \"*,*,noavx,avx,noavx,noavx,avx\")\n    (set_attr \"type\" \"ssemov,ssemov,sselog,sselog,ssemov,ssemov,ssemov\")\n    (set_attr \"prefix\" \"maybe_vex,orig,orig,vex,orig,orig,vex\")\n    (set_attr \"mode\" \"TI,TI,TI,TI,V4SF,V2SF,V2SF\")])"}]}