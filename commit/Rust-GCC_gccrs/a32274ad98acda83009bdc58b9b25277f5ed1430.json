{"sha": "a32274ad98acda83009bdc58b9b25277f5ed1430", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTMyMjc0YWQ5OGFjZGE4MzAwOWJkYzU4YjliMjUyNzdmNWVkMTQzMA==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2001-12-13T21:37:27Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2001-12-13T21:37:27Z"}, "message": "toplev.c (process_options, [...]): Set flag_no_inline before the post_options hook.\n\n\t* toplev.c (process_options, parse_options_and_default_flags):\n\tSet flag_no_inline before the post_options hook.\n\nFrom-SVN: r47979", "tree": {"sha": "1a33e025054d68b903323ee48a34af95000af959", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1a33e025054d68b903323ee48a34af95000af959"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a32274ad98acda83009bdc58b9b25277f5ed1430", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a32274ad98acda83009bdc58b9b25277f5ed1430", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a32274ad98acda83009bdc58b9b25277f5ed1430", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a32274ad98acda83009bdc58b9b25277f5ed1430/comments", "author": null, "committer": null, "parents": [{"sha": "4a78c78760016fe03c0d578ece9a5cfee8a672fd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a78c78760016fe03c0d578ece9a5cfee8a672fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a78c78760016fe03c0d578ece9a5cfee8a672fd"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "48d94fbaa87e37472b2e56336c4ee42a61c5be25", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a32274ad98acda83009bdc58b9b25277f5ed1430/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a32274ad98acda83009bdc58b9b25277f5ed1430/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a32274ad98acda83009bdc58b9b25277f5ed1430", "patch": "@@ -1,3 +1,8 @@\n+2001-12-13  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* toplev.c (process_options, parse_options_and_default_flags):\n+\tSet flag_no_inline before the post_options hook.\n+\n 2001-12-13  Richard Henderson  <rth@redhat.com>\n \n \t* emit-rtl.c (adjust_address_1): Don't adjust address if adjust"}, {"sha": "6a682ea50d126043ffcedae3bc54f0f9e7c6afc6", "filename": "gcc/toplev.c", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a32274ad98acda83009bdc58b9b25277f5ed1430/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a32274ad98acda83009bdc58b9b25277f5ed1430/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=a32274ad98acda83009bdc58b9b25277f5ed1430", "patch": "@@ -4762,15 +4762,11 @@ parse_options_and_default_flags (argc, argv)\n \t}\n     }\n \n-  /* All command line options have been parsed; allow the front end to\n-     perform consistency checks, etc.  */\n-  (*lang_hooks.post_options) ();\n-}\n-\f\n-/* Process the options that have been parsed.  */\n-static void\n-process_options ()\n-{\n+  /* Set flag_no_inline before the post_options () hook.  The C front\n+     ends use it to determine tree inlining defaults.  FIXME: such\n+     code should be lang-independent when all front ends use tree\n+     inlining, in which case it, and this condition, should be moved\n+     to the top of process_options() instead.  */\n   if (optimize == 0)\n     {\n       /* Inlining does not work if not optimizing,\n@@ -4785,6 +4781,15 @@ process_options ()\n \twarning (\"-Wuninitialized is not supported without -O\");\n     }\n \n+  /* All command line options have been parsed; allow the front end to\n+     perform consistency checks, etc.  */\n+  (*lang_hooks.post_options) ();\n+}\n+\f\n+/* Process the options that have been parsed.  */\n+static void\n+process_options ()\n+{\n #ifdef OVERRIDE_OPTIONS\n   /* Some machines may reject certain combinations of options.  */\n   OVERRIDE_OPTIONS;"}]}