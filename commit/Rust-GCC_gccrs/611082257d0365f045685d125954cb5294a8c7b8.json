{"sha": "611082257d0365f045685d125954cb5294a8c7b8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjExMDgyMjU3ZDAzNjVmMDQ1Njg1ZDEyNTk1NGNiNTI5NGE4YzdiOA==", "commit": {"author": {"name": "Georg-Johann Lay", "email": "avr@gjlay.de", "date": "2012-03-07T10:36:30Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2012-03-07T10:36:30Z"}, "message": "re PR target/52505 ([avr]: __memx address space reading unintentionally from RAM)\n\nlibgcc/\n\tPR target/52505\n\t* config/avr/lib1funcs.S (__xload_1): Don't read unintentionally\n\tfrom RAM.\n\ngcc/\n\tPR target/52505\n\t* config/avr/avr.c (avr_out_xload): Don't read unintentionally\n\tfrom RAM.\n\t* config/avr/avr.md (xload_8): Adjust insn length.\n\nFrom-SVN: r185031", "tree": {"sha": "d974173fcc910f559c632ce71aa04b29bba151f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d974173fcc910f559c632ce71aa04b29bba151f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/611082257d0365f045685d125954cb5294a8c7b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/611082257d0365f045685d125954cb5294a8c7b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/611082257d0365f045685d125954cb5294a8c7b8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/611082257d0365f045685d125954cb5294a8c7b8/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b30e10aba7ee054286393da539d4fc4f534b5b5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b30e10aba7ee054286393da539d4fc4f534b5b5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b30e10aba7ee054286393da539d4fc4f534b5b5b"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "baac09c0dcb273a4050845601f3785d0968290cf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/611082257d0365f045685d125954cb5294a8c7b8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/611082257d0365f045685d125954cb5294a8c7b8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=611082257d0365f045685d125954cb5294a8c7b8", "patch": "@@ -1,3 +1,10 @@\n+2012-03-07  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/52505\n+\t* config/avr/avr.c (avr_out_xload): Don't read unintentionally\n+\tfrom RAM.\n+\t* config/avr/avr.md (xload_8): Adjust insn length.\n+\n 2012-03-07  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/52461"}, {"sha": "87b7e0953da8a8494dceef858eff4b097e76e614", "filename": "gcc/config/avr/avr.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/611082257d0365f045685d125954cb5294a8c7b8/gcc%2Fconfig%2Favr%2Favr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/611082257d0365f045685d125954cb5294a8c7b8/gcc%2Fconfig%2Favr%2Favr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.c?ref=611082257d0365f045685d125954cb5294a8c7b8", "patch": "@@ -2789,8 +2789,9 @@ avr_out_xload (rtx insn ATTRIBUTE_UNUSED, rtx *op, int *plen)\n   if (plen)\n     *plen = 0;\n \n-  avr_asm_len (\"ld %3,%a2\" CR_TAB\n-               \"sbrs %1,7\", xop, plen, 2);\n+  avr_asm_len (\"sbrc %1,7\" CR_TAB\n+               \"ld %3,%a2\" CR_TAB\n+               \"sbrs %1,7\", xop, plen, 3);\n \n   avr_asm_len (AVR_HAVE_LPMX ? \"lpm %3,%a2\" : \"lpm\", xop, plen, 1);\n "}, {"sha": "9a208ee0685b6b1868e5d51015424d5130f6c036", "filename": "gcc/config/avr/avr.md", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/611082257d0365f045685d125954cb5294a8c7b8/gcc%2Fconfig%2Favr%2Favr.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/611082257d0365f045685d125954cb5294a8c7b8/gcc%2Fconfig%2Favr%2Favr.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Favr%2Favr.md?ref=611082257d0365f045685d125954cb5294a8c7b8", "patch": "@@ -363,6 +363,11 @@\n ;;========================================================================\n ;; Move stuff around\n \n+;; \"loadqi_libgcc\"\n+;; \"loadhi_libgcc\"\n+;; \"loadpsi_libgcc\"    \n+;; \"loadsi_libgcc\"    \n+;; \"loadsf_libgcc\"    \n (define_expand \"load<mode>_libgcc\"\n   [(set (match_dup 3)\n         (match_dup 2))\n@@ -377,7 +382,12 @@\n     operands[1] = replace_equiv_address (operands[1], operands[3]);\n     set_mem_addr_space (operands[1], ADDR_SPACE_FLASH);\n   })\n-    \n+\n+;; \"load_qi_libgcc\"\n+;; \"load_hi_libgcc\"\n+;; \"load_psi_libgcc\"    \n+;; \"load_si_libgcc\"    \n+;; \"load_sf_libgcc\"    \n (define_insn \"load_<mode>_libgcc\"\n   [(set (reg:MOVMODE 22)\n         (match_operand:MOVMODE 0 \"memory_operand\" \"m,m\"))]\n@@ -418,6 +428,11 @@\n     DONE;\n   })\n \n+;; \"xloadqi_A\"\n+;; \"xloadhi_A\"\n+;; \"xloadpsi_A\"\n+;; \"xloadsi_A\"\n+;; \"xloadsf_A\"\n (define_insn_and_split \"xload<mode>_A\"\n   [(set (match_operand:MOVMODE 0 \"register_operand\" \"=r\")\n         (match_operand:MOVMODE 1 \"memory_operand\"    \"m\"))\n@@ -461,7 +476,7 @@\n   {\n     return avr_out_xload (insn, operands, NULL);\n   }\n-  [(set_attr \"length\" \"3,4\")\n+  [(set_attr \"length\" \"4,4\")\n    (set_attr \"adjust_len\" \"*,xload\")\n    (set_attr \"isa\" \"lpmx,lpm\")\n    (set_attr \"cc\" \"none\")])"}, {"sha": "950242437324c35894db51ca703418f0b893501a", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/611082257d0365f045685d125954cb5294a8c7b8/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/611082257d0365f045685d125954cb5294a8c7b8/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=611082257d0365f045685d125954cb5294a8c7b8", "patch": "@@ -1,3 +1,9 @@\n+2012-03-07  Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/52505\n+\t* config/avr/lib1funcs.S (__xload_1): Don't read unintentionally\n+\tfrom RAM.\n+\n 2012-03-07  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR target/52461"}, {"sha": "6e6c390059b58d64b3354113e6958a54ee49c51a", "filename": "libgcc/config/avr/lib1funcs.S", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/611082257d0365f045685d125954cb5294a8c7b8/libgcc%2Fconfig%2Favr%2Flib1funcs.S", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/611082257d0365f045685d125954cb5294a8c7b8/libgcc%2Fconfig%2Favr%2Flib1funcs.S", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfig%2Favr%2Flib1funcs.S?ref=611082257d0365f045685d125954cb5294a8c7b8", "patch": "@@ -2131,6 +2131,7 @@ ENDF __load_4\n #if defined (L_xload_1)\n DEFUN __xload_1\n #if defined (__AVR_HAVE_LPMX__) && !defined (__AVR_HAVE_ELPM__)\n+    sbrc    HHI8, 7\n     ld      D0, Z\n     sbrs    HHI8, 7\n     lpm     D0, Z"}]}