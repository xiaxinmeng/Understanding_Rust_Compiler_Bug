{"sha": "96a9c44f09cf8eec4ebf9469b32ab187d113f9af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTZhOWM0NGYwOWNmOGVlYzRlYmY5NDY5YjMyYWIxODdkMTEzZjlhZg==", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@gnat.com", "date": "2001-12-10T12:04:24Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-12-10T12:04:24Z"}, "message": "Makefile.in: Add $(OUTPUT_OPTION) to compilation rules.\n\n\t* Makefile.in: Add $(OUTPUT_OPTION) to compilation rules.\n\t* intl/Makefile.in (OUTPUT_OPTION): Add configure variable.\n\t(.c.o): Add $(OUTPUT_OPTION).\n\t* java/Make-lang.in (jvspec.o): Add $(OUTPUT_OPTION).\n\nFrom-SVN: r47843", "tree": {"sha": "243149406837ee5a56c4900e17959d1e6fb3df66", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/243149406837ee5a56c4900e17959d1e6fb3df66"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/96a9c44f09cf8eec4ebf9469b32ab187d113f9af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96a9c44f09cf8eec4ebf9469b32ab187d113f9af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/96a9c44f09cf8eec4ebf9469b32ab187d113f9af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/96a9c44f09cf8eec4ebf9469b32ab187d113f9af/comments", "author": null, "committer": null, "parents": [{"sha": "01342a36d36f6d680c87eb6162b0746b02173e46", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01342a36d36f6d680c87eb6162b0746b02173e46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01342a36d36f6d680c87eb6162b0746b02173e46"}], "stats": {"total": 108, "additions": 64, "deletions": 44}, "files": [{"sha": "5aca6b552575e206f4461c3c963ecb9073a7d6b4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a9c44f09cf8eec4ebf9469b32ab187d113f9af/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a9c44f09cf8eec4ebf9469b32ab187d113f9af/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=96a9c44f09cf8eec4ebf9469b32ab187d113f9af", "patch": "@@ -10,6 +10,8 @@ Mon Dec 10 06:15:44 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n Mon Dec 10 06:09:57 2001  Douglas B. Rupp  <rupp@gnat.com>\n \n+\t* Makefile.in: Add $(OUTPUT_OPTION) to compilation rules.\n+\n \t* config.gcc (alpha*-dec-vms*): Change to alpha*-dec-*vms*\n \t(exeext, target_alias, prefix, local_prefix): Define.\n \t* config/alpha/x-vms (USE_COLLECT2): Make empty."}, {"sha": "a5eeab09a5e4282c62b888a314e6b0d371c8f86c", "filename": "gcc/Makefile.in", "status": "modified", "additions": 50, "deletions": 42, "changes": 92, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a9c44f09cf8eec4ebf9469b32ab187d113f9af/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a9c44f09cf8eec4ebf9469b32ab187d113f9af/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=96a9c44f09cf8eec4ebf9469b32ab187d113f9af", "patch": "@@ -1129,7 +1129,8 @@ c-errors.o: c-errors.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(C_TREE_H) flags.h \\\n     diagnostic.h $(TM_P_H)\n c-parse.o : $(srcdir)/c-parse.c $(CONFIG_H) $(TREE_H) c-lex.h $(GGC_H) intl.h \\\n     $(C_TREE_H) input.h flags.h $(SYSTEM_H) toplev.h output.h $(CPPLIB_H)\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c $(srcdir)/c-parse.c\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n+\t       -c $(srcdir)/c-parse.c $(OUTPUT_OPTION)\n \n $(srcdir)/c-parse.c: $(srcdir)/c-parse.y\n \t(cd $(srcdir) && $(BISON) $(BISONFLAGS) -o c-p$$$$.c c-parse.y && \\\n@@ -1179,7 +1180,7 @@ collect2.o : collect2.c $(CONFIG_H) $(SYSTEM_H) gstab.h intl.h \\\n \t$(OBSTACK_H) $(DEMANGLE_H) collect2.h version.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES)  \\\n \t-DTARGET_MACHINE=\\\"$(target_alias)\\\" \\\n-\t-c $(srcdir)/collect2.c\n+\t-c $(srcdir)/collect2.c $(OUTPUT_OPTION)\n \n tlink.o: tlink.c $(DEMANGLE_H) hash.h $(CONFIG_H) $(SYSTEM_H) collect2.h intl.h\n hash.o: hash.c hash.h $(SYSTEM_H) toplev.h $(GCONFIG_H)\n@@ -1238,14 +1239,14 @@ gcc.o: gcc.c $(CONFIG_H) $(SYSTEM_H) intl.h multilib.h \\\n \tSHLIB_MULTILIB='$(SHLIB_MULTILIB)'; \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n   $(DRIVER_DEFINES) \\\n-  -c $(srcdir)/gcc.c)\n+  -c $(srcdir)/gcc.c $(OUTPUT_OPTION))\n \n gccspec.o: gccspec.c $(CONFIG_H) $(SYSTEM_H) $(GCC_H)\n \t(SHLIB_LINK='$(SHLIB_LINK)' \\\n \tSHLIB_MULTILIB='$(SHLIB_MULTILIB)'; \\\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n   $(DRIVER_DEFINES) \\\n-  -c $(srcdir)/gccspec.c)\n+  -c $(srcdir)/gccspec.c $(OUTPUT_OPTION))\n \n cppspec.o: cppspec.c $(CONFIG_H) $(SYSTEM_H) $(GCC_H)\n \n@@ -1262,7 +1263,7 @@ gencheck$(build_exeext) : gencheck.o $(HOST_LIBDEPS)\n gencheck.o : gencheck.c gencheck.h tree.def $(HCONFIG_H) $(SYSTEM_H) \\\n              $(lang_tree_files)\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n-\t  $(srcdir)/gencheck.c\n+\t  $(srcdir)/gencheck.c $(OUTPUT_OPTION)\n \n dumpvers: dumpvers.c\n \n@@ -1290,7 +1291,7 @@ ggc-none.o: ggc-none.c $(GCONFIG_H) $(SYSTEM_H) $(GGC_H)\n prefix.o: prefix.c $(CONFIG_H) $(SYSTEM_H) Makefile prefix.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t-DPREFIX=\\\"$(prefix)\\\" \\\n-\t  -c $(srcdir)/prefix.c\n+\t  -c $(srcdir)/prefix.c $(OUTPUT_OPTION)\n \n convert.o: convert.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) flags.h convert.h toplev.h\n \n@@ -1323,7 +1324,7 @@ toplev.o : toplev.c $(CONFIG_H) $(SYSTEM_H) $(TREE_H) $(RTL_H) function.h \\\n    langhooks.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  -DTARGET_NAME=\\\"$(target_alias)\\\" \\\n-\t  -c $(srcdir)/toplev.c\n+\t  -c $(srcdir)/toplev.c $(OUTPUT_OPTION)\n main.o : main.c $(CONFIG_H) $(SYSTEM_H) toplev.h\n \n rtl-error.o: rtl-error.c system.h $(RTL_H) $(INSN_ATTR_H) insn-config.h \\\n@@ -1629,7 +1630,8 @@ s-constants : $(md_file) genconstants$(build_exeext) $(srcdir)/move-if-change\n insn-emit.o : insn-emit.c $(CONFIG_H) $(RTL_H) $(EXPR_H) real.h output.h \\\n   insn-config.h $(OPTABS_H) $(SYSTEM_H) reload.h $(RECOG_H) toplev.h \\\n   function.h flags.h hard-reg-set.h resource.h $(TM_P_H)\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-emit.c\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-emit.c \\\n+\t  $(OUTPUT_OPTION)\n \n insn-emit.c: s-emit ; @true\n s-emit : $(md_file) genemit$(build_exeext) $(srcdir)/move-if-change\n@@ -1640,7 +1642,8 @@ s-emit : $(md_file) genemit$(build_exeext) $(srcdir)/move-if-change\n insn-recog.o : insn-recog.c $(CONFIG_H) $(RTL_H) insn-config.h $(RECOG_H) \\\n   real.h output.h flags.h $(SYSTEM_H) function.h hard-reg-set.h resource.h \\\n   $(TM_P_H) toplev.h reload.h\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-recog.c\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-recog.c \\\n+\t  $(OUTPUT_OPTION)\n \n insn-recog.c: s-recog ; @true\n s-recog : $(md_file) genrecog$(build_exeext) $(srcdir)/move-if-change\n@@ -1650,7 +1653,8 @@ s-recog : $(md_file) genrecog$(build_exeext) $(srcdir)/move-if-change\n \n insn-opinit.o : insn-opinit.c $(CONFIG_H) $(RTL_H) \\\n   insn-config.h flags.h $(RECOG_H) $(EXPR_H) $(OPTABS_H) reload.h $(SYSTEM_H)\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-opinit.c\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-opinit.c \\\n+\t  $(OUTPUT_OPTION)\n \n insn-opinit.c: s-opinit ; @true\n s-opinit : $(md_file) genopinit$(build_exeext) $(srcdir)/move-if-change\n@@ -1660,7 +1664,8 @@ s-opinit : $(md_file) genopinit$(build_exeext) $(srcdir)/move-if-change\n \n insn-extract.o : insn-extract.c $(CONFIG_H) $(RTL_H) $(SYSTEM_H) toplev.h \\\n   insn-config.h $(RECOG_H)\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-extract.c\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-extract.c \\\n+\t  $(OUTPUT_OPTION)\n \n insn-extract.c: s-extract ; @true\n s-extract : $(md_file) genextract$(build_exeext) $(srcdir)/move-if-change\n@@ -1670,7 +1675,8 @@ s-extract : $(md_file) genextract$(build_exeext) $(srcdir)/move-if-change\n \n insn-peep.o : insn-peep.c $(CONFIG_H) $(RTL_H) $(REGS_H) output.h real.h \\\n \t$(SYSTEM_H) insn-config.h $(RECOG_H) except.h function.h $(TM_P_H)\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-peep.c\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-peep.c \\\n+\t  $(OUTPUT_OPTION)\n \n insn-peep.c: s-peep ; @true\n s-peep : $(md_file) genpeep$(build_exeext) $(srcdir)/move-if-change\n@@ -1681,7 +1687,8 @@ s-peep : $(md_file) genpeep$(build_exeext) $(srcdir)/move-if-change\n insn-attrtab.o : insn-attrtab.c $(CONFIG_H) $(RTL_H) $(REGS_H) real.h \\\n     output.h $(INSN_ATTR_H) insn-config.h $(SYSTEM_H) toplev.h $(RECOG_H) \\\n \t$(TM_P_H) flags.h\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-attrtab.c\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-attrtab.c \\\n+\t  $(OUTPUT_OPTION)\n \n insn-attr.h: s-attr ; @true\n s-attr : $(md_file) genattr$(build_exeext) $(srcdir)/move-if-change\n@@ -1699,7 +1706,8 @@ insn-output.o : insn-output.c $(CONFIG_H) $(RTL_H) $(GGC_H) $(REGS_H) real.h \\\n     conditions.h hard-reg-set.h insn-config.h $(INSN_ATTR_H) $(EXPR_H) \\\n     output.h $(RECOG_H) function.h $(SYSTEM_H) toplev.h flags.h \\\n     insn-codes.h $(TM_P_H)\n-\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-output.c\n+\t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) -c insn-output.c \\\n+\t  $(OUTPUT_OPTION)\n \n insn-output.c: s-output ; @true\n s-output : $(md_file) genoutput$(build_exeext) $(srcdir)/move-if-change\n@@ -1738,116 +1746,116 @@ s-preds: genpreds$(build_exeext) $(srcdir)/move-if-change\n \n read-rtl.o: read-rtl.c $(HCONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n   $(OBSTACK_H) $(HASHTAB_H)\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/read-rtl.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/read-rtl.c $(OUTPUT_OPTION)\n \n gensupport.o: gensupport.c $(RTL_H) $(OBSTACK_H) $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gensupport.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gensupport.c $(OUTPUT_OPTION)\n \n genconfig$(build_exeext) : genconfig.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t  genconfig.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genconfig.o : genconfig.c $(RTL_H) $(HCONFIG_H) \\\n   $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genconfig.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genconfig.c $(OUTPUT_OPTION)\n \n genflags$(build_exeext) : genflags.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genflags.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genflags.o : genflags.c $(RTL_H) $(OBSTACK_H) $(HCONFIG_H) \\\n   $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genflags.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genflags.c $(OUTPUT_OPTION)\n \n gencodes$(build_exeext) : gencodes.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t gencodes.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n gencodes.o : gencodes.c $(RTL_H) $(HCONFIG_H) \\\n   $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gencodes.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gencodes.c $(OUTPUT_OPTION)\n \n genconstants$(build_exeext) : genconstants.o $(HOST_RTL) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genconstants.o $(HOST_RTL) $(HOST_ERRORS) $(HOST_LIBS)\n \n genconstants.o : genconstants.c $(RTL_H) $(HCONFIG_H) $(SYSTEM_H) errors.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genconstants.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genconstants.c $(OUTPUT_OPTION)\n \n genemit$(build_exeext) : genemit.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genemit.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genemit.o : genemit.c $(RTL_H) $(HCONFIG_H) $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genemit.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genemit.c $(OUTPUT_OPTION)\n \n genopinit$(build_exeext) : genopinit.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genopinit.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genopinit.o : genopinit.c $(RTL_H) $(HCONFIG_H) \\\n   $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genopinit.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genopinit.c $(OUTPUT_OPTION)\n \n genrecog$(build_exeext) : genrecog.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genrecog.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genrecog.o : genrecog.c $(RTL_H) $(HCONFIG_H) \\\n   $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genrecog.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genrecog.c $(OUTPUT_OPTION)\n \n genextract$(build_exeext) : genextract.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genextract.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genextract.o : genextract.c $(RTL_H) $(HCONFIG_H) \\\n   $(SYSTEM_H) insn-config.h errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genextract.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genextract.c $(OUTPUT_OPTION)\n \n genpeep$(build_exeext) : genpeep.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genpeep.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genpeep.o : genpeep.c $(RTL_H) $(HCONFIG_H) $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genpeep.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genpeep.c $(OUTPUT_OPTION)\n \n genattr$(build_exeext) : genattr.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genattr.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genattr.o : genattr.c $(RTL_H) $(HCONFIG_H) $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genattr.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genattr.c $(OUTPUT_OPTION)\n \n genattrtab$(build_exeext) : genattrtab.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genattrtab.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genattrtab.o : genattrtab.c $(RTL_H) $(OBSTACK_H) $(HCONFIG_H) \\\n   $(SYSTEM_H) errors.h $(GGC_H) gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genattrtab.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genattrtab.c $(OUTPUT_OPTION)\n \n genoutput$(build_exeext) : genoutput.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genoutput.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_LIBS)\n \n genoutput.o : genoutput.c $(RTL_H) $(HCONFIG_H) \\\n   $(SYSTEM_H) errors.h gensupport.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genoutput.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genoutput.c $(OUTPUT_OPTION)\n \n gengenrtl$(build_exeext) : gengenrtl.o $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t gengenrtl.o $(HOST_LIBS)\n \n gengenrtl.o : gengenrtl.c $(RTL_BASE_H) $(HCONFIG_H) $(SYSTEM_H) real.h\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gengenrtl.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gengenrtl.c $(OUTPUT_OPTION)\n \n genpreds$(build_exeext) : genpreds.o $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n \t genpreds.o $(HOST_LIBS)\n \n genpreds.o : genpreds.c $(RTL_BASE_H) $(HCONFIG_H) $(SYSTEM_H)\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genpreds.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genpreds.c $(OUTPUT_OPTION)\n \n #\f\n # Compile the libraries to be used by gen*.\n@@ -1858,36 +1866,36 @@ $(HOST_PREFIX_1)rtl.o: $(srcdir)/rtl.c $(HCONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n   real.h $(GGC_H) errors.h\n \trm -f $(HOST_PREFIX)rtl.c\n \tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/rtl.c > $(HOST_PREFIX)rtl.c\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)rtl.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)rtl.c $(OUTPUT_OPTION)\n \n $(HOST_PREFIX_1)print-rtl.o: $(srcdir)/print-rtl.c $(HCONFIG_H) \\\n   $(RTL_H) $(TREE_H) hard-reg-set.h $(BASIC_BLOCK_H)\n \trm -f $(HOST_PREFIX)print-rtl.c\n \tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/print-rtl.c > $(HOST_PREFIX)print-rtl.c\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)print-rtl.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)print-rtl.c $(OUTPUT_OPTION)\n \n $(HOST_PREFIX_1)bitmap.o: $(srcdir)/bitmap.c $(HCONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n   flags.h $(BASIC_BLOCK_H) $(REGS_H)\n \trm -f $(HOST_PREFIX)bitmap.c\n \tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/bitmap.c > $(HOST_PREFIX)bitmap.c\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)bitmap.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)bitmap.c $(OUTPUT_OPTION)\n \n $(HOST_PREFIX_1)errors.o: errors.c $(HCONFIG_H) $(SYSTEM_H) errors.h\n \trm -f $(HOST_PREFIX)errors.c\n \tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/errors.c > $(HOST_PREFIX)errors.c\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)errors.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)errors.c $(OUTPUT_OPTION)\n \n $(HOST_PREFIX_1)ggc-none.o: ggc-none.c $(HCONFIG_H) $(SYSTEM_H) $(GCC_H)\n \trm -f $(HOST_PREFIX)ggc-none.c\n \tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/ggc-none.c > $(HOST_PREFIX)ggc-none.c\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)ggc-none.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)ggc-none.c $(OUTPUT_OPTION)\n \n #\f\n # Remake internationalization support.\n intl.o: intl.c $(CONFIG_H) system.h intl.h Makefile\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  -DLOCALEDIR=\\\"$(localedir)\\\" \\\n-\t  -c $(srcdir)/intl.c\n+\t  -c $(srcdir)/intl.c $(OUTPUT_OPTION)\n \n $(top_builddir)/intl/libintl.a: intl.all\n \n@@ -1953,7 +1961,7 @@ cppinit.o:  cppinit.c  $(CONFIG_H) $(LIBCPP_DEPS) cppdefault.h \\\n cppdefault.o: cppdefault.c $(CONFIG_H) $(SYSTEM_H) cppdefault.h Makefile\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t  $(PREPROCESSOR_DEFINES) \\\n-\t  -c $(srcdir)/cppdefault.c\n+\t  -c $(srcdir)/cppdefault.c $(OUTPUT_OPTION)\n \n mkdeps.o: mkdeps.c $(CONFIG_H) $(SYSTEM_H) mkdeps.h\n \n@@ -2158,10 +2166,10 @@ gen-protos$(build_exeext): $(GEN_PROTOS_OBJS)\n \t  $(GEN_PROTOS_OBJS) $(HOST_LIBS)\n \n gen-protos.o: gen-protos.c scan.h $(HCONFIG_H) $(SYSTEM_H)\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gen-protos.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/gen-protos.c $(OUTPUT_OPTION)\n \n scan.o: scan.c scan.h $(HCONFIG_H) $(SYSTEM_H)\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/scan.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/scan.c $(OUTPUT_OPTION)\n \n xsys-protos.h: $(GCC_PASSES) $(srcdir)/sys-protos.h deduced.h gen-protos$(build_exeext) Makefile\n \tsed -e s/TARGET_GETGROUPS_T/$(TARGET_GETGROUPS_T)/ \\\n@@ -2182,10 +2190,10 @@ fix-header$(build_exeext): fix-header.o scan-decls.o scan.o xsys-protos.h \\\n \n fix-header.o: fix-header.c $(OBSTACK_H) scan.h \\\n \txsys-protos.h $(HCONFIG_H) $(SYSTEM_H) $(CPPLIB_H)\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/fix-header.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/fix-header.c $(OUTPUT_OPTION)\n \n scan-decls.o: scan-decls.c scan.h $(CPPLIB_H) $(HCONFIG_H) $(SYSTEM_H)\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/scan-decls.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/scan-decls.c $(OUTPUT_OPTION)\n \n # stmp-fixproto depends on this, not on fix-header directly.\n # The idea is to make sure fix-header gets built,\n@@ -3274,7 +3282,7 @@ enquire.o: $(srcdir)/enquire.c $(GCC_PASSES) stmp-int-hdrs\n \tfi; \\\n \t$(GCC_FOR_TARGET) $(GCC_CFLAGS) $(ALL_CPPFLAGS) $(ENQUIRE_CFLAGS) \\\n \t  -DSYS_FLOAT_H_WRAP=$$SYS_FLOAT_H_WRAP \\\n-\t  -I. -c $(srcdir)/enquire.c\n+\t  -I. -c $(srcdir)/enquire.c $(OUTPUT_OPTION)\n \n # Create float.h source for the native machine.\n # Make it empty if we can use the system float.h without changes."}, {"sha": "b6d399a728c8fd7cd12d250b3473f6d5d1bc05e7", "filename": "gcc/intl/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a9c44f09cf8eec4ebf9469b32ab187d113f9af/gcc%2Fintl%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a9c44f09cf8eec4ebf9469b32ab187d113f9af/gcc%2Fintl%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintl%2FChangeLog?ref=96a9c44f09cf8eec4ebf9469b32ab187d113f9af", "patch": "@@ -1,3 +1,8 @@\n+Mon Dec 10 06:09:57 2001  Douglas B. Rupp  <rupp@gnat.com>\n+\n+\t* Makefile.in (OUTPUT_OPTION): Add configure variable.\n+\t(.c.o): Add $(OUTPUT_OPTION).\n+\n 2001-11-03  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* l10nflist.c (_nl_normalize_codeset): Cast argument of ctype"}, {"sha": "94d7576a5628096396ba1959de9cc957c116b0ee", "filename": "gcc/intl/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a9c44f09cf8eec4ebf9469b32ab187d113f9af/gcc%2Fintl%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a9c44f09cf8eec4ebf9469b32ab187d113f9af/gcc%2Fintl%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintl%2FMakefile.in?ref=96a9c44f09cf8eec4ebf9469b32ab187d113f9af", "patch": "@@ -43,6 +43,7 @@ MKINSTALLDIRS = @MKINSTALLDIRS@\n mkinstalldirs = $(SHELL) `case \"$(MKINSTALLDIRS)\" in /*) echo \"$(MKINSTALLDIRS)\" ;; *) echo \"$(top_builddir)/$(MKINSTALLDIRS)\" ;; esac`\n \n l = @INTL_LIBTOOL_SUFFIX_PREFIX@\n+OUTPUT_OPTION = @OUTPUT_OPTION@\n \n AR = ar\n CC = @CC@\n@@ -90,7 +91,7 @@ LTV_AGE=0\n .SUFFIXES:\n .SUFFIXES: .c .y .o .lo .sin .sed\n .c.o:\n-\t$(COMPILE) $<\n+\t$(COMPILE) $< $(OUTPUT_OPTION)\n .c.lo:\n \t$(LIBTOOL) --mode=compile $(COMPILE) $<\n "}, {"sha": "2b4c3d3b12e9c4afb8e25c755fd451e18237df87", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a9c44f09cf8eec4ebf9469b32ab187d113f9af/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a9c44f09cf8eec4ebf9469b32ab187d113f9af/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=96a9c44f09cf8eec4ebf9469b32ab187d113f9af", "patch": "@@ -1,3 +1,7 @@\n+Mon Dec 10 06:09:57 2001  Douglas B. Rupp  <rupp@gnat.com>\n+\n+\t* Make-lang.in (jvspec.o): Add $(OUTPUT_OPTION).\n+\n 2001-12-09  Per Bothner  <per@bothner.com>\n \n \t* check-init.c (current_switch_has_default):  New static field."}, {"sha": "c27c4737ef893a5c6910e4138ebb12a820890656", "filename": "gcc/java/Make-lang.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/96a9c44f09cf8eec4ebf9469b32ab187d113f9af/gcc%2Fjava%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/96a9c44f09cf8eec4ebf9469b32ab187d113f9af/gcc%2Fjava%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FMake-lang.in?ref=96a9c44f09cf8eec4ebf9469b32ab187d113f9af", "patch": "@@ -64,7 +64,7 @@ jvspec.o: $(srcdir)/java/jvspec.c $(SYSTEM_H) $(GCC_H) $(CONFIG_H)\n \t(SHLIB_LINK='$(SHLIB_LINK)' \\\n \tSHLIB_MULTILIB='$(SHLIB_MULTILIB)'; \\\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(DRIVER_DEFINES) \\\n-\t\t$(INCLUDES) $(srcdir)/java/jvspec.c)\n+\t\t$(INCLUDES) $(srcdir)/java/jvspec.c $(OUTPUT_OPTION))\n \n # Create the compiler driver for $(GCJ).\n $(GCJ)$(exeext): gcc.o jvspec.o version.o \\"}]}