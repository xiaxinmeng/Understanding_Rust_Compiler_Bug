{"sha": "720507936fa8300ecd846cad4aa9338d9da4a950", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzIwNTA3OTM2ZmE4MzAwZWNkODQ2Y2FkNGFhOTMzOGQ5ZGE0YTk1MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-03-11T10:14:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-03-11T10:14:13Z"}, "message": "oops\n\nFrom-SVN: r32482", "tree": {"sha": "979bc8fd14992e4e017fdf18a5561610c71552cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/979bc8fd14992e4e017fdf18a5561610c71552cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/720507936fa8300ecd846cad4aa9338d9da4a950", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/720507936fa8300ecd846cad4aa9338d9da4a950", "html_url": "https://github.com/Rust-GCC/gccrs/commit/720507936fa8300ecd846cad4aa9338d9da4a950", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/720507936fa8300ecd846cad4aa9338d9da4a950/comments", "author": null, "committer": null, "parents": [{"sha": "40eac643be6e8cca207b9ad8449bdc8d2b061179", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40eac643be6e8cca207b9ad8449bdc8d2b061179", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40eac643be6e8cca207b9ad8449bdc8d2b061179"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0e72864f0288769336b86c2e35c5cf9eea1eb0a0", "filename": "gcc/cp/rtti.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/720507936fa8300ecd846cad4aa9338d9da4a950/gcc%2Fcp%2Frtti.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/720507936fa8300ecd846cad4aa9338d9da4a950/gcc%2Fcp%2Frtti.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Frtti.c?ref=720507936fa8300ecd846cad4aa9338d9da4a950", "patch": "@@ -184,7 +184,7 @@ throw_bad_cast ()\n static tree\n throw_bad_typeid ()\n {\n-  tree fn = get_identifier (\"__throw_bad_cast\");\n+  tree fn = get_identifier (\"__throw_bad_typeid\");\n   if (IDENTIFIER_GLOBAL_VALUE (fn))\n     fn = IDENTIFIER_GLOBAL_VALUE (fn);\n   else"}]}