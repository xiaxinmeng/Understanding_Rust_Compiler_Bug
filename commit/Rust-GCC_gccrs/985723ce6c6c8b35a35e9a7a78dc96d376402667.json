{"sha": "985723ce6c6c8b35a35e9a7a78dc96d376402667", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTg1NzIzY2U2YzZjOGIzNWEzNWU5YTdhNzhkYzk2ZDM3NjQwMjY2Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2002-04-24T10:48:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2002-04-24T10:48:44Z"}, "message": "re PR c++/6331 (g++ 3.1 looses const qualifiers)\n\n        PR c++/6331\n        * method.c (do_build_copy_constructor): Use cp_build_qualified_type.\n        * typeck.c (build_modify_expr): Allow arrays to differ in cv-quals.\n\nFrom-SVN: r52709", "tree": {"sha": "bfa7381ca660b553e110d2c57f3a192fb22069ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfa7381ca660b553e110d2c57f3a192fb22069ef"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/985723ce6c6c8b35a35e9a7a78dc96d376402667", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/985723ce6c6c8b35a35e9a7a78dc96d376402667", "html_url": "https://github.com/Rust-GCC/gccrs/commit/985723ce6c6c8b35a35e9a7a78dc96d376402667", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/985723ce6c6c8b35a35e9a7a78dc96d376402667/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "12fe8bf235afe43f72abebca8fb82ee7072afff3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/12fe8bf235afe43f72abebca8fb82ee7072afff3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/12fe8bf235afe43f72abebca8fb82ee7072afff3"}], "stats": {"total": 34, "additions": 31, "deletions": 3}, "files": [{"sha": "0b946576fef20fe9af1c51f301024880a56de373", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/985723ce6c6c8b35a35e9a7a78dc96d376402667/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/985723ce6c6c8b35a35e9a7a78dc96d376402667/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=985723ce6c6c8b35a35e9a7a78dc96d376402667", "patch": "@@ -1,5 +1,9 @@\n 2002-04-24  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/6331\n+\t* method.c (do_build_copy_constructor): Use cp_build_qualified_type.\n+\t* typeck.c (build_modify_expr): Allow arrays to differ in cv-quals.\n+\n \tPR c++/6395\n \t* decl.c (make_rtl_for_nonlocal_decl): Don't mess with #pragma i/i\n \tstuff for comdats."}, {"sha": "efcd5fb289a36758e705df0096bd621fb6d84ddb", "filename": "gcc/cp/method.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/985723ce6c6c8b35a35e9a7a78dc96d376402667/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/985723ce6c6c8b35a35e9a7a78dc96d376402667/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=985723ce6c6c8b35a35e9a7a78dc96d376402667", "patch": "@@ -585,7 +585,7 @@ do_build_copy_constructor (fndecl)\n \t    continue;\n \n \t  init = build (COMPONENT_REF,\n-\t                build_qualified_type (TREE_TYPE (field), cvquals),\n+\t                cp_build_qualified_type (TREE_TYPE (field), cvquals),\n \t                init, field);\n \t  init = build_tree_list (NULL_TREE, init);\n "}, {"sha": "10db2f84b3a0c2136e4603d04c79bac779060dc7", "filename": "gcc/cp/typeck.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/985723ce6c6c8b35a35e9a7a78dc96d376402667/gcc%2Fcp%2Ftypeck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/985723ce6c6c8b35a35e9a7a78dc96d376402667/gcc%2Fcp%2Ftypeck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck.c?ref=985723ce6c6c8b35a35e9a7a78dc96d376402667", "patch": "@@ -5665,10 +5665,11 @@ build_modify_expr (lhs, modifycode, rhs)\n     {\n       int from_array;\n       \n-      if (!same_or_base_type_p (lhstype, TREE_TYPE (rhs)))\n+      if (!same_or_base_type_p (TYPE_MAIN_VARIANT (lhstype),\n+\t\t\t\tTYPE_MAIN_VARIANT (TREE_TYPE (rhs))))\n \t{\n \t  error (\"incompatible types in assignment of `%T' to `%T'\",\n-\t\t    TREE_TYPE (rhs), lhstype);\n+\t\t TREE_TYPE (rhs), lhstype);\n \t  return error_mark_node;\n \t}\n "}, {"sha": "700b263891fe5dfa8d5c94252c297d0f0653093c", "filename": "gcc/testsuite/g++.dg/init/array3.C", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/985723ce6c6c8b35a35e9a7a78dc96d376402667/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/985723ce6c6c8b35a35e9a7a78dc96d376402667/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Farray3.C?ref=985723ce6c6c8b35a35e9a7a78dc96d376402667", "patch": "@@ -0,0 +1,23 @@\n+// PR c++/6331\n+// Bug: we were generating a badly cv-qualified ARRAY_TYPE in the\n+// synthesized copy constructor for A, which then became the canonical\n+// version, confusing later uses.\n+\n+struct A {\n+  virtual ~A();\n+  const float* f();\n+  float fa[3];\n+};\n+\n+struct B {\n+  B(const A& ai) : a (ai) {}\n+  A a;\n+};\n+\n+void g (const float pos[3]);\n+\n+extern A& a;\n+void h()\n+{\n+  g (a.f());\n+}"}]}