{"sha": "454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDU0ZjhiMmIwYzZmOTY0NWIzZGY2YmU5OGVmZTJjYTUyMGYyY2U4Mg==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2017-11-06T13:41:35Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2017-11-06T13:41:35Z"}, "message": "Fix -Wreturn-type fallout.\n\n2017-11-06  Martin Liska  <mliska@suse.cz>\n\n\t* c-c++-common/cilk-plus/AN/pr57541-2.c (foo1): Return a value\n\tfor functions with non-void return type, or change type to void,\n\tor add -Wno-return-type for test.\n\t(foo2): Likewise.\n\t* c-c++-common/cilk-plus/AN/pr57541.c (foo): Likewise.\n\t(foo1): Likewise.\n\t* c-c++-common/cilk-plus/CK/errors.c: Likewise.\n\t* c-c++-common/cilk-plus/CK/pr60197.c: Likewise.\n\t* c-c++-common/cilk-plus/CK/spawn_in_return.c: Likewise.\n\t* c-c++-common/fold-masked-cmp-1.c (test_pic): Likewise.\n\t(test_exe): Likewise.\n\t* c-c++-common/fold-masked-cmp-2.c (test_exe): Likewise.\n\t* g++.dg/cilk-plus/AN/builtin_fn_mutating_tplt.cc (my_func): Likewise.\n\t* g++.dg/cilk-plus/CK/pr68997.cc (fa2): Likewise.\n\t* g++.dg/eh/sighandle.C (dosegv): Likewise.\n\t* g++.dg/ext/vector14.C (foo): Likewise.\n\t(main): Likewise.\n\t* g++.dg/graphite/pr41305.C: Likewise.\n\t* g++.dg/graphite/pr42930.C: Likewise.\n\t* g++.dg/opt/pr46640.C (struct QBasicAtomicInt): Likewise.\n\t(makeDir): Likewise.\n\t* g++.dg/other/i386-8.C (foo): Likewise.\n\t* g++.dg/pr45788.C: Likewise.\n\t* g++.dg/pr64688.C (at_c): Likewise.\n\t* g++.dg/pr65032.C (G::DecodeVorbis): Likewise.\n\t* g++.dg/pr71633.C (c3::fn2): Likewise.\n\t* g++.dg/stackprotectexplicit2.C (A): Likewise.\n\t* g++.old-deja/g++.law/weak.C (main): Likewise.\n2017-11-06  Martin Liska  <mliska@suse.cz>\n\n\t* testsuite/libgomp.c++/loop-2.C: Return a value\n\tfor functions with non-void return type, or change type to void,\n\tor add -Wno-return-type for test.\n\t* testsuite/libgomp.c++/loop-4.C: Likewise.\n\t* testsuite/libgomp.c++/parallel-1.C: Likewise.\n\t* testsuite/libgomp.c++/shared-1.C: Likewise.\n\t* testsuite/libgomp.c++/single-1.C: Likewise.\n\t* testsuite/libgomp.c++/single-2.C: Likewise.\n2017-11-06  Martin Liska  <mliska@suse.cz>\n\n\t* testsuite/27_io/basic_fstream/cons/char/path.cc (main):\n\t  Return a value for functions with non-void return type,\n\t  or change type to void, or add -Wno-return-type for test.\n\t* testsuite/27_io/basic_ifstream/cons/char/path.cc (main):\n\tLikewise.\n\t* testsuite/27_io/basic_ofstream/open/char/path.cc (main):\n\tLikewise.\n\nFrom-SVN: r254451", "tree": {"sha": "ffe7d782cda90da84b0baf13883d5da72a8f3eb2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ffe7d782cda90da84b0baf13883d5da72a8f3eb2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "98910bc2b97f248d158b301575c24597fd12ab34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/98910bc2b97f248d158b301575c24597fd12ab34", "html_url": "https://github.com/Rust-GCC/gccrs/commit/98910bc2b97f248d158b301575c24597fd12ab34"}], "stats": {"total": 123, "additions": 103, "deletions": 20}, "files": [{"sha": "1d5ba34ff9fc06e1d3a744440da5b1430baf3569", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -1,3 +1,34 @@\n+2017-11-06  Martin Liska  <mliska@suse.cz>\n+\n+\t* c-c++-common/cilk-plus/AN/pr57541-2.c (foo1): Return a value\n+\tfor functions with non-void return type, or change type to void,\n+\tor add -Wno-return-type for test.\n+\t(foo2): Likewise.\n+\t* c-c++-common/cilk-plus/AN/pr57541.c (foo): Likewise.\n+\t(foo1): Likewise.\n+\t* c-c++-common/cilk-plus/CK/errors.c: Likewise.\n+\t* c-c++-common/cilk-plus/CK/pr60197.c: Likewise.\n+\t* c-c++-common/cilk-plus/CK/spawn_in_return.c: Likewise.\n+\t* c-c++-common/fold-masked-cmp-1.c (test_pic): Likewise.\n+\t(test_exe): Likewise.\n+\t* c-c++-common/fold-masked-cmp-2.c (test_exe): Likewise.\n+\t* g++.dg/cilk-plus/AN/builtin_fn_mutating_tplt.cc (my_func): Likewise.\n+\t* g++.dg/cilk-plus/CK/pr68997.cc (fa2): Likewise.\n+\t* g++.dg/eh/sighandle.C (dosegv): Likewise.\n+\t* g++.dg/ext/vector14.C (foo): Likewise.\n+\t(main): Likewise.\n+\t* g++.dg/graphite/pr41305.C: Likewise.\n+\t* g++.dg/graphite/pr42930.C: Likewise.\n+\t* g++.dg/opt/pr46640.C (struct QBasicAtomicInt): Likewise.\n+\t(makeDir): Likewise.\n+\t* g++.dg/other/i386-8.C (foo): Likewise.\n+\t* g++.dg/pr45788.C: Likewise.\n+\t* g++.dg/pr64688.C (at_c): Likewise.\n+\t* g++.dg/pr65032.C (G::DecodeVorbis): Likewise.\n+\t* g++.dg/pr71633.C (c3::fn2): Likewise.\n+\t* g++.dg/stackprotectexplicit2.C (A): Likewise.\n+\t* g++.old-deja/g++.law/weak.C (main): Likewise.\n+\n 2017-11-06  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/gcov: New directory."}, {"sha": "89a3d57ebdd129aab2f638c10393be07a946d5b3", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/pr57541-2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fpr57541-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fpr57541-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fpr57541-2.c?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -2,13 +2,13 @@\n /* { dg-do compile } */\n /* { dg-options \"-fcilkplus\" } */\n \n-int foo1 ()\n+void foo1 ()\n {\n   int a;\n   a = __sec_reduce_add (1); /* { dg-error \"Invalid builtin arguments\" } */\n }\n \n-int foo2 ()\n+void foo2 ()\n {\n   int a;\n   a = __sec_reduce_add (); /* { dg-error \"Invalid builtin arguments\" } */"}, {"sha": "b47de1e7ebccd9a3611edc16669366d575fdd94b", "filename": "gcc/testsuite/c-c++-common/cilk-plus/AN/pr57541.c", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fpr57541.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fpr57541.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FAN%2Fpr57541.c?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -4,8 +4,7 @@\n \n int A[10];\n \n-int foo () {\n-\n+void foo () {\n   /* C compiler uses the term \"undeclared\" whereas C++ compiler uses\n     \"not declared\".  Thus, grepping for declared seem to be the easiest.  */\n   char c = (char)N; /* { dg-error \"declared\" } */\n@@ -15,12 +14,8 @@ int foo () {\n   A[l:s:c];\n }\n \n-int foo1 (int N) {\n-\n+void foo1 (int N) {\n   char c = (char)N;\n   short s = (short)N;\n   A[l:s:c]; /* { dg-error \"declared\" } */\n }\n-\n-\n-"}, {"sha": "d637924e9e1596775326391c5635c1f8075d059c", "filename": "gcc/testsuite/c-c++-common/cilk-plus/CK/errors.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Ferrors.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Ferrors.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Ferrors.c?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-fcilkplus\" } */\n+/* { dg-options \"-fcilkplus -Wno-return-type\" } */\n \n int func_2(void);\n "}, {"sha": "301a6f2e9d12c1587fc865283349e145f552cd6a", "filename": "gcc/testsuite/c-c++-common/cilk-plus/CK/pr60197.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fpr60197.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fpr60197.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fpr60197.c?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -1,6 +1,6 @@\n /* PR c/60197 */\n /* { dg-do compile } */\n-/* { dg-options \"-fcilkplus\" } */\n+/* { dg-options \"-fcilkplus -Wno-return-type\" } */\n \n extern int foo (void);\n extern int bar (int);"}, {"sha": "602971e02c9c021c24e76dd103de80edcaa0c872", "filename": "gcc/testsuite/c-c++-common/cilk-plus/CK/spawn_in_return.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fspawn_in_return.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fspawn_in_return.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fspawn_in_return.c?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-options \"-fcilkplus\" } */\n+/* { dg-options \"-fcilkplus -Wno-return-type\" } */\n \n int main (void)\n {"}, {"sha": "658cc092995369a474bcc043db7eeae1558becf8", "filename": "gcc/testsuite/c-c++-common/fold-masked-cmp-1.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffold-masked-cmp-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffold-masked-cmp-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffold-masked-cmp-1.c?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -29,13 +29,15 @@ int result;\n void test_pic (struct bfd_link_info *info)\n {\n   if (bfd_link_pic (info))\n-    result++;\n+    result++;  \n }\n \n int test_exe (struct bfd_link_info *info)\n {\n   if (bfd_link_executable (info))\n     result++;\n+\n+  return 0;\n }\n \n /* { dg-final { scan-assembler-times \"testn?b\" 2 } } */"}, {"sha": "c95cc56dfa9acd8380cbc8b558d5c2d57aee4433", "filename": "gcc/testsuite/c-c++-common/fold-masked-cmp-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffold-masked-cmp-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffold-masked-cmp-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Ffold-masked-cmp-2.c?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -36,6 +36,8 @@ int test_exe (struct bfd_link_info *info)\n {\n   if (bfd_link_executable (info))\n     result++;\n+\n+  return 0;\n }\n \n /* { dg-final { scan-assembler-times \"testn?b\" 2 } } */"}, {"sha": "111a2a29686188d55b8b446ef2bfb43032f7ee4c", "filename": "gcc/testsuite/g++.dg/cilk-plus/AN/builtin_fn_mutating_tplt.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2FAN%2Fbuiltin_fn_mutating_tplt.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2FAN%2Fbuiltin_fn_mutating_tplt.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2FAN%2Fbuiltin_fn_mutating_tplt.cc?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -15,6 +15,8 @@ T my_func (T *x, T y)\n     *x = y;\n   else\n     *x = *x;\n+\n+  return T();\n }\n \n template <class T> T my_func (T *x, T y);"}, {"sha": "a9a8a51ce7e8000679bdadca68240b317118cff4", "filename": "gcc/testsuite/g++.dg/cilk-plus/CK/pr68997.cc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2FCK%2Fpr68997.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2FCK%2Fpr68997.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcilk-plus%2FCK%2Fpr68997.cc?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -16,7 +16,7 @@ struct A2 {\n };\n \n A2 fa2 () {\n-  A2 ();\n+  return A2 ();\n }\n \n struct B1 {"}, {"sha": "c2200024687efc5acb6529cd150c859e14ab6937", "filename": "gcc/testsuite/g++.dg/eh/sighandle.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsighandle.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsighandle.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Feh%2Fsighandle.C?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -12,6 +12,7 @@ void sighandler (int signo, siginfo_t * si, void * uc)\n char * dosegv ()\n {    \n   * ((volatile int *)0) = 12;\n+  return 0;\n }\n \n int main ()"}, {"sha": "eecff39de471c04a3f9720911a97695f9426c297", "filename": "gcc/testsuite/g++.dg/ext/vector14.C", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector14.C?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -8,7 +8,11 @@\n \n #define vector __attribute__((vector_size(16)))\n \n-template<int N> vector signed int foo (vector float value) {}\n+template<int N> vector signed int foo (vector float value)\n+{\n+  vector signed int a;\n+  return a;\n+}\n \n template<int> void foo (float) {}\n \n@@ -19,4 +23,6 @@ main ()\n   float f;\n   foo<1> (v);\n   foo<1> (f);\n+\n+  return 0;\n }"}, {"sha": "756b1267288288aff036c0476d885fb89fb98871", "filename": "gcc/testsuite/g++.dg/graphite/pr41305.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgraphite%2Fpr41305.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgraphite%2Fpr41305.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgraphite%2Fpr41305.C?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile }\n-// { dg-options \"-O3 -floop-interchange -Wno-conversion-null\" }\n+// { dg-options \"-O3 -floop-interchange -Wno-conversion-null -Wno-return-type\" }\n \n void __throw_bad_alloc ();\n "}, {"sha": "e569cea0177a2301fa8a586063a2e535d6f0b0b8", "filename": "gcc/testsuite/g++.dg/graphite/pr42930.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgraphite%2Fpr42930.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgraphite%2Fpr42930.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgraphite%2Fpr42930.C?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -1,4 +1,4 @@\n-/* { dg-options \"-O1 -floop-block\" } */\n+/* { dg-options \"-O1 -floop-block -Wno-return-type\" } */\n \n typedef unsigned char byte;\n typedef unsigned int uint;"}, {"sha": "b55afd4937e883a8253026b2e67fd85b5c8dbb8c", "filename": "gcc/testsuite/g++.dg/opt/pr46640.C", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr46640.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr46640.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fopt%2Fpr46640.C?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -7,6 +7,7 @@ struct QBasicAtomicInt\n   bool deref ()\n   {\n     asm volatile (\"\":\"=m\" (i), \"=qm\" (j));\n+    return true;\n   }\n };\n \n@@ -41,4 +42,6 @@ bool makeDir (unsigned len)\n         return false;\n       i = pos;\n     }\n+\n+  return true;\n }"}, {"sha": "a9465ef12bc319f845135ec12d14bfe4a3091a6e", "filename": "gcc/testsuite/g++.dg/other/i386-8.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fi386-8.C?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -19,4 +19,6 @@ foo (float *x, short *y)\n   __m64 c = _mm_cvtps_pi16 (b);\n   __builtin_memcpy (y, &c, sizeof (short) * 4);\n   y[0] = bar (y[0]);\n+\n+  return 0;\n }"}, {"sha": "9148585a7f6049260d38061d5192d9deb0315594", "filename": "gcc/testsuite/g++.dg/pr45788.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr45788.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr45788.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr45788.C?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -1,5 +1,5 @@\n // { dg-do compile { target i?86-*-* x86_64-*-* } }\n-// { dg-options \"-O3 -fwhole-program -msse2\" }\n+// { dg-options \"-O3 -fwhole-program -msse2 -Wno-return-type\" }\n \n typedef long unsigned int __darwin_size_t;\n typedef __darwin_size_t size_t;"}, {"sha": "bf85f1abb45a77e22173c78b2a51d4303b693dee", "filename": "gcc/testsuite/g++.dg/pr64688.C", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr64688.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr64688.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr64688.C?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -24,7 +24,10 @@ template <typename> struct F;\n template <typename> struct G;\n template <typename, typename, int> struct H;\n template <typename Element, typename Layout> struct H<Element, Layout, 3> {};\n-template <int, typename E, typename L, int N> unsigned char at_c(H<E, L, N>) {}\n+template <int, typename E, typename L, int N> unsigned char at_c(H<E, L, N>)\n+{\n+  return 0;\n+}\n template <typename> class I;\n template <typename> class J;\n template <typename> class K;"}, {"sha": "d6b6768d25a680024f4b4543931804050cb5390b", "filename": "gcc/testsuite/g++.dg/pr65032.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr65032.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr65032.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr65032.C?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -84,4 +84,6 @@ G::DecodeVorbis (int *p1)\n       mDecodedAudioFrames -= b;\n       fn2 (b);\n     }\n+\n+  return nsresult();\n }"}, {"sha": "8852695b910a00c0e9eb6bca4fa3774cf0f8fbae", "filename": "gcc/testsuite/g++.dg/pr71633.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr71633.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr71633.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr71633.C?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -20,6 +20,7 @@ class c3 : c1, c2\n \n int *c3::fn2 () const\n {\n+  return 0;\n }\n \n int *c3::fn3 (int p) const"}, {"sha": "35d9e886ccf7045c69ffa34e5186c4c42210baa6", "filename": "gcc/testsuite/g++.dg/stackprotectexplicit2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fstackprotectexplicit2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fstackprotectexplicit2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fstackprotectexplicit2.C?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -7,6 +7,7 @@ int A()\n {\n \tint A[23];\n \tchar b[22];\n+\treturn 0;\n }\n \n int __attribute__((stack_protect)) B()\n@@ -24,4 +25,4 @@ int __attribute__((stack_protect)) c()\n }\n \n \n-/* { dg-final { scan-assembler-times \"stack_chk_fail\" 2 } } */\n\\ No newline at end of file\n+/* { dg-final { scan-assembler-times \"stack_chk_fail\" 2 } } */"}, {"sha": "52444e77946dc74752ce981d1bad452fc0c7becc", "filename": "gcc/testsuite/g++.old-deja/g++.law/weak.C", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fweak.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fweak.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fweak.C?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -11,10 +11,12 @@\n \n std::istream x (0);\n \n+int\n main () {\n   x.get();\n   std::putc(0, 0);\n   std::fgets(0, 0, 0); \n   x.get((char*) 0, 0);\n+  return 0;\n }\n "}, {"sha": "7c0e808d587250092e12647b44ad29c70e1f0103", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -1,3 +1,14 @@\n+2017-11-06  Martin Liska  <mliska@suse.cz>\n+\n+\t* testsuite/libgomp.c++/loop-2.C: Return a value\n+\tfor functions with non-void return type, or change type to void,\n+\tor add -Wno-return-type for test.\n+\t* testsuite/libgomp.c++/loop-4.C: Likewise.\n+\t* testsuite/libgomp.c++/parallel-1.C: Likewise.\n+\t* testsuite/libgomp.c++/shared-1.C: Likewise.\n+\t* testsuite/libgomp.c++/single-1.C: Likewise.\n+\t* testsuite/libgomp.c++/single-2.C: Likewise.\n+\n 2017-10-31  Tom de Vries  <tom@codesourcery.com>\n \n \t* plugin/plugin-hsa.c (HSA_LOG): Remove semicolon after"}, {"sha": "77144b8e7c69f82fc4abd586319dca8bdcb585b7", "filename": "libgomp/testsuite/libgomp.c++/loop-2.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Floop-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Floop-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Floop-2.C?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -15,6 +15,7 @@ void parloop (int *a)\n     a[i] = i + 3;\n }\n \n+int\n main()\n {\n   int i, a[N];"}, {"sha": "a940854c637605f2edff97130d3ff2915e8aa97a", "filename": "libgomp/testsuite/libgomp.c++/loop-4.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Floop-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Floop-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Floop-4.C?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -1,5 +1,6 @@\n extern \"C\" void abort (void);\n \n+int\n main()\n {\n   int i, a;"}, {"sha": "ce338d0ddf9abab8bc720b2f58a0ad51f8bd8a8b", "filename": "libgomp/testsuite/libgomp.c++/parallel-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fparallel-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fparallel-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fparallel-1.C?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -8,6 +8,7 @@ foo (void)\n   return 10;\n }\n \n+int\n main ()\n {\n   int A = 0;"}, {"sha": "2f61daa12130411b9cd7a59107db5da20092f057", "filename": "libgomp/testsuite/libgomp.c++/shared-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fshared-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fshared-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fshared-1.C?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -53,6 +53,7 @@ parallel (int a, int b)\n     abort ();\n }\n \n+int\n main()\n {\n   parallel (1, 2);"}, {"sha": "221236f24f2ea75f7dec1b6655c50d951d2aa3ad", "filename": "libgomp/testsuite/libgomp.c++/single-1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fsingle-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fsingle-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fsingle-1.C?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -1,5 +1,6 @@\n extern \"C\" void abort (void);\n \n+int\n main()\n {\n   int i = 0;"}, {"sha": "d24b1d85e667c502524c13fa7534d61d22e927ae", "filename": "libgomp/testsuite/libgomp.c++/single-2.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fsingle-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fsingle-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2B%2B%2Fsingle-2.C?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -7,6 +7,7 @@ struct X\n   int c;\n };\n \n+int\n main()\n {\n   int i = 0;"}, {"sha": "a9a19a4871a9aa7fa8beb0e7aeac3738790c1d7e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -1,3 +1,13 @@\n+2017-11-06  Martin Liska  <mliska@suse.cz>\n+\n+\t* testsuite/27_io/basic_fstream/cons/char/path.cc (main):\n+\t  Return a value for functions with non-void return type,\n+\t  or change type to void, or add -Wno-return-type for test.\n+\t* testsuite/27_io/basic_ifstream/cons/char/path.cc (main):\n+\tLikewise.\n+\t* testsuite/27_io/basic_ofstream/open/char/path.cc (main):\n+\tLikewise.\n+\n 2017-11-06  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/20_util/optional/cons/deduction.cc: Avoid -Wreturn-type"}, {"sha": "51337ebd909237b3bdfbd7331ec93c49fde0dc0c", "filename": "libstdc++-v3/testsuite/27_io/basic_fstream/cons/char/path.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_fstream%2Fcons%2Fchar%2Fpath.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_fstream%2Fcons%2Fchar%2Fpath.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_fstream%2Fcons%2Fchar%2Fpath.cc?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -45,4 +45,5 @@ main()\n {\n   test01();\n   test02();\n+  return 0;\n }"}, {"sha": "a0de4ba55b2c3ee1ac9dfe042ad2532f6456ae33", "filename": "libstdc++-v3/testsuite/27_io/basic_ifstream/cons/char/path.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ifstream%2Fcons%2Fchar%2Fpath.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ifstream%2Fcons%2Fchar%2Fpath.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ifstream%2Fcons%2Fchar%2Fpath.cc?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -45,4 +45,5 @@ main()\n {\n   test01();\n   test02();\n+  return 0;\n }"}, {"sha": "38078c97ef75f7fdd95ed20b642102b3bbafc422", "filename": "libstdc++-v3/testsuite/27_io/basic_ofstream/open/char/path.cc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ofstream%2Fopen%2Fchar%2Fpath.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/454f8b2b0c6f9645b3df6be98efe2ca520f2ce82/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ofstream%2Fopen%2Fchar%2Fpath.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ofstream%2Fopen%2Fchar%2Fpath.cc?ref=454f8b2b0c6f9645b3df6be98efe2ca520f2ce82", "patch": "@@ -47,4 +47,5 @@ main()\n {\n   test01();\n   test02();\n+  return 0;\n }"}]}