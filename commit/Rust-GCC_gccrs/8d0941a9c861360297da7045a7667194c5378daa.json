{"sha": "8d0941a9c861360297da7045a7667194c5378daa", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGQwOTQxYTljODYxMzYwMjk3ZGE3MDQ1YTc2NjcxOTRjNTM3OGRhYQ==", "commit": {"author": {"name": "Gary Benson", "email": "gbenson@redhat.com", "date": "2006-07-28T07:40:17Z"}, "committer": {"name": "Gary Benson", "email": "gary@gcc.gnu.org", "date": "2006-07-28T07:40:17Z"}, "message": "prims.cc (_Jv_CreateJavaVM): Move setting runtimeInitialized from the start to the end of the function.\n\n2006-07-28  Gary Benson  <gbenson@redhat.com>\n\n\t* prims.cc (_Jv_CreateJavaVM): Move setting runtimeInitialized\n\tfrom the start to the end of the function.  Remove references\n\tto VMThrowable.trace_enabled.\n\t* java/lang/natVMThrowable.cc (fillInStackTrace): Use\n\truntimeInitialized rather than trace_enabled to decide\n\twhether to inhibit stack trace generation.\n\t* java/lang/VMThrowable.java (trace_enabled): Removed.\n\nFrom-SVN: r115791", "tree": {"sha": "183d39c7eacc5aa6d4dcc80ced7f61a89384b6f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/183d39c7eacc5aa6d4dcc80ced7f61a89384b6f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8d0941a9c861360297da7045a7667194c5378daa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d0941a9c861360297da7045a7667194c5378daa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d0941a9c861360297da7045a7667194c5378daa", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d0941a9c861360297da7045a7667194c5378daa/comments", "author": null, "committer": null, "parents": [{"sha": "b82f782bfb5c4383ac0bc1e37271ab3bbeb9304d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b82f782bfb5c4383ac0bc1e37271ab3bbeb9304d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b82f782bfb5c4383ac0bc1e37271ab3bbeb9304d"}], "stats": {"total": 31, "additions": 16, "deletions": 15}, "files": [{"sha": "66e11e2ec73142cd099f85c4a220258ff06a7950", "filename": "libjava/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d0941a9c861360297da7045a7667194c5378daa/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d0941a9c861360297da7045a7667194c5378daa/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=8d0941a9c861360297da7045a7667194c5378daa", "patch": "@@ -1,3 +1,13 @@\n+2006-07-28  Gary Benson  <gbenson@redhat.com>\n+\n+\t* prims.cc (_Jv_CreateJavaVM): Move setting runtimeInitialized\n+\tfrom the start to the end of the function.  Remove references\n+\tto VMThrowable.trace_enabled.\n+\t* java/lang/natVMThrowable.cc (fillInStackTrace): Use\n+\truntimeInitialized rather than trace_enabled to decide\n+\twhether to inhibit stack trace generation.\n+\t* java/lang/VMThrowable.java (trace_enabled): Removed.\n+\n 2006-07-23  Mohan Embar  <gnustuff@thisiscool.com>\n \n \t* include/win32-threads.h (_Jv_Thread_t): Explicitly"}, {"sha": "9dde28d293bcee8a0c4f6a78127e8619318198f1", "filename": "libjava/java/lang/VMThrowable.java", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d0941a9c861360297da7045a7667194c5378daa/libjava%2Fjava%2Flang%2FVMThrowable.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d0941a9c861360297da7045a7667194c5378daa/libjava%2Fjava%2Flang%2FVMThrowable.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FVMThrowable.java?ref=8d0941a9c861360297da7045a7667194c5378daa", "patch": "@@ -1,5 +1,6 @@\n /* java.lang.VMThrowable -- VM support methods for Throwable.\n-   Copyright (C) 1998, 1999, 2002, 2004, 2005 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2002, 2004, 2005, 2006\n+   Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -76,9 +77,6 @@ private VMThrowable() { }\n    */\n   native StackTraceElement[] getStackTrace(Throwable t);\n   \n-  // Setting this flag to false prevents fillInStackTrace() from running.\n-  static boolean trace_enabled = true;\n-  \n   // Native stack data.\n   private RawDataManaged data;\n }"}, {"sha": "b198f90732e302f0b4536c6444084c47ab135f34", "filename": "libjava/java/lang/natVMThrowable.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d0941a9c861360297da7045a7667194c5378daa/libjava%2Fjava%2Flang%2FnatVMThrowable.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d0941a9c861360297da7045a7667194c5378daa/libjava%2Fjava%2Flang%2FnatVMThrowable.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatVMThrowable.cc?ref=8d0941a9c861360297da7045a7667194c5378daa", "patch": "@@ -1,6 +1,6 @@\n // natVMThrowable.cc - Native part of VMThrowable class.\n \n-/* Copyright (C) 2003  Free Software Foundation\n+/* Copyright (C) 2003, 2006 Free Software Foundation\n \n    This file is part of libgcj.\n \n@@ -27,7 +27,7 @@ java::lang::VMThrowable::fillInStackTrace (java::lang::Throwable *)\n   using namespace java::lang;\n \n   // Don't trace stack during initialization of the runtime.\n-  if (! trace_enabled)\n+  if (! gcj::runtimeInitialized)\n     return NULL;\n   \n   _Jv_StackTrace *trace = _Jv_StackTrace::GetStackTrace ();"}, {"sha": "c216c7f5e35c962230fe13ec9ce2b0411e9dfc21", "filename": "libjava/prims.cc", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8d0941a9c861360297da7045a7667194c5378daa/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8d0941a9c861360297da7045a7667194c5378daa/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=8d0941a9c861360297da7045a7667194c5378daa", "patch": "@@ -56,7 +56,6 @@ details.  */\n #include <java/lang/NullPointerException.h>\n #include <java/lang/OutOfMemoryError.h>\n #include <java/lang/System.h>\n-#include <java/lang/VMThrowable.h>\n #include <java/lang/VMClassLoader.h>\n #include <java/lang/reflect/Modifier.h>\n #include <java/io/PrintStream.h>\n@@ -1404,8 +1403,6 @@ _Jv_CreateJavaVM (JvVMInitArgs* vm_args)\n   if (runtimeInitialized)\n     return -1;\n \n-  runtimeInitialized = true;\n-\n   jint result = parse_init_args (vm_args);\n   if (result < 0)\n     return -1;\n@@ -1447,10 +1444,6 @@ _Jv_CreateJavaVM (JvVMInitArgs* vm_args)\n   _Jv_InitPrimClass (&_Jv_doubleClass,  \"double\",  'D', 8);\n   _Jv_InitPrimClass (&_Jv_voidClass,    \"void\",    'V', 0);\n \n-  // Turn stack trace generation off while creating exception objects.\n-  _Jv_InitClass (&java::lang::VMThrowable::class$);\n-  java::lang::VMThrowable::trace_enabled = 0;\n-  \n   // We have to initialize this fairly early, to avoid circular class\n   // initialization.  In particular we want to start the\n   // initialization of ClassLoader before we start the initialization\n@@ -1465,8 +1458,6 @@ _Jv_CreateJavaVM (JvVMInitArgs* vm_args)\n \n   no_memory = new java::lang::OutOfMemoryError;\n \n-  java::lang::VMThrowable::trace_enabled = 1;\n-\n #ifdef USE_LTDL\n   LTDL_SET_PRELOADED_SYMBOLS ();\n #endif\n@@ -1489,6 +1480,8 @@ _Jv_CreateJavaVM (JvVMInitArgs* vm_args)\n     {\n     }\n \n+  runtimeInitialized = true;\n+\n   return 0;\n }\n "}]}