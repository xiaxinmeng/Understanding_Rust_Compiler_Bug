{"sha": "3e7cd49fee867f8af4815815ded1dd621d27ceab", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U3Y2Q0OWZlZTg2N2Y4YWY0ODE1ODE1ZGVkMWRkNjIxZDI3Y2VhYg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "2000-02-02T21:08:47Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2000-02-02T21:08:47Z"}, "message": "Fix sparc -msoft-float abort while compiling newlib.\n\n\t* config/sparc/sparc.h (PREFERRED_RELOAD_CLASS): Delete 'E' check for\n\tFP constants.  Add ! TARGET_FPU check for FP constants.\n\nFrom-SVN: r31762", "tree": {"sha": "42c23592ee6d9b8f386315c9a3a1a940c694b686", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/42c23592ee6d9b8f386315c9a3a1a940c694b686"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e7cd49fee867f8af4815815ded1dd621d27ceab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e7cd49fee867f8af4815815ded1dd621d27ceab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e7cd49fee867f8af4815815ded1dd621d27ceab", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e7cd49fee867f8af4815815ded1dd621d27ceab/comments", "author": null, "committer": null, "parents": [{"sha": "2cade2ad5da80301a01913aa8b4a2d5c8e248cab", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cade2ad5da80301a01913aa8b4a2d5c8e248cab", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cade2ad5da80301a01913aa8b4a2d5c8e248cab"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "9e382499b358be701af214c8c935d9b0d8764b84", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7cd49fee867f8af4815815ded1dd621d27ceab/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7cd49fee867f8af4815815ded1dd621d27ceab/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3e7cd49fee867f8af4815815ded1dd621d27ceab", "patch": "@@ -1,3 +1,8 @@\n+Wed Feb  2 13:07:10 2000  Jim Wilson  <wilson@cygnus.com>\n+\n+\t* config/sparc/sparc.h (PREFERRED_RELOAD_CLASS): Delete 'E' check for\n+\tFP constants.  Add ! TARGET_FPU check for FP constants.\n+\n 2000-02-02  Clinton Popetz  <cpopetz@cygnus.com>\n \t\n \t* flow.c (find_basic_blocks): Don't kill label_value_list"}, {"sha": "495eed139269bb5352ce88e42097e1e87c8b088d", "filename": "gcc/config/sparc/sparc.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e7cd49fee867f8af4815815ded1dd621d27ceab/gcc%2Fconfig%2Fsparc%2Fsparc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e7cd49fee867f8af4815815ded1dd621d27ceab/gcc%2Fconfig%2Fsparc%2Fsparc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsparc.h?ref=3e7cd49fee867f8af4815815ded1dd621d27ceab", "patch": "@@ -1475,17 +1475,17 @@ extern char leaf_reg_remap[];\n    in class CLASS, return the class of reg to actually use.\n    In general this is just CLASS; but on some machines\n    in some cases it is preferable to use a more restrictive class.  */\n-/* - We can't load constants into FP registers.  We can't load any FP\n-     constant if an 'E' constraint fails to match it.\n+/* - We can't load constants into FP registers.\n+   - We can't load FP constants into integer registers when soft-float,\n+     because there is no soft-float pattern with a r/F constraint.\n    - Try and reload integer constants (symbolic or otherwise) back into\n      registers directly, rather than having them dumped to memory.  */\n \n #define PREFERRED_RELOAD_CLASS(X,CLASS)\t\t\t\\\n   (CONSTANT_P (X)\t\t\t\t\t\\\n    ? ((FP_REG_CLASS_P (CLASS)\t\t\t\t\\\n        || (GET_MODE_CLASS (GET_MODE (X)) == MODE_FLOAT\t\\\n-\t   && (HOST_FLOAT_FORMAT != IEEE_FLOAT_FORMAT\t\\\n-\t       || HOST_BITS_PER_INT != BITS_PER_WORD)))\t\\\n+\t   && ! TARGET_FPU))\t\t\t\t\\\n       ? NO_REGS\t\t\t\t\t\t\\\n       : (!FP_REG_CLASS_P (CLASS)\t\t\t\\\n          && GET_MODE_CLASS (GET_MODE (X)) == MODE_INT)\t\\"}]}