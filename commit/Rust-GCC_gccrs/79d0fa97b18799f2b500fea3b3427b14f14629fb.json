{"sha": "79d0fa97b18799f2b500fea3b3427b14f14629fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzlkMGZhOTdiMTg3OTlmMmI1MDBmZWEzYjM0MjdiMTRmMTQ2MjlmYg==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-06-09T22:40:39Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1997-06-09T22:40:39Z"}, "message": "(change_main_variant): Remove unused function.\n\n(build_array_type): Remove obsolete references to change_main_variant.\n\nFrom-SVN: r14196", "tree": {"sha": "ca78c6d5533cb969bf740fa4f809fe179bbb9dad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca78c6d5533cb969bf740fa4f809fe179bbb9dad"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79d0fa97b18799f2b500fea3b3427b14f14629fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d0fa97b18799f2b500fea3b3427b14f14629fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79d0fa97b18799f2b500fea3b3427b14f14629fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79d0fa97b18799f2b500fea3b3427b14f14629fb/comments", "author": null, "committer": null, "parents": [{"sha": "3ab1999b990d2da268828f659e47d8a5fb19afa3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3ab1999b990d2da268828f659e47d8a5fb19afa3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3ab1999b990d2da268828f659e47d8a5fb19afa3"}], "stats": {"total": 37, "additions": 0, "deletions": 37}, "files": [{"sha": "5198d2ccde2d123218a116c80d7577a6625e88a2", "filename": "gcc/tree.c", "status": "modified", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79d0fa97b18799f2b500fea3b3427b14f14629fb/gcc%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79d0fa97b18799f2b500fea3b3427b14f14629fb/gcc%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.c?ref=79d0fa97b18799f2b500fea3b3427b14f14629fb", "patch": "@@ -3309,34 +3309,6 @@ build_type_variant (type, constp, volatilep)\n   return t;\n }\n \n-/* Give TYPE a new main variant: NEW_MAIN.\n-   This is the right thing to do only when something else\n-   about TYPE is modified in place.  */\n-\n-void\n-change_main_variant (type, new_main)\n-     tree type, new_main;\n-{\n-  tree t;\n-  tree omain = TYPE_MAIN_VARIANT (type);\n-\n-  /* Remove TYPE from the TYPE_NEXT_VARIANT chain of its main variant.  */\n-  if (TYPE_NEXT_VARIANT (omain) == type)\n-    TYPE_NEXT_VARIANT (omain) = TYPE_NEXT_VARIANT (type);\n-  else\n-    for (t = TYPE_NEXT_VARIANT (omain); t && TYPE_NEXT_VARIANT (t);\n-\t t = TYPE_NEXT_VARIANT (t))\n-      if (TYPE_NEXT_VARIANT (t) == type)\n-\t{\n-\t  TYPE_NEXT_VARIANT (t) = TYPE_NEXT_VARIANT (type);\n-\t  break;\n-\t}\n-\n-  TYPE_MAIN_VARIANT (type) = new_main;\n-  TYPE_NEXT_VARIANT (type) = TYPE_NEXT_VARIANT (new_main);\n-  TYPE_NEXT_VARIANT (new_main) = type;\n-}\n-\n /* Create a new variant of TYPE, equivalent but distinct.\n    This is so the caller can modify it.  */\n \n@@ -3959,15 +3931,6 @@ build_array_type (elt_type, index_type)\n   hashcode = TYPE_HASH (elt_type) + TYPE_HASH (index_type);\n   t = type_hash_canon (hashcode, t);\n \n-#if 0 /* This led to crashes, because it could put a temporary node\n-\t on the TYPE_NEXT_VARIANT chain of a permanent one.  */\n-  /* The main variant of an array type should always\n-     be an array whose element type is the main variant.  */\n-  if (elt_type != TYPE_MAIN_VARIANT (elt_type))\n-    change_main_variant (t, build_array_type (TYPE_MAIN_VARIANT (elt_type),\n-\t\t\t\t\t      index_type));\n-#endif\n-\n   if (TYPE_SIZE (t) == 0)\n     layout_type (t);\n   return t;"}]}