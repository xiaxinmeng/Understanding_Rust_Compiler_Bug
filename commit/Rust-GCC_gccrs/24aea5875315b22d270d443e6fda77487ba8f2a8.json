{"sha": "24aea5875315b22d270d443e6fda77487ba8f2a8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRhZWE1ODc1MzE1YjIyZDI3MGQ0NDNlNmZkYTc3NDg3YmE4ZjJhOA==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-03-13T23:01:30Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2012-03-13T23:01:30Z"}, "message": "libgo: Export {enter,exit}syscall and use it for getaddrinfo.\n\nFrom-SVN: r185363", "tree": {"sha": "dc76d4b8449ae8e1babfb7edd2a73620d3aa3ecb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dc76d4b8449ae8e1babfb7edd2a73620d3aa3ecb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24aea5875315b22d270d443e6fda77487ba8f2a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24aea5875315b22d270d443e6fda77487ba8f2a8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24aea5875315b22d270d443e6fda77487ba8f2a8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24aea5875315b22d270d443e6fda77487ba8f2a8/comments", "author": null, "committer": null, "parents": [{"sha": "13bd57a17741f2aa6c966f3709a86a94b16de388", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13bd57a17741f2aa6c966f3709a86a94b16de388", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13bd57a17741f2aa6c966f3709a86a94b16de388"}], "stats": {"total": 31, "additions": 18, "deletions": 13}, "files": [{"sha": "6751b8cc0e5ffc6953d2de91bb508caf74b40de4", "filename": "libgo/go/net/cgo_unix.go", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24aea5875315b22d270d443e6fda77487ba8f2a8/libgo%2Fgo%2Fnet%2Fcgo_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24aea5875315b22d270d443e6fda77487ba8f2a8/libgo%2Fgo%2Fnet%2Fcgo_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fnet%2Fcgo_unix.go?ref=24aea5875315b22d270d443e6fda77487ba8f2a8", "patch": "@@ -75,7 +75,10 @@ func cgoLookupPort(net, service string) (port int, err error, completed bool) {\n \t}\n \n \ts := syscall.StringBytePtr(service)\n-\tif libc_getaddrinfo(nil, s, &hints, &res) == 0 {\n+\tsyscall.Entersyscall()\n+\tgerrno := libc_getaddrinfo(nil, s, &hints, &res)\n+\tsyscall.Exitsyscall()\n+\tif gerrno == 0 {\n \t\tdefer libc_freeaddrinfo(res)\n \t\tfor r := res; r != nil; r = r.Ai_next {\n \t\t\tswitch r.Ai_family {\n@@ -108,7 +111,9 @@ func cgoLookupIPCNAME(name string) (addrs []IP, cname string, err error, complet\n \thints.Ai_flags = int32((syscall.AI_ALL | syscall.AI_V4MAPPED | syscall.AI_CANONNAME) & cgoAddrInfoMask())\n \n \th := syscall.StringBytePtr(name)\n+\tsyscall.Entersyscall()\n \tgerrno := libc_getaddrinfo(h, nil, &hints, &res)\n+\tsyscall.Exitsyscall()\n \tif gerrno != 0 {\n \t\tvar str string\n \t\tif gerrno == syscall.EAI_NONAME {"}, {"sha": "f5358f53d9b64473ac3ca7a93fe5095d3c4cccac", "filename": "libgo/go/syscall/libcall_linux.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24aea5875315b22d270d443e6fda77487ba8f2a8/libgo%2Fgo%2Fsyscall%2Flibcall_linux.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24aea5875315b22d270d443e6fda77487ba8f2a8/libgo%2Fgo%2Fsyscall%2Flibcall_linux.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flibcall_linux.go?ref=24aea5875315b22d270d443e6fda77487ba8f2a8", "patch": "@@ -202,13 +202,13 @@ func Getdents(fd int, buf []byte) (n int, err error) {\n \t} else {\n \t\tp = (*byte)(unsafe.Pointer(&_zero))\n \t}\n-\tentersyscall()\n+\tEntersyscall()\n \tr1, _, errno := Syscall(SYS_GETDENTS64, uintptr(fd), uintptr(unsafe.Pointer(p)), uintptr(len(buf)))\n \tn = int(r1)\n \tif n < 0 {\n \t\terr = errno\n \t}\n-\texitsyscall()\n+\tExitsyscall()\n \treturn\n }\n "}, {"sha": "7746cc2fa2a07fff43b4f579e0d0869593561870", "filename": "libgo/go/syscall/libcall_support.go", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24aea5875315b22d270d443e6fda77487ba8f2a8/libgo%2Fgo%2Fsyscall%2Flibcall_support.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24aea5875315b22d270d443e6fda77487ba8f2a8/libgo%2Fgo%2Fsyscall%2Flibcall_support.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Flibcall_support.go?ref=24aea5875315b22d270d443e6fda77487ba8f2a8", "patch": "@@ -6,7 +6,7 @@\n \n package syscall\n \n-func entersyscall()\n-func exitsyscall()\n+func Entersyscall()\n+func Exitsyscall()\n func GetErrno() Errno\n func SetErrno(Errno)"}, {"sha": "5e30e863231bd2f0a1edb8a4219bddc843394c7a", "filename": "libgo/go/syscall/mksyscall.awk", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24aea5875315b22d270d443e6fda77487ba8f2a8/libgo%2Fgo%2Fsyscall%2Fmksyscall.awk", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24aea5875315b22d270d443e6fda77487ba8f2a8/libgo%2Fgo%2Fsyscall%2Fmksyscall.awk", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fmksyscall.awk?ref=24aea5875315b22d270d443e6fda77487ba8f2a8", "patch": "@@ -190,7 +190,7 @@ BEGIN {\n     }\n \n     if (blocking) {\n-\tprint \"\\tentersyscall()\"\n+\tprint \"\\tEntersyscall()\"\n     }\n \n     printf(\"\\t\")\n@@ -240,7 +240,7 @@ BEGIN {\n     }\n \n     if (blocking) {\n-\tprint \"\\texitsyscall()\"\n+\tprint \"\\tExitsyscall()\"\n     }\n \n     if (gofnresults != \"\") {"}, {"sha": "e3c6629ed077e6b3f0373c8720f977a81ff2090d", "filename": "libgo/go/syscall/syscall_unix.go", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24aea5875315b22d270d443e6fda77487ba8f2a8/libgo%2Fgo%2Fsyscall%2Fsyscall_unix.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24aea5875315b22d270d443e6fda77487ba8f2a8/libgo%2Fgo%2Fsyscall%2Fsyscall_unix.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fsyscall%2Fsyscall_unix.go?ref=24aea5875315b22d270d443e6fda77487ba8f2a8", "patch": "@@ -30,7 +30,7 @@ const darwinAMD64 = runtime.GOOS == \"darwin\" && runtime.GOARCH == \"amd64\"\n // the arguments, so that we don't pass a 64-bit value when the function\n // expects a 32-bit one.\n func Syscall(trap, a1, a2, a3 uintptr) (r1, r2 uintptr, err Errno) {\n-\tentersyscall()\n+\tEntersyscall()\n \tvar r uintptr\n \tif unsafe.Sizeof(r) == 4 {\n \t\tr1 := c_syscall32(int32(trap), int32(a1), int32(a2), int32(a3), 0, 0, 0)\n@@ -40,12 +40,12 @@ func Syscall(trap, a1, a2, a3 uintptr) (r1, r2 uintptr, err Errno) {\n \t\tr = uintptr(r1)\n \t}\n \terr = GetErrno()\n-\texitsyscall()\n+\tExitsyscall()\n \treturn r, 0, err\n }\n \n func Syscall6(trap, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err Errno) {\n-\tentersyscall()\n+\tEntersyscall()\n \tvar r uintptr\n \tif unsafe.Sizeof(r) == 4 {\n \t\tr1 := c_syscall32(int32(trap), int32(a1), int32(a2), int32(a3),\n@@ -57,7 +57,7 @@ func Syscall6(trap, a1, a2, a3, a4, a5, a6 uintptr) (r1, r2 uintptr, err Errno)\n \t\tr = uintptr(r1)\n \t}\n \terr = GetErrno()\n-\texitsyscall()\n+\tExitsyscall()\n \treturn r, 0, err\n }\n "}, {"sha": "2deb46ec8b463578325b1da29286b1b505fa759e", "filename": "libgo/runtime/runtime.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24aea5875315b22d270d443e6fda77487ba8f2a8/libgo%2Fruntime%2Fruntime.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24aea5875315b22d270d443e6fda77487ba8f2a8/libgo%2Fruntime%2Fruntime.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fruntime%2Fruntime.h?ref=24aea5875315b22d270d443e6fda77487ba8f2a8", "patch": "@@ -298,8 +298,8 @@ void\truntime_gosched(void);\n void\truntime_tsleep(int64);\n M*\truntime_newm(void);\n void\truntime_goexit(void);\n-void\truntime_entersyscall(void) __asm__(\"libgo_syscall.syscall.entersyscall\");\n-void\truntime_exitsyscall(void) __asm__(\"libgo_syscall.syscall.exitsyscall\");\n+void\truntime_entersyscall(void) __asm__(\"libgo_syscall.syscall.Entersyscall\");\n+void\truntime_exitsyscall(void) __asm__(\"libgo_syscall.syscall.Exitsyscall\");\n void\tsiginit(void);\n bool\t__go_sigsend(int32 sig);\n int32\truntime_callers(int32, uintptr*, int32);"}]}