{"sha": "fcf32bad2d611add21e748b4fd93d7cf63660a43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmNmMzJiYWQyZDYxMWFkZDIxZTc0OGI0ZmQ5M2Q3Y2Y2MzY2MGE0Mw==", "commit": {"author": {"name": "Bernd Edlinger", "email": "bernd.edlinger@hotmail.de", "date": "2016-09-28T12:11:57Z"}, "committer": {"name": "Bernd Edlinger", "email": "edlinger@gcc.gnu.org", "date": "2016-09-28T12:11:57Z"}, "message": "re PR c++/77748 (pr77550.C fails on arm-none-eabi)\n\n2016-09-28  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n\n        PR c++/77748\n        * g++.dg/pr77550.C: Avoid undefined behavior.\n\nFrom-SVN: r240573", "tree": {"sha": "445a2d558d6f2e7556efe65aac05100ca958f92e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/445a2d558d6f2e7556efe65aac05100ca958f92e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fcf32bad2d611add21e748b4fd93d7cf63660a43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcf32bad2d611add21e748b4fd93d7cf63660a43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcf32bad2d611add21e748b4fd93d7cf63660a43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcf32bad2d611add21e748b4fd93d7cf63660a43/comments", "author": {"login": "bernd-edlinger", "id": 17638929, "node_id": "MDQ6VXNlcjE3NjM4OTI5", "avatar_url": "https://avatars.githubusercontent.com/u/17638929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bernd-edlinger", "html_url": "https://github.com/bernd-edlinger", "followers_url": "https://api.github.com/users/bernd-edlinger/followers", "following_url": "https://api.github.com/users/bernd-edlinger/following{/other_user}", "gists_url": "https://api.github.com/users/bernd-edlinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/bernd-edlinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bernd-edlinger/subscriptions", "organizations_url": "https://api.github.com/users/bernd-edlinger/orgs", "repos_url": "https://api.github.com/users/bernd-edlinger/repos", "events_url": "https://api.github.com/users/bernd-edlinger/events{/privacy}", "received_events_url": "https://api.github.com/users/bernd-edlinger/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "7d290e93939986665ef12ed083e0e8abb85b37eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d290e93939986665ef12ed083e0e8abb85b37eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d290e93939986665ef12ed083e0e8abb85b37eb"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "b942bd65b7fceb73b17fdce7875425a4518a67d9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcf32bad2d611add21e748b4fd93d7cf63660a43/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcf32bad2d611add21e748b4fd93d7cf63660a43/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fcf32bad2d611add21e748b4fd93d7cf63660a43", "patch": "@@ -1,5 +1,8 @@\n 2016-09-28  Bernd Edlinger  <bernd.edlinger@hotmail.de>\n \n+\tPR c++/77748\n+\t* g++.dg/pr77550.C: Avoid undefined behavior.\n+\n \t* gcc.dg/tree-ssa/pr68198.c: Fix dg-final.\n \n 2016-09-28  Wilco Dijkstra  <wdijkstr@arm.com>"}, {"sha": "a1064737a67eb587d5a4861b9f668d8f1bd0d34d", "filename": "gcc/testsuite/g++.dg/pr77550.C", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fcf32bad2d611add21e748b4fd93d7cf63660a43/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr77550.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fcf32bad2d611add21e748b4fd93d7cf63660a43/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr77550.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr77550.C?ref=fcf32bad2d611add21e748b4fd93d7cf63660a43", "patch": "@@ -1,6 +1,7 @@\n // { dg-do run }\n // { dg-options \"-std=c++14 -O3\" }\n \n+#define enum enum __attribute((mode(SI)))\n namespace std {\n typedef int size_t;\n inline namespace __cxx11 {}\n@@ -229,15 +230,17 @@ template <typename, typename, typename> struct basic_string {\n   struct _Alloc_hider {\n     _Alloc_hider(pointer, allocator<char> && = allocator<char>());\n   } _M_dataplus;\n-  size_type _M_string_length;\n+  size_type _M_string_length = 0;\n   enum { _S_local_capacity = 15 } _M_local_buf[_S_local_capacity];\n-  pointer _M_local_data();\n-  void _M_set_length(size_type);\n-  basic_string() : _M_dataplus(_M_local_data()) { _M_set_length(0); }\n+  basic_string() : _M_dataplus(0) {}\n   basic_string(const basic_string &) : _M_dataplus(0) {}\n   size_type size() { return _M_string_length; }\n   char *data() const {}\n };\n+//template<> basic_string<char, std::char_traits<char>, std::allocator<char>>::\n+//_Alloc_hider::_Alloc_hider(char*, std::allocator<char>&&) {}\n+extern \"C\" void\n+_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC1EPcOS3_ (...) {}\n }\n template <typename _CharT>\n int operator==(basic_string<_CharT> &p1, const basic_string<_CharT> &p2) {"}]}