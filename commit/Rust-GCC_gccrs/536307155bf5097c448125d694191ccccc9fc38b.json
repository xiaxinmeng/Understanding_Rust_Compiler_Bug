{"sha": "536307155bf5097c448125d694191ccccc9fc38b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM2MzA3MTU1YmY1MDk3YzQ0ODEyNWQ2OTQxOTFjY2NjYzlmYzM4Yg==", "commit": {"author": {"name": "Andreas Tobler", "email": "a.tobler@schweiz.org", "date": "2007-05-20T10:34:05Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2007-05-20T10:34:05Z"}, "message": "configure.ac: Introduce extra_ldflags_libgc.\n\n2007-05-20  Andreas Tobler  <a.tobler@schweiz.org>\n\n\t* configure.ac: Introduce extra_ldflags_libgc. Use it for Darwin.\n\t* configure: Regenerate.\n\t* Makefile.am (libgc_la_LDFLAGS): Use extra_ldflags_libgc.\n\t* Makefile.in: Regenerate.\n\t* include/Makefile.in: Regenerate.\n\t* include/private/gcconfig.h: Enable MPROTECT_VDB for all Darwin\n\ttargets. Remove comments. Prepare ppc64 support for Darwin.\n\nFrom-SVN: r124870", "tree": {"sha": "3ebc8443613c9af9453483fbd67724d06ef1f6ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ebc8443613c9af9453483fbd67724d06ef1f6ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/536307155bf5097c448125d694191ccccc9fc38b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/536307155bf5097c448125d694191ccccc9fc38b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/536307155bf5097c448125d694191ccccc9fc38b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/536307155bf5097c448125d694191ccccc9fc38b/comments", "author": null, "committer": null, "parents": [{"sha": "6495bc0b8df118643ca7aa1d9f311eb2f0344e3b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6495bc0b8df118643ca7aa1d9f311eb2f0344e3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6495bc0b8df118643ca7aa1d9f311eb2f0344e3b"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "0d891321f38cb46321e7a3f4161b600b4cc9995c", "filename": "boehm-gc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536307155bf5097c448125d694191ccccc9fc38b/boehm-gc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536307155bf5097c448125d694191ccccc9fc38b/boehm-gc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FChangeLog?ref=536307155bf5097c448125d694191ccccc9fc38b", "patch": "@@ -1,3 +1,13 @@\n+2007-05-20  Andreas Tobler  <a.tobler@schweiz.org>\n+\n+\t* configure.ac: Introduce extra_ldflags_libgc. Use it for Darwin.\n+\t* configure: Regenerate.\n+\t* Makefile.am (libgc_la_LDFLAGS): Use extra_ldflags_libgc.\n+\t* Makefile.in: Regenerate.\n+\t* include/Makefile.in: Regenerate.\n+\t* include/private/gcconfig.h: Enable MPROTECT_VDB for all Darwin\n+\ttargets. Remove comments. Prepare ppc64 support for Darwin.\n+\n 2007-04-23  Keith Seitz  <keiths@redhat.com>\n \n \t* include/gc.h (GC_is_thread_suspended): Declare."}, {"sha": "57b0bcf9d15318b3c55d0154ea15d55de2899afc", "filename": "boehm-gc/Makefile.am", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536307155bf5097c448125d694191ccccc9fc38b/boehm-gc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536307155bf5097c448125d694191ccccc9fc38b/boehm-gc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FMakefile.am?ref=536307155bf5097c448125d694191ccccc9fc38b", "patch": "@@ -33,11 +33,13 @@ mips_sgi_mach_dep.s mips_ultrix_mach_dep.s powerpc_darwin_mach_dep.s \\\n rs6000_mach_dep.s sparc_mach_dep.S sparc_netbsd_mach_dep.s \\\n sparc_sunos4_mach_dep.s ia64_save_regs_in_stack.s\n \n+extra_ldflags_libgc = @extra_ldflags_libgc@\n+\n # Include THREADLIBS here to ensure that the correct versions of\n # linuxthread semaphore functions get linked:\n libgcjgc_la_LIBADD = @addobjs@ $(THREADLIBS) $(UNWINDLIBS)\n libgcjgc_la_DEPENDENCIES = @addobjs@\n-libgcjgc_la_LDFLAGS = -version-info 1:2:0 -rpath $(toolexeclibdir)\n+libgcjgc_la_LDFLAGS = $(extra_ldflags_libgc) -version-info 1:2:0 -rpath $(toolexeclibdir)\n \n libgcjgc_convenience_la_LIBADD = @addobjs@\n libgcjgc_convenience_la_DEPENDENCIES = @addobjs@"}, {"sha": "c3d66d5e86cfb15eeaf96e14293f38ecaa83aee9", "filename": "boehm-gc/Makefile.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536307155bf5097c448125d694191ccccc9fc38b/boehm-gc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536307155bf5097c448125d694191ccccc9fc38b/boehm-gc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2FMakefile.in?ref=536307155bf5097c448125d694191ccccc9fc38b", "patch": "@@ -224,6 +224,7 @@ build_os = @build_os@\n build_vendor = @build_vendor@\n datadir = @datadir@\n exec_prefix = @exec_prefix@\n+extra_ldflags_libgc = @extra_ldflags_libgc@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@\n@@ -280,7 +281,7 @@ sparc_sunos4_mach_dep.s ia64_save_regs_in_stack.s\n # linuxthread semaphore functions get linked:\n libgcjgc_la_LIBADD = @addobjs@ $(THREADLIBS) $(UNWINDLIBS)\n libgcjgc_la_DEPENDENCIES = @addobjs@\n-libgcjgc_la_LDFLAGS = -version-info 1:2:0 -rpath $(toolexeclibdir)\n+libgcjgc_la_LDFLAGS = $(extra_ldflags_libgc) -version-info 1:2:0 -rpath $(toolexeclibdir)\n libgcjgc_convenience_la_LIBADD = @addobjs@\n libgcjgc_convenience_la_DEPENDENCIES = @addobjs@\n AM_CXXFLAGS = @GC_CFLAGS@"}, {"sha": "fa3134674cdef197038aa86a01ae955da19a5bb8", "filename": "boehm-gc/configure", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536307155bf5097c448125d694191ccccc9fc38b/boehm-gc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536307155bf5097c448125d694191ccccc9fc38b/boehm-gc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure?ref=536307155bf5097c448125d694191ccccc9fc38b", "patch": "@@ -309,7 +309,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical mkinstalldirs INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CC ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CXX ac_ct_CXX CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE CFLAGS CXXFLAGS CCAS CCASFLAGS AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT GC_CFLAGS LN_S LIBTOOL CXXCPP CPPFLAGS THREADLIBS POWERPC_DARWIN_TRUE POWERPC_DARWIN_FALSE EXTRA_TEST_LIBS target_all CPLUSPLUS_TRUE CPLUSPLUS_FALSE AM_CPPFLAGS addobjs addincludes addlibs addtests CPP EGREP MY_CFLAGS toolexecdir toolexeclibdir LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS multi_basedir build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os target_noncanonical mkinstalldirs INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CC ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CXX ac_ct_CXX CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE CFLAGS CXXFLAGS CCAS CCASFLAGS AS ac_ct_AS AR ac_ct_AR RANLIB ac_ct_RANLIB MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT GC_CFLAGS LN_S LIBTOOL CXXCPP CPPFLAGS THREADLIBS POWERPC_DARWIN_TRUE POWERPC_DARWIN_FALSE extra_ldflags_libgc EXTRA_TEST_LIBS target_all CPLUSPLUS_TRUE CPLUSPLUS_FALSE AM_CPPFLAGS addobjs addincludes addlibs addtests CPP EGREP MY_CFLAGS toolexecdir toolexeclibdir LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -6620,6 +6620,14 @@ fi\n     ;;\n esac\n \n+# extra LD Flags which are required for targets\n+case \"${host}\" in\n+  *-*-darwin*)\n+    extra_ldflags_libgc=-Wl,-single_module\n+    ;;\n+esac\n+\n+\n \n \n target_all=libgcjgc.la\n@@ -8459,6 +8467,7 @@ s,@CPPFLAGS@,$CPPFLAGS,;t t\n s,@THREADLIBS@,$THREADLIBS,;t t\n s,@POWERPC_DARWIN_TRUE@,$POWERPC_DARWIN_TRUE,;t t\n s,@POWERPC_DARWIN_FALSE@,$POWERPC_DARWIN_FALSE,;t t\n+s,@extra_ldflags_libgc@,$extra_ldflags_libgc,;t t\n s,@EXTRA_TEST_LIBS@,$EXTRA_TEST_LIBS,;t t\n s,@target_all@,$target_all,;t t\n s,@CPLUSPLUS_TRUE@,$CPLUSPLUS_TRUE,;t t"}, {"sha": "5c26b8454fc3784cce1ddcdc23a99c158744a671", "filename": "boehm-gc/configure.ac", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536307155bf5097c448125d694191ccccc9fc38b/boehm-gc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536307155bf5097c448125d694191ccccc9fc38b/boehm-gc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Fconfigure.ac?ref=536307155bf5097c448125d694191ccccc9fc38b", "patch": "@@ -300,6 +300,14 @@ case \"$host\" in\n     ;;\n esac\n \n+# extra LD Flags which are required for targets\n+case \"${host}\" in\n+  *-*-darwin*)\n+    extra_ldflags_libgc=-Wl,-single_module\n+    ;;\n+esac\n+AC_SUBST(extra_ldflags_libgc)\n+\n AC_SUBST(EXTRA_TEST_LIBS)\n \n target_all=libgcjgc.la"}, {"sha": "98a95618615ab991314b95128aef49ac9673b614", "filename": "boehm-gc/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/536307155bf5097c448125d694191ccccc9fc38b/boehm-gc%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/536307155bf5097c448125d694191ccccc9fc38b/boehm-gc%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/boehm-gc%2Finclude%2FMakefile.in?ref=536307155bf5097c448125d694191ccccc9fc38b", "patch": "@@ -149,6 +149,7 @@ build_os = @build_os@\n build_vendor = @build_vendor@\n datadir = @datadir@\n exec_prefix = @exec_prefix@\n+extra_ldflags_libgc = @extra_ldflags_libgc@\n host = @host@\n host_alias = @host_alias@\n host_cpu = @host_cpu@"}]}