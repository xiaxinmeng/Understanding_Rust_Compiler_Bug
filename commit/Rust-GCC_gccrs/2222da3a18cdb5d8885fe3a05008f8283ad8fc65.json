{"sha": "2222da3a18cdb5d8885fe3a05008f8283ad8fc65", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjIyMmRhM2ExOGNkYjVkODg4NWZlM2EwNTAwOGY4MjgzYWQ4ZmM2NQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@redhat.com", "date": "2004-08-23T07:13:13Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2004-08-23T07:13:13Z"}, "message": "* config/mips/mips.md ({,u}divmod[sd]i4): Redefine using :GPR.\n\nFrom-SVN: r86408", "tree": {"sha": "e49b5c8a491bc8c6a14c6a5996bd4cc7b49a253f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e49b5c8a491bc8c6a14c6a5996bd4cc7b49a253f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2222da3a18cdb5d8885fe3a05008f8283ad8fc65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2222da3a18cdb5d8885fe3a05008f8283ad8fc65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2222da3a18cdb5d8885fe3a05008f8283ad8fc65", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2222da3a18cdb5d8885fe3a05008f8283ad8fc65/comments", "author": null, "committer": null, "parents": [{"sha": "15ac4ccfb45f27788e027d00316475d6c79f77ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15ac4ccfb45f27788e027d00316475d6c79f77ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15ac4ccfb45f27788e027d00316475d6c79f77ed"}], "stats": {"total": 68, "additions": 24, "deletions": 44}, "files": [{"sha": "f0ee4cb23df5785dfb03d19eed088de7ee14071d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2222da3a18cdb5d8885fe3a05008f8283ad8fc65/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2222da3a18cdb5d8885fe3a05008f8283ad8fc65/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2222da3a18cdb5d8885fe3a05008f8283ad8fc65", "patch": "@@ -1,3 +1,7 @@\n+2004-08-23  Richard Sandiford  <rsandifo@redhat.com>\n+\n+\t* config/mips/mips.md ({,u}divmod[sd]i4): Redefine using :GPR.\n+\n 2004-08-23  Richard Sandiford  <rsandifo@redhat.com>\n \n \t* config/mips/mips.md (any_extend): New code macro."}, {"sha": "65622e935e34b0b7ce8b829fc9146949d28b6cd9", "filename": "gcc/config/mips/mips.md", "status": "modified", "additions": 20, "deletions": 44, "changes": 64, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2222da3a18cdb5d8885fe3a05008f8283ad8fc65/gcc%2Fconfig%2Fmips%2Fmips.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2222da3a18cdb5d8885fe3a05008f8283ad8fc65/gcc%2Fconfig%2Fmips%2Fmips.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.md?ref=2222da3a18cdb5d8885fe3a05008f8283ad8fc65", "patch": "@@ -1827,53 +1827,29 @@\n \n ;; VR4120 errata MD(A1): signed division instructions do not work correctly\n ;; with negative operands.  We use special libgcc functions instead.\n-(define_insn \"divmodsi4\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=l\")\n-\t(div:SI (match_operand:SI 1 \"register_operand\" \"d\")\n-\t\t(match_operand:SI 2 \"register_operand\" \"d\")))\n-   (set (match_operand:SI 3 \"register_operand\" \"=h\")\n-\t(mod:SI (match_dup 1)\n-\t\t(match_dup 2)))]\n+(define_insn \"divmod<mode>4\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=l\")\n+\t(div:GPR (match_operand:GPR 1 \"register_operand\" \"d\")\n+\t\t (match_operand:GPR 2 \"register_operand\" \"d\")))\n+   (set (match_operand:GPR 3 \"register_operand\" \"=h\")\n+\t(mod:GPR (match_dup 1)\n+\t\t (match_dup 2)))]\n   \"!TARGET_FIX_VR4120\"\n-  { return mips_output_division (\"div\\t$0,%1,%2\", operands); }\n-  [(set_attr \"type\"\t\"idiv\")\n-   (set_attr \"mode\"\t\"SI\")])\n-\n-(define_insn \"divmoddi4\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=l\")\n-\t(div:DI (match_operand:DI 1 \"register_operand\" \"d\")\n-\t\t(match_operand:DI 2 \"register_operand\" \"d\")))\n-   (set (match_operand:DI 3 \"register_operand\" \"=h\")\n-\t(mod:DI (match_dup 1)\n-\t\t(match_dup 2)))]\n-  \"TARGET_64BIT && !TARGET_FIX_VR4120\"\n-  { return mips_output_division (\"ddiv\\t$0,%1,%2\", operands); }\n-  [(set_attr \"type\"\t\"idiv\")\n-   (set_attr \"mode\"\t\"DI\")])\n+  { return mips_output_division (\"<d>div\\t$0,%1,%2\", operands); }\n+  [(set_attr \"type\" \"idiv\")\n+   (set_attr \"mode\" \"<MODE>\")])\n \n-(define_insn \"udivmodsi4\"\n-  [(set (match_operand:SI 0 \"register_operand\" \"=l\")\n-\t(udiv:SI (match_operand:SI 1 \"register_operand\" \"d\")\n-\t\t (match_operand:SI 2 \"register_operand\" \"d\")))\n-   (set (match_operand:SI 3 \"register_operand\" \"=h\")\n-\t(umod:SI (match_dup 1)\n-\t\t (match_dup 2)))]\n+(define_insn \"udivmod<mode>4\"\n+  [(set (match_operand:GPR 0 \"register_operand\" \"=l\")\n+\t(udiv:GPR (match_operand:GPR 1 \"register_operand\" \"d\")\n+\t\t  (match_operand:GPR 2 \"register_operand\" \"d\")))\n+   (set (match_operand:GPR 3 \"register_operand\" \"=h\")\n+\t(umod:GPR (match_dup 1)\n+\t\t  (match_dup 2)))]\n   \"\"\n-  { return mips_output_division (\"divu\\t$0,%1,%2\", operands); }\n-  [(set_attr \"type\"\t\"idiv\")\n-   (set_attr \"mode\"\t\"SI\")])\n-\n-(define_insn \"udivmoddi4\"\n-  [(set (match_operand:DI 0 \"register_operand\" \"=l\")\n-\t(udiv:DI (match_operand:DI 1 \"register_operand\" \"d\")\n-\t\t (match_operand:DI 2 \"register_operand\" \"d\")))\n-   (set (match_operand:DI 3 \"register_operand\" \"=h\")\n-\t(umod:DI (match_dup 1)\n-\t\t (match_dup 2)))]\n-  \"TARGET_64BIT\"\n-  { return mips_output_division (\"ddivu\\t$0,%1,%2\", operands); }\n-  [(set_attr \"type\"\t\"idiv\")\n-   (set_attr \"mode\"\t\"DI\")])\n+  { return mips_output_division (\"<d>divu\\t$0,%1,%2\", operands); }\n+  [(set_attr \"type\" \"idiv\")\n+   (set_attr \"mode\" \"<MODE>\")])\n \f\n ;;\n ;;  ...................."}]}