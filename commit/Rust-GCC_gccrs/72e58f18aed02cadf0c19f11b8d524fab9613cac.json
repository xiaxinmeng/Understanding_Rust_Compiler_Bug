{"sha": "72e58f18aed02cadf0c19f11b8d524fab9613cac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzJlNThmMThhZWQwMmNhZGYwYzE5ZjExYjhkNTI0ZmFiOTYxM2NhYw==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-11-12T00:16:19Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-11-12T00:16:19Z"}, "message": "optional (_Has_addressof): Check for non-member operator&.\n\n\t* include/experimental/optional (_Has_addressof): Check for non-member\n\toperator&.\n\t* testsuite/experimental/optional/observers/2.cc: Add operator&.\n\t* testsuite/experimental/optional/constexpr/observers/2.cc: Likewise.\n\nFrom-SVN: r217397", "tree": {"sha": "764b1f5b152e4fdc07879325b77494767952403e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/764b1f5b152e4fdc07879325b77494767952403e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/72e58f18aed02cadf0c19f11b8d524fab9613cac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72e58f18aed02cadf0c19f11b8d524fab9613cac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/72e58f18aed02cadf0c19f11b8d524fab9613cac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/72e58f18aed02cadf0c19f11b8d524fab9613cac/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "847e9cf81e5101f327e4cd5ac629df93b0afb581", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/847e9cf81e5101f327e4cd5ac629df93b0afb581", "html_url": "https://github.com/Rust-GCC/gccrs/commit/847e9cf81e5101f327e4cd5ac629df93b0afb581"}], "stats": {"total": 35, "additions": 29, "deletions": 6}, "files": [{"sha": "0c9d430c70cc5eda07353e265a8b987c9b1cad52", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72e58f18aed02cadf0c19f11b8d524fab9613cac/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72e58f18aed02cadf0c19f11b8d524fab9613cac/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=72e58f18aed02cadf0c19f11b8d524fab9613cac", "patch": "@@ -1,3 +1,10 @@\n+2014-11-12  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* include/experimental/optional (_Has_addressof): Check for non-member\n+\toperator&.\n+\t* testsuite/experimental/optional/observers/2.cc: Add operator&.\n+\t* testsuite/experimental/optional/constexpr/observers/2.cc: Likewise.\n+\n 2014-11-11  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* include/std/type_traits (__void_t): Define new alias template."}, {"sha": "2d3127a7b1d460caf7ff2db8073ad40eaeaa654b", "filename": "libstdc++-v3/include/experimental/optional", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72e58f18aed02cadf0c19f11b8d524fab9613cac/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Foptional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72e58f18aed02cadf0c19f11b8d524fab9613cac/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Foptional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Foptional?ref=72e58f18aed02cadf0c19f11b8d524fab9613cac", "patch": "@@ -127,13 +127,23 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   __throw_bad_optional_access(const char* __s)\n   { _GLIBCXX_THROW_OR_ABORT(bad_optional_access(__s)); }\n \n-  template<typename _Tp, typename _Sfinae = void>\n-    struct _Has_addressof_impl : std::false_type { };\n+  template<typename _Tp, typename = void>\n+    struct _Has_addressof_mem : std::false_type { };\n \n   template<typename _Tp>\n-    struct _Has_addressof_impl<_Tp,\n-      decltype( std::declval<const _Tp&>().operator&(), void() )>\n-      : std::true_type { };\n+    struct _Has_addressof_mem<_Tp,\n+         __void_t<decltype( std::declval<const _Tp&>().operator&() )>\n+      >\n+    : std::true_type { };\n+\n+  template<typename _Tp, typename = void>\n+    struct _Has_addressof_free : std::false_type { };\n+\n+  template<typename _Tp>\n+    struct _Has_addressof_free<_Tp,\n+         __void_t<decltype( operator&(std::declval<const _Tp&>()) )>\n+      >\n+    : std::true_type { };\n \n   /**\n     * @brief Trait that detects the presence of an overloaded unary operator&.\n@@ -143,7 +153,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     * declval<_Tp * const&>().operator&()).\n     */\n   template<typename _Tp>\n-    struct _Has_addressof : _Has_addressof_impl<_Tp>::type { };\n+    struct _Has_addressof\n+    : std::__or_<_Has_addressof_mem<_Tp>, _Has_addressof_free<_Tp>>::type\n+    { };\n \n   /**\n     * @brief An overload that attempts to take the address of an lvalue as a"}, {"sha": "2c9215c69243e9a47e713135616f74cbb42497a2", "filename": "libstdc++-v3/testsuite/experimental/optional/constexpr/observers/2.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72e58f18aed02cadf0c19f11b8d524fab9613cac/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Foptional%2Fconstexpr%2Fobservers%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72e58f18aed02cadf0c19f11b8d524fab9613cac/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Foptional%2Fconstexpr%2Fobservers%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Foptional%2Fconstexpr%2Fobservers%2F2.cc?ref=72e58f18aed02cadf0c19f11b8d524fab9613cac", "patch": "@@ -26,6 +26,8 @@\n struct value_type\n {\n   int i;\n+\n+  void* operator&() { return nullptr; } // N.B. non-const\n };\n \n int main()"}, {"sha": "9fb2edbd89a5137550e13b8dd55327fd2d8215ce", "filename": "libstdc++-v3/testsuite/experimental/optional/observers/2.cc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/72e58f18aed02cadf0c19f11b8d524fab9613cac/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Foptional%2Fobservers%2F2.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/72e58f18aed02cadf0c19f11b8d524fab9613cac/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Foptional%2Fobservers%2F2.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Fexperimental%2Foptional%2Fobservers%2F2.cc?ref=72e58f18aed02cadf0c19f11b8d524fab9613cac", "patch": "@@ -26,6 +26,8 @@ struct value_type\n   int i;\n };\n \n+void* operator&(const value_type&) = delete;\n+\n int main()\n {\n   std::experimental::optional<value_type> o { value_type { 51 } };"}]}