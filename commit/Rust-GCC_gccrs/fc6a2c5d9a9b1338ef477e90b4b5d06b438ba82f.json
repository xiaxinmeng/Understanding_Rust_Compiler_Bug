{"sha": "fc6a2c5d9a9b1338ef477e90b4b5d06b438ba82f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmM2YTJjNWQ5YTliMTMzOGVmNDc3ZTkwYjRiNWQwNmI0MzhiYTgyZg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2015-03-23T20:03:50Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2015-03-23T20:03:50Z"}, "message": "re PR target/65523 (ICE: in gimple_op, at gimple.h:2270 with -fcheck-pointer-bounds -mmpx)\n\n\tPR target/65523\n\t* tree-chkp.c (chkp_build_returned_bound): Ignore\n\tERF_RETURNS_ARG calls if they have fewer than needed arguments.\n\n\t* gcc.target/i386/pr65523.c: New test.\n\nFrom-SVN: r221606", "tree": {"sha": "4065a00f4a4d32daf23fd885008073d594fbeea7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4065a00f4a4d32daf23fd885008073d594fbeea7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fc6a2c5d9a9b1338ef477e90b4b5d06b438ba82f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc6a2c5d9a9b1338ef477e90b4b5d06b438ba82f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc6a2c5d9a9b1338ef477e90b4b5d06b438ba82f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc6a2c5d9a9b1338ef477e90b4b5d06b438ba82f/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9804b0fb044f4678eaedaaa00b46cbb934a7d270", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9804b0fb044f4678eaedaaa00b46cbb934a7d270", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9804b0fb044f4678eaedaaa00b46cbb934a7d270"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "97c0afd2063f0d60d934eb1c7352ffa1649f72f7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc6a2c5d9a9b1338ef477e90b4b5d06b438ba82f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc6a2c5d9a9b1338ef477e90b4b5d06b438ba82f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fc6a2c5d9a9b1338ef477e90b4b5d06b438ba82f", "patch": "@@ -1,3 +1,9 @@\n+2015-03-23  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/65523\n+\t* tree-chkp.c (chkp_build_returned_bound): Ignore\n+\tERF_RETURNS_ARG calls if they have fewer than needed arguments.\n+\n 2015-03-23  Oleg Endo  <olegendo@gcc.gnu.org>\n \n \tPR target/65505"}, {"sha": "b9f8dc2774dd97f30f7ffda2495956dba31c7b84", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc6a2c5d9a9b1338ef477e90b4b5d06b438ba82f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc6a2c5d9a9b1338ef477e90b4b5d06b438ba82f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=fc6a2c5d9a9b1338ef477e90b4b5d06b438ba82f", "patch": "@@ -1,5 +1,8 @@\n 2015-03-23  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR target/65523\n+\t* gcc.target/i386/pr65523.c: New test.\n+\n \tPR ipa/65475\n \t* g++.dg/lto/pr65475_0.C: Use dg-lto-options instead of\n \tdg-options."}, {"sha": "5a25f50e3716174def238ca20a0a1275a6c3502b", "filename": "gcc/testsuite/gcc.target/i386/pr65523.c", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc6a2c5d9a9b1338ef477e90b4b5d06b438ba82f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr65523.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc6a2c5d9a9b1338ef477e90b4b5d06b438ba82f/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr65523.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr65523.c?ref=fc6a2c5d9a9b1338ef477e90b4b5d06b438ba82f", "patch": "@@ -0,0 +1,11 @@\n+/* PR target/65523 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fcheck-pointer-bounds -mmpx\" } */\n+\n+void *memmove ();\n+\n+void *\n+bar ()\n+{\n+  return memmove ();\n+}"}, {"sha": "977c460b60fe37c2ab43f9730ccd1fb6af05b416", "filename": "gcc/tree-chkp.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fc6a2c5d9a9b1338ef477e90b4b5d06b438ba82f/gcc%2Ftree-chkp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fc6a2c5d9a9b1338ef477e90b4b5d06b438ba82f/gcc%2Ftree-chkp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-chkp.c?ref=fc6a2c5d9a9b1338ef477e90b4b5d06b438ba82f", "patch": "@@ -2153,6 +2153,7 @@ chkp_build_returned_bound (gcall *call)\n   tree bounds;\n   gimple stmt;\n   tree fndecl = gimple_call_fndecl (call);\n+  unsigned int retflags;\n \n   /* To avoid fixing alloca expands in targets we handle\n      it separately.  */\n@@ -2196,12 +2197,11 @@ chkp_build_returned_bound (gcall *call)\n     }\n   /* Do not use retbnd when returned bounds are equal to some\n      of passed bounds.  */\n-  else if (gimple_call_return_flags (call) & ERF_RETURNS_ARG)\n+  else if (((retflags = gimple_call_return_flags (call)) & ERF_RETURNS_ARG)\n+\t   && (retflags & ERF_RETURN_ARG_MASK) < gimple_call_num_args (call))\n     {\n       gimple_stmt_iterator iter = gsi_for_stmt (call);\n-      unsigned int retarg = 0, argno;\n-      if (gimple_call_return_flags (call) & ERF_RETURNS_ARG)\n-\tretarg = gimple_call_return_flags (call) & ERF_RETURN_ARG_MASK;\n+      unsigned int retarg = retflags & ERF_RETURN_ARG_MASK, argno;\n       if (gimple_call_with_bounds_p (call))\n \t{\n \t  for (argno = 0; argno < gimple_call_num_args (call); argno++)"}]}