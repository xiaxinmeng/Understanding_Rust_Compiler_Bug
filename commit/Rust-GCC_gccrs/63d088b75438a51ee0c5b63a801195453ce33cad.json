{"sha": "63d088b75438a51ee0c5b63a801195453ce33cad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNkMDg4Yjc1NDM4YTUxZWUwYzViNjNhODAxMTk1NDUzY2UzM2NhZA==", "commit": {"author": {"name": "Kaveh R. Ghazi", "email": "ghazi@caip.rutgers.edu", "date": "1998-06-22T05:59:23Z"}, "committer": {"name": "Kaveh Ghazi", "email": "ghazi@gcc.gnu.org", "date": "1998-06-22T05:59:23Z"}, "message": "Warning fixes:\n\n        * call.c (build_scoped_method_call): Remove unused variable `tmp'.\n        * cp-tree.h (check_dtor_name): Add prototype.\n        * init.c (expand_member_init): Remove unused variables\n        `ptr_type_node', `parm' and `rval'.\n        * ptree.c (print_lang_type): Use HOST_WIDE_INT_PRINT_DEC specifier\n        in call to fprintf.\n        (lang_print_xnode): Likewise.\n        * typeck2.c (enum_name_string): Cast argument to sprintf to long\n        and use %ld specifier.\n        * xref.c (GNU_xref_end_scope): Use HOST_WIDE_INT_PRINT_DEC\n        specifier in call to fprintf.\n        (GNU_xref_member): Cast argument to sprintf to int.\n\nFrom-SVN: r20653", "tree": {"sha": "4f4fbbdafef4b61973a70c1c70e0a549f8ad8ba7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4f4fbbdafef4b61973a70c1c70e0a549f8ad8ba7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63d088b75438a51ee0c5b63a801195453ce33cad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63d088b75438a51ee0c5b63a801195453ce33cad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63d088b75438a51ee0c5b63a801195453ce33cad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63d088b75438a51ee0c5b63a801195453ce33cad/comments", "author": null, "committer": null, "parents": [{"sha": "b3fb0b5e507318e1e89d170acf5ac63e8bd63c80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3fb0b5e507318e1e89d170acf5ac63e8bd63c80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3fb0b5e507318e1e89d170acf5ac63e8bd63c80"}], "stats": {"total": 57, "additions": 41, "deletions": 16}, "files": [{"sha": "6dd8d02df64e455e33e4e579aab5427fba0d20fd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63d088b75438a51ee0c5b63a801195453ce33cad/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63d088b75438a51ee0c5b63a801195453ce33cad/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=63d088b75438a51ee0c5b63a801195453ce33cad", "patch": "@@ -1,3 +1,23 @@\n+Mon Jun 22 08:50:26 1998  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n+\n+\t* call.c (build_scoped_method_call): Remove unused variable `tmp'.\n+\n+\t* cp-tree.h (check_dtor_name): Add prototype.\n+\n+\t* init.c (expand_member_init): Remove unused variables\n+\t`ptr_type_node', `parm' and `rval'.\n+\n+\t* ptree.c (print_lang_type): Use HOST_WIDE_INT_PRINT_DEC specifier\n+\tin call to fprintf.\n+\t(lang_print_xnode): Likewise.\n+\n+\t* typeck2.c (enum_name_string): Cast argument to sprintf to long\n+\tand use %ld specifier.\n+\n+\t* xref.c (GNU_xref_end_scope): Use HOST_WIDE_INT_PRINT_DEC\n+\tspecifier in call to fprintf.\n+\t(GNU_xref_member): Cast argument to sprintf to int.\n+\n Fri Jun 19 23:22:42 1998  Bruno Haible  <bruno@linuix.mathematik.uni-karlsruhe.de>\n \n         * typeck2.c (pop_init_level): Warn about implicit zero initialization"}, {"sha": "f9a49aa48eb87afb70ed64846a84961a11dfffd9", "filename": "gcc/cp/call.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63d088b75438a51ee0c5b63a801195453ce33cad/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63d088b75438a51ee0c5b63a801195453ce33cad/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=63d088b75438a51ee0c5b63a801195453ce33cad", "patch": "@@ -384,7 +384,6 @@ build_scoped_method_call (exp, basetype, name, parms)\n      @@ But we do have to check access privileges later.  */\n   tree binfo, decl;\n   tree type = TREE_TYPE (exp);\n-  tree tmp;\n \n   if (type == error_mark_node\n       || basetype == error_mark_node)"}, {"sha": "d3a6df954442f07538e9771a16973955bc2cb075", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63d088b75438a51ee0c5b63a801195453ce33cad/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63d088b75438a51ee0c5b63a801195453ce33cad/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=63d088b75438a51ee0c5b63a801195453ce33cad", "patch": "@@ -2236,6 +2236,7 @@ extern tree current_class_type;\t/* _TYPE: the type of the current class */\n extern char **opname_tab, **assignop_tab;\n \f\n /* in call.c */\n+extern int check_dtor_name\t\t\tPROTO((tree, tree));\n extern int get_arglist_len_in_bytes\t\tPROTO((tree));\n \n extern tree build_vfield_ref\t\t\tPROTO((tree, tree));"}, {"sha": "3b307791ec3d7d42422d5b801ecff2b5b8946b54", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63d088b75438a51ee0c5b63a801195453ce33cad/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63d088b75438a51ee0c5b63a801195453ce33cad/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=63d088b75438a51ee0c5b63a801195453ce33cad", "patch": "@@ -904,11 +904,8 @@ void\n expand_member_init (exp, name, init)\n      tree exp, name, init;\n {\n-  extern tree ptr_type_node;\t/* should be in tree.h */\n-\n   tree basetype = NULL_TREE, field;\n-  tree parm;\n-  tree rval = NULL_TREE, type;\n+  tree type;\n \n   if (exp == NULL_TREE)\n     return;\t\t\t/* complain about this later */"}, {"sha": "aa3066cbb44527ea77461343abeb212adf927a55", "filename": "gcc/cp/ptree.c", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63d088b75438a51ee0c5b63a801195453ce33cad/gcc%2Fcp%2Fptree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63d088b75438a51ee0c5b63a801195453ce33cad/gcc%2Fcp%2Fptree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fptree.c?ref=63d088b75438a51ee0c5b63a801195453ce33cad", "patch": "@@ -70,9 +70,12 @@ print_lang_type (file, node, indent)\n       || TREE_CODE (node) == TEMPLATE_TEMPLATE_PARM)\n     {\n       indent_to (file, indent + 3);\n-      fprintf (file, \"index %d level %d orig_level %d\",\n-\t       TEMPLATE_TYPE_IDX (node), TEMPLATE_TYPE_LEVEL (node),\n-\t       TEMPLATE_TYPE_ORIG_LEVEL (node));\n+      fputs (\"index \", file);\n+      fprintf (file, HOST_WIDE_INT_PRINT_DEC, TEMPLATE_TYPE_IDX (node));\n+      fputs (\" level \", file);\n+      fprintf (file, HOST_WIDE_INT_PRINT_DEC, TEMPLATE_TYPE_LEVEL (node));\n+      fputs (\" orig_level \", file);\n+      fprintf (file, HOST_WIDE_INT_PRINT_DEC, TEMPLATE_TYPE_ORIG_LEVEL (node));\n       return;\n     }\n \n@@ -175,9 +178,12 @@ lang_print_xnode (file, node, indent)\n       break;\n     case TEMPLATE_PARM_INDEX:\n       indent_to (file, indent + 3);\n-      fprintf (file, \"index %d level %d orig_level %d\",\n-\t       TEMPLATE_PARM_IDX (node), TEMPLATE_PARM_LEVEL (node),\n-\t       TEMPLATE_PARM_ORIG_LEVEL (node));\n+      fputs (\"index \", file);\n+      fprintf (file, HOST_WIDE_INT_PRINT_DEC, TEMPLATE_PARM_IDX (node));\n+      fputs (\" level \", file);\n+      fprintf (file, HOST_WIDE_INT_PRINT_DEC, TEMPLATE_PARM_LEVEL (node));\n+      fputs (\" orig_level \", file);\n+      fprintf (file, HOST_WIDE_INT_PRINT_DEC, TEMPLATE_PARM_ORIG_LEVEL (node));\n       break;\n     default:\n       break;"}, {"sha": "bbc196526c5a613e479d1239fe0cbf1710a0d663", "filename": "gcc/cp/typeck2.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63d088b75438a51ee0c5b63a801195453ce33cad/gcc%2Fcp%2Ftypeck2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63d088b75438a51ee0c5b63a801195453ce33cad/gcc%2Fcp%2Ftypeck2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftypeck2.c?ref=63d088b75438a51ee0c5b63a801195453ce33cad", "patch": "@@ -1530,8 +1530,8 @@ enum_name_string (value, type)\n       char *buf = (char *)oballoc (16 + TYPE_NAME_LENGTH (type));\n \n       /* Value must have been cast.  */\n-      sprintf (buf, \"(enum %s)%d\",\n-\t       TYPE_NAME_STRING (type), intval);\n+      sprintf (buf, \"(enum %s)%ld\",\n+\t       TYPE_NAME_STRING (type), (long) intval);\n       return buf;\n     }\n   return IDENTIFIER_POINTER (TREE_PURPOSE (values));"}, {"sha": "845a4460cd9a4c772c29ea67384a5f41807aeb23", "filename": "gcc/cp/xref.c", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63d088b75438a51ee0c5b63a801195453ce33cad/gcc%2Fcp%2Fxref.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63d088b75438a51ee0c5b63a801195453ce33cad/gcc%2Fcp%2Fxref.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fxref.c?ref=63d088b75438a51ee0c5b63a801195453ce33cad", "patch": "@@ -286,8 +286,10 @@ GNU_xref_end_scope (id,inid,prm,keep)\n   else if (keep == 2 || inid != 0) stype = \"INTERN\";\n   else stype = \"EXTERN\";\n \n-  fprintf (xref_file,\"SCP %s %d %d %d %d %s\\n\",\n-\t   filename (xf), xs->start, lineno,xs->lid, inid, stype);\n+  fprintf (xref_file, \"SCP %s %d %d %d \",\n+\t   filename (xf), xs->start, lineno,xs->lid);\n+  fprintf (xref_file, HOST_WIDE_INT_PRINT_DEC, inid);\n+  fprintf (xref_file, \" %s\\n\", stype);\n \n   if (lxs == NULL) cur_scope = xs->outer;\n   else lxs->outer = xs->outer;\n@@ -601,7 +603,7 @@ GNU_xref_member(cls, fld)\n     pure = 1;\n \n   d = IDENTIFIER_POINTER(cls);\n-  sprintf(buf, \"%d%s\", strlen(d), d);\n+  sprintf(buf, \"%d%s\", (int) strlen(d), d);\n #ifdef XREF_SHORT_MEMBER_NAMES\n   i = strlen(buf);\n #endif"}]}