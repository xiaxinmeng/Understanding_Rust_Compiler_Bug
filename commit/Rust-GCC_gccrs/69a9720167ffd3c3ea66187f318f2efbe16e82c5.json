{"sha": "69a9720167ffd3c3ea66187f318f2efbe16e82c5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjlhOTcyMDE2N2ZmZDNjM2VhNjYxODdmMzE4ZjJlZmJlMTZlODJjNQ==", "commit": {"author": {"name": "Nicola Pero", "email": "nicola.pero@meta-innovation.com", "date": "2010-12-06T21:27:01Z"}, "committer": {"name": "Nicola Pero", "email": "nicola@gcc.gnu.org", "date": "2010-12-06T21:27:01Z"}, "message": "In gcc/: 2010-12-06 Nicola Pero <nicola.pero@meta-innovation.com>\n\nIn gcc/:\n2010-12-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* c-parser.c (c_parser_for_statement): Use c_fully_fold() instead\n\tof c_process_expr_stmt() for the iterating and collection\n\texpressions of an Objective-C fast enumeration loop.\n\nIn gcc/objc/:\n2010-12-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc-act.c (objc_finish_foreach_loop): Mark the\n\tobject_expression as used.\n\nIn gcc/testsuite/:\n2010-12-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n\n\t* objc.dg/foreach-8.m: New.\n\nFrom-SVN: r167518", "tree": {"sha": "93b00dadc4940e81c3e6032ee733ef0eb44650e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93b00dadc4940e81c3e6032ee733ef0eb44650e9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/69a9720167ffd3c3ea66187f318f2efbe16e82c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a9720167ffd3c3ea66187f318f2efbe16e82c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/69a9720167ffd3c3ea66187f318f2efbe16e82c5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/69a9720167ffd3c3ea66187f318f2efbe16e82c5/comments", "author": {"login": "Nico-31415", "id": 94470564, "node_id": "U_kgDOBaGBpA", "avatar_url": "https://avatars.githubusercontent.com/u/94470564?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nico-31415", "html_url": "https://github.com/Nico-31415", "followers_url": "https://api.github.com/users/Nico-31415/followers", "following_url": "https://api.github.com/users/Nico-31415/following{/other_user}", "gists_url": "https://api.github.com/users/Nico-31415/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nico-31415/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nico-31415/subscriptions", "organizations_url": "https://api.github.com/users/Nico-31415/orgs", "repos_url": "https://api.github.com/users/Nico-31415/repos", "events_url": "https://api.github.com/users/Nico-31415/events{/privacy}", "received_events_url": "https://api.github.com/users/Nico-31415/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "85b40c3ac73fb23bc400953a888209743de3c7bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85b40c3ac73fb23bc400953a888209743de3c7bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85b40c3ac73fb23bc400953a888209743de3c7bf"}], "stats": {"total": 84, "additions": 81, "deletions": 3}, "files": [{"sha": "b6269f71a29e3ead18d346ab7472acc93d97c057", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a9720167ffd3c3ea66187f318f2efbe16e82c5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a9720167ffd3c3ea66187f318f2efbe16e82c5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=69a9720167ffd3c3ea66187f318f2efbe16e82c5", "patch": "@@ -1,3 +1,9 @@\n+2010-12-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* c-parser.c (c_parser_for_statement): Use c_fully_fold() instead\n+\tof c_process_expr_stmt() for the iterating and collection\n+\texpressions of an Objective-C fast enumeration loop.\n+\n 2010-12-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/45997"}, {"sha": "62eb1e70a8d03d452c0ea814d409d31676aea24f", "filename": "gcc/c-parser.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a9720167ffd3c3ea66187f318f2efbe16e82c5/gcc%2Fc-parser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a9720167ffd3c3ea66187f318f2efbe16e82c5/gcc%2Fc-parser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-parser.c?ref=69a9720167ffd3c3ea66187f318f2efbe16e82c5", "patch": "@@ -4812,8 +4812,7 @@ c_parser_for_statement (c_parser *parser)\n \t\tis_foreach_statement = true;\n \t\tif (! lvalue_p (init_expression))\n \t\t  c_parser_error (parser, \"invalid iterating variable in fast enumeration\");\n-\t\tobject_expression = c_process_expr_stmt (loc, init_expression);\n-\n+\t\tobject_expression = c_fully_fold (init_expression, false, NULL);\n \t      }\n \t    else\n \t      {\n@@ -4854,7 +4853,8 @@ c_parser_for_statement (c_parser *parser)\n       else\n \t{\n \t  if (is_foreach_statement)\n-\t    collection_expression = c_process_expr_stmt (loc, c_parser_expression (parser).value);\n+\t    collection_expression = c_fully_fold (c_parser_expression (parser).value,\n+\t\t\t\t\t\t  false, NULL);\n \t  else\n \t    incr = c_process_expr_stmt (loc, c_parser_expression (parser).value);\n \t}"}, {"sha": "f3001e581fbdab9516b1bd071681f13f454b516d", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a9720167ffd3c3ea66187f318f2efbe16e82c5/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a9720167ffd3c3ea66187f318f2efbe16e82c5/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=69a9720167ffd3c3ea66187f318f2efbe16e82c5", "patch": "@@ -1,3 +1,8 @@\n+2010-12-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc-act.c (objc_finish_foreach_loop): Mark the\n+\tobject_expression as used.\n+\n 2010-12-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n \n \t* objc-act.c: Include c-family/c-objc.h."}, {"sha": "f53055652eabb9dc00435e45aad48a4fde852905", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a9720167ffd3c3ea66187f318f2efbe16e82c5/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a9720167ffd3c3ea66187f318f2efbe16e82c5/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=69a9720167ffd3c3ea66187f318f2efbe16e82c5", "patch": "@@ -13290,6 +13290,18 @@ objc_finish_foreach_loop (location_t location, tree object_expression, tree coll\n   /* type object; */\n   /* Done by c-parser.c.  */\n \n+  /* Disable warnings that 'object' is unused.  For example the code\n+\n+     for (id object in collection)\n+       i++;\n+\n+     which can be used to count how many objects there are in the\n+     collection is fine and should generate no warnings even if\n+     'object' is technically unused.  */\n+  TREE_USED (object_expression) = 1;\n+  if (DECL_P (object_expression))\n+    DECL_READ_P (object_expression) = 1;\n+\n   /*  id __objc_foreach_collection */\n   objc_foreach_collection_decl = objc_create_temporary_var (objc_object_type, \"__objc_foreach_collection\");\n "}, {"sha": "f278725e909bfd8f8dcbdceb3dc9311f9d12f03a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a9720167ffd3c3ea66187f318f2efbe16e82c5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a9720167ffd3c3ea66187f318f2efbe16e82c5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=69a9720167ffd3c3ea66187f318f2efbe16e82c5", "patch": "@@ -1,3 +1,7 @@\n+2010-12-06  Nicola Pero  <nicola.pero@meta-innovation.com>\n+\n+\t* objc.dg/foreach-8.m: New.\n+\n 2010-12-06  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/45997"}, {"sha": "9a68e9ffb0565459e3df766914fc2858478aeb58", "filename": "gcc/testsuite/objc.dg/foreach-8.m", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/69a9720167ffd3c3ea66187f318f2efbe16e82c5/gcc%2Ftestsuite%2Fobjc.dg%2Fforeach-8.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/69a9720167ffd3c3ea66187f318f2efbe16e82c5/gcc%2Ftestsuite%2Fobjc.dg%2Fforeach-8.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fforeach-8.m?ref=69a9720167ffd3c3ea66187f318f2efbe16e82c5", "patch": "@@ -0,0 +1,51 @@\n+/* Contributed by Nicola Pero <nicola.pero@meta-innovation.com>, December 2010.  */\n+/* { dg-options \"-Wall\" } */\n+/* { dg-do compile } */\n+\n+/* Test that fast enumeration loops where the iterating variable is declared\n+   but not used do not generate warnings.  */\n+\n+/*\n+struct __objcFastEnumerationState\n+{\n+  unsigned long state;\n+  id            *itemsPtr;\n+  unsigned long *mutationsPtr;\n+  unsigned long extra[5];\n+};\n+*/\n+@interface Object\n+{\n+  Class isa;\n+}\n+- (unsigned long)countByEnumeratingWithState: (struct __objcFastEnumerationState *)state\n+                                     objects:(id *)stackbuf \n+                                       count:(unsigned int)len;\n+- (id) enumerator;\n+- (Class) classEnumerator;\n+@end\n+\n+unsigned int count_objects_in_collection (id collection)\n+{\n+  unsigned int count = 0;\n+\n+  /* The following line should generate no warnings even with\n+     -Wall.  */\n+  for (id object in collection)\n+    count++;\n+\n+  return count;\n+}\n+\n+unsigned int count_objects_in_collection_2 (id collection)\n+{\n+  unsigned int count = 0;\n+  id object;\n+\n+  /* The following line should generate no warnings even with\n+     -Wall.  */\n+  for (object in collection)\n+    count++;\n+\n+  return count;\n+}"}]}