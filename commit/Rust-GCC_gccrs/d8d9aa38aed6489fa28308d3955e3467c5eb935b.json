{"sha": "d8d9aa38aed6489fa28308d3955e3467c5eb935b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDhkOWFhMzhhZWQ2NDg5ZmEyODMwOGQzOTU1ZTM0NjdjNWViOTM1Yg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-11-22T20:35:43Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-11-22T20:35:43Z"}, "message": "target-supports.exp (check_effective_target_bswap16): Remove\n\n\t* lib/target-supports.exp (check_effective_target_bswap16): Remove\n\t(check_effective_target_bswap32): Ditto.\n\t(check_effective_target_bswap64): Ditto.\n\t* gcc.dg/optimize-bswaphi-1.c: Use bswap effective\n\ttarget instead of bswap16.\n\t* gcc.dg/optimize-bswapsi-1.c: Use bswap effective\n\ttarget instead of bswap32.\n\t* gcc.dg/optimize-bswapsi-2.c: Ditto.\n\t* gcc.dg/optimize-bswapsi-3.c: Ditto.\n\t* gcc.dg/optimize-bswapsi-4.c: Ditto.\n\t* gcc.dg/optimize-bswapsi-5.c: Ditto.\n\t* gcc.dg/pr77673.c: Ditto.\n\t* gcc.dg/optimize-bswapdi-1.c: Use bswap effective\n\ttarget instead of bswap64.\n\t* gcc.dg/optimize-bswapdi-2.c: Ditto.\n\t* gcc.dg/optimize-bswapdi-3.c: Ditto.\n\nFrom-SVN: r255075", "tree": {"sha": "c50db47ad12fbae064a0ebd29a6d9fd729d42cf2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c50db47ad12fbae064a0ebd29a6d9fd729d42cf2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d8d9aa38aed6489fa28308d3955e3467c5eb935b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8d9aa38aed6489fa28308d3955e3467c5eb935b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d8d9aa38aed6489fa28308d3955e3467c5eb935b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d8d9aa38aed6489fa28308d3955e3467c5eb935b/comments", "author": null, "committer": null, "parents": [{"sha": "a5de02e9e3efdcdacc5dc100b61d1fd45e719955", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a5de02e9e3efdcdacc5dc100b61d1fd45e719955", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a5de02e9e3efdcdacc5dc100b61d1fd45e719955"}], "stats": {"total": 116, "additions": 42, "deletions": 74}, "files": [{"sha": "aa4d09583feef743077b5628ab2d02ce3590a934", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 32, "deletions": 14, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d8d9aa38aed6489fa28308d3955e3467c5eb935b", "patch": "@@ -1,3 +1,22 @@\n+2017-11-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* lib/target-supports.exp (check_effective_target_bswap16): Remove\n+\t(check_effective_target_bswap32): Ditto.\n+\t(check_effective_target_bswap64): Ditto.\n+\t* gcc.dg/optimize-bswaphi-1.c: Use bswap effective\n+\ttarget instead of bswap16.\n+\t* gcc.dg/optimize-bswapsi-1.c: Use bswap effective\n+\ttarget instead of bswap32.\n+\t* gcc.dg/optimize-bswapsi-2.c: Ditto.\n+\t* gcc.dg/optimize-bswapsi-3.c: Ditto.\n+\t* gcc.dg/optimize-bswapsi-4.c: Ditto.\n+\t* gcc.dg/optimize-bswapsi-5.c: Ditto.\n+\t* gcc.dg/pr77673.c: Ditto.\n+\t* gcc.dg/optimize-bswapdi-1.c: Use bswap effective\n+\ttarget instead of bswap64.\n+\t* gcc.dg/optimize-bswapdi-2.c: Ditto.\n+\t* gcc.dg/optimize-bswapdi-3.c: Ditto.\n+\n 2017-11-22  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/36313\n@@ -936,7 +955,7 @@\n \t* c-c++-common/Wstringop-truncation.c: Same.\n \t* c-c++-common/Wsizeof-pointer-memaccess2.c: Adjust.\n \t* c-c++-common/attr-nonstring-2.c: New test.\n-\t* gcc/testsuite/gcc.dg/builtin-stpncpy.c: Adjust.\n+\t* gcc.dg/builtin-stpncpy.c: Adjust.\n \t* g++.dg/torture/Wsizeof-pointer-memaccess1.C: Same.\n \t* g++.dg/torture/Wsizeof-pointer-memaccess2.C: Same.\n \t* gcc.dg/torture/pr63554.c: Same.\n@@ -3249,7 +3268,7 @@\n 2017-10-19  Martin Sebor  <msebor@redhat.com>\n \n \tPR tree-optimization/82596\n-\t* gcc/testsuite/gcc.dg/pr82596.c: New test.\n+\t* gcc.dg/pr82596.c: New test.\n \n 2017-10-19  Eric Botcazou  <ebotcazou@adacore.com>\n \n@@ -4470,7 +4489,7 @@\n \n 2017-09-29  Jeff Law  <law@redhat.com>\n \n-\t* testsuite/gcc.dg/tree-ssa/ssa-dse-26.c: New test.\n+\t* gcc.dg/tree-ssa/ssa-dse-26.c: New test.\n \n 2017-09-29  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -6016,7 +6035,7 @@\n \n 2017-09-05  Eric Botcazou  <ebotcazou@adacore.com>\n \n-\t* testsuite/gnat.dg/array29.ad[sb]: New test.\n+\t* gnat.dg/array29.ad[sb]: New test.\n \n 2017-09-05  Martin Liska  <mliska@suse.cz>\n \n@@ -6916,8 +6935,7 @@\n \n \t* jit.dg/all-non-failing-tests.h: Add note about\n \ttest-vector-types.cc.\n-\t* jit.dg/test-error-gcc_jit_type_get_vector-bad-type.c: New test\n-\tcase.\n+\t* jit.dg/test-error-gcc_jit_type_get_vector-bad-type.c: New test case.\n \t* jit.dg/test-error-gcc_jit_type_get_vector-non-power-of-two.c:\n \tNew test case.\n \t* jit.dg/test-vector-types.cc: New test case.\n@@ -6929,14 +6947,14 @@\n \n 2017-08-09  Michael Collison  <michael.collison@arm.com>\n \n-\t* testsuite/g++.dg/ext/packed8.C: Remove -mstructure-size-\n-\tboundary option and fix comment.\n-\t* testsuite/g++.dg/init/array16.C: Remove -mstructure-size-\n-\tboundary option and fix comment.\n-\t* testsuite/g++.dg/other/crash-4.C: Remove -mstructure-size-\n-\tboundary option and fix comment.\n-\t* testsuite/gcc.dg/builtin-stringop-chk-1.c: Remove\n-\t-mstructure-size boundary option.\n+\t* g++.dg/ext/packed8.C: Remove -mstructure-size-boundary\n+\toption and fix comment.\n+\t* g++.dg/init/array16.C: Remove -mstructure-size-boundary\n+\toption and fix comment.\n+\t* g++.dg/other/crash-4.C: Remove -mstructure-size-boundary\n+\toption and fix comment.\n+\t* gcc.dg/builtin-stringop-chk-1.c: Remove\n+\t-mstructure-size-boundary option.\n \n 2017-08-09  Segher Boessenkool  <segher@kernel.crashing.org>\n "}, {"sha": "a4a3a7923754a055e6b53fd4558e7068b66cb0ea", "filename": "gcc/testsuite/gcc.dg/optimize-bswapdi-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapdi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapdi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapdi-1.c?ref=d8d9aa38aed6489fa28308d3955e3467c5eb935b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target bswap64 } */\n+/* { dg-require-effective-target bswap } */\n /* { dg-require-effective-target stdint_types } */\n /* { dg-options \"-O2 -fdump-tree-bswap\" } */\n /* { dg-additional-options \"-mzarch\" { target s390*-*-* } } */"}, {"sha": "89b251fe461561c9c22c67b84da19a95bdda7723", "filename": "gcc/testsuite/gcc.dg/optimize-bswapdi-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapdi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapdi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapdi-2.c?ref=d8d9aa38aed6489fa28308d3955e3467c5eb935b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target bswap64 } */\n+/* { dg-require-effective-target bswap } */\n /* { dg-require-effective-target stdint_types } */\n /* { dg-options \"-O2 -fdump-tree-bswap\" } */\n /* { dg-additional-options \"-mzarch\" { target s390*-*-* } } */"}, {"sha": "1888757ccb7d36769c156781283563fbf77868fc", "filename": "gcc/testsuite/gcc.dg/optimize-bswapdi-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapdi-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapdi-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapdi-3.c?ref=d8d9aa38aed6489fa28308d3955e3467c5eb935b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target bswap64 } */\n+/* { dg-require-effective-target bswap } */\n /* { dg-require-effective-target stdint_types } */\n /* { dg-options \"-O2 -fdump-tree-bswap\" } */\n /* { dg-additional-options \"-mzarch\" { target s390*-*-* } } */"}, {"sha": "dcd3c2872d64d2828fdac262b50bb7b614436e5e", "filename": "gcc/testsuite/gcc.dg/optimize-bswaphi-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswaphi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswaphi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswaphi-1.c?ref=d8d9aa38aed6489fa28308d3955e3467c5eb935b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target bswap16 } */\n+/* { dg-require-effective-target bswap } */\n /* { dg-require-effective-target stdint_types } */\n /* { dg-options \"-O2 -fdump-tree-bswap\" } */\n /* { dg-additional-options \"-march=z900\" { target s390-*-* } } */"}, {"sha": "c403d0498bbd9d6a3f9f156a2a8f5cf4984555d8", "filename": "gcc/testsuite/gcc.dg/optimize-bswapsi-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-1.c?ref=d8d9aa38aed6489fa28308d3955e3467c5eb935b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target bswap32 } */\n+/* { dg-require-effective-target bswap } */\n /* { dg-require-effective-target stdint_types } */\n /* { dg-options \"-O2 -fdump-tree-bswap\" } */\n /* { dg-additional-options \"-march=z900\" { target s390*-*-* } } */"}, {"sha": "30e677bd947915acfa098e9a6c8b0aa31b8060e7", "filename": "gcc/testsuite/gcc.dg/optimize-bswapsi-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-2.c?ref=d8d9aa38aed6489fa28308d3955e3467c5eb935b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target bswap32 } */\n+/* { dg-require-effective-target bswap } */\n /* { dg-require-effective-target stdint_types } */\n /* { dg-options \"-O2 -fdump-tree-bswap\" } */\n /* { dg-additional-options \"-march=z900\" { target s390*-*-* } } */"}, {"sha": "9418a83dfe391fa6d52916493e24a8953840eac6", "filename": "gcc/testsuite/gcc.dg/optimize-bswapsi-3.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-3.c?ref=d8d9aa38aed6489fa28308d3955e3467c5eb935b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target bswap32 } */\n+/* { dg-require-effective-target bswap } */\n /* { dg-require-effective-target stdint_types } */\n /* { dg-options \"-O2 -fdump-tree-bswap\" } */\n /* { dg-additional-options \"-march=z900\" { target s390-*-* } } */"}, {"sha": "cfcc8324c57478f5fe5bad5c366868a0ae7c143c", "filename": "gcc/testsuite/gcc.dg/optimize-bswapsi-4.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-4.c?ref=d8d9aa38aed6489fa28308d3955e3467c5eb935b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target bswap32 } */\n+/* { dg-require-effective-target bswap } */\n /* { dg-options \"-O2 -fdump-tree-bswap\" } */\n /* { dg-additional-options \"-march=z900\" { target s390-*-* } } */\n "}, {"sha": "5819fd7193c789f44a0996f914cddd2d98aa4682", "filename": "gcc/testsuite/gcc.dg/optimize-bswapsi-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Foptimize-bswapsi-5.c?ref=d8d9aa38aed6489fa28308d3955e3467c5eb935b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile } */\n-/* { dg-require-effective-target bswap32 } */\n+/* { dg-require-effective-target bswap } */\n /* { dg-options \"-O2 -fdump-tree-bswap\" } */\n /* { dg-additional-options \"-march=z900\" { target s390-*-* } } */\n "}, {"sha": "b41cf04e7717bb2871d077018ec914aa21c08f3e", "filename": "gcc/testsuite/gcc.dg/pr77673.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr77673.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr77673.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr77673.c?ref=d8d9aa38aed6489fa28308d3955e3467c5eb935b", "patch": "@@ -1,5 +1,5 @@\n /* { dg-do compile { target fpic } } */\n-/* { dg-require-effective-target bswap32 } */\n+/* { dg-require-effective-target bswap } */\n /* { dg-options \"-O2 -fPIC -fdump-tree-bswap\" } */\n /* { dg-additional-options \"-march=z900\" { target s390*-*-* } } */\n "}, {"sha": "d30fd368922713d3695f22710197ce7094c977cd", "filename": "gcc/testsuite/lib/target-supports.exp", "status": "modified", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d8d9aa38aed6489fa28308d3955e3467c5eb935b/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Ftarget-supports.exp?ref=d8d9aa38aed6489fa28308d3955e3467c5eb935b", "patch": "@@ -7243,56 +7243,6 @@ proc check_effective_target_bswap { } {\n     return $et_bswap_saved\n }\n \n-# Return 1 if the target supports 16-bit byte swap instructions.\n-\n-proc check_effective_target_bswap16 { } {\n-    global et_bswap16_saved\n-\n-    if [info exists et_bswap16_saved] {\n-\tverbose \"check_effective_target_bswap16: using cached result\" 2\n-    } else {\n-\tset et_bswap16_saved 0\n-\tif { [is-effective-target bswap] } {\n-\t   set et_bswap16_saved 1\n-\t}\n-    }\n-\n-    verbose \"check_effective_target_bswap16: returning $et_bswap16_saved\" 2\n-    return $et_bswap16_saved\n-}\n-\n-# Return 1 if the target supports 32-bit byte swap instructions.\n-\n-proc check_effective_target_bswap32 { } {\n-    global et_bswap32_saved\n-\n-    if [info exists et_bswap32_saved] {\n-\tverbose \"check_effective_target_bswap32: using cached result\" 2\n-    } else {\n-\tset et_bswap32_saved 0\n-\tif { [is-effective-target bswap] } {\n-\t   set et_bswap32_saved 1\n-\t}\n-    }\n-\n-    verbose \"check_effective_target_bswap32: returning $et_bswap32_saved\" 2\n-    return $et_bswap32_saved\n-}\n-\n-# Return 1 if the target supports 64-bit byte swap instructions.\n-#\n-# Note: 32bit s390 targets require -mzarch in dg-options.\n-\n-proc check_effective_target_bswap64 { } {\n-    global et_bswap64_saved\n-\n-    # expand_unop can expand 64-bit byte swap on 32-bit targets\n-    if { [is-effective-target bswap] && [is-effective-target int32plus] } {\n-\treturn 1\n-    }\n-    return 0\n-}\n-\n # Return 1 if the target supports atomic operations on \"int\" and \"long\".\n \n proc check_effective_target_sync_int_long { } {"}]}