{"sha": "e58d5c618e71aad29c552a33e22056b1453f73fc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU4ZDVjNjE4ZTcxYWFkMjljNTUyYTMzZTIyMDU2YjE0NTNmNzNmYw==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-28T17:51:19Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-06-28T17:51:19Z"}, "message": "(output_move_double): Handle reg[n,n+1] = mem[reg[n] + reg[n+1]].\n\nFrom-SVN: r4786", "tree": {"sha": "70b9596cd653891e1d483cf7a9a52e6d7190709d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/70b9596cd653891e1d483cf7a9a52e6d7190709d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e58d5c618e71aad29c552a33e22056b1453f73fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e58d5c618e71aad29c552a33e22056b1453f73fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e58d5c618e71aad29c552a33e22056b1453f73fc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e58d5c618e71aad29c552a33e22056b1453f73fc/comments", "author": null, "committer": null, "parents": [{"sha": "d7473723961b29eb3e6c99079f7e427e2417794e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d7473723961b29eb3e6c99079f7e427e2417794e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d7473723961b29eb3e6c99079f7e427e2417794e"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "e8f20cc1dbbd7cb41d35cf8c282b68a981d52800", "filename": "gcc/config/i860/i860.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e58d5c618e71aad29c552a33e22056b1453f73fc/gcc%2Fconfig%2Fi860%2Fi860.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e58d5c618e71aad29c552a33e22056b1453f73fc/gcc%2Fconfig%2Fi860%2Fi860.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Fi860.c?ref=e58d5c618e71aad29c552a33e22056b1453f73fc", "patch": "@@ -680,6 +680,19 @@ output_move_double (operands)\n   else if (optype0 == REGOP && optype1 != REGOP\n \t   && reg_overlap_mentioned_p (operands[0], operands[1]))\n     {\n+      if (reg_mentioned_p (op0, XEXP (op1, 0))\n+\t  && reg_mentioned_p (latehalf[0], XEXP (op1, 0)))\n+\t{\n+\t  /* If both halves of dest are used in the src memory address,\n+\t     add the two regs and put them in the low reg (op0).\n+\t     Then it works to load latehalf first.  */\n+\t  rtx xops[2];\n+\t  xops[0] = latehalf[0];\n+\t  xops[1] = op0;\n+\t  output_asm_insn (\"adds %1,%0,%1\", xops);\n+\t  operands[1] = gen_rtx (MEM, DImode, latehalf[0]);\n+\t  latehalf[1] = adj_offsettable_operand (operands[1], 4);\n+\t}\n       /* Do the late half first.  */\n       output_asm_insn (singlemove_string (latehalf), latehalf);\n       /* Then clobber.  */"}]}