{"sha": "37e05cd585cb3fe846ee4ab58bf51e9caf0649f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzdlMDVjZDU4NWNiM2ZlODQ2ZWU0YWI1OGJmNTFlOWNhZjA2NDlmNg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@markmitchell.com", "date": "1998-11-02T22:20:39Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1998-11-02T22:20:39Z"}, "message": "* init.c (expand_vec_init): Fix off-by-one error.\n\nFrom-SVN: r23506", "tree": {"sha": "c287655539a6ba44669e1cfa00c213a5f1e3ee64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c287655539a6ba44669e1cfa00c213a5f1e3ee64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/37e05cd585cb3fe846ee4ab58bf51e9caf0649f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37e05cd585cb3fe846ee4ab58bf51e9caf0649f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/37e05cd585cb3fe846ee4ab58bf51e9caf0649f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/37e05cd585cb3fe846ee4ab58bf51e9caf0649f6/comments", "author": null, "committer": null, "parents": [{"sha": "0ae9f65b6ba43c4807801a4570b1e5441cea0c24", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ae9f65b6ba43c4807801a4570b1e5441cea0c24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ae9f65b6ba43c4807801a4570b1e5441cea0c24"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "9c421f663ea8a0a88f785ed98c3346b7376f5616", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37e05cd585cb3fe846ee4ab58bf51e9caf0649f6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37e05cd585cb3fe846ee4ab58bf51e9caf0649f6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=37e05cd585cb3fe846ee4ab58bf51e9caf0649f6", "patch": "@@ -1,3 +1,7 @@\n+1998-11-02  Mark Mitchell  <mark@markmitchell.com>\n+\n+\t* init.c (expand_vec_init): Fix off-by-one error.\n+\n 1998-11-02  Alexandre Oliva  <oliva@dcc.unicamp.br>\n \n \t* parse.y (apparent_template_type): new type"}, {"sha": "78f026aeb7f215fde9e921d48ce824554eb04e70", "filename": "gcc/cp/init.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37e05cd585cb3fe846ee4ab58bf51e9caf0649f6/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37e05cd585cb3fe846ee4ab58bf51e9caf0649f6/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=37e05cd585cb3fe846ee4ab58bf51e9caf0649f6", "patch": "@@ -2853,10 +2853,10 @@ expand_vec_init (decl, base, maxindex, init, from_array)\n       && !(TREE_CODE (maxindex) == INTEGER_CST\n \t   && num_initialized_elts == TREE_INT_CST_LOW (maxindex) + 1))\n     {\n-      /* If the ITERATOR is equal to zero, then we don't have to loop;\n+      /* If the ITERATOR is equal to -1, then we don't have to loop;\n \t we've already initialized all the elements.  */\n       expand_start_cond (build (NE_EXPR, boolean_type_node,\n-\t\t\t\titerator, integer_zero_node), \n+\t\t\t\titerator, minus_one),\n \t\t\t 0);\n \n       /* Otherwise, loop through the elements.  */"}, {"sha": "fa238132f3f4b2889dd5be5c4f151b096246e49d", "filename": "gcc/testsuite/g++.old-deja/g++.other/init10.C", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/37e05cd585cb3fe846ee4ab58bf51e9caf0649f6/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/37e05cd585cb3fe846ee4ab58bf51e9caf0649f6/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Finit10.C?ref=37e05cd585cb3fe846ee4ab58bf51e9caf0649f6", "patch": "@@ -0,0 +1,22 @@\n+int i;\n+\n+struct D {\n+  D () {\n+    i++;\n+  }\n+};\n+\n+struct C {\n+  C() {}\n+    \n+  D d[1];\n+};\n+\n+\n+int main ()\n+{\n+  C c;\n+\n+  if (i != 1)\n+    return 1;\n+}"}]}