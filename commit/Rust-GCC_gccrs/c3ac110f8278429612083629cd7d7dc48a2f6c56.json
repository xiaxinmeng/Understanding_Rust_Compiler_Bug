{"sha": "c3ac110f8278429612083629cd7d7dc48a2f6c56", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzNhYzExMGY4Mjc4NDI5NjEyMDgzNjI5Y2Q3ZDdkYzQ4YTJmNmM1Ng==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-02-12T12:06:38Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-02-12T12:06:38Z"}, "message": "guality.h (GUALCVT): Zero extend instead of sign extend pointers to gualchk_t.\n\n\t* gcc.dg/guality/guality.h (GUALCVT): Zero extend instead of\n\tsign extend pointers to gualchk_t.\n\nFrom-SVN: r156733", "tree": {"sha": "d6453dd02a10644dee53f45dded55110e7bc23a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d6453dd02a10644dee53f45dded55110e7bc23a1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3ac110f8278429612083629cd7d7dc48a2f6c56", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3ac110f8278429612083629cd7d7dc48a2f6c56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3ac110f8278429612083629cd7d7dc48a2f6c56", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3ac110f8278429612083629cd7d7dc48a2f6c56/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6a22bed373725c7cced1dfbb4f934e198a24620d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a22bed373725c7cced1dfbb4f934e198a24620d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a22bed373725c7cced1dfbb4f934e198a24620d"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "502f048c70a524ebb06e5510fc2220ae8f8a722c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3ac110f8278429612083629cd7d7dc48a2f6c56/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3ac110f8278429612083629cd7d7dc48a2f6c56/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c3ac110f8278429612083629cd7d7dc48a2f6c56", "patch": "@@ -1,3 +1,8 @@\n+2010-02-12  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcc.dg/guality/guality.h (GUALCVT): Zero extend instead of\n+\tsign extend pointers to gualchk_t.\n+\n 2010-02-11  Sebastian Pop  <sebastian.pop@amd.com>\n \n \tPR middle-end/43012"}, {"sha": "e744d0d72ee7944ec6313c4e66d7346992cf2e38", "filename": "gcc/testsuite/gcc.dg/guality/guality.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3ac110f8278429612083629cd7d7dc48a2f6c56/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3ac110f8278429612083629cd7d7dc48a2f6c56/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fguality%2Fguality.h?ref=c3ac110f8278429612083629cd7d7dc48a2f6c56", "patch": "@@ -64,7 +64,11 @@ typedef intmax_t gualchk_t;\n #define GUALCVT(val)\t\t\t\t\t\t\\\n   ((gualchk_t)__builtin_choose_expr\t\t\t\t\\\n    (__builtin_types_compatible_p (__typeof (val), gualchk_t),\t\\\n-    (val), (intptr_t)(val)))\n+    (val),\t\t\t\t\t\t\t\\\n+    __builtin_choose_expr\t\t\t\t\t\\\n+    (__builtin_classify_type (val)\t\t\t\t\\\n+     == __builtin_classify_type (&guality_skip),\t\t\\\n+     (uintptr_t)(val),(intptr_t)(val))))\n \n /* Attach a debugger to the current process and verify that the string\n    EXPR, evaluated by the debugger, yields the gualchk_t number VAL."}]}