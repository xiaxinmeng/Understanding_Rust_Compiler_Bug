{"sha": "f6cc31036a59d23ee90bf0884981a7f306fc87fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjZjYzMxMDM2YTU5ZDIzZWU5MGJmMDg4NDk4MWE3ZjMwNmZjODdmZA==", "commit": {"author": {"name": "Roman Gareev", "email": "gareevroman@gmail.com", "date": "2014-06-29T14:20:35Z"}, "committer": {"name": "Roman Gareev", "email": "romangareev@gcc.gnu.org", "date": "2014-06-29T14:20:35Z"}, "message": "Makefile.in: Add the compilation of graphite-isl-ast-to-gimple.o.\n\n\n\tgcc/\n\t* Makefile.in:\n\tAdd the compilation of graphite-isl-ast-to-gimple.o.\n\t* common.opt:\n\tAdd new switch fgraphite-code-generator=[isl|cloog].\n\t* flag-types.h:\n\tAdd new enum fgraphite_generator.\n\t* graphite-isl-ast-to-gimple.c: New.\n\t* graphite-isl-ast-to-gimple.h: New.\n\t* graphite.c (graphite_transform_loops):\n\tAdd choice of Graphite code generator,\n\twhich depends on flag_graphite_code_gen.\n\n\tgcc/testsuite/gcc.dg/graphite/isl-codegen-loop-dumping.c:\n\tNew testcase that checks that the dump is generated.\n\nFrom-SVN: r212124", "tree": {"sha": "95e882342ab8217fe3b1e2dff48e7f7f5620b2d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95e882342ab8217fe3b1e2dff48e7f7f5620b2d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f6cc31036a59d23ee90bf0884981a7f306fc87fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6cc31036a59d23ee90bf0884981a7f306fc87fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6cc31036a59d23ee90bf0884981a7f306fc87fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6cc31036a59d23ee90bf0884981a7f306fc87fd/comments", "author": {"login": "gareevroman", "id": 6114710, "node_id": "MDQ6VXNlcjYxMTQ3MTA=", "avatar_url": "https://avatars.githubusercontent.com/u/6114710?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gareevroman", "html_url": "https://github.com/gareevroman", "followers_url": "https://api.github.com/users/gareevroman/followers", "following_url": "https://api.github.com/users/gareevroman/following{/other_user}", "gists_url": "https://api.github.com/users/gareevroman/gists{/gist_id}", "starred_url": "https://api.github.com/users/gareevroman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gareevroman/subscriptions", "organizations_url": "https://api.github.com/users/gareevroman/orgs", "repos_url": "https://api.github.com/users/gareevroman/repos", "events_url": "https://api.github.com/users/gareevroman/events{/privacy}", "received_events_url": "https://api.github.com/users/gareevroman/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3b37ccd4ff94fb1ea6cf33b75e583c66874ab862", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3b37ccd4ff94fb1ea6cf33b75e583c66874ab862", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3b37ccd4ff94fb1ea6cf33b75e583c66874ab862"}], "stats": {"total": 218, "additions": 217, "deletions": 1}, "files": [{"sha": "7c34af8b3d5e5dde7da80f66bece165ddb1f2964", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6cc31036a59d23ee90bf0884981a7f306fc87fd/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6cc31036a59d23ee90bf0884981a7f306fc87fd/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f6cc31036a59d23ee90bf0884981a7f306fc87fd", "patch": "@@ -1,3 +1,20 @@\n+2014-06-29  Roman Gareev  <gareevroman@gmail.com>\n+\n+\t* Makefile.in:\n+\tAdd the compilation of graphite-isl-ast-to-gimple.o.\n+\t* common.opt:\n+\tAdd new switch fgraphite-code-generator=[isl|cloog].\n+\t* flag-types.h:\n+\tAdd new enum fgraphite_generator.\n+\t* graphite-isl-ast-to-gimple.c: New.\n+\t* graphite-isl-ast-to-gimple.h: New.\n+\t* graphite.c (graphite_transform_loops):\n+\tAdd choice of Graphite code generator,\n+\twhich depends on flag_graphite_code_gen.\n+\n+\ttestsuite/gcc.dg/graphite/isl-codegen-loop-dumping.c:\n+\tNew testcase that checks that the dump is generated.\n+\n 2014-06-29  Roman Gareev  <gareevroman@gmail.com>\n \n \t* graphite-dependences.c (subtract_commutative_associative_deps): "}, {"sha": "af6554f82345c06683b83d0a81d2627eaa9a9251", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6cc31036a59d23ee90bf0884981a7f306fc87fd/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6cc31036a59d23ee90bf0884981a7f306fc87fd/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f6cc31036a59d23ee90bf0884981a7f306fc87fd", "patch": "@@ -1250,6 +1250,7 @@ OBJS = \\\n \tgraphite.o \\\n \tgraphite-blocking.o \\\n \tgraphite-clast-to-gimple.o \\\n+\tgraphite-isl-ast-to-gimple.o \\\n \tgraphite-dependences.o \\\n \tgraphite-interchange.o \\\n \tgraphite-optimize-isl.o \\"}, {"sha": "e9ceab165513704fbdd6b1ba929f46c63253d04a", "filename": "gcc/common.opt", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6cc31036a59d23ee90bf0884981a7f306fc87fd/gcc%2Fcommon.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6cc31036a59d23ee90bf0884981a7f306fc87fd/gcc%2Fcommon.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon.opt?ref=f6cc31036a59d23ee90bf0884981a7f306fc87fd", "patch": "@@ -1250,6 +1250,19 @@ Enable in and out of Graphite representation\n fgraphite-identity\n Common Report Var(flag_graphite_identity) Optimization\n Enable Graphite Identity transformation\n+ \n+fgraphite-code-generator=\n+Common Report RejectNegative Joined Optimization Enum(fgraphite_generator) Var(flag_graphite_code_gen) Init(FGRAPHITE_CODE_GEN_CLOOG)\n+Choose code generator of Graphite\n+\n+Enum\n+Name(fgraphite_generator) Type(enum fgraphite_generator) UnknownError(unknown code generator of graphite %qs)\n+\n+EnumValue\n+Enum(fgraphite_generator) String(isl) Value(FGRAPHITE_CODE_GEN_ISL)\n+\n+EnumValue\n+Enum(fgraphite_generator) String(cloog) Value(FGRAPHITE_CODE_GEN_CLOOG)\n \n fhoist-adjacent-loads\n Common Report Var(flag_hoist_adjacent_loads) Optimization"}, {"sha": "2849455d79393bc5355f6e7b89a16d9ff52a25fd", "filename": "gcc/flag-types.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6cc31036a59d23ee90bf0884981a7f306fc87fd/gcc%2Fflag-types.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6cc31036a59d23ee90bf0884981a7f306fc87fd/gcc%2Fflag-types.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fflag-types.h?ref=f6cc31036a59d23ee90bf0884981a7f306fc87fd", "patch": "@@ -254,4 +254,10 @@ enum lto_partition_model {\n   LTO_PARTITION_MAX = 4\n };\n \n+/* The code generator used by graphite */\n+enum fgraphite_generator {\n+  FGRAPHITE_CODE_GEN_ISL = 0,\n+  FGRAPHITE_CODE_GEN_CLOOG = 1\n+};\n+\n #endif /* ! GCC_FLAG_TYPES_H */"}, {"sha": "6437474741e417566395a65ce1de2148f981a0b9", "filename": "gcc/graphite-isl-ast-to-gimple.c", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6cc31036a59d23ee90bf0884981a7f306fc87fd/gcc%2Fgraphite-isl-ast-to-gimple.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6cc31036a59d23ee90bf0884981a7f306fc87fd/gcc%2Fgraphite-isl-ast-to-gimple.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.c?ref=f6cc31036a59d23ee90bf0884981a7f306fc87fd", "patch": "@@ -0,0 +1,133 @@\n+/* Translation of ISL AST to Gimple.\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+   Contributed by Roman Gareev <gareevroman@gmail.com>.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#include \"config.h\"\n+\n+#include <isl/set.h>\n+#include <isl/map.h>\n+#include <isl/union_map.h>\n+#include <isl/ast_build.h>\n+\n+#include \"system.h\"\n+#include \"coretypes.h\"\n+#include \"tree.h\"\n+#include \"basic-block.h\"\n+#include \"tree-ssa-alias.h\"\n+#include \"internal-fn.h\"\n+#include \"gimple-expr.h\"\n+#include \"is-a.h\"\n+#include \"gimple.h\"\n+#include \"gimple-iterator.h\"\n+#include \"tree-ssa-loop.h\"\n+#include \"tree-pass.h\"\n+#include \"cfgloop.h\"\n+#include \"tree-data-ref.h\"\n+#include \"sese.h\"\n+\n+#include \"graphite-poly.h\"\n+#include \"graphite-isl-ast-to-gimple.h\"\n+\n+/* This flag is set when an error occurred during the translation of\n+   ISL AST to Gimple.  */\n+\n+static bool graphite_regenerate_error;\n+\n+/* Prints NODE to FILE.  */\n+\n+void\n+print_isl_ast_node (FILE *file, __isl_keep isl_ast_node *node, \n+\t\t    __isl_keep isl_ctx *ctx)\n+{\n+  isl_printer *prn = isl_printer_to_file (ctx, file);\n+  prn = isl_printer_set_output_format (prn, ISL_FORMAT_C);\n+  prn = isl_printer_print_ast_node (prn, node);\n+  prn = isl_printer_print_str (prn, \"\\n\");\n+  isl_printer_free (prn);\n+}\n+\n+/* Generates a build, which specifies the constraints on the parameters.  */\n+\n+static isl_ast_build *\n+generate_isl_context (scop_p scop)\n+{\n+  isl_set *context_isl = isl_set_params (isl_set_copy (scop->context));\n+  return isl_ast_build_from_context (context_isl);\n+}\n+\n+/* Generates a schedule, which specifies an order used to\n+   visit elements in a domain.  */\n+\n+static isl_union_map *\n+generate_isl_schedule (scop_p scop)\n+{\n+  int i;\n+  poly_bb_p pbb;\n+  isl_union_map *schedule_isl =\n+    isl_union_map_empty (isl_set_get_space (scop->context));\n+\n+  FOR_EACH_VEC_ELT (SCOP_BBS (scop), i, pbb)\n+    {\n+      /* Dead code elimination: when the domain of a PBB is empty,\n+\t don't generate code for the PBB.  */\n+      if (isl_set_is_empty (pbb->domain))\n+\tcontinue;\n+\n+      isl_map *bb_schedule = isl_map_copy (pbb->transformed);\n+      bb_schedule = isl_map_intersect_domain (bb_schedule,\n+\t\t\t\t\t      isl_set_copy (pbb->domain));\n+      schedule_isl =\n+        isl_union_map_union (schedule_isl,\n+\t\t\t     isl_union_map_from_map (bb_schedule));\n+    }\n+  return schedule_isl;\n+}\n+\n+static isl_ast_node *\n+scop_to_isl_ast (scop_p scop)\n+{\n+  isl_union_map *schedule_isl = generate_isl_schedule (scop);\n+  isl_ast_build *context_isl = generate_isl_context (scop);\n+  isl_ast_node *ast_isl = isl_ast_build_ast_from_schedule (context_isl,\n+\t\t\t\t\t\t\t   schedule_isl);\n+  isl_ast_build_free (context_isl);\n+  return ast_isl;\n+}\n+\n+/* GIMPLE Loop Generator: generates loops from STMT in GIMPLE form for\n+   the given SCOP.  Return true if code generation succeeded.\n+\n+   FIXME: This is not yet a full implementation of the code generator\n+          with ISL ASTs. Generation of GIMPLE code is have to be added.  */\n+\n+bool\n+graphite_regenerate_ast_isl (scop_p scop)\n+{\n+  timevar_push (TV_GRAPHITE_CODE_GEN);\n+  graphite_regenerate_error = false;\n+  isl_ast_node *root_node = scop_to_isl_ast (scop);\n+  if (dump_file && (dump_flags & TDF_DETAILS))\n+    {\n+      fprintf (dump_file, \"\\nISL AST generated by ISL: \\n\");\n+      print_isl_ast_node (dump_file, root_node, scop->ctx);\n+    }\n+  isl_ast_node_free (root_node);\n+  timevar_pop (TV_GRAPHITE_CODE_GEN);\n+  return !graphite_regenerate_error;\n+}"}, {"sha": "0d98780523f30992bcd650710a0925498a702ec1", "filename": "gcc/graphite-isl-ast-to-gimple.h", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6cc31036a59d23ee90bf0884981a7f306fc87fd/gcc%2Fgraphite-isl-ast-to-gimple.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6cc31036a59d23ee90bf0884981a7f306fc87fd/gcc%2Fgraphite-isl-ast-to-gimple.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-isl-ast-to-gimple.h?ref=f6cc31036a59d23ee90bf0884981a7f306fc87fd", "patch": "@@ -0,0 +1,26 @@\n+/* Translation of ISL AST to Gimple.\n+   Copyright (C) 2014 Free Software Foundation, Inc.\n+   Contributed by Roman Gareev <gareevroman@gmail.com>.\n+\n+This file is part of GCC.\n+\n+GCC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 3, or (at your option)\n+any later version.\n+\n+GCC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GCC; see the file COPYING3.  If not see\n+<http://www.gnu.org/licenses/>.  */\n+\n+#ifndef GCC_GRAPHITE_ISL_AST_TO_GIMPLE_H\n+#define GCC_GRAPHITE_ISL_AST_TO_GIMPLE_H\n+\n+extern bool graphite_regenerate_ast_isl (scop_p);\n+\n+#endif"}, {"sha": "0e424d01a057278f554197a794abf6b3171a9a52", "filename": "gcc/graphite.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6cc31036a59d23ee90bf0884981a7f306fc87fd/gcc%2Fgraphite.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6cc31036a59d23ee90bf0884981a7f306fc87fd/gcc%2Fgraphite.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite.c?ref=f6cc31036a59d23ee90bf0884981a7f306fc87fd", "patch": "@@ -73,6 +73,7 @@ along with GCC; see the file COPYING3.  If not see\n #include \"graphite-poly.h\"\n #include \"graphite-scop-detection.h\"\n #include \"graphite-clast-to-gimple.h\"\n+#include \"graphite-isl-ast-to-gimple.h\"\n #include \"graphite-sese-to-poly.h\"\n #include \"graphite-htab.h\"\n \n@@ -299,7 +300,10 @@ graphite_transform_loops (void)\n \n \tif (POLY_SCOP_P (scop)\n \t    && apply_poly_transforms (scop)\n-\t    && graphite_regenerate_ast_cloog (scop, &bb_pbb_mapping))\n+\t    && (((flag_graphite_code_gen == FGRAPHITE_CODE_GEN_ISL)\n+\t    && graphite_regenerate_ast_isl (scop))\n+\t    || ((flag_graphite_code_gen == FGRAPHITE_CODE_GEN_CLOOG)\n+\t    && graphite_regenerate_ast_cloog (scop, &bb_pbb_mapping))))\n \t  need_cfg_cleanup_p = true;\n       }\n "}, {"sha": "65d51555580c4f5806e92cfb973fb070e4183a45", "filename": "gcc/testsuite/gcc.dg/graphite/isl-codegen-loop-dumping.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f6cc31036a59d23ee90bf0884981a7f306fc87fd/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fisl-codegen-loop-dumping.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f6cc31036a59d23ee90bf0884981a7f306fc87fd/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fisl-codegen-loop-dumping.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fisl-codegen-loop-dumping.c?ref=f6cc31036a59d23ee90bf0884981a7f306fc87fd", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-options \"-O2 -fdump-tree-graphite-all -fgraphite-identity -fgraphite-code-generator=isl\" } */\n+\n+int\n+main (int n, int *a)\n+{\n+  int i, j;\n+\n+  for (i = 0; i < n - 1; i++)\n+    for (j = 0; j < n; j++)\n+      a[j] = i + n;\n+\n+  return 0;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"ISL AST generated by ISL: \\nfor \\\\(int c1 = 0; c1 < n - 1; c1 \\\\+= 1\\\\)\\n  for \\\\(int c3 = 0; c3 < n; c3 \\\\+= 1\\\\)\\n    S_4\\\\(c1, c3\\\\);\" 1 \"graphite\"} } */\n+/* { dg-final { cleanup-tree-dump \"graphite\" } } */"}]}