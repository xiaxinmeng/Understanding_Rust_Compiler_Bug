{"sha": "48ca24b27a247da85e83945702b547e5241f14ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhjYTI0YjI3YTI0N2RhODVlODM5NDU3MDJiNTQ3ZTUyNDFmMTRhZA==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2008-09-18T22:29:39Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2008-09-18T22:29:39Z"}, "message": "re PR testsuite/25241 ([C++] DejaGNU does not distinguish between errors and warnings)\n\n\tPR testsuite/25241\n\t* lib/g++.exp (g++_init): Enable overrides of dg-error, dg-warning\n\tfor C++ tests.\n\t* g++.dg/conversion/ambig1.C: Clean up dg-error/dg-warning; use\n\tdg-message for notes.\n\t* g++.dg/conversion/simd1.C: Ditto.\n\t* g++.dg/conversion/simd3.C: Ditto.\n\t* g++.dg/cpp0x/rv2n.C: Ditto.\n\t* g++.dg/cpp0x/rv3n.C: Ditto.\n\t* g++.dg/cpp0x/rv4n.C: Ditto.\n\t* g++.dg/cpp0x/rv5n.C: Ditto.\n\t* g++.dg/cpp0x/rv6n.C: Ditto.\n\t* g++.dg/cpp0x/rv7n.C: Ditto.\n\t* g++.dg/cpp0x/variadic36.C: Ditto.\n\t* g++.dg/cpp0x/variadic59.C: Ditto.\n\t* g++.dg/cpp0x/variadic71.C: Ditto.\n\t* g++.dg/cpp0x/variadic-ex13.C: Ditto.\n\t* g++.dg/expr/cond9.C: Ditto.\n\t* g++.dg/expr/pmf-1.C: Ditto.\n\t* g++.dg/ext/case-range2.C: Ditto.\n\t* g++.dg/ext/case-range3.C: Ditto.\n\t* g++.dg/ext/is_class_error2.C: Ditto.\n\t* g++.dg/ext/label5.C: Ditto.\n\t* g++.dg/ext/pr27019.C: Ditto.\n\t* g++.dg/gomp/pr26690-1.C: Ditto.\n\t* g++.dg/gomp/pr26690-2.C: Ditto.\n\t* g++.dg/gomp/pr34694.C: Ditto.\n\t* g++.dg/gomp/tpl-parallel-2.C: Ditto.\n\t* g++.dg/inherit/base3.C: Ditto.\n\t* g++.dg/inherit/using6.C: Ditto.\n\t* g++.dg/init/brace6.C: Ditto.\n\t* g++.dg/init/ctor4.C: Ditto.\n\t* g++.dg/lookup/conv-1.C: Ditto.\n\t* g++.dg/lookup/new1.C: Ditto.\n\t* g++.dg/lookup/scoped6.C: Ditto.\n\t* g++.dg/lookup/using7.C: Ditto.\n\t* g++.dg/lookup/using9.C: Ditto.\n\t* g++.dg/other/abstract1.C: Ditto.\n\t* g++.dg/other/abstract2.C: Ditto.\n\t* g++.dg/other/anon5.C: Ditto.\n\t* g++.dg/other/crash-4.C: Ditto.\n\t* g++.dg/other/error10.C: Ditto.\n\t* g++.dg/other/error13.C: Ditto.\n\t* g++.dg/other/error20.C: Ditto.\n\t* g++.dg/other/error5.C: Ditto.\n\t* g++.dg/other/field1.C: Ditto.\n\t* g++.dg/other/offsetof5.C: Ditto.\n\t* g++.dg/other/semicolon.C: Ditto.\n\t* g++.dg/overload/ambig1.C: Ditto.\n\t* g++.dg/overload/arg3.C: Ditto.\n\t* g++.dg/overload/builtin1.C: Ditto.\n\t* g++.dg/overload/copy1.C: Ditto.\n\t* g++.dg/overload/new1.C: Ditto.\n\t* g++.dg/overload/template4.C: Ditto.\n\t* g++.dg/overload/using2.C: Ditto.\n\t* g++.dg/parse/bitfield2.C: Ditto.\n\t* g++.dg/parse/constant4.C: Ditto.\n\t* g++.dg/parse/crash20.C: Ditto.\n\t* g++.dg/parse/crash36.C: Ditto.\n\t* g++.dg/parse/crash5.C: Ditto.\n\t* g++.dg/parse/error11.C: Ditto.\n\t* g++.dg/parse/error12.C: Ditto.\n\t* g++.dg/parse/error19.C: Ditto.\n\t* g++.dg/parse/error28.C: Ditto.\n\t* g++.dg/parse/friend5.C: Ditto.\n\t* g++.dg/parse/invalid-op1.C: Ditto.\n\t* g++.dg/parse/missing-template1.C: Ditto.\n\t* g++.dg/parse/non-dependent2.C: Ditto.\n\t* g++.dg/parse/ret-type2.C: Ditto.\n\t* g++.dg/parse/specialization1.C: Ditto.\n\t* g++.dg/parse/template18.C: Ditto.\n\t* g++.dg/parse/template3.C: Ditto.\n\t* g++.dg/parse/template9.C: Ditto.\n\t* g++.dg/tc1/dr108.C: Ditto.\n\t* g++.dg/tc1/dr152.C: Ditto.\n\t* g++.dg/tc1/dr166.C: Ditto.\n\t* g++.dg/template/access11.C: Ditto.\n\t* g++.dg/template/access2.C: Ditto.\n\t* g++.dg/template/access3.C: Ditto.\n\t* g++.dg/template/access7.C: Ditto.\n\t* g++.dg/template/copy1.C: Ditto.\n\t* g++.dg/template/crash13.C: Ditto.\n\t* g++.dg/template/crash37.C: Ditto.\n\t* g++.dg/template/crash40.C: Ditto.\n\t* g++.dg/template/crash58.C: Ditto.\n\t* g++.dg/template/ctor5.C: Ditto.\n\t* g++.dg/template/dependent-expr5.C: Ditto.\n\t* g++.dg/template/eh2.C: Ditto.\n\t* g++.dg/template/error2.C: Ditto.\n\t* g++.dg/template/error33.C: Ditto.\n\t* g++.dg/template/error4.C: Ditto.\n\t* g++.dg/template/friend31.C: Ditto.\n\t* g++.dg/template/friend32.C: Ditto.\n\t* g++.dg/template/instantiate1.C: Ditto.\n\t* g++.dg/template/instantiate3.C: Ditto.\n\t* g++.dg/template/instantiate5.C: Ditto.\n\t* g++.dg/template/instantiate7.C: Ditto.\n\t* g++.dg/template/local6.C: Ditto.\n\t* g++.dg/template/lookup2.C: Ditto.\n\t* g++.dg/template/member5.C: Ditto.\n\t* g++.dg/template/memfriend15.C: Ditto.\n\t* g++.dg/template/memfriend16.C: Ditto.\n\t* g++.dg/template/memfriend17.C: Ditto.\n\t* g++.dg/template/memfriend7.C: Ditto.\n\t* g++.dg/template/meminit1.C: Ditto.\n\t* g++.dg/template/nested3.C: Ditto.\n\t* g++.dg/template/new3.C: Ditto.\n\t* g++.dg/template/nontype12.C: Ditto.\n\t* g++.dg/template/nontype13.C: Ditto.\n\t* g++.dg/template/nontype6.C: Ditto.\n\t* g++.dg/template/non-type-template-argument-1.C: Ditto.\n\t* g++.dg/template/overload9.C: Ditto.\n\t* g++.dg/template/ptrmem15.C: Ditto.\n\t* g++.dg/template/ptrmem17.C: Ditto.\n\t* g++.dg/template/ptrmem4.C: Ditto.\n\t* g++.dg/template/ptrmem6.C: Ditto.\n\t* g++.dg/template/ptrmem8.C: Ditto.\n\t* g++.dg/template/qualified-id1.C: Ditto.\n\t* g++.dg/template/qualttp20.C: Ditto.\n\t* g++.dg/template/qualttp3.C: Ditto.\n\t* g++.dg/template/qualttp4.C: Ditto.\n\t* g++.dg/template/qualttp5.C: Ditto.\n\t* g++.dg/template/qualttp6.C: Ditto.\n\t* g++.dg/template/qualttp7.C: Ditto.\n\t* g++.dg/template/qualttp8.C: Ditto.\n\t* g++.dg/template/recurse.C: Ditto.\n\t* g++.dg/template/sfinae10.C: Ditto.\n\t* g++.dg/template/sfinae3.C: Ditto.\n\t* g++.dg/template/spec22.C: Ditto.\n\t* g++.dg/template/spec23.C: Ditto.\n\t* g++.dg/template/static9.C: Ditto.\n\t* g++.dg/template/template-id-2.C: Ditto.\n\t* g++.dg/template/typename2.C: Ditto.\n\t* g++.dg/template/typename4.C: Ditto.\n\t* g++.dg/template/using14.C: Ditto.\n\t* g++.dg/template/using2.C: Ditto.\n\t* g++.dg/template/warn1.C: Ditto.\n\t* g++.dg/warn/incomplete1.C: Ditto.\n\t* g++.dg/warn/noeffect2.C: Ditto.\n\t* g++.dg/warn/noeffect4.C: Ditto.\n\t* g++.dg/warn/pr8570.C: Ditto.\n\t* g++.dg/warn/Wparentheses-13.C: Ditto.\n\t* g++.dg/warn/Wparentheses-15.C: Ditto.\n\t* g++.dg/warn/Wparentheses-16.C: Ditto.\n\t* g++.dg/warn/Wparentheses-17.C: Ditto.\n\t* g++.dg/warn/Wparentheses-18.C: Ditto.\n\t* g++.dg/warn/Wparentheses-19.C: Ditto.\n\t* g++.dg/warn/Wparentheses-20.C: Ditto.\n\t* g++.dg/warn/Wparentheses-23.C: Ditto.\n\t* g++.dg/warn/Wstrict-aliasing-3.C: Ditto.\n\t* g++.old-deja/g++.benjamin/15799.C: Ditto.\n\t* g++.old-deja/g++.benjamin/15800-1.C: Ditto.\n\t* g++.old-deja/g++.benjamin/16077.C: Ditto.\n\t* g++.old-deja/g++.bob/inherit2.C: Ditto.\n\t* g++.old-deja/g++.brendan/ambiguity1.C: Ditto.\n\t* g++.old-deja/g++.brendan/crash29.C: Ditto.\n\t* g++.old-deja/g++.brendan/crash48.C: Ditto.\n\t* g++.old-deja/g++.brendan/crash56.C: Ditto.\n\t* g++.old-deja/g++.brendan/cvt3.C: Ditto.\n\t* g++.old-deja/g++.brendan/overload1.C: Ditto.\n\t* g++.old-deja/g++.brendan/overload4.C: Ditto.\n\t* g++.old-deja/g++.brendan/overload9.C: Ditto.\n\t* g++.old-deja/g++.bugs/900127_01.C: Ditto.\n\t* g++.old-deja/g++.bugs/900205_04.C: Ditto.\n\t* g++.old-deja/g++.bugs/900330_02.C: Ditto.\n\t* g++.old-deja/g++.bugs/900404_03.C: Ditto.\n\t* g++.old-deja/g++.bugs/900514_03.C: Ditto.\n\t* g++.old-deja/g++.eh/ctor1.C: Ditto.\n\t* g++.old-deja/g++.eh/spec6.C: Ditto.\n\t* g++.old-deja/g++.ext/overload1.C: Ditto.\n\t* g++.old-deja/g++.jason/conversion11.C: Ditto.\n\t* g++.old-deja/g++.jason/crash3.C: Ditto.\n\t* g++.old-deja/g++.jason/lineno3.C: Ditto.\n\t* g++.old-deja/g++.jason/lineno4.C: Ditto.\n\t* g++.old-deja/g++.jason/opeq3.C: Ditto.\n\t* g++.old-deja/g++.jason/overload16.C: Ditto.\n\t* g++.old-deja/g++.jason/overload28.C: Ditto.\n\t* g++.old-deja/g++.jason/pmf5.C: Ditto.\n\t* g++.old-deja/g++.jason/scoping10.C: Ditto.\n\t* g++.old-deja/g++.jason/template30.C: Ditto.\n\t* g++.old-deja/g++.jason/temporary2.C: Ditto.\n\t* g++.old-deja/g++.jason/tredecl4.C: Ditto.\n\t* g++.old-deja/g++.law/arg11.C: Ditto.\n\t* g++.old-deja/g++.law/arg1.C: Ditto.\n\t* g++.old-deja/g++.law/arm9.C: Ditto.\n\t* g++.old-deja/g++.law/ctors11.C: Ditto.\n\t* g++.old-deja/g++.law/ctors17.C: Ditto.\n\t* g++.old-deja/g++.law/ctors5.C: Ditto.\n\t* g++.old-deja/g++.law/ctors9.C: Ditto.\n\t* g++.old-deja/g++.law/enum4.C: Ditto.\n\t* g++.old-deja/g++.law/missed-error2.C: Ditto.\n\t* g++.old-deja/g++.law/operators9.C: Ditto.\n\t* g++.old-deja/g++.mike/net22.C: Ditto.\n\t* g++.old-deja/g++.mike/net2.C: Ditto.\n\t* g++.old-deja/g++.mike/p11110.C: Ditto.\n\t* g++.old-deja/g++.mike/p1989.C: Ditto.\n\t* g++.old-deja/g++.mike/p2431.C: Ditto.\n\t* g++.old-deja/g++.mike/p438.C: Ditto.\n\t* g++.old-deja/g++.mike/p807a.C: Ditto.\n\t* g++.old-deja/g++.mike/p9068.C: Ditto.\n\t* g++.old-deja/g++.niklas/t120.C: Ditto.\n\t* g++.old-deja/g++.niklas/t121.C: Ditto.\n\t* g++.old-deja/g++.niklas/t128.C: Ditto.\n\t* g++.old-deja/g++.ns/overload2.C: Ditto.\n\t* g++.old-deja/g++.ns/template13.C: Ditto.\n\t* g++.old-deja/g++.ns/using12.C: Ditto.\n\t* g++.old-deja/g++.oliva/delete1.C: Ditto.\n\t* g++.old-deja/g++.oliva/overload1.C: Ditto.\n\t* g++.old-deja/g++.other/crash24.C: Ditto.\n\t* g++.old-deja/g++.other/crash25.C: Ditto.\n\t* g++.old-deja/g++.other/decl3.C: Ditto.\n\t* g++.old-deja/g++.other/expr1.C: Ditto.\n\t* g++.old-deja/g++.other/overcnv2.C: Ditto.\n\t* g++.old-deja/g++.other/overload11.C: Ditto.\n\t* g++.old-deja/g++.other/pmf3.C: Ditto.\n\t* g++.old-deja/g++.other/ptrmem7.C: Ditto.\n\t* g++.old-deja/g++.other/vaarg3.C: Ditto.\n\t* g++.old-deja/g++.other/volatile1.C: Ditto.\n\t* g++.old-deja/g++.pt/assign1.C: Ditto.\n\t* g++.old-deja/g++.pt/auto_ptr.C: Ditto.\n\t* g++.old-deja/g++.pt/const2.C: Ditto.\n\t* g++.old-deja/g++.pt/crash10.C: Ditto.\n\t* g++.old-deja/g++.pt/crash20.C: Ditto.\n\t* g++.old-deja/g++.pt/crash36.C: Ditto.\n\t* g++.old-deja/g++.pt/crash38.C: Ditto.\n\t* g++.old-deja/g++.pt/derived3.C: Ditto.\n\t* g++.old-deja/g++.pt/error2.C: Ditto.\n\t* g++.old-deja/g++.pt/explicit34.C: Ditto.\n\t* g++.old-deja/g++.pt/explicit70.C: Ditto.\n\t* g++.old-deja/g++.pt/friend23.C: Ditto.\n\t* g++.old-deja/g++.pt/ptrmem10.C: Ditto.\n\t* g++.old-deja/g++.pt/redecl1.C: Ditto.\n\t* g++.old-deja/g++.pt/spec35.C: Ditto.\n\t* g++.old-deja/g++.pt/t05.C: Ditto.\n\t* g++.old-deja/g++.pt/typename3.C: Ditto.\n\t* g++.old-deja/g++.pt/typename6.C: Ditto.\n\t* g++.old-deja/g++.pt/unify8.C: Ditto.\n\t* g++.old-deja/g++.pt/vaarg3.C: Ditto.\n\t* g++.old-deja/g++.robertl/eb109.C: Ditto.\n\t* g++.old-deja/g++.robertl/eb131.C: Ditto.\n\t* g++.old-deja/g++.robertl/eb22.C: Ditto.\n\t* g++.old-deja/g++.robertl/eb44.C: Ditto.\n\t* g++.old-deja/g++.robertl/eb4.C: Ditto.\n\t* g++.old-deja/g++.robertl/eb69.C: Ditto.\n\t* g++.dg/parse/constructor1.C: Remove \"error\" from dg-error, preserving\n\tcolumn number.\n\t* g++.dg/parse/error10.C: Ditto.\n\t* g++.dg/parse/error13.C: Ditto.\n\t* g++.dg/parse/error14.C: Ditto.\n\t* g++.dg/parse/error15.C: Ditto.\n\t* g++.dg/parse/error16.C: Ditto.\n\t* g++.dg/parse/error17.C: Ditto.\n\t* g++.dg/parse/error18.C: Ditto.\n\t* g++.dg/parse/error1.C: Ditto.\n\t* g++.dg/parse/error20.C: Ditto.\n\t* g++.dg/parse/error21.C: Ditto.\n\t* g++.dg/parse/error22.C: Ditto.\n\t* g++.dg/parse/error23.C: Ditto.\n\t* g++.dg/parse/error24.C: Ditto.\n\t* g++.dg/parse/error25.C: Ditto.\n\t* g++.dg/parse/error26.C: Ditto.\n\t* g++.dg/parse/error27.C: Ditto.\n\t* g++.dg/parse/error29.C: Ditto.\n\t* g++.dg/parse/error2.C: Ditto.\n\t* g++.dg/parse/error30.C: Ditto.\n\t* g++.dg/parse/error31.C: Ditto.\n\t* g++.dg/parse/error3.C: Ditto.\n\t* g++.dg/parse/error4.C: Ditto.\n\t* g++.dg/parse/error5.C: Ditto.\n\t* g++.dg/parse/error6.C: Ditto.\n\t* g++.dg/parse/error7.C: Ditto.\n\t* g++.dg/parse/error8.C: Ditto.\n\t* g++.dg/parse/error9.C: Ditto.\n\t* g++.dg/parse/error-column.C: Ditto.\n\t* g++.dg/template/crash80.C: Ditto.\n\t* g++.dg/template/friend44.C: Ditto.\n\t* g++.dg/warn/pr26785.C: Ditto.\n\t* g++.old-deja/g++.brendan/crash16.C: Ditto.\n\nFrom-SVN: r140476", "tree": {"sha": "3f57578e9e6379fbd49d7464a45a2575c8a5cf34", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f57578e9e6379fbd49d7464a45a2575c8a5cf34"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48ca24b27a247da85e83945702b547e5241f14ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48ca24b27a247da85e83945702b547e5241f14ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48ca24b27a247da85e83945702b547e5241f14ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48ca24b27a247da85e83945702b547e5241f14ad/comments", "author": null, "committer": null, "parents": [{"sha": "faae4ae73f955ae9049f540fc7199e583a1d781e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/faae4ae73f955ae9049f540fc7199e583a1d781e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/faae4ae73f955ae9049f540fc7199e583a1d781e"}], "stats": {"total": 2808, "additions": 1599, "deletions": 1209}, "files": [{"sha": "47885fe5bd3c703b6c43a7898bbe034c30becb90", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 281, "deletions": 0, "changes": 281, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,3 +1,284 @@\n+2008-09-18  Janis Johnson  <janis187@us.ibm.com>\n+\n+\tPR testsuite/25241\n+\t* lib/g++.exp (g++_init): Enable overrides of dg-error, dg-warning\n+\tfor C++ tests.\n+\t* g++.dg/conversion/ambig1.C: Clean up dg-error/dg-warning; use\n+\tdg-message for notes.\n+\t* g++.dg/conversion/simd1.C: Ditto.\n+\t* g++.dg/conversion/simd3.C: Ditto.\n+\t* g++.dg/cpp0x/rv2n.C: Ditto.\n+\t* g++.dg/cpp0x/rv3n.C: Ditto.\n+\t* g++.dg/cpp0x/rv4n.C: Ditto.\n+\t* g++.dg/cpp0x/rv5n.C: Ditto.\n+\t* g++.dg/cpp0x/rv6n.C: Ditto.\n+\t* g++.dg/cpp0x/rv7n.C: Ditto.\n+\t* g++.dg/cpp0x/variadic36.C: Ditto.\n+\t* g++.dg/cpp0x/variadic59.C: Ditto.\n+\t* g++.dg/cpp0x/variadic71.C: Ditto.\n+\t* g++.dg/cpp0x/variadic-ex13.C: Ditto.\n+\t* g++.dg/expr/cond9.C: Ditto.\n+\t* g++.dg/expr/pmf-1.C: Ditto.\n+\t* g++.dg/ext/case-range2.C: Ditto.\n+\t* g++.dg/ext/case-range3.C: Ditto.\n+\t* g++.dg/ext/is_class_error2.C: Ditto.\n+\t* g++.dg/ext/label5.C: Ditto.\n+\t* g++.dg/ext/pr27019.C: Ditto.\n+\t* g++.dg/gomp/pr26690-1.C: Ditto.\n+\t* g++.dg/gomp/pr26690-2.C: Ditto.\n+\t* g++.dg/gomp/pr34694.C: Ditto.\n+\t* g++.dg/gomp/tpl-parallel-2.C: Ditto.\n+\t* g++.dg/inherit/base3.C: Ditto.\n+\t* g++.dg/inherit/using6.C: Ditto.\n+\t* g++.dg/init/brace6.C: Ditto.\n+\t* g++.dg/init/ctor4.C: Ditto.\n+\t* g++.dg/lookup/conv-1.C: Ditto.\n+\t* g++.dg/lookup/new1.C: Ditto.\n+\t* g++.dg/lookup/scoped6.C: Ditto.\n+\t* g++.dg/lookup/using7.C: Ditto.\n+\t* g++.dg/lookup/using9.C: Ditto.\n+\t* g++.dg/other/abstract1.C: Ditto.\n+\t* g++.dg/other/abstract2.C: Ditto.\n+\t* g++.dg/other/anon5.C: Ditto.\n+\t* g++.dg/other/crash-4.C: Ditto.\n+\t* g++.dg/other/error10.C: Ditto.\n+\t* g++.dg/other/error13.C: Ditto.\n+\t* g++.dg/other/error20.C: Ditto.\n+\t* g++.dg/other/error5.C: Ditto.\n+\t* g++.dg/other/field1.C: Ditto.\n+\t* g++.dg/other/offsetof5.C: Ditto.\n+\t* g++.dg/other/semicolon.C: Ditto.\n+\t* g++.dg/overload/ambig1.C: Ditto.\n+\t* g++.dg/overload/arg3.C: Ditto.\n+\t* g++.dg/overload/builtin1.C: Ditto.\n+\t* g++.dg/overload/copy1.C: Ditto.\n+\t* g++.dg/overload/new1.C: Ditto.\n+\t* g++.dg/overload/template4.C: Ditto.\n+\t* g++.dg/overload/using2.C: Ditto.\n+\t* g++.dg/parse/bitfield2.C: Ditto.\n+\t* g++.dg/parse/constant4.C: Ditto.\n+\t* g++.dg/parse/crash20.C: Ditto.\n+\t* g++.dg/parse/crash36.C: Ditto.\n+\t* g++.dg/parse/crash5.C: Ditto.\n+\t* g++.dg/parse/error11.C: Ditto.\n+\t* g++.dg/parse/error12.C: Ditto.\n+\t* g++.dg/parse/error19.C: Ditto.\n+\t* g++.dg/parse/error28.C: Ditto.\n+\t* g++.dg/parse/friend5.C: Ditto.\n+\t* g++.dg/parse/invalid-op1.C: Ditto.\n+\t* g++.dg/parse/missing-template1.C: Ditto.\n+\t* g++.dg/parse/non-dependent2.C: Ditto.\n+\t* g++.dg/parse/ret-type2.C: Ditto.\n+\t* g++.dg/parse/specialization1.C: Ditto.\n+\t* g++.dg/parse/template18.C: Ditto.\n+\t* g++.dg/parse/template3.C: Ditto.\n+\t* g++.dg/parse/template9.C: Ditto.\n+\t* g++.dg/tc1/dr108.C: Ditto.\n+\t* g++.dg/tc1/dr152.C: Ditto.\n+\t* g++.dg/tc1/dr166.C: Ditto.\n+\t* g++.dg/template/access11.C: Ditto.\n+\t* g++.dg/template/access2.C: Ditto.\n+\t* g++.dg/template/access3.C: Ditto.\n+\t* g++.dg/template/access7.C: Ditto.\n+\t* g++.dg/template/copy1.C: Ditto.\n+\t* g++.dg/template/crash13.C: Ditto.\n+\t* g++.dg/template/crash37.C: Ditto.\n+\t* g++.dg/template/crash40.C: Ditto.\n+\t* g++.dg/template/crash58.C: Ditto.\n+\t* g++.dg/template/ctor5.C: Ditto.\n+\t* g++.dg/template/dependent-expr5.C: Ditto.\n+\t* g++.dg/template/eh2.C: Ditto.\n+\t* g++.dg/template/error2.C: Ditto.\n+\t* g++.dg/template/error33.C: Ditto.\n+\t* g++.dg/template/error4.C: Ditto.\n+\t* g++.dg/template/friend31.C: Ditto.\n+\t* g++.dg/template/friend32.C: Ditto.\n+\t* g++.dg/template/instantiate1.C: Ditto.\n+\t* g++.dg/template/instantiate3.C: Ditto.\n+\t* g++.dg/template/instantiate5.C: Ditto.\n+\t* g++.dg/template/instantiate7.C: Ditto.\n+\t* g++.dg/template/local6.C: Ditto.\n+\t* g++.dg/template/lookup2.C: Ditto.\n+\t* g++.dg/template/member5.C: Ditto.\n+\t* g++.dg/template/memfriend15.C: Ditto.\n+\t* g++.dg/template/memfriend16.C: Ditto.\n+\t* g++.dg/template/memfriend17.C: Ditto.\n+\t* g++.dg/template/memfriend7.C: Ditto.\n+\t* g++.dg/template/meminit1.C: Ditto.\n+\t* g++.dg/template/nested3.C: Ditto.\n+\t* g++.dg/template/new3.C: Ditto.\n+\t* g++.dg/template/nontype12.C: Ditto.\n+\t* g++.dg/template/nontype13.C: Ditto.\n+\t* g++.dg/template/nontype6.C: Ditto.\n+\t* g++.dg/template/non-type-template-argument-1.C: Ditto.\n+\t* g++.dg/template/overload9.C: Ditto.\n+\t* g++.dg/template/ptrmem15.C: Ditto.\n+\t* g++.dg/template/ptrmem17.C: Ditto.\n+\t* g++.dg/template/ptrmem4.C: Ditto.\n+\t* g++.dg/template/ptrmem6.C: Ditto.\n+\t* g++.dg/template/ptrmem8.C: Ditto.\n+\t* g++.dg/template/qualified-id1.C: Ditto.\n+\t* g++.dg/template/qualttp20.C: Ditto.\n+\t* g++.dg/template/qualttp3.C: Ditto.\n+\t* g++.dg/template/qualttp4.C: Ditto.\n+\t* g++.dg/template/qualttp5.C: Ditto.\n+\t* g++.dg/template/qualttp6.C: Ditto.\n+\t* g++.dg/template/qualttp7.C: Ditto.\n+\t* g++.dg/template/qualttp8.C: Ditto.\n+\t* g++.dg/template/recurse.C: Ditto.\n+\t* g++.dg/template/sfinae10.C: Ditto.\n+\t* g++.dg/template/sfinae3.C: Ditto.\n+\t* g++.dg/template/spec22.C: Ditto.\n+\t* g++.dg/template/spec23.C: Ditto.\n+\t* g++.dg/template/static9.C: Ditto.\n+\t* g++.dg/template/template-id-2.C: Ditto.\n+\t* g++.dg/template/typename2.C: Ditto.\n+\t* g++.dg/template/typename4.C: Ditto.\n+\t* g++.dg/template/using14.C: Ditto.\n+\t* g++.dg/template/using2.C: Ditto.\n+\t* g++.dg/template/warn1.C: Ditto.\n+\t* g++.dg/warn/incomplete1.C: Ditto.\n+\t* g++.dg/warn/noeffect2.C: Ditto.\n+\t* g++.dg/warn/noeffect4.C: Ditto.\n+\t* g++.dg/warn/pr8570.C: Ditto.\n+\t* g++.dg/warn/Wparentheses-13.C: Ditto.\n+\t* g++.dg/warn/Wparentheses-15.C: Ditto.\n+\t* g++.dg/warn/Wparentheses-16.C: Ditto.\n+\t* g++.dg/warn/Wparentheses-17.C: Ditto.\n+\t* g++.dg/warn/Wparentheses-18.C: Ditto.\n+\t* g++.dg/warn/Wparentheses-19.C: Ditto.\n+\t* g++.dg/warn/Wparentheses-20.C: Ditto.\n+\t* g++.dg/warn/Wparentheses-23.C: Ditto.\n+\t* g++.dg/warn/Wstrict-aliasing-3.C: Ditto.\n+\t* g++.old-deja/g++.benjamin/15799.C: Ditto.\n+\t* g++.old-deja/g++.benjamin/15800-1.C: Ditto.\n+\t* g++.old-deja/g++.benjamin/16077.C: Ditto.\n+\t* g++.old-deja/g++.bob/inherit2.C: Ditto.\n+\t* g++.old-deja/g++.brendan/ambiguity1.C: Ditto.\n+\t* g++.old-deja/g++.brendan/crash29.C: Ditto.\n+\t* g++.old-deja/g++.brendan/crash48.C: Ditto.\n+\t* g++.old-deja/g++.brendan/crash56.C: Ditto.\n+\t* g++.old-deja/g++.brendan/cvt3.C: Ditto.\n+\t* g++.old-deja/g++.brendan/overload1.C: Ditto.\n+\t* g++.old-deja/g++.brendan/overload4.C: Ditto.\n+\t* g++.old-deja/g++.brendan/overload9.C: Ditto.\n+\t* g++.old-deja/g++.bugs/900127_01.C: Ditto.\n+\t* g++.old-deja/g++.bugs/900205_04.C: Ditto.\n+\t* g++.old-deja/g++.bugs/900330_02.C: Ditto.\n+\t* g++.old-deja/g++.bugs/900404_03.C: Ditto.\n+\t* g++.old-deja/g++.bugs/900514_03.C: Ditto.\n+\t* g++.old-deja/g++.eh/ctor1.C: Ditto.\n+\t* g++.old-deja/g++.eh/spec6.C: Ditto.\n+\t* g++.old-deja/g++.ext/overload1.C: Ditto.\n+\t* g++.old-deja/g++.jason/conversion11.C: Ditto.\n+\t* g++.old-deja/g++.jason/crash3.C: Ditto.\n+\t* g++.old-deja/g++.jason/lineno3.C: Ditto.\n+\t* g++.old-deja/g++.jason/lineno4.C: Ditto.\n+\t* g++.old-deja/g++.jason/opeq3.C: Ditto.\n+\t* g++.old-deja/g++.jason/overload16.C: Ditto.\n+\t* g++.old-deja/g++.jason/overload28.C: Ditto.\n+\t* g++.old-deja/g++.jason/pmf5.C: Ditto.\n+\t* g++.old-deja/g++.jason/scoping10.C: Ditto.\n+\t* g++.old-deja/g++.jason/template30.C: Ditto.\n+\t* g++.old-deja/g++.jason/temporary2.C: Ditto.\n+\t* g++.old-deja/g++.jason/tredecl4.C: Ditto.\n+\t* g++.old-deja/g++.law/arg11.C: Ditto.\n+\t* g++.old-deja/g++.law/arg1.C: Ditto.\n+\t* g++.old-deja/g++.law/arm9.C: Ditto.\n+\t* g++.old-deja/g++.law/ctors11.C: Ditto.\n+\t* g++.old-deja/g++.law/ctors17.C: Ditto.\n+\t* g++.old-deja/g++.law/ctors5.C: Ditto.\n+\t* g++.old-deja/g++.law/ctors9.C: Ditto.\n+\t* g++.old-deja/g++.law/enum4.C: Ditto.\n+\t* g++.old-deja/g++.law/missed-error2.C: Ditto.\n+\t* g++.old-deja/g++.law/operators9.C: Ditto.\n+\t* g++.old-deja/g++.mike/net22.C: Ditto.\n+\t* g++.old-deja/g++.mike/net2.C: Ditto.\n+\t* g++.old-deja/g++.mike/p11110.C: Ditto.\n+\t* g++.old-deja/g++.mike/p1989.C: Ditto.\n+\t* g++.old-deja/g++.mike/p2431.C: Ditto.\n+\t* g++.old-deja/g++.mike/p438.C: Ditto.\n+\t* g++.old-deja/g++.mike/p807a.C: Ditto.\n+\t* g++.old-deja/g++.mike/p9068.C: Ditto.\n+\t* g++.old-deja/g++.niklas/t120.C: Ditto.\n+\t* g++.old-deja/g++.niklas/t121.C: Ditto.\n+\t* g++.old-deja/g++.niklas/t128.C: Ditto.\n+\t* g++.old-deja/g++.ns/overload2.C: Ditto.\n+\t* g++.old-deja/g++.ns/template13.C: Ditto.\n+\t* g++.old-deja/g++.ns/using12.C: Ditto.\n+\t* g++.old-deja/g++.oliva/delete1.C: Ditto.\n+\t* g++.old-deja/g++.oliva/overload1.C: Ditto.\n+\t* g++.old-deja/g++.other/crash24.C: Ditto.\n+\t* g++.old-deja/g++.other/crash25.C: Ditto.\n+\t* g++.old-deja/g++.other/decl3.C: Ditto.\n+\t* g++.old-deja/g++.other/expr1.C: Ditto.\n+\t* g++.old-deja/g++.other/overcnv2.C: Ditto.\n+\t* g++.old-deja/g++.other/overload11.C: Ditto.\n+\t* g++.old-deja/g++.other/pmf3.C: Ditto.\n+\t* g++.old-deja/g++.other/ptrmem7.C: Ditto.\n+\t* g++.old-deja/g++.other/vaarg3.C: Ditto.\n+\t* g++.old-deja/g++.other/volatile1.C: Ditto.\n+\t* g++.old-deja/g++.pt/assign1.C: Ditto.\n+\t* g++.old-deja/g++.pt/auto_ptr.C: Ditto.\n+\t* g++.old-deja/g++.pt/const2.C: Ditto.\n+\t* g++.old-deja/g++.pt/crash10.C: Ditto.\n+\t* g++.old-deja/g++.pt/crash20.C: Ditto.\n+\t* g++.old-deja/g++.pt/crash36.C: Ditto.\n+\t* g++.old-deja/g++.pt/crash38.C: Ditto.\n+\t* g++.old-deja/g++.pt/derived3.C: Ditto.\n+\t* g++.old-deja/g++.pt/error2.C: Ditto.\n+\t* g++.old-deja/g++.pt/explicit34.C: Ditto.\n+\t* g++.old-deja/g++.pt/explicit70.C: Ditto.\n+\t* g++.old-deja/g++.pt/friend23.C: Ditto.\n+\t* g++.old-deja/g++.pt/ptrmem10.C: Ditto.\n+\t* g++.old-deja/g++.pt/redecl1.C: Ditto.\n+\t* g++.old-deja/g++.pt/spec35.C: Ditto.\n+\t* g++.old-deja/g++.pt/t05.C: Ditto.\n+\t* g++.old-deja/g++.pt/typename3.C: Ditto.\n+\t* g++.old-deja/g++.pt/typename6.C: Ditto.\n+\t* g++.old-deja/g++.pt/unify8.C: Ditto.\n+\t* g++.old-deja/g++.pt/vaarg3.C: Ditto.\n+\t* g++.old-deja/g++.robertl/eb109.C: Ditto.\n+\t* g++.old-deja/g++.robertl/eb131.C: Ditto.\n+\t* g++.old-deja/g++.robertl/eb22.C: Ditto.\n+\t* g++.old-deja/g++.robertl/eb44.C: Ditto.\n+\t* g++.old-deja/g++.robertl/eb4.C: Ditto.\n+\t* g++.old-deja/g++.robertl/eb69.C: Ditto.\n+\t* g++.dg/parse/constructor1.C: Remove \"error\" from dg-error, preserving\n+\tcolumn number.\n+\t* g++.dg/parse/error10.C: Ditto.\n+\t* g++.dg/parse/error13.C: Ditto.\n+\t* g++.dg/parse/error14.C: Ditto.\n+\t* g++.dg/parse/error15.C: Ditto.\n+\t* g++.dg/parse/error16.C: Ditto.\n+\t* g++.dg/parse/error17.C: Ditto.\n+\t* g++.dg/parse/error18.C: Ditto.\n+\t* g++.dg/parse/error1.C: Ditto.\n+\t* g++.dg/parse/error20.C: Ditto.\n+\t* g++.dg/parse/error21.C: Ditto.\n+\t* g++.dg/parse/error22.C: Ditto.\n+\t* g++.dg/parse/error23.C: Ditto.\n+\t* g++.dg/parse/error24.C: Ditto.\n+\t* g++.dg/parse/error25.C: Ditto.\n+\t* g++.dg/parse/error26.C: Ditto.\n+\t* g++.dg/parse/error27.C: Ditto.\n+\t* g++.dg/parse/error29.C: Ditto.\n+\t* g++.dg/parse/error2.C: Ditto.\n+\t* g++.dg/parse/error30.C: Ditto.\n+\t* g++.dg/parse/error31.C: Ditto.\n+\t* g++.dg/parse/error3.C: Ditto.\n+\t* g++.dg/parse/error4.C: Ditto.\n+\t* g++.dg/parse/error5.C: Ditto.\n+\t* g++.dg/parse/error6.C: Ditto.\n+\t* g++.dg/parse/error7.C: Ditto.\n+\t* g++.dg/parse/error8.C: Ditto.\n+\t* g++.dg/parse/error9.C: Ditto.\n+\t* g++.dg/parse/error-column.C: Ditto.\n+\t* g++.dg/template/crash80.C: Ditto.\n+\t* g++.dg/template/friend44.C: Ditto.\n+\t* g++.dg/warn/pr26785.C: Ditto.\n+\t* g++.old-deja/g++.brendan/crash16.C: Ditto.\n+\n 2008-09-18  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR target/37394"}, {"sha": "1db1667073fe933c72f4ff313dbd586b305daf6d", "filename": "gcc/testsuite/g++.dg/conversion/ambig1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fambig1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fambig1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fambig1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,8 +1,8 @@\n // PR c++/19787\n \n struct H {\n-  operator char(); // { dg-error \"\" }\n-  operator short(); // { dg-error \"\" }\n+  operator char(); // { dg-message \"note\" }\n+  operator short(); // { dg-message \"note\" }\n };\n \n-int const& ref = H(); // { dg-error \"\" }\n+int const& ref = H(); // { dg-error \"ambiguous\" }"}, {"sha": "06cdc1ab34171e85d6f54404e83ac6d79b4d9af1", "filename": "gcc/testsuite/g++.dg/conversion/simd1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fsimd1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fsimd1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fsimd1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,9 +5,9 @@\n \n #define vector __attribute__((vector_size(16)))\n \n-vector signed int vld (int a1, const vector signed int *a2) { return *a2; } /* { dg-error \"vld\" } */\n+vector signed int vld (int a1, const vector signed int *a2) { return *a2; } /* { dg-message \"vld\" } */\n /* { dg-warning \"vector returned by ref\" \"\" { target { powerpc*-*-linux* && ilp32 } }  8 } */\n-vector signed short vld (int a1, const vector signed short *a2) { return *a2; } /* { dg-error \"vld\" } */\n+vector signed short vld (int a1, const vector signed short *a2) { return *a2; } /* { dg-message \"vld\" } */\n \n extern int i;\n extern vector signed short vss;"}, {"sha": "7aea5449d38851c68a844bd8d86cd7f6dd8b7b0b", "filename": "gcc/testsuite/g++.dg/conversion/simd3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fsimd3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fsimd3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fsimd3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -10,6 +10,6 @@ unsigned int __attribute__((vector_size(16))) e;\n void foo()\n {\n \tb + d; /* { dg-error \"invalid operands to binary\" } */\n-\td += e; /* { dg-error \"use -flax-vector-conversions to permit conversions between vectors with differing element types or numbers of subparts.*cannot convert 'unsigned int __vector__' to 'int __vector__' in assignment\" } */\n+\td += e; /* { dg-message \"use -flax-vector-conversions to permit conversions between vectors with differing element types or numbers of subparts.*cannot convert 'unsigned int __vector__' to 'int __vector__' in assignment\" } */\n \td2 += d;\n }"}, {"sha": "a4c11c60e2d729c5af3c006630a6f8b20bfdbb87", "filename": "gcc/testsuite/g++.dg/cpp0x/rv2n.C", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv2n.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -30,8 +30,8 @@ const volatile A cv_source();\n \n // 2 at a time\n \n-one   sink_2_12(               A&);  // { dg-error \"\" }\n-two   sink_2_12(const          A&);  // { dg-error \"\" }\n+one   sink_2_12(               A&);  // { dg-message \"candidates\" }\n+two   sink_2_12(const          A&);  // { dg-message \"note\" }\n \n int test2_12()\n {\n@@ -46,8 +46,8 @@ int test2_12()\n     return 0;\n }\n \n-one   sink_2_13(               A&);  // { dg-error \"\" }\n-three sink_2_13(volatile       A&);  // { dg-error \"\" }\n+one   sink_2_13(               A&);  // { dg-message \"candidates\" }\n+three sink_2_13(volatile       A&);  // { dg-message \"note\" }\n \n int test2_13()\n {\n@@ -64,8 +64,8 @@ int test2_13()\n     return 0;\n }\n \n-one   sink_2_14(               A&);  // { dg-error \"\" }\n-four  sink_2_14(const volatile A&);  // { dg-error \"\" }\n+one   sink_2_14(               A&);  // { dg-message \"candidates\" }\n+four  sink_2_14(const volatile A&);  // { dg-message \"note\" }\n \n int test2_14()\n {\n@@ -80,8 +80,8 @@ int test2_14()\n     return 0;\n }\n \n-one   sink_2_15(               A&);  // { dg-error \"\" }\n-five  sink_2_15(               A&&);  // { dg-error \"\" }\n+one   sink_2_15(               A&);  // { dg-message \"candidates\" }\n+five  sink_2_15(               A&&);  // { dg-message \"note\" }\n \n int test2_15()\n {\n@@ -98,8 +98,8 @@ int test2_15()\n     return 0;\n }\n \n-one   sink_2_16(               A&);  // { dg-error \"\" }\n-six   sink_2_16(const          A&&);  // { dg-error \"\" }\n+one   sink_2_16(               A&);  // { dg-message \"candidates\" }\n+six   sink_2_16(const          A&&);  // { dg-message \"note\" }\n \n int test2_16()\n {\n@@ -114,8 +114,8 @@ int test2_16()\n     return 0;\n }\n \n-one   sink_2_17(               A&);  // { dg-error \"\" }\n-seven sink_2_17(volatile       A&&);  // { dg-error \"\" }\n+one   sink_2_17(               A&);  // { dg-message \"candidates\" }\n+seven sink_2_17(volatile       A&&);  // { dg-message \"note\" }\n \n int test2_17()\n {\n@@ -130,8 +130,8 @@ int test2_17()\n     return 0;\n }\n \n-two   sink_2_23(const          A&);  // { dg-error \"\" }\n-three sink_2_23(volatile       A&);  // { dg-error \"\" }\n+two   sink_2_23(const          A&);  // { dg-message \"candidates\" }\n+three sink_2_23(volatile       A&);  // { dg-message \"note\" }\n \n int test2_23()\n {\n@@ -146,8 +146,8 @@ int test2_23()\n     return 0;\n }\n \n-two   sink_2_24(const          A&);  // { dg-error \"\" }\n-four  sink_2_24(const volatile A&);  // { dg-error \"\" }\n+two   sink_2_24(const          A&);  // { dg-message \"candidates\" }\n+four  sink_2_24(const volatile A&);  // { dg-message \"note\" }\n \n int test2_24()\n {\n@@ -160,8 +160,8 @@ int test2_24()\n     return 0;\n }\n \n-three sink_2_34(volatile       A&);  // { dg-error \"\" }\n-four  sink_2_34(const volatile A&);  // { dg-error \"\" }\n+three sink_2_34(volatile       A&);  // { dg-message \"candidate\" }\n+four  sink_2_34(const volatile A&);  // { dg-message \"note\" }\n \n int test2_34()\n {\n@@ -176,8 +176,8 @@ int test2_34()\n     return 0;\n }\n \n-two   sink_2_25(const          A&);  // { dg-error \"\" }\n-five  sink_2_25(               A&&);  // { dg-error \"\" }\n+two   sink_2_25(const          A&);  // { dg-message \"candidate\" }\n+five  sink_2_25(               A&&);  // { dg-message \"note\" }\n \n int test2_25()\n {\n@@ -192,8 +192,8 @@ int test2_25()\n     return 0;\n }\n \n-two   sink_2_26(const          A&);  // { dg-error \"\" }\n-six   sink_2_26(const          A&&);  // { dg-error \"\" }\n+two   sink_2_26(const          A&);  // { dg-message \"candidate\" }\n+six   sink_2_26(const          A&&);  // { dg-message \"note\" }\n \n int test2_26()\n {\n@@ -208,8 +208,8 @@ int test2_26()\n     return 0;\n }\n \n-two   sink_2_27(const          A&);  // { dg-error \"\" }\n-seven sink_2_27(volatile       A&&);  // { dg-error \"\" }\n+two   sink_2_27(const          A&);  // { dg-message \"candidate\" }\n+seven sink_2_27(volatile       A&&);  // { dg-message \"note\" }\n \n int test2_27()\n {\n@@ -222,8 +222,8 @@ int test2_27()\n     return 0;\n }\n \n-three sink_2_35(volatile       A&);  // { dg-error \"\" }\n-five  sink_2_35(               A&&);  // { dg-error \"\" }\n+three sink_2_35(volatile       A&);  // { dg-message \"candidate\" }\n+five  sink_2_35(               A&&);  // { dg-message \"note\" }\n \n int test2_35()\n {\n@@ -239,8 +239,8 @@ int test2_35()\n     return 0;\n }\n \n-three sink_2_36(volatile       A&);  // { dg-error \"\" }\n-six   sink_2_36(const          A&&);  // { dg-error \"\" }\n+three sink_2_36(volatile       A&);  // { dg-message \"candidate\" }\n+six   sink_2_36(const          A&&);  // { dg-message \"note\" }\n \n int test2_36()\n {\n@@ -254,8 +254,8 @@ int test2_36()\n     return 0;\n }\n \n-three sink_2_37(volatile       A&);  // { dg-error \"\" }\n-seven sink_2_37(volatile       A&&);  // { dg-error \"\" }\n+three sink_2_37(volatile       A&);  // { dg-message \"candidate\" }\n+seven sink_2_37(volatile       A&&);  // { dg-message \"note\" }\n \n int test2_37()\n {\n@@ -270,8 +270,8 @@ int test2_37()\n     return 0;\n }\n \n-four  sink_2_45(const volatile A&);   // { dg-error \"\" }\n-five  sink_2_45(               A&&);  // { dg-error \"\" }\n+four  sink_2_45(const volatile A&);   // { dg-message \"candidate\" }\n+five  sink_2_45(               A&&);  // { dg-message \"note\" }\n \n int test2_45()\n {\n@@ -285,8 +285,8 @@ int test2_45()\n     return 0;\n }\n \n-four  sink_2_46(const volatile A&);   // { dg-error \"\" }\n-six   sink_2_46(const          A&&);  // { dg-error \"\" }\n+four  sink_2_46(const volatile A&);   // { dg-message \"candidate\" }\n+six   sink_2_46(const          A&&);  // { dg-message \"note\" }\n \n int test2_46()\n {\n@@ -299,8 +299,8 @@ int test2_46()\n     return 0;\n }\n \n-four  sink_2_47(const volatile A&);   // { dg-error \"\" }\n-seven sink_2_47(volatile       A&&);  // { dg-error \"\" }\n+four  sink_2_47(const volatile A&);   // { dg-message \"candidate\" }\n+seven sink_2_47(volatile       A&&);  // { dg-message \"note\" }\n \n int test2_47()\n {\n@@ -313,8 +313,8 @@ int test2_47()\n     return 0;\n }\n \n-five  sink_2_56(               A&&);  // { dg-error \"\" }\n-six   sink_2_56(const          A&&);  // { dg-error \"\" }\n+five  sink_2_56(               A&&);  // { dg-message \"candidate\" }\n+six   sink_2_56(const          A&&);  // { dg-message \"note\" }\n \n int test2_56()\n {\n@@ -329,8 +329,8 @@ int test2_56()\n     return 0;\n }\n \n-five  sink_2_57(               A&&);  // { dg-error \"\" }\n-seven sink_2_57(volatile       A&&);  // { dg-error \"\" }\n+five  sink_2_57(               A&&);  // { dg-message \"candidate\" }\n+seven sink_2_57(volatile       A&&);  // { dg-message \"note\" }\n \n int test2_57()\n {\n@@ -345,8 +345,8 @@ int test2_57()\n     return 0;\n }\n \n-six   sink_2_67(const          A&&);  // { dg-error \"\" }\n-seven sink_2_67(volatile       A&&);  // { dg-error \"\" }\n+six   sink_2_67(const          A&&);  // { dg-message \"candidate\" }\n+seven sink_2_67(volatile       A&&);  // { dg-message \"note\" }\n \n int test2_67()\n {"}, {"sha": "84675b37feea841a8535335f5167d8d6ea5a3b93", "filename": "gcc/testsuite/g++.dg/cpp0x/rv3n.C", "status": "modified", "additions": 111, "deletions": 111, "changes": 222, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv3n.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -30,9 +30,9 @@ const volatile A cv_source();\n \n // 3 at a time\n \n-one   sink_3_123(               A&);  // { dg-error \"\" }\n-two   sink_3_123(const          A&);  // { dg-error \"\" }\n-three sink_3_123(volatile       A&);  // { dg-error \"\" }\n+one   sink_3_123(               A&);  // { dg-message \"candidates\" }\n+two   sink_3_123(const          A&);  // { dg-message \"note\" }\n+three sink_3_123(volatile       A&);  // { dg-message \"note\" }\n \n int test3_123()\n {\n@@ -46,13 +46,13 @@ int test3_123()\n     return 0;\n }\n \n-one   sink_3_125(               A&);  // { dg-error \"\" }\n-two   sink_3_125(const          A&);  // { dg-error \"\" }\n-five  sink_3_125(               A&&);  // { dg-error \"\" }\n+one   sink_3_125(               A&);  // { dg-message \"candidates\" }\n+two   sink_3_125(const          A&);  // { dg-message \"note\" }\n+five  sink_3_125(               A&&);  // { dg-message \"note\" }\n \n-one   sink_3_124(               A&);  // { dg-error \"\" }\n-two   sink_3_124(const          A&);  // { dg-error \"\" }\n-four  sink_3_124(const volatile A&);  // { dg-error \"\" }\n+one   sink_3_124(               A&);  // { dg-message \"candidates\" }\n+two   sink_3_124(const          A&);  // { dg-message \"note\" }\n+four  sink_3_124(const volatile A&);  // { dg-message \"note\" }\n \n int test3_124()\n {\n@@ -78,9 +78,9 @@ int test3_125()\n     return 0;\n }\n \n-one   sink_3_126(               A&);  // { dg-error \"\" }\n-two   sink_3_126(const          A&);  // { dg-error \"\" }\n-six   sink_3_126(const          A&&);  // { dg-error \"\" }\n+one   sink_3_126(               A&);  // { dg-message \"candidates\" }\n+two   sink_3_126(const          A&);  // { dg-message \"note\" }\n+six   sink_3_126(const          A&&);  // { dg-message \"note\" }\n \n int test3_126()\n {\n@@ -95,9 +95,9 @@ int test3_126()\n     return 0;\n }\n \n-one   sink_3_127(               A&);  // { dg-error \"\" }\n-two   sink_3_127(const          A&);  // { dg-error \"\" }\n-seven sink_3_127(volatile       A&&);  // { dg-error \"\" }\n+one   sink_3_127(               A&);  // { dg-message \"candidates\" }\n+two   sink_3_127(const          A&);  // { dg-message \"note\" }\n+seven sink_3_127(volatile       A&&);  // { dg-message \"note\" }\n \n int test3_127()\n {\n@@ -110,9 +110,9 @@ int test3_127()\n     return 0;\n }\n \n-one   sink_3_134(               A&);  // { dg-error \"\" }\n-three sink_3_134(volatile       A&);  // { dg-error \"\" }\n-four  sink_3_134(const volatile A&);  // { dg-error \"\" }\n+one   sink_3_134(               A&);  // { dg-message \"candidates\" }\n+three sink_3_134(volatile       A&);  // { dg-message \"note\" }\n+four  sink_3_134(const volatile A&);  // { dg-message \"note\" }\n \n int test3_134()\n {\n@@ -127,9 +127,9 @@ int test3_134()\n     return 0;\n }\n \n-one   sink_3_135(               A&);  // { dg-error \"\" }\n-three sink_3_135(volatile       A&);  // { dg-error \"\" }\n-five  sink_3_135(               A&&);  // { dg-error \"\" }\n+one   sink_3_135(               A&);  // { dg-message \"candidates\" }\n+three sink_3_135(volatile       A&);  // { dg-message \"note\" }\n+five  sink_3_135(               A&&);  // { dg-message \"note\" }\n \n int test3_135()\n {\n@@ -145,9 +145,9 @@ int test3_135()\n     return 0;\n }\n \n-one   sink_3_136(               A&);  // { dg-error \"\" }\n-three sink_3_136(volatile       A&);  // { dg-error \"\" }\n-six   sink_3_136(const          A&&);  // { dg-error \"\" }\n+one   sink_3_136(               A&);  // { dg-message \"candidates\" }\n+three sink_3_136(volatile       A&);  // { dg-message \"note\" }\n+six   sink_3_136(const          A&&);  // { dg-message \"note\" }\n \n int test3_136()\n {\n@@ -161,9 +161,9 @@ int test3_136()\n     return 0;\n }\n \n-one   sink_3_137(               A&);  // { dg-error \"\" }\n-three sink_3_137(volatile       A&);  // { dg-error \"\" }\n-seven sink_3_137(volatile       A&&);  // { dg-error \"\" }\n+one   sink_3_137(               A&);  // { dg-message \"candidates\" }\n+three sink_3_137(volatile       A&);  // { dg-message \"note\" }\n+seven sink_3_137(volatile       A&&);  // { dg-message \"note\" }\n \n int test3_137()\n {\n@@ -178,9 +178,9 @@ int test3_137()\n     return 0;\n }\n \n-one   sink_3_145(               A&);  // { dg-error \"\" }\n-four  sink_3_145(const volatile A&);  // { dg-error \"\" }\n-five  sink_3_145(               A&&);  // { dg-error \"\" }\n+one   sink_3_145(               A&);  // { dg-message \"candidates\" }\n+four  sink_3_145(const volatile A&);  // { dg-message \"note\" }\n+five  sink_3_145(               A&&);  // { dg-message \"note\" }\n \n int test3_145()\n {\n@@ -194,9 +194,9 @@ int test3_145()\n     return 0;\n }\n \n-one   sink_3_146(               A&);  // { dg-error \"\" }\n-four  sink_3_146(const volatile A&);  // { dg-error \"\" }\n-six   sink_3_146(const          A&&);  // { dg-error \"\" }\n+one   sink_3_146(               A&);  // { dg-message \"candidates\" }\n+four  sink_3_146(const volatile A&);  // { dg-message \"note\" }\n+six   sink_3_146(const          A&&);  // { dg-message \"note\" }\n \n int test3_146()\n {\n@@ -209,9 +209,9 @@ int test3_146()\n     return 0;\n }\n \n-one   sink_3_147(               A&);  // { dg-error \"\" }\n-four  sink_3_147(const volatile A&);  // { dg-error \"\" }\n-seven sink_3_147(volatile       A&&);  // { dg-error \"\" }\n+one   sink_3_147(               A&);  // { dg-message \"candidates\" }\n+four  sink_3_147(const volatile A&);  // { dg-message \"note\" }\n+seven sink_3_147(volatile       A&&);  // { dg-message \"note\" }\n \n int test3_147()\n {\n@@ -224,9 +224,9 @@ int test3_147()\n     return 0;\n }\n \n-one   sink_3_156(               A&);  // { dg-error \"\" }\n-five  sink_3_156(               A&&);  // { dg-error \"\" }\n-six   sink_3_156(const          A&&);  // { dg-error \"\" }\n+one   sink_3_156(               A&);  // { dg-message \"candidates\" }\n+five  sink_3_156(               A&&);  // { dg-message \"note\" }\n+six   sink_3_156(const          A&&);  // { dg-message \"note\" }\n \n int test3_156()\n {\n@@ -241,9 +241,9 @@ int test3_156()\n     return 0;\n }\n \n-one   sink_3_157(               A&);  // { dg-error \"\" }\n-five  sink_3_157(               A&&);  // { dg-error \"\" }\n-seven sink_3_157(volatile       A&&);  // { dg-error \"\" }\n+one   sink_3_157(               A&);  // { dg-message \"candidates\" }\n+five  sink_3_157(               A&&);  // { dg-message \"note\" }\n+seven sink_3_157(volatile       A&&);  // { dg-message \"note\" }\n \n int test3_157()\n {\n@@ -258,9 +258,9 @@ int test3_157()\n     return 0;\n }\n \n-one   sink_3_167(               A&);  // { dg-error \"\" }\n-six   sink_3_167(const          A&&);  // { dg-error \"\" }\n-seven sink_3_167(volatile       A&&);  // { dg-error \"\" }\n+one   sink_3_167(               A&);  // { dg-message \"candidates\" }\n+six   sink_3_167(const          A&&);  // { dg-message \"note\" }\n+seven sink_3_167(volatile       A&&);  // { dg-message \"note\" }\n \n int test3_167()\n {\n@@ -274,9 +274,9 @@ int test3_167()\n     return 0;\n }\n \n-two   sink_3_234(const          A&);  // { dg-error \"\" }\n-three sink_3_234(volatile       A&);  // { dg-error \"\" }\n-four  sink_3_234(const volatile A&);  // { dg-error \"\" }\n+two   sink_3_234(const          A&);  // { dg-message \"candidates\" }\n+three sink_3_234(volatile       A&);  // { dg-message \"note\" }\n+four  sink_3_234(const volatile A&);  // { dg-message \"note\" }\n \n int test3_234()\n {\n@@ -290,9 +290,9 @@ int test3_234()\n     return 0;\n }\n \n-two   sink_3_235(const          A&);  // { dg-error \"\" }\n-three sink_3_235(volatile       A&);  // { dg-error \"\" }\n-five  sink_3_235(               A&&);  // { dg-error \"\" }\n+two   sink_3_235(const          A&);  // { dg-message \"candidates\" }\n+three sink_3_235(volatile       A&);  // { dg-message \"note\" }\n+five  sink_3_235(               A&&);  // { dg-message \"note\" }\n \n int test3_235()\n {\n@@ -307,9 +307,9 @@ int test3_235()\n     return 0;\n }\n \n-two   sink_3_236(const          A&);  // { dg-error \"\" }\n-three sink_3_236(volatile       A&);  // { dg-error \"\" }\n-six   sink_3_236(const          A&&);  // { dg-error \"\" }\n+two   sink_3_236(const          A&);  // { dg-message \"candidates\" }\n+three sink_3_236(volatile       A&);  // { dg-message \"note\" }\n+six   sink_3_236(const          A&&);  // { dg-message \"note\" }\n \n int test3_236()\n {\n@@ -324,9 +324,9 @@ int test3_236()\n     return 0;\n }\n \n-two   sink_3_237(const          A&);  // { dg-error \"\" }\n-three sink_3_237(volatile       A&);  // { dg-error \"\" }\n-seven sink_3_237(volatile       A&&);  // { dg-error \"\" }\n+two   sink_3_237(const          A&);  // { dg-message \"candidates\" }\n+three sink_3_237(volatile       A&);  // { dg-message \"note\" }\n+seven sink_3_237(volatile       A&&);  // { dg-message \"note\" }\n \n int test3_237()\n {\n@@ -340,9 +340,9 @@ int test3_237()\n     return 0;\n }\n \n-two   sink_3_238(const          A&);  // { dg-error \"\" }\n-three sink_3_238(volatile       A&);  // { dg-error \"\" }\n-eight sink_3_238(const volatile A&&);  // { dg-error \"\" }\n+two   sink_3_238(const          A&);  // { dg-message \"candidates\" }\n+three sink_3_238(volatile       A&);  // { dg-message \"note\" }\n+eight sink_3_238(const volatile A&&);  // { dg-message \"note\" }\n \n int test3_238()\n {\n@@ -354,9 +354,9 @@ int test3_238()\n     return 0;\n }\n \n-two   sink_3_245(const          A&);  // { dg-error \"\" }\n-four  sink_3_245(const volatile A&);  // { dg-error \"\" }\n-five  sink_3_245(               A&&);  // { dg-error \"\" }\n+two   sink_3_245(const          A&);  // { dg-message \"candidates\" }\n+four  sink_3_245(const volatile A&);  // { dg-message \"note\" }\n+five  sink_3_245(               A&&);  // { dg-message \"note\" }\n \n int test3_245()\n {\n@@ -369,9 +369,9 @@ int test3_245()\n     return 0;\n }\n \n-two   sink_3_246(const          A&);  // { dg-error \"\" }\n-four  sink_3_246(const volatile A&);  // { dg-error \"\" }\n-six   sink_3_246(const          A&&);  // { dg-error \"\" }\n+two   sink_3_246(const          A&);  // { dg-message \"candidates\" }\n+four  sink_3_246(const volatile A&);  // { dg-message \"note\" }\n+six   sink_3_246(const          A&&);  // { dg-message \"note\" }\n \n int test3_246()\n {\n@@ -384,9 +384,9 @@ int test3_246()\n     return 0;\n }\n \n-two   sink_3_247(const          A&);  // { dg-error \"\" }\n-four  sink_3_247(const volatile A&);  // { dg-error \"\" }\n-seven sink_3_247(volatile       A&&);  // { dg-error \"\" }\n+two   sink_3_247(const          A&);  // { dg-message \"candidates\" }\n+four  sink_3_247(const volatile A&);  // { dg-message \"note\" }\n+seven sink_3_247(volatile       A&&);  // { dg-message \"note\" }\n \n int test3_247()\n {\n@@ -398,9 +398,9 @@ int test3_247()\n     return 0;\n }\n \n-two   sink_3_256(const          A&);  // { dg-error \"\" }\n-five  sink_3_256(               A&&);  // { dg-error \"\" }\n-six   sink_3_256(const          A&&);  // { dg-error \"\" }\n+two   sink_3_256(const          A&);  // { dg-message \"candidates\" }\n+five  sink_3_256(               A&&);  // { dg-message \"note\" }\n+six   sink_3_256(const          A&&);  // { dg-message \"note\" }\n \n int test3_256()\n {\n@@ -415,9 +415,9 @@ int test3_256()\n     return 0;\n }\n \n-two   sink_3_257(const          A&);  // { dg-error \"\" }\n-five  sink_3_257(               A&&);  // { dg-error \"\" }\n-seven sink_3_257(volatile       A&&);  // { dg-error \"\" }\n+two   sink_3_257(const          A&);  // { dg-message \"candidates\" }\n+five  sink_3_257(               A&&);  // { dg-message \"note\" }\n+seven sink_3_257(volatile       A&&);  // { dg-message \"note\" }\n \n int test3_257()\n {\n@@ -430,9 +430,9 @@ int test3_257()\n     return 0;\n }\n \n-two   sink_3_267(const          A&);  // { dg-error \"\" }\n-six   sink_3_267(const          A&&);  // { dg-error \"\" }\n-seven sink_3_267(volatile       A&&);  // { dg-error \"\" }\n+two   sink_3_267(const          A&);  // { dg-message \"candidates\" }\n+six   sink_3_267(const          A&&);  // { dg-message \"note\" }\n+seven sink_3_267(volatile       A&&);  // { dg-message \"note\" }\n \n int test3_267()\n {\n@@ -446,9 +446,9 @@ int test3_267()\n     return 0;\n }\n \n-three sink_3_345(volatile       A&);  // { dg-error \"\" }\n-four  sink_3_345(const volatile A&);  // { dg-error \"\" }\n-five  sink_3_345(               A&&);  // { dg-error \"\" }\n+three sink_3_345(volatile       A&);  // { dg-message \"candidates\" }\n+four  sink_3_345(const volatile A&);  // { dg-message \"note\" }\n+five  sink_3_345(               A&&);  // { dg-message \"note\" }\n \n int test3_345()\n {\n@@ -462,9 +462,9 @@ int test3_345()\n     return 0;\n }\n \n-three sink_3_346(volatile       A&);  // { dg-error \"\" }\n-four  sink_3_346(const volatile A&);  // { dg-error \"\" }\n-six   sink_3_346(const          A&&);  // { dg-error \"\" }\n+three sink_3_346(volatile       A&);  // { dg-message \"candidates\" }\n+four  sink_3_346(const volatile A&);  // { dg-message \"note\" }\n+six   sink_3_346(const          A&&);  // { dg-message \"note\" }\n \n int test3_346()\n {\n@@ -477,9 +477,9 @@ int test3_346()\n     return 0;\n }\n \n-three sink_3_347(volatile       A&);  // { dg-error \"\" }\n-four  sink_3_347(const volatile A&);  // { dg-error \"\" }\n-seven sink_3_347(volatile       A&&);  // { dg-error \"\" }\n+three sink_3_347(volatile       A&);  // { dg-message \"candidates\" }\n+four  sink_3_347(const volatile A&);  // { dg-message \"note\" }\n+seven sink_3_347(volatile       A&&);  // { dg-message \"note\" }\n \n int test3_347()\n {\n@@ -492,9 +492,9 @@ int test3_347()\n     return 0;\n }\n \n-three sink_3_356(volatile       A&);  // { dg-error \"\" }\n-five  sink_3_356(               A&&);  // { dg-error \"\" }\n-six   sink_3_356(const          A&&);  // { dg-error \"\" }\n+three sink_3_356(volatile       A&);  // { dg-message \"candidates\" }\n+five  sink_3_356(               A&&);  // { dg-message \"note\" }\n+six   sink_3_356(const          A&&);  // { dg-message \"note\" }\n \n int test3_356()\n {\n@@ -508,9 +508,9 @@ int test3_356()\n     return 0;\n }\n \n-three sink_3_357(volatile       A&);  // { dg-error \"\" }\n-five  sink_3_357(               A&&);  // { dg-error \"\" }\n-seven sink_3_357(volatile       A&&);  // { dg-error \"\" }\n+three sink_3_357(volatile       A&);  // { dg-message \"candidates\" }\n+five  sink_3_357(               A&&);  // { dg-message \"note\" }\n+seven sink_3_357(volatile       A&&);  // { dg-message \"note\" }\n \n int test3_357()\n {\n@@ -525,9 +525,9 @@ int test3_357()\n     return 0;\n }\n \n-three sink_3_367(volatile       A&);  // { dg-error \"\" }\n-six   sink_3_367(const          A&&);  // { dg-error \"\" }\n-seven sink_3_367(volatile       A&&);  // { dg-error \"\" }\n+three sink_3_367(volatile       A&);  // { dg-message \"candidates\" }\n+six   sink_3_367(const          A&&);  // { dg-message \"note\" }\n+seven sink_3_367(volatile       A&&);  // { dg-message \"note\" }\n \n int test3_367()\n {\n@@ -541,9 +541,9 @@ int test3_367()\n     return 0;\n }\n \n-four  sink_3_456(const volatile A&);  // { dg-error \"\" }\n-five  sink_3_456(               A&&);  // { dg-error \"\" }\n-six   sink_3_456(const          A&&);  // { dg-error \"\" }\n+four  sink_3_456(const volatile A&);  // { dg-message \"candidates\" }\n+five  sink_3_456(               A&&);  // { dg-message \"note\" }\n+six   sink_3_456(const          A&&);  // { dg-message \"note\" }\n \n int test3_456()\n {\n@@ -556,9 +556,9 @@ int test3_456()\n     return 0;\n }\n \n-four  sink_3_457(const volatile A&);  // { dg-error \"\" }\n-five  sink_3_457(               A&&);  // { dg-error \"\" }\n-seven sink_3_457(volatile       A&&);  // { dg-error \"\" }\n+four  sink_3_457(const volatile A&);  // { dg-message \"candidates\" }\n+five  sink_3_457(               A&&);  // { dg-message \"note\" }\n+seven sink_3_457(volatile       A&&);  // { dg-message \"note\" }\n \n int test3_457()\n {\n@@ -571,9 +571,9 @@ int test3_457()\n     return 0;\n }\n \n-four  sink_3_467(const volatile A&);  // { dg-error \"\" }\n-six   sink_3_467(const          A&&);  // { dg-error \"\" }\n-seven sink_3_467(volatile       A&&);  // { dg-error \"\" }\n+four  sink_3_467(const volatile A&);  // { dg-message \"candidates\" }\n+six   sink_3_467(const          A&&);  // { dg-message \"note\" }\n+seven sink_3_467(volatile       A&&);  // { dg-message \"note\" }\n \n int test3_467()\n {\n@@ -586,9 +586,9 @@ int test3_467()\n     return 0;\n }\n \n-five  sink_3_567(               A&&);  // { dg-error \"\" }\n-six   sink_3_567(const          A&&);  // { dg-error \"\" }\n-seven sink_3_567(volatile       A&&);  // { dg-error \"\" }\n+five  sink_3_567(               A&&);  // { dg-message \"candidates\" }\n+six   sink_3_567(const          A&&);  // { dg-message \"note\" }\n+seven sink_3_567(volatile       A&&);  // { dg-message \"note\" }\n \n int test3_567()\n {\n@@ -601,9 +601,9 @@ int test3_567()\n     return 0;\n }\n \n-six   sink_3_678(const          A&&);  // { dg-error \"\" }\n-seven sink_3_678(volatile       A&&);  // { dg-error \"\" }\n-eight sink_3_678(const volatile A&&);  // { dg-error \"\" }\n+six   sink_3_678(const          A&&);  // { dg-message \"candidates\" }\n+seven sink_3_678(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_3_678(const volatile A&&);  // { dg-message \"note\" }\n \n int test3_678()\n {"}, {"sha": "b88e3f7706175de0a3339e4eb6076bd443ca1b24", "filename": "gcc/testsuite/g++.dg/cpp0x/rv4n.C", "status": "modified", "additions": 169, "deletions": 169, "changes": 338, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv4n.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -30,10 +30,10 @@ const volatile A cv_source();\n \n // 4 at a time\n \n-one   sink_4_1234(               A&);  // { dg-error \"\" }\n-two   sink_4_1234(const          A&);  // { dg-error \"\" }\n-three sink_4_1234(volatile       A&);  // { dg-error \"\" }\n-four  sink_4_1234(const volatile A&);  // { dg-error \"\" }\n+one   sink_4_1234(               A&);  // { dg-message \"candidates\" }\n+two   sink_4_1234(const          A&);  // { dg-message \"note\" }\n+three sink_4_1234(volatile       A&);  // { dg-message \"note\" }\n+four  sink_4_1234(const volatile A&);  // { dg-message \"note\" }\n \n int test4_1234()\n {\n@@ -46,10 +46,10 @@ int test4_1234()\n     return 0;\n }\n \n-one   sink_4_1235(               A&);  // { dg-error \"\" }\n-two   sink_4_1235(const          A&);  // { dg-error \"\" }\n-three sink_4_1235(volatile       A&);  // { dg-error \"\" }\n-five  sink_4_1235(               A&&);  // { dg-error \"\" }\n+one   sink_4_1235(               A&);  // { dg-message \"candidates\" }\n+two   sink_4_1235(const          A&);  // { dg-message \"note\" }\n+three sink_4_1235(volatile       A&);  // { dg-message \"note\" }\n+five  sink_4_1235(               A&&);  // { dg-message \"note\" }\n \n int test4_1235()\n {\n@@ -63,10 +63,10 @@ int test4_1235()\n     return 0;\n }\n \n-one   sink_4_1236(               A&);  // { dg-error \"\" }\n-two   sink_4_1236(const          A&);  // { dg-error \"\" }\n-three sink_4_1236(volatile       A&);  // { dg-error \"\" }\n-six   sink_4_1236(const          A&&);  // { dg-error \"\" }\n+one   sink_4_1236(               A&);  // { dg-message \"candidates\" }\n+two   sink_4_1236(const          A&);  // { dg-message \"note\" }\n+three sink_4_1236(volatile       A&);  // { dg-message \"note\" }\n+six   sink_4_1236(const          A&&);  // { dg-message \"note\" }\n \n int test4_1236()\n {\n@@ -80,10 +80,10 @@ int test4_1236()\n     return 0;\n }\n \n-one   sink_4_1237(               A&);  // { dg-error \"\" }\n-two   sink_4_1237(const          A&);  // { dg-error \"\" }\n-three sink_4_1237(volatile       A&);  // { dg-error \"\" }\n-seven sink_4_1237(volatile       A&&);  // { dg-error \"\" }\n+one   sink_4_1237(               A&);  // { dg-message \"candidates\" }\n+two   sink_4_1237(const          A&);  // { dg-message \"note\" }\n+three sink_4_1237(volatile       A&);  // { dg-message \"note\" }\n+seven sink_4_1237(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_1237()\n {\n@@ -96,10 +96,10 @@ int test4_1237()\n     return 0;\n }\n \n-one   sink_4_1245(               A&);  // { dg-error \"\" }\n-two   sink_4_1245(const          A&);  // { dg-error \"\" }\n-four  sink_4_1245(const volatile A&);  // { dg-error \"\" }\n-five  sink_4_1245(               A&&);  // { dg-error \"\" }\n+one   sink_4_1245(               A&);  // { dg-message \"candidates\" }\n+two   sink_4_1245(const          A&);  // { dg-message \"note\" }\n+four  sink_4_1245(const volatile A&);  // { dg-message \"note\" }\n+five  sink_4_1245(               A&&);  // { dg-message \"note\" }\n \n int test4_1245()\n {\n@@ -112,10 +112,10 @@ int test4_1245()\n     return 0;\n }\n \n-one   sink_4_1246(               A&);  // { dg-error \"\" }\n-two   sink_4_1246(const          A&);  // { dg-error \"\" }\n-four  sink_4_1246(const volatile A&);  // { dg-error \"\" }\n-six   sink_4_1246(const          A&&);  // { dg-error \"\" }\n+one   sink_4_1246(               A&);  // { dg-message \"candidates\" }\n+two   sink_4_1246(const          A&);  // { dg-message \"note\" }\n+four  sink_4_1246(const volatile A&);  // { dg-message \"note\" }\n+six   sink_4_1246(const          A&&);  // { dg-message \"note\" }\n \n int test4_1246()\n {\n@@ -128,10 +128,10 @@ int test4_1246()\n     return 0;\n }\n \n-one   sink_4_1247(               A&);  // { dg-error \"\" }\n-two   sink_4_1247(const          A&);  // { dg-error \"\" }\n-four  sink_4_1247(const volatile A&);  // { dg-error \"\" }\n-seven sink_4_1247(volatile       A&&);  // { dg-error \"\" }\n+one   sink_4_1247(               A&);  // { dg-message \"candidates\" }\n+two   sink_4_1247(const          A&);  // { dg-message \"note\" }\n+four  sink_4_1247(const volatile A&);  // { dg-message \"note\" }\n+seven sink_4_1247(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_1247()\n {\n@@ -143,10 +143,10 @@ int test4_1247()\n     return 0;\n }\n \n-one   sink_4_1256(               A&);  // { dg-error \"\" }\n-two   sink_4_1256(const          A&);  // { dg-error \"\" }\n-five  sink_4_1256(               A&&);  // { dg-error \"\" }\n-six   sink_4_1256(const          A&&);  // { dg-error \"\" }\n+one   sink_4_1256(               A&);  // { dg-message \"candidates\" }\n+two   sink_4_1256(const          A&);  // { dg-message \"note\" }\n+five  sink_4_1256(               A&&);  // { dg-message \"note\" }\n+six   sink_4_1256(const          A&&);  // { dg-message \"note\" }\n \n int test4_1256()\n {\n@@ -161,10 +161,10 @@ int test4_1256()\n     return 0;\n }\n \n-one   sink_4_1257(               A&);  // { dg-error \"\" }\n-two   sink_4_1257(const          A&);  // { dg-error \"\" }\n-five  sink_4_1257(               A&&);  // { dg-error \"\" }\n-seven sink_4_1257(volatile       A&&);  // { dg-error \"\" }\n+one   sink_4_1257(               A&);  // { dg-message \"candidates\" }\n+two   sink_4_1257(const          A&);  // { dg-message \"note\" }\n+five  sink_4_1257(               A&&);  // { dg-message \"note\" }\n+seven sink_4_1257(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_1257()\n {\n@@ -177,10 +177,10 @@ int test4_1257()\n     return 0;\n }\n \n-one   sink_4_1267(               A&);  // { dg-error \"\" }\n-two   sink_4_1267(const          A&);  // { dg-error \"\" }\n-six   sink_4_1267(const          A&&);  // { dg-error \"\" }\n-seven sink_4_1267(volatile       A&&);  // { dg-error \"\" }\n+one   sink_4_1267(               A&);  // { dg-message \"candidates\" }\n+two   sink_4_1267(const          A&);  // { dg-message \"note\" }\n+six   sink_4_1267(const          A&&);  // { dg-message \"note\" }\n+seven sink_4_1267(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_1267()\n {\n@@ -194,10 +194,10 @@ int test4_1267()\n     return 0;\n }\n \n-one   sink_4_1345(               A&);  // { dg-error \"\" }\n-three sink_4_1345(volatile       A&);  // { dg-error \"\" }\n-four  sink_4_1345(const volatile A&);  // { dg-error \"\" }\n-five  sink_4_1345(               A&&);  // { dg-error \"\" }\n+one   sink_4_1345(               A&);  // { dg-message \"candidates\" }\n+three sink_4_1345(volatile       A&);  // { dg-message \"note\" }\n+four  sink_4_1345(const volatile A&);  // { dg-message \"note\" }\n+five  sink_4_1345(               A&&);  // { dg-message \"note\" }\n \n int test4_1345()\n {\n@@ -211,10 +211,10 @@ int test4_1345()\n     return 0;\n }\n \n-one   sink_4_1346(               A&);  // { dg-error \"\" }\n-three sink_4_1346(volatile       A&);  // { dg-error \"\" }\n-four  sink_4_1346(const volatile A&);  // { dg-error \"\" }\n-six   sink_4_1346(const          A&&);  // { dg-error \"\" }\n+one   sink_4_1346(               A&);  // { dg-message \"candidates\" }\n+three sink_4_1346(volatile       A&);  // { dg-message \"note\" }\n+four  sink_4_1346(const volatile A&);  // { dg-message \"note\" }\n+six   sink_4_1346(const          A&&);  // { dg-message \"note\" }\n \n int test4_1346()\n {\n@@ -227,10 +227,10 @@ int test4_1346()\n     return 0;\n }\n \n-one   sink_4_1347(               A&);  // { dg-error \"\" }\n-three sink_4_1347(volatile       A&);  // { dg-error \"\" }\n-four  sink_4_1347(const volatile A&);  // { dg-error \"\" }\n-seven sink_4_1347(volatile       A&&);  // { dg-error \"\" }\n+one   sink_4_1347(               A&);  // { dg-message \"candidates\" }\n+three sink_4_1347(volatile       A&);  // { dg-message \"note\" }\n+four  sink_4_1347(const volatile A&);  // { dg-message \"note\" }\n+seven sink_4_1347(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_1347()\n {\n@@ -243,10 +243,10 @@ int test4_1347()\n     return 0;\n }\n \n-one   sink_4_1356(               A&);  // { dg-error \"\" }\n-three sink_4_1356(volatile       A&);  // { dg-error \"\" }\n-five  sink_4_1356(               A&&);  // { dg-error \"\" }\n-six   sink_4_1356(const          A&&);  // { dg-error \"\" }\n+one   sink_4_1356(               A&);  // { dg-message \"candidates\" }\n+three sink_4_1356(volatile       A&);  // { dg-message \"note\" }\n+five  sink_4_1356(               A&&);  // { dg-message \"note\" }\n+six   sink_4_1356(const          A&&);  // { dg-message \"note\" }\n \n int test4_1356()\n {\n@@ -260,10 +260,10 @@ int test4_1356()\n     return 0;\n }\n \n-one   sink_4_1357(               A&);  // { dg-error \"\" }\n-three sink_4_1357(volatile       A&);  // { dg-error \"\" }\n-five  sink_4_1357(               A&&);  // { dg-error \"\" }\n-seven sink_4_1357(volatile       A&&);  // { dg-error \"\" }\n+one   sink_4_1357(               A&);  // { dg-message \"candidates\" }\n+three sink_4_1357(volatile       A&);  // { dg-message \"note\" }\n+five  sink_4_1357(               A&&);  // { dg-message \"note\" }\n+seven sink_4_1357(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_1357()\n {\n@@ -278,10 +278,10 @@ int test4_1357()\n     return 0;\n }\n \n-one   sink_4_1367(               A&);  // { dg-error \"\" }\n-three sink_4_1367(volatile       A&);  // { dg-error \"\" }\n-six   sink_4_1367(const          A&&);  // { dg-error \"\" }\n-seven sink_4_1367(volatile       A&&);  // { dg-error \"\" }\n+one   sink_4_1367(               A&);  // { dg-message \"candidates\" }\n+three sink_4_1367(volatile       A&);  // { dg-message \"note\" }\n+six   sink_4_1367(const          A&&);  // { dg-message \"note\" }\n+seven sink_4_1367(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_1367()\n {\n@@ -295,10 +295,10 @@ int test4_1367()\n     return 0;\n }\n \n-one   sink_4_1456(               A&);  // { dg-error \"\" }\n-four  sink_4_1456(const volatile A&);  // { dg-error \"\" }\n-five  sink_4_1456(               A&&);  // { dg-error \"\" }\n-six   sink_4_1456(const          A&&);  // { dg-error \"\" }\n+one   sink_4_1456(               A&);  // { dg-message \"candidates\" }\n+four  sink_4_1456(const volatile A&);  // { dg-message \"note\" }\n+five  sink_4_1456(               A&&);  // { dg-message \"note\" }\n+six   sink_4_1456(const          A&&);  // { dg-message \"note\" }\n \n int test4_1456()\n {\n@@ -311,10 +311,10 @@ int test4_1456()\n     return 0;\n }\n \n-one   sink_4_1457(               A&);  // { dg-error \"\" }\n-four  sink_4_1457(const volatile A&);  // { dg-error \"\" }\n-five  sink_4_1457(               A&&);  // { dg-error \"\" }\n-seven sink_4_1457(volatile       A&&);  // { dg-error \"\" }\n+one   sink_4_1457(               A&);  // { dg-message \"candidates\" }\n+four  sink_4_1457(const volatile A&);  // { dg-message \"note\" }\n+five  sink_4_1457(               A&&);  // { dg-message \"note\" }\n+seven sink_4_1457(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_1457()\n {\n@@ -327,10 +327,10 @@ int test4_1457()\n     return 0;\n }\n \n-one   sink_4_1467(               A&);  // { dg-error \"\" }\n-four  sink_4_1467(const volatile A&);  // { dg-error \"\" }\n-six   sink_4_1467(const          A&&);  // { dg-error \"\" }\n-seven sink_4_1467(volatile       A&&);  // { dg-error \"\" }\n+one   sink_4_1467(               A&);  // { dg-message \"candidates\" }\n+four  sink_4_1467(const volatile A&);  // { dg-message \"note\" }\n+six   sink_4_1467(const          A&&);  // { dg-message \"note\" }\n+seven sink_4_1467(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_1467()\n {\n@@ -343,10 +343,10 @@ int test4_1467()\n     return 0;\n }\n \n-one   sink_4_1567(               A&);  // { dg-error \"\" }\n-five  sink_4_1567(               A&&);  // { dg-error \"\" }\n-six   sink_4_1567(const          A&&);  // { dg-error \"\" }\n-seven sink_4_1567(volatile       A&&);  // { dg-error \"\" }\n+one   sink_4_1567(               A&);  // { dg-message \"candidates\" }\n+five  sink_4_1567(               A&&);  // { dg-message \"note\" }\n+six   sink_4_1567(const          A&&);  // { dg-message \"note\" }\n+seven sink_4_1567(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_1567()\n {\n@@ -360,9 +360,9 @@ int test4_1567()\n }\n \n one   sink_4_1678(               A&);\n-six   sink_4_1678(const          A&&);  // { dg-error \"\" }\n-seven sink_4_1678(volatile       A&&);  // { dg-error \"\" }\n-eight sink_4_1678(const volatile A&&);  // { dg-error \"\" }\n+six   sink_4_1678(const          A&&);  // { dg-message \"candidates\" }\n+seven sink_4_1678(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_4_1678(const volatile A&&);  // { dg-message \"note\" }\n \n int test4_1678()\n {\n@@ -374,10 +374,10 @@ int test4_1678()\n     return 0;\n }\n \n-two   sink_4_2345(const          A&);  // { dg-error \"\" }\n-three sink_4_2345(volatile       A&);  // { dg-error \"\" }\n-four  sink_4_2345(const volatile A&);  // { dg-error \"\" }\n-five  sink_4_2345(               A&&);  // { dg-error \"\" }\n+two   sink_4_2345(const          A&);  // { dg-message \"candidates\" }\n+three sink_4_2345(volatile       A&);  // { dg-message \"note\" }\n+four  sink_4_2345(const volatile A&);  // { dg-message \"note\" }\n+five  sink_4_2345(               A&&);  // { dg-message \"note\" }\n \n int test4_2345()\n {\n@@ -391,10 +391,10 @@ int test4_2345()\n     return 0;\n }\n \n-two   sink_4_2346(const          A&);  // { dg-error \"\" }\n-three sink_4_2346(volatile       A&);  // { dg-error \"\" }\n-four  sink_4_2346(const volatile A&);  // { dg-error \"\" }\n-six   sink_4_2346(const          A&&);  // { dg-error \"\" }\n+two   sink_4_2346(const          A&);  // { dg-message \"candidates\" }\n+three sink_4_2346(volatile       A&);  // { dg-message \"note\" }\n+four  sink_4_2346(const volatile A&);  // { dg-message \"note\" }\n+six   sink_4_2346(const          A&&);  // { dg-message \"note\" }\n \n int test4_2346()\n {\n@@ -408,10 +408,10 @@ int test4_2346()\n     return 0;\n }\n \n-two   sink_4_2347(const          A&);  // { dg-error \"\" }\n-three sink_4_2347(volatile       A&);  // { dg-error \"\" }\n-four  sink_4_2347(const volatile A&);  // { dg-error \"\" }\n-seven sink_4_2347(volatile       A&&);  // { dg-error \"\" }\n+two   sink_4_2347(const          A&);  // { dg-message \"candidates\" }\n+three sink_4_2347(volatile       A&);  // { dg-message \"note\" }\n+four  sink_4_2347(const volatile A&);  // { dg-message \"note\" }\n+seven sink_4_2347(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_2347()\n {\n@@ -424,10 +424,10 @@ int test4_2347()\n     return 0;\n }\n \n-two   sink_4_2348(const          A&);  // { dg-error \"\" }\n-three sink_4_2348(volatile       A&);  // { dg-error \"\" }\n-four  sink_4_2348(const volatile A&);  // { dg-error \"\" }\n-eight sink_4_2348(const volatile A&&);  // { dg-error \"\" }\n+two   sink_4_2348(const          A&);  // { dg-message \"candidates\" }\n+three sink_4_2348(volatile       A&);  // { dg-message \"note\" }\n+four  sink_4_2348(const volatile A&);  // { dg-message \"note\" }\n+eight sink_4_2348(const volatile A&&);  // { dg-message \"note\" }\n \n int test4_2348()\n {\n@@ -439,10 +439,10 @@ int test4_2348()\n     return 0;\n }\n \n-two   sink_4_2356(const          A&);  // { dg-error \"\" }\n-three sink_4_2356(volatile       A&);  // { dg-error \"\" }\n-five  sink_4_2356(               A&&);  // { dg-error \"\" }\n-six   sink_4_2356(const          A&&);  // { dg-error \"\" }\n+two   sink_4_2356(const          A&);  // { dg-message \"candidates\" }\n+three sink_4_2356(volatile       A&);  // { dg-message \"note\" }\n+five  sink_4_2356(               A&&);  // { dg-message \"note\" }\n+six   sink_4_2356(const          A&&);  // { dg-message \"note\" }\n \n int test4_2356()\n {\n@@ -457,10 +457,10 @@ int test4_2356()\n     return 0;\n }\n \n-two   sink_4_2357(const          A&);  // { dg-error \"\" }\n-three sink_4_2357(volatile       A&);  // { dg-error \"\" }\n-five  sink_4_2357(               A&&);  // { dg-error \"\" }\n-seven sink_4_2357(volatile       A&&);  // { dg-error \"\" }\n+two   sink_4_2357(const          A&);  // { dg-message \"candidates\" }\n+three sink_4_2357(volatile       A&);  // { dg-message \"note\" }\n+five  sink_4_2357(               A&&);  // { dg-message \"note\" }\n+seven sink_4_2357(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_2357()\n {\n@@ -474,10 +474,10 @@ int test4_2357()\n     return 0;\n }\n \n-two   sink_4_2358(const          A&);  // { dg-error \"\" }\n-three sink_4_2358(volatile       A&);  // { dg-error \"\" }\n-five  sink_4_2358(               A&&);  // { dg-error \"\" }\n-eight sink_4_2358(const volatile A&&);  // { dg-error \"\" }\n+two   sink_4_2358(const          A&);  // { dg-message \"candidates\" }\n+three sink_4_2358(volatile       A&);  // { dg-message \"note\" }\n+five  sink_4_2358(               A&&);  // { dg-message \"note\" }\n+eight sink_4_2358(const volatile A&&);  // { dg-message \"note\" }\n \n int test4_2358()\n {\n@@ -489,10 +489,10 @@ int test4_2358()\n     return 0;\n }\n \n-two   sink_4_2367(const          A&);  // { dg-error \"\" }\n-three sink_4_2367(volatile       A&);  // { dg-error \"\" }\n-six   sink_4_2367(const          A&&);  // { dg-error \"\" }\n-seven sink_4_2367(volatile       A&&);  // { dg-error \"\" }\n+two   sink_4_2367(const          A&);  // { dg-message \"candidates\" }\n+three sink_4_2367(volatile       A&);  // { dg-message \"note\" }\n+six   sink_4_2367(const          A&&);  // { dg-message \"note\" }\n+seven sink_4_2367(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_2367()\n {\n@@ -507,10 +507,10 @@ int test4_2367()\n     return 0;\n }\n \n-two   sink_4_2368(const          A&);  // { dg-error \"\" }\n-three sink_4_2368(volatile       A&);  // { dg-error \"\" }\n-six   sink_4_2368(const          A&&);  // { dg-error \"\" }\n-eight sink_4_2368(const volatile A&&);  // { dg-error \"\" }\n+two   sink_4_2368(const          A&);  // { dg-message \"candidates\" }\n+three sink_4_2368(volatile       A&);  // { dg-message \"note\" }\n+six   sink_4_2368(const          A&&);  // { dg-message \"note\" }\n+eight sink_4_2368(const volatile A&&);  // { dg-message \"note\" }\n \n int test4_2368()\n {\n@@ -522,10 +522,10 @@ int test4_2368()\n     return 0;\n }\n \n-two   sink_4_2378(const          A&);  // { dg-error \"\" }\n-three sink_4_2378(volatile       A&);  // { dg-error \"\" }\n-seven sink_4_2378(volatile       A&&);  // { dg-error \"\" }\n-eight sink_4_2378(const volatile A&&);  // { dg-error \"\" }\n+two   sink_4_2378(const          A&);  // { dg-message \"candidates\" }\n+three sink_4_2378(volatile       A&);  // { dg-message \"note\" }\n+seven sink_4_2378(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_4_2378(const volatile A&&);  // { dg-message \"note\" }\n \n int test4_2378()\n {\n@@ -537,10 +537,10 @@ int test4_2378()\n     return 0;\n }\n \n-two   sink_4_2456(const          A&);  // { dg-error \"\" }\n-four  sink_4_2456(const volatile A&);  // { dg-error \"\" }\n-five  sink_4_2456(               A&&);  // { dg-error \"\" }\n-six   sink_4_2456(const          A&&);  // { dg-error \"\" }\n+two   sink_4_2456(const          A&);  // { dg-message \"candidates\" }\n+four  sink_4_2456(const volatile A&);  // { dg-message \"note\" }\n+five  sink_4_2456(               A&&);  // { dg-message \"note\" }\n+six   sink_4_2456(const          A&&);  // { dg-message \"note\" }\n \n int test4_2456()\n {\n@@ -553,10 +553,10 @@ int test4_2456()\n     return 0;\n }\n \n-two   sink_4_2457(const          A&);  // { dg-error \"\" }\n-four  sink_4_2457(const volatile A&);  // { dg-error \"\" }\n-five  sink_4_2457(               A&&);  // { dg-error \"\" }\n-seven sink_4_2457(volatile       A&&);  // { dg-error \"\" }\n+two   sink_4_2457(const          A&);  // { dg-message \"candidates\" }\n+four  sink_4_2457(const volatile A&);  // { dg-message \"note\" }\n+five  sink_4_2457(               A&&);  // { dg-message \"note\" }\n+seven sink_4_2457(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_2457()\n {\n@@ -568,10 +568,10 @@ int test4_2457()\n     return 0;\n }\n \n-two   sink_4_2467(const          A&);  // { dg-error \"\" }\n-four  sink_4_2467(const volatile A&);  // { dg-error \"\" }\n-six   sink_4_2467(const          A&&);  // { dg-error \"\" }\n-seven sink_4_2467(volatile       A&&);  // { dg-error \"\" }\n+two   sink_4_2467(const          A&);  // { dg-message \"candidates\" }\n+four  sink_4_2467(const volatile A&);  // { dg-message \"note\" }\n+six   sink_4_2467(const          A&&);  // { dg-message \"note\" }\n+seven sink_4_2467(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_2467()\n {\n@@ -584,10 +584,10 @@ int test4_2467()\n     return 0;\n }\n \n-two   sink_4_2567(const          A&);  // { dg-error \"\" }\n-five  sink_4_2567(               A&&);  // { dg-error \"\" }\n-six   sink_4_2567(const          A&&);  // { dg-error \"\" }\n-seven sink_4_2567(volatile       A&&);  // { dg-error \"\" }\n+two   sink_4_2567(const          A&);  // { dg-message \"candidates\" }\n+five  sink_4_2567(               A&&);  // { dg-message \"note\" }\n+six   sink_4_2567(const          A&&);  // { dg-message \"note\" }\n+seven sink_4_2567(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_2567()\n {\n@@ -600,10 +600,10 @@ int test4_2567()\n     return 0;\n }\n \n-two   sink_4_2678(const          A&);  // { dg-error \"\" }\n-six   sink_4_2678(const          A&&);  // { dg-error \"\" }\n-seven sink_4_2678(volatile       A&&);  // { dg-error \"\" }\n-eight sink_4_2678(const volatile A&&);  // { dg-error \"\" }\n+two   sink_4_2678(const          A&);  // { dg-message \"candidates\" }\n+six   sink_4_2678(const          A&&);  // { dg-message \"note\" }\n+seven sink_4_2678(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_4_2678(const volatile A&&);  // { dg-message \"note\" }\n \n int test4_2678()\n {\n@@ -615,10 +615,10 @@ int test4_2678()\n     return 0;\n }\n \n-three sink_4_3456(volatile       A&);  // { dg-error \"\" }\n-four  sink_4_3456(const volatile A&);  // { dg-error \"\" }\n-five  sink_4_3456(               A&&);  // { dg-error \"\" }\n-six   sink_4_3456(const          A&&);  // { dg-error \"\" }\n+three sink_4_3456(volatile       A&);  // { dg-message \"candidates\" }\n+four  sink_4_3456(const volatile A&);  // { dg-message \"note\" }\n+five  sink_4_3456(               A&&);  // { dg-message \"note\" }\n+six   sink_4_3456(const          A&&);  // { dg-message \"note\" }\n \n int test4_3456()\n {\n@@ -631,10 +631,10 @@ int test4_3456()\n     return 0;\n }\n \n-three sink_4_3457(volatile       A&);  // { dg-error \"\" }\n-four  sink_4_3457(const volatile A&);  // { dg-error \"\" }\n-five  sink_4_3457(               A&&);  // { dg-error \"\" }\n-seven sink_4_3457(volatile       A&&);  // { dg-error \"\" }\n+three sink_4_3457(volatile       A&);  // { dg-message \"candidates\" }\n+four  sink_4_3457(const volatile A&);  // { dg-message \"note\" }\n+five  sink_4_3457(               A&&);  // { dg-message \"note\" }\n+seven sink_4_3457(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_3457()\n {\n@@ -647,10 +647,10 @@ int test4_3457()\n     return 0;\n }\n \n-three sink_4_3467(volatile       A&);  // { dg-error \"\" }\n-four  sink_4_3467(const volatile A&);  // { dg-error \"\" }\n-six   sink_4_3467(const          A&&);  // { dg-error \"\" }\n-seven sink_4_3467(volatile       A&&);  // { dg-error \"\" }\n+three sink_4_3467(volatile       A&);  // { dg-message \"candidates\" }\n+four  sink_4_3467(const volatile A&);  // { dg-message \"note\" }\n+six   sink_4_3467(const          A&&);  // { dg-message \"note\" }\n+seven sink_4_3467(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_3467()\n {\n@@ -663,10 +663,10 @@ int test4_3467()\n     return 0;\n }\n \n-three sink_4_3567(volatile       A&);  // { dg-error \"\" }\n-five  sink_4_3567(               A&&);  // { dg-error \"\" }\n-six   sink_4_3567(const          A&&);  // { dg-error \"\" }\n-seven sink_4_3567(volatile       A&&);  // { dg-error \"\" }\n+three sink_4_3567(volatile       A&);  // { dg-message \"candidates\" }\n+five  sink_4_3567(               A&&);  // { dg-message \"note\" }\n+six   sink_4_3567(const          A&&);  // { dg-message \"note\" }\n+seven sink_4_3567(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_3567()\n {\n@@ -680,9 +680,9 @@ int test4_3567()\n }\n \n three sink_4_3678(volatile       A&);\n-six   sink_4_3678(const          A&&);  // { dg-error \"\" }\n-seven sink_4_3678(volatile       A&&);  // { dg-error \"\" }\n-eight sink_4_3678(const volatile A&&);  // { dg-error \"\" }\n+six   sink_4_3678(const          A&&);  // { dg-message \"candidates\" }\n+seven sink_4_3678(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_4_3678(const volatile A&&);  // { dg-message \"note\" }\n \n int test4_3678()\n {\n@@ -694,10 +694,10 @@ int test4_3678()\n     return 0;\n }\n \n-four  sink_4_4567(const volatile A&);  // { dg-error \"\" }\n-five  sink_4_4567(               A&&);  // { dg-error \"\" }\n-six   sink_4_4567(const          A&&);  // { dg-error \"\" }\n-seven sink_4_4567(volatile       A&&);  // { dg-error \"\" }\n+four  sink_4_4567(const volatile A&);  // { dg-message \"candidates\" }\n+five  sink_4_4567(               A&&);  // { dg-message \"note\" }\n+six   sink_4_4567(const          A&&);  // { dg-message \"note\" }\n+seven sink_4_4567(volatile       A&&);  // { dg-message \"note\" }\n \n int test4_4567()\n {\n@@ -710,9 +710,9 @@ int test4_4567()\n }\n \n four  sink_4_4678(const volatile A&);\n-six   sink_4_4678(const          A&&);  // { dg-error \"\" }\n-seven sink_4_4678(volatile       A&&);  // { dg-error \"\" }\n-eight sink_4_4678(const volatile A&&);  // { dg-error \"\" }\n+six   sink_4_4678(const          A&&);  // { dg-message \"candidates\" }\n+seven sink_4_4678(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_4_4678(const volatile A&&);  // { dg-message \"note\" }\n \n int test4_4678()\n {"}, {"sha": "14128b2aa36ea03fbd70597cde40b13995f63c90", "filename": "gcc/testsuite/g++.dg/cpp0x/rv5n.C", "status": "modified", "additions": 152, "deletions": 152, "changes": 304, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv5n.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -30,11 +30,11 @@ const volatile A cv_source();\n \n // 5 at a time\n \n-one   sink_5_12345(               A&);  // { dg-error \"\" }\n-two   sink_5_12345(const          A&);  // { dg-error \"\" }\n-three sink_5_12345(volatile       A&);  // { dg-error \"\" }\n-four  sink_5_12345(const volatile A&);  // { dg-error \"\" }\n-five  sink_5_12345(               A&&);  // { dg-error \"\" }\n+one   sink_5_12345(               A&);  // { dg-message \"candidates\" }\n+two   sink_5_12345(const          A&);  // { dg-message \"note\" }\n+three sink_5_12345(volatile       A&);  // { dg-message \"note\" }\n+four  sink_5_12345(const volatile A&);  // { dg-message \"note\" }\n+five  sink_5_12345(               A&&);  // { dg-message \"note\" }\n \n int test5_12345()\n {\n@@ -47,11 +47,11 @@ int test5_12345()\n     return 0;\n }\n \n-one   sink_5_12346(               A&);  // { dg-error \"\" }\n-two   sink_5_12346(const          A&);  // { dg-error \"\" }\n-three sink_5_12346(volatile       A&);  // { dg-error \"\" }\n-four  sink_5_12346(const volatile A&);  // { dg-error \"\" }\n-six   sink_5_12346(const          A&&);  // { dg-error \"\" }\n+one   sink_5_12346(               A&);  // { dg-message \"candidates\" }\n+two   sink_5_12346(const          A&);  // { dg-message \"note\" }\n+three sink_5_12346(volatile       A&);  // { dg-message \"note\" }\n+four  sink_5_12346(const volatile A&);  // { dg-message \"note\" }\n+six   sink_5_12346(const          A&&);  // { dg-message \"note\" }\n \n int test5_12346()\n {\n@@ -64,11 +64,11 @@ int test5_12346()\n     return 0;\n }\n \n-one   sink_5_12347(               A&);  // { dg-error \"\" }\n-two   sink_5_12347(const          A&);  // { dg-error \"\" }\n-three sink_5_12347(volatile       A&);  // { dg-error \"\" }\n-four  sink_5_12347(const volatile A&);  // { dg-error \"\" }\n-seven sink_5_12347(volatile       A&&);  // { dg-error \"\" }\n+one   sink_5_12347(               A&);  // { dg-message \"candidates\" }\n+two   sink_5_12347(const          A&);  // { dg-message \"note\" }\n+three sink_5_12347(volatile       A&);  // { dg-message \"note\" }\n+four  sink_5_12347(const volatile A&);  // { dg-message \"note\" }\n+seven sink_5_12347(volatile       A&&);  // { dg-message \"note\" }\n \n int test5_12347()\n {\n@@ -80,11 +80,11 @@ int test5_12347()\n     return 0;\n }\n \n-one   sink_5_12356(               A&);  // { dg-error \"\" }\n-two   sink_5_12356(const          A&);  // { dg-error \"\" }\n-three sink_5_12356(volatile       A&);  // { dg-error \"\" }\n-five  sink_5_12356(               A&&);  // { dg-error \"\" }\n-six   sink_5_12356(const          A&&);  // { dg-error \"\" }\n+one   sink_5_12356(               A&);  // { dg-message \"candidates\" }\n+two   sink_5_12356(const          A&);  // { dg-message \"note\" }\n+three sink_5_12356(volatile       A&);  // { dg-message \"note\" }\n+five  sink_5_12356(               A&&);  // { dg-message \"note\" }\n+six   sink_5_12356(const          A&&);  // { dg-message \"note\" }\n \n int test5_12356()\n {\n@@ -98,11 +98,11 @@ int test5_12356()\n     return 0;\n }\n \n-one   sink_5_12357(               A&);  // { dg-error \"\" }\n-two   sink_5_12357(const          A&);  // { dg-error \"\" }\n-three sink_5_12357(volatile       A&);  // { dg-error \"\" }\n-five  sink_5_12357(               A&&);  // { dg-error \"\" }\n-seven sink_5_12357(volatile       A&&);  // { dg-error \"\" }\n+one   sink_5_12357(               A&);  // { dg-message \"candidates\" }\n+two   sink_5_12357(const          A&);  // { dg-message \"note\" }\n+three sink_5_12357(volatile       A&);  // { dg-message \"note\" }\n+five  sink_5_12357(               A&&);  // { dg-message \"note\" }\n+seven sink_5_12357(volatile       A&&);  // { dg-message \"note\" }\n \n int test5_12357()\n {\n@@ -115,11 +115,11 @@ int test5_12357()\n     return 0;\n }\n \n-one   sink_5_12367(               A&);  // { dg-error \"\" }\n-two   sink_5_12367(const          A&);  // { dg-error \"\" }\n-three sink_5_12367(volatile       A&);  // { dg-error \"\" }\n-six   sink_5_12367(const          A&&);  // { dg-error \"\" }\n-seven sink_5_12367(volatile       A&&);  // { dg-error \"\" }\n+one   sink_5_12367(               A&);  // { dg-message \"candidates\" }\n+two   sink_5_12367(const          A&);  // { dg-message \"note\" }\n+three sink_5_12367(volatile       A&);  // { dg-message \"note\" }\n+six   sink_5_12367(const          A&&);  // { dg-message \"note\" }\n+seven sink_5_12367(volatile       A&&);  // { dg-message \"note\" }\n \n int test5_12367()\n {\n@@ -133,11 +133,11 @@ int test5_12367()\n     return 0;\n }\n \n-one   sink_5_12456(               A&);  // { dg-error \"\" }\n-two   sink_5_12456(const          A&);  // { dg-error \"\" }\n-four  sink_5_12456(const volatile A&);  // { dg-error \"\" }\n-five  sink_5_12456(               A&&);  // { dg-error \"\" }\n-six   sink_5_12456(const          A&&);  // { dg-error \"\" }\n+one   sink_5_12456(               A&);  // { dg-message \"candidates\" }\n+two   sink_5_12456(const          A&);  // { dg-message \"note\" }\n+four  sink_5_12456(const volatile A&);  // { dg-message \"note\" }\n+five  sink_5_12456(               A&&);  // { dg-message \"note\" }\n+six   sink_5_12456(const          A&&);  // { dg-message \"note\" }\n \n int test5_12456()\n {\n@@ -150,11 +150,11 @@ int test5_12456()\n     return 0;\n }\n \n-one   sink_5_12457(               A&);  // { dg-error \"\" }\n-two   sink_5_12457(const          A&);  // { dg-error \"\" }\n-four  sink_5_12457(const volatile A&);  // { dg-error \"\" }\n-five  sink_5_12457(               A&&);  // { dg-error \"\" }\n-seven sink_5_12457(volatile       A&&);  // { dg-error \"\" }\n+one   sink_5_12457(               A&);  // { dg-message \"candidates\" }\n+two   sink_5_12457(const          A&);  // { dg-message \"note\" }\n+four  sink_5_12457(const volatile A&);  // { dg-message \"note\" }\n+five  sink_5_12457(               A&&);  // { dg-message \"note\" }\n+seven sink_5_12457(volatile       A&&);  // { dg-message \"note\" }\n \n int test5_12457()\n {\n@@ -166,11 +166,11 @@ int test5_12457()\n     return 0;\n }\n \n-one   sink_5_12467(               A&);  // { dg-error \"\" }\n-two   sink_5_12467(const          A&);  // { dg-error \"\" }\n-four  sink_5_12467(const volatile A&);  // { dg-error \"\" }\n-six   sink_5_12467(const          A&&);  // { dg-error \"\" }\n-seven sink_5_12467(volatile       A&&);  // { dg-error \"\" }\n+one   sink_5_12467(               A&);  // { dg-message \"candidates\" }\n+two   sink_5_12467(const          A&);  // { dg-message \"note\" }\n+four  sink_5_12467(const volatile A&);  // { dg-message \"note\" }\n+six   sink_5_12467(const          A&&);  // { dg-message \"note\" }\n+seven sink_5_12467(volatile       A&&);  // { dg-message \"note\" }\n \n int test5_12467()\n {\n@@ -183,11 +183,11 @@ int test5_12467()\n     return 0;\n }\n \n-one   sink_5_12567(               A&);  // { dg-error \"\" }\n-two   sink_5_12567(const          A&);  // { dg-error \"\" }\n-five  sink_5_12567(               A&&);  // { dg-error \"\" }\n-six   sink_5_12567(const          A&&);  // { dg-error \"\" }\n-seven sink_5_12567(volatile       A&&);  // { dg-error \"\" }\n+one   sink_5_12567(               A&);  // { dg-message \"candidates\" }\n+two   sink_5_12567(const          A&);  // { dg-message \"note\" }\n+five  sink_5_12567(               A&&);  // { dg-message \"note\" }\n+six   sink_5_12567(const          A&&);  // { dg-message \"note\" }\n+seven sink_5_12567(volatile       A&&);  // { dg-message \"note\" }\n \n int test5_12567()\n {\n@@ -201,10 +201,10 @@ int test5_12567()\n }\n \n one   sink_5_12678(               A&);\n-two   sink_5_12678(const          A&);  // { dg-error \"\" }\n-six   sink_5_12678(const          A&&);  // { dg-error \"\" }\n-seven sink_5_12678(volatile       A&&);  // { dg-error \"\" }\n-eight sink_5_12678(const volatile A&&);  // { dg-error \"\" }\n+two   sink_5_12678(const          A&);  // { dg-message \"candidates\" }\n+six   sink_5_12678(const          A&&);  // { dg-message \"note\" }\n+seven sink_5_12678(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_5_12678(const volatile A&&);  // { dg-message \"note\" }\n \n int test5_12678()\n {\n@@ -216,11 +216,11 @@ int test5_12678()\n     return 0;\n }\n \n-one   sink_5_13456(               A&);  // { dg-error \"\" }\n-three sink_5_13456(volatile       A&);  // { dg-error \"\" }\n-four  sink_5_13456(const volatile A&);  // { dg-error \"\" }\n-five  sink_5_13456(               A&&);  // { dg-error \"\" }\n-six   sink_5_13456(const          A&&);  // { dg-error \"\" }\n+one   sink_5_13456(               A&);  // { dg-message \"candidates\" }\n+three sink_5_13456(volatile       A&);  // { dg-message \"note\" }\n+four  sink_5_13456(const volatile A&);  // { dg-message \"note\" }\n+five  sink_5_13456(               A&&);  // { dg-message \"note\" }\n+six   sink_5_13456(const          A&&);  // { dg-message \"note\" }\n \n int test5_13456()\n {\n@@ -233,11 +233,11 @@ int test5_13456()\n     return 0;\n }\n \n-one   sink_5_13457(               A&);  // { dg-error \"\" }\n-three sink_5_13457(volatile       A&);  // { dg-error \"\" }\n-four  sink_5_13457(const volatile A&);  // { dg-error \"\" }\n-five  sink_5_13457(               A&&);  // { dg-error \"\" }\n-seven sink_5_13457(volatile       A&&);  // { dg-error \"\" }\n+one   sink_5_13457(               A&);  // { dg-message \"candidates\" }\n+three sink_5_13457(volatile       A&);  // { dg-message \"note\" }\n+four  sink_5_13457(const volatile A&);  // { dg-message \"note\" }\n+five  sink_5_13457(               A&&);  // { dg-message \"note\" }\n+seven sink_5_13457(volatile       A&&);  // { dg-message \"note\" }\n \n int test5_13457()\n {\n@@ -250,11 +250,11 @@ int test5_13457()\n     return 0;\n }\n \n-one   sink_5_13467(               A&);  // { dg-error \"\" }\n-three sink_5_13467(volatile       A&);  // { dg-error \"\" }\n-four  sink_5_13467(const volatile A&);  // { dg-error \"\" }\n-six   sink_5_13467(const          A&&);  // { dg-error \"\" }\n-seven sink_5_13467(volatile       A&&);  // { dg-error \"\" }\n+one   sink_5_13467(               A&);  // { dg-message \"candidates\" }\n+three sink_5_13467(volatile       A&);  // { dg-message \"note\" }\n+four  sink_5_13467(const volatile A&);  // { dg-message \"note\" }\n+six   sink_5_13467(const          A&&);  // { dg-message \"note\" }\n+seven sink_5_13467(volatile       A&&);  // { dg-message \"note\" }\n \n int test5_13467()\n {\n@@ -267,11 +267,11 @@ int test5_13467()\n     return 0;\n }\n \n-one   sink_5_13567(               A&);  // { dg-error \"\" }\n-three sink_5_13567(volatile       A&);  // { dg-error \"\" }\n-five  sink_5_13567(               A&&);  // { dg-error \"\" }\n-six   sink_5_13567(const          A&&);  // { dg-error \"\" }\n-seven sink_5_13567(volatile       A&&);  // { dg-error \"\" }\n+one   sink_5_13567(               A&);  // { dg-message \"candidates\" }\n+three sink_5_13567(volatile       A&);  // { dg-message \"note\" }\n+five  sink_5_13567(               A&&);  // { dg-message \"note\" }\n+six   sink_5_13567(const          A&&);  // { dg-message \"note\" }\n+seven sink_5_13567(volatile       A&&);  // { dg-message \"note\" }\n \n int test5_13567()\n {\n@@ -286,9 +286,9 @@ int test5_13567()\n \n one   sink_5_13678(               A&);\n three sink_5_13678(volatile       A&);\n-six   sink_5_13678(const          A&&);  // { dg-error \"\" }\n-seven sink_5_13678(volatile       A&&);  // { dg-error \"\" }\n-eight sink_5_13678(const volatile A&&);  // { dg-error \"\" }\n+six   sink_5_13678(const          A&&);  // { dg-message \"candidates\" }\n+seven sink_5_13678(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_5_13678(const volatile A&&);  // { dg-message \"note\" }\n \n int test5_13678()\n {\n@@ -300,11 +300,11 @@ int test5_13678()\n     return 0;\n }\n \n-one   sink_5_14567(               A&);  // { dg-error \"\" }\n-four  sink_5_14567(const volatile A&);  // { dg-error \"\" }\n-five  sink_5_14567(               A&&);  // { dg-error \"\" }\n-six   sink_5_14567(const          A&&);  // { dg-error \"\" }\n-seven sink_5_14567(volatile       A&&);  // { dg-error \"\" }\n+one   sink_5_14567(               A&);  // { dg-message \"candidates\" }\n+four  sink_5_14567(const volatile A&);  // { dg-message \"note\" }\n+five  sink_5_14567(               A&&);  // { dg-message \"note\" }\n+six   sink_5_14567(const          A&&);  // { dg-message \"note\" }\n+seven sink_5_14567(volatile       A&&);  // { dg-message \"note\" }\n \n int test5_14567()\n {\n@@ -318,9 +318,9 @@ int test5_14567()\n \n one   sink_5_14678(               A&);\n four  sink_5_14678(const volatile A&);\n-six   sink_5_14678(const          A&&);  // { dg-error \"\" }\n-seven sink_5_14678(volatile       A&&);  // { dg-error \"\" }\n-eight sink_5_14678(const volatile A&&);  // { dg-error \"\" }\n+six   sink_5_14678(const          A&&);  // { dg-message \"candidates\" }\n+seven sink_5_14678(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_5_14678(const volatile A&&);  // { dg-message \"note\" }\n \n int test5_14678()\n {\n@@ -332,11 +332,11 @@ int test5_14678()\n     return 0;\n }\n \n-two   sink_5_23456(const          A&);  // { dg-error \"\" }\n-three sink_5_23456(volatile       A&);  // { dg-error \"\" }\n-four  sink_5_23456(const volatile A&);  // { dg-error \"\" }\n-five  sink_5_23456(               A&&);  // { dg-error \"\" }\n-six   sink_5_23456(const          A&&);  // { dg-error \"\" }\n+two   sink_5_23456(const          A&);  // { dg-message \"candidates\" }\n+three sink_5_23456(volatile       A&);  // { dg-message \"note\" }\n+four  sink_5_23456(const volatile A&);  // { dg-message \"note\" }\n+five  sink_5_23456(               A&&);  // { dg-message \"note\" }\n+six   sink_5_23456(const          A&&);  // { dg-message \"note\" }\n \n int test5_23456()\n {\n@@ -350,11 +350,11 @@ int test5_23456()\n     return 0;\n }\n \n-two   sink_5_23457(const          A&);  // { dg-error \"\" }\n-three sink_5_23457(volatile       A&);  // { dg-error \"\" }\n-four  sink_5_23457(const volatile A&);  // { dg-error \"\" }\n-five  sink_5_23457(               A&&);  // { dg-error \"\" }\n-seven sink_5_23457(volatile       A&&);  // { dg-error \"\" }\n+two   sink_5_23457(const          A&);  // { dg-message \"candidates\" }\n+three sink_5_23457(volatile       A&);  // { dg-message \"note\" }\n+four  sink_5_23457(const volatile A&);  // { dg-message \"note\" }\n+five  sink_5_23457(               A&&);  // { dg-message \"note\" }\n+seven sink_5_23457(volatile       A&&);  // { dg-message \"note\" }\n \n int test5_23457()\n {\n@@ -367,11 +367,11 @@ int test5_23457()\n     return 0;\n }\n \n-two   sink_5_23458(const          A&);  // { dg-error \"\" }\n-three sink_5_23458(volatile       A&);  // { dg-error \"\" }\n-four  sink_5_23458(const volatile A&);  // { dg-error \"\" }\n-five  sink_5_23458(               A&&);  // { dg-error \"\" }\n-eight sink_5_23458(const volatile A&&);  // { dg-error \"\" }\n+two   sink_5_23458(const          A&);  // { dg-message \"candidates\" }\n+three sink_5_23458(volatile       A&);  // { dg-message \"note\" }\n+four  sink_5_23458(const volatile A&);  // { dg-message \"note\" }\n+five  sink_5_23458(               A&&);  // { dg-message \"note\" }\n+eight sink_5_23458(const volatile A&&);  // { dg-message \"note\" }\n \n int test5_23458()\n {\n@@ -383,11 +383,11 @@ int test5_23458()\n     return 0;\n }\n \n-two   sink_5_23467(const          A&);  // { dg-error \"\" }\n-three sink_5_23467(volatile       A&);  // { dg-error \"\" }\n-four  sink_5_23467(const volatile A&);  // { dg-error \"\" }\n-six   sink_5_23467(const          A&&);  // { dg-error \"\" }\n-seven sink_5_23467(volatile       A&&);  // { dg-error \"\" }\n+two   sink_5_23467(const          A&);  // { dg-message \"candidates\" }\n+three sink_5_23467(volatile       A&);  // { dg-message \"note\" }\n+four  sink_5_23467(const volatile A&);  // { dg-message \"note\" }\n+six   sink_5_23467(const          A&&);  // { dg-message \"note\" }\n+seven sink_5_23467(volatile       A&&);  // { dg-message \"note\" }\n \n int test5_23467()\n {\n@@ -401,11 +401,11 @@ int test5_23467()\n     return 0;\n }\n \n-two   sink_5_23468(const          A&);  // { dg-error \"\" }\n-three sink_5_23468(volatile       A&);  // { dg-error \"\" }\n-four  sink_5_23468(const volatile A&);  // { dg-error \"\" }\n-six   sink_5_23468(const          A&&);  // { dg-error \"\" }\n-eight sink_5_23468(const volatile A&&);  // { dg-error \"\" }\n+two   sink_5_23468(const          A&);  // { dg-message \"candidates\" }\n+three sink_5_23468(volatile       A&);  // { dg-message \"note\" }\n+four  sink_5_23468(const volatile A&);  // { dg-message \"note\" }\n+six   sink_5_23468(const          A&&);  // { dg-message \"note\" }\n+eight sink_5_23468(const volatile A&&);  // { dg-message \"note\" }\n \n int test5_23468()\n {\n@@ -417,11 +417,11 @@ int test5_23468()\n    return 0;\n }\n \n-two   sink_5_23478(const          A&);  // { dg-error \"\" }\n-three sink_5_23478(volatile       A&);  // { dg-error \"\" }\n-four  sink_5_23478(const volatile A&);  // { dg-error \"\" }\n-seven sink_5_23478(volatile       A&&);  // { dg-error \"\" }\n-eight sink_5_23478(const volatile A&&);  // { dg-error \"\" }\n+two   sink_5_23478(const          A&);  // { dg-message \"candidates\" }\n+three sink_5_23478(volatile       A&);  // { dg-message \"note\" }\n+four  sink_5_23478(const volatile A&);  // { dg-message \"note\" }\n+seven sink_5_23478(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_5_23478(const volatile A&&);  // { dg-message \"note\" }\n \n int test5_23478()\n {\n@@ -433,11 +433,11 @@ int test5_23478()\n     return 0;\n }\n \n-two   sink_5_23567(const          A&);  // { dg-error \"\" }\n-three sink_5_23567(volatile       A&);  // { dg-error \"\" }\n-five  sink_5_23567(               A&&);  // { dg-error \"\" }\n-six   sink_5_23567(const          A&&);  // { dg-error \"\" }\n-seven sink_5_23567(volatile       A&&);  // { dg-error \"\" }\n+two   sink_5_23567(const          A&);  // { dg-message \"candidates\" }\n+three sink_5_23567(volatile       A&);  // { dg-message \"note\" }\n+five  sink_5_23567(               A&&);  // { dg-message \"note\" }\n+six   sink_5_23567(const          A&&);  // { dg-message \"note\" }\n+seven sink_5_23567(volatile       A&&);  // { dg-message \"note\" }\n \n int test5_23567()\n {\n@@ -451,11 +451,11 @@ int test5_23567()\n     return 0;\n }\n \n-two   sink_5_23568(const          A&);  // { dg-error \"\" }\n-three sink_5_23568(volatile       A&);  // { dg-error \"\" }\n-five  sink_5_23568(               A&&);  // { dg-error \"\" }\n-six   sink_5_23568(const          A&&);  // { dg-error \"\" }\n-eight sink_5_23568(const volatile A&&);  // { dg-error \"\" }\n+two   sink_5_23568(const          A&);  // { dg-message \"candidates\" }\n+three sink_5_23568(volatile       A&);  // { dg-message \"note\" }\n+five  sink_5_23568(               A&&);  // { dg-message \"note\" }\n+six   sink_5_23568(const          A&&);  // { dg-message \"note\" }\n+eight sink_5_23568(const volatile A&&);  // { dg-message \"note\" }\n \n int test5_23568()\n {\n@@ -467,11 +467,11 @@ int test5_23568()\n     return 0;\n }\n \n-two   sink_5_23578(const          A&);  // { dg-error \"\" }\n-three sink_5_23578(volatile       A&);  // { dg-error \"\" }\n-five  sink_5_23578(               A&&);  // { dg-error \"\" }\n-seven sink_5_23578(volatile       A&&);  // { dg-error \"\" }\n-eight sink_5_23578(const volatile A&&);  // { dg-error \"\" }\n+two   sink_5_23578(const          A&);  // { dg-message \"candidates\" }\n+three sink_5_23578(volatile       A&);  // { dg-message \"note\" }\n+five  sink_5_23578(               A&&);  // { dg-message \"note\" }\n+seven sink_5_23578(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_5_23578(const volatile A&&);  // { dg-message \"note\" }\n \n int test5_23578()\n {\n@@ -483,11 +483,11 @@ int test5_23578()\n     return 0;\n }\n \n-two   sink_5_23678(const          A&);  // { dg-error \"\" }\n-three sink_5_23678(volatile       A&);  // { dg-error \"\" }\n-six   sink_5_23678(const          A&&);  // { dg-error \"\" }\n-seven sink_5_23678(volatile       A&&);  // { dg-error \"\" }\n-eight sink_5_23678(const volatile A&&);  // { dg-error \"\" }\n+two   sink_5_23678(const          A&);  // { dg-message \"candidates\" }\n+three sink_5_23678(volatile       A&);  // { dg-message \"note\" }\n+six   sink_5_23678(const          A&&);  // { dg-message \"note\" }\n+seven sink_5_23678(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_5_23678(const volatile A&&);  // { dg-message \"note\" }\n \n int test5_23678()\n {\n@@ -500,11 +500,11 @@ int test5_23678()\n     return 0;\n }\n \n-two   sink_5_24567(const          A&);  // { dg-error \"\" }\n-four  sink_5_24567(const volatile A&);  // { dg-error \"\" }\n-five  sink_5_24567(               A&&);  // { dg-error \"\" }\n-six   sink_5_24567(const          A&&);  // { dg-error \"\" }\n-seven sink_5_24567(volatile       A&&);  // { dg-error \"\" }\n+two   sink_5_24567(const          A&);  // { dg-message \"candidates\" }\n+four  sink_5_24567(const volatile A&);  // { dg-message \"note\" }\n+five  sink_5_24567(               A&&);  // { dg-message \"note\" }\n+six   sink_5_24567(const          A&&);  // { dg-message \"note\" }\n+seven sink_5_24567(volatile       A&&);  // { dg-message \"note\" }\n \n int test5_24567()\n {\n@@ -516,11 +516,11 @@ int test5_24567()\n     return 0;\n }\n \n-two   sink_5_24678(const          A&);  // { dg-error \"\" }\n+two   sink_5_24678(const          A&);  // { dg-message \"candidates\" }\n four  sink_5_24678(const volatile A&);\n-six   sink_5_24678(const          A&&);  // { dg-error \"\" }\n-seven sink_5_24678(volatile       A&&);  // { dg-error \"\" }\n-eight sink_5_24678(const volatile A&&);  // { dg-error \"\" }\n+six   sink_5_24678(const          A&&);  // { dg-message \"note\" }\n+seven sink_5_24678(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_5_24678(const volatile A&&);  // { dg-message \"note\" }\n \n int test5_24678()\n {\n@@ -532,11 +532,11 @@ int test5_24678()\n     return 0;\n }\n \n-three sink_5_34567(volatile       A&);  // { dg-error \"\" }\n-four  sink_5_34567(const volatile A&);  // { dg-error \"\" }\n-five  sink_5_34567(               A&&);  // { dg-error \"\" }\n-six   sink_5_34567(const          A&&);  // { dg-error \"\" }\n-seven sink_5_34567(volatile       A&&);  // { dg-error \"\" }\n+three sink_5_34567(volatile       A&);  // { dg-message \"candidates\" }\n+four  sink_5_34567(const volatile A&);  // { dg-message \"note\" }\n+five  sink_5_34567(               A&&);  // { dg-message \"note\" }\n+six   sink_5_34567(const          A&&);  // { dg-message \"note\" }\n+seven sink_5_34567(volatile       A&&);  // { dg-message \"note\" }\n \n int test5_34567()\n {\n@@ -550,9 +550,9 @@ int test5_34567()\n \n three sink_5_34678(volatile       A&);\n four  sink_5_34678(const volatile A&);\n-six   sink_5_34678(const          A&&);  // { dg-error \"\" }\n-seven sink_5_34678(volatile       A&&);  // { dg-error \"\" }\n-eight sink_5_34678(const volatile A&&);  // { dg-error \"\" }\n+six   sink_5_34678(const          A&&);  // { dg-message \"candidates\" }\n+seven sink_5_34678(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_5_34678(const volatile A&&);  // { dg-message \"note\" }\n \n int test5_34678()\n {"}, {"sha": "040c0f6c3e8e12f52e90518708fff9fbf673cc63", "filename": "gcc/testsuite/g++.dg/cpp0x/rv6n.C", "status": "modified", "additions": 77, "deletions": 77, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv6n.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -30,12 +30,12 @@ const volatile A cv_source();\n \n // 6 at a time\n \n-one   sink_6_123456(               A&);  // { dg-error \"\" }\n-two   sink_6_123456(const          A&);  // { dg-error \"\" }\n-three sink_6_123456(volatile       A&);  // { dg-error \"\" }\n-four  sink_6_123456(const volatile A&);  // { dg-error \"\" }\n-five  sink_6_123456(               A&&);  // { dg-error \"\" }\n-six   sink_6_123456(const          A&&);  // { dg-error \"\" }\n+one   sink_6_123456(               A&);  // { dg-message \"candidates\" }\n+two   sink_6_123456(const          A&);  // { dg-message \"note\" }\n+three sink_6_123456(volatile       A&);  // { dg-message \"note\" }\n+four  sink_6_123456(const volatile A&);  // { dg-message \"note\" }\n+five  sink_6_123456(               A&&);  // { dg-message \"note\" }\n+six   sink_6_123456(const          A&&);  // { dg-message \"note\" }\n \n int test6_123456()\n {\n@@ -48,12 +48,12 @@ int test6_123456()\n     return 0;\n }\n \n-one   sink_6_123457(               A&);  // { dg-error \"\" }\n-two   sink_6_123457(const          A&);  // { dg-error \"\" }\n-three sink_6_123457(volatile       A&);  // { dg-error \"\" }\n-four  sink_6_123457(const volatile A&);  // { dg-error \"\" }\n-five  sink_6_123457(               A&&);  // { dg-error \"\" }\n-seven sink_6_123457(volatile       A&&);  // { dg-error \"\" }\n+one   sink_6_123457(               A&);  // { dg-message \"candidates\" }\n+two   sink_6_123457(const          A&);  // { dg-message \"note\" }\n+three sink_6_123457(volatile       A&);  // { dg-message \"note\" }\n+four  sink_6_123457(const volatile A&);  // { dg-message \"note\" }\n+five  sink_6_123457(               A&&);  // { dg-message \"note\" }\n+seven sink_6_123457(volatile       A&&);  // { dg-message \"note\" }\n \n int test6_123457()\n {\n@@ -65,12 +65,12 @@ int test6_123457()\n     return 0;\n }\n \n-two   sink_6_235678(const          A&);  // { dg-error \"\" }\n-three sink_6_235678(volatile       A&);  // { dg-error \"\" }\n-five  sink_6_235678(               A&&);  // { dg-error \"\" }\n-six   sink_6_235678(const          A&&);  // { dg-error \"\" }\n-seven sink_6_235678(volatile       A&&);  // { dg-error \"\" }\n-eight sink_6_235678(const volatile A&&);  // { dg-error \"\" }\n+two   sink_6_235678(const          A&);  // { dg-message \"candidates\" }\n+three sink_6_235678(volatile       A&);  // { dg-message \"note\" }\n+five  sink_6_235678(               A&&);  // { dg-message \"note\" }\n+six   sink_6_235678(const          A&&);  // { dg-message \"note\" }\n+seven sink_6_235678(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_6_235678(const volatile A&&);  // { dg-message \"note\" }\n \n int test6_235678()\n {\n@@ -82,12 +82,12 @@ int test6_235678()\n     return 0;\n }\n \n-two   sink_6_234678(const          A&);  // { dg-error \"\" }\n-three sink_6_234678(volatile       A&);  // { dg-error \"\" }\n-four  sink_6_234678(const volatile A&);  // { dg-error \"\" }\n-six   sink_6_234678(const          A&&);  // { dg-error \"\" }\n-seven sink_6_234678(volatile       A&&);  // { dg-error \"\" }\n-eight sink_6_234678(const volatile A&&);  // { dg-error \"\" }\n+two   sink_6_234678(const          A&);  // { dg-message \"candidates\" }\n+three sink_6_234678(volatile       A&);  // { dg-message \"note\" }\n+four  sink_6_234678(const volatile A&);  // { dg-message \"note\" }\n+six   sink_6_234678(const          A&&);  // { dg-message \"note\" }\n+seven sink_6_234678(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_6_234678(const volatile A&&);  // { dg-message \"note\" }\n \n int test6_234678()\n {\n@@ -100,12 +100,12 @@ int test6_234678()\n     return 0;\n }\n \n-two   sink_6_234578(const          A&);  // { dg-error \"\" }\n-three sink_6_234578(volatile       A&);  // { dg-error \"\" }\n-four  sink_6_234578(const volatile A&);  // { dg-error \"\" }\n-five  sink_6_234578(               A&&);  // { dg-error \"\" }\n-seven sink_6_234578(volatile       A&&);  // { dg-error \"\" }\n-eight sink_6_234578(const volatile A&&);  // { dg-error \"\" }\n+two   sink_6_234578(const          A&);  // { dg-message \"candidates\" }\n+three sink_6_234578(volatile       A&);  // { dg-message \"note\" }\n+four  sink_6_234578(const volatile A&);  // { dg-message \"note\" }\n+five  sink_6_234578(               A&&);  // { dg-message \"note\" }\n+seven sink_6_234578(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_6_234578(const volatile A&&);  // { dg-message \"note\" }\n \n int test6_234578()\n {\n@@ -117,12 +117,12 @@ int test6_234578()\n     return 0;\n }\n \n-two   sink_6_234568(const          A&);  // { dg-error \"\" }\n-three sink_6_234568(volatile       A&);  // { dg-error \"\" }\n-four  sink_6_234568(const volatile A&);  // { dg-error \"\" }\n-five  sink_6_234568(               A&&);  // { dg-error \"\" }\n-six   sink_6_234568(const          A&&);  // { dg-error \"\" }\n-eight sink_6_234568(const volatile A&&);  // { dg-error \"\" }\n+two   sink_6_234568(const          A&);  // { dg-message \"candidates\" }\n+three sink_6_234568(volatile       A&);  // { dg-message \"note\" }\n+four  sink_6_234568(const volatile A&);  // { dg-message \"note\" }\n+five  sink_6_234568(               A&&);  // { dg-message \"note\" }\n+six   sink_6_234568(const          A&&);  // { dg-message \"note\" }\n+eight sink_6_234568(const volatile A&&);  // { dg-message \"note\" }\n \n int test6_234568()\n {\n@@ -134,12 +134,12 @@ int test6_234568()\n     return 0;\n }\n \n-two   sink_6_234567(const          A&);  // { dg-error \"\" }\n-three sink_6_234567(volatile       A&);  // { dg-error \"\" }\n-four  sink_6_234567(const volatile A&);  // { dg-error \"\" }\n-five  sink_6_234567(               A&&);  // { dg-error \"\" }\n-six   sink_6_234567(const          A&&);  // { dg-error \"\" }\n-seven sink_6_234567(volatile       A&&);  // { dg-error \"\" }\n+two   sink_6_234567(const          A&);  // { dg-message \"candidates\" }\n+three sink_6_234567(volatile       A&);  // { dg-message \"note\" }\n+four  sink_6_234567(const volatile A&);  // { dg-message \"note\" }\n+five  sink_6_234567(               A&&);  // { dg-message \"note\" }\n+six   sink_6_234567(const          A&&);  // { dg-message \"note\" }\n+seven sink_6_234567(volatile       A&&);  // { dg-message \"note\" }\n \n int test6_234567()\n {\n@@ -155,9 +155,9 @@ int test6_234567()\n one   sink_6_134678(               A&);\n three sink_6_134678(volatile       A&);\n four  sink_6_134678(const volatile A&);\n-six   sink_6_134678(const          A&&);  // { dg-error \"\" }\n-seven sink_6_134678(volatile       A&&);  // { dg-error \"\" }\n-eight sink_6_134678(const volatile A&&);  // { dg-error \"\" }\n+six   sink_6_134678(const          A&&);  // { dg-message \"candidates\" }\n+seven sink_6_134678(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_6_134678(const volatile A&&);  // { dg-message \"note\" }\n \n int test6_134678()\n {\n@@ -170,11 +170,11 @@ int test6_134678()\n }\n \n one   sink_6_124678(               A&);\n-two   sink_6_124678(const          A&);  // { dg-error \"\" }\n+two   sink_6_124678(const          A&);  // { dg-message \"candidates\" }\n four  sink_6_124678(const volatile A&);\n-six   sink_6_124678(const          A&&);  // { dg-error \"\" }\n-seven sink_6_124678(volatile       A&&);  // { dg-error \"\" }\n-eight sink_6_124678(const volatile A&&);  // { dg-error \"\" }\n+six   sink_6_124678(const          A&&);  // { dg-message \"note\" }\n+seven sink_6_124678(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_6_124678(const volatile A&&);  // { dg-message \"note\" }\n \n int test6_124678()\n {\n@@ -187,11 +187,11 @@ int test6_124678()\n }\n \n one   sink_6_123678(               A&);\n-two   sink_6_123678(const          A&);  // { dg-error \"\" }\n+two   sink_6_123678(const          A&);  // { dg-message \"candidates\" }\n three sink_6_123678(volatile       A&);\n-six   sink_6_123678(const          A&&);  // { dg-error \"\" }\n-seven sink_6_123678(volatile       A&&);  // { dg-error \"\" }\n-eight sink_6_123678(const volatile A&&);  // { dg-error \"\" }\n+six   sink_6_123678(const          A&&);  // { dg-message \"note\" }\n+seven sink_6_123678(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_6_123678(const volatile A&&);  // { dg-message \"note\" }\n \n int test6_123678()\n {\n@@ -203,12 +203,12 @@ int test6_123678()\n     return 0;\n }\n \n-one   sink_6_123567(               A&);  // { dg-error \"\" }\n-two   sink_6_123567(const          A&);  // { dg-error \"\" }\n-three sink_6_123567(volatile       A&);  // { dg-error \"\" }\n-five  sink_6_123567(               A&&);  // { dg-error \"\" }\n-six   sink_6_123567(const          A&&);  // { dg-error \"\" }\n-seven sink_6_123567(volatile       A&&);  // { dg-error \"\" }\n+one   sink_6_123567(               A&);  // { dg-message \"candidates\" }\n+two   sink_6_123567(const          A&);  // { dg-message \"note\" }\n+three sink_6_123567(volatile       A&);  // { dg-message \"note\" }\n+five  sink_6_123567(               A&&);  // { dg-message \"note\" }\n+six   sink_6_123567(const          A&&);  // { dg-message \"note\" }\n+seven sink_6_123567(volatile       A&&);  // { dg-message \"note\" }\n \n int test6_123567()\n {\n@@ -221,12 +221,12 @@ int test6_123567()\n     return 0;\n }\n \n-one   sink_6_123467(               A&);  // { dg-error \"\" }\n-two   sink_6_123467(const          A&);  // { dg-error \"\" }\n-three sink_6_123467(volatile       A&);  // { dg-error \"\" }\n-four  sink_6_123467(const volatile A&);  // { dg-error \"\" }\n-six   sink_6_123467(const          A&&);  // { dg-error \"\" }\n-seven sink_6_123467(volatile       A&&);  // { dg-error \"\" }\n+one   sink_6_123467(               A&);  // { dg-message \"candidates\" }\n+two   sink_6_123467(const          A&);  // { dg-message \"note\" }\n+three sink_6_123467(volatile       A&);  // { dg-message \"note\" }\n+four  sink_6_123467(const volatile A&);  // { dg-message \"note\" }\n+six   sink_6_123467(const          A&&);  // { dg-message \"note\" }\n+seven sink_6_123467(volatile       A&&);  // { dg-message \"note\" }\n \n int test6_123467()\n {\n@@ -239,12 +239,12 @@ int test6_123467()\n     return 0;\n }\n \n-one   sink_6_124567(               A&);  // { dg-error \"\" }\n-two   sink_6_124567(const          A&);  // { dg-error \"\" }\n-four  sink_6_124567(const volatile A&);  // { dg-error \"\" }\n-five  sink_6_124567(               A&&);  // { dg-error \"\" }\n-six   sink_6_124567(const          A&&);  // { dg-error \"\" }\n-seven sink_6_124567(volatile       A&&);  // { dg-error \"\" }\n+one   sink_6_124567(               A&);  // { dg-message \"candidates\" }\n+two   sink_6_124567(const          A&);  // { dg-message \"note\" }\n+four  sink_6_124567(const volatile A&);  // { dg-message \"note\" }\n+five  sink_6_124567(               A&&);  // { dg-message \"note\" }\n+six   sink_6_124567(const          A&&);  // { dg-message \"note\" }\n+seven sink_6_124567(volatile       A&&);  // { dg-message \"note\" }\n \n int test6_124567()\n {\n@@ -256,12 +256,12 @@ int test6_124567()\n     return 0;\n }\n \n-one   sink_6_134567(               A&);  // { dg-error \"\" }\n-three sink_6_134567(volatile       A&);  // { dg-error \"\" }\n-four  sink_6_134567(const volatile A&);  // { dg-error \"\" }\n-five  sink_6_134567(               A&&);  // { dg-error \"\" }\n-six   sink_6_134567(const          A&&);  // { dg-error \"\" }\n-seven sink_6_134567(volatile       A&&);  // { dg-error \"\" }\n+one   sink_6_134567(               A&);  // { dg-message \"candidates\" }\n+three sink_6_134567(volatile       A&);  // { dg-message \"note\" }\n+four  sink_6_134567(const volatile A&);  // { dg-message \"note\" }\n+five  sink_6_134567(               A&&);  // { dg-message \"note\" }\n+six   sink_6_134567(const          A&&);  // { dg-message \"note\" }\n+seven sink_6_134567(volatile       A&&);  // { dg-message \"note\" }\n \n int test6_134567()\n {"}, {"sha": "9d81bd5d7222ff3f254ed6a6968e2a5c18fa35e6", "filename": "gcc/testsuite/g++.dg/cpp0x/rv7n.C", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7n.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7n.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frv7n.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,6 +1,6 @@\n // I, Howard Hinnant, hereby place this code in the public domain.\n \n-// Test overlaod resolution among referece types\n+// Test overload resolution among reference types\n \n // { dg-do compile }\n // { dg-options \"-std=c++0x\" }\n@@ -30,13 +30,13 @@ const volatile A cv_source();\n \n // 7 at a time\n \n-one   sink_7_1234567(               A&);  // { dg-error \"\" }\n-two   sink_7_1234567(const          A&);  // { dg-error \"\" }\n-three sink_7_1234567(volatile       A&);  // { dg-error \"\" }\n-four  sink_7_1234567(const volatile A&);  // { dg-error \"\" }\n-five  sink_7_1234567(               A&&);  // { dg-error \"\" }\n-six   sink_7_1234567(const          A&&);  // { dg-error \"\" }\n-seven sink_7_1234567(volatile       A&&);  // { dg-error \"\" }\n+one   sink_7_1234567(               A&);  // { dg-message \"candidates\" }\n+two   sink_7_1234567(const          A&);  // { dg-message \"note\" }\n+three sink_7_1234567(volatile       A&);  // { dg-message \"note\" }\n+four  sink_7_1234567(const volatile A&);  // { dg-message \"note\" }\n+five  sink_7_1234567(               A&&);  // { dg-message \"note\" }\n+six   sink_7_1234567(const          A&&);  // { dg-message \"note\" }\n+seven sink_7_1234567(volatile       A&&);  // { dg-message \"note\" }\n \n int test7_1234567()\n {\n@@ -48,13 +48,13 @@ int test7_1234567()\n     return 0;\n }\n \n-two   sink_7_2345678(const          A&);  // { dg-error \"\" }\n-three sink_7_2345678(volatile       A&);  // { dg-error \"\" }\n-four  sink_7_2345678(const volatile A&);  // { dg-error \"\" }\n-five  sink_7_2345678(               A&&);  // { dg-error \"\" }\n-six   sink_7_2345678(const          A&&);  // { dg-error \"\" }\n-seven sink_7_2345678(volatile       A&&);  // { dg-error \"\" }\n-eight sink_7_2345678(const volatile A&&);  // { dg-error \"\" }\n+two   sink_7_2345678(const          A&);  // { dg-message \"candidates\" }\n+three sink_7_2345678(volatile       A&);  // { dg-message \"note\" }\n+four  sink_7_2345678(const volatile A&);  // { dg-message \"note\" }\n+five  sink_7_2345678(               A&&);  // { dg-message \"note\" }\n+six   sink_7_2345678(const          A&&);  // { dg-message \"note\" }\n+seven sink_7_2345678(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_7_2345678(const volatile A&&);  // { dg-message \"note\" }\n \n int test7_2345678()\n {\n@@ -67,12 +67,12 @@ int test7_2345678()\n }\n \n one   sink_7_1234678(               A&);\n-two   sink_7_1234678(const          A&);  // { dg-error \"\" }\n+two   sink_7_1234678(const          A&);  // { dg-message \"candidates\" }\n three sink_7_1234678(volatile       A&);\n four  sink_7_1234678(const volatile A&);\n-six   sink_7_1234678(const          A&&);  // { dg-error \"\" }\n-seven sink_7_1234678(volatile       A&&);  // { dg-error \"\" }\n-eight sink_7_1234678(const volatile A&&);  // { dg-error \"\" }\n+six   sink_7_1234678(const          A&&);  // { dg-message \"note\" }\n+seven sink_7_1234678(volatile       A&&);  // { dg-message \"note\" }\n+eight sink_7_1234678(const volatile A&&);  // { dg-message \"note\" }\n \n int test7_1234678()\n {"}, {"sha": "b742cb1d3699f370d905e27cfb8888b03d5ec080", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic-ex13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic-ex13.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -34,6 +34,6 @@ template<typename... Args> void g(Args... args)\n    f(const_cast<const Args*>(&args)...); // okay: ``Args'' and ``args'' are expanded\n    f(5 ...); // { dg-error \"contains no argument packs\" }\n    f(args); // { dg-error \"parameter packs not expanded\" }\n-   // { dg-error \"args\" \"\" { target *-*-* } 36 }\n+   // { dg-message \"args\" \"note\" { target *-*-* } 36 }\n    f(h(args...) + args...); // okay: first ``args'' expanded within h, second ``args'' expanded within f.\n }"}, {"sha": "90636020401d592efcb59af40822935bcdd6fd86", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic36.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic36.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -11,5 +11,5 @@ struct tuple_base { };\n template<typename... Values>\n struct tuple : tuple_base<Values> { }; // { dg-error \"packs not expanded\" }\n \n-// { dg-error \"args\" \"\" { target *-*-* } 5 }\n-// { dg-error \"Values\" \"\" { target *-*-* } 12 }\n+// { dg-message \"args\" \"note\" { target *-*-* } 5 }\n+// { dg-message \"Values\" \"note\" { target *-*-* } 12 }"}, {"sha": "6d6e52f93192873fd2cb056e0aff28f453cca8bc", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic59.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic59.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic59.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic59.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,4 +1,4 @@\n // { dg-options \"-std=gnu++0x\" }\n template<class T, typename... VarArgs>\n void print(T t, VarArgs args); // { dg-error \"packs not expanded\" }\n-// { dg-error \"VarArgs\" \"\" { target *-*-* } 3 }\n+// { dg-message \"VarArgs\" \"note\" { target *-*-* } 3 }"}, {"sha": "bea3cc346319f42114b110bb0c017c079fbfec31", "filename": "gcc/testsuite/g++.dg/cpp0x/variadic71.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic71.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic71.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fvariadic71.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -9,4 +9,4 @@ struct push_front<list<Elements...>, Head> {\n   typedef list<Head, Elements> type; // { dg-error \"parameter packs not expanded\" }\n };\n \n-// { dg-error \"Elements\" \"\" { target *-*-* } 9 }\n+// { dg-message \"Elements\" \"note\" { target *-*-* } 9 }"}, {"sha": "e71a84ba43e22216ea930e1ec3c3f415ec28297c", "filename": "gcc/testsuite/g++.dg/expr/cond9.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fcond9.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,7 +1,7 @@\n // PR c++/27666\n \n-struct A { // { dg-error \"A\" }\n-  A(int); // { dg-error \"A\" }\n+struct A { // { dg-message \"A\" }\n+  A(int); // { dg-message \"A\" }\n };\n \n void foo(volatile A a) { "}, {"sha": "8f6426b401b1ce5e4236f53bfc126894a3450ec7", "filename": "gcc/testsuite/g++.dg/expr/pmf-1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fpmf-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fpmf-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fexpr%2Fpmf-1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -7,13 +7,13 @@\n struct A \n {\n   void f();\n-  void foo(void (A::*)(int));       // { dg-error \"candidate\" \"\" }\n+  void foo(void (A::*)(int));       // { dg-message \"candidate\" \"\" }\n   template<typename T>\n     void g(T);\n   void h()\n   {\n     void (A::*p)() = &A::f;\n     void (A::*q)() = &(A::f);       // { dg-error \"parenthesized\" \"\" }\n-    foo(&g<int>);                   // { dg-error \"\" \"\" }\n+    foo(&g<int>);                   // { dg-error \"no matching\" \"\" }\n   }\n };"}, {"sha": "de1f2a7e7630abc183ea9acc7411168463041252", "filename": "gcc/testsuite/g++.dg/ext/case-range2.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fcase-range2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fcase-range2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fcase-range2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -11,7 +11,7 @@ T f2 (T i)\n {\n   switch (i)\n   {\n-    case low ... high : return i + 1;  // { dg-error \"\" }\n+    case low ... high : return i + 1;  // { dg-error \"previously\" }\n     case 5 : return i + 2;             // { dg-error \"duplicate\" }\n     default : return 0;\n   }\n@@ -20,8 +20,8 @@ T f2 (T i)\n int f (int i)\n {\n   switch (i) {\n-    case 1 ... 10: return i + 1;       // { dg-error \"\" }\n+    case 1 ... 10: return i + 1;       // { dg-error \"first entry\" }\n     case 3 ... 5 : return i + 3;       // { dg-error \"duplicate\" }\n-    default: return f2 (i);            // { dg-error \"\" }\n+    default: return f2 (i);            // { dg-message \"instantiated\" }\n   }\n }"}, {"sha": "5a09c12d61d7acf84834c29817fc718506f58329", "filename": "gcc/testsuite/g++.dg/ext/case-range3.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fcase-range3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fcase-range3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fcase-range3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -9,15 +9,15 @@ T f2 (T i)\n {\n   switch (i)\n   {\n-    case low ... high : return i + 1; // { dg-error \"non-standard\" }\n+    case low ... high : return i + 1; // { dg-warning \"non-standard\" }\n     default : return 0;\n   }\n }\n \n int f (int i)\n {\n   switch (i) {\n-    case 1 ... 10: return i + 1;      // { dg-error \"non-standard\" }\n-    default: return f2 (i);           // { dg-error \"\" }\n+    case 1 ... 10: return i + 1;      // { dg-warning \"non-standard\" }\n+    default: return f2 (i);           // { dg-message \"instantiated\" }\n   }\n }"}, {"sha": "8649dc4410f308ddb78674f359dc164d1f8aedc6", "filename": "gcc/testsuite/g++.dg/ext/is_class_error2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_class_error2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_class_error2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fis_class_error2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -13,7 +13,7 @@ template<int> void foo()\n   __is_abstract(int)(); // { dg-error \"'__is_abstract\\\\(int\\\\)' cannot be used\" }\n   __is_base_of(int, float)(); // { dg-error \"'__is_base_of\\\\(int, float\\\\)' cannot be used\" }\n   __is_class(int)(); // { dg-error \"'__is_class\\\\(int\\\\)' cannot be used\" }\n-  __is_convertible_to(int, float)(); // { dg-error \"unimplemented\" }\n+  __is_convertible_to(int, float)(); // { dg-message \"unimplemented\" }\n   __is_empty(int)(); // { dg-error \"'__is_empty\\\\(int\\\\)' cannot be used\" }\n   __is_enum(int)(); // { dg-error \"'__is_enum\\\\(int\\\\)' cannot be used\" }\n   __is_pod(int)(); // { dg-error \"'__is_pod\\\\(int\\\\)' cannot be used\" }"}, {"sha": "9c5a24e5803ac0f3ccd3eb837856bf46d78c1d01", "filename": "gcc/testsuite/g++.dg/ext/label5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Flabel5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Flabel5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Flabel5.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -4,4 +4,4 @@\n struct A { };\n int main() { b: A() && && b; } // { dg-error \"A\\\\(\\\\) && && *b\" }\n \n-// { dg-error \"candidate\" \"additional\" { target *-*-* } 5 }\n+// { dg-message \"candidate\" \"additional\" { target *-*-* } 5 }"}, {"sha": "c96d51c14ec29c38c29bd13863206165b7b4d5b5", "filename": "gcc/testsuite/g++.dg/ext/pr27019.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr27019.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr27019.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fpr27019.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -8,4 +8,4 @@ struct A\n                 int z[1];\n };\n \n-A a = { z:{} }; // { dg-error \"unimplemented\" }\n+A a = { z:{} }; // { dg-message \"unimplemented\" }"}, {"sha": "3b7a4f8d572cde7539403fd05c919ae6a19d2c42", "filename": "gcc/testsuite/g++.dg/gomp/pr26690-1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr26690-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr26690-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr26690-1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -2,8 +2,8 @@\n // { dg-do compile }\n \n struct A\n-{\t\t\t\t\t// { dg-error \"A::A\\\\(const A&\\\\)\" }\n-  A (int);\t\t\t\t// { dg-error \"candidates\" }\n+{\t\t\t\t\t// { dg-message \"A::A\\\\(const A&\\\\)\" }\n+  A (int);\t\t\t\t// { dg-message \"candidates\" }\n };\n \n void"}, {"sha": "5d29f322c9d8aae758f83f2341f3d3cabe339bfd", "filename": "gcc/testsuite/g++.dg/gomp/pr26690-2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr26690-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr26690-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr26690-2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,8 +3,8 @@\n \n struct A\n {\n-  A (int x = 6);\t\t\t// { dg-error \"A::A\\\\(int\\\\)\" }\n-  A (long long x = 12LL);\t\t// { dg-error \"candidates\" }\n+  A (int x = 6);\t\t\t// { dg-message \"A::A\\\\(int\\\\)\" }\n+  A (long long x = 12LL);\t\t// { dg-message \"candidates\" }\n };\n \n void"}, {"sha": "c225e1545232c23aeab32e7253535c0e06cf5f46", "filename": "gcc/testsuite/g++.dg/gomp/pr34694.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr34694.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr34694.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Fpr34694.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -9,7 +9,7 @@ foo ()\n {\n #pragma omp parallel\n   {\n-    int j;\t// { dg-warning \"note: 'j' was declared here\" }\n+    int j;\t// { dg-message \"note: 'j' was declared here\" }\n     i = j;\t// { dg-warning \"is used uninitialized\" }\n   }\n }"}, {"sha": "2dceb093287d3a862287054a36ee5bd984df63a0", "filename": "gcc/testsuite/g++.dg/gomp/tpl-parallel-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ftpl-parallel-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ftpl-parallel-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgomp%2Ftpl-parallel-2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -17,4 +17,4 @@ void S<T>::test()\n \n template struct S<int>;\n template struct S<long>;\n-template struct S<float>;\t// { dg-error \"instantiated from here\" }\n+template struct S<float>;\t// { dg-message \"instantiated from here\" }"}, {"sha": "866b2906c4f6362eebb2b7bfae659e0c34f044d8", "filename": "gcc/testsuite/g++.dg/inherit/base3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fbase3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fbase3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fbase3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,4 +5,4 @@ template<typename T> struct A : T {};  // { dg-error \"struct or class type\" }\n \n struct B;\n \n-A<void (B::*)()> a;  // { dg-error \"instantiated\" }\n+A<void (B::*)()> a;  // { dg-message \"instantiated\" }"}, {"sha": "7bdfc3405c1510a44e36da4570710a0a4c646059", "filename": "gcc/testsuite/g++.dg/inherit/using6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fusing6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fusing6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finherit%2Fusing6.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -12,4 +12,4 @@ template <typename T> struct TPL : A\n };\n \n TPL<int> i;\n-TPL<float> j; // { dg-error \"instantiated\" }\n+TPL<float> j; // { dg-message \"instantiated\" }"}, {"sha": "bff89daa2f2dc0605eae60bb35baff8210d80796", "filename": "gcc/testsuite/g++.dg/init/brace6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fbrace6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fbrace6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fbrace6.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -6,7 +6,7 @@ struct A {\n };\n \n struct B {\n-   B(const B&);\t\t\t// { dg-error \"candidate\" }\n+   B(const B&);\t\t\t// { dg-message \"candidate\" }\n    int b;\n };\n "}, {"sha": "0671dd8537df6551833d2a37c6642f17bfbbcc5a", "filename": "gcc/testsuite/g++.dg/init/ctor4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fctor4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fctor4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Finit%2Fctor4.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -16,5 +16,5 @@ foo::foo() {\n \n int main(int argc, char **argv)\n {\n-  bar x; // { dg-error \"synthesized\" }\n+  bar x; // { dg-message \"synthesized\" }\n }"}, {"sha": "b861c6036dfbf75bc14f3c649e5b83a91c818af8", "filename": "gcc/testsuite/g++.dg/lookup/conv-1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fconv-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fconv-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fconv-1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -7,12 +7,12 @@\n \n struct A1 \n {\n-  operator int () const; // { dg-error \"A1::operator\" \"\" }\n+  operator int () const; // { dg-message \"A1::operator\" \"\" }\n };\n \n struct A2\n {\n-  operator int () const; // { dg-error \"A2::operator\" \"\" }\n+  operator int () const; // { dg-message \"A2::operator\" \"\" }\n };\n \n struct B : A1, A2 "}, {"sha": "b29aa46ce424f14a636d9cfd00da26f79029fbff", "filename": "gcc/testsuite/g++.dg/lookup/new1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fnew1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fnew1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fnew1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -10,4 +10,4 @@ int main() {\n   return 0;\n }\n \n-// { dg-error \"candidate\" \"\" { target *-*-* } 0 }\n+// { dg-message \"candidate\" \"\" { target *-*-* } 0 }"}, {"sha": "b83b08fe94f97a0b1ef44b56f9e8aa66680a0d8e", "filename": "gcc/testsuite/g++.dg/lookup/scoped6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fscoped6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fscoped6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fscoped6.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -10,7 +10,7 @@ public:\n class Bar {\n   Foo<int> foo_;\n public:\n-  Bar() {}  // { dg-error \"instantiated\" }\n+  Bar() {}  // { dg-message \"instantiated\" }\n };\n \n template class Foo<int>;"}, {"sha": "b250c5823f57dc2abaf81dd4012d5ac560d61712", "filename": "gcc/testsuite/g++.dg/lookup/using7.C", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing7.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -4,8 +4,9 @@ template <typename T, bool=T::X> struct A\n };\n \n template <typename T> struct B : A<T>\n-{ // { dg-error \"\" }\n-  using A<T>::i; // { dg-error \"\" } \n+{ // { dg-error \"incomplete\" }\n+  using A<T>::i; // { dg-error \"incomplete\" \"incomplete\" } \n+                 // { dg-error \"using\" \"using\" { target *-*-* } 8 }\n };\n \n-B<void> b; // { dg-error \"\" }\n+B<void> b; // { dg-message \"instantiated\" }"}, {"sha": "7c3b30d8873b5b34e862e797c660377b13a6c7c1", "filename": "gcc/testsuite/g++.dg/lookup/using9.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing9.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -4,14 +4,14 @@\n //  an ambiguous overload set to be created.\n \n namespace B {\n-  void f(int);     // { dg-error \"note\" }\n-  void f(double);  // { dg-error \"note\" }\n+  void f(int);     // { dg-message \"candidates\" }\n+  void f(double);  // { dg-message \"note\" }\n }\n \n namespace C {\n-  void f(int);     // { dg-error \"note\" }\n-  void f(double);  // { dg-error \"note\" }\n-  void f(char);    // { dg-error \"note\" }\n+  void f(int);     // { dg-message \"note\" }\n+  void f(double);  // { dg-message \"note\" }\n+  void f(char);    // { dg-message \"note\" }\n }\n \n void h()"}, {"sha": "8406f8a25d708b68d73d78438ff5c938823b5cc5", "filename": "gcc/testsuite/g++.dg/other/abstract1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fabstract1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fabstract1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fabstract1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,7 +5,7 @@\n // c++/9256: Make sure that a pointer to an array of abstract elements\n //  cannot be created, not even during template substitution (DR337).\n \n-struct Abstract { virtual void f() = 0; };  // { dg-error \"\" } \n+struct Abstract { virtual void f() = 0; };  // { dg-message \"note\" } \n struct Complete { void f(); };\n \n \n@@ -35,7 +35,7 @@ template <class T> struct K {\n   T (*a)[2];   // { dg-error \"abstract class type\" }\n };\n \n-template struct K<Abstract>;  // { dg-error \"from here\" }\n+template struct K<Abstract>;  // { dg-message \"instantiated\" }\n \n \n "}, {"sha": "b79493285c21e8a59501236d30a6ac0b6f45d470", "filename": "gcc/testsuite/g++.dg/other/abstract2.C", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fabstract2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fabstract2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fabstract2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -19,31 +19,31 @@ namespace N1 {\n     void g(X (*parm6)[2]);   // { dg-error \"abstract\" }\n   };\n \n-  struct X {  // { dg-error \"note\" }\n-    virtual void xfunc(void) = 0;  // { dg-error \"note\" }\n+  struct X {  // { dg-message \"note\" }\n+    virtual void xfunc(void) = 0;  // { dg-message \"note\" }\n   };\n }\n \n namespace N2 {\n-  struct X1 { // { dg-error \"note\" }\n-    virtual void xfunc(void) = 0;  // { dg-error \"note\" }\n+  struct X1 { // { dg-message \"note\" }\n+    virtual void xfunc(void) = 0;  // { dg-message \"note\" }\n     void g(X1 parm7);        // { dg-error \"abstract\" }\n     void g(X1 parm8[2]);     // { dg-error \"abstract\" }\n     void g(X1 (*parm9)[2]);  // { dg-error \"abstract\" }\n   };\n \n   template <int N>\n-  struct X2 { // { dg-error \"note\" }\n-    virtual void xfunc(void) = 0; // { dg-error \"note\" }\n+  struct X2 { // { dg-message \"note\" }\n+    virtual void xfunc(void) = 0; // { dg-message \"note\" }\n     void g(X2 parm10);        // { dg-error \"abstract\" }\n     void g(X2 parm11[2]);     // { dg-error \"abstract\" }\n     void g(X2 (*parm12)[2]);  // { dg-error \"abstract\" }\n   };\n }\n \n namespace N3 {\n-  struct X { // { dg-error \"note\" \"\" }\n-    virtual void xfunc(void) = 0;  // { dg-error \"note\" }\n+  struct X { // { dg-message \"note\" \"\" }\n+    virtual void xfunc(void) = 0;  // { dg-message \"note\" }\n   };\n   void g(X parm13);          // { dg-error \"abstract\" }\n   void g(X parm14[2]);       // { dg-error \"abstract\" }"}, {"sha": "53cf9e33c12af9671bcc9286e0be900a467b4bab", "filename": "gcc/testsuite/g++.dg/other/anon5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon5.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -11,7 +11,7 @@ namespace {\n \n const bool &f()\n {\n-  return c::t;\t// { dg-error \"undefined\" \"undefined\" { target *-*-* } 0 }\n+  return c::t;\t// { dg-message \"undefined\" \"undefined\" { target *-*-* } 0 }\n \t\t// Some targets report the error for the previous line, others\n \t\t// don't give line number inforamtion for it, so use line 0.\n }"}, {"sha": "bc2c457f1b4d63fb5cb0aa0e7047e78d1b5bb685", "filename": "gcc/testsuite/g++.dg/other/crash-4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcrash-4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcrash-4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fcrash-4.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -22,5 +22,5 @@ struct b\n struct c\n {\n   b bb;\n-  c(const b& __a): bb(__a) {} // { dg-error \"synthesized\" \"\" { target { ! default_packed } } }\n+  c(const b& __a): bb(__a) {} // { dg-message \"synthesized\" \"\" { target { ! default_packed } } }\n };"}, {"sha": "9e6da6529aa39983b7878e029c5c0059696d520a", "filename": "gcc/testsuite/g++.dg/other/error10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror10.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -10,6 +10,6 @@ void foo(const A<N> &a)\n \n void bar()\n {\n-    foo(A<0>()); // { dg-error \"instantiated from here\" \"\" }\n+    foo(A<0>()); // { dg-message \"instantiated from here\" \"\" }\n }\n "}, {"sha": "d3b1eabc0b2f17cb8aec21bbe93600925e5f3a68", "filename": "gcc/testsuite/g++.dg/other/error13.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror13.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,10 +1,10 @@\n //PR c++/28258\n \n struct A \n-{            // { dg-error \"\" }\n+{            // { dg-message \"note\" }\n   A(void x); // { dg-error \"invalid use|incomplete type|candidates\" }\n };\n \n struct B : A {}; // { dg-error \"no matching function for call\" }\n  \n-B b; // { dg-error \"synthesized method\" }\n+B b; // { dg-message \"synthesized method\" }"}, {"sha": "50a4495cff9ee22454e80078d06ad714d264d3d9", "filename": "gcc/testsuite/g++.dg/other/error20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror20.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -2,7 +2,7 @@\n // { dg-do compile }\n \n struct A\n-{\t\t// { dg-error \"candidates\" }\n+{\t\t// { dg-message \"candidates\" }\n   virtual A foo ();\n };\n "}, {"sha": "c7a142fb57d4d32232d87979d850cc35c3e34db0", "filename": "gcc/testsuite/g++.dg/other/error5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror5.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -10,4 +10,4 @@ template <typename T> struct S2 : S<T> {\n     using S<T>::operator typename S<T>::I*; // { dg-error \"operator S\\\\<int\\\\>\" \"\" }\n };\n \n-template struct S2<int>;  // { dg-error \"instantiated\" \"\" }\n+template struct S2<int>;  // { dg-message \"instantiated\" \"\" }"}, {"sha": "61a9df6956320b75d3d32f3b0f77b245d7d76a46", "filename": "gcc/testsuite/g++.dg/other/field1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffield1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffield1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ffield1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -22,4 +22,4 @@ template <> struct X<int> {\n   X();\n };\n \n-X<float> i; // { dg-error \"instantiated from\" \"\" }\n+X<float> i; // { dg-message \"instantiated from\" \"\" }"}, {"sha": "3c4843380553d46cff5a80cf1d95a38d3e24ac7f", "filename": "gcc/testsuite/g++.dg/other/offsetof5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Foffsetof5.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -19,4 +19,4 @@ struct S\n   static const int j = offsetof (S, i);\t// { dg-warning \"invalid access|offsetof\" }\n };\n \n-int k = S<int>::j;\t\t\t// { dg-warning \"instantiated from here\" }\n+int k = S<int>::j;\t\t\t// { dg-message \"instantiated from here\" }"}, {"sha": "efbae8b7021a9295102d092354c6d2f7a6340353", "filename": "gcc/testsuite/g++.dg/other/semicolon.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fsemicolon.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fsemicolon.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fsemicolon.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,6 +5,7 @@\n \n struct A\n {\n-  struct B { int i; } // { dg-error \"3: error: new types may not be defined in a return type|note: \\\\(perhaps a semicolon is missing\" }\n-  void foo();   // { dg-error \"12: error: two or more|return type\" }\n+  struct B { int i; } // { dg-error \"3:new types may not be defined in a return type\" }\n+                      // { dg-message \"perhaps a semicolon is missing\" \"note\" { target *-*-* } 8 }\n+  void foo();   // { dg-error \"12:two or more\" }\n };"}, {"sha": "21948bf3146cb41679945eadcb1581dd9a586e6a", "filename": "gcc/testsuite/g++.dg/overload/ambig1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fambig1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fambig1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fambig1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -14,8 +14,8 @@ struct B\n   B(int);\n };\n \n-void f(A);\t\t\t// { dg-error \"\" \"candidate\" }\n-void f(B);\t\t\t// { dg-error \"\" \"candidate\" }\n+void f(A);\t\t\t// { dg-message \"note\" \"candidate\" }\n+void f(B);\t\t\t// { dg-message \"note\" \"candidate\" }\n \n int main()\n {"}, {"sha": "8ece6a6f3ca03d47d3382f6f9eae9729ee1c4f95", "filename": "gcc/testsuite/g++.dg/overload/arg3.C", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Farg3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Farg3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Farg3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -10,13 +10,14 @@ struct A {};\n \n struct B : A\n {\n-  B(int); // { dg-error \"\" \"\" }\n-  B(B&);  // { dg-error \"\" \"\" }\n+  B(int); // { dg-message \"B::B\" \"\" }\n+  B(B&);  // { dg-message \"candidates\" \"\" }\n };\n \n void foo(B);\n \n void bar()\n {\n-  foo(0); // { dg-error \"no matching function|initializing\" \"\" }\n+  foo(0); // { dg-error \"no matching function\" \"no matching\" }\n+          // { dg-error \"initializing\" \"initializing\" { target *-*-* } 21 }\n }"}, {"sha": "652b8e1b760cbb7d91d9992b6a92c8b3e6ba0b2a", "filename": "gcc/testsuite/g++.dg/overload/builtin1.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fbuiltin1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fbuiltin1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fbuiltin1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -7,10 +7,11 @@ struct A {\n   operator B ();\n };\n \n-void operator+ (B, B);\t\t// { dg-error \"\" \"candidate\" }\n+void operator+ (B, B);\t\t// { dg-message \"operator\" \"operator\" }\n \n int main ()\n {\n   A a;\n-  a + a;\t\t\t// { dg-error \"\" \"ambiguous\" }\n+  a + a;\t\t\t// { dg-error \"ambiguous\" \"ambiguous\" }\n+                                // { dg-message \"candidates\" \"candidates\" { target *-*-* } 15 }\n }"}, {"sha": "6a774c6770b4badffc856ae06fae6ab815d3f78c", "filename": "gcc/testsuite/g++.dg/overload/copy1.C", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fcopy1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fcopy1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fcopy1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -4,8 +4,8 @@ struct A;\n \n struct B\n {\n-  B (A const &);\t\t// { dg-warning \"note\" }\n-  B (B &);\t\t\t// { dg-warning \"note\" }\n+  B (A const &);\t\t// { dg-message \"note\" }\n+  B (B &);\t\t\t// { dg-message \"note\" }\n };\n \n struct A\n@@ -16,5 +16,6 @@ struct A\n B\n f (B const& b)\n {\n-  return b;\t\t\t// { dg-error \"\" }\n+  return b;\t\t\t// { dg-error \"matching\" \"matching\" }\n+                                // { dg-error \"initializing\" \"initializing\" { target *-*-* } 19 }\n }"}, {"sha": "89282faf66cbb7c6f9e5e3acefdb4469f67e373c", "filename": "gcc/testsuite/g++.dg/overload/new1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fnew1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fnew1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fnew1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -16,6 +16,6 @@ void f(X *x = new X[4]);       // { dg-error \"\" }\n void f(X *x = new (3) X(6));   // { dg-error \"\" } \n \n void f(X *x = new (2) X[10]);  // { dg-error \"\" } \n-// { dg-error \"candidate\" \"\" { target *-*-* } 00 }\n+// { dg-message \"candidate\" \"\" { target *-*-* } 00 }\n \n void f(X *x = new X[10][5]);   // { dg-error \"\" } "}, {"sha": "6638dc9d24672bead5cd6e7d453537989e9ebfbb", "filename": "gcc/testsuite/g++.dg/overload/template4.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Ftemplate4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Ftemplate4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Ftemplate4.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,14 +3,14 @@\n \n namespace\n {\n-  template <int> void foo (...);\t// { dg-error \"\" \"candidate\" }\n-  template <int> void bar (int, ...);\t// { dg-error \"\" \"candidate\" }\n-  void baz (...);\t\t\t// { dg-error \"\" \"candidate\" }\n+  template <int> void foo (...);\t// { dg-message \"foo\" }\n+  template <int> void bar (int, ...);\t// { dg-message \"bar\" }\n+  void baz (...);\t\t\t// { dg-message \"baz\" }\n }\n \n-template <int> void foo (...);\t\t// { dg-error \"\" \"candidate\" }\n-template <int> void bar (int, ...);\t// { dg-error \"\" \"candidate\" }\n-void baz (...);\t\t\t\t// { dg-error \"\" \"candidate\" }\n+template <int> void foo (...);\t\t// { dg-message \"candidate\" }\n+template <int> void bar (int, ...);\t// { dg-message \"candidate\" }\n+void baz (...);\t\t\t\t// { dg-message \"candidate\" }\n \n void\n test ()"}, {"sha": "54b12219bd8f1551ae82f6fd06538242eb452a95", "filename": "gcc/testsuite/g++.dg/overload/using2.C", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fusing2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fusing2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fusing2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -20,21 +20,21 @@ namespace std {\n   extern \"C\" void *malloc (__SIZE_TYPE__) throw () __attribute__((malloc));\n \n   void abort (void) throw (); // these aren't\n-  void _exit (int) throw (); // { dg-error \"std::_exit\" }\n+  void _exit (int) throw (); // { dg-message \"std::_exit\" }\n \n   extern \"C\" void c1 (void) throw ();\n-  void C1 (void) throw (); // { dg-error \"std::C1\" }\n+  void C1 (void) throw (); // { dg-message \"std::C1\" }\n \n   extern \"C\" void c2 (void) throw ();\n   void C2 (void) throw ();\n \n   extern \"C\" void c3 (void) throw ();\n-  void C3 (void) throw (); // { dg-error \"std::C3\" }\n+  void C3 (void) throw (); // { dg-message \"std::C3\" }\n }\n \n namespace other {\n   extern \"C\" void c3 (void) throw ();\n-  void C3 (void) throw (); // { dg-error \"other::C3\" }\n+  void C3 (void) throw (); // { dg-message \"other::C3\" }\n }\n \n using std::exit;\n@@ -46,10 +46,12 @@ using std::C1;\n   extern \"C\" void *malloc (__SIZE_TYPE__) throw () __attribute__((malloc));\n \n   void abort (void) throw ();\n-  void _exit (int) throw (); // { dg-error \"conflicts|void _exit\" }\n+  void _exit (int) throw (); // { dg-error \"conflicts\" \"conflicts\" }\n+                             // { dg-message \"void _exit\" \"_exit\" { target *-*-* } 49 }\n \n   extern \"C\" void c1 (void) throw ();\n-  void C1 (void) throw (); // { dg-error \"conflicts|void C1\" }\n+  void C1 (void) throw (); // { dg-error \"conflicts\" \"conflicts\" }\n+                           // { dg-message \"void C1\" \"C1\" { target *-*-* } 53 }\n \n   extern \"C\" void c2 (void) throw ();\n   void C2 (void) throw ();"}, {"sha": "a04d2adf8f3049c5dfdcb73ab351dbf00ad5dfcd", "filename": "gcc/testsuite/g++.dg/parse/bitfield2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fbitfield2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -22,7 +22,7 @@ struct D\n   T t : 3;              // { dg-error \"non-integral type\" }\n };\n \n-D<double> d;            // { dg-error \"instantiated\" }\n+D<double> d;            // { dg-message \"instantiated\" }\n \n template <typename T>\n struct E"}, {"sha": "d69f60ba8cad33b78a7739165dad84b7a36f0598", "filename": "gcc/testsuite/g++.dg/parse/constant4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fconstant4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fconstant4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fconstant4.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -34,7 +34,7 @@ template <typename> struct X\n \n void Baz ()\n {\n-  Foo<int> (); // { dg-error \"instantiated\" \"\" }\n+  Foo<int> (); // { dg-message \"instantiated\" \"\" }\n }\n \n   "}, {"sha": "1796531487ca99b91dab1788dc23652e80ce571b", "filename": "gcc/testsuite/g++.dg/parse/constructor1.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fconstructor1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fconstructor1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fconstructor1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,7 +1,8 @@\n // { dg-do compile }\n // { dg-options \"-fshow-column\" }\n \n-ACE_Process_Descriptor::ACE_Process_Descriptor () : // { dg-error \"\" }\n-  process_ (0) // { dg-error \"3: error: only constructors take base initializers\" }\n+ACE_Process_Descriptor::ACE_Process_Descriptor () : // { dg-error \"declared\" \"declared\" }\n+  // { dg-error \"no type\" \"no type\" { target *-*-* } 4 }\n+  process_ (0) // { dg-error \"3: only constructors take base initializers\" }\n {\n }"}, {"sha": "d04869fa7afa338d6e002d9a9fcf7c4cbda1c7ef", "filename": "gcc/testsuite/g++.dg/parse/crash20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash20.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -11,4 +11,4 @@ template<typename T> struct A\n   typedef typename T::X Y; // { dg-error \"not a class\" \"\" }\n };\n \n-A<int>::Y y; // { dg-error \"instantiated from here\" \"\" }\n+A<int>::Y y; // { dg-message \"instantiated from here\" \"\" }"}, {"sha": "6f5c86734a83061d87c5763f3b74188a9a0f4df2", "filename": "gcc/testsuite/g++.dg/parse/crash36.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash36.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -2,9 +2,10 @@\n // { dg-do compile }\n // { dg-options \"-std=c++98\" }\n \n-template <typename... T> struct A\t// { dg-error \"variadic templates\" }\n+template <typename... T> struct A\t// { dg-warning \"variadic templates\" }\n {\n-  static T &t;\t\t\t\t// { dg-error \"not expanded with|T\" }\n+  static T &t;\t\t\t\t// { dg-error \"not expanded with\" \"not expanded\" }\n+\t\t\t\t\t// { dg-message \"T\" \"T\" { target *-*-* } 7 }\n   static const int i = sizeof (++t);\t// { dg-error \"was not declared in this scope\" }\n };\n "}, {"sha": "acf9e9d4bbaa82627a906a72ab8608c084225803", "filename": "gcc/testsuite/g++.dg/parse/crash5.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fcrash5.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,13 +1,13 @@\n // { dg-options \"-w\" }\n \n-class QString { // { dg-error \"\" }\n-  QString (const QString & a); // { dg-error \"\" }\n+class QString { // { dg-error \"previous definition\" }\n+  QString (const QString & a); // { dg-message \"candidates\" }\n };\n \n-class QString { }; // { dg-error \"\" }\n+class QString { }; // { dg-error \"redefinition\" }\n \n const QString q () {\n-  QString z; // { dg-error \"\" }\n+  QString z; // { dg-error \"matching\" }\n   int x;\n-  return x ? QString () : QString (); // { dg-error \"\" }\n+  return x ? QString () : QString (); // { dg-error \"matching\" }\n }"}, {"sha": "18dc4633a5d33b8df46c940a99f2b256094d5a0d", "filename": "gcc/testsuite/g++.dg/parse/error-column.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror-column.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror-column.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror-column.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,5 +5,5 @@\n \n void foo ()\n {\n-  cout << \"blah\"; // { dg-error \"3: error: 'cout'\" }\n+  cout << \"blah\"; // { dg-error \"3:'cout'\" }\n }"}, {"sha": "1f8bb37732c6d0f72c79bc90b2ee71eefd6f2420", "filename": "gcc/testsuite/g++.dg/parse/error1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,5 +3,5 @@ struct INCOMPLETE;\n template <int> struct X {\n     static INCOMPLETE value;\n };\n-template <> INCOMPLETE X<1>::value = 0; // { dg-error \"30: error: variable 'INCOMPLETE X<1>::value' has initializer but incomplete type\" }\n+template <> INCOMPLETE X<1>::value = 0; // { dg-error \"30:variable 'INCOMPLETE X<1>::value' has initializer but incomplete type\" }\n "}, {"sha": "8301172adbeabc98a0708f02e54d4a7256519f2b", "filename": "gcc/testsuite/g++.dg/parse/error10.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror10.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -15,5 +15,5 @@ template <typename T> void foo()\n }\n \n // Here, columns nums are not very accurate either. Still acceptable though\n-// { dg-error \"30: error: invalid type in declaration before ';' token\" \"\" { target *-*-* } { 14 } }\n-// { dg-error \"30: error: two or more data types in declaration of 'e4'\" \"\" { target *-*-* } { 14 } }\n+// { dg-error \"30:invalid type in declaration before ';' token\" \"\" { target *-*-* } 14 }\n+// { dg-error \"30:two or more data types in declaration of 'e4'\" \"\" { target *-*-* } 14 }"}, {"sha": "39039a880b1404cac82bc96ed6db4179650d3f11", "filename": "gcc/testsuite/g++.dg/parse/error11.C", "status": "modified", "additions": 27, "deletions": 16, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror11.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -16,45 +16,56 @@ struct Foo\n   };\n \n   void method(void) {\n-    typename Foo<::B>::template Nested<::B> n; // { dg-error \"17: error: '<::' cannot begin|17: note: '<:' is an alternate spelling|39: error: '<::' cannot begin|39: note: '<:' is an alternate\" }\n+    typename Foo<::B>::template Nested<::B> n; // { dg-error \"17:'<::' cannot begin\" \"17-begin\" }\n+// { dg-message \"17:'<:' is an alternate spelling\" \"17-alt\" { target *-*-* } 19 }\n+// { dg-error \"39:'<::' cannot begin\" \"39-begin\" { target *-*-* } 19 }\n+// { dg-message \"39:'<:' is an alternate spelling\" \"39-alt\" { target *-*-* } 19 }\n     n.template Nested<B>::method();\n-    n.template Nested<::B>::method();  // { dg-error \"22: error: '<::' cannot begin|22: note: '<:' is an alternate\" }\n+    n.template Nested<::B>::method();  // { dg-error \"22:'<::' cannot begin\" \"error\" }\n+// { dg-message \"22:'<:' is an alternate\" \"note\" { target *-*-* } 24 }\n     Nested<B>::method();\n-    Nested<::B>::method(); // { dg-error \"11: error: '<::' cannot begin|11: note: '<:' is an alternate\" }\n+    Nested<::B>::method(); // { dg-error \"11:'<::' cannot begin\" \"error\" }\n+// { dg-message \"11:'<:' is an alternate\" \"note\" { target *-*-* } 27 }\n   }\n };\n \n template <int N> struct Foo2 {};\n-template struct Foo2<::B>;  // { dg-error \"21: error: '<::' cannot begin|21: note: '<:' is an alternate|25: error: type/value mismatch|25: error:   expected a constant\" }\n+template struct Foo2<::B>;  // { dg-error \"21:'<::' cannot begin\" \"begin\" }\n+// { dg-message \"21:'<:' is an alternate\" \"alt\" { target *-*-* } 33 }\n+// { dg-message \"25:type/value mismatch\" \"mismatch\" { target *-*-* } 33 }\n+// { dg-error \"25:expected a constant\" \"const\" { target *-*-* } 33 }\n \n int value = 0;\n \n void func(void)\n {\n-  Foo<::B> f; // { dg-error \"cannot begin|alternate spelling\" }\n+  Foo<::B> f; // { dg-error \"cannot begin\" \"begin\" }\n+// { dg-message \"alternate spelling\" \"alt\" { target *-*-* } 42 }\n   f.Foo<B>::method();\n-  f.Foo<::B>::method(); // { dg-error \"8: error|8: note\" }\n+  f.Foo<::B>::method(); // { dg-error \"8:cannot begin\" \"begin\" }\n+// { dg-message \"8:alternate spelling\" \"alt\" { target *-*-* } 45 }\n \n   // Check cases where we the token sequence is the correct one, but there\n   //  was no digraph or whitespaces in the middle, so we should not emit\n   //  the special error message.\n   Foo<: :B> k2;     // { dg-bogus \"cannot begin|alternate spelling\" \"smart error should not be triggered here\" }\n   Foo[:B> k1;       // { dg-bogus \"cannot begin|alternate spelling\" \"smart error should not be triggered here\" } \n-// { dg-error \"6: error: missing template arguments before\" \"\" { target *-*-* } { 41 } }\n-// { dg-error \"9: error: expected primary-expression before ':' token\" \"\" { target *-*-* } 41 }\n-// { dg-error \"9: error: expected '\\]' before ':' token\" \"\" { target *-*-* } 41 }\n-// { dg-error \"9: error: expected ';' before ':' token\" \"\" { target *-*-* } 41 }\n-// { dg-error \"6: error: missing template arguments before\" \"\" { target *-*-* } 42 }\n-// { dg-error \"7: error: expected primary-expression before ':' token\" \"\" { target *-*-* } 42 }\n-// { dg-error \"7: error: expected '\\]' before ':' token\" \"\" { target *-*-* } 42 }\n-// { dg-error \"7: error: expected ';' before ':' token\" \"\" { target *-*-* } 42 }\n+// { dg-error \"6:missing template arguments before\" \"template\" { target *-*-* } { 51 } }\n+// { dg-error \"9:expected primary-expression before ':' token\" \"primary\" { target *-*-* } 51 }\n+// { dg-error \"9:expected '\\]' before ':' token\" \"backslash\" { target *-*-* } 51 }\n+// { dg-error \"9:expected ';' before ':' token\" \"semicolon\" { target *-*-* } 51 }\n+// { dg-error \"6:missing template arguments before\" \"template\" { target *-*-* } 52 }\n+// { dg-error \"7:expected primary-expression before ':' token\" \"primary\" { target *-*-* } 52 }\n+// { dg-error \"7:expected '\\]' before ':' token\" \"backslash\" { target *-*-* } 52 }\n+// { dg-error \"7:expected ';' before ':' token\" \"semicolon\" { target *-*-* } 52 }\n //\n   int Foo[2];\n   Foo[::value] = 0;\n }\n \n-template struct Foo<::B>; // { dg-error \"20: error: '<::' cannot begin|20: note: '<:' is an alternate\" }\n+template struct Foo<::B>; // { dg-error \"20:'<::' cannot begin\" \"begin\" }\n+// { dg-message \"20:is an alternate\" \"alt\" { target *-*-* } 66 }\n \n // On the first error message, an additional note about the use of \n //  -fpermissive should be present\n-// { dg-error \"17: note: \\\\(if you use '-fpermissive' G\\\\+\\\\+ will accept your code\\\\)\" \"-fpermissive\" { target *-*-* } 19 }\n+// { dg-message \"17:\\\\(if you use '-fpermissive' G\\\\+\\\\+ will accept your code\\\\)\" \"-fpermissive\" { target *-*-* } 19 }"}, {"sha": "3ebcf389413e3de39026977f9128b8c4d871dff8", "filename": "gcc/testsuite/g++.dg/parse/error12.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror12.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -9,5 +9,5 @@ template <class A>\n struct Foo {};\n \n Foo<::B> foo;   // { dg-bogus \"error\" \"error in place of warning\" }\n-// { dg-error \"4: warning: '<::' cannot begin a template-argument list\" \"warning <::\" { target *-*-* } 11 }\n-// { dg-error \"4: note: '<:' is an alternate spelling for '.'. Insert whitespace between '<' and '::'\" \"note <:\" { target *-*-* } 11 }\n+// { dg-warning \"4: '<::' cannot begin a template-argument list\" \"warning <::\" { target *-*-* } 11 }\n+// { dg-message \"4:'<:' is an alternate spelling for '.'. Insert whitespace between '<' and '::'\" \"note <:\" { target *-*-* } 11 }"}, {"sha": "9bce98d7fc86d56d3a42c0ea19fa9fb8b15c3c82", "filename": "gcc/testsuite/g++.dg/parse/error13.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror13.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,14 +1,14 @@\n // { dg-options \"-fshow-column\" }\n // PR c++/13975\n \n-public: // { dg-error \"1: error: expected unqualified-id before 'public'\" }\n+public: // { dg-error \"1:expected unqualified-id before 'public'\" }\n \n int i;\n \n-protected: // { dg-error \"1: error: expected unqualified-id before 'protected'\" }\n+protected: // { dg-error \"1:expected unqualified-id before 'protected'\" }\n \n int j;\n \n-private: // { dg-error \"1: error: expected unqualified-id before 'private'\" }\n+private: // { dg-error \"1:expected unqualified-id before 'private'\" }\n \n int k;"}, {"sha": "9e672c286b25c0c0ac4d9db2fc35691c7c416cc1", "filename": "gcc/testsuite/g++.dg/parse/error14.C", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror14.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -19,5 +19,8 @@ struct X\n         Zinc<int>( //);\n \t\t  //    }\n \n-}; // { dg-error \"2: error: expected '.' at end of input|1: error: expected primary-expression before '.' token|1: error: expected ';' before '.' token|1: error: expected unqualified-id at end of input\" }\n+}; // { dg-error \"2:expected '.' at end of input\" \"at end of input\" }\n+   // { dg-error \"1:expected primary-expression before '.' token\" \"primary\" { target *-*-* } 22 }\n+   // { dg-error \"1:expected ';' before '.' token\" \"semicolon\" { target *-*-* } 22 }\n+   // { dg-error \"1:expected unqualified-id at end of input\" \"unqual\" { target *-*-* } 22 }\n "}, {"sha": "c5d3d3d7d67643c3bf2b2250842f1ba83c95704b", "filename": "gcc/testsuite/g++.dg/parse/error15.C", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror15.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -10,29 +10,32 @@ namespace N\n   int K;\n }\n \n-N::A f2;              // { dg-error \"1: error: invalid use of template-name 'N::A' without an argument list\" }\n-N::INVALID f3;        // { dg-error \"1: error: 'INVALID' in namespace 'N' does not name a type\" }\n-N::C::INVALID f4;     // { dg-error \"1: error: 'INVALID' in class 'N::C' does not name a type\" }\n-N::K f6;              // { dg-error \"1: error: 'K' in namespace 'N' does not name a type\" }\n-typename N::A f7;     // { dg-error \"1: error: using 'typename' outside of template|13: error: invalid use of template-name 'N::A' without an argument list|17: error: invalid type in declaration before ';' token\" }\n+N::A f2;              // { dg-error \"1:invalid use of template-name 'N::A' without an argument list\" }\n+N::INVALID f3;        // { dg-error \"1:'INVALID' in namespace 'N' does not name a type\" }\n+N::C::INVALID f4;     // { dg-error \"1:'INVALID' in class 'N::C' does not name a type\" }\n+N::K f6;              // { dg-error \"1:'K' in namespace 'N' does not name a type\" }\n+typename N::A f7;     // { dg-error \"1:using 'typename' outside of template\" \"1\" }\n+// { dg-error \"13:invalid use of template-name 'N::A' without an argument list\" \"13\" { target *-*-* } 17 }\n+// { dg-error \"17:invalid type in declaration before ';' token\" \"17\" { target *-*-* } 17 }\n \n struct B\n {\n-  N::A f2;            // { dg-error \"3: error: invalid use of template-name 'N::A' without an argument list\" }\n-  N::INVALID f3;      // { dg-error \"3: error: 'INVALID' in namespace 'N' does not name a type\" }\n-  N::C::INVALID f4;   // { dg-error \"3: error: 'INVALID' in class 'N::C' does not name a type\" }\n-  N::K f6;            // { dg-error \"3: error: 'K' in namespace 'N' does not name a type\" }\n-  typename N::A f7;   // { dg-error \"3: error: using 'typename' outside of template|15: error: invalid use of template-name 'N::A' without an argument list\" }\n+  N::A f2;            // { dg-error \"3:invalid use of template-name 'N::A' without an argument list\" }\n+  N::INVALID f3;      // { dg-error \"3:'INVALID' in namespace 'N' does not name a type\" }\n+  N::C::INVALID f4;   // { dg-error \"3:'INVALID' in class 'N::C' does not name a type\" }\n+  N::K f6;            // { dg-error \"3:'K' in namespace 'N' does not name a type\" }\n+  typename N::A f7;   // { dg-error \"3:using 'typename' outside of template\" }\n+// { dg-error \"15:invalid use of template-name 'N::A' without an argument list\" \"15\" { target *-*-* } 27 }\n };\n \n template <int>\n struct C\n {\n-  N::A f2;            // { dg-error \"3: error: invalid use of template-name 'N::A' without an argument list\" }\n-  N::INVALID f3;      // { dg-error \"3: error: 'INVALID' in namespace 'N' does not name a type\" }\n-  N::C::INVALID f4;   // { dg-error \"3: error: 'INVALID' in class 'N::C' does not name a type\" }\n-  N::K f6;            // { dg-error \"3: error: 'K' in namespace 'N' does not name a type\" }\n-  typename N::A f7;   // { dg-error \"15: error: invalid use of template-name 'N::A' without an argument list\" }\n+  N::A f2;            // { dg-error \"3:invalid use of template-name 'N::A' without an argument list\" }\n+  N::INVALID f3;      // { dg-error \"3:'INVALID' in namespace 'N' does not name a type\" }\n+  N::C::INVALID f4;   // { dg-error \"3:'INVALID' in class 'N::C' does not name a type\" }\n+  N::K f6;            // { dg-error \"3:'K' in namespace 'N' does not name a type\" }\n+  typename N::A f7;   // { dg-error \"15:invalid use of template-name 'N::A' without an argument list\" }\n };\n \n // { dg-bogus \"bogus excess errors in declaration\" \"bogus excess errors in declaration\" { target *-*-* } 17 }"}, {"sha": "ba9aacc26e3369b31b49217774fe71ba7c41e169", "filename": "gcc/testsuite/g++.dg/parse/error16.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror16.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,7 +3,7 @@\n \n struct A\n {\n-  struct B {}; // { dg-error \"12: error: previous definition of 'struct A::B'\" }\n+  struct B {}; // { dg-error \"12:previous definition of 'struct A::B'\" }\n };\n \n-struct A::B{}; // { dg-error \"11: error: redefinition of 'struct A::B'\" }\n+struct A::B{}; // { dg-error \"11:redefinition of 'struct A::B'\" }"}, {"sha": "4cd4044e3d0913847a0cf4d708cf4a610185daa7", "filename": "gcc/testsuite/g++.dg/parse/error17.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror17.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -2,8 +2,10 @@\n // PR c++/16965\n \n template <typename T> struct B { \n-  static int Bar(T); // { dg-error \"14: error: candidates are: |14: error:  \" }\n+  static int Bar(T); // { dg-error \"14:candidates are: \" \"1\" }\n+  // { dg-error \"14:with T = int\" \"2\" { target *-*-* } 5 }\n }; \n struct D : B<int>, B<char> {}; \n  \n-int i2 = D::Bar(2); // { dg-error \"13: error: reference to 'Bar' is ambiguous|10: error: reference to 'Bar' is ambiguous\" }\n+int i2 = D::Bar(2); // { dg-error \"13:reference to 'Bar' is ambiguous\" }\n+// { dg-error \"10:reference to 'Bar' is ambiguous\" \"2\" { target *-*-* } 10 }"}, {"sha": "b5e722221b91af5a6c160eb8015bea650688e2a3", "filename": "gcc/testsuite/g++.dg/parse/error18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror18.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,6 +3,6 @@\n \n void f()\n {\n-  double Q *= 5.0; // { dg-error \"12: error: expected initializer before '..' token\" }\n+  double Q *= 5.0; // { dg-error \"12:expected initializer before '..' token\" }\n }\n "}, {"sha": "5582891c9747b5289bac9c206fbc95ff2ec501e4", "filename": "gcc/testsuite/g++.dg/parse/error19.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror19.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -2,13 +2,13 @@\n // PR C++/17867\n \n struct A\n-{  // { dg-error \"1: note: candidates are:\" }\n+{  // { dg-message \"1:candidates are:\" }\n   A(int);\n };\n \n const A& foo();\n \n void bar()\n {\n-  foo()=A(0); // { dg-error \"12: error: no match for 'operator='\" }\n+  foo()=A(0); // { dg-error \"12:no match for 'operator='\" }\n }"}, {"sha": "619f89421d97ccc1dd3d9f37d6866e58137fd523", "filename": "gcc/testsuite/g++.dg/parse/error2.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -8,8 +8,8 @@ int func(double);\n template <int>\n struct Foo {};\n \n-Foo<func(g)> f; // { dg-error \"5: error: 'int func.double.' cannot appear in a constant-expression\" \"\" { target *-*-* } { 11 } }\n-// { dg-error \"10: error: 'g' cannot appear in a constant-expression\" \"\" { target *-*-* } { 11 } }\n-// { dg-error \"11: error: a function call cannot appear in a constant-expression\" \"\" { target *-*-* } { 11 } }\n-// { dg-error \"12: error: template argument 1 is invalid\" \"\" { target *-*-* } { 11 } }\n-// { dg-error \"15: error: invalid type in declaration before ';' token\" \"\" { target *-*-* } { 11 } }\n+Foo<func(g)> f; // { dg-error \"5:'int func.double.' cannot appear in a constant-expression\" \"\" { target *-*-* } 11 }\n+// { dg-error \"10:'g' cannot appear in a constant-expression\" \"\" { target *-*-* } 11 }\n+// { dg-error \"11:a function call cannot appear in a constant-expression\" \"\" { target *-*-* } 11 }\n+// { dg-error \"12:template argument 1 is invalid\" \"\" { target *-*-* } 11 }\n+// { dg-error \"15:invalid type in declaration before ';' token\" \"\" { target *-*-* } 11 }"}, {"sha": "d2f9353a7cc661ff5254211fed4c875bf77a3d9b", "filename": "gcc/testsuite/g++.dg/parse/error20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror20.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -12,7 +12,7 @@ struct C {\n };\n int main() {\n   C c;\n-  A(c.p.i); // { dg-error \"9: error: request for member 'i' in 'c.C::p', which is of non-class type 'B\" }\n+  A(c.p.i); // { dg-error \"9:request for member 'i' in 'c.C::p', which is of non-class type 'B\" }\n   return 0;\n }\n "}, {"sha": "469e5fb4e1c607c561d96521c04649cad9abd3a4", "filename": "gcc/testsuite/g++.dg/parse/error21.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror21.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror21.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror21.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -7,6 +7,7 @@ void foo()\n {\n   // Check that we do not complain about an unused\n   // compiler-generated variable.\n-  A& = a; // { dg-error \"6: error: expected unqualified-id before '=' token|8: error: 'a' was not declared in this scope\" }\n+  A& = a; // { dg-error \"6:expected unqualified-id before '=' token\" \"6\" }\n+  // { dg-error \"8:'a' was not declared in this scope\" \"8\" { target *-*-* } 10 }\n }\n "}, {"sha": "29552c67a6e41b2307dfbd05b7e0789a5b40d8bc", "filename": "gcc/testsuite/g++.dg/parse/error22.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror22.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -2,5 +2,5 @@\n // PR c++/15786\n \n struct A {\n-  void foo(bar* p); /* { dg-error \"12: error: 'bar' has not been declared\" } */\n+  void foo(bar* p); /* { dg-error \"12:'bar' has not been declared\" } */\n };"}, {"sha": "9c19b562c6daf0de4d0a6a211d9a73d2ff8c362c", "filename": "gcc/testsuite/g++.dg/parse/error23.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror23.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,5 +5,5 @@ struct QChar {\n   QChar( char c );\n   QChar( const QChar& c );\n   //following column number is not accurate enough but will make it for now\n-  static const ; // { dg-error \"10: error: declaration does not declare anything\" }\n+  static const ; // { dg-error \"10:declaration does not declare anything\" }\n };"}, {"sha": "c8ab6d9921aa19728d605803cd56f435f63b5982", "filename": "gcc/testsuite/g++.dg/parse/error24.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror24.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -2,7 +2,7 @@\n // PR c++/19395\n \n struct A {\n-  typedef int ::X; // { dg-error \"17: error: typedef name may not be a nested-name-specifier\" }\n+  typedef int ::X; // { dg-error \"17:typedef name may not be a nested-name-specifier\" }\n };\n \n "}, {"sha": "a0fd24c3a6f0509efd5d06ebd111ea83a7646696", "filename": "gcc/testsuite/g++.dg/parse/error25.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror25.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -9,10 +9,10 @@\n class foo\n {\n   virtual void bar1 () = 0;\n-  virtual void bar2 () = __null;  // { dg-error \"32: error: invalid pure specifier\" }\n-  virtual void bar3 () = 4;       // { dg-error \"27: error: invalid pure specifier\" }\n-  virtual void bar4 () = A::f;    // { dg-error \"27: error: invalid pure specifier\" }\n-  virtual void bar5 () = 0l;      // { dg-error \"28: error: invalid pure specifier\" }\n-  virtual void bar6 () = 00;      // { dg-error \"28: error: invalid pure specifier\" }\n-  virtual void bar7 () = 0x0;     // { dg-error \"29: error: invalid pure specifier\" }\n+  virtual void bar2 () = __null;  // { dg-error \"32:invalid pure specifier\" }\n+  virtual void bar3 () = 4;       // { dg-error \"27:invalid pure specifier\" }\n+  virtual void bar4 () = A::f;    // { dg-error \"27:invalid pure specifier\" }\n+  virtual void bar5 () = 0l;      // { dg-error \"28:invalid pure specifier\" }\n+  virtual void bar6 () = 00;      // { dg-error \"28:invalid pure specifier\" }\n+  virtual void bar7 () = 0x0;     // { dg-error \"29:invalid pure specifier\" }\n };"}, {"sha": "befaf3bb3b86d741168aade9d2b3bc74d5434eef", "filename": "gcc/testsuite/g++.dg/parse/error26.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror26.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror26.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror26.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,10 +3,12 @@\n \n void foo()\n {\n-  if (({int c[2];})) ; // { dg-error \"7: error: ISO C.. forbids|20: error: could not convert\" }\n+  if (({int c[2];})) ; // { dg-error \"7:ISO C.. forbids\" \"7\" }\n+  // { dg-error \"20:could not convert\" \"20\" { target *-*-* } 6 }\n }\n \n void bar()\n {\n-  if (({})); // { dg-error \"7: error: ISO C.. forbids|11: error: could not convert\" }\n+  if (({})); // { dg-error \"7:ISO C.. forbids\" \"7\" }\n+  // { dg-error \"11:could not convert\" \"11\" { target *-*-* } 12 }\n }"}, {"sha": "c07d1d3a75835fff69650ce83cbd93f76ca1c515", "filename": "gcc/testsuite/g++.dg/parse/error27.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror27.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror27.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror27.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,8 +1,8 @@\n // { dg-options \"-fshow-column -ansi -pedantic-errors -Wno-long-long\" }\n // PR c++/20152\n \n-struct KrSelectionMode {  virtual void init() = 0; }; // { dg-error \"24: error: previous definition of 'struct KrSelectionMode'\" }\n-struct KrKDESelectionMode : public KrSelectionMode { void init() { } }; // { dg-error \"52: error: previous definition of 'struct KrKDESelectionMode'\" }\n-struct KrSelectionMode {  virtual void init() = 0; }; // { dg-error \"8: error: redefinition of 'struct KrSelectionMode'\" }\n-struct KrKDESelectionMode : public KrSelectionMode { void init() { } }; // { dg-error \"8: error: redefinition of 'struct KrKDESelectionMode'\" }\n+struct KrSelectionMode {  virtual void init() = 0; }; // { dg-error \"24:previous definition of 'struct KrSelectionMode'\" }\n+struct KrKDESelectionMode : public KrSelectionMode { void init() { } }; // { dg-error \"52:previous definition of 'struct KrKDESelectionMode'\" }\n+struct KrSelectionMode {  virtual void init() = 0; }; // { dg-error \"8:redefinition of 'struct KrSelectionMode'\" }\n+struct KrKDESelectionMode : public KrSelectionMode { void init() { } }; // { dg-error \"8:redefinition of 'struct KrKDESelectionMode'\" }\n KrKDESelectionMode krKDESelectionMode;"}, {"sha": "50ad960e09e9c80f8e7a309d2e3e917d4dea1c88", "filename": "gcc/testsuite/g++.dg/parse/error28.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror28.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -2,10 +2,10 @@\n // PR c++/21908\n \n struct virt { virt () {} virt (int i) {} };\n-struct der : public virtual virt { // { dg-error \"34: note:                 der::der\" }\n-  der (int i) : virt(i) {} // { dg-error \"3: note: candidates are: der\" }\n+struct der : public virtual virt { // { dg-message \"34:der::der\" }\n+  der (int i) : virt(i) {} // { dg-message \"3:candidates are: der\" }\n };\n struct top : public der { \n   top () {} // { dg-bogus \"der\\\\(const\" }\n };\n-// { dg-error \"10: error: no matching function for call to 'der\" \"\" { target *-*-* } 9 }\n+// { dg-error \"10:no matching function for call to 'der\" \"\" { target *-*-* } 9 }"}, {"sha": "2c3a3a7f28880458207096dd43263927fac82da0", "filename": "gcc/testsuite/g++.dg/parse/error29.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror29.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -7,7 +7,7 @@ struct A {\n   void operator delete(void *);\n };\n struct B { \n-  friend void A::foo() {} // { dg-error \"22: error: cannot define member function 'A::foo' within 'B'\" }\n-  friend void A::operator delete(void*) {} // { dg-error \"39: error: cannot define member function 'A::operator delete' within 'B'\" }\n-  friend A::A() {} // { dg-error \"15: error: cannot define member function 'A::A' within 'B'\" }\n+  friend void A::foo() {} // { dg-error \"22:cannot define member function 'A::foo' within 'B'\" }\n+  friend void A::operator delete(void*) {} // { dg-error \"39:cannot define member function 'A::operator delete' within 'B'\" }\n+  friend A::A() {} // { dg-error \"15:cannot define member function 'A::A' within 'B'\" }\n };"}, {"sha": "55ae024d41269ab0ef3860842f4b68f9c4b6bd2a", "filename": "gcc/testsuite/g++.dg/parse/error3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,5 +5,5 @@ static void InstantiateConstraint(const float&, unsigned,\n                                   void(*AddFunction)(const TYPE&,bool&,\n                                                      char*, char*,\n                                                      unsigned*));\n-// { dg-error \"64: error: expected ',' or '...' before '&' token\" \"\" { target *-*-* }  { 5 } }\n-// { dg-error \"60: error: ISO C\\\\+\\\\+ forbids declaration of 'TYPE' with no type\" \"\" { target *-*-* } { 5 } }\n+// { dg-error \"64:expected ',' or '...' before '&' token\" \"\" { target *-*-* }  { 5 } }\n+// { dg-error \"60:ISO C\\\\+\\\\+ forbids declaration of 'TYPE' with no type\" \"\" { target *-*-* } { 5 } }"}, {"sha": "26c55c49c68f723a02499502f5826f582455e533", "filename": "gcc/testsuite/g++.dg/parse/error30.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror30.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -8,5 +8,5 @@ struct A\n   A(int);\n };\n \n-A a = -A();\t// { dg-error \"10: error: no match for.*operator-.*in.*-A\\\\(\\\\)\" }\n-A b = -A(5);\t// { dg-error \"11: error: no match for.*operator-.*in.*-A\\\\(5\\\\)\" }\n+A a = -A();\t// { dg-error \"10:no match for.*operator-.*in.*-A\\\\(\\\\)\" }\n+A b = -A(5);\t// { dg-error \"11:no match for.*operator-.*in.*-A\\\\(5\\\\)\" }"}, {"sha": "e3928522711dda02fa99008c4a5623282dab4a19", "filename": "gcc/testsuite/g++.dg/parse/error31.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror31.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -6,7 +6,7 @@ template<typename T> class foo{ };\n int main() {\n     foo<int> i;\n     // this column number is not accurate yet, but that will make it for now.\n-    foo<foo<int> j; // { dg-error \"18: error: template argument 1 is invalid\" }\n+    foo<foo<int> j; // { dg-error \"18:template argument 1 is invalid\" }\n     int k;\n     int l;\n     foo<int> m;"}, {"sha": "792bf4dc063c9dbe5b50cabf3b1df83b772e51af", "filename": "gcc/testsuite/g++.dg/parse/error4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror4.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -7,4 +7,4 @@ struct X {\n \t\t int);\n };\n \n-// { dg-error \"4: error: 'itn' has not been declared\" \"\" { target *-*-* } { 6 } }\n+// { dg-error \"4:'itn' has not been declared\" \"\" { target *-*-* } 6 }"}, {"sha": "6ebb087306b67597c5a68993a4cda05fdd1e4d8b", "filename": "gcc/testsuite/g++.dg/parse/error5.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror5.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,17 +3,17 @@\n \n class Foo { int foo() return 0; } };\n \n-// { dg-error \"30: error: expected identifier before numeric constant\" \"\" { target *-*-* } { 4 } }\n+// { dg-error \"30:expected identifier before numeric constant\" \"\" { target *-*-* } 4 }\n \n-// { dg-error \"23: error: named return values are no longer supported\" \"\" { target *-*-* } { 4 } }\n+// { dg-error \"23:named return values are no longer supported\" \"\" { target *-*-* } 4 }\n \n // the column number info of this error output is still wrong because the error\n // message has been generated by cp_parser_error() which does not\n // necessarily allow accurate column number display. At some point, we will\n // need make cp_parser_error() report more accurate column numbers.\n-// { dg-error \"30: error: expected '\\{' at end of input\" \"\" { target *-*-* } { 4 } }\n+// { dg-error \"30:expected '\\{' at end of input\" \"\" { target *-*-* } 4 }\n \n-// { dg-error \"35: error: expected unqualified-id before '\\}' token\" \"\" {target *-*-*  } { 4 } }\n+// { dg-error \"35:expected unqualified-id before '\\}' token\" \"\" {target *-*-* } 4 }\n \n-// { dg-error \"35: error: expected declaration before '\\}' token\" \"\" {target *-*-*  } { 4 } }\n+// { dg-error \"35:expected declaration before '\\}' token\" \"\" {target *-*-* } 4 }\n "}, {"sha": "81e04e21722e671dcebcbda29484379a7fad0480", "filename": "gcc/testsuite/g++.dg/parse/error6.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror6.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,7 +5,7 @@ int f(int not) {\n   return 1-not;\n } \n \n-// { dg-error \"11: error: expected ',' or '...' before '!' token\" \"\" { target *-*-* } { 4 } }\n+// { dg-error \"11:expected ',' or '...' before '!' token\" \"\" { target *-*-* } 4 }\n \n-// { dg-error \"15: error: expected primary\\\\-expression before ';' token\" \"\" { target *-*-* }  { 5 } }\n+// { dg-error \"15:expected primary\\\\-expression before ';' token\" \"\" { target *-*-* } 5 }\n "}, {"sha": "78b7caac9cd1cc04d9612787dcaff0c98f94d997", "filename": "gcc/testsuite/g++.dg/parse/error7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror7.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -4,4 +4,4 @@\n void f(int x\n        int y);\n \n-// { dg-error \"8: error: expected ',' or '...' before 'int'\" \"\" { target *-*-* } { 5 } }\n+// { dg-error \"8:expected ',' or '...' before 'int'\" \"\" { target *-*-* } 5 }"}, {"sha": "ba572b0db7d84910cf5e2a9bf86cc27dd71006ad", "filename": "gcc/testsuite/g++.dg/parse/error8.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror8.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -4,7 +4,7 @@\n struct A { friend typename struct B; };\n \n \n-// { dg-error \"19: error: using 'typename' outside of template\" \"\" { target *-*-* } { 4 } }\n-// { dg-error \"28: error: expected nested-name-specifier before 'struct'\" \"\" { target *-*-* } { 4 } }\n-// { dg-error \"35: error: multiple types in one declaration\" \"\" { target *-*-* } { 4 } }\n-// { dg-error \"12: error: friend declaration does not name a class or function\" \"\" { target *-*-* } { 4 } }\n+// { dg-error \"19:using 'typename' outside of template\" \"\" { target *-*-* } 4 }\n+// { dg-error \"28:expected nested-name-specifier before 'struct'\" \"\" { target *-*-* } 4 }\n+// { dg-error \"35:multiple types in one declaration\" \"\" { target *-*-* } 4 }\n+// { dg-error \"12:friend declaration does not name a class or function\" \"\" { target *-*-* } 4 }"}, {"sha": "b16c84e81ffdacd105fec6ca3ee957b620ff5012", "filename": "gcc/testsuite/g++.dg/parse/error9.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ferror9.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,5 +5,5 @@ enum { FOO = 1, BAR = 2 };\n int a[] = { FOO: 1, BAR: 2 };\n \n // the following 2 column locations are still not accurate enough\n-// { dg-error \"28: error: name 'FOO' used in a GNU-style designated initializer for an array\" \"\" { target *-*-* }  { 5 } }\n-// { dg-error \"28: error: name 'BAR' used in a GNU-style designated initializer for an array\" \"\" { target *-*-* }  { 5 } }\n+// { dg-error \"28:name 'FOO' used in a GNU-style designated initializer for an array\" \"\" { target *-*-* } 5 }\n+// { dg-error \"28:name 'BAR' used in a GNU-style designated initializer for an array\" \"\" { target *-*-* } 5 }"}, {"sha": "ec134c26ea905afe9f9b847e16ac8b5ea8a9cd33", "filename": "gcc/testsuite/g++.dg/parse/friend5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffriend5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffriend5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ffriend5.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,5 +3,6 @@\n extern \"C\" struct A\n {\n   friend void foo(int) {} // { dg-error \"declaration\" }\n-  friend void foo() {} // { dg-error \"foo\" }\n+  friend void foo() {} // { dg-error \"foo\" \"err\" }\n+  // { dg-warning \"already a friend\" \"warn\" { target *-*-* } 6 }\n };"}, {"sha": "0b75d079135a89e64ebce19e72ca083af14ab875", "filename": "gcc/testsuite/g++.dg/parse/invalid-op1.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Finvalid-op1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Finvalid-op1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Finvalid-op1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -6,8 +6,9 @@ template <int I> struct A\n {\n     template <int> struct B\n     {\n-        enum { e = I * A<I-1>::B }; // { dg-error \"\" }\n+        enum { e = I * A<I-1>::B }; // { dg-error \"dependent-name\" \"depname\" }\n+         // { dg-message \"note\" \"note\" { target *-*-* } 9 }\n     };\n };\n \n-A<0>::B<0> a; // { dg-error \"instantiated\" }\n+A<0>::B<0> a; // { dg-message \"instantiated\" }"}, {"sha": "e5e03146dbb223f42efc9d89a710595539365b62", "filename": "gcc/testsuite/g++.dg/parse/missing-template1.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fmissing-template1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fmissing-template1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fmissing-template1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -12,7 +12,9 @@ template <typename T> struct A\n \n template <typename T> void foo()\n {\n-    typedef typename A<T>::B<T>::X Y; // { dg-error \"\" }\n+    typedef typename A<T>::B<T>::X Y; // { dg-error \"non-template\" \"non\" }\n+    // { dg-error \"not declare\" \"decl\" { target *-*-* } 15 }\n+    // { dg-message \"note\" \"note\" { target *-*-* } 15 }\n }\n \n void bar()"}, {"sha": "4df2da7faf4bdf02c24413d77ac03fee5fe48dbd", "filename": "gcc/testsuite/g++.dg/parse/non-dependent2.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnon-dependent2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnon-dependent2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fnon-dependent2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -8,14 +8,14 @@\n template <class T>\n struct Foo {\n   int j; // we never see this one.\n-  int k; // { dg-error \"\" \"\" }\n+  int k; // { dg-error \"Foo\" \"\" }\n   \n };\n \n struct Baz \n {\n   int j;\n-  int k; // { dg-error \"\" \"\" }\n+  int k; // { dg-error \"candidates\" \"\" }\n   \n };\n \n@@ -31,7 +31,7 @@ int main()\n   Bar<int> bar;\n \n   bar.baz ();\n-  bar.foo (); // { dg-error \"instantiated\" \"\" }\n+  bar.foo (); // { dg-message \"instantiated\" \"\" }\n   \n   return 0;\n }"}, {"sha": "35638c28afc9a26d02249ac2fd360f58c8d4c32e", "filename": "gcc/testsuite/g++.dg/parse/ret-type2.C", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fret-type2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fret-type2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fret-type2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,5 +1,10 @@\n-struct S {} f(); // { dg-error \"\" }\n-struct T {} *g(); // { dg-error \"\" }\n-struct U {} h() {} // { dg-error \"\" }\n-struct V {} *i() {} // { dg-error \"\" }\n-struct W {} (*p) (); // { dg-error \"\" }\n+struct S {} f(); // { dg-error \"return\" \"err\" }\n+// { dg-message \"note\" \"note\" { target *-*-* } 1 }\n+struct T {} *g(); // { dg-error \"return\" }\n+// { dg-message \"note\" \"note\" { target *-*-* } 3 }\n+struct U {} h() {} // { dg-error \"return\" }\n+// { dg-message \"note\" \"note\" { target *-*-* } 5 }\n+struct V {} *i() {} // { dg-error \"return\" }\n+// { dg-message \"note\" \"note\" { target *-*-* } 7 }\n+struct W {} (*p) (); // { dg-error \"return\" }\n+// { dg-message \"note\" \"note\" { target *-*-* } 9 }"}, {"sha": "8a47f177205239744c46ad4662d3777d89771c14", "filename": "gcc/testsuite/g++.dg/parse/specialization1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fspecialization1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fspecialization1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Fspecialization1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,4 +3,5 @@\n // { dg-do compile }\n \n template <typename T> class A;\n-template <typename T> class A<T>::B; // { dg-error \"declaration\" }\n+template <typename T> class A<T>::B; // { dg-error \"declaration\" \"err\" }\n+// { dg-warning \"declaration\" \"warn\" { target *-*-* } 6 }"}, {"sha": "98209b2449c02897609f3adfeac8e2a74d7dfa8d", "filename": "gcc/testsuite/g++.dg/parse/template18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate18.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -49,4 +49,4 @@ template<int I> void f2()\n   A::template B<I>::template b2<double>(0);\n }\n \n-template void f2<0>(); // { dg-error \"instantiated\" }\n+template void f2<0>(); // { dg-message \"instantiated\" }"}, {"sha": "d10d46d81334f9ad71c8f7bef43762d800a885ff", "filename": "gcc/testsuite/g++.dg/parse/template3.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -13,5 +13,7 @@ struct X : Outer<b>::template Inner<T>\n {};\n \n template <bool b, typename T>\n-struct Y : Outer<b>::Inner<T> {}; // { dg-error \"\" \"\" }\n+struct Y : Outer<b>::Inner<T> {}; // { dg-error \"used as template\" \"temp\" }\n+// { dg-error \"expected\" \"exp\" { target *-*-* } 16 }\n+// { dg-message \"note\" \"note\" { target *-*-* } 16 }\n "}, {"sha": "17b7da91f375103a7bcc7d924fa89ac07ac86c15", "filename": "gcc/testsuite/g++.dg/parse/template9.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fparse%2Ftemplate9.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,5 +1,6 @@\n template <typename T> \n void f() {\n-  g(); // { dg-error \"\" }\n-  h(3); // { dg-error \"\" }\n+  g(); // { dg-error \"must be available\" \"err\" }\n+       // { dg-message \"note\" \"note\" { target *-*-* } 3 }\n+  h(3); // { dg-error \"must be available\" }\n }"}, {"sha": "43bae15eaf10decd8e570cbf67deff0f086bbeb6", "filename": "gcc/testsuite/g++.dg/tc1/dr108.C", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr108.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr108.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr108.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -7,9 +7,7 @@ template <class T> struct S {\n     typedef int X;\n   };\n   struct I2 : public I1 {\n-    X x;    // { dg-error \"does not name a type\" }\n+    X x;    // { dg-error \"does not name a type\" \"name\" }\n+\t    // { dg-message \"note\" \"note\" { target *-*-* } 10 }\n   };\n };\n-\n-// Additional notes on the same line are allowed\n-// { dg-error \"\" \"additional\" { target *-*-* } 10 }"}, {"sha": "a635213b3a7d30248638ff3eefc638f17ea814f7", "filename": "gcc/testsuite/g++.dg/tc1/dr152.C", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr152.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr152.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr152.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -11,7 +11,8 @@ namespace N1 {\n   int foo() \n   { \n     X x; \n-    f(x);     // { dg-error \"\" \"\" }\n+    f(x);     // { dg-error \"matching\" \"matching\" }\n+\t      // { dg-error \"initializing\" \"initializing\" { target *-*-* } 14 }\n   }\n }\n \n@@ -29,8 +30,9 @@ namespace N2 {\n   int foo() \n   { \n     X<T> x; \n-    N2::f(x);   // { dg-error \"\" \"\" }\n+    N2::f(x);   // { dg-error \"matching\" \"matching\" }\n+\t\t// { dg-error \"initializing \" initializing\" { target *-*-* } 33 }\n   }\n \n-  template int foo<float>();  // { dg-error \"instantiated from here\" }\n+  template int foo<float>();  // { dg-message \"instantiated from here\" }\n }"}, {"sha": "8c142906a568afc47bd87e58c0a69ea50172cecc", "filename": "gcc/testsuite/g++.dg/tc1/dr166.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr166.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr166.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr166.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -32,7 +32,7 @@ namespace N {\n     template <> void f<double>(double )\n     { \n       M::B::x = 0; \n-      M::f<long>(0);   // { dg-error \"instantiated\" }\n+      M::f<long>(0);   // { dg-message \"instantiated\" }\n     }\n \n     void g(void)\n@@ -47,7 +47,7 @@ namespace N {\n \n   template <> void f<int>(int )\n   { \n-    N::f<long>(0);        // { dg-error \"instantiated\" }\n+    N::f<long>(0);        // { dg-message \"instantiated\" }\n     M::A::x = 0; \n     M::B::x = 0;       // { dg-error \"within this context\" }\n   }"}, {"sha": "4c8dce521a894a35da7b473dd34a9fe00a6982a6", "filename": "gcc/testsuite/g++.dg/template/access11.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess11.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -21,4 +21,4 @@ template <typename T> struct X::Y {\n   typename T::X x;\t\t// { dg-error \"this context\" }\n };\n \n-template struct X::Y<A>;\t// { dg-error \"instantiated\" }\n+template struct X::Y<A>;\t// { dg-message \"instantiated\" }"}, {"sha": "c5e3f110395a9237d4a787cf4b4187cc8438e42b", "filename": "gcc/testsuite/g++.dg/template/access2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -15,6 +15,6 @@ class B {\n \n int main()\n {\n-  A<B> ab;\t\t\t\t// { dg-error \"instantiated\" }\n-  ab.f();\t\t\t\t// { dg-error \"instantiated\" }\n+  A<B> ab;\t\t\t\t// { dg-message \"instantiated\" }\n+  ab.f();\t\t\t\t// { dg-message \"instantiated\" }\n }"}, {"sha": "c7a155e8ba6d160f1498bd85f6bbca557c35063b", "filename": "gcc/testsuite/g++.dg/template/access3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -13,5 +13,5 @@ class B {\n \n int main()\n {\n-  A<B> ab;\t\t\t\t// { dg-error \"instantiated\" }\n+  A<B> ab;\t\t\t\t// { dg-message \"instantiated\" }\n }"}, {"sha": "412ad00c0b7d48a42534f52d9114055a703f3021", "filename": "gcc/testsuite/g++.dg/template/access7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Faccess7.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -14,5 +14,5 @@ typename A::T* f (A) {\t\t\t// { dg-error \"this context\" }\n }\n \n void g () {\n-  f (S<int> ());\t\t\t// { dg-error \"context|instantiated\" }\n+  f (S<int> ());\t\t\t// { dg-message \"instantiated\" }\n }"}, {"sha": "e56545332aed73dfffcafc7553a589bef48e1a2d", "filename": "gcc/testsuite/g++.dg/template/copy1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcopy1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcopy1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcopy1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -6,9 +6,9 @@\n \n struct A\n {\n-  A(A&); // { dg-error \"candidate\" \"\" }\n+  A(A&); // { dg-message \"candidate\" }\n   template <class T> A(T); \n };\n \n-A a = 0; // { dg-error \"no matching function|initializing\" \"\" }\n+A a = 0; // { dg-error \"no matching function\" }\n "}, {"sha": "0518666d1e56c3798aa094827baecd117f979ef9", "filename": "gcc/testsuite/g++.dg/template/crash13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash13.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -15,4 +15,4 @@ template <typename T> struct C\n     X::Y;\t\t\t// { dg-error \"not a base type\" }\n };\n \n-C<void> c;\t\t\t// { dg-error \"instantiated\" }\n+C<void> c;\t\t\t// { dg-message \"instantiated\" }"}, {"sha": "8af516018f7f85cb70576a0b07f8cb2f475d1f96", "filename": "gcc/testsuite/g++.dg/template/crash37.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash37.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash37.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash37.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -11,7 +11,7 @@ struct coperator_stack\n struct helper {};\n \n template<class F>\n-void bla(F f) // { dg-error \"candidates\" }\n+void bla(F f) // { dg-message \"candidates\" }\n {\n }\n \n@@ -20,7 +20,7 @@ struct definition\n {\n  definition()\n  {\n-   bla(coperator_stack::push3<helper>); // { dg-error \"\" }\n+   bla(coperator_stack::push3<helper>); // { dg-error \"matching\" }\n  }\n };\n "}, {"sha": "45123dd0d0576b0228206404ef796e88c41005eb", "filename": "gcc/testsuite/g++.dg/template/crash40.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash40.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash40.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash40.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -7,4 +7,4 @@ template<typename T> void foo()\n   T::~T(); // { dg-error \"member\" }\n }\n \n-template void foo<A>(); // { dg-error \"instantiated\" }\n+template void foo<A>(); // { dg-message \"instantiated\" }"}, {"sha": "5194ee263c0953c1dcd363433ed68f62a45ecb98", "filename": "gcc/testsuite/g++.dg/template/crash58.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash58.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash58.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash58.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,6 +1,6 @@\n //PR 26938\n \n-template<int, int = 0> struct A;  // { dg-error \"previous declaration\" }\n+template<int, int = 0> struct A;  // { dg-message \"previous declaration\" }\n \n template<int> struct A            // { dg-error \"template\" }\n {"}, {"sha": "a12bd8bddaa2e9e3a421175f5d9d05e66fc46e41", "filename": "gcc/testsuite/g++.dg/template/crash80.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash80.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash80.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash80.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,5 +5,5 @@ namespace a {\n }\n \n namespace b {\n-  template <> class ::a::Foo<double> {}; // { dg-error \"error: global qualification of class name is invalid\" }\n+  template <> class ::a::Foo<double> {}; // { dg-error \"global qualification of class name is invalid\" }\n }"}, {"sha": "6938b36b62ff3121456183e77ad59c377c1e31a9", "filename": "gcc/testsuite/g++.dg/template/ctor5.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fctor5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fctor5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fctor5.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,4 +5,4 @@ template<typename T> struct A\n   A() : T(0) {} // { dg-error \"base\" }\n };\n \n-A<int*> a; // { dg-error \"instantiated\" }\n+A<int*> a; // { dg-message \"instantiated\" }"}, {"sha": "64e86c7289ff8917329a0f41920abb822e120c5a", "filename": "gcc/testsuite/g++.dg/template/dependent-expr5.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-expr5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-expr5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fdependent-expr5.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -7,14 +7,14 @@\n template<class F> void bind(F f) {}\n \n template<class F> void bindm(F f) {}\n-template<class F, class T> void bindm(F (T::*f)(void)) {} // { dg-error \"note\" }\n+template<class F, class T> void bindm(F (T::*f)(void)) {} // { dg-message \"note\" }\n \n template<class F> void bindn(F f) {}\n template<class F, class T> void bindn(F (*f)(T)) {}\n \n template<class F> void bindb(F f) {}\n-template<class F, class T> void bindb(F (*f)(T)) {} // { dg-error \"note\" }\n-template<class F, class T> void bindb(F (T::*f)(void)) {} // { dg-error \"note\" }\n+template<class F, class T> void bindb(F (*f)(T)) {} // { dg-message \"note\" }\n+template<class F, class T> void bindb(F (T::*f)(void)) {} // { dg-message \"note\" }\n \n struct foo {\n   static int baist;"}, {"sha": "d2c049c8a0626f3d3db327ff870e39e5977ad646", "filename": "gcc/testsuite/g++.dg/template/eh2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Feh2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Feh2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Feh2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -7,4 +7,4 @@ template<typename T> struct A\n     void foo() throw(typename T::X);  // { dg-error \"not a class\" }\n };\n \n-A<void> a;                            // { dg-error \"instantiated\" }\n+A<void> a;                            // { dg-message \"instantiated\" }"}, {"sha": "86486a2e7f262fed63a5e2c0a79a69e3dd0b74af", "filename": "gcc/testsuite/g++.dg/template/error2.C", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -7,22 +7,24 @@\n \n template<class T> struct X\n {\n-  T m; // { dg-error \"\" \"\" }\n+  T m;\t// { dg-error \"as type 'void'\" \"void\" }\n+\t// { dg-error \"incomplete type\" \"incomplate\" { target *-*-* } 10 }\n+\t// { dg-error \"invalid\" \"invalid\" { target *-*-* } 10 }\n };\n \n template<class T >\n struct Derived\n {\n   class Nested : public X<T>\n-  { // { dg-error \"instantiated\" \"\" }\n+  { // { dg-message \"instantiated\" \"\" }\n   };\n   \n-  Nested m; // { dg-error \"instantiated\" \"\" }\n+  Nested m; // { dg-message \"instantiated\" \"\" }\n   \n   void Foo ();\n };\n \n void Foo (Derived<void> &x)\n {\n-  x.Foo (); // { dg-error \"instantiated\" \"\" }\n+  x.Foo (); // { dg-message \"instantiated\" \"\" }\n }"}, {"sha": "b6a2a8ae8200903d053e1f0b56eb4073af34cfc1", "filename": "gcc/testsuite/g++.dg/template/error33.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror33.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror33.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror33.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -6,6 +6,7 @@ template<int> struct A\n     A() { ++i; }\n };\n \n-template<int> int A<0>::i(0);\t// { dg-error \"template\" }\n+template<int> int A<0>::i(0);\t// { dg-error \"template\" \"error\" }\n+// { dg-message \"note\" \"note\" { target *-*-* } 9 }\n \n A<0> a;"}, {"sha": "12942fcb7732e66e528c1bc66e11d941c9a5b2c8", "filename": "gcc/testsuite/g++.dg/template/error4.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror4.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,4 +5,5 @@ template<class T> struct C1\n };\n \n template<class T, class U>\n-void foo(typename C1<T>::C2<U>::Type *) { } // { dg-error \"template\" }\n+void foo(typename C1<T>::C2<U>::Type *) { } // { dg-error \"template\" \"error \" }\n+// { dg-message \"note\" \"note\" { target *-*-* } 8 }"}, {"sha": "5e60540b693beda186fae94503e1c70b3b82b7c1", "filename": "gcc/testsuite/g++.dg/template/friend31.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend31.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend31.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend31.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,7 +5,7 @@\n // PR c++/15410: Declaration of friend class template with wrong\n // template parameter.\n \n-template <typename T, typename U> struct F; // { dg-error \"previous declaration\" }\n+template <typename T, typename U> struct F; // { dg-message \"previous declaration\" }\n \n class W\n {"}, {"sha": "81e6390d798eaf0d1acb41d693f24fa03a5d1111", "filename": "gcc/testsuite/g++.dg/template/friend32.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend32.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend32.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend32.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -17,5 +17,5 @@ template<class T> class B\n \n int f ()\n {\n-  B<int> b;\t\t\t// { dg-error \"instantiated\" }\n+  B<int> b;\t\t\t// { dg-message \"instantiated\" }\n }"}, {"sha": "814fec1d5f70b714fe975e45b70ac96f026db584", "filename": "gcc/testsuite/g++.dg/template/friend44.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend44.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend44.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ffriend44.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,7 +3,7 @@\n \n template<int> struct A\n {\n-  friend int foo(); // { dg-error \"14: error: new declaration\" }\n+  friend int foo(); // { dg-error \"14:new declaration\" }\n };\n \n-void foo() { A<0> a; } // { dg-error \"6: error: ambiguates old declaration\" } \n+void foo() { A<0> a; } // { dg-error \"6:ambiguates old declaration\" } "}, {"sha": "828f2e9c56489a6029c61ec0ed1285cf6d6dc7ab", "filename": "gcc/testsuite/g++.dg/template/instantiate1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -9,11 +9,11 @@ template <class T> struct X {\n };\n \n template <class T> struct Y {\n-  X<T> x;\t\t\t// { dg-error \"instantiated\" }\n+  X<T> x;\t\t\t// { dg-message \"instantiated\" }\n };\n \n template <class T> struct Z {\t// { dg-error \"declaration\" }\n-  Y<Z<T> > y;\t\t\t// { dg-error \"instantiated\" }\n+  Y<Z<T> > y;\t\t\t// { dg-message \"instantiated\" }\n };\n \n struct ZZ : Z<int>"}, {"sha": "de3d3a084c9b4b413bd99a79b34401e25a04a2d0", "filename": "gcc/testsuite/g++.dg/template/instantiate3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -14,4 +14,4 @@ struct ACE_Cleanup_Adapter\n   TYPE object_;\t\t// { dg-error \"incomplete type\" }\n };\n \n-template class ACE_Cleanup_Adapter<ACE_Null_Mutex>; // { dg-error \"instantiated from here\" }\n+template class ACE_Cleanup_Adapter<ACE_Null_Mutex>; // { dg-message \"instantiated from here\" }"}, {"sha": "70ed2b059f90eefbcbc4b3bf4607750d3a020bd5", "filename": "gcc/testsuite/g++.dg/template/instantiate5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate5.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -13,12 +13,12 @@ int baz() { return A<0>::i; }\n \n struct B\n {\n-  static void foo (int);\t// { dg-error \"candidates\" }\n+  static void foo (int);\t// { dg-message \"candidates\" }\n };\n \n template <typename T> struct C\n {\n   virtual void bar() const { T::foo(); } // { dg-error \"no matching function\" }\n };\n \n-C<B> c;\t\t\t\t// { dg-error \"instantiated\" }\n+C<B> c;\t\t\t\t// { dg-message \"instantiated\" }"}, {"sha": "2e54106ffdd2e923197b3edc4c7a26b0a1b588df", "filename": "gcc/testsuite/g++.dg/template/instantiate7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Finstantiate7.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -7,4 +7,4 @@ template<typename T> struct A\n     template<T&> struct B;  // { dg-error \"reference to void\" }\n };\n \n-A<void> a;                  // { dg-error \"instantiated\" }\n+A<void> a;                  // { dg-message \"instantiated\" }"}, {"sha": "7094e7480d83df42adbd1250a445c7807494444e", "filename": "gcc/testsuite/g++.dg/template/local6.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flocal6.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,10 +1,10 @@\n template <class T> struct PCVector2\n-{ // { dg-error \"\" }\n+{ // { dg-message \"candidates\" }\n     template <class T2> PCVector2(const PCVector2<T> &cv) ;\n \n     PCVector2<T> operator- (const PCVector2<T> &ov) const \n \t{ \n-\t  return PCVector2<T>(ov.xFIELD, ov.yFIELD); // { dg-error \"\" }\n+\t  return PCVector2<T>(ov.xFIELD, ov.yFIELD); // { dg-error \"matching\" }\n \t}\n \n     T xFIELD, yFIELD;\n@@ -15,5 +15,5 @@ void findIntersection( PCVector2<double>& p0, PCVector2<double>& p1);\n \n void findIntersection( PCVector2<double>& p0, PCVector2<double>& p1)\n {\n-    PCVector2<double> e = p1 - p0;\t// { dg-error \"\" }\n+    PCVector2<double> e = p1 - p0;\t// { dg-message \"instantiated\" }\n }"}, {"sha": "15ab352682f5182ed24f6d693753c787a62159ad", "filename": "gcc/testsuite/g++.dg/template/lookup2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flookup2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flookup2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Flookup2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -14,5 +14,5 @@ template <typename T> void Bar ()\n \n void Foo ()\n {\n-  Bar<B> (); // { dg-error \"instantiated\" \"\" }\n+  Bar<B> (); // { dg-message \"instantiated\" \"\" }\n }"}, {"sha": "ba6a9705bee7ea6d044ef23f2dbc052b2456ce5f", "filename": "gcc/testsuite/g++.dg/template/member5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmember5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmember5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmember5.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -27,6 +27,7 @@ struct S {\n \n template< typename _A > void S::foo() {} \n \n-template void S::foo< 0 >();    // { dg-error \"no definition available|instantiated from here\" }\n+template void S::foo< 0 >();    // { dg-error \"no definition available\" \"no def\" }\n+\t\t\t\t// { dg-message \"instantiated\" \"instantiated\" { target *-*-* } 30 }\n \n }"}, {"sha": "c12ec4b5af2c04e5172d12dcd4f6e4af9eb8dbe7", "filename": "gcc/testsuite/g++.dg/template/memfriend15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmemfriend15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmemfriend15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmemfriend15.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -30,5 +30,5 @@ template<class T> void A<T>::B2::f()\n int main()\n {\n   A<int>::B2 b1;\n-  b1.f();\t// { dg-error \"instantiated\" }\n+  b1.f();\t// { dg-message \"instantiated\" }\n }"}, {"sha": "2827ef3f7a19b68e001707e8afd5a60ee6a91196", "filename": "gcc/testsuite/g++.dg/template/memfriend16.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmemfriend16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmemfriend16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmemfriend16.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -30,5 +30,5 @@ template<class T> template <class U> void A<T>::B2<U>::f()\n int main()\n {\n   A<int>::B2<int> b1;\n-  b1.f();\t// { dg-error \"instantiated\" }\n+  b1.f();\t// { dg-message \"instantiated\" }\n }"}, {"sha": "5e163fa477a85769ca47b886470e42028ddd0438", "filename": "gcc/testsuite/g++.dg/template/memfriend17.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmemfriend17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmemfriend17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmemfriend17.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -43,4 +43,4 @@ void A<T>::B::func2(void)\n     (void)F2<T*>::foo;\n }\n \n-template class A<int>;\t// { dg-error \"instantiated\" }\n+template class A<int>;\t// { dg-message \"instantiated\" }"}, {"sha": "1583646c0dfe2bd2a82e3d431d3e1493a12039ba", "filename": "gcc/testsuite/g++.dg/template/memfriend7.C", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmemfriend7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmemfriend7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmemfriend7.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -116,18 +116,18 @@ template <> void A<char>::j<0>()\n int main()\n {\n   A<int *> a1;\n-  a1.f(0);\t\t\t\t// { dg-error \"instantiated\" }\n-  a1.g<char>();\t\t\t\t// { dg-error \"instantiated\" }\n-  a1.g<int>();\t\t\t\t// { dg-error \"instantiated\" }\n-  a1.h();\t\t\t\t// { dg-error \"instantiated\" }\n-  a1.i('a');\t\t\t\t// { dg-error \"instantiated\" }\n-  a1.j<1>();\t\t\t\t// { dg-error \"instantiated\" }\n+  a1.f(0);\t\t\t\t// { dg-message \"instantiated\" }\n+  a1.g<char>();\t\t\t\t// { dg-message \"instantiated\" }\n+  a1.g<int>();\t\t\t\t// { dg-message \"instantiated\" }\n+  a1.h();\t\t\t\t// { dg-message \"instantiated\" }\n+  a1.i('a');\t\t\t\t// { dg-message \"instantiated\" }\n+  a1.j<1>();\t\t\t\t// { dg-message \"instantiated\" }\n   A<char> a2;\n   a2.f(0);\n-  a2.g<char>();\t\t\t\t// { dg-error \"instantiated\" }\n+  a2.g<char>();\t\t\t\t// { dg-message \"instantiated\" }\n   a2.g<int>();\n   a2.h();\n   a2.i('a');\n-  a2.j<1>();\t\t\t\t// { dg-error \"instantiated\" }\n+  a2.j<1>();\t\t\t\t// { dg-message \"instantiated\" }\n   a2.j<0>();\n }"}, {"sha": "6fd024a26330eb44ac3622b8914e7211da0af222", "filename": "gcc/testsuite/g++.dg/template/meminit1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmeminit1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmeminit1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fmeminit1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,4 +5,4 @@ struct S\n   S() : S() {} // { dg-error \"base\" }\n };\n \n-S<int> s; // { dg-error \"instantiated\" }\n+S<int> s; // { dg-message \"instantiated\" }"}, {"sha": "1ae4bf7647d4ac4a05c68042809ad9baee9db615", "filename": "gcc/testsuite/g++.dg/template/nested3.C", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnested3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnested3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnested3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,24 +5,27 @@ class A {\n     int _k;\n   };\n   T1 _t1;\n-  T2 _t2; // { dg-error \"instantiated\" }\n+  T2 _t2; // { dg-message \"instantiated\" }\n };\n \n template <class U>\n-class B { // { dg-error \"\" }\n+class B { // { dg-error \"declaration\" }\n   class SubB1 {\n-    B _i; // { dg-error \"\" }\n+    B _i; // { dg-error \"incomplete type\" }\n   };\n \n   class SubB2 {\n     int _j;\n   };\n-  A<U,SubB1>::SubA<SubB2> _a; // { dg-error \"\" }\n+  A<U,SubB1>::SubA<SubB2> _a; // { dg-error \"not a base type\" \"not base\" }\n+\t\t// { dg-message \"note\" \"note\" { target *-*-* } 20 }\n+\t\t// { dg-message \"instantiated\" \"inst\" { target *-*-* } 20 }\n+\t\t// { dg-error \"non-template\" \"non-template\" { target *-*-* } 20 }\n };\n \n \n int main() {\n-  B<char> objB; // { dg-error \"instantiated\" }\n+  B<char> objB; // { dg-message \"instantiated\" }\n \n   return 0;\n }"}, {"sha": "50be5f1c3ba1d9ca1feedd6be0b0efd167539d86", "filename": "gcc/testsuite/g++.dg/template/new3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnew3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnew3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnew3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,4 +1,4 @@\n-extern void *operator new(__SIZE_TYPE__); // { dg-error \"candidate\" }\n+extern void *operator new(__SIZE_TYPE__); // { dg-message \"candidate\" }\n \n template <class T >\n struct C"}, {"sha": "41243649a11d22cb1ca0980f8dd1959fe28ec5c4", "filename": "gcc/testsuite/g++.dg/template/non-type-template-argument-1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-type-template-argument-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-type-template-argument-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnon-type-template-argument-1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -9,4 +9,4 @@ template <typename T> struct D\n    C<T::X> c;                   // { dg-error \"parsed as a non-type|if a type is meant\" }\n };\n \n-D<B> d;                         // { dg-error \"instantiated from here\" }\n+D<B> d;                         // { dg-message \"instantiated from here\" }"}, {"sha": "a290ec337ea041e0f956aa73ac182266bd317a67", "filename": "gcc/testsuite/g++.dg/template/nontype12.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype12.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -9,7 +9,7 @@ template<typename T> struct A\n };\n \n A<char>   a1;\n-A<double> a2;                                   // { dg-error \"instantiated\" }\n+A<double> a2;                                   // { dg-message \"instantiated\" }\n \n template<typename T> struct B\n {\n@@ -27,9 +27,9 @@ template<typename T> struct C\n   template<T> int foo();                        // { dg-error \"double\" }\n };\n \n-template<typename T> int baz(T) { C<T> c; }     // { dg-error \"instantiated\" }\n+template<typename T> int baz(T) { C<T> c; }     // { dg-message \"instantiated\" }\n \n void foobar()\n {\n-  baz(1.2);                                     // { dg-error \"instantiated\" }\n+  baz(1.2);                                     // { dg-message \"instantiated\" }\n }"}, {"sha": "6fffb8d8e5353204e4bfbd496cc307a8a805cf51", "filename": "gcc/testsuite/g++.dg/template/nontype13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype13.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -24,6 +24,6 @@ struct Dummy\n int main()\n {\n   Dummy<int> d;\n-  d.tester<true> (); // { dg-error \"instantiated\" }\n+  d.tester<true> (); // { dg-message \"instantiated\" }\n }\n "}, {"sha": "97b093ae5517ec475e43b2697a17f29e506d07a8", "filename": "gcc/testsuite/g++.dg/template/nontype6.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fnontype6.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -12,8 +12,8 @@ struct A\n template <class T>\n void func(void)\n {\n-  (void)A<T>::type();\t // { dg-error \"if a type is meant\" }\n-// { dg-error \"parsed as a non-type\" \"non-type\" { target *-*-* } 15 }\n+  (void)A<T>::type();\t // { dg-error \"non-type\" \"non-type\" }\n+// { dg-message \"if a type\" \"note\" { target *-*-* } 15 }\n }\n \n-template void func<float>(void);    // { dg-error \"instantiated from here\" }\n+template void func<float>(void);    // { dg-message \"instantiated from here\" }"}, {"sha": "cef8ebe9fc801008f85f86c9236c09d7df847f43", "filename": "gcc/testsuite/g++.dg/template/overload9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Foverload9.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -7,7 +7,7 @@ template <typename T> A<T>& operator<<(A<T>&, const B<T>&);\n template <typename T>\n struct A \n {\n-  A<T>& operator<<(A<T>& (*)(A<T>&)); // { dg-error \"candidate\" }\n+  A<T>& operator<<(A<T>& (*)(A<T>&)); // { dg-message \"candidate\" }\n };\n \n template <typename T> A<T>& foo(A<T>&);"}, {"sha": "b52ff89174a6fc3c661d9203659a8b4ee2c36cc7", "filename": "gcc/testsuite/g++.dg/template/ptrmem15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem15.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -6,4 +6,4 @@ template<typename T> struct A\n     T A::* p;  // { dg-error \"void\" }\n };\n \n-A<void> a;     // { dg-error \"instantiated\" }\n+A<void> a;     // { dg-message \"instantiated\" }"}, {"sha": "a79e3c882fa175e3a347326b8e83ca413cb55018", "filename": "gcc/testsuite/g++.dg/template/ptrmem17.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem17.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -7,4 +7,4 @@ template<int> struct A\n   ~A() { &A::i; } // { dg-error \"reference\" }\n };\n \n-A<0> a; // { dg-error \"instantiated\" }\n+A<0> a; // { dg-message \"instantiated\" }"}, {"sha": "0ea73a13106bf66c871b788b3dfd0586475f1314", "filename": "gcc/testsuite/g++.dg/template/ptrmem4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem4.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -6,7 +6,7 @@\n // Pointer to member function template argument deduction ICE.\n \n \n-template <class CONT> void queryAliases(CONT& fill_me); // { dg-error \"candidates\" }\n+template <class CONT> void queryAliases(CONT& fill_me); // { dg-message \"candidates\" }\n \n struct SpyExample\n {\n@@ -16,5 +16,5 @@ struct SpyExample\n \n void SpyExample::ready()\n {\n-  queryAliases(inputs); // { dg-error \"\" }\n+  queryAliases(inputs); // { dg-error \"matching\" }\n }"}, {"sha": "a355cfe893991d87be9baa37c64fcf68f9a4971d", "filename": "gcc/testsuite/g++.dg/template/ptrmem6.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem6.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -4,7 +4,7 @@ void g(int S::**);\n \n template <typename T>\n void f (int T::* volatile *p) {\n-  g(p); // { dg-error \"\" }\n+  g(p); // { dg-error \"conversion\" }\n }\n \n-template void f(int S::* volatile *); // { dg-error \"instantiated\" }\n+template void f(int S::* volatile *); // { dg-message \"instantiated\" }"}, {"sha": "e25b4084129b7236c638144792b24aeb38915f5a", "filename": "gcc/testsuite/g++.dg/template/ptrmem8.C", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fptrmem8.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -15,6 +15,10 @@ template <int (D::*fun)() const> int Get();\n \n int main () \n {\n-  Get<&B::I>();   // { dg-error \"\" }\n-  Get<&D::I>();   // { dg-error \"\" }\n+  Get<&B::I>();   // { dg-error \"not a valid template argument\" \"not valid\" }\n+  // { dg-error \"no match\" \"no match\" { target *-*-* } 18 }\n+  // { dg-message \"note\" \"note\" { target *-*-* } 18 }\n+  Get<&D::I>();   // { dg-error \"not a valid template argument\" \"not valid\" }\n+  // { dg-error \"no match\" \"no match\" { target *-*-* } 21 }\n+  // { dg-message \"note\" \"note\" { target *-*-* } 21 }\n }"}, {"sha": "602be5bf154c02a677eb6293d9a3d83f07dcd8db", "filename": "gcc/testsuite/g++.dg/template/qualified-id1.C", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualified-id1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualified-id1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualified-id1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -16,11 +16,12 @@ template <> struct A::B<false> {};\n \n template <typename T> void foo()\n {\n-  T::C (); // { dg-error \"parsed as a non-type|if a type is meant\" \"\" }\n-  T::template B<false>(); // { dg-error \"parsed as a non-type|if a type is meant\" \"\" }\n+  T::C (); // { dg-error \"parsed as a non-type|if a type is meant\" }\n+  T::template B<false>(); // { dg-error \"parsed as a non-type\" \"non-type\" }\n+\t\t\t  // { dg-message \"if a type\" \"if a type\" { target *-*-* } 20 }\n }\n \n void bar()\n {\n-  foo<A>(); // { dg-error \"instantiated\" \"\" }\n+  foo<A>(); // { dg-message \"instantiated\" }\n }"}, {"sha": "d65fd1b61e73fdc1a03a50132fb60941cc241438", "filename": "gcc/testsuite/g++.dg/template/qualttp20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp20.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -32,5 +32,5 @@ template <typename T> struct B2 : T\n   myconst b;\n };\n \n-B1<AS> b1;\t// { dg-error \"instantiated\" \"\" }\n+B1<AS> b1;\t// { dg-message \"instantiated\" \"\" }\n B2<AS> b2;"}, {"sha": "4b9ffe34ea6fb0740440dae0e98dba48e5773880", "filename": "gcc/testsuite/g++.dg/template/qualttp3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -14,10 +14,10 @@ template <template <class> class TT> struct X\n \n template <class T> struct C\n {\n-\tX<T::template B> x; // { dg-error \"type\" \"\" }\n+\tX<T::template B> x; // { dg-error \"type\" }\n };\n \n int main()\n {\n-\tC<A> c; // { dg-error \"instantiated\" }\n+\tC<A> c; // { dg-message \"instantiated\" }\n }"}, {"sha": "c55ce2d3750a1a151727fb9dfe667d60255c5edb", "filename": "gcc/testsuite/g++.dg/template/qualttp4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp4.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -10,7 +10,7 @@ struct A\n template <template <class, class> class TT> // { dg-error \"provided\" }\n struct X\n {\n-\tTT<int> y; // { dg-error \"number|type\" }\n+\tTT<int> y; // { dg-error \"number\" }\n };\n \n template <class T> struct C\n@@ -20,5 +20,5 @@ template <class T> struct C\n \n int main()\n {\n-\tC<A> c; // { dg-error \"instantiated\" }\n+\tC<A> c; // { dg-message \"instantiated\" }\n }"}, {"sha": "7d1062e3a8fb6adc584087cf3e56ab4034cdb49b", "filename": "gcc/testsuite/g++.dg/template/qualttp5.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp5.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -4,7 +4,7 @@\n \n template <class U> struct A\n {\n-\ttemplate <class T> class B {}; // { dg-error \"candidates\" }\n+\ttemplate <class T> class B {}; // { dg-message \"candidates\" }\n };\n \n template <template <class> class TT> void f()\n@@ -15,11 +15,11 @@ template <template <class> class TT> void f()\n \n template <class T> struct C\n {\n-\tvoid g() { f<A<T>::template B>(); } // { dg-error \"instantiated\" }\n+\tvoid g() { f<A<T>::template B>(); } // { dg-message \"instantiated\" }\n };\n \n int main()\n {\n \tC<int> c;\n-\tc.g(); // { dg-error \"instantiated\" }\n+\tc.g(); // { dg-message \"instantiated\" }\n }"}, {"sha": "aa1a4670033d08c9fb43c873367cc29caed18191", "filename": "gcc/testsuite/g++.dg/template/qualttp6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp6.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -12,4 +12,4 @@ template <class T> struct D {\n struct E {\n };\n \n-D<E> d; // { dg-error \"instantiated\" }\n+D<E> d; // { dg-message \"instantiated\" }"}, {"sha": "f37123e778fbfe75a3d44c0569e4f281451ba655", "filename": "gcc/testsuite/g++.dg/template/qualttp7.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp7.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -9,4 +9,4 @@ template <class T> struct D {\n \tC<T::template B> c; // { dg-error \"no class template\" }\n };\n \n-D<int> d; // { dg-error \"instantiated\" }\n+D<int> d; // { dg-message \"instantiated\" }"}, {"sha": "5f55e60b3165c42520796331c6dc2ec46ca01aba", "filename": "gcc/testsuite/g++.dg/template/qualttp8.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fqualttp8.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -14,4 +14,4 @@ struct E {\n \ttemplate <class T> class B {}; // { dg-error \"private\" }\n };\n \n-D<E> d; // { dg-error \"instantiated\" }\n+D<E> d; // { dg-message \"instantiated\" }"}, {"sha": "25552d05ef97692aedbff335ee82efd877a21a20", "filename": "gcc/testsuite/g++.dg/template/recurse.C", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Frecurse.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Frecurse.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Frecurse.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,8 +5,9 @@ template <int I> struct F\n {\n   int operator()()\n     {\n-      F<I+1> f;\t\t\t// { dg-error \"\" \"\" }\n-      return f()*I;             // { dg-error \"\" \"\" }\n+      F<I+1> f;\t\t\t// { dg-error \"incomplete type\" \"incomplete\" }\n+\t\t\t\t// { dg-error \"exceeds maximum\" \"exceeds\" { target *-*-* } 8 }\n+      return f()*I;             // { dg-message \"instantiated\" \"recurse\" }\n     }\n };\n \n@@ -18,5 +19,8 @@ template <> struct F<52>\n int main ()\n {\n   F<1> f;\n-  return f();\t\t// { dg-error \"instantiate\" \"excessive recursion\" }\n+  return f();\t\t// { dg-message \"instantiated from here\" \"excessive recursion\" }\n }\n+\n+// Ignore excess messages from recursion.\n+// { dg-prune-output \"instantiated from 'int\" }"}, {"sha": "f44c4458f35fc100e3a863714c596865a801db2c", "filename": "gcc/testsuite/g++.dg/template/sfinae10.C", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsfinae10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsfinae10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsfinae10.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -169,13 +169,13 @@ STATIC_ASSERT((has_postdecrement<X>::value));\n STATIC_ASSERT((!has_postdecrement<Y>::value));\n \n // Check for private members\n-STATIC_ASSERT((has_unary_plus<Z>::value)); // { dg-error \"instantiated from here\" }\n-STATIC_ASSERT((is_negatable<Z>::value)); // { dg-error \"instantiated from here\" }\n-STATIC_ASSERT((is_dereferenceable<Z>::value)); // { dg-error \"instantiated from here\" }\n-STATIC_ASSERT((has_bitwise_not<Z>::value)); // { dg-error \"instantiated from here\" }\n-STATIC_ASSERT((has_truth_not<Z>::value)); // { dg-error \"instantiated from here\" }\n-STATIC_ASSERT((has_preincrement<Z>::value)); // { dg-error \"instantiated from here\" }\n-STATIC_ASSERT((has_predecrement<Z>::value)); // { dg-error \"instantiated from here\" }\n-STATIC_ASSERT((has_postincrement<Z>::value)); // { dg-error \"instantiated from here\" }\n-STATIC_ASSERT((has_postdecrement<Z>::value)); // { dg-error \"instantiated from here\" }\n+STATIC_ASSERT((has_unary_plus<Z>::value)); // { dg-message \"instantiated from here\" }\n+STATIC_ASSERT((is_negatable<Z>::value)); // { dg-message \"instantiated from here\" }\n+STATIC_ASSERT((is_dereferenceable<Z>::value)); // { dg-message \"instantiated from here\" }\n+STATIC_ASSERT((has_bitwise_not<Z>::value)); // { dg-message \"instantiated from here\" }\n+STATIC_ASSERT((has_truth_not<Z>::value)); // { dg-message \"instantiated from here\" }\n+STATIC_ASSERT((has_preincrement<Z>::value)); // { dg-message \"instantiated from here\" }\n+STATIC_ASSERT((has_predecrement<Z>::value)); // { dg-message \"instantiated from here\" }\n+STATIC_ASSERT((has_postincrement<Z>::value)); // { dg-message \"instantiated from here\" }\n+STATIC_ASSERT((has_postdecrement<Z>::value)); // { dg-message \"instantiated from here\" }\n "}, {"sha": "5799a364e4253d74c77a7fd3a58fbb9bd9ab54c0", "filename": "gcc/testsuite/g++.dg/template/sfinae3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsfinae3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsfinae3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fsfinae3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -9,7 +9,7 @@ template<typename> struct A\n \n template<typename> struct B\n {\n-  B(const B&); // { dg-error \"candidate\" }\n+  B(const B&); // { dg-message \"candidate\" }\n   typedef typename A<char[A<B>::i]>::X Y;\n   template<typename T> B(T, Y); // { dg-error \"call\" }\n };"}, {"sha": "7e627f16763b12a0e6cdbcae47c96fb313024b5d", "filename": "gcc/testsuite/g++.dg/template/spec22.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec22.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -8,11 +8,11 @@\n template <typename T> class srp;\n template <typename T> struct ptr\n {\n-  template <typename U> ptr(const srp<U> &other); // { dg-error \"ptr<T>::ptr\" }\n+  template <typename U> ptr(const srp<U> &other); // { dg-message \"ptr<T>::ptr\" }\n };\n template <typename T> struct srp\n {\n-  template <typename U> operator ptr<U>(void) const; // { dg-error \"srp<T>::operator\" }\n+  template <typename U> operator ptr<U>(void) const; // { dg-message \"srp<T>::operator\" }\n };\n ptr<int> parent_get()\n {"}, {"sha": "1c027fa43886ae2a9c4b5550f19484b2a22bec9a", "filename": "gcc/testsuite/g++.dg/template/spec23.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fspec23.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -8,18 +8,18 @@\n struct Foo\n {\n   template <typename T>\n-  Foo (const T &); // { dg-error \"T = Bar\" \"\" }\n+  Foo (const T &); // { dg-message \"T = Bar\" }\n };\n \n struct Bar\n {\n   template <typename T>\n-  operator T () const;   // { dg-error \"T = Foo\" \"\" }\n+  operator T () const;   // { dg-message \"T = Foo\" }\n };\n \n Foo Quux (Bar const &b)\n {\n-  return b; // { dg-error \"ambiguous\" \"\" }\n+  return b; // { dg-error \"ambiguous\" }\n }\n \n "}, {"sha": "a98144185bb4ad1e5171a9810b54d3910d6571e1", "filename": "gcc/testsuite/g++.dg/template/static9.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fstatic9.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -2,7 +2,8 @@\n \n template<typename T> struct A\n {\n-  static const T i = 0; // { dg-error \"\" }\n+  static const T i = 0; // { dg-error \"declared void\" \"void\" }\n+\t\t\t// { dg-error \"invalid\" \"invalid\" { target *-*-* } 5 }\n };\n \n-A<void> a; // { dg-error \"\" }\n+A<void> a; // { dg-message \"instantiated\" }"}, {"sha": "6d37350e93b4f91be38a173b1c2760a1b45e04e3", "filename": "gcc/testsuite/g++.dg/template/template-id-2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftemplate-id-2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftemplate-id-2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftemplate-id-2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -18,5 +18,5 @@ template<> struct A<void>\n void bar()\n {\n     A<void> a;\n-    a.foo<int>();\t\t// { dg-error \"instantiated\" }\n+    a.foo<int>();\t\t// { dg-message \"instantiated\" }\n }"}, {"sha": "b0e16d46434e8ced2b6cd5edccd20eb4a849f658", "filename": "gcc/testsuite/g++.dg/template/typename2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -21,5 +21,6 @@ class ctype : public __ctype_abstract_base<_CharT>\n template<typename _CharT>\n class ctype2 : public __ctype_abstract_base<_CharT>\n {\n-  typedef mask mask; // { dg-error \"\" }\n+  typedef mask mask; // { dg-error \"does not name a type\" \"no type\" }\n+  // { dg-message \"note\" \"note\" { target *-*-* } 24 }\n };"}, {"sha": "18cdd1aba01594235296fb7fc746da0a0d1ce718", "filename": "gcc/testsuite/g++.dg/template/typename4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ftypename4.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,3 +1,3 @@\n struct B { template <typename U> struct C; };\n-template <typename T> struct A { typedef typename T::C V; }; // { dg-error \"\" }\n-void f () { A<B>::V p; } // { dg-error \"\" }\n+template <typename T> struct A { typedef typename T::C V; }; // { dg-error \"not a type\" }\n+void f () { A<B>::V p; } // { dg-message \"instantiated\" }"}, {"sha": "ebb4e090a37ca09b9aff2d186d852a306a1c08d2", "filename": "gcc/testsuite/g++.dg/template/using14.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing14.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing14.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing14.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -10,12 +10,12 @@ template <class T> struct C : public B1<T>, public B2\n   void f()\n   {\n     i();\t\t\t// should be accepted\n-    i.i();\t\t\t// { dg-error \"\" }\n+    i.i();\t\t\t// { dg-error \"member\" }\n   }\n };\n \n int main()\n {\n   C<int> c;\n-  c.f();\t\t\t// { dg-error \"instantiated\" }\n+  c.f();\t\t\t// { dg-message \"instantiated\" }\n }"}, {"sha": "5d21f575b3ce1fc1bdcabc5299533fd0f7d0dc67", "filename": "gcc/testsuite/g++.dg/template/using2.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fusing2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -7,24 +7,24 @@\n \n template <class T>\n struct Foo {\n-  int i; // { dg-error \"\" \"\" }\n+  int i; // { dg-error \"Foo\" }\n };\n \n struct Baz \n {\n-  int i; // { dg-error \"\" \"\" }\n+  int i; // { dg-error \"Baz\" }\n };\n \n template <class T>\n struct Bar : public Foo<T>, Baz {\n   using Foo<T>::i;\n   using Baz::i;\n \n-  int foo () { return i; } // { dg-error \"request for member\" \"\" }\n+  int foo () { return i; } // { dg-error \"request for member\" }\n };\n \n void foo (Bar<int> &bar)\n {\n-  bar.foo(); // { dg-error \"instantiated\" \"\" }\n+  bar.foo(); // { dg-message \"instantiated\" }\n }\n "}, {"sha": "0cdffcd3c5110fd603c1524d33386184b3c97bf5", "filename": "gcc/testsuite/g++.dg/template/warn1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fwarn1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fwarn1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fwarn1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -17,7 +17,7 @@ template <class T>  void Foo(T i)\n  \n void Bar ()\n { \n-  Foo (1);  // { dg-error \"instantiated\" \"\" }\n+  Foo (1);  // { dg-message \"instantiated\" }\n }\n \n struct M {};\n@@ -31,6 +31,6 @@ struct C\n \n void Baz (int i)\n {\n-  i ? i + 1 : i + 2; // { dg-error \"operand of\" \"\" }\n+  i ? i + 1 : i + 2; // { dg-warning \"operand of\" }\n   i ? i++ : 0;\n }"}, {"sha": "ebe8f426a3b7124d10082334bcfc18bc10e6a8b1", "filename": "gcc/testsuite/g++.dg/warn/Wparentheses-13.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-13.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -66,4 +66,4 @@ bar (T)\n   foo (27);\n }\n \n-template void bar<int> (int); // { dg-warning \"instantiated\" }\n+template void bar<int> (int); // { dg-message \"instantiated\" }"}, {"sha": "db73d430aeafa882159085fa0f2e3e400d609a6e", "filename": "gcc/testsuite/g++.dg/warn/Wparentheses-15.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-15.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-15.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-15.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -65,4 +65,4 @@ bar (T a, T b, T c)\n   foo (1 != (2 != 3));\n }\n \n-template void bar<int> (int, int, int); // { dg-warning \"instantiated\" }\n+template void bar<int> (int, int, int); // { dg-message \"instantiated\" }"}, {"sha": "6381552370dddd330da501532ca2d97cbf6d4945", "filename": "gcc/testsuite/g++.dg/warn/Wparentheses-16.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-16.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -83,4 +83,4 @@ bar (T a, T b, T c)\n   foo (6 >> (5 - 4));\n }\n \n-template void bar<int> (int, int, int); // { dg-warning \"instantiated\" }\n+template void bar<int> (int, int, int); // { dg-message \"instantiated\" }"}, {"sha": "1af1e2e0380c98bc27e5c1b1cc1d0fb4614373d1", "filename": "gcc/testsuite/g++.dg/warn/Wparentheses-17.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-17.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -29,4 +29,4 @@ bar (T a, T b, T c)\n   foo (1 || (2 && 3));\n }\n \n-template void bar<int> (int, int, int); // { dg-warning \"instantiated\" }\n+template void bar<int> (int, int, int); // { dg-message \"instantiated\" }"}, {"sha": "d562315f3c79bbc49afa803f09ca7d36ff69d942", "filename": "gcc/testsuite/g++.dg/warn/Wparentheses-18.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-18.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -119,4 +119,4 @@ bar (T a, T b, T c)\n   foo (1 | (2 <= 3));\n }\n \n-template void bar<int> (int, int, int); // { dg-warning \"instantiated\" }\n+template void bar<int> (int, int, int); // { dg-message \"instantiated\" }"}, {"sha": "e3dfc5d05c3a784fc80ee20869e4645d7611f2c9", "filename": "gcc/testsuite/g++.dg/warn/Wparentheses-19.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-19.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-19.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-19.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -119,4 +119,4 @@ bar (T a, T b, T c)\n   foo (1 ^ (2 < 3));\n }\n \n-template void bar<int> (int, int, int); // { dg-warning \"instantiated\" }\n+template void bar<int> (int, int, int); // { dg-message \"instantiated\" }"}, {"sha": "a1ba89dfcd57e5c99bfb43db7570e6ba61ac8e10", "filename": "gcc/testsuite/g++.dg/warn/Wparentheses-20.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-20.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -101,4 +101,4 @@ bar (T a, T b, T c)\n   foo (1 & (2 != 3));\n }\n \n-template void bar<int> (int, int, int); // { dg-warning \"instantiated\" }\n+template void bar<int> (int, int, int); // { dg-message \"instantiated\" }"}, {"sha": "cadc287fe967209c7a15d950959a57f4daa06d71", "filename": "gcc/testsuite/g++.dg/warn/Wparentheses-23.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWparentheses-23.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -114,8 +114,8 @@ bar4 (T)\n   return (a = a);\n }\n \n-template void bar<int> (int); // { dg-warning \"instantiated\" }\n-template bool bar1<int> (int); // { dg-warning \"instantiated\" }\n+template void bar<int> (int); // { dg-message \"instantiated\" }\n+template bool bar1<int> (int); // { dg-message \"instantiated\" }\n template bool bar2<int> (int);\n-template bool bar3<int> (int); // { dg-warning \"instantiated\" }\n+template bool bar3<int> (int); // { dg-message \"instantiated\" }\n template bool bar4<int> (int);"}, {"sha": "94c2f47020f676cdead2388c65a5549b2bc091db", "filename": "gcc/testsuite/g++.dg/warn/Wstrict-aliasing-3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstrict-aliasing-3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstrict-aliasing-3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWstrict-aliasing-3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -9,6 +9,6 @@ T *foo(void)\n   return (T *)&x; /* { dg-warning \"strict-aliasing\" } */\n }\n \n-template int *foo<int>(void); /* { dg-warning \"instantiated from here\" } */\n+template int *foo<int>(void); /* { dg-message \"instantiated from here\" } */\n template char *foo<char>(void); /* { dg-bogus \"instantiated from here\" } */\n "}, {"sha": "26cfe2eae4bdec0e578e679ed0b45088c76eaa51", "filename": "gcc/testsuite/g++.dg/warn/incomplete1.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fincomplete1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fincomplete1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fincomplete1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -16,6 +16,7 @@ A *a;\t\t// { dg-warning \"'a' has incomplete type\" \"\" }\n int\n main (int argc, char **argv)\n {\n-  delete a;\t// { dg-warning \"delete\" \"\" }\n+  delete a;\t// { dg-warning \"delete\" \"warn\" }\n+  // { dg-message \"note\" \"note\" { target *-*-* } 19 }\n   return 0;\n }"}, {"sha": "01323659597492a5cb5b98fd36cff509cc8a2e87", "filename": "gcc/testsuite/g++.dg/warn/noeffect2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fnoeffect2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fnoeffect2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fnoeffect2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -12,9 +12,9 @@ extern \"C\" void FormatDisk();\n   struct C {\n     C(){ FormatDisk(), 0; }  // { dg-warning \"right-hand operand of comma\" \"\" }\n   };\n-  template struct C<int>; // { dg-warning \"instantiated\" }\n+  template struct C<int>; // { dg-message \"instantiated\" }\n   template <class T>\n   void f() { FormatDisk(), 0; } // { dg-warning \"right-hand operand of comma\" \"\" }\n-  template void f<int> (); // { dg-warning \"instantiated\" }\n+  template void f<int> (); // { dg-message \"instantiated\" }\n void g() { FormatDisk(), 0; } // { dg-warning \"right-hand operand of comma\" \"\" }\n "}, {"sha": "966716bbc48c36f52f11494bbbaa3e63e1bd60cb", "filename": "gcc/testsuite/g++.dg/warn/noeffect4.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fnoeffect4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fnoeffect4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fnoeffect4.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -85,4 +85,4 @@ template<int I> void Foo (X &x)\n   __alignof__ (x++);           // { dg-warning \"no effect\" \"\" }\n }\n \n-template void Foo<4> (X&);     // { dg-warning \"instantiated\" }\n+template void Foo<4> (X&);     // { dg-message \"instantiated\" }"}, {"sha": "f3984d58e58bc080562a91f636e10165e317674b", "filename": "gcc/testsuite/g++.dg/warn/pr26785.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr26785.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr26785.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr26785.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,7 +3,7 @@\n // { dg-options \"-fshow-column\" }\n \n class foo {\n-  foo::foo // { dg-error \"3: error: extra qualification\" }\n+  foo::foo // { dg-error \"3:extra qualification\" }\n   (int a, \n    int b,\n    int c);"}, {"sha": "608f4d6b5bf5f0fdbae55e5821f1152dadc135a9", "filename": "gcc/testsuite/g++.dg/warn/pr8570.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr8570.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr8570.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fpr8570.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -2,12 +2,12 @@\n // { dg-do compile }\n // { dg-options \"\" }\n template <typename T, typename P>\n-class X { // { dg-warning \"note: previous declaration .* used 2\" }\n+class X { // { dg-message \"note: previous declaration .* used 2\" }\n public:\n   X() { }\n \n private:\n-  template <typename U> friend class X; // { dg-error \"error: .*redeclared with 1 template parameter\" }\n+  template <typename U> friend class X; // { dg-error \"redeclared with 1 template parameter\" }\n };\n \n-X<int, int> i;\n+X<int, int> i;\t\t// { dg-message \"instantiated\" }"}, {"sha": "35d882b21b355381b6a3a6a1b916f0cc4c1ddd94", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/15799.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15799.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15799.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15799.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -15,15 +15,15 @@ typedef unsigned long uint_32;\n class sanjose {\n public:\n    sanjose();\n-   sanjose(const sanjose&);  // { dg-error \"\" } candidate\n-   sanjose(int_8 value);  // { dg-error \"\" }  // ERROR -\n-   sanjose(uint_32 value);  // { dg-error \"\" }  // ERROR -\n+   sanjose(const sanjose&);  // { dg-message \"note\" }\n+   sanjose(int_8 value);  // { dg-message \"note\" }\n+   sanjose(uint_32 value);  // { dg-message \"note\" }\n };\n \n enum { first, last};\n \n void foo(void) {\n-  sanjose obj(first); // { dg-error \"\" }  // ERROR -\n+  sanjose obj(first); // { dg-error \"ambiguous\" }\n }\n \n "}, {"sha": "deedfba75a2746ec10301f620d4a49f5b475c9b5", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/15800-1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15800-1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15800-1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F15800-1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,13 +5,13 @@\n struct panama {\n   panama();\n   panama(panama &);\n-  panama& operator=(panama&); // { dg-error \"\" } // ERROR -\n+  panama& operator=(panama&); // { dg-message \"candidates\" }\n };\n \n extern panama dig();\n \n void foo() {\n    panama obj;\n-   obj = dig(); // { dg-error \"\" }  // ERROR -\n+   obj = dig(); // { dg-error \"no match\" }\n }\n "}, {"sha": "9338e8755320bdc709932ac0ddd631edd15d2b63", "filename": "gcc/testsuite/g++.old-deja/g++.benjamin/16077.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F16077.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F16077.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.benjamin%2F16077.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -21,7 +21,9 @@ public:\n void peace(const colombia&);\n \n void foo(nicaragua& b) {\n-  peace(b); // { dg-warning \"\" } // WARNING -\n+  peace(b); // { dg-warning \"choosing 'nicaragua::operator\" \"nic\" }\n+  // { dg-warning \"conversion\" \"conv\" { target *-*-* } 24 }\n+  // { dg-message \"note\" \"note\" { target *-*-* } 24 }\n }\n \n "}, {"sha": "14bc32b6a780472e46c266427c8ff6677dd1d1f9", "filename": "gcc/testsuite/g++.old-deja/g++.bob/inherit2.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bob%2Finherit2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bob%2Finherit2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bob%2Finherit2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -20,5 +20,6 @@ void f(B b) {\n \n void g() {\n   B h;\n-  f(h); // { dg-error \"synthesized|argument\" } \n+  f(h); // { dg-error \"argument\" \"arg\" } \n+  // { dg-message \"synthesized\" \"synth\" { target *-*-* } 23 }\n }"}, {"sha": "ddf93c4bdae8bfa831ee7eb478fec99b3387ff9d", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/ambiguity1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fambiguity1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fambiguity1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fambiguity1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -8,10 +8,10 @@ struct B {\n   B (int);\n };\n \n-void myfunc (const A& t0); // { dg-error \"\" } \n-void myfunc (const B& t0); // { dg-error \"\" } \n+void myfunc (const A& t0); // { dg-message \"candidates\" } \n+void myfunc (const B& t0); // { dg-message \"note\" } \n \n int main ()\n {\n-   myfunc(1);   // { dg-error \"\" } ambiguous call\n+   myfunc(1);   // { dg-error \"ambiguous\" }\n }"}, {"sha": "674fc4fa6791eca5071d2916b45a8039d82775c1", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash16.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash16.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -2,13 +2,13 @@\n // { dg-options \"-fshow-column\" }\n // GROUPS passed old-abort\n \n-class Graph { // { dg-error \"1: error: new types|1: note: \\\\(perhaps\" }\n+class Graph { // { dg-error \"1:new types|1: note: \\\\(perhaps\" }\n public:\n       unsigned         char N;\n-      Graph(void) {} // { dg-error \"7: error: 'Graph\" }\n+      Graph(void) {} // { dg-error \"7:'Graph\" }\n }\n \n-Graph::Graph(void) // { dg-error \"18: error: return type|1: error: redefinition\" }\n+Graph::Graph(void) // { dg-error \"18:return type|1: error: redefinition\" }\n {    N = 10;\n }\n "}, {"sha": "fd2fa2ff9860e8c86d26406be7014dd4c68164ae", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash29.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash29.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash29.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash29.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -7,13 +7,13 @@ union Value\n };\n \n struct GlobalAddress\n-{// { dg-error \"\" }  candidates .*\n-\tGlobalAddress(Value *nvar){}// { dg-error \"\" } .*\n+{// { dg-message \"note\" }\n+\tGlobalAddress(Value *nvar){} // { dg-message \"candidates\" }\n };\n \n int\n main()\n {\n-\tnew GlobalAddress(Value());\t\t// internal error occured here// { dg-error \"\" }  no matching function .*\n+\tnew GlobalAddress(Value());\t\t// internal error occured here// { dg-error \"no matching\" }\n \t//new GlobalAddress(new Value());\t// This line is correct code\n }"}, {"sha": "e7d621cf0a25d55b2a8586063748f1e372f14325", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash48.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash48.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash48.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash48.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,16 +1,16 @@\n // { dg-do compile }\n // GROUPS passed old-abort\n-class internal { // { dg-error \"internal::internal\" }\n+class internal { // { dg-message \"internal::internal\" }\n \tint field;\n \tint anotherfield;\n };\n \n-class bug { // { dg-error \"bug::bug\" }\n+class bug { // { dg-message \"bug::bug\" }\n \tinternal* numbers;\n \tbug(int size);\n };\n \n-bug::bug(int size) // { dg-error \"bug::bug\" }\n+bug::bug(int size) // { dg-message \"bug::bug\" }\n {\n   numbers = new internal(size * size);// { dg-error \"no match\" }\n }"}, {"sha": "dcb89dc9e48cefb393896debbcd17f3903d0ab57", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/crash56.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash56.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash56.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcrash56.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -343,7 +343,7 @@ operator>=(const SetLD<T>& a, const SetLD<T>& b)\n class String { };\n class IcaseString: public String { };\n template <> class SetLD< IcaseString >: public SetLD<    String  > {\tpublic:\t SetLD (): SetLD<    String  >() { };\t SetLD (const ListD<   IcaseString  >& other): SetLD<    String  >()\t{ ListD<   IcaseString  >::Vix x;\tfor (other.first(x); 0 != x; other.next(x))\tadd(other(x)); };\t SetLD (const  SetLD & other): SetLD<    String  >(other) { };\tconst    IcaseString  & operator()(const Vix& x) const\t{ return (   IcaseString  &) SetLD<    String  >::operator()(x); }\t}; \ttypedef SetLD<  String > SetLD_String_IcaseString_old_tmp99;\ttypedef SetLD< IcaseString > SetLD_String_IcaseString_new_tmp99;\t\n-inline int\t operator== (const SetLD_String_IcaseString_new_tmp99& a,\tconst SetLD_String_IcaseString_new_tmp99& b) // { dg-error \"operator==\" }\n+inline int\t operator== (const SetLD_String_IcaseString_new_tmp99& a,\tconst SetLD_String_IcaseString_new_tmp99& b) // { dg-message \"operator==\" }\n {\n const SetLD_String_IcaseString_old_tmp99& oa = a;\n const SetLD_String_IcaseString_old_tmp99& ob = b;"}, {"sha": "638ba9f92521d7173acc706a590ca43d151904c9", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/cvt3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcvt3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcvt3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Fcvt3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -38,11 +38,11 @@ struct bar\n class nnyacc\n {\n public:\n-      static void assign(void*& lval, void*& rval); // { dg-error \"\" } candidates\n+      static void assign(void*& lval, void*& rval); // { dg-message \"candidates\" }\n };\n \n void\n foo (bar yylval, bar *yyvsp)\n {\n-  nnyacc::assign(yylval.valueList, yyvsp[0].valueList);// { dg-error \"\" } \n+  nnyacc::assign(yylval.valueList, yyvsp[0].valueList);// { dg-error \"no matching\" } \n }"}, {"sha": "92b04c4d02b5f8e06d8e211b14aded75c52199d1", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/overload1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -9,13 +9,13 @@ public:\n class Bar : public Foo\n {\n public:\n-      int f (int); // { dg-error \"\" } candidates are\n+      int f (int); // { dg-message \"candidates\" }\n };\n \n int main ()\n {\n   Bar b;\n \n-  b.f ();// { dg-error \"\" } \n+  b.f ();// { dg-error \"no matching\" } \n   b.f (10);\n }"}, {"sha": "d832a4b47c140472ae39092ce9e781728f450e0a", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/overload4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload4.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,7 +5,7 @@\n   class B\n   {\n   public:\n-\tstatic void WantsNew (NewObject creator); // { dg-error \"\" } candidates are\n+\tstatic void WantsNew (NewObject creator); // { dg-message \"candidates\" }\n   };\n   \n   class A\n@@ -18,6 +18,6 @@\n \t  B::WantsNew ( (NewObject) A::NewOne );\n \t  // This used to die in convert_harshness_{ansi,old} cuz it\n \t  // didn't know what to do about a void type.\n-\t  B::WantsNew ( A::NewOne );// { dg-error \"\" } \n+\t  B::WantsNew ( A::NewOne );// { dg-error \"no matching\" } \n       }\n   };"}, {"sha": "b168e860410b1b535ec5cd6f9d2d90e5fe45efa0", "filename": "gcc/testsuite/g++.old-deja/g++.brendan/overload9.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.brendan%2Foverload9.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,8 +3,8 @@\n class CLogger\n {\n public:\n-      void operator() (int,const char *) {}; // { dg-error \"\" } candidates\n-      void operator() (int,const char *, ...) {}; // { dg-error \"\" } candidates\n+      void operator() (int,const char *) {}; // { dg-message \"candidates\" }\n+      void operator() (int,const char *, ...) {}; // { dg-message \"note\" }\n } Log;\n \n class CGLogger : public CLogger\n@@ -13,8 +13,8 @@ class CGLogger : public CLogger\n \n int main()\n {\n-        Log(1,\"Test\");// { dg-error \"\" }  call of.*\n+        Log(1,\"Test\");// { dg-error \"ambiguous\" }\n         Log(1,\"Test %d\",3);\n-        GLog(1,\"Test\");// { dg-error \"\" }  call of.*\n+        GLog(1,\"Test\");// { dg-error \"ambiguous\" }\n         GLog(1,\"Test %d\",3);\n }"}, {"sha": "1c315b7fadde784b197a2d3efa20687e986cb689", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900127_01.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900127_01.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900127_01.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900127_01.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -15,12 +15,12 @@ int foo (void);\n typedef int (*f_ptr_t1) (void);\n typedef void (*f_ptr_t2) (int);\n \n-void bar (f_ptr_t1);\t\t// { dg-error \"\" } \n-void bar (f_ptr_t2);\t\t// { dg-error \"\" } \n+void bar (f_ptr_t1);\t\t// { dg-message \"note\" } \n+void bar (f_ptr_t2);\t\t// { dg-message \"note\" } \n \n void function ()\n {\n-  bar (foo);\t\t\t// { dg-error \"\" } ambiguous\n+  bar (foo);\t\t\t// { dg-error \"ambiguous\" }\n }\n \n int main () { return 0; }"}, {"sha": "8d91db67ae866f6d5a6157623dc071d77fe42d15", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900205_04.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900205_04.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900205_04.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900205_04.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -13,19 +13,19 @@\n // implicitly-declared constructor is used, then it is implicitly\n // defined and found to be ill-formed.\n \n-struct struct0 { // { dg-error \"note\" }\n+struct struct0 { // { dg-message \"note\" }\n   int data_member;\n \n   struct0 (int, void *);\t// suppresses implicit default constructor\n };\n \n-struct0::struct0 (int, void *) // { dg-error \"note\" }\n+struct0::struct0 (int, void *) // { dg-message \"note\" }\n {\n }\n \n struct struct0_derived_struct_0 : public struct0 { // { dg-error \"no matching\" }\n };\n \n-struct0_derived_struct_0 object; // { dg-error \"synthesized\" }\n+struct0_derived_struct_0 object; // { dg-message \"synthesized\" }\n \n int main () { return 0; }"}, {"sha": "f1da7fba722aeea39abf3fa16afee06d341942f5", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900330_02.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900330_02.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900330_02.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900330_02.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -19,12 +19,12 @@ struct B {\n };\n \n struct D : public B {\n-  int f(struct B);\t\t// { dg-error \"\" } referred to below\n+  int f(struct B);\t\t// { dg-message \"candidates\" } referred to below\n };\n \n void h(D* pd)\n {\n-  pd->f(1);\t\t// { dg-error \"\" } D::f(struct B) hides B::f(int)\n+  pd->f(1);\t\t// { dg-error \"no matching\" } D::f(struct B) hides B::f(int)\n }\n \n int main () { return 0; }"}, {"sha": "6f7ea3f4581c6282e86889f78f70346a1e1382de", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900404_03.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900404_03.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900404_03.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900404_03.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -8,12 +8,12 @@\n \n // keywords: overloading, ambiguity, resolution\n \n-void function0 (int i, char c)\t// { dg-error \"function0\" }\n+void function0 (int i, char c)\t// { dg-message \"function0\" }\n {\n   i = c;\n }\n \n-void function0 (char c, int i)  // { dg-error \"function0\" }\n+void function0 (char c, int i)  // { dg-message \"function0\" }\n {\n   i = c;\n }"}, {"sha": "3826e08e009f1683b8ba2f60d6624a51a7385676", "filename": "gcc/testsuite/g++.old-deja/g++.bugs/900514_03.C", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900514_03.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900514_03.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bugs%2F900514_03.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -19,14 +19,14 @@ struct t_0_st_0;\n struct t_0_st_1 {\n   int member;\n \n-  t_0_st_1 (t_0_st_0&);// { dg-error \"\" } \n+  t_0_st_1 (t_0_st_0&);// { dg-message \"note\" } \n   t_0_st_1 ();\n };\n \n struct t_0_st_0 {\n   int member;\n \n-  operator t_0_st_1 ();// { dg-error \"\" } \n+  operator t_0_st_1 ();// { dg-message \"note\" } \n };\n \n t_0_st_0 t_0_st_0_obj0;\n@@ -37,13 +37,13 @@ void t_0_assignment ()\n   t_0_st_1 t_0_st_1_obj1;\n   t_0_st_1 t_0_st_1_obj2;\n \n-  t_0_st_1_obj0 = t_0_st_0_obj0;\t\t\t// { dg-error \"\" } caught\n+  t_0_st_1_obj0 = t_0_st_0_obj0;\t\t\t// { dg-error \"ambiguous\" } caught\n   t_0_st_1_obj1 = t_0_st_1 (t_0_st_0_obj0);\n }\n \n void t_0_local_init ()\n {\n-  t_0_st_1 t_0_st_1_obj0 = t_0_st_0_obj0;\t\t// { dg-error \"\" } \n+  t_0_st_1 t_0_st_1_obj0 = t_0_st_0_obj0;\t\t// { dg-error \"ambiguous\" } \n   t_0_st_1 t_0_st_1_obj1 = t_0_st_1 (t_0_st_0_obj0);\n }\n \n@@ -52,15 +52,15 @@ struct t_1_st_0;\n struct t_1_st_1 {\n   int member;\n \n-  t_1_st_1 (t_1_st_0&);\t\t\t\t\t// { dg-error \"\" } \n+  t_1_st_1 (t_1_st_0&);\t\t\t\t\t// { dg-message \"note\" } \n   t_1_st_1 ();\n-  void operator= (t_1_st_1&);\t\t\t\t// { dg-error \"\" } \n+  void operator= (t_1_st_1&);\t\t\t\t// { dg-message \"note\" } \n };\n \n struct t_1_st_0 {\n   int member;\n \n-  operator t_1_st_1 ();\t\t\t\t\t// { dg-error \"\" } \n+  operator t_1_st_1 ();\t\t\t\t\t// { dg-message \"note\" } \n };\n \n t_1_st_0 t_1_st_0_obj0;\n@@ -71,13 +71,13 @@ void t_1_assignment ()\n   t_1_st_1 t_1_st_1_obj1;\n   t_1_st_1 t_1_st_1_obj2;\n \n-  t_1_st_1_obj0 = t_1_st_0_obj0;\t\t\t// { dg-error \"\" } \n-  t_1_st_1_obj1 = t_1_st_1 (t_1_st_0_obj0);\t\t// { dg-error \"\" } \n+  t_1_st_1_obj0 = t_1_st_0_obj0;\t\t\t// { dg-error \"no match\" } \n+  t_1_st_1_obj1 = t_1_st_1 (t_1_st_0_obj0);\t\t// { dg-error \"no match\" } \n }\n \n void t_1_local_init ()\n {\n-  t_1_st_1 t_1_st_1_obj0 = t_1_st_0_obj0;\t\t// { dg-error \"\" } \n+  t_1_st_1 t_1_st_1_obj0 = t_1_st_0_obj0;\t\t// { dg-error \"ambiguous\" } \n   t_1_st_1 t_1_st_1_obj1 = t_1_st_1 (t_1_st_0_obj0);\n }\n \n@@ -86,14 +86,14 @@ struct t_2_st_0;\n struct t_2_st_1 {\n   int member;\n \n-  t_2_st_1 (t_2_st_0);\t\t// { dg-error \"\" } candidate\n+  t_2_st_1 (t_2_st_0);\t\t// { dg-message \"note\" }\n   t_2_st_1 ();\n };\n \n struct t_2_st_0 {\n   int member;\n \n-  operator t_2_st_1 ();\t\t// { dg-error \"\" } candidate\n+  operator t_2_st_1 ();\t\t// { dg-message \"candidate\" }\n };\n \n t_2_st_0 t_2_st_0_obj0;\n@@ -104,12 +104,12 @@ void t_2_assignment ()\n   t_2_st_1 t_2_st_1_obj1;\n   t_2_st_1 t_2_st_1_obj2;\n \n-  t_2_st_1_obj0 = t_2_st_0_obj0;\t\t\t// { dg-error \"\" } caught\n+  t_2_st_1_obj0 = t_2_st_0_obj0;\t\t\t// { dg-error \"ambiguous\" } caught\n   t_2_st_1_obj1 = t_2_st_1 (t_2_st_0_obj0);\n }\n \n void t_2_local_init ()\n {\n-  t_2_st_1 t_2_st_1_obj0 = t_2_st_0_obj0;\t\t// { dg-error \"\" } \n+  t_2_st_1 t_2_st_1_obj0 = t_2_st_0_obj0;\t\t// { dg-error \"ambiguous\" } \n   t_2_st_1 t_2_st_1_obj1 = t_2_st_1 (t_2_st_0_obj0);\n }"}, {"sha": "ac2f24f60ceb9ab9e3dab2e0e5482064fd039231", "filename": "gcc/testsuite/g++.old-deja/g++.eh/ctor1.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fctor1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fctor1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fctor1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -2,15 +2,16 @@\n struct A\n {\n   A();\n-  A(A&);\t\t\t// { dg-error \"\" } referenced below\n+  A(A&);\t\t\t// { dg-message \"candidates\" } referenced below\n };\n \n int\n main ()\n {\n   try\n     {\n-      throw A();\t\t// { dg-error \"\" } can't copy\n+      throw A();\t\t// { dg-error \"no matching\" \"match\" } can't copy\n+// { dg-error \"thrown expression\" \"expr\" { target *-*-* } 13 }\n     }\n   catch (...) { }\n }"}, {"sha": "b6e7f264552339f4ea4e2a389ed46925195652ee", "filename": "gcc/testsuite/g++.old-deja/g++.eh/spec6.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fspec6.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -25,7 +25,7 @@ template<class T> void fnx(T *) throw(T){}  // { dg-error \"\" } invalid use of vo\n void fx()\n {\n   fnx((int *)0);\n-  fnx((void *)0);\t\t// { dg-error \"\" } instantiated from here\n+  fnx((void *)0);\t\t// { dg-message \"instantiated from here\" }\n }\n \n // [except.spec] 2, exception specifiers must be the same set of types (but"}, {"sha": "f7c8018ecdd21a5325b1560245d622b22f8b87fc", "filename": "gcc/testsuite/g++.old-deja/g++.ext/overload1.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Foverload1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Foverload1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ext%2Foverload1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -11,10 +11,10 @@ struct X\n {\n   X (int);\n };\n-void Foo (int, float, bool);\t// { dg-warning \"\" } candidate\n-void Foo (float, int, X);\t// { dg-warning \"\" } candidate\n+void Foo (int, float, bool);\t// { dg-message \"candidate\" }\n+void Foo (float, int, X);\t// { dg-message \"candidate\" }\n \n void Baz ()\n {\n-  Foo (1, 1, 0);    // { dg-warning \"\" } least worse\n+  Foo (1, 1, 0);    // { dg-warning \"worst\" }\n }"}, {"sha": "78e46e1cd38ac34f9c84ee3d9e06a52a8632442a", "filename": "gcc/testsuite/g++.old-deja/g++.jason/conversion11.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fconversion11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fconversion11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fconversion11.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -14,14 +14,14 @@ public:\n \n class Something {\n public:\n-  void DoSomething(Ding A);\t// { dg-error \"\" } referred to\n+  void DoSomething(Ding A);\t// { dg-message \"candidates\" } referred to\n };\n \n void DoSomething(Ding A);\n \n void foo(Something* pX)\n {\n-  DoSomething(1);\t\t// { dg-error \"\" } \n-  pX->DoSomething(1);\t\t// { dg-error \"\" } \n-  (*pX).DoSomething(1);\t\t// { dg-error \"\" } \n+  DoSomething(1);\t\t// { dg-error \"conversion\" } \n+  pX->DoSomething(1);\t\t// { dg-error \"no matching\" } \n+  (*pX).DoSomething(1);\t\t// { dg-error \"no matching\" } \n }"}, {"sha": "5d5b3af9cb4fe26e0d7e4f13cbc1c32f80a78761", "filename": "gcc/testsuite/g++.old-deja/g++.jason/crash3.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fcrash3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fcrash3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fcrash3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,11 +3,11 @@\n // and fails.\n \n struct Node\n-{\t\t\t\t// { dg-error \"\" } \n+{\t\t\t\t// { dg-message \"note\" } \n   Node* child[2];\n };\n \n void bug(int i)\n {\n-  Node* q = new Node(i);\t// { dg-error \"\" } \n+  Node* q = new Node(i);\t// { dg-error \"no matching\" } \n }"}, {"sha": "997267e724487ae1e53422bdd3998e753d33583a", "filename": "gcc/testsuite/g++.old-deja/g++.jason/lineno3.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Flineno3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Flineno3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Flineno3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -8,6 +8,7 @@ template <class T> class A\n public:\n # 200 \"lineno3.C\"\n       int foo () { undef1(); } // { dg-error \"\" \"\" { target *-*-* } 200 }\n+      // { dg-message \"note\" \"note\" { target *-*-* } 200 }\n };\n \n template class A<int>;"}, {"sha": "caa5bc216cd4fd92c0ab5ab71c5ab390f3638fc2", "filename": "gcc/testsuite/g++.old-deja/g++.jason/lineno4.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Flineno4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Flineno4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Flineno4.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -8,6 +8,7 @@ public:\n \n # 200 \"lineno4.C\"\n       int foo () { undef1(); } // { dg-error \"\" \"\" { target *-*-* } 200 }\n+      // { dg-message \"note\" \"note\" { target *-*-* } 200 }\n };\n \n template class A<int>;"}, {"sha": "7a50abb25674c099486a84e4ac462c92ca30d418", "filename": "gcc/testsuite/g++.old-deja/g++.jason/opeq3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fopeq3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fopeq3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fopeq3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -11,5 +11,5 @@ void foo ()\n {\n   int one=1, two=2;\n   X a(one), b(two);\n-  a = b;\t\t\t// { dg-error \"synthesized\" }\n+  a = b;\t\t\t// { dg-message \"synthesized\" }\n }"}, {"sha": "455376fc8812af7b9455b1907e8134c6fdba99fb", "filename": "gcc/testsuite/g++.old-deja/g++.jason/overload16.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload16.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,7 +1,7 @@\n // { dg-do assemble  }\n-void f (int);\t\t\t// { dg-error \"\" } \n-void f (long);\t\t\t// { dg-error \"\" } \n+void f (int);\t\t\t// { dg-message \"candidates\" } \n+void f (long);\t\t\t// { dg-message \"note\" } \n int main()\n {\n-  f (1 & 0xffffff00UL);\t\t// { dg-error \"\" } ambiguous\n+  f (1 & 0xffffff00UL);\t\t// { dg-error \"ambiguous\" }\n }"}, {"sha": "46bf918d047cf470a2844845ce88971550d4d9d7", "filename": "gcc/testsuite/g++.old-deja/g++.jason/overload28.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload28.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload28.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Foverload28.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -2,11 +2,11 @@\n // PRMS Id: 6056\n \n struct Foo {\n-  Foo()           { }\t\t// { dg-error \"\" } candidate\n-  Foo(int i = 25) { }\t\t// { dg-error \"\" } candidate\n+  Foo()           { }\t\t// { dg-message \"note\" }\n+  Foo(int i = 25) { }\t\t// { dg-message \"note\" }\n };\n \n int main()\n {\n-  Foo* f1 = new Foo();\t\t// { dg-error \"\" } ambiguous\n+  Foo* f1 = new Foo();\t\t// { dg-error \"ambiguous\" }\n }"}, {"sha": "26fa9432acaff2b27a4c6cceb50beb0a7265db69", "filename": "gcc/testsuite/g++.old-deja/g++.jason/pmf5.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fpmf5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fpmf5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fpmf5.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -15,4 +15,5 @@ struct ThingEntry {\n static ThingEntry KeyWordTable[] = {\n         &Thing::FunctionA,\n         Thing::OverloadFn,\n-};\t\t\t\t// { dg-warning \"\" } implicit &\n+};\t\t\t\t// { dg-error \"assuming\" \"assuming\" } implicit &\n+// { dg-message \"note\" \"note\" { target *-*-* } 18 }"}, {"sha": "d5763748f61983d45c8b257e0b734705ea65eb11", "filename": "gcc/testsuite/g++.old-deja/g++.jason/scoping10.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fscoping10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fscoping10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Fscoping10.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,7 +3,7 @@\n \n void f (char *);\n struct A {\n-  void f ();\t\t\t// { dg-error \"\" } referred to \n+  void f ();\t\t\t// { dg-message \"candidates\" } referred to \n };\n struct B : public A {\n   void g (char *);"}, {"sha": "e5d194012ea0c74a1aba6d60bbeaa62aea9fab4c", "filename": "gcc/testsuite/g++.old-deja/g++.jason/template30.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemplate30.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,14 +1,14 @@\n // { dg-do assemble  }\n template <class T, class U>    \n-int func(U, T);\t\t\t// { dg-error \"\" } ref below\n+int func(U, T);\t\t\t// { dg-message \"candidates\" }\n \n template <class T, class U>    \n-int func(T, U)\t\t\t// { dg-error \"\" } ref below\n+int func(T, U)\t\t\t// { dg-message \"note\" }\n {\n         return 2;\n }\n \n int main ()\n {\n-  func (0, 1);\t\t\t// { dg-error \"\" } ambiguous\n+  func (0, 1);\t\t\t// { dg-error \"ambiguous\" }\n }"}, {"sha": "efd09fd06b18ef6325f7f9ff5601197f14fd3159", "filename": "gcc/testsuite/g++.old-deja/g++.jason/temporary2.C", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemporary2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemporary2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftemporary2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -2,16 +2,16 @@\n class X // Indentation has been done so to see the similarities.\n {\n public:\n-  X() {}\t\t  // { dg-error \"\" } referenced below\n-         X(X& x) {x.i=7;} // { dg-error \"\" } Both functions modify the\n-  void bar(X& x) {x.i=7;} // { dg-error \"\" } reference parameter x.\n+  X() {}\t\t  // { dg-message \"note\" } referenced below\n+         X(X& x) {x.i=7;} // { dg-message \"note\" } Both functions modify the\n+  void bar(X& x) {x.i=7;} // { dg-message \"note\" } reference parameter x.\n   int i;\n };\n \n X foo() { X x; return x; }\n \n int main() \n {\n-  X   x(foo()); // { dg-error \"\" } Compiler doesn't warn about temporary reference.\n-  x.bar(foo()); // { dg-error \"\" } The same mistake is warned about in this case.\n+  X   x(foo()); // { dg-error \"no match\" } Compiler doesn't warn about temporary reference.\n+  x.bar(foo()); // { dg-error \"no match\" } The same mistake is warned about in this case.\n }"}, {"sha": "0fa6aef5f2c7a6f415b9410ec5fb3bd2f2dfa8be", "filename": "gcc/testsuite/g++.old-deja/g++.jason/tredecl4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftredecl4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftredecl4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.jason%2Ftredecl4.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -2,5 +2,5 @@\n // It is illegal to use the name of a class template for anything else,\n // including another class template.\n \n-template <class T> class A { };\t// { dg-error \"\" } \n-template <class U, class V> class A { }; // { dg-error \"\" } \n+template <class T> class A { };\t// { dg-message \"previous\" } \n+template <class U, class V> class A { }; // { dg-error \"redeclared\" } "}, {"sha": "8b117aa89168feb746d68e8caa01f694a7cd6914", "filename": "gcc/testsuite/g++.old-deja/g++.law/arg1.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -9,22 +9,22 @@\n //  check the order of declarations\n class A {\n public:\n-      void f(double* p) { std::cout << \"A(double*)\\n\"; } // { dg-error \"\" } candidate\n-      void f(int* p) { std::cout << \"A(int*)\\n\"; } // { dg-error \"\" } candidate\n+      void f(double* p) { std::cout << \"A(double*)\\n\"; } // { dg-message \"candidates\" }\n+      void f(int* p) { std::cout << \"A(int*)\\n\"; } // { dg-message \"note\" }\n };\n \n class B {\n public:\n-      void f(int* p) { std::cout << \"B(int*)\\n\"; } // { dg-error \"\" } candidate\n-      void f(double* p) { std::cout << \"B(double*)\\n\"; } // { dg-error \"\" } candidate\n+      void f(int* p) { std::cout << \"B(int*)\\n\"; } // { dg-message \"candidates\" }\n+      void f(double* p) { std::cout << \"B(double*)\\n\"; } // { dg-message \"note\" }\n };\n \n int main()\n {\n     A a;\n     B b;\n \n-    a.f(0);// { dg-error \"\" } .*\n-    b.f(0);// { dg-error \"\" } .*\n+    a.f(0);// { dg-error \"ambiguous\" }\n+    b.f(0);// { dg-error \"ambiguous\" }\n }\n "}, {"sha": "b6a0194f314d9c4399377d628ba22734ecb30285", "filename": "gcc/testsuite/g++.old-deja/g++.law/arg11.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farg11.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -9,14 +9,14 @@ struct String { String(const char*); };\n \n struct Ack { Ack(String); };\n \n-struct S { void method(Ack); };\t// { dg-error \"\" } referenced below\n+struct S { void method(Ack); };\t// { dg-message \"candidates\" } referenced below\n \n void function(Ack);\n \n int\n foo(S *o)\n { // Neither call has a usable constructor for conversions of char[5] to Ack.\n-  function(\"adsf\");// { dg-error \"\" } \n-  o->method(\"adsf\");// { dg-error \"\" } \n+  function(\"adsf\");// { dg-error \"conversion\" } \n+  o->method(\"adsf\");// { dg-error \"no matching\" } \n   return 0;\n }"}, {"sha": "7c7cfea0c8feca181d46212a1b7b3c3b172e6e33", "filename": "gcc/testsuite/g++.old-deja/g++.law/arm9.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Farm9.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -19,11 +19,11 @@ class B : public A {\n public:\n     void set (f2 f);\n };\n-void B::set (f2 f) { std::cout << \"called B\\n\";} // { dg-error \"\" } candidate\n+void B::set (f2 f) { std::cout << \"called B\\n\";} // { dg-message \"candidates\" }\n \n int main() {\n     B b;\n-    b.set(F1); // ARM page 309: should call A.set(f1) and that what g++ does,// { dg-error \"\" } .*\n+    b.set(F1); // ARM page 309: should call A.set(f1) and that what g++ does,// { dg-error \"match\" }\n                // but 13.1 of ARM clearly states that it should call B::set()\n                // or generate an error because overloading works only for\n                // functions within the same scope (first page of chapter 13)"}, {"sha": "39ee76b0ae7818dafb3b1a9102c00164ddf2a16c", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors11.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors11.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -10,12 +10,12 @@ public:\n   inline A(int x){printf(\"constructing A with %d\\n\", x);}\n };\n \n-class B:public A{ // { dg-error \"\" } non-default constructor\n+class B:public A{ // { dg-message \"note\" } non-default constructor\n private:\n public:\n };\n \n int main()\n {\n-  B(10);// { dg-error \"\" } B doesn't have a constructor taking int\n+  B(10);// { dg-error \"match\" } B doesn't have a constructor taking int\n }"}, {"sha": "3d63d01c0a9bb049568c6a0285a95affdbb44255", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors17.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors17.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors17.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors17.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -9,13 +9,13 @@\n \n #include <fstream>\n \n-class X : public std::ifstream { // { dg-error \"\" } candidate\n+class X : public std::ifstream { // { dg-message \"note\" } candidate\n     public:\n-      X(int a, const char *b) {} // { dg-error \"\" } candidate\n+      X(int a, const char *b) {} // { dg-message \"note\" } candidate\n };\n int main()\n {\n     X *y = new X(10, \"123\");\n     // the compiler must reject this constructor call:\n-    X *x = new X(\"abc\");// { dg-error \"\" } .*\n+    X *x = new X(\"abc\");// { dg-error \"match\" }\n }"}, {"sha": "02c5fb06fe4aa8e97a926d7f0cd5a1e08c6ee415", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors5.C", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors5.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -6,29 +6,31 @@\n // Date: Tue, 1 Sep 92 10:38:44 EDT\n \n class X\n-{ // { dg-error \"1: note:                 X::X\\\\(const X&\\\\)\" } implicit constructor\n+{ // { dg-message \"1:X::X\\\\(const X&\\\\)\" } implicit constructor\n   private:\n     int x;\n   public:\n     static const X x0;\n     X( int );\n };\n \n-class Y // { dg-error \"1: error: new types may not be defined in a return type|1: note: \\\\(perhaps a semicolon is missing after the definition of 'Y'\\\\)\" }\n+class Y // { dg-error \"1:new types may not be defined in a return type\" \"err\" }\n+        // { dg-message \"1:\\\\(perhaps a semicolon is missing after the definition of 'Y'\\\\)\" \"note\" { target *-*-* } 17 }\n {\n   private:\n     X xx;\n   public:\n     Y();\n }\n-X::X( int xi ) // { dg-error \"14: error: return type specification for constructor invalid|1: note: candidates are: X::X\\\\(int\\\\)\" }\n+X::X( int xi ) // { dg-error \"14:return type specification for constructor invalid\" \"err\" }\n+// { dg-message \"1:candidates are: X::X\\\\(int\\\\)\" \"note\" { target *-*-* } 25 }\n {\n     x = xi;\n }\n \n const X X::x0( 0 );\n \n-Y::Y() // { dg-error \"6: error: no matching function for call to 'X::X\\\\(\\\\)'\" }\n+Y::Y() // { dg-error \"6:no matching function for call to 'X::X\\\\(\\\\)'\" }\n {\n     xx = X::x0;\n }"}, {"sha": "17207f6acf5ac067a6ccffc996778cc2ad024cd4", "filename": "gcc/testsuite/g++.old-deja/g++.law/ctors9.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fctors9.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -21,7 +21,7 @@ Foo::Foo(int aa)\n \n \n struct var_Foo: public Foo\n-{ // { dg-error \"\" }  base.*// ERROR -  in class.*\n+{ // { dg-message \"note\" }  base.*// ERROR -  in class.*\n   var_Foo* operator-> () {return this;}\n };\n \n@@ -32,7 +32,7 @@ int blort(Foo& f)\n \n int main()\n {\n-  var_Foo b(2);// { dg-error \"\" } \n+  var_Foo b(2);// { dg-error \"match\" } \n   b->a = 0;\n   int x = blort(b);\n   return x;"}, {"sha": "742f54bc4595a7120216eb3dd617591f8dfc410d", "filename": "gcc/testsuite/g++.old-deja/g++.law/enum4.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fenum4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fenum4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fenum4.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -11,7 +11,7 @@ enum Enum {enumerator1, enumerator2};\n struct Struct\n {\n   int i;\n-      int getI(Enum) {return i;} // { dg-error \"\" } candidates\n+      int getI(Enum) {return i;} // { dg-message \"candidates\" }\n };\n \n int funct (Enum)\n@@ -23,7 +23,7 @@ int main()\n {\n   Enum e = enumerator1;\n   Struct s;\n-  int x = funct(e+1);// { dg-error \"\" } .*\n-  int y = s.getI(e+1);// { dg-error \"\" } .*\n+  int x = funct(e+1);// { dg-error \"invalid\" }\n+  int y = s.getI(e+1);// { dg-error \"match\" }\n   return x+y;\n }"}, {"sha": "5f1187a592b31e1d9acb14b72ae8d2efb0f7b27e", "filename": "gcc/testsuite/g++.old-deja/g++.law/missed-error2.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fmissed-error2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fmissed-error2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Fmissed-error2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -14,8 +14,10 @@\n #undef max\n #endif\n \n-inline int max(int a, int b) {return a > b ? a : b;}; // { dg-error \"\" } candidate\n-inline double max(double a, double b) {return a > b ? a : b;}; // { dg-error \"\" } candidate\n+inline int max(int a, int b) {return a > b ? a : b;}; // { dg-message \"candidate\" } \n+ // { dg-error \"extra ';'\" \"extra ;\" { target *-*-* } 17 }\n+inline double max(double a, double b) {return a > b ? a : b;}; // { dg-message \"note\" } candidate\n+ // { dg-error \"extra ';'\" \"extra ;\" { target *-*-* } 19 }\n \n int main() {\n    static void foo(int i, int j, double x, double y) ;// { dg-error \"\" } .*"}, {"sha": "8ec6825abfa02f995ed8f92e50c0709d1d654b8e", "filename": "gcc/testsuite/g++.old-deja/g++.law/operators9.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.law%2Foperators9.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -9,11 +9,12 @@\n class B\n {\n public:\n-      operator=(B &); // { dg-error \"\" } no type or storage class\n+      operator=(B &); // { dg-error \"no type\" }\n+      // { dg-message \"candidates\" \"note\" { target *-*-* } 12 }\n };\n \n void\n test(B &b1, const B &b2)\n {\n-        b1 = b2;// { dg-error \"\" } .*\n+        b1 = b2;// { dg-error \"match\" }\n }"}, {"sha": "f2240ddfc18c6094272f1e24412c1de63f8967d6", "filename": "gcc/testsuite/g++.old-deja/g++.mike/net2.C", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,11 +3,11 @@\n \n class B;\n \n-class A {\t\t\t// { dg-error \"\" } copy ctor candidate\n+class A {\t\t\t// { dg-message \"note\" } copy ctor candidate\n   private:\n-    A(B *);\t\t\t// { dg-error \"\" } \n+    A(B *);\t\t\t// { dg-message \"note\" } \n   public:\n-    A(long);\t\t\t// { dg-error \"\" } \n+    A(long);\t\t\t// { dg-message \"note\" } \n };\n \n-A a(0); // { dg-error \"\" } should be ambigious\n+A a(0); // { dg-error \"ambiguous\" }"}, {"sha": "e5e1cb1081d331942da73fa64e58dedb94620c04", "filename": "gcc/testsuite/g++.old-deja/g++.mike/net22.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fnet22.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,10 +5,10 @@ public:\n   Parent( char *s ) {}\n };\n \n-class Child : public Parent {\t\t// { dg-error \"\" } called\n+class Child : public Parent {\t\t// { dg-message \"note\" } called\n };\n \n int main() {\n-  Child c( \"String initializer\" );\t// { dg-error \"\" } bad\n+  Child c( \"String initializer\" );\t// { dg-error \"match\" } bad\n   return 0;\n }"}, {"sha": "746a57ccfd648a2174720730aed465f7d855270c", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p11110.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp11110.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp11110.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp11110.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -6,7 +6,7 @@ class data;\n class conatiner {\n public:\n   virtual void* first    ();\n-  virtual data* contents (void* i);     // { dg-error \"\" } candidates\n+  virtual data* contents (void* i);     // { dg-message \"candidates\" }\n };\n \n class user {\n@@ -17,5 +17,5 @@ private:\n };\n \n data* user::data1() const {\n-  return (_c.contents (_c.first));\t// { dg-error \"\" } \n+  return (_c.contents (_c.first));\t// { dg-error \"match\" } \n }"}, {"sha": "c8664390b4ad36beabe01c9c5e1210fb0f927508", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p1989.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp1989.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp1989.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp1989.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -196,7 +196,7 @@ Pix\n List_DLS<T>::search(const T& item) const\n {\n     for (Pix x=this->first(); 0 != x; this->next(x)) {\n-\tif (item == this->operator()(x)) // { dg-error \"\" } const subversion\n+\tif (item == this->operator()(x)) // { dg-error \"match\" } const subversion\n \t    return x;\n     }\n     return 0;\n@@ -485,8 +485,8 @@ class STRLIdentifier {\n     char buf[10];\n };\n \n-extern int operator==(vertex<STRLIdentifier*>&, vertex<STRLIdentifier*>&); // { dg-error \"\" } const subversion\n-extern int operator==(STRLIdentifier&, STRLIdentifier&); // { dg-error \"\" } fn ref in err msg\n+extern int operator==(vertex<STRLIdentifier*>&, vertex<STRLIdentifier*>&); // { dg-message \"candidates\" } const subversion\n+extern int operator==(STRLIdentifier&, STRLIdentifier&); // { dg-message \"note\" } fn ref in err msg\n \n extern int x(List_DLSp<STRLIdentifier *>);\n "}, {"sha": "1d5b3974f9aaa645f3105a9bd0ca2570e0ff8498", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p2431.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp2431.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp2431.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp2431.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,7 +3,7 @@\n class A\n {\n \tpublic:\n-      A(A &); // { dg-error \"\" } candidates are\n+      A(A &); // { dg-message \"candidates\" }\n };\n \n class B\n@@ -18,6 +18,6 @@ class C\n \tC()\n \t{\n \t\tB\tb;\n-\t\tA a = b;// { dg-error \"\" } \n+\t\tA a = b;// { dg-error \"match\" } \n \t}\n };"}, {"sha": "a08a404aa91cac144a103780d62c0a9b73c86045", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p438.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp438.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp438.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp438.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -12,12 +12,12 @@ class C\n class D\n {\n    public:\n-   void a(C& b); // { dg-error \"\" } referenced below\n+   void a(C& b); // { dg-message \"candidates\" }\n };\n \n void C::test() const\n {\n    D d;\n \n-   d.a(*this);\t// { dg-error \"\" } *this is const, so should get error\n+   d.a(*this);\t// { dg-error \"match\" } *this is const, so should get error\n }"}, {"sha": "83879bd7390b989fbc4369f5f0751bc4eeb56b72", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p807a.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp807a.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp807a.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp807a.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -10,13 +10,13 @@ class B;\n \n class A {\n public:\n-\tA(B&);\t\t\t// { dg-error \"\" } fn ref in err msg\n+\tA(B&);\t\t\t// { dg-message \"note\" } fn ref in err msg\n };\n \n class B {\n public:\n-\toperator A();\t\t// { dg-error \"\" } fn ref in err msg\n+\toperator A();\t\t// { dg-message \"candidates\" } fn ref in err msg\n };\n \n B b;\n-A a = b;  // { dg-error \"\" } should fail as it is ambigious.\n+A a = b;  // { dg-error \"ambiguous\" } should fail as it is ambigious."}, {"sha": "aff4a6a7bc70e77d8065609ee9362478b40578be", "filename": "gcc/testsuite/g++.old-deja/g++.mike/p9068.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp9068.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp9068.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.mike%2Fp9068.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -2,7 +2,7 @@\n // prms-id: 9068\n \n struct ostream {\n-  void operator<< (int);\t// { dg-error \"\" } fn ref in err msg\n+  void operator<< (int);\t// { dg-message \"candidates\" } fn ref in err msg\n };\n \n class C {\n@@ -13,7 +13,7 @@ public:\n \n void foo (ostream& lhs, const C& rhs)\n {\n-  lhs << rhs.i;\t\t// { dg-error \"\" } no such i for any opr << ()\n+  lhs << rhs.i;\t\t// { dg-error \"match\" } no such i for any opr << ()\n }\n \n int& C::i () {"}, {"sha": "17eaf0743fc0ffb5c0685aec6097ae50c66bd133", "filename": "gcc/testsuite/g++.old-deja/g++.niklas/t120.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft120.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft120.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft120.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -2,4 +2,5 @@\n // GROUPS passed niklas ellipsis\n typedef void (*T) (...);\n void f ();\n-struct S { void g (T); void h() { g(f); } };// { dg-error \"\" } \n+struct S { void g (T); void h() { g(f); } };// { dg-error \"match\" \"match\" } \n+// { dg-message \"candidates\" \"note\" { target *-*-* } 5 }"}, {"sha": "cf3373964a224801f298ebdca233c9aa95d8fd6d", "filename": "gcc/testsuite/g++.old-deja/g++.niklas/t121.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft121.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft121.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft121.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,5 +1,6 @@\n // { dg-do assemble  }\n // GROUPS passed niklas ellipsis\n void f ();\n-void g1 (void (*) (...)); void h1 () { g1 (f); }// { dg-error \"\" } .*\n-struct S { void g2 (void (*) (...)); void h2 () { g2 (f); } };// { dg-error \"\" } \n+void g1 (void (*) (...)); void h1 () { g1 (f); }// { dg-error \"invalid conversion\" }\n+struct S { void g2 (void (*) (...)); void h2 () { g2 (f); } };// { dg-error \"match\" \"match\" } \n+// { dg-message \"candidates\" \"note\" { target *-*-* } 5 }"}, {"sha": "19e3ca1dab0b2d085ddfdc380b05bab95e039b3c", "filename": "gcc/testsuite/g++.old-deja/g++.niklas/t128.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft128.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft128.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.niklas%2Ft128.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,5 +1,5 @@\n // { dg-do assemble  }\n // GROUPS niklas uncaught default-construct\n struct A { A (int); };\n-struct B : A {}; // { dg-error \"\" } without ctor // ERROR - candidates\n-void f () { B (0); }// { dg-error \"\" } .*\n+struct B : A {}; // { dg-message \"note\" } without ctor // ERROR - candidates\n+void f () { B (0); }// { dg-error \"match\" } .*"}, {"sha": "85df6bd694b4a898e92be8e119a60a997e7ee0e7", "filename": "gcc/testsuite/g++.old-deja/g++.ns/overload2.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Foverload2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Foverload2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Foverload2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,13 +1,13 @@\n // { dg-do assemble  }\n namespace A{\n-  void f();   // { dg-error \"\" } .*\n+  void f();   // { dg-message \"note\" }\n }\n \n using namespace A;\n \n-void f();     // { dg-error \"\" } .*\n+void f();     // { dg-message \"note\" }\n \n void g()\n {\n-  f();        // { dg-error \"\" } ambiguous, ::f or A::f ?\n+  f();        // { dg-error \"ambiguous\" } ambiguous, ::f or A::f ?\n }"}, {"sha": "a9559c7153b6409cac6856bed67f352b0ed43588", "filename": "gcc/testsuite/g++.old-deja/g++.ns/template13.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Ftemplate13.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,7 +5,7 @@ namespace bar\n   // trick it to provide some prior declaration\n   template<class T>\n   void foo(); // { dg-error \"definition\" }\n-  template<class T>class X; // { dg-error \"note: previous declaration\" }\n+  template<class T>class X; // { dg-message \"note: previous declaration\" }\n }\n \n template <typename T>\n@@ -20,4 +20,4 @@ template<> void bar::foo<int>()     // { dg-error \"different namespace\" }\n }\n \n template<class T,class U>\n-class bar::X{};         // { dg-error \"error: redeclared with 2 template parameter\" }\n+class bar::X{};         // { dg-error \"redeclared with 2 template parameter\" }"}, {"sha": "c3425c7f290629105242387bb52f414369664a68", "filename": "gcc/testsuite/g++.old-deja/g++.ns/using12.C", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fusing12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fusing12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.ns%2Fusing12.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,17 +3,17 @@\n \n namespace foo\n {\n-  void x (bool);     // { dg-error \"\" } candidates\n-  void x (char);     // { dg-error \"\" } candidates\n-  void x (int);      // { dg-error \"\" } candidates\n-  void x (double);   // { dg-error \"\" } candidates\n+  void x (bool);     // { dg-message \"candidates\" }\n+  void x (char);     // { dg-message \"note\" } candidates\n+  void x (int);      // { dg-message \"note\" } candidates\n+  void x (double);   // { dg-message \"note\" } candidates\n }\n \n-namespace baz { void x (int); }  // { dg-error \"\" } candidates\n+namespace baz { void x (int); }  // { dg-message \"note\" }  candidates\n \n void fn (int i)\n {\n   using foo::x;\n   using baz::x;\n-  x(i); \t // { dg-error \"\" } ambiguous\n+  x(i); \t // { dg-error \"ambiguous\" }\n }"}, {"sha": "3912dbad5ed25807e7868b30be480f56a3a29f7b", "filename": "gcc/testsuite/g++.old-deja/g++.oliva/delete1.C", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fdelete1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fdelete1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Fdelete1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -29,3 +29,4 @@ struct baz : foo {\n } baz_;\n \n struct bad : baz {} bad_; // { dg-error \"\" } delete is private in vdtor\n+// { dg-message \"synthesized\" \"note\" { target *-*-* } 31 }"}, {"sha": "91b3b02a439a654c57ae513ab037eda03114b887", "filename": "gcc/testsuite/g++.old-deja/g++.oliva/overload1.C", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Foverload1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Foverload1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.oliva%2Foverload1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -6,18 +6,19 @@\n // Based on bug report by JDonner <jdonner@schedsys.com>\n \n struct foo {\n-  static int bar(); // { dg-error \"\" } candidate\n-  void bar(int); // { dg-error \"\" } candidate\n+  static int bar(); // { dg-error \"candidate\" }\n+  void bar(int); // { dg-error \"foo::bar\" }\n };\n \n /* gcc emits a hard error without -pedantic, and a warning with\n    -pedantic, even in bad1.  */\n int (*ok1)() = foo::bar;\n-void (foo::*bad1)(int) = foo::bar; // { dg-error \"\" } missing &\n+void (foo::*bad1)(int) = foo::bar; // { dg-error \"assuming pointer\" }\n+// { dg-message \"note\" \"note\" { target *-*-* } 16 }\n \n int (*ok2)() = &foo::bar; // ok\n-void (*bad2)(int) = foo::bar; // { dg-error \"\" } overload resolution fails\n+void (*bad2)(int) = foo::bar; // { dg-error \"no matches\" }\n \n void (foo::*ok3)(int) = &foo::bar; // ok\n-int (foo::*bad3)() = foo::bar; // { dg-error \"\" } overload resolution fails\n+int (foo::*bad3)() = foo::bar; // { dg-error \"no matches\" }\n "}, {"sha": "9d6af1dfe879318dd522138ef4246da6badf3e9c", "filename": "gcc/testsuite/g++.old-deja/g++.other/crash24.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash24.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash24.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash24.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -7,11 +7,12 @@ class foo {\n    friend class __iterator;\n    typedef __iterator const_iterator;\n    virtual ~foo() { }\n-   __iterator begin();\t\t\t\t// { dg-error \"\" } \n+   __iterator begin();\t\t\t\t// { dg-message \"candidates\" } \n };\n static void iteratorTest(const foo &x)\n {\n-   foo::const_iterator i = x.begin();\t\t// { dg-error \"\" } \n+   foo::const_iterator i = x.begin();\t\t// { dg-error \"incomplete type\" \"incomplete type\" } \n+   // { dg-error \"no matching\" \"no matching\" { target *-*-* } 14 }\n    for (; i; ++i)\n       *i;\n }"}, {"sha": "5460e03886fcc73c95efd1d9aa9beaeefa87e283", "filename": "gcc/testsuite/g++.old-deja/g++.other/crash25.C", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash25.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash25.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fcrash25.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -2,16 +2,17 @@\n // { dg-options \"-fshow-column\" }\n // Origin: Jakub Jelinek <jakub@redhat.com>\n \n-class X { // { dg-error \"1: error: new types may not be defined in a return type|1: note: \\\\(perhaps a semicolon is missing after the definition of 'X'\\\\)\" }\n+class X { // { dg-error \"1:new types may not be defined in a return type\" \"new types\" }\n+// { dg-message \"1:\\\\(perhaps a semicolon is missing after the definition of 'X'\\\\)\" \"note\" { target *-*-* } 5 }\n public:\n   X();\n   virtual ~X();\n }\n \n-X::x()\t// { dg-error \"6: error: no 'X X::x\\\\(\\\\)' member function declared in class 'X'\" }\n+X::x()\t// { dg-error \"6:no 'X X::x\\\\(\\\\)' member function declared in class 'X'\" }\n {\n }\n \n-X::~x()\t// { dg-error \"6: error: expected class-name before '\\\\(' token\" }\n+X::~x()\t// { dg-error \"6:expected class-name before '\\\\(' token\" }\n {\t\t\t\t\n }"}, {"sha": "bdcfcb02c6f57093644bdfbe5330395cc4ecdd90", "filename": "gcc/testsuite/g++.old-deja/g++.other/decl3.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdecl3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdecl3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fdecl3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -6,14 +6,14 @@\n \n // We should not allow arrays of abstract type. [class.abstract/2]\n \n-struct cow_t { // { dg-error \"\" } note\n-  virtual void f()=0; // { dg-error \"\" } pure\n+struct cow_t { // { dg-message \"pure\" }\n+  virtual void f()=0; // { dg-message \"note\" }\n };\n \n \n int main()\n {\n-  cow_t cow[2];  // { dg-error \"\" } abstract class\n+  cow_t cow[2];  // { dg-error \"invalid abstract type\" }\n   cow[0].f();\n   return 0;\n }"}, {"sha": "1f1f60d19c2fb26688a056804228665bd1ad35d3", "filename": "gcc/testsuite/g++.old-deja/g++.other/expr1.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fexpr1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fexpr1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fexpr1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,9 +3,9 @@\n // Simplified from bug report by Trevor Taylor <ttaylor@powerup.com.au>\n \n struct T {\n-  int operator()(int) { } // { dg-error \"\" } candidate\n+  int operator()(int) { } // { dg-message \"candidates\" }\n };\n \n int main() {\n-  T()(); // { dg-error \"\" } no such operator\n+  T()(); // { dg-error \"match\" } no such operator\n }"}, {"sha": "9a5c4ca9540d0be02079f6753b06f236a219550a", "filename": "gcc/testsuite/g++.old-deja/g++.other/overcnv2.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fovercnv2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fovercnv2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fovercnv2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -16,7 +16,9 @@ struct B : public A {\n int main()\n {\n   B b;\n-  if ((const char *)b != 0)  // { dg-warning \"\" } surprising overload resolution\n+  if ((const char *)b != 0)  // { dg-warning \"choosing 'B\" \"B\" } surprising overload resolution\n+  // { dg-warning \"for conversion\" \"conv\" { target *-*-* } 19 }\n+  // { dg-message \"note\" \"note\" { target *-*-* } 19 }\n     return 1;\n   if ((const char *)(const B)b == 0)\n     return 2;"}, {"sha": "3b0cab79fd9e4e63954b46ad43cda96fb2327e02", "filename": "gcc/testsuite/g++.old-deja/g++.other/overload11.C", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Foverload11.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Foverload11.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Foverload11.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -22,7 +22,9 @@\n \n \n void ovl (int);          // { dg-error \"\" } candidate\n+// { dg-message \"int\" \"int\" { target *-*-* } 24 }\n void ovl (float);        // { dg-error \"\" } candidate\n+// { dg-message \"float\" \"float\" { target *-*-* } 26 }\n void fn (int);\n void fna (int);\n \n@@ -72,7 +74,7 @@ int main (int argc, char **argv)\n   ptr = (argc ? fna : fn);\n   ptr = (argc ? &fna : &fn);\n   \n-  f;                // { dg-warning \"\" } not a call\n+  f;                // { dg-error \"\" } not a call\n   ovl;              // { dg-error \"\" } not suitable for overload\n   &ovl;             // { dg-error \"\" } not suitable for overload\n   (void)f;          // ok"}, {"sha": "d8568dd9b1b0df713c35b92182ab432956a5374a", "filename": "gcc/testsuite/g++.old-deja/g++.other/pmf3.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fpmf3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fpmf3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fpmf3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,7 +3,7 @@\n // Bug: g++ was crashing after giving errors.\n \n template<class T>\n-  void connect_to_method( // { dg-error \"candidates are\" }\n+  void connect_to_method( // { dg-message \"candidates are\" }\n     T *receiver,\n     void (T::*method)())\n   {}\n@@ -20,6 +20,6 @@ public:\n \n Gtk_Base::Gtk_Base()\n {\n-  connect_to_method(this,&show);   // { dg-error \"\" } invalid pmf expression\n-  connect_to_method(this,&expose); // { dg-error \"\" } invalid pmf expression\n+  connect_to_method(this,&show);   // { dg-error \"no match\" } invalid pmf expression\n+  connect_to_method(this,&expose); // { dg-error \"pointer to member\" } invalid pmf expression\n }"}, {"sha": "b04f7e2657c48a4567f4d2dfd792031842413c04", "filename": "gcc/testsuite/g++.old-deja/g++.other/ptrmem7.C", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fptrmem7.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fptrmem7.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fptrmem7.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -20,22 +20,23 @@ struct A\n void A::foo ()\n {\n   int (A::*ptr1) (int) = &A::ns;\n-  int (A::*ptr2) (int) = A::ns;           // { dg-error \"\" } not ptr mem\n-  int (A::*ptr3) (int) = &ns;             // { dg-error \"\" } not ptr mem\n-  int (A::*ptr4) (int) = ns;              // { dg-error \"\" } not ptr mem\n+  int (A::*ptr2) (int) = A::ns;           // { dg-error \"pointer to member\" \"err\" }\n+  // { dg-message \"pointer to member\" \"note\" { target *-*-* } 23 }\n+  int (A::*ptr3) (int) = &ns;             // { dg-error \"pointer to member\" \"err\" }\n+  int (A::*ptr4) (int) = ns;              // { dg-error \"pointer to member\" \"err\" }\n \n   int (*ptr5) (short) = &A::ns;\n   int (*ptr6) (short) = A::ns;\n   int (*ptr7) (short) = &ns;\n   int (*ptr8) (short) = ns;\n \n   int (A::*ptr11) (int) = &A::single;\n-  int (A::*ptr12) (int) = A::single;      // { dg-error \"\" } not ptr mem\n-  int (A::*ptr13) (int) = &single;        // { dg-error \"\" } not ptr mem\n-  int (A::*ptr14) (int) = single;         // { dg-error \"\" } not ptr mem\n+  int (A::*ptr12) (int) = A::single;      // { dg-error \"match\" }\n+  int (A::*ptr13) (int) = &single;        // { dg-error \"pointer to member\" }\n+  int (A::*ptr14) (int) = single;         // { dg-error \"match\" }\n \n-  int (A::*ptr20) (int) = &(A::ns);       // { dg-error \"\" } not ptr mem\n-  int (A::*ptr21) (int) = &(A::single);   // { dg-error \"\" } not ptr mem\n+  int (A::*ptr20) (int) = &(A::ns);       // { dg-error \"pointer to member\" }\n+  int (A::*ptr21) (int) = &(A::single);   // { dg-error \"pointer to member\" }\n \n   int (*ptr31) (short) = &A::sole;\n   int (*ptr32) (short) = A::sole;"}, {"sha": "8ed6df7863263d84fe9500cb14c0bfc74c7b853b", "filename": "gcc/testsuite/g++.old-deja/g++.other/vaarg3.C", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvaarg3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvaarg3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvaarg3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -9,19 +9,22 @@\n \n struct X {int m;};\n struct Y : X {int m;};\n-struct Z;   // { dg-error \"\" } forward decl\n+struct Z;   // { dg-error \"forward decl\" } \n void fn1(va_list args)\n {\n   int i = va_arg (args, int);\n-  Y x = va_arg (args, Y);         // { dg-warning \"\" } cannot receive\n-  Y y = va_arg (args, struct Y);  // { dg-warning \"\" } cannot receive\n-  int &r = va_arg (args, int &);  // { dg-warning \"\" } cannot receive\n+  Y x = va_arg (args, Y);         // { dg-warning \"cannot receive\" } \n+  Y y = va_arg (args, struct Y);  // { dg-warning \"cannot receive\" } \n+  int &r = va_arg (args, int &);  // { dg-warning \"cannot receive\" } \n   \n-  Z z1 = va_arg (args, Z);        // { dg-error \"\" } incomplete\n-  const Z &z2 = va_arg (args, Z);       // { dg-error \"\" } incomplete\n+  Z z1 = va_arg (args, Z);        // { dg-error \"incomplete\" } \n+  const Z &z2 = va_arg (args, Z);       // { dg-error \"incomplete\" } \n \n-  va_arg (args, char);    // { dg-error \"\" } promote\n-  va_arg (args, int []);  // { dg-error \"\" } promote\n-  va_arg (args, int ());  // { dg-error \"\" } promote\n-  va_arg (args, bool);    // { dg-error \"\" } promote\n+  va_arg (args, char);    // { dg-warning \"promote\" } \n+  // { dg-message \"should pass\" \"pass\" { target *-*-* } 23 }\n+  // { dg-message \"abort\" \"abort\" { target *-*-* } 23 }\n+  va_arg (args, int []);  // { dg-error \"array with unspecified bounds\" } promote\n+  va_arg (args, int ());  // { dg-warning \"non-POD\" } promote\n+  va_arg (args, bool);    // { dg-warning \"promote\" \"promote\" } \n+  // { dg-message \"abort\" \"abort\" { target *-*-* } 28 }\n }"}, {"sha": "9e72ea266a18726ef304c7acb2fb88b869a5f047", "filename": "gcc/testsuite/g++.old-deja/g++.other/volatile1.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvolatile1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvolatile1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fvolatile1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,7 +3,8 @@\n // compiler.\n \n class f_class\n-{ };\t\t\t\t// { dg-error \"\" } candidates\n+{ };\t\t\t\t// { dg-message \"candidates\" \"candidates\" } \n+// { dg-message \"note\" \"note\" { target *-*-* } 6 }\n \n volatile f_class\n ret_v_f_class()\n@@ -15,6 +16,6 @@ ret_v_f_class()\n int main(void)\n {\n   volatile f_class vf;\n-  0 ? ret_v_f_class() : vf;\t// { dg-error \"\" } can't copy volatile lvalue\n+  0 ? ret_v_f_class() : vf;\t// { dg-error \"match\" } can't copy volatile lvalue\n   return 0;\n }"}, {"sha": "464b7c692d0c1cdd17a3c12f5eab30525ed42d5a", "filename": "gcc/testsuite/g++.old-deja/g++.pt/assign1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fassign1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fassign1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fassign1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -10,5 +10,5 @@ struct S { // { dg-error \"assignment\" }\n void f()\n {\n   S<const int> s;\n-  s = s; // { dg-error \"synthesized\" }\n+  s = s; // { dg-message \"synthesized\" }\n }"}, {"sha": "37af9ca434e4f648f895f7150bd754aed1f245f6", "filename": "gcc/testsuite/g++.old-deja/g++.pt/auto_ptr.C", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fauto_ptr.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fauto_ptr.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fauto_ptr.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -9,9 +9,9 @@ template<typename X> struct auto_ptr {\n    typedef X element_type;\n \n    explicit auto_ptr(X* p =0) throw() : px(p) {}\n-   auto_ptr(auto_ptr& r) throw() : px(r.release()) {} // { dg-error \"\" } candidate\n+   auto_ptr(auto_ptr& r) throw() : px(r.release()) {} // { dg-message \"note\" } candidate\n    template<typename Y>\n-      auto_ptr(auto_ptr<Y>& r) throw() : px(r.release()) {}// { dg-error \"\" } candidate\n+      auto_ptr(auto_ptr<Y>& r) throw() : px(r.release()) {}// { dg-message \"note\" } candidate\n \n    auto_ptr& operator=(auto_ptr& r) throw() { \n       reset(r.release()); \n@@ -30,7 +30,7 @@ template<typename X> struct auto_ptr {\n    X* release() throw() { X* p=px; px=0; return p; }\n    void reset(X* p=0) throw() { if (px != p) delete px, px = p; }\n \n-   auto_ptr(auto_ptr_ref<X> r) throw() : px(r.py) {} // { dg-error \"\" } candidate\n+   auto_ptr(auto_ptr_ref<X> r) throw() : px(r.py) {} // { dg-message \"candidate\" } \n    template<typename Y> operator auto_ptr_ref<Y>() throw() {\n       return auto_ptr_ref<Y>(release()); \n    }\n@@ -51,5 +51,6 @@ int main() {\n     auto_ptr<Derived> y(f());\n     x = y;\n     g(f());\n-    h(f());\t\t\t// { dg-error \"\" } no usable copy ctor\n+    h(f());\t\t\t// { dg-error \"match\" \"match\" } no usable copy ctor\n+// { dg-error \"initializing\" \"init\" { target *-*-* } 54 }\n }"}, {"sha": "2666b9bc1f78b41541657e2f11c4f049963b51c9", "filename": "gcc/testsuite/g++.old-deja/g++.pt/const2.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fconst2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fconst2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fconst2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,6 +1,6 @@\n // { dg-do link }\n // This test should get a linker error for the reference to A<int>::i.\n-// { dg-error \"i\" \"\" { target *-*-* } 0 }\n+// { dg-message \"i\" \"\" { target *-*-* } 0 }\n \n template <class T> struct B { static const int i = 3; };\n template <class T> struct A { static const int i = B<T>::i; };"}, {"sha": "a66450f45201baffb5c599afadf3435fbd9de9f0", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash10.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash10.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,9 +3,10 @@\n template<int M, int N>\n class GCD {\n public:\n-  enum { val = (N == 0) ? M : GCD<N, M % N>::val }; // { dg-error \"\" } division\n+  enum { val = (N == 0) ? M : GCD<N, M % N>::val }; // { dg-warning \"division\" \"division\" }\n+// { dg-error \"not a valid\" \"valid\" { target *-*-* } 6 }\n };\n \n int main() {\n-  GCD< 1, 0 >::val; // { dg-error \"\" } instantiated\n+  GCD< 1, 0 >::val; // { dg-message \"instantiated\" }\n }"}, {"sha": "0a3220921ce80c3cf0f702ef58001a6ff54d142e", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash20.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash20.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash20.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash20.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,7 +1,8 @@\n // { dg-do compile  }\n \n template <class T = int>\n-struct A { // { dg-error \"assignment\" }\n+struct A { // { dg-error \"assignment\" \"assignment\" }\n+// { dg-message \"instantiated\" \"inst\" { target *-*-* } 4 }\n   const T x;\n   A() : x(0) { } A(T x) : x(x) { }\n }; \n@@ -10,7 +11,7 @@ template <class B>\n void func ()\n {\n   B y; \n-  y = B();  // { dg-error \"synthesized\" }\n+  y = B();  // { dg-message \"synthesized\" }\n }\n \n int main (void) { func< A<> >(); }"}, {"sha": "9bf99d16280794979d40c628e39677e447d9d6c4", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash36.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash36.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash36.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash36.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -14,7 +14,7 @@ struct iterator {\n \n template <class Iterator>\n struct reverse_iterator : public\n-iterator<typename iterator_traits<Iterator>::iterator_category> { // { dg-error \"\" } no type iterator_category\n+iterator<typename iterator_traits<Iterator>::iterator_category> { // { dg-message \"instantiated\" } no type iterator_category\n   protected:\n   Iterator current;\n   "}, {"sha": "4fc658eb157009dd3e1fb1a068d93364e2842bb8", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash38.C", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash38.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash38.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash38.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -3,8 +3,10 @@\n \n template <class T>\n struct S {\n-  typedef typename T::Y<T>::Z X; // { dg-error \"\" } No Y in A\n-  X x; // { dg-error \"\" } No Y in A\n+  typedef typename T::Y<T>::Z X; // { dg-error \"non-template\" \"non-template\" } No Y in A\n+// { dg-message \"note\" \"note\" { target *-*-* } 6 }\n+// { dg-error \"does not declare\" \"not declare\" { target *-*-* } 6 }\n+  X x; // { dg-error \"does not name a type\" } No Y in A\n };\n \n struct A {"}, {"sha": "2c560492325340b4a94693b934bce49a1c608d76", "filename": "gcc/testsuite/g++.old-deja/g++.pt/derived3.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fderived3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fderived3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fderived3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -6,11 +6,11 @@\n template<class T>\n class X {\n \tclass Y : public T\n-\t{ // { dg-error \"base type .* fails to be\" \"\" }\n+\t{ // { dg-error \"base type .* fails to be\" }\n \t};\n-\tY y;\t\t\t// { dg-error \"instantiated\" \"\" }\n+\tY y;\t\t\t// { dg-message \"instantiated\" }\n };\n int main() {\n-\tX<int> x;\t\t// { dg-error \"instantiated\" \"\" }\n+\tX<int> x;\t\t// { dg-message \"instantiated\" }\n }\n "}, {"sha": "6cb67ddec6bb64a2fca939fa50fe54a905ee4b83", "filename": "gcc/testsuite/g++.old-deja/g++.pt/error2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ferror2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ferror2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ferror2.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -4,12 +4,12 @@\n template <class RT>\n class Test {\n public:\n-  Test(const RT& c = RT()) {} // { dg-error \"\" } reference to void\n+  Test(const RT& c = RT()) {} // { dg-error \"reference to void\" } \n };\n \n void f ()\n {\n-  Test<void> c; // { dg-error \"\" } instantiated from here\n+  Test<void> c; // { dg-message \"instantiated\" }\n }\n \n "}, {"sha": "ea32cf6ea9e4b68fe6c47d33cff017504799b5bf", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit34.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit34.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit34.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit34.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,7 +5,7 @@ template <class T>\n void foo(T t);\n \n template <>\n-void foo(int) {}; // { dg-error \"6:\" } previously defined here.\n+void foo(int) {}; // { dg-error \"6:previously declared here\" }\n \n template <>\n-void foo<int>(int) {} // { dg-error \"6:\" } duplicate specialization.\n+void foo<int>(int) {} // { dg-error \"6:redefinition\" }"}, {"sha": "5724f6d7d02f6db305e86e29d81cc4cc86831df1", "filename": "gcc/testsuite/g++.old-deja/g++.pt/explicit70.C", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit70.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit70.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fexplicit70.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -12,14 +12,14 @@ template <class T>\n T S<T>::t;\n \n template void f(int);\n-template void f(int); // { dg-error \"\" } duplicate explicit instantiation \n+template void f(int); // { dg-error \"duplicate explicit instantiation\" } \n template int S<int>::t;\n-template int S<int>::t; // { dg-error \"\" } duplicate explicit instantiation \n+template int S<int>::t; // { dg-error \"duplicate explicit instantiation\" } \n template class S<double>;\n-template class S<double>; // { dg-error \"\" } duplicate explicit instantiation \n+template class S<double>; // { dg-error \"duplicate explicit instantiation\" } \n \n-extern template void f(double); // { dg-warning \"\" } extern not allowed\n-inline template class S<float>; // { dg-warning \"\" } inline not allowed\n+extern template void f(double); // { dg-error \"extern\" } extern not allowed\n+inline template class S<float>; // { dg-error \"inline\" } inline not allowed\n \n template <class T>\n struct S<T*> {};\n@@ -40,4 +40,5 @@ template void f(long double); // OK - explicit instantiation after\n template <class T>\n void g(T);\n \n-template void g(int); // { dg-error \"\" } no definition of g.\n+template void g(int); // { dg-error \"no definition available\" \"no def\" }\n+// { dg-message \"instantiated\" \"inst\" { target *-*-* } 43 }"}, {"sha": "93ce72e3025dd22bc4abd28a546fc39cc2d42674", "filename": "gcc/testsuite/g++.old-deja/g++.pt/friend23.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ffriend23.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,6 +1,6 @@\n // { dg-do assemble  }\n \n-template <class T = int> // { dg-error \"note: original definition\" }\n+template <class T = int> // { dg-message \"note: original definition\" }\n struct S\n { \n   template <class U = int>"}, {"sha": "015566f96a4a5ad83c0b59add2967dc73798741d", "filename": "gcc/testsuite/g++.old-deja/g++.pt/ptrmem10.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem10.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem10.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fptrmem10.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -15,13 +15,13 @@ struct A\n   void baz ();\n };\n \n-template <typename T> void foo (int (*)(T));      // { dg-error \"\" } candidate\n-template <typename T> void foo (int (A::*)(T));   // { dg-error \"\" } candidate\n+template <typename T> void foo (int (*)(T));      // { dg-message \"candidate\" } \n+template <typename T> void foo (int (A::*)(T));   // { dg-message \"note\" } candidate\n \n \n void A::baz ()\n {\n-  foo (&A::f);  // { dg-error \"\" } ambiguous\n+  foo (&A::f);  // { dg-error \"ambiguous\" } \n   foo (A::f);\n   foo (&(A::f));\n   foo (f);"}, {"sha": "4a580e177424050f9a99c5a8723d2861a1b3d7df", "filename": "gcc/testsuite/g++.old-deja/g++.pt/redecl1.C", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fredecl1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fredecl1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fredecl1.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,22 +1,22 @@\n // { dg-do assemble  }\n \n template <class T>\n-struct S1; // { dg-error \"\" } previous declaration\n+struct S1; // { dg-message \"previous declaration\" } \n \n template <class T, class U>\n-struct S1 {}; // { dg-error \"\" } used 1 template parameter\n+struct S1 {}; // { dg-error \"redeclared\" } used 1 template parameter\n \n-template <class T = int> // { dg-error \"\" } original def of default\n+template <class T = int> // { dg-message \"original definition\" }\n struct S2; \n \n template <class T = int>\n-struct S2; // { dg-error \"\" } redefinition of default\n+struct S2; // { dg-error \"redefinition of default\" } \n \n-template <class T> // { dg-error \"\" } template parameter\n+template <class T> // { dg-error \"template parameter\" } \n struct S3;\n \n template <int I>\n-struct S3; // { dg-error \"\" } redeclared here\n+struct S3; // { dg-error \"redeclared here\" } \n \n template <template <class T> class C>\n-struct S3; // { dg-error \"\" } redeclared here\n+struct S3; // { dg-error \"redeclared here\" } "}, {"sha": "a7e5ea252a95a66dd9bd7f8ba655c2bd4b138efb", "filename": "gcc/testsuite/g++.old-deja/g++.pt/spec35.C", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec35.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec35.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fspec35.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -8,24 +8,24 @@\n \n extern \"C\" int puts (char const *);\n \n-template <typename T> int Foo (T);    // { dg-error \"\" } candidate\n-template <typename T> int Foo (T &);  // { dg-error \"\" } candidate\n+template <typename T> int Foo (T);    // { dg-message \"candidate\" } \n+template <typename T> int Foo (T &);  // { dg-message \"note\" } candidate\n \n-template <typename T> int Qux (T);    // { dg-error \"\" } candidate\n-template <typename T> int Qux (T const &);  // { dg-error \"\" } candidate\n+template <typename T> int Qux (T);    // { dg-message \"candidate\" } \n+template <typename T> int Qux (T const &);  // { dg-message \"note\" } candidate\n \n-template <typename T> int Bar (T const *const &); // { dg-error \"\" } candidate\n-template <typename T> int Bar (T *const &);       // { dg-error \"\" } candidate\n-template <typename T> int Bar (T *);              // { dg-error \"\" } candidate\n+template <typename T> int Bar (T const *const &); // { dg-message \"candidate\" } \n+template <typename T> int Bar (T *const &);       // { dg-message \"note\" } candidate\n+template <typename T> int Bar (T *);              // { dg-message \"note\" } candidate\n \n-template <typename T> int Baz (T *const &);       // { dg-error \"\" } candidate\n-template <typename T> int Baz (T *);              // { dg-error \"\" } candidate\n+template <typename T> int Baz (T *const &);       // { dg-message \"candidate\" } \n+template <typename T> int Baz (T *);              // { dg-message \"note\" } candidate\n \n int Baz (int const *ptr, int *ptr2)\n {\n-  Baz (ptr2);   // { dg-error \"\" } ambiguous\n-  Bar (ptr2);   // { dg-error \"\" } ambiguous\n-  Foo (ptr2);   // { dg-error \"\" } ambiguous\n-  Qux (ptr2);   // { dg-error \"\" } ambiguous\n+  Baz (ptr2);   // { dg-error \"ambiguous\" } \n+  Bar (ptr2);   // { dg-error \"ambiguous\" } \n+  Foo (ptr2);   // { dg-error \"ambiguous\" } \n+  Qux (ptr2);   // { dg-error \"ambiguous\" } \n   return 0;\n }"}, {"sha": "38488d2c0ac9d733d81c8fbd50862c005158cf12", "filename": "gcc/testsuite/g++.old-deja/g++.pt/t05.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft05.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft05.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ft05.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -1,9 +1,9 @@\n // { dg-do assemble  }\n \n-template <class A> class B {    // { dg-error \"\" } candidates\n+template <class A> class B {    // { dg-message \"note\" } \n   A a;                          \n  public:\n-  B(A&aa);\t\t\t// { dg-error \"\" } near match\n+  B(A&aa);\t\t\t// { dg-message \"candidates\" }\n   ~B();\n };\n-static B<int> b_int (3);\t// { dg-error \"\" } no matching function\n+static B<int> b_int (3);\t// { dg-error \"no matching function\" } "}, {"sha": "9b412756b42771b8d49bd6f922bbd5323c27325d", "filename": "gcc/testsuite/g++.old-deja/g++.pt/typename3.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -11,10 +11,11 @@ struct A\n template <class U>\n struct B : public A<U>\n {\n-  A_Type Func(); // { dg-warning \"\" } implicit typename\n+  A_Type Func(); // { dg-error \"does not name a type\" \"err\" } implicit typename\n+  // { dg-message \"note\" \"note\" { target *-*-* } 14 }\n };\n \n \n template <class U>\n-B<U>::A_Type B<U>::Func() { // { dg-warning \"\" } implicit typename\n+B<U>::A_Type B<U>::Func() { // { dg-error \"expected\" } implicit typename\n }"}, {"sha": "27944795ae29d3d5dcda6033438aecba4dd35a23", "filename": "gcc/testsuite/g++.old-deja/g++.pt/typename6.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Ftypename6.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -10,10 +10,11 @@ struct A\n template <class U>\n struct B : public A<U>\n {\n-  A_Type Func();\t\t// { dg-error \"\" } declaration\n+  A_Type Func();\t\t// { dg-error \"does not name a type\" \"err\" }\n+  // { dg-message \"note\" \"note\" { target *-*-* } 13 }\n };\n \n template <class U>\n-A<U>::A_Type B<U>::Func()       // { dg-error \"\" } function\n+A<U>::A_Type B<U>::Func()       // { dg-error \"expected\" } function\n {\t\t\t\t\n }"}, {"sha": "92cd191deb0b1ad7581074a42caf199a94fb2b13", "filename": "gcc/testsuite/g++.old-deja/g++.pt/unify8.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify8.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify8.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Funify8.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -10,11 +10,11 @@\n \n template <typename T> void Foo (T const **);\n template <typename T> void Bar (T const * const *);\n-void Foo (int);       // { dg-error \"\" } candidate\n-void Foo (float);     // { dg-error \"\" } candidate\n+void Foo (int);       // { dg-message \"candidate\" } \n+void Foo (float);     // { dg-message \"note\" } candidate\n \n void baz (int **p1)\n {\n-  Foo (p1);   // { dg-error \"\" } no such function\n+  Foo (p1);   // { dg-error \"match\" } no such function\n   Bar (p1);   // OK\n }"}, {"sha": "dced89d17ab85a80c45674db643548638f2d2811", "filename": "gcc/testsuite/g++.old-deja/g++.pt/vaarg3.C", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fvaarg3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fvaarg3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fvaarg3.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -14,13 +14,14 @@ void PrintArgs (Type somearg, ...)\n va_list argp;\n va_start (argp, somearg);\n Type value;\n-value = va_arg (argp, Type); // { dg-error \"\" } cannot pass non-POD\n+value = va_arg (argp, Type); // { dg-warning \"non-POD\" } cannot pass non-POD\n va_end (argp);\n }\n \n int main (void)\n {\n A dummy;\n-PrintArgs (dummy, dummy); // { dg-error \"\" } cannot pass non-POD\n+PrintArgs (dummy, dummy); // { dg-warning \"non-POD\" } cannot pass non-POD\n+// { dg-message \"instantiated\" \"inst\" { target *-*-* } 24 }\n return 0;\n }"}, {"sha": "5a70e194439e3d17d4a972576e7da53c8749da06", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb109.C", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb109.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb109.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb109.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -20,7 +20,7 @@ inline istream& operator>>(istream& is, Empty& ) { return is;}\n \n template<class VertexType, class EdgeType>\n class Graph\n-{  // { dg-error \"\" } candidates\n+{  // { dg-message \"note\" } candidates\n   public:\n     // public type interface\n     typedef std::map<int, EdgeType > Successor;\n@@ -42,18 +42,18 @@ template<class VertexType, class EdgeType>\n ostream& operator<<(ostream& os, Graph<VertexType,EdgeType>& G)\n {\n     // display of vertices with successors\n-  for(int i = 0; i < G.size(); ++i)  // { dg-error \"\" } no size function\n+  for(int i = 0; i < G.size(); ++i)  // { dg-error \"no member\" } no size function\n     {\n-      os << G[i].first << \" <\";      // { dg-error \"\" } no index operator\n+      os << G[i].first << \" <\";      // { dg-error \"no match\" } no index operator\n \n         // The compiler does not like this line!!!!!!\n         typename Graph<VertexType, EdgeType>::Successor::iterator\n-\t  startN = G[i].second.begin(), // { dg-error \"\" } no index operator\n-\t  endN   = G[i].second.end();  // { dg-error \"\" } no index operator\n+\t  startN = G[i].second.begin(), // { dg-error \"no match\" } no index operator\n+\t  endN   = G[i].second.end();  // { dg-error \"no match\" } no index operator\n \n         while(startN != endN)\n         {\n-            os << G[(*startN).first].first << ' ' // { dg-error \"\" } no index operator\n+            os << G[(*startN).first].first << ' ' // { dg-error \"no match\" } no index operator\n                << (*startN).second << ' ';\n             ++startN;\n         }\n@@ -65,7 +65,7 @@ ostream& operator<<(ostream& os, Graph<VertexType,EdgeType>& G)\n int main()\n {\n     // no edge weighting, therefore type Empty:\n-    Graph<std::string, Empty> V(true);        // { dg-error \"\" } no bool constructor\n+    Graph<std::string, Empty> V(true);        // { dg-error \"no match\" } no bool constructor\n     // ReadGraph(V, \"gra1.dat\");\n \n     // display of vertices with successors"}, {"sha": "75341d4148a35f1c2e4747b4aedcc6e0616d8cb6", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb131.C", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb131.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb131.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb131.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -10,11 +10,11 @@ struct a {\n \tvoid bar( double );\n \tvoid bar( float );\n \n-  void foo( void (a::*member)(float) );   // { dg-error \"\" } candidate\n+  void foo( void (a::*member)(float) );   // { dg-message \"candidate\" } \n };\n \n a::a()\n {\n-\tfoo( &junk ); // { dg-error \"\" } junk is an unqualified-id.\n-\tfoo( &bar );  // { dg-error \"\" } bar is an unqualified-id.\n+\tfoo( &junk ); // { dg-error \"match\" } junk is an unqualified-id.\n+\tfoo( &bar );  // { dg-error \"match\" } bar is an unqualified-id.\n }"}, {"sha": "28953b05b4ec7fae6df08ec14d4685fd7ef3b2a1", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb22.C", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb22.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb22.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb22.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -11,17 +11,18 @@ public:\n         operator int() const {return 2;}\n };\n \n-bool operator==(const MyInt& a, const int& b)   // { dg-error \"\" } candidate\n+bool operator==(const MyInt& a, const int& b)   // { dg-message \"note\" } candidate\n {\n         return (int)a == b;\n }\n \n-bool operator==(const MyInt& a, const MyInt& b) // { dg-error \"\" } candidate\n+bool operator==(const MyInt& a, const MyInt& b) // { dg-message \"note\" } candidate\n {\n         return (int)a == (int)b;\n }\n \n bool f()\n {\n-  return 3 == MyInt();                          // { dg-error \"\" } ambiguous\n+  return 3 == MyInt();                          // { dg-error \"ambiguous\" \"err\" } \n+  // { dg-message \"candidates\" \"note\" { target *-*-* } 26 }\n }"}, {"sha": "5f82e1fc9264b6089e561b1c68f2bcaad2f5b83b", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb4.C", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb4.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -7,7 +7,7 @@ class some_base\n         {\n public:\n         class base_func_args;\n-        virtual void func(base_func_args &) = 0; // { dg-error \"\" } referenced below\n+        virtual void func(base_func_args &) = 0; // { dg-message \"note\" } referenced below\n         };\n \n class some_base::base_func_args\n@@ -17,7 +17,7 @@ public:\n         };\n \n class some_derived : public some_base\n-        {  // { dg-error \"\" } note\n+        {  // { dg-message \"note\" }\n public:\n         class derived_func_args;\n         void func(derived_func_args &);\n@@ -30,20 +30,21 @@ public:\n         float f;\n         };\n \n-class some_derived::func(derived_func_args &a)  // { dg-error \"\" } illegal member syntax\n+class some_derived::func(derived_func_args &a)  // { dg-error \"does not name a type\" \"type\" } illegal member syntax\n+// { dg-error \"expected\" \"exp\" { target *-*-* } 33 }\n         {\n         std::cout << a.i << ' ' << a.f << std::endl;\n         }\n \n int\n main()\n         {\n-\tsome_derived d;                     // { dg-error \"\" } abstract class\n-        some_derived::derived_func_args dfa; // { dg-error \"\" } incomplete class\n+\tsome_derived d;                     // { dg-error \"abstract type\" } \n+        some_derived::derived_func_args dfa; // { dg-error \"incomplete type\" } \n         some_base *b = &d;\n \n         dfa.i = 10;\n         dfa.f = 20;\n-        b->func(dfs);                       // { dg-error \"\" } dfs not declared\n+        b->func(dfs);                       // { dg-error \"'dfs' was not declared\" } \n         return 0;\n         }"}, {"sha": "a7e61804cb1a3c504a5dc9851a8f18e888c8ec87", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb44.C", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb44.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb44.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb44.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -14,7 +14,8 @@ using namespace std;\n template <class T>\n class Vector\n {\n-  friend ostream& operator<< (ostream& out, const Vector<T> & vec); // { dg-warning \"\" } \n+  friend ostream& operator<< (ostream& out, const Vector<T> & vec); // { dg-warning \"non-template\" \"warn\" } \n+  // { dg-message \"note\" \"note\" { target *-*-* } 17 }\n };\n \n template <class T>"}, {"sha": "74051a148ade66325a56706a622526d9e0ba4242", "filename": "gcc/testsuite/g++.old-deja/g++.robertl/eb69.C", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb69.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb69.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.robertl%2Feb69.C?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -5,13 +5,14 @@\n \n int r = 0;\n \n-struct foo {\t\t        // { dg-error \"\" } candidate\n-  foo(int x) { r = 1; }\t\t// { dg-error \"\" } candidate\n+struct foo {\t\t        // { dg-message \"note\" } candidate\n+  foo(int x) { r = 1; }\t\t// { dg-message \"candidate\" }\n };\n \n struct bar : foo {\n   typedef int an_int;\n-  bar() : bar::an_int(3) {}\t// { dg-error \"\" } not a base\n+  bar() : bar::an_int(3) {}\t// { dg-error \"match\" \"match\" } not a base\n+  // { dg-message \"expected\" \"exp\" { target *-*-* } 14 }\n };\n \n int"}, {"sha": "07f1c504eb226776cd3e48c3e4955de758052992", "filename": "gcc/testsuite/lib/g++.exp", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48ca24b27a247da85e83945702b547e5241f14ad/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fg%2B%2B.exp?ref=48ca24b27a247da85e83945702b547e5241f14ad", "patch": "@@ -185,6 +185,8 @@ proc g++_init { args } {\n     global GXX_UNDER_TEST\n     global TESTING_IN_BUILD_TREE\n     global target_triplet\n+    global gcc_warning_prefix\n+    global gcc_error_prefix\n \n     # We set LC_ALL and LANG to C so that we get the same error messages as expected.\n     setenv LC_ALL C\n@@ -247,6 +249,9 @@ proc g++_init { args } {\n     # error-message parsing machinery.\n     lappend ALWAYS_CXXFLAGS \"additional_flags=-fmessage-length=0\"\n \n+    set gcc_warning_prefix \"warning:\"\n+    set gcc_error_prefix \"error:\"\n+\n     if { [string match \"*-*-darwin*\" $target_triplet] } {\n \tlappend ALWAYS_CXXFLAGS \"ldflags=-multiply_defined suppress\"\n        }"}]}