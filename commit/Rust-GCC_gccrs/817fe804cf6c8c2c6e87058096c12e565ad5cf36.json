{"sha": "817fe804cf6c8c2c6e87058096c12e565ad5cf36", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE3ZmU4MDRjZjZjOGMyYzZlODcwNTgwOTZjMTJlNTY1YWQ1Y2YzNg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-12-03T09:26:03Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-12-03T09:26:03Z"}, "message": "re PR libstdc++/12791 (_M_extract_num returns a wrong __beg in case of error)\n\n2003-12-03  Paolo Carlini  <pcarlini@suse.de>\n\n\tPR libstdc++/12791\n\t* include/bits/locale_facets.tcc (time_get::_M_extract_num):\n\tRewrite, stop the parsing as soon as a digit cannot possibly\n\tlead to a final number within the bounds; otherwise, simplify,\n\tavoiding __ctype.is() and atoi().\n\t* testsuite/22_locale/time_get/get_date/char/12791.cc: New.\n\t* testsuite/22_locale/time_get/get_date/wchar_t/12791.cc: New.\n\n\t* include/bits/locale_facets.tcc (time_get::_M_extract_via_format):\n\tMinor tweak: a 4-digit integer cannot be bigger than 9999.\n\n\t* testsuite/22_locale/time_get/get_date/wchar_t/1.cc: Use\n\ttype-correct wchar_t string literals.\n\t* testsuite/22_locale/time_get/get_monthname/wchar_t/1.cc: Ditto.\n\t* testsuite/22_locale/time_get/get_time/wchar_t/1.cc: Ditto.\n\t* testsuite/22_locale/time_get/get_weekday/wchar_t/1.cc: Ditto.\n\t* testsuite/22_locale/time_get/get_year/wchar_t/1.cc: Ditto.\n\nFrom-SVN: r74222", "tree": {"sha": "d545473e5ffb3f7075a188c171bb88f2f686742d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d545473e5ffb3f7075a188c171bb88f2f686742d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/817fe804cf6c8c2c6e87058096c12e565ad5cf36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/817fe804cf6c8c2c6e87058096c12e565ad5cf36", "html_url": "https://github.com/Rust-GCC/gccrs/commit/817fe804cf6c8c2c6e87058096c12e565ad5cf36", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/817fe804cf6c8c2c6e87058096c12e565ad5cf36/comments", "author": null, "committer": null, "parents": [{"sha": "85b89471388e7ddb0023f16ca96c1572f999d8c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/85b89471388e7ddb0023f16ca96c1572f999d8c5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/85b89471388e7ddb0023f16ca96c1572f999d8c5"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "782b4e70d34fac0aea806289533afdbc6fa1a0cd", "filename": "libstdc++-v3/testsuite/22_locale/time_get/get_weekday/wchar_t/1.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/817fe804cf6c8c2c6e87058096c12e565ad5cf36/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fwchar_t%2F1.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/817fe804cf6c8c2c6e87058096c12e565ad5cf36/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fwchar_t%2F1.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F22_locale%2Ftime_get%2Fget_weekday%2Fwchar_t%2F1.cc?ref=817fe804cf6c8c2c6e87058096c12e565ad5cf36", "patch": "@@ -85,7 +85,7 @@ void test01()\n   tim_get.get_weekday(is_it03, end, iss, errorstate, &time03);\n   VERIFY( time03.tm_wday == time_bday.tm_wday );\n   VERIFY( errorstate == good );\n-  VERIFY( *is_it03 == ' ');\n+  VERIFY( *is_it03 == L' ' );\n \n   iss.str(L\"San\");\n   iterator_type is_it04(iss);\n@@ -94,7 +94,7 @@ void test01()\n   errorstate = good;\n   tim_get.get_weekday(is_it04, end, iss, errorstate, &time04);\n   VERIFY( time04.tm_wday == 4 );\n-  VERIFY( *is_it04 == 'n');\n+  VERIFY( *is_it04 == L'n' );\n   VERIFY( errorstate == ios_base::failbit );\n \n   iss.str(L\"Tuesday \");\n@@ -104,7 +104,7 @@ void test01()\n   tim_get.get_weekday(is_it05, end, iss, errorstate, &time05);\n   VERIFY( time05.tm_wday == 2 );\n   VERIFY( errorstate == good );\n-  VERIFY( *is_it05 == ' ');\n+  VERIFY( *is_it05 == L' ' );\n \n   iss.str(L\"Tuesducky \"); // Kind of like Fryday, without the swirls.\n   iterator_type is_it06(iss);\n@@ -114,7 +114,7 @@ void test01()\n   tim_get.get_weekday(is_it06, end, iss, errorstate, &time06);\n   VERIFY( time06.tm_wday == 4 );\n   VERIFY( errorstate == ios_base::failbit );\n-  VERIFY( *is_it05 == 'u');\n+  VERIFY( *is_it05 == L'u' );\n }\n \n int main()"}]}