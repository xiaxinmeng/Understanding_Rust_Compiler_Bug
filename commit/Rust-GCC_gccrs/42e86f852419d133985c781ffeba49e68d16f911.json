{"sha": "42e86f852419d133985c781ffeba49e68d16f911", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDJlODZmODUyNDE5ZDEzMzk4NWM3ODFmZmViYTQ5ZTY4ZDE2ZjkxMQ==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-08-18T16:26:12Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1993-08-18T16:26:12Z"}, "message": "pa.md (zero_extendqihi2): No need to explicitly set a length, the defaults are correct.\n\n        * pa.md (zero_extendqihi2): No need to explicitly set a length,\n        the defaults are correct.\n        (zero_extendqisi2, floatsisf2, floatsidf2): Likewise.\n        (floatdisf2, floatdidf2, fix_truncsfsi2): Likewise.\n        (fix_truncdfsi2, fix_truncsfdi2, fix_truncdfdi2): Likewise.\n\nFrom-SVN: r5181", "tree": {"sha": "607a03d96eb1b872b080ddbe087131f6232f24e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/607a03d96eb1b872b080ddbe087131f6232f24e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/42e86f852419d133985c781ffeba49e68d16f911", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42e86f852419d133985c781ffeba49e68d16f911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/42e86f852419d133985c781ffeba49e68d16f911", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/42e86f852419d133985c781ffeba49e68d16f911/comments", "author": null, "committer": null, "parents": [{"sha": "1bc695cdac5a11970398b5f977e0ce196ce1e0d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bc695cdac5a11970398b5f977e0ce196ce1e0d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bc695cdac5a11970398b5f977e0ce196ce1e0d0"}], "stats": {"total": 30, "additions": 10, "deletions": 20}, "files": [{"sha": "ea9137e37a3199346ad1b3c0e3f205c1f00c542c", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 10, "deletions": 20, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/42e86f852419d133985c781ffeba49e68d16f911/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/42e86f852419d133985c781ffeba49e68d16f911/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=42e86f852419d133985c781ffeba49e68d16f911", "patch": "@@ -1592,8 +1592,7 @@\n   \"@\n    extru %1,31,8,%0\n    ldb%M1 %1,%0\"\n-  [(set_attr \"type\" \"unary,load\")\n-   (set_attr \"length\" \"4,4\")])\n+  [(set_attr \"type\" \"unary,load\")])\n \n (define_insn \"zero_extendqisi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=r,r\")\n@@ -1603,8 +1602,7 @@\n   \"@\n    extru %1,31,8,%0\n    ldb%M1 %1,%0\"\n-  [(set_attr \"type\" \"unary,load\")\n-   (set_attr \"length\" \"4,4\")])\n+  [(set_attr \"type\" \"unary,load\")])\n \n ;;- sign extension instructions\n \n@@ -1671,8 +1669,7 @@\n \t(float:SF (match_operand:SI 1 \"register_operand\" \"fx\")))]\n   \"\"\n   \"fcnvxf,sgl,sgl %1,%0\"\n-  [(set_attr \"type\" \"fpalu\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"fpalu\")])\n \n ;; This pattern forces (set (reg:DF ...) (float:DF (const_int ...)))\n ;; to be reloaded by putting the constant into memory.\n@@ -1690,8 +1687,7 @@\n \t(float:DF (match_operand:SI 1 \"register_operand\" \"fx\")))]\n   \"\"\n   \"fcnvxf,sgl,dbl %1,%0\"\n-  [(set_attr \"type\" \"fpalu\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"fpalu\")])\n \n (define_expand \"floatunssisf2\"\n   [(set (subreg:SI (match_dup 2) 1)\n@@ -1718,16 +1714,14 @@\n \t(float:SF (match_operand:DI 1 \"register_operand\" \"x\")))]\n   \"TARGET_SNAKE\"\n   \"fcnvxf,dbl,sgl %1,%0\"\n-  [(set_attr \"type\" \"fpalu\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"fpalu\")])\n \n (define_insn \"floatdidf2\"\n   [(set (match_operand:DF 0 \"general_operand\" \"=x\")\n \t(float:DF (match_operand:DI 1 \"register_operand\" \"x\")))]\n   \"TARGET_SNAKE\"\n   \"fcnvxf,dbl,dbl %1,%0\"\n-  [(set_attr \"type\" \"fpalu\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"fpalu\")])\n \n ;; Convert a float to an actual integer.\n ;; Truncation is performed as part of the conversion.\n@@ -1737,32 +1731,28 @@\n \t(fix:SI (fix:SF (match_operand:SF 1 \"register_operand\" \"fx\"))))]\n   \"\"\n   \"fcnvfxt,sgl,sgl %1,%0\"\n-  [(set_attr \"type\" \"fpalu\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"fpalu\")])\n \n (define_insn \"fix_truncdfsi2\"\n   [(set (match_operand:SI 0 \"register_operand\" \"=fx\")\n \t(fix:SI (fix:DF (match_operand:DF 1 \"register_operand\" \"fx\"))))]\n   \"\"\n   \"fcnvfxt,dbl,sgl %1,%0\"\n-  [(set_attr \"type\" \"fpalu\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"fpalu\")])\n \n (define_insn \"fix_truncsfdi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=x\")\n \t(fix:DI (fix:SF (match_operand:SF 1 \"register_operand\" \"x\"))))]\n   \"TARGET_SNAKE\"\n   \"fcnvfxt,sgl,dbl %1,%0\"\n-  [(set_attr \"type\" \"fpalu\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"fpalu\")])\n \n (define_insn \"fix_truncdfdi2\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=x\")\n \t(fix:DI (fix:DF (match_operand:DF 1 \"register_operand\" \"x\"))))]\n   \"TARGET_SNAKE\"\n   \"fcnvfxt,dbl,dbl %1,%0\"\n-  [(set_attr \"type\" \"fpalu\")\n-   (set_attr \"length\" \"4\")])\n+  [(set_attr \"type\" \"fpalu\")])\n \f\n ;;- arithmetic instructions\n "}]}