{"sha": "a209577830107724ff2fae5db238623737d8916c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTIwOTU3NzgzMDEwNzcyNGZmMmZhZTVkYjIzODYyMzczN2Q4OTE2Yw==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2001-04-11T08:43:16Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2001-04-11T08:43:16Z"}, "message": "method.c (implicitly_declare_fn): Commonize code for copy ctor and assignment op.\n\ncp:\n\t* method.c (implicitly_declare_fn): Commonize code for copy ctor\n\tand assignment op. Set TREE_USED for parameter.\ntestsuite:\n\t* g++.old-deja/g++.other/warn6.C: New test.\n\nFrom-SVN: r41243", "tree": {"sha": "507ac15067b624a42002a748e5d7ed9cd9bb53c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/507ac15067b624a42002a748e5d7ed9cd9bb53c4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a209577830107724ff2fae5db238623737d8916c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a209577830107724ff2fae5db238623737d8916c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a209577830107724ff2fae5db238623737d8916c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a209577830107724ff2fae5db238623737d8916c/comments", "author": null, "committer": null, "parents": [{"sha": "45ea80f7101240796d3473c1f5067a6a7398f6ed", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45ea80f7101240796d3473c1f5067a6a7398f6ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45ea80f7101240796d3473c1f5067a6a7398f6ed"}], "stats": {"total": 78, "additions": 50, "deletions": 28}, "files": [{"sha": "6a871d4d8280bf2252914c8ae6e1d78ca97719f5", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a209577830107724ff2fae5db238623737d8916c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a209577830107724ff2fae5db238623737d8916c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=a209577830107724ff2fae5db238623737d8916c", "patch": "@@ -1,3 +1,8 @@\n+2001-04-11  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* method.c (implicitly_declare_fn): Commonize code for copy ctor\n+\tand assignment op. Set TREE_USED for parameter.\n+\n 2001-04-10  Mark Mitchell  <mark@codesourcery.com>\n \n \t* class.c (find_final_overrider_data): Add `candidates'."}, {"sha": "2f894846a80aa30ceec7308225e12af2f061812f", "filename": "gcc/cp/method.c", "status": "modified", "additions": 24, "deletions": 28, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a209577830107724ff2fae5db238623737d8916c/gcc%2Fcp%2Fmethod.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a209577830107724ff2fae5db238623737d8916c/gcc%2Fcp%2Fmethod.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fmethod.c?ref=a209577830107724ff2fae5db238623737d8916c", "patch": "@@ -957,8 +957,8 @@ implicitly_declare_fn (kind, type, const_p)\n   tree declspecs = NULL_TREE;\n   tree fn, args = NULL_TREE;\n   tree raises = empty_except_spec;\n-  tree argtype;\n   int retref = 0;\n+  int has_parm = 0;\n   tree name = constructor_name (TYPE_IDENTIFIER (type));\n \n   switch (kind)\n@@ -977,40 +977,33 @@ implicitly_declare_fn (kind, type, const_p)\n       break;\n \n     case sfk_copy_constructor:\n-    {\n-      struct copy_data data;\n-      \n-      if (const_p)\n-\ttype = build_qualified_type (type, TYPE_QUAL_CONST);\n-      argtype = build_reference_type (type);\n-      args = tree_cons (NULL_TREE,\n-\t\t\tbuild_tree_list (hash_tree_chain (argtype, NULL_TREE),\n-\t\t\t\t\t get_identifier (\"_ctor_arg\")),\n-\t\t\tvoid_list_node);\n-      data.name = NULL;\n-      data.quals = const_p ? TYPE_QUAL_CONST : 0;\n-      raises = synthesize_exception_spec (type, &locate_copy, &data);\n-      break;\n-    }\n     case sfk_assignment_operator:\n     {\n       struct copy_data data;\n+      tree argtype;\n       \n-      retref = 1;\n-      declspecs = build_tree_list (NULL_TREE, type);\n+      has_parm = 1;\n+      data.name = NULL;\n+      data.quals = 0;\n+      if (kind == sfk_assignment_operator)\n+        {\n+          retref = 1;\n+          declspecs = build_tree_list (NULL_TREE, type);\n \n+          name = ansi_assopname (NOP_EXPR);\n+          data.name = name;\n+        }\n       if (const_p)\n-\ttype = build_qualified_type (type, TYPE_QUAL_CONST);\n-\n-      name = ansi_assopname (NOP_EXPR);\n-\n+        {\n+          data.quals = TYPE_QUAL_CONST;\n+          type = build_qualified_type (type, TYPE_QUAL_CONST);\n+        }\n+    \n       argtype = build_reference_type (type);\n-      args = tree_cons (NULL_TREE,\n-\t\t\tbuild_tree_list (hash_tree_chain (argtype, NULL_TREE),\n-\t\t\t\t\t get_identifier (\"_ctor_arg\")),\n-\t\t\tvoid_list_node);\n-      data.name = name;\n-      data.quals = const_p ? TYPE_QUAL_CONST : 0;\n+      args = build_tree_list (hash_tree_chain (argtype, NULL_TREE),\n+\t\t\t      get_identifier (\"_ctor_arg\"));\n+      args = tree_cons (NULL_TREE, args, void_list_node);\n+      \n       raises = synthesize_exception_spec (type, &locate_copy, &data);\n       break;\n     }\n@@ -1022,10 +1015,13 @@ implicitly_declare_fn (kind, type, const_p)\n \n   {\n     tree declarator = make_call_declarator (name, args, NULL_TREE, raises);\n+    \n     if (retref)\n       declarator = build_nt (ADDR_EXPR, declarator);\n \n     fn = grokfield (declarator, declspecs, NULL_TREE, NULL_TREE, NULL_TREE);\n+    if (has_parm)\n+      TREE_USED (FUNCTION_FIRST_USER_PARM (fn)) = 1;\n   }\n \n   my_friendly_assert (TREE_CODE (fn) == FUNCTION_DECL, 20000408);"}, {"sha": "df0f05ba7f39107ddab6a384ec64d67d3db6c52c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a209577830107724ff2fae5db238623737d8916c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a209577830107724ff2fae5db238623737d8916c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a209577830107724ff2fae5db238623737d8916c", "patch": "@@ -1,3 +1,7 @@\n+2001-04-11  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* g++.old-deja/g++.other/warn6.C: New test.\n+\n 22001-04-11  Peter Schmid  <schmid@snake.iap.physik.tu-darmstadt.de>\n \n         * g++.old-deja/g++.robertl/eb42.C: Same."}, {"sha": "1a54b3297894bf740603e2b5656b2c80d72f7a21", "filename": "gcc/testsuite/g++.old-deja/g++.other/warn6.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a209577830107724ff2fae5db238623737d8916c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fwarn6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a209577830107724ff2fae5db238623737d8916c/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fwarn6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2Fwarn6.C?ref=a209577830107724ff2fae5db238623737d8916c", "patch": "@@ -0,0 +1,17 @@\n+// Build don't link:\n+// Special g++ Options: -W -Wall\n+\n+// Copyright (C) 2001 Free Software Foundation, Inc.\n+// Contributed by Nathan Sidwell 2 Mar 2001 <nathan@codesourcery.com>\n+\n+// Bug 2139. We gave an erronous warning about an unused parm on a\n+// synthesized function\n+\n+struct A\n+{\n+  virtual ~A ();\n+};\n+void foo (A const &a)\n+{\n+  A a1 = a;\n+}"}]}