{"sha": "d869c35152bfa3131a0e6d6a20480b925d17d85a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDg2OWMzNTE1MmJmYTMxMzFhMGU2ZDZhMjA0ODBiOTI1ZDE3ZDg1YQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2007-04-06T10:59:53Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-04-06T10:59:53Z"}, "message": "i386.c (output_387_reg_move): Handle memory operand[0].\n\n\t* config/i386/i386.c (output_387_reg_move): Handle memory operand[0].\n\t* config/i386/i386.md (*movsf_1, *movdf_nointeger,\n\t*movdf_integer_rex64, *movdf_integer, *movxf_nointeger,\n\t*movxf_integer): Use output_387_reg_move() for x87 reg->mem\n\talternative.\n\t(*extendsfdf2_mixed, *extendsfdf2_i387, *extendsfxf2_i387,\n\t*extenddfxf2_i387, *truncdfsf_fast_mixed): Ditto.\n\nFrom-SVN: r123613", "tree": {"sha": "2fa999803b3ff3a8eb9b915c2f6a445118e79e99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2fa999803b3ff3a8eb9b915c2f6a445118e79e99"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d869c35152bfa3131a0e6d6a20480b925d17d85a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d869c35152bfa3131a0e6d6a20480b925d17d85a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d869c35152bfa3131a0e6d6a20480b925d17d85a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d869c35152bfa3131a0e6d6a20480b925d17d85a/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0874ee9b767e78ab00f2cc82ac9f9acf8ac9ad56"}], "stats": {"total": 158, "additions": 48, "deletions": 110}, "files": [{"sha": "8e0b8a126c8d9131ae4734e3ee9a9c0d11e747e3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d869c35152bfa3131a0e6d6a20480b925d17d85a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d869c35152bfa3131a0e6d6a20480b925d17d85a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d869c35152bfa3131a0e6d6a20480b925d17d85a", "patch": "@@ -1,3 +1,13 @@\n+2007-04-06  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (output_387_reg_move): Handle memory operand[0].\n+\t* config/i386/i386.md (*movsf_1, *movdf_nointeger,\n+\t*movdf_integer_rex64, *movdf_integer, *movxf_nointeger,\n+\t*movxf_integer): Use output_387_reg_move() for x87 reg->mem\n+\talternative.\n+\t(*extendsfdf2_mixed, *extendsfdf2_i387, *extendsfxf2_i387,\n+\t*extenddfxf2_i387, *truncdfsf_fast_mixed): Ditto.\n+\n 2007-04-05  Richard Henderson  <rth@redhat.com>\n \n \t* config/alpha/alpha.c (print_operand) [+]: Remove."}, {"sha": "0429232d0f072a45f7ec4558e360d6d765104dbc", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 28, "deletions": 8, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d869c35152bfa3131a0e6d6a20480b925d17d85a/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d869c35152bfa3131a0e6d6a20480b925d17d85a/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=d869c35152bfa3131a0e6d6a20480b925d17d85a", "patch": "@@ -21089,16 +21089,36 @@ ix86_reverse_condition (enum rtx_code code, enum machine_mode mode)\n const char *\n output_387_reg_move (rtx insn, rtx *operands)\n {\n-  if (REG_P (operands[1])\n-      && find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n+  if (REG_P (operands[0]))\n     {\n-      if (REGNO (operands[0]) == FIRST_STACK_REG)\n-\treturn output_387_ffreep (operands, 0);\n-      return \"fstp\\t%y0\";\n+      if (REG_P (operands[1])\n+\t  && find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n+\t{\n+\t  if (REGNO (operands[0]) == FIRST_STACK_REG)\n+\t    return output_387_ffreep (operands, 0);\n+\t  return \"fstp\\t%y0\";\n+\t}\n+      if (STACK_TOP_P (operands[0]))\n+\treturn \"fld%z1\\t%y1\";\n+      return \"fst\\t%y0\";\n     }\n-  if (STACK_TOP_P (operands[0]))\n-    return \"fld%z1\\t%y1\";\n-  return \"fst\\t%y0\";\n+  else if (MEM_P (operands[0]))\n+    {\n+      gcc_assert (REG_P (operands[1]));\n+      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n+\treturn \"fstp%z0\\t%y0\";\n+      else\n+\t{\n+\t  /* There is no non-popping store to memory for XFmode.\n+\t     So if we need one, follow the store with a load.  */\n+\t  if (GET_MODE (operands[0]) == XFmode)\n+\t    return \"fstp%z0\\t%y0\\n\\tfld%z0\\t%y0\";\n+\t  else\n+\t    return \"fst%z0\\t%y0\";\n+\t}\n+    }\n+  else\n+    gcc_unreachable();\n }\n \n /* Output code to perform a conditional jump to LABEL, if C2 flag in"}, {"sha": "885e6770339621bfb3521a819bef4cecea80d471", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 10, "deletions": 102, "changes": 112, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d869c35152bfa3131a0e6d6a20480b925d17d85a/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d869c35152bfa3131a0e6d6a20480b925d17d85a/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=d869c35152bfa3131a0e6d6a20480b925d17d85a", "patch": "@@ -2343,13 +2343,8 @@\n   switch (which_alternative)\n     {\n     case 0:\n-      return output_387_reg_move (insn, operands);\n-\n     case 1:\n-      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-        return \"fstp%z0\\t%y0\";\n-      else\n-        return \"fst%z0\\t%y0\";\n+      return output_387_reg_move (insn, operands);\n \n     case 2:\n       return standard_80387_constant_opcode (operands[1]);\n@@ -2512,13 +2507,8 @@\n   switch (which_alternative)\n     {\n     case 0:\n-      return output_387_reg_move (insn, operands);\n-\n     case 1:\n-      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-        return \"fstp%z0\\t%y0\";\n-      else\n-        return \"fst%z0\\t%y0\";\n+      return output_387_reg_move (insn, operands);\n \n     case 2:\n       return standard_80387_constant_opcode (operands[1]);\n@@ -2633,13 +2623,8 @@\n   switch (which_alternative)\n     {\n     case 0:\n-      return output_387_reg_move (insn, operands);\n-\n     case 1:\n-      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-        return \"fstp%z0\\t%y0\";\n-      else\n-        return \"fst%z0\\t%y0\";\n+      return output_387_reg_move (insn, operands);\n \n     case 2:\n       return standard_80387_constant_opcode (operands[1]);\n@@ -2760,13 +2745,8 @@\n   switch (which_alternative)\n     {\n     case 0:\n-      return output_387_reg_move (insn, operands);\n-\n     case 1:\n-      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-        return \"fstp%z0\\t%y0\";\n-      else\n-        return \"fst%z0\\t%y0\";\n+      return output_387_reg_move (insn, operands);\n \n     case 2:\n       return standard_80387_constant_opcode (operands[1]);\n@@ -2972,15 +2952,8 @@\n   switch (which_alternative)\n     {\n     case 0:\n-      return output_387_reg_move (insn, operands);\n-\n     case 1:\n-      /* There is no non-popping store to memory for XFmode.  So if\n-\t we need one, follow the store with a load.  */\n-      if (! find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-        return \"fstp%z0\\t%y0\\;fld%z0\\t%y0\";\n-      else\n-        return \"fstp%z0\\t%y0\";\n+      return output_387_reg_move (insn, operands);\n \n     case 2:\n       return standard_80387_constant_opcode (operands[1]);\n@@ -3007,15 +2980,8 @@\n   switch (which_alternative)\n     {\n     case 0:\n-      return output_387_reg_move (insn, operands);\n-\n     case 1:\n-      /* There is no non-popping store to memory for XFmode.  So if\n-\t we need one, follow the store with a load.  */\n-      if (! find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-        return \"fstp%z0\\t%y0\\;fld%z0\\t%y0\";\n-      else\n-        return \"fstp%z0\\t%y0\";\n+      return output_387_reg_move (insn, operands);\n \n     case 2:\n       return standard_80387_constant_opcode (operands[1]);\n@@ -3789,13 +3755,8 @@\n   switch (which_alternative)\n     {\n     case 0:\n-      return output_387_reg_move (insn, operands);\n-\n     case 1:\n-      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-        return \"fstp%z0\\t%y0\";\n-      else\n-        return \"fst%z0\\t%y0\";\n+      return output_387_reg_move (insn, operands);\n \n     case 2:\n       return \"cvtss2sd\\t{%1, %0|%0, %1}\";\n@@ -3819,22 +3780,7 @@\n   [(set (match_operand:DF 0 \"nonimmediate_operand\" \"=f,m\")\n         (float_extend:DF (match_operand:SF 1 \"nonimmediate_operand\" \"fm,f\")))]\n   \"TARGET_80387\"\n-{\n-  switch (which_alternative)\n-    {\n-    case 0:\n-      return output_387_reg_move (insn, operands);\n-\n-    case 1:\n-      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-        return \"fstp%z0\\t%y0\";\n-      else\n-        return \"fst%z0\\t%y0\";\n-\n-    default:\n-      gcc_unreachable ();\n-    }\n-}\n+  \"* return output_387_reg_move (insn, operands);\"\n   [(set_attr \"type\" \"fmov\")\n    (set_attr \"mode\" \"SF,XF\")])\n \n@@ -3862,24 +3808,7 @@\n   [(set (match_operand:XF 0 \"nonimmediate_operand\" \"=f,m\")\n         (float_extend:XF (match_operand:SF 1 \"nonimmediate_operand\" \"fm,f\")))]\n   \"TARGET_80387\"\n-{\n-  switch (which_alternative)\n-    {\n-    case 0:\n-      return output_387_reg_move (insn, operands);\n-\n-    case 1:\n-      /* There is no non-popping store to memory for XFmode.  So if\n-\t we need one, follow the store with a load.  */\n-      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-        return \"fstp%z0\\t%y0\";\n-      else\n-        return \"fstp%z0\\t%y0\\n\\tfld%z0\\t%y0\";\n-\n-    default:\n-      gcc_unreachable ();\n-    }\n-}\n+  \"* return output_387_reg_move (insn, operands);\"\n   [(set_attr \"type\" \"fmov\")\n    (set_attr \"mode\" \"SF,XF\")])\n \n@@ -3907,24 +3836,7 @@\n   [(set (match_operand:XF 0 \"nonimmediate_operand\" \"=f,m\")\n         (float_extend:XF (match_operand:DF 1 \"nonimmediate_operand\" \"fm,f\")))]\n   \"TARGET_80387\"\n-{\n-  switch (which_alternative)\n-    {\n-    case 0:\n-      return output_387_reg_move (insn, operands);\n-\n-    case 1:\n-      /* There is no non-popping store to memory for XFmode.  So if\n-\t we need one, follow the store with a load.  */\n-      if (! find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-        return \"fstp%z0\\t%y0\\n\\tfld%z0\\t%y0\";\n-      else\n-        return \"fstp%z0\\t%y0\";\n-\n-    default:\n-      gcc_unreachable ();\n-    }\n-}\n+  \"* return output_387_reg_move (insn, operands);\"\n   [(set_attr \"type\" \"fmov\")\n    (set_attr \"mode\" \"DF,XF\")])\n \n@@ -3969,10 +3881,6 @@\n   switch (which_alternative)\n     {\n     case 0:\n-      if (find_regno_note (insn, REG_DEAD, REGNO (operands[1])))\n-\treturn \"fstp%z0\\t%y0\";\n-      else\n-\treturn \"fst%z0\\t%y0\";\n     case 1:\n       return output_387_reg_move (insn, operands);\n     case 2:"}]}