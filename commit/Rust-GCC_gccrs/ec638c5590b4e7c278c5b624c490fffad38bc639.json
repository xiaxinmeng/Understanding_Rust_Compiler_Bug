{"sha": "ec638c5590b4e7c278c5b624c490fffad38bc639", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWM2MzhjNTU5MGI0ZTdjMjc4YzViNjI0YzQ5MGZmZmFkMzhiYzYzOQ==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2015-03-16T18:30:49Z"}, "committer": {"name": "Marek Polacek", "email": "mpolacek@gcc.gnu.org", "date": "2015-03-16T18:30:49Z"}, "message": "DR 1688 PR c++/65327\n\n\tDR 1688\n\tPR c++/65327\n\t* decl.c (grokdeclarator): Allow volatile and constexpr together.\n\n\t* g++.dg/cpp0x/constexpr-object1.C: Change dg-error to dg-bogus.\n\t* g++.dg/cpp0x/pr65327.C: New test.\n\nFrom-SVN: r221463", "tree": {"sha": "978d3dfb35438dd93e7de5f24704e52ea56efe52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/978d3dfb35438dd93e7de5f24704e52ea56efe52"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ec638c5590b4e7c278c5b624c490fffad38bc639", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec638c5590b4e7c278c5b624c490fffad38bc639", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec638c5590b4e7c278c5b624c490fffad38bc639", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec638c5590b4e7c278c5b624c490fffad38bc639/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "de6d3593367a76ee33fe4c27c00daac1558ebf73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6d3593367a76ee33fe4c27c00daac1558ebf73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de6d3593367a76ee33fe4c27c00daac1558ebf73"}], "stats": {"total": 38, "additions": 35, "deletions": 3}, "files": [{"sha": "b4fff5085e886c7f2db7eafc35905b59dec04ce2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec638c5590b4e7c278c5b624c490fffad38bc639/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec638c5590b4e7c278c5b624c490fffad38bc639/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ec638c5590b4e7c278c5b624c490fffad38bc639", "patch": "@@ -1,3 +1,9 @@\n+2015-03-16  Marek Polacek  <polacek@redhat.com>\n+\n+\tDR 1688\n+\tPR c++/65327\n+\t* decl.c (grokdeclarator): Allow volatile and constexpr together.\n+\n 2015-03-12  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/65323"}, {"sha": "cb0f11f5749f03d77d7ee27fcd06f1895b06972c", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec638c5590b4e7c278c5b624c490fffad38bc639/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec638c5590b4e7c278c5b624c490fffad38bc639/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=ec638c5590b4e7c278c5b624c490fffad38bc639", "patch": "@@ -10134,8 +10134,9 @@ grokdeclarator (const cp_declarator *declarator,\n      the object as `const'.  */\n   if (constexpr_p && innermost_code != cdk_function)\n     {\n-      if (type_quals & TYPE_QUAL_VOLATILE)\n-        error (\"both %<volatile%> and %<constexpr%> cannot be used here\");\n+      /* DR1688 says that a `constexpr' specifier in combination with\n+\t `volatile' is valid.  */\n+\n       if (TREE_CODE (type) != REFERENCE_TYPE)\n \t{\n \t  type_quals |= TYPE_QUAL_CONST;"}, {"sha": "9e10e2d94afa127dc99d8ca25c5507a9a54ce7db", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec638c5590b4e7c278c5b624c490fffad38bc639/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec638c5590b4e7c278c5b624c490fffad38bc639/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ec638c5590b4e7c278c5b624c490fffad38bc639", "patch": "@@ -1,3 +1,10 @@\n+2015-03-16  Marek Polacek  <polacek@redhat.com>\n+\n+\tDR 1688\n+\tPR c++/65327\n+\t* g++.dg/cpp0x/constexpr-object1.C: Change dg-error to dg-bogus.\n+\t* g++.dg/cpp0x/pr65327.C: New test.\n+\n 2015-03-16  Max Ostapenko  <m.ostapenko@partner.samsung.com>\n \n \tPR sanitizer/64820"}, {"sha": "da9e3e4ab3f1a1b0e9c42923067319802a74676e", "filename": "gcc/testsuite/g++.dg/cpp0x/constexpr-object1.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec638c5590b4e7c278c5b624c490fffad38bc639/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-object1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec638c5590b4e7c278c5b624c490fffad38bc639/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-object1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fconstexpr-object1.C?ref=ec638c5590b4e7c278c5b624c490fffad38bc639", "patch": "@@ -19,7 +19,7 @@ constexpr A1 a2; // { dg-error \"uninitialized const\" }\n \n const constexpr A1 a3 = A1();\n \n-volatile constexpr A1 a4 = A1(); // { dg-error \"both .volatile. and .constexpr. cannot\" }\n+volatile constexpr A1 a4 = A1(); // { dg-bogus \"both .volatile. and .constexpr. cannot\" }\n \n // error: on type declaration\n constexpr struct pixel"}, {"sha": "c6cefaba69219710124b0f81748a5595c237b3d2", "filename": "gcc/testsuite/g++.dg/cpp0x/pr65327.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ec638c5590b4e7c278c5b624c490fffad38bc639/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr65327.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ec638c5590b4e7c278c5b624c490fffad38bc639/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr65327.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fpr65327.C?ref=ec638c5590b4e7c278c5b624c490fffad38bc639", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/65327\n+// { dg-do compile { target c++11 } }\n+// DR1688 says that constexpr can be used together with volatile.\n+\n+constexpr volatile int i = 10;\n+\n+void\n+foo ()\n+{\n+  constexpr volatile int j = 5;\n+  static constexpr volatile int k = 5;\n+}\n+\n+constexpr volatile int\n+bar ()\n+{\n+  return i;\n+}"}]}