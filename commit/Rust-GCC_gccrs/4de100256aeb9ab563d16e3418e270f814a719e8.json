{"sha": "4de100256aeb9ab563d16e3418e270f814a719e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGRlMTAwMjU2YWViOWFiNTYzZDE2ZTM0MThlMjcwZjgxNGE3MTllOA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-06-13T10:08:18Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-06-13T10:08:18Z"}, "message": "[multiple changes]\n\n2014-06-13  Emmanuel Briot  <briot@adacore.com>\n\n\t* g-comlin.adb (Get_Argument): fix expansion\n\tof command line arguments (e.g. \"*.adb\") when using a custom\n\tparser. The parser was not passed to the recursive call, and\n\tthus we were trying to do the expansion on the default command\n\tline parser.\n\n2014-06-13  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_ch9.adb: Minor reformatting.\n\n2014-06-13  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_attr.adb (Expand_N_Attribute_Reference, case 'Old):\n\tTo determine whether the attribute should be expanded, examine\n\twhether the enclosing postcondition pragma is to be checked,\n\trather than using the internal flag Assertions_Enabled.\n\nFrom-SVN: r211621", "tree": {"sha": "bd617d2f3e4d6e1965d82c54b88784e324c83cd2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd617d2f3e4d6e1965d82c54b88784e324c83cd2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4de100256aeb9ab563d16e3418e270f814a719e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4de100256aeb9ab563d16e3418e270f814a719e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4de100256aeb9ab563d16e3418e270f814a719e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4de100256aeb9ab563d16e3418e270f814a719e8/comments", "author": null, "committer": null, "parents": [{"sha": "17a3564142202cb76c9fede9cd489d9769f5560b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17a3564142202cb76c9fede9cd489d9769f5560b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17a3564142202cb76c9fede9cd489d9769f5560b"}], "stats": {"total": 56, "additions": 36, "deletions": 20}, "files": [{"sha": "0e241e9c360668d277daa4ef00a88989d92acc31", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4de100256aeb9ab563d16e3418e270f814a719e8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4de100256aeb9ab563d16e3418e270f814a719e8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4de100256aeb9ab563d16e3418e270f814a719e8", "patch": "@@ -1,3 +1,22 @@\n+2014-06-13  Emmanuel Briot  <briot@adacore.com>\n+\n+\t* g-comlin.adb (Get_Argument): fix expansion\n+\tof command line arguments (e.g. \"*.adb\") when using a custom\n+\tparser. The parser was not passed to the recursive call, and\n+\tthus we were trying to do the expansion on the default command\n+\tline parser.\n+\n+2014-06-13  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_ch9.adb: Minor reformatting.\n+\n+2014-06-13  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_attr.adb (Expand_N_Attribute_Reference, case 'Old):\n+\tTo determine whether the attribute should be expanded, examine\n+\twhether the enclosing postcondition pragma is to be checked,\n+\trather than using the internal flag Assertions_Enabled.\n+\n 2014-06-13  Ben Brosgol  <brosgol@adacore.com>\n \n \t* gnat_rm.texi: Minor fixes."}, {"sha": "b16e95d96e8aa8fda75664a52517baa1e4cb2831", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4de100256aeb9ab563d16e3418e270f814a719e8/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4de100256aeb9ab563d16e3418e270f814a719e8/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=4de100256aeb9ab563d16e3418e270f814a719e8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -3962,13 +3962,6 @@ package body Exp_Attr is\n          Temp    : Entity_Id;\n \n       begin\n-         --  If assertions are disabled, no need to create the declaration\n-         --  that preserves the value.\n-\n-         if not Assertions_Enabled then\n-            return;\n-         end if;\n-\n          Temp := Make_Temporary (Loc, 'T', Pref);\n \n          --  Climb the parent chain looking for subprogram _Postconditions\n@@ -3978,6 +3971,17 @@ package body Exp_Attr is\n             exit when Nkind (Subp) = N_Subprogram_Body\n               and then Chars (Defining_Entity (Subp)) = Name_uPostconditions;\n \n+            --  If assertions are disabled, no need to create the declaration\n+            --  that preserves the value. The postcondition pragma in which\n+            --  'Old appears will be checked or disabled according to the\n+            --  current policy in effect.\n+\n+            if Nkind (Subp) = N_Pragma\n+              and then not Is_Checked (Subp)\n+            then\n+               return;\n+            end if;\n+\n             Subp := Parent (Subp);\n          end loop;\n "}, {"sha": "f5c6f575ee1969c99f128a9bd56f3c3518d94771", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4de100256aeb9ab563d16e3418e270f814a719e8/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4de100256aeb9ab563d16e3418e270f814a719e8/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=4de100256aeb9ab563d16e3418e270f814a719e8", "patch": "@@ -1206,11 +1206,10 @@ package body Exp_Ch9 is\n       end if;\n \n       Master_Id :=\n-        Make_Defining_Identifier (Loc,\n-          New_External_Name (Chars (Typ), 'M'));\n+        Make_Defining_Identifier (Loc, New_External_Name (Chars (Typ), 'M'));\n \n       --  Generate:\n-      --    Mnn renames _master;\n+      --    typeMnn renames _master;\n \n       Ren_Decl :=\n         Make_Object_Renaming_Declaration (Loc,"}, {"sha": "4a7c85bd382fe30de2186a71327475b0813cfc49", "filename": "gcc/ada/g-comlin.adb", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4de100256aeb9ab563d16e3418e270f814a719e8/gcc%2Fada%2Fg-comlin.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4de100256aeb9ab563d16e3418e270f814a719e8/gcc%2Fada%2Fg-comlin.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-comlin.adb?ref=4de100256aeb9ab563d16e3418e270f814a719e8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1999-2013, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2014, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -402,7 +402,6 @@ package body GNAT.Command_Line is\n       end if;\n \n       if Parser.Current_Argument > Parser.Arg_Count then\n-\n          --  If this is the first time this function is called\n \n          if Parser.Current_Index = 1 then\n@@ -449,21 +448,16 @@ package body GNAT.Command_Line is\n          declare\n             Arg   : constant String :=\n                       Argument (Parser, Parser.Current_Argument - 1);\n-            Index : Positive;\n-\n          begin\n-            Index := Arg'First;\n-            while Index <= Arg'Last loop\n+            for Index in Arg'Range loop\n                if Arg (Index) = '*'\n                  or else Arg (Index) = '?'\n                  or else Arg (Index) = '['\n                then\n                   Parser.In_Expansion := True;\n                   Start_Expansion (Parser.Expansion_It, Arg);\n-                  return Get_Argument (Do_Expansion);\n+                  return Get_Argument (Do_Expansion, Parser);\n                end if;\n-\n-               Index := Index + 1;\n             end loop;\n          end;\n       end if;"}]}