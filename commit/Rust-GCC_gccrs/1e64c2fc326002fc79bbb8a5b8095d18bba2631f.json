{"sha": "1e64c2fc326002fc79bbb8a5b8095d18bba2631f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWU2NGMyZmMzMjYwMDJmYzc5YmJiOGE1YjgwOTVkMThiYmEyNjMxZg==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@unitus.it", "date": "2003-06-05T23:25:05Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2003-06-05T23:25:05Z"}, "message": "re PR libstdc++/11095 (C++ iostream manipulator causes segfault when called iwth negative argument)\n\n2003-06-05  Paolo Carlini  <pcarlini@unitus.it>\n\n\tPR libstdc++/11095\n\t* include/bits/istream.tcc (operator>>(basic_istream&, _CharT*)):\n\tDeal with width() smaller than zero.\n\t* include/bits/ostream.tcc (operator<<(basic_ostream&, _CharT),\n\toperator<<(basic_ostream&, char), operator<<(basic_ostream&,\n\tconst _CharT*), operator<<(basic_ostream<_CharT, _Traits>&,\n\tconst char*), operator<<(basic_ostream<char, _Traits>&,\n\tconst char*), operator<<(basic_ostream, const basic_string&)): Likewise.\n\t* testsuite/27_io/basic_istream/extractors_character/char/11095-i.cc:\n\t* testsuite/27_io/basic_ostream/inserters_character/char/11095-oa.cc:\n\t* testsuite/27_io/basic_ostream/inserters_character/char/11095-ob.cc:\n\t* testsuite/27_io/basic_ostream/inserters_character/char/11095-oc.cc:\n\t* testsuite/27_io/basic_ostream/inserters_character/wchar_t/11095-od.cc:\n\t* testsuite/27_io/basic_ostream/inserters_character/wchar_t/11095-oe.cc:\n\t* testsuite/27_io/basic_ostream/inserters_character/wchar_t/11095-of.cc:\n\tNew.\n\nFrom-SVN: r67518", "tree": {"sha": "2f310681a5057950759e7b4c3f1d1ab9c6a352dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f310681a5057950759e7b4c3f1d1ab9c6a352dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1e64c2fc326002fc79bbb8a5b8095d18bba2631f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e64c2fc326002fc79bbb8a5b8095d18bba2631f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1e64c2fc326002fc79bbb8a5b8095d18bba2631f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/comments", "author": null, "committer": null, "parents": [{"sha": "49c72d225b8c33c995641193365b05e0492e2e4e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49c72d225b8c33c995641193365b05e0492e2e4e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49c72d225b8c33c995641193365b05e0492e2e4e"}], "stats": {"total": 364, "additions": 357, "deletions": 7}, "files": [{"sha": "8026421a5fe31fec7733d5cc476a7b110a1bb052", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1e64c2fc326002fc79bbb8a5b8095d18bba2631f", "patch": "@@ -1,3 +1,22 @@\n+2003-06-05  Paolo Carlini  <pcarlini@unitus.it>\n+\n+\tPR libstdc++/11095\n+\t* include/bits/istream.tcc (operator>>(basic_istream&, _CharT*)):\n+\tDeal with width() smaller than zero.\n+\t* include/bits/ostream.tcc (operator<<(basic_ostream&, _CharT),\n+\toperator<<(basic_ostream&, char), operator<<(basic_ostream&,\n+\tconst _CharT*), operator<<(basic_ostream<_CharT, _Traits>&,\n+\tconst char*), operator<<(basic_ostream<char, _Traits>&,\n+\tconst char*), operator<<(basic_ostream, const basic_string&)): Likewise.\n+\t* testsuite/27_io/basic_istream/extractors_character/char/11095-i.cc:\n+\t* testsuite/27_io/basic_ostream/inserters_character/char/11095-oa.cc:\n+\t* testsuite/27_io/basic_ostream/inserters_character/char/11095-ob.cc:\n+\t* testsuite/27_io/basic_ostream/inserters_character/char/11095-oc.cc:\n+\t* testsuite/27_io/basic_ostream/inserters_character/wchar_t/11095-od.cc:\n+\t* testsuite/27_io/basic_ostream/inserters_character/wchar_t/11095-oe.cc:\n+\t* testsuite/27_io/basic_ostream/inserters_character/wchar_t/11095-of.cc:\n+\tNew.\n+\n 2003-06-05  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n \n \t* acinclude.m4 (GLIBCPP_CHECK_PCH): Only set glibcpp_PCHFLAGS if"}, {"sha": "eaeb414678fd0ff20faa9bf1a00ba3a30c994eab", "filename": "libstdc++-v3/include/bits/istream.tcc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fistream.tcc?ref=1e64c2fc326002fc79bbb8a5b8095d18bba2631f", "patch": "@@ -1021,7 +1021,7 @@ namespace std\n \t    {\n \t      // Figure out how many characters to extract.\n \t      streamsize __num = __in.width();\n-\t      if (__num == 0)\n+\t      if (__num <= 0)\n \t\t__num = numeric_limits<streamsize>::max();\n \t      \n \t      const __ctype_type& __ctype = use_facet<__ctype_type>(__in.getloc());"}, {"sha": "b71bdb835d277be0ca3a86c529c5cdb20ab226ee", "filename": "libstdc++-v3/include/bits/ostream.tcc", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fostream.tcc?ref=1e64c2fc326002fc79bbb8a5b8095d18bba2631f", "patch": "@@ -474,7 +474,7 @@ namespace std\n \t{\n \t  try \n \t    {\n-\t      streamsize __w = __out.width();\n+\t      const streamsize __w = __out.width() > 0 ? __out.width() : 0;\n \t      _CharT* __pads = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) * (__w + 1)));\n \t      __pads[0] = __c;\n \t      streamsize __len = 1;\n@@ -510,7 +510,7 @@ namespace std\n \t{\n \t  try \n \t    {\n-\t      streamsize __w = __out.width();\n+\t      const streamsize __w = __out.width() > 0 ? __out.width() : 0;\n \t      char* __pads = static_cast<char*>(__builtin_alloca(__w + 1));\n \t      __pads[0] = __c;\n \t      streamsize __len = 1;\n@@ -545,7 +545,7 @@ namespace std\n \t{\n \t  try \n \t    {\n-\t      streamsize __w = __out.width();\n+\t      const streamsize __w = __out.width() > 0 ? __out.width() : 0;\n \t      _CharT* __pads = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) * __w));\n \t      streamsize __len = static_cast<streamsize>(_Traits::length(__s));\n \t      if (__w > __len)\n@@ -594,7 +594,7 @@ namespace std\n \t  try \n \t    {\n \t      streamsize __len = static_cast<streamsize>(__clen);\n-\t      streamsize __w = __out.width();\n+\t      const streamsize __w = __out.width() > 0 ? __out.width() : 0;\n \t      _CharT* __pads = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) * __w));\n \t      \n \t      if (__w > __len)\n@@ -632,7 +632,7 @@ namespace std\n \t{\n \t  try \n \t    {\n-\t      streamsize __w = __out.width();\n+\t      const streamsize __w = __out.width() > 0 ? __out.width() : 0;\n \t      char* __pads = static_cast<char*>(__builtin_alloca(__w));\n \t      streamsize __len = static_cast<streamsize>(_Traits::length(__s));\n \n@@ -671,7 +671,7 @@ namespace std\n       if (__cerb)\n \t{\n \t  const _CharT* __s = __str.data();\n-\t  streamsize __w = __out.width();\n+\t  const streamsize __w = __out.width() > 0 ? __out.width() : 0;\n \t  _CharT* __pads = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT) * __w));\n \t  streamsize __len = static_cast<streamsize>(__str.size());\n #ifdef _GLIBCPP_RESOLVE_LIB_DEFECTS"}, {"sha": "ec25ebcaa4d36a82e71383c58d994c7315e4ab7d", "filename": "libstdc++-v3/testsuite/27_io/basic_istream/extractors_character/char/11095-i.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_character%2Fchar%2F11095-i.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_character%2Fchar%2F11095-i.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_istream%2Fextractors_character%2Fchar%2F11095-i.cc?ref=1e64c2fc326002fc79bbb8a5b8095d18bba2631f", "patch": "@@ -0,0 +1,55 @@\n+// 2003-06-05 Paolo Carlini <pcarlini@unitus.it>\n+ \n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.1.2.3 character extractors\n+\n+#include <istream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/11095\n+// operator>>(basic_istream&, _CharT*)\n+void test01() \n+{\n+  bool test = true;\n+  const std::string str_01(\"Consoli \");\n+\n+  std::stringbuf isbuf_01(str_01, std::ios_base::in);\n+  std::istream is_01(&isbuf_01);\n+\n+  std::ios_base::iostate state1, state2;\n+\n+  char array1[10];\n+  typedef std::ios::traits_type ctraits_type;\n+\n+  is_01.width(-60);\n+  state1 = is_01.rdstate();\n+  is_01 >> array1;\n+  state2 = is_01.rdstate();\n+  VERIFY( state1 == state2 );\n+  VERIFY( !ctraits_type::compare(array1, \"Consoli\", 7) );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}\n+"}, {"sha": "d9158f534f0ebbb38131003f5a698810b148f36d", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_character/char/11095-oa.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fchar%2F11095-oa.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fchar%2F11095-oa.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fchar%2F11095-oa.cc?ref=1e64c2fc326002fc79bbb8a5b8095d18bba2631f", "patch": "@@ -0,0 +1,46 @@\n+// 2003-06-05  Paolo Carlini  <pcarlini@unitus.it>\n+\n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.2.5.4 basic_ostream character inserters\n+\n+#include <ostream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/11095\n+// operator<<(basic_ostream&, char)\n+void\n+test01() \n+{\n+  bool test = true;\n+\n+  std::ostringstream oss_01;\n+\n+  oss_01.width(-60);\n+  oss_01 << 'C';\n+  VERIFY( oss_01.good() );\n+  VERIFY( oss_01.str() == \"C\" );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "f208723de8a2573c312eb09fa8e898e66d5f4d4c", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_character/char/11095-ob.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fchar%2F11095-ob.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fchar%2F11095-ob.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fchar%2F11095-ob.cc?ref=1e64c2fc326002fc79bbb8a5b8095d18bba2631f", "patch": "@@ -0,0 +1,46 @@\n+// 2003-06-05  Paolo Carlini  <pcarlini@unitus.it>\n+\n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.2.5.4 basic_ostream character inserters\n+\n+#include <ostream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/11095\n+// operator<<(basic_ostream<char, _Traits>&, const char*)\n+void\n+test02() \n+{\n+  bool test = true;\n+\n+  std::ostringstream oss_01;\n+\n+  oss_01.width(-60);\n+  oss_01 << \"Consoli\";\n+  VERIFY( oss_01.good() );\n+  VERIFY( oss_01.str() == \"Consoli\" );\n+}\n+\n+int main()\n+{\n+  test02();\n+  return 0;\n+}"}, {"sha": "204089df14fa732d668205e23f37425b5a0ee7be", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_character/char/11095-oc.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fchar%2F11095-oc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fchar%2F11095-oc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fchar%2F11095-oc.cc?ref=1e64c2fc326002fc79bbb8a5b8095d18bba2631f", "patch": "@@ -0,0 +1,46 @@\n+// 2003-06-05  Paolo Carlini  <pcarlini@unitus.it>\n+\n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.2.5.4 basic_ostream character inserters\n+\n+#include <ostream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/11095\n+// operator<<(basic_ostream&, const basic_string&)\n+void\n+test03() \n+{\n+  bool test = true;\n+\n+  std::ostringstream oss_01;\n+\n+  oss_01.width(-60);\n+  oss_01 << std::string(\"Consoli\");\n+  VERIFY( oss_01.good() );\n+  VERIFY( oss_01.str() == \"Consoli\" );\n+}\n+\n+int main()\n+{\n+  test03();\n+  return 0;\n+}"}, {"sha": "bd4d1840fd73e03cf2fd904be3384c0cb7e27ee8", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_character/wchar_t/11095-od.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F11095-od.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F11095-od.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F11095-od.cc?ref=1e64c2fc326002fc79bbb8a5b8095d18bba2631f", "patch": "@@ -0,0 +1,46 @@\n+// 2003-06-05  Paolo Carlini  <pcarlini@unitus.it>\n+\n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.2.5.4 basic_ostream character inserters\n+\n+#include <ostream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/11095\n+// operator<<(basic_ostream&, _CharT)\n+void\n+test01() \n+{\n+  bool test = true;\n+\n+  std::wostringstream oss_01;\n+\n+  oss_01.width(-60);\n+  oss_01 << L'C';\n+  VERIFY( oss_01.good() );\n+  VERIFY( oss_01.str() == L\"C\" );\n+}\n+\n+int main()\n+{\n+  test01();\n+  return 0;\n+}"}, {"sha": "4be5d86feb98303719f9aef3bcc0bdae7df1cf18", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_character/wchar_t/11095-oe.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F11095-oe.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F11095-oe.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F11095-oe.cc?ref=1e64c2fc326002fc79bbb8a5b8095d18bba2631f", "patch": "@@ -0,0 +1,46 @@\n+// 2003-06-05  Paolo Carlini  <pcarlini@unitus.it>\n+\n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.2.5.4 basic_ostream character inserters\n+\n+#include <ostream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/11095\n+// operator<<(basic_ostream&, const _CharT*)\n+void\n+test02() \n+{\n+  bool test = true;\n+\n+  std::wostringstream oss_01;\n+\n+  oss_01.width(-60);\n+  oss_01 << L\"Consoli\";\n+  VERIFY( oss_01.good() );\n+  VERIFY( oss_01.str() == L\"Consoli\" );\n+}\n+\n+int main()\n+{\n+  test02();\n+  return 0;\n+}"}, {"sha": "34695a4314fd626e3d625ed61e67e41485cdb4f7", "filename": "libstdc++-v3/testsuite/27_io/basic_ostream/inserters_character/wchar_t/11095-of.cc", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F11095-of.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1e64c2fc326002fc79bbb8a5b8095d18bba2631f/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F11095-of.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Fbasic_ostream%2Finserters_character%2Fwchar_t%2F11095-of.cc?ref=1e64c2fc326002fc79bbb8a5b8095d18bba2631f", "patch": "@@ -0,0 +1,46 @@\n+// 2003-06-05  Paolo Carlini  <pcarlini@unitus.it>\n+\n+// Copyright (C) 2003 Free Software Foundation\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307,\n+// USA.\n+\n+// 27.6.2.5.4 basic_ostream character inserters\n+\n+#include <ostream>\n+#include <sstream>\n+#include <testsuite_hooks.h>\n+\n+// libstdc++/11095\n+// operator<<(basic_ostream<_CharT, _Traits>&, const char*)\n+void\n+test03() \n+{\n+  bool test = true;\n+\n+  std::wostringstream oss_01;\n+\n+  oss_01.width(-60);\n+  oss_01 << \"Consoli\";\n+  VERIFY( oss_01.good() );\n+  VERIFY( oss_01.str() == L\"Consoli\" );\n+}\n+\n+int main()\n+{\n+  test03();\n+  return 0;\n+}"}]}