{"sha": "8119fc93077ce835232c711273cd8f3b097f17f4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODExOWZjOTMwNzdjZTgzNTIzMmM3MTEyNzNjZDhmM2IwOTdmMTdmNA==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-03-18T12:21:02Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-03-18T12:21:02Z"}, "message": "re PR middle-end/35611 (FAIL: libgomp.c/omp-nested-1.c execution test)\n\n\tPR middle-end/35611\n\t* gimplify.c (gimplify_expr): Gimplify second operand of\n\tOMP_ATOMIC_LOAD.\n\n\t* testsuite/libgomp.c/atomic-4.c: New test.\n\nFrom-SVN: r133309", "tree": {"sha": "cefe0df94ad8e0d6712d5f82009935b5d05d0634", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cefe0df94ad8e0d6712d5f82009935b5d05d0634"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8119fc93077ce835232c711273cd8f3b097f17f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8119fc93077ce835232c711273cd8f3b097f17f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8119fc93077ce835232c711273cd8f3b097f17f4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8119fc93077ce835232c711273cd8f3b097f17f4/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9e7759638ae59400bcd321db6404962c5f0ba29a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e7759638ae59400bcd321db6404962c5f0ba29a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e7759638ae59400bcd321db6404962c5f0ba29a"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "e5706fb97bea3dd565413bf105a8c0df24d68c0b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8119fc93077ce835232c711273cd8f3b097f17f4/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8119fc93077ce835232c711273cd8f3b097f17f4/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8119fc93077ce835232c711273cd8f3b097f17f4", "patch": "@@ -1,3 +1,9 @@\n+2008-03-18  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/35611\n+\t* gimplify.c (gimplify_expr): Gimplify second operand of\n+\tOMP_ATOMIC_LOAD.\n+\n 2008-03-17  Richard Guenther  <rguenther@suse.de>\n \n \tPR tree-optimization/19637"}, {"sha": "102ce3e7354cb34e3d1516d52d00528dbd3c5d0c", "filename": "gcc/gimplify.c", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8119fc93077ce835232c711273cd8f3b097f17f4/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8119fc93077ce835232c711273cd8f3b097f17f4/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=8119fc93077ce835232c711273cd8f3b097f17f4", "patch": "@@ -6022,12 +6022,18 @@ gimplify_expr (tree *expr_p, tree *pre_p, tree *post_p,\n \n \tcase OMP_RETURN:\n \tcase OMP_CONTINUE:\n-        case OMP_ATOMIC_LOAD:\n-        case OMP_ATOMIC_STORE:\n-\n+\tcase OMP_ATOMIC_STORE:\n \t  ret = GS_ALL_DONE;\n \t  break;\n \n+\tcase OMP_ATOMIC_LOAD:\n+\t  if (gimplify_expr (&TREE_OPERAND (*expr_p, 1), pre_p, NULL,\n+\t      is_gimple_val, fb_rvalue) != GS_ALL_DONE)\n+\t    ret = GS_ERROR;\n+\t  else\n+\t    ret = GS_ALL_DONE;\n+\t  break;\n+\n \tcase POINTER_PLUS_EXPR:\n           /* Convert ((type *)A)+offset into &A->field_of_type_and_offset.\n \t     The second is gimple immediate saving a need for extra statement."}, {"sha": "c456e7d8ef3e87b8d6e6387a272ab668c61f1e21", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8119fc93077ce835232c711273cd8f3b097f17f4/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8119fc93077ce835232c711273cd8f3b097f17f4/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=8119fc93077ce835232c711273cd8f3b097f17f4", "patch": "@@ -1,5 +1,8 @@\n 2008-03-18  Jakub Jelinek  <jakub@redhat.com>\n \n+\tPR middle-end/35611\n+\t* testsuite/libgomp.c/atomic-4.c: New test.\n+\n \tPR libgomp/35625\n \t* iter.c (gomp_iter_guided_next_locked): If q > n, set end to ws->end.\n \t(gomp_iter_guided_next): Likewise."}, {"sha": "10f8197b0b61d9c8cc81af299a6c4be77836b621", "filename": "libgomp/testsuite/libgomp.c/atomic-4.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8119fc93077ce835232c711273cd8f3b097f17f4/libgomp%2Ftestsuite%2Flibgomp.c%2Fatomic-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8119fc93077ce835232c711273cd8f3b097f17f4/libgomp%2Ftestsuite%2Flibgomp.c%2Fatomic-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.c%2Fatomic-4.c?ref=8119fc93077ce835232c711273cd8f3b097f17f4", "patch": "@@ -0,0 +1,18 @@\n+/* PR middle-end/35611 */\n+/* { dg-options \"-O2\" } */\n+\n+extern void abort (void);\n+\n+int\n+main (void)\n+{\n+  long double d = .0L;\n+  int i;\n+  #pragma omp parallel for shared (d)\n+    for (i = 0; i < 1000; i++)\n+      #pragma omp atomic\n+\td += 1.0L;\n+  if (d != 1000.0L)\n+    abort ();\n+  return 0;\n+}"}]}