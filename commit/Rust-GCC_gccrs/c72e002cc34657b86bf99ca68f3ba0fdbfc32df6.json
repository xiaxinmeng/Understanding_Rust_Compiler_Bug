{"sha": "c72e002cc34657b86bf99ca68f3ba0fdbfc32df6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzcyZTAwMmNjMzQ2NTdiODZiZjk5Y2E2OGYzYmEwZmRiZmMzMmRmNg==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2017-06-19T18:59:00Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2017-06-19T18:59:00Z"}, "message": "badalloc1.C: Remove code path for -DSTACK_SIZE.\n\n* g++.old-deja/g++.eh/badalloc1.C: Remove code path for -DSTACK_SIZE.\n\n2017-06-19  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* g++.old-deja/g++.eh/badalloc1.C: Remove code path for\n\t-DSTACK_SIZE.\n\nFrom-SVN: r249384", "tree": {"sha": "620bcbfdf2ac9dce1d449388007a0586e0edb16d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/620bcbfdf2ac9dce1d449388007a0586e0edb16d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c72e002cc34657b86bf99ca68f3ba0fdbfc32df6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c72e002cc34657b86bf99ca68f3ba0fdbfc32df6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c72e002cc34657b86bf99ca68f3ba0fdbfc32df6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c72e002cc34657b86bf99ca68f3ba0fdbfc32df6/comments", "author": null, "committer": null, "parents": [{"sha": "4b691b139f04d13a00a959020ff976fdab60b9b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b691b139f04d13a00a959020ff976fdab60b9b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b691b139f04d13a00a959020ff976fdab60b9b1"}], "stats": {"total": 13, "additions": 5, "deletions": 8}, "files": [{"sha": "80ebf57cd902c9bb517f309bd2c68a8c12bc55e5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c72e002cc34657b86bf99ca68f3ba0fdbfc32df6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c72e002cc34657b86bf99ca68f3ba0fdbfc32df6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c72e002cc34657b86bf99ca68f3ba0fdbfc32df6", "patch": "@@ -1,3 +1,8 @@\n+2017-06-19  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* g++.old-deja/g++.eh/badalloc1.C: Remove code path for\n+\t-DSTACK_SIZE.\n+\n 2017-06-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/81125"}, {"sha": "b660e845d5b399c9b08ae246f024c818807066d6", "filename": "gcc/testsuite/g++.old-deja/g++.eh/badalloc1.C", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c72e002cc34657b86bf99ca68f3ba0fdbfc32df6/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fbadalloc1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c72e002cc34657b86bf99ca68f3ba0fdbfc32df6/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fbadalloc1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.eh%2Fbadalloc1.C?ref=c72e002cc34657b86bf99ca68f3ba0fdbfc32df6", "patch": "@@ -3,7 +3,6 @@\n // itself call malloc(), and will fail if there is no more\n // memory available.\n // { dg-do run { xfail { { xstormy16-*-* *-*-darwin[3-7]* } || vxworks_rtp } } }\n-// { dg-additional-options \"-DSTACK_SIZE=[dg-effective-target-value stack_size]\" { target { stack_size } } }\n // Copyright (C) 2000, 2002, 2003, 2010, 2012, 2014 Free Software Foundation, Inc.\n // Contributed by Nathan Sidwell 6 June 2000 <nathan@codesourcery.com>\n \n@@ -16,12 +15,6 @@ extern \"C\" void *memcpy(void *, const void *, size_t);\n // libstdc++ requires a large initialization time allocation for the\n // emergency EH allocation pool.  Add that to the arena size.\n \n-// Assume that STACK_SIZE defined implies a system that does not have a\n-// large data space either, and additionally that we're not linking against\n-// a shared libstdc++ (which requires quite a bit more initialization space).\n-#ifdef STACK_SIZE\n-const int arena_size = 256 + 8 * 128;\n-#else\n #if defined(__FreeBSD__) || defined(__sun__) || defined(__hpux__)\n // FreeBSD, Solaris and HP-UX require even more space at initialization time.\n // FreeBSD 5 now requires over 131072 bytes.\n@@ -32,7 +25,6 @@ const int arena_size = 262144 + 72 * 1024;\n // 32-bit-systems-based estimate.\n const int arena_size = 32768 * ((sizeof (void *) + 3)/4) + 72 * 1024;\n #endif\n-#endif\n \n struct object\n {"}]}