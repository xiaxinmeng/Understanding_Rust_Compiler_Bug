{"sha": "295ef2bba9e066657bfb2153dd24dbab5d24d2e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mjk1ZWYyYmJhOWUwNjY2NTdiZmIyMTUzZGQyNGRiYWI1ZDI0ZDJlOA==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-10-08T17:09:23Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-10-08T17:09:23Z"}, "message": "comperr.adb (Abort_In_Progress): New.\n\n        * comperr.adb (Abort_In_Progress): New.\n        (Compiler_Abort): Use it to prevent recursion.\n\nFrom-SVN: r46082", "tree": {"sha": "8c2960c118c02a29b21e6b6ef25b1ee37a3683b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8c2960c118c02a29b21e6b6ef25b1ee37a3683b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/295ef2bba9e066657bfb2153dd24dbab5d24d2e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/295ef2bba9e066657bfb2153dd24dbab5d24d2e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/295ef2bba9e066657bfb2153dd24dbab5d24d2e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/295ef2bba9e066657bfb2153dd24dbab5d24d2e8/comments", "author": null, "committer": null, "parents": [{"sha": "1f1b0541159f25e7d98b1b6b524983aa5de0c329", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f1b0541159f25e7d98b1b6b524983aa5de0c329", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f1b0541159f25e7d98b1b6b524983aa5de0c329"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "c7138f7090ed4cb377637a4d8cea804fede2a122", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295ef2bba9e066657bfb2153dd24dbab5d24d2e8/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295ef2bba9e066657bfb2153dd24dbab5d24d2e8/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=295ef2bba9e066657bfb2153dd24dbab5d24d2e8", "patch": "@@ -1,3 +1,8 @@\n+2001-10-08  Richard Henderson  <rth@redhat.com>\n+\n+\t* comperr.adb (Abort_In_Progress): New.\n+\t(Compiler_Abort): Use it to prevent recursion.\n+\n 2001-10-08  Robert Dewar <dewar@gnat.com>\n \n \t* atree.adb: Set Error_Posted in Error node, helps error recovery."}, {"sha": "b3d868fab607e67fa5e377ade5fddad7569340d6", "filename": "gcc/ada/comperr.adb", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/295ef2bba9e066657bfb2153dd24dbab5d24d2e8/gcc%2Fada%2Fcomperr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/295ef2bba9e066657bfb2153dd24dbab5d24d2e8/gcc%2Fada%2Fcomperr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcomperr.adb?ref=295ef2bba9e066657bfb2153dd24dbab5d24d2e8", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                            $Revision: 1.57 $\n+--                            $Revision: 1.1 $\n --                                                                          --\n --          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n --                                                                          --\n@@ -51,6 +51,14 @@ with System.Soft_Links; use System.Soft_Links;\n \n package body Comperr is\n \n+   ----------------\n+   -- Local Data --\n+   ----------------\n+\n+   Abort_In_Progress : Boolean := False;\n+   --  Used to prevent runaway recursion if something segfaults\n+   --  while processing a previous abort.\n+\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n@@ -82,6 +90,14 @@ package body Comperr is\n    --  Start of processing for Compiler_Abort\n \n    begin\n+      --  Prevent recursion through Compiler_Abort, e.g. via SIGSEGV.\n+\n+      if Abort_In_Progress then\n+         Exit_Program (E_Abort);\n+      end if;\n+\n+      Abort_In_Progress := True;\n+\n       --  If errors have already occured, then we guess that the abort may\n       --  well be caused by previous errors, and we don't make too much fuss\n       --  about it, since we want to let the programmer fix the errors first."}]}