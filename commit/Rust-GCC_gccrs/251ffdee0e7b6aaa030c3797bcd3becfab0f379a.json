{"sha": "251ffdee0e7b6aaa030c3797bcd3becfab0f379a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjUxZmZkZWUwZTdiNmFhYTAzMGMzNzk3YmNkM2JlY2ZhYjBmMzc5YQ==", "commit": {"author": {"name": "Jeffrey A Law", "email": "law@cygnus.com", "date": "1997-08-23T06:19:56Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1997-08-23T06:19:56Z"}, "message": "pa.c (pa_reorg): Always put begin_brtab and end_brtab insns around branch tables.\n\n        * pa.c (pa_reorg): Always put begin_brtab and end_brtab insns\n        around branch tables.\n        * pa.md (begin_brtab, end_brtab): Only emit the .begin_brtab\n        and .end_brtab directives if TARGET_GAS.\nShould fix bootstrap problem with PA port when not using gas.\n\nFrom-SVN: r14899", "tree": {"sha": "df4af9e9d174e8b85b1d5d06b95da996bed664e1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/df4af9e9d174e8b85b1d5d06b95da996bed664e1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/251ffdee0e7b6aaa030c3797bcd3becfab0f379a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251ffdee0e7b6aaa030c3797bcd3becfab0f379a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/251ffdee0e7b6aaa030c3797bcd3becfab0f379a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/251ffdee0e7b6aaa030c3797bcd3becfab0f379a/comments", "author": null, "committer": null, "parents": [{"sha": "2731427487e1c2945e99db30e4f95baec8f8631f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2731427487e1c2945e99db30e4f95baec8f8631f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2731427487e1c2945e99db30e4f95baec8f8631f"}], "stats": {"total": 56, "additions": 40, "deletions": 16}, "files": [{"sha": "5a839c08ceca4144ac1ba8a70866736d96858b74", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251ffdee0e7b6aaa030c3797bcd3becfab0f379a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251ffdee0e7b6aaa030c3797bcd3becfab0f379a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=251ffdee0e7b6aaa030c3797bcd3becfab0f379a", "patch": "@@ -1,3 +1,10 @@\n+Sat Aug 23 00:18:22 1997  Jeffrey A Law  (law@cygnus.com)\n+\n+\t* pa.c (pa_reorg): Always put begin_brtab and end_brtab insns\n+\taround branch tables.\n+\t* pa.md (begin_brtab, end_brtab): Only emit the .begin_brtab\n+\tand .end_brtab directives if TARGET_GAS.\n+\n Fri Aug 22 14:05:55 1997  Jim Wilson  <wilson@cygnus.com>\n \n \t* alias.c (true_dependence): Pass x_addr not x to varies."}, {"sha": "774a288135f352e162b2e5b0b0871723e3ea2335", "filename": "gcc/config/pa/pa.c", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251ffdee0e7b6aaa030c3797bcd3becfab0f379a/gcc%2Fconfig%2Fpa%2Fpa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251ffdee0e7b6aaa030c3797bcd3becfab0f379a/gcc%2Fconfig%2Fpa%2Fpa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.c?ref=251ffdee0e7b6aaa030c3797bcd3becfab0f379a", "patch": "@@ -5805,7 +5805,14 @@ following_call (insn)\n    The jump instructions within the table are special; we must be able \n    to identify them during assembly output (if the jumps don't get filled\n    we need to emit a nop rather than nullifying the delay slot)).  We\n-   identify jumps in switch tables by marking the SET with DImode.  */\n+   identify jumps in switch tables by marking the SET with DImode. \n+\n+   We also surround the jump table itself with BEGIN_BRTAB and END_BRTAB\n+   insns.  This serves two purposes, first it prevents jump.c from\n+   noticing that the last N entries in the table jump to the instruction\n+   immediately after the table and deleting the jumps.  Second, those\n+   insns mark where we should emit .begin_brtab and .end_brtab directives\n+   when using GAS (allows for better link time optimizations).  */\n \n pa_reorg (insns)\n      rtx insns;\n@@ -5832,9 +5839,8 @@ pa_reorg (insns)\n \t\t  && GET_CODE (PATTERN (insn)) != ADDR_DIFF_VEC))\n \t    continue;\n \n-\t  /* If needed, emit marker for the beginning of the branch table.  */\n-\t  if (TARGET_GAS)\n-\t    emit_insn_before (gen_begin_brtab (), insn);\n+\t  /* Emit marker for the beginning of the branch table.  */\n+\t  emit_insn_before (gen_begin_brtab (), insn);\n \n \t  pattern = PATTERN (insn);\n \t  location = PREV_INSN (insn);\n@@ -5873,19 +5879,16 @@ pa_reorg (insns)\n \t      location = NEXT_INSN (location);\n \t    }\n \n-\t  /* If needed, emit marker for the end of the branch table.  */\n-\t  if (TARGET_GAS)\n-\t    {\n-\t      emit_insn_before (gen_end_brtab (), location);\n-\t      location = NEXT_INSN (location);\n-\t      emit_barrier_after (location);\n-\t    }\n+\t  /* Emit marker for the end of the branch table.  */\n+\t  emit_insn_before (gen_end_brtab (), location);\n+\t  location = NEXT_INSN (location);\n+\t  emit_barrier_after (location);\n \n \t  /* Delete the ADDR_VEC or ADDR_DIFF_VEC.  */\n \t  delete_insn (insn);\n \t}\n     }\n-  else if (TARGET_GAS)\n+  else\n     {\n       /* Sill need an end_brtab insn.  */\n       insns = get_insns ();"}, {"sha": "2f13795399b8a44f2f48152e6bbcb8e17d987c67", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/251ffdee0e7b6aaa030c3797bcd3becfab0f379a/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/251ffdee0e7b6aaa030c3797bcd3becfab0f379a/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=251ffdee0e7b6aaa030c3797bcd3becfab0f379a", "patch": "@@ -4397,15 +4397,29 @@\n ;; begin and end.\n (define_insn \"begin_brtab\"\n   [(const_int 1)]\n-  \"TARGET_GAS\"\n-  \".begin_brtab\"\n+  \"\"\n+  \"*\n+{\n+  /* Only GAS actually supports this pseudo-op.  */\n+  if (TARGET_GAS)\n+    return \\\".begin_brtab\\\";\n+  else\n+    return \\\"\\\";\n+}\"\n   [(set_attr \"type\" \"move\")\n    (set_attr \"length\" \"0\")])\n \n (define_insn \"end_brtab\"\n   [(const_int 2)]\n-  \"TARGET_GAS\"\n-  \".end_brtab\"\n+  \"\"\n+  \"*\n+{\n+  /* Only GAS actually supports this pseudo-op.  */\n+  if (TARGET_GAS)\n+    return \\\".end_brtab\\\";\n+  else\n+    return \\\"\\\";\n+}\"\n   [(set_attr \"type\" \"move\")\n    (set_attr \"length\" \"0\")])\n "}]}