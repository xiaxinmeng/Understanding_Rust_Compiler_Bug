{"sha": "c291f8b146078790ba0bec3ce3cc5a86c8d8c187", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI5MWY4YjE0NjA3ODc5MGJhMGJlYzNjZTNjYzVhODZjOGQ4YzE4Nw==", "commit": {"author": {"name": "Volker Reichelt", "email": "reichelt@igpm.rwth-aachen.de", "date": "2006-06-07T16:08:30Z"}, "committer": {"name": "Volker Reichelt", "email": "reichelt@gcc.gnu.org", "date": "2006-06-07T16:08:30Z"}, "message": "re PR c++/27601 (ICE (in fold_offsetof_1, at c-common.c:5998) on strange offsetof)\n\n\tPR c++/27601\n\t* cp-tree.h (finish_offsetof): Add prototype.\n\t* semantics.c (finish_offsetof): New function.\n\t* parser.c (cp_parser_builtin_offsetof): Call it instead of\n\tfold_offsetof.\n\t* pt.c (tsubst_copy_and_build): Likewise.\n\n\t* g++.dg/ext/offsetof1.C: Test member functions.\n\nFrom-SVN: r114469", "tree": {"sha": "171e00a1514b9456a0a43f471d90876c66f4b1f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/171e00a1514b9456a0a43f471d90876c66f4b1f4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c291f8b146078790ba0bec3ce3cc5a86c8d8c187", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c291f8b146078790ba0bec3ce3cc5a86c8d8c187", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c291f8b146078790ba0bec3ce3cc5a86c8d8c187", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c291f8b146078790ba0bec3ce3cc5a86c8d8c187/comments", "author": null, "committer": null, "parents": [{"sha": "1af3e54d508cee22e0b416c085a26011b8b457a1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1af3e54d508cee22e0b416c085a26011b8b457a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1af3e54d508cee22e0b416c085a26011b8b457a1"}], "stats": {"total": 39, "additions": 37, "deletions": 2}, "files": [{"sha": "d401f88d79f4a8492beb0ca14284637f32f68590", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c291f8b146078790ba0bec3ce3cc5a86c8d8c187/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c291f8b146078790ba0bec3ce3cc5a86c8d8c187/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c291f8b146078790ba0bec3ce3cc5a86c8d8c187", "patch": "@@ -1,3 +1,12 @@\n+2006-06-07  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR c++/27601\n+\t* cp-tree.h (finish_offsetof): Add prototype.\n+\t* semantics.c (finish_offsetof): New function.\n+\t* parser.c (cp_parser_builtin_offsetof): Call it instead of\n+\tfold_offsetof.\n+\t* pt.c (tsubst_copy_and_build): Likewise.\n+\n 2006-06-06  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/27177"}, {"sha": "77b906729eb82239cb69ea3ccb935e3c7b388a8d", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c291f8b146078790ba0bec3ce3cc5a86c8d8c187/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c291f8b146078790ba0bec3ce3cc5a86c8d8c187/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=c291f8b146078790ba0bec3ce3cc5a86c8d8c187", "patch": "@@ -4252,6 +4252,7 @@ extern tree finish_id_expression\t\t(tree, tree, tree,\n \t\t\t\t\t\t bool, bool, bool, bool,\n \t\t\t\t\t\t const char **);\n extern tree finish_typeof\t\t\t(tree);\n+extern tree finish_offsetof\t\t\t(tree);\n extern void finish_decl_cleanup\t\t\t(tree, tree);\n extern void finish_eh_cleanup\t\t\t(tree);\n extern void expand_body\t\t\t\t(tree);"}, {"sha": "eaebe191c54ac2b5eab429e04b67ff842a894228", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c291f8b146078790ba0bec3ce3cc5a86c8d8c187/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c291f8b146078790ba0bec3ce3cc5a86c8d8c187/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=c291f8b146078790ba0bec3ce3cc5a86c8d8c187", "patch": "@@ -6036,7 +6036,7 @@ cp_parser_builtin_offsetof (cp_parser *parser)\n   if (processing_template_decl)\n     expr = build1 (OFFSETOF_EXPR, size_type_node, expr);\n   else\n-    expr = fold_offsetof (expr);\n+    expr = finish_offsetof (expr);\n \n  failure:\n   parser->integral_constant_expression_p = save_ice_p;"}, {"sha": "07963d6b37098f16e2f4b03ca8e58faa81add914", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c291f8b146078790ba0bec3ce3cc5a86c8d8c187/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c291f8b146078790ba0bec3ce3cc5a86c8d8c187/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=c291f8b146078790ba0bec3ce3cc5a86c8d8c187", "patch": "@@ -9126,7 +9126,7 @@ tsubst_copy_and_build (tree t,\n \t\t\t\t\t  in_decl));\n \n     case OFFSETOF_EXPR:\n-      return fold_offsetof (RECUR (TREE_OPERAND (t, 0)));\n+      return finish_offsetof (RECUR (TREE_OPERAND (t, 0)));\n \n     case STMT_EXPR:\n       {"}, {"sha": "8b4142316666c42b1c6d9a3aef2e9dd632f83656", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c291f8b146078790ba0bec3ce3cc5a86c8d8c187/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c291f8b146078790ba0bec3ce3cc5a86c8d8c187/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=c291f8b146078790ba0bec3ce3cc5a86c8d8c187", "patch": "@@ -2881,6 +2881,23 @@ finish_typeof (tree expr)\n   return type;\n }\n \n+/* Perform C++-specific checks for __builtin_offsetof before calling\n+   fold_offsetof.  */\n+\n+tree\n+finish_offsetof (tree expr)\n+{\n+  if (TREE_CODE (TREE_TYPE (expr)) == FUNCTION_TYPE\n+      || TREE_CODE (TREE_TYPE (expr)) == METHOD_TYPE\n+      || TREE_CODE (TREE_TYPE (expr)) == UNKNOWN_TYPE)\n+    {\n+      error (\"cannot apply %<offsetof%> to member function %qD\",\n+\t     TREE_OPERAND (expr, 1));\n+      return error_mark_node;\n+    }\n+  return fold_offsetof (expr);\n+}\n+\n /* Called from expand_body via walk_tree.  Replace all AGGR_INIT_EXPRs\n    with equivalent CALL_EXPRs.  */\n "}, {"sha": "3e0314552d938bd3d2637d0a608341ce638c923e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c291f8b146078790ba0bec3ce3cc5a86c8d8c187/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c291f8b146078790ba0bec3ce3cc5a86c8d8c187/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c291f8b146078790ba0bec3ce3cc5a86c8d8c187", "patch": "@@ -1,3 +1,8 @@\n+2006-06-07  Volker Reichelt  <reichelt@igpm.rwth-aachen.de>\n+\n+\tPR c++/27601\n+\t* g++.dg/ext/offsetof1.C: Test member functions.\n+\n 2006-06-07  Steve Ellcey  <sje@cup.hp.com>\n \n \t* gcc.dg/pr27095.c: Improve scanning."}, {"sha": "0cfabf8033c9b2cfdc9ef3de449bd22952f9e485", "filename": "gcc/testsuite/g++.dg/ext/offsetof1.C", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c291f8b146078790ba0bec3ce3cc5a86c8d8c187/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Foffsetof1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c291f8b146078790ba0bec3ce3cc5a86c8d8c187/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Foffsetof1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Foffsetof1.C?ref=c291f8b146078790ba0bec3ce3cc5a86c8d8c187", "patch": "@@ -4,6 +4,9 @@\n \n struct bar {\n   static int foo;\n+  static int baz();\n };\n \n int a = __builtin_offsetof(bar, foo);  // { dg-error \"static data member\" }\n+int b = __builtin_offsetof(bar, baz);  // { dg-error \"member function\" }\n+int c = __builtin_offsetof(bar, ~bar);  // { dg-error \"member function\" }"}]}