{"sha": "c9a6b38f011c8ea884800662ee567910251a57d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlhNmIzOGYwMTFjOGVhODg0ODAwNjYyZWU1Njc5MTAyNTFhNTdkMg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-02T12:16:17Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-02T12:16:17Z"}, "message": "[multiple changes]\n\n2012-10-02  Eric Botcazou  <ebotcazou@adacore.com>\n\n\t* types.h: Minor cosmetic fix.\n\n2012-10-02  Robert Dewar  <dewar@adacore.com>\n\n\t* sinfo.ads: Remove refs of N_Conditional_Expression and\n\tN_Parameterized_Expression.\n\n2012-10-02  Thomas Quinot  <quinot@adacore.com>\n\n\t* exp_aggr.adb (Get_Component_Val): Rewrite code that computes\n\tjustification of bits in enclosing word in an attempt to make\n\tit clearer.\n\nFrom-SVN: r191973", "tree": {"sha": "bba7d9a5ccb0b3ff25add60455dd4928bd9186f1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bba7d9a5ccb0b3ff25add60455dd4928bd9186f1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9a6b38f011c8ea884800662ee567910251a57d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9a6b38f011c8ea884800662ee567910251a57d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9a6b38f011c8ea884800662ee567910251a57d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9a6b38f011c8ea884800662ee567910251a57d2/comments", "author": null, "committer": null, "parents": [{"sha": "f563ce55854c93f9a2b7075d5f84fc6301d41c30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f563ce55854c93f9a2b7075d5f84fc6301d41c30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f563ce55854c93f9a2b7075d5f84fc6301d41c30"}], "stats": {"total": 49, "additions": 33, "deletions": 16}, "files": [{"sha": "dd4f91a57c576d5a6637c2ec92bb475979e5bb27", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a6b38f011c8ea884800662ee567910251a57d2/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a6b38f011c8ea884800662ee567910251a57d2/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c9a6b38f011c8ea884800662ee567910251a57d2", "patch": "@@ -1,3 +1,7 @@\n+2012-10-02  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* types.h: Minor cosmetic fix.\n+\n 2012-10-02  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gcc-interfaces/decl.c (elaborate_expression_1): Use the variable for\n@@ -6,6 +10,17 @@\n \t* gcc-interface/trans.c (gigi): Fix formatting.\n \t(build_return_expr): Apply the NRV optimization only for BLKmode.\n \n+2012-10-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sinfo.ads: Remove refs of N_Conditional_Expression and\n+\tN_Parameterized_Expression.\n+\n+2012-10-02  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* exp_aggr.adb (Get_Component_Val): Rewrite code that computes\n+\tjustification of bits in enclosing word in an attempt to make\n+\tit clearer.\n+\n 2012-10-02  Robert Dewar  <dewar@adacore.com>\n \n \t* par_sco.adb, sem_ch3.adb, layout.adb, exp_ch7.adb, exp_imgv.adb,"}, {"sha": "1d42bf89948aeb89eb1d5af2605d84545b2c3896", "filename": "gcc/ada/exp_aggr.adb", "status": "modified", "additions": 18, "deletions": 9, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a6b38f011c8ea884800662ee567910251a57d2/gcc%2Fada%2Fexp_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a6b38f011c8ea884800662ee567910251a57d2/gcc%2Fada%2Fexp_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_aggr.adb?ref=c9a6b38f011c8ea884800662ee567910251a57d2", "patch": "@@ -6167,21 +6167,30 @@ package body Exp_Aggr is\n             Expr : Node_Id;\n             --  Next expression from positional parameters of aggregate\n \n+            Left_Justified : Boolean;\n+            --  Set True if we are filling the high order bits of the target\n+            --  value (i.e. the value is left justified).\n+\n          begin\n             --  For little endian, we fill up the low order bits of the target\n             --  value. For big endian we fill up the high order bits of the\n             --  target value (which is a left justified modular value).\n \n-            --  Above comment needs extending for the code below, which is by\n-            --  the way incomprehensible, I have no idea what a xor b xor c\n-            --  means, and it hurts my brain to try to figure it out???\n-            --  Let's introduce a new variable, perhaps Effectively_Big_Endian\n-            --  and compute it with clearer code ???\n+            Left_Justified := Bytes_Big_Endian;\n \n-            if Bytes_Big_Endian\n-              xor Debug_Flag_8\n-              xor Reverse_Storage_Order (Base_Type (Typ))\n-            then\n+            --  Switch justification if using -gnatd8\n+\n+            if Debug_Flag_8 then\n+               Left_Justified := not Left_Justified;\n+            end if;\n+\n+            --  Switch justfification if reverse storage order\n+\n+            if Reverse_Storage_Order (Base_Type (Typ)) then\n+               Left_Justified := not Left_Justified;\n+            end if;\n+\n+            if Left_Justified then\n                Shift := Csiz * (Len - 1);\n                Incr  := -Csiz;\n             else"}, {"sha": "c2c19350a0999459d6ce8cfe7ac0bfb0a15d5b4c", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a6b38f011c8ea884800662ee567910251a57d2/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a6b38f011c8ea884800662ee567910251a57d2/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=c9a6b38f011c8ea884800662ee567910251a57d2", "patch": "@@ -12439,10 +12439,4 @@ package Sinfo is\n    --  Rename N_Return_Statement to be N_Simple_Return_Statement. Clients\n    --  should refer to N_Simple_Return_Statement.\n \n-   N_Parameterized_Expression : constant Node_Kind := N_Expression_Function;\n-   --  Old name for expression function (used during Ada 2012 transition)\n-\n-   N_Conditional_Expression : Node_Kind renames N_If_Expression;\n-   --  Old name for if expression (used during Ada 2012 transition)\n-\n end Sinfo;"}, {"sha": "a0f28910d1139931df1ed4d2c6ae34a67cd4ea63", "filename": "gcc/ada/types.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9a6b38f011c8ea884800662ee567910251a57d2/gcc%2Fada%2Ftypes.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9a6b38f011c8ea884800662ee567910251a57d2/gcc%2Fada%2Ftypes.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftypes.h?ref=c9a6b38f011c8ea884800662ee567910251a57d2", "patch": "@@ -384,4 +384,3 @@ typedef Int Mechanism_Type;\n #define SE_Object_Too_Large                34\n \n #define LAST_REASON_CODE                   34\n-"}]}