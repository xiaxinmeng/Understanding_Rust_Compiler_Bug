{"sha": "2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFiYTMzZGQ2ZjJkOWNmMTZiMmMyZTI1ZTczMDcxYjVlNmQ0MzY4Yw==", "commit": {"author": {"name": "Ziemowit Laski", "email": "zlaski@apple.com", "date": "2005-06-28T02:01:08Z"}, "committer": {"name": "Ziemowit Laski", "email": "zlaski@gcc.gnu.org", "date": "2005-06-28T02:01:08Z"}, "message": "objc-act.c (objc_build_struct): Save the TYPE_OBJC_INFO portion of TYPE_LANG_SPECIFIC info for all variants of...\n\n[gcc/objc/ChangeLog]\n2005-06-27  Ziemowit Laski  <zlaski@apple.com>\n\n        * objc-act.c (objc_build_struct): Save the TYPE_OBJC_INFO\n        portion of TYPE_LANG_SPECIFIC info for all variants of\n        a class before calling finish_struct(), and restore\n        same TYPE_OBJC_INFO afterwards.\n\n[gcc/testsuite/ChangeLog]\n2005-06-27  Ziemowit Laski  <zlaski@apple.com>\n\n        * obj-c++.dg/proto-lossage-5.mm: New.\n        * objc.dg/proto-lossage-5.m: New.\n\nFrom-SVN: r101368", "tree": {"sha": "4dc299720e3fd440e3139ea0c208910bedcceae5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4dc299720e3fd440e3139ea0c208910bedcceae5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c/comments", "author": null, "committer": null, "parents": [{"sha": "0d44cd2c64966f4605d1b0a17d5be994aee11c99", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d44cd2c64966f4605d1b0a17d5be994aee11c99", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d44cd2c64966f4605d1b0a17d5be994aee11c99"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "57a326ade943b1cfe3c642247c1c99ba4f5d4532", "filename": "gcc/objc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c/gcc%2Fobjc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c/gcc%2Fobjc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2FChangeLog?ref=2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c", "patch": "@@ -1,3 +1,10 @@\n+2005-06-27  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* objc-act.c (objc_build_struct): Save the TYPE_OBJC_INFO\n+\tportion of TYPE_LANG_SPECIFIC info for all variants of\n+\ta class before calling finish_struct(), and restore\n+\tsame TYPE_OBJC_INFO afterwards.\n+\n 2005-06-25  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* all files: Update FSF address in copyright headers."}, {"sha": "35951fea145d8ba406459c61f156918b4d706fd2", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c", "patch": "@@ -801,6 +801,7 @@ objc_build_struct (tree name, tree fields, tree super_name)\n {\n   tree s = start_struct (RECORD_TYPE, name);\n   tree super = (super_name ? xref_tag (RECORD_TYPE, super_name) : NULL_TREE);\n+  tree t, objc_info = NULL_TREE;\n \n   if (super)\n     {\n@@ -844,8 +845,23 @@ objc_build_struct (tree name, tree fields, tree super_name)\n       fields = base;\n     }\n \n+  /* NB: Calling finish_struct() may cause type TYPE_LANG_SPECIFIC fields\n+     in all variants of this RECORD_TYPE to be clobbered, but it is therein\n+     that we store protocol conformance info (e.g., 'NSObject <MyProtocol>').\n+     Hence, we must squirrel away the ObjC-specific information before calling\n+     finish_struct(), and then reinstate it afterwards.  */\n+\n+  for (t = TYPE_NEXT_VARIANT (s); t; t = TYPE_NEXT_VARIANT (t))\n+    objc_info\n+      = chainon (objc_info,\n+\t\t build_tree_list (NULL_TREE, TYPE_OBJC_INFO (t)));\n+\n   s = finish_struct (s, fields, NULL_TREE);\n \n+  for (t = TYPE_NEXT_VARIANT (s); t;\n+       t = TYPE_NEXT_VARIANT (t), objc_info = TREE_CHAIN (objc_info))\n+    TYPE_OBJC_INFO (t) = TREE_VALUE (objc_info);\n+\n   /* Use TYPE_BINFO structures to point at the super class, if any.  */\n   objc_xref_basetypes (s, super);\n "}, {"sha": "5c4b635a4bf20bd3529b5d79f953c3ebad9495a2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c", "patch": "@@ -1,3 +1,8 @@\n+2005-06-27  Ziemowit Laski  <zlaski@apple.com>\n+\n+\t* obj-c++.dg/proto-lossage-5.mm: New.\n+\t* objc.dg/proto-lossage-5.m: New.\n+\n 2005-06-27  Diego Novillo  <dnovillo@redhat.com>\n \n \tPR 21959"}, {"sha": "35c0956ed8ecfcc7372d4d281b5569ef44787961", "filename": "gcc/testsuite/obj-c++.dg/proto-lossage-5.mm", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproto-lossage-5.mm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproto-lossage-5.mm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobj-c%2B%2B.dg%2Fproto-lossage-5.mm?ref=2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c", "patch": "@@ -0,0 +1,22 @@\n+/* Do not lose references to forward-declared protocols.  */\n+/* { dg-do compile } */\n+@class MyBaseClass;\n+@class MyClassThatFails;\n+@protocol _MyProtocol;\n+\n+@interface MyClassThatFails\n+- (MyBaseClass<_MyProtocol> *) aMethod;\n+@end\n+\n+@interface MyBaseClass\n+@end\n+\n+@protocol _MyProtocol\n+@end\n+\n+@implementation MyClassThatFails\n+- (MyBaseClass<_MyProtocol> *) aMethod\n+{\n+    return 0;\n+}\n+@end"}, {"sha": "35c0956ed8ecfcc7372d4d281b5569ef44787961", "filename": "gcc/testsuite/objc.dg/proto-lossage-5.m", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-lossage-5.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-lossage-5.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fproto-lossage-5.m?ref=2aba33dd6f2d9cf16b2c2e25e73071b5e6d4368c", "patch": "@@ -0,0 +1,22 @@\n+/* Do not lose references to forward-declared protocols.  */\n+/* { dg-do compile } */\n+@class MyBaseClass;\n+@class MyClassThatFails;\n+@protocol _MyProtocol;\n+\n+@interface MyClassThatFails\n+- (MyBaseClass<_MyProtocol> *) aMethod;\n+@end\n+\n+@interface MyBaseClass\n+@end\n+\n+@protocol _MyProtocol\n+@end\n+\n+@implementation MyClassThatFails\n+- (MyBaseClass<_MyProtocol> *) aMethod\n+{\n+    return 0;\n+}\n+@end"}]}