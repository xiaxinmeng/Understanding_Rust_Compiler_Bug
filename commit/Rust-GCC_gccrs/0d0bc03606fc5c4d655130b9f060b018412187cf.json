{"sha": "0d0bc03606fc5c4d655130b9f060b018412187cf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQwYmMwMzYwNmZjNWM0ZDY1NTEzMGI5ZjA2MGIwMTg0MTIxODdjZg==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2004-05-28T21:56:59Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2004-05-28T21:56:59Z"}, "message": "function.cc: New.\n\n\t* testsuite/g++.dg/charset/function.cc: New.\n\n\t* testsuite/gcc.dg/charset/function.c: New.\n\n\t* c-decl.c (c_make_fname_decl): Free return value from\n\tfname_as_string.\n\n\t* cp/decl.c (cp_make_fname_decl): Free return value from\n\tfname_as_string.\n\n\t* c-common.c (fname_as_string): Translate if necessary.\n\nFrom-SVN: r82381", "tree": {"sha": "03c713e614f2501fa7abc0b4ad076f2a234f562e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/03c713e614f2501fa7abc0b4ad076f2a234f562e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d0bc03606fc5c4d655130b9f060b018412187cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d0bc03606fc5c4d655130b9f060b018412187cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d0bc03606fc5c4d655130b9f060b018412187cf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d0bc03606fc5c4d655130b9f060b018412187cf/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4bb4ae964aaf3ef1dd86d2b595a022a9961aee5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4bb4ae964aaf3ef1dd86d2b595a022a9961aee5b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4bb4ae964aaf3ef1dd86d2b595a022a9961aee5b"}], "stats": {"total": 59, "additions": 57, "deletions": 2}, "files": [{"sha": "a5ed97f3dc387e20305ff9c401627565e425328d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0bc03606fc5c4d655130b9f060b018412187cf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0bc03606fc5c4d655130b9f060b018412187cf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d0bc03606fc5c4d655130b9f060b018412187cf", "patch": "@@ -1,3 +1,17 @@\n+2004-05-28  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* testsuite/g++.dg/charset/function.cc: New.\n+\n+\t* testsuite/gcc.dg/charset/function.c: New.\n+\n+\t* c-decl.c (c_make_fname_decl): Free return value from\n+\tfname_as_string.\n+\n+\t* cp/decl.c (cp_make_fname_decl): Free return value from\n+\tfname_as_string.\n+\n+\t* c-common.c (fname_as_string): Translate if necessary.\n+\n 2004-05-28  Geoffrey Keating  <geoffk@apple.com>\n \n \t* stringpool.c: Add comments to PCH saving/restoring routines."}, {"sha": "3cf1baa7a8eb6417469819fa6a85df2a155ca595", "filename": "gcc/c-common.c", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0bc03606fc5c4d655130b9f060b018412187cf/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0bc03606fc5c4d655130b9f060b018412187cf/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=0d0bc03606fc5c4d655130b9f060b018412187cf", "patch": "@@ -1086,12 +1086,13 @@ finish_fname_decls (void)\n }\n \n /* Return the text name of the current function, suitably prettified\n-   by PRETTY_P.  */\n+   by PRETTY_P.  Return string must be freed by caller.  */\n \n const char *\n fname_as_string (int pretty_p)\n {\n   const char *name = \"top level\";\n+  char *namep;\n   int vrb = 2;\n \n   if (! pretty_p)\n@@ -1103,7 +1104,26 @@ fname_as_string (int pretty_p)\n   if (current_function_decl)\n     name = lang_hooks.decl_printable_name (current_function_decl, vrb);\n \n-  return name;\n+  if (c_lex_string_translate)\n+    {\n+      int len = strlen (name) + 3; /* Two for '\"'s.  One for NULL.  */\n+      cpp_string cstr = { 0, 0 }, strname;\n+\n+      namep = xmalloc (len);\n+      snprintf (namep, len, \"\\\"%s\\\"\", name);\n+      strname.text = (unsigned char *) namep;\n+      strname.len = len - 1;\n+\n+      if (cpp_interpret_string (parse_in, &strname, 1, &cstr, false))\n+\treturn (char *) cstr.text;\n+    }\n+  else\n+    {\n+      namep = (char *) xcalloc (strlen (name) + 1, sizeof (char));\n+      namep = xstrdup (name);\n+    }\n+\n+  return namep;\n }\n \n /* Return the VAR_DECL for a const char array naming the current"}, {"sha": "ce39f6f54f4520674b7622561b3a9ca03c6ed6f7", "filename": "gcc/c-decl.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0bc03606fc5c4d655130b9f060b018412187cf/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0bc03606fc5c4d655130b9f060b018412187cf/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=0d0bc03606fc5c4d655130b9f060b018412187cf", "patch": "@@ -2362,6 +2362,7 @@ c_make_fname_decl (tree id, int type_dep)\n   DECL_ARTIFICIAL (decl) = 1;\n \n   init = build_string (length + 1, name);\n+  free ((char *) name);\n   TREE_TYPE (init) = type;\n   DECL_INITIAL (decl) = init;\n "}, {"sha": "ab4c2bcba0e5a7d6e01ff463e6a6379ff7673a8e", "filename": "gcc/testsuite/g++.dg/charset/function.cc", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0bc03606fc5c4d655130b9f060b018412187cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcharset%2Ffunction.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0bc03606fc5c4d655130b9f060b018412187cf/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcharset%2Ffunction.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcharset%2Ffunction.cc?ref=0d0bc03606fc5c4d655130b9f060b018412187cf", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile }\n+   { dg-require-iconv \"IBM-1047\" }\n+   { dg-final { scan-assembler-not \"\\\"foobar\\\"\" } } */\n+\n+const char *str;\n+\n+void foobar (void)\n+{\n+  str = __FUNCTION__;\n+}"}, {"sha": "ab4c2bcba0e5a7d6e01ff463e6a6379ff7673a8e", "filename": "gcc/testsuite/gcc.dg/charset/function.c", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d0bc03606fc5c4d655130b9f060b018412187cf/gcc%2Ftestsuite%2Fgcc.dg%2Fcharset%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d0bc03606fc5c4d655130b9f060b018412187cf/gcc%2Ftestsuite%2Fgcc.dg%2Fcharset%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcharset%2Ffunction.c?ref=0d0bc03606fc5c4d655130b9f060b018412187cf", "patch": "@@ -0,0 +1,10 @@\n+/* { dg-do compile }\n+   { dg-require-iconv \"IBM-1047\" }\n+   { dg-final { scan-assembler-not \"\\\"foobar\\\"\" } } */\n+\n+const char *str;\n+\n+void foobar (void)\n+{\n+  str = __FUNCTION__;\n+}"}]}