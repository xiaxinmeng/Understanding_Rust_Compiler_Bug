{"sha": "cf35eebc4019446ecbd7b86d4f999e11aa79f5a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2YzNWVlYmM0MDE5NDQ2ZWNiZDdiODZkNGY5OTllMTFhYTc5ZjVhMQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@hxi.com", "date": "2001-08-10T14:06:14Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2001-08-10T14:06:14Z"}, "message": "* config/h8300/h8300.h: Fix formatting.\n\nFrom-SVN: r44763", "tree": {"sha": "dd97d36eb757e042ec620df2ea8be0284472b473", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dd97d36eb757e042ec620df2ea8be0284472b473"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cf35eebc4019446ecbd7b86d4f999e11aa79f5a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf35eebc4019446ecbd7b86d4f999e11aa79f5a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf35eebc4019446ecbd7b86d4f999e11aa79f5a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf35eebc4019446ecbd7b86d4f999e11aa79f5a1/comments", "author": null, "committer": null, "parents": [{"sha": "07b2f2fd6efdf33ab13eb31fc8ea38668dbf6ed6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b2f2fd6efdf33ab13eb31fc8ea38668dbf6ed6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07b2f2fd6efdf33ab13eb31fc8ea38668dbf6ed6"}], "stats": {"total": 32, "additions": 19, "deletions": 13}, "files": [{"sha": "a76f2e690f326e1ea836d148dbd59535b802cc9d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf35eebc4019446ecbd7b86d4f999e11aa79f5a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf35eebc4019446ecbd7b86d4f999e11aa79f5a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cf35eebc4019446ecbd7b86d4f999e11aa79f5a1", "patch": "@@ -1,3 +1,7 @@\n+2001-08-10  Kazu Hirata  <kazu@hxi.com>\n+\n+\t* config/h8300/h8300.h: Fix formatting.\n+\n 2001-08-08  Jason Merrill  <jason_merrill@redhat.com>\n \n \t* c-common.h (RETURN_NULLIFIED_P): Lose."}, {"sha": "dc7a8ace768e46bf53c1442e76a0329bdc23cb54", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cf35eebc4019446ecbd7b86d4f999e11aa79f5a1/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cf35eebc4019446ecbd7b86d4f999e11aa79f5a1/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=cf35eebc4019446ecbd7b86d4f999e11aa79f5a1", "patch": "@@ -1134,17 +1134,17 @@ readonly_data ()\t\t\t\t\t\t\t\\\n /* If we are referencing a function that is supposed to be called\n    through the function vector, the SYMBOL_REF_FLAG in the rtl\n    so the call patterns can generate the correct code.  */\n-#define ENCODE_SECTION_INFO(DECL)\t\t\t\\\n-  if (TREE_CODE (DECL) == FUNCTION_DECL\t\t\t\\\n-      && h8300_funcvec_function_p (DECL))\t\t\\\n-    SYMBOL_REF_FLAG (XEXP (DECL_RTL (DECL), 0)) = 1;\t\\\n-  else if (TREE_CODE (DECL) == VAR_DECL\t\t\t\\\n-\t   && (TREE_STATIC (DECL) || DECL_EXTERNAL (DECL)) \\\n-\t   && h8300_eightbit_data_p (DECL))\t\t\\\n-    SYMBOL_REF_FLAG (XEXP (DECL_RTL (DECL), 0)) = 1;\t\\\n-  else if (TREE_CODE (DECL) == VAR_DECL\t\t\t\\\n-\t   && (TREE_STATIC (DECL) || DECL_EXTERNAL (DECL)) \\\n-\t   && h8300_tiny_data_p (DECL))\t\t\t\\\n+#define ENCODE_SECTION_INFO(DECL)\t\t\t\t\\\n+  if (TREE_CODE (DECL) == FUNCTION_DECL\t\t\t\t\\\n+      && h8300_funcvec_function_p (DECL))\t\t\t\\\n+    SYMBOL_REF_FLAG (XEXP (DECL_RTL (DECL), 0)) = 1;\t\t\\\n+  else if (TREE_CODE (DECL) == VAR_DECL\t\t\t\t\\\n+\t   && (TREE_STATIC (DECL) || DECL_EXTERNAL (DECL))\t\\\n+\t   && h8300_eightbit_data_p (DECL))\t\t\t\\\n+    SYMBOL_REF_FLAG (XEXP (DECL_RTL (DECL), 0)) = 1;\t\t\\\n+  else if (TREE_CODE (DECL) == VAR_DECL\t\t\t\t\\\n+\t   && (TREE_STATIC (DECL) || DECL_EXTERNAL (DECL))\t\\\n+\t   && h8300_tiny_data_p (DECL))\t\t\t\t\\\n     h8300_encode_label (DECL);\n \n /* Store the user-specified part of SYMBOL_NAME in VAR.\n@@ -1250,7 +1250,8 @@ readonly_data ()\t\t\t\t\t\t\t\\\n       char dstr[30];\t\t\t\t\t\t\\\n       REAL_VALUE_TO_DECIMAL ((VALUE), \"%.20e\", dstr);\t\t\\\n       fprintf (FILE, \"\\t.double %s\\n\", dstr);\t\t\t\\\n-    } while (0)\n+    }\t\t\t\t\t\t\t\t\\\n+  while (0)\n \n /* This is how to output an assembler line defining a `float' constant.  */\n #define ASM_OUTPUT_FLOAT(FILE, VALUE)\t\t\t\t\\\n@@ -1259,7 +1260,8 @@ readonly_data ()\t\t\t\t\t\t\t\\\n       char dstr[30];\t\t\t\t\t\t\\\n       REAL_VALUE_TO_DECIMAL ((VALUE), \"%.20e\", dstr);\t\t\\\n       fprintf (FILE, \"\\t.float %s\\n\", dstr);\t\t\t\\\n-    } while (0)\n+    }\t\t\t\t\t\t\t\t\\\n+  while (0)\n \n /* This is how to output an assembler line defining an `int' constant.  */\n "}]}