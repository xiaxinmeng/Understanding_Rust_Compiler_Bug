{"sha": "99c222911bb37a9103ebb2c46f3bb194b1548191", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTljMjIyOTExYmIzN2E5MTAzZWJiMmM0NmYzYmIxOTRiMTU0ODE5MQ==", "commit": {"author": {"name": "Pascal Obry", "email": "obry@adacore.com", "date": "2006-02-15T09:40:43Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2006-02-15T09:40:43Z"}, "message": "g-catiio.adb (Sec_Number): New type used to compute the number of seconds since 1-1-1970.\n\n2006-02-13  Pascal Obry  <obry@adacore.com>\n\n\t* g-catiio.adb (Sec_Number): New type used to compute the number of\n\tseconds since 1-1-1970.\n\t(Image) [Natural]: The parameter was an Integer, as we can't deal with\n\tnegative numbers (years, months...) it is better to have a Natural here.\n\tCode clean-up.\n\t(Image) [Number]: Change parameter from Long_Integer to Number.\n\t(Image): Use Number type to compute the seconds since 1-1-1970 to fix an\n\toverflow for dates past year 2038.\n\nFrom-SVN: r111072", "tree": {"sha": "eb03e50c6e5a8bb096f991e32ddb4a782cc95d83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eb03e50c6e5a8bb096f991e32ddb4a782cc95d83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/99c222911bb37a9103ebb2c46f3bb194b1548191", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99c222911bb37a9103ebb2c46f3bb194b1548191", "html_url": "https://github.com/Rust-GCC/gccrs/commit/99c222911bb37a9103ebb2c46f3bb194b1548191", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/99c222911bb37a9103ebb2c46f3bb194b1548191/comments", "author": {"login": "TurboGit", "id": 467069, "node_id": "MDQ6VXNlcjQ2NzA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/467069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TurboGit", "html_url": "https://github.com/TurboGit", "followers_url": "https://api.github.com/users/TurboGit/followers", "following_url": "https://api.github.com/users/TurboGit/following{/other_user}", "gists_url": "https://api.github.com/users/TurboGit/gists{/gist_id}", "starred_url": "https://api.github.com/users/TurboGit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TurboGit/subscriptions", "organizations_url": "https://api.github.com/users/TurboGit/orgs", "repos_url": "https://api.github.com/users/TurboGit/repos", "events_url": "https://api.github.com/users/TurboGit/events{/privacy}", "received_events_url": "https://api.github.com/users/TurboGit/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0c52d1f3443ac0e3ff508c243f83eecc051927d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0c52d1f3443ac0e3ff508c243f83eecc051927d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0c52d1f3443ac0e3ff508c243f83eecc051927d3"}], "stats": {"total": 31, "additions": 19, "deletions": 12}, "files": [{"sha": "4d0a49cbfa8ae437750aac82a9474bef5d9f7ebb", "filename": "gcc/ada/g-catiio.adb", "status": "modified", "additions": 19, "deletions": 12, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/99c222911bb37a9103ebb2c46f3bb194b1548191/gcc%2Fada%2Fg-catiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/99c222911bb37a9103ebb2c46f3bb194b1548191/gcc%2Fada%2Fg-catiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fg-catiio.adb?ref=99c222911bb37a9103ebb2c46f3bb194b1548191", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---                     Copyright (C) 1999-2005, AdaCore                     --\n+--                     Copyright (C) 1999-2006, AdaCore                     --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -58,6 +58,12 @@ package body GNAT.Calendar.Time_IO is\n \n    type Padding_Mode is (None, Zero, Space);\n \n+   type Sec_Number is mod 2 ** 64;\n+   --  Type used to compute the number of seconds since 01/01/1970. A 32 bit\n+   --  number will cover only a period of 136 years. This means that for date\n+   --  past 2106 the computation is not possible. A 64 bits number should be\n+   --  enough for a very large period of time.\n+\n    -----------------------\n    -- Local Subprograms --\n    -----------------------\n@@ -73,14 +79,14 @@ package body GNAT.Calendar.Time_IO is\n    --  length is set to 0 it does not cut it.\n \n    function Image\n-     (N       : Long_Integer;\n+     (N       : Sec_Number;\n       Padding : Padding_Mode := Zero;\n       Length  : Natural := 0) return String;\n    --  Return image of N. This number is eventually padded with zeros or spaces\n    --  depending of the length required. If length is 0 then no padding occurs.\n \n    function Image\n-     (N       : Integer;\n+     (N       : Natural;\n       Padding : Padding_Mode := Zero;\n       Length  : Natural := 0) return String;\n    --  As above with N provided in Integer format\n@@ -137,16 +143,16 @@ package body GNAT.Calendar.Time_IO is\n    -----------\n \n    function Image\n-     (N       : Integer;\n+     (N       : Natural;\n       Padding : Padding_Mode := Zero;\n       Length  : Natural := 0) return String\n    is\n    begin\n-      return Image (Long_Integer (N), Padding, Length);\n+      return Image (Sec_Number (N), Padding, Length);\n    end Image;\n \n    function Image\n-     (N       : Long_Integer;\n+     (N       : Sec_Number;\n       Padding : Padding_Mode := Zero;\n       Length  : Natural := 0) return String\n    is\n@@ -165,7 +171,7 @@ package body GNAT.Calendar.Time_IO is\n          end case;\n       end Pad_Char;\n \n-      NI  : constant String := Long_Integer'Image (N);\n+      NI  : constant String := Sec_Number'Image (N);\n       NIP : constant String := Pad_Char & NI (2 .. NI'Last);\n \n    --  Start of processing for Image\n@@ -290,11 +296,12 @@ package body GNAT.Calendar.Time_IO is\n \n                when 's' =>\n                   declare\n-                     Sec : constant Long_Integer :=\n-                             Long_Integer\n-                               ((Julian_Day (Year, Month, Day) -\n-                                  Julian_Day (1970, 1, 1)) * 86_400 +\n-                                Hour * 3_600 + Minute * 60 + Second);\n+                     Sec : constant Sec_Number :=\n+                             Sec_Number (Julian_Day (Year, Month, Day) -\n+                                       Julian_Day (1970, 1, 1)) * 86_400\n+                                         + Sec_Number (Hour) * 3_600\n+                                         + Sec_Number (Minute) * 60\n+                                         + Sec_Number (Second);\n \n                   begin\n                      Result := Result & Image (Sec, None);"}]}