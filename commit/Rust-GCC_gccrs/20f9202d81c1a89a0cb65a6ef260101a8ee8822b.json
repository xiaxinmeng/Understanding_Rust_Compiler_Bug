{"sha": "20f9202d81c1a89a0cb65a6ef260101a8ee8822b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjBmOTIwMmQ4MWMxYTg5YTBjYjY1YTZlZjI2MDEwMWE4ZWU4ODIyYg==", "commit": {"author": {"name": "David O'Brien", "email": "obrien@gcc.gnu.org", "date": "2001-03-03T19:41:07Z"}, "committer": {"name": "David O'Brien", "email": "obrien@gcc.gnu.org", "date": "2001-03-03T19:41:07Z"}, "message": "Under the \"obviously correct\" rule, fix the formatting breakage of people using 8-space indents vs.\n\nUnder the \"obviously correct\" rule, fix the formatting breakage of people\nusing 8-space indents vs. a single <tab> character.\n\nFrom-SVN: r40221", "tree": {"sha": "3586912b22c6071c1626fa03f67b450cccce67dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3586912b22c6071c1626fa03f67b450cccce67dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/20f9202d81c1a89a0cb65a6ef260101a8ee8822b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20f9202d81c1a89a0cb65a6ef260101a8ee8822b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/20f9202d81c1a89a0cb65a6ef260101a8ee8822b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/20f9202d81c1a89a0cb65a6ef260101a8ee8822b/comments", "author": null, "committer": null, "parents": [{"sha": "1d67c69a6e290b2ae5b83d058299f3872dddbe7e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d67c69a6e290b2ae5b83d058299f3872dddbe7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d67c69a6e290b2ae5b83d058299f3872dddbe7e"}], "stats": {"total": 786, "additions": 393, "deletions": 393}, "files": [{"sha": "a4f7d64429b414675d615f50500638762b04daba", "filename": "gcc/ChangeLog", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20f9202d81c1a89a0cb65a6ef260101a8ee8822b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20f9202d81c1a89a0cb65a6ef260101a8ee8822b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=20f9202d81c1a89a0cb65a6ef260101a8ee8822b", "patch": "@@ -22,17 +22,17 @@ Sat Mar  3 19:47:13 CET 2001  Jan Hubicka  <jh@suse.cz>\n \n 2001-03-03  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-        * cpplex.c (parse_string): Unconditionally pedwarn.\n+\t* cpplex.c (parse_string): Unconditionally pedwarn.\n \n 2001-03-03  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-        * cpp.texi: Update.\n-        * cppexp.c (parse_number): Update. \n-        * cpplex.c (parse_string): Pedwarn if multiline string does not\n-        result from a system header's macro.\n-        * cpplib.h (sys_objmacro_p): Rename sys_macro_p.\n-        * cppmacro.c (sys_objmacro_p): Rename sys_macro_p.  Return true\n-        for function-like macros too.\n+\t* cpp.texi: Update.\n+\t* cppexp.c (parse_number): Update. \n+\t* cpplex.c (parse_string): Pedwarn if multiline string does not\n+\tresult from a system header's macro.\n+\t* cpplib.h (sys_objmacro_p): Rename sys_macro_p.\n+\t* cppmacro.c (sys_objmacro_p): Rename sys_macro_p.  Return true\n+\tfor function-like macros too.\n \t* c-lex.c (lex_number): Update.\n \n 2001-03-03  Richard Henderson  <rth@redhat.com>\n@@ -3084,7 +3084,7 @@ Tue Jan 16 17:20:43 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n 2001-01-16  Phil Edwards  <pme@sources.redhat.com>\n \n \t* gcc.c:  Revert previous -fsyntax-only-related change; move\n-\t  to cp/g++spec.c.\n+\tto cp/g++spec.c.\n \n 2001-01-16  Jakub Jelinek  <jakub@redhat.com>\n \n@@ -3111,7 +3111,7 @@ Tue Jan 16 17:20:43 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n 2001-01-16  Phil Edwards  <pme@sources.redhat.com>\n \n \t* gcc.c:  When -fsyntax-only is given, do not complain about\n-\t  unused libraries.\n+\tunused libraries.\n \n 2001-01-15  Richard Henderson  <rth@redhat.com>\n \n@@ -3619,7 +3619,7 @@ Sat Jan 13 09:53:32 MET 2001  Jan Hubicka  <jh@suse.cz>\n 2001-01-12  Phil Edwards  <pme@sources.redhat.com>\n \n \t* extend.texi:  Move C++-extension-related node from the C section\n-\t  into the C++ section.\n+\tinto the C++ section.\n \n 2001-01-12  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n@@ -3742,9 +3742,9 @@ Fri Jan 12 00:04:00 MET 2001  Jan Hubicka  <jh@suse.cz>\n \n 2000-01-11  Mark Elbrecht  <snowball3@bigfoot.com>\n \n-\t * cppfiles.c (cpp_included, find_include_file, _cpp_execute_include)\n-\t   (read_name_map): Use IS_ABSOLUTE_PATH.\n-\t * tradcpp.c (get_filename): Likewise.\n+\t* cppfiles.c (cpp_included, find_include_file, _cpp_execute_include)\n+\t(read_name_map): Use IS_ABSOLUTE_PATH.\n+\t* tradcpp.c (get_filename): Likewise.\n \n 2001-01-11  Stephane Carrez  <Stephane.Carrez@worldnet.fr>\n \n@@ -4027,7 +4027,7 @@ Tue Jan  9 21:25:19 2001  Jeffrey A Law  (law@cygnus.com)\n 2001-01-09  Alan Lehotsky  <lehotsky@tiac.net>\n \n \t* reload.c (find_reloads_address): Check for eliminable registers\n-\t\t  when substituting a constant expression for a pseudo.\n+\twhen substituting a constant expression for a pseudo.\n \n 2001-01-09  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n@@ -5212,7 +5212,7 @@ Tue Jan  2 10:47:38 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.\n 2000-12-27  Phil Edwards  <pme@sources.redhat.com>\n \n \t* extend.texi (C++ Extensions):  New node for C++ attributes;\n-\t  describe init_priority and com_interface.\n+\tdescribe init_priority and com_interface.\n \t* invoke.texi:  Remove -finit-priority as it now has zero effect.\n \t* install.texi:  Fix xref syntax.\n \t* md.texi:  Likewise."}, {"sha": "85cf1422a6d63f07768b162383cd15604bba6ea7", "filename": "gcc/ChangeLog.1", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20f9202d81c1a89a0cb65a6ef260101a8ee8822b/gcc%2FChangeLog.1", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20f9202d81c1a89a0cb65a6ef260101a8ee8822b/gcc%2FChangeLog.1", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.1?ref=20f9202d81c1a89a0cb65a6ef260101a8ee8822b", "patch": "@@ -13,12 +13,12 @@ Tue May 18 03:53:37 1999  Craig Burley  <craig@jcb-sc.com>\n \n Tue May 18 00:51:46 1999  Krister Walfridsson <cato@df.lth.se>\n \n-        * configure.in (arm*-*-netbsd*): Use collect2.\n-        (i[34567]86-*-netbsd*): Likewise.\n-        (m68k*-*-netbsd*): Likewise.\n-        (ns32k-*-netbsd*): Likewise.\n-        (sparc-*-netbsd*): Likewise.\n-        (vax-*-netbsd*): Likewise.\n+\t* configure.in (arm*-*-netbsd*): Use collect2.\n+\t(i[34567]86-*-netbsd*): Likewise.\n+\t(m68k*-*-netbsd*): Likewise.\n+\t(ns32k-*-netbsd*): Likewise.\n+\t(sparc-*-netbsd*): Likewise.\n+\t(vax-*-netbsd*): Likewise.\n \t* configure: Rebuilt.\n \n Tue May 18 00:21:34 1999  Zack Weinberg  <zack@rabi.phys.columbia.edu>\n@@ -57,9 +57,9 @@ Mon May 17 19:45:41 1999  Rainer Orth  <ro@TechFak.Uni-Bielefeld.DE>\n Mon May 17 07:23:34 1999  Mark Mitchell  <mark@codesourcery.com>\n \n \t* tree.def (TYPE_NONCOPIED_PARTS): Revise documentation to match\n-        reality.\n-        * expr.c (init_noncopied_parts): Don't generate initializers for\n-        parts that don't need them.\n+\treality.\n+\t* expr.c (init_noncopied_parts): Don't generate initializers for\n+\tparts that don't need them.\n \n Mon May 17 02:56:35 PDT 1999 Jeff Law  (law@cygnus.com)\n \n@@ -118,7 +118,7 @@ Sat May 15 14:09:08 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n Fri May 14 21:31:36 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n \t* config/c4x/c4x.md (*umulqi3_highpart_clobber): Fix operand 2\n- \tconstraints order.\n+\tconstraints order.\n \n 1999-05-14  Ulrich Drepper  <drepper@cygnus.com>\n \n@@ -159,10 +159,10 @@ Thu May 13 01:31:19 1999  Nick Burrett  <nick.burrett@btinternet.com>\n Wed May 12 18:08:48 1999  David Edelsohn     <edelsohn@gnu.org>\n \t\t\t  Richard Henderson  <rth@cygnus.com>\n \n-        * rs6000.c (print_operand) [w]: Calculate signed constant more clearly.\n-        (rs6000_allocate_stack_space): Print as hexadecimal value.\n-        * rs6000.h (CONST_OK_FOR_LETTER_P): 'L' checks for a signed,\n-        16-bit shifted constant.  Fix typo for 'P'.\n+\t* rs6000.c (print_operand) [w]: Calculate signed constant more clearly.\n+\t(rs6000_allocate_stack_space): Print as hexadecimal value.\n+\t* rs6000.h (CONST_OK_FOR_LETTER_P): 'L' checks for a signed,\n+\t16-bit shifted constant.  Fix typo for 'P'.\n \t(EXTRA_CONSTARINT): 'T' checks for a 32-bit mask operand.\n \t* rs6000.md (movsi, addsi3_internal1, movdi, adddi3_internal1):\n \tUse 'L' for shifted constant.\n@@ -338,8 +338,8 @@ Sat May  8 01:25:09 1999  Andreas Schwab  <schwab@issan.cs.uni-dortmund.de>\n Fri May  7 19:10:15 1999  Vladimir Makarov  <vmakarov@tofu.to.cygnus.com>\n \n \t* sparc.h (GO_IF_LEGITIMATE_ADDRESS): Prohibit REG+REG addressing\n- \tfor TFmode when there are no instructions which accept REG+REG\n- \tinstructions.\n+\tfor TFmode when there are no instructions which accept REG+REG\n+\tinstructions.\n \n Fri May  7 12:38:54 1999  Jim Wilson  <wilson@cygnus.com>\n \n@@ -400,10 +400,10 @@ Wed May  5 23:44:15 1999  J\"orn Rennecke <amylaar@cygnus.co.uk>\n Wed May  5 16:26:13 1999  Vladimir Makarov  <vmakarov@tofu.to.cygnus.com>\n \n \t* function.c (purge_addressof_replacements): Rename into\n- \tpurge_bitfield_addressof_replacements.\n+\tpurge_bitfield_addressof_replacements.\n \t(purge_addressof_replacements): New variable.\n \t(purge_addressof_1): Add code for changing addressof in notes for\n- \tfield values which are extracted by usage MEM with narrower mode.\n+\tfield values which are extracted by usage MEM with narrower mode.\n \t(purge_addressof): Initialize purge_bitfield_addressof_replacements.\n \n Wed May  5 07:40:02 1999  Nick Clifton  <nickc@cygnus.com>\n@@ -620,12 +620,12 @@ Mon Apr 26 23:28:54 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n \t(store_one_arg): Change ptr_mode to Pmode in\n \tsetup for chkr_set_right_libfunc.\n \n-        * c-parse.in (absdcl1): Allow attributes in explicit typespecs.\n-        (%expect): Update.\n-        * c-parse.y: Regenerate.\n-        * c-parse.c: Likewise.\n-        * objc/objc-parse.c: Likewise.\n-        * objc/objc-parse.y: Likewise.\n+\t* c-parse.in (absdcl1): Allow attributes in explicit typespecs.\n+\t(%expect): Update.\n+\t* c-parse.y: Regenerate.\n+\t* c-parse.c: Likewise.\n+\t* objc/objc-parse.c: Likewise.\n+\t* objc/objc-parse.y: Likewise.\n \n Mon Apr 26 21:17:41 1999  Jason Merrill  <jason@yorick.cygnus.com>\n \n@@ -745,12 +745,12 @@ Mon Apr 26 00:58:54 1999  Jerry Quinn <jquinn@nortelnetworks.com>\n \n Mon Apr 26 00:28:25 1999  Theodore Papadopoulo <Theodore.Papadopoulo@sophia.inria.fr>\n \n- \t* flags.h (inline_max_insns): Declare.\n- \t* integrate.c (inline_max_insns): New variable.\n- \t(function_cannot_inline_p): Use it.\n- \t* toplev.c (main): Add the flag -finline-limit-n.\n- \t(display_help): Document -finline-limit-n.\n- \t* invoke.texi: Document -finline-limit-n\n+\t* flags.h (inline_max_insns): Declare.\n+\t* integrate.c (inline_max_insns): New variable.\n+\t(function_cannot_inline_p): Use it.\n+\t* toplev.c (main): Add the flag -finline-limit-n.\n+\t(display_help): Document -finline-limit-n.\n+\t* invoke.texi: Document -finline-limit-n\n \n Sun Apr 25 23:03:32 1999  Richard Henderson  <rth@cygnus.com>\n \n@@ -901,7 +901,7 @@ Tue Apr 20 16:38:11 1999  Richard Henderson  <rth@cygnus.com>\n \n Tue Apr 20 17:57:14 1999  Catherine Moore  <clm@cygnus.com>\n \n-        * config/arm/arm.md (movhi):  Add check for odd offset.\n+\t* config/arm/arm.md (movhi):  Add check for odd offset.\n \n Tue Apr 20 13:14:58 EDT 1999  John Wehle  (john@feith.com)\n \n@@ -986,25 +986,25 @@ Sat Apr 17 21:30:11 1999  Bernd Schmidt <crux@pool.informatik.rwth-aachen.de>\n \n Sat Apr 17 21:10:10 1999  Jan Hubicka <hubicka@freesoft.cz>\n \n-        * i386.c (i386_preferred_stack_boundary_string): New global variable.\n-        (i386_preferred_stack_boundary): New global variable.\n-        (override_functions): Set it.  Tidy option setting code.\n-        * i386.h (TARGET_OPTIONS): New command line option.\n-        (i386_preferred_stack_boundary_string): Declare it.\n-        (i386_preferred_stack_boundary): Likewise.\n-        (PREFERRED_STACK_BOUNDARY): Use i386_preferred_stack_boundary.\n+\t* i386.c (i386_preferred_stack_boundary_string): New global variable.\n+\t(i386_preferred_stack_boundary): New global variable.\n+\t(override_functions): Set it.  Tidy option setting code.\n+\t* i386.h (TARGET_OPTIONS): New command line option.\n+\t(i386_preferred_stack_boundary_string): Declare it.\n+\t(i386_preferred_stack_boundary): Likewise.\n+\t(PREFERRED_STACK_BOUNDARY): Use i386_preferred_stack_boundary.\n \n Sat Apr 17 19:22:38 1999  Jan Hubicka <hubicka@freesoft.cz>\n \n \t* i386.c (k6_cost): Take into account the decoding time.\n \n Sat Apr 17 19:13:22 1999  Donn Terry  <donn@interix.com>\n \n-        * i386.h (PRINT_OPERAND_PUNCT_VALID_P): Allow _.\n-        * i386.c (print_operand): New %_ operator.\n+\t* i386.h (PRINT_OPERAND_PUNCT_VALID_P): Allow _.\n+\t* i386.c (print_operand): New %_ operator.\n \t(load_pic_register): Proper number of leading _ in GOT literal.\n-        * i386.md (prologue_get_pc_and_set_got): Likewise.\n-        * i386/unix.h (ASM_OUTPUT_MI_THUNK): Likewise.\n+\t* i386.md (prologue_get_pc_and_set_got): Likewise.\n+\t* i386/unix.h (ASM_OUTPUT_MI_THUNK): Likewise.\n \n Sat Apr 17 19:13:07 1999  Richard Henderson  <rth@cygnus.com>\n \n@@ -1097,12 +1097,12 @@ Thu Apr 15 23:13:35 1999  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n Thu Apr 15 02:45:19 1999  Mumit Khan  <khan@xraylith.wisc.edu>\n \n-        * aclocal.m4 (GCC_FUNC_MKDIR_TAKES_ONE_ARG): Define.\n-        * configure.in: Use.\n-        * configure: Rebuilt.\n-        * acconfig.h (MKDIR_TAKES_ONE_ARG): Add.\n-        * config.in: Rebuilt.\n-        * system.h: Use.\n+\t* aclocal.m4 (GCC_FUNC_MKDIR_TAKES_ONE_ARG): Define.\n+\t* configure.in: Use.\n+\t* configure: Rebuilt.\n+\t* acconfig.h (MKDIR_TAKES_ONE_ARG): Add.\n+\t* config.in: Rebuilt.\n+\t* system.h: Use.\n \n Thu Apr 15 01:03:21 1999  Jan Hubicka <hubicka@freesoft.cz>\n \t\t\t  Jeff Law <law@cygnus.com>"}, {"sha": "03278d86b989bc8bfe8c77045cf9e93c11088be3", "filename": "gcc/ChangeLog.3", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20f9202d81c1a89a0cb65a6ef260101a8ee8822b/gcc%2FChangeLog.3", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20f9202d81c1a89a0cb65a6ef260101a8ee8822b/gcc%2FChangeLog.3", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.3?ref=20f9202d81c1a89a0cb65a6ef260101a8ee8822b", "patch": "@@ -1403,7 +1403,7 @@ Tue Jun  6 19:25:32 2000  Philippe De Muyter  <phdm@macqel.be>\n \n 2000-06-06  Nathan Sidwell  <nathan@codesourcery.com>\n \n- \t* eh-common.h (EH_ALLOC_SIZE, EH_ALLOC_ALIGN): New #defines.\n+\t* eh-common.h (EH_ALLOC_SIZE, EH_ALLOC_ALIGN): New #defines.\n \t(eh_context): Add alloc_mask and alloc_buffer emergency fallback\n \tspace.\n \t* libgcc2.c (__eh_alloc): Moved from cp/exception.cc. Fallback on\n@@ -3302,33 +3302,33 @@ Wed May 17 18:06:12 2000  John David Anglin <dave@hiauly1.hia.nrc.ca>\n Wed May 17 17:27:44 2000  Andrew Cagney  <cagney@b1.cygnus.com>\n \n \t* flags.h (warn_unused_function, warn_unused_label,\n- \twarn_unused_parameter, warn_unused_variable, warn_unused_value):\n- \tReplace ``warn_unused''.\n+\twarn_unused_parameter, warn_unused_variable, warn_unused_value):\n+\tReplace ``warn_unused''.\n \t(set_Wunused): Add declaration.\n \t* toplev.c (set_Wunused): New function.\n \t(warn_unused_function, warn_unused_label, warn_unused_parameter,\n- \twarn_unused_variable, warn_unused_value): New variables.\n+\twarn_unused_variable, warn_unused_value): New variables.\n \t(W_options): Add -Wunused-function, -Wunused-function,\n- \t-Wunused-label, -Wunused-parameter, -Wunused-variable and\n- \t-Wunused-value.  Delete -Wunused.  Handled in decode_W_option.\n+\t-Wunused-label, -Wunused-parameter, -Wunused-variable and\n+\t-Wunused-value.  Delete -Wunused.  Handled in decode_W_option.\n \n \t* toplev.c (decode_W_option): Update -Wunused flags by calling\n- \tset_Wunused.\n-  \t* c-decl.c (c_decode_option): Ditto for -Wall.\n+\tset_Wunused.\n+\t* c-decl.c (c_decode_option): Ditto for -Wall.\n \n \t* stmt.c (expand_expr_stmt, expand_expr_stmt,\n- \twarn_about_unused_variables): Replace warn_unused with more\n- \texplicit warn_unused_value et.al.\n+\twarn_about_unused_variables): Replace warn_unused with more\n+\texplicit warn_unused_value et.al.\n \t* function.c (expand_function_end): Ditto.\n \t* c-typeck.c (internal_build_compound_expr,\n- \tinternal_build_compound_expr): Ditto.\n+\tinternal_build_compound_expr): Ditto.\n \t* c-decl.c (poplevel, pop_label_level): Ditto.\n \t* toplev.c (check_global_declarations): Replace warn_unused with\n \tcheck for either warn_unused_function or warn_unused_variable.\n \n \t* gcc.1, invoke.texi (Warning Options): Document\n- \t-Wunused-function, -Wunused-function, -Wunused-label,\n- \t-Wunused-parameter, -Wunused-variable and -Wunused-value options.\n+\t-Wunused-function, -Wunused-function, -Wunused-label,\n+\t-Wunused-parameter, -Wunused-variable and -Wunused-value options.\n \n Wed May 17 10:28:12 2000  Philippe De Muyter  <phdm@macqel.be>\n \n@@ -3941,7 +3941,7 @@ Tue May  9 22:28:03 2000  Denis Chertykov  <denisc@overta.ru>\n \n Tue May  9 20:52:43 2000  Denis Chertykov  <denisc@overta.ru>\n \n- \t* config/avr/avr-protos.h (extra_constraint): change a type of\n+\t* config/avr/avr-protos.h (extra_constraint): change a type of\n \tsecond argument from char to int to avoid warnings.\n \t(asm_output_byte): Likewise.\n \n@@ -4255,15 +4255,15 @@ Sun May  7 00:54:57 EDT 2000  John Wehle  (john@feith.com)\n \n 2000-05-06  Zack Weinberg  <zack@wolery.cumb.org>\n \n- \t* cpphash.h: Remove conditional #define of __extension__.\n- \t* rtl.h: Add __extension__ to RTL_CHECK1, RTL_CHECK2,\n- \tRTL_CHECKC1, RTL_CHECKC2, and RTVEC_ELT macros\n- \t(ENABLE_RTL_CHECKING only).\n- \t* tree.h: Add __extension__ to TREE_CHECK, TREE_CLASS_CHECK,\n- \tCST_OR_CONSTRUCTOR_CHECK, and EXPR_CHECK macros\n- \t(ENABLE_TREE_CHECKING only).\n- \t* varray.h: Add __extension__ to VARRAY_CHECK macro\n- \t(ENABLE_CHECKING only).\n+\t* cpphash.h: Remove conditional #define of __extension__.\n+\t* rtl.h: Add __extension__ to RTL_CHECK1, RTL_CHECK2,\n+\tRTL_CHECKC1, RTL_CHECKC2, and RTVEC_ELT macros\n+\t(ENABLE_RTL_CHECKING only).\n+\t* tree.h: Add __extension__ to TREE_CHECK, TREE_CLASS_CHECK,\n+\tCST_OR_CONSTRUCTOR_CHECK, and EXPR_CHECK macros\n+\t(ENABLE_TREE_CHECKING only).\n+\t* varray.h: Add __extension__ to VARRAY_CHECK macro\n+\t(ENABLE_CHECKING only).\n \n 2000-05-06  Richard Earnshaw (reanrsha@arm.com)\n \n@@ -5280,7 +5280,7 @@ Fri Apr 28 16:30:33 2000  Marc Espie <espie@cvs.openbsd.org>\n 2000-04-27  Ulrich Drepper  <drepper@cygnus.com>\n \n \t* i386.h (FUNCTION_BLOCK_PROFILER_EXIT): Generate mem reference\n- \tfor call instruction with mode QImode.\n+\tfor call instruction with mode QImode.\n \n 2000-04-27  Alex Samuel  <samuel@codesourcery.com>\n \n@@ -5637,7 +5637,7 @@ Tue Apr 25 16:16:04 2000  Andrew MacLeod  <amacleod@cygnus.com>\n \t* config/ia64/ia64.c (ia64_compute_frame_size): Don't include pr_size\n \tin fr_pad_size calculation.\n \t(save_restore_insns): Move PR save area.  Correct uses of\n- \tRTX_FRAME_RELATED_P.\n+\tRTX_FRAME_RELATED_P.\n \t(ia64_expand_prologue): Mark alloc with RTX_FRAME_RELATED_P.\n \t(ia64_expand_epilogue): Add eh_epilogue support.\n \t(ia64_function_prologue): Emit .prologue directive."}, {"sha": "f450baa55ec502d75f516b424a57ed451b785f02", "filename": "gcc/ChangeLog.4", "status": "modified", "additions": 85, "deletions": 85, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20f9202d81c1a89a0cb65a6ef260101a8ee8822b/gcc%2FChangeLog.4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20f9202d81c1a89a0cb65a6ef260101a8ee8822b/gcc%2FChangeLog.4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.4?ref=20f9202d81c1a89a0cb65a6ef260101a8ee8822b", "patch": "@@ -210,8 +210,8 @@\n 2000-12-27  Chandrakala Chavva  <cchavva@redhat.com>\n \n \t* calls.c (store_one_arg):  If parm is passed both in stack and in\n-        register and offset is greater than reg_parm_stack_space, split\n-        the offset and call emit_push_insn().\n+\tregister and offset is greater than reg_parm_stack_space, split\n+\tthe offset and call emit_push_insn().\n \n 2000-12-27  Nick Clifton  <nickc@redhat.com>\n \n@@ -354,8 +354,8 @@\n 2000-12-22  Graham Stott  <grahams@redhat.com>\n \n \t* reload.c (update_auto_inc_notes): New, broken out from ...\n-        (find_reloads_address_1): ... use here, also correct possible\n-        use of uninitialised reloadnum.\n+\t(find_reloads_address_1): ... use here, also correct possible\n+\tuse of uninitialised reloadnum.\n \n 2000-12-21  David O'Brien  <obrien@FreeBSD.org>\n \n@@ -636,24 +636,24 @@ Tue Dec 19 00:37:08 2000  J\"orn Rennecke <amylaar@redhat.com>\n \n 2000-12-18  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-        * cppmain.c: Update print.lineno with -P.\n+\t* cppmain.c: Update print.lineno with -P.\n \n 2000-12-18  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-        * c-lex.c: s/change_file/file_change.\n-        * cpplib.h: Similarly.\n-        * cppmain.c: Similarly.\n-        * fix-header.c: Similarly.\n-        * cppfiles.c (stack_include_file): Pass the buffer location and\n-        size to cpp_push_buffer.  Generate the file_change callback,\n-        so that sysp is already set.\n-        * cpphash.h: Add _cpp_do_file_change.\n-        * cpplib.c (do_line): Set buffer->sysp directly. Generate the\n-        file_change callback after setting sysp.\n-        (_cpp_do_file_change): Handle FC_ENTER and the FC_RENAME exception\n-        here.\n-        (cpp_push_buffer): Don't generate a callback.  Clear sysp.\n-        (cpp_pop_buffer): Clean up logic.\n+\t* c-lex.c: s/change_file/file_change.\n+\t* cpplib.h: Similarly.\n+\t* cppmain.c: Similarly.\n+\t* fix-header.c: Similarly.\n+\t* cppfiles.c (stack_include_file): Pass the buffer location and\n+\tsize to cpp_push_buffer.  Generate the file_change callback,\n+\tso that sysp is already set.\n+\t* cpphash.h: Add _cpp_do_file_change.\n+\t* cpplib.c (do_line): Set buffer->sysp directly. Generate the\n+\tfile_change callback after setting sysp.\n+\t(_cpp_do_file_change): Handle FC_ENTER and the FC_RENAME exception\n+\there.\n+\t(cpp_push_buffer): Don't generate a callback.  Clear sysp.\n+\t(cpp_pop_buffer): Clean up logic.\n \n 2000-12-18  Benjamin Kosnik  <bkoz@redhat.com>\n \n@@ -667,11 +667,11 @@ Tue Dec 19 00:37:08 2000  J\"orn Rennecke <amylaar@redhat.com>\n \n 2000-12-18  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-        * c-lex.c (lex_lineno): Remove.\n-        (init_c_lex, c_lex): Remove lex_lineno.\n-        (cb_change_file): Update lineno correctly, both before calling\n-        push_srcloc and before leaving the function.\n-        (cb_def_pragma): Set lineno before outputting diagnostics.\n+\t* c-lex.c (lex_lineno): Remove.\n+\t(init_c_lex, c_lex): Remove lex_lineno.\n+\t(cb_change_file): Update lineno correctly, both before calling\n+\tpush_srcloc and before leaving the function.\n+\t(cb_def_pragma): Set lineno before outputting diagnostics.\n \n Sun Dec 17 18:45:41 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n@@ -681,15 +681,15 @@ Sun Dec 17 18:45:41 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2000-12-17  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-        * cpplib.h (struct cpp_reader): Remove references to string_pool\n-        and temp_string_pool.\n-        * cppinit.c (cpp_create_reader, cpp_cleanup): Similarly; using\n-        ident_pool in place.\n-        * cpplex.c (parse_number, unescaped_terminator_p, parse_string,\n-        save_comment, cpp_token_as_text): Similarly.\n-        * cpplib.c (do_define, glue_header_name, parse_assertion): Similarly.\n-        * cppmacro.c (make_number_token, builtin_macro, lock_pools,\n-        unlock_pools, stringify_arg, paste_tokens): Similarly.\n+\t* cpplib.h (struct cpp_reader): Remove references to string_pool\n+\tand temp_string_pool.\n+\t* cppinit.c (cpp_create_reader, cpp_cleanup): Similarly; using\n+\tident_pool in place.\n+\t* cpplex.c (parse_number, unescaped_terminator_p, parse_string,\n+\tsave_comment, cpp_token_as_text): Similarly.\n+\t* cpplib.c (do_define, glue_header_name, parse_assertion): Similarly.\n+\t* cppmacro.c (make_number_token, builtin_macro, lock_pools,\n+\tunlock_pools, stringify_arg, paste_tokens): Similarly.\n \n Sun Dec 17 12:41:48 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n@@ -704,10 +704,10 @@ Sun Dec 17 12:41:48 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2000-12-17  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-        * cppmain.c (check_multiline_token): New function.\n-        (scan_buffer): Use it.\n-        (cb_change_file): Restructure to avoid warning.\n-        * cpperror.c (print_location): Initialize col.\n+\t* cppmain.c (check_multiline_token): New function.\n+\t(scan_buffer): Use it.\n+\t(cb_change_file): Restructure to avoid warning.\n+\t* cpperror.c (print_location): Initialize col.\n \n 2000-12-14  Philipp Thomas  <pthomas@suse.de>\n \n@@ -739,21 +739,21 @@ Sun Dec 17 12:41:48 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2000-12-17  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-        * c-lex.c: Move main_input_filename handling to FC_ENTER. Clean up.\n-        * cpperror.c (print_containing_files): Get right line number.\n-        (print_location): Output column of 1 if 0.\n-        * cppfiles.c (stack_include_file): cpp_push_buffer handles\n-        the callback.\n-        * cpphash.h (_cpp_do_file_change): No longer external.\n-        * cpplib.c (do_file_change): Now local to cpplib.c.\n-        (do_line): Fake a buffer stack for preprocessed files.\n-        (cpp_push_buffer): Create a file_change callback.  Handle faked\n-        buffers.\n-        (cpp_pop_buffer): Similarly.\n-        * cpplib.h: BUF_FAKE: New buffer type.\n-        * cppmain.c: Update to handle correct file renaming where a\n-        #line is the first line of the main file, and produce only\n-        the renamed file, not the original file, as output.\n+\t* c-lex.c: Move main_input_filename handling to FC_ENTER. Clean up.\n+\t* cpperror.c (print_containing_files): Get right line number.\n+\t(print_location): Output column of 1 if 0.\n+\t* cppfiles.c (stack_include_file): cpp_push_buffer handles\n+\tthe callback.\n+\t* cpphash.h (_cpp_do_file_change): No longer external.\n+\t* cpplib.c (do_file_change): Now local to cpplib.c.\n+\t(do_line): Fake a buffer stack for preprocessed files.\n+\t(cpp_push_buffer): Create a file_change callback.  Handle faked\n+\tbuffers.\n+\t(cpp_pop_buffer): Similarly.\n+\t* cpplib.h: BUF_FAKE: New buffer type.\n+\t* cppmain.c: Update to handle correct file renaming where a\n+\t#line is the first line of the main file, and produce only\n+\tthe renamed file, not the original file, as output.\n \n 2000-12-17  Michael Hayes  <m.hayes@elec.canterbury.ac.nz>\n \n@@ -774,7 +774,7 @@ Sun Dec 17 12:41:48 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n             Herman A.J. ten Brugge <Haj.Ten.Brugge@net.HCC.nl>\n \n \t* config/c4x/c4x.h (MD_INIT_BUILTINS): Add void_list_node argument\n-\t  to c4x_init_builtins.\n+\tto c4x_init_builtins.\n \n \t* config/c4x/c4x-protos.h (c4x_init_builtins): Add tree argument.\n \n@@ -837,12 +837,12 @@ Sat Dec 16 10:41:11 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n 2000-12-16  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-        * tradcpp.c: T_WARNING: New.\n-        (do_warning): New function.\n-        (finclude): Skip past the newline and increase the line number\n-        before calling output_line_command.\n-        (do_line): Skip the new line after output_line_command.  Don't\n-        pre-decrement the line number.\n+\t* tradcpp.c: T_WARNING: New.\n+\t(do_warning): New function.\n+\t(finclude): Skip past the newline and increase the line number\n+\tbefore calling output_line_command.\n+\t(do_line): Skip the new line after output_line_command.  Don't\n+\tpre-decrement the line number.\n \n 2000-12-15  Diego Novillo  <dnovillo@redhat.com>\n \n@@ -926,16 +926,16 @@ Fri Dec 15 03:37:51 2000  J\"orn Rennecke <amylaar@redhat.com>\n \n 2000-12-14  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-       * gcc.c (cpp_options): Update to use '&'.\n-       (struct switchstr): Change type of validated to save space.\n-       New member 'ordering'.\n-       (handle_braces, validate_switches): Update to handle '&'.\n+\t* gcc.c (cpp_options): Update to use '&'.\n+\t(struct switchstr): Change type of validated to save space.\n+\tNew member 'ordering'.\n+\t(handle_braces, validate_switches): Update to handle '&'.\n \n 2000-12-13  Laurynas Biveinis  <lauras@softhome.net>\n \n-        * fixinc/inclhack.def: skip stdio_va_list fix if __DJ_va_list\n-        found in a header.\n-        * fixinc/fixincl.x: regenerated.\n+\t* fixinc/inclhack.def: skip stdio_va_list fix if __DJ_va_list\n+\tfound in a header.\n+\t* fixinc/fixincl.x: regenerated.\n \n 2000-12-13  DJ Delorie  <dj@redhat.com>\n \n@@ -970,25 +970,25 @@ Fri Dec 15 03:37:51 2000  J\"orn Rennecke <amylaar@redhat.com>\n \n 2000-12-13  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-        * tradcpp.c (special_symbol): Improve test for definedness,\n-        though it is still not perfect.\n-        (do_define): Don't define illegal macro names.\n+\t* tradcpp.c (special_symbol): Improve test for definedness,\n+\tthough it is still not perfect.\n+\t(do_define): Don't define illegal macro names.\n \n 2000-12-07  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/mips/elf.h (ASM_OUTPUT_SECTION_NAME): emit @nobits\n-        if changing into .bss section.\n-        * config/mips/elf64.h: same.\n-        * config/mips/iris6.h: same.\n-        * config/mips/netbsd.h: same.\n-        * config/mips/openbsd.h: same.\n+\t* config/mips/elf.h (ASM_OUTPUT_SECTION_NAME): emit @nobits\n+\tif changing into .bss section.\n+\t* config/mips/elf64.h: same.\n+\t* config/mips/iris6.h: same.\n+\t* config/mips/netbsd.h: same.\n+\t* config/mips/openbsd.h: same.\n \n 2000-12-13  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-        * cppfiles.c (read_name_map): Return null if open () fails.\n-        (remap_filename): Simplify logic.  Add ICE if it doesn't work\n-        as expected. Perform secondary lookup attempt on base filename\n-        only.\n+\t* cppfiles.c (read_name_map): Return null if open () fails.\n+\t(remap_filename): Simplify logic.  Add ICE if it doesn't work\n+\tas expected. Perform secondary lookup attempt on base filename\n+\tonly.\n \n Wed Dec 13 19:48:04 MET 2000  Jan hubicka  <jh@suse.cz>\n \n@@ -1010,8 +1010,8 @@ Wed Dec 13 17:25:32 MET 2000  Jan Hubicka  <jh@suse.cz>\n \n 2000-12-12  Brad Lucier <lucier@math.purdue.edu>\n \n-        * tradcpp.c (do_error): Cast difference of pointers to int\n-        for error message.\n+\t* tradcpp.c (do_error): Cast difference of pointers to int\n+\tfor error message.\n \n 2000-12-12  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n \n@@ -1035,9 +1035,9 @@ Wed Dec 13 17:25:32 MET 2000  Jan Hubicka  <jh@suse.cz>\n \n 2000-12-12  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n-        * tradcpp.c (enum node_type): Add T_ERROR.\n-        (do_error): New function.\n-        (directive_table): Add #error handler.\n+\t* tradcpp.c (enum node_type): Add T_ERROR.\n+\t(do_error): New function.\n+\t(directive_table): Add #error handler.\n \n 2000-12-12  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n \n@@ -4493,7 +4493,7 @@ Wed Nov  8 21:53:41 MET 2000  Jan Hubicka  <jh@suse.cz>\n \n 2000-11-07  Neil Booth  <neilb@earthling.net>\n \n-       * cp/lang-specs.h: Fix -save-temps specs under USE_CPPLIB.\n+\t* cp/lang-specs.h: Fix -save-temps specs under USE_CPPLIB.\n \n 2000-11-07  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n "}, {"sha": "5eb4fa2811224c0da6f3ac0fca3ee04aaa1963fd", "filename": "gcc/ChangeLog.lib", "status": "modified", "additions": 219, "deletions": 219, "changes": 438, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/20f9202d81c1a89a0cb65a6ef260101a8ee8822b/gcc%2FChangeLog.lib", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/20f9202d81c1a89a0cb65a6ef260101a8ee8822b/gcc%2FChangeLog.lib", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.lib?ref=20f9202d81c1a89a0cb65a6ef260101a8ee8822b", "patch": "@@ -1,6 +1,6 @@\n Wed Jan  1 17:54:47 1998  J.J. van der Heijden <J.J.vanderHeijden@student.utwente.nl>\n \n-        * pexecute.c (pexecute, [_WIN32]): Yes, mask termstat for mingw32.\n+\t* pexecute.c (pexecute, [_WIN32]): Yes, mask termstat for mingw32.\n \n Mon Dec 22 18:59:34 1997  Pascal Obry  <pascal.obry@der.edfgdf.fr>\n \n@@ -74,7 +74,7 @@ Tue Sep  9 18:23:57 1997  Doug Evans  <dje@cygnus.com>\n 1997-08-08  Paul Eggert  <eggert@twinsun.com>\n \n \t* choose-temp.c, pexecute.c:\n- \tInclude \"config.h\" first, as per autoconf manual.\n+\tInclude \"config.h\" first, as per autoconf manual.\n \n 1997-08-01  Richard Stallman  <rms@psilocin.gnu.ai.mit.edu>\n \n@@ -208,7 +208,7 @@ Wed Jan 15 22:36:59 1997  Jim Meyering  <meyering@kropotkin.gnu.ai.mit.edu>\n Tue Jan  7 14:29:37 1997  David J. MacKenzie  <djm@geech.gnu.ai.mit.edu>\n \n \t* config.guess: Add hppa1.1-hitachi-hiuxmpp support, passed along\n- \tby rms.\n+\tby rms.\n \n Sat Jan  4 22:43:21 1997  Miles Bader  <miles@gnu.ai.mit.edu>\n \n@@ -312,7 +312,7 @@ Fri Nov  8 11:34:58 1996  David J. MacKenzie  <djm@geech.gnu.ai.mit.edu>\n \tLynxOs is not a hardware supplier.\n \n \t* config.guess: Contributions from bug-gnu-utils to add support for:\n- \tOpenBSD like NetBSD.\n+\tOpenBSD like NetBSD.\n \tStratus systems.\n \tMore Pyramid systems.\n \ti[n>4]86 Intel chips.\n@@ -385,7 +385,7 @@ Fri Jun 28 13:29:05 1996  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n Tue Jun 25 22:43:48 1996  Doug Evans  <dje@cygnus.com>\n \n-        * pexecute.c (PEXECUTE_VERBOSE): Define.\n+\t* pexecute.c (PEXECUTE_VERBOSE): Define.\n \t(MPW pexecute): Check flags & PEXECUTE_VERBOSE instead of verbose_flag.\n \n Mon Jun 24 14:32:22 1996  Jim Wilson  <wilson@cygnus.com>\n@@ -434,16 +434,16 @@ Wed May 22 17:20:59 1996  Roland McGrath  <roland@delasyd.gnu.ai.mit.edu>\n Tue May 21 18:55:59 1996  Roland McGrath  <roland@delasyd.gnu.ai.mit.edu>\n \n \t* config.sub: Restore `hp9k2[0-9][0-9] | hp9k31[0-9])' case line\n- \tapparently accidentally removed in the last change.\n+\tapparently accidentally removed in the last change.\n \n Mon May 20 11:58:15 1996  Jeffrey A. Law  <law@cygnus.com>\n \n \t* config.sub: Recognize -proelf as a basic system type.\n \n Fri May  3 02:35:56 1996  Noah Friedman  <friedman@prep.ai.mit.edu>\n \n-        * mkinstalldirs: Don't report an error if mkdir fails because\n-        a directory was created by another process.\n+\t* mkinstalldirs: Don't report an error if mkdir fails because\n+\ta directory was created by another process.\n \n Sun Apr 21 09:50:09 1996  Stephen L Moshier  (moshier@world.std.com)\n \n@@ -452,9 +452,9 @@ Sun Apr 21 09:50:09 1996  Stephen L Moshier  (moshier@world.std.com)\n Tue Apr  9 14:37:31 1996  Ulrich Drepper  <drepper@cygnus.com>\n \n \t* obstack.h [__STDC__] (obstack_init, obstack_begin,\n- \tobstack_specify_allocation, obstack_specify_allocation_with_arg,\n- \tobstack_chunkfun, obstack_freefun): Duplicate definition with complete\n- \ttype cast.\n+\tobstack_specify_allocation, obstack_specify_allocation_with_arg,\n+\tobstack_chunkfun, obstack_freefun): Duplicate definition with complete\n+\ttype cast.\n \n Wed Apr 17 14:28:43 1996  Doug Evans  <dje@cygnus.com>\n \n@@ -544,7 +544,7 @@ Thu Feb 22 15:51:09 1996  Karl Heuer  <kwzh@gnu.ai.mit.edu>\n Tue Feb 13 13:20:32 1996  Miles Bader  <miles@gnu.ai.mit.edu>\n \n \t* getopt.c (_getopt_internal): Give FIRST_NONOPT & LAST_NONOPT\n- \t rational values if OPTIND has been moved back by the user.\n+\trational values if OPTIND has been moved back by the user.\n \n Mon Feb 12 18:23:35 1996  Doug Evans  <dje@cygnus.com>\n \n@@ -714,7 +714,7 @@ Fri Aug  4 10:27:54 1995  Jim Meyering  (meyering@comco.com)\n Tue Aug  1 14:29:43 1995  Roland McGrath  <roland@churchy.gnu.ai.mit.edu>\n \n \t* getloadavg.c (getloadavg): Set FD_CLOEXEC flag on /dev/kmem file\n- \tdescriptor.\n+\tdescriptor.\n \n Wed Jul 26 00:26:34 1995  David J. MacKenzie  <djm@geech.gnu.ai.mit.edu>\n \n@@ -735,12 +735,12 @@ Thu Jun 22 18:36:42 1995  Uwe Seimet  (seimet@iris1.chemie.uni-kl.de)\n Tue Jun 20 02:41:41 1995  Roland McGrath  <roland@churchy.gnu.ai.mit.edu>\n \n \t* getloadavg.c [convex] (LOAD_AVE_TYPE, LDAV_CVT): Define to\n- \tdouble, no conversion.\n+\tdouble, no conversion.\n \n \t* obstack.c (OBSTACK_INTERFACE_VERSION): New macro.  Rewrote\n- \tconditionals to use that macro to ensure that the installed GNU\n- \tlibc supports the interface the obstack.h corresponding to this\n- \tobstack.c needs, and only then elide the code in this file.\n+\tconditionals to use that macro to ensure that the installed GNU\n+\tlibc supports the interface the obstack.h corresponding to this\n+\tobstack.c needs, and only then elide the code in this file.\n \n Sun May 28 18:53:29 1995  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)\n \n@@ -795,13 +795,13 @@ Thu Apr 27 13:11:11 1995  Jim Meyering  (meyering@comco.com)\n \n Thu Apr 27 09:22:33 1995  Peder Chr. Norgaard <pcn@tbit.dk>\n \n-        * config.guess (i[34]86:*:3.2:*) test for /usr/options/cb.name\n+\t* config.guess (i[34]86:*:3.2:*) test for /usr/options/cb.name\n \tbefore calling uname.\n \n Wed Apr 26 17:19:34 1995  Roland McGrath  <roland@churchy.gnu.ai.mit.edu>\n \n \t* signame.c [HAVE_UNISTD_H]: Include unistd.h so it can declare\n- \tsys_siglist.\n+\tsys_siglist.\n \n Wed Apr 26 14:00:00 1995  Michael Meissner  (meissner@cygnus.com)\n \n@@ -828,8 +828,8 @@ Thu Apr  6 19:55:54 1995  Richard Stallman  <rms@mole.gnu.ai.mit.edu>\n Fri Mar 24 00:52:31 1995  Roland McGrath  <roland@churchy.gnu.ai.mit.edu>\n \n \t* getopt.c (_getopt_internal): When optind is zero, bump it to 1\n- \tafter initializing; we don't want to scan ARGV[0], which is the\n- \tprogram name.\n+\tafter initializing; we don't want to scan ARGV[0], which is the\n+\tprogram name.\n \n Tue Mar 21 16:44:37 1995  Roland McGrath  <roland@churchy.gnu.ai.mit.edu>\n \n@@ -897,7 +897,7 @@ Wed Dec 21 15:51:08 1994  Warner Losh  (imp@boulder.openware.com)\n Tue Dec  6 02:29:42 1994  Roland McGrath  <roland@churchy.gnu.ai.mit.edu>\n \n \t* config.guess (dummy.c) [sony]: Include <sys/param.h> and emit\n-        newsos4 #ifdef NEWSOS4.\n+\tnewsos4 #ifdef NEWSOS4.\n \n Tue Nov 29 17:01:29 1994  Mark Dapoz  (md@bsc.no)\n \n@@ -949,18 +949,18 @@ Tue Nov  1 14:24:39 1994  Per Bothner  (bothner@spiff.gnu.ai.mit.edu)\n Mon Oct 31 07:02:15 1994  Roland McGrath  <roland@churchy.gnu.ai.mit.edu>\n \n \t* getopt.h: Change #if __STDC__ to #if defined (__STDC__) &&\n-        __STDC__.\n+\t__STDC__.\n \t* getopt.c: Change #ifndef __STDC__ to #if !defined (__STDC__) ||\n-        !__STDC__.\n+\t!__STDC__.\n \t* getopt1.c: Likewise.\n \t* obstack.c: Change #ifdef __STDC__ to #if defined (__STDC__) &&\n-        __STDC__.\n+\t__STDC__.\n \t* obstack.h: Likewise.\n \n Wed Oct 26 20:34:59 1994  Roland McGrath  <roland@churchy.gnu.ai.mit.edu>\n \n \t* getloadavg.c [alliant && i860] (FSCALE): Move defn before\n-        #ifndef FSCALE.\n+\t#ifndef FSCALE.\n \n Tue Oct 25 19:10:41 1994  Paul Eggert  <eggert@twinsun.com>\n \n@@ -971,7 +971,7 @@ Tue Oct 25 19:10:41 1994  Paul Eggert  <eggert@twinsun.com>\n Tue Oct 25 11:22:30 1994  David J. MacKenzie  <djm@duality.gnu.ai.mit.edu>\n \n \t* xmalloc.c (xmalloc, xrealloc): If 0 bytes requested, pretend\n-        it's 1, for diff.\n+\tit's 1, for diff.\n \n Thu Oct 20 18:47:53 1994  Per Bothner  (bothner@wombat.gnu.ai.mit.edu)\n \n@@ -1036,7 +1036,7 @@ Thu Sep 29 18:47:34 1994  Jerry Frain  (jerry@sneffels.tivoli.com)\n Wed Sep 28 17:00:12 1994  Roland McGrath  <roland@churchy.gnu.ai.mit.edu>\n \n \t* getloadavg.c [alliant && i860] (LOAD_AVE_TYPE, FSCALE,\n-        NLIST_STRUCT): Define.\n+\tNLIST_STRUCT): Define.\n \n Mon Sep 26 17:53:05 1994  David J. MacKenzie  (djm@churchy.gnu.ai.mit.edu)\n \n@@ -1204,7 +1204,7 @@ Mon Jun  6 04:59:28 1994  Richard Stallman  (rms@mole.gnu.ai.mit.edu)\n Sat Jun  4 01:24:59 1994  Roland McGrath  (roland@geech.gnu.ai.mit.edu)\n \n \t* getloadavg.c: Put #include of errno.h and decl of errno before\n-        #ifndef HAVE_GETLOADAVG.\n+\t#ifndef HAVE_GETLOADAVG.\n \n Thu Jun  2 13:42:39 1994  Richard Stallman  (rms@mole.gnu.ai.mit.edu)\n \n@@ -1268,8 +1268,8 @@ Fri Apr 15 22:46:59 1994  Richard Stallman  (rms@mole.gnu.ai.mit.edu)\n \n Tue Apr 12 15:05:08 1994  Noah Friedman  (friedman@prep.ai.mit.edu)\n \n-        * config.guess: Merge rms' new entry for i486-ncr-sysv4 with the\n-          previously existing one.\n+\t* config.guess: Merge rms' new entry for i486-ncr-sysv4 with the\n+\tpreviously existing one.\n \n Mon Apr 11 00:54:33 1994  Richard Stallman  (rms@mole.gnu.ai.mit.edu)\n \n@@ -1302,13 +1302,13 @@ Tue Mar  1 21:53:03 1994  Karl Heuer  (kwzh@hal.gnu.ai.mit.edu)\n \n Thu Feb 24 14:54:23 1994  David J. MacKenzie  (djm@goldman.gnu.ai.mit.edu)\n \n-        * getopt.c: Remove #ifdef GETOPT_COMPAT and #if 0 code.\n-         (_getopt_initialize): New function, broken out of _getopt_internal.\n-         (_getopt_internal):\n-         If long_only and the ARGV-element has the form \"-f\", where f is\n-         a valid short option, don't consider it an abbreviated form of\n-         a long option that starts with f.  Otherwise there would be no\n-         way to give the -f short option.\n+\t* getopt.c: Remove #ifdef GETOPT_COMPAT and #if 0 code.\n+\t(_getopt_initialize): New function, broken out of _getopt_internal.\n+\t(_getopt_internal):\n+\tIf long_only and the ARGV-element has the form \"-f\", where f is\n+\ta valid short option, don't consider it an abbreviated form of\n+\ta long option that starts with f.  Otherwise there would be no\n+\tway to give the -f short option.\n \n Thu Feb 10 14:44:16 1994  Richard Stallman  (rms@mole.gnu.ai.mit.edu)\n \n@@ -1326,20 +1326,20 @@ Wed Feb  9 00:14:00 1994  Richard Stallman  (rms@mole.gnu.ai.mit.edu)\n \n Tue Feb  8 14:14:31 1994  David J. MacKenzie  (djm at douglas.gnu.ai.mit.edu)\n \n-        Handle obstack_chunk_alloc returning NULL.  This allows\n-        obstacks to be used by libraries, without forcing them\n-        to call exit or longjmp.\n-        * obstack.c (_obstack_begin, _obstack_begin_1, _obstack_newchunk):\n-        If CALL_CHUNKFUN returns NULL, set alloc_failed, else clear it.\n-        (_obstack_begin, _obstack_begin_1): Return 1 if successful, 0 if not.\n-        * obstack.h (struct obstack): Add alloc_failed flag.\n-        _obstack_begin, _obstack_begin_1): Declare to return int, not void.\n-        (obstack_finish): If alloc_failed, return NULL.\n-        (obstack_base, obstack_next_free, objstack_object_size):\n-        If alloc_failed, return 0.\n-        (obstack_grow, obstack_grow0, obstack_1grow, obstack_ptr_grow,\n-        obstack_int_grow, obstack_blank): If alloc_failed, do nothing that\n-        could corrupt the obstack.\n+\tHandle obstack_chunk_alloc returning NULL.  This allows\n+\tobstacks to be used by libraries, without forcing them\n+\tto call exit or longjmp.\n+\t* obstack.c (_obstack_begin, _obstack_begin_1, _obstack_newchunk):\n+\tIf CALL_CHUNKFUN returns NULL, set alloc_failed, else clear it.\n+\t(_obstack_begin, _obstack_begin_1): Return 1 if successful, 0 if not.\n+\t* obstack.h (struct obstack): Add alloc_failed flag.\n+\t_obstack_begin, _obstack_begin_1): Declare to return int, not void.\n+\t(obstack_finish): If alloc_failed, return NULL.\n+\t(obstack_base, obstack_next_free, objstack_object_size):\n+\tIf alloc_failed, return 0.\n+\t(obstack_grow, obstack_grow0, obstack_1grow, obstack_ptr_grow,\n+\tobstack_int_grow, obstack_blank): If alloc_failed, do nothing that\n+\tcould corrupt the obstack.\n \t(obstack_chunkfun, obstack_freefun): New macros, used in GDB.\n \n Sun Jan 30 17:58:06 1994  Ken Raeburn  (raeburn@cujo.cygnus.com)\n@@ -1368,7 +1368,7 @@ Sun Dec 26 03:58:32 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)\n \n Fri Dec 24 19:43:00 1993  Noah Friedman  (friedman@nutrimat.gnu.ai.mit.edu)\n \n-        * getopt.c (_NO_PROTO): Define before config.h is included.\n+\t* getopt.c (_NO_PROTO): Define before config.h is included.\n \n Wed Dec 22 17:01:19 1993  Jim Meyering  (meyering@comco.com)\n \n@@ -1383,7 +1383,7 @@ Tue Dec 07 14:52:39 1993  Jim Meyering  (meyering@comco.com)\n \n Sat Nov 20 17:47:50 1993  Noah Friedman  (friedman@gnu.ai.mit.edu)\n \n-        * error.c (error): fflush stdout before writing to stderr.\n+\t* error.c (error): fflush stdout before writing to stderr.\n \n Tue Nov 09 10:05:48 1993  Jim Meyering  (meyering@comco.com)\n \n@@ -1392,7 +1392,7 @@ Tue Nov 09 10:05:48 1993  Jim Meyering  (meyering@comco.com)\n Thu Nov  4 12:59:19 1993  david d `zoo' zuhn  (zoo@rtl.cygnus.com)\n \n \t* config.guess: add support for {i386,m68k,sparc} LynxOS; Hitachi\n-\t  HPPA machines; Acorn Risc Machines; DG/UX; Motorola SVr3 on m88k\n+\tHPPA machines; Acorn Risc Machines; DG/UX; Motorola SVr3 on m88k\n \n Wed Nov  3 08:06:08 1993  Roland McGrath  (roland@churchy.gnu.ai.mit.edu)\n \n@@ -1660,8 +1660,8 @@ Sun May 23 13:53:12 1993  Richard Stallman  (rms@mole.gnu.ai.mit.edu)\n \n Sun May 23 05:47:31 1993  Noah Friedman  (friedman@nutrimat.gnu.ai.mit.edu)\n \n-        * mkinstalldirs (errstatus): New variable.\n-        Use inner `for' loop instead of `while test' on $#.\n+\t* mkinstalldirs (errstatus): New variable.\n+\tUse inner `for' loop instead of `while test' on $#.\n \n Sat May 22 20:14:23 1993  Roland McGrath  (roland@churchy.gnu.ai.mit.edu)\n \n@@ -2045,8 +2045,8 @@ Sat Nov  7 13:50:27 1992  David J. MacKenzie  (djm@goldman.gnu.ai.mit.edu)\n \n Sat Nov  7 03:28:08 1992  Jim Blandy  (jimb@apple-gunkies.gnu.ai.mit.edu)\n \n-        * getdate.y [emacs]: Include <config.h>; under Emacs, we get\n-        some additional configuration information from that.\n+\t* getdate.y [emacs]: Include <config.h>; under Emacs, we get\n+\tsome additional configuration information from that.\n \n Sat Nov  7 00:53:35 1992  David J. MacKenzie  (djm@goldman.gnu.ai.mit.edu)\n \n@@ -2100,13 +2100,13 @@ Wed Sep 30 13:54:36 1992  Michael I Bushnell  (mib@geech.gnu.ai.mit.edu)\n \n Tue Sep 29 07:36:29 1992  Noah Friedman  (friedman@nutrimat.gnu.ai.mit.edu)\n \n-        * getloadavg.c: if symbol `sony_news' is defined, define\n-          NLIST_STRUCT and declare LOAD_AVE_TYPE as long.\n+\t* getloadavg.c: if symbol `sony_news' is defined, define\n+\tNLIST_STRUCT and declare LOAD_AVE_TYPE as long.\n \n Thu Sep 17 20:10:03 1992  Karl Berry  (karl@geech.gnu.ai.mit.edu)\n \n-        * regex.[ch]: made links into ../regex/, per rms' suggestion.\n-          Please put further ChangeLog entries there.\n+\t* regex.[ch]: made links into ../regex/, per rms' suggestion.\n+\tPlease put further ChangeLog entries there.\n \n Tue Sep 15 20:13:30 1992  Michael I Bushnell  (mib@geech.gnu.ai.mit.edu)\n \n@@ -2131,7 +2131,7 @@ Fri Sep 11 10:42:24 1992  David J. MacKenzie  (djm@nutrimat.gnu.ai.mit.edu)\n \n Fri Sep 11 07:46:21 1992  Karl Berry  (karl@hal.gnu.ai.mit.edu)\n \n-        * regex.h (_RE_ARGS) [!__STDC__]: expand to empty parens.\n+\t* regex.h (_RE_ARGS) [!__STDC__]: expand to empty parens.\n \n Fri Sep 11 00:57:56 1992  Richard Stallman  (rms@mole.gnu.ai.mit.edu)\n \n@@ -2156,13 +2156,13 @@ Thu Sep 10 16:35:10 1992  Jim Blandy  (jimb@wookumz.gnu.ai.mit.edu)\n \n Wed Sep  9 21:49:20 1992  Karl Berry  (karl@apple-gunkies.gnu.ai.mit.edu)\n \n-        * regex.[ch]: version 0.10, incorporating below changes and\n-        more.  See /gd/gnu/lib/regex-*/ChangeLog.\n+\t* regex.[ch]: version 0.10, incorporating below changes and\n+\tmore.  See /gd/gnu/lib/regex-*/ChangeLog.\n \n Wed Sep  9 03:09:55 1992  Noah Friedman  (friedman@nutrimat.gnu.ai.mit.edu)\n \n-        * malloc.c: if USG, define macros for bcopy and bzero.\n-        Don't redefine USG for hpux if already defined.\n+\t* malloc.c: if USG, define macros for bcopy and bzero.\n+\tDon't redefine USG for hpux if already defined.\n \n Tue Sep  1 16:46:47 1992  Jim Blandy  (jimb@pogo.cs.oberlin.edu)\n \n@@ -2233,8 +2233,8 @@ Sat Aug  1 00:11:25 1992  Fred Fish  (fnf at fishpond)\n \n Wed Jul 29 18:53:13 1992  Karl Berry  (karl@hal)\n \n-        * regex.c: version 0.9; fixes bug wrt always finding the longest\n-          match.  See /gd/gnu/lib/regex-*/ChangeLog.\n+\t* regex.c: version 0.9; fixes bug wrt always finding the longest\n+\tmatch.  See /gd/gnu/lib/regex-*/ChangeLog.\n \n Sun Jul 26 18:24:13 1992  Roland McGrath  (roland@churchy.gnu.ai.mit.edu)\n \n@@ -2302,8 +2302,8 @@ Sat Jul 11 13:24:12 1992  Richard Stallman  (rms@mole.gnu.ai.mit.edu)\n \n Fri Jul 10 15:01:25 1992  Karl Berry  (karl@hal)\n \n-        * regex.[ch]: new version (0.8), incorporating the changes\n-          below.  See /gd/gnu/regex/ChangeLog.\n+\t* regex.[ch]: new version (0.8), incorporating the changes\n+\tbelow.  See /gd/gnu/regex/ChangeLog.\n \n Fri Jul 10 03:46:24 1992  Richard Stallman  (rms@mole.gnu.ai.mit.edu)\n \n@@ -2341,7 +2341,7 @@ Wed Jul  8 12:38:37 1992  Jim Blandy  (jimb@wookumz.gnu.ai.mit.edu)\n \n Sat Jul  4 07:53:45 1992  Karl Berry  (karl@hal)\n \n-        * regex.c (re_compile_fastmap): init succeed_n_p (to false).\n+\t* regex.c (re_compile_fastmap): init succeed_n_p (to false).\n \n Fri Jul  3 14:45:29 1992  David J. MacKenzie  (djm@nutrimat.gnu.ai.mit.edu)\n \n@@ -2354,7 +2354,7 @@ Thu Jul  2 15:47:20 1992  David J. MacKenzie  (djm@wookumz.gnu.ai.mit.edu)\n \n Wed Jul  1 11:48:37 1992  Karl Berry  (karl@hal)\n \n-        * regex.[ch]: new version (0.7).  See /gd/gnu/regex/ChangeLog.\n+\t* regex.[ch]: new version (0.7).  See /gd/gnu/regex/ChangeLog.\n \n Sun Jun 28 06:05:39 1992  Richard Kenner  (kenner@vlsi1.ultra.nyu.edu)\n \n@@ -2394,7 +2394,7 @@ Mon Jun  8 18:03:28 1992  Jim Blandy  (jimb@pogo.cs.oberlin.edu)\n \n Wed Jun  3 16:59:49 1992  Karl Berry  (karl@geech.gnu.ai.mit.edu)\n \n-        * regex.[ch]: new version (0.6).  See ~karl/regex/ChangeLog.\n+\t* regex.[ch]: new version (0.6).  See ~karl/regex/ChangeLog.\n \n Sat May 23 22:28:54 1992  Roland McGrath  (roland@geech.gnu.ai.mit.edu)\n \n@@ -2409,7 +2409,7 @@ Fri May 22 14:50:25 1992  Richard Stallman  (rms@mole.gnu.ai.mit.edu)\n \n Thu May 14 16:50:28 1992  Karl Berry  (karl@kropotkin.gnu.ai.mit.edu)\n \n-        * regex.c, regex.h: new version (0.5).  See ~karl/regex/ChangeLog.\n+\t* regex.c, regex.h: new version (0.5).  See ~karl/regex/ChangeLog.\n \n Tue May 12 03:27:19 1992  David J. MacKenzie  (djm@churchy.gnu.ai.mit.edu)\n \n@@ -2496,7 +2496,7 @@ Sun Mar 15 22:50:30 1992  Roland McGrath  (roland@geech.gnu.ai.mit.edu)\n \n Thu Mar 12 14:26:48 1992  Karl Berry  (karl@apple-gunkies.gnu.ai.mit.edu)\n \n-        * regex.[ch]: new version (0.4).  See ~karl/regex/ChangeLog.\n+\t* regex.[ch]: new version (0.4).  See ~karl/regex/ChangeLog.\n \n Tue Mar 10 22:26:14 1992  Roland McGrath  (roland@geech.gnu.ai.mit.edu)\n \n@@ -2515,8 +2515,8 @@ Tue Feb 25 21:23:50 1992  Roland McGrath  (roland@wookumz.gnu.ai.mit.edu)\n \n Thu Feb 20 13:04:57 1992  Karl Berry  (karl@wombat.gnu.ai.mit.edu)\n \n-        * regex.[ch]: new version (0.3).  See ~karl/regex/ChangeLog for all\n-          the details.\n+\t* regex.[ch]: new version (0.3).  See ~karl/regex/ChangeLog for all\n+\tthe details.\n \n Wed Feb 19 23:04:05 1992  Charles Hannum  (mycroft@gnu.ai.mit.edu)\n \n@@ -2577,8 +2577,8 @@ Tue Jan  7 02:08:10 1992  Richard Stallman  (rms at mole.gnu.ai.mit.edu)\n \n Mon Jan  6 12:53:42 1992  Karl Berry  (karl at apple-gunkies.gnu.ai.mit.edu)\n \n-        * regex.[ch]: new versions.  See ~karl/regex/ChangeLog for all\n-          the details.\n+\t* regex.[ch]: new versions.  See ~karl/regex/ChangeLog for all\n+\tthe details.\n \n Tue Dec 24 22:42:59 1991  Richard Stallman  (rms at mole.gnu.ai.mit.edu)\n \n@@ -2669,9 +2669,9 @@ Sat Sep 28 02:01:45 1991  David J. MacKenzie  (djm at churchy.gnu.ai.mit.edu)\n \n Wed Sep  4 17:32:51 1991  Kathryn A. Hargreaves  (letters at apple-gunkies)\n \n-        * regex.[ch]: Put current version (0.1) here, after backing up old\n-          files.  For ChangeLog details, please refer to the ChangeLog\n-          file in my regex directory.\n+\t* regex.[ch]: Put current version (0.1) here, after backing up old\n+\tfiles.  For ChangeLog details, please refer to the ChangeLog\n+\tfile in my regex directory.\n \n Sat Aug 24 04:22:01 1991  David J. MacKenzie  (djm at apple-gunkies)\n \n@@ -3096,61 +3096,61 @@ Mon Mar 26 00:36:52 1990  David J. MacKenzie  (djm at spike.ai.mit.edu)\n Sun Mar  4 12:11:31 1990  Kathy Hargreaves  (kathy at hayley)\n \n \t* regex.h: Added syntax bit RE_NO_EMPTY_RANGES which is set if\n-        an ending range point has to collate higher or equal to the\n-        starting range point.\n-        Added syntax bit RE_NO_HYPHEN_RANGE_END which is set if a hyphen\n-        can't be an ending range point.\n-        Set to two above bits in RE_SYNTAX_POSIX_BASIC and\n-        RE_SYNTAX_POSIX_EXTENDED.\n-\n-        regex.c: (re_compile_pattern): Don't allow empty ranges if the\n-        RE_NO_EMPTY_RANGES syntax bit is set.\n-        Don't let a hyphen be a range end if the RE_NO_HYPHEN_RANGE_END\n+\tan ending range point has to collate higher or equal to the\n+\tstarting range point.\n+\tAdded syntax bit RE_NO_HYPHEN_RANGE_END which is set if a hyphen\n+\tcan't be an ending range point.\n+\tSet to two above bits in RE_SYNTAX_POSIX_BASIC and\n+\tRE_SYNTAX_POSIX_EXTENDED.\n+\n+\tregex.c: (re_compile_pattern): Don't allow empty ranges if the\n+\tRE_NO_EMPTY_RANGES syntax bit is set.\n+\tDon't let a hyphen be a range end if the RE_NO_HYPHEN_RANGE_END\n \tsyntax bit is set.\n \t(ESTACK_PUSH_2): renamed this PUSH_FAILURE_POINT and made it\n-        push all the used registers on the stack, as well as the number\n-        of the highest numbered register used, and (as before) the two\n-        failure points.\n+\tpush all the used registers on the stack, as well as the number\n+\tof the highest numbered register used, and (as before) the two\n+\tfailure points.\n \t(re_match_2): Fixed up comments.\n-        Added arrays best_regstart[], best_regstart_seg1[], best_regend[],\n-        and best_regend_seg1[] to keep track of the best match so far\n-        whenever reach the end of the pattern but not the end of the\n-        string, and there are still failure points on the stack with\n-        which to backtrack; if so, do the saving and force a fail.\n+\tAdded arrays best_regstart[], best_regstart_seg1[], best_regend[],\n+\tand best_regend_seg1[] to keep track of the best match so far\n+\twhenever reach the end of the pattern but not the end of the\n+\tstring, and there are still failure points on the stack with\n+\twhich to backtrack; if so, do the saving and force a fail.\n \tIf reach the end of the pattern but not the end of the string,\n-        but there are no more failure points to try, restore the best\n-        match so far, set the registers and return.\n+\tbut there are no more failure points to try, restore the best\n+\tmatch so far, set the registers and return.\n \tCompacted some code.\n \tIn stop_memory case, if the subexpression we've just left is in\n-        a loop, push onto the stack the loop's on_failure_jump failure\n-        point along with the current pointer into the string (d).\n-        In finalize_jump case, in addition to popping the failure\n-        points, pop the saved registers.\n+\ta loop, push onto the stack the loop's on_failure_jump failure\n+\tpoint along with the current pointer into the string (d).\n+\tIn finalize_jump case, in addition to popping the failure\n+\tpoints, pop the saved registers.\n \tIn the fail case, restore the registers, as well as the failure\n-        points.\n+\tpoints.\n \n \n Sun Feb 18 15:08:10 1990  Kathy Hargreaves  (kathy at hayley)\n \n \t* regex.c: (global): Defined a macro GET_BUFFER_SPACE which\n \tmakes sure you have a specified number of buffer bytes\n-        allocated.\n-        Redefined the macro BUFPUSH to use this.\n-        Added comments.\n+\tallocated.\n+\tRedefined the macro BUFPUSH to use this.\n+\tAdded comments.\n \n-        (re_compile_pattern): Call GET_BUFFER_SPACE before storing or\n-        inserting any jumps.\n+\t(re_compile_pattern): Call GET_BUFFER_SPACE before storing or\n+\tinserting any jumps.\n \n \t(re_match_2): Set d to string1 + pos and dend to end_match_1\n-        only if string1 isn't null.\n+\tonly if string1 isn't null.\n \tForce exit from a loop if it's around empty parentheses.\n-        In stop_memory case, if found some jumps, increment p2 before\n-        extracting address to which to jump. Also, don't need to know\n-        how many more times can jump_n.\n+\tIn stop_memory case, if found some jumps, increment p2 before\n+\textracting address to which to jump. Also, don't need to know\n+\thow many more times can jump_n.\n \tIn begline case, d must equal string1 or string2, in that order,\n-        only if they are not null.\n-        In maybe_finalize_jump case, skip over start_memorys' and\n-        stop_memorys' register numbers, too.\n+\tonly if they are not null.\n+\tIn maybe_finalize_jump case, skip over start_memorys' and\n+\tstop_memorys' register numbers, too.\n \n Thu Feb 15 15:53:55 1990  Kathy Hargreaves  (kathy at hayley)\n \n@@ -3164,178 +3164,178 @@ Wed Jan 24 17:07:46 1990  Kathy Hargreaves  (kathy at hayley)\n \tAdded to some comments.\n \n \tregex.c: (re_compile_pattern): Tried to bulletproof some code,\n-        i.e., checked if backward references (e.g., p[-1]) were within\n-        the range of pattern.\n+\ti.e., checked if backward references (e.g., p[-1]) were within\n+\tthe range of pattern.\n \n-        (re_compile_fastmap): Fixed a bug in succeed_n part where was\n-        getting the amount to jump instead of how many times to jump.\n+\t(re_compile_fastmap): Fixed a bug in succeed_n part where was\n+\tgetting the amount to jump instead of how many times to jump.\n \n-        (re_search_2): Changed the name of the variable ``total'' to\n-        ``total_size.''\n-        Condensed some code.\n+\t(re_search_2): Changed the name of the variable ``total'' to\n+\t``total_size.''\n+\tCondensed some code.\n \n \t(re_match_2): Moved the comment about duplicate from above the\n-        start_memory case to above duplicate case.\n+\tstart_memory case to above duplicate case.\n \n-        (global): Rewrote some comments.\n-        Added commandline arguments to testing.\n+\t(global): Rewrote some comments.\n+\tAdded commandline arguments to testing.\n \n \n Wed Jan 17 11:47:27 1990  Kathy Hargreaves  (kathy at hayley)\n \n \t* regex.c: (global): Defined a macro STORE_NUMBER which stores a\n-        number into two contiguous bytes.  Also defined STORE_NUMBER_AND_INCR\n+\tnumber into two contiguous bytes.  Also defined STORE_NUMBER_AND_INCR\n \twhich does the same thing and then increments the pointer to the\n \tstorage place to point after the number.\n-        Defined a macro EXTRACT_NUMBER which extracts a number from two\n-        continguous bytes.  Also defined EXTRACT_NUMBER_AND_INCR which\n-        does the same thing and then increments the pointer to the\n-        source to point to after where the number was.\n+\tDefined a macro EXTRACT_NUMBER which extracts a number from two\n+\tcontinguous bytes.  Also defined EXTRACT_NUMBER_AND_INCR which\n+\tdoes the same thing and then increments the pointer to the\n+\tsource to point to after where the number was.\n \n \n Tue Jan 16 12:09:19 1990  Kathy Hargreaves  (kathy at hayley)\n \n \t* regex.h: Incorporated rms' changes.\n \tDefined RE_NO_BK_REFS syntax bit which is set when want to\n-        interpret back reference patterns as literals.\n-        Defined RE_NO_EMPTY_BRACKETS syntax bit which is set when want\n-        empty bracket expressions to be illegal.\n-        Defined RE_CONTEXTUAL_ILLEGAL_OPS syntax bit which is set when want\n+\tinterpret back reference patterns as literals.\n+\tDefined RE_NO_EMPTY_BRACKETS syntax bit which is set when want\n+\tempty bracket expressions to be illegal.\n+\tDefined RE_CONTEXTUAL_ILLEGAL_OPS syntax bit which is set when want\n \tit to be illegal for *, +, ? and { to be first in an re or come\n-        immediately after a | or a (, and for ^ not to appear in a\n-        nonleading position and $ in a nontrailing position (outside of\n-        bracket expressions, that is).\n-        Defined RE_LIMITED_OPS syntax bit which is set when want +, ?\n-        and | to always be literals instead of ops.\n-        Fixed up the Posix syntax.\n-        Changed the syntax bit comments from saying, e.g., ``0 means...''\n-        to ``If this bit is set, it means...''.\n-        Changed the syntax bit defines to use shifts instead of integers.\n-\n-        * regex.c: (global): Incorporated rms' changes.\n-\n-        (re_compile_pattern): Incorporated rms' changes\n-        Made it illegal for a $ to appear anywhere but inside a bracket\n-        expression or at the end of an re when RE_CONTEXTUAL_ILLEGAL_OPS\n-        is set. Made the same hold for $ except it has to be at the\n-        beginning of an re instead of the end.\n+\timmediately after a | or a (, and for ^ not to appear in a\n+\tnonleading position and $ in a nontrailing position (outside of\n+\tbracket expressions, that is).\n+\tDefined RE_LIMITED_OPS syntax bit which is set when want +, ?\n+\tand | to always be literals instead of ops.\n+\tFixed up the Posix syntax.\n+\tChanged the syntax bit comments from saying, e.g., ``0 means...''\n+\tto ``If this bit is set, it means...''.\n+\tChanged the syntax bit defines to use shifts instead of integers.\n+\n+\t* regex.c: (global): Incorporated rms' changes.\n+\n+\t(re_compile_pattern): Incorporated rms' changes\n+\tMade it illegal for a $ to appear anywhere but inside a bracket\n+\texpression or at the end of an re when RE_CONTEXTUAL_ILLEGAL_OPS\n+\tis set. Made the same hold for $ except it has to be at the\n+\tbeginning of an re instead of the end.\n \tMade the re \"[]\" illegal if RE_NO_EMPTY_BRACKETS is set.\n-        Made it illegal for | to be first or last in an re, or immediately\n-        follow another | or a (.\n-        Added and embellished some comments.\n+\tMade it illegal for | to be first or last in an re, or immediately\n+\tfollow another | or a (.\n+\tAdded and embellished some comments.\n \tAllowed \\{ to be interpreted as a literal if RE_NO_BK_CURLY_BRACES\n-        is set.\n-        Made it illegal for *, +, ?, and { to appear first in an re, or\n-        immediately follow a | or a ( when RE_CONTEXTUAL_ILLEGAL_OPS is set.\n+\tis set.\n+\tMade it illegal for *, +, ?, and { to appear first in an re, or\n+\timmediately follow a | or a ( when RE_CONTEXTUAL_ILLEGAL_OPS is set.\n \tMade back references interpreted as literals if RE_NO_BK_REFS is set.\n-        Made recursive intervals either illegal (if RE_NO_BK_CURLY_BRACES\n-        isn't set) or interpreted as literals (if is set), if RE_INTERVALS\n-        is set.\n+\tMade recursive intervals either illegal (if RE_NO_BK_CURLY_BRACES\n+\tisn't set) or interpreted as literals (if is set), if RE_INTERVALS\n+\tis set.\n \tMade it treat +, ? and | as literals if RE_LIMITED_OPS is set.\n-        Cleaned up some code.\n+\tCleaned up some code.\n \n \n Thu Dec 21 15:31:32 1989  Kathy Hargreaves  (kathy at hayley)\n \n \t* regex.c: (global): Moved RE_DUP_MAX to regex.h and made it\n \tequal 2^15 - 1 instead of 1000.\n-        Defined NULL to be zero.\n-        Moved the definition of BYTEWIDTH to regex.h.\n-        Made the global  variable obscure_syntax nonstatic so the tests in\n-        another file could use it.\n-\n-        (re_compile_pattern): Defined a maximum length (CHAR_CLASS_MAX_LENGTH)\n-        for character class strings (i.e., what's between the [: and the\n-        :]'s).\n+\tDefined NULL to be zero.\n+\tMoved the definition of BYTEWIDTH to regex.h.\n+\tMade the global  variable obscure_syntax nonstatic so the tests in\n+\tanother file could use it.\n+\n+\t(re_compile_pattern): Defined a maximum length (CHAR_CLASS_MAX_LENGTH)\n+\tfor character class strings (i.e., what's between the [: and the\n+\t:]'s).\n \tDefined a macro SET_LIST_BIT(c) which sets the bit for C in a\n-        character set list.\n-        Took out comments that EXTEND_BUFFER clobbers C.\n-        Made the string \"^\" match itself, if not RE_CONTEXT_IND_OPS.\n+\tcharacter set list.\n+\tTook out comments that EXTEND_BUFFER clobbers C.\n+\tMade the string \"^\" match itself, if not RE_CONTEXT_IND_OPS.\n \tAdded character classes to bracket expressions.\n-        Change the laststart pointer saved with the start of each\n-        subexpression to point to start_memory instead of after the\n-        following register number.  This is because the subexpression\n-        might be in a loop.\n-        Added comments and compacted some code.\n+\tChange the laststart pointer saved with the start of each\n+\tsubexpression to point to start_memory instead of after the\n+\tfollowing register number.  This is because the subexpression\n+\tmight be in a loop.\n+\tAdded comments and compacted some code.\n \tMade intervals only work if preceded by an re matching a single\n-        character or a subexpression.\n-        Made back references to nonexistent subexpressions illegal if\n-        using POSIX syntax.\n+\tcharacter or a subexpression.\n+\tMade back references to nonexistent subexpressions illegal if\n+\tusing POSIX syntax.\n \tMade intervals work on the last preceding character of a\n-        concatenation of characters, e.g., ab{0,} matches abbb, not abab.\n+\tconcatenation of characters, e.g., ab{0,} matches abbb, not abab.\n \tMoved macro PREFETCH to outside the routine.\n \n \t(re_compile_fastmap): Added succeed_n to work analogously to\n-        on_failure_jump if n is zero and jump_n to work analogously to\n-        the other backward jumps.\n+\ton_failure_jump if n is zero and jump_n to work analogously to\n+\tthe other backward jumps.\n \n-        (re_match_2): Defined macro SET_REGS_MATCHED to set which\n-        current subexpressions had matches within them.\n-        Changed some comments.\n+\t(re_match_2): Defined macro SET_REGS_MATCHED to set which\n+\tcurrent subexpressions had matches within them.\n+\tChanged some comments.\n \tAdded reg_active and reg_matched_something arrays to keep track\n-        of in which subexpressions currently have matched something.\n-        Defined MATCHING_IN_FIRST_STRING and replaced ``dend == end_match_1''\n-        with it to make code easier to understand.\n+\tof in which subexpressions currently have matched something.\n+\tDefined MATCHING_IN_FIRST_STRING and replaced ``dend == end_match_1''\n+\twith it to make code easier to understand.\n \tFixed so can apply * and intervals to arbitrarily nested\n-        subexpressions.  (Lots of previous bugs here.)\n+\tsubexpressions.  (Lots of previous bugs here.)\n \tChanged so won't match a newline if syntax bit RE_DOT_NOT_NULL is set.\n-        Made the upcase array nonstatic so the testing file could use it also.\n+\tMade the upcase array nonstatic so the testing file could use it also.\n \n-        (main.c): Moved the tests out to another file.\n+\t(main.c): Moved the tests out to another file.\n \n \t(tests.c): Moved all the testing stuff here.\n \n \n Sat Nov 18 19:30:30 1989  Kathy Hargreaves  (kathy at hayley)\n \n-        * regex.c: (re_compile_pattern): Defined RE_DUP_MAX, the maximum\n-        number of times an interval can match a pattern.\n-        Added macro GET_UNSIGNED_NUMBER (used to get below):\n-        Added variables lower_bound and upper_bound for upper and lower\n-        bounds of intervals.\n-        Added variable num_fetches so intervals could do backtracking.\n+\t* regex.c: (re_compile_pattern): Defined RE_DUP_MAX, the maximum\n+\tnumber of times an interval can match a pattern.\n+\tAdded macro GET_UNSIGNED_NUMBER (used to get below):\n+\tAdded variables lower_bound and upper_bound for upper and lower\n+\tbounds of intervals.\n+\tAdded variable num_fetches so intervals could do backtracking.\n \tAdded code to handle '{' and \"\\{\" and intervals.\n \tAdded to comments.\n \n-        (store_jump_n): (Added) Stores a jump with a number following the\n-        relative address (for intervals).\n+\t(store_jump_n): (Added) Stores a jump with a number following the\n+\trelative address (for intervals).\n \n-        (insert_jump_n): (Added) Inserts a jump_n.\n+\t(insert_jump_n): (Added) Inserts a jump_n.\n \n-        (re_match_2): Defined a macro ESTACK_PUSH_2 for the error stack;\n-        it checks for overflow and reallocates if necessary.\n+\t(re_match_2): Defined a macro ESTACK_PUSH_2 for the error stack;\n+\tit checks for overflow and reallocates if necessary.\n \n \t* regex.h: Added bits (RE_INTERVALS and RE_NO_BK_CURLY_BRACES)\n \tto obscure syntax to indicate whether or not\n \ta syntax handles intervals and recognizes either \\{ and\n \t\\} or { and } as operators.  Also added two syntaxes\n \tRE_SYNTAX_POSIX_BASIC and RE_POSIX_EXTENDED and two command codes\n-        to the enumeration regexpcode; they are succeed_n and jump_n.\n+\tto the enumeration regexpcode; they are succeed_n and jump_n.\n \n \n Sat Nov 18 19:30:30 1989  Kathy Hargreaves  (kathy at hayley)\n \n \t* regex.c: (re_compile_pattern): Defined INIT_BUFF_SIZE to get rid\n-        of repeated constants in code.  Tested with value 1.\n+\tof repeated constants in code.  Tested with value 1.\n \tRenamed PATPUSH as BUFPUSH, since it pushes things onto the\n-        buffer, not the pattern.  Also made this macro extend the buffer\n-        if it's full (so could do the following):\n-        Took out code at top of loop that checks to see if buffer is going\n-        to be full after 10 additions (and reallocates if necessary).\n+\tbuffer, not the pattern.  Also made this macro extend the buffer\n+\tif it's full (so could do the following):\n+\tTook out code at top of loop that checks to see if buffer is going\n+\tto be full after 10 additions (and reallocates if necessary).\n \n-        (insert_jump): Rearranged declaration lines so comments would read\n-        better.\n+\t(insert_jump): Rearranged declaration lines so comments would read\n+\tbetter.\n \n \t(re_match_2): Compacted exactn code and added more comments.\n \n \t(main): Defined macros TEST_MATCH and MATCH_SELF to do\n-        testing; took out loop so could use these instead.\n+\ttesting; took out loop so could use these instead.\n \n \n Tue Oct 24 20:57:18 1989  Kathy Hargreaves  (kathy at hayley)\n \n \t* regex.c (re_set_syntax): Gave argument `syntax' a type.\n-        (store_jump, insert_jump): made them void functions.\n+\t(store_jump, insert_jump): made them void functions.\n \n Tue Mar  6 23:29:26 1990  Jim Kingdon  (kingdon at pogo.ai.mit.edu)\n "}]}