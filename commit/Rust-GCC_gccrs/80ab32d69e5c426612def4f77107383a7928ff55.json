{"sha": "80ab32d69e5c426612def4f77107383a7928ff55", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODBhYjMyZDY5ZTVjNDI2NjEyZGVmNGY3NzEwNzM4M2E3OTI4ZmY1NQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-11-03T08:30:21Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-11-03T08:30:21Z"}, "message": "re PR rtl-optimization/46034 (internal compiler error: segmentation fault)\n\n\tPR rtl-optimization/46034\n\tPR rtl-optimization/46212\n\tPR rtl-optimization/46248\n\t* combine.c (try_combine): If added_sets_2 where i0dest_in_i0src\n\tand i0 feeds i1 and i1 feeds i2 or i0 feeds i2, make a copy of i1src\n\tbefore i0dest -> i0src substitution and pass 1 instead of 0 as last\n\targument to subst on i2pat.\n\n\t* gcc.c-torture/compile/pr46034.c: New test.\n\t* gcc.c-torture/compile/pr46248.c: New test.\n\t* gcc.dg/pr46212.c: New test.\n\nFrom-SVN: r166231", "tree": {"sha": "9662fee926c1689b6a8d33a0e625c0547515c5dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9662fee926c1689b6a8d33a0e625c0547515c5dc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/80ab32d69e5c426612def4f77107383a7928ff55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80ab32d69e5c426612def4f77107383a7928ff55", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80ab32d69e5c426612def4f77107383a7928ff55", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80ab32d69e5c426612def4f77107383a7928ff55/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "480767a91ca7bea09f2d851786d8a8093b271565", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/480767a91ca7bea09f2d851786d8a8093b271565", "html_url": "https://github.com/Rust-GCC/gccrs/commit/480767a91ca7bea09f2d851786d8a8093b271565"}], "stats": {"total": 101, "additions": 97, "deletions": 4}, "files": [{"sha": "2ccafe18338674f81957e45f4d03fbda0c6a2cbb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80ab32d69e5c426612def4f77107383a7928ff55/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80ab32d69e5c426612def4f77107383a7928ff55/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=80ab32d69e5c426612def4f77107383a7928ff55", "patch": "@@ -1,3 +1,13 @@\n+2010-11-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/46034\n+\tPR rtl-optimization/46212\n+\tPR rtl-optimization/46248\n+\t* combine.c (try_combine): If added_sets_2 where i0dest_in_i0src\n+\tand i0 feeds i1 and i1 feeds i2 or i0 feeds i2, make a copy of i1src\n+\tbefore i0dest -> i0src substitution and pass 1 instead of 0 as last\n+\targument to subst on i2pat.\n+\n 2010-11-02  Ian Lance Taylor  <iant@google.com>\n \n \t* configure.ac: Use AC_SYS_LARGEFILE."}, {"sha": "3bf65698185ee7328a0a87461671bc85a0574964", "filename": "gcc/combine.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80ab32d69e5c426612def4f77107383a7928ff55/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80ab32d69e5c426612def4f77107383a7928ff55/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=80ab32d69e5c426612def4f77107383a7928ff55", "patch": "@@ -2502,6 +2502,7 @@ try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p)\n   rtx i3dest_killed = 0;\n   /* SET_DEST and SET_SRC of I2, I1 and I0.  */\n   rtx i2dest = 0, i2src = 0, i1dest = 0, i1src = 0, i0dest = 0, i0src = 0;\n+  rtx i1src_copy = 0;\n   /* Set if I2DEST was reused as a scratch register.  */\n   bool i2scratch = false;\n   /* The PATTERNs of I0, I1, and I2, or a copy of them in certain cases.  */\n@@ -3128,6 +3129,11 @@ try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p)\n \t  return 0;\n \t}\n \n+      /* Following subst may modify i1src, make a copy of it\n+\t before it is for added_sets_2 handling if needed.  */\n+      if (i0_feeds_i1_n && added_sets_2 && i1_feeds_i2_n)\n+\ti1src_copy = copy_rtx (i1src);\n+\n       n_occurrences = 0;\n       subst_low_luid = DF_INSN_LUID (i0);\n       newpat = subst (newpat, i0dest, i0src, 0,\n@@ -3200,11 +3206,10 @@ try_combine (rtx i3, rtx i2, rtx i1, rtx i0, int *new_direct_jump_p)\n       if (added_sets_2)\n \t{\n \t  rtx t = i2pat;\n-\t  if (i0_feeds_i2_n)\n-\t    t = subst (t, i0dest, i0src, 0, 0);\n \t  if (i1_feeds_i2_n)\n-\t    t = subst (t, i1dest, i1src, 0, 0);\n-\t  if (i0_feeds_i1_n && i1_feeds_i2_n)\n+\t    t = subst (t, i1dest, i1src_copy ? i1src_copy : i1src, 0,\n+\t\t       i0_feeds_i1_n && i0dest_in_i0src);\n+\t  if ((i0_feeds_i1_n && i1_feeds_i2_n) || i0_feeds_i2_n)\n \t    t = subst (t, i0dest, i0src, 0, 0);\n \n \t  XVECEXP (newpat, 0, --total_sets) = t;"}, {"sha": "439dd5ccc51cfeb5942506a71264062667142c76", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80ab32d69e5c426612def4f77107383a7928ff55/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80ab32d69e5c426612def4f77107383a7928ff55/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=80ab32d69e5c426612def4f77107383a7928ff55", "patch": "@@ -1,3 +1,12 @@\n+2010-11-03  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR rtl-optimization/46034\n+\tPR rtl-optimization/46212\n+\tPR rtl-optimization/46248\n+\t* gcc.c-torture/compile/pr46034.c: New test.\n+\t* gcc.c-torture/compile/pr46248.c: New test.\n+\t* gcc.dg/pr46212.c: New test.\n+\n 2010-11-02  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/sizetype4.adb: New test."}, {"sha": "02eda0572e490ddffdbbe296afbf882ce10277ce", "filename": "gcc/testsuite/gcc.c-torture/compile/pr46034.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80ab32d69e5c426612def4f77107383a7928ff55/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr46034.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80ab32d69e5c426612def4f77107383a7928ff55/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr46034.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr46034.c?ref=80ab32d69e5c426612def4f77107383a7928ff55", "patch": "@@ -0,0 +1,14 @@\n+/* PR rtl-optimization/46034 */\n+\n+void bar (int);\n+\n+void\n+foo (int x, int y)\n+{\n+  int i;\n+  for (i = 0; i < x; i++)\n+    {\n+      y = __builtin_abs (y);\n+      bar (y / 2);\n+    }\n+}"}, {"sha": "6d3be2a654517dcee1bcb2c926afb7f1307053da", "filename": "gcc/testsuite/gcc.c-torture/compile/pr46248.c", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80ab32d69e5c426612def4f77107383a7928ff55/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr46248.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80ab32d69e5c426612def4f77107383a7928ff55/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr46248.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr46248.c?ref=80ab32d69e5c426612def4f77107383a7928ff55", "patch": "@@ -0,0 +1,32 @@\n+/* PR rtl-optimization/46248 */\n+\n+struct S\n+{\n+  int s;\n+};\n+\n+void\n+foo (unsigned char *x, int y, struct S *z)\n+{\n+  const int l1 = y;\n+  const int l2 = y + l1;\n+  const int l3 = y + l2;\n+  const int l4 = y + l3;\n+  const int l5 = y + l4;\n+  const int l6 = y + l5;\n+  const int l7 = y + l6;\n+  int i;\n+  for (i = 0; i < 8; i++)\n+    {\n+      int a = x[l3] - x[l4];\n+      int b = x[l4] - x[l5];\n+      int c = x[l5] - x[l6];\n+      int d = (b >= 0 ? b : -b) - (((a >= 0 ? a : -a) + (c >= 0 ? c : -c)) >> 1);\n+      if (d < z->s * 2)\n+\t{\n+\t  int v = d * (-b > 0 ? 1 : -1);\n+\t  x[l2] += v >> 3;\n+\t  x[l7] -= v >> 3;\n+\t}\n+    }\n+}"}, {"sha": "9dbb601e0265ea31526d8015daf9a345a0045559", "filename": "gcc/testsuite/gcc.dg/pr46212.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/80ab32d69e5c426612def4f77107383a7928ff55/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46212.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/80ab32d69e5c426612def4f77107383a7928ff55/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46212.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr46212.c?ref=80ab32d69e5c426612def4f77107383a7928ff55", "patch": "@@ -0,0 +1,23 @@\n+/* PR rtl-optimization/46212 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -funroll-loops\" } */\n+/* { dg-options \"-O3 -funroll-loops -march=i386\" { target { { i686-*-* x86_64-*-* } && ilp32 } } } */\n+\n+static inline unsigned\n+foo (void *x)\n+{\n+  unsigned y = *(volatile unsigned *) (x);\n+  return (y >> 24) | ((y >> 8) & 0xff00) | ((y & 0xff00) << 8) | (y << 24);\n+}\n+\n+void\n+bar (void *x, void *y, int z)\n+{\n+  unsigned c;\n+  while (z--)\n+    {\n+      c = foo (y);\n+      *(unsigned *) x = (c & 0xf80000) >> 9 | (c & 0xf800) >> 6\n+\t\t\t| (c & 0xf8) >> 3 | (c & 0x80000000) >> 16;\n+    }\n+}"}]}