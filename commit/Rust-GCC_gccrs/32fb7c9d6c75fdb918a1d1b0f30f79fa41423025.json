{"sha": "32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzJmYjdjOWQ2Yzc1ZmRiOTE4YTFkMWIwZjMwZjc5ZmE0MTQyMzAyNQ==", "commit": {"author": {"name": "Franz Sirl", "email": "Franz.Sirl-kernel@lauterbach.com", "date": "2001-10-19T22:27:41Z"}, "committer": {"name": "Franz Sirl", "email": "sirl@gcc.gnu.org", "date": "2001-10-19T22:27:41Z"}, "message": "config.gcc (i[34567]86-*-gnu*, [...]): Delete superflous ${cpu_type} setting.\n\n\t2001-10-19  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n\n\t* config.gcc (i[34567]86-*-gnu*, arc-*-elf*, d30v-*,\n\tfr30-*-elf, hppa*64*-*-linux*, parisc*64*-*-linux*, hppa*-*-linux*,\n\tparisc*-*-linux*, i370-*-linux*, i[34567]86-*-chorusos*,\n\ti[34567]86-*-elf*, i[34567]86-ncr-sysv4*, i[34567]86-*-netware,\n\ti[34567]86-sequent-ptx4*, i[34567]86-sequent-sysv4*,\n\ti[34567]86-*-beoself*, i[34567]86-*-beos*, i[34567]86-*-freebsd*,\n\ti[34567]86-*-netbsdelf*, i[34567]86-*-linux*libc1,\n\ti[34567]86-*-linux*, i[34567]86-moss-msdos*, i[34567]86-*-moss*,\n\ti[34567]86-go32-rtems*, i[34567]86-*-rtems*, i[34567]86-*-rtemself*,\n\ti[34567]86-*-solaris2*, i[34567]86-*-sysv5*, i[34567]86-*-sysv4*,\n\ti[34567]86-*-udk*, i[34567]86-*-osf1*, i[34567]86-dg-dgux*,\n\ti860-alliant-*, i860-*-sysv4*, ia64*-*-aix*, ia64*-*-linux*,\n\tia64*-*-hpux*, m32r-*-elf*, m88k-dg-dgux*, m88k-*-sysv4*, mcore-*-elf,\n\tmips*-*-linux*, mn10200-*-*, mn10300-*-*, pj*-linux*, pjl-*,\n\tpowerpc64-*-linux*, powerpc-*-sysv*, powerpc-*-netbsd*,\n\tpowerpc-*-chorusos*, powerpc-*-eabiaix*, powerpc-*-eabisim*,\n\tpowerpc-*-elf*, powerpc-*-eabi*, powerpc-*-rtems*,\n\tpowerpc-*-linux*libc1, powerpc-*-linux*, powerpc-wrs-vxworks*,\n\tpowerpcle-wrs-vxworks*, powerpcle-*-sysv*, powerpcle-*-elf*,\n\tpowerpcle-*-eabisim*, powerpcle-*-eabi*, powerpcle-*-solaris2*,\n\trs6000-*-mach*, s390-*-linux*, s390x-*-linux*, sh-*-elf*,\n\tsh-*-rtemself*, sh-*-rtems*, sh-*-linux*, stormy16-*-elf,\n\tv850-*-rtems*, v850-*-*, x86_64-*-linux*), cris-*-aout, cris-*-elf,\n\tcris-*-none, cris-*-linux*: Update ${tmfile} list.\n\t(c4x-*-rtems*, c4x-*, i[34567]86-go32-rtems*, i[34567]86-*-rtemscoff*,\n\ti[34567]86-*-rtems*, i[34567]86-*-rtemself*, i[34567]86-*-osf1*,\n\tmn10200-*-*, mn10300-*-*, powerpc-*-beos*, powerpc-*-darwin*,\n\tpowerpc-wrs-vxworks*, powerpcle-wrs-vxworks*, v850-*-rtems*,\n\tv850-*-*): Delete superflous ${cpu_type} setting.\n\t* config/linux.h: Delete svr4.h include.\n\t(SET_ASM_OP): Delete.\n\t* config/netware.h (INT_ASM_OP): Undef before define.\n\t* config/ptx4.h: Delete elfos.h include.\n\t(PREFERRED_DEBUGGING_TYPE): Undef instead of wrapping.\n\t* config/svr4.h: Delete elfos.h include. Update commentary.\n\t* config/arc/arc.h, config/d30v/d30v.h, config/fr30/fr30.h,\n\tconfig/m32r/m32r.h, config/m88k/sysv4.h, config/mn10200/mn10200.h,\n\tconfig/mn10200/mn10300.h, config/stormy16/stormy16.h,\n\tconfig/v850/v850.h: Delete svr4.h include.\n\t* config/i370/linux.h, config/i386/osf1elf.h, config/m68k/linux.h,\n\tconfig/m68k/m68kv4.h, config/m88k/sysv4.h,\n\tconfig/sparc/sysv4.h: Update includes.\n\t* config/i386/beos-elf.h, config/i386/netware.h, config/i386/ptx4-i.h,\n\tconfig/i386/rtemself.h, config/i386/sol2.h, config/i386/sysv4.h,\n\tconfig/i386/sysv5.h, config/i386/udk.h, config/ia64/linux.h,\n\tconfig/m88k/dguxbcs.h: Delete includes.\n\t* config/i386/dgux.h, config/i386/osf1elfgdb.h: Delete include.\n\t(PREFERRED_DEBUGGING_TYPE): Undef before defining it.\n\t* config/i860/fx2800.h (ASM_OUTPUT_SOURCE_LINE): Undef before defining\n\tit.\n\t* config/m88k/dgux.h: Delete include.\n\t(SDB_DEBUGGING_INFO, PREFERRED_DEBUGGING_TYPE):  Undef before\n\tdefining it.\n\t* config/pj/pj.h (ASM_GENERATE_INTERNAL_LABEL,\n\tASM_OUTPUT_INTERNAL_LABEL, ASM_OUTPUT_SKIP): Undef before defining it.\n\t* config/sh/elf.h: Update include.\n\t(SDB_DEBUGGING_INFO, DWARF2_DEBUGGING_INFO, PREFERRED_DEBUGGING_TYPE,\n\tDWARF2_ASM_LINE_DEBUG_INFO): Move behind includes.\n\nFrom-SVN: r46366", "tree": {"sha": "2239d171a5db69ddd01ba82154be7671e5e61486", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2239d171a5db69ddd01ba82154be7671e5e61486"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "html_url": "https://github.com/Rust-GCC/gccrs/commit/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/comments", "author": {"login": "jinkama-san", "id": 1462162, "node_id": "MDQ6VXNlcjE0NjIxNjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1462162?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jinkama-san", "html_url": "https://github.com/jinkama-san", "followers_url": "https://api.github.com/users/jinkama-san/followers", "following_url": "https://api.github.com/users/jinkama-san/following{/other_user}", "gists_url": "https://api.github.com/users/jinkama-san/gists{/gist_id}", "starred_url": "https://api.github.com/users/jinkama-san/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jinkama-san/subscriptions", "organizations_url": "https://api.github.com/users/jinkama-san/orgs", "repos_url": "https://api.github.com/users/jinkama-san/repos", "events_url": "https://api.github.com/users/jinkama-san/events{/privacy}", "received_events_url": "https://api.github.com/users/jinkama-san/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "cf4c092e87720148648edfb7ce056d507b1c7f8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf4c092e87720148648edfb7ce056d507b1c7f8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf4c092e87720148648edfb7ce056d507b1c7f8e"}], "stats": {"total": 403, "additions": 204, "deletions": 199}, "files": [{"sha": "26c6fd3bee60e4338e2d54e5ab81761c82d0fb64", "filename": "gcc/ChangeLog", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -1,3 +1,64 @@\n+2001-10-19  Franz Sirl  <Franz.Sirl-kernel@lauterbach.com>\n+\n+\t* config.gcc (i[34567]86-*-gnu*, arc-*-elf*, d30v-*,\n+\tfr30-*-elf, hppa*64*-*-linux*, parisc*64*-*-linux*, hppa*-*-linux*,\n+\tparisc*-*-linux*, i370-*-linux*, i[34567]86-*-chorusos*,\n+\ti[34567]86-*-elf*, i[34567]86-ncr-sysv4*, i[34567]86-*-netware,\n+\ti[34567]86-sequent-ptx4*, i[34567]86-sequent-sysv4*,\n+\ti[34567]86-*-beoself*, i[34567]86-*-beos*, i[34567]86-*-freebsd*,\n+\ti[34567]86-*-netbsdelf*, i[34567]86-*-linux*libc1,\n+\ti[34567]86-*-linux*, i[34567]86-moss-msdos*, i[34567]86-*-moss*,\n+\ti[34567]86-go32-rtems*, i[34567]86-*-rtems*, i[34567]86-*-rtemself*,\n+\ti[34567]86-*-solaris2*, i[34567]86-*-sysv5*, i[34567]86-*-sysv4*,\n+\ti[34567]86-*-udk*, i[34567]86-*-osf1*, i[34567]86-dg-dgux*,\n+\ti860-alliant-*, i860-*-sysv4*, ia64*-*-aix*, ia64*-*-linux*,\n+\tia64*-*-hpux*, m32r-*-elf*, m88k-dg-dgux*, m88k-*-sysv4*, mcore-*-elf,\n+\tmips*-*-linux*, mn10200-*-*, mn10300-*-*, pj*-linux*, pjl-*,\n+\tpowerpc64-*-linux*, powerpc-*-sysv*, powerpc-*-netbsd*,\n+\tpowerpc-*-chorusos*, powerpc-*-eabiaix*, powerpc-*-eabisim*,\n+\tpowerpc-*-elf*, powerpc-*-eabi*, powerpc-*-rtems*,\n+\tpowerpc-*-linux*libc1, powerpc-*-linux*, powerpc-wrs-vxworks*,\n+\tpowerpcle-wrs-vxworks*, powerpcle-*-sysv*, powerpcle-*-elf*,\n+\tpowerpcle-*-eabisim*, powerpcle-*-eabi*, powerpcle-*-solaris2*,\n+\trs6000-*-mach*, s390-*-linux*, s390x-*-linux*, sh-*-elf*,\n+\tsh-*-rtemself*, sh-*-rtems*, sh-*-linux*, stormy16-*-elf,\n+\tv850-*-rtems*, v850-*-*, x86_64-*-linux*), cris-*-aout, cris-*-elf,\n+\tcris-*-none, cris-*-linux*: Update ${tmfile} list.\n+\t(c4x-*-rtems*, c4x-*, i[34567]86-go32-rtems*, i[34567]86-*-rtemscoff*,\n+\ti[34567]86-*-rtems*, i[34567]86-*-rtemself*, i[34567]86-*-osf1*,\n+\tmn10200-*-*, mn10300-*-*, powerpc-*-beos*, powerpc-*-darwin*,\n+\tpowerpc-wrs-vxworks*, powerpcle-wrs-vxworks*, v850-*-rtems*,\n+\tv850-*-*): Delete superflous ${cpu_type} setting.\n+\t* config/linux.h: Delete svr4.h include.\n+\t(SET_ASM_OP): Delete.\n+\t* config/netware.h (INT_ASM_OP): Undef before define.\n+\t* config/ptx4.h: Delete elfos.h include.\n+\t(PREFERRED_DEBUGGING_TYPE): Undef instead of wrapping.\n+\t* config/svr4.h: Delete elfos.h include. Update commentary.\n+\t* config/arc/arc.h, config/d30v/d30v.h, config/fr30/fr30.h,\n+\tconfig/m32r/m32r.h, config/m88k/sysv4.h, config/mn10200/mn10200.h,\n+\tconfig/mn10200/mn10300.h, config/stormy16/stormy16.h,\n+\tconfig/v850/v850.h: Delete svr4.h include.\n+\t* config/i370/linux.h, config/i386/osf1elf.h, config/m68k/linux.h,\n+\tconfig/m68k/m68kv4.h, config/m88k/sysv4.h,\n+\tconfig/sparc/sysv4.h: Update includes.\n+\t* config/i386/beos-elf.h, config/i386/netware.h, config/i386/ptx4-i.h,\n+\tconfig/i386/rtemself.h, config/i386/sol2.h, config/i386/sysv4.h,\n+\tconfig/i386/sysv5.h, config/i386/udk.h, config/ia64/linux.h,\n+\tconfig/m88k/dguxbcs.h: Delete includes.\n+\t* config/i386/dgux.h, config/i386/osf1elfgdb.h: Delete include.\n+\t(PREFERRED_DEBUGGING_TYPE): Undef before defining it.\n+\t* config/i860/fx2800.h (ASM_OUTPUT_SOURCE_LINE): Undef before defining\n+\tit.\n+\t* config/m88k/dgux.h: Delete include.\n+\t(SDB_DEBUGGING_INFO, PREFERRED_DEBUGGING_TYPE):  Undef before\n+\tdefining it.\n+\t* config/pj/pj.h (ASM_GENERATE_INTERNAL_LABEL,\n+\tASM_OUTPUT_INTERNAL_LABEL, ASM_OUTPUT_SKIP): Undef before defining it.\n+\t* config/sh/elf.h: Update include.\n+\t(SDB_DEBUGGING_INFO, DWARF2_DEBUGGING_INFO, PREFERRED_DEBUGGING_TYPE,\n+\tDWARF2_ASM_LINE_DEBUG_INFO): Move behind includes.\n+\n 2001-10-19  Catherine Moore  <clm@redhat.com>\n \n         * config/stormy16/stormy-abi:  Updates to varargs descriptions."}, {"sha": "36a10bad85b6821b10c3cb210e7e500e517a5a04", "filename": "gcc/config.gcc", "status": "modified", "additions": 84, "deletions": 86, "changes": 170, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -46,7 +46,15 @@\n #  cpu_type\t\tThe name of the cpu, if different from machine.\n #\n #  tm_file\t\tA list of target macro files, if different from\n-#\t\t\t\"$cpu_type/$cpu_type.h\".\n+#\t\t\t\"$cpu_type/$cpu_type.h\". Usually it's constructed\n+#\t\t\tper target in a way like this:\n+#\t\t\ttm_file=\"${tm_file} elfos.h svr4.h ${cpu_type.h}/elf.h\"\n+#\t\t\tNote that the preferred order is:\n+#\t\t\t- specific target header \"${cpu_type}/${cpu_type.h}\"\n+#\t\t\t- generic headers like elfos.h, netware.h, etc.\n+#\t\t\t- specializing target headers like ${cpu_type.h}/elf.h\n+#\t\t\tThis helps to keep OS specific stuff out of the CPU\n+#\t\t\tdefining header ${cpu_type}/${cpu_type.h}.\n #\n #  tm_p_file\t\tLocation of file with declarations for functions\n #\t\t\tin $out_file.\n@@ -280,7 +288,7 @@ case $machine in\n \ttmake_file=\"t-slibgcc-elf-ver t-linux t-gnu\"\n \tcase $machine in\n \ti[34567]86-*-*)\n-\t\ttm_file=\"${cpu_type}/${cpu_type}.h i386/att.h linux.h i386/linux.h gnu.h ${tm_file}\"\n+\t\ttm_file=\"${cpu_type}/${cpu_type}.h i386/att.h elfos.h svr4.h linux.h i386/linux.h gnu.h ${tm_file}\"\n \t\t;;\n \tesac\n \t;;\n@@ -528,6 +536,7 @@ alpha*-dec-vms*)\n \ttmake_file=\"alpha/t-alpha alpha/t-vms alpha/t-ieee\"\n \t;;\n arc-*-elf*)\n+\ttm_file=\"elfos.h svr4.h ${tm_file}\"\n \textra_parts=\"crtinit.o crtfini.o\"\n \t;;\n arm*-*-rtems*)\n@@ -638,7 +647,6 @@ c38-convex-*)\n \tuse_collect2=yes\n \t;;\n c4x-*-rtems*)\n-\tcpu_type=c4x\n \ttmake_file=\"c4x/t-c4x t-rtems\"\n \ttm_file=c4x/rtems.h\n \tif test x$enable_threads = xyes; then\n@@ -648,7 +656,6 @@ c4x-*-rtems*)\n \tcxx_target_objs=\"c4x-c.o\"\n \t;;\n c4x-*)\n-\tcpu_type=c4x\n \tfloat_format=c4x\n \ttmake_file=c4x/t-c4x\n \tc_target_objs=\"c4x-c.o\"\n@@ -662,17 +669,17 @@ clipper-intergraph-clix*)\n \tinstall_headers_dir=install-headers-cpio\n \t;;\n cris-*-aout)\n-\ttm_file=\"dbxelf.h cris/cris.h cris/aout.h\"\n+\ttm_file=\"dbxelf.h ${tm_file} cris/aout.h\"\n \tgas=yes\n \ttmake_file=\"cris/t-cris cris/t-aout\"\n \t;;\n cris-*-elf | cris-*-none)\n-\ttm_file=\"elfos.h cris/cris.h\"\n+\ttm_file=\"elfos.h ${tm_file}\"\n \ttmake_file=\"cris/t-cris cris/t-elfmulti\"\n \tgas=yes\n \t;;\n cris-*-linux*)\n-\ttm_file=\"linux.h cris/cris.h cris/linux.h\"\n+\ttm_file=\"elfos.h svr4.h linux.h ${tm_file} cris/linux.h\"\n \ttmake_file=\"cris/t-cris t-slibgcc-elf-ver cris/t-linux\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \tcase x${enable_threads} in\n@@ -683,6 +690,7 @@ cris-*-linux*)\n \tgas=yes\n \t;;\n d30v-*)\n+\ttm_file=\"elfos.h svr4.h ${tm_file}\"\n \tfloat_format=i64\n \t;;\n dsp16xx-*)\n@@ -691,7 +699,7 @@ elxsi-elxsi-*)\n \tuse_collect2=yes\n \t;;\n fr30-*-elf)\n-\ttm_file=\"fr30/fr30.h\"\n+\ttm_file=\"elfos.h svr4.h ${tm_file}\"\n \ttmake_file=fr30/t-fr30\n \textra_parts=\"crti.o crtn.o crtbegin.o crtend.o\"\n \t;;\n@@ -713,14 +721,14 @@ h8300-*-*)\n \t;;\n hppa*64*-*-linux* | parisc*64*-*-linux*)\n \ttarget_cpu_default=\"(MASK_PA_11 | MASK_PA_20)\"\n-\ttm_file=\"pa/pa64-start.h ${tm_file} linux.h pa/pa-linux.h \\\n+\ttm_file=\"pa/pa64-start.h ${tm_file} elfos.h svr4.h linux.h pa/pa-linux.h \\\n \t\t pa/pa64-regs.h pa/pa-64.h pa/pa64-linux.h\"\n \ttmake_file=pa/t-linux64\n \tgas=yes gnu_ld=yes\n \t;;\n hppa*-*-linux* | parisc*-*-linux*)\n \ttarget_cpu_default=\"MASK_PA_11\"\n-\ttm_file=\"${tm_file} linux.h pa/pa-linux.h \\\n+\ttm_file=\"${tm_file} elfos.h svr4.h linux.h pa/pa-linux.h \\\n \t\t pa/pa32-regs.h pa/pa32-linux.h\"\n \ttmake_file=\"t-slibgcc-elf-ver t-linux pa/t-linux\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n@@ -959,7 +967,7 @@ i370-*-mvs*)\n \t;;\n i370-*-linux*)\n \txmake_file=x-linux\n-\ttm_file=\"i370/linux.h ${tm_file}\"\n+\ttm_file=\"elfos.h svr4.h linux.h i370/linux.h ${tm_file}\"\n \ttmake_file=\"t-slibgcc-elf-ver t-linux\"\n \t# broken_install=yes\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n@@ -973,7 +981,7 @@ i370-*-linux*)\n \t;;\n i[34567]86-*-chorusos*)\n \txm_defines=POSIX\n-\ttm_file=\"i386/i386.h i386/att.h elfos.h i386/i386elf.h chorus.h\"\n+\ttm_file=\"${tm_file} i386/att.h elfos.h i386/i386elf.h chorus.h\"\n \ttmake_file=i386/t-i386elf\n \txmake_file=x-svr4\n \tcase x${enable_threads} in\n@@ -984,7 +992,7 @@ i[34567]86-*-chorusos*)\n \t;;\n i[34567]86-*-elf*)\n \txm_defines=POSIX\n-\ttm_file=\"i386/i386.h i386/att.h elfos.h i386/i386elf.h\"\n+\ttm_file=\"${tm_file} i386/att.h elfos.h i386/i386elf.h\"\n \ttmake_file=i386/t-i386elf\n \txmake_file=x-svr4\n \t;;\n@@ -1006,7 +1014,7 @@ i[34567]86-ncr-sysv4*)\t\t# NCR 3000 - ix86 running system V.4\n \tthen\n \t\ttm_file=i386/sysv4gdb.h\n \telse\n-\t\ttm_file=i386/sysv4.h\n+\t\ttm_file=\"${tm_file} i386/att.h elfos.h svr4.h i386/sysv4.h\"\n \tfi\n \textra_parts=\"crtbegin.o crtend.o\"\n \ttmake_file=i386/t-crtpic\n@@ -1021,7 +1029,7 @@ i[34567]86-next-*)\n \tfi\n \t;;\n i[34567]86-*-netware)\t\t# Intel 80386's running netware\n-\ttm_file=i386/netware.h\n+\ttm_file=\"${tm_file} i386/att.h elfos.h svr4.h i386/sysv4.h netware.h i386/netware.h\"\n \ttmake_file=i386/t-netware\n \t;;\n i[34567]86-sequent-bsd*) \t\t# 80386 from Sequent\n@@ -1054,7 +1062,7 @@ i[34567]86-sequent-ptx4* | i[34567]86-sequent-sysv4*)\n \tfi\n \txm_defines=\"POSIX SMALL_ARG_MAX\"\n \txmake_file=x-svr4\n-\ttm_file=i386/ptx4-i.h\n+\ttm_file=\"${tm_file} i386/att.h elfos.h ptx4.h i386/ptx4-i.h\"\n \ttmake_file=t-svr4\n \textra_parts=\"crtbegin.o crtend.o\"\n \tinstall_headers_dir=install-headers-cpio\n@@ -1074,7 +1082,7 @@ i[34567]86-*-aout*)\n i[34567]86-*-beoself* | i[34567]86-*-beos*)\n \txm_defines=POSIX\n \ttmake_file='i386/t-beos i386/t-crtpic'\n-\ttm_file=i386/beos-elf.h\n+\ttm_file=\"${tm_file} i386/att.h elfos.h svr4.h i386/beos-elf.h\"\n \txmake_file=i386/x-beos\n \textra_parts='crtbegin.o crtend.o'\n \t;;\n@@ -1093,11 +1101,11 @@ i[34567]86-*-freebsd[12] | i[34567]86-*-freebsd[12].* | i[34567]86-*-freebsd*aou\n \ttmake_file=t-freebsd\n \t;;\n i[34567]86-*-freebsd*)\n-\ttm_file=\"${tm_file} i386/att.h svr4.h ${fbsd_tm_file} i386/freebsd.h\"\n+\ttm_file=\"${tm_file} i386/att.h elfos.h svr4.h ${fbsd_tm_file} i386/freebsd.h\"\n \t;;\n i[34567]86-*-netbsdelf*)\n \txm_defines=POSIX\n-\ttm_file=\"${tm_file} i386/att.h svr4.h i386/netbsd-elf.h\"\n+\ttm_file=\"${tm_file} i386/att.h elfos.h svr4.h i386/netbsd-elf.h\"\n \ttmake_file=t-netbsd\n \tgnu_ld=yes\n \tfloat_format=i386\n@@ -1148,8 +1156,8 @@ i[34567]86-*-linux*aout*)\t# Intel 80386's running GNU/Linux\n i[34567]86-*-linux*libc1)\t# Intel 80386's running GNU/Linux\n \t\t\t\t# with ELF format using the\n \t\t\t\t# GNU/Linux C library 5\n-\txmake_file=x-linux\n-\ttm_file=\"i386/i386.h i386/att.h linux.h i386/linux.h\"\n+\txmake_file=x-linux\t\n+\ttm_file=\"${tm_file} i386/att.h elfos.h svr4.h linux.h i386/linux.h\"\n \ttmake_file=\"t-slibgcc-elf-ver t-linux t-linux-gnulibc1 i386/t-crtstuff\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \tgnu_ld=yes\n@@ -1162,7 +1170,7 @@ i[34567]86-*-linux*)\t# Intel 80386's running GNU/Linux\n \t\t\t# with ELF format using glibc 2\n \t\t\t# aka GNU/Linux C library 6\n \txmake_file=x-linux\n-\ttm_file=\"i386/i386.h i386/att.h linux.h i386/linux.h\"\n+\ttm_file=\"${tm_file} i386/att.h elfos.h svr4.h linux.h i386/linux.h\"\n \ttmake_file=\"t-slibgcc-elf-ver t-linux i386/t-crtstuff\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \tgnu_ld=yes\n@@ -1173,8 +1181,8 @@ i[34567]86-*-linux*)\t# Intel 80386's running GNU/Linux\n \t;;\n x86_64-*-linux*)\n \txmake_file=x-linux\n-\ttm_file=\"i386/biarch64.h i386/i386.h i386/att.h linux.h i386/x86-64.h \\\n-\t\t i386/linux64.h\"\n+\ttm_file=\"i386/biarch64.h i386/i386.h i386/att.h elfos.h svr4.h linux.h \\\n+\t\t i386/x86-64.h i386/linux64.h\"\n \ttmake_file=\"t-slibgcc-elf-ver t-linux i386/t-crtstuff\"\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\"\n \tgnu_ld=yes\n@@ -1204,7 +1212,7 @@ i[34567]86-pc-msdosdjgpp*)\n \tesac\n \t;;\n i[34567]86-moss-msdos* | i[34567]86-*-moss*)\n-\ttm_file=\"i386/i386.h i386/att.h linux.h i386/linux.h i386/moss.h\"\n+\ttm_file=\"${tm_file} i386/att.h elfos.h svr4.h linux.h i386/linux.h i386/moss.h\"\n \ttmake_file=t-libc-ok\n \tgnu_ld=yes\n \tgas=yes\n@@ -1235,24 +1243,21 @@ i[34567]86-*-osfrose*)\t\t# 386 using OSF/rose\n \textra_objs=halfpic.o\n \t;;\n i[34567]86-go32-rtems*)\n-\tcpu_type=i386\n-\ttm_file=i386/go32-rtems.h\n+\ttm_file=i386/djgpp-rtems.h\n \ttmake_file=t-rtems\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n \tfi\n \t;;\n i[34567]86-*-rtemscoff*)\n-\tcpu_type=i386\n \ttm_file=i386/rtems.h\n \ttmake_file=t-rtems\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n \tfi\n \t;;\n i[34567]86-*-rtems*|i[34567]86-*-rtemself*)\n-\tcpu_type=i386\n-\ttm_file=i386/rtemself.h\n+\ttm_file=\"${tm_file} i386/att.h elfos.h svr4.h linux.h i386/rtemself.h rtems.h\"\n \textra_parts=\"crtbegin.o crtend.o crti.o crtn.o\"\n \ttmake_file=\"i386/t-rtems-i386 i386/t-crtstuff t-rtems\"\n \tif test x$enable_threads = xyes; then\n@@ -1275,7 +1280,7 @@ i[34567]86-*-sco3.2v5*)\t# 80386 running SCO Open Server 5\n \t;;\n i[34567]86-*-solaris2*)\n \txm_defines=\"POSIX SMALL_ARG_MAX\"\n-\ttm_file=i386/sol2.h\n+\ttm_file=\"${tm_file} i386/att.h elfos.h svr4.h i386/sysv4.h i386/sol2.h\"\n \tif test x$gas = xyes; then\n \t\t# Only needed if gas does not support -s\n \t\ttm_file=\"i386/sol2gas.h ${tm_file}\"\n@@ -1304,7 +1309,7 @@ i[34567]86-*-solaris2*)\n \t;;\n i[34567]86-*-sysv5*)           # Intel x86 on System V Release 5\n        xm_defines=POSIX\n-       tm_file=i386/sysv5.h\n+       tm_file=\"${tm_file} i386/att.h elfos.h svr4.h i386/sysv4.h i386/sysv5.h\"\n        if test x$stabs = xyes\n        then\n                tm_file=\"${tm_file} dbx.h\"\n@@ -1318,7 +1323,7 @@ i[34567]86-*-sysv5*)           # Intel x86 on System V Release 5\n        ;;\n i[34567]86-*-sysv4*)\t\t# Intel 80386's running system V.4\n \txm_defines=\"POSIX SMALL_ARG_MAX\"\n-\ttm_file=i386/sysv4.h\n+\ttm_file=\"${tm_file} i386/att.h elfos.h svr4.h i386/sysv4.h\"\n \tif test x$stabs = xyes\n \tthen\n \t\ttm_file=\"${tm_file} dbx.h\"\n@@ -1329,21 +1334,20 @@ i[34567]86-*-sysv4*)\t\t# Intel 80386's running system V.4\n \t;;\n i[34567]86-*-udk*)      # Intel x86 on SCO UW/OSR5 Dev Kit\n \txm_defines=POSIX\n-\ttm_file=i386/udk.h\n+\ttm_file=\"${tm_file} i386/att.h elfos.h svr4.h i386/sysv4.h i386/sysv5.h i386/udk.h\"\n \ttmake_file=\"i386/t-crtpic i386/t-udk\"\n \txmake_file=x-svr4\n \textra_parts=\"crtbegin.o crtend.o\"\n \tinstall_headers_dir=install-headers-cpio\n \t;;\n i[34567]86-*-osf1*)\t\t# Intel 80386's running OSF/1 1.3+\n-\tcpu_type=i386\n \txm_file=i386/xm-osf1elf.h\n \txm_defines='POSIX USE_C_ALLOCA SMALL_ARG_MAX'\n \tif test x$stabs = xyes\n \tthen\n-\t\ttm_file=i386/osf1elfgdb.h\n+\t\ttm_file=\"${tm_file} i386/att.h elfos.h svr4.h i386/sysv4.h i386/osf1elf.h i386/osf1elfgdb.h\"\n \telse\n-\t\ttm_file=i386/osf1elf.h\n+\t\ttm_file=\"${tm_file} i386/att.h elfos.h svr4.h i386/sysv4.h i386/osf1elf.h\"\n \tfi\n \ttmake_file=i386/t-osf1elf\n \textra_parts=\"crti.o crtn.o crtbegin.o crtend.o\"\n@@ -1446,13 +1450,13 @@ i[34567]86-*-interix*)\n i[34567]86-dg-dgux*)\n \txm_defines=POSIX\n \tout_file=i386/dgux.c\n-\ttm_file=i386/dgux.h\n+\ttm_file=\"${tm_file} i386/att.h elfos.h svr4.h i386/sysv4.h i386/dgux.h\"\n \ttmake_file=i386/t-dgux\n \txmake_file=i386/x-dgux\n \tinstall_headers_dir=install-headers-cpio\n       ;;\n i860-alliant-*)\t\t# Alliant FX/2800\n-\ttm_file=\"${tm_file} svr4.h i860/sysv4.h i860/fx2800.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h i860/sysv4.h i860/fx2800.h\"\n \ttmake_file=i860/t-fx2800\n \textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n@@ -1478,7 +1482,7 @@ i860-*-sysv3*)\n \textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n i860-*-sysv4*)\n-\ttm_file=\"${tm_file} svr4.h i860/sysv4.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h i860/sysv4.h\"\n \txm_defines=POSIX\n \ttmake_file=t-svr4\n \textra_parts=\"crtbegin.o crtend.o\"\n@@ -1528,7 +1532,7 @@ i960-*-*)\t\t\t# Default i960 environment.\n \tcxx_target_objs=\"i960-c.o\"\n \t;;\n ia64*-*-aix*)\n-\ttm_file=\"${tm_file} svr4.h ia64/sysv4.h ia64/aix.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h ia64/sysv4.h ia64/aix.h\"\n \ttmake_file=\"ia64/t-ia64 ia64/t-aix\"\n \ttarget_cpu_default=\"MASK_GNU_AS|MASK_GNU_LD\"\n \t;;\n@@ -1547,7 +1551,7 @@ ia64*-*-elf*)\n \tfloat_format=i386\n \t;;\n ia64*-*-linux*)\n-\ttm_file=ia64/linux.h\n+\ttm_file=\"${tm_file} elfos.h svr4.h linux.h ia64/sysv4.h ia64/linux.h\"\n \ttmake_file=\"t-slibgcc-elf-ver t-linux ia64/t-ia64 ia64/t-glibc\"\n \ttarget_cpu_default=\"MASK_GNU_AS|MASK_GNU_LD\"\n \tif test x$enable_threads = xyes; then\n@@ -1556,7 +1560,7 @@ ia64*-*-linux*)\n \tfloat_format=i386\n \t;;\n ia64*-*-hpux*)\n-\ttm_file=\"ia64/ia64.h svr4.h ia64/sysv4.h ia64/hpux.h ia64/hpux_longdouble.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h ia64/sysv4.h ia64/hpux.h ia64/hpux_longdouble.h\"\n \ttmake_file=\"ia64/t-ia64 ia64/t-hpux\"\n \ttarget_cpu_default=\"MASK_GNU_AS\"\n \tif test x$enable_threads = xyes; then\n@@ -1565,6 +1569,7 @@ ia64*-*-hpux*)\n \tfloat_format=i386\n \t;;\n m32r-*-elf*)\n+\ttm_file=\"elfos.h svr4.h ${tm_file}\"\n \textra_parts=\"crtinit.o crtfini.o\"\n \t;;\n # m68hc11 and m68hc12 share the same machine description.\n@@ -2005,11 +2010,11 @@ m88k-dg-dgux*)\n \txm_defines=POSIX\n \tcase $machine in\n \t  m88k-dg-dguxbcs*)\n-\t    tm_file=m88k/dguxbcs.h\n+\t    tm_file=\"elfos.h svr4.h m88k/dgux.h m88k/dguxbcs.h\"\n \t    tmake_file=m88k/t-dguxbcs\n \t    ;;\n \t  *)\n-\t    tm_file=m88k/dgux.h\n+\t    tm_file=\"elfos.h svr4.h m88k/dgux.h\"\n \t    tmake_file=m88k/t-dgux\n \t    ;;\n \tesac\n@@ -2074,12 +2079,12 @@ m88k-*-sysv3*)\n \t;;\n m88k-*-sysv4*)\n \txm_defines=POSIX\n-\ttm_file=m88k/sysv4.h\n+\ttm_file=\"elfos.h svr4.h m88k/sysv4.h\"\n \textra_parts=\"crtbegin.o crtend.o\"\n \ttmake_file=m88k/t-sysv4\n \t;;\n mcore-*-elf)\n-\ttm_file=mcore/mcore-elf.h\n+\ttm_file=\"elfos.h svr4.h ${tm_file} mcore/mcore-elf.h\"\n \ttmake_file=mcore/t-mcore\n \t;;\n mcore-*-pe*)\n@@ -2551,17 +2556,15 @@ mips-*-*)\t\t\t\t# Default MIPS RISC-OS 4.0.\n \t;;\n mn10200-*-*)\n \tfloat_format=i32\n-\tcpu_type=mn10200\n-\ttm_file=\"mn10200/mn10200.h\"\n+\ttm_file=\"elfos.h svr4.h ${tm_file}\"\n \tif test x$stabs = xyes\n \tthen\n \t\ttm_file=\"${tm_file} dbx.h\"\n \tfi\n \tuse_collect2=no\n \t;;\n mn10300-*-*)\n-\tcpu_type=mn10300\n-\ttm_file=\"mn10300/mn10300.h\"\n+\ttm_file=\"elfos.h svr4.h ${tm_file}\"\n \tif test x$stabs = xyes\n \tthen\n \t\ttm_file=\"${tm_file} dbx.h\"\n@@ -2614,12 +2617,12 @@ ns32k-*-openbsd*)\n \t# Nothing special\n \t;;\n pj*-linux*)\n-\ttm_file=\"svr4.h pj/linux.h ${tm_file}\"\n+\ttm_file=\"elfos.h svr4.h pj/linux.h ${tm_file}\"\n \t;;\n pj-*)\n \t;;\n pjl-*)\n-\ttm_file=\"svr4.h pj/pjl.h ${tm_file}\"\n+\ttm_file=\"elfos.h svr4.h pj/pjl.h ${tm_file}\"\n \t;;\n \n romp-*-aos*)\n@@ -2635,21 +2638,19 @@ powerpc-*-openbsd*)\n \ttmake_file=\"${tmake_file} rs6000/t-rs6000 rs6000/t-openbsd\"\n \t;;\n powerpc64-*-linux*)\n-\ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/linux64.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h rs6000/sysv4.h rs6000/linux64.h\"\n \tout_file=rs6000/rs6000.c\n \ttmake_file=\"rs6000/t-ppcos t-slibgcc-elf-ver t-linux rs6000/t-ppccomm\"\n \txmake_file=x-linux\n \textra_headers=ppc-asm.h\n \t;;\n powerpc-*-beos*)\n-\tcpu_type=rs6000\n \ttm_file=\"${tm_file} rs6000/aix.h rs6000/beos.h rs6000/xcoff.h\"\n \txm_defines=POSIX\n \txm_file=rs6000/xm-beos.h\n \ttmake_file=rs6000/t-beos\n \t;;\n powerpc-*-darwin*)\n-\tcpu_type=rs6000\n \ttm_file=\"${tm_file} darwin.h rs6000/darwin.h\"\n \ttm_p_file=\"${tm_p_file} darwin-protos.h\"\n \ttmake_file=rs6000/t-darwin\n@@ -2665,20 +2666,20 @@ powerpc-*-darwin*)\n \tuse_collect2=no\n \t;;\n powerpc-*-sysv*)\n-\ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h rs6000/sysv4.h\"\n \txm_defines=POSIX\n \textra_headers=ppc-asm.h\n \ttmake_file=\"rs6000/t-ppcos rs6000/t-ppccomm\"\n \t;;\n powerpc-*-netbsd*)\n \txm_defines=POSIX\n-\ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/netbsd.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h rs6000/sysv4.h rs6000/netbsd.h\"\n \ttmake_file=\"rs6000/t-ppcos rs6000/t-ppccomm\"\n \textra_headers=ppc-asm.h\n \t;;\n powerpc-*-chorusos*)\n \txm_defines=POSIX\n-\ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h chorus.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h rs6000/sysv4.h chorus.h\"\n \ttmake_file=\"rs6000/t-ppcos rs6000/t-ppccomm\"\n \textra_headers=ppc-asm.h\n \tcase x${enable_threads} in\n@@ -2689,39 +2690,39 @@ powerpc-*-chorusos*)\n \t;;\n powerpc-*-eabiaix*)\n \txm_defines=POSIX\n-\ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabiaix.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabiaix.h\"\n \ttmake_file=\"rs6000/t-ppcgas rs6000/t-ppccomm\"\n \textra_headers=ppc-asm.h\n \t;;\n powerpc-*-eabisim*)\n \txm_defines=POSIX\n-\ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabisim.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h rs6000/sysv4.h rs6000/eabi.h rs6000/eabisim.h\"\n \ttmake_file=\"rs6000/t-ppcgas rs6000/t-ppccomm\"\n \textra_headers=ppc-asm.h\n \t;;\n powerpc-*-elf*)\n \txm_defines=POSIX\n-\ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h rs6000/sysv4.h\"\n \ttmake_file=\"rs6000/t-ppcgas rs6000/t-ppccomm\"\n \textra_headers=ppc-asm.h\n \t;;\n powerpc-*-eabi*)\n \txm_defines=POSIX\n-\ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/eabi.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h rs6000/sysv4.h rs6000/eabi.h\"\n \ttmake_file=\"rs6000/t-ppcgas rs6000/t-ppccomm\"\n \textra_headers=ppc-asm.h\n \t;;\n powerpc-*-rtems*)\n \txm_defines=POSIX\n-\ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/eabi.h rtems.h rs6000/rtems.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h rs6000/sysv4.h rs6000/eabi.h rtems.h rs6000/rtems.h\"\n \ttmake_file=\"rs6000/t-ppcgas t-rtems rs6000/t-ppccomm\"\n \textra_headers=ppc-asm.h\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n \tfi\n \t;;\n powerpc-*-linux*libc1)\n-\ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/linux.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h rs6000/sysv4.h rs6000/linux.h\"\n \tout_file=rs6000/rs6000.c\n \ttmake_file=\"rs6000/t-ppcos t-slibgcc-elf-ver t-linux t-linux-gnulibc1 rs6000/t-ppccomm\"\n \txmake_file=x-linux\n@@ -2731,7 +2732,7 @@ powerpc-*-linux*libc1)\n \tfi\n \t;;\n powerpc-*-linux*)\n-\ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/linux.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h rs6000/sysv4.h rs6000/linux.h\"\n \tout_file=rs6000/rs6000.c\n \ttmake_file=\"rs6000/t-ppcos t-slibgcc-elf-ver t-linux rs6000/t-ppccomm\"\n \txmake_file=x-linux\n@@ -2741,47 +2742,45 @@ powerpc-*-linux*)\n \tfi\n \t;;\n powerpc-wrs-vxworks*)\n-        cpu_type=rs6000\n \txm_defines=POSIX\n-        tm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/vxppc.h\"\n+        tm_file=\"${tm_file} elfos.h svr4.h rs6000/sysv4.h rs6000/vxppc.h\"\n         tmake_file=\"rs6000/t-ppcgas rs6000/t-ppccomm\"\n \textra_headers=ppc-asm.h\n \tthread_file='vxworks'\n         ;;\n powerpcle-wrs-vxworks*)\n-        cpu_type=rs6000\n \txm_defines=POSIX\n-        tm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/vxppc.h\"\n+        tm_file=\"${tm_file} elfos.h svr4.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/vxppc.h\"\n         tmake_file=\"rs6000/t-ppcgas rs6000/t-ppccomm\"\n \textra_headers=ppc-asm.h\n \tthread_file='vxworks'\n         ;;\n powerpcle-*-sysv*)\n-\ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/sysv4le.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h rs6000/sysv4.h rs6000/sysv4le.h\"\n \txm_defines=POSIX\n \ttmake_file=\"rs6000/t-ppcos rs6000/t-ppccomm\"\n \textra_headers=ppc-asm.h\n \t;;\n powerpcle-*-elf*)\n \txm_defines=POSIX\n-\ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/sysv4le.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h rs6000/sysv4.h rs6000/sysv4le.h\"\n \ttmake_file=\"rs6000/t-ppcgas rs6000/t-ppccomm\"\n \textra_headers=ppc-asm.h\n \t;;\n powerpcle-*-eabisim*)\n \txm_defines=POSIX\n-\ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/eabi.h rs6000/eabisim.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/eabi.h rs6000/eabisim.h\"\n \ttmake_file=\"rs6000/t-ppcgas rs6000/t-ppccomm\"\n \textra_headers=ppc-asm.h\n \t;;\n powerpcle-*-eabi*)\n \txm_defines=POSIX\n-\ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/eabi.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/eabi.h\"\n \ttmake_file=\"rs6000/t-ppcgas rs6000/t-ppccomm\"\n \textra_headers=ppc-asm.h\n \t;;\n powerpcle-*-solaris2*)\n-\ttm_file=\"${tm_file} svr4.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/sol2.h\"\n+\ttm_file=\"${tm_file} elfos.h svr4.h rs6000/sysv4.h rs6000/sysv4le.h rs6000/sol2.h\"\n \txm_defines=POSIX\n \ttmake_file=\"rs6000/t-ppcos rs6000/t-ppccomm\"\n \textra_headers=ppc-asm.h\n@@ -2835,7 +2834,7 @@ rs6000-bull-bosx)\n \tuse_collect2=yes\n \t;;\n rs6000-*-mach*)\n-\ttm_file=\"rs6000/rs6000.h rs6000/mach.h\"\n+\ttm_file=\"${tm_file} rs6000/mach.h\"\n \txm_defines=POSIX\n \tuse_collect2=yes\n \t;;\n@@ -2846,7 +2845,7 @@ rs6000-*-lynxos*)\n \t;;\n s390-*-linux*)\n \txmake_file=x-linux\n-\ttm_file=\"s390/s390.h linux.h s390/linux.h\"\n+\ttm_file=\"s390/s390.h elfos.h svr4.h linux.h s390/linux.h\"\n \ttmake_file=\"t-slibgcc-elf-ver t-linux s390/t-linux\"\n \textra_parts=\"crtbegin.o crtend.o crtbeginS.o crtendS.o\"\n \tif test x$enable_threads = xyes; then\n@@ -2855,7 +2854,7 @@ s390-*-linux*)\n \t;;\n s390x-*-linux*)\n \txmake_file=x-linux\n-\ttm_file=\"s390/s390.h linux.h s390/linux.h s390/linux64.h\"\n+\ttm_file=\"s390/s390.h elfos.h svr4.h linux.h s390/linux.h s390/linux64.h\"\n \ttm_p_file=s390/s390-protos.h\n \tmd_file=s390/s390.md\n \tout_file=s390/s390.c\n@@ -2867,27 +2866,27 @@ s390x-*-linux*)\n \t;;\n sh-*-elf*)\n \ttmake_file=\"sh/t-sh sh/t-elf\"\n-\ttm_file=\"sh/sh.h sh/elf.h\"\n+\ttm_file=\"${tm_file} sh/elf.h\"\n \tfloat_format=sh\n \t;;\n sh-*-rtemself*)\n \ttmake_file=\"sh/t-sh sh/t-elf t-rtems\"\n-\ttm_file=\"sh/sh.h sh/elf.h sh/rtemself.h\"\n+\ttm_file=\"${tm_file} sh/elf.h sh/rtemself.h\"\n \tfloat_format=sh\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n \tfi\n \t;;\n sh-*-rtems*)\n \ttmake_file=\"sh/t-sh t-rtems\"\n-\ttm_file=\"sh/sh.h sh/rtems.h\"\n+\ttm_file=\"${tm_file} sh/rtems.h\"\n \tfloat_format=sh\n \tif test x$enable_threads = xyes; then\n \t  thread_file='rtems'\n \tfi\n \t;;\n sh-*-linux*)\n-\ttm_file=\"sh/sh.h sh/elf.h sh/linux.h\"\n+\ttm_file=\"${tm_file} sh/elf.h sh/linux.h\"\n \ttmake_file=\"sh/t-sh sh/t-elf sh/t-linux\"\n \txmake_file=x-linux\n \tgas=yes gnu_ld=yes\n@@ -3171,6 +3170,7 @@ sparc64-*-linux*)\t\t# 64-bit Sparc's running GNU/Linux\n \tfloat_format=sparc\n \t;;\n stormy16-*-elf)\n+\ttm_file=\"elfos.h svr4.h ${tm_file}\"\n \ttmake_file=\"stormy16/t-stormy16\"\n \textra_parts=\"crtbegin.o crtend.o\"\n \t;;\n@@ -3200,8 +3200,7 @@ thumb*-*-*)\n *** when the -mthumb switch is given to the compiler.\" 1>&2; exit 1; }\n \t;;\n v850-*-rtems*)\n-\tcpu_type=v850\n-\ttm_file=\"v850/rtems.h\"\n+\ttm_file=\"elfos.h svr4.h ${tm_file} v850/rtems.h\"\n \ttmake_file=\"v850/t-v850 t-rtems\"\n \tif test x$stabs = xyes\n \tthen\n@@ -3213,8 +3212,7 @@ v850-*-rtems*)\n \t;;\n v850-*-*)\n \ttarget_cpu_default=\"TARGET_CPU_generic\"\n-\tcpu_type=v850\n-\ttm_file=\"v850/v850.h\"\n+\ttm_file=\"elfos.h svr4.h ${tm_file}\"\n \ttmake_file=v850/t-v850\n \tif test x$stabs = xyes\n \tthen"}, {"sha": "7e1191e2805ce9543ee6ea98e51b7c3f6cc061e8", "filename": "gcc/config/arc/arc.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Farc%2Farc.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Farc%2Farc.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -28,8 +28,6 @@ Boston, MA 02111-1307, USA.  */\n    - print active compiler options in assembler output\n */\n \n-/* ??? Create elf.h and have svr4.h include it.  */\n-#include \"svr4.h\"\n \n #undef ASM_SPEC\n #undef LINK_SPEC"}, {"sha": "f7e743eee2848e77e5c5a0bf8cbd397ff603ac3e", "filename": "gcc/config/d30v/d30v.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fd30v%2Fd30v.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fd30v%2Fd30v.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fd30v%2Fd30v.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -27,10 +27,6 @@\n /* Align an address */\n #define D30V_ALIGN(addr,align) (((addr) + (align) - 1) & ~((align) - 1))\n \n-\f\n-/* Set up System V.4 (aka ELF) defaults.  */\n-#include \"svr4.h\"\n-\n \f\n /* Driver configuration */\n "}, {"sha": "4e947b32a977f407f12b27d6dd45c2f0e0e2fa6b", "filename": "gcc/config/fr30/fr30.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Ffr30%2Ffr30.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Ffr30%2Ffr30.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ffr30%2Ffr30.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -21,12 +21,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/*}}}*/ \f\n-/*{{{  Includes.  */ \n-\n-/* Set up System V.4 (aka ELF) defaults.  */\n-#include \"svr4.h\"\n-\n /*}}}*/ \f\n /*{{{  Driver configuration.  */ \n "}, {"sha": "842ae6e7f1a620a85cd2c90b4c30c7ac4bb0c147", "filename": "gcc/config/i370/linux.h", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi370%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi370%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Flinux.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -37,9 +37,8 @@ Boston, MA 02111-1307, USA.  */\n #define REAL_ARITHMETIC\n \n /* Include system common definitions */\n-\n-#include \"config/linux.h\"\n-#include \"config/i370/i370.h\"\n+/* TODO: convert include to ${tm_file} list in config.gcc.  */\n+#include \"i370/i370.h\"\n \n /* Names to predefine in the preprocessor for this target machine.  */\n "}, {"sha": "1a91fbccc4d54ce949a9b201009a4358dddf82be", "filename": "gcc/config/i386/beos-elf.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fbeos-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fbeos-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbeos-elf.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Intel x86 running BeOS\n-   Copyright (C) 1998, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -18,9 +18,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include <i386/i386.h>\t/* Base i386 target machine definitions */\n-#include <i386/att.h>\t/* Use the i386 AT&T assembler syntax */\n-#include <svr4.h>\t/* some common stuff */\n \n #undef TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (i386 BeOS/ELF)\");"}, {"sha": "a9f9593e37ff02d05db1b7d7f37dc8c92f355a76", "filename": "gcc/config/i386/dgux.h", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fdgux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fdgux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdgux.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GNU compiler for Intel 80x86 running DG/ux\n-   Copyright (C) 1993, 1995, 1996, 1997, 1998, 2000\n+   Copyright (C) 1993, 1995, 1996, 1997, 1998, 2000, 2001\n    Free Software Foundation, Inc.\n    Currently maintained by gcc@dg-rtp.dg.com.\n \n@@ -24,10 +24,8 @@ Boston, MA 02111-1307, USA.  */\n    few hacks\n */\n \n-#include \"i386/sysv4.h\"\n-\n #ifndef VERSION_INFO2\n-#define VERSION_INFO2   \"$Revision: 1.13 $\"\n+#define VERSION_INFO2   \"$Revision: 1.14 $\"\n #endif\n \n #ifndef VERSION_STRING\n@@ -80,6 +78,7 @@ Boston, MA 02111-1307, USA.  */\n #undef  DBX_DEBUGGING_INFO\n #define DBX_DEBUGGING_INFO\n \n+#undef  PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DWARF_DEBUG\n \n /* Override svr[34].h.  */"}, {"sha": "8a51cf3db37dc7b6bccb241ca6314eb69384186e", "filename": "gcc/config/i386/netware.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fnetware.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fnetware.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetware.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -21,9 +21,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"i386/sysv4.h\"\t\t/* Build on the base i386 SVR4 configuration */\n-#include \"netware.h\"\t\t/* Then add netware-specific goo. */\n-\n #undef TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (i386 Netware 4)\");\n "}, {"sha": "c3a2e1b47fd2de2512f71fca9cf609b5edbcddbf", "filename": "gcc/config/i386/osf1elf.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fosf1elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fosf1elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosf1elf.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -3,7 +3,6 @@\n    Copyright (C) 2000 Free Software Foundation, Inc. */\n \n #include <stdio.h>\n-#include \"i386/sysv4.h\"\t/* Base i386 target machine definitions */\n \n #undef TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (i386 OSF/1)\");"}, {"sha": "4071c66ce720634997a606ca4d6ceff07e79e1cf", "filename": "gcc/config/i386/osf1elfgdb.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fosf1elfgdb.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fosf1elfgdb.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosf1elfgdb.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -2,6 +2,6 @@\n    with gas and gdb.  */\n \n /* Use stabs instead of DWARF debug format.  */\n+#undef PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n \n-#include \"i386/osf1elf.h\""}, {"sha": "a888d818af5ab71bcf75a4fa67e5d54b7b91e01a", "filename": "gcc/config/i386/ptx4-i.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fptx4-i.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fptx4-i.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fptx4-i.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -22,9 +22,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"i386/i386.h\"\t/* Base i386 target machine definitions */\n-#include \"i386/att.h\"\t/* Use the i386 AT&T assembler syntax */\n-#include \"ptx4.h\"\t/* Rest of definitions (non architecture dependent) */\n \n #undef TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (i386 Sequent Dynix/ptx Version 4)\");"}, {"sha": "6e31f56b2e8c40f5050e3250fec012d1caf37182", "filename": "gcc/config/i386/rtemself.h", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Frtemself.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Frtemself.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Frtemself.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -23,13 +23,6 @@ Boston, MA 02111-1307, USA.  */\n \n #define LINUX_DEFAULT_ELF\n \n-/* A lie, I guess, but the general idea behind linux/ELF is that we are\n-   supposed to be outputting something that will assemble under SVr4.\n-   This gets us pretty close.  */\n-#include <i386/i386.h>\t/* Base i386 target machine definitions */\n-#include <i386/att.h>\t/* Use the i386 AT&T assembler syntax */\n-#include <linux.h>\t/* some common stuff */\n-\n #undef TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (i386 RTEMS with ELF)\");\n \n@@ -89,7 +82,4 @@ Boston, MA 02111-1307, USA.  */\n #undef ENDFILE_SPEC\n #define ENDFILE_SPEC   \"crtend.o%s crtn.o%s\"\n \n-/* Get machine-independent configuration parameters for RTEMS.  */\n-#include <rtems.h>\n-\n /* end of i386/rtemself.h */"}, {"sha": "85e2aa89871fd275e798551052fcea7de43ab77a", "filename": "gcc/config/i386/sol2.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fsol2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fsol2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsol2.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -20,7 +20,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"i386/sysv4.h\"\n \n /* We use stabs-in-elf for debugging, because that is what the native\n    toolchain uses.  */"}, {"sha": "b2540b7b35aec800545510b1c56cb4f4cc161cc0", "filename": "gcc/config/i386/sysv4.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv4.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GNU compiler for Intel 80386 running System V.4\n-   Copyright (C) 1991 Free Software Foundation, Inc.\n+   Copyright (C) 1991, 2001 Free Software Foundation, Inc.\n \n    Written by Ron Guilmette (rfg@netcom.com).\n \n@@ -20,9 +20,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"i386/i386.h\"\t/* Base i386 target machine definitions */\n-#include \"i386/att.h\"\t/* Use the i386 AT&T assembler syntax */\n-#include \"svr4.h\"\t/* Definitions common to all SVR4 targets */\n \n #undef TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (i386 System V Release 4)\");"}, {"sha": "87d6b9c5d77952f0e88c7ebcd775a292a2c7f58f", "filename": "gcc/config/i386/sysv5.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fsysv5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fsysv5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv5.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -20,8 +20,6 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n \n-#include \"i386/sysv4.h\"\n-\n /* Dwarf2 is supported by native debuggers  */\n \n #undef PREFERRED_DEBUGGING_TYPE"}, {"sha": "66f5b87067e337b21963f941b54749a4dd51b783", "filename": "gcc/config/i386/udk.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fudk.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi386%2Fudk.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fudk.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -6,8 +6,6 @@\n /* We're very much the SVR4 target with \"/udk\" prepended to everything that's\n    interesting */\n \n-#include \"i386/sysv5.h\"\n-\n #undef MD_EXEC_PREFIX\n #define MD_EXEC_PREFIX \t\t\"/udk/usr/ccs/bin/\" \n "}, {"sha": "3031611bc53411d6b9791d9e888f482aa91d8cfb", "filename": "gcc/config/i860/fx2800.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi860%2Ffx2800.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fi860%2Ffx2800.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi860%2Ffx2800.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -157,6 +157,7 @@ Boston, MA 02111-1307, USA.  */\n #define DBX_MEMPARM_STABS_LETTER 'k'\n #define DBX_REGPARM_STABS_LETTER 'r'\n \n+#undef  ASM_OUTPUT_SOURCE_LINE\n #define ASM_OUTPUT_SOURCE_LINE(file,num)\t\t\\\n \tfprintf (file, \"\\t.stab \\\"\\\",.,0x%x,0,%d\\n\",\t\\\n \t\tN_SLINE,num)"}, {"sha": "a3b851cd575976a7e0ce204b9e672878e8e448b0", "filename": "gcc/config/ia64/elf.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fia64%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fia64%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Felf.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -1,5 +1,6 @@\n /* Definitions for embedded ia64-elf target.  */\n \n+/* TODO: convert includes to ${tm_file} list in config.gcc.  */\n #include \"ia64/ia64.h\"\n #include \"elfos.h\"\n #include \"sysv4.h\""}, {"sha": "a78130aab6117e20cd25bfe6e7674bd5ce1b880d", "filename": "gcc/config/ia64/linux.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fia64%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fia64%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Flinux.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -1,7 +1,4 @@\n /* Definitions for ia64-linux target.  */\n-#include \"ia64/ia64.h\"\n-#include <linux.h>\n-#include \"sysv4.h\"\n \n /* This is for -profile to use -lc_p instead of -lc. */\n #undef CC1_SPEC"}, {"sha": "4743ffedb283cb2d0e0b1a42f71fb6c45c7fbff1", "filename": "gcc/config/linux.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Flinux.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -37,12 +37,9 @@ Boston, MA 02111-1307, USA.  */\n #undef ASM_APP_OFF\n #define ASM_APP_OFF \"#NO_APP\\n\"\n \n-#define SET_ASM_OP\t\"\\t.set\\t\"\n-\n /* Use stabs instead of DWARF debug format.  */\n #undef PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DBX_DEBUG\n-#include \"svr4.h\"\n \n #undef MD_EXEC_PREFIX\n #undef MD_STARTFILE_PREFIX"}, {"sha": "7a810ae515923eb95c9b4b0f20d18beea97ea92d", "filename": "gcc/config/m32r/m32r.h", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fm32r%2Fm32r.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fm32r%2Fm32r.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm32r%2Fm32r.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -23,9 +23,6 @@ Boston, MA 02111-1307, USA.  */\n - longlong.h?\n */\n \n-/* ??? Create elf.h and have svr4.h include it.  */\n-#include \"svr4.h\"\n-\n #undef SWITCH_TAKES_ARG\n #undef WORD_SWITCH_TAKES_ARG\n #undef HANDLE_SYSV_PRAGMA"}, {"sha": "8acb707f6ea6285d8d5ad583549b61c3942e0ac9", "filename": "gcc/config/m68k/linux.h", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fm68k%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fm68k%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Flinux.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -23,12 +23,15 @@ Boston, MA 02111-1307, USA.  */\n #define MOTOROLA\t\t/* Use Motorola syntax */\n #define USE_GAS\t\t\t/* But GAS wants jbsr instead of jsr */\n \n+/* TODO: convert includes to ${tm_file} list in config.gcc.  */\n #include <m68k/m68k.h>\n \n /* Make sure CC1 is undefined. */\n #undef CC1_SPEC\n \n-#include <linux.h>\t\t/* some common stuff */\n+#include \"elfos.h\"\n+#include \"svr4.h\"\n+#include \"linux.h\"\t\t/* some common stuff */\n \n #undef TARGET_VERSION\n #define TARGET_VERSION fprintf (stderr, \" (68k GNU/Linux with ELF)\");"}, {"sha": "199caaceb6ad0b6131c116729cebda1f27494ff9", "filename": "gcc/config/m68k/m68kv4.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fm68k%2Fm68kv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fm68k%2Fm68kv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm68k%2Fm68kv4.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -25,8 +25,10 @@ Boston, MA 02111-1307, USA.  */\n \n #define SGS_SWITCH_TABLES\t/* Different switch table handling */\n \n+/* TODO: convert includes to ${tm_file} list in config.gcc.  */\n #include \"m68k/sgs.h\"\t\t/* The m68k/SVR4 assembler is SGS based */\n \n+#include \"elfos.h\"\n #include \"svr4.h\"\t\t/* Pick up the generic SVR4 macros */\n \n /* See m68k.h.  7 means 68020 with 68881.  */"}, {"sha": "380f336463d7e3fb42f2cbaa3dc9f6dd8ae95bd0", "filename": "gcc/config/m88k/dgux.h", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fm88k%2Fdgux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fm88k%2Fdgux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fdgux.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    Motorola m88100 running DG/UX.\n-   Copyright (C) 1988, 1992, 1993, 1994, 1995, 1996, 1997, 2000\n+   Copyright (C) 1988, 1992, 1993, 1994, 1995, 1996, 1997, 2000, 2001\n    Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@mcc.com)\n    Currently maintained by (gcc@dg-rtp.dg.com)\n@@ -26,7 +26,9 @@ Boston, MA 02111-1307, USA.  */\n    supported.  The option -msvr4 specifies elf.  With these combinations, \n    -g means dwarf.  */\n /* DWARF_DEBUGGING_INFO defined in svr4.h.  */\n+#undef SDB_DEBUGGING_INFO\n #define SDB_DEBUGGING_INFO\n+#undef PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE \\\n   (TARGET_SVR4 ? DWARF_DEBUG : SDB_DEBUG)\n \n@@ -36,7 +38,7 @@ Boston, MA 02111-1307, USA.  */\n #define AS_BUG_FLDCR\n #endif\n \n-#include \"svr4.h\"\n+/* TODO: convert includes to ${tm_file} list in config.gcc.  */\n #include \"m88k/m88k.h\"\n \n /* Augment TARGET_SWITCHES with the MXDB options.  */"}, {"sha": "a7b506035bfd4f09961a74688e663a7f9f31bc16", "filename": "gcc/config/m88k/dguxbcs.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fm88k%2Fdguxbcs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fm88k%2Fdguxbcs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fdguxbcs.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    Motorola m88100 running DG/UX.\n-   Copyright (C) 1988, 1992, 1993, 1994, 1995, 1996\n+   Copyright (C) 1988, 1992, 1993, 1994, 1995, 1996, 2001\n    Free Software Foundation, Inc.\n    Contributed by Michael Tiemann (tiemann@mcc.com)\n    Currently maintained by (gcc@dg-rtp.dg.com)\n@@ -22,7 +22,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"m88k/dgux.h\"\n \n /* dgux.h builds an elf gcc which compiles elf objects by default.\n    dguxbcs.h builds a bcs gcc which compiles bcs objects by default."}, {"sha": "64695d1b72685d1d5e80cea97c0842425420ad56", "filename": "gcc/config/m88k/sysv4.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fm88k%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fm88k%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fm88k%2Fsysv4.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -1,6 +1,6 @@\n /* Definitions of target machine for GNU compiler.\n    Motorola 88100 in an 88open ABI environment.\n-   Copyright (C) 1990, 1991, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1990, 1991, 2000, 2001 Free Software Foundation, Inc.\n \n    Written by Ron Guilmette (rfg@netcom.com).\n    Contributed to FSF by Network Computing Devices.\n@@ -33,7 +33,7 @@ Boston, MA 02111-1307, USA.  */\n #define AS_BUG_POUND_TYPE\n #endif\n \n-#include \"svr4.h\"\n+/* TODO: convert includes to ${tm_file} list in config.gcc.  */\n #include \"m88k/m88k.h\"\n \n /* Identify the compiler.  */"}, {"sha": "ca2c56d756d8c501d5dab994d393095d402439e0", "filename": "gcc/config/mcore/mcore-elf.h", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fmcore%2Fmcore-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fmcore%2Fmcore-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmcore%2Fmcore-elf.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of MCore target. \n-   Copyright (C) 1998, 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1998, 1999, 2000, 2001 Free Software Foundation, Inc.\n    Contributed by Cygnus Solutions.\n \n This file is part of GNU CC.\n@@ -27,9 +27,6 @@ Boston, MA 02111-1307, USA.  */\n \n #define SUBTARGET_CPP_PREDEFINES \" -D__ELF__\"\n \n-#include \"svr4.h\"\n-#include \"mcore/mcore.h\"\n-\n /* Use DWARF2 debugging info.  */\n #ifndef DWARF2_DEBUGGING_INFO\n #define DWARF2_DEBUGGING_INFO 1"}, {"sha": "d6288b82de9fe2eac68695842d1803f33994824f", "filename": "gcc/config/mn10200/mn10200.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fmn10200%2Fmn10200.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fmn10200%2Fmn10200.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10200%2Fmn10200.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -21,7 +21,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"svr4.h\"\n \n /* Get rid of svr4.h stuff we don't want/need.  */\n #undef ASM_SPEC"}, {"sha": "481f524a74cae7a41f9228c2df263bcb8c735921", "filename": "gcc/config/mn10300/mn10300.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fmn10300%2Fmn10300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmn10300%2Fmn10300.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -21,7 +21,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-#include \"svr4.h\"\n \n #undef ASM_SPEC\n #undef ASM_FINAL_SPEC"}, {"sha": "42b228556bf3fdfad9fa047bbeb1fc998d6084c3", "filename": "gcc/config/netware.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fnetware.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fnetware.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fnetware.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -1,6 +1,6 @@\n /* netware.h -- operating system specific defines to be used when \n    targeting GCC for some generic NetWare 4 system.\n-   Copyright (C) 1993, 1994, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1993, 1994, 2000, 2001 Free Software Foundation, Inc.\n \n    Written by David V. Henkel-Wallace (gumby@cygnus.com)\n \n@@ -101,4 +101,5 @@ const_section ()                                                        \\\n     }                                                                   \\\n }\n \n+#undef\tINT_ASM_OP\n #define INT_ASM_OP \".long\""}, {"sha": "115062d725724c1102653c03d400f50e9f8f85b7", "filename": "gcc/config/pj/pj.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fpj%2Fpj.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fpj%2Fpj.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpj%2Fpj.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -1162,10 +1162,12 @@ do { fputs (current_function_varargs || current_function_stdarg         \\\n #define LOCAL_LABEL_PREFIX \".\"\n \n /* Make an internal label into a string.  */\n+#undef  ASM_GENERATE_INTERNAL_LABEL\n #define ASM_GENERATE_INTERNAL_LABEL(STRING, PREFIX, NUM) \\\n   sprintf ((STRING), \"*%s%s%ld\", LOCAL_LABEL_PREFIX, (PREFIX), (long)(NUM))\n \n /* Output an internal label definition.  */\n+#undef  ASM_OUTPUT_INTERNAL_LABEL\n #define ASM_OUTPUT_INTERNAL_LABEL(FILE,PREFIX,NUM) \\\n   asm_fprintf ((FILE), \"%L%s%d:\\n\", (PREFIX), (NUM))\n \n@@ -1220,6 +1222,7 @@ do { char dstr[30];                                     \\\n /* This is how to output an assembler line\n    that says to advance the location counter by SIZE bytes.  */\n \n+#undef  ASM_OUTPUT_SKIP\n #define ASM_OUTPUT_SKIP(FILE,SIZE) \\\n   fprintf ((FILE), \"\\t.space %d\\n\", (SIZE))\n "}, {"sha": "c934c1ceafd9b71fc86eec6464f064f49fe38e85", "filename": "gcc/config/ptx4.h", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fptx4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fptx4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fptx4.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -30,11 +30,9 @@ Boston, MA 02111-1307, USA.\n \n /* Use DWARF debugging info by default.  */\n \n-#ifndef PREFERRED_DEBUGGING_TYPE\n+#undef PREFERRED_DEBUGGING_TYPE\n #define PREFERRED_DEBUGGING_TYPE DWARF_DEBUG\n-#endif\n \n-#include \"elfos.h\"\n \n /* Cpp, assembler, linker, library, and startfile spec's.  */\n "}, {"sha": "7d392dc31e71010a30dea400ec1918b47c0a7a4c", "filename": "gcc/config/sh/elf.h", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fsh%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fsh%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsh%2Felf.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -1,5 +1,5 @@\n /* Definitions of target machine for gcc for Hitachi Super-H using ELF.\n-   Copyright (C) 1996, 1997, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 1997, 2000, 2001 Free Software Foundation, Inc.\n    Contributed by Ian Lance Taylor <ian@cygnus.com>.\n \n This file is part of GNU CC.\n@@ -19,18 +19,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-/* No SDB debugging info.  */\n-#undef SDB_DEBUGGING_INFO\n-\n-/* Generate DWARF2 debugging information and make it the default */\n-#define DWARF2_DEBUGGING_INFO\n-\n-#undef PREFERRED_DEBUGGING_TYPE\n-#define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n-\n-/* use a more compact format for line information */\n-#define DWARF2_ASM_LINE_DEBUG_INFO 1\n-\n /* Undefine some macros defined in both sh.h and svr4.h.  */\n #undef IDENT_ASM_OP\n #undef ASM_FILE_END\n@@ -41,8 +29,23 @@ Boston, MA 02111-1307, USA.  */\n #undef MAX_OFILE_ALIGNMENT\n \n /* Be ELF-like.  */\n+/* TODO: convert includes to ${tm_file} list in config.gcc.  */\n+#include \"elfos.h\"\n #include \"svr4.h\"\n \n+/* No SDB debugging info.  */\n+#undef SDB_DEBUGGING_INFO\n+\n+/* Generate DWARF2 debugging information and make it the default */\n+#undef DWARF2_DEBUGGING_INFO\n+#define DWARF2_DEBUGGING_INFO 1\n+\n+#undef PREFERRED_DEBUGGING_TYPE\n+#define PREFERRED_DEBUGGING_TYPE DWARF2_DEBUG\n+\n+/* use a more compact format for line information */\n+#define DWARF2_ASM_LINE_DEBUG_INFO 1\n+\n /* The prefix to add to user-visible assembler symbols.\n    Note that svr4.h redefined it from the original value (that we want)\n    in sh.h */"}, {"sha": "ecff5b54558fa13d875a8365a0b89a117cd540b6", "filename": "gcc/config/sparc/sysv4.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fsparc%2Fsysv4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Fsysv4.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -20,6 +20,7 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n+/* TODO: convert includes to ${tm_file} list in config.gcc.  */\n #include \"sparc/sparc.h\"\n \n /* Undefine some symbols which are defined in \"sparc.h\" but which are\n@@ -32,6 +33,7 @@ Boston, MA 02111-1307, USA.  */\n #undef TEXT_SECTION_ASM_OP\n #undef DATA_SECTION_ASM_OP\n \n+#include \"elfos.h\"\n #include \"svr4.h\"\n \n /* ??? Put back the SIZE_TYPE/PTRDIFF_TYPE definitions set by sparc.h."}, {"sha": "f6d3848c2cfc7b25a20855e91acca9dd1d52bac9", "filename": "gcc/config/stormy16/stormy16.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fstormy16%2Fstormy16.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fstormy16%2Fstormy16.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -20,10 +20,6 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n-\f\n-/* Set up System V.4 (aka ELF) defaults.  */\n-#include \"svr4.h\"\n-\n \f\n /* Driver configuration */\n "}, {"sha": "5f74453c35ababf777a82af57ea7ca9757342036", "filename": "gcc/config/svr4.h", "status": "modified", "additions": 11, "deletions": 18, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fsvr4.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fsvr4.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsvr4.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -1,7 +1,7 @@\n /* Operating system specific defines to be used when targeting GCC for some\n    generic System V Release 4 system.\n    Copyright (C) 1991, 1994, 1995, 1996, 1997, 1998, 1999,\n-   2000 Free Software Foundation, Inc.\n+   2000, 2001 Free Software Foundation, Inc.\n    Contributed by Ron Guilmette (rfg@monkeys.com).\n \n This file is part of GNU CC.\n@@ -21,30 +21,23 @@ along with GNU CC; see the file COPYING.  If not, write to\n the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.\n \n-   To use this file, make up a file with a name like:\n+   To use this file, make up a line like that in config.gcc:\n \n-\t?????svr4.h\n+\ttm_file=\"$tm_file elfos.h svr4.h MACHINE/svr4.h\"\n \n-   where ????? is replaced by the name of the basic hardware that you\n-   are targeting for.  Then, in the file ?????svr4.h, put something\n-   like:\n-\n-\t#include \"?????.h\"\n-\t#include \"svr4.h\"\n-\n-   followed by any really system-specific defines (or overrides of\n-   defines) which you find that you need.  For example, CPP_PREDEFINES\n-   is defined here with only the defined -Dunix and -DSVR4.  You should\n-   probably override that in your target-specific ?????svr4.h file\n-   with a set of defines that includes these, but also contains an\n-   appropriate define for the type of hardware that you are targeting.\n+   where MACHINE is replaced by the name of the basic hardware that you\n+   are targeting for.  Then, in the file MACHINE/svr4.h, put any really\n+   system-specific defines (or overrides of defines) which you find that\n+   you need.  For example, CPP_PREDEFINES is defined here with only the\n+   defined -Dunix and -DSVR4.  You should probably override that in your\n+   target-specific MACHINE/svr4.h file with a set of defines that\n+   includes these, but also contains an appropriate define for the type\n+   of hardware that you are targeting.\n */\n \n /* Define a symbol indicating that we are using svr4.h.  */\n #define USING_SVR4_H\n \n-#include \"elfos.h\"\n-\n /* Cpp, assembler, linker, library, and startfile spec's.  */\n \n /* This defines which switch letters take arguments.  On svr4, most of"}, {"sha": "dc71c7ac2db91d2b0c8c207692a0ac4509dc8189", "filename": "gcc/config/v850/v850.h", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fv850%2Fv850.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/32fb7c9d6c75fdb918a1d1b0f30f79fa41423025/gcc%2Fconfig%2Fv850%2Fv850.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Fv850.h?ref=32fb7c9d6c75fdb918a1d1b0f30f79fa41423025", "patch": "@@ -22,8 +22,6 @@ Boston, MA 02111-1307, USA.  */\n #ifndef GCC_V850_H\n #define GCC_V850_H\n \n-#include \"svr4.h\"\t/* Automatically does #undef CPP_PREDEFINES */\n-\n /* These are defiend in svr4.h but we want to override them.  */\n #undef ASM_FINAL_SPEC\n #undef LIB_SPEC"}]}