{"sha": "46511dd511cac5d1df7a7d584cca8eb5248d9c7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDY1MTFkZDUxMWNhYzVkMWRmN2E3ZDU4NGNjYThlYjUyNDhkOWM3Yg==", "commit": {"author": {"name": "Dave Love", "email": "d.love@dl.ac.uk", "date": "1998-08-25T23:36:47Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1998-08-25T23:36:47Z"}, "message": "g77.texi: Increment `version-g77' and fix a few typos.\n\n \n\t* g77.texi: Increment `version-g77' and fix a few typos.\n\nFrom-SVN: r21992", "tree": {"sha": "34b7ff50f4676a9d0a8adee1fecb3d8297f7a6dd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/34b7ff50f4676a9d0a8adee1fecb3d8297f7a6dd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46511dd511cac5d1df7a7d584cca8eb5248d9c7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46511dd511cac5d1df7a7d584cca8eb5248d9c7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46511dd511cac5d1df7a7d584cca8eb5248d9c7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46511dd511cac5d1df7a7d584cca8eb5248d9c7b/comments", "author": null, "committer": null, "parents": [{"sha": "62fa841bb352263e0f30ede891cd170d5b0b4ac1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62fa841bb352263e0f30ede891cd170d5b0b4ac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62fa841bb352263e0f30ede891cd170d5b0b4ac1"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "b69fde8dfe9a997af2da2e3523c68e2bf98ea5ea", "filename": "gcc/f/g77.texi", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46511dd511cac5d1df7a7d584cca8eb5248d9c7b/gcc%2Ff%2Fg77.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46511dd511cac5d1df7a7d584cca8eb5248d9c7b/gcc%2Ff%2Fg77.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fg77.texi?ref=46511dd511cac5d1df7a7d584cca8eb5248d9c7b", "patch": "@@ -14,8 +14,8 @@\n @c %**start of header \n @setfilename g77.info\n \n-@set last-up-date 1998-07-13\n-@set version-g77 0.5.23\n+@set last-up-date 1998-08-23\n+@set version-g77 0.5.24\n @set email-general egcs@@cygnus.com\n @set email-bugs egcs-bugs@@cygnus.com\n @set path-g77 egcs/gcc/f\n@@ -2789,7 +2789,7 @@ contains preprocessor directives.\n These options affect how the @code{cpp} preprocessor searches\n for files specified via the @code{#include} directive.\n Therefore, when compiling Fortran programs, they are meaningful\n-when the preproecssor is used.\n+when the preprocessor is used.\n \n @cindex INCLUDE directive\n @cindex directive, INCLUDE\n@@ -4092,7 +4092,7 @@ As such, GNU users rarely need consider just what kind of underlying\n hardware (or, in many cases, operating system) they are using at any\n particular time.\n They can use and write software designed for a general-purpose,\n-widely portable, heteregenous environment---the GNU environment.\n+widely portable, heterogenous environment---the GNU environment.\n \n In line with this philosophy, GNU Fortran must evolve into a product\n that is widely ported and portable not only in the sense that it can\n@@ -9989,7 +9989,7 @@ of floating-point constants under certain circumstances.\n @node Surprising Interpretations of Code\n @subsection Surprising Interpretations of Code\n \n-The @samp{-Wsuprising} option can help find bugs involving\n+The @samp{-Wsurprising} option can help find bugs involving\n expression evaluation or in\n the way @code{DO} loops with non-integral iteration variables\n are handled.\n@@ -11011,7 +11011,7 @@ power of two (in Fortran, by @samp{2**N}) that typically is between\n is negative.\n \n So, a value like 0.2 is exactly represented in decimal---since\n-it is a fraction, @samp{2/10}, with a denomenator that is compatible\n+it is a fraction, @samp{2/10}, with a denominator that is compatible\n with the base of the number system (base 10).\n However, @samp{2/10} cannot be represented by any finite number\n of sums of any of 1.0, 0.5, 0.25, and so on, so 0.2 cannot\n@@ -12667,7 +12667,7 @@ If your code works with any of these combinations, that is not\n proof that the bug isn't in @code{g77}---a @code{g77} bug exposed\n by your code might simply be avoided, or have a different, more subtle\n effect, when different options are used---but it can be a\n-strong indicator that your code is making unawarranted assumptions\n+strong indicator that your code is making unwarranted assumptions\n about the Fortran dialect and/or underlying machine it is\n being compiled and run on.\n \n@@ -12677,10 +12677,10 @@ for information on the @samp{-fno-automatic} and\n their use into selective changes in your own code.\n \n @item\n-@pindex ftncheck\n+@pindex ftnchek\n Validate your code with @code{ftnchek} or a similar code-checking\n tool.\n-@code{ftncheck} can be found at @uref{ftp://ftp.netlib.org/fortran}\n+@code{ftnchek} can be found at @uref{ftp://ftp.netlib.org/fortran}\n or @uref{ftp://ftp.dsm.fordham.edu}.\n \n @pindex make"}]}