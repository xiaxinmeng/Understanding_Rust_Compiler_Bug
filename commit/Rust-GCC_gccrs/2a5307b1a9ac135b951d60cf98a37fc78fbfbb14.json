{"sha": "2a5307b1a9ac135b951d60cf98a37fc78fbfbb14", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmE1MzA3YjFhOWFjMTM1Yjk1MWQ2MGNmOThhMzdmYzc4ZmJmYmIxNA==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@cygnus.com", "date": "1998-10-27T15:15:11Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "1998-10-27T15:15:11Z"}, "message": "Updated sources with changes from devo.\n\nFrom-SVN: r23369", "tree": {"sha": "7940a424bb22518495004af89e4d2cfa2ef6cefa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7940a424bb22518495004af89e4d2cfa2ef6cefa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2a5307b1a9ac135b951d60cf98a37fc78fbfbb14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a5307b1a9ac135b951d60cf98a37fc78fbfbb14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2a5307b1a9ac135b951d60cf98a37fc78fbfbb14", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2a5307b1a9ac135b951d60cf98a37fc78fbfbb14/comments", "author": null, "committer": null, "parents": [{"sha": "479bb22670054c8dcc741846606ec0cec9e932ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/479bb22670054c8dcc741846606ec0cec9e932ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/479bb22670054c8dcc741846606ec0cec9e932ad"}], "stats": {"total": 215, "additions": 166, "deletions": 49}, "files": [{"sha": "3f382a62900d800b9935f71b214641dd285c8a30", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5307b1a9ac135b951d60cf98a37fc78fbfbb14/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5307b1a9ac135b951d60cf98a37fc78fbfbb14/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2a5307b1a9ac135b951d60cf98a37fc78fbfbb14", "patch": "@@ -3,7 +3,12 @@ Tue Oct 27 13:15:02 1998  Nick Clifton  <nickc@cygnus.com>\n \t* toplev.c (display_help): Ignore empty target specific\n \toptions, and if -W is also specified on the command line then\n \tdisplay undocumented options.\n-\t\n+\n+\t* config/arm/arm.c: Updated with changes in devo sources.\n+\t* config/arm/arm.h: Updated with changes in devo sources.\n+\t* config/arm/lib1funcs.asm: Updated with changes in devo sources.\n+\t* config/arm/lib1thumb.asm: Add ELF support.\n+\n Tue Oct 27 16:11:43 1998  David Edelsohn  <edelsohn@mhpcc.edu>\n \t\n \t* collect2.c (aix64_flag): New variable."}, {"sha": "3cfdeb3d3a533ffb86135079aade1ad30396f558", "filename": "gcc/config/arm/arm.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5307b1a9ac135b951d60cf98a37fc78fbfbb14/gcc%2Fconfig%2Farm%2Farm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5307b1a9ac135b951d60cf98a37fc78fbfbb14/gcc%2Fconfig%2Farm%2Farm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.c?ref=2a5307b1a9ac135b951d60cf98a37fc78fbfbb14", "patch": "@@ -1520,7 +1520,7 @@ arm_rtx_costs (x, code, outer_code)\n \t  int j;\n \t  /* Tune as appropriate */ \n \t  int booth_unit_size = ((tune_flags & FL_FAST_MULT) ? 8 : 2);\n-\n+\t  \n \t  for (j = 0; i && j < 32; j += booth_unit_size)\n \t    {\n \t      i >>= booth_unit_size;"}, {"sha": "f47f653da9bc09f062317f59d31e630622e8b10a", "filename": "gcc/config/arm/arm.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5307b1a9ac135b951d60cf98a37fc78fbfbb14/gcc%2Fconfig%2Farm%2Farm.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5307b1a9ac135b951d60cf98a37fc78fbfbb14/gcc%2Fconfig%2Farm%2Farm.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.h?ref=2a5307b1a9ac135b951d60cf98a37fc78fbfbb14", "patch": "@@ -589,7 +589,7 @@ extern int arm_arch4;\n #ifndef STRUCTURE_SIZE_BOUNDARY\n #define STRUCTURE_SIZE_BOUNDARY 32\n #endif\n-     \n+\n /* Used when parsing command line option -mstructure_size_boundary.  */\n extern char * structure_size_string;\n \n@@ -759,7 +759,7 @@ extern char * structure_size_string;\n    via the stack pointer) in functions that seem suitable.  \n    If we have to have a frame pointer we might as well make use of it.\n    APCS says that the frame pointer does not need to be pushed in leaf\n-   functions.  */\n+   functions, or simple tail call functions.  */\n #define FRAME_POINTER_REQUIRED\t\t\\\n   (current_function_has_nonlocal_label || (TARGET_APCS && !leaf_function_p ()))\n \n@@ -1848,7 +1848,7 @@ extern int arm_compare_fp;\n #define ASM_OUTPUT_INTERNAL_LABEL(STREAM, PREFIX, NUM)  \t\\\n   do                                    \t      \t   \t\\\n     {\t\t\t\t\t\t      \t   \t\\\n-      char *s = (char *) alloca (40 + strlen (PREFIX));\t   \t\\\n+      char * s = (char *) alloca (40 + strlen (PREFIX));\t\\\n       extern int arm_target_label, arm_ccfsm_state;\t   \t\\\n       extern rtx arm_target_insn;\t\t\t\t\\\n \t\t\t\t\t\t           \t\\\n@@ -1862,15 +1862,15 @@ extern int arm_compare_fp;\n \tASM_OUTPUT_LABEL (STREAM, s);\t\t                \\\n     } while (0)\n #endif\n-     \n+\n /* Output a push or a pop instruction (only used when profiling).  */\n #define ASM_OUTPUT_REG_PUSH(STREAM,REGNO) \\\n-  fprintf(STREAM,\"\\tstmfd\\t%ssp!,{%s%s}\\n\", \\\n-\t  REGISTER_PREFIX, REGISTER_PREFIX, reg_names[REGNO])\n+  fprintf (STREAM,\"\\tstmfd\\t%ssp!,{%s%s}\\n\", \\\n+\t  REGISTER_PREFIX, REGISTER_PREFIX, reg_names [REGNO])\n \n #define ASM_OUTPUT_REG_POP(STREAM,REGNO) \\\n-  fprintf(STREAM,\"\\tldmfd\\t%ssp!,{%s%s}\\n\", \\\n-\t  REGISTER_PREFIX, REGISTER_PREFIX, reg_names[REGNO])\n+  fprintf (STREAM,\"\\tldmfd\\t%ssp!,{%s%s}\\n\", \\\n+\t  REGISTER_PREFIX, REGISTER_PREFIX, reg_names [REGNO])\n \n /* Target characters.  */\n #define TARGET_BELL\t007\n@@ -1913,7 +1913,7 @@ extern int arm_compare_fp;\n       {\t\t\t\t\t\t\t\t\t\\\n \trtx base = XEXP (X, 0);\t\t\t\t\t\t\\\n \trtx index = XEXP (X, 1);\t\t\t\t\t\\\n-\tchar *base_reg_name;\t\t\t\t\t\t\\\n+\tchar * base_reg_name;\t\t\t\t\t\t\\\n \tHOST_WIDE_INT offset = 0;\t\t\t\t\t\\\n \tif (GET_CODE (base) != REG)\t\t\t\t\t\\\n \t  {\t\t\t\t\t\t\t\t\\"}, {"sha": "1e592a27141ed0fe15b03ce2829c6b0a95952b6b", "filename": "gcc/config/arm/lib1funcs.asm", "status": "modified", "additions": 43, "deletions": 17, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5307b1a9ac135b951d60cf98a37fc78fbfbb14/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5307b1a9ac135b951d60cf98a37fc78fbfbb14/gcc%2Fconfig%2Farm%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flib1funcs.asm?ref=2a5307b1a9ac135b951d60cf98a37fc78fbfbb14", "patch": "@@ -43,6 +43,10 @@ Boston, MA 02111-1307, USA.  */\n #define RETCOND\n #endif\n \n+#ifndef __USER_LABEL_PREFIX__\n+#error  __USER_LABEL_PREFIX__ not defined\n+#endif\n+\n #ifdef __elf__\n #define __PLT__ (PLT)\n #define TYPE(x) .type SYM(x),function\n@@ -53,10 +57,6 @@ Boston, MA 02111-1307, USA.  */\n #define SIZE(x)\n #endif\n \n-#ifndef __USER_LABEL_PREFIX__\n-#define __USER_LABEL_PREFIX__ _\n-#endif\n-\n /* ANSI concatenation macros.  */\n \n #define CONCAT1(a, b) CONCAT2(a, b)\n@@ -78,7 +78,7 @@ lr\t\t.req\tr14\n pc\t\t.req\tr15\n \t\n \t.text\n-\t.globl\tSYM(__udivsi3)\n+\t.globl\tSYM (__udivsi3)\n \tTYPE \t(__udivsi3)\n \t.align\t0\n \n@@ -156,8 +156,8 @@ lr\t\t.req\tr14\n pc\t\t.req\tr15\n \t\n \t.text\n-\t.globl SYM (__umodsi3)\n-\tTYPE  (__umodsi3)\n+\t.globl\tSYM (__umodsi3)\n+\tTYPE\t(__umodsi3)\n \t.align 0\n \n SYM (__umodsi3):\n@@ -246,8 +246,8 @@ lr\t\t.req\tr14\n pc\t\t.req\tr15\n \t\n \t.text\n-\t.globl SYM (__divsi3)\n-\tTYPE   (__divsi3)\n+\t.globl\tSYM (__divsi3)\n+\tTYPE\t(__divsi3)\n \t.align 0\n \n SYM (__divsi3):\n@@ -331,8 +331,8 @@ lr\t\t.req\tr14\n pc\t\t.req\tr15\n \t\n \t.text\n-\t.globl SYM (__modsi3)\n-\tTYPE   (__modsi3)\n+\t.globl\tSYM (__modsi3)\n+\tTYPE\t(__modsi3)\n \t.align 0\n \n SYM (__modsi3):\n@@ -422,8 +422,8 @@ Ldiv0:\n \n #ifdef L_dvmd_tls\n \n-\t.globl SYM (__div0)\n-\tTYPE   (__div0)\n+\t.globl\tSYM (__div0)\n+\tTYPE\t(__div0)\n \t.align 0\n SYM (__div0):\n \tRET\tpc, lr\n@@ -439,8 +439,8 @@ SYM (__div0):\n \t\n #define SIGFPE\t8\t\t\t@ cant use <asm/signal.h> as it\n \t\t\t\t\t@ contains too much C rubbish\n-\t.globl SYM (__div0)\n-\tTYPE   (__div0)\n+\t.globl\tSYM (__div0)\n+\tTYPE\t(__div0)\n \t.align 0\n SYM (__div0):\n \tstmfd\tsp!, {r1, lr}\n@@ -472,10 +472,13 @@ SYM (__div0):\n \t.code 16\n .macro call_via register\n \t.globl\tSYM (_call_via_\\register)\n+\tTYPE\t(_call_via_\\register)\n \t.thumb_func\n SYM (_call_via_\\register):\n \tbx\t\\register\n \tnop\n+\n+\tSIZE\t(_call_via_\\register)\n .endm\n \n \tcall_via r0\n@@ -513,6 +516,7 @@ SYM (_call_via_\\register):\n \t.align 0\n \n \t.code   32\n+\t.globl _arm_return\n _arm_return:\t\t\n \tldmia \tr13!, {r12}\n \tbx \tr12\n@@ -521,6 +525,7 @@ _arm_return:\n .macro interwork register\t\t\t\t\t\n \t.code   16\n \t.globl\tSYM (_interwork_call_via_\\register)\n+\tTYPE\t(_interwork_call_via_\\register)\n \t.thumb_func\n SYM (_interwork_call_via_\\register):\n \tbx \tpc\n@@ -533,6 +538,8 @@ SYM (_interwork_call_via_\\register):\n \tstmeqdb\tr13!, {lr}\n \tadreq\tlr, _arm_return\n \tbx\t\\register\n+\n+\tSIZE\t(_interwork_call_via_\\register)\n .endm\n \t\n \tinterwork r0\n@@ -549,6 +556,25 @@ SYM (_interwork_call_via_\\register):\n \tinterwork fp\n \tinterwork ip\n \tinterwork sp\n-\tinterwork lr\n-\t\t\n+\t\n+\t/* The lr case has to be handled a little differently...*/\n+\t.code 16\n+\t.globl\tSYM (_interwork_call_via_lr)\n+\tTYPE\t(_interwork_call_via_lr)\n+\t.thumb_func\n+SYM (_interwork_call_via_lr):\n+\tbx \tpc\n+\tnop\n+\t\n+\t.code 32\n+\t.globl .Lchange_lr\n+.Lchange_lr:\n+\ttst\tlr, #1\n+\tstmeqdb\tr13!, {lr}\n+\tmov\tip, lr\n+\tadreq\tlr, _arm_return\n+\tbx\tip\n+\t\n+\tSIZE\t(_interwork_call_via_lr)\n+\t\n #endif /* L_interwork_call_via_rX */"}, {"sha": "daf8361097b1be95fac026f7456505ef92f10bce", "filename": "gcc/config/arm/lib1thumb.asm", "status": "modified", "additions": 75, "deletions": 21, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5307b1a9ac135b951d60cf98a37fc78fbfbb14/gcc%2Fconfig%2Farm%2Flib1thumb.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5307b1a9ac135b951d60cf98a37fc78fbfbb14/gcc%2Fconfig%2Farm%2Flib1thumb.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flib1thumb.asm?ref=2a5307b1a9ac135b951d60cf98a37fc78fbfbb14", "patch": "@@ -1,7 +1,7 @@\n @ libgcc1 routines for ARM cpu.\n @ Division routines, written by Richard Earnshaw, (rearnsha@armltd.co.uk)\n \n-/* Copyright (C) 1995, 1996 Free Software Foundation, Inc.\n+/* Copyright (C) 1995, 1996, 1998 Free Software Foundation, Inc.\n \n This file is free software; you can redistribute it and/or modify it\n under the terms of the GNU General Public License as published by the\n@@ -36,7 +36,17 @@ Boston, MA 02111-1307, USA.  */\n \t.code\t 16\n \t\n #ifndef __USER_LABEL_PREFIX__\n-#error USER_LABEL_PREFIX not defined\n+#error  __USER_LABEL_PREFIX__ not defined\n+#endif\n+\n+#ifdef __elf__\n+#define __PLT__ (PLT)\n+#define TYPE(x) .type SYM(x),function\n+#define SIZE(x) .size SYM(x), . - SYM(x)\n+#else\n+#define __PLT__\n+#define TYPE(x)\n+#define SIZE(x)\n #endif\n \n #define RET\tmov\tpc, lr\n@@ -64,8 +74,9 @@ lr\t\t.req\tr14\n pc\t\t.req\tr15\n \t\n \t.text\n-\t.globl SYM (__udivsi3)\n-\t.align 0\n+\t.globl\tSYM (__udivsi3)\n+\tTYPE \t(__udivsi3)\n+\t.align\t0\n \t.thumb_func\n SYM (__udivsi3):\n \tcmp\tdivisor, #0\n@@ -151,10 +162,12 @@ Lgot_result:\n \n Ldiv0:\n \tpush\t{ lr }\n-\tbl\tSYM (__div0)\n+\tbl\tSYM (__div0) __PLT__\n \tmov\tr0, #0\t\t\t@ about as wrong as it could be\n \tpop\t{ pc }\n \n+\tSIZE\t(__udivsi3)\n+\t\n #endif /* L_udivsi3 */\n \n #ifdef L_umodsi3\n@@ -167,9 +180,11 @@ ip\t\t.req\tr12\n sp\t\t.req\tr13\n lr\t\t.req\tr14\n pc\t\t.req\tr15\n+\t\n \t.text\n-\t.globl SYM (__umodsi3)\n-\t.align 0\n+\t.globl\tSYM (__umodsi3)\n+\tTYPE\t(__umodsi3)\n+\t.align\t0\n \t.thumb_func\n SYM (__umodsi3):\n \tcmp\tdivisor, #0\n@@ -302,10 +317,12 @@ Over10:\n \n Ldiv0:\n \tpush\t{ lr }\n-\tbl\tSYM (__div0)\n+\tbl\tSYM (__div0) __PLT__\n \tmov\tr0, #0\t\t\t@ about as wrong as it could be\n \tpop\t{ pc }\n \n+\tSIZE\t(__umodsi3)\n+\t\n #endif /* L_umodsi3 */\n \n #ifdef L_divsi3\n@@ -318,9 +335,11 @@ ip\t\t.req\tr12\n sp\t\t.req\tr13\n lr\t\t.req\tr14\n pc\t\t.req\tr15\n+\t\n \t.text\n-\t.globl SYM (__divsi3)\n-\t.align 0\n+\t.globl\tSYM (__divsi3)\n+\tTYPE\t(__divsi3)\n+\t.align\t0\n \t.thumb_func\n SYM (__divsi3):\n \tcmp\tdivisor, #0\n@@ -421,10 +440,12 @@ Over7:\n \n Ldiv0:\n \tpush\t{ lr }\n-\tbl\tSYM (__div0)\n+\tbl\tSYM (__div0) __PLT__\n \tmov\tr0, #0\t\t\t@ about as wrong as it could be\n \tpop\t{ pc }\n \n+\tSIZE\t(__divsi3)\n+\t\n #endif /* L_divsi3 */\n \n #ifdef L_modsi3\n@@ -437,9 +458,11 @@ ip\t\t.req\tr12\n sp\t\t.req\tr13\n lr\t\t.req\tr14\n pc\t\t.req\tr15\n+\t\n \t.text\n-\t.globl SYM (__modsi3)\n-\t.align 0\n+\t.globl\tSYM (__modsi3)\n+\tTYPE\t(__modsi3)\n+\t.align\t0\n \t.thumb_func\n SYM (__modsi3):\n \tmov\tcurbit, #1\n@@ -581,20 +604,25 @@ Over10:\n \n Ldiv0:\n \tpush    { lr }\n-\tbl\tSYM (__div0)\n+\tbl\tSYM (__div0) __PLT__\n \tmov\tr0, #0\t\t\t@ about as wrong as it could be\n \tpop\t{ pc }\n \t\n+\tSIZE\t(__modsi3)\n+\t\t\n #endif /* L_modsi3 */\n \n #ifdef L_dvmd_tls\n \n-\t.globl SYM (__div0)\n-\t.align 0\n+\t.globl\tSYM (__div0)\n+\tTYPE\t(__div0)\n+\t.align\t0\n \t.thumb_func\n SYM (__div0):\n \tRET\t\n \n+\tSIZE\t(__div0)\n+\t\n #endif /* L_divmodsi_tools */\n \n \t\n@@ -611,10 +639,13 @@ SYM (__div0):\n \n .macro call_via register\n \t.globl\tSYM (_call_via_\\register)\n+\tTYPE\t(_call_via_\\register)\n \t.thumb_func\n SYM (_call_via_\\register):\n \tbx\t\\register\n \tnop\n+\t\n+\tSIZE\t(_call_via_\\register)\n .endm\n \n \tcall_via r0\n@@ -652,13 +683,16 @@ SYM (_call_via_\\register):\n \t.align 0\n \n \t.code 32\n+\t.globl _arm_return\n _arm_return:\t\t\n \tldmia \tr13!, {r12}\n \tbx \tr12\n-\t.code 16\n-\n+\t\n .macro interwork register\t\t\t\t\t\n+\t.code 16\n+\t\n \t.globl\tSYM (_interwork_call_via_\\register)\n+\tTYPE\t(_interwork_call_via_\\register)\n \t.thumb_func\n SYM (_interwork_call_via_\\register):\n \tbx \tpc\n@@ -671,7 +705,8 @@ SYM (_interwork_call_via_\\register):\n \tstmeqdb\tr13!, {lr}\n \tadreq\tlr, _arm_return\n \tbx\t\\register\n-\t.code 16\n+\n+\tSIZE\t(_interwork_call_via_\\register)\n .endm\n \t\n \tinterwork r0\n@@ -688,8 +723,27 @@ SYM (_interwork_call_via_\\register):\n \tinterwork fp\n \tinterwork ip\n \tinterwork sp\n-\tinterwork lr\n-\t\t\n+\n+\t/* The lr case has to be handled a little differently...*/\n+\t.code 16\n+\t.globl\tSYM (_interwork_call_via_lr)\n+\tTYPE\t(_interwork_call_via_lr)\n+\t.thumb_func\n+SYM (_interwork_call_via_lr):\n+\tbx \tpc\n+\tnop\n+\t\n+\t.code 32\n+\t.globl .Lchange_lr\n+.Lchange_lr:\n+\ttst\tlr, #1\n+\tstmeqdb\tr13!, {lr}\n+\tmov\tip, lr\n+\tadreq\tlr, _arm_return\n+\tbx\tip\n+\n+\tSIZE\t(_interwork_call_via_lr)\n+\t\n #endif /* L_interwork_call_via_rX */\n \n \t"}, {"sha": "aa65ae7f750ecc442664f67bc169f2d4306d0445", "filename": "gcc/config/arm/linux-elf26.h", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2a5307b1a9ac135b951d60cf98a37fc78fbfbb14/gcc%2Fconfig%2Farm%2Flinux-elf26.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2a5307b1a9ac135b951d60cf98a37fc78fbfbb14/gcc%2Fconfig%2Farm%2Flinux-elf26.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Flinux-elf26.h?ref=2a5307b1a9ac135b951d60cf98a37fc78fbfbb14", "patch": "@@ -0,0 +1,32 @@\n+/* Definitions for 26-bit ARM running Linux-based GNU systems using ELF\n+   Copyright (C) 1998 Free Software Foundation, Inc.\n+   Contributed by Philip Blundell <philb@gnu.org>\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with this program; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+#define SUBTARGET_DEFAULT_APCS26\n+\n+#define SUBTARGET_LINK_SPEC\t\\\n+\t\" %{mapcs-32:-m elf32arm} %{!mapcs-32:-m elf32arm26}\"\n+\n+#define SUBTARGET_EXTRA_ASM_SPEC\t\\\n+\t\" %{mapcs-32:-mapcs-32} %(!mapcs-32:-mapcs-26}\"\n+\n+#define TARGET_DEFAULT (ARM_FLAG_SHORT_BYTE)\n+\n+#include \"arm/linux-elf.h\""}]}