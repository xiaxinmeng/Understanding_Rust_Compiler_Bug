{"sha": "2fe258bf9315fa25f620860f99462faa8ade3b68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmZlMjU4YmY5MzE1ZmEyNWY2MjA4NjBmOTk0NjJmYWE4YWRlM2I2OA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-31T09:35:27Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-07-31T09:35:27Z"}, "message": "[multiple changes]\n\n2014-07-31  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch13.adb: Minor reformatting.\n\n2014-07-31  Ed Schonberg  <schonberg@adacore.com>\n\n\t* exp_ch3.adb (Build_Invariant_Checks): If the enclosing record\n\tis an unchecked_union, warn that invariants will not be checked\n\ton components that have them.\n\n2014-07-31  Robert Dewar  <dewar@adacore.com>\n\n\t* freeze.adb (Freeze_Entity): Check for error of\n\tType_Invariant'Class applied to a untagged type.\n\t* sem_ch6.adb (Analyze_Null_Procedure): Unconditionally rewrite\n\tas null body, so that we perform error checks even if expansion\n\tis off.\n\nFrom-SVN: r213324", "tree": {"sha": "21f95046f305aca90426a00385169c1ba85dc433", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/21f95046f305aca90426a00385169c1ba85dc433"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2fe258bf9315fa25f620860f99462faa8ade3b68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fe258bf9315fa25f620860f99462faa8ade3b68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2fe258bf9315fa25f620860f99462faa8ade3b68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2fe258bf9315fa25f620860f99462faa8ade3b68/comments", "author": null, "committer": null, "parents": [{"sha": "b4dfdc11a5440c5aaf0a86d011facaddc61806be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b4dfdc11a5440c5aaf0a86d011facaddc61806be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b4dfdc11a5440c5aaf0a86d011facaddc61806be"}], "stats": {"total": 66, "additions": 53, "deletions": 13}, "files": [{"sha": "b88d174fd88c087a34c420bd942bfb6b6c93ebaf", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe258bf9315fa25f620860f99462faa8ade3b68/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe258bf9315fa25f620860f99462faa8ade3b68/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2fe258bf9315fa25f620860f99462faa8ade3b68", "patch": "@@ -1,3 +1,21 @@\n+2014-07-31  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch13.adb: Minor reformatting.\n+\n+2014-07-31  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_ch3.adb (Build_Invariant_Checks): If the enclosing record\n+\tis an unchecked_union, warn that invariants will not be checked\n+\ton components that have them.\n+\n+2014-07-31  Robert Dewar  <dewar@adacore.com>\n+\n+\t* freeze.adb (Freeze_Entity): Check for error of\n+\tType_Invariant'Class applied to a untagged type.\n+\t* sem_ch6.adb (Analyze_Null_Procedure): Unconditionally rewrite\n+\tas null body, so that we perform error checks even if expansion\n+\tis off.\n+\n 2014-07-31  Ed Schonberg  <schonberg@adacore.com>\n \n \t* sem_ch13.adb (Build_Invariant_Procedure): If body of procedure"}, {"sha": "53985f19c32aaeea3928ed366484918fcb80f07e", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe258bf9315fa25f620860f99462faa8ade3b68/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe258bf9315fa25f620860f99462faa8ade3b68/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=2fe258bf9315fa25f620860f99462faa8ade3b68", "patch": "@@ -3763,7 +3763,15 @@ package body Exp_Ch3 is\n                if Has_Invariants (Etype (Id))\n                  and then In_Open_Scopes (Scope (R_Type))\n                then\n-                  Append_To (Stmts, Build_Component_Invariant_Call (Id));\n+                  if Has_Unchecked_Union (R_Type) then\n+                     Error_Msg_NE\n+                       (\"invariants cannot be checked on components of \"\n+                         & \"unchecked_union type&?\", Decl, R_Type);\n+                     return Empty_List;\n+\n+                  else\n+                     Append_To (Stmts, Build_Component_Invariant_Call (Id));\n+                  end if;\n \n                elsif Is_Access_Type (Etype (Id))\n                  and then not Is_Access_Constant (Etype (Id))"}, {"sha": "aad47610876e7f0e0c260a3a3c5ce8163add1ff5", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe258bf9315fa25f620860f99462faa8ade3b68/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe258bf9315fa25f620860f99462faa8ade3b68/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=2fe258bf9315fa25f620860f99462faa8ade3b68", "patch": "@@ -4537,6 +4537,24 @@ package body Freeze is\n             return No_List;\n          end if;\n \n+         --  Check for error of Type_Invariant'Class applied to a untagged type\n+         --  (check delayed to freeze time when full type is available).\n+\n+         declare\n+            Prag : constant Node_Id := Get_Pragma (E, Pragma_Invariant);\n+         begin\n+            if Present (Prag)\n+              and then Class_Present (Prag)\n+              and then not Is_Tagged_Type (E)\n+            then\n+               Error_Msg_NE\n+                 (\"Type_Invariant''Class cannot be specified for &\",\n+                  Prag, E);\n+               Error_Msg_N\n+                 (\"\\can only be specified for a tagged type\", Prag);\n+            end if;\n+         end;\n+\n          --  Deal with special cases of freezing for subtype\n \n          if E /= Base_Type (E) then"}, {"sha": "bbbf712dde0c6e651d7de362cba5a4e94826a642", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe258bf9315fa25f620860f99462faa8ade3b68/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe258bf9315fa25f620860f99462faa8ade3b68/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=2fe258bf9315fa25f620860f99462faa8ade3b68", "patch": "@@ -7489,7 +7489,8 @@ package body Sem_Ch13 is\n       --  the type is already frozen, which is the case when the invariant\n       --  appears in a private part, and the freezing takes place before the\n       --  final pass over full declarations.\n-      --  See exp_ch3.Insert_Component_Invariant_Checks for details.\n+\n+      --  See Exp_Ch3.Insert_Component_Invariant_Checks for details.\n \n       if Present (SId) then\n          PDecl := Unit_Declaration_Node (SId);"}, {"sha": "cce2a4803fff19653c0b093fdd097e8b526f228a", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2fe258bf9315fa25f620860f99462faa8ade3b68/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2fe258bf9315fa25f620860f99462faa8ade3b68/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=2fe258bf9315fa25f620860f99462faa8ade3b68", "patch": "@@ -1391,19 +1391,14 @@ package body Sem_Ch6 is\n          end if;\n \n       else\n-         --  The null procedure is a completion\n+         --  The null procedure is a completion. We unconditionally rewrite\n+         --  this as a null body (even if expansion is not active), because\n+         --  there are various error checks that are applied on this body\n+         --  when it is analyzed (e.g. correct aspect placement).\n \n          Is_Completion := True;\n-\n-         if Expander_Active then\n-            Rewrite (N, Null_Body);\n-            Analyze (N);\n-\n-         else\n-            Designator := Analyze_Subprogram_Specification (Spec);\n-            Set_Has_Completion (Designator);\n-            Set_Has_Completion (Prev);\n-         end if;\n+         Rewrite (N, Null_Body);\n+         Analyze (N);\n       end if;\n    end Analyze_Null_Procedure;\n "}]}