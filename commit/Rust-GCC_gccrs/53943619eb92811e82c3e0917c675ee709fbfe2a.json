{"sha": "53943619eb92811e82c3e0917c675ee709fbfe2a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTM5NDM2MTllYjkyODExZTgyYzNlMDkxN2M2NzVlZTcwOWZiZmUyYQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2017-12-05T18:05:23Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2017-12-05T18:05:23Z"}, "message": "PR c++/82331 - ICE with variadic partial specialization of auto\n\n\t* pt.c (unify) [TEMPLATE_PARM_INDEX]: Set processing_template_decl\n\taround call to tsubst.\n\nFrom-SVN: r255430", "tree": {"sha": "affb0e2772b1c6668f7630c51679cf72c17efead", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/affb0e2772b1c6668f7630c51679cf72c17efead"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/53943619eb92811e82c3e0917c675ee709fbfe2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53943619eb92811e82c3e0917c675ee709fbfe2a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53943619eb92811e82c3e0917c675ee709fbfe2a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53943619eb92811e82c3e0917c675ee709fbfe2a/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ea9e71de65fd640620938a463d30408f92fea8d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea9e71de65fd640620938a463d30408f92fea8d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea9e71de65fd640620938a463d30408f92fea8d1"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "122045b3535802376825522670a618ace2a8dd48", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53943619eb92811e82c3e0917c675ee709fbfe2a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53943619eb92811e82c3e0917c675ee709fbfe2a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=53943619eb92811e82c3e0917c675ee709fbfe2a", "patch": "@@ -1,3 +1,9 @@\n+2017-12-05  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/82331 - ICE with variadic partial specialization of auto\n+\t* pt.c (unify) [TEMPLATE_PARM_INDEX]: Set processing_template_decl\n+\taround call to tsubst.\n+\n 2017-12-05  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/83287"}, {"sha": "685f34a735d4d8c612cec38ce64f1c904b81e5ad", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53943619eb92811e82c3e0917c675ee709fbfe2a/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53943619eb92811e82c3e0917c675ee709fbfe2a/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=53943619eb92811e82c3e0917c675ee709fbfe2a", "patch": "@@ -20942,7 +20942,9 @@ unify (tree tparms, tree targs, tree parm, tree arg, int strict,\n \t template-parameter exactly, except that a template-argument\n \t deduced from an array bound may be of any integral type.\n \t The non-type parameter might use already deduced type parameters.  */\n+      ++processing_template_decl;\n       tparm = tsubst (TREE_TYPE (parm), targs, 0, NULL_TREE);\n+      --processing_template_decl;\n       if (tree a = type_uses_auto (tparm))\n \t{\n \t  tparm = do_auto_deduction (tparm, arg, a, complain, adc_unify);"}, {"sha": "2152cef811ec9053e21edaee61877eefb8f9c37a", "filename": "gcc/testsuite/g++.dg/cpp1z/nontype-auto13.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/53943619eb92811e82c3e0917c675ee709fbfe2a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnontype-auto13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/53943619eb92811e82c3e0917c675ee709fbfe2a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnontype-auto13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1z%2Fnontype-auto13.C?ref=53943619eb92811e82c3e0917c675ee709fbfe2a", "patch": "@@ -0,0 +1,18 @@\n+// PR c++/82331\n+// { dg-options -std=c++17 }\n+\n+template <auto>\n+class X;\n+\n+template <typename R, typename... A, R (*F) (A...)>\n+class X<F> {\n+public:\n+    static R call (A... args)\n+    {\n+        return (*F)(args...);\n+    }\n+};\n+\n+int func (int a, int b) { return a + b; }\n+\n+int test () { return X<&func>::call(1, 2); }"}]}