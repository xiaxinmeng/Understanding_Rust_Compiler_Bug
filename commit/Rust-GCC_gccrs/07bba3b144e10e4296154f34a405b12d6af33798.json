{"sha": "07bba3b144e10e4296154f34a405b12d6af33798", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDdiYmEzYjE0NGUxMGU0Mjk2MTU0ZjM0YTQwNWIxMmQ2YWYzMzc5OA==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2013-06-22T21:07:02Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2013-06-22T21:07:02Z"}, "message": "re PR libstdc++/57674 (wrong distribution for  std::binomial_distribution::operator()(g,param))\n\n2013-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/57674\n\t* include/bits/random.h (binomial_distribution<>::_M_waiting):\n\tAdd double parameter.\n\t* include/bits/random.tcc (binomial_distribution<>::operator()\n\t(_UniformRandomNumberGenerator&, const param_type&)): Pass\n\t__param._M_q to _M_waiting.\n\t(_M_waiting): Adjust.\n\t* testsuite/26_numerics/random/binomial_distribution/\n\toperators/values.cc: Add tests.\n\nFrom-SVN: r200341", "tree": {"sha": "5373a5fcd9791a9d9210d1c1d6f90dbed71b4bd9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5373a5fcd9791a9d9210d1c1d6f90dbed71b4bd9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/07bba3b144e10e4296154f34a405b12d6af33798", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07bba3b144e10e4296154f34a405b12d6af33798", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07bba3b144e10e4296154f34a405b12d6af33798", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07bba3b144e10e4296154f34a405b12d6af33798/comments", "author": null, "committer": null, "parents": [{"sha": "11e8f687dff42b0ef93f940b8c2ce772962735d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11e8f687dff42b0ef93f940b8c2ce772962735d3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11e8f687dff42b0ef93f940b8c2ce772962735d3"}], "stats": {"total": 36, "additions": 31, "deletions": 5}, "files": [{"sha": "bff4008ab348769c6f82f850c300352b7a855e06", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07bba3b144e10e4296154f34a405b12d6af33798/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07bba3b144e10e4296154f34a405b12d6af33798/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=07bba3b144e10e4296154f34a405b12d6af33798", "patch": "@@ -1,3 +1,15 @@\n+2013-06-22  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/57674\n+\t* include/bits/random.h (binomial_distribution<>::_M_waiting):\n+\tAdd double parameter.\n+\t* include/bits/random.tcc (binomial_distribution<>::operator()\n+\t(_UniformRandomNumberGenerator&, const param_type&)): Pass\n+\t__param._M_q to _M_waiting.\n+\t(_M_waiting): Adjust.\n+\t* testsuite/26_numerics/random/binomial_distribution/\n+\toperators/values.cc: Add tests.\n+\n 2013-06-21  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR libstdc++/57666"}, {"sha": "caabe906058b68588c6564ebbfdb08d0ca8ce1e3", "filename": "libstdc++-v3/include/bits/random.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07bba3b144e10e4296154f34a405b12d6af33798/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07bba3b144e10e4296154f34a405b12d6af33798/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.h?ref=07bba3b144e10e4296154f34a405b12d6af33798", "patch": "@@ -3978,7 +3978,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       template<typename _UniformRandomNumberGenerator>\n \tresult_type\n-\t_M_waiting(_UniformRandomNumberGenerator& __urng, _IntType __t);\n+\t_M_waiting(_UniformRandomNumberGenerator& __urng,\n+\t\t   _IntType __t, double __q);\n \n       param_type _M_param;\n "}, {"sha": "c6db5b40cb70c53b5a6cca47774eb4ec366e7671", "filename": "libstdc++-v3/include/bits/random.tcc", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07bba3b144e10e4296154f34a405b12d6af33798/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07bba3b144e10e4296154f34a405b12d6af33798/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Frandom.tcc?ref=07bba3b144e10e4296154f34a405b12d6af33798", "patch": "@@ -1648,7 +1648,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     template<typename _UniformRandomNumberGenerator>\n       typename binomial_distribution<_IntType>::result_type\n       binomial_distribution<_IntType>::\n-      _M_waiting(_UniformRandomNumberGenerator& __urng, _IntType __t)\n+      _M_waiting(_UniformRandomNumberGenerator& __urng,\n+\t\t _IntType __t, double __q)\n       {\n \t_IntType __x = 0;\n \tdouble __sum = 0.0;\n@@ -1663,7 +1664,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t    __sum += __e / (__t - __x);\n \t    __x += 1;\n \t  }\n-\twhile (__sum <= _M_param._M_q);\n+\twhile (__sum <= __q);\n \n \treturn __x - 1;\n       }\n@@ -1784,12 +1785,13 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n \t    __x += __np + __naf;\n \n-\t    const _IntType __z = _M_waiting(__urng, __t - _IntType(__x));\n+\t    const _IntType __z = _M_waiting(__urng, __t - _IntType(__x),\n+\t\t\t\t\t    __param._M_q);\n \t    __ret = _IntType(__x) + __z;\n \t  }\n \telse\n #endif\n-\t  __ret = _M_waiting(__urng, __t);\n+\t  __ret = _M_waiting(__urng, __t, __param._M_q);\n \n \tif (__p12 != __p)\n \t  __ret = __t - __ret;"}, {"sha": "4633a060e685c27dcc54b03039aa5c60cf1e3558", "filename": "libstdc++-v3/testsuite/26_numerics/random/binomial_distribution/operators/values.cc", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/07bba3b144e10e4296154f34a405b12d6af33798/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbinomial_distribution%2Foperators%2Fvalues.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/07bba3b144e10e4296154f34a405b12d6af33798/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbinomial_distribution%2Foperators%2Fvalues.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F26_numerics%2Frandom%2Fbinomial_distribution%2Foperators%2Fvalues.cc?ref=07bba3b144e10e4296154f34a405b12d6af33798", "patch": "@@ -43,6 +43,17 @@ void test01()\n   std::binomial_distribution<> bd3(10, 0.75);\n   auto bbd3 = std::bind(bd3, eng);\n   testDiscreteDist(bbd3, [](int n) { return binomial_pdf(n, 10, 0.75); } );\n+\n+  // libstdc++/57674\n+  std::binomial_distribution<> bd4(1, 0.8);\n+  const std::binomial_distribution<>::param_type pm4(1, 0.3);\n+  auto bbd4 = std::bind(bd4, eng, pm4);\n+  testDiscreteDist(bbd4, [](int n) { return binomial_pdf(n, 1, 0.3); } );\n+\n+  std::binomial_distribution<> bd5(100, 0.3);\n+  const std::binomial_distribution<>::param_type pm5(100, 0.8);\n+  auto bbd5 = std::bind(bd5, eng, pm5);\n+  testDiscreteDist(bbd5, [](int n) { return binomial_pdf(n, 100, 0.8); } );\n }\n \n int main()"}]}