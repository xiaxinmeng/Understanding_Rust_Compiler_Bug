{"sha": "5db1d7f143c77543ae7a6c4649af3e611061e0d9", "node_id": "C_kwDOANBUbNoAKDVkYjFkN2YxNDNjNzc1NDNhZTdhNmM0NjQ5YWYzZTYxMTA2MWUwZDk", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-03-07T10:11:44Z"}, "committer": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2022-03-07T11:33:35Z"}, "message": "tree-optimization/104782 - adjust PR101636 fix\n\nThis reverts the reversion of r10-5979 amending the CTOR case\nwith a comment as to why the conversion is not necessary there.\nIt also adds a testcase (but not for the CTOR case).\n\n2022-03-07  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/104782\n\t* tree-vect-slp.cc (vectorize_slp_instance_root_stmt):\n\tRe-instantiate r10-5979 fix, add comment.\n\n\t* gcc.dg/vect/pr104782.c: New testcase.", "tree": {"sha": "6040a216e6dca2a8220e2489cb72ca77a7046e32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6040a216e6dca2a8220e2489cb72ca77a7046e32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5db1d7f143c77543ae7a6c4649af3e611061e0d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db1d7f143c77543ae7a6c4649af3e611061e0d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5db1d7f143c77543ae7a6c4649af3e611061e0d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5db1d7f143c77543ae7a6c4649af3e611061e0d9/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40c1d4a07e5798c01e4364336c9617550744861d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/40c1d4a07e5798c01e4364336c9617550744861d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/40c1d4a07e5798c01e4364336c9617550744861d"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "7b8ca6ca25bc0933b3e7e2a2ef6bcdf7a37bd685", "filename": "gcc/testsuite/gcc.dg/vect/pr104782.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db1d7f143c77543ae7a6c4649af3e611061e0d9/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr104782.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db1d7f143c77543ae7a6c4649af3e611061e0d9/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr104782.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr104782.c?ref=5db1d7f143c77543ae7a6c4649af3e611061e0d9", "patch": "@@ -0,0 +1,18 @@\n+/* { dg-do compile } */\n+/* { dg-additional-options \"-O3\" } */\n+/* { dg-additional-options \"-march=armv8.2-a+sve -msve-vector-bits=128\" { target aarch64-*-* } } */\n+\n+int a, b, c;\n+static int d;\n+short *q;\n+void f() {\n+  int *p = &d;\n+  b = 9;\n+  for (b = 9; b; b--) {\n+    a = 2;\n+    for (c = 2; c <= 9; c++) {\n+      for (int i = 0; i < 3; i++)\n+        *p |= (*q)++;\n+    }\n+  }\n+}"}, {"sha": "4ac2b70303c94e8f111fe41df39ac727cf8cc462", "filename": "gcc/tree-vect-slp.cc", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5db1d7f143c77543ae7a6c4649af3e611061e0d9/gcc%2Ftree-vect-slp.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5db1d7f143c77543ae7a6c4649af3e611061e0d9/gcc%2Ftree-vect-slp.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.cc?ref=5db1d7f143c77543ae7a6c4649af3e611061e0d9", "patch": "@@ -7382,6 +7382,10 @@ vectorize_slp_instance_root_stmt (slp_tree node, slp_instance instance)\n \t  gimple *child_stmt = SLP_TREE_VEC_STMTS (node)[0];\n \t  tree vect_lhs = gimple_get_lhs (child_stmt);\n \t  tree root_lhs = gimple_get_lhs (instance->root_stmts[0]->stmt);\n+\t  if (!useless_type_conversion_p (TREE_TYPE (root_lhs),\n+\t\t\t\t\t  TREE_TYPE (vect_lhs)))\n+\t    vect_lhs = build1 (VIEW_CONVERT_EXPR, TREE_TYPE (root_lhs),\n+\t\t\t       vect_lhs);\n \t  rstmt = gimple_build_assign (root_lhs, vect_lhs);\n \t}\n       else if (SLP_TREE_NUMBER_OF_VEC_STMTS (node) > 1)\n@@ -7392,6 +7396,9 @@ vectorize_slp_instance_root_stmt (slp_tree node, slp_instance instance)\n \t  vec<constructor_elt, va_gc> *v;\n \t  vec_alloc (v, nelts);\n \n+\t  /* A CTOR can handle V16HI composition from VNx8HI so we\n+\t     do not need to convert vector elements if the types\n+\t     do not match.  */\n \t  FOR_EACH_VEC_ELT (SLP_TREE_VEC_STMTS (node), j, child_stmt)\n \t    CONSTRUCTOR_APPEND_ELT (v, NULL_TREE,\n \t\t\t\t    gimple_get_lhs (child_stmt));"}]}