{"sha": "743b0973210c8b39331ecd5f10e2d77f24381321", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzQzYjA5NzMyMTBjOGIzOTMzMWVjZDVmMTBlMmQ3N2YyNDM4MTMyMQ==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-02-02T10:16:57Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1999-02-02T10:16:57Z"}, "message": "jcf-write.c (localvar_alloc): Only emit entry for LocalVariableTable if debug_info_level > DINFO_LEVEL_TERSE.\n\n0\n\t* jcf-write.c (localvar_alloc):  Only emit entry for\n\tLocalVariableTable if debug_info_level > DINFO_LEVEL_TERSE.\n\t(generate_bytecode_insns):  Only call put_linenumber if\n\tdebug_info_level > DINFO_LEVEL_NONE.\n\t* jvspec.c (lang_specific_driver):  If no -O* or -g* option\n\tis specified, add -g1 (for compatibility wih javac).\n\nFrom-SVN: r24964", "tree": {"sha": "1d049ba88ba67736ab46d0b59c4812122dbf10d7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d049ba88ba67736ab46d0b59c4812122dbf10d7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/743b0973210c8b39331ecd5f10e2d77f24381321", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/743b0973210c8b39331ecd5f10e2d77f24381321", "html_url": "https://github.com/Rust-GCC/gccrs/commit/743b0973210c8b39331ecd5f10e2d77f24381321", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/743b0973210c8b39331ecd5f10e2d77f24381321/comments", "author": null, "committer": null, "parents": [{"sha": "80d8e475cc1f2bf9b78039a61b7a792dd0da5f33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/80d8e475cc1f2bf9b78039a61b7a792dd0da5f33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/80d8e475cc1f2bf9b78039a61b7a792dd0da5f33"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "9aed654a31cbf0a27109d4099f48b381c5c8b880", "filename": "gcc/java/jvspec.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/743b0973210c8b39331ecd5f10e2d77f24381321/gcc%2Fjava%2Fjvspec.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/743b0973210c8b39331ecd5f10e2d77f24381321/gcc%2Fjava%2Fjvspec.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fjvspec.c?ref=743b0973210c8b39331ecd5f10e2d77f24381321", "patch": "@@ -160,6 +160,10 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n   int saw_C = 0;\n   int saw_o = 0;\n \n+  /* Saw soem -O* or -g* option, respectively. */\n+  int saw_O = 0;\n+  int saw_g = 0;\n+\n   /* An array used to flag each argument that needs a bit set for\n      LANGSPEC, MATHLIB, WITHLIBC, or GCLIB.  */\n   int *args;\n@@ -274,6 +278,10 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n \t      library = 0;\n \t      will_link = 0;\n \t    }\n+\t  else if (argv[i][1] == 'g')\n+\t    saw_g = 1;\n+\t  else if (argv[i][1] == 'O')\n+\t    saw_O = 1;\n \t  else if (((argv[i][2] == '\\0'\n \t\t     && (char *)strchr (\"bBVDUoeTuIYmLiA\", argv[i][1]) != NULL)\n \t\t    || strcmp (argv[i], \"-Tdata\") == 0))\n@@ -389,6 +397,8 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n     {\n       lang_specific_extra_outfiles++;\n     }\n+  if (saw_g + saw_O == 0)\n+    num_args++;\n   arglist = (char **) xmalloc ((num_args + 1) * sizeof (char *));\n \n   for (i = 0, j = 0; i < argc; i++, j++)\n@@ -486,6 +496,10 @@ lang_specific_driver (fn, in_argc, in_argv, in_added_libraries)\n     }\n #endif\n \n+  /* If we saw no -O or -g option, default to -g1, for javac compatibility. */\n+  if (saw_g + saw_O == 0)\n+    arglist[j++] = \"-g1\";\n+\n   /* Add `-ljava' if we haven't already done so.  */\n   if (library && ! saw_libjava)\n     {"}]}