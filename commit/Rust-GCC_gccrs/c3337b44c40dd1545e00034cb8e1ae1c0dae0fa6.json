{"sha": "c3337b44c40dd1545e00034cb8e1ae1c0dae0fa6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzMzMzdiNDRjNDBkZDE1NDVlMDAwMzRjYjhlMWFlMWMwZGFlMGZhNg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2019-06-24T14:34:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2019-06-24T14:34:35Z"}, "message": "Don't use a separate CLASSTYPE_AS_BASE if it's the same size.\n\n\t* class.c (layout_class_type): Don't use a separate\n\tCLASSTYPE_AS_BASE if it's the same size.\n\nFrom-SVN: r272618", "tree": {"sha": "6953d615a801d5850ae540a1655ee62259f6d18a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6953d615a801d5850ae540a1655ee62259f6d18a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c3337b44c40dd1545e00034cb8e1ae1c0dae0fa6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3337b44c40dd1545e00034cb8e1ae1c0dae0fa6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c3337b44c40dd1545e00034cb8e1ae1c0dae0fa6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c3337b44c40dd1545e00034cb8e1ae1c0dae0fa6/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a3c8d7fbe29d4ab60cc46196a1376854734a4f8d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a3c8d7fbe29d4ab60cc46196a1376854734a4f8d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a3c8d7fbe29d4ab60cc46196a1376854734a4f8d"}], "stats": {"total": 11, "additions": 11, "deletions": 0}, "files": [{"sha": "efb6c3dd7b141dca0382013cb2dfe29865c0a7b6", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3337b44c40dd1545e00034cb8e1ae1c0dae0fa6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3337b44c40dd1545e00034cb8e1ae1c0dae0fa6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c3337b44c40dd1545e00034cb8e1ae1c0dae0fa6", "patch": "@@ -1,3 +1,8 @@\n+2019-06-24  Jason Merrill  <jason@redhat.com>\n+\n+\t* class.c (layout_class_type): Don't use a separate\n+\tCLASSTYPE_AS_BASE if it's the same size.\n+\n 2019-06-23  Marek Polacek  <polacek@redhat.com>\n \n \t* call.c (convert_default_arg): Use DEFERRED_PARSE instead of"}, {"sha": "e0df9ef2b20a436870dbe8d232d1a6f1608d68e1", "filename": "gcc/cp/class.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c3337b44c40dd1545e00034cb8e1ae1c0dae0fa6/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c3337b44c40dd1545e00034cb8e1ae1c0dae0fa6/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=c3337b44c40dd1545e00034cb8e1ae1c0dae0fa6", "patch": "@@ -6453,6 +6453,12 @@ layout_class_type (tree t, tree *virtuals_p)\n   /* Let the back end lay out the type.  */\n   finish_record_layout (rli, /*free_p=*/true);\n \n+  /* If we didn't end up needing an as-base type, don't use it.  */\n+  if (CLASSTYPE_AS_BASE (t) != t\n+      && tree_int_cst_equal (TYPE_SIZE (t),\n+\t\t\t     TYPE_SIZE (CLASSTYPE_AS_BASE (t))))\n+    CLASSTYPE_AS_BASE (t) = t;\n+\n   if (TYPE_SIZE_UNIT (t)\n       && TREE_CODE (TYPE_SIZE_UNIT (t)) == INTEGER_CST\n       && !TREE_OVERFLOW (TYPE_SIZE_UNIT (t))"}]}