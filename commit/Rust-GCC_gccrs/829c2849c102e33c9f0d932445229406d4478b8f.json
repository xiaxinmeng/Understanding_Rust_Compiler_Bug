{"sha": "829c2849c102e33c9f0d932445229406d4478b8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODI5YzI4NDljMTAyZTMzYzlmMGQ5MzI0NDUyMjk0MDZkNDQ3OGI4Zg==", "commit": {"author": {"name": "Robert Dewar", "email": "dewar@adacore.com", "date": "2005-09-05T07:54:12Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2005-09-05T07:54:12Z"}, "message": "exp_pakd.adb (Create_Packed_Array_Type): Properly handle very large packed arrays.\n\n2005-09-01  Robert Dewar  <dewar@adacore.com>\n\n\t* exp_pakd.adb (Create_Packed_Array_Type): Properly handle very large\n\tpacked arrays.\n\nFrom-SVN: r103865", "tree": {"sha": "43230c004e365d01ca439bdb0c57f4aea1a4e174", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43230c004e365d01ca439bdb0c57f4aea1a4e174"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/829c2849c102e33c9f0d932445229406d4478b8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/829c2849c102e33c9f0d932445229406d4478b8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/829c2849c102e33c9f0d932445229406d4478b8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/829c2849c102e33c9f0d932445229406d4478b8f/comments", "author": null, "committer": null, "parents": [{"sha": "435d8e6b0d85e5947951cd03672f3bec57222b88", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/435d8e6b0d85e5947951cd03672f3bec57222b88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/435d8e6b0d85e5947951cd03672f3bec57222b88"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "d27915db961ae98b2e078658be809709627748de", "filename": "gcc/ada/exp_pakd.adb", "status": "modified", "additions": 25, "deletions": 3, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/829c2849c102e33c9f0d932445229406d4478b8f/gcc%2Fada%2Fexp_pakd.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/829c2849c102e33c9f0d932445229406d4478b8f/gcc%2Fada%2Fexp_pakd.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_pakd.adb?ref=829c2849c102e33c9f0d932445229406d4478b8f", "patch": "@@ -27,6 +27,7 @@\n with Atree;    use Atree;\n with Checks;   use Checks;\n with Einfo;    use Einfo;\n+with Errout;   use Errout;\n with Exp_Dbug; use Exp_Dbug;\n with Exp_Util; use Exp_Util;\n with Nlists;   use Nlists;\n@@ -1084,7 +1085,7 @@ package body Exp_Pakd is\n          --  discriminants, so we treat it as a default/per-object expression.\n \n          Set_Parent (Len_Expr, Typ);\n-         Analyze_Per_Use_Expression (Len_Expr, Standard_Integer);\n+         Analyze_Per_Use_Expression (Len_Expr, Standard_Long_Long_Integer);\n \n          --  Use a modular type if possible. We can do this if we have\n          --  static bounds, and the length is small enough, and the length\n@@ -1095,6 +1096,27 @@ package body Exp_Pakd is\n          if Compile_Time_Known_Value (Len_Expr) then\n             Len_Bits := Expr_Value (Len_Expr) * Csize;\n \n+            --  Check for size known to be too large\n+\n+            if Len_Bits >\n+              Uint_2 ** (Standard_Integer_Size - 1) * System_Storage_Unit\n+            then\n+               if System_Storage_Unit = 8 then\n+                  Error_Msg_N\n+                    (\"packed array size cannot exceed \" &\n+                     \"Integer''Last bytes\", Typ);\n+               else\n+                  Error_Msg_N\n+                    (\"packed array size cannot exceed \" &\n+                     \"Integer''Last storage units\", Typ);\n+               end if;\n+\n+               --  Reset length to arbitrary not too high value to continue\n+\n+               Len_Expr := Make_Integer_Literal (Loc, 65535);\n+               Analyze_And_Resolve (Len_Expr, Standard_Long_Long_Integer);\n+            end if;\n+\n             --  We normally consider small enough to mean no larger than the\n             --  value of System_Max_Binary_Modulus_Power, checking that in the\n             --  case of values longer than word size, we have long shifts.\n@@ -1207,13 +1229,13 @@ package body Exp_Pakd is\n                  Make_Subtype_Indication (Loc,\n                    Subtype_Mark => New_Occurrence_Of (PB_Type, Loc),\n                    Constraint =>\n-\n                      Make_Index_Or_Discriminant_Constraint (Loc,\n                        Constraints => New_List (\n                          Make_Range (Loc,\n                            Low_Bound =>\n                              Make_Integer_Literal (Loc, 0),\n-                           High_Bound => PAT_High)))));\n+                           High_Bound =>\n+                             Convert_To (Standard_Integer, PAT_High))))));\n \n          Install_PAT;\n "}]}