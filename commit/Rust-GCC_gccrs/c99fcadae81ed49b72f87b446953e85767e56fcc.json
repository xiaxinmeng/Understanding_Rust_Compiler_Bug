{"sha": "c99fcadae81ed49b72f87b446953e85767e56fcc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzk5ZmNhZGFlODFlZDQ5YjcyZjg3YjQ0Njk1M2U4NTc2N2U1NmZjYw==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2018-09-18T16:35:27Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2018-09-18T16:35:27Z"}, "message": "re PR c++/85065 ([concepts] ICE with invalid use of a concept)\n\n/cp\n2018-09-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/85065\n\t* cp-tree.h (NON_ERROR): New.\n\t* pt.c (auto_hash::hash): Use it.\n\t(do_auto_deduction): Likewise.\n\n/testsuite\n2018-09-18  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR c++/85065\n\t* g++.dg/concepts/pr85065.C: New.\n\nFrom-SVN: r264402", "tree": {"sha": "c9a5b355b7e70316f6b90607fd6e0742c6f69cff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c9a5b355b7e70316f6b90607fd6e0742c6f69cff"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c99fcadae81ed49b72f87b446953e85767e56fcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c99fcadae81ed49b72f87b446953e85767e56fcc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c99fcadae81ed49b72f87b446953e85767e56fcc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c99fcadae81ed49b72f87b446953e85767e56fcc/comments", "author": null, "committer": null, "parents": [{"sha": "b7663a763fdeff95ffe2ea8d1ef46ad74c26491e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7663a763fdeff95ffe2ea8d1ef46ad74c26491e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7663a763fdeff95ffe2ea8d1ef46ad74c26491e"}], "stats": {"total": 32, "additions": 26, "deletions": 6}, "files": [{"sha": "fdc1247746deda1742f8aafec95b618d15ebd6c2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99fcadae81ed49b72f87b446953e85767e56fcc/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99fcadae81ed49b72f87b446953e85767e56fcc/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c99fcadae81ed49b72f87b446953e85767e56fcc", "patch": "@@ -1,3 +1,10 @@\n+2018-09-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/85065\n+\t* cp-tree.h (NON_ERROR): New.\n+\t* pt.c (auto_hash::hash): Use it.\n+\t(do_auto_deduction): Likewise.\n+\n 2018-09-18  Nathan Sidwell  <nathan@acm.org>\n \n \tPR c++/86881"}, {"sha": "2203e92dda88f48848999fbb65f8244e5494eac5", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99fcadae81ed49b72f87b446953e85767e56fcc/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99fcadae81ed49b72f87b446953e85767e56fcc/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=c99fcadae81ed49b72f87b446953e85767e56fcc", "patch": "@@ -1877,6 +1877,8 @@ struct GTY(()) language_function {\n /* In parser.c.  */\n extern tree cp_literal_operator_id (const char *);\n \n+#define NON_ERROR(NODE) ((NODE) == error_mark_node ? NULL_TREE : (NODE))\n+\n /* TRUE if a tree code represents a statement.  */\n extern bool statement_code_p[MAX_TREE_CODES];\n "}, {"sha": "b8b6545434b383d2a666d8b38f95b27a3ab424c4", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99fcadae81ed49b72f87b446953e85767e56fcc/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99fcadae81ed49b72f87b446953e85767e56fcc/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=c99fcadae81ed49b72f87b446953e85767e56fcc", "patch": "@@ -26121,7 +26121,7 @@ struct auto_hash : default_hash_traits<tree>\n inline hashval_t\n auto_hash::hash (tree t)\n {\n-  if (tree c = PLACEHOLDER_TYPE_CONSTRAINTS (t))\n+  if (tree c = NON_ERROR (PLACEHOLDER_TYPE_CONSTRAINTS (t)))\n     /* Matching constrained-type-specifiers denote the same template\n        parameter, so hash the constraint.  */\n     return hash_placeholder_constraint (c);\n@@ -26880,7 +26880,7 @@ do_auto_deduction (tree type, tree init, tree auto_node,\n \n   /* Check any placeholder constraints against the deduced type. */\n   if (flag_concepts && !processing_template_decl)\n-    if (tree constr = PLACEHOLDER_TYPE_CONSTRAINTS (auto_node))\n+    if (tree constr = NON_ERROR (PLACEHOLDER_TYPE_CONSTRAINTS (auto_node)))\n       {\n         /* Use the deduced type to check the associated constraints. If we\n            have a partial-concept-id, rebuild the argument list so that"}, {"sha": "7a7a7c24563008095b15f8e6f152fd960922747e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99fcadae81ed49b72f87b446953e85767e56fcc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99fcadae81ed49b72f87b446953e85767e56fcc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c99fcadae81ed49b72f87b446953e85767e56fcc", "patch": "@@ -1,3 +1,8 @@\n+2018-09-18  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR c++/85065\n+\t* g++.dg/concepts/pr85065.C: New.\n+\n 2018-09-18  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR testsuite/87339\n@@ -11,10 +16,10 @@\n \n 2018-09-18  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n-    * gcc.target/aarch64/spellcheck_1.c:\n-    Make architecture suggestion optional.\n-    * gcc.target/aarch64/spellcheck_4.c:\n-    Likewise.\n+\t* gcc.target/aarch64/spellcheck_1.c:\n+\tMake architecture suggestion optional.\n+\t* gcc.target/aarch64/spellcheck_4.c:\n+\tLikewise.\n \n 2018-09-18  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n "}, {"sha": "861a838dd29b81fcf4422e86c97552157138137c", "filename": "gcc/testsuite/g++.dg/concepts/pr85065.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c99fcadae81ed49b72f87b446953e85767e56fcc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr85065.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c99fcadae81ed49b72f87b446953e85767e56fcc/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr85065.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconcepts%2Fpr85065.C?ref=c99fcadae81ed49b72f87b446953e85767e56fcc", "patch": "@@ -0,0 +1,6 @@\n+// { dg-do compile { target c++14 } }\n+// { dg-additional-options \"-fconcepts\" }\n+\n+template<int> concept bool C = true;\n+\n+C c = 0;  // { dg-error \"invalid reference to concept\" }"}]}