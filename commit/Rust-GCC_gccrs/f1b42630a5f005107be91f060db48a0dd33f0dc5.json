{"sha": "f1b42630a5f005107be91f060db48a0dd33f0dc5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFiNDI2MzBhNWYwMDUxMDdiZTkxZjA2MGRiNDhhMGRkMzNmMGRjNQ==", "commit": {"author": {"name": "Adam Nemet", "email": "anemet@caviumnetworks.com", "date": "2007-06-21T23:46:59Z"}, "committer": {"name": "Adam Nemet", "email": "nemet@gcc.gnu.org", "date": "2007-06-21T23:46:59Z"}, "message": "fold-const.c (debug_fold_checksum): Move it under ENABLE_FOLD_CHECKING.\n\n\t* fold-const.c (debug_fold_checksum): Move it under\n\tENABLE_FOLD_CHECKING.\n\nFrom-SVN: r125932", "tree": {"sha": "a63dd182b428904091d9aad4506b852d5e8a289e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a63dd182b428904091d9aad4506b852d5e8a289e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1b42630a5f005107be91f060db48a0dd33f0dc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b42630a5f005107be91f060db48a0dd33f0dc5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1b42630a5f005107be91f060db48a0dd33f0dc5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1b42630a5f005107be91f060db48a0dd33f0dc5/comments", "author": null, "committer": null, "parents": [{"sha": "70826cbbef8e6392e3d961e0054af937bcb56a16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70826cbbef8e6392e3d961e0054af937bcb56a16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70826cbbef8e6392e3d961e0054af937bcb56a16"}], "stats": {"total": 53, "additions": 29, "deletions": 24}, "files": [{"sha": "7ca7ae3ce25a67c496392833d3f873c49f25837c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b42630a5f005107be91f060db48a0dd33f0dc5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b42630a5f005107be91f060db48a0dd33f0dc5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1b42630a5f005107be91f060db48a0dd33f0dc5", "patch": "@@ -1,3 +1,8 @@\n+2007-06-21  Adam Nemet  <anemet@caviumnetworks.com>\n+\n+\t* fold-const.c (debug_fold_checksum): Move it under\n+\tENABLE_FOLD_CHECKING.\n+\n 2007-06-21  Sebastian Pop  <sebpop@gmail.com>\n \n \tPR middle-end/20623"}, {"sha": "eaf637cc02cbf285a18916a05e1ed08c958344fb", "filename": "gcc/fold-const.c", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1b42630a5f005107be91f060db48a0dd33f0dc5/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1b42630a5f005107be91f060db48a0dd33f0dc5/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=f1b42630a5f005107be91f060db48a0dd33f0dc5", "patch": "@@ -12943,6 +12943,30 @@ fold_checksum_tree (tree expr, struct md5_ctx *ctx, htab_t ht)\n     }\n }\n \n+/* Helper function for outputting the checksum of a tree T.  When\n+   debugging with gdb, you can \"define mynext\" to be \"next\" followed\n+   by \"call debug_fold_checksum (op0)\", then just trace down till the\n+   outputs differ.  */\n+\n+void\n+debug_fold_checksum (tree t)\n+{\n+  int i;\n+  unsigned char checksum[16];\n+  struct md5_ctx ctx;\n+  htab_t ht = htab_create (32, htab_hash_pointer, htab_eq_pointer, NULL);\n+  \n+  md5_init_ctx (&ctx);\n+  fold_checksum_tree (t, &ctx, ht);\n+  md5_finish_ctx (&ctx, checksum);\n+  htab_empty (ht);\n+\n+  for (i = 0; i < 16; i++)\n+    fprintf (stderr, \"%d \", checksum[i]);\n+\n+  fprintf (stderr, \"\\n\");\n+}\n+\n #endif\n \n /* Fold a unary tree expression with code CODE of type TYPE with an\n@@ -12982,30 +13006,6 @@ fold_build1_stat (enum tree_code code, tree type, tree op0 MEM_STAT_DECL)\n   return tem;\n }\n \n-/* Helper function for outputting the checksum of a tree T.  When\n-   debugging with gdb, you can \"define mynext\" to be \"next\" followed\n-   by \"call debug_fold_checksum (op0)\", then just trace down till the\n-   outputs differ.  */\n-\n-void\n-debug_fold_checksum (tree t)\n-{\n-  int i;\n-  unsigned char checksum[16];\n-  struct md5_ctx ctx;\n-  htab_t ht = htab_create (32, htab_hash_pointer, htab_eq_pointer, NULL);\n-  \n-  md5_init_ctx (&ctx);\n-  fold_checksum_tree (t, &ctx, ht);\n-  md5_finish_ctx (&ctx, checksum);\n-  htab_empty (ht);\n-\n-  for (i = 0; i < 16; i++)\n-    fprintf (stderr, \"%d \", checksum[i]);\n-\n-  fprintf (stderr, \"\\n\");\n-}\n-\n /* Fold a binary tree expression with code CODE of type TYPE with\n    operands OP0 and OP1.  Return a folded expression if successful.\n    Otherwise, return a tree expression with code CODE of type TYPE"}]}