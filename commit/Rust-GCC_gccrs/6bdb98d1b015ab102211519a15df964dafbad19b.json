{"sha": "6bdb98d1b015ab102211519a15df964dafbad19b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJkYjk4ZDFiMDE1YWIxMDIyMTE1MTlhMTVkZjk2NGRhZmJhZDE5Yg==", "commit": {"author": {"name": "Matt Austern", "email": "austern@apple.com", "date": "2004-09-21T17:24:44Z"}, "committer": {"name": "Matt Austern", "email": "austern@gcc.gnu.org", "date": "2004-09-21T17:24:44Z"}, "message": "re PR c++/15049 ([DR 278/132/216/338/389/319] global variables with anonymous types are legal)\n\nPR c++/15049\n\t* cp/decl.c (grokvardecl): Accept declarations of global variables\n\tusing anonymous types.\n\t* testsuite/g++.dg/other/anon3.C: New.\n\nFrom-SVN: r87814", "tree": {"sha": "b2e9cdb17584c9a96c270f5e1bcf17953905af86", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2e9cdb17584c9a96c270f5e1bcf17953905af86"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bdb98d1b015ab102211519a15df964dafbad19b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bdb98d1b015ab102211519a15df964dafbad19b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bdb98d1b015ab102211519a15df964dafbad19b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bdb98d1b015ab102211519a15df964dafbad19b/comments", "author": null, "committer": null, "parents": [{"sha": "34f87940b2ec98215e6b366d33d404144ecdbef5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34f87940b2ec98215e6b366d33d404144ecdbef5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34f87940b2ec98215e6b366d33d404144ecdbef5"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "4e4a4d3da2cd323baa78a6d100f99ceab1403e93", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdb98d1b015ab102211519a15df964dafbad19b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdb98d1b015ab102211519a15df964dafbad19b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=6bdb98d1b015ab102211519a15df964dafbad19b", "patch": "@@ -1,3 +1,9 @@\n+2004-09-21  Matt Austern  <austern@apple.com>\n+\n+\tPR c++/15049\n+\t* decl.c (grokvardecl): Accept declarations of global variables\n+\tusing anonymous types.\n+\t\n 2004-09-21  Roger Sayle  <roger@eyesopen.com>\n \n \tPR c++/7503"}, {"sha": "463fa60ab1268d187e396f93c340be28ae78e400", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdb98d1b015ab102211519a15df964dafbad19b/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdb98d1b015ab102211519a15df964dafbad19b/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=6bdb98d1b015ab102211519a15df964dafbad19b", "patch": "@@ -5931,17 +5931,29 @@ grokvardecl (tree type,\n \t or enumeration declared in a local scope) shall not be used to\n \t declare an entity with linkage.\n \n-\t Only check this for public decls for now.  */\n-      tree t = no_linkage_check (TREE_TYPE (decl),\n-\t\t\t\t /*relaxed_p=*/false);\n+\t Only check this for public decls for now. */\n+      tree t1 = TREE_TYPE (decl);\n+      tree t = no_linkage_check (t1, /*relaxed_p=*/false);\n       if (t)\n \t{\n \t  if (TYPE_ANONYMOUS_P (t))\n \t    {\n \t      if (DECL_EXTERN_C_P (decl))\n-\t\t/* Allow this; it's pretty common in C.  */;\n+\t\t/* Allow this; it's pretty common in C.  */\n+\t\t  ;\n+\t      else if (same_type_ignoring_top_level_qualifiers_p(t1, t))\n+\t        /* This is something like \"enum { a = 3 } x;\", which is\n+\t\t   well formed.  The enum doesn't have \"a name with no\n+\t\t   linkage\", because it has no name.  See closed CWG issue\n+\t\t   132.\n+\n+\t\t   Note that while this construct is well formed in C++03\n+\t\t   it is likely to become ill formed in C++0x.  See open\n+\t\t   CWG issue 389 and related issues. */\n+\t\t;\n \t      else\n \t\t{\n+\t\t  /* It's a typedef referring to an anonymous type. */\n \t\t  pedwarn (\"non-local variable `%#D' uses anonymous type\",\n \t\t\t   decl);\n \t\t  if (DECL_ORIGINAL_TYPE (TYPE_NAME (t)))"}, {"sha": "11d8dfc4228cc9c3b85e516bce0e445be3b32e0a", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdb98d1b015ab102211519a15df964dafbad19b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdb98d1b015ab102211519a15df964dafbad19b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=6bdb98d1b015ab102211519a15df964dafbad19b", "patch": "@@ -1,3 +1,8 @@\n+\t2004-09-17  Matt Austern  <austern@apple.com>\n+\n+\tPR c++/15049\n+\t* g++.dg/other/anon3.C: New.\n+\t\n 2004-09-21  Roger Sayle  <roger@eyesopen.com>\n \n \tPR c++/7503"}, {"sha": "87cbfb544cd1259e2d7894ebb2b2a6408b30c969", "filename": "gcc/testsuite/g++.dg/other/anon3.C", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bdb98d1b015ab102211519a15df964dafbad19b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bdb98d1b015ab102211519a15df964dafbad19b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Fanon3.C?ref=6bdb98d1b015ab102211519a15df964dafbad19b", "patch": "@@ -0,0 +1,7 @@\n+// pr c++/15049\n+// Origin: Matt Austern <austern@apple.com>\n+// Test that we can declare a global variable whose type is anonymous.\n+\n+// { dg-do compile }\n+\n+enum { a = 3 } x;"}]}