{"sha": "924b92765863cfedb1955c712cf12d1ec56d229b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTI0YjkyNzY1ODYzY2ZlZGIxOTU1YzcxMmNmMTJkMWVjNTZkMjI5Yg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2019-10-04T19:08:09Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2019-10-04T19:08:09Z"}, "message": "[preprocessor/91991] column location overflow\n\nhttps://gcc.gnu.org/ml/gcc-patches/2019-10/msg00371.html\n\tPR preprocessor/91991\n\t* line-map.c (linemap_line_start): Clear max_column_hint if we run\n\tout of locations.\n\nFrom-SVN: r276596", "tree": {"sha": "7a50d295c74138895fa2da47e5d0722521ff3b93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7a50d295c74138895fa2da47e5d0722521ff3b93"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/924b92765863cfedb1955c712cf12d1ec56d229b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/924b92765863cfedb1955c712cf12d1ec56d229b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/924b92765863cfedb1955c712cf12d1ec56d229b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/924b92765863cfedb1955c712cf12d1ec56d229b/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "2066f7951cc4f0b23ddff5abfd2ad2ea4ee90fff", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2066f7951cc4f0b23ddff5abfd2ad2ea4ee90fff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2066f7951cc4f0b23ddff5abfd2ad2ea4ee90fff"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "f3237fbd38f2d97757adcd29e48d9c0ceb0f5fc1", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/924b92765863cfedb1955c712cf12d1ec56d229b/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/924b92765863cfedb1955c712cf12d1ec56d229b/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=924b92765863cfedb1955c712cf12d1ec56d229b", "patch": "@@ -1,3 +1,9 @@\n+2019-10-04  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR preprocessor/91991\n+\t* line-map.c (linemap_line_start): Clear max_column_hint if we run\n+\tout of locations.\n+\n 2019-10-02  Richard Biener  <rguenther@suse.de>\n \n \t* internal.h (enum include_type): Remove trailing comma."}, {"sha": "feeb74808768c8e86082e0a0b19f37e01ee95310", "filename": "libcpp/line-map.c", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/924b92765863cfedb1955c712cf12d1ec56d229b/libcpp%2Fline-map.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/924b92765863cfedb1955c712cf12d1ec56d229b/libcpp%2Fline-map.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fline-map.c?ref=924b92765863cfedb1955c712cf12d1ec56d229b", "patch": "@@ -717,11 +717,11 @@ linemap_line_start (line_maps *set, linenum_type to_line,\n \t  /* If the column number is ridiculous or we've allocated a huge\n \t     number of location_ts, give up on column numbers\n \t     (and on packed ranges).  */\n-\t  max_column_hint = 0;\n+\t  max_column_hint = 1;\n \t  column_bits = 0;\n \t  range_bits = 0;\n \t  if (highest >= LINE_MAP_MAX_LOCATION)\n-\t    return 0;\n+\t    goto overflowed;\n \t}\n       else\n \t{\n@@ -735,6 +735,7 @@ linemap_line_start (line_maps *set, linenum_type to_line,\n \t  max_column_hint = 1U << column_bits;\n \t  column_bits += range_bits;\n \t}\n+\n       /* Allocate the new line_map.  However, if the current map only has a\n \t single line we can sometimes just increase its column_bits instead. */\n       if (line_delta < 0\n@@ -765,8 +766,11 @@ linemap_line_start (line_maps *set, linenum_type to_line,\n      macro tokens.  */\n   if (r >= LINE_MAP_MAX_LOCATION)\n     {\n+    overflowed:\n       /* Remember we overflowed.  */\n       set->highest_line = set->highest_location = LINE_MAP_MAX_LOCATION - 1;\n+      /* No column numbers!  */\n+      set->max_column_hint = 1;\n       return 0;\n     }\n "}]}