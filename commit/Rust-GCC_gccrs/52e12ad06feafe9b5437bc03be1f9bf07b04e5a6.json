{"sha": "52e12ad06feafe9b5437bc03be1f9bf07b04e5a6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTJlMTJhZDA2ZmVhZmU5YjU0MzdiYzAzYmUxZjliZjA3YjA0ZTVhNg==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@redhat.co.uk", "date": "2000-11-21T17:29:49Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2000-11-21T17:29:49Z"}, "message": "More accurate insn class attributes\n\nFrom-SVN: r37617", "tree": {"sha": "6e5250188251ab6dbf90c65e0ee568c59c90bc5d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6e5250188251ab6dbf90c65e0ee568c59c90bc5d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/52e12ad06feafe9b5437bc03be1f9bf07b04e5a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52e12ad06feafe9b5437bc03be1f9bf07b04e5a6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/52e12ad06feafe9b5437bc03be1f9bf07b04e5a6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/52e12ad06feafe9b5437bc03be1f9bf07b04e5a6/comments", "author": null, "committer": null, "parents": [{"sha": "b3e2d1eb53cab0f3c7bdd104c164a8c386829246", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b3e2d1eb53cab0f3c7bdd104c164a8c386829246", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b3e2d1eb53cab0f3c7bdd104c164a8c386829246"}], "stats": {"total": 583, "additions": 310, "deletions": 273}, "files": [{"sha": "d781a13ff4b5c16160b268483e7417038db769d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52e12ad06feafe9b5437bc03be1f9bf07b04e5a6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52e12ad06feafe9b5437bc03be1f9bf07b04e5a6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=52e12ad06feafe9b5437bc03be1f9bf07b04e5a6", "patch": "@@ -1,3 +1,12 @@\n+2000-11-21  Bernd Schmidt  <bernds@redhat.co.uk>\n+\n+\tMostly from Vladimir Makarov (vmakarov@redhat.com)\n+\t* ia64.md (attr itanium_class): Define insn types as described in\n+\tItanium docs.\n+\t(all insn patterns): Use itanium_class, not type attributes.\n+\tOccasionally split alternatives as necessary.\n+\t(attr type): Compute from new attr itanium_class.\n+\t\n 2000-11-21  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* tradcpp.c (output_line_command): Mark system headers as such in"}, {"sha": "614fd38ecc3afee4f6b0df71f4fe6b16ea12e409", "filename": "gcc/config/ia64/ia64.md", "status": "modified", "additions": 301, "deletions": 273, "changes": 574, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/52e12ad06feafe9b5437bc03be1f9bf07b04e5a6/gcc%2Fconfig%2Fia64%2Fia64.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/52e12ad06feafe9b5437bc03be1f9bf07b04e5a6/gcc%2Fconfig%2Fia64%2Fia64.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.md?ref=52e12ad06feafe9b5437bc03be1f9bf07b04e5a6", "patch": "@@ -99,7 +99,22 @@\n ;; multiple instructions, patterns which emit 0 instructions, and patterns\n ;; which emit instruction that can go in any slot (e.g. nop).\n \n-(define_attr \"type\" \"unknown,A,I,M,F,B,L,S\" (const_string \"unknown\"))\n+(define_attr \"itanium_class\" \"unknown,ignore,stop_bit,br,fcmp,fcvtfx,fld,fmac,fmisc,frar_i,frar_m,frbr,frfr,frpr,ialu,icmp,ilog,ishf,ld,long_i,mmmul,mmshf,mmshfi,rse_m,scall,sem,stf,st,syst_m0,syst_m,tbit,toar_i,toar_m,tobr,tofr,topr,xmpy,xtd\"\n+         (const_string \"unknown\"))\n+\n+(define_attr \"type\" \"unknown,A,I,M,F,B,L,S\"\n+  (cond [(eq_attr \"itanium_class\" \"ld,st,fld,stf,sem\") (const_string \"M\")\n+\t (eq_attr \"itanium_class\" \"rse_m,syst_m,syst_m0\") (const_string \"M\")\n+\t (eq_attr \"itanium_class\" \"frar_m,toar_m,frfr,tofr\") (const_string \"M\")\n+\t (eq_attr \"itanium_class\" \"ialu,icmp,ilog\") (const_string \"A\")\n+\t (eq_attr \"itanium_class\" \"fmisc,fmac,fcmp,xmpy,fcvtfx\") (const_string \"F\")\n+\t (eq_attr \"itanium_class\" \"frar_i,toar_i,frbr,tobr\") (const_string \"I\")\n+\t (eq_attr \"itanium_class\" \"frpr,topr,ishf,xtd,tbit\") (const_string \"I\")\n+\t (eq_attr \"itanium_class\" \"mmmul,mmshf,mmshfi\") (const_string \"I\")\n+\t (eq_attr \"itanium_class\" \"br,scall\") (const_string \"B\")\n+\t (eq_attr \"itanium_class\" \"stop_bit\") (const_string \"S\")\n+\t (eq_attr \"itanium_class\" \"long_i\") (const_string \"L\")]\n+\t(const_string \"unknown\")))\n \n ;; Predication.  True iff this instruction can be predicated.\n \n@@ -171,7 +186,7 @@\n    cmp.ne %0, p0 = r0, r0\n    cmp.eq %0, p0 = r0, r0\n    (%1) cmp.eq.unc %0, p0 = r0, r0\"\n-  [(set_attr \"type\" \"A\")\n+  [(set_attr \"itanium_class\" \"icmp\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"movbi\"\n@@ -188,7 +203,7 @@\n    ld1%O1 %0 = %1%P1\n    st1%Q0 %0 = %1%P0\n    mov %0 = %1\"\n-  [(set_attr \"type\" \"A,A,unknown,unknown,I,A,M,M,A\")])\n+  [(set_attr \"itanium_class\" \"icmp,icmp,unknown,unknown,tbit,ialu,ld,st,ialu\")])\n \n (define_split\n   [(set (match_operand:BI 0 \"register_operand\" \"\")\n@@ -248,7 +263,7 @@\n    (%J2) getf.sig %0 = %1\n    (%J2) setf.sig %0 = %r1\n    (%J2) mov %0 = %1\"\n-  [(set_attr \"type\" \"A,A,M,M,F\")\n+  [(set_attr \"itanium_class\" \"ialu,ialu,frfr,tofr,fmisc\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"*movqi_internal_astep\"\n@@ -263,7 +278,7 @@\n    getf.sig %0 = %1\n    setf.sig %0 = %r1\n    mov %0 = %1\"\n-  [(set_attr \"type\" \"A,A,M,M,M,M,F\")\n+  [(set_attr \"itanium_class\" \"ialu,ialu,ld,st,frfr,tofr,fmisc\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"*movqi_internal\"\n@@ -278,7 +293,7 @@\n    getf.sig %0 = %1\n    setf.sig %0 = %r1\n    mov %0 = %1\"\n-  [(set_attr \"type\" \"A,A,M,M,M,M,F\")])\n+  [(set_attr \"itanium_class\" \"ialu,ialu,ld,st,frfr,tofr,fmisc\")])\n \n (define_expand \"movhi\"\n   [(set (match_operand:HI 0 \"general_operand\" \"\")\n@@ -306,7 +321,7 @@\n    (%J2) getf.sig %0 = %1\n    (%J2) setf.sig %0 = %r1\n    (%J2) mov %0 = %1\"\n-  [(set_attr \"type\" \"A,A,M,M,F\")\n+  [(set_attr \"itanium_class\" \"ialu,ialu,frfr,tofr,fmisc\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"*movhi_internal_astep\"\n@@ -321,7 +336,7 @@\n    getf.sig %0 = %1\n    setf.sig %0 = %r1\n    mov %0 = %1\"\n-  [(set_attr \"type\" \"A,A,M,M,M,M,F\")\n+  [(set_attr \"itanium_class\" \"ialu,ialu,ld,st,frfr,tofr,fmisc\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"*movhi_internal\"\n@@ -336,7 +351,7 @@\n    getf.sig %0 = %1\n    setf.sig %0 = %r1\n    mov %0 = %1\"\n-  [(set_attr \"type\" \"A,A,M,M,M,M,F\")])\n+  [(set_attr \"itanium_class\" \"ialu,ialu,ld,st,frfr,tofr,fmisc\")])\n \n (define_expand \"movsi\"\n   [(set (match_operand:SI 0 \"general_operand\" \"\")\n@@ -367,7 +382,8 @@\n    (%J2) mov %0 = %1\n    (%J2) mov %0 = %1\n    (%J2) mov %0 = %r1\"\n-  [(set_attr \"type\" \"A,A,L,M,M,F,M,M\")\n+;; frar_m, toar_m ??? why not frar_i and toar_i\n+  [(set_attr \"itanium_class\" \"ialu,ialu,long_i,frfr,tofr,fmisc,frar_m,toar_m\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"*movsi_internal_astep\"\n@@ -385,7 +401,8 @@\n   mov %0 = %1\n   mov %0 = %1\n   mov %0 = %r1\"\n-  [(set_attr \"type\" \"A,A,L,M,M,M,M,F,M,M\")\n+;; frar_m, toar_m ??? why not frar_i and toar_i\n+  [(set_attr \"itanium_class\" \"ialu,ialu,long_i,ld,st,frfr,tofr,fmisc,frar_m,toar_m\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"*movsi_internal\"\n@@ -403,7 +420,8 @@\n   mov %0 = %1\n   mov %0 = %1\n   mov %0 = %r1\"\n-  [(set_attr \"type\" \"A,A,L,M,M,M,M,F,M,M\")])\n+;; frar_m, toar_m ??? why not frar_i and toar_i\n+  [(set_attr \"itanium_class\" \"ialu,ialu,long_i,ld,st,frfr,tofr,fmisc,frar_m,toar_m\")])\n \n (define_expand \"movdi\"\n   [(set (match_operand:DI 0 \"general_operand\" \"\")\n@@ -440,12 +458,12 @@\n (define_insn \"\"\n   [(cond_exec\n      (match_operator 2 \"predicate_operator\"\n-       [(match_operand:BI 3 \"register_operand\" \"c,c,c,c,c,c,c,c,c,c,c\")\n+       [(match_operand:BI 3 \"register_operand\" \"c,c,c,c,c,c,c,c,c,c,c,c\")\n         (const_int 0)])\n      (set (match_operand:DI 0 \"register_operand\"\n-\t\t\t      \"=r,r,r, r,*f,*f,   r,*b,*e, r,*d\")\n+\t\t\t      \"=r,r,r, r,*f,*f, r,*b, r,*e, r,*d\")\n \t  (match_operand:DI 1 \"nonmemory_operand\"\n-\t\t\t      \"rO,J,i,*f,rO,*f,*b*e,rO,rK,*d,rK\")))]\n+\t\t\t      \"rO,J,i,*f,rO,*f,*b,rO,*e,rK,*d,rK\")))]\n   \"TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n   \"*\n {\n@@ -460,6 +478,7 @@\n     \\\"(%J2) mov %0 = %r1\\\",\n     \\\"(%J2) mov %0 = %1\\\",\n     \\\"(%J2) mov %0 = %1\\\",\n+    \\\"(%J2) mov %0 = %1\\\",\n     \\\"(%J2) mov %0 = %1\\\"\n   };\n \n@@ -480,7 +499,7 @@\n \n   return alt[which_alternative];\n }\"\n-  [(set_attr \"type\" \"A,A,L,M,M,F,I,I,I,M,M\")\n+  [(set_attr \"itanium_class\" \"ialu,ialu,long_i,frfr,tofr,fmisc,frbr,tobr,frar_i,toar_i,frar_m,toar_m\")\n    (set_attr \"predicable\" \"no\")])\n \n ;; This is used during early compilation to delay the decision on\n@@ -504,9 +523,9 @@\n \n (define_insn \"*movdi_internal_astep\"\n   [(set (match_operand:DI 0 \"destination_operand\"\n-\t\t    \"=r,r,r,r, m, r,*f,*f,*f, Q,   r,*b,*e, r,*d, r,*c\")\n+\t\t    \"=r,r,r,r, m, r,*f,*f,*f, Q, r,*b, r,*e, r,*d, r,*c\")\n \t(match_operand:DI 1 \"move_operand\"\n-\t\t    \"rO,J,i,m,rO,*f,rO,*f, Q,*f,*b*e,rO,rK,*d,rK,*c,rO\"))]\n+\t\t    \"rO,J,i,m,rO,*f,rO,*f, Q,*f,*b,rO,*e,rK,*d,rK,*c,rO\"))]\n   \"TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n   \"*\n {\n@@ -526,6 +545,7 @@\n     \\\"mov %0 = %1\\\",\n     \\\"mov %0 = %1\\\",\n     \\\"mov %0 = %1\\\",\n+    \\\"mov %0 = %1\\\",\n     \\\"mov %0 = pr\\\",\n     \\\"mov pr = %1, -1\\\"\n   };\n@@ -536,14 +556,14 @@\n \n   return alt[which_alternative];\n }\"\n-  [(set_attr \"type\" \"A,A,L,M,M,M,M,F,M,M,I,I,I,M,M,I,I\")\n+  [(set_attr \"itanium_class\" \"ialu,ialu,long_i,ld,st,frfr,tofr,fmisc,fld,stf,frbr,tobr,frar_i,toar_i,frar_m,toar_m,frpr,topr\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"*movdi_internal\"\n   [(set (match_operand:DI 0 \"destination_operand\"\n-\t\t    \"=r,r,r,r, m, r,*f,*f,*f, Q,   r,*b,*e, r,*d, r,*c\")\n+\t\t    \"=r,r,r,r, m, r,*f,*f,*f, Q, r,*b, r,*e, r,*d, r,*c\")\n \t(match_operand:DI 1 \"move_operand\"\n-\t\t    \"rO,J,i,m,rO,*f,rO,*f, Q,*f,*b*e,rO,rK,*d,rK,*c,rO\"))]\n+\t\t    \"rO,J,i,m,rO,*f,rO,*f, Q,*f,*b,rO,*e,rK,*d,rK,*c,rO\"))]\n   \"! TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n   \"*\n {\n@@ -563,6 +583,7 @@\n     \\\"%,mov %0 = %1\\\",\n     \\\"%,mov %0 = %1\\\",\n     \\\"%,mov %0 = %1\\\",\n+    \\\"%,mov %0 = %1\\\",\n     \\\"mov %0 = pr\\\",\n     \\\"mov pr = %1, -1\\\"\n   };\n@@ -573,7 +594,7 @@\n \n   return alt[which_alternative];\n }\"\n-  [(set_attr \"type\" \"A,A,L,M,M,M,M,F,M,M,I,I,I,M,M,I,I\")])\n+  [(set_attr \"itanium_class\" \"ialu,ialu,long_i,ld,st,frfr,tofr,fmisc,fld,stf,frbr,tobr,frar_i,toar_i,frar_m,toar_m,frpr,topr\")])\n \n (define_split\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n@@ -603,21 +624,21 @@\n \t(plus:DI (reg:DI 1) (match_operand:DI 1 \"function_operand\" \"s\")))]\n   \"\"\n   \"addl %0 = @ltoff(@fptr(%1)), gp\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n \n (define_insn \"load_gprel\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(plus:DI (reg:DI 1) (match_operand:DI 1 \"sdata_symbolic_operand\" \"s\")))]\n   \"\"\n   \"addl %0 = @gprel(%1), gp\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n \n (define_insn \"gprel64_offset\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(minus:DI (match_operand:DI 1 \"symbolic_operand\" \"\") (reg:DI 1)))]\n   \"\"\n   \"movl %0 = @gprel(%1)\"\n-  [(set_attr \"type\" \"L\")])\n+  [(set_attr \"itanium_class\" \"long_i\")])\n \n (define_expand \"load_gprel64\"\n   [(set (match_dup 2)\n@@ -647,7 +668,7 @@\n \t(plus:DI (reg:DI 1) (match_operand:DI 1 \"got_symbolic_operand\" \"s\")))]\n   \"\"\n   \"addl %0 = @ltoff(%1), gp\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n \n ;; With no offsettable memory references, we've got to have a scratch\n ;; around to play with the second word.\n@@ -697,7 +718,7 @@\n   emit_insn (gen_rtx_SET (VOIDmode, out[!first], in[!first]));\n   DONE;\n }\"\n-  [(set_attr \"type\" \"unknown\")\n+  [(set_attr \"itanium_class\" \"unknown\")\n    (set_attr \"predicable\" \"no\")])\n \n ;; ??? SSA creates these.  Can't allow memories since we don't have\n@@ -730,7 +751,7 @@\n   emit_insn (gen_rtx_SET (VOIDmode, out[!first], in[!first]));\n   DONE;\n }\"\n-  [(set_attr \"type\" \"unknown\")\n+  [(set_attr \"itanium_class\" \"unknown\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_expand \"reload_inti\"\n@@ -789,7 +810,7 @@\n   (%J2) getf.s %0 = %F1\n   (%J2) setf.s %0 = %1\n   (%J2) mov %0 = %1\"\n-  [(set_attr \"type\" \"F,M,M,A\")\n+  [(set_attr \"itanium_class\" \"fmisc,frfr,tofr,ialu\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"*movsf_internal_astep\"\n@@ -805,7 +826,7 @@\n   mov %0 = %1\n   ld4%O1 %0 = %1%P1\n   st4%Q0 %0 = %1%P0\"\n-  [(set_attr \"type\" \"F,M,M,M,M,A,M,M\")\n+  [(set_attr \"itanium_class\" \"fmisc,fld,stf,frfr,tofr,ialu,ld,st\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"*movsf_internal\"\n@@ -821,7 +842,7 @@\n   mov %0 = %1\n   ld4%O1 %0 = %1%P1\n   st4%Q0 %0 = %1%P0\"\n-  [(set_attr \"type\" \"F,M,M,M,M,A,M,M\")])\n+  [(set_attr \"itanium_class\" \"fmisc,fld,stf,frfr,tofr,ialu,ld,st\")])\n \n (define_expand \"movdf\"\n   [(set (match_operand:DF 0 \"general_operand\" \"\")\n@@ -848,7 +869,7 @@\n   (%J2) getf.d %0 = %F1\n   (%J2) setf.d %0 = %1\n   (%J2) mov %0 = %1\"\n-  [(set_attr \"type\" \"F,M,M,A\")\n+  [(set_attr \"itanium_class\" \"fmisc,frfr,tofr,ialu\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"*movdf_internal_astep\"\n@@ -864,7 +885,7 @@\n   mov %0 = %1\n   ld8%O1 %0 = %1%P1\n   st8%Q0 %0 = %1%P0\"\n-  [(set_attr \"type\" \"F,M,M,M,M,A,M,M\")\n+  [(set_attr \"itanium_class\" \"fmisc,fld,stf,frfr,tofr,ialu,ld,st\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"*movdf_internal\"\n@@ -880,7 +901,7 @@\n   mov %0 = %1\n   ld8%O1 %0 = %1%P1\n   st8%Q0 %0 = %1%P0\"\n-  [(set_attr \"type\" \"F,M,M,M,M,A,M,M\")])\n+  [(set_attr \"itanium_class\" \"fmisc,fld,stf,frfr,tofr,ialu,ld,st\")])\n \n ;; With no offsettable memory references, we've got to have a scratch\n ;; around to play with the second word if the variable winds up in GRs.\n@@ -966,7 +987,7 @@\n \t  (match_operand:TF 1 \"nonmemory_operand\" \"fG\")))]\n   \"TARGET_A_STEP && ia64_move_ok (operands[0], operands[1])\"\n   \"(%J2) mov %0 = %F1\"\n-  [(set_attr \"type\" \"F\")\n+  [(set_attr \"itanium_class\" \"fmisc\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"*movtf_internal_astep\"\n@@ -977,7 +998,7 @@\n   mov %0 = %F1\n   ldfe %0 = %1%P1\n   stfe %0 = %F1%P0\"\n-  [(set_attr \"type\" \"F,M,M\")\n+  [(set_attr \"itanium_class\" \"fmisc,fld,stf\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"*movtf_internal\"\n@@ -988,7 +1009,7 @@\n   mov %0 = %F1\n   ldfe %0 = %1%P1\n   stfe %0 = %F1%P0\"\n-  [(set_attr \"type\" \"F,M,M\")])\n+  [(set_attr \"itanium_class\" \"fmisc,fld,stf\")])\n \f\n ;; ::::::::::::::::::::\n ;; ::\n@@ -1003,14 +1024,14 @@\n \t(sign_extend:DI (match_operand:QI 1 \"gr_register_operand\" \"r\")))]\n   \"\"\n   \"sxt1 %0 = %1\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"xtd\")])\n \n (define_insn \"extendhidi2\"\n   [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n \t(sign_extend:DI (match_operand:HI 1 \"gr_register_operand\" \"r\")))]\n   \"\"\n   \"sxt2 %0 = %1\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"xtd\")])\n \n (define_insn \"extendsidi2\"\n   [(set (match_operand:DI 0 \"grfr_register_operand\" \"=r,?f\")\n@@ -1019,7 +1040,7 @@\n   \"@\n    sxt4 %0 = %1\n    fsxt.r %0 = %1, %1%B0\"\n-  [(set_attr \"type\" \"I,F\")])\n+  [(set_attr \"itanium_class\" \"xtd,fmisc\")])\n \n ;; Unsigned conversions from a smaller integer to a larger integer\n \n@@ -1030,7 +1051,7 @@\n   \"@\n    zxt1 %0 = %1\n    ld1%O1 %0 = %1%P1\"\n-  [(set_attr \"type\" \"I,M\")])\n+  [(set_attr \"itanium_class\" \"xtd,ld\")])\n \n (define_insn \"zero_extendhidi2\"\n   [(set (match_operand:DI 0 \"gr_register_operand\" \"=r,r\")\n@@ -1039,7 +1060,7 @@\n   \"@\n    zxt2 %0 = %1\n    ld2%O1 %0 = %1%P1\"\n-  [(set_attr \"type\" \"I,M\")])\n+  [(set_attr \"itanium_class\" \"xtd,ld\")])\n \n (define_insn \"zero_extendsidi2\"\n   [(set (match_operand:DI 0 \"grfr_register_operand\" \"=r,r,?f\")\n@@ -1050,7 +1071,7 @@\n    zxt4 %0 = %1\n    ld4%O1 %0 = %1%P1\n    fmix.r %0 = f0, %1%B0\"\n-  [(set_attr \"type\" \"I,M,F\")])\n+  [(set_attr \"itanium_class\" \"xtd,ld,fmisc\")])\n \n ;; Convert between floating point types of different sizes.\n \n@@ -1081,7 +1102,7 @@\n       DONE;\n     }\n }\"\n-  [(set_attr \"type\" \"F,F,M,M,M,M\")])\n+  [(set_attr \"itanium_class\" \"unknown,fmisc,fld,tofr,stf,frfr\")])\n \n (define_insn_and_split \"extendsftf2\"\n   [(set (match_operand:TF 0 \"fr_nonimmediate_operand\" \"=f,f,f,f,Q\")\n@@ -1104,7 +1125,7 @@\n       DONE;\n     }\n }\"\n-  [(set_attr \"type\" \"F,F,M,M,M\")])\n+  [(set_attr \"itanium_class\" \"unknown,fmisc,fld,frfr,stf\")])\n \n (define_insn_and_split \"extenddftf2\"\n   [(set (match_operand:TF 0 \"fr_nonimmediate_operand\" \"=f,f,f,f,Q\")\n@@ -1127,28 +1148,28 @@\n       DONE;\n     }\n }\"\n-  [(set_attr \"type\" \"F,F,M,M,M\")])\n+  [(set_attr \"itanium_class\" \"unknown,fmisc,fld,frfr,stf\")])\n \n (define_insn \"truncdfsf2\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:SF (match_operand:DF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fnorm.s %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"trunctfsf2\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:SF (match_operand:TF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fnorm.s %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"trunctfdf2\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(float_truncate:DF (match_operand:TF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fnorm.d %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n ;; Convert between signed integer types and floating point.\n \n@@ -1157,36 +1178,36 @@\n \t(float:TF (match_operand:DI 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fcvt.xf %0 = %1\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fix_truncsfdi2\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n \t(fix:DI (match_operand:SF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fcvt.fx.trunc %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fix_truncdfdi2\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n \t(fix:DI (match_operand:DF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fcvt.fx.trunc %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fix_trunctfdi2\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n \t(fix:DI (match_operand:TF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fcvt.fx.trunc %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fix_trunctfdi2_alts\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n \t(fix:DI (match_operand:TF 1 \"fr_register_operand\" \"f\")))\n    (use (match_operand:SI 2 \"const_int_operand\" \"\"))]\n   \"\"\n   \"fcvt.fx.trunc.s%2 %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n ;; Convert between unsigned integer types and floating point.\n \n@@ -1195,50 +1216,50 @@\n \t(unsigned_float:SF (match_operand:DI 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fcvt.xuf.s %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"floatunsdidf2\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(unsigned_float:DF (match_operand:DI 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fcvt.xuf.d %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"floatunsditf2\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(unsigned_float:TF (match_operand:DI 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fcvt.xuf %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fixuns_truncsfdi2\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n \t(unsigned_fix:DI (match_operand:SF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fcvt.fxu.trunc %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fixuns_truncdfdi2\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n \t(unsigned_fix:DI (match_operand:DF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fcvt.fxu.trunc %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fixuns_trunctfdi2\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n \t(unsigned_fix:DI (match_operand:TF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fcvt.fxu.trunc %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fcvtfx\")])\n \n (define_insn \"fixuns_trunctfdi2_alts\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n \t(unsigned_fix:DI (match_operand:TF 1 \"fr_register_operand\" \"f\")))\n    (use (match_operand:SI 2 \"const_int_operand\" \"\"))]\n   \"\"\n   \"fcvt.fxu.trunc.s%2 %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fcvtfx\")])\n \f\n ;; ::::::::::::::::::::\n ;; ::\n@@ -1253,7 +1274,7 @@\n \t\t\t (match_operand:DI 3 \"const_int_operand\" \"n\")))]\n   \"\"\n   \"extr %0 = %1, %3, %2\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"ishf\")])\n \n (define_insn \"extzv\"\n   [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n@@ -1262,7 +1283,7 @@\n \t\t\t (match_operand:DI 3 \"const_int_operand\" \"n\")))]\n   \"\"\n   \"extr.u %0 = %1, %3, %2\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"ishf\")])\n \n ;; Insert a bit field.\n ;; Can have 3 operands, source1 (inserter), source2 (insertee), dest.\n@@ -1357,7 +1378,7 @@\n   \"(gr_register_operand (operands[3], DImode) && INTVAL (operands[1]) <= 16)\n    || operands[3] == const0_rtx || operands[3] == constm1_rtx\"\n   \"dep %0 = %3, %0, %2, %1\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"ishf\")])\n \n ;; Combine doesn't like to create bitfield insertions into zero.\n (define_insn \"*depz_internal\"\n@@ -1372,7 +1393,7 @@\n   operands[3] = GEN_INT (ia64_depz_field_mask (operands[3], operands[2]));\n   return \\\"%,dep.z %0 = %1, %2, %3\\\";\n }\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"ishf\")])\n \n (define_insn \"shift_mix4left\"\n   [(set (zero_extract:DI (match_operand:DI 0 \"gr_register_operand\" \"+r\")\n@@ -1381,7 +1402,7 @@\n    (clobber (match_operand:DI 2 \"gr_register_operand\" \"=r\"))]\n   \"\"\n   \"#\"\n-  [(set_attr \"type\" \"unknown\")])\n+  [(set_attr \"itanium_class\" \"unknown\")])\n \n (define_split\n   [(set (zero_extract:DI (match_operand:DI 0 \"register_operand\" \"\")\n@@ -1413,15 +1434,15 @@\n \t\t     (const_int 32)))]\n   \"\"\n   \"mix4.l %0 = %0, %r1\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"mmshf\")])\n \n (define_insn \"mix4right\"\n   [(set (zero_extract:DI (match_operand:DI 0 \"gr_register_operand\" \"+r\")\n \t\t\t (const_int 32) (const_int 32))\n \t(match_operand:DI 1 \"gr_reg_or_0_operand\" \"rO\"))]\n   \"\"\n   \"mix4.r %0 = %r1, %0\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"mmshf\")])\n \n ;; This is used by the rotrsi3 pattern.\n \n@@ -1433,7 +1454,7 @@\n \t\t\t   (const_int 32))))]\n   \"\"\n   \"mix4.r %0 = %2, %1\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"mmshf\")])\n \n \f\n ;; ::::::::::::::::::::\n@@ -1458,7 +1479,7 @@\n      (set (match_dup 0) (and:BI (ne:BI (const_int 0) (const_int 0))\n \t\t\t\t(match_dup 0))))]\n   \"\"\n-  [(set_attr \"type\" \"unknown,I,A\")])\n+  [(set_attr \"itanium_class\" \"unknown,tbit,ilog\")])\n \n (define_insn_and_split \"*andcmbi3\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c,c,r\")\n@@ -1476,7 +1497,7 @@\n      (set (match_dup 0) (and:BI (ne:BI (const_int 0) (const_int 0))\n \t\t\t\t(match_dup 0))))]\n   \"\"\n-  [(set_attr \"type\" \"unknown,I,A\")])\n+  [(set_attr \"itanium_class\" \"unknown,tbit,ilog\")])\n \n (define_insn_and_split \"iorbi3\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c,c,r\")\n@@ -1494,7 +1515,7 @@\n      (set (match_dup 0) (ior:BI (eq:BI (const_int 0) (const_int 0))\n \t\t\t\t(match_dup 0))))]\n   \"\"\n-  [(set_attr \"type\" \"unknown,I,A\")])\n+  [(set_attr \"itanium_class\" \"unknown,tbit,ilog\")])\n \n (define_insn_and_split \"*iorcmbi3\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c,c\")\n@@ -1511,7 +1532,7 @@\n      (set (match_dup 0) (ior:BI (eq:BI (const_int 0) (const_int 0))\n \t\t\t\t(match_dup 0))))]\n   \"\"\n-  [(set_attr \"type\" \"unknown,I\")])\n+  [(set_attr \"itanium_class\" \"unknown,tbit\")])\n \n (define_insn \"one_cmplbi2\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c,r,c,&c\")\n@@ -1523,7 +1544,7 @@\n    xor %0 = 1, %1\n    #\n    #\"\n-  [(set_attr \"type\" \"I,A,unknown,unknown\")])\n+  [(set_attr \"itanium_class\" \"tbit,ilog,unknown,unknown\")])\n \n (define_split\n   [(set (match_operand:BI 0 \"register_operand\" \"\")\n@@ -1564,7 +1585,7 @@\n \t\t(match_operand:BI 1 \"register_operand\" \"0\")))]\n   \"\"\n   \"cmp4.%C4.and.orcm %0, %I0 = %3, %r2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n (define_insn \"*cmpsi_and_1\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1574,7 +1595,7 @@\n \t\t(match_operand:BI 1 \"register_operand\" \"0\")))]\n   \"\"\n   \"cmp4.%C3.and.orcm %0, %I0 = r0, %2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n (define_insn \"*cmpsi_andnot_0\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1584,7 +1605,7 @@\n \t\t(match_operand:BI 1 \"register_operand\" \"0\")))]\n   \"\"\n   \"cmp4.%C4.or.andcm %I0, %0 = %3, %r2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n (define_insn \"*cmpsi_andnot_1\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1594,7 +1615,7 @@\n \t\t(match_operand:BI 1 \"register_operand\" \"0\")))]\n   \"\"\n   \"cmp4.%C3.or.andcm %I0, %0 = r0, %2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n (define_insn \"*cmpdi_and_0\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1604,7 +1625,7 @@\n \t\t(match_operand:BI 1 \"register_operand\" \"0\")))]\n   \"\"\n   \"cmp.%C4.and.orcm %0, %I0 = %3, %2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n (define_insn \"*cmpdi_and_1\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1614,7 +1635,7 @@\n \t\t(match_operand:BI 1 \"register_operand\" \"0\")))]\n   \"\"\n   \"cmp.%C3.and.orcm %0, %I0 = r0, %2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n (define_insn \"*cmpdi_andnot_0\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1624,7 +1645,7 @@\n \t\t(match_operand:BI 1 \"register_operand\" \"0\")))]\n   \"\"\n   \"cmp.%C4.or.andcm %I0, %0 = %3, %2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n (define_insn \"*cmpdi_andnot_1\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1634,7 +1655,7 @@\n \t\t(match_operand:BI 1 \"register_operand\" \"0\")))]\n   \"\"\n   \"cmp.%C3.or.andcm %I0, %0 = r0, %2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n (define_insn \"*tbit_and_0\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1644,7 +1665,7 @@\n \t\t(match_operand:BI 3 \"register_operand\" \"0\")))]\n   \"\"\n   \"tbit.nz.and.orcm %0, %I0 = %1, 0\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"tbit\")])\n \n (define_insn \"*tbit_and_1\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1654,7 +1675,7 @@\n \t\t(match_operand:BI 3 \"register_operand\" \"0\")))]\n   \"\"\n   \"tbit.z.and.orcm %0, %I0 = %1, 0\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"tbit\")])\n \n (define_insn \"*tbit_and_2\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1666,7 +1687,7 @@\n \t\t(match_operand:BI 3 \"register_operand\" \"0\")))]\n   \"\"\n   \"tbit.nz.and.orcm %0, %I0 = %1, %2\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"tbit\")])\n \n (define_insn \"*tbit_and_3\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1678,7 +1699,7 @@\n \t\t(match_operand:BI 3 \"register_operand\" \"0\")))]\n   \"\"\n   \"tbit.z.and.orcm %0, %I0 = %1, %2\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"tbit\")])\n \n (define_insn \"*cmpsi_or_0\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1688,7 +1709,7 @@\n \t\t(match_operand:BI 1 \"register_operand\" \"0\")))]\n   \"\"\n   \"cmp4.%C4.or.andcm %0, %I0 = %3, %r2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n (define_insn \"*cmpsi_or_1\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1698,7 +1719,7 @@\n \t\t(match_operand:BI 1 \"register_operand\" \"0\")))]\n   \"\"\n   \"cmp4.%C3.or.andcm %0, %I0 = r0, %2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n (define_insn \"*cmpsi_orcm_0\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1708,7 +1729,7 @@\n \t\t(match_operand:BI 1 \"register_operand\" \"0\")))]\n   \"\"\n   \"cmp4.%C4.and.orcm %I0, %0 = %3, %r2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n (define_insn \"*cmpsi_orcm_1\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1718,7 +1739,7 @@\n \t\t(match_operand:BI 1 \"register_operand\" \"0\")))]\n   \"\"\n   \"cmp4.%C3.and.orcm %I0, %0 = r0, %2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n (define_insn \"*cmpdi_or_0\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1728,7 +1749,7 @@\n \t\t(match_operand:BI 1 \"register_operand\" \"0\")))]\n   \"\"\n   \"cmp.%C4.or.andcm %0, %I0 = %3, %2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n (define_insn \"*cmpdi_or_1\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1738,7 +1759,7 @@\n \t\t(match_operand:BI 1 \"register_operand\" \"0\")))]\n   \"\"\n   \"cmp.%C3.or.andcm %0, %I0 = r0, %2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n (define_insn \"*cmpdi_orcm_0\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1748,7 +1769,7 @@\n \t\t(match_operand:BI 1 \"register_operand\" \"0\")))]\n   \"\"\n   \"cmp.%C4.and.orcm %I0, %0 = %3, %2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n (define_insn \"*cmpdi_orcm_1\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1758,7 +1779,7 @@\n \t\t(match_operand:BI 1 \"register_operand\" \"0\")))]\n   \"\"\n   \"cmp.%C3.and.orcm %I0, %0 = r0, %2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n (define_insn \"*tbit_or_0\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1768,7 +1789,7 @@\n \t\t(match_operand:BI 3 \"register_operand\" \"0\")))]\n   \"\"\n   \"tbit.nz.or.andcm %0, %I0 = %1, 0\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"tbit\")])\n \n (define_insn \"*tbit_or_1\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1778,7 +1799,7 @@\n \t\t(match_operand:BI 3 \"register_operand\" \"0\")))]\n   \"\"\n   \"tbit.z.or.andcm %0, %I0 = %1, 0\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"tbit\")])\n \n (define_insn \"*tbit_or_2\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1790,7 +1811,7 @@\n \t\t(match_operand:BI 3 \"register_operand\" \"0\")))]\n   \"\"\n   \"tbit.nz.or.andcm %0, %I0 = %1, %2\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"tbit\")])\n \n (define_insn \"*tbit_or_3\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -1802,7 +1823,7 @@\n \t\t(match_operand:BI 3 \"register_operand\" \"0\")))]\n   \"\"\n   \"tbit.z.or.andcm %0, %I0 = %1, %2\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"tbit\")])\n \n ;; Transform test of and/or of setcc into parallel comparisons.\n \n@@ -1962,7 +1983,7 @@\n \t\t (match_operand:HI 2 \"gr_register_operand\" \"r\")))]\n   \"\"\n   \"pmpy2.r %0 = %1, %2\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"mmmul\")])\n \n \f\n ;; ::::::::::::::::::::\n@@ -1980,7 +2001,7 @@\n   add %0 = %1, %2\n   adds %0 = %2, %1\n   addl %0 = %2, %1\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n \n (define_insn \"*addsi3_plus1\"\n   [(set (match_operand:SI 0 \"gr_register_operand\" \"=r\")\n@@ -1989,7 +2010,7 @@\n \t\t (const_int 1)))]\n   \"\"\n   \"add %0 = %1, %2, 1\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n \n (define_insn \"*addsi3_plus1_alt\"\n   [(set (match_operand:SI 0 \"gr_register_operand\" \"=r\")\n@@ -1998,7 +2019,7 @@\n \t\t (const_int 1)))]\n   \"\"\n   \"add %0 = %1, %1, 1\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n \n (define_insn \"*addsi3_shladd\"\n   [(set (match_operand:SI 0 \"gr_register_operand\" \"=r\")\n@@ -2007,31 +2028,33 @@\n \t\t (match_operand:SI 3 \"gr_register_operand\" \"r\")))]\n   \"\"\n   \"shladd %0 = %1, %S2, %3\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n \n (define_insn \"subsi3\"\n   [(set (match_operand:SI 0 \"gr_register_operand\" \"=r\")\n \t(minus:SI (match_operand:SI 1 \"gr_reg_or_8bit_operand\" \"rK\")\n \t\t  (match_operand:SI 2 \"gr_register_operand\" \"r\")))]\n   \"\"\n   \"sub %0 = %1, %2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n \n (define_insn \"*subsi3_minus1\"\n   [(set (match_operand:SI 0 \"gr_register_operand\" \"=r\")\n \t(plus:SI (not:SI (match_operand:SI 1 \"gr_register_operand\" \"r\"))\n \t\t (match_operand:SI 2 \"gr_register_operand\" \"r\")))]\n   \"\"\n   \"sub %0 = %2, %1, 1\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n+\n+;; ??? Could add maddsi3 patterns patterned after the madddi3 patterns.\n \n (define_insn \"mulsi3\"\n   [(set (match_operand:SI 0 \"fr_register_operand\" \"=f\")\n \t(mult:SI (match_operand:SI 1 \"grfr_register_operand\" \"f\")\n \t\t (match_operand:SI 2 \"grfr_register_operand\" \"f\")))]\n   \"\"\n   \"xmpy.l %0 = %1, %2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"xmpy\")])\n \n (define_insn \"maddsi4\"\n   [(set (match_operand:SI 0 \"fr_register_operand\" \"=f\")\n@@ -2040,14 +2063,14 @@\n \t\t (match_operand:SI 3 \"grfr_register_operand\" \"f\")))]\n   \"\"\n   \"xma.l %0 = %1, %2, %3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"xmpy\")])\n \n (define_insn \"negsi2\"\n   [(set (match_operand:SI 0 \"gr_register_operand\" \"=r\")\n \t(neg:SI (match_operand:SI 1 \"gr_register_operand\" \"r\")))]\n   \"\"\n   \"sub %0 = r0, %1\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n \n (define_expand \"abssi2\"\n   [(set (match_dup 2)\n@@ -2296,7 +2319,7 @@\n   add %0 = %1, %2\n   adds %0 = %2, %1\n   addl %0 = %2, %1\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n \n (define_insn \"*adddi3_plus1\"\n   [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n@@ -2305,7 +2328,7 @@\n \t\t (const_int 1)))]\n   \"\"\n   \"add %0 = %1, %2, 1\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n \n ;; This has some of the same problems as shladd.  We let the shladd\n ;; eliminator hack handle it, which results in the 1 being forced into\n@@ -2317,23 +2340,23 @@\n \t\t (const_int 1)))]\n   \"\"\n   \"add %0 = %1, %1, 1\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n \n (define_insn \"subdi3\"\n   [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n \t(minus:DI (match_operand:DI 1 \"gr_reg_or_8bit_operand\" \"rK\")\n \t\t  (match_operand:DI 2 \"gr_register_operand\" \"r\")))]\n   \"\"\n   \"sub %0 = %1, %2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n \n (define_insn \"*subdi3_minus1\"\n   [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n \t(plus:DI (not:DI (match_operand:DI 1 \"gr_register_operand\" \"r\"))\n \t\t (match_operand:DI 2 \"gr_register_operand\" \"r\")))]\n   \"\"\n   \"sub %0 = %2, %1, 1\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n \n ;; ??? Use grfr instead of fr because of virtual register elimination\n ;; and silly test cases multiplying by the frame pointer.\n@@ -2343,7 +2366,7 @@\n \t\t (match_operand:DI 2 \"grfr_register_operand\" \"f\")))]\n   \"\"\n   \"xmpy.l %0 = %1, %2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"xmpy\")])\n \n ;; ??? If operand 3 is an eliminable reg, then register elimination causes the\n ;; same problem that we have with shladd below.  Unfortunately, this case is\n@@ -2364,7 +2387,7 @@\n    (clobber (match_scratch:DI 4 \"=X\"))]\n   \"\"\n   \"xma.l %0 = %1, %2, %3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"xmpy\")])\n \n ;; This can be created by register elimination if operand3 of shladd is an\n ;; eliminable register or has reg_equiv_constant set.\n@@ -2383,7 +2406,7 @@\n    (clobber (match_scratch:DI 5 \"=f\"))]\n   \"reload_in_progress\"\n   \"#\"\n-  [(set_attr \"type\" \"unknown\")])\n+  [(set_attr \"itanium_class\" \"unknown\")])\n \n ;; ??? Need to emit an instruction group barrier here because this gets split\n ;; after md_reorg.\n@@ -2419,7 +2442,7 @@\n \t  (const_int 64))))]\n   \"\"\n   \"xmpy.h %0 = %1, %2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"xmpy\")])\n \n (define_insn \"umuldi3_highpart\"\n   [(set (match_operand:DI 0 \"fr_register_operand\" \"=f\")\n@@ -2432,14 +2455,14 @@\n \t  (const_int 64))))]\n   \"\"\n   \"xmpy.hu %0 = %1, %2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"xmpy\")])\n \n (define_insn \"negdi2\"\n   [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n \t(neg:DI (match_operand:DI 1 \"gr_register_operand\" \"r\")))]\n   \"\"\n   \"sub %0 = r0, %1\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n \n (define_expand \"absdi2\"\n   [(set (match_dup 2)\n@@ -2531,7 +2554,7 @@\n \t(unspec:DI [(match_operand:DI 1 \"gr_register_operand\" \"r\")] 8))]\n   \"\"\n   \"popcnt %0 = %1\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"mmmul\")])\n \n (define_expand \"divdi3\"\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n@@ -2748,60 +2771,60 @@\n \t\t (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fadd.s %0 = %1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"subsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(minus:SF (match_operand:SF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t  (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fsub.s %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"mulsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(mult:SF (match_operand:SF 1 \"fr_register_operand\" \"%f\")\n \t\t (match_operand:SF 2 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fmpy.s %0 = %1, %2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"abssf2\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(abs:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fabs %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"negsf2\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(neg:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fneg %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"*nabssf2\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(neg:SF (abs:SF (match_operand:SF 1 \"fr_register_operand\" \"f\"))))]\n   \"\"\n   \"fnegabs %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"minsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(smin:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n \t\t (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fmin %0 = %1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"maxsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(smax:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n \t\t (match_operand:SF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fmax %0 = %1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"*maddsf4\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n@@ -2810,7 +2833,7 @@\n \t\t (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fma.s %0 = %1, %2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*msubsf4\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n@@ -2819,15 +2842,15 @@\n \t\t  (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fms.s %0 = %1, %2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmulsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n \t(neg:SF (mult:SF (match_operand:SF 1 \"fr_register_operand\" \"f\")\n \t\t\t (match_operand:SF 2 \"fr_register_operand\" \"f\"))))]\n   \"\"\n   \"fnmpy.s %0 = %1, %2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n ;; ??? Is it possible to canonicalize this as (minus (reg) (mult))?\n \n@@ -2839,7 +2862,7 @@\n \t\t (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fnma.s %0 = %1, %2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_expand \"divsf3\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"\")\n@@ -2974,7 +2997,7 @@\n \t\t (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fadd.d %0 = %1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*adddf3_trunc\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n@@ -2983,15 +3006,15 @@\n \t\t   (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fadd.s %0 = %1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"subdf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(minus:DF (match_operand:DF 1 \"fr_reg_or_fp01_operand\" \"fG\")\n \t\t  (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fsub.d %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*subdf3_trunc\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n@@ -3000,15 +3023,15 @@\n \t\t    (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fsub.s %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"muldf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n \t\t (match_operand:DF 2 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fmpy.d %0 = %1, %2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*muldf3_trunc\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n@@ -3017,44 +3040,44 @@\n \t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\"))))]\n   \"\"\n   \"fmpy.s %0 = %1, %2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"absdf2\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(abs:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fabs %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"negdf2\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(neg:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")))]\n   \"\"\n   \"fneg %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"*nabsdf2\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(neg:DF (abs:DF (match_operand:DF 1 \"fr_register_operand\" \"f\"))))]\n   \"\"\n   \"fnegabs %0 = %1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"mindf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(smin:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n \t\t (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fmin %0 = %1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"maxdf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(smax:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n \t\t (match_operand:DF 2 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fmax %0 = %1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"*madddf4\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n@@ -3063,7 +3086,7 @@\n \t\t (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fma.d %0 = %1, %2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*madddf4_trunc\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n@@ -3073,7 +3096,7 @@\n \t\t   (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fma.s %0 = %1, %2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*msubdf4\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n@@ -3082,7 +3105,7 @@\n \t\t  (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fms.d %0 = %1, %2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*msubdf4_trunc\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n@@ -3092,15 +3115,15 @@\n \t\t    (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fms.s %0 = %1, %2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmuldf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n \t(neg:DF (mult:DF (match_operand:DF 1 \"fr_register_operand\" \"f\")\n \t\t\t (match_operand:DF 2 \"fr_register_operand\" \"f\"))))]\n   \"\"\n   \"fnmpy.d %0 = %1, %2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmuldf3_trunc\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n@@ -3109,7 +3132,7 @@\n \t\t\t   (match_operand:DF 2 \"fr_register_operand\" \"f\")))))]\n   \"\"\n   \"fnmpy.s %0 = %1, %2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n ;; ??? Is it possible to canonicalize this as (minus (reg) (mult))?\n \n@@ -3121,7 +3144,7 @@\n \t\t (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fnma.d %0 = %1, %2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmadddf4_alts\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n@@ -3132,7 +3155,7 @@\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n   \"fnma.d.s%4 %0 = %1, %2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmadddf4_trunc\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n@@ -3143,7 +3166,7 @@\n \t\t   (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fnma.s %0 = %1, %2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_expand \"divdf3\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"\")\n@@ -3314,7 +3337,7 @@\n \t\t (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fadd %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*addtf3_truncsf\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n@@ -3323,7 +3346,7 @@\n \t\t   (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fadd.s %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*addtf3_truncdf\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n@@ -3332,15 +3355,15 @@\n \t\t   (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fadd.d %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"subtf3\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(minus:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t  (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fsub %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*subtf3_truncsf\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n@@ -3349,7 +3372,7 @@\n \t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fsub.s %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*subtf3_truncdf\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n@@ -3358,15 +3381,15 @@\n \t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fsub.d %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"multf3\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fmpy %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*multf3_truncsf\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n@@ -3375,7 +3398,7 @@\n \t\t   (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fmpy.s %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*multf3_truncdf\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n@@ -3384,7 +3407,7 @@\n \t\t   (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fmpy.d %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*multf3_alts\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n@@ -3393,7 +3416,7 @@\n    (use (match_operand:SI 3 \"const_int_operand\" \"\"))]\n   \"\"\n   \"fmpy.s%3 %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*multf3_truncsf_alts\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n@@ -3403,7 +3426,7 @@\n    (use (match_operand:SI 3 \"const_int_operand\" \"\"))]\n   \"\"\n   \"fmpy.s.s%3 %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*multf3_truncdf_alts\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n@@ -3413,44 +3436,44 @@\n    (use (match_operand:SI 3 \"const_int_operand\" \"\"))]\n   \"\"\n   \"fmpy.d.s%3 %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"abstf2\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(abs:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fabs %0 = %F1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"negtf2\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(neg:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fneg %0 = %F1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"*nabstf2\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(neg:TF (abs:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fnegabs %0 = %F1%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"mintf3\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(smin:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fmin %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"maxtf3\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(smax:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fmax %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmisc\")])\n \n (define_insn \"*maddtf4\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n@@ -3459,7 +3482,7 @@\n \t\t (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fma %0 = %F1, %F2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*maddtf4_truncsf\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n@@ -3469,7 +3492,7 @@\n \t\t   (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fma.s %0 = %F1, %F2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*maddtf4_truncdf\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n@@ -3479,7 +3502,7 @@\n \t\t   (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fma.d %0 = %F1, %F2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*maddtf4_alts\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n@@ -3489,7 +3512,7 @@\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n   \"fma.s%4 %0 = %F1, %F2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*maddtf4_alts_truncdf\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n@@ -3500,7 +3523,7 @@\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n   \"fma.d.s%4 %0 = %F1, %F2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*msubtf4\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n@@ -3509,7 +3532,7 @@\n \t\t  (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fms %0 = %F1, %F2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*msubtf4_truncsf\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n@@ -3519,7 +3542,7 @@\n \t\t    (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fms.s %0 = %F1, %F2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*msubtf4_truncdf\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n@@ -3529,15 +3552,15 @@\n \t\t    (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fms.d %0 = %F1, %F2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmultf3\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n \t(neg:TF (mult:TF (match_operand:TF 1 \"tfreg_or_fp01_operand\" \"fG\")\n \t\t\t (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fnmpy %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmultf3_truncsf\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n@@ -3547,7 +3570,7 @@\n \t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))))]\n   \"\"\n   \"fnmpy.s %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmultf3_truncdf\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n@@ -3557,7 +3580,7 @@\n \t\t    (match_operand:TF 2 \"tfreg_or_fp01_operand\" \"fG\")))))]\n   \"\"\n   \"fnmpy.d %0 = %F1, %F2%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n ;; ??? Is it possible to canonicalize this as (minus (reg) (mult))?\n \n@@ -3569,7 +3592,7 @@\n \t\t (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\")))]\n   \"\"\n   \"fnma %0 = %F1, %F2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmaddtf4_truncsf\"\n   [(set (match_operand:SF 0 \"fr_register_operand\" \"=f\")\n@@ -3580,7 +3603,7 @@\n \t\t   (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fnma.s %0 = %F1, %F2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmaddtf4_truncdf\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n@@ -3591,7 +3614,7 @@\n \t\t   (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\"))))]\n   \"\"\n   \"fnma.d %0 = %F1, %F2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmaddtf4_alts\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"=f\")\n@@ -3602,7 +3625,7 @@\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n   \"fnma.s%4 %0 = %F1, %F2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_insn \"*nmaddtf4_truncdf_alts\"\n   [(set (match_operand:DF 0 \"fr_register_operand\" \"=f\")\n@@ -3615,7 +3638,7 @@\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n   \"fnma.d.s%4 %0 = %F1, %F2, %F3%B0\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fmac\")])\n \n (define_expand \"divtf3\"\n   [(set (match_operand:TF 0 \"fr_register_operand\" \"\")\n@@ -3801,7 +3824,7 @@\n    (use (match_operand:SI 4 \"const_int_operand\" \"\"))]\n   \"\"\n   \"frcpa.s%4 %0, %1 = %2, %3\"\n-  [(set_attr \"type\" \"F\")\n+  [(set_attr \"itanium_class\" \"fmisc\")\n    (set_attr \"predicable\" \"no\")])\n \f\n ;; ::::::::::::::::::::\n@@ -3836,7 +3859,7 @@\n    shladd %0 = %1, %2, r0\n    dep.z %0 = %1, %2, %E2\n    shl %0 = %1, %2\"\n-  [(set_attr \"type\" \"A,I,I\")])\n+  [(set_attr \"itanium_class\" \"ialu,ishf,mmshf\")])\n \n (define_expand \"ashrsi3\"\n   [(set (match_operand:SI 0 \"gr_register_operand\" \"\")\n@@ -3953,14 +3976,15 @@\n ;; ::::::::::::::::::::\n \n (define_insn \"ashldi3\"\n-  [(set (match_operand:DI 0 \"gr_register_operand\" \"=r,r\")\n-\t(ashift:DI (match_operand:DI 1 \"gr_register_operand\" \"r,r\")\n-\t\t   (match_operand:DI 2 \"gr_reg_or_6bit_operand\" \"R,rM\")))]\n+  [(set (match_operand:DI 0 \"gr_register_operand\" \"=r,r,r\")\n+\t(ashift:DI (match_operand:DI 1 \"gr_register_operand\" \"r,r,r\")\n+\t\t   (match_operand:DI 2 \"gr_reg_or_6bit_operand\" \"R,r,rM\")))]\n   \"\"\n   \"@\n    shladd %0 = %1, %2, r0\n+   shl %0 = %1, %2\n    shl %0 = %1, %2\"\n-  [(set_attr \"type\" \"A,I\")])\n+  [(set_attr \"itanium_class\" \"ialu,mmshf,mmshfi\")])\n \n ;; ??? Maybe combine this with the multiply and add instruction?\n \n@@ -3971,7 +3995,7 @@\n \t\t (match_operand:DI 3 \"gr_register_operand\" \"r\")))]\n   \"\"\n   \"shladd %0 = %1, %S2, %3\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n \n ;; This can be created by register elimination if operand3 of shladd is an\n ;; eliminable register or has reg_equiv_constant set.\n@@ -3994,23 +4018,27 @@\n \t\t\t       (match_dup 3)))\n    (set (match_dup 0) (plus:DI (match_dup 0) (match_dup 4)))]\n   \"\"\n-  [(set_attr \"type\" \"unknown\")])\n+  [(set_attr \"itanium_class\" \"unknown\")])\n \n (define_insn \"ashrdi3\"\n-  [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n-\t(ashiftrt:DI (match_operand:DI 1 \"gr_register_operand\" \"r\")\n-\t\t     (match_operand:DI 2 \"gr_reg_or_6bit_operand\" \"rM\")))]\n+  [(set (match_operand:DI 0 \"gr_register_operand\" \"=r,r\")\n+\t(ashiftrt:DI (match_operand:DI 1 \"gr_register_operand\" \"r,r\")\n+\t\t     (match_operand:DI 2 \"gr_reg_or_6bit_operand\" \"r,rM\")))]\n   \"\"\n-  \"shr %0 = %1, %2\"\n-  [(set_attr \"type\" \"I\")])\n+  \"@\n+   shr %0 = %1, %2\n+   shr %0 = %1, %2\"\n+  [(set_attr \"itanium_class\" \"mmshf,mmshfi\")])\n \n (define_insn \"lshrdi3\"\n-  [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n-\t(lshiftrt:DI (match_operand:DI 1 \"gr_register_operand\" \"r\")\n-\t\t     (match_operand:DI 2 \"gr_reg_or_6bit_operand\" \"rM\")))]\n+  [(set (match_operand:DI 0 \"gr_register_operand\" \"=r,r\")\n+\t(lshiftrt:DI (match_operand:DI 1 \"gr_register_operand\" \"r,r\")\n+\t\t     (match_operand:DI 2 \"gr_reg_or_6bit_operand\" \"r,rM\")))]\n   \"\"\n-  \"shr.u %0 = %1, %2\"\n-  [(set_attr \"type\" \"I\")])\n+  \"@\n+   shr.u %0 = %1, %2\n+   shr.u %0 = %1, %2\"\n+  [(set_attr \"itanium_class\" \"mmshf,mmshfi\")])\n \n ;; Using a predicate that accepts only constants doesn't work, because optabs\n ;; will load the operand into a register and call the pattern if the predicate\n@@ -4034,7 +4062,7 @@\n \t\t     (match_operand:DI 2 \"shift_count_operand\" \"M\")))]\n   \"\"\n   \"shrp %0 = %1, %1, %2\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"ishf\")])\n \n (define_expand \"rotldi3\"\n   [(set (match_operand:DI 0 \"gr_register_operand\" \"\")\n@@ -4053,7 +4081,7 @@\n \t\t   (match_operand:DI 2 \"shift_count_operand\" \"M\")))]\n   \"\"\n   \"shrp %0 = %1, %1, %e2\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"ishf\")])\n \f\n ;; ::::::::::::::::::::\n ;; ::\n@@ -4080,7 +4108,7 @@\n \t(not:SI (match_operand:SI 1 \"gr_register_operand\" \"r\")))]\n   \"\"\n   \"andcm %0 = -1, %1\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ilog\")])\n \f\n ;; ::::::::::::::::::::\n ;; ::\n@@ -4096,7 +4124,7 @@\n   \"@\n    and %0 = %2, %1\n    fand %0 = %2, %1%B0\"\n-  [(set_attr \"type\" \"A,F\")])\n+  [(set_attr \"itanium_class\" \"ilog,fmisc\")])\n \n (define_insn \"*andnot\"\n   [(set (match_operand:DI 0 \"grfr_register_operand\" \"=r,*f\")\n@@ -4106,7 +4134,7 @@\n   \"@\n    andcm %0 = %2, %1\n    fandcm %0 = %2, %1%B0\"\n-  [(set_attr \"type\" \"A,F\")])\n+  [(set_attr \"itanium_class\" \"ilog,fmisc\")])\n \n (define_insn \"iordi3\"\n   [(set (match_operand:DI 0 \"grfr_register_operand\" \"=r,*f\")\n@@ -4116,7 +4144,7 @@\n   \"@\n    or %0 = %2, %1\n    for %0 = %2, %1%B0\"\n-  [(set_attr \"type\" \"A,F\")])\n+  [(set_attr \"itanium_class\" \"ilog,fmisc\")])\n \n (define_insn \"xordi3\"\n   [(set (match_operand:DI 0 \"grfr_register_operand\" \"=r,*f\")\n@@ -4126,14 +4154,14 @@\n   \"@\n    xor %0 = %2, %1\n    fxor %0 = %2, %1%B0\"\n-  [(set_attr \"type\" \"A,F\")])\n+  [(set_attr \"itanium_class\" \"ilog,fmisc\")])\n \n (define_insn \"one_cmpldi2\"\n   [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n \t(not:DI (match_operand:DI 1 \"gr_register_operand\" \"r\")))]\n   \"\"\n   \"andcm %0 = -1, %1\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ilog\")])\n \f\n ;; ::::::::::::::::::::\n ;; ::\n@@ -4220,7 +4248,7 @@\n \t    (match_operand:SI 3 \"gr_reg_or_8bit_operand\" \"rK\")]))]\n   \"\"\n   \"cmp4.%C1 %0, %I0 = %3, %2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n ;; We use %r3 because it is possible for us to match a 0, and two of the\n ;; unsigned comparisons don't accept immediate operands of zero.\n@@ -4232,7 +4260,7 @@\n \t    (match_operand:SI 3 \"gr_reg_or_8bit_adjusted_operand\" \"rL\")]))]\n   \"\"\n   \"cmp4.%C1 %0, %I0 = %r3, %2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n (define_insn \"*cmpdi_normal\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -4241,7 +4269,7 @@\n \t    (match_operand:DI 3 \"gr_reg_or_8bit_operand\" \"rK\")]))]\n   \"\"\n   \"cmp.%C1 %0, %I0 = %3, %r2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n ;; We use %r3 because it is possible for us to match a 0, and two of the\n ;; unsigned comparisons don't accept immediate operands of zero.\n@@ -4253,7 +4281,7 @@\n \t    (match_operand:DI 3 \"gr_reg_or_8bit_adjusted_operand\" \"rL\")]))]\n   \"\"\n   \"cmp.%C1 %0, %I0 = %r3, %2\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"icmp\")])\n \n (define_insn \"*cmpsf_internal\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -4262,7 +4290,7 @@\n \t    (match_operand:SF 3 \"fr_reg_or_fp01_operand\" \"fG\")]))]\n   \"\"\n   \"fcmp.%D1 %0, %I0 = %F2, %F3\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fcmp\")])\n \n (define_insn \"*cmpdf_internal\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -4271,7 +4299,7 @@\n \t    (match_operand:DF 3 \"fr_reg_or_fp01_operand\" \"fG\")]))]\n   \"\"\n   \"fcmp.%D1 %0, %I0 = %F2, %F3\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fcmp\")])\n \n (define_insn \"*cmptf_internal\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -4280,7 +4308,7 @@\n \t\t    (match_operand:TF 3 \"tfreg_or_fp01_operand\" \"fG\")]))]\n   \"\"\n   \"fcmp.%D1 %0, %I0 = %F2, %F3\"\n-  [(set_attr \"type\" \"F\")])\n+  [(set_attr \"itanium_class\" \"fcmp\")])\n \n ;; ??? Can this pattern be generated?\n \n@@ -4292,7 +4320,7 @@\n \t       (const_int 0)))]\n   \"\"\n   \"tbit.z %0, %I0 = %1, %2\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"tbit\")])\n \n (define_insn \"*bit_one\"\n   [(set (match_operand:BI 0 \"register_operand\" \"=c\")\n@@ -4302,7 +4330,7 @@\n \t       (const_int 0)))]\n   \"\"\n   \"tbit.nz %0, %I0 = %1, %2\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"tbit\")])\n \f\n ;; ::::::::::::::::::::\n ;; ::\n@@ -4415,7 +4443,7 @@\n \t\t      (pc)))]\n   \"\"\n   \"(%J0) br.cond%+ %l2\"\n-  [(set_attr \"type\" \"B\")\n+  [(set_attr \"itanium_class\" \"br\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"*br_false\"\n@@ -4427,7 +4455,7 @@\n \t\t      (label_ref (match_operand 2 \"\" \"\"))))]\n   \"\"\n   \"(%j0) br.cond%+ %l2\"\n-  [(set_attr \"type\" \"B\")\n+  [(set_attr \"itanium_class\" \"br\")\n    (set_attr \"predicable\" \"no\")])\n \f\n ;; ::::::::::::::::::::\n@@ -4463,7 +4491,7 @@\n \t\t\t (plus:DI (match_dup 0) (const_int -1))))]\n   \"\"\n   \"br.cloop.sptk.few %l1\"\n-  [(set_attr \"type\" \"B\")\n+  [(set_attr \"itanium_class\" \"br\")\n    (set_attr \"predicable\" \"no\")])\n \f\n ;; ::::::::::::::::::::\n@@ -4547,7 +4575,7 @@\n    (cond_exec (eq (match_dup 1) (const_int 0))\n      (set (match_dup 0) (const_int 0)))]\n   \"\"\n-  [(set_attr \"type\" \"unknown\")])\n+  [(set_attr \"itanium_class\" \"unknown\")])\n \n (define_insn_and_split \"*seq_internal\"\n   [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n@@ -4561,7 +4589,7 @@\n    (cond_exec (eq (match_dup 1) (const_int 0))\n      (set (match_dup 0) (const_int 1)))]\n   \"\"\n-  [(set_attr \"type\" \"unknown\")])\n+  [(set_attr \"itanium_class\" \"unknown\")])\n \f\n ;; ::::::::::::::::::::\n ;; ::\n@@ -4655,7 +4683,7 @@\n \t  (match_operand:DI 3 \"gr_reg_or_22bit_operand\" \"0,rI\")))]\n   \"\"\n   \"#\"\n-  [(set_attr \"type\" \"A,unknown\")\n+  [(set_attr \"itanium_class\" \"ialu,unknown\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_split\n@@ -4738,7 +4766,7 @@\n \t  (match_operand:SI 2 \"gr_reg_or_22bit_operand\" \"0,rI\")))]\n   \"\"\n   \"#\"\n-  [(set_attr \"type\" \"A,unknown\")\n+  [(set_attr \"itanium_class\" \"ialu,unknown\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_split\n@@ -4881,48 +4909,48 @@\n }\")\n \n (define_insn \"call_nopic\"\n-  [(call (mem:DI (match_operand:DI 0 \"call_operand\" \"bi\"))\n+  [(call (mem:DI (match_operand:DI 0 \"call_operand\" \"b,i\"))\n \t (match_operand 1 \"\" \"\"))\n-   (clobber (match_operand:DI 2 \"register_operand\" \"=b\"))]\n+   (clobber (match_operand:DI 2 \"register_operand\" \"=b,b\"))]\n   \"\"\n   \"br.call%+.many %2 = %0\"\n-  [(set_attr \"type\" \"B\")])\n+  [(set_attr \"itanium_class\" \"br,scall\")])\n \n (define_insn \"call_value_nopic\"\n   [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:DI (match_operand:DI 1 \"call_operand\" \"bi\"))\n+\t(call (mem:DI (match_operand:DI 1 \"call_operand\" \"b,i\"))\n \t      (match_operand 2 \"\" \"\")))\n-   (clobber (match_operand:DI 3 \"register_operand\" \"=b\"))]\n+   (clobber (match_operand:DI 3 \"register_operand\" \"=b,b\"))]\n   \"\"\n   \"br.call%+.many %3 = %1\"\n-  [(set_attr \"type\" \"B\")])\n+  [(set_attr \"itanium_class\" \"br,scall\")])\n \n (define_insn \"sibcall_nopic\"\n-  [(call (mem:DI (match_operand:DI 0 \"call_operand\" \"bi\"))\n+  [(call (mem:DI (match_operand:DI 0 \"call_operand\" \"b,i\"))\n \t (match_operand 1 \"\" \"\"))\n-   (use (match_operand:DI 2 \"register_operand\" \"=b\"))]\n+   (use (match_operand:DI 2 \"register_operand\" \"=b,b\"))]\n   \"\"\n   \"br%+.many %0\"\n-  [(set_attr \"type\" \"B\")])\n+  [(set_attr \"itanium_class\" \"br,scall\")])\n \n (define_insn \"call_pic\"\n-  [(call (mem:DI (match_operand:DI 0 \"call_operand\" \"bi\"))\n+  [(call (mem:DI (match_operand:DI 0 \"call_operand\" \"b,i\"))\n \t (match_operand 1 \"\" \"\"))\n    (use (unspec [(reg:DI 1)] 9))\n-   (clobber (match_operand:DI 2 \"register_operand\" \"=b\"))]\n+   (clobber (match_operand:DI 2 \"register_operand\" \"=b,b\"))]\n   \"\"\n   \"br.call%+.many %2 = %0\"\n-  [(set_attr \"type\" \"B\")])\n+  [(set_attr \"itanium_class\" \"br,scall\")])\n \n (define_insn \"call_value_pic\"\n   [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:DI (match_operand:DI 1 \"call_operand\" \"bi\"))\n+\t(call (mem:DI (match_operand:DI 1 \"call_operand\" \"b,i\"))\n \t      (match_operand 2 \"\" \"\")))\n    (use (unspec [(reg:DI 1)] 9))\n-   (clobber (match_operand:DI 3 \"register_operand\" \"=b\"))]\n+   (clobber (match_operand:DI 3 \"register_operand\" \"=b,b\"))]\n   \"\"\n   \"br.call%+.many %3 = %1\"\n-  [(set_attr \"type\" \"B\")])\n+  [(set_attr \"itanium_class\" \"br,scall\")])\n \n (define_insn \"sibcall_pic\"\n   [(call (mem:DI (match_operand:DI 0 \"call_operand\" \"bi\"))\n@@ -4931,20 +4959,20 @@\n    (use (match_operand:DI 2 \"register_operand\" \"=b\"))]\n   \"\"\n   \"br%+.many %0\"\n-  [(set_attr \"type\" \"B\")])\n+  [(set_attr \"itanium_class\" \"br\")])\n \n (define_insn \"return_internal\"\n   [(return)\n    (use (match_operand:DI 0 \"register_operand\" \"b\"))]\n   \"\"\n   \"br.ret.sptk.many %0\"\n-  [(set_attr \"type\" \"B\")])\n+  [(set_attr \"itanium_class\" \"br\")])\n \n (define_insn \"return\"\n   [(return)]\n   \"ia64_direct_return ()\"\n   \"br.ret.sptk.many rp\"\n-  [(set_attr \"type\" \"B\")])\n+  [(set_attr \"itanium_class\" \"br\")])\n \n (define_insn \"*return_true\"\n   [(set (pc)\n@@ -4955,7 +4983,7 @@\n \t\t      (pc)))]\n   \"ia64_direct_return ()\"\n   \"(%J0) br.ret%+.many rp\"\n-  [(set_attr \"type\" \"B\")\n+  [(set_attr \"itanium_class\" \"br\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"*return_false\"\n@@ -4967,20 +4995,20 @@\n \t\t      (return)))]\n   \"ia64_direct_return ()\"\n   \"(%j0) br.ret%+.many rp\"\n-  [(set_attr \"type\" \"B\")\n+  [(set_attr \"itanium_class\" \"br\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"jump\"\n   [(set (pc) (label_ref (match_operand 0 \"\" \"\")))]\n   \"\"\n   \"br %l0\"\n-  [(set_attr \"type\" \"B\")])\n+  [(set_attr \"itanium_class\" \"br\")])\n \n (define_insn \"indirect_jump\"\n   [(set (pc) (match_operand:DI 0 \"register_operand\" \"b\"))]\n   \"\"\n   \"br %0\"\n-  [(set_attr \"type\" \"B\")])\n+  [(set_attr \"itanium_class\" \"br\")])\n \n (define_expand \"tablejump\"\n   [(match_operand:DI 0 \"register_operand\" \"\")\n@@ -5002,7 +5030,7 @@\n    (use (label_ref (match_operand 1 \"\" \"\")))]\n   \"\"\n   \"br %0\"\n-  [(set_attr \"type\" \"B\")])\n+  [(set_attr \"itanium_class\" \"br\")])\n \n \f\n ;; ::::::::::::::::::::\n@@ -5052,7 +5080,7 @@\n   add %0 = %1, %2\n   adds %0 = %2, %1\n   addl %0 = %2, %1\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n \n ;; This prevents the scheduler from moving the SP restore past FP-relative\n ;; stack accesses.  This is similar to movdi plus the extra set.\n@@ -5063,7 +5091,7 @@\n    (set (match_dup 1) (match_dup 1))]\n   \"\"\n   \"mov %0 = %1\"\n-  [(set_attr \"type\" \"A\")])\n+  [(set_attr \"itanium_class\" \"ialu\")])\n \n ;; Allocate a new register frame.\n \n@@ -5076,7 +5104,7 @@\n    (use (match_operand:DI 4 \"const_int_operand\" \"i\"))]\n   \"\"\n   \"alloc %0 = ar.pfs, %1, %2, %3, %4\"\n-  [(set_attr \"type\" \"M\")\n+  [(set_attr \"itanium_class\" \"syst_m0\")\n    (set_attr \"predicable\" \"no\")])\n \n ;; Modifies ar.unat\n@@ -5095,7 +5123,7 @@\n    (clobber (match_operand:DI 3 \"register_operand\" \"\"))]\n   \"\"\n   \".mem.offset %2, 0\\;st8.spill %0 = %1%P0\"\n-  [(set_attr \"type\" \"M\")])\n+  [(set_attr \"itanium_class\" \"st\")])\n \n ;; Reads ar.unat\n (define_expand \"gr_restore\"\n@@ -5113,41 +5141,41 @@\n    (use (match_operand:DI 3 \"register_operand\" \"\"))]\n   \"\"\n   \".mem.offset %2, 0\\;ld8.fill %0 = %1%P1\"\n-  [(set_attr \"type\" \"M\")])\n+  [(set_attr \"itanium_class\" \"ld\")])\n \n (define_insn \"fr_spill\"\n   [(set (match_operand:TF 0 \"memory_operand\" \"=m\")\n \t(unspec:TF [(match_operand:TF 1 \"register_operand\" \"f\")] 3))]\n   \"\"\n   \"stf.spill %0 = %1%P0\"\n-  [(set_attr \"type\" \"M\")])\n+  [(set_attr \"itanium_class\" \"stf\")])\n \n (define_insn \"fr_restore\"\n   [(set (match_operand:TF 0 \"register_operand\" \"=f\")\n \t(unspec:TF [(match_operand:TF 1 \"memory_operand\" \"m\")] 4))]\n   \"\"\n   \"ldf.fill %0 = %1%P1\"\n-  [(set_attr \"type\" \"M\")])\n+  [(set_attr \"itanium_class\" \"fld\")])\n \n (define_insn \"bsp_value\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(unspec:DI [(const_int 0)] 20))]\n   \"\"\n   \"mov %0 = ar.bsp\"\n-  [(set_attr \"type\" \"I\")])\n+  [(set_attr \"itanium_class\" \"frar_i\")])\n \n (define_insn \"set_bsp\"\n   [(unspec_volatile [(match_operand:DI 0 \"register_operand\" \"r\")] 5)]\n   \"\"\n   \"flushrs\\;mov r19=ar.rsc\\;;;\\;and r19=0x1c,r19\\;;;\\;mov ar.rsc=r19\\;;;\\;mov ar.bspstore=%0\\;;;\\;or r19=0x3,r19\\;;;\\;loadrs\\;invala\\;;;\\;mov ar.rsc=r19\"\n-  [(set_attr \"type\" \"unknown\")\n+  [(set_attr \"itanium_class\" \"unknown\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"flushrs\"\n   [(unspec [(const_int 0)] 21)]\n   \"\"\n   \";;\\;flushrs\"\n-  [(set_attr \"type\" \"M\")])\n+  [(set_attr \"itanium_class\" \"rse_m\")])\n \f\n ;; ::::::::::::::::::::\n ;; ::\n@@ -5163,22 +5191,22 @@\n   [(const_int 0)]\n   \"\"\n   \"nop 0\"\n-  [(set_attr \"type\" \"unknown\")])\n+  [(set_attr \"itanium_class\" \"unknown\")])\n \n ;; Pseudo instruction that prevents the scheduler from moving code above this\n ;; point.\n (define_insn \"blockage\"\n   [(unspec_volatile [(const_int 0)] 1)]\n   \"\"\n   \"\"\n-  [(set_attr \"type\" \"unknown\")\n+  [(set_attr \"itanium_class\" \"ignore\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"insn_group_barrier\"\n   [(unspec_volatile [(const_int 0)] 2)]\n   \"\"\n   \";;\"\n-  [(set_attr \"type\" \"S\")\n+  [(set_attr \"itanium_class\" \"stop_bit\")\n    (set_attr \"predicable\" \"no\")])\n \n \f\n@@ -5301,7 +5329,7 @@\n \t(unspec:BLK [(match_operand:BLK 1 \"\" \"\")] 12))]\n   \"\"\n   \"mf\"\n-  [(set_attr \"type\" \"M\")])\n+  [(set_attr \"itanium_class\" \"syst_m\")])\n \n (define_insn \"fetchadd_acq_si\"\n   [(set (match_operand:SI 0 \"gr_register_operand\" \"=r\")\n@@ -5311,7 +5339,7 @@\n \t\t    (match_operand:SI 2 \"fetchadd_operand\" \"n\")] 19))]\n   \"\"\n   \"fetchadd4.acq %0 = %1, %2\"\n-  [(set_attr \"type\" \"M\")])\n+  [(set_attr \"itanium_class\" \"sem\")])\n \n (define_insn \"fetchadd_acq_di\"\n   [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n@@ -5321,7 +5349,7 @@\n \t\t    (match_operand:DI 2 \"fetchadd_operand\" \"n\")] 19))]\n   \"\"\n   \"fetchadd8.acq %0 = %1, %2\"\n-  [(set_attr \"type\" \"M\")])\n+  [(set_attr \"itanium_class\" \"sem\")])\n \n (define_insn \"cmpxchg_acq_si\"\n   [(set (match_operand:SI 0 \"gr_register_operand\" \"=r\")\n@@ -5332,7 +5360,7 @@\n \t\t    (match_operand:SI 3 \"ar_ccv_reg_operand\" \"\")] 13))]\n   \"\"\n   \"cmpxchg4.acq %0 = %1, %2, %3\"\n-  [(set_attr \"type\" \"M\")])\n+  [(set_attr \"itanium_class\" \"sem\")])\n \n (define_insn \"cmpxchg_acq_di\"\n   [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n@@ -5343,7 +5371,7 @@\n \t\t    (match_operand:DI 3 \"ar_ccv_reg_operand\" \"\")] 13))]\n   \"\"\n   \"cmpxchg8.acq %0 = %1, %2, %3\"\n-  [(set_attr \"type\" \"M\")])\n+  [(set_attr \"itanium_class\" \"sem\")])\n \n (define_insn \"xchgsi\"\n   [(set (match_operand:SI 0 \"gr_register_operand\" \"=r\")\n@@ -5352,7 +5380,7 @@\n         (match_operand:SI 2 \"gr_register_operand\" \"r\"))]\n   \"\"\n   \"xchg4 %0 = %1, %2\"\n-  [(set_attr \"type\" \"M\")])\n+  [(set_attr \"itanium_class\" \"sem\")])\n \n (define_insn \"xchgdi\"\n   [(set (match_operand:DI 0 \"gr_register_operand\" \"=r\")\n@@ -5361,7 +5389,7 @@\n         (match_operand:DI 2 \"gr_register_operand\" \"r\"))]\n   \"\"\n   \"xchg8 %0 = %1, %2\"\n-  [(set_attr \"type\" \"M\")])\n+  [(set_attr \"itanium_class\" \"sem\")])\n \f\n ;; Predication.\n \n@@ -5377,14 +5405,14 @@\n        (unspec:BI [(match_dup 0)] 7))]\n   \"\"\n   \".pred.rel.mutex %0, %I0\"\n-  [(set_attr \"type\" \"unknown\")\n+  [(set_attr \"itanium_class\" \"ignore\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"safe_across_calls_all\"\n   [(unspec_volatile [(const_int 0)] 8)]\n   \"\"\n   \".pred.safe_across_calls p1-p63\"\n-  [(set_attr \"type\" \"unknown\")\n+  [(set_attr \"itanium_class\" \"ignore\")\n    (set_attr \"predicable\" \"no\")])\n \n (define_insn \"safe_across_calls_normal\"\n@@ -5395,6 +5423,6 @@\n   emit_safe_across_calls (asm_out_file);\n   return \\\"\\\";\n }\"\n-  [(set_attr \"type\" \"unknown\")\n+  [(set_attr \"itanium_class\" \"ignore\")\n    (set_attr \"predicable\" \"no\")])\n "}]}