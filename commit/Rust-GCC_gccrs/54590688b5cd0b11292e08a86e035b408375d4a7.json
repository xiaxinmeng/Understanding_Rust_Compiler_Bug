{"sha": "54590688b5cd0b11292e08a86e035b408375d4a7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTQ1OTA2ODhiNWNkMGIxMTI5MmUwOGE4NmUwMzViNDA4Mzc1ZDRhNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2001-03-28T07:29:21Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2001-03-28T07:29:21Z"}, "message": "except.c (can_throw_internal): Rename from can_throw.\n\n        * except.c (can_throw_internal): Rename from can_throw.\n        * except.h, resource.c: Update references.\n\nFrom-SVN: r40913", "tree": {"sha": "b7be0846490b2fb080cf8c67761e72a29abd8db6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b7be0846490b2fb080cf8c67761e72a29abd8db6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/54590688b5cd0b11292e08a86e035b408375d4a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54590688b5cd0b11292e08a86e035b408375d4a7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/54590688b5cd0b11292e08a86e035b408375d4a7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/54590688b5cd0b11292e08a86e035b408375d4a7/comments", "author": null, "committer": null, "parents": [{"sha": "8cd442715fa8705297549cf90f70e724f4a9214f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cd442715fa8705297549cf90f70e724f4a9214f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cd442715fa8705297549cf90f70e724f4a9214f"}], "stats": {"total": 19, "additions": 11, "deletions": 8}, "files": [{"sha": "d5164f8b5c9bfa2b29b98e55132dda1dd4497238", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54590688b5cd0b11292e08a86e035b408375d4a7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54590688b5cd0b11292e08a86e035b408375d4a7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=54590688b5cd0b11292e08a86e035b408375d4a7", "patch": "@@ -1,5 +1,8 @@\n 2001-03-27  Richard Henderson  <rth@redhat.com>\n \n+\t* except.c (can_throw_internal): Rename from can_throw.\n+\t* except.h, resource.c: Update references.\n+\n \t* integrate.c (copy_insn_list): Use returnjump_p.\n \t(copy_insn_notes): Recurse for CALL_PLACEHOLDER.\n "}, {"sha": "bc865552554b66329559fcdb89d4c4176bfdac24", "filename": "gcc/except.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54590688b5cd0b11292e08a86e035b408375d4a7/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54590688b5cd0b11292e08a86e035b408375d4a7/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=54590688b5cd0b11292e08a86e035b408375d4a7", "patch": "@@ -2690,7 +2690,7 @@ free_eh_status (f)\n /* Determine if the given INSN can throw an exception.  */\n \n int\n-can_throw (insn)\n+can_throw_internal (insn)\n      rtx insn;\n {\n   if (GET_CODE (insn) == INSN\n@@ -2728,11 +2728,11 @@ nothrow_function_p ()\n     return 1;\n \n   for (insn = get_insns (); insn; insn = NEXT_INSN (insn))\n-    if (can_throw (insn))\n+    if (can_throw_internal (insn))\n       return 0;\n   for (insn = current_function_epilogue_delay_list; insn;\n        insn = XEXP (insn, 1))\n-    if (can_throw (insn))\n+    if (can_throw_internal (insn))\n       return 0;\n \n   return 1;\n@@ -2744,8 +2744,8 @@ nothrow_function_p ()\n    region can throw.\n \n    Regions are removed if they cannot possibly catch an exception.\n-   This is determined by invoking can_throw on each insn within the\n-   region; if can_throw returns true for any of the instructions, the\n+   This is determined by invoking can_throw_internal on each insn within the\n+   region; if can_throw_internal returns true for any of the instructions, the\n    region can catch an exception, since there is an insn within the\n    region that is capable of throwing an exception.\n \n@@ -2784,7 +2784,7 @@ scan_region (insn, n, delete_outer)\n \t    && NOTE_LINE_NUMBER (insn) == NOTE_INSN_EH_REGION_END))\n     {\n       /* If anything can throw, we can't remove the region.  */\n-      if (delete && can_throw (insn))\n+      if (delete && can_throw_internal (insn))\n \t{\n \t  delete = 0;\n \t}"}, {"sha": "2b281bbe5f6984cdca3d3145b03236e7e142aa65", "filename": "gcc/except.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54590688b5cd0b11292e08a86e035b408375d4a7/gcc%2Fexcept.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54590688b5cd0b11292e08a86e035b408375d4a7/gcc%2Fexcept.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.h?ref=54590688b5cd0b11292e08a86e035b408375d4a7", "patch": "@@ -442,7 +442,7 @@ extern rtx exception_handler_labels;\n \n /* Determine if the given INSN can throw an exception.  */\n \n-extern int can_throw                            PARAMS ((rtx));\n+extern int can_throw_internal                   PARAMS ((rtx));\n \n /* Return nonzero if nothing in this function can throw.  */\n "}, {"sha": "0b3a892ce2ca316c21d0241c4d5c672167b00df5", "filename": "gcc/resource.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/54590688b5cd0b11292e08a86e035b408375d4a7/gcc%2Fresource.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/54590688b5cd0b11292e08a86e035b408375d4a7/gcc%2Fresource.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fresource.c?ref=54590688b5cd0b11292e08a86e035b408375d4a7", "patch": "@@ -452,7 +452,7 @@ find_dead_or_set_registers (target, res, jump_target, jump_count, set, needed)\n \t know where we might end up next.  That means that we have to\n \t assume that whatever we have already marked as live really is\n \t live.  */\n-      if (can_throw (insn))\n+      if (can_throw_internal (insn))\n \tbreak;\n \n       switch (GET_CODE (insn))"}]}