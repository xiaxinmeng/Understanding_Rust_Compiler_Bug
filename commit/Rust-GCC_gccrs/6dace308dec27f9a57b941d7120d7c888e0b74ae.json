{"sha": "6dace308dec27f9a57b941d7120d7c888e0b74ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmRhY2UzMDhkZWMyN2Y5YTU3Yjk0MWQ3MTIwZDdjODg4ZTBiNzRhZQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "iant@google.com", "date": "2010-09-29T00:54:08Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2010-09-29T00:54:08Z"}, "message": "configure.ac: Adjust CFI test to test assembler directly rather than checking gcc...\n\n\t* configure.ac: Adjust CFI test to test assembler directly rather\n\tthan checking gcc preprocessor macro.\n\t* configure: Rebuild.\n\nFrom-SVN: r164713", "tree": {"sha": "0100532fd2ca4f81e957b297ee9077000dc452a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0100532fd2ca4f81e957b297ee9077000dc452a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6dace308dec27f9a57b941d7120d7c888e0b74ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dace308dec27f9a57b941d7120d7c888e0b74ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6dace308dec27f9a57b941d7120d7c888e0b74ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6dace308dec27f9a57b941d7120d7c888e0b74ae/comments", "author": null, "committer": null, "parents": [{"sha": "f6a0745f1734e588dabf224dbe88aaf3eaed4918", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6a0745f1734e588dabf224dbe88aaf3eaed4918", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6a0745f1734e588dabf224dbe88aaf3eaed4918"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "f0faa8f7926ab6730dd138c657b521ab6fe50835", "filename": "libgcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dace308dec27f9a57b941d7120d7c888e0b74ae/libgcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dace308dec27f9a57b941d7120d7c888e0b74ae/libgcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2FChangeLog?ref=6dace308dec27f9a57b941d7120d7c888e0b74ae", "patch": "@@ -1,3 +1,9 @@\n+2010-09-28  Ian Lance Taylor  <iant@google.com>\n+\n+\t* configure.ac: Adjust CFI test to test assembler directly rather\n+\tthan checking gcc preprocessor macro.\n+\t* configure: Rebuild.\n+\n 2010-09-27  Ian Lance Taylor  <iant@google.com>\n \n \t* configure.ac: Test whether assembler supports CFI directives."}, {"sha": "dad6c49746a75ba232ddeeb837e9581699dfb889", "filename": "libgcc/configure", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dace308dec27f9a57b941d7120d7c888e0b74ae/libgcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dace308dec27f9a57b941d7120d7c888e0b74ae/libgcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure?ref=6dace308dec27f9a57b941d7120d7c888e0b74ae", "patch": "@@ -3715,7 +3715,11 @@ if test \"${libgcc_cv_cfi+set}\" = set; then :\n else\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n /* end confdefs.h.  */\n-int i = __GCC_HAVE_DWARF2_CFI_ASM;\n+asm(\"\\n\\\n+\t.text\\n\\\n+\t.cfi_startproc\\n\\\n+\t.cfi_personality 0, symbol\\n\\\n+\t.cfi_endproc\");\n _ACEOF\n if ac_fn_c_try_compile \"$LINENO\"; then :\n   libgcc_cv_cfi=yes"}, {"sha": "caade3317b3177452e37c61a82b6f66af5c6e414", "filename": "libgcc/configure.ac", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6dace308dec27f9a57b941d7120d7c888e0b74ae/libgcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6dace308dec27f9a57b941d7120d7c888e0b74ae/libgcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgcc%2Fconfigure.ac?ref=6dace308dec27f9a57b941d7120d7c888e0b74ae", "patch": "@@ -137,9 +137,14 @@ AC_SUBST(fixed_point)\n \n # Check for assembler CFI support.\n AC_CACHE_CHECK([whether assembler supports CFI directives], [libgcc_cv_cfi],\n-\t       [AC_COMPILE_IFELSE([int i = __GCC_HAVE_DWARF2_CFI_ASM;],\n-\t\t\t\t  [libgcc_cv_cfi=yes],\n-\t\t\t\t  [libgcc_cv_cfi=no])])\n+\t       [AC_COMPILE_IFELSE(\n+[asm(\"\\n\\\n+\t.text\\n\\\n+\t.cfi_startproc\\n\\\n+\t.cfi_personality 0, symbol\\n\\\n+\t.cfi_endproc\");],\n+  [libgcc_cv_cfi=yes],\n+  [libgcc_cv_cfi=no])])\n \n # Check 32bit or 64bit for x86.\n case ${host} in"}]}