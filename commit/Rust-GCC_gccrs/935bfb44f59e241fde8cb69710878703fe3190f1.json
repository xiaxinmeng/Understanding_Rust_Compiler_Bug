{"sha": "935bfb44f59e241fde8cb69710878703fe3190f1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTM1YmZiNDRmNTllMjQxZmRlOGNiNjk3MTA4Nzg3MDNmZTMxOTBmMQ==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-05-04T03:10:42Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2002-05-04T03:10:42Z"}, "message": "Re-apply patch accidentally reverted with DFA scheduler merge: remove all rules and variables to slurp source files out of libiberty and...\n\n\t* Re-apply patch accidentally reverted with\n\tDFA scheduler merge: remove all rules and variables to slurp\n\tsource files out of libiberty and rebuild them with HOST_CC.\n\t($(HOST_PREFIX_1)varray.o): New rule.\n\t(genattrtab rule): Word wrap.\n\nFrom-SVN: r53141", "tree": {"sha": "92d2e7df0c0bc65db268d8aba5e3ed123959640f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/92d2e7df0c0bc65db268d8aba5e3ed123959640f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/935bfb44f59e241fde8cb69710878703fe3190f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/935bfb44f59e241fde8cb69710878703fe3190f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/935bfb44f59e241fde8cb69710878703fe3190f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/935bfb44f59e241fde8cb69710878703fe3190f1/comments", "author": null, "committer": null, "parents": [{"sha": "fa7a07127807fd273f6405c3882ae152bd4e86c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa7a07127807fd273f6405c3882ae152bd4e86c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa7a07127807fd273f6405c3882ae152bd4e86c3"}], "stats": {"total": 117, "additions": 33, "deletions": 84}, "files": [{"sha": "e3a50302d35d22e4f8f789c5794eb36f06d9d6f1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 19, "deletions": 11, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935bfb44f59e241fde8cb69710878703fe3190f1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935bfb44f59e241fde8cb69710878703fe3190f1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=935bfb44f59e241fde8cb69710878703fe3190f1", "patch": "@@ -1,3 +1,11 @@\n+2002-05-03  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* Re-apply patch accidentally reverted with\n+\tDFA scheduler merge: remove all rules and variables to slurp\n+\tsource files out of libiberty and rebuild them with HOST_CC.\n+\t($(HOST_PREFIX_1)varray.o): New rule.\n+\t(genattrtab rule): Word wrap.\n+\n 2002-05-03  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* config/i386/netbsd64.h (CPP_LP64_SPEC): Define.\n@@ -15,7 +23,7 @@\n \t(rtx_needs_barrier): Delete reference to cycle_display unspec.\n \t(ia64_sched_reorder2): Mention need for cycle display handling\n \tonce such notes exist.\n-\t\n+\n 2002-05-03  Richard Henderson  <rth@redhat.com>\n \n \t* real.c (etoasc): Strip most trailing zeros for clarity.\n@@ -30,13 +38,13 @@\n \n 2002-05-03  Aldy Hernandez  <aldyh@redhat.com>\n \n-        * config/rs6000/rs6000.c (altivec_expand_binop_builtin): Error out\n-        when we get an out of range literal.\n-        (altivec_expand_ternop_builtin): Same.\n-        (altivec_expand_unop_builtin): Same.\n-        (altivec_expand_builtin): Same, for dss.\n-        (altivec_expand_builtin): Use trees instead of rtl when\n-        determining literal argument validity.\n+\t* config/rs6000/rs6000.c (altivec_expand_binop_builtin): Error out\n+\twhen we get an out of range literal.\n+\t(altivec_expand_ternop_builtin): Same.\n+\t(altivec_expand_unop_builtin): Same.\n+\t(altivec_expand_builtin): Same, for dss.\n+\t(altivec_expand_builtin): Use trees instead of rtl when\n+\tdetermining literal argument validity.\n \n 2002-05-03  David S. Miller  <davem@redhat.com>\n \n@@ -53,7 +61,7 @@\n \tTARGET_SCHED_CYCLE_DISPLAY): Delete.\n \t* doc/md.texi (cycle_display): Don't mention.\n \t* doc/tm.texi (TARGET_SCHED_CYCLE_DISPLAY): Likewise.\n-\t\n+\n 2002-05-03  Richard Henderson  <rth@redhat.com>\n \n \t* recog.c (store_data_bypass_p, if_test_bypass_p): New.\n@@ -62,7 +70,7 @@\n \t* config/sparc/sparc.c (ultrasparc_store_bypass_p): Remove.\n \t* config/sparc/sparc.md: Use store_data_bypass_p instead.\n \t* config/sparc/sparc-protos.h: Update.\n-\t\n+\n 2002-05-03  Jason Thorpe  <thorpej@wasabisystems.com>\n \n \t* config/sparc/netbsd-elf.c (CPP_SUBTARGET_SPEC64): Remove\n@@ -81,7 +89,7 @@\n \t(min_issue_delay): Set up min_insn_issue_delay for the state.\n \t(output_min_issue_delay_table): Interchange the nested loops and\n \tand initiate min_insn_issue_delay for states.\n-\t\n+\n Fri May  3 22:59:15 CEST 2002  Jan Hubicka  <jh@suse.cz>\n \n \t* cfgcleanup.c (try_optimize_cfg):  Call merge_block only when"}, {"sha": "2826b645e9ab4a3c6e1001a836d77d104e91d672", "filename": "gcc/Makefile.in", "status": "modified", "additions": 14, "deletions": 73, "changes": 87, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/935bfb44f59e241fde8cb69710878703fe3190f1/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/935bfb44f59e241fde8cb69710878703fe3190f1/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=935bfb44f59e241fde8cb69710878703fe3190f1", "patch": "@@ -344,14 +344,6 @@ LIBICONV = @LIBICONV@\n # List of internationalization subdirectories.\n INTL_SUBDIRS = intl\n \n-# Change this to a null string if obstacks are installed in the\n-# system library.\n-OBSTACK=obstack.o\n-\n-# The following object files is used by genautomata.\n-GETRUNTIME = getruntime.o\n-HASHTAB = hashtab.o\n-\n # The GC method to be used on this system.\n GGC=@GGC@.o\n \n@@ -483,12 +475,6 @@ HOST_CFLAGS= @HOST_CFLAGS@ -DGENERATOR_FILE\n # Native linker and preprocessor flags.  For x-fragment overrides.\n HOST_LDFLAGS=$(LDFLAGS)\n HOST_CPPFLAGS=$(ALL_CPPFLAGS)\n-HOST_OBSTACK=$(OBSTACK)\n-HOST_VFPRINTF=$(VFPRINTF)\n-HOST_DOPRINT=$(DOPRINT)\n-HOST_GETRUNTIME=$(GETRUNTIME)\n-HOST_HASHTAB=$(HASHTAB)\n-HOST_STRSTR=$(STRSTR)\n \n # Actual name to use when installing a native compiler.\n GCC_INSTALL_NAME = `echo gcc|sed '$(program_transform_name)'`\n@@ -612,17 +598,8 @@ ALL_CPPFLAGS = $(CPPFLAGS) $(X_CPPFLAGS) $(T_CPPFLAGS)\n LIBIBERTY = ../libiberty/libiberty.a\n BUILD_LIBIBERTY = @FORBUILD@/libiberty/libiberty.a\n \n-USE_HOST_OBSTACK= ` case \"${HOST_OBSTACK}\" in ?*) echo ${HOST_PREFIX}${HOST_OBSTACK} ;; esac `\n-USE_HOST_VFPRINTF= ` case \"${HOST_VFPRINTF}\" in ?*) echo ${HOST_PREFIX}${HOST_VFPRINTF} ;; esac `\n-USE_HOST_DOPRINT= ` case \"${HOST_DOPRINT}\" in ?*) echo ${HOST_PREFIX}${HOST_DOPRINT} ;; esac `\n-USE_HOST_GETRUNTIME= ` case \"${HOST_GETRUNTIME}\" in ?*) echo ${HOST_PREFIX}${HOST_GETRUNTIME} ;; esac `\n-USE_HOST_HASHTAB= ` case \"${HOST_HASHTAB}\" in ?*) echo ${HOST_PREFIX}${HOST_HASHTAB} ;; esac `\n-USE_HOST_STRSTR= ` case \"${HOST_STRSTR}\" in ?*) echo ${HOST_PREFIX}${HOST_STRSTR} ;; esac `\n-\n-# Dependency on the intl, portability libraries, obstack or whatever\n-# library facilities are not installed in the system libraries.\n-# We don't use USE_* because backquote expansion doesn't work in deps.\n-LIBDEPS= $(INTLLIBS) $(LIBIBERTY) $(OBSTACK) $(VFPRINTF) $(DOPRINT) $(STRSTR)\n+# Dependencies on the intl and portability libraries.\n+LIBDEPS= $(INTLDEPS) $(LIBIBERTY)\n \n # Likewise, for use in the tools that must run on this machine\n # even if we are cross-building GCC.\n@@ -1343,17 +1320,6 @@ line-map.o: line-map.c line-map.h intl.h $(CONFIG_H) $(SYSTEM_H)\n ggc-none.o: ggc-none.c $(GCONFIG_H) $(SYSTEM_H) $(GGC_H)\n \t$(CC) -c $(ALL_CFLAGS) -DGENERATOR_FILE $(ALL_CPPFLAGS) $(INCLUDES) $< $(OUTPUT_OPTION)\n \n-obstack.o: $(srcdir)/../libiberty/obstack.c $(GCONFIG_H)\n-\trm -f obstack.c\n-\t$(LN_S) $(srcdir)/../libiberty/obstack.c obstack.c\n-\t$(CC) -c $(ALL_CFLAGS) -DGENERATOR_FILE $(ALL_CPPFLAGS) $(INCLUDES) \\\n-\t\tobstack.c $(OUTPUT_OPTION)\n-\n-getruntime.o: $(srcdir)/../libiberty/getruntime.c $(CONFIG_H)\n-\trm -f getruntime.c\n-\t$(LN_S) $(srcdir)/../libiberty/getruntime.c getruntime.c\n-\t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) getruntime.c\n-\n prefix.o: prefix.c $(CONFIG_H) $(SYSTEM_H) Makefile prefix.h\n \t$(CC) $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t-DPREFIX=\\\"$(prefix)\\\" \\\n@@ -1904,9 +1870,12 @@ genattr$(build_exeext) : genattr.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HO\n genattr.o : genattr.c $(RTL_H) $(HCONFIG_H) $(SYSTEM_H) errors.h gensupport.h\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(srcdir)/genattr.c $(OUTPUT_OPTION)\n \n-genattrtab$(build_exeext) : genattrtab.o genautomata.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_VARRAY) $(HOST_PREFIX)$(HOST_GETRUNTIME) $(HOST_LIBDEPS)\n+genattrtab$(build_exeext) : genattrtab.o genautomata.o \\\n+  $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_VARRAY) $(HOST_LIBDEPS)\n \t$(HOST_CC) $(HOST_CFLAGS) $(HOST_LDFLAGS) -o $@ \\\n-\t genattrtab.o genautomata.o $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_VARRAY) $(USE_HOST_GETRUNTIME) $(HOST_LIBS) -lm\n+\t genattrtab.o genautomata.o \\\n+\t $(HOST_RTL) $(HOST_PRINT) $(HOST_ERRORS) $(HOST_VARRAY) \\\n+\t $(HOST_LIBS) -lm\n \n genattrtab.o : genattrtab.c $(RTL_H) $(OBSTACK_H) $(HCONFIG_H) \\\n   $(SYSTEM_H) errors.h $(GGC_H) gensupport.h genattrtab.h\n@@ -1961,46 +1930,18 @@ $(HOST_PREFIX_1)bitmap.o: $(srcdir)/bitmap.c $(HCONFIG_H) $(SYSTEM_H) $(RTL_H) \\\n \tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/bitmap.c > $(HOST_PREFIX)bitmap.c\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)bitmap.c $(OUTPUT_OPTION)\n \n-$(HOST_PREFIX_1)obstack.o: $(srcdir)/../libiberty/obstack.c $(HCONFIG_H)\n-\trm -f $(HOST_PREFIX)obstack.c\n-\tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/../libiberty/obstack.c > $(HOST_PREFIX)obstack.c\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)obstack.c $(OUTPUT_OPTION)\n-\n-$(HOST_PREFIX_1)getruntime.o: $(srcdir)/../libiberty/getruntime.c\n-\trm -f $(HOST_PREFIX)getruntime.c\n-\tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/../libiberty/getruntime.c > $(HOST_PREFIX)getruntime.c\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)getruntime.c $(OUTPUT_OPTION)\n-\n-$(HOST_PREFIX_1)hashtab.o: $(srcdir)/../libiberty/hashtab.c\n-\trm -f $(HOST_PREFIX)hashtab.c\n-\tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/../libiberty/hashtab.c > $(HOST_PREFIX)hashtab.c\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)hashtab.c $(OUTPUT_OPTION)\n-\n-$(HOST_PREFIX_1)vfprintf.o: $(srcdir)/../libiberty/vfprintf.c $(HCONFIG_H)\n-\trm -f $(HOST_PREFIX)vfprintf.c\n-\tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/../libiberty/vfprintf.c > $(HOST_PREFIX)vfprintf.c\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)vfprintf.c $(OUTPUT_OPTION)\n-\n-$(HOST_PREFIX_1)doprint.o: doprint.c $(HCONFIG_H)\n-\trm -f $(HOST_PREFIX)doprint.c\n-\tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/doprint.c > $(HOST_PREFIX)doprint.c\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)doprint.c $(OUTPUT_OPTION)\n-\n-$(HOST_PREFIX_1)strstr.o: $(srcdir)/../libiberty/strstr.c $(HCONFIG_H)\n-\trm -f $(HOST_PREFIX)strstr.c\n-\tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/../libiberty/strstr.c > $(HOST_PREFIX)strstr.c\n-\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)strstr.c $(OUTPUT_OPTION)\n-\n $(HOST_PREFIX_1)errors.o: errors.c $(HCONFIG_H) $(SYSTEM_H) errors.h\n \trm -f $(HOST_PREFIX)errors.c\n \tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/errors.c > $(HOST_PREFIX)errors.c\n \t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) $(HOST_PREFIX)errors.c $(OUTPUT_OPTION)\n \n-\n-# This satisfies the dependency that we get if you cross-compile a compiler\n-# that does not need to compile doprint or whatever.\n-$(HOST_PREFIX_1):\n-\t$(STAMP) $(HOST_PREFIX_1)\n+$(HOST_PREFIX_1)varray.o: varray.c $(HCONFIG_H) $(SYSTEM_H) varray.h $(RTL_H) \\\n+  $(TREE_H) bitmap.h errors.h\n+\trm -f $(HOST_PREFIX)varray.c\n+\tsed -e 's/config[.]h/hconfig.h/' $(srcdir)/varray.c > \\\n+\t\t$(HOST_PREFIX)varray.c\n+\t$(HOST_CC) -c $(HOST_CFLAGS) $(HOST_CPPFLAGS) $(INCLUDES) \\\n+\t\t$(HOST_PREFIX)varray.c $(OUTPUT_OPTION)\n \n $(HOST_PREFIX_1)ggc-none.o: ggc-none.c $(HCONFIG_H) $(SYSTEM_H) $(GCC_H)\n \trm -f $(HOST_PREFIX)ggc-none.c"}]}