{"sha": "c2cd64b5a9c4f557553b00482216117d05200a93", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzJjZDY0YjVhOWM0ZjU1NzU1M2IwMDQ4MjIxNjExN2QwNTIwMGE5Mw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2004-02-22T23:18:53Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2004-02-22T23:18:53Z"}, "message": "gcov-io.c (gcov_open): Use open + fdopen instead of fopen.\n\n\t* gcov-io.c (gcov_open) [GCOV_LOCKED]: Use open + fdopen instead of\n\tfopen.\n\t* libgcov.c: Include sys/stat.h.\n\t* config/rs6000/linux.h (TARGET_HAS_F_SETLKW): Define.\n\t* config/rs6000/linux64.h (TARGET_HAS_F_SETLKW): Define.\n\t* config/sparc/linux.h (TARGET_HAS_F_SETLKW): Define.\n\t* config/sparc/linux64.h (TARGET_HAS_F_SETLKW): Define.\n\nFrom-SVN: r78281", "tree": {"sha": "6c2966c9e874f2bcf465ee81f2abd1e32d6b4d12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c2966c9e874f2bcf465ee81f2abd1e32d6b4d12"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c2cd64b5a9c4f557553b00482216117d05200a93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2cd64b5a9c4f557553b00482216117d05200a93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2cd64b5a9c4f557553b00482216117d05200a93", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2cd64b5a9c4f557553b00482216117d05200a93/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fcfcb20e67503c4eaaefa6b75efb99f88b827d93", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcfcb20e67503c4eaaefa6b75efb99f88b827d93", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcfcb20e67503c4eaaefa6b75efb99f88b827d93"}], "stats": {"total": 67, "additions": 60, "deletions": 7}, "files": [{"sha": "9e18f300bdecfd40e0ee2ad6583d5adb730b5b21", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2cd64b5a9c4f557553b00482216117d05200a93/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2cd64b5a9c4f557553b00482216117d05200a93/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c2cd64b5a9c4f557553b00482216117d05200a93", "patch": "@@ -1,3 +1,13 @@\n+2004-02-22  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* gcov-io.c (gcov_open) [GCOV_LOCKED]: Use open + fdopen instead of\n+\tfopen.\n+\t* libgcov.c: Include sys/stat.h.\n+\t* config/rs6000/linux.h (TARGET_HAS_F_SETLKW): Define.\n+\t* config/rs6000/linux64.h (TARGET_HAS_F_SETLKW): Define.\n+\t* config/sparc/linux.h (TARGET_HAS_F_SETLKW): Define.\n+\t* config/sparc/linux64.h (TARGET_HAS_F_SETLKW): Define.\n+\n 2004-02-22  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* reorg.c: Remove comments about dead ports."}, {"sha": "8fe3e3e87edbeb3765c592097e91127f97dd8ca4", "filename": "gcc/config/rs6000/linux.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2cd64b5a9c4f557553b00482216117d05200a93/gcc%2Fconfig%2Frs6000%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2cd64b5a9c4f557553b00482216117d05200a93/gcc%2Fconfig%2Frs6000%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux.h?ref=c2cd64b5a9c4f557553b00482216117d05200a93", "patch": "@@ -91,6 +91,8 @@\n \n #define TARGET_ASM_FILE_END file_end_indicate_exec_stack\n \n+#define TARGET_HAS_F_SETLKW\n+\n /* Do code reading to identify a signal frame, and set the frame\n    state data appropriately.  See unwind-dw2.c for the structs.  */\n "}, {"sha": "ee381858223b4b2892cf66877070832b01a3e530", "filename": "gcc/config/rs6000/linux64.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2cd64b5a9c4f557553b00482216117d05200a93/gcc%2Fconfig%2Frs6000%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2cd64b5a9c4f557553b00482216117d05200a93/gcc%2Fconfig%2Frs6000%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Flinux64.h?ref=c2cd64b5a9c4f557553b00482216117d05200a93", "patch": "@@ -543,6 +543,8 @@ while (0)\n \n #define TARGET_ASM_FILE_END file_end_indicate_exec_stack\n \n+#define TARGET_HAS_F_SETLKW\n+\n #define LINK_GCC_C_SEQUENCE_SPEC \\\n   \"%{static:--start-group} %G %L %{static:--end-group}%{!static:%G}\"\n "}, {"sha": "187dff6eee8644d7a2d419a394a553ed36696647", "filename": "gcc/config/sparc/linux.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2cd64b5a9c4f557553b00482216117d05200a93/gcc%2Fconfig%2Fsparc%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2cd64b5a9c4f557553b00482216117d05200a93/gcc%2Fconfig%2Fsparc%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux.h?ref=c2cd64b5a9c4f557553b00482216117d05200a93", "patch": "@@ -247,6 +247,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define TARGET_ASM_FILE_END file_end_indicate_exec_stack\n \n+#define TARGET_HAS_F_SETLKW\n+\n #undef LINK_GCC_C_SEQUENCE_SPEC\n #define LINK_GCC_C_SEQUENCE_SPEC \\\n   \"%{static:--start-group} %G %L %{static:--end-group}%{!static:%G}\""}, {"sha": "5cb84e5f916989eee8446efd664e99dc248ed6dc", "filename": "gcc/config/sparc/linux64.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2cd64b5a9c4f557553b00482216117d05200a93/gcc%2Fconfig%2Fsparc%2Flinux64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2cd64b5a9c4f557553b00482216117d05200a93/gcc%2Fconfig%2Fsparc%2Flinux64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fsparc%2Flinux64.h?ref=c2cd64b5a9c4f557553b00482216117d05200a93", "patch": "@@ -325,6 +325,8 @@ do {\t\t\t\t\t\t\t\t\t\\\n \n #define TARGET_ASM_FILE_END file_end_indicate_exec_stack\n \n+#define TARGET_HAS_F_SETLKW\n+\n #undef LINK_GCC_C_SEQUENCE_SPEC\n #define LINK_GCC_C_SEQUENCE_SPEC \\\n   \"%{static:--start-group} %G %L %{static:--end-group}%{!static:%G}\""}, {"sha": "0349fb821b21e3061d9b36b721e1434bbd6d5de8", "filename": "gcc/gcov-io.c", "status": "modified", "additions": 41, "deletions": 7, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2cd64b5a9c4f557553b00482216117d05200a93/gcc%2Fgcov-io.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2cd64b5a9c4f557553b00482216117d05200a93/gcc%2Fgcov-io.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov-io.c?ref=c2cd64b5a9c4f557553b00482216117d05200a93", "patch": "@@ -65,6 +65,7 @@ gcov_open (const char *name, int mode)\n #endif\n #if GCOV_LOCKED\n   struct flock s_flock;\n+  int fd;\n \n   s_flock.l_type = F_WRLCK;\n   s_flock.l_whence = SEEK_SET;\n@@ -82,6 +83,44 @@ gcov_open (const char *name, int mode)\n #if !IN_LIBGCOV\n   gcov_var.endian = 0;\n #endif\n+#if GCOV_LOCKED\n+  if (mode > 0)\n+    fd = open (name, O_RDWR);\n+  else\n+    fd = open (name, O_RDWR | O_CREAT, 0666);\n+  if (fd < 0)\n+    return 0;\n+\n+  while (fcntl (fd, F_SETLKW, &s_flock) && errno == EINTR)\n+    continue;\n+\n+  gcov_var.file = fdopen (fd, \"r+b\");\n+  if (!gcov_var.file)\n+    {\n+      close (fd);\n+      return 0;\n+    }\n+\n+  if (mode > 0)\n+    gcov_var.mode = 1;\n+  else if (mode == 0)\n+    {\n+      struct stat st;\n+\n+      if (fstat (fd, &st) < 0)\n+\t{\n+\t  fclose (gcov_var.file);\n+\t  gcov_var.file = 0;\n+\t  return 0;\n+\t}\n+      if (st.st_size != 0)\n+\tgcov_var.mode = 1;\n+      else\n+\tgcov_var.mode = mode * 2 + 1;\n+    }\n+  else\n+    gcov_var.mode = mode * 2 + 1;\n+#else\n   if (mode >= 0)\n     gcov_var.file = fopen (name, \"r+b\");\n   if (gcov_var.file)\n@@ -94,15 +133,10 @@ gcov_open (const char *name, int mode)\n     }\n   if (!gcov_var.file)\n     return 0;\n-  \n-  setbuf (gcov_var.file, (char *)0);\n-  \n-#if GCOV_LOCKED\n-  while (fcntl (fileno (gcov_var.file), F_SETLKW, &s_flock)\n-\t && errno == EINTR)\n-    continue;\n #endif\n \n+  setbuf (gcov_var.file, (char *)0);\n+  \n   return 1;\n }\n "}, {"sha": "d5c97a2854d67e4dc0e0691aaf9d3cef6661820c", "filename": "gcc/libgcov.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c2cd64b5a9c4f557553b00482216117d05200a93/gcc%2Flibgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c2cd64b5a9c4f557553b00482216117d05200a93/gcc%2Flibgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcov.c?ref=c2cd64b5a9c4f557553b00482216117d05200a93", "patch": "@@ -79,6 +79,7 @@ void __gcov_merge_delta (gcov_type *counters  __attribute__ ((unused)),\n #if GCOV_LOCKED\n #include <fcntl.h>\n #include <errno.h>\n+#include <sys/stat.h>\n #endif\n \n #ifdef L_gcov"}]}