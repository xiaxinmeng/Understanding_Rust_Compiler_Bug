{"sha": "ad648ade927dab484c38390ba5402f088d543261", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWQ2NDhhZGU5MjdkYWI0ODRjMzgzOTBiYTU0MDJmMDg4ZDU0MzI2MQ==", "commit": {"author": {"name": "Andreas Tobler", "email": "andreast@fgznet.ch", "date": "2012-03-21T21:28:18Z"}, "committer": {"name": "Andreas Tobler", "email": "andreast@gcc.gnu.org", "date": "2012-03-21T21:28:18Z"}, "message": "freebsd64.h: Remove duplicated entries from last commit.\n\n2012-03-21  Andreas Tobler  <andreast@fgznet.ch>\n\n\t* config/rs6000/freebsd64.h: Remove duplicated entries from last\n\tcommit.\n\t* config/rs6000/t-freebsd64: Likewise.\n\nFrom-SVN: r185620", "tree": {"sha": "a21fea666a1368c5274a2dd28733af2ecdf32214", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a21fea666a1368c5274a2dd28733af2ecdf32214"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ad648ade927dab484c38390ba5402f088d543261", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad648ade927dab484c38390ba5402f088d543261", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ad648ade927dab484c38390ba5402f088d543261", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ad648ade927dab484c38390ba5402f088d543261/comments", "author": null, "committer": null, "parents": [{"sha": "827959d9a5fbc8a304713344fc0111e75c68ce2d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/827959d9a5fbc8a304713344fc0111e75c68ce2d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/827959d9a5fbc8a304713344fc0111e75c68ce2d"}], "stats": {"total": 534, "additions": 4, "deletions": 530}, "files": [{"sha": "7d2952cd989251f57451dcac46a8e4f70a90970f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad648ade927dab484c38390ba5402f088d543261/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad648ade927dab484c38390ba5402f088d543261/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ad648ade927dab484c38390ba5402f088d543261", "patch": "@@ -29,6 +29,10 @@\n \t* config/rs6000/sysv4.h (SUBTARGET_OVERRIDE_OPTIONS): Set the\n \trs6000_current_abi for 64-bit FreeBSD to ABI_AIX.\n \n+\t* config/rs6000/freebsd64.h: Remove duplicated entries from last\n+\tcommit.\n+\t* config/rs6000/t-freebsd64: Likewise.\n+\n 2012-03-21  Georg-Johann Lay  <avr@gjlay.de>\n \n \tPR rtl-optimization/52543"}, {"sha": "909f703a07eb058843769818c7282012231d1ab8", "filename": "gcc/config/rs6000/freebsd64.h", "status": "modified", "additions": 0, "deletions": 495, "changes": 495, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad648ade927dab484c38390ba5402f088d543261/gcc%2Fconfig%2Frs6000%2Ffreebsd64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad648ade927dab484c38390ba5402f088d543261/gcc%2Fconfig%2Frs6000%2Ffreebsd64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ffreebsd64.h?ref=ad648ade927dab484c38390ba5402f088d543261", "patch": "@@ -1,4 +1,3 @@\n-\n /* Definitions for 64-bit PowerPC running FreeBSD using the ELF format\n    Copyright (C) 2012 Free Software Foundation, Inc.\n \n@@ -437,497 +436,3 @@ extern int dot_symbols;\n #endif\n \n #define POWERPC_FREEBSD\n-/* Definitions for 64-bit PowerPC running FreeBSD using the ELF format\n-   Copyright (C) 2011 Free Software Foundation, Inc.\n-\n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify it\n-   under the terms of the GNU General Public License as published\n-   by the Free Software Foundation; either version 3, or (at your\n-   option) any later version.\n-\n-   GCC is distributed in the hope that it will be useful, but WITHOUT\n-   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n-   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n-   License for more details.\n-\n-   You should have received a copy of the GNU General Public License\n-   along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-/* Override the defaults, which exist to force the proper definition.  */\n-\n-#ifndef RS6000_BI_ARCH\n-\n-#undef\tDEFAULT_ABI\n-#define\tDEFAULT_ABI ABI_AIX\n-\n-#undef\tTARGET_64BIT\n-#define\tTARGET_64BIT 1\n-\n-#define\tDEFAULT_ARCH64_P 1\n-#define\tRS6000_BI_ARCH_P 0\n-\n-#else\n-\n-#define\tDEFAULT_ARCH64_P (TARGET_DEFAULT & MASK_64BIT)\n-#define\tRS6000_BI_ARCH_P 1\n-\n-#endif\n-\n-#ifdef IN_LIBGCC2\n-#undef TARGET_64BIT\n-#ifdef __powerpc64__\n-#define TARGET_64BIT 1\n-#else\n-#define TARGET_64BIT 0\n-#endif\n-#endif\n-\n-/* On 64-bit systems, use the AIX ABI like Linux and NetBSD */\n-\n-#undef\tDEFAULT_ABI\n-#define\tDEFAULT_ABI (TARGET_64BIT ? ABI_AIX : ABI_V4)\n-#undef\tTARGET_AIX\n-#define\tTARGET_AIX TARGET_64BIT\n-\n-#ifdef HAVE_LD_NO_DOT_SYMS\n-/* New ABI uses a local sym for the function entry point.  */\n-extern int dot_symbols;\n-#undef DOT_SYMBOLS\n-#define DOT_SYMBOLS dot_symbols\n-#endif\n-\n-#define TARGET_USES_LINUX64_OPT 1\n-#ifdef HAVE_LD_LARGE_TOC\n-#undef TARGET_CMODEL\n-#define TARGET_CMODEL rs6000_current_cmodel\n-#define SET_CMODEL(opt) rs6000_current_cmodel = opt\n-#else\n-#define SET_CMODEL(opt) do {} while (0)\n-#endif\n-\n-/* Until now the 970 is the only Processor where FreeBSD 64-bit runs on.  */\n-#undef  PROCESSOR_DEFAULT\n-#define PROCESSOR_DEFAULT PROCESSOR_POWER4\n-#undef  PROCESSOR_DEFAULT64\n-#define PROCESSOR_DEFAULT64 PROCESSOR_POWER4\n-\n-/* We don't need to generate entries in .fixup, except when\n-   -mrelocatable or -mrelocatable-lib is given.  */\n-#undef RELOCATABLE_NEEDS_FIXUP\n-#define RELOCATABLE_NEEDS_FIXUP \\\n-  (target_flags & target_flags_explicit & MASK_RELOCATABLE)\n-\n-#define INVALID_64BIT \"-m%s not supported in this configuration\"\n-#define INVALID_32BIT INVALID_64BIT\n-\n-#undef\tSUBSUBTARGET_OVERRIDE_OPTIONS\n-#define\tSUBSUBTARGET_OVERRIDE_OPTIONS\t\t\t\t\\\n-  do\t\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\t\\\n-      if (!global_options_set.x_rs6000_alignment_flags)\t\t\\\n-\trs6000_alignment_flags = MASK_ALIGN_NATURAL;\t\t\\\n-      if (TARGET_64BIT)\t\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\t\\\n-\t  if (DEFAULT_ABI != ABI_AIX)\t\t\t\t\\\n-\t    {\t\t\t\t\t\t\t\\\n-\t      rs6000_current_abi = ABI_AIX;\t\t\t\\\n-\t      error (INVALID_64BIT, \"call\");\t\t\t\\\n-\t    }\t\t\t\t\t\t\t\\\n-\t  dot_symbols = !strcmp (rs6000_abi_name, \"aixdesc\");\t\\\n-\t  if (target_flags & MASK_RELOCATABLE)\t\t\t\\\n-\t    {\t\t\t\t\t\t\t\\\n-\t      target_flags &= ~MASK_RELOCATABLE;\t\t\\\n-\t      error (INVALID_64BIT, \"relocatable\");\t\t\\\n-\t    }\t\t\t\t\t\t\t\\\n-\t  if (target_flags & MASK_EABI)\t\t\t\t\\\n-\t    {\t\t\t\t\t\t\t\\\n-\t      target_flags &= ~MASK_EABI;\t\t\t\\\n-\t      error (INVALID_64BIT, \"eabi\");\t\t\t\\\n-\t    }\t\t\t\t\t\t\t\\\n-\t  if (TARGET_PROTOTYPE)\t\t\t\t\t\\\n-\t    {\t\t\t\t\t\t\t\\\n-\t      target_prototype = 0;\t\t\t\t\\\n-\t      error (INVALID_64BIT, \"prototype\");\t\t\\\n-\t    }\t\t\t\t\t\t\t\\\n-\t  if ((target_flags & MASK_POWERPC64) == 0)\t\t\\\n-\t    {\t\t\t\t\t\t\t\\\n-\t      target_flags |= MASK_POWERPC64;\t\t\t\\\n-\t      error (\"-m64 requires a PowerPC64 cpu\");\t\t\\\n-\t    }\t\t\t\t\t\t\t\\\n-\t   if ((target_flags_explicit & MASK_MINIMAL_TOC) != 0)\t\\\n-\t    {\t\t\t\t\t\t\t\\\n-\t      if (global_options_set.x_rs6000_current_cmodel\t\\\n-\t\t  && rs6000_current_cmodel != CMODEL_SMALL)\t\\\n-\t\terror (\"-mcmodel incompatible with other toc options\"); \\\n-\t      SET_CMODEL (CMODEL_SMALL);\t\t\t\\\n-\t    }\t\t\t\t\t\t\t\\\n-\t  else\t\t\t\t\t\t\t\\\n-\t    {\t\t\t\t\t\t\t\\\n-\t      if (!global_options_set.x_rs6000_current_cmodel)\t\\\n-\t\tSET_CMODEL (CMODEL_MEDIUM);\t\t\t\\\n-\t      if (rs6000_current_cmodel != CMODEL_SMALL)\t\\\n-\t\t{\t\t\t\t\t\t\\\n-\t\t  TARGET_NO_FP_IN_TOC = 0;\t\t\t\\\n-\t\t  TARGET_NO_SUM_IN_TOC = 0;\t\t\t\\\n-\t\t}\t\t\t\t\t\t\\\n-\t    }\t\t\t\t\t\t\t\\\n-\t}\t\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\t\\\n-  while (0)\n-\n-#ifdef\tRS6000_BI_ARCH\n-\n-#undef\tOPTION_TARGET_CPU_DEFAULT\n-#define\tOPTION_TARGET_CPU_DEFAULT \\\n-  (((TARGET_DEFAULT ^ target_flags) & MASK_64BIT) \\\n-   ? (char *) 0 : TARGET_CPU_DEFAULT)\n-\n-#endif\n-\n-#undef\tASM_DEFAULT_SPEC\n-#undef\tASM_SPEC\n-#undef\tLINK_OS_FREEBSD_SPEC\n-\n-#ifndef\tRS6000_BI_ARCH\n-#define\tASM_DEFAULT_SPEC \"-mppc64\"\n-#define\tASM_SPEC\t \"%(asm_spec64) %(asm_spec_common)\"\n-#define\tLINK_OS_FREEBSD_SPEC \"%(link_os_freebsd_spec64)\"\n-#else\n-#if DEFAULT_ARCH64_P\n-#define\tASM_DEFAULT_SPEC \"-mppc%{!m32:64}\"\n-#define\tASM_SPEC\t \"%{m32:%(asm_spec32)}%{!m32:%(asm_spec64)} %(asm_spec_common)\"\n-#define\tLINK_OS_FREEBSD_SPEC \"%{m32:%(link_os_freebsd_spec32)}%{!m32:%(link_os_freebsd_spec64)}\"\n-#else\n-#define\tASM_DEFAULT_SPEC \"-mppc%{m64:64}\"\n-#define\tASM_SPEC\t \"%{!m64:%(asm_spec32)}%{m64:%(asm_spec64)} %(asm_spec_common)\"\n-#define\tLINK_OS_FREEBSD_SPEC \"%{!m64:%(link_os_freebsd_spec32)}%{m64:%(link_os_freebsd_spec64)}\"\n-#endif\n-#endif\n-\n-#define ASM_SPEC32 \"-a32 \\\n-%{mrelocatable} %{mrelocatable-lib} %{fpic:-K PIC} %{fPIC:-K PIC} \\\n-%{memb} %{!memb: %{msdata=eabi: -memb}} \\\n-%{!mlittle: %{!mlittle-endian: %{!mbig: %{!mbig-endian: \\\n-    %{mcall-freebsd: -mbig} \\\n-    %{mcall-i960-old: -mlittle} \\\n-    %{mcall-linux: -mbig} \\\n-    %{mcall-gnu: -mbig} \\\n-    %{mcall-netbsd: -mbig} \\\n-}}}}\"\n-\n-#define ASM_SPEC64 \"-a64\"\n-\n-#define ASM_SPEC_COMMON \"%(asm_cpu) \\\n-%{,assembler|,assembler-with-cpp: %{mregnames} %{mno-regnames}} \\\n-%{mlittle} %{mlittle-endian} %{mbig} %{mbig-endian}\"\n-\n-#undef\tSUBSUBTARGET_EXTRA_SPECS\n-#define SUBSUBTARGET_EXTRA_SPECS \\\n-  { \"asm_spec_common\",\t\tASM_SPEC_COMMON },\t\t\t\\\n-  { \"asm_spec32\",\t\tASM_SPEC32 },\t\t\t\t\\\n-  { \"asm_spec64\",\t\tASM_SPEC64 },\t\t\t\t\\\n-  { \"link_os_freebsd_spec32\",\tLINK_OS_FREEBSD_SPEC32 },     \t\t\\\n-  { \"link_os_freebsd_spec64\",\tLINK_OS_FREEBSD_SPEC64 },\n-\n-#define FREEBSD_DYNAMIC_LINKER32 \"/libexec/ld-elf32.so.1\"\n-#define FREEBSD_DYNAMIC_LINKER64 \"/libexec/ld-elf.so.1\"\n-\n-#define LINK_OS_FREEBSD_SPEC_DEF32 \"\\\n-  %{p:%nconsider using `-pg' instead of `-p' with gprof(1)} \\\n-  %{v:-V}\t\t\t\t\t\t    \\\n-  %{assert*} %{R*} %{rpath*} %{defsym*}\t\t\t    \\\n-  %{shared:-Bshareable %{h*} %{soname*}}\t\t    \\\n-  %{!shared:\t\t\t\t\t\t    \\\n-    %{!static:\t\t\t\t\t\t    \\\n-      %{rdynamic: -export-dynamic}\t\t\t\t       \\\n-      %{!dynamic-linker:-dynamic-linker \" FREEBSD_DYNAMIC_LINKER32 \"}} \\\n-    %{static:-Bstatic}}\t\t\t\t\t\t       \\\n-  %{symbolic:-Bsymbolic}\"\n-\n-#define LINK_OS_FREEBSD_SPEC_DEF64 \"\\\n-  %{p:%nconsider using `-pg' instead of `-p' with gprof(1)} \\\n-  %{v:-V}\t\t\t\t\t\t    \\\n-  %{assert*} %{R*} %{rpath*} %{defsym*}\t\t\t    \\\n-  %{shared:-Bshareable %{h*} %{soname*}}\t\t    \\\n-  %{!shared:\t\t\t\t\t\t    \\\n-    %{!static:\t\t\t\t\t\t    \\\n-      %{rdynamic: -export-dynamic}\t\t\t\t       \\\n-      %{!dynamic-linker:-dynamic-linker \" FREEBSD_DYNAMIC_LINKER64 \"}} \\\n-    %{static:-Bstatic}}\t\t\t\t\t\t       \\\n-  %{symbolic:-Bsymbolic}\"\n-\n-#define LINK_OS_FREEBSD_SPEC32 \"-melf32ppc_fbsd \" LINK_OS_FREEBSD_SPEC_DEF32\n-  \n-#define LINK_OS_FREEBSD_SPEC64 \"-melf64ppc_fbsd \" LINK_OS_FREEBSD_SPEC_DEF64\n-\n-#undef\tMULTILIB_DEFAULTS\n-#if DEFAULT_ARCH64_P\n-#define MULTILIB_DEFAULTS { \"m64\" }\n-#else\n-#define MULTILIB_DEFAULTS { \"m32\" }\n-#endif\n-\n-#ifndef RS6000_BI_ARCH\n-\n-/* Some things from sysv4.h we don't do when 64 bit.  */\n-#undef  TARGET_RELOCATABLE\n-#define TARGET_RELOCATABLE      0\n-#undef  TARGET_EABI\n-#define TARGET_EABI             0\n-#undef  TARGET_PROTOTYPE\n-#define TARGET_PROTOTYPE        0\n-#undef RELOCATABLE_NEEDS_FIXUP\n-#define RELOCATABLE_NEEDS_FIXUP 0\n-\n-#endif\n-\n-/* PowerPC-64 FreeBSD increases natural record alignment to doubleword if\n-   the first field is an FP double, only if in power alignment mode.  */\n-#undef  ROUND_TYPE_ALIGN\n-#define ROUND_TYPE_ALIGN(STRUCT, COMPUTED, SPECIFIED)\t\t\t\\\n-  ((TARGET_64BIT\t\t\t\t\t\t\t\\\n-    && (TREE_CODE (STRUCT) == RECORD_TYPE\t\t\t\t\\\n-\t|| TREE_CODE (STRUCT) == UNION_TYPE\t\t\t\t\\\n-\t|| TREE_CODE (STRUCT) == QUAL_UNION_TYPE)\t\t\t\\\n-    && TARGET_ALIGN_NATURAL == 0)\t\t\t\t\t\\\n-   ? rs6000_special_round_type_align (STRUCT, COMPUTED, SPECIFIED)\t\\\n-   : MAX ((COMPUTED), (SPECIFIED)))\n-\n-/* Use the default for compiling target libs.  */\n-#ifdef IN_TARGET_LIBS\n-#undef TARGET_ALIGN_NATURAL\n-#define TARGET_ALIGN_NATURAL 1\n-#endif\n-\n-/* Indicate that jump tables go in the text section.  */\n-#undef  JUMP_TABLES_IN_TEXT_SECTION\n-#define JUMP_TABLES_IN_TEXT_SECTION TARGET_64BIT\n-\n-/* The linux ppc64 ABI isn't explicit on whether aggregates smaller\n-   than a doubleword should be padded upward or downward.  You could\n-   reasonably assume that they follow the normal rules for structure\n-   layout treating the parameter area as any other block of memory,\n-   then map the reg param area to registers.  i.e. pad upward.\n-   Setting both of the following defines results in this behavior.\n-   Setting just the first one will result in aggregates that fit in a\n-   doubleword being padded downward, and others being padded upward.\n-   Not a bad idea as this results in struct { int x; } being passed\n-   the same way as an int.  */\n-#define AGGREGATE_PADDING_FIXED TARGET_64BIT\n-#define AGGREGATES_PAD_UPWARD_ALWAYS 0\n-\n-/* Specify padding for the last element of a block move between\n-   registers and memory.  FIRST is nonzero if this is the only\n-   element.  */\n-#define BLOCK_REG_PADDING(MODE, TYPE, FIRST) \\\n-  (!(FIRST) ? upward : FUNCTION_ARG_PADDING (MODE, TYPE))\n-\n-/* FreeBSD doesn't support saving and restoring 64-bit regs with a 32-bit\n-   kernel. This is supported when running on a 64-bit kernel with\n-   COMPAT_FREEBSD32, but tell GCC it isn't so that our 32-bit binaries\n-   are compatible. */\n-#define OS_MISSING_POWERPC64 !TARGET_64BIT\n-\n-#undef  FBSD_TARGET_CPU_CPP_BUILTINS\n-#define FBSD_TARGET_CPU_CPP_BUILTINS()\t\t\t\\\n-  do\t\t\t\t\t\t\t\\\n-    {\t\t\t\t\t\t\t\\\n-      if (TARGET_64BIT)\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\\\n-\t  builtin_define (\"__PPC__\");\t\t\t\\\n-\t  builtin_define (\"__PPC64__\");\t\t\t\\\n-\t  builtin_define (\"__powerpc__\");\t\t\\\n-\t  builtin_define (\"__powerpc64__\");\t\t\\\n-\t  builtin_assert (\"cpu=powerpc64\");\t\t\\\n-\t  builtin_assert (\"machine=powerpc64\");\t\t\\\n-\t}\t\t\t\t\t\t\\\n-      else\t\t\t\t\t\t\\\n-\t{\t\t\t\t\t\t\\\n-\t  builtin_define_std (\"PPC\");\t\t\t\\\n-\t  builtin_define_std (\"powerpc\");\t\t\\\n-\t  builtin_assert (\"cpu=powerpc\");\t\t\\\n-\t  builtin_assert (\"machine=powerpc\");\t\t\\\n-\t  TARGET_OS_SYSV_CPP_BUILTINS ();\t\t\\\n-\t}\t\t\t\t\t\t\\\n-    }\t\t\t\t\t\t\t\\\n-  while (0)\n-\n-#undef\tCPP_OS_DEFAULT_SPEC\n-#define CPP_OS_DEFAULT_SPEC \"%(cpp_os_freebsd)\"\n-\n-#undef CPP_OS_FREEBSD_SPEC\n-#define CPP_OS_FREEBSD_SPEC \"\"\n-\n-#undef\tSTARTFILE_DEFAULT_SPEC\n-#define STARTFILE_DEFAULT_SPEC \"%(startfile_freebsd)\"\n-\n-#undef\tENDFILE_DEFAULT_SPEC\n-#define ENDFILE_DEFAULT_SPEC \"%(endfile_freebsd)\"\n-\n-#undef\tLIB_DEFAULT_SPEC\n-#define LIB_DEFAULT_SPEC \"%(lib_freebsd)\"\n-\n-#undef\tLINK_START_DEFAULT_SPEC\n-#define LINK_START_DEFAULT_SPEC \"%(link_start_freebsd)\"\n-\n-#undef\tLINK_OS_DEFAULT_SPEC\n-#define\tLINK_OS_DEFAULT_SPEC \"%(link_os_freebsd)\"\n-\n-/* XXX: This is wrong for many platforms in sysv4.h.\n-   We should work on getting that definition fixed.  */\n-#undef  LINK_SHLIB_SPEC\n-#define LINK_SHLIB_SPEC \"%{shared:-shared} %{!shared: %{static:-static}}\"\n-\n-\n-/************************[  Target stuff  ]***********************************/\n-\n-/* Define the actual types of some ANSI-mandated types.  \n-   Needs to agree with <machine/ansi.h>.  GCC defaults come from c-decl.c,\n-   c-common.c, and config/<arch>/<arch>.h.  */\n-\n-\n-#undef  SIZE_TYPE\n-#define SIZE_TYPE (TARGET_64BIT ? \"long unsigned int\" : \"unsigned int\")\n-\n-#undef  PTRDIFF_TYPE\n-#define PTRDIFF_TYPE\t(TARGET_64BIT ? \"long int\" : \"int\")\n-\n-/* rs6000.h gets this wrong for FreeBSD.  We use the GCC defaults instead.  */\n-#undef WCHAR_TYPE\n-#define\tWCHAR_TYPE      (TARGET_64BIT ? \"int\" : \"long int\")\n-#undef  WCHAR_TYPE_SIZE\n-#define WCHAR_TYPE_SIZE 32\n-\n-\n-/* Override rs6000.h definition.  */\n-#undef  ASM_APP_ON\n-#define ASM_APP_ON \"#APP\\n\"\n-\n-/* Override rs6000.h definition.  */\n-#undef  ASM_APP_OFF\n-#define ASM_APP_OFF \"#NO_APP\\n\"\n-\n-/* PowerPC no-op instruction.  */\n-#undef  RS6000_CALL_GLUE\n-#define RS6000_CALL_GLUE (TARGET_64BIT ? \"nop\" : \"cror 31,31,31\")\n-\n-/* Function profiling bits */\n-#undef  RS6000_MCOUNT\n-#define RS6000_MCOUNT ((TARGET_64BIT) ? \"._mcount\" : \"_mcount\")\n-#define PROFILE_HOOK(LABEL) \\\n-  do { if (TARGET_64BIT) output_profile_hook (LABEL); } while (0)\n-\n-/* _init and _fini functions are built from bits spread across many\n-   object files, each potentially with a different TOC pointer.  For\n-   that reason, place a nop after the call so that the linker can\n-   restore the TOC pointer if a TOC adjusting call stub is needed.  */\n-#ifdef __powerpc64__\n-#if DOT_SYMBOLS\n-#define CRT_CALL_STATIC_FUNCTION(SECTION_OP, FUNC)\t\\\n-  asm (SECTION_OP \"\\n\"\t\t\t\t\t\\\n-\"\tbl .\" #FUNC \"\\n\"\t\t\t\t\\\n-\"\tnop\\n\"\t\t\t\t\t\t\\\n-\"\t.previous\");\n-#else\n-#define CRT_CALL_STATIC_FUNCTION(SECTION_OP, FUNC)\t\\\n-  asm (SECTION_OP \"\\n\"\t\t\t\t\t\\\n-\"\tbl \" #FUNC \"\\n\"\t\t\t\t\t\\\n-\"\tnop\\n\"\t\t\t\t\t\t\\\n-\"\t.previous\");\n-#endif\n-#endif\n-\n-/* FP save and restore routines.  */\n-#undef  SAVE_FP_PREFIX\n-#define SAVE_FP_PREFIX (TARGET_64BIT ? \"._savef\" : \"_savefpr_\")\n-#undef  SAVE_FP_SUFFIX\n-#define SAVE_FP_SUFFIX \"\"\n-#undef  RESTORE_FP_PREFIX\n-#define RESTORE_FP_PREFIX (TARGET_64BIT ? \"._restf\" : \"_restfpr_\")\n-#undef  RESTORE_FP_SUFFIX\n-#define RESTORE_FP_SUFFIX \"\"\n-\n-/* Select a format to encode pointers in exception handling data.  CODE\n-   is 0 for data, 1 for code labels, 2 for function pointers.  GLOBAL is\n-   true if the symbol may be affected by dynamic relocations.  */\n-#undef\tASM_PREFERRED_EH_DATA_FORMAT\n-#define\tASM_PREFERRED_EH_DATA_FORMAT(CODE, GLOBAL) \\\n-  ((TARGET_64BIT || flag_pic || TARGET_RELOCATABLE)\t\t\t\\\n-   ? (((GLOBAL) ? DW_EH_PE_indirect : 0) | DW_EH_PE_pcrel\t\t\\\n-      | (TARGET_64BIT ? DW_EH_PE_udata8 : DW_EH_PE_sdata4))\t\t\\\n-   : DW_EH_PE_absptr)\n-\n-/* Static stack checking is supported by means of probes.  */\n-#define STACK_CHECK_STATIC_BUILTIN 1\n-\n-/* The default value isn't sufficient in 64-bit mode.  */\n-#define STACK_CHECK_PROTECT (TARGET_64BIT ? 16 * 1024 : 12 * 1024)\n-\n-#define DBX_REGISTER_NUMBER(REGNO) rs6000_dbx_register_number (REGNO)\n-\n-/* PowerPC64 Linux word-aligns FP doubles when -malign-power is given.  */\n-#undef  ADJUST_FIELD_ALIGN\n-#define ADJUST_FIELD_ALIGN(FIELD, COMPUTED) \\\n-  ((TARGET_ALTIVEC && TREE_CODE (TREE_TYPE (FIELD)) == VECTOR_TYPE)     \\\n-   ? 128                                                                \\\n-   : (TARGET_64BIT                                                      \\\n-      && TARGET_ALIGN_NATURAL == 0                                      \\\n-      && TYPE_MODE (strip_array_types (TREE_TYPE (FIELD))) == DFmode)   \\\n-   ? MIN ((COMPUTED), 32)                                               \\\n-   : (COMPUTED))\n-\n-#undef  TOC_SECTION_ASM_OP\n-#define TOC_SECTION_ASM_OP\t\t\t\t\\\n-  (TARGET_64BIT                                         \\\n-   ? \"\\t.section\\t\\\".toc\\\",\\\"aw\\\"\"                      \\\n-   : \"\\t.section\\t\\\".got\\\",\\\"aw\\\"\")\n-\n-#undef  MINIMAL_TOC_SECTION_ASM_OP\n-#define MINIMAL_TOC_SECTION_ASM_OP\t\t\t\\\n-  (TARGET_64BIT                                         \\\n-   ? \"\\t.section\\t\\\".toc1\\\",\\\"aw\\\"\"                     \\\n-   : ((TARGET_RELOCATABLE || flag_pic)                  \\\n-      ? \"\\t.section\\t\\\".got2\\\",\\\"aw\\\"\"                  \\\n-      : \"\\t.section\\t\\\".got1\\\",\\\"aw\\\"\"))\n-\n-/* This is how to declare the size of a function.  */\n-#undef  ASM_DECLARE_FUNCTION_SIZE\n-#define ASM_DECLARE_FUNCTION_SIZE(FILE, FNAME, DECL)                    \\\n-  do                                                                    \\\n-    {                                                                   \\\n-      if (!flag_inhibit_size_directive)                                 \\\n-        {                                                               \\\n-          fputs (\"\\t.size\\t\", (FILE));                                  \\\n-          if (TARGET_64BIT && DOT_SYMBOLS)                              \\\n-            putc ('.', (FILE));                                         \\\n-          assemble_name ((FILE), (FNAME));                              \\\n-          fputs (\",.-\", (FILE));                                        \\\n-          rs6000_output_function_entry (FILE, FNAME);                   \\\n-          putc ('\\n', (FILE));                                          \\\n-        }                                                               \\\n-    }                                                                   \\\n-  while (0)\n-\n-#undef  ASM_OUTPUT_SPECIAL_POOL_ENTRY_P\n-#define ASM_OUTPUT_SPECIAL_POOL_ENTRY_P(X, MODE)                        \\\n-  (TARGET_TOC                                                           \\\n-   && (GET_CODE (X) == SYMBOL_REF                                       \\\n-       || (GET_CODE (X) == CONST && GET_CODE (XEXP (X, 0)) == PLUS      \\\n-           && GET_CODE (XEXP (XEXP (X, 0), 0)) == SYMBOL_REF)           \\\n-       || GET_CODE (X) == LABEL_REF                                     \\\n-       || (GET_CODE (X) == CONST_INT                                    \\\n-           && GET_MODE_BITSIZE (MODE) <= GET_MODE_BITSIZE (Pmode))      \\\n-       || (GET_CODE (X) == CONST_DOUBLE                                 \\\n-           && ((TARGET_64BIT                                            \\\n-                && (TARGET_MINIMAL_TOC                                  \\\n-                    || (SCALAR_FLOAT_MODE_P (GET_MODE (X))              \\\n-                        && ! TARGET_NO_FP_IN_TOC)))                     \\\n-               || (!TARGET_64BIT                                        \\\n-                   && !TARGET_NO_FP_IN_TOC                              \\\n-                   && !TARGET_RELOCATABLE                               \\\n-                   && SCALAR_FLOAT_MODE_P (GET_MODE (X))                \\\n-                   && BITS_PER_WORD == HOST_BITS_PER_INT)))))\n-"}, {"sha": "30a686a0bfbf52b0ba21ec8808b85f1f445ff03f", "filename": "gcc/config/rs6000/t-freebsd64", "status": "modified", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ad648ade927dab484c38390ba5402f088d543261/gcc%2Fconfig%2Frs6000%2Ft-freebsd64", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ad648ade927dab484c38390ba5402f088d543261/gcc%2Fconfig%2Frs6000%2Ft-freebsd64", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Ft-freebsd64?ref=ad648ade927dab484c38390ba5402f088d543261", "patch": "@@ -29,38 +29,3 @@ MULTILIB_EXCLUSIONS     = !m32/msoft-float\n MULTILIB_OSDIRNAMES\t= ../lib32\n #MULTILIB_MATCHES        = $(MULTILIB_MATCHES_FLOAT)\n \n-\n-#rs6000/t-freebsd64\n-\n-# Copyright (C) 2011, Free Software Foundation, Inc.\n-#\n-# This file is part of GCC.\n-#\n-# GCC is free software; you can redistribute it and/or modify\n-# it under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3, or (at your option)\n-# any later version.\n-#\n-# GCC is distributed in the hope that it will be useful,\n-# but WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-# GNU General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with GCC; see the file COPYING3.  If not see\n-# <http://www.gnu.org/licenses/>.\n-\n-TARGET_LIBGCC2_CFLAGS += -mno-minimal-toc\n-\n-# On FreeBSD the 32-bit libraries are found under /usr/lib32.\n-# Set MULTILIB_OSDIRNAMES according to this.\n-\n-MULTILIB_OPTIONS        = m32 msoft-float\n-MULTILIB_DIRNAMES       = 32 nof\n-MULTILIB_EXTRA_OPTS     = fPIC mstrict-align\n-MULTILIB_EXCEPTIONS     =\n-MULTILIB_EXCLUSIONS     = !m32/msoft-float \n-MULTILIB_OSDIRNAMES\t= ../lib32\n-\n-softfp_wrap_start := '\\#ifndef __powerpc64__'\n-softfp_wrap_end := '\\#endif'"}]}