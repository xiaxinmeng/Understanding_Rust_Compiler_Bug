{"sha": "34afa19d29c5bf0b0f504e4d0aca4e9a8bc82c5c", "node_id": "C_kwDOANBUbNoAKDM0YWZhMTlkMjljNWJmMGIwZjUwNGU0ZDBhY2E0ZTlhOGJjODJjNWM", "commit": {"author": {"name": "Xi Ruoyao", "email": "xry111@mengyan1223.wang", "date": "2022-01-30T17:15:20Z"}, "committer": {"name": "Xi Ruoyao", "email": "xry111@mengyan1223.wang", "date": "2022-02-01T10:20:57Z"}, "message": "fold-const: do not fold NaN result from non-NaN operands [PR95115]\n\nThese operations should raise an invalid operation exception at runtime.\nSo they should not be folded during compilation unless -fno-trapping-math\nis used.\n\ngcc/\n\tPR middle-end/95115\n\t* fold-const.cc (const_binop): Do not fold NaN result from\n\t  non-NaN operands.\n\ngcc/testsuite\n\t* gcc.dg/pr95115.c: New test.", "tree": {"sha": "974df02b77f39a5ad90e502b19d94fcef6d406f6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/974df02b77f39a5ad90e502b19d94fcef6d406f6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/34afa19d29c5bf0b0f504e4d0aca4e9a8bc82c5c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEEunTLnZqV9wGnXaw2V5HFsy7NNwFAmH5CYkACgkQ2V5HFsy7\nNNzvcg//YmaUDELZ9nZ7+sw1PQ3m/9obFyIyNwprloIvXRhGWRqu/LrnByu1Xf8B\nfsEUNPRIfmzm2ceK4uGsvvjN70g1TvLa8BnIWmwRDPy6crrGL01CvUZxf2UV1n0/\nMSTbYmvAMEzNuIIEwIXb3St7ogHn7v2ICjeX4Ch0z8gfnCFdvsTTdrovS/Runc+k\nl4/H0j062YlZLm+RQ6UdCBIAUAeARZwFxxpQEeuUm6SFc6bWix/bjuAEffvXWA5h\nWzSQCecKh33hzvvGl8M7R1eGnmY/tny5m6qjnbLP759p6p4PinYADfbFqJYy97Nj\nzKQNnr5qffdQpK+tEJ4jimGY73UPT4ZLRhOCXtriMZivJJrsfkcgxeK8WULYGb5E\ndX/o+zTVL6MsS646esf7p+Bg1ol+JKTakvV/C7+SLsRQh3yWaY+6m0z2alL+lW4a\noJtAyIhjd2RYmdRiXZmG+loLY0b6IfvrbqHZmBLz+5cvOb9xxpG/GpTM0cOZnHHa\nLvz8jcO3DTiQeslmtkEjdUvlQIAGrSo2ccTLGjk8LdmtNyZx/jdVc4tOKLKUmqek\nPb/Gmlbgv45nNxTF3z7IXenOYM064cEZKGo8UZRzIs6vOqS6HdWyBgiDydwC23Jl\nQpav6kItjmJTVU2+FF+/JATUnT8QU5hZ3Y1xZ/IRjffl+f56Xtc=\n=XYQH\n-----END PGP SIGNATURE-----", "payload": "tree 974df02b77f39a5ad90e502b19d94fcef6d406f6\nparent d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8\nauthor Xi Ruoyao <xry111@mengyan1223.wang> 1643562920 +0800\ncommitter Xi Ruoyao <xry111@mengyan1223.wang> 1643710857 +0800\n\nfold-const: do not fold NaN result from non-NaN operands [PR95115]\n\nThese operations should raise an invalid operation exception at runtime.\nSo they should not be folded during compilation unless -fno-trapping-math\nis used.\n\ngcc/\n\tPR middle-end/95115\n\t* fold-const.cc (const_binop): Do not fold NaN result from\n\t  non-NaN operands.\n\ngcc/testsuite\n\t* gcc.dg/pr95115.c: New test.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34afa19d29c5bf0b0f504e4d0aca4e9a8bc82c5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/34afa19d29c5bf0b0f504e4d0aca4e9a8bc82c5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/34afa19d29c5bf0b0f504e4d0aca4e9a8bc82c5c/comments", "author": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xry111", "id": 8733039, "node_id": "MDQ6VXNlcjg3MzMwMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/8733039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xry111", "html_url": "https://github.com/xry111", "followers_url": "https://api.github.com/users/xry111/followers", "following_url": "https://api.github.com/users/xry111/following{/other_user}", "gists_url": "https://api.github.com/users/xry111/gists{/gist_id}", "starred_url": "https://api.github.com/users/xry111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xry111/subscriptions", "organizations_url": "https://api.github.com/users/xry111/orgs", "repos_url": "https://api.github.com/users/xry111/repos", "events_url": "https://api.github.com/users/xry111/events{/privacy}", "received_events_url": "https://api.github.com/users/xry111/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d43fbc7d3f7621e1c8f153c1471d2a5cd20bfdc8"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "8fc01cdfb773a8f5a89a8874c614324649227547", "filename": "gcc/fold-const.cc", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34afa19d29c5bf0b0f504e4d0aca4e9a8bc82c5c/gcc%2Ffold-const.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34afa19d29c5bf0b0f504e4d0aca4e9a8bc82c5c/gcc%2Ffold-const.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.cc?ref=34afa19d29c5bf0b0f504e4d0aca4e9a8bc82c5c", "patch": "@@ -1305,6 +1305,17 @@ const_binop (enum tree_code code, tree arg1, tree arg2)\n       inexact = real_arithmetic (&value, code, &d1, &d2);\n       real_convert (&result, mode, &value);\n \n+      /* Don't constant fold this floating point operation if\n+\t both operands are not NaN but the result is NaN, and\n+\t flag_trapping_math.  Such operations should raise an\n+\t invalid operation exception.  */\n+      if (flag_trapping_math\n+\t  && MODE_HAS_NANS (mode)\n+\t  && REAL_VALUE_ISNAN (result)\n+\t  && !REAL_VALUE_ISNAN (d1)\n+\t  && !REAL_VALUE_ISNAN (d2))\n+\treturn NULL_TREE;\n+\n       /* Don't constant fold this floating point operation if\n \t the result has overflowed and flag_trapping_math.  */\n       if (flag_trapping_math"}, {"sha": "46a95dfb6985d31254b6a74e889b53eccf5e6952", "filename": "gcc/testsuite/gcc.dg/pr95115.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/34afa19d29c5bf0b0f504e4d0aca4e9a8bc82c5c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr95115.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/34afa19d29c5bf0b0f504e4d0aca4e9a8bc82c5c/gcc%2Ftestsuite%2Fgcc.dg%2Fpr95115.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr95115.c?ref=34afa19d29c5bf0b0f504e4d0aca4e9a8bc82c5c", "patch": "@@ -0,0 +1,25 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -ftrapping-math\" } */\n+/* { dg-add-options ieee } */\n+/* { dg-require-effective-target fenv_exceptions } */\n+\n+#include <fenv.h>\n+#include <stdlib.h>\n+\n+double\n+x (void)\n+{\n+  double d = __builtin_inf ();\n+  return d / d;\n+}\n+\n+int\n+main (void)\n+{\n+  double r = x ();\n+  if (!__builtin_isnan (r))\n+\tabort ();\n+  if (!fetestexcept (FE_INVALID))\n+\tabort ();\n+  exit (0);\n+}"}]}