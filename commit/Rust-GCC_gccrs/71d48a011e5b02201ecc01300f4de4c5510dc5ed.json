{"sha": "71d48a011e5b02201ecc01300f4de4c5510dc5ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzFkNDhhMDExZTViMDIyMDFlY2MwMTMwMGY0ZGU0YzU1MTBkYzVlZA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.com", "date": "2000-09-25T09:16:37Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2000-09-25T09:16:37Z"}, "message": "definitions in config/i3*:\n\nChanges add TABs on either or both sides, covering start of line,\nup to any operand for all .*ASM.*_OP definitions.\n\nFrom-SVN: r36607", "tree": {"sha": "17d1d4df5aa472becd315deecba93cae4ddc22ba", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17d1d4df5aa472becd315deecba93cae4ddc22ba"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/71d48a011e5b02201ecc01300f4de4c5510dc5ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71d48a011e5b02201ecc01300f4de4c5510dc5ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/71d48a011e5b02201ecc01300f4de4c5510dc5ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/71d48a011e5b02201ecc01300f4de4c5510dc5ed/comments", "author": {"login": "hpataxisdotcom", "id": 80339731, "node_id": "MDQ6VXNlcjgwMzM5NzMx", "avatar_url": "https://avatars.githubusercontent.com/u/80339731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hpataxisdotcom", "html_url": "https://github.com/hpataxisdotcom", "followers_url": "https://api.github.com/users/hpataxisdotcom/followers", "following_url": "https://api.github.com/users/hpataxisdotcom/following{/other_user}", "gists_url": "https://api.github.com/users/hpataxisdotcom/gists{/gist_id}", "starred_url": "https://api.github.com/users/hpataxisdotcom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hpataxisdotcom/subscriptions", "organizations_url": "https://api.github.com/users/hpataxisdotcom/orgs", "repos_url": "https://api.github.com/users/hpataxisdotcom/repos", "events_url": "https://api.github.com/users/hpataxisdotcom/events{/privacy}", "received_events_url": "https://api.github.com/users/hpataxisdotcom/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e8aa65c64d0dad354fb261a7fdc5096e9d8c8d1"}], "stats": {"total": 175, "additions": 105, "deletions": 70}, "files": [{"sha": "6f779a8b11d1651f932c97a46263207d04b62768", "filename": "gcc/ChangeLog", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -83,6 +83,41 @@\n \t* config/gmicro/gmicro.h (TEXT_SECTION_ASM_OP,\n \tDATA_SECTION_ASM_OP, BSS_SECTION_ASM_OP): Here.\n \t* config/h8300/h8300.h (ASM_WORD_OP): Here.\n+\t* config/i370/i370.h (TEXT_SECTION_ASM_OP, DATA_SECTION_ASM_OP,\n+\tBSS_SECTION_ASM_OP): Here.\n+\t* config/i386/aix386.h (INIT_SECTION_ASM_OP): Here.\n+\t* config/i386/bsd.h (ASM_BYTE_OP): Here.\n+\t* config/i386/cygwin.h (SET_ASM_OP, INT_ASM_OP): Here.\n+\t* config/i386/dgux.h (CONST_SECTION_ASM_OP): Here.\n+\t* config/i386/djgpp.h (IDENT_ASM_OP, INT_ASM_OP, SET_ASM_OP):\n+\tHere.\n+\t* config/i386/freebsd-elf.h (SET_ASM_OP): Here.\n+\t* config/i386/freebsd.h (TYPE_ASM_OP, SIZE_ASM_OP, INT_ASM_OP):\n+\tHere.\n+\t* config/i386/i386-coff.h (CTORS_SECTION_ASM_OP,\n+\tDTORS_SECTION_ASM_OP, INT_ASM_OP): Here.\n+\t* config/i386/i386-interix.h (STRING_ASM_OP, CONST_SECTION_ASM_OP,\n+\tCTORS_SECTION_ASM_OP, DTORS_SECTION_ASM_OP, INT_ASM_OP,\n+\tSET_ASM_OP): Here.\n+\t* config/i386/i386elf.h (BSS_SECTION_ASM_OP): Here.\n+\t* config/i386/netbsd.h (INT_ASM_OP): Here.\n+\t* config/i386/openbsd.h (INT_ASM_OP): Here.\n+\t* config/i386/osfrose.h (TYPE_ASM_OP, SIZE_ASM_OP, SET_ASM_OP,\n+\tIDENT_ASM_OP): Here.\n+\t* config/i386/sco5.h (ALIGN_ASM_OP, ASCII_DATA_ASM_OP,\n+\tASM_BYTE_OP, IDENT_ASM_OP, COMMON_ASM_OP, SET_ASM_OP,\n+\tLOCAL_ASM_OP, INT_ASM_OP, TYPE_ASM_OP, SIZE_ASM_OP, STRING_ASM_OP,\n+\tSKIP_ASM_OP, GLOBAL_ASM_OP): Here.\n+\t* config/i386/seq-sysv3.h (SHARED_SECTION_ASM_OP,\n+\tSHARED_BSS_SECTION_ASM_OP): Here.\n+\t* config/i386/sequent.h (SHARED_SECTION_ASM_OP): Here.\n+\t* config/i386/sun386.h (ASM_BYTE_OP, TEXT_SECTION_ASM_OP,\n+\tDATA_SECTION_ASM_OP): Here.\n+\t* config/i386/svr3gas.h (INIT_SECTION_ASM_OP, FINI_SECTION_ASM_OP,\n+\tCONST_SECTION_ASM_OP): Here.\n+\t* config/i386/sysv3.h (INIT_SECTION_ASM_OP): Here.\n+\t* config/i386/unix.h (TEXT_SECTION_ASM_OP, DATA_SECTION_ASM_OP,\n+\tBSS_SECTION_ASM_OP): Here.\n \n 2000-09-25  Richard Henderson  <rth@cygnus.com>\n "}, {"sha": "1c878ad0f345a654d00a1f2dd4e35b70e9ddba82", "filename": "gcc/config/i370/i370.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi370%2Fi370.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi370%2Fi370.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi370%2Fi370.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -2123,13 +2123,13 @@ abort(); \\\n #define TARGET_MEM_FUNCTIONS\n  \n /* Output before read-only data.  */\n-#define TEXT_SECTION_ASM_OP \".text\"\n+#define TEXT_SECTION_ASM_OP \"\\t.text\"\n \n /* Output before writable (initialized) data.  */\n-#define DATA_SECTION_ASM_OP \".data\"\n+#define DATA_SECTION_ASM_OP \"\\t.data\"\n \n /* Output before writable (uninitialized) data.  */\n-#define BSS_SECTION_ASM_OP \".bss\"\n+#define BSS_SECTION_ASM_OP \"\\t.bss\"\n \n /* In the past there was confusion as to what the argument to .align was\n    in GAS.  For the last several years the rule has been this: for a.out"}, {"sha": "a9115ad5ce73361d8d6d11fef5f01496f9435685", "filename": "gcc/config/i386/aix386.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Faix386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Faix386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Faix386.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -1,6 +1,6 @@\n /* Definitions for IBM PS2 running AIX/386 with gas.\n    From: Minh Tran-Le <TRANLE@intellicorp.com>\n-   Copyright (C) 1988 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -53,7 +53,7 @@ Boston, MA 02111-1307, USA.  */\n    constructors.  */\n \n #undef INIT_SECTION_ASM_OP\n-#define INIT_SECTION_ASM_OP     \".section .init,\\\"x\\\"\"\n+#define INIT_SECTION_ASM_OP     \"\\t.section .init,\\\"x\\\"\"\n \n #define CTOR_LIST_BEGIN\t\t\t\t\\\n   asm (INIT_SECTION_ASM_OP);\t\t\t\\"}, {"sha": "1666696cbfc6380933ae0769a24e118fa44c0d44", "filename": "gcc/config/i386/bsd.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fbsd.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -1,7 +1,7 @@\n /* Definitions for BSD assembler syntax for Intel 386\n    (actually AT&T syntax for insns and operands,\n    adapted to BSD conventions for symbol names and debugging.)\n-   Copyright (C) 1988, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1996, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -40,7 +40,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Assembler pseudos to introduce constants of various size.  */\n \n-#define ASM_BYTE_OP \"\\t.byte\"\n+#define ASM_BYTE_OP \"\\t.byte\\t\"\n #define ASM_SHORT \"\\t.word\"\n #define ASM_LONG \"\\t.long\"\n #define ASM_DOUBLE \"\\t.double\""}, {"sha": "d6398af7b65d85f8b6d0ceec44bb25efed5a7090", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -532,10 +532,10 @@ extern void i386_pe_asm_file_end STDIO_PARAMS ((FILE *));\n \n /* Enable alias attribute support.  */\n #ifndef SET_ASM_OP\n-#define SET_ASM_OP \"\\t.set\"\n+#define SET_ASM_OP \"\\t.set\\t\"\n #endif\n \n #ifndef INT_ASM_OP\n-#define INT_ASM_OP \".long\"\n+#define INT_ASM_OP \"\\t.long\\t\"\n #endif\n "}, {"sha": "752ae3c2af1f49f4c747d00e9115b9b464241720", "filename": "gcc/config/i386/dgux.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fdgux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fdgux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdgux.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -27,7 +27,7 @@ Boston, MA 02111-1307, USA.  */\n #include \"i386/sysv4.h\"\n \n #ifndef VERSION_INFO2\n-#define VERSION_INFO2   \"$Revision: 1.10 $\"\n+#define VERSION_INFO2   \"$Revision: 1.11 $\"\n #endif\n \n #ifndef VERSION_STRING\n@@ -251,4 +251,4 @@ Boston, MA 02111-1307, USA.  */\n \n /* Add .align 1 to avoid .backalign bug in assembler */\n #undef CONST_SECTION_ASM_OP\n-#define CONST_SECTION_ASM_OP    \".section\\t.rodata\\n\\t.align 1\"\n+#define CONST_SECTION_ASM_OP    \"\\t.section\\t.rodata\\n\\t.align 1\""}, {"sha": "762178a7b4804ca39bf80a72b6c3d693521aa7e5", "filename": "gcc/config/i386/djgpp.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fdjgpp.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fdjgpp.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -60,15 +60,15 @@ Boston, MA 02111-1307, USA.  */\n \n /* Define the name of the .ident op.  */\n #undef IDENT_ASM_OP\n-#define IDENT_ASM_OP \"\\t.ident\"\n+#define IDENT_ASM_OP \"\\t.ident\\t\"\n \n /* Define the name of the .int op.  */\n #undef INT_ASM_OP\n-#define INT_ASM_OP \"\\t.long\"\n+#define INT_ASM_OP \"\\t.long\\t\"\n \n /* Enable alias attribute support.  */\n #ifndef SET_ASM_OP\n-#define SET_ASM_OP \"\\t.set\"\n+#define SET_ASM_OP \"\\t.set\\t\"\n #endif\n \n /* Define the name of the .text section.  */"}, {"sha": "4653346f4bb24541e6c857d4352fa6ee12d35462", "filename": "gcc/config/i386/freebsd-elf.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Ffreebsd-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Ffreebsd-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd-elf.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Intel 386 running FreeBSD with ELF format\n-   Copyright (C) 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1996, 2000 Free Software Foundation, Inc.\n    Contributed by Eric Youngdale.\n    Modified for stabs-in-ELF by H.J. Lu.\n    Adapted from GNU/Linux version by John Polstra.\n@@ -36,7 +36,7 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_APP_OFF \"#NO_APP\\n\"\n \n #undef SET_ASM_OP\n-#define SET_ASM_OP\t\".set\"\n+#define SET_ASM_OP\t\"\\t.set\\t\"\n \n /* This is how to output an element of a case-vector that is relative.\n    This is only used for PIC code.  See comments by the `casesi' insn in"}, {"sha": "829376b402a0a1b1a19c5c5f01af829efcdf4056", "filename": "gcc/config/i386/freebsd.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Ffreebsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ffreebsd.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -130,8 +130,8 @@ Boston, MA 02111-1307, USA.  */\n    different pseudo-op names for these, they may be overridden in the\n    file which includes this one.  */\n \n-#define TYPE_ASM_OP\t\".type\"\n-#define SIZE_ASM_OP\t\".size\"\n+#define TYPE_ASM_OP\t\"\\t.type\\t\"\n+#define SIZE_ASM_OP\t\"\\t.size\\t\"\n \n /* The following macro defines the format used to output the second\n    operand of the .type assembler directive.  Different svr4 assemblers\n@@ -249,4 +249,4 @@ do {                                                                    \\\n /* This is the pseudo-op used to generate a 32-bit word of data with a\n    specific value in some section.  */\n \n-#define INT_ASM_OP \".long\"\n+#define INT_ASM_OP \"\\t.long\\t\""}, {"sha": "f20455035dcd1700f77ebdd56aceaf14ec4dd1fe", "filename": "gcc/config/i386/i386-coff.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fi386-coff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fi386-coff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-coff.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -1,7 +1,7 @@\n /* Definitions for \"naked\" Intel 386 using coff object format files\n    and coff debugging info.\n \n-   Copyright (C) 1994 Free Software Foundation, Inc.\n+   Copyright (C) 1994, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -39,8 +39,8 @@ Boston, MA 02111-1307, USA.  */\n \n /* Support the ctors and dtors sections for g++.  */\n \n-#define CTORS_SECTION_ASM_OP\t\".section\\t.ctors,\\\"x\\\"\"\n-#define DTORS_SECTION_ASM_OP\t\".section\\t.dtors,\\\"x\\\"\"\n+#define CTORS_SECTION_ASM_OP\t\"\\t.section\\t.ctors,\\\"x\\\"\"\n+#define DTORS_SECTION_ASM_OP\t\"\\t.section\\t.dtors,\\\"x\\\"\"\n \n /* A list of other sections which the compiler might be \"in\" at any\n    given time.  */\n@@ -77,7 +77,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\t\\\n }\n \n-#define INT_ASM_OP \".long\"\n+#define INT_ASM_OP \"\\t.long\\t\"\n \n /* A C statement (sans semicolon) to output an element in the table of\n    global constructors.  */"}, {"sha": "3dc11bf9bdfa8f7b089242903b58a762c0b3291a", "filename": "gcc/config/i386/i386-interix.h", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fi386-interix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-interix.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GNU compiler for Intel 80386 running Interix\n-   Parts Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n+   Parts Copyright (C) 1991, 1999, 2000 Free Software Foundation, Inc.\n \n    Parts:\n      by Douglas B. Rupp (drupp@cs.washington.edu).\n@@ -140,7 +140,7 @@ Boston, MA 02111-1307, USA.  */\n \n #define STRING_LIMIT\t((unsigned) 256)\n \n-#define STRING_ASM_OP\t\".string\"\n+#define STRING_ASM_OP\t\"\\t.string\\t\"\n \n /* The routine used to output NUL terminated strings.  We use a special\n    version of this for most svr4 targets because doing so makes the\n@@ -265,7 +265,7 @@ Boston, MA 02111-1307, USA.  */\n \n #define USE_CONST_SECTION\t1\n \n-#define CONST_SECTION_ASM_OP\t\".section\\t.rdata,\\\"r\\\"\"\n+#define CONST_SECTION_ASM_OP\t\"\\t.section\\t.rdata,\\\"r\\\"\"\n \n /* Define the pseudo-ops used to switch to the .ctors and .dtors sections.\n \n@@ -282,8 +282,8 @@ Boston, MA 02111-1307, USA.  */\n    errors unless the .ctors and .dtors sections are marked as writable\n    via the SHF_WRITE attribute.)  */\n \n-#define CTORS_SECTION_ASM_OP\t\".section\\t.ctors,\\\"x\\\"\"\n-#define DTORS_SECTION_ASM_OP\t\".section\\t.dtors,\\\"x\\\"\"\n+#define CTORS_SECTION_ASM_OP\t\"\\t.section\\t.ctors,\\\"x\\\"\"\n+#define DTORS_SECTION_ASM_OP\t\"\\t.section\\t.dtors,\\\"x\\\"\"\n \n /* A default list of other sections which we might be \"in\" at any given\n    time.  For targets that use additional sections (e.g. .tdesc) you\n@@ -361,7 +361,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n \t   (DECL) && TREE_READONLY (DECL) ? \"a\" : \"aw\")\n #endif\n \n-#define INT_ASM_OP\t\t\".long\"\n+#define INT_ASM_OP\t\t\"\\t.long\\t\"\n \n /* The MS compilers take alignment as a number of bytes, so we do as well */\n #undef ASM_OUTPUT_ALIGN\n@@ -392,7 +392,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n    ld -r (specifically -rU). */\n #define CTOR_LISTS_DEFINED_EXTERNALLY 1\n \n-#define SET_ASM_OP\t\".set\"\n+#define SET_ASM_OP\t\"\\t.set\\t\"\n /* Output a definition (implements alias) */\n #define ASM_OUTPUT_DEF(FILE,LABEL1,LABEL2)\t\t\t\t\\\n do\t\t\t\t\t\t\t\t\t\\"}, {"sha": "714196d660b58f2409eaf1d334beb078be0d406f", "filename": "gcc/config/i386/i386elf.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fi386elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fi386elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386elf.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -1,5 +1,5 @@\n /* Target definitions for GNU compiler for Intel 80386 using ELF\n-   Copyright (C) 1988, 1991, 1995 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1991, 1995, 2000 Free Software Foundation, Inc.\n \n    Derived from sysv4.h written by Ron Guilmette (rfg@netcom.com).\n \n@@ -206,7 +206,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n    `-fno-common' is passed, otherwise `ASM_OUTPUT_COMMON' will be\n    used.  */\n #undef BSS_SECTION_ASM_OP\n-#define BSS_SECTION_ASM_OP \".section\\t.bss\"\n+#define BSS_SECTION_ASM_OP \"\\t.section\\t.bss\"\n \n /* Like `ASM_OUTPUT_BSS' except takes the required alignment as a\n    separate, explicit argument.  If you define this macro, it is used"}, {"sha": "870870d7bf00a11275a70888ed3cc77e603e3673", "filename": "gcc/config/i386/netbsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fnetbsd.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -89,4 +89,4 @@\n /* This is the pseudo-op used to generate a 32-bit word of data with a\n    specific value in some section.  */\n \n-#define INT_ASM_OP \".long\"\n+#define INT_ASM_OP \"\\t.long\\t\""}, {"sha": "7d1d12960c67aa626e7ceea04e2062d5f3afdddc", "filename": "gcc/config/i386/openbsd.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fopenbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fopenbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fopenbsd.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -137,4 +137,4 @@ Boston, MA 02111-1307, USA.  */\n /* This is the pseudo-op used to generate a 32-bit word of data with a\n    specific value in some section.  */\n \n-#define INT_ASM_OP \".long\"\n+#define INT_ASM_OP \"\\t.long\\t\""}, {"sha": "689b6e569777a17d76b2a6bcf55dcbd72bf9ae44", "filename": "gcc/config/i386/osfrose.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fosfrose.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fosfrose.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fosfrose.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -615,9 +615,9 @@ while (0)\n    different pseudo-op names for these, they may be overridden in the\n    file which includes this one.  */\n \n-#define TYPE_ASM_OP\t\".type\"\n-#define SIZE_ASM_OP\t\".size\"\n-#define SET_ASM_OP\t\".set\"\n+#define TYPE_ASM_OP\t\"\\t.type\\t\"\n+#define SIZE_ASM_OP\t\"\\t.size\\t\"\n+#define SET_ASM_OP\t\"\\t.set\\t\"\n \n /* This is how we tell the assembler that a symbol is weak.  */\n \n@@ -745,7 +745,7 @@ while (0)\n    .ident string is patterned after the ones produced by native svr4\n    C compilers.  */\n \n-#define IDENT_ASM_OP \".ident\"\n+#define IDENT_ASM_OP \"\\t.ident\\t\"\n \n /* Allow #sccs in preprocessor.  */\n "}, {"sha": "3394c9026e1b1e6b3ad243e2aee5a9338a6984ec", "filename": "gcc/config/i386/sco5.h", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fsco5.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fsco5.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsco5.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -30,28 +30,28 @@ Boston, MA 02111-1307, USA.  */\n #define LPREFIX\t\t\t\t\".L\"\n \n #undef ALIGN_ASM_OP\n-#define ALIGN_ASM_OP\t\t\t\"\\t.align\"\n+#define ALIGN_ASM_OP\t\t\t\"\\t.align\\t\"\n \n #undef ASCII_DATA_ASM_OP\n-#define ASCII_DATA_ASM_OP\t\t\"\\t.ascii\"\n+#define ASCII_DATA_ASM_OP\t\t\"\\t.ascii\\t\"\n \n #undef ASM_BYTE_OP\n-#define ASM_BYTE_OP\t\t\t\"\\t.byte\"\n+#define ASM_BYTE_OP\t\t\t\"\\t.byte\\t\"\n \n #undef IDENT_ASM_OP\n-#define IDENT_ASM_OP\t\t\t\"\\t.ident\"\n+#define IDENT_ASM_OP\t\t\t\"\\t.ident\\t\"\n \n #undef COMMON_ASM_OP\n-#define COMMON_ASM_OP\t\t\t\"\\t.comm\"\n+#define COMMON_ASM_OP\t\t\t\"\\t.comm\\t\"\n \n #undef SET_ASM_OP\n-#define SET_ASM_OP\t\t\t\"\\t.set\"\n+#define SET_ASM_OP\t\t\t\"\\t.set\\t\"\n \n #undef LOCAL_ASM_OP\n-#define LOCAL_ASM_OP\t\t\t\"\\t.local\"\n+#define LOCAL_ASM_OP\t\t\t\"\\t.local\\t\"\n \n #undef INT_ASM_OP\n-#define INT_ASM_OP\t\t\t\"\\t.long\"\n+#define INT_ASM_OP\t\t\t\"\\t.long\\t\"\n \n #undef ASM_SHORT\n #define ASM_SHORT\t\t\t\"\\t.value\"\n@@ -63,19 +63,19 @@ Boston, MA 02111-1307, USA.  */\n #define ASM_DOUBLE\t\t\t\"\\t.double\"\n \n #undef TYPE_ASM_OP\n-#define TYPE_ASM_OP\t\t\t\"\\t.type\"\n+#define TYPE_ASM_OP\t\t\t\"\\t.type\\t\"\n \n #undef SIZE_ASM_OP\n-#define SIZE_ASM_OP\t\t\t\"\\t.size\"\n+#define SIZE_ASM_OP\t\t\t\"\\t.size\\t\"\n \n #undef STRING_ASM_OP\n-#define STRING_ASM_OP\t\t\t\"\\t.string\"\n+#define STRING_ASM_OP\t\t\t\"\\t.string\\t\"\n \n #undef SKIP_ASM_OP\n-#define SKIP_ASM_OP\t\t\t\"\\t.zero\"\n+#define SKIP_ASM_OP\t\t\t\"\\t.zero\\t\"\n \n #undef GLOBAL_ASM_OP\n-#define GLOBAL_ASM_OP\t\t\t\"\\t.globl\"\n+#define GLOBAL_ASM_OP\t\t\t\"\\t.globl\\t\"\n \n #undef EH_FRAME_SECTION_ASM_OP\n #define EH_FRAME_SECTION_ASM_OP_COFF\t\"\\t.section\\t.ehfram, \\\"x\\\"\""}, {"sha": "df16f5c734a5f29a2bc8708b64c2b44744a78cb6", "filename": "gcc/config/i386/seq-sysv3.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fseq-sysv3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fseq-sysv3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fseq-sysv3.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -28,7 +28,7 @@\n \n /* Assembler pseudo-op for initialized shared variables (.shdata). */\n #undef  SHARED_SECTION_ASM_OP\n-#define SHARED_SECTION_ASM_OP \".section .shdata, \\\"ws\\\"\"\n+#define SHARED_SECTION_ASM_OP \"\\t.section .shdata, \\\"ws\\\"\"\n \n /* Assembler pseudo-op for uninitialized shared global variables (.shbss). */\n #undef  ASM_OUTPUT_SHARED_COMMON\n@@ -39,7 +39,7 @@\n \n /* Assembler pseudo-op for uninitialized shared local variables (.shbss). */\n #undef  SHARED_BSS_SECTION_ASM_OP\n-#define SHARED_BSS_SECTION_ASM_OP \".section .shbss, \\\"bs\\\"\"\n+#define SHARED_BSS_SECTION_ASM_OP \"\\t.section .shbss, \\\"bs\\\"\"\n \n /* seq2-sysv3.h used to define HAVE_ATEXIT, so I assume ptx1 needs this...  */\n #define NEED_ATEXIT"}, {"sha": "8cec30456fbc9601fdd641594684623fa3fd15c6", "filename": "gcc/config/i386/sequent.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fsequent.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fsequent.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsequent.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Sequent Intel 386.\n-   Copyright (C) 1988, 1994, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1994, 1999, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -103,7 +103,7 @@ Boston, MA 02111-1307, USA.  */\n    fprintf (FILE, \"\\tmovl $.LP%d,%%eax\\n\\tcall mcount\\n\", (LABELNO));\n \n /* Assembler pseudo-op for shared data segment. */\n-#define SHARED_SECTION_ASM_OP \".shdata\"\n+#define SHARED_SECTION_ASM_OP \"\\t.shdata\"\n \n /* A C statement or statements which output an assembler instruction\n    opcode to the stdio stream STREAM.  The macro-operand PTR is a"}, {"sha": "331e8c9f2f2297f20141d4e408f0ac3dff52ac46", "filename": "gcc/config/i386/sun386.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fsun386.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fsun386.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsun386.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Sun assembler syntax for the Intel 80386.\n-   Copyright (C) 1988, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1996, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -33,7 +33,7 @@ Boston, MA 02111-1307, USA.  */\n \n /* Assembler pseudos to introduce constants of various size.  */\n \n-#define ASM_BYTE_OP \"\\t.byte\"\n+#define ASM_BYTE_OP \"\\t.byte\\t\"\n #define ASM_SHORT \"\\t.value\"\n #define ASM_LONG \"\\t.long\"\n #define ASM_DOUBLE \"\\t.double\"\n@@ -97,12 +97,12 @@ do\t\t\t\t\t\t\t\t\\\n /* Output before read-only data.  */\n \n #undef TEXT_SECTION_ASM_OP\n-#define TEXT_SECTION_ASM_OP \".text\"\n+#define TEXT_SECTION_ASM_OP \"\\t.text\"\n \n /* Output before writable data.  */\n \n #undef DATA_SECTION_ASM_OP\n-#define DATA_SECTION_ASM_OP \".data\"\n+#define DATA_SECTION_ASM_OP \"\\t.data\"\n \n /* Define the syntax of labels and symbol definitions/declarations.  */\n "}, {"sha": "0f89153a90595366d13568574ac32719173d0d92", "filename": "gcc/config/i386/svr3gas.h", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fsvr3gas.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fsvr3gas.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsvr3gas.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Intel 386 running system V, using gas.\n-   Copyright (C) 1992, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1996, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -105,9 +105,9 @@ Boston, MA 02111-1307, USA.  */\n \n #define USE_CONST_SECTION\t0\n \n-#define INIT_SECTION_ASM_OP     \".section\\t.init\"\n-#define FINI_SECTION_ASM_OP     \".section .fini,\\\"x\\\"\"\n-#define CONST_SECTION_ASM_OP\t\".section\\t.rodata, \\\"x\\\"\"\n+#define INIT_SECTION_ASM_OP     \"\\t.section\\t.init\"\n+#define FINI_SECTION_ASM_OP     \"\\t.section .fini,\\\"x\\\"\"\n+#define CONST_SECTION_ASM_OP\t\"\\t.section\\t.rodata, \\\"x\\\"\"\n #define CTORS_SECTION_ASM_OP\tINIT_SECTION_ASM_OP\n #define DTORS_SECTION_ASM_OP    FINI_SECTION_ASM_OP\n \n@@ -276,7 +276,7 @@ dtors_section ()\t\t\t\t\t\t\t\\\n    constructor.  */\n \n #undef INIT_SECTION_ASM_OP\n-#define INIT_SECTION_ASM_OP     \".section .init,\\\"x\\\"\"\n+#define INIT_SECTION_ASM_OP     \"\\t.section .init,\\\"x\\\"\"\n \n #define CTOR_LIST_BEGIN\t\t\t\t\\\n   asm (INIT_SECTION_ASM_OP);\t\t\t\\"}, {"sha": "abac892bbb51d8170c1d20a848c9b69cfee77014", "filename": "gcc/config/i386/sysv3.h", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fsysv3.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Fsysv3.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsysv3.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Intel 386 running system V.\n-   Copyright (C) 1988, 1996 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1996, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -108,7 +108,7 @@ Boston, MA 02111-1307, USA.  */\n    constructor.  */\n \n #undef INIT_SECTION_ASM_OP\n-#define INIT_SECTION_ASM_OP     \".section .init,\\\"x\\\"\"\n+#define INIT_SECTION_ASM_OP     \"\\t.section .init,\\\"x\\\"\"\n \n #define CTOR_LIST_BEGIN\t\t\t\t\\\n   asm (INIT_SECTION_ASM_OP);\t\t\t\\"}, {"sha": "cdc5797e45ff455cbb5414649366a095c016e55b", "filename": "gcc/config/i386/unix.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Funix.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/71d48a011e5b02201ecc01300f4de4c5510dc5ed/gcc%2Fconfig%2Fi386%2Funix.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Funix.h?ref=71d48a011e5b02201ecc01300f4de4c5510dc5ed", "patch": "@@ -1,5 +1,5 @@\n /* Definitions for Unix assembler syntax for the Intel 80386.\n-   Copyright (C) 1988, 1994, 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1988, 1994, 1999, 2000 Free Software Foundation, Inc.\n \n This file is part of GNU CC.\n \n@@ -48,15 +48,15 @@ Boston, MA 02111-1307, USA.  */\n \n /* Output before read-only data.  */\n \n-#define TEXT_SECTION_ASM_OP \".text\"\n+#define TEXT_SECTION_ASM_OP \"\\t.text\"\n \n /* Output before writable (initialized) data.  */\n \n-#define DATA_SECTION_ASM_OP \".data\"\n+#define DATA_SECTION_ASM_OP \"\\t.data\"\n \n /* Output before writable (uninitialized) data.  */\n \n-#define BSS_SECTION_ASM_OP \".bss\"\n+#define BSS_SECTION_ASM_OP \"\\.bss\"\n \n /* This is how to output a command to make the user-level label named NAME\n    defined for reference from other files.  */"}]}