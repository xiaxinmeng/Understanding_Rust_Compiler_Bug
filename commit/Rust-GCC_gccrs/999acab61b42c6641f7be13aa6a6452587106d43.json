{"sha": "999acab61b42c6641f7be13aa6a6452587106d43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk5YWNhYjYxYjQyYzY2NDFmN2JlMTNhYTZhNjQ1MjU4NzEwNmQ0Mw==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2018-05-29T09:42:29Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "pmderodat@gcc.gnu.org", "date": "2018-05-29T09:42:29Z"}, "message": "[Ada] Unnesting: handle statement sequences that include an At_End handler\n\n2018-05-29  Ed Schonberg  <schonberg@adacore.com>\n\ngcc/ada/\n\n\t* exp_unst.adb (Visit_Node): Handle statement sequences that include an\n\tAt_End handler.\n\nFrom-SVN: r260885", "tree": {"sha": "f2e389061fe085f420a982e82e288ca441cbcc6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f2e389061fe085f420a982e82e288ca441cbcc6b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/999acab61b42c6641f7be13aa6a6452587106d43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/999acab61b42c6641f7be13aa6a6452587106d43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/999acab61b42c6641f7be13aa6a6452587106d43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/999acab61b42c6641f7be13aa6a6452587106d43/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "944e24a31a9b3b3c4494853a8e2a2d589f65519f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/944e24a31a9b3b3c4494853a8e2a2d589f65519f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/944e24a31a9b3b3c4494853a8e2a2d589f65519f"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "ec135506857e6b9b1f41d7a2e7f2b39e002b6c7d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/999acab61b42c6641f7be13aa6a6452587106d43/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/999acab61b42c6641f7be13aa6a6452587106d43/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=999acab61b42c6641f7be13aa6a6452587106d43", "patch": "@@ -1,3 +1,8 @@\n+2018-05-29  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* exp_unst.adb (Visit_Node): Handle statement sequences that include an\n+\tAt_End handler.\n+\n 2018-05-29  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* repinfo.adb (List_Entities): Also recurse into blocks without label."}, {"sha": "38e32cb7ef14feb112e636d4a476316ada68a5b2", "filename": "gcc/ada/exp_unst.adb", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/999acab61b42c6641f7be13aa6a6452587106d43/gcc%2Fada%2Fexp_unst.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/999acab61b42c6641f7be13aa6a6452587106d43/gcc%2Fada%2Fexp_unst.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_unst.adb?ref=999acab61b42c6641f7be13aa6a6452587106d43", "patch": "@@ -676,6 +676,16 @@ package body Exp_Unst is\n                   end loop;\n                end;\n \n+            elsif Nkind (N) = N_Handled_Sequence_Of_Statements\n+              and then Present (At_End_Proc (N))\n+            then\n+\n+               --  An At_End_Proc means there's a call from this block\n+               --  to that subprogram.\n+\n+               Append_Unique_Call ((N, Current_Subprogram,\n+                                     Entity (At_End_Proc (N))));\n+\n             --  Handle a 'Access as a (potential) call\n \n             elsif Nkind (N) = N_Attribute_Reference then\n@@ -850,10 +860,10 @@ package body Exp_Unst is\n                  and then Chars (Enclosing_Subprogram (Ent)) /= Name_uParent\n                  and then\n \n-                   --  Constants, variables and exceptions are potentially\n+                   --  Constants and variables are potentially\n                    --  uplevel references to global declarations.\n \n-                   (Ekind_In (Ent, E_Constant, E_Exception, E_Variable)\n+                   (Ekind_In (Ent, E_Constant, E_Variable)\n \n                      --  Formals are interesting, but not if being used as mere\n                      --  names of parameters for name notation calls.\n@@ -1817,6 +1827,7 @@ package body Exp_Unst is\n          begin\n             if Present (STT.ARECnF)\n               and then Nkind (CTJ.N) /= N_Attribute_Reference\n+              and then Nkind (CTJ.N) /= N_Handled_Sequence_Of_Statements\n             then\n                --  CTJ.N is a call to a subprogram which may require a pointer\n                --  to an activation record. The subprogram containing the call"}]}