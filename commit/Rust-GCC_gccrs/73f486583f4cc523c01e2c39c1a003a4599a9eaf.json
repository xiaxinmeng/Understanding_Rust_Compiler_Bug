{"sha": "73f486583f4cc523c01e2c39c1a003a4599a9eaf", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzNmNDg2NTgzZjRjYzUyM2MwMWUyYzM5YzFhMDAzYTQ1OTlhOWVhZg==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2007-08-19T23:09:15Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2007-08-19T23:09:15Z"}, "message": "* i386.md: Replace \"rim\" and \"mri\" constraints by \"g\".\n\nFrom-SVN: r127628", "tree": {"sha": "b22a43835bdabfc4e0eaa60d736b4413c5d17c7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b22a43835bdabfc4e0eaa60d736b4413c5d17c7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/73f486583f4cc523c01e2c39c1a003a4599a9eaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f486583f4cc523c01e2c39c1a003a4599a9eaf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/73f486583f4cc523c01e2c39c1a003a4599a9eaf", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/73f486583f4cc523c01e2c39c1a003a4599a9eaf/comments", "author": null, "committer": null, "parents": [{"sha": "9e9f8522652b0c63b552197bc6719fa27b106f74", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e9f8522652b0c63b552197bc6719fa27b106f74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e9f8522652b0c63b552197bc6719fa27b106f74"}], "stats": {"total": 52, "additions": 28, "deletions": 24}, "files": [{"sha": "325db5439047d3e081a8cdd423c69160e3c80943", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f486583f4cc523c01e2c39c1a003a4599a9eaf/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f486583f4cc523c01e2c39c1a003a4599a9eaf/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=73f486583f4cc523c01e2c39c1a003a4599a9eaf", "patch": "@@ -1,3 +1,7 @@\n+2007-08-19  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md: Replace \"rim\" and \"mri\" constraints by \"g\".\n+\n 2007-08-19  Joseph Myers  <joseph@codesourcery.com>\n \n \t* dwarf2out.c (text_section_used, cold_text_section_used,"}, {"sha": "751d46b9ac67919dd5908138b959c3cd51330aa0", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/73f486583f4cc523c01e2c39c1a003a4599a9eaf/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/73f486583f4cc523c01e2c39c1a003a4599a9eaf/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=73f486583f4cc523c01e2c39c1a003a4599a9eaf", "patch": "@@ -4973,7 +4973,7 @@\n \t  (zero_extend:DI\n \t    (plus:SI (plus:SI (match_operand:SI 3 \"ix86_carry_flag_operator\" \"\")\n \t\t\t      (match_operand:SI 1 \"nonimmediate_operand\" \"%0\"))\n-\t\t     (match_operand:SI 2 \"general_operand\" \"rim\"))))\n+\t\t     (match_operand:SI 2 \"general_operand\" \"g\"))))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_64BIT && ix86_binary_operator_ok (PLUS, SImode, operands)\"\n   \"adc{l}\\t{%2, %k0|%k0, %2}\"\n@@ -6726,7 +6726,7 @@\n \t  (zero_extend:DI\n \t    (minus:SI (match_operand:SI 1 \"register_operand\" \"0\")\n \t      (plus:SI (match_operand:SI 3 \"ix86_carry_flag_operator\" \"\")\n-\t\t (match_operand:SI 2 \"general_operand\" \"rim\")))))\n+\t\t (match_operand:SI 2 \"general_operand\" \"g\")))))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_64BIT && ix86_binary_operator_ok (MINUS, SImode, operands)\"\n   \"sbb{l}\\t{%2, %k0|%k0, %2}\"\n@@ -6756,7 +6756,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI\n \t  (minus:SI (match_operand:SI 1 \"register_operand\" \"0\")\n-\t\t    (match_operand:SI 2 \"general_operand\" \"rim\"))))\n+\t\t    (match_operand:SI 2 \"general_operand\" \"g\"))))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_64BIT && ix86_binary_operator_ok (MINUS, SImode, operands)\"\n   \"sub{l}\\t{%2, %k0|%k0, %2}\"\n@@ -6781,7 +6781,7 @@\n   [(set (reg FLAGS_REG)\n \t(compare\n \t  (minus:SI (match_operand:SI 1 \"register_operand\" \"0\")\n-\t\t    (match_operand:SI 2 \"general_operand\" \"rim\"))\n+\t\t    (match_operand:SI 2 \"general_operand\" \"g\"))\n \t  (const_int 0)))\n    (set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI\n@@ -6808,7 +6808,7 @@\n (define_insn \"*subsi_3_zext\"\n   [(set (reg FLAGS_REG)\n \t(compare (match_operand:SI 1 \"register_operand\" \"0\")\n-\t\t (match_operand:SI 2 \"general_operand\" \"rim\")))\n+\t\t (match_operand:SI 2 \"general_operand\" \"g\")))\n    (set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI\n \t  (minus:SI (match_dup 1)\n@@ -8351,7 +8351,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI\n \t  (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0\")\n-\t\t  (match_operand:SI 2 \"general_operand\" \"rim\"))))\n+\t\t  (match_operand:SI 2 \"general_operand\" \"g\"))))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_64BIT && ix86_binary_operator_ok (AND, SImode, operands)\"\n   \"and{l}\\t{%2, %k0|%k0, %2}\"\n@@ -8361,7 +8361,7 @@\n (define_insn \"*andsi_2\"\n   [(set (reg FLAGS_REG)\n \t(compare (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"rim,ri\"))\n+\t\t\t (match_operand:SI 2 \"general_operand\" \"g,ri\"))\n \t\t (const_int 0)))\n    (set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,rm\")\n \t(and:SI (match_dup 1) (match_dup 2)))]\n@@ -8375,7 +8375,7 @@\n (define_insn \"*andsi_2_zext\"\n   [(set (reg FLAGS_REG)\n \t(compare (and:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"rim\"))\n+\t\t\t (match_operand:SI 2 \"general_operand\" \"g\"))\n \t\t (const_int 0)))\n    (set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI (and:SI (match_dup 1) (match_dup 2))))]\n@@ -8420,7 +8420,7 @@\n (define_insn \"*andhi_2\"\n   [(set (reg FLAGS_REG)\n \t(compare (and:HI (match_operand:HI 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t\t (match_operand:HI 2 \"general_operand\" \"rim,ri\"))\n+\t\t\t (match_operand:HI 2 \"general_operand\" \"g,ri\"))\n \t\t (const_int 0)))\n    (set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,rm\")\n \t(and:HI (match_dup 1) (match_dup 2)))]\n@@ -8729,7 +8729,7 @@\n (define_insn \"*iorsi_1\"\n   [(set (match_operand:SI 0 \"nonimmediate_operand\" \"=rm,r\")\n \t(ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t(match_operand:SI 2 \"general_operand\" \"ri,rmi\")))\n+\t\t(match_operand:SI 2 \"general_operand\" \"ri,g\")))\n    (clobber (reg:CC FLAGS_REG))]\n   \"ix86_binary_operator_ok (IOR, SImode, operands)\"\n   \"or{l}\\t{%2, %0|%0, %2}\"\n@@ -8741,7 +8741,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI\n \t  (ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0\")\n-\t\t  (match_operand:SI 2 \"general_operand\" \"rim\"))))\n+\t\t  (match_operand:SI 2 \"general_operand\" \"g\"))))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_64BIT && ix86_binary_operator_ok (IOR, SImode, operands)\"\n   \"or{l}\\t{%2, %k0|%k0, %2}\"\n@@ -8761,7 +8761,7 @@\n (define_insn \"*iorsi_2\"\n   [(set (reg FLAGS_REG)\n \t(compare (ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"rim,ri\"))\n+\t\t\t (match_operand:SI 2 \"general_operand\" \"g,ri\"))\n \t\t (const_int 0)))\n    (set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,rm\")\n \t(ior:SI (match_dup 1) (match_dup 2)))]\n@@ -8776,7 +8776,7 @@\n (define_insn \"*iorsi_2_zext\"\n   [(set (reg FLAGS_REG)\n \t(compare (ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"rim\"))\n+\t\t\t (match_operand:SI 2 \"general_operand\" \"g\"))\n \t\t (const_int 0)))\n    (set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI (ior:SI (match_dup 1) (match_dup 2))))]\n@@ -8802,7 +8802,7 @@\n (define_insn \"*iorsi_3\"\n   [(set (reg FLAGS_REG)\n \t(compare (ior:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"rim\"))\n+\t\t\t (match_operand:SI 2 \"general_operand\" \"g\"))\n \t\t (const_int 0)))\n    (clobber (match_scratch:SI 0 \"=r\"))]\n   \"ix86_match_ccmode (insn, CCNOmode)\n@@ -8822,7 +8822,7 @@\n (define_insn \"*iorhi_1\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,m\")\n \t(ior:HI (match_operand:HI 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t(match_operand:HI 2 \"general_operand\" \"rmi,ri\")))\n+\t\t(match_operand:HI 2 \"general_operand\" \"g,ri\")))\n    (clobber (reg:CC FLAGS_REG))]\n   \"ix86_binary_operator_ok (IOR, HImode, operands)\"\n   \"or{w}\\t{%2, %0|%0, %2}\"\n@@ -8832,7 +8832,7 @@\n (define_insn \"*iorhi_2\"\n   [(set (reg FLAGS_REG)\n \t(compare (ior:HI (match_operand:HI 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t\t (match_operand:HI 2 \"general_operand\" \"rim,ri\"))\n+\t\t\t (match_operand:HI 2 \"general_operand\" \"g,ri\"))\n \t\t (const_int 0)))\n    (set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,rm\")\n \t(ior:HI (match_dup 1) (match_dup 2)))]\n@@ -8845,7 +8845,7 @@\n (define_insn \"*iorhi_3\"\n   [(set (reg FLAGS_REG)\n \t(compare (ior:HI (match_operand:HI 1 \"nonimmediate_operand\" \"%0\")\n-\t\t\t (match_operand:HI 2 \"general_operand\" \"rim\"))\n+\t\t\t (match_operand:HI 2 \"general_operand\" \"g\"))\n \t\t (const_int 0)))\n    (clobber (match_scratch:HI 0 \"=r\"))]\n   \"ix86_match_ccmode (insn, CCNOmode)\n@@ -9118,7 +9118,7 @@\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI\n \t  (xor:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0\")\n-\t\t  (match_operand:SI 2 \"general_operand\" \"rim\"))))\n+\t\t  (match_operand:SI 2 \"general_operand\" \"g\"))))\n    (clobber (reg:CC FLAGS_REG))]\n   \"TARGET_64BIT && ix86_binary_operator_ok (XOR, SImode, operands)\"\n   \"xor{l}\\t{%2, %k0|%k0, %2}\"\n@@ -9138,7 +9138,7 @@\n (define_insn \"*xorsi_2\"\n   [(set (reg FLAGS_REG)\n \t(compare (xor:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"rim,ri\"))\n+\t\t\t (match_operand:SI 2 \"general_operand\" \"g,ri\"))\n \t\t (const_int 0)))\n    (set (match_operand:SI 0 \"nonimmediate_operand\" \"=r,rm\")\n \t(xor:SI (match_dup 1) (match_dup 2)))]\n@@ -9153,7 +9153,7 @@\n (define_insn \"*xorsi_2_zext\"\n   [(set (reg FLAGS_REG)\n \t(compare (xor:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"rim\"))\n+\t\t\t (match_operand:SI 2 \"general_operand\" \"g\"))\n \t\t (const_int 0)))\n    (set (match_operand:DI 0 \"register_operand\" \"=r\")\n \t(zero_extend:DI (xor:SI (match_dup 1) (match_dup 2))))]\n@@ -9179,7 +9179,7 @@\n (define_insn \"*xorsi_3\"\n   [(set (reg FLAGS_REG)\n \t(compare (xor:SI (match_operand:SI 1 \"nonimmediate_operand\" \"%0\")\n-\t\t\t (match_operand:SI 2 \"general_operand\" \"rim\"))\n+\t\t\t (match_operand:SI 2 \"general_operand\" \"g\"))\n \t\t (const_int 0)))\n    (clobber (match_scratch:SI 0 \"=r\"))]\n   \"ix86_match_ccmode (insn, CCNOmode)\n@@ -9199,7 +9199,7 @@\n (define_insn \"*xorhi_1\"\n   [(set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,m\")\n \t(xor:HI (match_operand:HI 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t(match_operand:HI 2 \"general_operand\" \"rmi,ri\")))\n+\t\t(match_operand:HI 2 \"general_operand\" \"g,ri\")))\n    (clobber (reg:CC FLAGS_REG))]\n   \"ix86_binary_operator_ok (XOR, HImode, operands)\"\n   \"xor{w}\\t{%2, %0|%0, %2}\"\n@@ -9209,7 +9209,7 @@\n (define_insn \"*xorhi_2\"\n   [(set (reg FLAGS_REG)\n \t(compare (xor:HI (match_operand:HI 1 \"nonimmediate_operand\" \"%0,0\")\n-\t\t\t (match_operand:HI 2 \"general_operand\" \"rim,ri\"))\n+\t\t\t (match_operand:HI 2 \"general_operand\" \"g,ri\"))\n \t\t (const_int 0)))\n    (set (match_operand:HI 0 \"nonimmediate_operand\" \"=r,rm\")\n \t(xor:HI (match_dup 1) (match_dup 2)))]\n@@ -9222,7 +9222,7 @@\n (define_insn \"*xorhi_3\"\n   [(set (reg FLAGS_REG)\n \t(compare (xor:HI (match_operand:HI 1 \"nonimmediate_operand\" \"%0\")\n-\t\t\t (match_operand:HI 2 \"general_operand\" \"rim\"))\n+\t\t\t (match_operand:HI 2 \"general_operand\" \"g\"))\n \t\t (const_int 0)))\n    (clobber (match_scratch:HI 0 \"=r\"))]\n   \"ix86_match_ccmode (insn, CCNOmode)"}]}