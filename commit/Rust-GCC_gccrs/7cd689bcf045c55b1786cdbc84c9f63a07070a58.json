{"sha": "7cd689bcf045c55b1786cdbc84c9f63a07070a58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2NkNjg5YmNmMDQ1YzU1YjE3ODZjZGJjODRjOWY2M2EwNzA3MGE1OA==", "commit": {"author": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2007-02-20T22:14:41Z"}, "committer": {"name": "Steven Bosscher", "email": "steven@gcc.gnu.org", "date": "2007-02-20T22:14:41Z"}, "message": "rtl.h (remove_reg_equal_equiv_notes): New prototype.\n\n\t* rtl.h (remove_reg_equal_equiv_notes): New prototype.\n\t* rtlanal.c (remove_reg_equal_equiv_notes): New function.\n\t* combine.c (adjust_for_new_dest): Use it.\n\t* postreload.c (reload_combine): Likewise.\n\nFrom-SVN: r122178", "tree": {"sha": "86910b46650f770e82274e25d7d3f2c992409256", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86910b46650f770e82274e25d7d3f2c992409256"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7cd689bcf045c55b1786cdbc84c9f63a07070a58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd689bcf045c55b1786cdbc84c9f63a07070a58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7cd689bcf045c55b1786cdbc84c9f63a07070a58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7cd689bcf045c55b1786cdbc84c9f63a07070a58/comments", "author": null, "committer": null, "parents": [{"sha": "ea8f106d4c4e16933ef9bbd8bbd5a8588cd6c53f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea8f106d4c4e16933ef9bbd8bbd5a8588cd6c53f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea8f106d4c4e16933ef9bbd8bbd5a8588cd6c53f"}], "stats": {"total": 49, "additions": 28, "deletions": 21}, "files": [{"sha": "0be8ba591222993148dd8d61a842727eaf065f91", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd689bcf045c55b1786cdbc84c9f63a07070a58/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd689bcf045c55b1786cdbc84c9f63a07070a58/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7cd689bcf045c55b1786cdbc84c9f63a07070a58", "patch": "@@ -1,3 +1,10 @@\n+2007-02-20  Steven Bosscher  <steven@gcc.gnu.org>\n+\n+\t* rtl.h (remove_reg_equal_equiv_notes): New prototype.\n+\t* rtlanal.c (remove_reg_equal_equiv_notes): New function.\n+\t* combine.c (adjust_for_new_dest): Use it.\n+\t* postreload.c (reload_combine): Likewise.\n+\n 2007-02-20  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* rtlanal.c (find_reg_equal_equiv_note): Do not find REG_EQ*"}, {"sha": "d1277d4963963ac7ff950eecb614fa59fdfa65e0", "filename": "gcc/combine.c", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd689bcf045c55b1786cdbc84c9f63a07070a58/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd689bcf045c55b1786cdbc84c9f63a07070a58/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=7cd689bcf045c55b1786cdbc84c9f63a07070a58", "patch": "@@ -1726,18 +1726,8 @@ likely_spilled_retval_p (rtx insn)\n static void\n adjust_for_new_dest (rtx insn)\n {\n-  rtx *loc;\n-\n   /* For notes, be conservative and simply remove them.  */\n-  loc = &REG_NOTES (insn);\n-  while (*loc)\n-    {\n-      enum reg_note kind = REG_NOTE_KIND (*loc);\n-      if (kind == REG_EQUAL || kind == REG_EQUIV)\n-\t*loc = XEXP (*loc, 1);\n-      else\n-\tloc = &XEXP (*loc, 1);\n-    }\n+  remove_reg_equal_equiv_notes (insn);\n \n   /* The new insn will have a destination that was previously the destination\n      of an insn just above it.  Call distribute_links to make a LOG_LINK from"}, {"sha": "47930ad042acca16f649cc56e9d8ebf3a971716f", "filename": "gcc/postreload.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd689bcf045c55b1786cdbc84c9f63a07070a58/gcc%2Fpostreload.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd689bcf045c55b1786cdbc84c9f63a07070a58/gcc%2Fpostreload.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpostreload.c?ref=7cd689bcf045c55b1786cdbc84c9f63a07070a58", "patch": "@@ -887,22 +887,13 @@ reload_combine (void)\n \n \t      if (apply_change_group ())\n \t\t{\n-\t\t  rtx *np;\n-\n \t\t  /* Delete the reg-reg addition.  */\n \t\t  delete_insn (insn);\n \n \t\t  if (reg_state[regno].offset != const0_rtx)\n \t\t    /* Previous REG_EQUIV / REG_EQUAL notes for PREV\n \t\t       are now invalid.  */\n-\t\t    for (np = &REG_NOTES (prev); *np;)\n-\t\t      {\n-\t\t\tif (REG_NOTE_KIND (*np) == REG_EQUAL\n-\t\t\t    || REG_NOTE_KIND (*np) == REG_EQUIV)\n-\t\t\t  *np = XEXP (*np, 1);\n-\t\t\telse\n-\t\t\t  np = &XEXP (*np, 1);\n-\t\t      }\n+\t\t    remove_reg_equal_equiv_notes (prev);\n \n \t\t  reg_state[regno].use_index = RELOAD_COMBINE_MAX_USES;\n \t\t  reg_state[REGNO (const_reg)].store_ruid"}, {"sha": "6bf09aa14a9aad619d80f6a7092e8252ffed36e4", "filename": "gcc/rtl.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd689bcf045c55b1786cdbc84c9f63a07070a58/gcc%2Frtl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd689bcf045c55b1786cdbc84c9f63a07070a58/gcc%2Frtl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.h?ref=7cd689bcf045c55b1786cdbc84c9f63a07070a58", "patch": "@@ -1702,6 +1702,7 @@ extern int find_reg_fusage (rtx, enum rtx_code, rtx);\n extern int find_regno_fusage (rtx, enum rtx_code, unsigned int);\n extern int pure_call_p (rtx);\n extern void remove_note (rtx, rtx);\n+extern void remove_reg_equal_equiv_notes (rtx);\n extern int side_effects_p (rtx);\n extern int volatile_refs_p (rtx);\n extern int volatile_insn_p (rtx);"}, {"sha": "00a996e469610781a859e0b3b357a8b2aa88e7bc", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7cd689bcf045c55b1786cdbc84c9f63a07070a58/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7cd689bcf045c55b1786cdbc84c9f63a07070a58/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=7cd689bcf045c55b1786cdbc84c9f63a07070a58", "patch": "@@ -1820,6 +1820,24 @@ remove_note (rtx insn, rtx note)\n   gcc_unreachable ();\n }\n \n+/* Remove REG_EQUAL and/or REG_EQUIV notes if INSN has such notes.  */\n+\n+void\n+remove_reg_equal_equiv_notes (rtx insn)\n+{\n+  rtx *loc;\n+\n+  loc = &REG_NOTES (insn);\n+  while (*loc)\n+    {\n+      enum reg_note kind = REG_NOTE_KIND (*loc);\n+      if (kind == REG_EQUAL || kind == REG_EQUIV)\n+\t*loc = XEXP (*loc, 1);\n+      else\n+\tloc = &XEXP (*loc, 1);\n+    }\n+}\n+\n /* Search LISTP (an EXPR_LIST) for an entry whose first operand is NODE and\n    return 1 if it is found.  A simple equality test is used to determine if\n    NODE matches.  */"}]}