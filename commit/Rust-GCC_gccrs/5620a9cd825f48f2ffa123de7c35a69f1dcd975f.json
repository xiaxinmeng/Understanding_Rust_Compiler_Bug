{"sha": "5620a9cd825f48f2ffa123de7c35a69f1dcd975f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTYyMGE5Y2Q4MjVmNDhmMmZmYTEyM2RlN2MzNWE2OWYxZGNkOTc1Zg==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2020-01-30T19:45:19Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-05T12:17:35Z"}, "message": "[Ada] Assertion_Policy (Ignore) ignores invariants\n\n2020-06-05  Bob Duff  <duff@adacore.com>\n\ngcc/ada/\n\n\t* einfo.adb, einfo.ads, exp_util.adb: Remove Invariants_Ignored\n\tflag.\n\t* sem_prag.adb (Invariant): Instead of setting a flag to be\n\tchecked elsewhere, remove the pragma as soon as it is analyzed\n\tand checked for legality.", "tree": {"sha": "a40e8c50eeaaf91173eb96b0213c2ff7e8896df0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a40e8c50eeaaf91173eb96b0213c2ff7e8896df0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5620a9cd825f48f2ffa123de7c35a69f1dcd975f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5620a9cd825f48f2ffa123de7c35a69f1dcd975f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5620a9cd825f48f2ffa123de7c35a69f1dcd975f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5620a9cd825f48f2ffa123de7c35a69f1dcd975f/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c8e70fe86da1b52160aa380f30cbb1bf644c407", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c8e70fe86da1b52160aa380f30cbb1bf644c407", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c8e70fe86da1b52160aa380f30cbb1bf644c407"}], "stats": {"total": 61, "additions": 19, "deletions": 42}, "files": [{"sha": "45afabb17039a33a906ce33ca87385b3520ce954", "filename": "gcc/ada/einfo.adb", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5620a9cd825f48f2ffa123de7c35a69f1dcd975f/gcc%2Fada%2Feinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5620a9cd825f48f2ffa123de7c35a69f1dcd975f/gcc%2Fada%2Feinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.adb?ref=5620a9cd825f48f2ffa123de7c35a69f1dcd975f", "patch": "@@ -629,8 +629,8 @@ package body Einfo is\n    --    Is_Activation_Record            Flag305\n    --    Needs_Activation_Record         Flag306\n    --    Is_Loop_Parameter               Flag307\n-   --    Invariants_Ignored              Flag308\n \n+   --    (unused)                        Flag308\n    --    (unused)                        Flag309\n \n    --  Note: Flag310-317 are defined in atree.ads/adb, but not yet in atree.h\n@@ -2077,12 +2077,6 @@ package body Einfo is\n       return Node21 (Id);\n    end Interface_Name;\n \n-   function Invariants_Ignored (Id : E) return B is\n-   begin\n-      pragma Assert (Is_Type (Id));\n-      return Flag308 (Id);\n-   end Invariants_Ignored;\n-\n    function Is_Abstract_Subprogram (Id : E) return B is\n    begin\n       pragma Assert (Is_Overloadable (Id));\n@@ -5284,12 +5278,6 @@ package body Einfo is\n       Set_Node21 (Id, V);\n    end Set_Interface_Name;\n \n-   procedure Set_Invariants_Ignored (Id : E; V : B := True) is\n-   begin\n-      pragma Assert (Is_Type (Id));\n-      Set_Flag308 (Id, V);\n-   end Set_Invariants_Ignored;\n-\n    procedure Set_Is_Abstract_Subprogram (Id : E; V : B := True) is\n    begin\n       pragma Assert (Is_Overloadable (Id));\n@@ -9797,7 +9785,6 @@ package body Einfo is\n       W (\"In_Package_Body\",                 Flag48  (Id));\n       W (\"In_Private_Part\",                 Flag45  (Id));\n       W (\"In_Use\",                          Flag8   (Id));\n-      W (\"Invariants_Ignored\",              Flag308 (Id));\n       W (\"Is_Abstract_Subprogram\",          Flag19  (Id));\n       W (\"Is_Abstract_Type\",                Flag146 (Id));\n       W (\"Is_Access_Constant\",              Flag69  (Id));"}, {"sha": "ae6d13fb7ea631b970597e2a245695d57bafd54f", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5620a9cd825f48f2ffa123de7c35a69f1dcd975f/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5620a9cd825f48f2ffa123de7c35a69f1dcd975f/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=5620a9cd825f48f2ffa123de7c35a69f1dcd975f", "patch": "@@ -2269,11 +2269,6 @@ package Einfo is\n --       implemented by a tagged type that are not already implemented by the\n --       ancestors (Ada 2005: AI-251).\n \n---    Invariants_Ignored (Flag308)\n---       Defined on all types. Indicates whether the type declaration is in\n---       a context where Assertion_Policy is Ignore, in which case no checks\n---       (static or dynamic) must be generated for objects of the type.\n-\n --    Invariant_Procedure (synthesized)\n --       Defined in types and subtypes. Set for private types and their full\n --       views if one or more [class-wide] invariants apply to the type, or\n@@ -7289,7 +7284,6 @@ package Einfo is\n    function Interface_Alias                     (Id : E) return E;\n    function Interface_Name                      (Id : E) return N;\n    function Interfaces                          (Id : E) return L;\n-   function Invariants_Ignored                  (Id : E) return B;\n    function Is_Abstract_Subprogram              (Id : E) return B;\n    function Is_Abstract_Type                    (Id : E) return B;\n    function Is_Access_Constant                  (Id : E) return B;\n@@ -7993,7 +7987,6 @@ package Einfo is\n    procedure Set_Interface_Alias                 (Id : E; V : E);\n    procedure Set_Interface_Name                  (Id : E; V : N);\n    procedure Set_Interfaces                      (Id : E; V : L);\n-   procedure Set_Invariants_Ignored              (Id : E; V : B := True);\n    procedure Set_Is_Abstract_Subprogram          (Id : E; V : B := True);\n    procedure Set_Is_Abstract_Type                (Id : E; V : B := True);\n    procedure Set_Is_Access_Constant              (Id : E; V : B := True);\n@@ -8826,7 +8819,6 @@ package Einfo is\n    pragma Inline (Interface_Alias);\n    pragma Inline (Interface_Name);\n    pragma Inline (Interfaces);\n-   pragma Inline (Invariants_Ignored);\n    pragma Inline (Is_Abstract_Subprogram);\n    pragma Inline (Is_Abstract_Type);\n    pragma Inline (Is_Access_Constant);\n@@ -9364,7 +9356,6 @@ package Einfo is\n    pragma Inline (Set_Interface_Alias);\n    pragma Inline (Set_Interface_Name);\n    pragma Inline (Set_Interfaces);\n-   pragma Inline (Set_Invariants_Ignored);\n    pragma Inline (Set_Is_Abstract_Subprogram);\n    pragma Inline (Set_Is_Abstract_Type);\n    pragma Inline (Set_Is_Access_Constant);"}, {"sha": "dd28a5b1e1f1f0d42aea526a3af422f04de3c8da", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5620a9cd825f48f2ffa123de7c35a69f1dcd975f/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5620a9cd825f48f2ffa123de7c35a69f1dcd975f/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=5620a9cd825f48f2ffa123de7c35a69f1dcd975f", "patch": "@@ -9331,16 +9331,10 @@ package body Exp_Util is\n       Proc_Id := Invariant_Procedure (Typ);\n       pragma Assert (Present (Proc_Id));\n \n-      --  Ignore the invariant if that policy is in effect\n-\n-      if Invariants_Ignored (Typ) then\n-         return Make_Null_Statement (Loc);\n-      else\n-         return\n-           Make_Procedure_Call_Statement (Loc,\n-             Name                   => New_Occurrence_Of (Proc_Id, Loc),\n-             Parameter_Associations => New_List (Relocate_Node (Expr)));\n-      end if;\n+      return\n+        Make_Procedure_Call_Statement (Loc,\n+          Name                   => New_Occurrence_Of (Proc_Id, Loc),\n+          Parameter_Associations => New_List (Relocate_Node (Expr)));\n    end Make_Invariant_Call;\n \n    ------------------------"}, {"sha": "419538d7c68ee5a829a94430b8fb66c5ac9c8b09", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5620a9cd825f48f2ffa123de7c35a69f1dcd975f/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5620a9cd825f48f2ffa123de7c35a69f1dcd975f/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=5620a9cd825f48f2ffa123de7c35a69f1dcd975f", "patch": "@@ -18316,6 +18316,20 @@ package body Sem_Prag is\n                return;\n             end if;\n \n+            --  If invariants should be ignored, delete the pragma and then\n+            --  return. We do this here, after checking for errors, and before\n+            --  generating anything that has a run-time effect.\n+\n+            if Present (Check_Policy_List)\n+              and then\n+                (Policy_In_Effect (Name_Invariant) = Name_Ignore\n+                   and then\n+                 Policy_In_Effect (Name_Type_Invariant) = Name_Ignore)\n+            then\n+               Rewrite (N, Make_Null_Statement (Loc));\n+               return;\n+            end if;\n+\n             --  A pragma that applies to a Ghost entity becomes Ghost for the\n             --  purposes of legality checks and removal of ignored Ghost code.\n \n@@ -18326,15 +18340,6 @@ package body Sem_Prag is\n \n             Set_Has_Own_Invariants (Typ);\n \n-            --  Set the Invariants_Ignored flag if that policy is in effect\n-\n-            Set_Invariants_Ignored (Typ,\n-              Present (Check_Policy_List)\n-                and then\n-                  (Policy_In_Effect (Name_Invariant) = Name_Ignore\n-                     and then\n-                   Policy_In_Effect (Name_Type_Invariant) = Name_Ignore));\n-\n             --  If the invariant is class-wide, then it can be inherited by\n             --  derived or interface implementing types. The type is said to\n             --  have \"inheritable\" invariants."}]}