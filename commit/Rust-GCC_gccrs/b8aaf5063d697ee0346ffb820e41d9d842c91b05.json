{"sha": "b8aaf5063d697ee0346ffb820e41d9d842c91b05", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjhhYWY1MDYzZDY5N2VlMDM0NmZmYjgyMGU0MWQ5ZDg0MmM5MWIwNQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2008-08-19T12:49:28Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2008-08-19T12:49:28Z"}, "message": "re PR target/37157 (Wrong insn for _mm_unpackhi_epi64)\n\ngcc/\n\n2008-08-19  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/37157\n\t* config/i386/sse.md (sse2_punpckhqdq, sse2_punpcklqdq): Moved\n\tbefore (sse2_shufpd_<mode>).\n\ngcc/testsuite/\n\n2008-08-19  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/37157\n\t* gcc.target/i386/sse2-unpack-1.c: New.\n\nFrom-SVN: r139232", "tree": {"sha": "f55edcca17f1bbe86c33b0021c908039ae9b5373", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f55edcca17f1bbe86c33b0021c908039ae9b5373"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8aaf5063d697ee0346ffb820e41d9d842c91b05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8aaf5063d697ee0346ffb820e41d9d842c91b05", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8aaf5063d697ee0346ffb820e41d9d842c91b05", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8aaf5063d697ee0346ffb820e41d9d842c91b05/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e92cbe3a1df3f5ad7027d9863c5a49c34cf789e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e92cbe3a1df3f5ad7027d9863c5a49c34cf789e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e92cbe3a1df3f5ad7027d9863c5a49c34cf789e9"}], "stats": {"total": 87, "additions": 59, "deletions": 28}, "files": [{"sha": "8d305164eef670e0bd7ec7aaa49a709107ab6991", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8aaf5063d697ee0346ffb820e41d9d842c91b05/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8aaf5063d697ee0346ffb820e41d9d842c91b05/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b8aaf5063d697ee0346ffb820e41d9d842c91b05", "patch": "@@ -1,3 +1,9 @@\n+2008-08-19  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/37157\n+\t* config/i386/sse.md (sse2_punpckhqdq, sse2_punpcklqdq): Moved\n+\tbefore (sse2_shufpd_<mode>).\n+\n 2008-08-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/37156"}, {"sha": "e7e4140597dc15f0ae43c3f1468d80aa60dbfc87", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 29, "deletions": 28, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8aaf5063d697ee0346ffb820e41d9d842c91b05/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8aaf5063d697ee0346ffb820e41d9d842c91b05/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=b8aaf5063d697ee0346ffb820e41d9d842c91b05", "patch": "@@ -2610,6 +2610,35 @@\n \t  \t     (const_int 3)])))]\n   \"TARGET_SSE2\")\n \n+;; punpcklqdq and punpckhqdq are shorter than shufpd.\n+(define_insn \"sse2_punpckhqdq\"\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n+\t(vec_select:V2DI\n+\t  (vec_concat:V4DI\n+\t    (match_operand:V2DI 1 \"register_operand\" \"0\")\n+\t    (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\"))\n+\t  (parallel [(const_int 1)\n+\t\t     (const_int 3)])))]\n+  \"TARGET_SSE2\"\n+  \"punpckhqdq\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"sselog\")\n+   (set_attr \"prefix_data16\" \"1\")\n+   (set_attr \"mode\" \"TI\")])\n+\n+(define_insn \"sse2_punpcklqdq\"\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n+\t(vec_select:V2DI\n+\t  (vec_concat:V4DI\n+\t    (match_operand:V2DI 1 \"register_operand\" \"0\")\n+\t    (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\"))\n+\t  (parallel [(const_int 0)\n+\t\t     (const_int 2)])))]\n+  \"TARGET_SSE2\"\n+  \"punpcklqdq\\t{%2, %0|%0, %2}\"\n+  [(set_attr \"type\" \"sselog\")\n+   (set_attr \"prefix_data16\" \"1\")\n+   (set_attr \"mode\" \"TI\")])\n+\n (define_insn \"sse2_shufpd_<mode>\"\n   [(set (match_operand:SSEMODE2D 0 \"register_operand\" \"=x\")\n \t(vec_select:SSEMODE2D\n@@ -4438,34 +4467,6 @@\n    (set_attr \"prefix_data16\" \"1\")\n    (set_attr \"mode\" \"TI\")])\n \n-(define_insn \"sse2_punpckhqdq\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(vec_select:V2DI\n-\t  (vec_concat:V4DI\n-\t    (match_operand:V2DI 1 \"register_operand\" \"0\")\n-\t    (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\"))\n-\t  (parallel [(const_int 1)\n-\t\t     (const_int 3)])))]\n-  \"TARGET_SSE2\"\n-  \"punpckhqdq\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix_data16\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n-\n-(define_insn \"sse2_punpcklqdq\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n-\t(vec_select:V2DI\n-\t  (vec_concat:V4DI\n-\t    (match_operand:V2DI 1 \"register_operand\" \"0\")\n-\t    (match_operand:V2DI 2 \"nonimmediate_operand\" \"xm\"))\n-\t  (parallel [(const_int 0)\n-\t\t     (const_int 2)])))]\n-  \"TARGET_SSE2\"\n-  \"punpcklqdq\\t{%2, %0|%0, %2}\"\n-  [(set_attr \"type\" \"sselog\")\n-   (set_attr \"prefix_data16\" \"1\")\n-   (set_attr \"mode\" \"TI\")])\n-\n (define_insn \"*sse4_1_pinsrb\"\n   [(set (match_operand:V16QI 0 \"register_operand\" \"=x\")\n \t(vec_merge:V16QI"}, {"sha": "ac05d1fe99551a75636af4c82ca4aa06b86e29fa", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8aaf5063d697ee0346ffb820e41d9d842c91b05/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8aaf5063d697ee0346ffb820e41d9d842c91b05/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b8aaf5063d697ee0346ffb820e41d9d842c91b05", "patch": "@@ -1,3 +1,8 @@\n+2008-08-19  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/37157\n+\t* gcc.target/i386/sse2-unpack-1.c: New.\n+\n 2008-08-19  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/37156"}, {"sha": "a2676396cd3219ef459ac59e0bbf98f37730a80e", "filename": "gcc/testsuite/gcc.target/i386/sse2-unpack-1.c", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8aaf5063d697ee0346ffb820e41d9d842c91b05/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-unpack-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8aaf5063d697ee0346ffb820e41d9d842c91b05/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-unpack-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-unpack-1.c?ref=b8aaf5063d697ee0346ffb820e41d9d842c91b05", "patch": "@@ -0,0 +1,19 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -msse2\" } */\n+\n+#include <emmintrin.h>\n+\n+__m128i\n+foo1 (__m128i s1, __m128i s2)\n+{\n+  return _mm_unpackhi_epi64 (s1, s2); \n+}\n+\n+__m128i\n+foo2 (__m128i s1, __m128i s2)\n+{\n+  return _mm_unpacklo_epi64 (s1, s2); \n+}\n+\n+/* { dg-final { scan-assembler \"punpcklqdq\" } } */\n+/* { dg-final { scan-assembler \"punpckhqdq\" } } */"}]}