{"sha": "d0e4968c33c257bcfa1afa4f499661c18c80e5bc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDBlNDk2OGMzM2MyNTdiY2ZhMWFmYTRmNDk5NjYxYzE4YzgwZTViYw==", "commit": {"author": {"name": "David Daney", "email": "ddaney@caviumnetworks.com", "date": "2009-12-04T17:46:23Z"}, "committer": {"name": "David Daney", "email": "daney@gcc.gnu.org", "date": "2009-12-04T17:46:23Z"}, "message": "re PR rtl-optimization/42164 (internal compiler error: in simplify_subreg, at simplify-rtx.c:5138)\n\n2009-12-04  David Daney  <ddaney@caviumnetworks.com>\n\n\tPR rtl-optimization/42164\n\t* combine.c (combine_simplify_rtx): Handle truncation of integer\n\tconstants.\n\n2009-12-04  David Daney  <ddaney@caviumnetworks.com>\n\n\tPR rtl-optimization/42164\n\t* gcc.c-torture/compile/pr42164.c: New test.\n\nFrom-SVN: r154987", "tree": {"sha": "3644884bc7ca74ce76b6bc0e62b5e2e10bb44f61", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3644884bc7ca74ce76b6bc0e62b5e2e10bb44f61"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d0e4968c33c257bcfa1afa4f499661c18c80e5bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0e4968c33c257bcfa1afa4f499661c18c80e5bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d0e4968c33c257bcfa1afa4f499661c18c80e5bc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d0e4968c33c257bcfa1afa4f499661c18c80e5bc/comments", "author": null, "committer": null, "parents": [{"sha": "c21237d52701733032eaa6fb97e4d233fabcaaaa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c21237d52701733032eaa6fb97e4d233fabcaaaa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c21237d52701733032eaa6fb97e4d233fabcaaaa"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "f01968c789c044e4737113fad0a183d7db838255", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0e4968c33c257bcfa1afa4f499661c18c80e5bc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0e4968c33c257bcfa1afa4f499661c18c80e5bc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d0e4968c33c257bcfa1afa4f499661c18c80e5bc", "patch": "@@ -1,3 +1,9 @@\n+2009-12-04  David Daney  <ddaney@caviumnetworks.com>\n+\n+\tPR rtl-optimization/42164\n+\t* combine.c (combine_simplify_rtx): Handle truncation of integer\n+\tconstants.\n+\n 2009-12-04  Richard Guenther  <rguenther@suse.de>\n \n \t* lto-streamer-out.c (pack_ts_decl_common_value_fields):"}, {"sha": "7f3f6da2cea188e71acfa87e3ec4004cc0c434e3", "filename": "gcc/combine.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0e4968c33c257bcfa1afa4f499661c18c80e5bc/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0e4968c33c257bcfa1afa4f499661c18c80e5bc/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=d0e4968c33c257bcfa1afa4f499661c18c80e5bc", "patch": "@@ -5156,6 +5156,10 @@ combine_simplify_rtx (rtx x, enum machine_mode op0_mode, int in_dest)\n \t       force_to_mode (XEXP (x, 0), GET_MODE (XEXP (x, 0)),\n \t\t\t      GET_MODE_MASK (mode), 0));\n \n+      /* We can truncate a constant value and return it.  */\n+      if (CONST_INT_P (XEXP (x, 0)))\n+\treturn gen_int_mode (INTVAL (XEXP (x, 0)), mode);\n+\n       /* Similarly to what we do in simplify-rtx.c, a truncate of a register\n \t whose value is a comparison can be replaced with a subreg if\n \t STORE_FLAG_VALUE permits.  */"}, {"sha": "b20ddd2fdcf595d8973fac3c31fb53217ccd8ebf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0e4968c33c257bcfa1afa4f499661c18c80e5bc/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0e4968c33c257bcfa1afa4f499661c18c80e5bc/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=d0e4968c33c257bcfa1afa4f499661c18c80e5bc", "patch": "@@ -1,3 +1,8 @@\n+2009-12-04  David Daney  <ddaney@caviumnetworks.com>\n+\n+\tPR rtl-optimization/42164\n+\t* gcc.c-torture/compile/pr42164.c: New test.\n+\n 2009-12-04  Eric Botcazou  <ebotcazou@adacore.com>\n \n \t* gnat.dg/specs/size_attribute1.ads: New test."}, {"sha": "7b94aefe7d83166ed22a43663afbbc4044c78533", "filename": "gcc/testsuite/gcc.c-torture/compile/pr42164.c", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d0e4968c33c257bcfa1afa4f499661c18c80e5bc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42164.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d0e4968c33c257bcfa1afa4f499661c18c80e5bc/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42164.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr42164.c?ref=d0e4968c33c257bcfa1afa4f499661c18c80e5bc", "patch": "@@ -0,0 +1,25 @@\n+typedef struct\n+{\n+  unsigned long long pte;\n+} pte_t;\n+pte_t mk_swap_pte (unsigned long offset)\n+{\n+  pte_t pte;\n+  pte.pte = (offset << 40);\n+  return pte;\n+}\n+int pte_file (pte_t pte)\n+{\n+  return pte.pte & (1 << 4);\n+}\n+typedef struct\n+{\n+  unsigned long val;\n+} swp_entry_t;\n+pte_t swp_entry_to_pte (swp_entry_t entry)\n+{\n+  swp_entry_t arch_entry;\n+  arch_entry = (swp_entry_t){mk_swap_pte (swp_offset (entry)).pte};\n+  __BUG_ON ((unsigned long) pte_file ((pte_t) {arch_entry.val}));\n+  return (pte_t) {arch_entry.val};\n+}"}]}