{"sha": "ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWUyZTNmNmJiNDk3OGQwYjE0OGU3NDU4ZGQ2OTE1ZGJjMjhmZGFmMw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T10:46:57Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2011-08-29T10:46:57Z"}, "message": "[multiple changes]\n\n2011-08-29  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_ch7.adb, make.adb, sem_res.adb, exp_intr.adb,\n\texp_dist.adb: Minor code reorganization.\n\tMinor reformatting.\n\n2011-08-29  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_cat.adb (Validate_RACW_Primitive): The return type of an RACW\n\tprimitive operation must support external streaming if it is not a\n\tcontrolling access result.\n\nFrom-SVN: r178199", "tree": {"sha": "ad06b98e051e01d32fdbef3c6563086d7ec598d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ad06b98e051e01d32fdbef3c6563086d7ec598d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3/comments", "author": null, "committer": null, "parents": [{"sha": "646e2823137ee4f66ce92a6cf9947e308526de00", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/646e2823137ee4f66ce92a6cf9947e308526de00", "html_url": "https://github.com/Rust-GCC/gccrs/commit/646e2823137ee4f66ce92a6cf9947e308526de00"}], "stats": {"total": 92, "additions": 52, "deletions": 40}, "files": [{"sha": "e906a4b94868b3e03a6dda594f211310819ff4f7", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3", "patch": "@@ -1,3 +1,15 @@\n+2011-08-29  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_ch7.adb, make.adb, sem_res.adb, exp_intr.adb,\n+\texp_dist.adb: Minor code reorganization.\n+\tMinor reformatting.\n+\n+2011-08-29  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_cat.adb (Validate_RACW_Primitive): The return type of an RACW\n+\tprimitive operation must support external streaming if it is not a\n+\tcontrolling access result.\n+\n 2011-08-29  Thomas Quinot  <quinot@adacore.com>\n \n \t* sinfo.ads, sem_ch7.adb: Minor reformatting."}, {"sha": "df6ead34f9dded1eafbd0286ac79084ed846bf9f", "filename": "gcc/ada/exp_dist.adb", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3/gcc%2Fada%2Fexp_dist.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3/gcc%2Fada%2Fexp_dist.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_dist.adb?ref=ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3", "patch": "@@ -10539,6 +10539,7 @@ package body Exp_Dist is\n                                           Expr :=\n                                             Make_Integer_Literal (Loc, J);\n                                        end if;\n+\n                                        Set_Etype (Expr, Disc_Type);\n                                        Append_To (Union_TC_Params,\n                                          Build_To_Any_Call (Expr, Decls));\n@@ -10566,8 +10567,9 @@ package body Exp_Dist is\n                                            (RTE (RE_TA_I32), Loc),\n                                        Parameter_Associations =>\n                                          New_List (\n-                                           Make_Integer_Literal\n-                                             (Loc, Choice_Index)));\n+                                           Make_Integer_Literal (Loc,\n+                                             Intval => Choice_Index)));\n+\n                                  begin\n                                     Insert_Before\n                                       (Default_Node, New_Default_Node);\n@@ -10581,10 +10583,10 @@ package body Exp_Dist is\n \n                                  declare\n                                     Exp : constant Node_Id :=\n-                                      Make_Attribute_Reference (Loc,\n-                                       Prefix         => New_Occurrence_Of\n-                                                           (Disc_Type, Loc),\n-                                       Attribute_Name => Name_First);\n+                                            Make_Attribute_Reference (Loc,\n+                                              Prefix => New_Occurrence_Of\n+                                                          (Disc_Type, Loc),\n+                                              Attribute_Name => Name_First);\n                                  begin\n                                     Set_Etype (Exp, Disc_Type);\n                                     Append_To (Union_TC_Params,"}, {"sha": "ce05b42b30f61cad17302bbf52b3067a86ee060a", "filename": "gcc/ada/exp_intr.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3/gcc%2Fada%2Fexp_intr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3/gcc%2Fada%2Fexp_intr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_intr.adb?ref=ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3", "patch": "@@ -1229,13 +1229,13 @@ package body Exp_Intr is\n       --  Generate a test of whether any earlier finalization raised an\n       --  exception, and in that case raise Program_Error with the previous\n       --  exception occurrence.\n-      --\n+\n       --  Generate:\n-      --    if Raised then\n-      --       Reraise_Occurrence (E);                      --  for .NET and\n-      --                                                    --  restricted RTS\n+      --    if Raised and then not Abort then\n+      --       Reraise_Occurrence (E);               --  for .NET and\n+      --                                             --  restricted RTS\n       --         <or>\n-      --       Raise_From_Controlled_Operation (E, Abort);  --  all other cases\n+      --       Raise_From_Controlled_Operation (E);  --  all other cases\n       --    end if;\n \n       if Present (Raised_Id) then"}, {"sha": "7b9087f4bc3e40e2b90f6e0e9adecd13d1d5938a", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3", "patch": "@@ -6109,19 +6109,20 @@ package body Make is\n                --  Set proper processing commands\n \n                case Targparm.VM_Target is\n-               when Targparm.JVM_Target =>\n+                  when Targparm.JVM_Target =>\n \n-                  --  Do not check for an object file (\".o\") when compiling to\n-                  --  JVM machine since \".class\" files are generated instead.\n+                     --  Do not check for an object file (\".o\") when compiling\n+                     --  to JVM machine since \".class\" files are generated\n+                     --  instead.\n \n-                  Check_Object_Consistency := False;\n-                  Gcc := new String'(\"jvm-gnatcompile\");\n+                     Check_Object_Consistency := False;\n+                     Gcc := new String'(\"jvm-gnatcompile\");\n \n-               when Targparm.CLI_Target =>\n-                  Gcc := new String'(\"dotnet-gnatcompile\");\n+                  when Targparm.CLI_Target =>\n+                     Gcc := new String'(\"dotnet-gnatcompile\");\n \n-               when Targparm.No_VM =>\n-                  raise Program_Error;\n+                  when Targparm.No_VM =>\n+                     raise Program_Error;\n                end case;\n             end if;\n "}, {"sha": "58aaee1d573cb3638b01d7528bc879dd4401c202", "filename": "gcc/ada/sem_cat.adb", "status": "modified", "additions": 14, "deletions": 18, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3/gcc%2Fada%2Fsem_cat.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3/gcc%2Fada%2Fsem_cat.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_cat.adb?ref=ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3", "patch": "@@ -1391,6 +1391,10 @@ package body Sem_Cat is\n       if Ekind (Subp) = E_Function then\n          Rtyp := Etype (Subp);\n \n+         --  AI05-0101 (Binding Interpretation): The result type of a remote\n+         --  function must either support external streaming or be a\n+         --  controlling access result type.\n+\n          if Has_Controlling_Result (Subp) then\n             null;\n \n@@ -1406,19 +1410,16 @@ package body Sem_Cat is\n                  (\"limited return type must have Read and Write attributes\",\n                      Parent (Subp));\n                Explain_Limited_Type (Rtyp, Parent (Subp));\n+            end if;\n \n-            --  Check that the return type supports external streaming.\n-            --  Note that the language of the standard (E.2.2(14)) does not\n-            --  explicitly mention that case, but it really does not make\n-            --  sense to return a value containing a local access type.\n+         --  Check that the return type supports external streaming\n \n-            elsif No_External_Streaming (Rtyp)\n-                    and then not Error_Posted (Rtyp)\n-            then\n-               Illegal_Remote_Subp (\"return type containing non-remote access \"\n-                 & \"must have Read and Write attributes\",\n-                 Parent (Subp));\n-            end if;\n+         elsif No_External_Streaming (Rtyp)\n+                 and then not Error_Posted (Rtyp)\n+         then\n+            Illegal_Remote_Subp (\"return type containing non-remote access \"\n+              & \"must have Read and Write attributes\",\n+              Parent (Subp));\n          end if;\n       end if;\n \n@@ -1674,13 +1675,8 @@ package body Sem_Cat is\n          then\n             return True;\n \n-         --  A limited interface is not currently a legal ancestor for the\n-         --  designated type of an RACW type, because a type that implements\n-         --  such an interface need not be limited. However, the ARG seems to\n-         --  incline towards allowing an access to classwide limited interface\n-         --  type as a remote access type, as resolved in AI05-060. But note\n-         --  that the expansion circuitry for RACWs that designate classwide\n-         --  interfaces is not complete yet.\n+         --  AI05-0060 (Binding Interpretation): A limited interface is a legal\n+         --  ancestor for the designated type of an RACW type.\n \n          elsif Is_Limited_Record (E) and then Is_Limited_Interface (E) then\n             return True;"}, {"sha": "e1453d0c1e8e329572d48a5b5eaa05324cd9dedc", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3", "patch": "@@ -1196,7 +1196,7 @@ package body Sem_Ch7 is\n \n          --  Check on incomplete types\n \n-         --  AI05-0213: a formal incomplete type has no completion\n+         --  AI05-0213: A formal incomplete type has no completion\n \n          if Ekind (E) = E_Incomplete_Type\n            and then No (Full_View (E))"}, {"sha": "e552c668560d8b40d415387f6afd7b6f63508126", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=ee2e3f6bb4978d0b148e7458dd6915dbc28fdaf3", "patch": "@@ -4059,7 +4059,7 @@ package body Sem_Res is\n \n    procedure Resolve_Allocator (N : Node_Id; Typ : Entity_Id) is\n       Desig_T  : constant Entity_Id := Designated_Type (Typ);\n-      E        : constant Node_Id := Expression (N);\n+      E        : constant Node_Id   := Expression (N);\n       Subtyp   : Entity_Id;\n       Discrim  : Entity_Id;\n       Constr   : Node_Id;\n@@ -4387,6 +4387,7 @@ package body Sem_Res is\n             declare\n                Discr : constant Entity_Id :=\n                          Defining_Identifier (Associated_Node_For_Itype (Typ));\n+\n             begin\n                --  Ada 2012 AI05-0052: If the designated type of the allocator\n                --  is limited, then the allocator shall not be used to define"}]}