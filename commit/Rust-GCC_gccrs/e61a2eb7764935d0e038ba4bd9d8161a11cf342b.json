{"sha": "e61a2eb7764935d0e038ba4bd9d8161a11cf342b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTYxYTJlYjc3NjQ5MzVkMGUwMzhiYTRiZDlkODE2MWExMWNmMzQyYg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2003-07-07T11:12:31Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2003-07-07T11:12:31Z"}, "message": "configure.in (enable_coverage): Remove -DSELF_COVERAGE, add -frandom-seed.\n\n\t* configure.in (enable_coverage): Remove -DSELF_COVERAGE, add\n\t-frandom-seed.\n\t* configure: Regenerated.\n\t* Makefile.in: Remove extraneous comment.\n\t* toplev.c (randomize): Protect against potential multiple calls.\n\t* doc/invoke.texi (-frandom-seed): Document use for in coverage\n\tfiles.\n\nFrom-SVN: r69039", "tree": {"sha": "2d02159375a3723c8c3d025cad12bac2bc749292", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d02159375a3723c8c3d025cad12bac2bc749292"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e61a2eb7764935d0e038ba4bd9d8161a11cf342b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e61a2eb7764935d0e038ba4bd9d8161a11cf342b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e61a2eb7764935d0e038ba4bd9d8161a11cf342b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e61a2eb7764935d0e038ba4bd9d8161a11cf342b/comments", "author": null, "committer": null, "parents": [{"sha": "82d610ec12da80bb3dc413ddad13ba142bbb99ad", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/82d610ec12da80bb3dc413ddad13ba142bbb99ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/82d610ec12da80bb3dc413ddad13ba142bbb99ad"}], "stats": {"total": 692, "additions": 352, "deletions": 340}, "files": [{"sha": "9a26e4d228ed4766e6505943c9733947f919bddb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e61a2eb7764935d0e038ba4bd9d8161a11cf342b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e61a2eb7764935d0e038ba4bd9d8161a11cf342b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e61a2eb7764935d0e038ba4bd9d8161a11cf342b", "patch": "@@ -1,3 +1,13 @@\n+2003-07-07  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* configure.in (enable_coverage): Remove -DSELF_COVERAGE, add\n+\t-frandom-seed.\n+\t* configure: Regenerated.\n+\t* Makefile.in: Remove extraneous comment.\n+\t* toplev.c (randomize): Protect against potential multiple calls.\n+\t* doc/invoke.texi (-frandom-seed): Document use for in coverage\n+\tfiles.\n+\n 2003-07-07  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n             Eric Botcazou  <ebotcazou@libertysurf.fr>\n "}, {"sha": "54c9a89cac5828e1029b190521fa426f35da9999", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e61a2eb7764935d0e038ba4bd9d8161a11cf342b/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e61a2eb7764935d0e038ba4bd9d8161a11cf342b/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=e61a2eb7764935d0e038ba4bd9d8161a11cf342b", "patch": "@@ -123,8 +123,7 @@ BOOT_CFLAGS = -g -O2\n \n # Flags to determine code coverage. When coverage is disabled, this will\n # contain the optimization flags, as you normally want code coverage\n-# without optimization. The -dumpbase $@ makes sure that the auxilary\n-# files end up near the object files.\n+# without optimization.\n COVERAGE_FLAGS = @coverage_flags@\n coverageexts = .{da,bbg}\n "}, {"sha": "7112f5927349c681dbde08fc7555e94e94e7f3e6", "filename": "gcc/configure", "status": "modified", "additions": 333, "deletions": 333, "changes": 666, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e61a2eb7764935d0e038ba4bd9d8161a11cf342b/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e61a2eb7764935d0e038ba4bd9d8161a11cf342b/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=e61a2eb7764935d0e038ba4bd9d8161a11cf342b"}, {"sha": "3fcee82ed1ab51a36db68f7834ccc8c51b52bd11", "filename": "gcc/configure.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e61a2eb7764935d0e038ba4bd9d8161a11cf342b/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e61a2eb7764935d0e038ba4bd9d8161a11cf342b/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=e61a2eb7764935d0e038ba4bd9d8161a11cf342b", "patch": "@@ -430,10 +430,10 @@ AC_ARG_ENABLE(coverage,\n \t\t\t  default is noopt],\n [case \"${enableval}\" in\n yes|noopt)\n-\tcoverage_flags=\"-fprofile-arcs -ftest-coverage -O0 -DSELF_COVERAGE=1\"\n+\tcoverage_flags=\"-fprofile-arcs -ftest-coverage -frandom-seed=\\$@ -O0\"\n \t;;\n opt)\n-\tcoverage_flags=\"-fprofile-arcs -ftest-coverage -O2 -DSELF_COVERAGE=2\"\n+\tcoverage_flags=\"-fprofile-arcs -ftest-coverage -frandom-seed=\\$@ -O2\"\n \t;;\n *)\n \tAC_MSG_ERROR(unknown coverage setting $enableval)"}, {"sha": "395e20b3e9e0e73fa3225ab06451b7ab1fff4f82", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e61a2eb7764935d0e038ba4bd9d8161a11cf342b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e61a2eb7764935d0e038ba4bd9d8161a11cf342b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=e61a2eb7764935d0e038ba4bd9d8161a11cf342b", "patch": "@@ -3323,8 +3323,11 @@ Dump after function inlining, to @file{@var{file}.inlined}.\n @item -frandom-seed=@var{string}\n @opindex frandom-string\n This option provides a seed that GCC uses when it would otherwise use\n-random numbers.  At present, this is used to generate certain symbol names\n-that have to be different in every compiled file.\n+random numbers.  It is used to generate certain symbol names\n+that have to be different in every compiled file. It is also used to\n+place unique stamps in coverage data files and the object files that\n+produce them. You can use the @option{-frandom-seed} option to produce\n+reproducibly identical object files.\n \n The @var{string} should be different for every file you compile.\n "}, {"sha": "209109f2d431ed404f54414f5a1b4c01b33cc9a3", "filename": "gcc/toplev.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e61a2eb7764935d0e038ba4bd9d8161a11cf342b/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e61a2eb7764935d0e038ba4bd9d8161a11cf342b/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=e61a2eb7764935d0e038ba4bd9d8161a11cf342b", "patch": "@@ -1600,7 +1600,7 @@ randomize (void)\n       sprintf (random_seed, HOST_WIDE_INT_PRINT_HEX, value);\n       flag_random_seed = random_seed;\n     }\n-  else\n+  else if (!local_tick)\n     local_tick = -1;\n }\n "}]}