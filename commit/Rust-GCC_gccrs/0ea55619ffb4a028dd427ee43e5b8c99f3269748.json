{"sha": "0ea55619ffb4a028dd427ee43e5b8c99f3269748", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGVhNTU2MTlmZmI0YTAyOGRkNDI3ZWU0M2U1YjhjOTlmMzI2OTc0OA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-01T08:11:09Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-10-01T08:11:09Z"}, "message": "[multiple changes]\n\n2012-10-01  Thomas Quinot  <quinot@adacore.com>\n\n\t* make.adb: Minor documentation fix: error messages are sent to\n\tstderr, not stdout.\n\n2012-10-01  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* checks.ads, checks.adb (Apply_Parameter_Aliasing_Checks): New routine.\n\t(Apply_Parameter_Validity_Checks): New routines.\n\t* exp_ch6.adb (Expand_Call): Add aliasing checks to detect\n\toverlapping objects.\n\t* freeze.adb: Add with and use clauses for Checks and Validsw.\n\t(Freeze_Entity): Add checks to detect proper initialization\n\tof scalars.\n\t* sem_ch4.adb: Add with and use clauses for Checks and Validsw.\n\t(Analyze_Call): Add aliasing checks to detect overlapping objects.\n\t* sem_ch13.adb: Add with and use clauses for Validsw.\n\t(Analyze_Aspect_Specifications): Add checks to detect proper\n\tinitialization of scalars.\n\t* sem_prag.adb (Chain_PPC): Correct the extraction of the\n\tsubprogram name.\n\t* sem_util.adb (Is_Object_Reference): Attribute 'Result now\n\tproduces an object.\n\t* usage.adb (Usage): Add usage lines for validity switches 'l',\n\t'L', 'v' and 'V'.\n\t* validsw.adb (Reset_Validity_Check_Options): Include\n\tprocessing for flags Validity_Check_Non_Overlapping_Params and\n\tValidity_Check_Valid_Scalars_On_Params. Code reformatting.\n\t(Save_Validity_Check_Options): Include processing\n\tfor flags Validity_Check_Non_Overlapping_Params\n\tand Validity_Check_Valid_Scalars_On_Params.\n\t(Set_Validity_Check_Options): Add processing for validity switches\n\t'a', 'l', 'L', 'n', 'v' and 'V'. Code reformatting.\n\t* validsw.ads: Add new flags Validity_Check_Non_Overlapping_Params\n\tand Validity_Check_Valid_Scalars_On_Params along with comments\n\ton usage.\n\n2012-10-01  Thomas Quinot  <quinot@adacore.com>\n\n\t* namet.ads, xsnamest.adb, prj-env.adb, sem_warn.adb,\n\terrout.ads: Minor reformatting.\n\t* prj-part.adb: Add comment.\n\nFrom-SVN: r191890", "tree": {"sha": "a355086490ff99333e92d09d16dab72dbea68ec0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a355086490ff99333e92d09d16dab72dbea68ec0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0ea55619ffb4a028dd427ee43e5b8c99f3269748", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea55619ffb4a028dd427ee43e5b8c99f3269748", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ea55619ffb4a028dd427ee43e5b8c99f3269748", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ea55619ffb4a028dd427ee43e5b8c99f3269748/comments", "author": null, "committer": null, "parents": [{"sha": "2791be24535827b03f32ab5c84c5a5c746a8d9f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2791be24535827b03f32ab5c84c5a5c746a8d9f7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2791be24535827b03f32ab5c84c5a5c746a8d9f7"}], "stats": {"total": 646, "additions": 569, "deletions": 77}, "files": [{"sha": "2b7841c1e8d9c85e74c4b43ae2ce431b811bd577", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -1,3 +1,46 @@\n+2012-10-01  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* make.adb: Minor documentation fix: error messages are sent to\n+\tstderr, not stdout.\n+\n+2012-10-01  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* checks.ads, checks.adb (Apply_Parameter_Aliasing_Checks): New routine.\n+\t(Apply_Parameter_Validity_Checks): New routines.\n+\t* exp_ch6.adb (Expand_Call): Add aliasing checks to detect\n+\toverlapping objects.\n+\t* freeze.adb: Add with and use clauses for Checks and Validsw.\n+\t(Freeze_Entity): Add checks to detect proper initialization\n+\tof scalars.\n+\t* sem_ch4.adb: Add with and use clauses for Checks and Validsw.\n+\t(Analyze_Call): Add aliasing checks to detect overlapping objects.\n+\t* sem_ch13.adb: Add with and use clauses for Validsw.\n+\t(Analyze_Aspect_Specifications): Add checks to detect proper\n+\tinitialization of scalars.\n+\t* sem_prag.adb (Chain_PPC): Correct the extraction of the\n+\tsubprogram name.\n+\t* sem_util.adb (Is_Object_Reference): Attribute 'Result now\n+\tproduces an object.\n+\t* usage.adb (Usage): Add usage lines for validity switches 'l',\n+\t'L', 'v' and 'V'.\n+\t* validsw.adb (Reset_Validity_Check_Options): Include\n+\tprocessing for flags Validity_Check_Non_Overlapping_Params and\n+\tValidity_Check_Valid_Scalars_On_Params. Code reformatting.\n+\t(Save_Validity_Check_Options): Include processing\n+\tfor flags Validity_Check_Non_Overlapping_Params\n+\tand Validity_Check_Valid_Scalars_On_Params.\n+\t(Set_Validity_Check_Options): Add processing for validity switches\n+\t'a', 'l', 'L', 'n', 'v' and 'V'. Code reformatting.\n+\t* validsw.ads: Add new flags Validity_Check_Non_Overlapping_Params\n+\tand Validity_Check_Valid_Scalars_On_Params along with comments\n+\ton usage.\n+\n+2012-10-01  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* namet.ads, xsnamest.adb, prj-env.adb, sem_warn.adb,\n+\terrout.ads: Minor reformatting.\n+\t* prj-part.adb: Add comment.\n+\n 2012-10-01  Robert Dewar  <dewar@adacore.com>\n \n \t* sinfo.ads, exp_aggr.adb, sem_ch13.adb: Minor reformatting."}, {"sha": "685016fab99886c14aa53d7cba2a2703c72bcf70", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 347, "deletions": 0, "changes": 347, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -1774,6 +1774,353 @@ package body Checks is\n         (Ck_Node, Target_Typ, Source_Typ, Do_Static => False);\n    end Apply_Length_Check;\n \n+   -------------------------------------\n+   -- Apply_Parameter_Aliasing_Checks --\n+   -------------------------------------\n+\n+   procedure Apply_Parameter_Aliasing_Checks (Call : Node_Id) is\n+      Loc        : constant Source_Ptr := Sloc (Call);\n+      Actual     : Node_Id;\n+      Actual_Typ : Entity_Id;\n+      Check      : Node_Id;\n+      Cond       : Node_Id := Empty;\n+      Param      : Node_Id;\n+      Param_Typ  : Entity_Id;\n+\n+   begin\n+      --  Do not generate the checks in Ada 83, 95 or 05 mode because they\n+      --  require an Ada 2012 construct.\n+\n+      if Ada_Version_Explicit < Ada_2012 then\n+         return;\n+      end if;\n+\n+      --  Inspect all pairs of parameters\n+\n+      Actual := First_Actual (Call);\n+      while Present (Actual) loop\n+         Actual_Typ := Base_Type (Etype (Actual));\n+\n+         if Nkind (Actual) = N_Identifier\n+           and then Is_Object_Reference (Actual)\n+         then\n+            Param := Next_Actual (Actual);\n+            while Present (Param) loop\n+               Param_Typ := Base_Type (Etype (Param));\n+\n+               if Nkind (Param) = N_Identifier\n+                 and then Is_Object_Reference (Param)\n+                 and then Actual_Typ = Param_Typ\n+               then\n+                  --  Generate:\n+                  --    Actual'Overlaps_Storage (Param)\n+\n+                  Check :=\n+                   Make_Attribute_Reference (Loc,\n+                      Prefix         =>\n+                        New_Reference_To (Entity (Actual), Loc),\n+                      Attribute_Name => Name_Overlaps_Storage,\n+                      Expressions    =>\n+                        New_List (New_Reference_To (Entity (Param), Loc)));\n+\n+                  if No (Cond) then\n+                     Cond := Check;\n+                  else\n+                     Cond :=\n+                       Make_And_Then (Loc,\n+                         Left_Opnd  => Cond,\n+                         Right_Opnd => Check);\n+                  end if;\n+               end if;\n+\n+               Next_Actual (Param);\n+            end loop;\n+         end if;\n+\n+         Next_Actual (Actual);\n+      end loop;\n+\n+      --  Raise Program_Error when the actuals overlap\n+\n+      if Present (Cond) then\n+         Insert_Action (Call,\n+           Make_Raise_Program_Error (Loc,\n+             Condition => Cond,\n+             Reason    => PE_Explicit_Raise));\n+      end if;\n+   end Apply_Parameter_Aliasing_Checks;\n+\n+   -------------------------------------\n+   -- Apply_Parameter_Validity_Checks --\n+   -------------------------------------\n+\n+   procedure Apply_Parameter_Validity_Checks (Subp : Entity_Id) is\n+      Subp_Decl : Node_Id;\n+      Subp_Spec : Node_Id;\n+\n+      procedure Create_PPC_Pragma (Prag : in out Node_Id; Nam : Name_Id);\n+      --  Create a pre or post condition pragma with name Nam\n+\n+      -----------------------\n+      -- Create_PPC_Pragma --\n+      -----------------------\n+\n+      procedure Create_PPC_Pragma (Prag : in out Node_Id; Nam : Name_Id) is\n+         Loc   : constant Source_Ptr := Sloc (Subp);\n+         Assoc : Node_Id;\n+\n+      begin\n+         Prag :=\n+           Make_Pragma (Loc,\n+             Pragma_Identifier            => Make_Identifier (Loc, Nam),\n+             Class_Present                =>\n+               Is_Abstract_Subprogram (Subp)\n+                 or else (Nkind (Subp_Spec) = N_Procedure_Specification\n+                            and then Null_Present (Subp_Spec)),\n+             Pragma_Argument_Associations => New_List (\n+               Make_Pragma_Argument_Association (Loc,\n+                 Chars      => Name_Check,\n+                 Expression => Empty)));\n+\n+         --  Emulate the behavior of a from-aspect pragma\n+\n+         Set_From_Aspect_Specification (Prag);\n+\n+         --  Process all formals and a possible function result\n+\n+         Apply_Parameter_Validity_Checks (Subp, Prag);\n+         Assoc := First (Pragma_Argument_Associations (Prag));\n+\n+         --  Insert the pragma in the tree only when the related subprogram\n+         --  has eligible formals and function result that produced validity\n+         --  checks.\n+\n+         if Present (Expression (Assoc)) then\n+\n+            --  Add a message unless exception messages are suppressed\n+\n+            if not Exception_Locations_Suppressed then\n+               Append_To (Pragma_Argument_Associations (Prag),\n+                 Make_Pragma_Argument_Association (Loc,\n+                   Chars      => Name_Message,\n+                   Expression =>\n+                     Make_String_Literal (Loc,\n+                       Strval => \"failed \" & Get_Name_String (Nam) &\n+                                  \" from \" & Build_Location_String (Loc))));\n+            end if;\n+\n+            --  Insert the pragma in the tree\n+\n+            if Nkind (Parent (Subp_Decl)) = N_Compilation_Unit then\n+               Add_Global_Declaration (Prag);\n+            else\n+               Insert_After (Subp_Decl, Prag);\n+            end if;\n+\n+            Analyze (Prag);\n+         end if;\n+      end Create_PPC_Pragma;\n+\n+      --  Local variables\n+\n+      Post : Node_Id := Empty;\n+      Pre  : Node_Id := Empty;\n+\n+   --  Start of processing for Apply_Parameter_Validity_Checks\n+\n+   begin\n+      --  Extract the subprogram specification and declaration nodes\n+\n+      Subp_Spec := Parent (Subp);\n+      if Nkind (Subp_Spec) = N_Defining_Program_Unit_Name then\n+         Subp_Spec := Parent (Subp_Spec);\n+      end if;\n+      Subp_Decl := Parent (Subp_Spec);\n+\n+      --  Do not generate checks in Ada 83 or 95 because the pragmas involved\n+      --  are not allowed in those modes.\n+\n+      if Ada_Version_Explicit < Ada_2005 then\n+         return;\n+\n+      --  Do not process subprograms where pre and post conditions do not make\n+      --  sense.\n+\n+      elsif not Comes_From_Source (Subp)\n+        or else Is_Imported (Subp)\n+        or else Is_Intrinsic_Subprogram (Subp)\n+        or else Is_Formal_Subprogram (Subp)\n+        or else not Nkind_In (Subp_Decl, N_Abstract_Subprogram_Declaration,\n+                                         N_Generic_Subprogram_Declaration,\n+                                         N_Subprogram_Declaration)\n+      then\n+         return;\n+      end if;\n+\n+      --  A subprogram may already have a pre or post condition pragma. Look\n+      --  through the its contract and recover the pre and post conditions (if\n+      --  available).\n+\n+      if Present (Contract (Subp)) then\n+         declare\n+            Nam  : Name_Id;\n+            Prag : Node_Id;\n+\n+         begin\n+            Prag := Spec_PPC_List (Contract (Subp));\n+            while Present (Prag) loop\n+               Nam := Pragma_Name (Prag);\n+\n+               if Nam = Name_Precondition then\n+                  Pre := Prag;\n+               elsif Nam = Name_Postcondition then\n+                  Post := Prag;\n+               end if;\n+\n+               Prag := Next_Pragma (Prag);\n+            end loop;\n+         end;\n+      end if;\n+\n+      --  Generate the missing pre or post condition pragmas\n+\n+      if No (Pre) then\n+         Create_PPC_Pragma (Pre, Name_Precondition);\n+      end if;\n+\n+      if No (Post) then\n+         Create_PPC_Pragma (Post, Name_Postcondition);\n+      end if;\n+   end Apply_Parameter_Validity_Checks;\n+\n+   -------------------------------------\n+   -- Apply_Parameter_Validity_Checks --\n+   -------------------------------------\n+\n+   procedure Apply_Parameter_Validity_Checks\n+     (Subp : Entity_Id;\n+      Prag : Node_Id)\n+   is\n+      Loc      : constant Source_Ptr := Sloc (Subp);\n+      Prag_Nam : constant Name_Id    := Pragma_Name (Prag);\n+      Formal   : Entity_Id;\n+\n+      procedure Add_Validity_Check\n+        (Context    : Entity_Id;\n+         For_Result : Boolean := False);\n+      --  Add a single validity check to a pre or post condition which verifies\n+      --  that Context has properly initialized scalars. Set flag For_Result to\n+      --  verify the result of a function.\n+\n+      ------------------------\n+      -- Add_Validity_Check --\n+      ------------------------\n+\n+      procedure Add_Validity_Check\n+        (Context    : Entity_Id;\n+         For_Result : Boolean := False)\n+      is\n+         Assoc : constant Node_Id   :=\n+                   First (Pragma_Argument_Associations (Prag));\n+         Expr  : constant Node_Id   := Expression (Assoc);\n+         Typ   : constant Entity_Id := Etype (Context);\n+         Check : Node_Id;\n+         Nam   : Name_Id;\n+\n+      begin\n+         --  Pick the proper version of 'Valid depending on the type of the\n+         --  context. If the context is not eligible for such a check, return.\n+\n+         if Is_Scalar_Type (Typ) then\n+            Nam := Name_Valid;\n+         elsif not No_Scalar_Parts (Typ) then\n+            Nam := Name_Valid_Scalars;\n+         else\n+            return;\n+         end if;\n+\n+         --  Step 1: Create the expression to verify the validity of the\n+         --  context.\n+\n+         Check := New_Reference_To (Context, Loc);\n+\n+         --  When processing a function result, use 'Result. Generate\n+         --    Context'Result\n+\n+         if For_Result then\n+            Check :=\n+              Make_Attribute_Reference (Loc,\n+                Prefix         => Check,\n+                Attribute_Name => Name_Result);\n+         end if;\n+\n+         --  Generate:\n+         --    Context['Result]'Valid[_Scalars]\n+\n+         Check :=\n+           Make_Attribute_Reference (Loc,\n+             Prefix         => Check,\n+             Attribute_Name => Nam);\n+\n+         --  Step 2: Associate the check with the related pragma\n+\n+         if No (Expr) then\n+            Set_Expression (Assoc, Check);\n+         else\n+            Set_Expression (Assoc,\n+              Make_And_Then (Loc,\n+                Left_Opnd  => Expr,\n+                Right_Opnd => Check));\n+         end if;\n+      end Add_Validity_Check;\n+\n+   --  Start of processing for Apply_Parameter_Validity_Checks\n+\n+   begin\n+      --  Do not process subprograms where pre and post conditions do not make\n+      --  sense.\n+\n+      if not Comes_From_Source (Subp)\n+        or else Is_Imported (Subp)\n+        or else Is_Intrinsic_Subprogram (Subp)\n+      then\n+         return;\n+      end if;\n+\n+      --  Generate the following validity checks for each formal parameter:\n+      --\n+      --    mode IN     - Pre       => Formal'Valid[_Scalars]\n+      --    mode IN OUT - Pre, Post => Formal'Valid[_Scalars]\n+      --    mode    OUT -      Post => Formal'Valid[_Scalars]\n+\n+      Formal := First_Formal (Subp);\n+      while Present (Formal) loop\n+         if Prag_Nam = Name_Precondition\n+           and then Ekind_In (Formal, E_In_Parameter, E_In_Out_Parameter)\n+         then\n+            Add_Validity_Check (Formal);\n+         end if;\n+\n+         if Prag_Nam = Name_Postcondition\n+           and then Ekind_In (Formal, E_In_Out_Parameter, E_Out_Parameter)\n+         then\n+            Add_Validity_Check (Formal);\n+         end if;\n+\n+         Next_Formal (Formal);\n+      end loop;\n+\n+      --  Generate the following validy check for a function result:\n+      --\n+      --    Post => Sub'Result'Valid[_Scalars]\n+\n+      if Prag_Nam = Name_Postcondition\n+        and then Ekind_In (Subp, E_Function, E_Generic_Function)\n+      then\n+         Add_Validity_Check (Subp, For_Result => True);\n+      end if;\n+   end Apply_Parameter_Validity_Checks;\n+\n    ---------------------------\n    -- Apply_Predicate_Check --\n    ---------------------------"}, {"sha": "850bf84186a068091140c4a6778f53e0d74a3d4a", "filename": "gcc/ada/checks.ads", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fchecks.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fchecks.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.ads?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -154,6 +154,21 @@ package Checks is\n    --  formals, the check is performed only if the corresponding actual is\n    --  constrained, i.e., whether Lhs'Constrained is True.\n \n+   procedure Apply_Parameter_Aliasing_Checks (Call : Node_Id);\n+   --  Given a subprogram call Call, introduce a check to verify that none of\n+   --  the actual parameters overlap.\n+\n+   procedure Apply_Parameter_Validity_Checks (Subp : Entity_Id);\n+   --  Given a subprogram Subp, add both a pre and post condition pragmas that\n+   --  verify the validity of formal parameters and function results.\n+\n+   procedure Apply_Parameter_Validity_Checks\n+     (Subp : Entity_Id;\n+      Prag : Node_Id);\n+   --  Given a subprogram Subp and a pre or post condition pragma Prag, augment\n+   --  the expression of the pragma to verify the validity of qualifying formal\n+   --  parameter and function results.\n+\n    procedure Apply_Predicate_Check (N : Node_Id; Typ : Entity_Id);\n    --  N is an expression to which a predicate check may need to be applied\n    --  for Typ, if Typ has a predicate function. The check is applied only"}, {"sha": "212eea4a1161ee842ee65cea4d10bde88571c332", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -230,7 +230,7 @@ package Errout is\n    --      one (the plus one is because the number is stored 0-origin and\n    --      displayed 1-origin).\n \n-   --    Insertion character ^ (Carret: insert integer value)\n+   --    Insertion character ^ (Caret: insert integer value)\n    --      The character ^ is replaced by the decimal conversion of the Uint\n    --      value stored in Error_Msg_Uint_1, with a possible leading minus.\n    --      A second ^ may occur in the message, in which case it is replaced"}, {"sha": "528702441fdc369ff3f6d38acc7c135446891d64", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -3404,6 +3404,13 @@ package body Exp_Ch6 is\n \n       Expand_Actuals (Call_Node, Subp);\n \n+      --  Now that we have all parameters, add aliasing checks to detect\n+      --  overlapping objects.\n+\n+      if Validity_Check_Non_Overlapping_Params then\n+         Apply_Parameter_Aliasing_Checks (N);\n+      end if;\n+\n       --  If the subprogram is a renaming, or if it is inherited, replace it in\n       --  the call with the name of the actual subprogram being called. If this\n       --  is a dispatching call, the run-time decides what to call. The Alias"}, {"sha": "1691fb5214af293949588308e5557dfa8a11c2fd", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -24,6 +24,7 @@\n ------------------------------------------------------------------------------\n \n with Atree;    use Atree;\n+with Checks;   use Checks;\n with Debug;    use Debug;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n@@ -64,6 +65,7 @@ with Tbuild;   use Tbuild;\n with Ttypes;   use Ttypes;\n with Uintp;    use Uintp;\n with Urealp;   use Urealp;\n+with Validsw;  use Validsw;\n \n package body Freeze is\n \n@@ -2655,6 +2657,14 @@ package body Freeze is\n          end;\n       end if;\n \n+      --  Add checks to detect proper initialization of scalars\n+\n+      if Is_Subprogram (E)\n+        and then Validity_Check_Valid_Scalars_On_Params\n+      then\n+         Apply_Parameter_Validity_Checks (E);\n+      end if;\n+\n       --  Deal with delayed aspect specifications. The analysis of the\n       --  aspect is required to be delayed to the freeze point, thus we\n       --  analyze the pragma or attribute definition clause in the tree at"}, {"sha": "957e35d16ecbc59da80e46ebbefbee1328303e90", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -410,7 +410,7 @@ package body Make is\n    --  Delete all temp files created by Gnatmake and call Osint.Fail, with the\n    --  parameter S (see osint.ads). This is called from the Prj hierarchy and\n    --  the MLib hierarchy. This subprogram also prints current error messages\n-   --  on stdout (ie finalizes errout)\n+   --  (ie finalizes Errutil).\n \n    --------------------------\n    -- Obsolete Executables --"}, {"sha": "e8978f8b52f9f80d13e5325dc51b2fb41a4475b7", "filename": "gcc/ada/namet.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fnamet.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fnamet.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.ads?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2010, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -47,11 +47,11 @@ package Namet is\n \n --  The forms of the entries are as follows:\n \n---    Identifiers Stored with upper case letters folded to lower case. Upper\n---                       half (16#80# bit set) and wide characters are stored\n---                       in an encoded form (Uhh for upper half char, Whhhh\n---                       for wide characters, WWhhhhhhhh as provided by the\n---                       routine Store_Encoded_Character, where hh are hex\n+--    Identifiers        Stored with upper case letters folded to lower case.\n+--                       Upper half (16#80# bit set) and wide characters are\n+--                       stored in an encoded form (Uhh for upper half char,\n+--                       Whhhh for wide characters, WWhhhhhhhh as provided by\n+--                       the routine Store_Encoded_Character, where hh are hex\n --                       digits for the character code using lower case a-f).\n --                       Normally the use of U or W in other internal names is\n --                       avoided, but these letters may be used in internal"}, {"sha": "ddff02fcb92ac57148d1a4190a8fb0a97b538d18", "filename": "gcc/ada/prj-env.adb", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fprj-env.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fprj-env.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-env.adb?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -2043,8 +2043,7 @@ package body Prj.Env is\n                   --  $prefix/$target/lib/gnat\n \n                   Add_Str_To_Name_Buffer\n-                    (Path_Separator & Prefix.all &\n-                     Target_Name);\n+                    (Path_Separator & Prefix.all & Target_Name);\n \n                   --  Note: Target_Name has a trailing / when it comes from\n                   --  Sdefault."}, {"sha": "17b72ea29aa08b994f687584abb0fac888c9d39b", "filename": "gcc/ada/prj-part.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fprj-part.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fprj-part.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-part.adb?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -636,9 +636,12 @@ package body Prj.Part is\n \n          --  Now, check the projects directly imported by the main project.\n          --  Remove from the potentially virtual any project extended by one\n-         --  of these imported projects. For non extending imported projects,\n-         --  check that they do not belong to the project tree of the project\n-         --  being \"extended-all\" by the main project.\n+         --  of these imported projects.\n+\n+         --  For non extending imported projects, check that they do not belong\n+         --  to the project tree of the project being \"extended-all\" by the\n+         --  main project.\n+         --  Where is this check performed???\n \n          declare\n             With_Clause : Project_Node_Id;"}, {"sha": "41c4cfa0518c28e0ce099b07a404ef374c9aadc5", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -63,6 +63,7 @@ with Targparm; use Targparm;\n with Ttypes;   use Ttypes;\n with Tbuild;   use Tbuild;\n with Urealp;   use Urealp;\n+with Validsw;  use Validsw;\n with Warnsw;   use Warnsw;\n \n with GNAT.Heap_Sort_G;\n@@ -1522,6 +1523,12 @@ package body Sem_Ch13 is\n                           Chars      => Name_Check,\n                           Expression => Relocate_Node (Expr))));\n \n+                  --  Add checks to detect proper initialization of scalars\n+\n+                  if Validity_Check_Valid_Scalars_On_Params then\n+                     Apply_Parameter_Validity_Checks (E, Aitem);\n+                  end if;\n+\n                   --  Add message unless exception messages are suppressed\n \n                   if not Opt.Exception_Locations_Suppressed then"}, {"sha": "13430dbc4aa771acf4bdb55aba896be861d98fbd", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -25,6 +25,7 @@\n \n with Aspects;  use Aspects;\n with Atree;    use Atree;\n+with Checks;   use Checks;\n with Debug;    use Debug;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n@@ -62,6 +63,7 @@ with Sinfo;    use Sinfo;\n with Snames;   use Snames;\n with Tbuild;   use Tbuild;\n with Uintp;    use Uintp;\n+with Validsw;  use Validsw;\n \n package body Sem_Ch4 is\n \n@@ -1243,6 +1245,15 @@ package body Sem_Ch4 is\n \n          End_Interp_List;\n       end if;\n+\n+      --  Add aliasing checks to detect overlapping objects. Process the call\n+      --  now in case expansion is disabled.\n+\n+      if not Expander_Active\n+        and then Validity_Check_Non_Overlapping_Params\n+      then\n+         Apply_Parameter_Aliasing_Checks (N);\n+      end if;\n    end Analyze_Call;\n \n    -----------------------------"}, {"sha": "55f391fa6309ada7ec5593a5063466e7dbc9ea14", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -2057,6 +2057,10 @@ package body Sem_Prag is\n                S := Defining_Entity (PO);\n             else\n                S := Defining_Unit_Name (Specification (PO));\n+\n+               if Nkind (S) = N_Defining_Program_Unit_Name then\n+                  S := Defining_Identifier (S);\n+               end if;\n             end if;\n \n             --  Note: we do not analyze the pragma at this point. Instead we"}, {"sha": "2dc7469b2f7e7bc58ce30149160df71c9898f4b3", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -7719,10 +7719,12 @@ package body Sem_Util is\n             when N_Function_Call =>\n                return Etype (N) /= Standard_Void_Type;\n \n-            --  A reference to the stream attribute Input is a function call\n+            --  Attributes 'Input and 'Result produce objects\n \n             when N_Attribute_Reference =>\n-               return Attribute_Name (N) = Name_Input;\n+               return Attribute_Name (N) = Name_Input\n+                        or else\n+                      Attribute_Name (N) = Name_Result;\n \n             when N_Selected_Component =>\n                return"}, {"sha": "c05cf3ba558b40d83b0bbc0ba3d076b222524761", "filename": "gcc/ada/sem_warn.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fsem_warn.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fsem_warn.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_warn.adb?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -103,7 +103,7 @@ package body Sem_Warn is\n    --       and then Has_Warnings_Off (E)\n \n    --  This way if some-other-predicate is false, we avoid a false indication\n-   --  that a Warnings (Off,E) pragma was useful in preventing a warning.\n+   --  that a Warnings (Off, E) pragma was useful in preventing a warning.\n \n    --  The second rule is that if both Has_Unmodified and Has_Warnings_Off, or\n    --  Has_Unreferenced and Has_Warnings_Off are called, make sure that the"}, {"sha": "f24b2fcf451adcf351a987cead669c52052cb49c", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -399,6 +399,8 @@ begin\n    Write_Line (\"        F    turn off checking for floating-point\");\n    Write_Line (\"        i    turn on checking for in params\");\n    Write_Line (\"        I    turn off checking for in params\");\n+   Write_Line (\"        l    turn on checking for non-overlapping params\");\n+   Write_Line (\"        L    turn off checking for non-overlapping params\");\n    Write_Line (\"        m    turn on checking for in out params\");\n    Write_Line (\"        M    turn off checking for in out params\");\n    Write_Line (\"        o    turn on checking for operators/attributes\");\n@@ -411,6 +413,8 @@ begin\n    Write_Line (\"        S    turn off checking for subscripts\");\n    Write_Line (\"        t    turn on checking for tests\");\n    Write_Line (\"        T    turn off checking for tests\");\n+   Write_Line (\"        v    turn on checking for 'Valid_Scalars on params\");\n+   Write_Line (\"        V    turn off checking for 'Valid_Scalars on params\");\n    Write_Line (\"        n    turn off all validity checks (including RM)\");\n \n    --  Lines for -gnatw switch"}, {"sha": "df39e1a568a9675141f942f0e51f8f33b89e63e0", "filename": "gcc/ada/validsw.adb", "status": "modified", "additions": 77, "deletions": 57, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fvalidsw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fvalidsw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvalidsw.adb?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2007, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -33,16 +33,18 @@ package body Validsw is\n \n    procedure Reset_Validity_Check_Options is\n    begin\n-      Validity_Check_Components     := False;\n-      Validity_Check_Copies         := False;\n-      Validity_Check_Default        := True;\n-      Validity_Check_Floating_Point := False;\n-      Validity_Check_In_Out_Params  := False;\n-      Validity_Check_In_Params      := False;\n-      Validity_Check_Operands       := False;\n-      Validity_Check_Returns        := False;\n-      Validity_Check_Subscripts     := False;\n-      Validity_Check_Tests          := False;\n+      Validity_Check_Components              := False;\n+      Validity_Check_Copies                  := False;\n+      Validity_Check_Default                 := True;\n+      Validity_Check_Floating_Point          := False;\n+      Validity_Check_In_Out_Params           := False;\n+      Validity_Check_In_Params               := False;\n+      Validity_Check_Non_Overlapping_Params  := False;\n+      Validity_Check_Operands                := False;\n+      Validity_Check_Returns                 := False;\n+      Validity_Check_Subscripts              := False;\n+      Validity_Check_Tests                   := False;\n+      Validity_Check_Valid_Scalars_On_Params := False;\n    end Reset_Validity_Check_Options;\n \n    ---------------------------------\n@@ -78,11 +80,13 @@ package body Validsw is\n       Add ('e', Validity_Check_Components);\n       Add ('f', Validity_Check_Floating_Point);\n       Add ('i', Validity_Check_In_Params);\n+      Add ('l', Validity_Check_Non_Overlapping_Params);\n       Add ('m', Validity_Check_In_Out_Params);\n       Add ('o', Validity_Check_Operands);\n       Add ('r', Validity_Check_Returns);\n       Add ('s', Validity_Check_Subscripts);\n       Add ('t', Validity_Check_Tests);\n+      Add ('v', Validity_Check_Valid_Scalars_On_Params);\n    end Save_Validity_Check_Options;\n \n    ----------------------------------------\n@@ -133,97 +137,113 @@ package body Validsw is\n          case C is\n \n             when 'c' =>\n-               Validity_Check_Copies         := True;\n+               Validity_Check_Copies                  := True;\n \n             when 'd' =>\n-               Validity_Check_Default        := True;\n+               Validity_Check_Default                 := True;\n \n             when 'e' =>\n-               Validity_Check_Components     := True;\n+               Validity_Check_Components              := True;\n \n             when 'f' =>\n-               Validity_Check_Floating_Point := True;\n+               Validity_Check_Floating_Point          := True;\n \n             when 'i' =>\n-               Validity_Check_In_Params      := True;\n+               Validity_Check_In_Params               := True;\n+\n+            when 'l' =>\n+               Validity_Check_Non_Overlapping_Params  := True;\n \n             when 'm' =>\n-               Validity_Check_In_Out_Params  := True;\n+               Validity_Check_In_Out_Params           := True;\n \n             when 'o' =>\n-               Validity_Check_Operands       := True;\n+               Validity_Check_Operands                := True;\n \n             when 'p' =>\n-               Validity_Check_Parameters     := True;\n+               Validity_Check_Parameters              := True;\n \n             when 'r' =>\n-               Validity_Check_Returns        := True;\n+               Validity_Check_Returns                 := True;\n \n             when 's' =>\n-               Validity_Check_Subscripts     := True;\n+               Validity_Check_Subscripts              := True;\n \n             when 't' =>\n-               Validity_Check_Tests          := True;\n+               Validity_Check_Tests                   := True;\n+\n+            when 'v' =>\n+               Validity_Check_Valid_Scalars_On_Params := True;\n \n             when 'C' =>\n-               Validity_Check_Copies         := False;\n+               Validity_Check_Copies                  := False;\n \n             when 'D' =>\n-               Validity_Check_Default        := False;\n+               Validity_Check_Default                 := False;\n \n             when 'E' =>\n-               Validity_Check_Components     := False;\n+               Validity_Check_Components              := False;\n+\n+            when 'F' =>\n+               Validity_Check_Floating_Point          := False;\n \n             when 'I' =>\n-               Validity_Check_In_Params      := False;\n+               Validity_Check_In_Params               := False;\n \n-            when 'F' =>\n-               Validity_Check_Floating_Point := False;\n+            when 'L' =>\n+               Validity_Check_Non_Overlapping_Params  := False;\n \n             when 'M' =>\n-               Validity_Check_In_Out_Params  := False;\n+               Validity_Check_In_Out_Params           := False;\n \n             when 'O' =>\n-               Validity_Check_Operands       := False;\n+               Validity_Check_Operands                := False;\n \n             when 'P' =>\n-               Validity_Check_Parameters     := False;\n+               Validity_Check_Parameters              := False;\n \n             when 'R' =>\n-               Validity_Check_Returns        := False;\n+               Validity_Check_Returns                 := False;\n \n             when 'S' =>\n-               Validity_Check_Subscripts     := False;\n+               Validity_Check_Subscripts              := False;\n \n             when 'T' =>\n-               Validity_Check_Tests          := False;\n+               Validity_Check_Tests                   := False;\n+\n+            when 'V' =>\n+               Validity_Check_Valid_Scalars_On_Params := False;\n \n             when 'a' =>\n-               Validity_Check_Components     := True;\n-               Validity_Check_Copies         := True;\n-               Validity_Check_Default        := True;\n-               Validity_Check_Floating_Point := True;\n-               Validity_Check_In_Out_Params  := True;\n-               Validity_Check_In_Params      := True;\n-               Validity_Check_Operands       := True;\n-               Validity_Check_Parameters     := True;\n-               Validity_Check_Returns        := True;\n-               Validity_Check_Subscripts     := True;\n-               Validity_Check_Tests          := True;\n+               Validity_Check_Components              := True;\n+               Validity_Check_Copies                  := True;\n+               Validity_Check_Default                 := True;\n+               Validity_Check_Floating_Point          := True;\n+               Validity_Check_In_Out_Params           := True;\n+               Validity_Check_In_Params               := True;\n+               Validity_Check_Non_Overlapping_Params  := True;\n+               Validity_Check_Operands                := True;\n+               Validity_Check_Parameters              := True;\n+               Validity_Check_Returns                 := True;\n+               Validity_Check_Subscripts              := True;\n+               Validity_Check_Tests                   := True;\n+               Validity_Check_Valid_Scalars_On_Params := True;\n \n             when 'n' =>\n-               Validity_Check_Components     := False;\n-               Validity_Check_Copies         := False;\n-               Validity_Check_Default        := False;\n-               Validity_Check_Floating_Point := False;\n-               Validity_Check_In_Out_Params  := False;\n-               Validity_Check_In_Params      := False;\n-               Validity_Check_Operands       := False;\n-               Validity_Check_Parameters     := False;\n-               Validity_Check_Returns        := False;\n-               Validity_Check_Subscripts     := False;\n-               Validity_Check_Tests          := False;\n-               Validity_Checks_On            := False;\n+               Validity_Check_Components              := False;\n+               Validity_Check_Copies                  := False;\n+               Validity_Check_Default                 := False;\n+               Validity_Check_Floating_Point          := False;\n+               Validity_Check_In_Out_Params           := False;\n+               Validity_Check_In_Params               := False;\n+               Validity_Check_Non_Overlapping_Params  := False;\n+               Validity_Check_Operands                := False;\n+               Validity_Check_Parameters              := False;\n+               Validity_Check_Returns                 := False;\n+               Validity_Check_Subscripts              := False;\n+               Validity_Check_Tests                   := False;\n+               Validity_Check_Valid_Scalars_On_Params := False;\n+               Validity_Checks_On                     := False;\n \n             when ' ' =>\n                null;"}, {"sha": "75ad36760c3235c19a5f5299edb8a2e7c926df85", "filename": "gcc/ada/validsw.ads", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fvalidsw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fvalidsw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvalidsw.ads?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001-2008, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -82,6 +82,13 @@ package Validsw is\n    --  Validity_Checks, then the initial value of all IN parameters\n    --  will be checked at the point of call of a procedure or function.\n \n+   Validity_Check_Non_Overlapping_Params : Boolean := False;\n+   --  Controls the validity checking of IN, IN OUT and OUT parameters in terms\n+   --  of overlapping storage. If this switch is set to True using -gnatVl or\n+   --  an 'l' in the argument of a pragma Validity_Checks, each subprogram call\n+   --  is preceded by a sequence of checks which ensure that actual parameters\n+   --  do not alias the same object or space.\n+\n    Validity_Check_Operands : Boolean := False;\n    --  Controls validity checking of operands. If this switch is set to\n    --  True using -gnatVo or an 'o' in the argument of a Validity_Checks\n@@ -117,6 +124,13 @@ package Validsw is\n    --  switch is set to True using -gnatVt, or a 't' in the argument of a\n    --  Validity_Checks pragma, then all such conditions are validity checked.\n \n+   Validity_Check_Valid_Scalars_On_Params : Boolean := False;\n+   --  Controls validity checking of parameters with respect to properly\n+   --  initialized scalars. If this switch is set to True using -gnatVv, or a\n+   --  'v' in the argument of pragma Validity_Checks, each IN, IN OUT and OUT\n+   --  parameter along with possible function result is checked on entry and\n+   --  exit of a subprogram for properly initialized scalars.\n+\n    Force_Validity_Checks : Boolean := False;\n    --  Normally, operands that do not come from source (i.e. cases of expander\n    --  generated code) are not checked, if this flag is set True, then checking"}, {"sha": "9b82974381352c9cc28343f5941c508e1d74e31e", "filename": "gcc/ada/xsnamest.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fxsnamest.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0ea55619ffb4a028dd427ee43e5b8c99f3269748/gcc%2Fada%2Fxsnamest.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fxsnamest.adb?ref=0ea55619ffb4a028dd427ee43e5b8c99f3269748", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2011, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -120,6 +120,10 @@ procedure XSnamesT is\n       --  Build the definition for the current macro (Names are integers\n       --  offset to N, while other items are enumeration values).\n \n+      ----------------\n+      -- Make_Value --\n+      ----------------\n+\n       function Make_Value (V : Integer) return String is\n       begin\n          if S = Name then\n@@ -129,6 +133,8 @@ procedure XSnamesT is\n          end if;\n       end Make_Value;\n \n+   --  Start of processing for Output_Header_Line\n+\n    begin\n       --  Skip all the #define for S-prefixed symbols in the header.\n       --  Of course we are making implicit assumptions:"}]}