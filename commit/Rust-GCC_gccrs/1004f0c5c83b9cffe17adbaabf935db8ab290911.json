{"sha": "1004f0c5c83b9cffe17adbaabf935db8ab290911", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTAwNGYwYzVjODNiOWNmZmUxN2FkYmFhYmY5MzVkYjhhYjI5MDkxMQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2010-11-11T15:48:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2010-11-11T15:48:39Z"}, "message": "re PR middle-end/46388 (ICE in int_mode_for_mode, at stor-layout.c:493)\n\n\tPR middle-end/46388\n\t* expr.c (expand_assignment): If to_rtx is a VOIDmode MEM, use\n\tBLKmode mode for it.\n\t(expand_expr_real_1): Similarly for op0.\n\n\t* gcc.c-torture/compile/pr46388.c: New test.\n\nFrom-SVN: r166603", "tree": {"sha": "07c7168ba1f0b818b361c11b91ce9c3c290414d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07c7168ba1f0b818b361c11b91ce9c3c290414d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1004f0c5c83b9cffe17adbaabf935db8ab290911", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1004f0c5c83b9cffe17adbaabf935db8ab290911", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1004f0c5c83b9cffe17adbaabf935db8ab290911", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1004f0c5c83b9cffe17adbaabf935db8ab290911/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "86de8875db3ff4e3f1ae43f164e026cea6094444", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/86de8875db3ff4e3f1ae43f164e026cea6094444", "html_url": "https://github.com/Rust-GCC/gccrs/commit/86de8875db3ff4e3f1ae43f164e026cea6094444"}], "stats": {"total": 56, "additions": 46, "deletions": 10}, "files": [{"sha": "1888e2fed0825d06e769b31eb0c2a45905dd4289", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1004f0c5c83b9cffe17adbaabf935db8ab290911/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1004f0c5c83b9cffe17adbaabf935db8ab290911/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=1004f0c5c83b9cffe17adbaabf935db8ab290911", "patch": "@@ -1,3 +1,10 @@\n+2010-11-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/46388\n+\t* expr.c (expand_assignment): If to_rtx is a VOIDmode MEM, use\n+\tBLKmode mode for it.\n+\t(expand_expr_real_1): Similarly for op0.\n+\n 2010-11-11  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* doc/sourcebuild.texi (LTO Testing, dg-suppress-ld-options):"}, {"sha": "d2aefd5d7637fef182f787cc0d3ca088dfeaa0a0", "filename": "gcc/expr.c", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1004f0c5c83b9cffe17adbaabf935db8ab290911/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1004f0c5c83b9cffe17adbaabf935db8ab290911/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=1004f0c5c83b9cffe17adbaabf935db8ab290911", "patch": "@@ -4260,11 +4260,16 @@ expand_assignment (tree to, tree from, bool nontemporal)\n       to_rtx = expand_normal (tem);\n \n       /* If the bitfield is volatile, we want to access it in the\n-\t field's mode, not the computed mode.  */\n-      if (volatilep\n-\t  && GET_CODE (to_rtx) == MEM\n-\t  && flag_strict_volatile_bitfields > 0)\n-\tto_rtx = adjust_address (to_rtx, mode1, 0);\n+\t field's mode, not the computed mode.\n+\t If a MEM has VOIDmode (external with incomplete type),\n+\t use BLKmode for it instead.  */\n+      if (MEM_P (to_rtx))\n+\t{\n+\t  if (volatilep && flag_strict_volatile_bitfields > 0)\n+\t    to_rtx = adjust_address (to_rtx, mode1, 0);\n+\t  else if (GET_MODE (to_rtx) == VOIDmode)\n+\t    to_rtx = adjust_address (to_rtx, BLKmode, 0);\n+\t}\n  \n       if (offset != 0)\n \t{\n@@ -9013,11 +9018,16 @@ expand_expr_real_1 (tree exp, rtx target, enum machine_mode tmode,\n \n \n \t/* If the bitfield is volatile, we want to access it in the\n-\t   field's mode, not the computed mode.  */\n-\tif (volatilep\n-\t    && GET_CODE (op0) == MEM\n-\t    && flag_strict_volatile_bitfields > 0)\n-\t  op0 = adjust_address (op0, mode1, 0);\n+\t   field's mode, not the computed mode.\n+\t   If a MEM has VOIDmode (external with incomplete type),\n+\t   use BLKmode for it instead.  */\n+\tif (MEM_P (op0))\n+\t  {\n+\t    if (volatilep && flag_strict_volatile_bitfields > 0)\n+\t      op0 = adjust_address (op0, mode1, 0);\n+\t    else if (GET_MODE (op0) == VOIDmode)\n+\t      op0 = adjust_address (op0, BLKmode, 0);\n+\t  }\n \n \tmode2\n \t  = CONSTANT_P (op0) ? TYPE_MODE (TREE_TYPE (tem)) : GET_MODE (op0);"}, {"sha": "7828567c3f7e056b7aab8db86c3886bd0d80ed66", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1004f0c5c83b9cffe17adbaabf935db8ab290911/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1004f0c5c83b9cffe17adbaabf935db8ab290911/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1004f0c5c83b9cffe17adbaabf935db8ab290911", "patch": "@@ -1,3 +1,8 @@\n+2010-11-11  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/46388\n+\t* gcc.c-torture/compile/pr46388.c: New test.\n+\n 2010-11-11  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* lib/lto.exp (lto-get-options-main): Support optional target"}, {"sha": "74f60bb569a5f307440bdad5f87fae2a23fe3819", "filename": "gcc/testsuite/gcc.c-torture/compile/pr46388.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1004f0c5c83b9cffe17adbaabf935db8ab290911/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr46388.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1004f0c5c83b9cffe17adbaabf935db8ab290911/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr46388.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr46388.c?ref=1004f0c5c83b9cffe17adbaabf935db8ab290911", "patch": "@@ -0,0 +1,14 @@\n+/* PR middle-end/46388 */\n+\n+struct S;\n+struct T\n+{\n+  struct S *t;\n+};\n+extern struct S s, u;\n+\n+void\n+foo (void)\n+{\n+  ((struct T *) &u)->t = &s;\n+}"}]}