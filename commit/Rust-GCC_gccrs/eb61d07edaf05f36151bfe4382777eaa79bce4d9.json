{"sha": "eb61d07edaf05f36151bfe4382777eaa79bce4d9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWI2MWQwN2VkYWYwNWYzNjE1MWJmZTQzODI3NzdlYWE3OWJjZTRkOQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2016-12-02T15:42:04Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2016-12-02T15:42:04Z"}, "message": "re PR target/78614 (ICE error: invalid rtl sharing found in the insn (verify_rtx_sharing) gcc/emit-rtl.c:2743)\n\n\tPR target/78614\n\t* rtl.c (copy_rtx): Don't clear used flag here.\n\t(shallow_copy_rtx_stat): Clear used flag here unless code the rtx\n\tis shareable.\n\t* simplify-rtx.c (simplify_replace_fn_rtx): When copying rtx with\n\t'E' in format, copy all vectors.\n\t* emit-rtl.c (copy_insn_1): Don't clear used flag here.\n\t* valtrack.c (cleanup_auto_inc_dec): Likewise.\n\t* config/rs6000/rs6000.c (rs6000_frame_related): Likewise.\n\nFrom-SVN: r243194", "tree": {"sha": "26d9c8c50957315a60c37f181ee12d0fb67a19fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/26d9c8c50957315a60c37f181ee12d0fb67a19fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eb61d07edaf05f36151bfe4382777eaa79bce4d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb61d07edaf05f36151bfe4382777eaa79bce4d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb61d07edaf05f36151bfe4382777eaa79bce4d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb61d07edaf05f36151bfe4382777eaa79bce4d9/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8261e476cb64cee8891fa676202d1f42decdcd14", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8261e476cb64cee8891fa676202d1f42decdcd14", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8261e476cb64cee8891fa676202d1f42decdcd14"}], "stats": {"total": 49, "additions": 35, "deletions": 14}, "files": [{"sha": "68d3588715b91c8ec0e26d9344cbd19c1ca8892b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb61d07edaf05f36151bfe4382777eaa79bce4d9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb61d07edaf05f36151bfe4382777eaa79bce4d9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=eb61d07edaf05f36151bfe4382777eaa79bce4d9", "patch": "@@ -1,3 +1,15 @@\n+2016-12-02  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/78614\n+\t* rtl.c (copy_rtx): Don't clear used flag here.\n+\t(shallow_copy_rtx_stat): Clear used flag here unless code the rtx\n+\tis shareable.\n+\t* simplify-rtx.c (simplify_replace_fn_rtx): When copying rtx with\n+\t'E' in format, copy all vectors.\n+\t* emit-rtl.c (copy_insn_1): Don't clear used flag here.\n+\t* valtrack.c (cleanup_auto_inc_dec): Likewise.\n+\t* config/rs6000/rs6000.c (rs6000_frame_related): Likewise.\n+\n 2016-12-02  Andre Vieira  <andre.simoesdiasvieira@arm.com>\n \t    Thomas Preud'homme  <thomas.preudhomme@arm.com>\n "}, {"sha": "59bd3fe598912193603ce103aae605e21e427263", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb61d07edaf05f36151bfe4382777eaa79bce4d9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb61d07edaf05f36151bfe4382777eaa79bce4d9/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=eb61d07edaf05f36151bfe4382777eaa79bce4d9", "patch": "@@ -27186,7 +27186,6 @@ rs6000_frame_related (rtx_insn *insn, rtx reg, HOST_WIDE_INT val,\n     {\n       pat = shallow_copy_rtx (pat);\n       XVEC (pat, 0) = shallow_copy_rtvec (XVEC (pat, 0));\n-      RTX_FLAG (pat, used) = 0;\n \n       for (int i = 0; i < XVECLEN (pat, 0); i++)\n \tif (GET_CODE (XVECEXP (pat, 0, i)) == SET)"}, {"sha": "46505400723b4fdf9c83b320bf189ffd235847b8", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb61d07edaf05f36151bfe4382777eaa79bce4d9/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb61d07edaf05f36151bfe4382777eaa79bce4d9/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=eb61d07edaf05f36151bfe4382777eaa79bce4d9", "patch": "@@ -5552,10 +5552,6 @@ copy_insn_1 (rtx orig)\n      us to explicitly document why we are *not* copying a flag.  */\n   copy = shallow_copy_rtx (orig);\n \n-  /* We do not copy the USED flag, which is used as a mark bit during\n-     walks over the RTL.  */\n-  RTX_FLAG (copy, used) = 0;\n-\n   /* We do not copy JUMP, CALL, or FRAME_RELATED for INSNs.  */\n   if (INSN_P (orig))\n     {"}, {"sha": "0410f019e5121046b2b541cd316c456af4a989a5", "filename": "gcc/rtl.c", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb61d07edaf05f36151bfe4382777eaa79bce4d9/gcc%2Frtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb61d07edaf05f36151bfe4382777eaa79bce4d9/gcc%2Frtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtl.c?ref=eb61d07edaf05f36151bfe4382777eaa79bce4d9", "patch": "@@ -318,10 +318,6 @@ copy_rtx (rtx orig)\n      us to explicitly document why we are *not* copying a flag.  */\n   copy = shallow_copy_rtx (orig);\n \n-  /* We do not copy the USED flag, which is used as a mark bit during\n-     walks over the RTL.  */\n-  RTX_FLAG (copy, used) = 0;\n-\n   format_ptr = GET_RTX_FORMAT (GET_CODE (copy));\n \n   for (i = 0; i < GET_RTX_LENGTH (GET_CODE (copy)); i++)\n@@ -367,7 +363,29 @@ shallow_copy_rtx_stat (const_rtx orig MEM_STAT_DECL)\n {\n   const unsigned int size = rtx_size (orig);\n   rtx const copy = ggc_alloc_rtx_def_stat (size PASS_MEM_STAT);\n-  return (rtx) memcpy (copy, orig, size);\n+  memcpy (copy, orig, size);\n+  switch (GET_CODE (orig))\n+    {\n+      /* RTX codes copy_rtx_if_shared_1 considers are shareable,\n+\t the used flag is often used for other purposes.  */\n+    case REG:\n+    case DEBUG_EXPR:\n+    case VALUE:\n+    CASE_CONST_ANY:\n+    case SYMBOL_REF:\n+    case CODE_LABEL:\n+    case PC:\n+    case CC0:\n+    case RETURN:\n+    case SIMPLE_RETURN:\n+    case SCRATCH:\n+      break;\n+    default:\n+      /* For all other RTXes clear the used flag on the copy.  */\n+      RTX_FLAG (copy, used) = 0;\n+      break;\n+    }\n+  return copy;\n }\n \f\n /* Nonzero when we are generating CONCATs.  */"}, {"sha": "002f49fa6eec9aa5f1b470d9f3ad98eb5ddf340c", "filename": "gcc/valtrack.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eb61d07edaf05f36151bfe4382777eaa79bce4d9/gcc%2Fvaltrack.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eb61d07edaf05f36151bfe4382777eaa79bce4d9/gcc%2Fvaltrack.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvaltrack.c?ref=eb61d07edaf05f36151bfe4382777eaa79bce4d9", "patch": "@@ -119,10 +119,6 @@ cleanup_auto_inc_dec (rtx src, machine_mode mem_mode ATTRIBUTE_UNUSED)\n      us to explicitly document why we are *not* copying a flag.  */\n   x = shallow_copy_rtx (x);\n \n-  /* We do not copy the USED flag, which is used as a mark bit during\n-     walks over the RTL.  */\n-  RTX_FLAG (x, used) = 0;\n-\n   /* We do not copy FRAME_RELATED for INSNs.  */\n   if (INSN_P (x))\n     RTX_FLAG (x, frame_related) = 0;"}]}