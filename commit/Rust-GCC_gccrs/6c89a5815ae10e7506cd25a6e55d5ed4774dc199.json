{"sha": "6c89a5815ae10e7506cd25a6e55d5ed4774dc199", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmM4OWE1ODE1YWUxMGU3NTA2Y2QyNWE2ZTU1ZDVlZDQ3NzRkYzE5OQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-04-28T20:19:17Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-19T08:17:16Z"}, "message": "[Ada] Attempt to hide public entities in nested instance bodies\n\n2020-06-19  Eric Botcazou  <ebotcazou@adacore.com>\n\ngcc/ada/\n\n\t* sem_ch7.adb (Hide_Public_Entities): Split handling of objects\n\tand subprograms, and do not reject the latter upfront in nested\n\tinstance specs if there are no referencer subprograms at all.\n\t(Analyze_Package_Body_Helper): Also call Hide_Public_Entities on\n\tnested generic instances.", "tree": {"sha": "a19637e7cb63ce34e34638a8f6def54039cb70de", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a19637e7cb63ce34e34638a8f6def54039cb70de"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c89a5815ae10e7506cd25a6e55d5ed4774dc199", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c89a5815ae10e7506cd25a6e55d5ed4774dc199", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c89a5815ae10e7506cd25a6e55d5ed4774dc199", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c89a5815ae10e7506cd25a6e55d5ed4774dc199/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b58985f6cc427a53fd72b3eabb2e9c252c2dc58", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4b58985f6cc427a53fd72b3eabb2e9c252c2dc58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4b58985f6cc427a53fd72b3eabb2e9c252c2dc58"}], "stats": {"total": 51, "additions": 35, "deletions": 16}, "files": [{"sha": "51a245cc2bd9f24b61f387248491777aafb8d38a", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 35, "deletions": 16, "changes": 51, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c89a5815ae10e7506cd25a6e55d5ed4774dc199/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c89a5815ae10e7506cd25a6e55d5ed4774dc199/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=6c89a5815ae10e7506cd25a6e55d5ed4774dc199", "patch": "@@ -462,29 +462,44 @@ package body Sem_Ch7 is\n \n                --  Exceptions, objects and renamings do not need to be public\n                --  if they are not followed by a construct which can reference\n-               --  and export them. Likewise for subprograms but we work harder\n-               --  for them to see whether they are referenced on an individual\n-               --  basis by looking into the table of referenced subprograms.\n-               --  But we cannot say anything for entities declared in nested\n-               --  instances because instantiations are not done yet so the\n-               --  bodies are not visible and could contain references to them.\n+               --  and export them.\n+\n                elsif Nkind_In (Decl, N_Exception_Declaration,\n                                      N_Object_Declaration,\n-                                     N_Object_Renaming_Declaration,\n-                                     N_Subprogram_Declaration,\n-                                     N_Subprogram_Renaming_Declaration)\n+                                     N_Object_Renaming_Declaration)\n                then\n                   Decl_Id := Defining_Entity (Decl);\n \n                   if not In_Nested_Instance\n                     and then not Is_Imported (Decl_Id)\n                     and then not Is_Exported (Decl_Id)\n                     and then No (Interface_Name (Decl_Id))\n-                    and then\n-                      ((Nkind (Decl) /= N_Subprogram_Declaration\n-                         and then not Has_Referencer_Of_Non_Subprograms)\n-                        or else (Nkind (Decl) = N_Subprogram_Declaration\n-                                  and then not Subprogram_Table.Get (Decl_Id)))\n+                    and then not Has_Referencer_Of_Non_Subprograms\n+                  then\n+                     Set_Is_Public (Decl_Id, False);\n+                  end if;\n+\n+               --  Likewise for subprograms and renamings, but we work harder\n+               --  for them to see whether they are referenced on an individual\n+               --  basis by looking into the table of referenced subprograms.\n+\n+               elsif Nkind_In (Decl, N_Subprogram_Declaration,\n+                                     N_Subprogram_Renaming_Declaration)\n+               then\n+                  Decl_Id := Defining_Entity (Decl);\n+\n+                  --  We cannot say anything for subprograms declared in nested\n+                  --  instances because instantiations are not done yet so the\n+                  --  bodies are not visible and could contain references to\n+                  --  them, except if we still have no subprograms at all which\n+                  --  are referenced by an inlined body.\n+\n+                  if (not In_Nested_Instance\n+                       or else not Subprogram_Table.Get_First)\n+                    and then not Is_Imported (Decl_Id)\n+                    and then not Is_Exported (Decl_Id)\n+                    and then No (Interface_Name (Decl_Id))\n+                    and then not Subprogram_Table.Get (Decl_Id)\n                   then\n                      Set_Is_Public (Decl_Id, False);\n                   end if;\n@@ -1081,9 +1096,13 @@ package body Sem_Ch7 is\n       --        unit, especially subprograms.\n \n       --  This is done only for top-level library packages or child units as\n-      --  the algorithm does a top-down traversal of the package body.\n+      --  the algorithm does a top-down traversal of the package body. This is\n+      --  also done for instances because instantiations are still pending by\n+      --  the time the enclosing package body is analyzed.\n \n-      if (Scope (Spec_Id) = Standard_Standard or else Is_Child_Unit (Spec_Id))\n+      if (Scope (Spec_Id) = Standard_Standard\n+           or else Is_Child_Unit (Spec_Id)\n+           or else Is_Generic_Instance (Spec_Id))\n         and then not Is_Generic_Unit (Spec_Id)\n       then\n          Hide_Public_Entities (Declarations (N));"}]}