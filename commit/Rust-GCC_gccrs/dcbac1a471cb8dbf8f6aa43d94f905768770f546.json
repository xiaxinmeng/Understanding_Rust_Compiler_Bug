{"sha": "dcbac1a471cb8dbf8f6aa43d94f905768770f546", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGNiYWMxYTQ3MWNiOGRiZjhmNmFhNDNkOTRmOTA1NzY4NzcwZjU0Ng==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2013-05-07T07:59:37Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2013-05-07T07:59:37Z"}, "message": "re PR ada/56474 (bogus Storage_Error raised for record containing empty zero-based array)\n\n\tPR ada/56474\n\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Array_Subtype>: Use\n\tint_const_binop to shift bounds by 1 when they are integer constants.\n\nFrom-SVN: r198663", "tree": {"sha": "2d34e06df5858f596a6c1f4f8535dbf329150335", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d34e06df5858f596a6c1f4f8535dbf329150335"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dcbac1a471cb8dbf8f6aa43d94f905768770f546", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcbac1a471cb8dbf8f6aa43d94f905768770f546", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dcbac1a471cb8dbf8f6aa43d94f905768770f546", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dcbac1a471cb8dbf8f6aa43d94f905768770f546/comments", "author": null, "committer": null, "parents": [{"sha": "14523c2517b9f272f18d7be133f69f162c8ceac7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14523c2517b9f272f18d7be133f69f162c8ceac7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14523c2517b9f272f18d7be133f69f162c8ceac7"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "a3e776c0d1893748a87a6bc71ecd600578a9bc9f", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcbac1a471cb8dbf8f6aa43d94f905768770f546/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcbac1a471cb8dbf8f6aa43d94f905768770f546/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=dcbac1a471cb8dbf8f6aa43d94f905768770f546", "patch": "@@ -1,3 +1,9 @@\n+2013-05-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR ada/56474\n+\t* gcc-interface/decl.c (gnat_to_gnu_entity) <E_Array_Subtype>: Use\n+\tint_const_binop to shift bounds by 1 when they are integer constants.\n+\n 2013-04-25  Arnaud Charlet  <charlet@adacore.com>\n \n \t* gcc-interface/Makefile.in (ADA_EXCLUDE_SRCS): Exclude s-init.ad{s,b}"}, {"sha": "98653243b8080326a59529c5844bb7e30722c026", "filename": "gcc/ada/gcc-interface/decl.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcbac1a471cb8dbf8f6aa43d94f905768770f546/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcbac1a471cb8dbf8f6aa43d94f905768770f546/gcc%2Fada%2Fgcc-interface%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Fdecl.c?ref=dcbac1a471cb8dbf8f6aa43d94f905768770f546", "patch": "@@ -2447,15 +2447,17 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t\t\t\t\t\tgnu_orig_max,\n \t\t\t\t\t\t\tgnu_orig_min),\n \t\t\t\t       gnu_min,\n-\t\t\t\t       size_binop (PLUS_EXPR, gnu_max,\n-\t\t\t\t\t\t   size_one_node));\n+\t\t\t\t       int_const_binop (PLUS_EXPR, gnu_max,\n+\t\t\t\t\t\t\tsize_one_node));\n \t\t}\n \n \t      /* Finally we use (hb >= lb) ? hb : lb - 1 for the upper bound\n \t\t in all the other cases.  Note that, here as well as above,\n \t\t the condition used in the comparison must be equivalent to\n \t\t the condition (length != 0).  This is relied upon in order\n-\t\t to optimize array comparisons in compare_arrays.  */\n+\t\t to optimize array comparisons in compare_arrays.  Moreover\n+\t\t we use int_const_binop for the shift by 1 if the bound is\n+\t\t constant to avoid any unwanted overflow.  */\n \t      else\n \t\tgnu_high\n \t\t  = build_cond_expr (sizetype,\n@@ -2464,8 +2466,11 @@ gnat_to_gnu_entity (Entity_Id gnat_entity, tree gnu_expr, int definition)\n \t\t\t\t\t\t      gnu_orig_max,\n \t\t\t\t\t\t      gnu_orig_min),\n \t\t\t\t     gnu_max,\n-\t\t\t\t     size_binop (MINUS_EXPR, gnu_min,\n-\t\t\t\t\t\t size_one_node));\n+\t\t\t\t     TREE_CODE (gnu_min) == INTEGER_CST\n+\t\t\t\t     ? int_const_binop (MINUS_EXPR, gnu_min,\n+\t\t\t\t\t\t\tsize_one_node)\n+\t\t\t\t     : size_binop (MINUS_EXPR, gnu_min,\n+\t\t\t\t\t\t   size_one_node));\n \n \t      /* Reuse the index type for the range type.  Then make an index\n \t\t type with the size range in sizetype.  */"}, {"sha": "0908c8678e9eeb84c1dc049a87c68c43e9132f11", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcbac1a471cb8dbf8f6aa43d94f905768770f546/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcbac1a471cb8dbf8f6aa43d94f905768770f546/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dcbac1a471cb8dbf8f6aa43d94f905768770f546", "patch": "@@ -1,3 +1,7 @@\n+2013-05-07  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\t* gnat.dg/specs/array3.ads: New test.\n+\n 2013-05-06  Marc Glisse  <marc.glisse@inria.fr>\n \n \t* c-c++-common/vector-scalar-2.c: New testcase."}, {"sha": "3ef39f38e73363642eda93aa6f591bc7f24ac53f", "filename": "gcc/testsuite/gnat.dg/specs/array3.ads", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dcbac1a471cb8dbf8f6aa43d94f905768770f546/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Farray3.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dcbac1a471cb8dbf8f6aa43d94f905768770f546/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Farray3.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgnat.dg%2Fspecs%2Farray3.ads?ref=dcbac1a471cb8dbf8f6aa43d94f905768770f546", "patch": "@@ -0,0 +1,18 @@\n+-- PR middle-end/56474\n+-- Reported by Pavel Zhukov <pavel@zhukoff.net>\n+\n+-- { dg-do compile }\n+\n+with Ada.Streams;\n+\n+package Array3 is\n+\n+   use type Ada.Streams.Stream_Element_Offset;\n+\n+   type Vector (Size : Ada.Streams.Stream_Element_Offset) is record\n+      Value : Ada.Streams.Stream_Element_Array (0 .. Size);\n+   end record;\n+\n+   Empty_Vector : Vector (-1);\n+\n+end Array3;"}]}