{"sha": "27c38b75d34217804ee9a25ba6393df09b46fa4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjdjMzhiNzVkMzQyMTc4MDRlZTlhMjViYTYzOTNkZjA5YjQ2ZmE0Yg==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-04-03T20:18:13Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1997-04-03T20:18:13Z"}, "message": "(mips_move_2words): Add SIGN_EXTEND support for SYMBOL_REF,\n\nLABEL_REF, and CONST operands.\n\nFrom-SVN: r13834", "tree": {"sha": "02a4406ae856f8f6982640ab5984320f71a8449b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/02a4406ae856f8f6982640ab5984320f71a8449b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/27c38b75d34217804ee9a25ba6393df09b46fa4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27c38b75d34217804ee9a25ba6393df09b46fa4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/27c38b75d34217804ee9a25ba6393df09b46fa4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/27c38b75d34217804ee9a25ba6393df09b46fa4b/comments", "author": null, "committer": null, "parents": [{"sha": "714aa06f90b27dbf5f2442ec8f3f3bc7377e867a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/714aa06f90b27dbf5f2442ec8f3f3bc7377e867a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/714aa06f90b27dbf5f2442ec8f3f3bc7377e867a"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "dd65b958f3eacf27949c4461d10595e523dc2669", "filename": "gcc/config/mips/mips.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/27c38b75d34217804ee9a25ba6393df09b46fa4b/gcc%2Fconfig%2Fmips%2Fmips.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/27c38b75d34217804ee9a25ba6393df09b46fa4b/gcc%2Fconfig%2Fmips%2Fmips.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.c?ref=27c38b75d34217804ee9a25ba6393df09b46fa4b", "patch": "@@ -1543,7 +1543,12 @@ mips_move_2words (operands, insn)\n   /* Sanity check.  */\n   if (GET_CODE (operands[1]) == SIGN_EXTEND\n       && code1 != REG\n-      && code1 != CONST_INT)\n+      && code1 != CONST_INT\n+      /* The following three can happen as the result of a questionable\n+\t cast.  */\n+      && code1 != LABEL_REF\n+      && code1 != SYMBOL_REF\n+      && code1 != CONST)\n     abort ();\n \n   if (code0 == REG)\n@@ -1803,7 +1808,14 @@ mips_move_2words (operands, insn)\n \t  if (TARGET_STATS)\n \t    mips_count_memory_refs (op1, 2);\n \n-\t  ret = \"dla\\t%0,%a1\";\n+\t  if (GET_CODE (operands[1]) == SIGN_EXTEND)\n+\t    /* We deliberately remove the 'a' from '%1', so that we don't\n+\t       have to add SIGN_EXTEND support to print_operand_address.\n+\t       print_operand will just call print_operand_address in this\n+\t       case, so there is no problem.  */\n+\t    ret = \"la\\t%0,%1\";\n+\t  else\n+\t    ret = \"dla\\t%0,%a1\";\n \t}\n     }\n "}]}