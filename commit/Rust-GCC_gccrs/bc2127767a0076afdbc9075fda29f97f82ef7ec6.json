{"sha": "bc2127767a0076afdbc9075fda29f97f82ef7ec6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMyMTI3NzY3YTAwNzZhZmRiYzkwNzVmZGEyOWY5N2Y4MmVmN2VjNg==", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-03-17T00:16:25Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2021-03-17T00:16:25Z"}, "message": "Daily bump.", "tree": {"sha": "b8816b63570d510349496d6ecb5a562aebf1b46b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b8816b63570d510349496d6ecb5a562aebf1b46b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc2127767a0076afdbc9075fda29f97f82ef7ec6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc2127767a0076afdbc9075fda29f97f82ef7ec6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc2127767a0076afdbc9075fda29f97f82ef7ec6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc2127767a0076afdbc9075fda29f97f82ef7ec6/comments", "author": null, "committer": null, "parents": [{"sha": "a2a6e9214e27b32d4582c670faf9cdb74e54c2c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a2a6e9214e27b32d4582c670faf9cdb74e54c2c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a2a6e9214e27b32d4582c670faf9cdb74e54c2c6"}], "stats": {"total": 131, "additions": 130, "deletions": 1}, "files": [{"sha": "ef93c56fe21bb36469f4a5afb7879696c7d2279a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc2127767a0076afdbc9075fda29f97f82ef7ec6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc2127767a0076afdbc9075fda29f97f82ef7ec6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bc2127767a0076afdbc9075fda29f97f82ef7ec6", "patch": "@@ -1,3 +1,27 @@\n+2021-03-16  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/98092\n+\t* config/rs6000/predicates.md (branch_comparison_operator): Allow\n+\tordered and unordered for CCFPmode, if flag_finite_math_only.\n+\n+2021-03-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/99600\n+\t* config/i386/i386-expand.c (ix86_split_lea_for_addr): Emit a MULT\n+\trather than ASHIFT.\n+\t* config/i386/i386.md (mult by 1248 into ashift): New splitter.\n+\n+2021-03-16  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/99592\n+\t* optc-save-gen.awk: Add flag_ipa_ra to exceptions for\n+\tcl_optimization_compare function.\n+\n+2021-03-16  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\t* config/s390/s390.c (f_constraint_p): Treat \"fv\" constraints\n+\tas \"v\".\n+\n 2021-03-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/99563"}, {"sha": "609f807edec9302670e11b7a5e5877d639edf385", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc2127767a0076afdbc9075fda29f97f82ef7ec6/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc2127767a0076afdbc9075fda29f97f82ef7ec6/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=bc2127767a0076afdbc9075fda29f97f82ef7ec6", "patch": "@@ -1 +1 @@\n-20210316\n+20210317"}, {"sha": "0f914146d1e7576dfdd031770ed310b2e51ff6ad", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc2127767a0076afdbc9075fda29f97f82ef7ec6/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc2127767a0076afdbc9075fda29f97f82ef7ec6/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=bc2127767a0076afdbc9075fda29f97f82ef7ec6", "patch": "@@ -1,3 +1,33 @@\n+2021-03-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* tree.c (cp_tree_equal): Use real_identical.\n+\n+2021-03-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR c++/99613\n+\t* decl.c (expand_static_init): For thread guards, call __cxa_atexit\n+\tbefore calling __cxa_guard_release rather than after it.  Formatting\n+\tfixes.\n+\n+2021-03-16  Martin Liska  <mliska@suse.cz>\n+\t    Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/99108\n+\t* call.c (get_function_version_dispatcher): Handle\n+\tDECL_LOCAL_DECL_P.\n+\t* decl.c (maybe_version_functions): Likewise.\n+\t(maybe_mark_function_versioned): New.\n+\t* name-lookup.c (push_local_extern_decl_alias): No longer static.\n+\t* name-lookup.h (push_local_extern_decl_alias): Adjust.\n+\n+2021-03-16  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99496\n+\t* module.cc (trees_out::decl_value): Adjust typedef streaming,\n+\tindicate whether it is a dependent alias.\n+\t(trees_in::decl_value): Likewise.  Set as dependent alias, if it\n+\tis one.\n+\n 2021-03-15  Iain Sandoe  <iain@sandoe.co.uk>\n \n \tPR c++/99047"}, {"sha": "5e6b5368ac7ff23d21570a608ed3b8fd1cfbcec9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc2127767a0076afdbc9075fda29f97f82ef7ec6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc2127767a0076afdbc9075fda29f97f82ef7ec6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=bc2127767a0076afdbc9075fda29f97f82ef7ec6", "patch": "@@ -1,3 +1,44 @@\n+2021-03-16  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\tPR target/99542\n+\t* gcc.dg/declare-simd.c (fn2): Expect a warning only under lp64.\n+\n+2021-03-16  Jason Merrill  <jason@redhat.com>\n+\n+\t* g++.dg/cpp2a/nontype-float1.C: New test.\n+\n+2021-03-16  Segher Boessenkool  <segher@kernel.crashing.org>\n+\n+\tPR target/98092\n+\tPR target/98092\n+\t* gcc.target/powerpc/pr98092.c: New.\n+\n+2021-03-16  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR target/99600\n+\t* gcc.target/i386/pr99600.c: New test.\n+\n+2021-03-16  Martin Liska  <mliska@suse.cz>\n+\t    Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/99108\n+\t* g++.target/i386/pr99108.C: New test.\n+\n+2021-03-16  Martin Liska  <mliska@suse.cz>\n+\n+\tPR target/99592\n+\t* gcc.target/arm/pr99592.c: New test.\n+\n+2021-03-16  Ilya Leoshkevich  <iii@linux.ibm.com>\n+\n+\t* gcc.target/s390/vector/long-double-asm-fprvrmem.c: New test.\n+\n+2021-03-16  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/99496\n+\t* g++.dg/modules/pr99496_a.H: New.\n+\t* g++.dg/modules/pr99496_b.C: New.\n+\n 2021-03-16  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/99563"}, {"sha": "99bb5851f6fca14b033949a79c00a213961d34e4", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc2127767a0076afdbc9075fda29f97f82ef7ec6/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc2127767a0076afdbc9075fda29f97f82ef7ec6/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=bc2127767a0076afdbc9075fda29f97f82ef7ec6", "patch": "@@ -1,3 +1,7 @@\n+2021-03-16  Nick Clifton  <nickc@redhat.com>\n+\n+\t* sha1.c (sha1_process_bytes): Use memmove in place of memcpy.\n+\n 2021-02-20  Mike Frysinger  <vapier@gentoo.org>\n \n \t* Makefile.in (ACLOCAL, ACLOCAL_AMFLAGS, $(srcdir)/aclocal.m4): Define."}, {"sha": "2d2bd37c67309017c3b430dfbe2d1cd15b428a84", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc2127767a0076afdbc9075fda29f97f82ef7ec6/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc2127767a0076afdbc9075fda29f97f82ef7ec6/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=bc2127767a0076afdbc9075fda29f97f82ef7ec6", "patch": "@@ -1,3 +1,33 @@\n+2021-03-16  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/99341\n+\t* config/abi/post/aarch64-linux-gnu/baseline_symbols.txt: Remove\n+\tstd::once_flag symbols.\n+\t* config/abi/post/ia64-linux-gnu/baseline_symbols.txt: Likewise.\n+\t* config/abi/post/m68k-linux-gnu/baseline_symbols.txt: Likewise.\n+\t* config/abi/post/riscv64-linux-gnu/baseline_symbols.txt:\n+\tLikewise.\n+\t* config/abi/pre/gnu.ver: Likewise.\n+\t* src/c++11/mutex.cc [_GLIBCXX_HAVE_LINUX_FUTEX]\n+\t(struct __once_flag_compat): Remove.\n+\t(_ZNSt9once_flag11_M_activateEv): Remove.\n+\t(_ZNSt9once_flag9_M_finishEb): Remove.\n+\n+2021-03-16  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/99341\n+\t* include/std/mutex [_GLIBCXX_HAVE_LINUX_FUTEX] (once_flag):\n+\tRevert to pthread_once_t implementation.\n+\t[_GLIBCXX_HAVE_LINUX_FUTEX] (call_once): Likewise.\n+\t* src/c++11/mutex.cc [_GLIBCXX_HAVE_LINUX_FUTEX]\n+\t(struct __once_flag_compat): New type matching the reverted\n+\timplementation of once_flag using futexes.\n+\t(once_flag::_M_activate): Remove, replace with ...\n+\t(_ZNSt9once_flag11_M_activateEv): ... alias symbol.\n+\t(once_flag::_M_finish): Remove, replace with ...\n+\t(_ZNSt9once_flag9_M_finishEb): ... alias symbol.\n+\t* testsuite/30_threads/call_once/66146.cc: Removed.\n+\n 2021-03-15  Iain Sandoe  <iain@sandoe.co.uk>\n \n \t* testsuite/17_intro/names.cc: Exclude j from the list"}]}