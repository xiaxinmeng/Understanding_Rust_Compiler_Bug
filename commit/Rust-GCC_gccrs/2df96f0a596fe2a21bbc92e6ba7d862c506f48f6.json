{"sha": "2df96f0a596fe2a21bbc92e6ba7d862c506f48f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRmOTZmMGE1OTZmZTJhMjFiYmM5MmU2YmE3ZDg2MmM1MDZmNDhmNg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2002-02-26T07:13:25Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2002-02-26T07:13:25Z"}, "message": "update_version: Automatically update version files on all branches.\n\n\t* update_version: Automatically update version files on all\n\tbranches.\n\t* crontab: Only invoke update_version once.\n\nFrom-SVN: r50049", "tree": {"sha": "e6a87f97798af9a9a4b55ad179ea91a5daa55066", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6a87f97798af9a9a4b55ad179ea91a5daa55066"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2df96f0a596fe2a21bbc92e6ba7d862c506f48f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2df96f0a596fe2a21bbc92e6ba7d862c506f48f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2df96f0a596fe2a21bbc92e6ba7d862c506f48f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2df96f0a596fe2a21bbc92e6ba7d862c506f48f6/comments", "author": null, "committer": null, "parents": [{"sha": "0e98f924382c57b9d2781944ca534c893a7976b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e98f924382c57b9d2781944ca534c893a7976b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e98f924382c57b9d2781944ca534c893a7976b8"}], "stats": {"total": 78, "additions": 61, "deletions": 17}, "files": [{"sha": "1c62a9a4e31d43148e667502a093752f86238c5b", "filename": "maintainer-scripts/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df96f0a596fe2a21bbc92e6ba7d862c506f48f6/maintainer-scripts%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df96f0a596fe2a21bbc92e6ba7d862c506f48f6/maintainer-scripts%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2FChangeLog?ref=2df96f0a596fe2a21bbc92e6ba7d862c506f48f6", "patch": "@@ -1,3 +1,9 @@\n+2002-02-25  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* update_version: Automatically update version files on all\n+\tbranches.\n+\t* crontab: Only invoke update_version once.\n+\n 2002-02-23  Joseph S. Myers  <jsm28@cam.ac.uk>\n \n \t* gcc_release: Revert change to -p interface.  Allow for local and"}, {"sha": "4c7079bed7de29b092a2f9428db6311ce97dedb2", "filename": "maintainer-scripts/crontab", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df96f0a596fe2a21bbc92e6ba7d862c506f48f6/maintainer-scripts%2Fcrontab", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df96f0a596fe2a21bbc92e6ba7d862c506f48f6/maintainer-scripts%2Fcrontab", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2Fcrontab?ref=2df96f0a596fe2a21bbc92e6ba7d862c506f48f6", "patch": "@@ -1,5 +1,4 @@\n 16 0 * * * sh /home/gccadmin/scripts/update_version\n-16 0 * * * sh /home/gccadmin/scripts/update_version -rgcc-3_0-branch\n 50 0 * * * sh /home/gccadmin/scripts/update_web_docs\n 55 0 * * * sh /home/gccadmin/scripts/update_web_docs_libstdcxx\n 40 16 * * 1 sh /home/gccadmin/scripts/gcc_release -s -l -d /sourceware/snapshot-tmp all"}, {"sha": "2b3362eb1fb6208981acc14c43b5f6c58e3818e5", "filename": "maintainer-scripts/update_version", "status": "modified", "additions": 55, "deletions": 16, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2df96f0a596fe2a21bbc92e6ba7d862c506f48f6/maintainer-scripts%2Fupdate_version", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2df96f0a596fe2a21bbc92e6ba7d862c506f48f6/maintainer-scripts%2Fupdate_version", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/maintainer-scripts%2Fupdate_version?ref=2df96f0a596fe2a21bbc92e6ba7d862c506f48f6", "patch": "@@ -1,14 +1,24 @@\n #!/bin/sh \n \n # Run this from /tmp.\n-CVSROOT=/cvs/gcc\n+CVSROOT=${CVSROOT:-/cvs/gcc}\n export CVSROOT\n /bin/rm -rf /tmp/$$\n /bin/mkdir /tmp/$$\n cd /tmp/$$\n \n+# The path to cvs.\n+CVS=${CVS:-/usr/local/bin/cvs}\n+\n+# Compute the branches which we should update.\n+$CVS co gcc/ChangeLog\n+BRANCHES=`$CVS status -v gcc/ChangeLog \\\n+          | awk '{print $1;}' \\\n+          | egrep 'gcc-[0-9]+_[0-9]+-branch$'`\n+# Always update the mainline.\n+BRANCHES=\"${BRANCHES} HEAD\"\n+\n # ARGS is passed to 'cvs co'\n-ARGS=\"$*\"\n CURR_DATE=`/bin/date +\"%Y%m%d\"`\n \n # version is contained within a char*\n@@ -17,25 +27,54 @@ textstring_FILES=\"gcc/gcc/version.c gcc/gcc/f/version.c gcc/libf2c/libF77/Versio\n # version is contained within a #define\n cppdefine_FILES=\"gcc/libstdc++-v3/include/bits/c++config\"\n \n-/usr/local/bin/cvs co $ARGS $textstring_FILES $cppdefine_FILES\n+# Assume all will go well.\n+RESULT=0\n+\n+for BRANCH in $BRANCHES; do\n+  # Check out the files on the branch.  HEAD is a special case; if\n+  # you check out files with -r HEAD, CVS will not let you check \n+  # in changes.\n+  if test \"$BRANCH\" = HEAD; then \n+    ${CVS} co $textstring_FILES $cppdefine_FILES\n+  else\n+    ${CVS} co -r $BRANCH $textstring_FILES $cppdefine_FILES\n+  fi\n \n-for file in $textstring_FILES; do\n-  OLD_VERSION=`/bin/cat $file`\n-  /bin/sed -e \"s/\\(.*\\\"[^ ]*\\) [0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]/\\1 ${CURR_DATE}/\" >${file} <<HERE\n-$OLD_VERSION\n+  # There are no files to commit yet.\n+  COMMIT_FILES=\"\"\n+\n+  for file in $textstring_FILES; do\n+    if test -f $file; then \n+      OLD_VERSION=`/bin/cat $file`\n+      /bin/sed -e \"s/\\(.*\\\"[^ ]*\\) [0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]/\\1 ${CURR_DATE}/\" >${file} <<HERE\n+        $OLD_VERSION\n HERE\n-done\n \n-for file in $cppdefine_FILES; do\n-  OLD_VERSION=`/bin/cat $file`\n-  /bin/sed -e \"s/\\(#.*\\) [0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]/\\1 ${CURR_DATE}/\" >${file} <<HERE\n-$OLD_VERSION\n+      COMMIT_FILES=\"$COMMIT_FILES $file\"\n+    fi\n+  done\n+\n+  for file in $cppdefine_FILES; do\n+    if test -f $file; then \n+      OLD_VERSION=`/bin/cat $file`\n+      /bin/sed -e \"s/\\(#.*\\) [0-9][0-9][0-9][0-9][0-9][0-9][0-9][0-9]/\\1 ${CURR_DATE}/\" >${file} <<HERE\n+        $OLD_VERSION\n HERE\n-done\n \n-/usr/local/bin/cvs commit -m \"Daily bump.\" $textstring_FILES $cppdefine_FILES\n-commit_results=$?\n+      COMMIT_FILES=\"$COMMIT_FILES $file\"\n+    fi\n+  done\n+\n+  if test -n \"$COMMIT_FILES\" \\\n+     && ! ${CVS} commit -m \"Daily bump.\" $COMMIT_FILES; then\n+    # If we could not commit the files, indicate failure.\n+    RESULT=1\n+  fi\n+\n+  # Remove the files.\n+  rm -rf gcc\n+done\n \n /bin/rm -rf /tmp/$$\n-exit $commit_results\n+exit $RESULT\n "}]}