{"sha": "10d712eb7d2ffbb10ca071eb41139120ed636082", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTBkNzEyZWI3ZDJmZmJiMTBjYTA3MWViNDExMzkxMjBlZDYzNjA4Mg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2015-07-02T21:52:38Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-07-02T21:52:38Z"}, "message": "acinclude.m4 (GLIBCXX_DEFAULT_ABI): Change valid arguments for --with-default-libstdcxx-abi\n\n\t* acinclude.m4 (GLIBCXX_DEFAULT_ABI): Change valid arguments for\n\t--with-default-libstdcxx-abi\n\t* configure: Regenerate.\n\t* doc/xml/manual/configure.xml: Document valid arguments.\n\nFrom-SVN: r225356", "tree": {"sha": "a038b5bef459cd2063326b88fa691f3fef46ca16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a038b5bef459cd2063326b88fa691f3fef46ca16"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/10d712eb7d2ffbb10ca071eb41139120ed636082", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d712eb7d2ffbb10ca071eb41139120ed636082", "html_url": "https://github.com/Rust-GCC/gccrs/commit/10d712eb7d2ffbb10ca071eb41139120ed636082", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/10d712eb7d2ffbb10ca071eb41139120ed636082/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4668d6f9c00d476786cfe4ee765d2da2afd3d114", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4668d6f9c00d476786cfe4ee765d2da2afd3d114", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4668d6f9c00d476786cfe4ee765d2da2afd3d114"}], "stats": {"total": 44, "additions": 28, "deletions": 16}, "files": [{"sha": "b5bc0419dc86ccfa880c597414b7691bae8c743c", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d712eb7d2ffbb10ca071eb41139120ed636082/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d712eb7d2ffbb10ca071eb41139120ed636082/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=10d712eb7d2ffbb10ca071eb41139120ed636082", "patch": "@@ -1,3 +1,10 @@\n+2015-07-02  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* acinclude.m4 (GLIBCXX_DEFAULT_ABI): Change valid arguments for\n+\t--with-default-libstdcxx-abi\n+\t* configure: Regenerate.\n+\t* doc/xml/manual/configure.xml: Document valid arguments.\n+\n 2015-07-02  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* libsupc++/guard.cc (__test_and_acquire): Use __p after __atomic_load"}, {"sha": "11f48f96724e2f4acb386906526d502c50b50aef", "filename": "libstdc++-v3/acinclude.m4", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d712eb7d2ffbb10ca071eb41139120ed636082/libstdc%2B%2B-v3%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d712eb7d2ffbb10ca071eb41139120ed636082/libstdc%2B%2B-v3%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Facinclude.m4?ref=10d712eb7d2ffbb10ca071eb41139120ed636082", "patch": "@@ -3792,15 +3792,15 @@ AC_DEFUN([GLIBCXX_ENABLE_LIBSTDCXX_DUAL_ABI], [\n   fi\n   if test x\"$enable_libstdcxx_dual_abi\" != xyes; then\n     AC_MSG_NOTICE([dual ABI is disabled])\n-    default_libstdcxx_abi=\"c++98\"\n+    default_libstdcxx_abi=\"gcc4-compatible\"\n   fi\n   GLIBCXX_CONDITIONAL(ENABLE_DUAL_ABI, test $enable_libstdcxx_dual_abi = yes)\n ])\n \n dnl\n dnl Check to see which ABI should be enabled by default.\n dnl\n-dnl --with-default-libstdcxx-abi={c++98,c++11}\n+dnl --with-default-libstdcxx-abi={gcc4-compatible,new}\n dnl\n dnl Defines:\n dnl  _GLIBCXX_USE_CXX11_ABI (always defined, either to 1 or 0)\n@@ -3812,14 +3812,16 @@ AC_DEFUN([GLIBCXX_DEFAULT_ABI], [\n     AS_HELP_STRING([--with-default-libstdcxx-abi],\n                    [set the std::string ABI to use by default]),\n     [case \"$withval\" in\n-      c++98|gnu++98|c++03|gnu++03)  default_libstdcxx_abi=\"c++98\" ;;\n-      c++1?|gnu++1?)  default_libstdcxx_abi=\"c++11\" ;;\n-      *)  AC_MSG_ERROR([Invalid argument for --with-default-libstdcxx-abi]) ;;\n-     esac],\n-    [default_libstdcxx_abi=\"c++11\"])\n+      gcc4-compatible)  default_libstdcxx_abi=\"gcc4-compatible\" ;;\n+      new|cxx11)  default_libstdcxx_abi=\"new\" ;;\n+      c++*|gnu++*) AC_MSG_ERROR([Supported arguments for --with-default-libstdcxx-abi have changed, use \"new\" or \"gcc4-compatible\"]) ;;\n+      *) AC_MSG_ERROR([Invalid argument for --with-default-libstdcxx-abi]) ;;\n+     esac\n+     ],\n+    [default_libstdcxx_abi=\"new\"])\n   AC_MSG_RESULT(${default_libstdcxx_abi})\n   fi\n-  if test $default_libstdcxx_abi = \"c++11\"; then\n+  if test $default_libstdcxx_abi = \"new\"; then\n     glibcxx_cxx11_abi=1\n     glibcxx_cxx98_abi=0\n   else"}, {"sha": "e9521d6dec58832d117703cff3cde6eee103525f", "filename": "libstdc++-v3/configure", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d712eb7d2ffbb10ca071eb41139120ed636082/libstdc%2B%2B-v3%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d712eb7d2ffbb10ca071eb41139120ed636082/libstdc%2B%2B-v3%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfigure?ref=10d712eb7d2ffbb10ca071eb41139120ed636082", "patch": "@@ -78180,7 +78180,7 @@ fi\n   if test x\"$enable_libstdcxx_dual_abi\" != xyes; then\n     { $as_echo \"$as_me:${as_lineno-$LINENO}: dual ABI is disabled\" >&5\n $as_echo \"$as_me: dual ABI is disabled\" >&6;}\n-    default_libstdcxx_abi=\"c++98\"\n+    default_libstdcxx_abi=\"gcc4-compatible\"\n   fi\n \n \n@@ -78192,18 +78192,20 @@ $as_echo_n \"checking for default std::string ABI to use... \" >&6; }\n # Check whether --with-default-libstdcxx-abi was given.\n if test \"${with_default_libstdcxx_abi+set}\" = set; then :\n   withval=$with_default_libstdcxx_abi; case \"$withval\" in\n-      c++98|gnu++98|c++03|gnu++03)  default_libstdcxx_abi=\"c++98\" ;;\n-      c++1?|gnu++1?)  default_libstdcxx_abi=\"c++11\" ;;\n-      *)  as_fn_error \"Invalid argument for --with-default-libstdcxx-abi\" \"$LINENO\" 5 ;;\n+      gcc4-compatible)  default_libstdcxx_abi=\"gcc4-compatible\" ;;\n+      new|cxx11)  default_libstdcxx_abi=\"new\" ;;\n+      c++*|gnu++*) as_fn_error \"Supported arguments for --with-default-libstdcxx-abi have changed, use \\\"new\\\" or \\\"gcc4-compatible\\\"\" \"$LINENO\" 5 ;;\n+      *) as_fn_error \"Invalid argument for --with-default-libstdcxx-abi\" \"$LINENO\" 5 ;;\n      esac\n+\n else\n-  default_libstdcxx_abi=\"c++11\"\n+  default_libstdcxx_abi=\"new\"\n fi\n \n   { $as_echo \"$as_me:${as_lineno-$LINENO}: result: ${default_libstdcxx_abi}\" >&5\n $as_echo \"${default_libstdcxx_abi}\" >&6; }\n   fi\n-  if test $default_libstdcxx_abi = \"c++11\"; then\n+  if test $default_libstdcxx_abi = \"new\"; then\n     glibcxx_cxx11_abi=1\n     glibcxx_cxx98_abi=0\n   else"}, {"sha": "a76b80c7bc03c8f948266a807f54a3b4d82df955", "filename": "libstdc++-v3/doc/xml/manual/configure.xml", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/10d712eb7d2ffbb10ca071eb41139120ed636082/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fconfigure.xml", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/10d712eb7d2ffbb10ca071eb41139120ed636082/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fconfigure.xml", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fdoc%2Fxml%2Fmanual%2Fconfigure.xml?ref=10d712eb7d2ffbb10ca071eb41139120ed636082", "patch": "@@ -389,9 +389,10 @@\n    <para>\n      Set the default value for the <symbol>_GLIBCXX_USE_CXX11_ABI</symbol>\n      macro (see <xref linkend=\"manual.intro.using.macros\"/>).\n-     The default is <option>OPTION=c++11</option> which sets the macro to\n+     The default is <option>OPTION=new</option> which sets the macro to\n      <literal>1</literal>,\n-     use <option>OPTION=c++98</option> to set it to <literal>0</literal>.\n+     use <option>OPTION=gcc4-compatible</option> to set it to\n+     <literal>0</literal>.\n      This option does not change the library ABI.\n    </para>\n  </listitem></varlistentry>"}]}