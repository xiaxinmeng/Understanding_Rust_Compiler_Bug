{"sha": "4ff4293f15f3a442f6552e764d2127640932b253", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGZmNDI5M2YxNWYzYTQ0MmY2NTUyZTc2NGQyMTI3NjQwOTMyYjI1Mw==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-02T11:13:39Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-01-02T11:13:39Z"}, "message": "[multiple changes]\n\n2013-01-02  Geert Bosch  <bosch@adacore.com>\n\n\t* a-nllcef.ads, a-nlcefu.ads, a-nscefu.ads: Make Pure.\n\n2013-01-02  Robert Dewar  <dewar@adacore.com>\n\n\t* par_sco.adb: Minor reformatting.\n\n2013-01-02  Javier Miranda  <miranda@adacore.com>\n\n\t* sem_aggr.adb (Resolve_Array_Aggregate): Remove dead code.\n\n2013-01-02  Olivier Hainque  <hainque@adacore.com>\n\n\t* a-exctra.ads (Get_PC): New function.\n\n2013-01-02  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch8.adb: Minor reformatting.\n\n2013-01-02  Thomas Quinot  <quinot@adacore.com>\n\n\t* sem_ch7.adb: Minor reformatting.\n\n2013-01-02  Thomas Quinot  <quinot@adacore.com>\n\n\t* freeze.adb (Check_Component_Storage_Order): Do not crash on\n\t_Tag component.\n\nFrom-SVN: r194799", "tree": {"sha": "b2c6a7aec23ce20d9b876fa308faa9e5143d9bf6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2c6a7aec23ce20d9b876fa308faa9e5143d9bf6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ff4293f15f3a442f6552e764d2127640932b253", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ff4293f15f3a442f6552e764d2127640932b253", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ff4293f15f3a442f6552e764d2127640932b253", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ff4293f15f3a442f6552e764d2127640932b253/comments", "author": null, "committer": null, "parents": [{"sha": "ef7c5fa919b358f10946c832007a488c22753bb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ef7c5fa919b358f10946c832007a488c22753bb9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ef7c5fa919b358f10946c832007a488c22753bb9"}], "stats": {"total": 144, "additions": 79, "deletions": 65}, "files": [{"sha": "969fa7d3e2bbf16acf04c9064c3714df64d52a7a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4ff4293f15f3a442f6552e764d2127640932b253", "patch": "@@ -1,3 +1,32 @@\n+2013-01-02  Geert Bosch  <bosch@adacore.com>\n+\n+\t* a-nllcef.ads, a-nlcefu.ads, a-nscefu.ads: Make Pure.\n+\n+2013-01-02  Robert Dewar  <dewar@adacore.com>\n+\n+\t* par_sco.adb: Minor reformatting.\n+\n+2013-01-02  Javier Miranda  <miranda@adacore.com>\n+\n+\t* sem_aggr.adb (Resolve_Array_Aggregate): Remove dead code.\n+\n+2013-01-02  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* a-exctra.ads (Get_PC): New function.\n+\n+2013-01-02  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch8.adb: Minor reformatting.\n+\n+2013-01-02  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* sem_ch7.adb: Minor reformatting.\n+\n+2013-01-02  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* freeze.adb (Check_Component_Storage_Order): Do not crash on\n+\t_Tag component.\n+\n 2013-01-02  Robert Dewar  <dewar@adacore.com>\n \n \t* gnat1drv.adb, targparm.adb, targparm.ads: Minor name change: add"}, {"sha": "6d22c1c746b84886f0e9df470360e298fca0006e", "filename": "gcc/ada/a-exctra.ads", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2Fa-exctra.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2Fa-exctra.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-exctra.ads?ref=4ff4293f15f3a442f6552e764d2127640932b253", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1999-2009, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1999-2012, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -39,17 +39,22 @@ with System.Traceback_Entries;\n \n package Ada.Exceptions.Traceback is\n \n-   package TBE renames System.Traceback_Entries;\n+   package STBE renames System.Traceback_Entries;\n \n    subtype Code_Loc is System.Address;\n    --  Code location in executing program\n \n-   type Tracebacks_Array is array (Positive range <>) of TBE.Traceback_Entry;\n+   type Tracebacks_Array is array (Positive range <>) of STBE.Traceback_Entry;\n    --  A traceback array is an array of traceback entries\n \n    function Tracebacks (E : Exception_Occurrence) return Tracebacks_Array;\n    --  This function extracts the traceback information from an exception\n    --  occurrence, and returns it formatted in the manner required for\n    --  processing in GNAT.Traceback. See g-traceb.ads for further details.\n \n+   function Get_PC (TBE : STBE.Traceback_Entry) return Code_Loc\n+     renames STBE.PC_For;\n+   --  Returns the code address held by a given traceback entry, typically the\n+   --  address of a call instruction.\n+\n end Ada.Exceptions.Traceback;"}, {"sha": "083f6a990e342fee11891371d60aa490fdf5a2c0", "filename": "gcc/ada/a-nlcefu.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2Fa-nlcefu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2Fa-nlcefu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nlcefu.ads?ref=4ff4293f15f3a442f6552e764d2127640932b253", "patch": "@@ -19,3 +19,4 @@ with Ada.Numerics.Generic_Complex_Elementary_Functions;\n package Ada.Numerics.Long_Complex_Elementary_Functions is\n   new Ada.Numerics.Generic_Complex_Elementary_Functions\n                                           (Ada.Numerics.Long_Complex_Types);\n+pragma Pure (Ada.Numerics.Long_Complex_Elementary_Functions);"}, {"sha": "7a1f4b17ac341c5963283fb979a9f1e5f77d5f20", "filename": "gcc/ada/a-nllcef.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2Fa-nllcef.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2Fa-nllcef.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nllcef.ads?ref=4ff4293f15f3a442f6552e764d2127640932b253", "patch": "@@ -19,3 +19,4 @@ with Ada.Numerics.Generic_Complex_Elementary_Functions;\n package Ada.Numerics.Long_Long_Complex_Elementary_Functions is\n   new Ada.Numerics.Generic_Complex_Elementary_Functions\n                                    (Ada.Numerics.Long_Long_Complex_Types);\n+pragma Pure (Ada.Numerics.Long_Long_Complex_Elementary_Functions);"}, {"sha": "0d0aa154878d45b6b53e39874d741375b50f745a", "filename": "gcc/ada/a-nscefu.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2Fa-nscefu.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2Fa-nscefu.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-nscefu.ads?ref=4ff4293f15f3a442f6552e764d2127640932b253", "patch": "@@ -19,3 +19,4 @@ with Ada.Numerics.Generic_Complex_Elementary_Functions;\n package Ada.Numerics.Short_Complex_Elementary_Functions is\n   new Ada.Numerics.Generic_Complex_Elementary_Functions\n                                           (Ada.Numerics.Short_Complex_Types);\n+pragma Pure (Ada.Numerics.Short_Complex_Elementary_Functions);"}, {"sha": "2b8b53782ae776ef49b757d5151226b504c352f1", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=4ff4293f15f3a442f6552e764d2127640932b253", "patch": "@@ -1040,11 +1040,18 @@ package body Freeze is\n       if Present (Comp) then\n          Err_Node  := Comp;\n          Comp_Type := Etype (Comp);\n-         Comp_Def  := Component_Definition (Parent (Comp));\n \n-         Comp_Byte_Aligned :=\n-           Present (Component_Clause (Comp))\n-             and then Normalized_First_Bit (Comp) mod System_Storage_Unit = 0;\n+         if Is_Tag (Comp) then\n+            Comp_Def          := Empty;\n+            Comp_Byte_Aligned := True;\n+\n+         else\n+            Comp_Def          := Component_Definition (Parent (Comp));\n+            Comp_Byte_Aligned :=\n+              Present (Component_Clause (Comp))\n+                and then\n+              Normalized_First_Bit (Comp) mod System_Storage_Unit = 0;\n+         end if;\n \n       --  Array case\n \n@@ -1080,7 +1087,7 @@ package body Freeze is\n                & \"storage order as enclosing composite\", Err_Node);\n          end if;\n \n-      elsif Aliased_Present (Comp_Def) then\n+      elsif Present (Comp_Def) and then Aliased_Present (Comp_Def) then\n          Error_Msg_N\n            (\"aliased component not permitted for type with \"\n             & \"explicit Scalar_Storage_Order\", Err_Node);"}, {"sha": "54fe0ddb8d7dc9ca890e9388ccfebc419d423b28", "filename": "gcc/ada/par_sco.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2Fpar_sco.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2Fpar_sco.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar_sco.adb?ref=4ff4293f15f3a442f6552e764d2127640932b253", "patch": "@@ -2170,12 +2170,12 @@ package body Par_SCO is\n    is\n       Spec : constant Node_Id := Specification (N);\n       Dom  : Dominant_Info;\n+\n    begin\n-      Dom := Traverse_Declarations_Or_Statements\n-               (Visible_Declarations (Spec), D);\n+      Dom :=\n+        Traverse_Declarations_Or_Statements (Visible_Declarations (Spec), D);\n \n-      --  The first private declaration is dominated by the last visible\n-      --  declaration.\n+      --  First private declaration is dominated by last visible declaration\n \n       Traverse_Declarations_Or_Statements (Private_Declarations (Spec), Dom);\n    end Traverse_Package_Declaration;"}, {"sha": "7458324a9d6b2ef2c1c14026d50c1bc1a86fc024", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=4ff4293f15f3a442f6552e764d2127640932b253", "patch": "@@ -1877,31 +1877,6 @@ package body Sem_Aggr is\n          return Failure;\n       end if;\n \n-      if Others_Present\n-        and then Nkind (Parent (N)) /= N_Component_Association\n-        and then No (Expressions (N))\n-        and then\n-          Nkind (First (Choices (First (Component_Associations (N)))))\n-            = N_Others_Choice\n-        and then Is_Elementary_Type (Component_Typ)\n-        and then False\n-      then\n-         declare\n-            Assoc : constant Node_Id := First (Component_Associations (N));\n-         begin\n-            Rewrite (Assoc,\n-              Make_Component_Association (Loc,\n-                 Choices =>\n-                   New_List (\n-                     Make_Attribute_Reference (Loc,\n-                       Prefix => New_Occurrence_Of (Index_Typ, Loc),\n-                       Attribute_Name => Name_Range)),\n-                 Expression => Relocate_Node (Expression (Assoc))));\n-            return Resolve_Array_Aggregate\n-              (N, Index, Index_Constr, Component_Typ, Others_Allowed);\n-         end;\n-      end if;\n-\n       --  Protect against cascaded errors\n \n       if Etype (Index_Typ) = Any_Type then"}, {"sha": "b81f57554aa9db48b91f67443c3419ac98ec5d33", "filename": "gcc/ada/sem_ch7.adb", "status": "modified", "additions": 22, "deletions": 27, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2Fsem_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2Fsem_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch7.adb?ref=4ff4293f15f3a442f6552e764d2127640932b253", "patch": "@@ -2218,7 +2218,7 @@ package body Sem_Ch7 is\n             Write_Eol;\n          end if;\n \n-         --  On  exit from the package scope, we must preserve the visibility\n+         --  On exit from the package scope, we must preserve the visibility\n          --  established by use clauses in the current scope. Two cases:\n \n          --  a) If the entity is an operator, it may be a primitive operator of\n@@ -2252,8 +2252,8 @@ package body Sem_Ch7 is\n                --  of its parent unit.\n \n                if Is_Child_Unit (Id) then\n-                  Set_Is_Potentially_Use_Visible (Id,\n-                    Is_Visible_Child_Unit (Id));\n+                  Set_Is_Potentially_Use_Visible\n+                    (Id, Is_Visible_Child_Unit (Id));\n                else\n                   Set_Is_Potentially_Use_Visible (Id);\n                end if;\n@@ -2272,9 +2272,7 @@ package body Sem_Ch7 is\n          --  full view is also removed from visibility: it may be exposed when\n          --  swapping views in an instantiation.\n \n-         if Is_Type (Id)\n-           and then Present (Full_View (Id))\n-         then\n+         if Is_Type (Id) and then Present (Full_View (Id)) then\n             Set_Is_Immediately_Visible (Full_View (Id), False);\n          end if;\n \n@@ -2328,7 +2326,7 @@ package body Sem_Ch7 is\n            --  OK if object declaration with the No_Initialization flag set\n \n            and then not (Nkind (Parent (Id)) = N_Object_Declaration\n-                           and then No_Initialization (Parent (Id)))\n+                          and then No_Initialization (Parent (Id)))\n          then\n             --  If no private declaration is present, we assume the user did\n             --  not intend a deferred constant declaration and the problem\n@@ -2354,13 +2352,13 @@ package body Sem_Ch7 is\n \n             else\n                Error_Msg_N\n-                  (\"missing full declaration for deferred constant (RM 7.4)\",\n-                     Id);\n+                 (\"missing full declaration for deferred constant (RM 7.4)\",\n+                  Id);\n \n                if Is_Limited_Type (Etype (Id)) then\n                   Error_Msg_N\n                     (\"\\if variable intended, remove CONSTANT from declaration\",\n-                    Parent (Id));\n+                     Parent (Id));\n                end if;\n             end if;\n          end if;\n@@ -2396,9 +2394,7 @@ package body Sem_Ch7 is\n \n          Set_Is_Immediately_Visible (Id, False);\n \n-         if Is_Private_Base_Type (Id)\n-           and then Present (Full_View (Id))\n-         then\n+         if Is_Private_Base_Type (Id) and then Present (Full_View (Id)) then\n             Full := Full_View (Id);\n \n             --  If the partial view is not declared in the visible part of the\n@@ -2407,8 +2403,8 @@ package body Sem_Ch7 is\n             --  no exchange takes place.\n \n             if No (Parent (Id))\n-              or else List_Containing (Parent (Id))\n-                /= Visible_Declarations (Specification (Decl))\n+              or else List_Containing (Parent (Id)) /=\n+                               Visible_Declarations (Specification (Decl))\n             then\n                goto Next_Id;\n             end if;\n@@ -2433,9 +2429,9 @@ package body Sem_Ch7 is\n \n             Priv_Elmt := First_Elmt (Private_Dependents (Id));\n \n-            --  Swap out the subtypes and derived types of Id that were\n-            --  compiled in this scope, or installed previously by\n-            --  Install_Private_Declarations.\n+            --  Swap out the subtypes and derived types of Id that\n+            --  were compiled in this scope, or installed previously\n+            --  by Install_Private_Declarations.\n \n             --  Before we do the swap, we verify the presence of the Full_View\n             --  field which may be empty due to a swap by a previous call to\n@@ -2445,7 +2441,6 @@ package body Sem_Ch7 is\n                Priv_Sub := Node (Priv_Elmt);\n \n                if Present (Full_View (Priv_Sub)) then\n-\n                   if Scope (Priv_Sub) = P\n                      or else not In_Open_Scopes (Scope (Priv_Sub))\n                   then\n@@ -2615,11 +2610,11 @@ package body Sem_Ch7 is\n          --  expander will provide an implicit completion at some point.\n \n          elsif (Is_Overloadable (E)\n-               and then Ekind (E) /= E_Enumeration_Literal\n-               and then Ekind (E) /= E_Operator\n-               and then not Is_Abstract_Subprogram (E)\n-               and then not Has_Completion (E)\n-               and then Comes_From_Source (Parent (E)))\n+                 and then Ekind (E) /= E_Enumeration_Literal\n+                 and then Ekind (E) /= E_Operator\n+                 and then not Is_Abstract_Subprogram (E)\n+                 and then not Has_Completion (E)\n+                 and then Comes_From_Source (Parent (E)))\n \n            or else\n              (Ekind (E) = E_Package\n@@ -2633,12 +2628,12 @@ package body Sem_Ch7 is\n                and then not Is_Generic_Type (E))\n \n            or else\n-            ((Ekind (E) = E_Task_Type or else\n-              Ekind (E) = E_Protected_Type)\n+             (Ekind_In (E, E_Task_Type, E_Protected_Type)\n                and then not Has_Completion (E))\n \n            or else\n-             (Ekind (E) = E_Generic_Package and then E /= P\n+             (Ekind (E) = E_Generic_Package\n+               and then E /= P\n                and then not Has_Completion (E)\n                and then Unit_Requires_Body (E))\n "}, {"sha": "c02a4c3688339d1030e22f0accd26a223ceba1bc", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ff4293f15f3a442f6552e764d2127640932b253/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=4ff4293f15f3a442f6552e764d2127640932b253", "patch": "@@ -4744,7 +4744,7 @@ package body Sem_Ch8 is\n             goto Found;\n \n          --  If there is more than one potentially use-visible entity and at\n-         --  least one of them non-overloadable, we have an error (RM 8.4(11).\n+         --  least one of them non-overloadable, we have an error (RM 8.4(11)).\n          --  Note that E points to the first such entity on the homonym list.\n          --  Special case: if one of the entities is declared in an actual\n          --  package, it was visible in the generic, and takes precedence over"}]}