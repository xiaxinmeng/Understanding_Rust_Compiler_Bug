{"sha": "8eac49b1b601fd9eba47c14f9ebea5779446be46", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGVhYzQ5YjFiNjAxZmQ5ZWJhNDdjMTRmOWViZWE1Nzc5NDQ2YmU0Ng==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2016-01-12T11:41:16Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2016-01-12T11:41:16Z"}, "message": "re PR target/69053 (ICE in build_vector_from_val)\n\n2016-01-12  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/69053\n\t* tree-vect-loop.c (get_initial_def_for_reduction): Properly\n\tconvert initial value for cond reductions.\n\n\t* g++.dg/torture/pr69053.C: New testcase.\n\nFrom-SVN: r232263", "tree": {"sha": "ce7f132db431a5b8414735154118818516dc833e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce7f132db431a5b8414735154118818516dc833e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8eac49b1b601fd9eba47c14f9ebea5779446be46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eac49b1b601fd9eba47c14f9ebea5779446be46", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8eac49b1b601fd9eba47c14f9ebea5779446be46", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8eac49b1b601fd9eba47c14f9ebea5779446be46/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b723b6806dc86853fff5a1b30b9c505f870e800", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b723b6806dc86853fff5a1b30b9c505f870e800", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b723b6806dc86853fff5a1b30b9c505f870e800"}], "stats": {"total": 45, "additions": 33, "deletions": 12}, "files": [{"sha": "afc1b277cc9494dc5f8719309384f1c4f5afe7ef", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eac49b1b601fd9eba47c14f9ebea5779446be46/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eac49b1b601fd9eba47c14f9ebea5779446be46/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8eac49b1b601fd9eba47c14f9ebea5779446be46", "patch": "@@ -1,3 +1,9 @@\n+2016-01-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69053\n+\t* tree-vect-loop.c (get_initial_def_for_reduction): Properly\n+\tconvert initial value for cond reductions.\n+\n 2016-01-12  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/69007"}, {"sha": "d827695a3da6789d71766e6dbc319f2cf66fbc0e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eac49b1b601fd9eba47c14f9ebea5779446be46/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eac49b1b601fd9eba47c14f9ebea5779446be46/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=8eac49b1b601fd9eba47c14f9ebea5779446be46", "patch": "@@ -1,3 +1,8 @@\n+2016-01-12  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69053\n+\t* g++.dg/torture/pr69053.C: New testcase.\n+\n 2016-01-12  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/69168"}, {"sha": "4ca986c5fce09754f64d7d790f665498604f5d7c", "filename": "gcc/testsuite/g++.dg/torture/pr69053.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eac49b1b601fd9eba47c14f9ebea5779446be46/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr69053.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eac49b1b601fd9eba47c14f9ebea5779446be46/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr69053.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftorture%2Fpr69053.C?ref=8eac49b1b601fd9eba47c14f9ebea5779446be46", "patch": "@@ -0,0 +1,17 @@\n+// { dg-do compile }\n+// { dg-additional-options \"-march=core-avx2\" { target x86_64-*-* i?86-*-* } }\n+struct A {\n+    int *elem[1];\n+};\n+int a, d, e;\n+A *b;\n+int *c;\n+int main()\n+{\n+  int *f = 0;\n+  for (; e; e++)\n+    if (b->elem[e])\n+      f = c;\n+  if (f)\n+    a = d;\n+}"}, {"sha": "0933e7eb770550ec90dd2898503c7c077954b993", "filename": "gcc/tree-vect-loop.c", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8eac49b1b601fd9eba47c14f9ebea5779446be46/gcc%2Ftree-vect-loop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8eac49b1b601fd9eba47c14f9ebea5779446be46/gcc%2Ftree-vect-loop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-loop.c?ref=8eac49b1b601fd9eba47c14f9ebea5779446be46", "patch": "@@ -4075,10 +4075,10 @@ get_initial_def_for_reduction (gimple *stmt, tree init_val,\n   tree *elts;\n   int i;\n   bool nested_in_vect_loop = false;\n-  tree init_value;\n   REAL_VALUE_TYPE real_init_val = dconst0;\n   int int_init_val = 0;\n   gimple *def_stmt = NULL;\n+  gimple_seq stmts = NULL;\n \n   gcc_assert (vectype);\n   nunits = TYPE_VECTOR_SUBPARTS (vectype);\n@@ -4107,16 +4107,6 @@ get_initial_def_for_reduction (gimple *stmt, tree init_val,\n       return vect_create_destination_var (init_val, vectype);\n     }\n \n-  if (TREE_CONSTANT (init_val))\n-    {\n-      if (SCALAR_FLOAT_TYPE_P (scalar_type))\n-        init_value = build_real (scalar_type, TREE_REAL_CST (init_val));\n-      else\n-        init_value = build_int_cst (scalar_type, TREE_INT_CST_LOW (init_val));\n-    }\n-  else\n-    init_value = init_val;\n-\n   switch (code)\n     {\n       case WIDEN_SUM_EXPR:\n@@ -4193,7 +4183,10 @@ get_initial_def_for_reduction (gimple *stmt, tree init_val,\n \t\tbreak;\n \t      }\n \t  }\n-\tinit_def = build_vector_from_val (vectype, init_value);\n+\tinit_val = gimple_convert (&stmts, TREE_TYPE (vectype), init_val);\n+\tif (! gimple_seq_empty_p (stmts))\n+\t  gsi_insert_seq_on_edge_immediate (loop_preheader_edge (loop), stmts);\n+\tinit_def = build_vector_from_val (vectype, init_val);\n \tbreak;\n \n       default:"}]}