{"sha": "3056423a31d1794bfa65dddecc9f07f3a44beb73", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzA1NjQyM2EzMWQxNzk0YmZhNjVkZGRlY2M5ZjA3ZjNhNDRiZWI3Mw==", "commit": {"author": {"name": "Keith Seitz", "email": "keiths@redhat.com", "date": "2006-09-06T22:16:59Z"}, "committer": {"name": "Keith Seitz", "email": "kseitz@gcc.gnu.org", "date": "2006-09-06T22:16:59Z"}, "message": "Class.h (_Jv_FindInterpreterMethod): Change return type to _Jv_MethodBase instead of _Jv_InterpMethod.\n\n        * java/lang/Class.h (_Jv_FindInterpreterMethod): Change return type\n        to _Jv_MethodBase instead of _Jv_InterpMethod.\n        * java/lang/natClass.cc (_Jv_FindInterpreterMethod): Likewise.\n        Do not check access flags.\n        Fix some minor style anomalies.\n\nFrom-SVN: r116730", "tree": {"sha": "48e1f84c5ed7b481b33fe4c2ee02c993dec80dd0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48e1f84c5ed7b481b33fe4c2ee02c993dec80dd0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3056423a31d1794bfa65dddecc9f07f3a44beb73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3056423a31d1794bfa65dddecc9f07f3a44beb73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3056423a31d1794bfa65dddecc9f07f3a44beb73", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3056423a31d1794bfa65dddecc9f07f3a44beb73/comments", "author": {"login": "shtiek", "id": 107581324, "node_id": "U_kgDOBmmPjA", "avatar_url": "https://avatars.githubusercontent.com/u/107581324?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shtiek", "html_url": "https://github.com/shtiek", "followers_url": "https://api.github.com/users/shtiek/followers", "following_url": "https://api.github.com/users/shtiek/following{/other_user}", "gists_url": "https://api.github.com/users/shtiek/gists{/gist_id}", "starred_url": "https://api.github.com/users/shtiek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shtiek/subscriptions", "organizations_url": "https://api.github.com/users/shtiek/orgs", "repos_url": "https://api.github.com/users/shtiek/repos", "events_url": "https://api.github.com/users/shtiek/events{/privacy}", "received_events_url": "https://api.github.com/users/shtiek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "1b65e501440045f6f7c84e3eca36da0ee9899e33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1b65e501440045f6f7c84e3eca36da0ee9899e33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1b65e501440045f6f7c84e3eca36da0ee9899e33"}], "stats": {"total": 34, "additions": 19, "deletions": 15}, "files": [{"sha": "57603f9ac91b9f5b55e24d3ae09f990dcf02de12", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3056423a31d1794bfa65dddecc9f07f3a44beb73/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3056423a31d1794bfa65dddecc9f07f3a44beb73/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=3056423a31d1794bfa65dddecc9f07f3a44beb73", "patch": "@@ -1,3 +1,11 @@\n+2006-09-06  Keith Seitz  <keiths@redhat.com>\n+\n+\t* java/lang/Class.h (_Jv_FindInterpreterMethod): Change return type\n+\tto _Jv_MethodBase instead of _Jv_InterpMethod.\n+\t* java/lang/natClass.cc (_Jv_FindInterpreterMethod): Likewise.\n+\tDo not check access flags.\n+\tFix some minor style anomalies.\n+\t\n 2006-09-01  Geoffrey Keating  <geoffk@apple.com>\n \n \t* testsuite/libjava.jni/jni.exp (gcj_jni_invocation_test_one):"}, {"sha": "1638f94e1072250b2bbde9f5a42508f807e944e6", "filename": "libjava/java/lang/Class.h", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3056423a31d1794bfa65dddecc9f07f3a44beb73/libjava%2Fjava%2Flang%2FClass.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3056423a31d1794bfa65dddecc9f07f3a44beb73/libjava%2Fjava%2Flang%2FClass.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FClass.h?ref=3056423a31d1794bfa65dddecc9f07f3a44beb73", "patch": "@@ -234,7 +234,8 @@ jmethodID JvGetFirstMethod (jclass);\n \n #ifdef INTERPRETER\n // Finds a desired interpreter method in the given class or NULL if not found\n-_Jv_InterpMethod* _Jv_FindInterpreterMethod (jclass, jmethodID);\n+class _Jv_MethodBase;\n+_Jv_MethodBase *_Jv_FindInterpreterMethod (jclass, jmethodID);\n #endif\n \n // Friend classes and functions to implement the ClassLoader\n@@ -474,8 +475,8 @@ class java::lang::Class : public java::lang::Object\n   friend jint (::JvNumMethods) (jclass);\n   friend jmethodID (::JvGetFirstMethod) (jclass);\n #ifdef INTERPRETER\n-  friend _Jv_InterpMethod* (::_Jv_FindInterpreterMethod) (jclass klass,\n-\t\t\t\t\t\t\t  jmethodID desired_method);\n+  friend _Jv_MethodBase *(::_Jv_FindInterpreterMethod) (jclass klass,\n+\t\t\t\t\t\t\tjmethodID desired_method);\n #endif\n \n   // Friends classes and functions to implement the ClassLoader"}, {"sha": "0682fd6e1901da3392536712de8dd38c94e128c4", "filename": "libjava/java/lang/natClass.cc", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3056423a31d1794bfa65dddecc9f07f3a44beb73/libjava%2Fjava%2Flang%2FnatClass.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3056423a31d1794bfa65dddecc9f07f3a44beb73/libjava%2Fjava%2Flang%2FnatClass.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatClass.cc?ref=3056423a31d1794bfa65dddecc9f07f3a44beb73", "patch": "@@ -1240,25 +1240,20 @@ _Jv_getInterfaceMethod (jclass search_class, jclass &found_class, int &index,\n }\n \n #ifdef INTERPRETER\n-_Jv_InterpMethod*\n+_Jv_MethodBase *\n _Jv_FindInterpreterMethod (jclass klass, jmethodID desired_method)\n {\n   using namespace java::lang::reflect;\n \n-  _Jv_InterpClass* iclass\n-    = reinterpret_cast<_Jv_InterpClass*> (klass->aux_info);\n-  _Jv_MethodBase** imethods = _Jv_GetFirstMethod (iclass);\n+  _Jv_InterpClass *iclass\n+    = reinterpret_cast<_Jv_InterpClass *> (klass->aux_info);\n+  _Jv_MethodBase **imethods = _Jv_GetFirstMethod (iclass);\n \n   for (int i = 0; i < JvNumMethods (klass); ++i)\n     {\n-      _Jv_MethodBase* imeth = imethods[i];\n-      _Jv_ushort accflags = klass->methods[i].accflags;\n-      if ((accflags & (Modifier::NATIVE | Modifier::ABSTRACT)) == 0)\n-\t{\n-\t  _Jv_InterpMethod* im = reinterpret_cast<_Jv_InterpMethod*> (imeth);\n-\t  if (im->get_method () == desired_method)\n-\t    return im;\n-\t}\n+      _Jv_MethodBase *imeth = imethods[i];\n+      if (imeth->get_method () == desired_method)\n+\treturn imeth;\n     }\n \n   return NULL;"}]}