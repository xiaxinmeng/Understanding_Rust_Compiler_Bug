{"sha": "e992fc2e5d6ece7463384caa8c1e0a70cfe57e91", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTk5MmZjMmU1ZDZlY2U3NDYzMzg0Y2FhOGMxZTBhNzBjZmU1N2U5MQ==", "commit": {"author": {"name": "Rainer Orth", "email": "ro@CeBiTec.Uni-Bielefeld.DE", "date": "2012-02-20T11:47:25Z"}, "committer": {"name": "Rainer Orth", "email": "ro@gcc.gnu.org", "date": "2012-02-20T11:47:25Z"}, "message": "Enable initfini array support on Solaris (PR target/50166)\n\n\t* acinclude.m4 (gcc_AC_INITFINI_ARRAY): Require gcc_SUN_LD_VERSION.\n\tDefine _start.\n\tRemove -e 0 from $gcc_cv_ld invocation.\n\tOnly use __GLIBC_PREREQ if defined.\n\tEnable on Solaris since Solaris 8 patch.\n\t(gcc_SUN_LD_VERSION): New macro.\n\t* configure.ac (ld_ver) <*-*-solaris2*>: Refer to\n\tgcc_SUN_LD_VERSION for version number format.\n\t* configure: Regenerate.\n\t* varasm.c (get_elf_initfini_array_priority_section): Set\n\tSECTION_NOTYPE for non-default priority.\n\tUse get_section instead of get_unnamed_section to emit\n\t.init_array/.fini_array with default priority.\n\nFrom-SVN: r184390", "tree": {"sha": "a77f9137c76c7d39fcac1110b79efb90d3a95ab7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a77f9137c76c7d39fcac1110b79efb90d3a95ab7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e992fc2e5d6ece7463384caa8c1e0a70cfe57e91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e992fc2e5d6ece7463384caa8c1e0a70cfe57e91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e992fc2e5d6ece7463384caa8c1e0a70cfe57e91", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e992fc2e5d6ece7463384caa8c1e0a70cfe57e91/comments", "author": {"login": "rorth", "id": 3930951, "node_id": "MDQ6VXNlcjM5MzA5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/3930951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rorth", "html_url": "https://github.com/rorth", "followers_url": "https://api.github.com/users/rorth/followers", "following_url": "https://api.github.com/users/rorth/following{/other_user}", "gists_url": "https://api.github.com/users/rorth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rorth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rorth/subscriptions", "organizations_url": "https://api.github.com/users/rorth/orgs", "repos_url": "https://api.github.com/users/rorth/repos", "events_url": "https://api.github.com/users/rorth/events{/privacy}", "received_events_url": "https://api.github.com/users/rorth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d150390867de8dc4c2405ffc764ada207e0fd48f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d150390867de8dc4c2405ffc764ada207e0fd48f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d150390867de8dc4c2405ffc764ada207e0fd48f"}], "stats": {"total": 187, "additions": 155, "deletions": 32}, "files": [{"sha": "ee4560ae3d02d5b310ab523d570ad4f9fb5f7589", "filename": "gcc/ChangeLog", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e992fc2e5d6ece7463384caa8c1e0a70cfe57e91/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e992fc2e5d6ece7463384caa8c1e0a70cfe57e91/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e992fc2e5d6ece7463384caa8c1e0a70cfe57e91", "patch": "@@ -1,3 +1,20 @@\n+2012-02-20  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n+\n+\tPR target/50166\n+\t* acinclude.m4 (gcc_AC_INITFINI_ARRAY): Require gcc_SUN_LD_VERSION.\n+\tDefine _start.\n+\tRemove -e 0 from $gcc_cv_ld invocation.\n+\tOnly use __GLIBC_PREREQ if defined.\n+\tEnable on Solaris since Solaris 8 patch.\n+\t(gcc_SUN_LD_VERSION): New macro.\n+\t* configure.ac (ld_ver) <*-*-solaris2*>: Refer to\n+\tgcc_SUN_LD_VERSION for version number format.\n+\t* configure: Regenerate.\n+\t* varasm.c (get_elf_initfini_array_priority_section): Set\n+\tSECTION_NOTYPE for non-default priority.\n+\tUse get_section instead of get_unnamed_section to emit\n+\t.init_array/.fini_array with default priority.\n+\n 2012-02-19  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* config/mips/mips.c (mips_need_mips16_rdhwr_p): New variable."}, {"sha": "0c6170ca143ff2e27aa5f23b00d74a184905c909", "filename": "gcc/acinclude.m4", "status": "modified", "additions": 72, "deletions": 7, "changes": 79, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e992fc2e5d6ece7463384caa8c1e0a70cfe57e91/gcc%2Facinclude.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e992fc2e5d6ece7463384caa8c1e0a70cfe57e91/gcc%2Facinclude.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Facinclude.m4?ref=e992fc2e5d6ece7463384caa8c1e0a70cfe57e91", "patch": "@@ -1,4 +1,5 @@\n-dnl Copyright (C) 2005, 2006, 2007, 2008, 2011 Free Software Foundation, Inc.\n+dnl Copyright (C) 2005, 2006, 2007, 2008, 2011, 2012\n+dnl Free Software Foundation, Inc.\n dnl\n dnl This file is part of GCC.\n dnl\n@@ -370,7 +371,8 @@ fi\n fi])\n \n AC_DEFUN([gcc_AC_INITFINI_ARRAY],\n-[AC_ARG_ENABLE(initfini-array,\n+[AC_REQUIRE([gcc_SUN_LD_VERSION])dnl\n+AC_ARG_ENABLE(initfini-array,\n \t[  --enable-initfini-array\tuse .init_array/.fini_array sections],\n \t[], [\n AC_CACHE_CHECK(for .preinit_array/.init_array/.fini_array support,\n@@ -427,9 +429,11 @@ int (*fp) (void) __attribute__ ((section (\".init_array\"))) = foo;\n .balign 4\n .byte 'H', 'H', 'H', 'H'\n .text\n+.globl _start\n+_start:\n EOF\n \t  if $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1 \\\n-\t     && $gcc_cv_ld -e 0 -o conftest conftest.o > /dev/null 2>&1 \\\n+\t     && $gcc_cv_ld -o conftest conftest.o > /dev/null 2>&1 \\\n \t     && $gcc_cv_objdump -s -j .init_array conftest \\\n \t\t| grep HHHHFFFFDDDDBBBB > /dev/null 2>&1 \\\n \t     && $gcc_cv_objdump -s -j .fini_array conftest \\\n@@ -442,14 +446,38 @@ changequote([,])dnl\n \tfi\n \tAC_PREPROC_IFELSE([AC_LANG_SOURCE([\n #ifndef __ELF__\n-#error Not an ELF OS\n+# error Not an ELF OS\n #endif\n #include <stdlib.h>\n-#if defined __GLIBC_PREREQ && __GLIBC_PREREQ (2, 4)\n+#if defined __GLIBC_PREREQ\n+# if __GLIBC_PREREQ (2, 4)\n+# else\n+#  error GLIBC 2.4 required\n+# endif\n #else\n-#error The C library not known to support .init_array/.fini_array\n+# if defined __sun__ && defined __svr4__\n+   /* Solaris ld.so.1 supports .init_array/.fini_array since Solaris 8.  */\n+# else\n+#  error The C library not known to support .init_array/.fini_array\n+# endif\n #endif\n-])],, [gcc_cv_initfini_array=no]);;\n+])],[\n+    case \"${target}\" in\n+      *-*-solaris2.8*)\n+\t# .init_array/.fini_array support was introduced in Solaris 8\n+\t# patches 109147-08 (sparc) and 109148-08 (x86).  Since ld.so.1 and\n+\t# ld are guaranteed to be updated in lockstep, we can check ld -V\n+\t# instead.  Unfortunately, proper ld version numbers were only\n+\t# introduced in rev. -14, so we check for that.\n+  \tif test \"$gcc_cv_sun_ld_vers_minor\" -lt 272; then\n+\t  gcc_cv_initfini_array=no\n+\tfi\n+      ;;\n+      *-*-solaris2.9* | *-*-solaris2.1[[0-9]]*)\n+        # .init_array/.fini_array support is present since Solaris 9 FCS.\n+        ;;\n+    esac\n+], [gcc_cv_initfini_array=no]);;\n     esac\n   else\n     AC_MSG_CHECKING(cross compile... guessing)\n@@ -569,6 +597,43 @@ if test $[$2] = yes; then\n   $7\n fi])])\n \n+dnl gcc_SUN_LD_VERSION\n+dnl\n+dnl Determines Sun linker version numbers, setting gcc_cv_sun_ld_vers to\n+dnl the complete version number and gcc_cv_sun_ld_vers_{major, minor} to\n+dnl the corresponding fields.\n+dnl\n+dnl ld and ld.so.1 are guaranteed to be updated in lockstep, so ld version\n+dnl numbers can be used in ld.so.1 feature checks even if a different\n+dnl linker is configured.\n+dnl\n+AC_DEFUN([gcc_SUN_LD_VERSION],\n+[changequote(,)dnl\n+if test \"x${build}\" = \"x${target}\" && test \"x${build}\" = \"x${host}\"; then\n+  case \"${target}\" in\n+    *-*-solaris2*)\n+      #\n+      # Solaris 2 ld -V output looks like this for a regular version:\n+      #\n+      # ld: Software Generation Utilities - Solaris Link Editors: 5.11-1.1699\n+      #\n+      # but test versions add stuff at the end:\n+      #\n+      # ld: Software Generation Utilities - Solaris Link Editors: 5.11-1.1701:onnv-ab196087-6931056-03/25/10\n+      #\n+      gcc_cv_sun_ld_ver=`/usr/ccs/bin/ld -V 2>&1`\n+      if echo \"$gcc_cv_sun_ld_ver\" | grep 'Solaris Link Editors' > /dev/null; then\n+\tgcc_cv_sun_ld_vers=`echo $gcc_cv_sun_ld_ver | sed -n \\\n+\t  -e 's,^.*: 5\\.[0-9][0-9]*-\\([0-9]\\.[0-9][0-9]*\\).*$,\\1,p'`\n+\tgcc_cv_sun_ld_vers_major=`expr \"$gcc_cv_sun_ld_vers\" : '\\([0-9]*\\)'`\n+\tgcc_cv_sun_ld_vers_minor=`expr \"$gcc_cv_sun_ld_vers\" : '[0-9]*\\.\\([0-9]*\\)'`\n+      fi\n+      ;;\n+  esac\n+fi\n+changequote([,])dnl\n+])\n+\n dnl GCC_TARGET_TEMPLATE(KEY)\n dnl ------------------------\n dnl Define KEY as a valid configure key on the target machine."}, {"sha": "2a84fc37073fda4e29d3b08bc0f17a4f70e50426", "filename": "gcc/configure", "status": "modified", "additions": 57, "deletions": 12, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e992fc2e5d6ece7463384caa8c1e0a70cfe57e91/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e992fc2e5d6ece7463384caa8c1e0a70cfe57e91/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=e992fc2e5d6ece7463384caa8c1e0a70cfe57e91", "patch": "@@ -22214,15 +22214,11 @@ if test $in_tree_ld != yes ; then\n   else\n     case \"${target}\" in\n       *-*-solaris2*)\n+\t# See acinclude.m4 (gcc_SUN_LD_VERSION) for the version number\n+\t# format.\n \t#\n-\t# Solaris 2 ld -V output looks like this for a regular version:\n-\t#\n-\t# ld: Software Generation Utilities - Solaris Link Editors: 5.11-1.1699\n-\t#\n-\t# but test versions add stuff at the end:\n-\t#\n-\t# ld: Software Generation Utilities - Solaris Link Editors: 5.11-1.1701:onnv-ab196087-6931056-03/25/10\n-\t#\n+\t# Don't reuse gcc_gv_sun_ld_vers_* in case a linker other than\n+\t# /usr/ccs/bin/ld has been configured.\n \tld_ver=`$gcc_cv_ld -V 2>&1`\n \tif echo \"$ld_ver\" | grep 'Solaris Link Editors' > /dev/null; then\n \t  ld_vers=`echo $ld_ver | sed -n \\\n@@ -22350,6 +22346,29 @@ fi\n { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $gcc_cv_ld_ro_rw_mix\" >&5\n $as_echo \"$gcc_cv_ld_ro_rw_mix\" >&6; }\n \n+if test \"x${build}\" = \"x${target}\" && test \"x${build}\" = \"x${host}\"; then\n+  case \"${target}\" in\n+    *-*-solaris2*)\n+      #\n+      # Solaris 2 ld -V output looks like this for a regular version:\n+      #\n+      # ld: Software Generation Utilities - Solaris Link Editors: 5.11-1.1699\n+      #\n+      # but test versions add stuff at the end:\n+      #\n+      # ld: Software Generation Utilities - Solaris Link Editors: 5.11-1.1701:onnv-ab196087-6931056-03/25/10\n+      #\n+      gcc_cv_sun_ld_ver=`/usr/ccs/bin/ld -V 2>&1`\n+      if echo \"$gcc_cv_sun_ld_ver\" | grep 'Solaris Link Editors' > /dev/null; then\n+\tgcc_cv_sun_ld_vers=`echo $gcc_cv_sun_ld_ver | sed -n \\\n+\t  -e 's,^.*: 5\\.[0-9][0-9]*-\\([0-9]\\.[0-9][0-9]*\\).*$,\\1,p'`\n+\tgcc_cv_sun_ld_vers_major=`expr \"$gcc_cv_sun_ld_vers\" : '\\([0-9]*\\)'`\n+\tgcc_cv_sun_ld_vers_minor=`expr \"$gcc_cv_sun_ld_vers\" : '[0-9]*\\.\\([0-9]*\\)'`\n+      fi\n+      ;;\n+  esac\n+fi\n+\n # Check whether --enable-initfini-array was given.\n if test \"${enable_initfini_array+set}\" = set; then :\n   enableval=$enable_initfini_array;\n@@ -22425,9 +22444,11 @@ fi\n .balign 4\n .byte 'H', 'H', 'H', 'H'\n .text\n+.globl _start\n+_start:\n EOF\n \t  if $gcc_cv_as -o conftest.o conftest.s > /dev/null 2>&1 \\\n-\t     && $gcc_cv_ld -e 0 -o conftest conftest.o > /dev/null 2>&1 \\\n+\t     && $gcc_cv_ld -o conftest conftest.o > /dev/null 2>&1 \\\n \t     && $gcc_cv_objdump -s -j .init_array conftest \\\n \t\t| grep HHHHFFFFDDDDBBBB > /dev/null 2>&1 \\\n \t     && $gcc_cv_objdump -s -j .fini_array conftest \\\n@@ -22440,17 +22461,41 @@ EOF\n /* end confdefs.h.  */\n \n #ifndef __ELF__\n-#error Not an ELF OS\n+# error Not an ELF OS\n #endif\n #include <stdlib.h>\n-#if defined __GLIBC_PREREQ && __GLIBC_PREREQ (2, 4)\n+#if defined __GLIBC_PREREQ\n+# if __GLIBC_PREREQ (2, 4)\n+# else\n+#  error GLIBC 2.4 required\n+# endif\n #else\n-#error The C library not known to support .init_array/.fini_array\n+# if defined __sun__ && defined __svr4__\n+   /* Solaris ld.so.1 supports .init_array/.fini_array since Solaris 8.  */\n+# else\n+#  error The C library not known to support .init_array/.fini_array\n+# endif\n #endif\n \n _ACEOF\n if ac_fn_c_try_cpp \"$LINENO\"; then :\n \n+    case \"${target}\" in\n+      *-*-solaris2.8*)\n+\t# .init_array/.fini_array support was introduced in Solaris 8\n+\t# patches 109147-08 (sparc) and 109148-08 (x86).  Since ld.so.1 and\n+\t# ld are guaranteed to be updated in lockstep, we can check ld -V\n+\t# instead.  Unfortunately, proper ld version numbers were only\n+\t# introduced in rev. -14, so we check for that.\n+  \tif test \"$gcc_cv_sun_ld_vers_minor\" -lt 272; then\n+\t  gcc_cv_initfini_array=no\n+\tfi\n+      ;;\n+      *-*-solaris2.9* | *-*-solaris2.1[0-9]*)\n+        # .init_array/.fini_array support is present since Solaris 9 FCS.\n+        ;;\n+    esac\n+\n else\n   gcc_cv_initfini_array=no\n fi"}, {"sha": "97be57b83e3fd9d3668a8a3b6dbe75f9971bd8a7", "filename": "gcc/configure.ac", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e992fc2e5d6ece7463384caa8c1e0a70cfe57e91/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e992fc2e5d6ece7463384caa8c1e0a70cfe57e91/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=e992fc2e5d6ece7463384caa8c1e0a70cfe57e91", "patch": "@@ -2296,15 +2296,11 @@ if test $in_tree_ld != yes ; then\n   else\n     case \"${target}\" in\n       *-*-solaris2*)\n+\t# See acinclude.m4 (gcc_SUN_LD_VERSION) for the version number\n+\t# format.\n \t#\n-\t# Solaris 2 ld -V output looks like this for a regular version:\n-\t#\n-\t# ld: Software Generation Utilities - Solaris Link Editors: 5.11-1.1699\n-\t#\n-\t# but test versions add stuff at the end:\n-\t#\n-\t# ld: Software Generation Utilities - Solaris Link Editors: 5.11-1.1701:onnv-ab196087-6931056-03/25/10\n-\t#\n+\t# Don't reuse gcc_gv_sun_ld_vers_* in case a linker other than\n+\t# /usr/ccs/bin/ld has been configured.\n \tld_ver=`$gcc_cv_ld -V 2>&1`\n \tif echo \"$ld_ver\" | grep 'Solaris Link Editors' > /dev/null; then\n \t  ld_vers=`echo $ld_ver | sed -n \\"}, {"sha": "79c81fa79910c4269889e245c9197b6074859651", "filename": "gcc/varasm.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e992fc2e5d6ece7463384caa8c1e0a70cfe57e91/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e992fc2e5d6ece7463384caa8c1e0a70cfe57e91/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=e992fc2e5d6ece7463384caa8c1e0a70cfe57e91", "patch": "@@ -7658,24 +7658,24 @@ get_elf_initfini_array_priority_section (int priority,\n       sprintf (buf, \"%s.%.5u\", \n \t       constructor_p ? \".init_array\" : \".fini_array\",\n \t       priority);\n-      sec = get_section (buf, SECTION_WRITE, NULL_TREE);\n+      sec = get_section (buf, SECTION_WRITE | SECTION_NOTYPE, NULL_TREE);\n     }\n   else\n     {\n       if (constructor_p)\n \t{\n \t  if (elf_init_array_section == NULL)\n \t    elf_init_array_section\n-\t      = get_unnamed_section (0, output_section_asm_op,\n-\t\t\t\t     \"\\t.section\\t.init_array\");\n+\t      = get_section (\".init_array\",\n+\t\t\t     SECTION_WRITE | SECTION_NOTYPE, NULL_TREE);\n \t  sec = elf_init_array_section;\n \t}\n       else\n \t{\n \t  if (elf_fini_array_section == NULL)\n \t    elf_fini_array_section\n-\t      = get_unnamed_section (0, output_section_asm_op,\n-\t\t\t\t     \"\\t.section\\t.fini_array\");\n+\t      = get_section (\".fini_array\",\n+\t\t\t     SECTION_WRITE | SECTION_NOTYPE, NULL_TREE);\n \t  sec = elf_fini_array_section;\n \t}\n     }"}]}