{"sha": "eafa7a907b88719f2cb6cfa8addd5accf55310e5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWFmYTdhOTA3Yjg4NzE5ZjJjYjZjZmE4YWRkZDVhY2NmNTUzMTBlNQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-09-29T14:35:58Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2017-09-29T14:35:58Z"}, "message": "debug/elf: support 32-bit SPARC relocs\n    \n    Patch by Rainer Orth.\n    \n    Reviewed-on: https://go-review.googlesource.com/67111\n\nFrom-SVN: r253292", "tree": {"sha": "28b5d1ee27484b0b28463ab62b38b9cf33fa8088", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/28b5d1ee27484b0b28463ab62b38b9cf33fa8088"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/eafa7a907b88719f2cb6cfa8addd5accf55310e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eafa7a907b88719f2cb6cfa8addd5accf55310e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eafa7a907b88719f2cb6cfa8addd5accf55310e5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eafa7a907b88719f2cb6cfa8addd5accf55310e5/comments", "author": null, "committer": null, "parents": [{"sha": "039073944d46918f540461555d79de357cf9dfe9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/039073944d46918f540461555d79de357cf9dfe9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/039073944d46918f540461555d79de357cf9dfe9"}], "stats": {"total": 44, "additions": 43, "deletions": 1}, "files": [{"sha": "07cde8979ccd99523e58b8449634564b03074120", "filename": "gcc/go/gofrontend/MERGE", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eafa7a907b88719f2cb6cfa8addd5accf55310e5/gcc%2Fgo%2Fgofrontend%2FMERGE", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eafa7a907b88719f2cb6cfa8addd5accf55310e5/gcc%2Fgo%2Fgofrontend%2FMERGE", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgofrontend%2FMERGE?ref=eafa7a907b88719f2cb6cfa8addd5accf55310e5", "patch": "@@ -1,4 +1,4 @@\n-9a9d526a4c0a7f5b3635034b3e1dc3bbe6380dd2\n+5989ef1cd0add98f107839759a5bc57f34354d39\n \n The first line of this file holds the git revision number of the last\n merge done from the gofrontend repository."}, {"sha": "b415bb1bbc9e5d1aebb937e13ee9805597ccee95", "filename": "libgo/go/debug/elf/file.go", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/eafa7a907b88719f2cb6cfa8addd5accf55310e5/libgo%2Fgo%2Fdebug%2Felf%2Ffile.go", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/eafa7a907b88719f2cb6cfa8addd5accf55310e5/libgo%2Fgo%2Fdebug%2Felf%2Ffile.go", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgo%2Fgo%2Fdebug%2Felf%2Ffile.go?ref=eafa7a907b88719f2cb6cfa8addd5accf55310e5", "patch": "@@ -600,6 +600,8 @@ func (f *File) applyRelocations(dst []byte, rels []byte) error {\n \t\treturn f.applyRelocationsMIPS64(dst, rels)\n \tcase f.Class == ELFCLASS64 && f.Machine == EM_S390:\n \t\treturn f.applyRelocationss390x(dst, rels)\n+\tcase f.Class == ELFCLASS32 && (f.Machine == EM_SPARC || f.Machine == EM_SPARC32PLUS):\n+\t\treturn f.applyRelocationsSPARC(dst, rels)\n \tcase f.Class == ELFCLASS64 && f.Machine == EM_SPARCV9:\n \t\treturn f.applyRelocationsSPARC64(dst, rels)\n \tcase f.Class == ELFCLASS64 && f.Machine == EM_ALPHA:\n@@ -1006,6 +1008,46 @@ func (f *File) applyRelocationss390x(dst []byte, rels []byte) error {\n \treturn nil\n }\n \n+func (f *File) applyRelocationsSPARC(dst []byte, rels []byte) error {\n+\t// 12 is the size of Rela32.\n+\tif len(rels)%12 != 0 {\n+\t\treturn errors.New(\"length of relocation section is not a multiple of 12\")\n+\t}\n+\n+\tsymbols, _, err := f.getSymbols(SHT_SYMTAB)\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\n+\tb := bytes.NewReader(rels)\n+\tvar rela Rela32\n+\n+\tfor b.Len() > 0 {\n+\t\tbinary.Read(b, f.ByteOrder, &rela)\n+\t\tsymNo := rela.Info >> 32\n+\t\tt := R_SPARC(rela.Info & 0xff)\n+\n+\t\tif symNo == 0 || symNo > uint32(len(symbols)) {\n+\t\t\tcontinue\n+\t\t}\n+\t\tsym := &symbols[symNo-1]\n+\t\tif SymType(sym.Info&0xf) != STT_SECTION {\n+\t\t\t// We don't handle non-section relocations for now.\n+\t\t\tcontinue\n+\t\t}\n+\n+\t\tswitch t {\n+\t\tcase R_SPARC_32, R_SPARC_UA32:\n+\t\t\tif rela.Off+4 >= uint32(len(dst)) || rela.Addend < 0 {\n+\t\t\t\tcontinue\n+\t\t\t}\n+\t\t\tf.ByteOrder.PutUint32(dst[rela.Off:rela.Off+4], uint32(rela.Addend))\n+\t\t}\n+\t}\n+\n+\treturn nil\n+}\n+\n func (f *File) applyRelocationsSPARC64(dst []byte, rels []byte) error {\n \t// 24 is the size of Rela64.\n \tif len(rels)%24 != 0 {"}]}