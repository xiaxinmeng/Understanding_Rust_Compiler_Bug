{"sha": "23977d3c07433cbceff3eb647e46baa261349287", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjM5NzdkM2MwNzQzM2NiY2VmZjNlYjY0N2U0NmJhYTI2MTM0OTI4Nw==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-05-26T11:41:34Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-05-26T11:41:34Z"}, "message": "re PR middle-end/40252 (Internal compiler error on samba4 (verify_gimple failed))\n\n2009-05-26  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/40252\n\t* fold-const.c (fold_binary): Use the correct types for building\n\trotates.\n\n\t* gcc.c-torture/compile/pr40252.c: New testcase.\n\nFrom-SVN: r147868", "tree": {"sha": "40d4b90d9d6913f1be053d04febca0a04231704d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/40d4b90d9d6913f1be053d04febca0a04231704d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/23977d3c07433cbceff3eb647e46baa261349287", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23977d3c07433cbceff3eb647e46baa261349287", "html_url": "https://github.com/Rust-GCC/gccrs/commit/23977d3c07433cbceff3eb647e46baa261349287", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/23977d3c07433cbceff3eb647e46baa261349287/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3d62b8954fa7186367425da751f8d8626077f09d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d62b8954fa7186367425da751f8d8626077f09d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d62b8954fa7186367425da751f8d8626077f09d"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "58db4fa25cc951939740b0f38df71ee5a93f05ae", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23977d3c07433cbceff3eb647e46baa261349287/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23977d3c07433cbceff3eb647e46baa261349287/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=23977d3c07433cbceff3eb647e46baa261349287", "patch": "@@ -1,3 +1,10 @@\n+2009-05-26  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/40122\n+\t* tree-ssa-ccp.c (ccp_fold): Fold vector CONSTRUCTORs to\n+\tVECTOR_CSTs if possible.\n+\t(fold_gimple_assign): Likewise.\n+\n 2009-05-26  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/40252"}, {"sha": "fb6eb4da209c375522de7ab905db90311634d395", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/23977d3c07433cbceff3eb647e46baa261349287/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/23977d3c07433cbceff3eb647e46baa261349287/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=23977d3c07433cbceff3eb647e46baa261349287", "patch": "@@ -958,6 +958,30 @@ ccp_fold (gimple stmt)\n \t\t\t}\n \t\t    }\n \t\t}\n+\t      else if (TREE_CODE (rhs) == CONSTRUCTOR\n+\t\t       && TREE_CODE (TREE_TYPE (rhs)) == VECTOR_TYPE\n+\t\t       && (CONSTRUCTOR_NELTS (rhs)\n+\t\t\t   == TYPE_VECTOR_SUBPARTS (TREE_TYPE (rhs))))\n+\t\t{\n+\t\t  unsigned i;\n+\t\t  tree val, list;\n+\n+\t\t  list = NULL_TREE;\n+\t\t  FOR_EACH_CONSTRUCTOR_VALUE (CONSTRUCTOR_ELTS (rhs), i, val)\n+\t\t    {\n+\t\t      if (TREE_CODE (val) == SSA_NAME\n+\t\t\t  && get_value (val)->lattice_val == CONSTANT)\n+\t\t\tval = get_value (val)->value;\n+\t\t      if (TREE_CODE (val) == INTEGER_CST\n+\t\t\t  || TREE_CODE (val) == REAL_CST\n+\t\t\t  || TREE_CODE (val) == FIXED_CST)\n+\t\t\tlist = tree_cons (NULL_TREE, val, list);\n+\t\t      else\n+\t\t\treturn NULL_TREE;\n+\t\t    }\n+\n+\t\t  return build_vector (TREE_TYPE (rhs), nreverse (list));\n+\t\t}\n \n               if (kind == tcc_reference)\n \t\t{\n@@ -2654,6 +2678,25 @@ fold_gimple_assign (gimple_stmt_iterator *si)\n \t\t\t\t     build_fold_addr_expr (tem));\n \t  }\n \n+\telse if (TREE_CODE (rhs) == CONSTRUCTOR\n+\t\t && TREE_CODE (TREE_TYPE (rhs)) == VECTOR_TYPE\n+\t\t && (CONSTRUCTOR_NELTS (rhs)\n+\t\t     == TYPE_VECTOR_SUBPARTS (TREE_TYPE (rhs))))\n+\t  {\n+\t    /* Fold a constant vector CONSTRUCTOR to VECTOR_CST.  */\n+\t    unsigned i;\n+\t    tree val;\n+\n+\t    FOR_EACH_CONSTRUCTOR_VALUE (CONSTRUCTOR_ELTS (rhs), i, val)\n+\t      if (TREE_CODE (val) != INTEGER_CST\n+\t\t  && TREE_CODE (val) != REAL_CST\n+\t\t  && TREE_CODE (val) != FIXED_CST)\n+\t\treturn NULL_TREE;\n+\n+\t    return build_vector_from_ctor (TREE_TYPE (rhs),\n+\t\t\t\t\t   CONSTRUCTOR_ELTS (rhs));\n+\t  }\n+\n         /* If we couldn't fold the RHS, hand over to the generic\n            fold routines.  */\n         if (result == NULL_TREE)"}]}