{"sha": "22fe0312b3782144a26aa1ca3769e0af883069a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJmZTAzMTJiMzc4MjE0NGEyNmFhMWNhMzc2OWUwYWY4ODMwNjlhMA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-03-01T12:52:19Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-03-01T12:52:19Z"}, "message": "re PR tree-optimization/89541 (ICE in VN_INFO(tree_node*))\n\n2019-03-01  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/89541\n\t* tree-ssa-operands.c (add_stmt_operand): CONST_DECL may\n\tget virtual operands.\n\t(get_expr_operands): Handle CONST_DECL like other decls.\n\n\t* gfortran.dg/pr89451.f90: New testcase.\n\nFrom-SVN: r269307", "tree": {"sha": "5e2c23b800eebe5e0b51af8a9019f894276eb296", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e2c23b800eebe5e0b51af8a9019f894276eb296"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22fe0312b3782144a26aa1ca3769e0af883069a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22fe0312b3782144a26aa1ca3769e0af883069a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22fe0312b3782144a26aa1ca3769e0af883069a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22fe0312b3782144a26aa1ca3769e0af883069a0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "9503d7b1ffd205eac2fbb6418578972f5f428b9f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9503d7b1ffd205eac2fbb6418578972f5f428b9f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9503d7b1ffd205eac2fbb6418578972f5f428b9f"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "be1cbe574446955f6e458a3eaf2f7eded1f0a678", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22fe0312b3782144a26aa1ca3769e0af883069a0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22fe0312b3782144a26aa1ca3769e0af883069a0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22fe0312b3782144a26aa1ca3769e0af883069a0", "patch": "@@ -1,3 +1,10 @@\n+2019-03-01  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/89541\n+\t* tree-ssa-operands.c (add_stmt_operand): CONST_DECL may\n+\tget virtual operands.\n+\t(get_expr_operands): Handle CONST_DECL like other decls.\n+\n 2019-03-01  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/89503"}, {"sha": "f6a8e6a44383955df2a5da71a69e48302bbb03c7", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22fe0312b3782144a26aa1ca3769e0af883069a0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22fe0312b3782144a26aa1ca3769e0af883069a0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=22fe0312b3782144a26aa1ca3769e0af883069a0", "patch": "@@ -1,3 +1,8 @@\n+2019-03-01  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/89541\n+\t* gfortran.dg/pr89451.f90: New testcase.\n+\n 2019-03-01  Richard Biener  <rguenther@suse.de>\n \n \tPR middle-end/89497"}, {"sha": "e751488d2248f444781c4f09e3cf3add1cc171af", "filename": "gcc/testsuite/gfortran.dg/pr89451.f90", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22fe0312b3782144a26aa1ca3769e0af883069a0/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89451.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22fe0312b3782144a26aa1ca3769e0af883069a0/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89451.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr89451.f90?ref=22fe0312b3782144a26aa1ca3769e0af883069a0", "patch": "@@ -0,0 +1,11 @@\n+! { dg-do compile }\n+! { dg-options \"-O2\" }\n+program lh\n+  call za(0)\n+  call za(0)\n+contains\n+  subroutine za(wl)\n+    integer wl\n+    wl = 1\n+  end subroutine za\n+end program lh"}, {"sha": "899d47ff588d504697321cf699c1a2cb7cf965bb", "filename": "gcc/tree-ssa-operands.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22fe0312b3782144a26aa1ca3769e0af883069a0/gcc%2Ftree-ssa-operands.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22fe0312b3782144a26aa1ca3769e0af883069a0/gcc%2Ftree-ssa-operands.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-operands.c?ref=22fe0312b3782144a26aa1ca3769e0af883069a0", "patch": "@@ -515,7 +515,9 @@ add_stmt_operand (struct function *fn, tree *var_p, gimple *stmt, int flags)\n {\n   tree var = *var_p;\n \n-  gcc_assert (SSA_VAR_P (*var_p) || TREE_CODE (*var_p) == STRING_CST);\n+  gcc_assert (SSA_VAR_P (*var_p)\n+\t      || TREE_CODE (*var_p) == STRING_CST\n+\t      || TREE_CODE (*var_p) == CONST_DECL);\n \n   if (is_gimple_reg (var))\n     {\n@@ -741,6 +743,7 @@ get_expr_operands (struct function *fn, gimple *stmt, tree *expr_p, int flags)\n     case PARM_DECL:\n     case RESULT_DECL:\n     case STRING_CST:\n+    case CONST_DECL:\n       if (!(flags & opf_address_taken))\n \tadd_stmt_operand (fn, expr_p, stmt, flags);\n       return;\n@@ -859,7 +862,6 @@ get_expr_operands (struct function *fn, gimple *stmt, tree *expr_p, int flags)\n \n     case FUNCTION_DECL:\n     case LABEL_DECL:\n-    case CONST_DECL:\n     case CASE_LABEL_EXPR:\n       /* Expressions that make no memory references.  */\n       return;"}]}