{"sha": "cdf4576b201aa81fd853b06242b16e4215ead5a9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2RmNDU3NmIyMDFhYTgxZmQ4NTNiMDYyNDJiMTZlNDIxNWVhZDVhOQ==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-07-01T15:57:16Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2021-07-01T16:13:12Z"}, "message": "Use intermediate integer type with proper signedness\n\nThis is a minor regression present on mainline and 11 branch, whereby the\nvalue of the Enum_Rep attribute is always unsigned.\n\ngcc/ada/\n\tPR ada/101094\n\t* exp_attr.adb (Get_Integer_Type): Return an integer type with the\n\tsame signedness as the input type.", "tree": {"sha": "7152f3be0aa3bb31cd5f33a43da9bbe69eaf8dd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7152f3be0aa3bb31cd5f33a43da9bbe69eaf8dd7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cdf4576b201aa81fd853b06242b16e4215ead5a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdf4576b201aa81fd853b06242b16e4215ead5a9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cdf4576b201aa81fd853b06242b16e4215ead5a9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cdf4576b201aa81fd853b06242b16e4215ead5a9/comments", "author": null, "committer": null, "parents": [{"sha": "cc8453012f75dc6dbd20bf3a94c4819a2bff46db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc8453012f75dc6dbd20bf3a94c4819a2bff46db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc8453012f75dc6dbd20bf3a94c4819a2bff46db"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "af7f205d50ce6136a3bdc3ae762c0f491237c1ba", "filename": "gcc/ada/exp_attr.adb", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cdf4576b201aa81fd853b06242b16e4215ead5a9/gcc%2Fada%2Fexp_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cdf4576b201aa81fd853b06242b16e4215ead5a9/gcc%2Fada%2Fexp_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_attr.adb?ref=cdf4576b201aa81fd853b06242b16e4215ead5a9", "patch": "@@ -1851,14 +1851,13 @@ package body Exp_Attr is\n       ----------------------\n \n       function Get_Integer_Type (Typ : Entity_Id) return Entity_Id is\n-         Siz     : constant Uint := Esize (Base_Type (Typ));\n+         Siz : constant Uint := Esize (Base_Type (Typ));\n \n       begin\n          --  We need to accommodate invalid values of the base type since we\n-         --  accept them for Enum_Rep and Pos, so we reason on the Esize. And\n-         --  we use an unsigned type since the enumeration type is unsigned.\n+         --  accept them for Enum_Rep and Pos, so we reason on the Esize.\n \n-         return Small_Integer_Type_For (Siz, Uns => True);\n+         return Small_Integer_Type_For (Siz, Uns => Is_Unsigned_Type (Typ));\n       end Get_Integer_Type;\n \n       ---------------------------------"}]}