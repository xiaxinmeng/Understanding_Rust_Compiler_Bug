{"sha": "bbb9c475bff9e3646542fa5273433abc0300cf6a", "node_id": "C_kwDOANBUbNoAKGJiYjljNDc1YmZmOWUzNjQ2NTQyZmE1MjczNDMzYWJjMDMwMGNmNmE", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2022-05-21T19:54:45Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-06-02T09:06:46Z"}, "message": "[Ada] Restore full generation of static dispatch tables with -gnatzr\n\nThe -gnatzr switch triggers the creation of distribution stubs for use\nby the implementation of PolyORB.  Now these stubs declare tagged types\nand are generated at the very end of the analysis of compilation units,\nafter the static dispatch tables have been built, so these tables are\nmissing for the tagged types of the stubs.\n\nTherefore this change defers the generation of static dispatch tables\nfor compilation units, which is the common case, until after the stubs\nare (potentially) generated.  For the other cases, in particular the\ngeneric instances that are not compilation units, nothing is changed.\n\ngcc/ada/\n\n\t* exp_ch7.adb (Expand_N_Package_Body): Build static dispatch\n\ttables only for units that are not compilation units, unless\n\tthey are generic instances.  Do not push a scope for this.\n\t(Expand_N_Package_Declaration): Build static dispatch tables\n\tonly for units that are both not compilation units and generic\n\tinstances.\n\t* exp_disp.adb (Build_Static_Dispatch_Tables): Remove redundant\n\tearly return.  Push a scope for package bodies.\n\t* sem_ch10.adb: Add with and use clauses for Exp_Disp.\n\t(Analyze_Compilation_Unit): Build static dispatch tables here.", "tree": {"sha": "bdd4dc384f1e2f1fcab16adab1c6b309d4607e2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bdd4dc384f1e2f1fcab16adab1c6b309d4607e2e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbb9c475bff9e3646542fa5273433abc0300cf6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbb9c475bff9e3646542fa5273433abc0300cf6a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbb9c475bff9e3646542fa5273433abc0300cf6a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbb9c475bff9e3646542fa5273433abc0300cf6a/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da7cd04339b4db1bfdc4846eca2df04deca1a9b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/da7cd04339b4db1bfdc4846eca2df04deca1a9b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/da7cd04339b4db1bfdc4846eca2df04deca1a9b2"}], "stats": {"total": 53, "additions": 38, "deletions": 15}, "files": [{"sha": "5f1c357a1258ba66058ac0c507a27814bc4bc419", "filename": "gcc/ada/exp_ch7.adb", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbb9c475bff9e3646542fa5273433abc0300cf6a/gcc%2Fada%2Fexp_ch7.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbb9c475bff9e3646542fa5273433abc0300cf6a/gcc%2Fada%2Fexp_ch7.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch7.adb?ref=bbb9c475bff9e3646542fa5273433abc0300cf6a", "patch": "@@ -5876,16 +5876,20 @@ package body Exp_Ch7 is\n       --  This is done only for non-generic packages\n \n       if Ekind (Spec_Id) = E_Package then\n-         Push_Scope (Spec_Id);\n-\n-         --  Build dispatch tables of library level tagged types\n+         --  Build dispatch tables of library-level tagged types for bodies\n+         --  that are not compilation units (see Analyze_Compilation_Unit),\n+         --  except for instances because they have no N_Compilation_Unit.\n \n          if Tagged_Type_Expansion\n            and then Is_Library_Level_Entity (Spec_Id)\n+           and then (not Is_Compilation_Unit (Spec_Id)\n+                      or else Is_Generic_Instance (Spec_Id))\n          then\n             Build_Static_Dispatch_Tables (N);\n          end if;\n \n+         Push_Scope (Spec_Id);\n+\n          Expand_CUDA_Package (N);\n \n          Build_Task_Activation_Call (N);\n@@ -6035,12 +6039,13 @@ package body Exp_Ch7 is\n          Pop_Scope;\n       end if;\n \n-      --  Build dispatch tables of library-level tagged types\n+      --  Build dispatch tables of library-level tagged types for instances\n+      --  that are not compilation units (see Analyze_Compilation_Unit).\n \n       if Tagged_Type_Expansion\n-        and then (Is_Compilation_Unit (Id)\n-                   or else (Is_Generic_Instance (Id)\n-                             and then Is_Library_Level_Entity (Id)))\n+        and then Is_Library_Level_Entity (Id)\n+        and then Is_Generic_Instance (Id)\n+        and then not Is_Compilation_Unit (Id)\n       then\n          Build_Static_Dispatch_Tables (N);\n       end if;"}, {"sha": "17043d15510ef6ee9afd371e2aad561adc57f495", "filename": "gcc/ada/exp_disp.adb", "status": "modified", "additions": 9, "deletions": 8, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbb9c475bff9e3646542fa5273433abc0300cf6a/gcc%2Fada%2Fexp_disp.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbb9c475bff9e3646542fa5273433abc0300cf6a/gcc%2Fada%2Fexp_disp.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_disp.adb?ref=bbb9c475bff9e3646542fa5273433abc0300cf6a", "patch": "@@ -524,12 +524,6 @@ package body Exp_Disp is\n    --  Start of processing for Build_Static_Dispatch_Tables\n \n    begin\n-      if not Expander_Active\n-        or else not Tagged_Type_Expansion\n-      then\n-         return;\n-      end if;\n-\n       if Nkind (N) = N_Package_Declaration then\n          declare\n             Spec       : constant Node_Id := Specification (N);\n@@ -553,8 +547,15 @@ package body Exp_Disp is\n          end;\n \n       else pragma Assert (Nkind (N) = N_Package_Body);\n-         Target_List := Declarations (N);\n-         Build_Dispatch_Tables (Target_List);\n+         declare\n+            Spec_Id : constant Entity_Id := Corresponding_Spec (N);\n+\n+         begin\n+            Push_Scope (Spec_Id);\n+            Target_List := Declarations (N);\n+            Build_Dispatch_Tables (Target_List);\n+            Pop_Scope;\n+         end;\n       end if;\n    end Build_Static_Dispatch_Tables;\n "}, {"sha": "9b9a9f147cc8d68a1c7f20d5b32b55a1cae79494", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbb9c475bff9e3646542fa5273433abc0300cf6a/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbb9c475bff9e3646542fa5273433abc0300cf6a/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=bbb9c475bff9e3646542fa5273433abc0300cf6a", "patch": "@@ -31,6 +31,7 @@ with Einfo;          use Einfo;\n with Einfo.Entities; use Einfo.Entities;\n with Einfo.Utils;    use Einfo.Utils;\n with Errout;         use Errout;\n+with Exp_Disp;       use Exp_Disp;\n with Exp_Put_Image;\n with Exp_Util;       use Exp_Util;\n with Elists;         use Elists;\n@@ -1000,6 +1001,22 @@ package body Sem_Ch10 is\n          end if;\n       end if;\n \n+      --  Build dispatch tables of library-level tagged types only now because\n+      --  the generation of distribution stubs above may create some of them.\n+\n+      if Expander_Active and then Tagged_Type_Expansion then\n+         case Nkind (Unit_Node) is\n+            when N_Package_Declaration | N_Package_Body =>\n+               Build_Static_Dispatch_Tables (Unit_Node);\n+\n+            when N_Package_Instantiation =>\n+               Build_Static_Dispatch_Tables (Instance_Spec (Unit_Node));\n+\n+            when others =>\n+               null;\n+         end case;\n+      end if;\n+\n       --  Remove unit from visibility, so that environment is clean for the\n       --  next compilation, which is either the main unit or some other unit\n       --  in the context."}]}