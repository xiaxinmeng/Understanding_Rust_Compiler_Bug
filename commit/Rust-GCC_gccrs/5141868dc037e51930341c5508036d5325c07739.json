{"sha": "5141868dc037e51930341c5508036d5325c07739", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTE0MTg2OGRjMDM3ZTUxOTMwMzQxYzU1MDgwMzZkNTMyNWMwNzczOQ==", "commit": {"author": {"name": "Richard Sandiford", "email": "rsandifo@nildram.co.uk", "date": "2007-12-19T09:54:45Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2007-12-19T09:54:45Z"}, "message": "tree.h (set_decl_incoming_rtl): Add a by_reference_p parameter.\n\ngcc/\n\t* tree.h (set_decl_incoming_rtl): Add a by_reference_p parameter.\n\t* emit-rtl.c (set_decl_incoming_rtl): Likewise.  Don't set the\n\trtl's register attributes when the parameter is true.\n\t* function.c (assign_parms_unsplit_complex, assign_parms)\n\t(expand_function_start): Update calls to set_decl_incoming_rtl.\n\nFrom-SVN: r131056", "tree": {"sha": "17ce9f5e0742715972a8b242c6ca3b4906f47ad4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/17ce9f5e0742715972a8b242c6ca3b4906f47ad4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5141868dc037e51930341c5508036d5325c07739", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5141868dc037e51930341c5508036d5325c07739", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5141868dc037e51930341c5508036d5325c07739", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5141868dc037e51930341c5508036d5325c07739/comments", "author": null, "committer": null, "parents": [{"sha": "38ae7651154a39bdeb2638762fa70c042e3d24b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38ae7651154a39bdeb2638762fa70c042e3d24b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38ae7651154a39bdeb2638762fa70c042e3d24b6"}], "stats": {"total": 25, "additions": 17, "deletions": 8}, "files": [{"sha": "46b29f081b1e0e1f49100071c50469b9ea7312ca", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5141868dc037e51930341c5508036d5325c07739/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5141868dc037e51930341c5508036d5325c07739/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5141868dc037e51930341c5508036d5325c07739", "patch": "@@ -1,3 +1,11 @@\n+2007-12-19  Richard Sandiford  <rsandifo@nildram.co.uk>\n+\n+\t* tree.h (set_decl_incoming_rtl): Add a by_reference_p parameter.\n+\t* emit-rtl.c (set_decl_incoming_rtl): Likewise.  Don't set the\n+\trtl's register attributes when the parameter is true.\n+\t* function.c (assign_parms_unsplit_complex, assign_parms)\n+\t(expand_function_start): Update calls to set_decl_incoming_rtl.\n+\n 2007-12-19  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* rtl.def (SUBREG): Update comments."}, {"sha": "5a2aede40ddc740601896073da727c37d5182cc7", "filename": "gcc/emit-rtl.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5141868dc037e51930341c5508036d5325c07739/gcc%2Femit-rtl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5141868dc037e51930341c5508036d5325c07739/gcc%2Femit-rtl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Femit-rtl.c?ref=5141868dc037e51930341c5508036d5325c07739", "patch": "@@ -1045,13 +1045,14 @@ set_decl_rtl (tree t, rtx x)\n     set_reg_attrs_for_decl_rtl (t, x);\n }\n \n-/* Assign the RTX X to parameter declaration T.  */\n+/* Assign the RTX X to parameter declaration T.  BY_REFERENCE_P is true\n+   if the ABI requires the parameter to be passed by reference.  */\n \n void\n-set_decl_incoming_rtl (tree t, rtx x)\n+set_decl_incoming_rtl (tree t, rtx x, bool by_reference_p)\n {\n   DECL_INCOMING_RTL (t) = x;\n-  if (x)\n+  if (x && !by_reference_p)\n     set_reg_attrs_for_decl_rtl (t, x);\n }\n "}, {"sha": "d89a04059246ae0dec3e8c28fe0d243941282694", "filename": "gcc/function.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5141868dc037e51930341c5508036d5325c07739/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5141868dc037e51930341c5508036d5325c07739/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=5141868dc037e51930341c5508036d5325c07739", "patch": "@@ -2973,13 +2973,13 @@ assign_parms_unsplit_complex (struct assign_parm_data_all *all, tree fnargs)\n \t      imag = gen_lowpart_SUBREG (inner, imag);\n \t    }\n \t  tmp = gen_rtx_CONCAT (DECL_MODE (parm), real, imag);\n-\t  set_decl_incoming_rtl (parm, tmp);\n+\t  set_decl_incoming_rtl (parm, tmp, false);\n \t  fnargs = TREE_CHAIN (fnargs);\n \t}\n       else\n \t{\n \t  SET_DECL_RTL (parm, DECL_RTL (fnargs));\n-\t  set_decl_incoming_rtl (parm, DECL_INCOMING_RTL (fnargs));\n+\t  set_decl_incoming_rtl (parm, DECL_INCOMING_RTL (fnargs), false);\n \n \t  /* Set MEM_EXPR to the original decl, i.e. to PARM,\n \t     instead of the copy of decl, i.e. FNARGS.  */\n@@ -3035,7 +3035,7 @@ assign_parms (tree fndecl)\n \t}\n \n       /* Record permanently how this parm was passed.  */\n-      set_decl_incoming_rtl (parm, data.entry_parm);\n+      set_decl_incoming_rtl (parm, data.entry_parm, data.passed_pointer);\n \n       /* Update info on where next arg arrives in registers.  */\n       FUNCTION_ARG_ADVANCE (all.args_so_far, data.promoted_mode,\n@@ -4259,7 +4259,7 @@ expand_function_start (tree subr)\n       tree parm = cfun->static_chain_decl;\n       rtx local = gen_reg_rtx (Pmode);\n \n-      set_decl_incoming_rtl (parm, static_chain_incoming_rtx);\n+      set_decl_incoming_rtl (parm, static_chain_incoming_rtx, false);\n       SET_DECL_RTL (parm, local);\n       mark_reg_pointer (local, TYPE_ALIGN (TREE_TYPE (TREE_TYPE (parm))));\n "}, {"sha": "f61085da3d34ee885b4edb3f56f377a1c17dd6ff", "filename": "gcc/tree.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5141868dc037e51930341c5508036d5325c07739/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5141868dc037e51930341c5508036d5325c07739/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=5141868dc037e51930341c5508036d5325c07739", "patch": "@@ -5135,7 +5135,7 @@ extern tree walk_tree_without_duplicates_1 (tree*, walk_tree_fn, void*,\n /* Assign the RTX to declaration.  */\n \n extern void set_decl_rtl (tree, rtx);\n-extern void set_decl_incoming_rtl (tree, rtx);\n+extern void set_decl_incoming_rtl (tree, rtx, bool);\n \f\n /* Enum and arrays used for tree allocation stats.\n    Keep in sync with tree.c:tree_node_kind_names.  */"}]}