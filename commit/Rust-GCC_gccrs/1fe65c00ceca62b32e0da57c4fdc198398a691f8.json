{"sha": "1fe65c00ceca62b32e0da57c4fdc198398a691f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZlNjVjMDBjZWNhNjJiMzJlMGRhNTdjNGZkYzE5ODM5OGE2OTFmOA==", "commit": {"author": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1998-10-14T16:15:09Z"}, "committer": {"name": "Per Bothner", "email": "bothner@gcc.gnu.org", "date": "1998-10-14T16:15:09Z"}, "message": "toplev.c: If flag_syntax_only, don't open or write assembler file.\n\n\ufffd\n\t* toplev.c:  If flag_syntax_only, don't open or write assembler file.\n\nFrom-SVN: r23088", "tree": {"sha": "ac4700689c7a1eadfb294d4782bb92b612ec220b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac4700689c7a1eadfb294d4782bb92b612ec220b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fe65c00ceca62b32e0da57c4fdc198398a691f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fe65c00ceca62b32e0da57c4fdc198398a691f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fe65c00ceca62b32e0da57c4fdc198398a691f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fe65c00ceca62b32e0da57c4fdc198398a691f8/comments", "author": null, "committer": null, "parents": [{"sha": "b9f7e36ca11532cc83c391bf6fdca7071d8618ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b9f7e36ca11532cc83c391bf6fdca7071d8618ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b9f7e36ca11532cc83c391bf6fdca7071d8618ce"}], "stats": {"total": 88, "additions": 53, "deletions": 35}, "files": [{"sha": "d5c335dbbb7f1829b1a6d0b64162262b9df90ce1", "filename": "gcc/toplev.c", "status": "modified", "additions": 53, "deletions": 35, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fe65c00ceca62b32e0da57c4fdc198398a691f8/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fe65c00ceca62b32e0da57c4fdc198398a691f8/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=1fe65c00ceca62b32e0da57c4fdc198398a691f8", "patch": "@@ -2637,32 +2637,37 @@ compile_file (name)\n \n   /* Open assembler code output file.  */\n \n-  if (! name_specified && asm_file_name == 0)\n-    asm_out_file = stdout;\n+  if (flag_syntax_only)\n+    asm_out_file = NULL;\n   else\n     {\n-      int len = strlen (dump_base_name);\n-      register char *dumpname = (char *) xmalloc (len + 6);\n-      strcpy (dumpname, dump_base_name);\n-      strip_off_ending (dumpname, len);\n-      strcat (dumpname, \".s\");\n-      if (asm_file_name == 0)\n-\t{\n-\t  asm_file_name = (char *) xmalloc (strlen (dumpname) + 1);\n-\t  strcpy (asm_file_name, dumpname);\n-\t}\n-      if (!strcmp (asm_file_name, \"-\"))\n+      if (! name_specified && asm_file_name == 0)\n \tasm_out_file = stdout;\n       else\n-\tasm_out_file = fopen (asm_file_name, \"w\");\n-      if (asm_out_file == 0)\n-\tpfatal_with_name (asm_file_name);\n-    }\n+\t{\n+\t  int len = strlen (dump_base_name);\n+\t  register char *dumpname = (char *) xmalloc (len + 6);\n+\t  strcpy (dumpname, dump_base_name);\n+\t  strip_off_ending (dumpname, len);\n+\t  strcat (dumpname, \".s\");\n+\t  if (asm_file_name == 0)\n+\t    {\n+\t      asm_file_name = (char *) xmalloc (strlen (dumpname) + 1);\n+\t      strcpy (asm_file_name, dumpname);\n+\t    }\n+\t  if (!strcmp (asm_file_name, \"-\"))\n+\t    asm_out_file = stdout;\n+\t  else\n+\t    asm_out_file = fopen (asm_file_name, \"w\");\n+\t  if (asm_out_file == 0)\n+\t    pfatal_with_name (asm_file_name);\n+\t}\n \n #ifdef IO_BUFFER_SIZE\n-  setvbuf (asm_out_file, (char *) xmalloc (IO_BUFFER_SIZE),\n-\t   _IOFBF, IO_BUFFER_SIZE);\n+      setvbuf (asm_out_file, (char *) xmalloc (IO_BUFFER_SIZE),\n+\t       _IOFBF, IO_BUFFER_SIZE);\n #endif\n+    }\n \n   input_filename = name;\n \n@@ -2681,32 +2686,41 @@ compile_file (name)\n   if (main_input_filename == 0)\n     main_input_filename = name;\n \n-  ASM_FILE_START (asm_out_file);\n+  if (flag_syntax_only)\n+    {\n+      write_symbols = NO_DEBUG;\n+      profile_flag = 0;\n+      profile_block_flag = 0;\n+    }\n+  else\n+    {\n+      ASM_FILE_START (asm_out_file);\n \n #ifdef ASM_COMMENT_START\n-  if (flag_verbose_asm)\n-    {\n-      /* Print the list of options in effect.  */\n-      print_version (asm_out_file, ASM_COMMENT_START);\n-      print_switch_values (asm_out_file, 0, MAX_LINE,\n+      if (flag_verbose_asm)\n+\t{\n+\t  /* Print the list of options in effect.  */\n+\t  print_version (asm_out_file, ASM_COMMENT_START);\n+\t  print_switch_values (asm_out_file, 0, MAX_LINE,\n \t\t\t       ASM_COMMENT_START, \" \", \"\\n\");\n-      /* Add a blank line here so it appears in assembler output but not\n-\t screen output.  */\n-      fprintf (asm_out_file, \"\\n\");\n-    }\n+\t  /* Add a blank line here so it appears in assembler output but not\n+\t     screen output.  */\n+\t  fprintf (asm_out_file, \"\\n\");\n+\t}\n #endif\n \n-  /* Output something to inform GDB that this compilation was by GCC.  */\n+      /* Output something to inform GDB that this compilation was by GCC.  */\n #ifndef ASM_IDENTIFY_GCC\n-  fprintf (asm_out_file, \"gcc2_compiled.:\\n\");\n+      fprintf (asm_out_file, \"gcc2_compiled.:\\n\");\n #else\n-  ASM_IDENTIFY_GCC (asm_out_file);\n+      ASM_IDENTIFY_GCC (asm_out_file);\n #endif\n \n   /* Output something to identify which front-end produced this file.  */\n #ifdef ASM_IDENTIFY_LANGUAGE\n-  ASM_IDENTIFY_LANGUAGE (asm_out_file);\n+      ASM_IDENTIFY_LANGUAGE (asm_out_file);\n #endif\n+    } /* ! flag_syntax_only */\n \n #ifndef ASM_OUTPUT_SECTION_NAME\n   if (flag_function_sections)\n@@ -2809,6 +2823,9 @@ compile_file (name)\n   parse_time -= integration_time;\n   parse_time -= varconst_time;\n \n+  if (flag_syntax_only)\n+    goto finish_syntax;\n+\n   globals = getdecls ();\n \n   /* Really define vars that have had only a tentative definition.\n@@ -3051,7 +3068,7 @@ compile_file (name)\n #endif\n \n   /* Language-specific end of compilation actions.  */\n-\n+ finish_syntax:\n   lang_finish ();\n \n   /* Close the dump files.  */\n@@ -3076,7 +3093,8 @@ compile_file (name)\n \n   finish_parse ();\n \n-  if (ferror (asm_out_file) != 0 || fclose (asm_out_file) != 0)\n+  if (! flag_syntax_only\n+      && (ferror (asm_out_file) != 0 || fclose (asm_out_file) != 0))\n     fatal_io_error (asm_file_name);\n \n   /* Print the times.  */"}]}