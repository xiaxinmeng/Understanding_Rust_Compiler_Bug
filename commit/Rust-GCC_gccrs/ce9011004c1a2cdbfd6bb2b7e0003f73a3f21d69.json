{"sha": "ce9011004c1a2cdbfd6bb2b7e0003f73a3f21d69", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2U5MDExMDA0YzFhMmNkYmZkNmJiMmI3ZTAwMDNmNzNhM2YyMWQ2OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-07-09T18:50:28Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-07-09T18:50:28Z"}, "message": "re PR c++/57658 (ICE in tsubst_copy, at cp/pt.c:12213)\n\n\tPR c++/57658\n\t* semantics.c (finish_id_expression): Return the id for an\n\tunevaluated outer variable.\n\nFrom-SVN: r200845", "tree": {"sha": "5a2ab3c4f0da441cea8d116b0a52b337f82adfd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a2ab3c4f0da441cea8d116b0a52b337f82adfd4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce9011004c1a2cdbfd6bb2b7e0003f73a3f21d69", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce9011004c1a2cdbfd6bb2b7e0003f73a3f21d69", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce9011004c1a2cdbfd6bb2b7e0003f73a3f21d69", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce9011004c1a2cdbfd6bb2b7e0003f73a3f21d69/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d9fac9dd59fa8f8d646c98d21f6c874f11e608b5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9fac9dd59fa8f8d646c98d21f6c874f11e608b5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9fac9dd59fa8f8d646c98d21f6c874f11e608b5"}], "stats": {"total": 37, "additions": 30, "deletions": 7}, "files": [{"sha": "88ba7696732de4b0f1cb624c8fe8381c37894371", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9011004c1a2cdbfd6bb2b7e0003f73a3f21d69/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9011004c1a2cdbfd6bb2b7e0003f73a3f21d69/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ce9011004c1a2cdbfd6bb2b7e0003f73a3f21d69", "patch": "@@ -1,5 +1,9 @@\n 2013-07-09  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/57658\n+\t* semantics.c (finish_id_expression): Return the id for an\n+\tunevaluated outer variable.\n+\n \tPR c++/57526\n \t* semantics.c (lambda_capture_field_type): Build a DECLTYPE_TYPE\n \tif the variable type uses 'auto'."}, {"sha": "74a6a53dc447c3d21d9fe69e2a3869158b7eec0b", "filename": "gcc/cp/semantics.c", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9011004c1a2cdbfd6bb2b7e0003f73a3f21d69/gcc%2Fcp%2Fsemantics.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9011004c1a2cdbfd6bb2b7e0003f73a3f21d69/gcc%2Fcp%2Fsemantics.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsemantics.c?ref=ce9011004c1a2cdbfd6bb2b7e0003f73a3f21d69", "patch": "@@ -3056,15 +3056,15 @@ finish_id_expression (tree id_expression,\n \n       /* Disallow uses of local variables from containing functions, except\n \t within lambda-expressions.  */\n-      if (!outer_var_p (decl)\n-\t  /* It's not a use (3.2) if we're in an unevaluated context.  */\n-\t  || cp_unevaluated_operand)\n-\t/* OK.  */;\n-      else if (TREE_STATIC (decl))\n+      if (!outer_var_p (decl))\n+\t/* OK */;\n+      else if (TREE_STATIC (decl)\n+\t       /* It's not a use (3.2) if we're in an unevaluated context.  */\n+\t       || cp_unevaluated_operand)\n \t{\n \t  if (processing_template_decl)\n-\t    /* For a use of an outer static var, return the identifier so\n-\t       that we'll look it up again in the instantiation.  */\n+\t    /* For a use of an outer static/unevaluated var, return the id\n+\t       so that we'll look it up again in the instantiation.  */\n \t    return id_expression;\n \t}\n       else"}, {"sha": "635af97d763c70d267232fb6049eeec88d5d261c", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-template12.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce9011004c1a2cdbfd6bb2b7e0003f73a3f21d69/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-template12.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce9011004c1a2cdbfd6bb2b7e0003f73a3f21d69/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-template12.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-template12.C?ref=ce9011004c1a2cdbfd6bb2b7e0003f73a3f21d69", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/57568\n+// { dg-require-effective-target c++11 }\n+\n+template < class T >\n+struct remove_reference\n+{ typedef int type; };\n+template < class T >\n+class X\n+{\n+    enum Q { };\n+    bool f ()\n+    {\n+        Q a;\n+        [&a]{\n+            typename remove_reference < decltype (a) >::type t;\n+        };\n+    }\n+};\n+template class X< int >;"}]}