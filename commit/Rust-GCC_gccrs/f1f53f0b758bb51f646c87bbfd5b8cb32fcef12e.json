{"sha": "f1f53f0b758bb51f646c87bbfd5b8cb32fcef12e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjFmNTNmMGI3NThiYjUxZjY0NmM4N2JiZmQ1YjhjYjMyZmNlZjEyZQ==", "commit": {"author": {"name": "Jim Wilson", "email": "wilson@cygnus.com", "date": "1998-04-23T19:57:57Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "1998-04-23T19:57:57Z"}, "message": "Partial fix for problem reported by Don Bowman.\n\n\t* frame.c, libgcc2.c (stdlib.h, unistd.h): Don't include when\n\tinhibit_libc is defined.\n\nFrom-SVN: r19390", "tree": {"sha": "f01676351ff77df72f679339895344ec7eed8202", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f01676351ff77df72f679339895344ec7eed8202"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f1f53f0b758bb51f646c87bbfd5b8cb32fcef12e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1f53f0b758bb51f646c87bbfd5b8cb32fcef12e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f1f53f0b758bb51f646c87bbfd5b8cb32fcef12e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f1f53f0b758bb51f646c87bbfd5b8cb32fcef12e/comments", "author": null, "committer": null, "parents": [{"sha": "f5880dbeb0ed65793b55c721924f5385ec61ded1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f5880dbeb0ed65793b55c721924f5385ec61ded1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f5880dbeb0ed65793b55c721924f5385ec61ded1"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "dfb02184b090f1c14b784262586ff8ce9afdf381", "filename": "gcc/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1f53f0b758bb51f646c87bbfd5b8cb32fcef12e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1f53f0b758bb51f646c87bbfd5b8cb32fcef12e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f1f53f0b758bb51f646c87bbfd5b8cb32fcef12e", "patch": "@@ -1,5 +1,8 @@\n 1998-04-23  Jim Wilson  <wilson@cygnus.com>\n \n+\t* frame.c, libgcc2.c (stdlib.h, unistd.h): Don't include when\n+\tinhibit_libc is defined.\n+\n \t* c-aux-info.c (gen_type): Use DECL_NAME only for TYPE_DECL.\n \n Thu Apr 23 19:09:33 1998  Jim Wilson  <wilson@cygnus.com>"}, {"sha": "bde83d276f65ab8f579e8cc87078b521fd7527d6", "filename": "gcc/frame.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1f53f0b758bb51f646c87bbfd5b8cb32fcef12e/gcc%2Fframe.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1f53f0b758bb51f646c87bbfd5b8cb32fcef12e/gcc%2Fframe.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fframe.c?ref=f1f53f0b758bb51f646c87bbfd5b8cb32fcef12e", "patch": "@@ -33,9 +33,15 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"tconfig.h\"\n \n+/* We disable this when inhibit_libc, so that gcc can still be built without\n+   needing header files first.  */\n+/* ??? This is not a good solution, since prototypes may be required in\n+   some cases for correct code.  See also libgcc2.c.  */\n+#ifndef inhibit_libc\n /* fixproto guarantees these system headers exist. */\n #include <stdlib.h>\n #include <unistd.h>\n+#endif\n \n #include \"defaults.h\"\n "}, {"sha": "a1525baf26bb47e9949cabf070cdefb763f01605", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f1f53f0b758bb51f646c87bbfd5b8cb32fcef12e/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f1f53f0b758bb51f646c87bbfd5b8cb32fcef12e/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=f1f53f0b758bb51f646c87bbfd5b8cb32fcef12e", "patch": "@@ -32,9 +32,15 @@ Boston, MA 02111-1307, USA.  */\n \n #include \"tconfig.h\"\n \n+/* We disable this when inhibit_libc, so that gcc can still be built without\n+   needing header files first.  */\n+/* ??? This is not a good solution, since prototypes may be required in\n+   some cases for correct code.  See also frame.c.  */\n+#ifndef inhibit_libc\n /* fixproto guarantees these system headers exist. */\n #include <stdlib.h>\n #include <unistd.h>\n+#endif\n \n #include \"machmode.h\"\n #include \"defaults.h\" "}]}