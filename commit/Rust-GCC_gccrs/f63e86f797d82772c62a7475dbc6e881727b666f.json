{"sha": "f63e86f797d82772c62a7475dbc6e881727b666f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjYzZTg2Zjc5N2Q4Mjc3MmM2MmE3NDc1ZGJjNmU4ODE3MjdiNjY2Zg==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-08-31T15:30:01Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-08-31T16:36:12Z"}, "message": "libstdc++: Remove redundant noexcept-specifier on definitions\n\nThese destructors are noexcept anyway. I removed the redundant noexcept\nfrom the error_category destructor's declaration in r0-123475, but\ndidn't remove it from the defaulted definition in system_error.cc. That\ncauses warnings if the library is built with Clang.\n\nThis removes the redundant noexcept from ~error_category and\n~system_error and adds tests to ensure they really are noexcept.\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* src/c++11/system_error.cc (error_category::~error_category()):\n\tRemove noexcept-specifier.\n\t(system_error::~system_error()): Likewise.\n\t* testsuite/19_diagnostics/error_category/noexcept.cc: New test.\n\t* testsuite/19_diagnostics/system_error/noexcept.cc: New test.", "tree": {"sha": "5f2b0d5484a64e55732eefdc2689f679e651de33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f2b0d5484a64e55732eefdc2689f679e651de33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f63e86f797d82772c62a7475dbc6e881727b666f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63e86f797d82772c62a7475dbc6e881727b666f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f63e86f797d82772c62a7475dbc6e881727b666f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f63e86f797d82772c62a7475dbc6e881727b666f/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "763eb1f19239ebb19c0f87590a4f02300c02c52b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/763eb1f19239ebb19c0f87590a4f02300c02c52b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/763eb1f19239ebb19c0f87590a4f02300c02c52b"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "f12290adaeea4dd61fb8392366c21e62360c5971", "filename": "libstdc++-v3/src/c++11/system_error.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63e86f797d82772c62a7475dbc6e881727b666f/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fsystem_error.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63e86f797d82772c62a7475dbc6e881727b666f/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fsystem_error.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Fc%2B%2B11%2Fsystem_error.cc?ref=f63e86f797d82772c62a7475dbc6e881727b666f", "patch": "@@ -338,15 +338,15 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     _GLIBCXX_THROW_OR_ABORT(system_error(error_code(__i, generic_category())));\n   }\n \n-  error_category::~error_category() noexcept = default;\n+  error_category::~error_category() = default;\n \n   const error_category&\n   _V2::system_category() noexcept { return system_category_instance; }\n \n   const error_category&\n   _V2::generic_category() noexcept { return generic_category_instance; }\n \n-  system_error::~system_error() noexcept = default;\n+  system_error::~system_error() = default;\n \n   error_condition\n   error_category::default_error_condition(int __i) const noexcept"}, {"sha": "210344c76071e0ef246a18dbd66e7180d104d499", "filename": "libstdc++-v3/testsuite/19_diagnostics/error_category/noexcept.cc", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63e86f797d82772c62a7475dbc6e881727b666f/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fnoexcept.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63e86f797d82772c62a7475dbc6e881727b666f/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fnoexcept.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Ferror_category%2Fnoexcept.cc?ref=f63e86f797d82772c62a7475dbc6e881727b666f", "patch": "@@ -0,0 +1,13 @@\n+// { dg-do compile { target c++11 } }\n+#include <system_error>\n+\n+extern const std::error_category& cat;\n+\n+static_assert(std::is_nothrow_destructible<std::error_category>::value, \"\");\n+static_assert(noexcept(cat.name()), \"\");\n+static_assert(noexcept(cat.default_error_condition(1)), \"\");\n+static_assert(noexcept(cat.equivalent(1, {})), \"\");\n+static_assert(noexcept(cat.equivalent({}, 1)), \"\");\n+static_assert(noexcept(cat == cat), \"\");\n+static_assert(noexcept(cat != cat), \"\");\n+static_assert(noexcept(cat < cat), \"\");"}, {"sha": "853b7f922b64003acd80db0a4f35253209ae7b7e", "filename": "libstdc++-v3/testsuite/19_diagnostics/system_error/noexcept.cc", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f63e86f797d82772c62a7475dbc6e881727b666f/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fnoexcept.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f63e86f797d82772c62a7475dbc6e881727b666f/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fnoexcept.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F19_diagnostics%2Fsystem_error%2Fnoexcept.cc?ref=f63e86f797d82772c62a7475dbc6e881727b666f", "patch": "@@ -0,0 +1,6 @@\n+// { dg-do compile { target c++11 } }\n+#include <system_error>\n+\n+static_assert(std::is_nothrow_destructible<std::system_error>::value, \"\");\n+static_assert(noexcept(std::declval<const std::system_error&>().code()), \"\");\n+static_assert(noexcept(std::declval<const std::system_error&>().what()), \"\");"}]}