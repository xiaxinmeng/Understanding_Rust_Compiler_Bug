{"sha": "958a816e69e829d04e175512a09f8b6f43cd2ffd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTU4YTgxNmU2OWU4MjlkMDRlMTc1NTEyYTA5ZjhiNmY0M2NkMmZmZA==", "commit": {"author": {"name": "Vincent Celier", "email": "celier@adacore.com", "date": "2007-04-06T09:19:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2007-04-06T09:19:38Z"}, "message": "errutil.adb (Initialize): Initialize warnings table...\n\n2007-04-06  Vincent Celier  <celier@adacore.com>\n\n\t* errutil.adb (Initialize): Initialize warnings table, if all warnings\n\tare suppressed, supply an initial dummy entry covering all possible\n\tsource locations.\n\n\t* make.adb (Scan_Make_Arg): Reject options that should start with \"--\"\n\tand start with only one, such as \"-RTS=none\".\n\t(Collect_Arguments): Do not check for sources outside of projects.\n\tDo not collect arguments if project is externally built.\n\t(Compile_Sources): Do nothing, not even check if the source is up to\n\tdate, if its project is externally built.\n\t(Compile): When compiling a predefined source, add -gnatpg\n\tas the second switch, after -c.\n\t(Compile_Sources): Allow compilation of Annex J renames without -a\n\t(Is_In_Object_Directory): Check if the ALI file is in the object\n\teven if there is no project extension.\n\t(Create_Binder_Mapping_File): Only put a unit in the mapping file for\n\tgnatbind if the ALI file effectively exists.\n\t(Initialize): Add the directory where gnatmake is invoked in front of\n\tthe path if it is invoked from a bin directory, even without directory\n\tinformation, so that the correct GNAT tools will be used when spawned\n\twithout directory information.\n\n\t* makeusg.adb: Change switch -S to -eS\n\tAdd lines for new switches -we, -wn and -ws\n\tAdd line for new switch -p\n\n\t* prj-proc.adb (Process): Set Success to False when Warning_Mode is\n\tTreat_As_Error and there are warnings.\n\n\t* switch-m.ads, switch-m.adb (Normalize_Compiler_Switches): Do not skip\n\t-gnatww Change gnatmake switch -S to -eS\n\t(Scan_Make_Switches): Code reorganisation. Process separately multi\n\tcharacter switches and single character switches.\n\t(Scan_Make_Switches): New Boolean out parameter Success. Set Success to\n\tFalse when switch is not recognized by gnatmake.\n\t(Scan_Make_Switches): Set Setup_Projects True when -p or\n\t--create-missing-dirs is specified.\n\n\t* fname.adb (Is_Predefined_File_Name): Return True for annex J\n\trenamings Calendar, Machine_Code, Unchecked_Conversion and\n\tUnchecked_Deallocation only when Renamings_Included is True.\n\n\t* par.adb: Allow library units Calendar, Machine_Code,\n\tUnchecked_Conversion and Unchecked_Deallocation to be recompiled even\n\twhen -gnatg is not specified.\n\t(P_Interface_Type_Definition): Remove the formal Is_Synchronized because\n\tthere is no need to generate always a record_definition_node in case\n\tof synchronized interface types.\n\t(SIS_Entry_Active): Initialize global variable to False\n\t(P_Null_Exclusion): For AI-447: Add parameter Allow_Anonymous_In_95 to\n\tindicate cases where AI-447 says \"not null\" is legal.\n\n\t* makeutl.ads, makeutil.adb (Executable_Prefix_Path): New function\n\n\t* makegpr.adb (Check_Compilation_Needed): Take into account dependency\n\tfiles with with several lines starting with the object fileb name.\n\t(Scan_Arg): Set Setup_Projects True when -p or --create-missing-dirs\n\tis specified.\n\t(Initialize): Add the directory where gprmake is invoked in front of the\n\tpath, if it is invoked from a bin directory or with directory\n\tinformation, so that the correct GNAT tools will be used when invoked\n\tdirectly.\n\t(Check_Compilation_Needed): Process correctly backslashes on Windows.\n\n\t* vms_data.ads: Update switches/qualifiers\n\nFrom-SVN: r123560", "tree": {"sha": "f5cd92cf0c8355154424935e5aa51a46816033b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f5cd92cf0c8355154424935e5aa51a46816033b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/958a816e69e829d04e175512a09f8b6f43cd2ffd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/958a816e69e829d04e175512a09f8b6f43cd2ffd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/958a816e69e829d04e175512a09f8b6f43cd2ffd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/958a816e69e829d04e175512a09f8b6f43cd2ffd/comments", "author": {"login": "vcelier", "id": 8888056, "node_id": "MDQ6VXNlcjg4ODgwNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/8888056?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vcelier", "html_url": "https://github.com/vcelier", "followers_url": "https://api.github.com/users/vcelier/followers", "following_url": "https://api.github.com/users/vcelier/following{/other_user}", "gists_url": "https://api.github.com/users/vcelier/gists{/gist_id}", "starred_url": "https://api.github.com/users/vcelier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vcelier/subscriptions", "organizations_url": "https://api.github.com/users/vcelier/orgs", "repos_url": "https://api.github.com/users/vcelier/repos", "events_url": "https://api.github.com/users/vcelier/events{/privacy}", "received_events_url": "https://api.github.com/users/vcelier/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "fea9e956ec1b3e1b95f79e44309cfa93314ddbce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fea9e956ec1b3e1b95f79e44309cfa93314ddbce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fea9e956ec1b3e1b95f79e44309cfa93314ddbce"}], "stats": {"total": 1545, "additions": 971, "deletions": 574}, "files": [{"sha": "25e18c1f0325e2ff29f1b4fb383e66d699c92317", "filename": "gcc/ada/errutil.adb", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Ferrutil.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Ferrutil.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrutil.adb?ref=958a816e69e829d04e175512a09f8b6f43cd2ffd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1991-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1991-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -582,6 +582,12 @@ package body Errutil is\n       --  an initial dummy entry covering all possible source locations.\n \n       Warnings.Init;\n+\n+      if Warning_Mode = Suppress then\n+         Warnings.Increment_Last;\n+         Warnings.Table (Warnings.Last).Start := Source_Ptr'First;\n+         Warnings.Table (Warnings.Last).Stop  := Source_Ptr'Last;\n+      end if;\n    end Initialize;\n \n    ------------------------"}, {"sha": "495d7493e6bc7b381c3bd52cef7b75d4af859aea", "filename": "gcc/ada/fname.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Ffname.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Ffname.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffname.adb?ref=958a816e69e829d04e175512a09f8b6f43cd2ffd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2005, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -120,22 +120,22 @@ package body Fname is\n \n       Predef_Names : constant array (1 .. 11) of Str8 :=\n         (\"ada     \",       -- Ada\n-         \"calendar\",       -- Calendar\n          \"interfac\",       -- Interfaces\n          \"system  \",       -- System\n-         \"machcode\",       -- Machine_Code\n-         \"unchconv\",       -- Unchecked_Conversion\n-         \"unchdeal\",       -- Unchecked_Deallocation\n \n          --  Remaining entries are only considered if Renamings_Included true\n \n+         \"calendar\",       -- Calendar\n+         \"machcode\",       -- Machine_Code\n+         \"unchconv\",       -- Unchecked_Conversion\n+         \"unchdeal\",       -- Unchecked_Deallocation\n          \"directio\",       -- Direct_IO\n          \"ioexcept\",       -- IO_Exceptions\n          \"sequenio\",       -- Sequential_IO\n          \"text_io \");      -- Text_IO\n \n          Num_Entries : constant Natural :=\n-                         7 + 4 * Boolean'Pos (Renamings_Included);\n+                         3 + 8 * Boolean'Pos (Renamings_Included);\n \n    begin\n       --  Remove extension (if present)"}, {"sha": "c12cbc503b8cd9bb85c4baf7c84e030d200535da", "filename": "gcc/ada/make.adb", "status": "modified", "additions": 170, "deletions": 146, "changes": 316, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fmake.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fmake.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmake.adb?ref=958a816e69e829d04e175512a09f8b6f43cd2ffd", "patch": "@@ -1811,21 +1811,16 @@ package body Make is\n                Path             => Arguments_Path_Name,\n                In_Tree          => Project_Tree);\n \n-            --  If the source is not a source of a project file, check if\n-            --  this is allowed.\n+            --  If the source is not a source of a project file, add the\n+            --  recorded arguments. Check will be done later if the source\n+            --  need to be compiled that the switch -x has been used.\n \n             if Arguments_Project = No_Project then\n-               if not External_Unit_Compilation_Allowed then\n-                  Make_Failed (\"external source (\", Source_File_Name,\n-                               \") is not part of any project; cannot be \" &\n-                               \"compiled without gnatmake switch -x\");\n-               end if;\n-\n-               --  If it is allowed, simply add the saved gcc switches\n-\n                Add_Arguments (The_Saved_Gcc_Switches.all);\n \n-            else\n+            elsif not Project_Tree.Projects.Table\n+                         (Arguments_Project).Externally_Built\n+            then\n                --  We get the project directory for the relative path\n                --  switches and arguments.\n \n@@ -2521,8 +2516,10 @@ package body Make is\n          begin\n             if Is_Predefined_File_Name (Fname, False) then\n                if Check_Readonly_Files then\n+                  Comp_Args (Comp_Args'First + 2 .. Comp_Last + 1) :=\n+                    Comp_Args (Comp_Args'First + 1 .. Comp_Last);\n                   Comp_Last := Comp_Last + 1;\n-                  Comp_Args (Comp_Last) := GNAT_Flag;\n+                  Comp_Args (Comp_Args'First + 1) := GNAT_Flag;\n \n                else\n                   Make_Failed\n@@ -2816,7 +2813,7 @@ package body Make is\n \n                elsif not Check_Readonly_Files\n                  and then Full_Lib_File /= No_File\n-                 and then Is_Internal_File_Name (Source_File)\n+                 and then Is_Internal_File_Name (Source_File, False)\n                then\n                   if Force_Compilations then\n                      Fail\n@@ -2837,49 +2834,60 @@ package body Make is\n                else\n                   Arguments_Collected := False;\n \n-                  --  Don't waste any time if we have to recompile anyway\n+                  --  Do nothing if project of source is externally built\n \n-                  Obj_Stamp       := Empty_Time_Stamp;\n-                  Need_To_Compile := Force_Compilations;\n+                  Collect_Arguments (Source_File, Source_Index, Args);\n \n-                  if not Force_Compilations then\n-                     Read_Only :=\n-                       Full_Lib_File /= No_File\n-                       and then not Check_Readonly_Files\n-                       and then Is_Readonly_Library (Full_Lib_File);\n-                     Check (Source_File, Source_Index, Args, Lib_File,\n-                            Read_Only, ALI, Obj_File, Obj_Stamp);\n-                     Need_To_Compile := (ALI = No_ALI_Id);\n-                  end if;\n-\n-                  if not Need_To_Compile then\n+                  if Arguments_Project = No_Project\n+                    or else not Project_Tree.Projects.Table\n+                                  (Arguments_Project).Externally_Built\n+                  then\n+                     --  Don't waste any time if we have to recompile anyway\n+\n+                     Obj_Stamp       := Empty_Time_Stamp;\n+                     Need_To_Compile := Force_Compilations;\n+\n+                     if not Force_Compilations then\n+                        Read_Only :=\n+                          Full_Lib_File /= No_File\n+                          and then not Check_Readonly_Files\n+                          and then Is_Readonly_Library (Full_Lib_File);\n+                        Check (Source_File, Source_Index, Args, Lib_File,\n+                               Read_Only, ALI, Obj_File, Obj_Stamp);\n+                        Need_To_Compile := (ALI = No_ALI_Id);\n+                     end if;\n \n-                     --  The ALI file is up-to-date. Record its Id\n+                     if not Need_To_Compile then\n+                        --  The ALI file is up-to-date. Record its Id\n \n-                     Record_Good_ALI (ALI);\n+                        Record_Good_ALI (ALI);\n \n-                     --  Record the time stamp of the most recent object file\n-                     --  as long as no (re)compilations are needed.\n+                        --  Record the time stamp of the most recent object\n+                        --  file as long as no (re)compilations are needed.\n \n-                     if First_Compiled_File = No_File\n-                       and then (Most_Recent_Obj_File = No_File\n-                                   or else Obj_Stamp > Most_Recent_Obj_Stamp)\n-                     then\n-                        Most_Recent_Obj_File  := Obj_File;\n-                        Most_Recent_Obj_Stamp := Obj_Stamp;\n-                     end if;\n+                        if First_Compiled_File = No_File\n+                          and then (Most_Recent_Obj_File = No_File\n+                                    or else Obj_Stamp > Most_Recent_Obj_Stamp)\n+                        then\n+                           Most_Recent_Obj_File  := Obj_File;\n+                           Most_Recent_Obj_Stamp := Obj_Stamp;\n+                        end if;\n \n-                  else\n-                     --  Do nothing if project of source is externally built\n+                     else\n+                        --  Check that switch -x has been used if a source\n+                        --  outside of project files need to be compiled.\n \n-                     if not Arguments_Collected then\n-                        Collect_Arguments (Source_File, Source_Index, Args);\n-                     end if;\n+                        if Main_Project /= No_Project and then\n+                          Arguments_Project = No_Project and then\n+                          not External_Unit_Compilation_Allowed\n+                        then\n+                           Make_Failed (\"external source (\",\n+                                        Get_Name_String (Source_File),\n+                                        \") is not part of any project;\"\n+                                        & \" cannot be compiled without\" &\n+                                        \" gnatmake switch -x\");\n+                        end if;\n \n-                     if Arguments_Project = No_Project\n-                       or else not Project_Tree.Projects.Table\n-                                     (Arguments_Project).Externally_Built\n-                     then\n                         --  Is this the first file we have to compile?\n \n                         if First_Compiled_File = No_File then\n@@ -3088,7 +3096,7 @@ package body Make is\n                               Debug_Msg (\"Skipping marked file:\", Sfile);\n \n                            elsif not Check_Readonly_Files\n-                             and then Is_Internal_File_Name (Sfile)\n+                             and then Is_Internal_File_Name (Sfile, False)\n                            then\n                               Debug_Msg (\"Skipping internal file:\", Sfile);\n \n@@ -3938,47 +3946,18 @@ package body Make is\n                        and then\n                          Project_Tree.Projects.Table\n                            (ALI_Project).Extended_By = No_Project\n-                       and then\n-                         Project_Tree.Projects.Table\n-                           (ALI_Project).Extends = No_Project\n+                         and then\n+                           Project_Tree.Projects.Table\n+                             (ALI_Project).Extends = No_Project\n                      then\n-                        --  First line is the unit name\n-\n-                        Get_Name_String (ALI_Unit);\n-                        Name_Len := Name_Len + 1;\n-                        Name_Buffer (Name_Len) := ASCII.LF;\n-                        Bytes :=\n-                          Write\n-                            (Mapping_FD,\n-                             Name_Buffer (1)'Address,\n-                             Name_Len);\n-                        OK := Bytes = Name_Len;\n-\n-                        exit when not OK;\n-\n-                        --  Second line it the ALI file name\n-\n-                        Get_Name_String (ALI_Name);\n-                        Name_Len := Name_Len + 1;\n-                        Name_Buffer (Name_Len) := ASCII.LF;\n-                        Bytes :=\n-                          Write\n-                            (Mapping_FD,\n-                             Name_Buffer (1)'Address,\n-                             Name_Len);\n-                        OK := Bytes = Name_Len;\n-\n-                        exit when not OK;\n-\n-                        --  Third line it the ALI path name, concatenation\n-                        --  of either the library directory or the object\n-                        --  directory with the ALI file name.\n+                        --  First check if the ALI file exists. If it does not,\n+                        --  do not put the unit in the mapping file.\n \n                         declare\n                            ALI : constant String :=\n                                    Get_Name_String (ALI_Name);\n                            PD  : Project_Data renames\n-                                   Project_Tree.Projects.Table (ALI_Project);\n+                             Project_Tree.Projects.Table (ALI_Project);\n \n                         begin\n                            --  For library projects, use the library directory,\n@@ -4004,19 +3983,61 @@ package body Make is\n                            Name_Len :=\n                              Name_Len + ALI'Length + 1;\n                            Name_Buffer (Name_Len) := ASCII.LF;\n-                           Bytes :=\n-                             Write\n-                               (Mapping_FD,\n-                                Name_Buffer (1)'Address,\n-                                Name_Len);\n-                           OK := Bytes = Name_Len;\n-                        end;\n \n-                        --  If OK is False, it means we were unable\n-                        --  to write a line. No point in continuing\n-                        --  with the other units.\n+                           declare\n+                              ALI_Path_Name : constant String :=\n+                                                Name_Buffer (1 .. Name_Len);\n \n-                        exit when not OK;\n+                           begin\n+                              if Is_Regular_File\n+                                (ALI_Path_Name (1 .. ALI_Path_Name'Last - 1))\n+                              then\n+\n+                                 --  First line is the unit name\n+\n+                                 Get_Name_String (ALI_Unit);\n+                                 Name_Len := Name_Len + 1;\n+                                 Name_Buffer (Name_Len) := ASCII.LF;\n+                                 Bytes :=\n+                                   Write\n+                                     (Mapping_FD,\n+                                      Name_Buffer (1)'Address,\n+                                      Name_Len);\n+                                 OK := Bytes = Name_Len;\n+\n+                                 exit when not OK;\n+\n+                                 --  Second line it the ALI file name\n+\n+                                 Get_Name_String (ALI_Name);\n+                                 Name_Len := Name_Len + 1;\n+                                 Name_Buffer (Name_Len) := ASCII.LF;\n+                                 Bytes :=\n+                                   Write\n+                                     (Mapping_FD,\n+                                      Name_Buffer (1)'Address,\n+                                      Name_Len);\n+                                 OK := Bytes = Name_Len;\n+\n+                                 exit when not OK;\n+\n+                                 --  Third line it the ALI path name.\n+\n+                                 Bytes :=\n+                                   Write\n+                                     (Mapping_FD,\n+                                      ALI_Path_Name (1)'Address,\n+                                      ALI_Path_Name'Length);\n+                                 OK := Bytes = ALI_Path_Name'Length;\n+\n+                                 --  If OK is False, it means we were unable\n+                                 --  to write a line. No point in continuing\n+                                 --  with the other units.\n+\n+                                 exit when not OK;\n+                              end if;\n+                           end;\n+                        end;\n                      end if;\n                   end if;\n                end;\n@@ -6086,34 +6107,45 @@ package body Make is\n       Mains.Delete;\n \n       --  Add the directory where gnatmake is invoked in front of the\n-      --  path, if gnatmake is invoked with directory information.\n-      --  Only do this if the platform is not VMS, where the notion of path\n-      --  does not really exist.\n+      --  path, if gnatmake is invoked from a bin directory or with directory\n+      --  information. Only do this if the platform is not VMS, where the\n+      --  notion of path does not really exist.\n \n       if not OpenVMS then\n          declare\n+            Prefix  : constant String := Executable_Prefix_Path;\n             Command : constant String := Command_Name;\n \n          begin\n-            for Index in reverse Command'Range loop\n-               if Command (Index) = Directory_Separator then\n-                  declare\n-                     Absolute_Dir : constant String :=\n-                                      Normalize_Pathname\n-                                        (Command (Command'First .. Index));\n-\n-                     PATH : constant String :=\n-                                      Absolute_Dir &\n-                                      Path_Separator &\n-                                      Getenv (\"PATH\").all;\n+            if Prefix'Length > 0 then\n+               declare\n+                  PATH : constant String :=\n+                           Prefix & Directory_Separator & \"bin\" &\n+                           Path_Separator &\n+                           Getenv (\"PATH\").all;\n+               begin\n+                  Setenv (\"PATH\", PATH);\n+               end;\n \n-                  begin\n-                     Setenv (\"PATH\", PATH);\n-                  end;\n+            else\n+               for Index in reverse Command'Range loop\n+                  if Command (Index) = Directory_Separator then\n+                     declare\n+                        Absolute_Dir : constant String :=\n+                                         Normalize_Pathname\n+                                           (Command (Command'First .. Index));\n+                        PATH         : constant String :=\n+                                         Absolute_Dir &\n+                                         Path_Separator &\n+                                         Getenv (\"PATH\").all;\n+                     begin\n+                        Setenv (\"PATH\", PATH);\n+                     end;\n \n-                  exit;\n-               end if;\n-            end loop;\n+                     exit;\n+                  end if;\n+               end loop;\n+            end if;\n          end;\n       end if;\n \n@@ -6541,13 +6573,7 @@ package body Make is\n             --  in its object directory. If it is not, return False, so that\n             --  the ALI file will not be skipped.\n \n-            --  If the source is not in an extending project, we fall back to\n-            --  the general case and return True at the end of the function.\n-\n-            if Project /= No_Project\n-              and then Project_Tree.Projects.Table\n-                         (Project).Extends /= No_Project\n-            then\n+            if Project /= No_Project then\n                Data := Project_Tree.Projects.Table (Project);\n \n                declare\n@@ -6843,6 +6869,8 @@ package body Make is\n    -------------------\n \n    procedure Scan_Make_Arg (Argv : String; And_Save : Boolean) is\n+      Success : Boolean;\n+\n    begin\n       pragma Assert (Argv'First = 1);\n \n@@ -7098,7 +7126,7 @@ package body Make is\n             end if;\n \n          else\n-            Make_Failed (\"unknown switch: \", Argv);\n+            Scan_Make_Switches (Argv, Success);\n          end if;\n \n       --  If we have seen a regular switch process it\n@@ -7108,6 +7136,15 @@ package body Make is\n          if Argv'Length = 1 then\n             Make_Failed (\"switch character cannot be followed by a blank\");\n \n+         --  Incorrect switches that should start with \"--\"\n+\n+         elsif     (Argv'Length > 5  and then Argv (1 .. 5) = \"-RTS=\")\n+           or else (Argv'Length > 5  and then Argv (1 .. 5) = \"-GCC=\")\n+           or else (Argv'Length > 10 and then Argv (1 .. 10) = \"-GNATLINK=\")\n+           or else (Argv'Length > 10 and then Argv (1 .. 10) = \"-GNATBIND=\")\n+         then\n+            Make_Failed (\"option \", Argv, \" should start with '--'\");\n+\n          --  -I-\n \n          elsif Argv (2 .. Argv'Last) = \"I-\" then\n@@ -7206,7 +7243,7 @@ package body Make is\n                             \"project file\");\n \n             else\n-               Scan_Make_Switches (Argv);\n+               Scan_Make_Switches (Argv, Success);\n             end if;\n \n          --  -d\n@@ -7224,13 +7261,13 @@ package body Make is\n                             \"project file\");\n \n             else\n-               Scan_Make_Switches (Argv);\n+               Scan_Make_Switches (Argv, Success);\n             end if;\n \n          --  -j (need to save the result)\n \n          elsif Argv (2) = 'j' then\n-            Scan_Make_Switches (Argv);\n+            Scan_Make_Switches (Argv, Success);\n \n             if And_Save then\n                Saved_Maximum_Processes := Maximum_Processes;\n@@ -7365,29 +7402,16 @@ package body Make is\n             Add_Switch (Argv, Compiler, And_Save => And_Save);\n             Add_Switch (Argv, Binder, And_Save => And_Save);\n \n-            --  By default all switches with more than one character or one\n-            --  character switches are passed to the compiler with the\n-            --  exception of those tested below, which belong to make.\n-\n-         elsif Argv (2) /= 'd'\n-           and then Argv (2) /= 'e'\n-           and then Argv (2 .. Argv'Last) /= \"B\"\n-           and then Argv (2 .. Argv'Last) /= \"C\"\n-           and then Argv (2 .. Argv'Last) /= \"F\"\n-           and then Argv (2 .. Argv'Last) /= \"M\"\n-           and then Argv (2 .. Argv'Last) /= \"R\"\n-           and then Argv (2 .. Argv'Last) /= \"S\"\n-           and then Argv (2 .. Argv'Last) /= \"vl\"\n-           and then Argv (2 .. Argv'Last) /= \"vm\"\n-           and then Argv (2 .. Argv'Last) /= \"vh\"\n-           and then (Argv'Length > 2 or else Argv (2) not in 'a' .. 'z')\n-         then\n-            Add_Switch (Argv, Compiler, And_Save => And_Save);\n-\n-         --  All other options are handled by Scan_Make_Switches\n+         --  All other switches are processed by Scan_Make_Switches.\n+         --  If the call returns with Success = False, then the switch is\n+         --  passed to the compiler.\n \n          else\n-            Scan_Make_Switches (Argv);\n+            Scan_Make_Switches (Argv, Success);\n+\n+            if not Success then\n+               Add_Switch (Argv, Compiler, And_Save => And_Save);\n+            end if;\n          end if;\n \n       --  If not a switch it must be a file name"}, {"sha": "8ba177a948466be4e2a4936d5781bf643c74f7e8", "filename": "gcc/ada/makegpr.adb", "status": "modified", "additions": 222, "deletions": 131, "changes": 353, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fmakegpr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fmakegpr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakegpr.adb?ref=958a816e69e829d04e175512a09f8b6f43cd2ffd", "patch": "@@ -31,6 +31,7 @@ with Ada.Unchecked_Deallocation;\n \n with Csets;\n with Gnatvsn;\n+with Hostparm; use Hostparm;\n \n with GNAT.Directory_Operations; use GNAT.Directory_Operations;\n with GNAT.Dynamic_Tables;\n@@ -56,6 +57,10 @@ with Types;            use Types;\n \n package body Makegpr is\n \n+   On_Windows : constant Boolean := Directory_Separator = '\\';\n+   --  True when on Windows. Used in Check_Compilation_Needed when processing\n+   --  C/C++ dependency files for backslash handling.\n+\n    Max_In_Archives : constant := 50;\n    --  The maximum number of arguments for a single invocation of the\n    --  Archive Indexer (ar).\n@@ -1803,6 +1808,9 @@ package body Makegpr is\n       Start    : Natural;\n       Finish   : Natural;\n \n+      Looping : Boolean := False;\n+      --  Set to True at the end of the first Big_Loop\n+\n    begin\n       --  Assume the worst, so that statement \"return;\" may be used if there\n       --  is any problem.\n@@ -1881,179 +1889,213 @@ package body Makegpr is\n          return;\n       end if;\n \n-      declare\n-         End_Of_File_Reached : Boolean := False;\n+      --  Loop Big_Loop is executed several times only when the dependency file\n+      --  contains several times\n+      --     <object file>: <source1> ...\n+      --  When there is only one of such occurence, Big_Loop is exited\n+      --  successfully at the beginning of the second loop.\n \n-      begin\n-         loop\n-            if End_Of_File (Dep_File) then\n-               End_Of_File_Reached := True;\n-               exit;\n-            end if;\n+      Big_Loop :\n+      loop\n+         declare\n+            End_Of_File_Reached : Boolean := False;\n \n-            Get_Line (Dep_File, Name_Buffer, Name_Len);\n+         begin\n+            loop\n+               if End_Of_File (Dep_File) then\n+                  End_Of_File_Reached := True;\n+                  exit;\n+               end if;\n \n-            exit when Name_Len > 0 and then Name_Buffer (1) /= '#';\n-         end loop;\n+               Get_Line (Dep_File, Name_Buffer, Name_Len);\n+\n+               exit when Name_Len > 0 and then Name_Buffer (1) /= '#';\n+            end loop;\n \n-         --  If dependency file contains only empty lines or comments, then\n-         --  dependencies are unknown, and the source needs to be recompiled.\n+            --  If dependency file contains only empty lines or comments, then\n+            --  dependencies are unknown, and the source needs to be\n+            --  recompiled.\n \n-         if End_Of_File_Reached then\n+            if End_Of_File_Reached then\n+               --  If we have reached the end of file after the first loop,\n+               --  there is nothing else to do.\n+\n+               exit Big_Loop when Looping;\n+\n+               if Verbose_Mode then\n+                  Write_Str  (\"      -> dependency file \");\n+                  Write_Str  (Dep_Name);\n+                  Write_Line (\" is empty\");\n+               end if;\n+\n+               Close (Dep_File);\n+               return;\n+            end if;\n+         end;\n+\n+         Start  := 1;\n+         Finish := Index (Name_Buffer (1 .. Name_Len), \": \");\n+\n+         --  First line must start with name of object file, followed by colon\n+\n+         if Finish = 0 or else\n+            Name_Buffer (1 .. Finish - 1) /= Object_Name\n+         then\n             if Verbose_Mode then\n                Write_Str  (\"      -> dependency file \");\n                Write_Str  (Dep_Name);\n-               Write_Line (\" is empty\");\n+               Write_Line (\" has wrong format\");\n             end if;\n \n             Close (Dep_File);\n             return;\n-         end if;\n-      end;\n \n-      Start  := 1;\n-      Finish := Index (Name_Buffer (1 .. Name_Len), \": \");\n-\n-      --  First line must start with name of object file, followed by colon\n-\n-      if Finish = 0 or else Name_Buffer (1 .. Finish - 1) /= Object_Name then\n-         if Verbose_Mode then\n-            Write_Str  (\"      -> dependency file \");\n-            Write_Str  (Dep_Name);\n-            Write_Line (\" has wrong format\");\n-         end if;\n-\n-         Close (Dep_File);\n-         return;\n+         else\n+            Start := Finish + 2;\n \n-      else\n-         Start := Finish + 2;\n+            --  Process each line\n \n-         --  Process each line\n+            Line_Loop : loop\n+               declare\n+                  Line : String  := Name_Buffer (1 .. Name_Len);\n+                  Last : Natural := Name_Len;\n \n-         Line_Loop : loop\n-            declare\n-               Line : String  := Name_Buffer (1 .. Name_Len);\n-               Last : Natural := Name_Len;\n+               begin\n+                  Name_Loop : loop\n \n-            begin\n-               Name_Loop : loop\n+                     --  Find the beginning of the next source path name\n \n-                  --  Find the beginning of the next source path name\n+                     while Start < Last and then Line (Start) = ' ' loop\n+                        Start := Start + 1;\n+                     end loop;\n \n-                  while Start < Last and then Line (Start) = ' ' loop\n-                     Start := Start + 1;\n-                  end loop;\n+                     --  Go to next line when there is a continuation character\n+                     --  \\ at the end of the line.\n \n-                  --  Go to next line when there is a continuation character \\\n-                  --  at the end of the line.\n+                     exit Name_Loop when Start = Last\n+                       and then Line (Start) = '\\';\n \n-                  exit Name_Loop when Start = Last\n-                                   and then Line (Start) = '\\';\n+                     --  We should not be at the end of the line, without\n+                     --  a continuation character \\.\n \n-                  --  We should not be at the end of the line, without\n-                  --  a continuation character \\.\n+                     if Start = Last then\n+                        if Verbose_Mode then\n+                           Write_Str  (\"      -> dependency file \");\n+                           Write_Str  (Dep_Name);\n+                           Write_Line (\" has wrong format\");\n+                        end if;\n \n-                  if Start = Last then\n-                     if Verbose_Mode then\n-                        Write_Str  (\"      -> dependency file \");\n-                        Write_Str  (Dep_Name);\n-                        Write_Line (\" has wrong format\");\n+                        Close (Dep_File);\n+                        return;\n                      end if;\n \n-                     Close (Dep_File);\n-                     return;\n-                  end if;\n-\n-                  --  Look for the end of the source path name\n-\n-                  Finish := Start;\n-                  while Finish < Last loop\n-                     if Line (Finish) = '\\' then\n-\n-                        --  When we are getting a '\\' that is not the last\n-                        --  character of the line, the next character is part\n-                        --  of the path name, even if it is a space.\n+                     --  Look for the end of the source path name\n+\n+                     Finish := Start;\n+                     while Finish < Last loop\n+                        if Line (Finish) = '\\' then\n+\n+                           --  On Windows, a '\\' is part of the path name,\n+                           --  except when it is followed by another '\\' or by\n+                           --  a space. On other platforms, when we are getting\n+                           --  a '\\' that is not the last character of the\n+                           --  line, the next character is part of the path\n+                           --  name, even if it is a space.\n+\n+                           if On_Windows and then\n+                             Line (Finish + 1) /= '\\' and then\n+                             Line (Finish + 1) /= ' '\n+                           then\n+                              Finish := Finish + 1;\n+\n+                           else\n+                              Line (Finish .. Last - 1) :=\n+                                Line (Finish + 1 .. Last);\n+                              Last := Last - 1;\n+                           end if;\n \n-                        Line (Finish .. Last - 1) := Line (Finish + 1 .. Last);\n-                        Last := Last - 1;\n+                        else\n+                           --  A space that is not preceded by '\\' indicates\n+                           --  the end of the path name.\n \n-                     else\n-                        --  A space that is not preceded by '\\' indicates the\n-                        --  end of the path name.\n+                           exit when Line (Finish + 1) = ' ';\n \n-                        exit when Line (Finish + 1) = ' ';\n+                           Finish := Finish + 1;\n+                        end if;\n+                     end loop;\n \n-                        Finish := Finish + 1;\n-                     end if;\n-                  end loop;\n+                     --  Check this source\n \n-                  --  Check this source\n+                     declare\n+                        Src_Name : constant String :=\n+                                     Normalize_Pathname\n+                                       (Name           =>\n+                                                       Line (Start .. Finish),\n+                                        Resolve_Links  => False,\n+                                        Case_Sensitive => False);\n+                        Src_TS   : Time_Stamp_Type;\n \n-                  declare\n-                     Src_Name : constant String :=\n-                                  Normalize_Pathname\n-                                    (Name           => Line (Start .. Finish),\n-                                     Resolve_Links  => False,\n-                                     Case_Sensitive => False);\n-                     Src_TS   : Time_Stamp_Type;\n+                     begin\n+                        --  If it is original source, set\n+                        --  Source_In_Dependencies.\n \n-                  begin\n-                     --  If it is original source, set Source_In_Dependencies\n+                        if Src_Name = Source_Path then\n+                           Source_In_Dependencies := True;\n+                        end if;\n \n-                     if Src_Name = Source_Path then\n-                        Source_In_Dependencies := True;\n-                     end if;\n+                        Name_Len := 0;\n+                        Add_Str_To_Name_Buffer (Src_Name);\n+                        Src_TS := File_Stamp (Name_Find);\n \n-                     Name_Len := 0;\n-                     Add_Str_To_Name_Buffer (Src_Name);\n-                     Src_TS := File_Stamp (Name_Find);\n+                        --  If the source does not exist, we need to recompile\n \n-                     --  If the source does not exist, we need to recompile\n+                        if Src_TS = Empty_Time_Stamp then\n+                           if Verbose_Mode then\n+                              Write_Str  (\"      -> source \");\n+                              Write_Str  (Src_Name);\n+                              Write_Line (\" does not exist\");\n+                           end if;\n \n-                     if Src_TS = Empty_Time_Stamp then\n-                        if Verbose_Mode then\n-                           Write_Str  (\"      -> source \");\n-                           Write_Str  (Src_Name);\n-                           Write_Line (\" does not exist\");\n-                        end if;\n+                           Close (Dep_File);\n+                           return;\n \n-                        Close (Dep_File);\n-                        return;\n+                           --  If the source has been modified after the object\n+                           --  file, we need to recompile.\n \n-                     --  If the source has been modified after the object file,\n-                     --  we need to recompile.\n+                        elsif Src_TS > Source.Object_TS then\n+                           if Verbose_Mode then\n+                              Write_Str  (\"      -> source \");\n+                              Write_Str  (Src_Name);\n+                              Write_Line\n+                                (\" has time stamp later than object file\");\n+                           end if;\n \n-                     elsif Src_TS > Source.Object_TS then\n-                        if Verbose_Mode then\n-                           Write_Str  (\"      -> source \");\n-                           Write_Str  (Src_Name);\n-                           Write_Line\n-                             (\" has time stamp later than object file\");\n+                           Close (Dep_File);\n+                           return;\n                         end if;\n+                     end;\n \n-                        Close (Dep_File);\n-                        return;\n-                     end if;\n-                  end;\n+                     --  If the source path name ends the line, we are done\n \n-                  --  If the source path name ends the line, we are done\n+                     exit Line_Loop when Finish = Last;\n \n-                  exit Line_Loop when Finish = Last;\n+                     --  Go get the next source on the line\n \n-                  --  Go get the next source on the line\n+                     Start := Finish + 1;\n+                  end loop Name_Loop;\n+               end;\n \n-                  Start := Finish + 1;\n-               end loop Name_Loop;\n-            end;\n+               --  If we are here, we had a continuation character \\ at the end\n+               --  of the line, so we continue with the next line.\n \n-            --  If we are here, we had a continuation character \\ at the end\n-            --  of the line, so we continue with the next line.\n+               Get_Line (Dep_File, Name_Buffer, Name_Len);\n+               Start := 1;\n+            end loop Line_Loop;\n+         end if;\n \n-            Get_Line (Dep_File, Name_Buffer, Name_Len);\n-            Start := 1;\n-         end loop Line_Loop;\n-      end if;\n+         --  Set Looping at the end of the first loop\n+         Looping := True;\n+      end loop Big_Loop;\n \n       Close (Dep_File);\n \n@@ -3271,6 +3313,51 @@ package body Makegpr is\n       Prj.Initialize (Project_Tree);\n       Mains.Delete;\n \n+      --  Add the directory where gprmake is invoked in front of the path,\n+      --  if gprmake is invoked from a bin directory or with directory\n+      --  information. information. Only do this if the platform is not VMS,\n+      --  where the notion of path does not really exist.\n+\n+      --  Below code shares nasty code duplication with make.adb code???\n+\n+      if not OpenVMS then\n+         declare\n+            Prefix  : constant String := Executable_Prefix_Path;\n+            Command : constant String := Command_Name;\n+\n+         begin\n+            if Prefix'Length > 0 then\n+               declare\n+                  PATH : constant String :=\n+                           Prefix & Directory_Separator & \"bin\" &\n+                           Path_Separator &\n+                           Getenv (\"PATH\").all;\n+               begin\n+                  Setenv (\"PATH\", PATH);\n+               end;\n+\n+            else\n+               for Index in reverse Command'Range loop\n+                  if Command (Index) = Directory_Separator then\n+                     declare\n+                        Absolute_Dir : constant String :=\n+                                         Normalize_Pathname\n+                                           (Command (Command'First .. Index));\n+                        PATH         : constant String :=\n+                                         Absolute_Dir &\n+                                         Path_Separator &\n+                                         Getenv (\"PATH\").all;\n+                     begin\n+                        Setenv (\"PATH\", PATH);\n+                     end;\n+\n+                     exit;\n+                  end if;\n+               end loop;\n+            end if;\n+         end;\n+      end if;\n+\n       --  Set Name_Ide and Name_Compiler_Command\n \n       Name_Len := 0;\n@@ -4107,6 +4194,9 @@ package body Makegpr is\n                Project_File_Name := new String'(Arg (3 .. Arg'Last));\n             end if;\n \n+         elsif Arg = \"-p\" or else Arg = \"--create-missing-dirs\" then\n+            Setup_Projects := True;\n+\n          elsif Arg = \"-q\" then\n             Quiet_Output := True;\n \n@@ -4193,11 +4283,7 @@ package body Makegpr is\n          Write_Str (\"Usage: \");\n          Osint.Write_Program_Name;\n          Write_Str (\" -P<project file> [opts]  [name] {\");\n-\n-         for Lang in First_Language_Indexes loop\n-            Write_Str (\"[-cargs:lang opts] \");\n-         end loop;\n-\n+         Write_Str (\"[-cargs:lang opts] \");\n          Write_Str (\"[-largs opts] [-gargs opts]}\");\n          Write_Eol;\n          Write_Eol;\n@@ -4230,6 +4316,11 @@ package body Makegpr is\n          Write_Str (\"  -o name  Choose an alternate executable name\");\n          Write_Eol;\n \n+         --  Line for -p\n+\n+         Write_Str (\"  -p       Create missing obj, lib and exec dirs\");\n+         Write_Eol;\n+\n          --  Line for -P\n \n          Write_Str (\"  -Pproj   Use GNAT Project File proj\");"}, {"sha": "027a4cfa47339890938ff9e98fd24cb6685d8153", "filename": "gcc/ada/makeusg.adb", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fmakeusg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fmakeusg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeusg.adb?ref=958a816e69e829d04e175512a09f8b6f43cd2ffd", "patch": "@@ -99,6 +99,11 @@ begin\n               \"project files\");\n    Write_Eol;\n \n+   --  Line for -eS\n+\n+   Write_Str (\"  -eS      Echo commands to stdout instead of stderr\");\n+   Write_Eol;\n+\n    --  Line for -f\n \n    Write_Str (\"  -f       Force recompilations of non predefined units\");\n@@ -151,6 +156,11 @@ begin\n    Write_Str (\"  -o name  Choose an alternate executable name\");\n    Write_Eol;\n \n+   --  Line for -p\n+\n+   Write_Str (\"  -p       Create missing obj, lib and exec dirs\");\n+   Write_Eol;\n+\n    --  Line for -P\n \n    Write_Str (\"  -Pproj   Use GNAT Project File proj\");\n@@ -171,10 +181,6 @@ begin\n    Write_Str (\"  -s       Recompile if compiler switches have changed\");\n    Write_Eol;\n \n-   --  Line for -S\n-\n-   Write_Str (\"  -S       Echo commands to stdout instead of stderr\");\n-\n    --  Line for -u\n \n    Write_Str (\"  -u       Unique compilation, only compile the given files\");\n@@ -195,6 +201,21 @@ begin\n    Write_Str (\"  -vPx     Specify verbosity when parsing GNAT Project Files\");\n    Write_Eol;\n \n+   --  Line for -we\n+\n+   Write_Str (\"  -we      treat all Warnings as Errors\");\n+   Write_Eol;\n+\n+   --  Line for -wn\n+\n+   Write_Str (\"  -wn      Normal Warning mode (cancels -we/-ws)\");\n+   Write_Eol;\n+\n+   --  Line for -ws\n+\n+   Write_Str (\"  -ws      Suppress all Warnings\");\n+   Write_Eol;\n+\n    --  Line for -x\n \n    Write_Str (\"  -x       \" &"}, {"sha": "a3d3c5bae462525972c0137a6e8e6654c7b09ab4", "filename": "gcc/ada/makeutl.adb", "status": "modified", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fmakeutl.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fmakeutl.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.adb?ref=958a816e69e829d04e175512a09f8b6f43cd2ffd", "patch": "@@ -24,13 +24,16 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n+with Ada.Command_Line; use Ada.Command_Line;\n+\n with Namet;    use Namet;\n with Osint;    use Osint;\n with Prj.Ext;\n with Prj.Util;\n with Snames;   use Snames;\n with Table;\n \n+with System.Case_Util; use System.Case_Util;\n with System.HTable;\n \n package body Makeutl is\n@@ -117,6 +120,68 @@ package body Makeutl is\n       Marks.Reset;\n    end Delete_All_Marks;\n \n+   ----------------------------\n+   -- Executable_Prefix_Path --\n+   ----------------------------\n+\n+   function Executable_Prefix_Path return String is\n+      Exec_Name : constant String := Command_Name;\n+\n+      function Get_Install_Dir (S : String) return String;\n+      --  S is the executable name preceeded by the absolute or relative\n+      --  path, e.g. \"c:\\usr\\bin\\gcc.exe\". Returns the absolute directory\n+      --  where \"bin\" lies (in the example \"C:\\usr\").\n+      --  If the executable is not in a \"bin\" directory, return \"\".\n+\n+      ---------------------\n+      -- Get_Install_Dir --\n+      ---------------------\n+\n+      function Get_Install_Dir (S : String) return String is\n+         Exec      : String  := S;\n+         Path_Last : Integer := 0;\n+\n+      begin\n+         for J in reverse Exec'Range loop\n+            if Exec (J) = Directory_Separator then\n+               Path_Last := J - 1;\n+               exit;\n+            end if;\n+         end loop;\n+\n+         if Path_Last >= Exec'First + 2 then\n+            To_Lower (Exec (Path_Last - 2 .. Path_Last));\n+         end if;\n+\n+         if Path_Last < Exec'First + 2\n+           or else Exec (Path_Last - 2 .. Path_Last) /= \"bin\"\n+           or else (Path_Last - 3 >= Exec'First\n+                     and then Exec (Path_Last - 3) /= Directory_Separator)\n+         then\n+            return \"\";\n+         end if;\n+\n+         return Normalize_Pathname (Exec (Exec'First .. Path_Last - 4));\n+      end Get_Install_Dir;\n+\n+   --  Beginning of Executable_Prefix_Path\n+\n+   begin\n+      --  First determine if a path prefix was placed in front of the\n+      --  executable name.\n+\n+      for J in reverse Exec_Name'Range loop\n+         if Exec_Name (J) = Directory_Separator then\n+            return Get_Install_Dir (Exec_Name);\n+         end if;\n+      end loop;\n+\n+      --  If we get here, the user has typed the executable name with no\n+      --  directory prefix.\n+\n+      return Get_Install_Dir (Locate_Exec_On_Path (Exec_Name).all);\n+   end Executable_Prefix_Path;\n+\n    ----------\n    -- Hash --\n    ----------"}, {"sha": "b2a75f770f5d29ce7f0f159e33e4336dfc32e3f7", "filename": "gcc/ada/makeutl.ads", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fmakeutl.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fmakeutl.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmakeutl.ads?ref=958a816e69e829d04e175512a09f8b6f43cd2ffd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2004-2005 Free Software Foundation, Inc.          --\n+--          Copyright (C) 2004-2006 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -43,6 +43,11 @@ package Makeutl is\n    --  Find the index of a unit in a source file. Return zero if the file\n    --  is not a multi-unit source file.\n \n+   function Executable_Prefix_Path return String;\n+   --  Return the absolute path parent directory of the directory where the\n+   --  current executable resides, if its directory is named \"bin\", otherwise\n+   --  return an empty string.\n+\n    function Is_External_Assignment (Argv : String) return Boolean;\n    --  Verify that an external assignment switch is syntactically correct\n    --"}, {"sha": "bebc66970fd289f1a5e1d01deea5ac4b66b6b33a", "filename": "gcc/ada/par.adb", "status": "modified", "additions": 13, "deletions": 17, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fpar.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fpar.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar.adb?ref=958a816e69e829d04e175512a09f8b6f43cd2ffd", "patch": "@@ -142,7 +142,7 @@ is\n    --  whose body is required and has not yet been found. The prefix SIS\n    --  stands for \"Subprogram IS\" handling.\n \n-   SIS_Entry_Active : Boolean;\n+   SIS_Entry_Active : Boolean := False;\n    --  Set True to indicate that an entry is active (i.e. that a subprogram\n    --  declaration has been encountered, and no body for this subprogram has\n    --  been encountered). The remaining fields are valid only if this is True.\n@@ -605,22 +605,22 @@ is\n       --  declaration of this type for details.\n \n       function P_Interface_Type_Definition\n-        (Abstract_Present : Boolean;\n-         Is_Synchronized  : Boolean) return Node_Id;\n+        (Abstract_Present : Boolean) return Node_Id;\n       --  Ada 2005 (AI-251): Parse the interface type definition part. Abstract\n       --  Present indicates if the reserved word \"abstract\" has been previously\n       --  found. It is used to report an error message because interface types\n-      --  are by definition abstract tagged. Is_Synchronized is True in case of\n-      --  task interfaces, protected interfaces, and synchronized interfaces;\n-      --  it is used to generate a record_definition node. In the rest of cases\n-      --  (limited interfaces and interfaces) we generate a record_definition\n+      --  are by definition abstract tagged. We generate a record_definition\n       --  node if the list of interfaces is empty; otherwise we generate a\n       --  derived_type_definition node (the first interface in this list is the\n       --  ancestor interface).\n \n-      function P_Null_Exclusion return Boolean;\n-      --  Ada 2005 (AI-231): Parse the null-excluding part. True indicates\n-      --  that the null-excluding part was present.\n+      function P_Null_Exclusion\n+        (Allow_Anonymous_In_95 : Boolean := False) return Boolean;\n+      --  Ada 2005 (AI-231): Parse the null-excluding part. A True result\n+      --  indicates that the null-excluding part was present.\n+      --  Allow_Anonymous_In_95 is True if we are in a context that allows\n+      --  anonymous access types in Ada 95, in which case \"not null\" is legal\n+      --  if it precedes \"access\".\n \n       function P_Subtype_Indication\n         (Not_Null_Present : Boolean := False) return Node_Id;\n@@ -1362,13 +1362,9 @@ begin\n \n                      Name := Uname (Uname'First .. Uname'Last - 2);\n \n-                     if Name = \"ada\"                    or else\n-                        Name = \"calendar\"               or else\n-                        Name = \"interfaces\"             or else\n-                        Name = \"system\"                 or else\n-                        Name = \"machine_code\"           or else\n-                        Name = \"unchecked_conversion\"   or else\n-                        Name = \"unchecked_deallocation\"\n+                     if Name = \"ada\"         or else\n+                        Name = \"interfaces\"  or else\n+                        Name = \"system\"\n                      then\n                         Error_Msg\n                           (\"language defined units may not be recompiled\","}, {"sha": "443a3e80e0c9e43660d8263c38354f662f91cb5a", "filename": "gcc/ada/prj-proc.adb", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fprj-proc.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fprj-proc.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fprj-proc.adb?ref=958a816e69e829d04e175512a09f8b6f43cd2ffd", "patch": "@@ -26,7 +26,7 @@\n \n with Err_Vars; use Err_Vars;\n with Namet;    use Namet;\n-with Opt;\n+with Opt;      use Opt;\n with Osint;    use Osint;\n with Output;   use Output;\n with Prj.Attr; use Prj.Attr;\n@@ -950,7 +950,7 @@ package body Prj.Proc is\n                   Value := Prj.Ext.Value_Of (Name, Default);\n \n                   if Value = No_Name then\n-                     if not Opt.Quiet_Output then\n+                     if not Quiet_Output then\n                         if Error_Report = null then\n                            Error_Msg\n                              (\"?undefined external reference\",\n@@ -1268,7 +1268,10 @@ package body Prj.Proc is\n          end loop;\n       end if;\n \n-      Success := Total_Errors_Detected = 0;\n+      Success :=\n+        Total_Errors_Detected = 0\n+          and then\n+            (Warning_Mode /= Treat_As_Error or else Warnings_Detected = 0);\n    end Process;\n \n    -------------------------------\n@@ -2295,7 +2298,7 @@ package body Prj.Proc is\n                 (Imported_Project_List).Next;\n          end loop;\n \n-         if Opt.Verbose_Mode then\n+         if Verbose_Mode then\n             Write_Str (\"Checking project file \"\"\");\n             Write_Str (Get_Name_String (Data.Name));\n             Write_Line (\"\"\"\");"}, {"sha": "a9239608b0a1858a7e559eb09c41f1a19935210d", "filename": "gcc/ada/switch-m.adb", "status": "modified", "additions": 213, "deletions": 191, "changes": 404, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fswitch-m.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fswitch-m.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.adb?ref=958a816e69e829d04e175512a09f8b6f43cd2ffd", "patch": "@@ -363,44 +363,40 @@ package body Switch.M is\n                         C := Switch_Chars (Ptr);\n                         Ptr := Ptr + 1;\n \n-                        --  'w' should be skipped in -gnatw\n+                        --  -gnatyMxxx\n \n-                        if C /= 'w' or else Storing (First_Stored) /= 'w' then\n-\n-                           --  -gnatyMxxx\n-\n-                           if C = 'M'\n-                             and then Storing (First_Stored) = 'y' then\n-                              Last_Stored := First_Stored + 1;\n-                              Storing (Last_Stored) := 'M';\n-\n-                              while Ptr <= Max loop\n-                                 C := Switch_Chars (Ptr);\n-                                 exit when C not in '0' .. '9';\n-                                 Last_Stored := Last_Stored + 1;\n-                                 Storing (Last_Stored) := C;\n-                                 Ptr := Ptr + 1;\n-                              end loop;\n-\n-                              --  If there is no digit after -gnatyM,\n-                              --  the switch is invalid.\n+                        if C = 'M' and then\n+                          Storing (First_Stored) = 'y'\n+                        then\n+                           Last_Stored := First_Stored + 1;\n+                           Storing (Last_Stored) := 'M';\n \n-                              if Last_Stored = First_Stored + 1 then\n-                                 Last := 0;\n-                                 return;\n+                           while Ptr <= Max loop\n+                              C := Switch_Chars (Ptr);\n+                              exit when C not in '0' .. '9';\n+                              Last_Stored := Last_Stored + 1;\n+                              Storing (Last_Stored) := C;\n+                              Ptr := Ptr + 1;\n+                           end loop;\n \n-                              else\n-                                 Add_Switch_Component\n-                                   (Storing (Storing'First .. Last_Stored));\n-                              end if;\n+                           --  If there is no digit after -gnatyM,\n+                           --  the switch is invalid.\n \n-                           --  All other switches are -gnatxx\n+                           if Last_Stored = First_Stored + 1 then\n+                              Last := 0;\n+                              return;\n \n                            else\n-                              Storing (First_Stored + 1) := C;\n                               Add_Switch_Component\n-                                (Storing (Storing'First .. First_Stored + 1));\n+                                (Storing (Storing'First .. Last_Stored));\n                            end if;\n+\n+                           --  All other switches are -gnatxx\n+\n+                        else\n+                           Storing (First_Stored + 1) := C;\n+                           Add_Switch_Component\n+                             (Storing (Storing'First .. First_Stored + 1));\n                         end if;\n                      end loop;\n \n@@ -481,12 +477,19 @@ package body Switch.M is\n    -- Scan_Make_Switches --\n    ------------------------\n \n-   procedure Scan_Make_Switches (Switch_Chars : String) is\n+   procedure Scan_Make_Switches\n+     (Switch_Chars : String;\n+      Success      : out Boolean)\n+   is\n       Ptr : Integer          := Switch_Chars'First;\n       Max : constant Integer := Switch_Chars'Last;\n       C   : Character        := ' ';\n \n    begin\n+      --  Assume a good switch\n+\n+      Success := True;\n+\n       --  Skip past the initial character (must be the switch character)\n \n       if Ptr = Max then\n@@ -496,70 +499,42 @@ package body Switch.M is\n          Ptr := Ptr + 1;\n       end if;\n \n-      --  A little check, \"gnat\" at the start of a switch is not allowed\n-      --  except for the compiler (where it was already removed)\n+      --  A little check, \"gnat\" at the start of a switch is for the compiler\n \n       if Switch_Chars'Length >= Ptr + 3\n         and then Switch_Chars (Ptr .. Ptr + 3) = \"gnat\"\n       then\n-         Osint.Fail\n-           (\"invalid switch: \"\"\", Switch_Chars, \"\"\" (gnat not needed here)\");\n+         Success := False;\n+         return;\n       end if;\n \n-      --  Loop to scan through switches given in switch string\n-\n-      Check_Switch : begin\n-         C := Switch_Chars (Ptr);\n-\n-         --  Processing for a switch\n-\n-         case C is\n-\n-         when 'a' =>\n-            Ptr := Ptr + 1;\n-            Check_Readonly_Files := True;\n-\n-         --  Processing for b switch\n-\n-         when 'b' =>\n-            Ptr := Ptr + 1;\n-            Bind_Only  := True;\n-            Make_Steps := True;\n-\n-         --  Processing for B switch\n+      C := Switch_Chars (Ptr);\n \n-         when 'B' =>\n-            Ptr := Ptr + 1;\n-            Build_Bind_And_Link_Full_Project := True;\n-\n-         --  Processing for c switch\n-\n-         when 'c' =>\n-            Ptr := Ptr + 1;\n-            Compile_Only := True;\n-            Make_Steps   := True;\n+      --  Multiple character switches\n \n-         --  Processing for C switch\n+      if Switch_Chars'Length > 2 then\n+         if Switch_Chars = \"--create-missing-dirs\" then\n+            Setup_Projects := True;\n \n-         when 'C' =>\n+         elsif C = 'v' and then Switch_Chars'Length = 3 then\n             Ptr := Ptr + 1;\n-            Create_Mapping_File := True;\n-\n-         --  Processing for D switch\n+            Verbose_Mode := True;\n \n-         when 'D' =>\n-            Ptr := Ptr + 1;\n+            case Switch_Chars (Ptr) is\n+               when 'l' =>\n+                  Verbosity_Level := Opt.Low;\n \n-            if Object_Directory_Present then\n-               Osint.Fail (\"duplicate -D switch\");\n+               when 'm' =>\n+                  Verbosity_Level := Opt.Medium;\n \n-            else\n-               Object_Directory_Present := True;\n-            end if;\n+               when 'h' =>\n+                  Verbosity_Level := Opt.High;\n \n-         --  Processing for d switch\n+               when others =>\n+                  Success := False;\n+            end case;\n \n-         when 'd' =>\n+         elsif C = 'd' then\n \n             --  Note: for the debug switch, the remaining characters in this\n             --  switch field must all be debug flags, since all valid switch\n@@ -580,17 +555,9 @@ package body Switch.M is\n                end if;\n             end loop;\n \n-            return;\n-\n-         --  Processing for e switch\n-\n-         when 'e' =>\n+         elsif C = 'e' then\n             Ptr := Ptr + 1;\n \n-            if Ptr > Max then\n-               Bad_Switch (Switch_Chars);\n-            end if;\n-\n             case Switch_Chars (Ptr) is\n \n                --  Processing for eI switch\n@@ -599,164 +566,219 @@ package body Switch.M is\n                   Ptr := Ptr + 1;\n                   Scan_Pos (Switch_Chars, Max, Ptr, Main_Index, C);\n \n+                  if Ptr <= Max then\n+                     Bad_Switch (Switch_Chars);\n+                  end if;\n+\n                --  Processing for eL switch\n \n                when 'L' =>\n-                  Ptr := Ptr + 1;\n-                  Follow_Links := True;\n+                  if Ptr /= Max then\n+                     Bad_Switch (Switch_Chars);\n+\n+                  else\n+                     Follow_Links := True;\n+                  end if;\n+\n+               --  Processing for eS switch\n+\n+               when 'S' =>\n+                  if Ptr /= Max then\n+                     Bad_Switch (Switch_Chars);\n+\n+                  else\n+                     Commands_To_Stdout := True;\n+                  end if;\n \n                when others =>\n                   Bad_Switch (Switch_Chars);\n             end case;\n \n-         --  Processing for f switch\n-\n-         when 'f' =>\n+         elsif C = 'j' then\n             Ptr := Ptr + 1;\n-            Force_Compilations := True;\n \n-         --  Processing for F switch\n+            declare\n+               Max_Proc : Pos;\n+            begin\n+               Scan_Pos (Switch_Chars, Max, Ptr, Max_Proc, C);\n \n-         when 'F' =>\n-            Ptr := Ptr + 1;\n-            Full_Path_Name_For_Brief_Errors := True;\n+               if Ptr <= Max then\n+                  Bad_Switch (Switch_Chars);\n \n-         --  Processing for h switch\n+               else\n+                  Maximum_Processes := Positive (Max_Proc);\n+               end if;\n+            end;\n \n-         when 'h' =>\n+         elsif C = 'w' and then Switch_Chars'Length = 3 then\n             Ptr := Ptr + 1;\n-            Usage_Requested := True;\n \n-         --  Processing for i switch\n+            if Switch_Chars = \"-we\" then\n+               Warning_Mode := Treat_As_Error;\n \n-         when 'i' =>\n-            Ptr := Ptr + 1;\n-            In_Place_Mode := True;\n+            elsif Switch_Chars = \"-wn\" then\n+               Warning_Mode := Normal;\n \n-         --  Processing for j switch\n+            elsif Switch_Chars = \"-ws\" then\n+               Warning_Mode  := Suppress;\n \n-         when 'j' =>\n-            if Ptr = Max then\n-               Bad_Switch (Switch_Chars);\n+            else\n+               Success := False;\n             end if;\n \n-            Ptr := Ptr + 1;\n+         else\n+            Success := False;\n+         end if;\n \n-            declare\n-               Max_Proc : Pos;\n-            begin\n-               Scan_Pos (Switch_Chars, Max, Ptr, Max_Proc, C);\n-               Maximum_Processes := Positive (Max_Proc);\n-            end;\n+      --  Single-character switches\n \n-         --  Processing for k switch\n+      else\n+         Check_Switch : begin\n \n-         when 'k' =>\n-            Ptr := Ptr + 1;\n-            Keep_Going := True;\n+            case C is\n \n-         --  Processing for l switch\n+               when 'a' =>\n+                  Check_Readonly_Files := True;\n \n-         when 'l' =>\n-            Ptr := Ptr + 1;\n-            Link_Only  := True;\n-            Make_Steps := True;\n+               --  Processing for b switch\n \n-         when 'M' =>\n-            Ptr := Ptr + 1;\n-            List_Dependencies := True;\n+               when 'b' =>\n+                  Bind_Only  := True;\n+                  Make_Steps := True;\n \n-         --  Processing for n switch\n+               --  Processing for B switch\n \n-         when 'n' =>\n-            Ptr := Ptr + 1;\n-            Do_Not_Execute := True;\n+               when 'B' =>\n+                  Build_Bind_And_Link_Full_Project := True;\n \n-         --  Processing for o switch\n+               --  Processing for c switch\n \n-         when 'o' =>\n-            Ptr := Ptr + 1;\n+               when 'c' =>\n+                  Compile_Only := True;\n+                  Make_Steps   := True;\n \n-            if Output_File_Name_Present then\n-               Osint.Fail (\"duplicate -o switch\");\n-            else\n-               Output_File_Name_Present := True;\n-            end if;\n+               --  Processing for C switch\n \n-         --  Processing for q switch\n+               when 'C' =>\n+                  Create_Mapping_File := True;\n \n-         when 'q' =>\n-            Ptr := Ptr + 1;\n-            Quiet_Output := True;\n+               --  Processing for D switch\n \n-         --  Processing for R switch\n+               when 'D' =>\n+                  if Object_Directory_Present then\n+                     Osint.Fail (\"duplicate -D switch\");\n \n-         when 'R' =>\n-            Ptr := Ptr + 1;\n-            Run_Path_Option := False;\n+                  else\n+                     Object_Directory_Present := True;\n+                  end if;\n \n-         --  Processing for s switch\n+               --  Processing for f switch\n \n-         when 's' =>\n-            Ptr := Ptr + 1;\n-            Check_Switches := True;\n+               when 'f' =>\n+                  Force_Compilations := True;\n \n-         --  Processing for S switch\n+               --  Processing for F switch\n \n-         when 'S' =>\n-            Ptr := Ptr + 1;\n-            Commands_To_Stdout := True;\n+               when 'F' =>\n+                  Full_Path_Name_For_Brief_Errors := True;\n \n-         --  Processing for v switch\n+               --  Processing for h switch\n \n-         when 'v' =>\n-            Ptr := Ptr + 1;\n-            Verbose_Mode := True;\n-            Verbosity_Level := Opt.High;\n+               when 'h' =>\n+                  Usage_Requested := True;\n \n-            if Ptr <= Max then\n-               case Switch_Chars (Ptr) is\n-                  when 'l' =>\n-                     Verbosity_Level := Opt.Low;\n+               --  Processing for i switch\n \n-                  when 'm' =>\n-                     Verbosity_Level := Opt.Medium;\n+               when 'i' =>\n+                  In_Place_Mode := True;\n \n-                  when 'h' =>\n-                     Verbosity_Level := Opt.High;\n+               --  Processing for j switch\n \n-                  when others =>\n-                     Bad_Switch (Switch_Chars);\n-               end case;\n+               when 'j' =>\n+                  --  -j not followed by a number is an error\n \n-               Ptr := Ptr + 1;\n-            end if;\n+                  Bad_Switch (Switch_Chars);\n \n-         --  Processing for x switch\n+               --  Processing for k switch\n \n-         when 'x' =>\n-            Ptr := Ptr + 1;\n-            External_Unit_Compilation_Allowed := True;\n+               when 'k' =>\n+                  Keep_Going := True;\n \n-         --  Processing for z switch\n+               --  Processing for l switch\n \n-         when 'z' =>\n-            Ptr := Ptr + 1;\n-            No_Main_Subprogram := True;\n+               when 'l' =>\n+                  Link_Only  := True;\n+                  Make_Steps := True;\n \n-         --  Anything else is an error (illegal switch character)\n+               --  Processing for M switch\n \n-         when others =>\n-            Bad_Switch (Switch_Chars);\n+               when 'M' =>\n+                  List_Dependencies := True;\n \n-         end case;\n+               --  Processing for n switch\n \n-         if Ptr <= Max then\n-            Bad_Switch (Switch_Chars);\n-         end if;\n+               when 'n' =>\n+                  Do_Not_Execute := True;\n+\n+               --  Processing for o switch\n+\n+               when 'o' =>\n+                  if Output_File_Name_Present then\n+                     Osint.Fail (\"duplicate -o switch\");\n+                  else\n+                     Output_File_Name_Present := True;\n+                  end if;\n+\n+               --  Processing for p switch\n+\n+               when 'p' =>\n+                  Setup_Projects := True;\n+\n+               --  Processing for q switch\n+\n+               when 'q' =>\n+                  Quiet_Output := True;\n+\n+               --  Processing for R switch\n+\n+               when 'R' =>\n+                  Run_Path_Option := False;\n \n-      end Check_Switch;\n+               --  Processing for s switch\n \n+               when 's' =>\n+                  Ptr := Ptr + 1;\n+                  Check_Switches := True;\n+\n+               --  Processing for v switch\n+\n+               when 'v' =>\n+                  Verbose_Mode := True;\n+                  Verbosity_Level := Opt.High;\n+\n+                  --  Processing for x switch\n+\n+               when 'x' =>\n+                  External_Unit_Compilation_Allowed := True;\n+\n+                  --  Processing for z switch\n+\n+               when 'z' =>\n+                  No_Main_Subprogram := True;\n+\n+                  --  Any other small letter is an illegal switch\n+\n+               when others =>\n+                  if C in 'a' .. 'z' then\n+                     Bad_Switch (Switch_Chars);\n+\n+                  else\n+                     Success := False;\n+                  end if;\n+\n+            end case;\n+         end Check_Switch;\n+      end if;\n    end Scan_Make_Switches;\n \n end Switch.M;"}, {"sha": "fc073a00e02fbfe6a977795fbb0507a350312f24", "filename": "gcc/ada/switch-m.ads", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fswitch-m.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fswitch-m.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-m.ads?ref=958a816e69e829d04e175512a09f8b6f43cd2ffd", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2001 Free Software Foundation, Inc.               --\n+--          Copyright (C) 2001-2006, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -34,14 +34,14 @@ with GNAT.OS_Lib; use GNAT.OS_Lib;\n \n package Switch.M is\n \n-   procedure Scan_Make_Switches (Switch_Chars : String);\n-   --  Procedures to scan out binder switches stored in the given string.\n-   --  The first character is known to be a valid switch character, and there\n-   --  are no blanks or other switch terminator characters in the string, so\n-   --  the entire string should consist of valid switch characters, except that\n-   --  an optional terminating NUL character is allowed. A bad switch causes\n-   --  a fatal error exit and control does not return. The call also sets\n-   --  Usage_Requested to True if a ? switch is encountered.\n+   procedure Scan_Make_Switches\n+     (Switch_Chars : String;\n+      Success      : out Boolean);\n+   --  Scan a gnatmake switch and act accordingly. For switches that are\n+   --  recognized, Success is set to True. A switch that is not recognized and\n+   --  consists of one small letter causes a fatal error exit and control does\n+   --  not return. For all other not recognized switches, Success is set to\n+   --  False, so that the switch may be passed to the compiler.\n \n    procedure Normalize_Compiler_Switches\n      (Switch_Chars : String;"}, {"sha": "9aa3939a884d31a9f964f7007370c708be8f901d", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 228, "deletions": 64, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/958a816e69e829d04e175512a09f8b6f43cd2ffd/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=958a816e69e829d04e175512a09f8b6f43cd2ffd", "patch": "@@ -1961,6 +1961,8 @@ package VMS_Data is\n                                                \"-gnaty9 \"                  &\n                                             \"ATTRIBUTE \"                   &\n                                                \"-gnatya \"                  &\n+                                            \"ARRAY_INDEXES \"               &\n+                                               \"-gnatyA \"                  &\n                                             \"BLANKS \"                      &\n                                                \"-gnatyb \"                  &\n                                             \"COMMENTS \"                    &\n@@ -2030,6 +2032,12 @@ package VMS_Data is\n    --                           underscore must be uppercase.\n    --                           All other letters must be lowercase.\n    --\n+   --      ARRAY_INDEXES        Check indexes of array attributes.\n+   --                           For array attributes First, Last, Range,\n+   --                           or Length, the index number must be omitted\n+   --                           for one-dimensional arrays and is required\n+   --                           for multi-dimensional arrays.\n+   --\n    --      BLANKS               Blanks not allowed at statement end.\n    --                           Trailing blanks are not allowed at the end of\n    --                           statements. The purpose of this rule, together\n@@ -4101,6 +4109,14 @@ package VMS_Data is\n    --   when the only modifications to a source file consist in\n    --   adding/removing comments, empty lines, spaces or tabs.\n \n+   S_Make_Missing : aliased constant S := \"/CREATE_MISSING_DIRS \"          &\n+                                            \"-p\";\n+   --        /NOCREATE_MISSING_DIRS (D)\n+   --        /CREATE_MISSING_DIRS\n+   --\n+   --   When an object directory, a library directory or an exec directory\n+   --   in missing, attempt to create the directory.\n+\n    S_Make_Nolink  : aliased constant S := \"/NOLINK \"                       &\n                                             \"-c\";\n    --        /NOLINK\n@@ -4212,7 +4228,7 @@ package VMS_Data is\n    --   When looking for source files also look in the specified directories.\n \n    S_Make_Stand   : aliased constant S := \"/STANDARD_OUTPUT_FOR_COMMANDS \" &\n-                                            \"-S\";\n+                                            \"-eS\";\n    --        /NOSTANDARD_OUTPUT_FOR_COMMANDS (D)\n    --        /STANDARD_OUTPUT_FOR_COMMANDS\n    --\n@@ -4286,6 +4302,7 @@ package VMS_Data is\n       S_Make_Med_Verb'Access,\n       S_Make_Mess    'Access,\n       S_Make_Minimal 'Access,\n+      S_Make_Missing 'Access,\n       S_Make_Nolink  'Access,\n       S_Make_Nomain  'Access,\n       S_Make_Nonpro  'Access,\n@@ -4993,6 +5010,36 @@ package VMS_Data is\n    --   used in the default dictionary file, are defined in the GNAT User's\n    --   Guide.\n \n+   S_Pretty_Encoding  : aliased constant S := \"/RESULT_ENCODING=\"          &\n+                                              \"BRACKETS \"                  &\n+                                                 \"-Wb \"                    &\n+                                              \"HEX_ESC \"                   &\n+                                                 \"-Wh \"                    &\n+                                              \"UPPER_HALF \"                &\n+                                                 \"-Wu \"                    &\n+                                              \"SHIFT_JIS \"                 &\n+                                                 \"-Ws \"                    &\n+                                              \"EUC \"                       &\n+                                                 \"-We \"                    &\n+                                              \"UTF_8 \"                     &\n+                                                 \"-W8\";\n+   --        /RESULT_ENCODING[=encoding-option]\n+   --\n+   --   Specify the wide character encoding of the result file.\n+   --   '=encoding-option' may be one of:\n+   --\n+   --      BRACKETS (D)      Brackets encoding.\n+   --\n+   --      HEX_ESC           Hex ESC encoding.\n+   --\n+   --      UPPER_HALF        Upper half encoding.\n+   --\n+   --      SHIFT_JIS         Shift-JIS encoding.\n+   --\n+   --      EUC               EUC Encoding.\n+   --\n+   --      UTF_8             UTF-8 encoding.\n+\n    S_Pretty_Files     : aliased constant S := \"/FILES=@\"                   &\n                                                  \"-files=@\";\n    --      /FILES=filename\n@@ -5225,6 +5272,7 @@ package VMS_Data is\n       S_Pretty_Dico      'Access,\n       S_Pretty_Eol       'Access,\n       S_Pretty_Ext       'Access,\n+      S_Pretty_Encoding  'Access,\n       S_Pretty_Files     'Access,\n       S_Pretty_Forced    'Access,\n       S_Pretty_Formfeed  'Access,\n@@ -5249,69 +5297,6 @@ package VMS_Data is\n       S_Pretty_Verbose   'Access,\n       S_Pretty_Warnings  'Access);\n \n-   -----------------------------\n-   -- Switches for GNAT SETUP --\n-   -----------------------------\n-\n-   S_Setup_Ext       : aliased constant S := \"/EXTERNAL_REFERENCE=\" & '\"' &\n-                                              \"-X\" & '\"';\n-   --        /EXTERNAL_REFERENCE=\"name=val\"\n-   --\n-   --   Specifies an external reference to the project manager. Useful only if\n-   --   /PROJECT_FILE is used.\n-   --\n-   --   Example:\n-   --      /EXTERNAL_REFERENCE=\"DEBUG=TRUE\"\n-\n-   S_Setup_Mess      : aliased constant S := \"/MESSAGES_PROJECT_FILE=\"    &\n-                                             \"DEFAULT \"                   &\n-                                                \"-vP0 \"                   &\n-                                             \"MEDIUM \"                    &\n-                                                \"-vP1 \"                   &\n-                                             \"HIGH \"                      &\n-                                                \"-vP2\";\n-   --        /MESSAGES_PROJECT_FILE[=messages-option]\n-   --\n-   --   Specifies the \"verbosity\" of the parsing of project files.\n-   --   messages-option may be one of the following:\n-   --\n-   --      DEFAULT (D)  No messages are output if there is no error or warning.\n-   --\n-   --      MEDIUM       A small number of messages are output.\n-   --\n-   --      HIGH         A great number of messages are output, most of them not\n-   --                   being useful for the user.\n-\n-   S_Setup_Project   : aliased constant S := \"/PROJECT_FILE=<\"            &\n-                                                \"-P>\";\n-   --        /PROJECT_FILE=filename\n-   --\n-   --   Specifies the main project file to be used. The project files rooted\n-   --   at the main project file are parsed and non existing object\n-   --   directories, library directories and exec directories are created.\n-\n-   S_Setup_Quiet     : aliased constant S := \"/QUIET \"                    &\n-                                            \"-q\";\n-   --        /NOQUIET (D)\n-   --        /QUIET\n-   --\n-   --   Work quietly, only output warnings and errors.\n-\n-   S_Setup_Verbose   : aliased constant S := \"/VERBOSE \"                  &\n-                                              \"-v\";\n-   --        /NOVERBOSE (D)\n-   --        /VERBOSE\n-   --\n-   --   Verbose mode; GNAT PRETTY generates version information and then a\n-   --   trace of the actions it takes to produce or obtain the ASIS tree.\n-\n-   Setup_Switches : aliased constant Switches :=\n-     (S_Setup_Ext     'Access,\n-      S_Setup_Mess    'Access,\n-      S_Setup_Project 'Access,\n-      S_Setup_Quiet   'Access,\n-      S_Setup_Verbose 'Access);\n-\n    ------------------------------\n    -- Switches for GNAT SHARED --\n    ------------------------------\n@@ -5390,6 +5375,185 @@ package VMS_Data is\n       S_Shared_Verb    'Access,\n       S_Shared_ZZZZZ   'Access);\n \n+   -----------------------------\n+   -- Switches for GNAT STACK --\n+   -----------------------------\n+\n+   S_Stack_All        : aliased constant S := \"/ALL_SUBPROGRAMS \"          &\n+                                                \"-a\";\n+   --        /NOALL_SUBPROGRAMS (D)\n+   --        /ALL_SUBPROGRAMS\n+   --\n+   --   Consider all subprograms as entry points.\n+\n+   S_Stack_All_Cycles : aliased constant S := \"/ALL_CYCLES \"               &\n+                                                \"-ca\";\n+   --        /NOALL_CYCLES (D)\n+   --        /ALL_CYCLES\n+   --\n+   --   Extract all possible cycles in the call graph.\n+\n+   S_Stack_All_Prjs   : aliased constant S := \"/ALL_PROJECTS \"             &\n+                                                \"-U\";\n+   --        /NOALL_PROJECTS (D)\n+   --        /ALL_PROJECTS\n+   --\n+   --   When GNAT STACK is used with a Project File and no source is\n+   --   specified, the underlying tool gnatstack is called for all the\n+   --   units of all the Project Files in the project tree.\n+\n+   S_Stack_Debug      : aliased constant S := \"/DEBUG \"                    &\n+                                                \"-g\";\n+   --        /NODEBUG (D)\n+   --        /DEBUG\n+   --\n+   --   Generate internal debug information.\n+\n+   S_Stack_Directory  : aliased constant S := \"/DIRECTORY=*\"               &\n+                                                \"-aO*\";\n+   --        /DIRECTORY=(direc[,...])\n+   --\n+   --   When looking for .ci files look also in directories specified.\n+\n+   S_Stack_Entries    : aliased constant S := \"/ENTRIES=*\"                 &\n+                                                \"-e*\";\n+   --\n+   --        /ENTRY=(entry_point[,...])\n+   --\n+   --   Name of symbol to be used as entry point for the analysis.\n+\n+   S_Stack_Files      : aliased constant S := \"/FILES=@\"                   &\n+                                                \"-files=@\";\n+   --      /FILES=filename\n+   --\n+   --   Take as arguments the files that are listed in the specified\n+   --   text file.\n+\n+   S_Stack_Help       : aliased constant S := \"/HELP \"                     &\n+                                                \"-h\";\n+   --        /NOHELP (D)\n+   --        /HELP\n+   --\n+   --   Output a message explaining the usage of gnatstack.\n+\n+   S_Stack_List       : aliased constant S := \"/LIST=#\"                    &\n+                                                \"-l#\";\n+   --        /LIST=nnn\n+   --\n+   --   Print the nnn subprograms requiring the biggest local stack usage. By\n+   --   default none will be displayed.\n+\n+   S_Stack_Order      : aliased constant S := \"/ORDER=\"                    &\n+                                              \"STACK \"                     &\n+                                                 \"-os \"                    &\n+                                              \"ALPHABETICAL \"              &\n+                                                 \"-oa\";\n+   --        /ORDER[=order-option]\n+   --\n+   --   Specifies the order for displaying the different call graphs.\n+   --   order-option may be one of the following:\n+   --\n+   --      STACK (D)    Select stack usage order\n+   --\n+   --      ALPHABETICAL Select alphabetical order\n+\n+   S_Stack_Path       : aliased constant S := \"/PATH \"                     &\n+                                                \"-p\";\n+   --        /NOPATH (D)\n+   --        /PATH\n+   --\n+   --   Print all the subprograms that make up the worst-case path for every\n+   --   entry point.\n+\n+   S_Stack_Project    : aliased constant S := \"/PROJECT_FILE=<\"            &\n+                                                \"-P>\";\n+   --        /PROJECT_FILE=filename\n+   --\n+   --   Specifies the main project file to be used. The project files rooted\n+   --   at the main project file will be parsed before the invocation of\n+   --   gnatstack.\n+\n+   S_Stack_Output     : aliased constant S := \"/OUTPUT=@\"                  &\n+                                                \"-f@\";\n+   --        /OUTPUT=filename\n+   --\n+   --   Name of the file containing the generated graph (VCG format).\n+\n+   S_Stack_Regexp     : aliased constant S := \"/EXPRESSION=|\"              &\n+                                                \"-r|\";\n+   --\n+   --        /EXPRESSION=regular-expression\n+   --\n+   --   Any symbol matching the regular expression will be considered as a\n+   --   potential entry point for the analysis.\n+\n+   S_Stack_Unbounded  : aliased constant S := \"/UNBOUNDED=#\"               &\n+                                                \"-d#\";\n+   --        /UNBOUNDED=nnn\n+   --\n+   --   Default stack size to be used for unbounded (dynamic) frames.\n+\n+   S_Stack_Unknown    : aliased constant S := \"/UNKNOWN=#\"                 &\n+                                                \"-u#\";\n+   --        /UNKNOWN=nnn\n+   --\n+   --   Default stack size to be used for unknown (external) calls.\n+\n+   S_Stack_Verbose    : aliased constant S := \"/VERBOSE \"                  &\n+                                                \"-v\";\n+   --        /NOVERBOSE (D)\n+   --        /VERBOSE\n+   --\n+   --   Specifies the amount of information to be displayed about the\n+   --   different subprograms. In verbose mode the full location of the\n+   --   subprogram will be part of the output, as well as detailed information\n+   --   about inaccurate data.\n+\n+   S_Stack_Warnings   : aliased constant S := \"/WARNINGS=\"                 &\n+                                              \"ALL \"                       &\n+                                                 \"-Wa \"                    &\n+                                              \"CYCLES \"                    &\n+                                                 \"-Wc \"                    &\n+                                              \"UNBOUNDED \"                 &\n+                                                 \"-Wu \"                    &\n+                                              \"EXTERNAL \"                  &\n+                                                 \"-We \"                    &\n+                                              \"INDIRECT \"                  &\n+                                                 \"-Wi\";\n+   --        /WARNINGS[=(keyword[,...])]\n+   --\n+   --    The following keywords are supported:\n+   --\n+   --        ALL        Turn on all optional warnings\n+   --\n+   --        CYCLES     Turn on warnings for cycles\n+   --\n+   --        UNBOUNDED  Turn on warnings for unbounded frames\n+   --\n+   --        EXTERNAL   Turn on warnings for external calls\n+   --\n+   --        INDIRECT   Turn on warnings for indirect calls\n+\n+   Stack_Switches : aliased constant Switches :=\n+     (S_Stack_All        'Access,\n+      S_Stack_All_Cycles 'Access,\n+      S_Stack_All_Prjs   'Access,\n+      S_Stack_Debug      'Access,\n+      S_Stack_Directory  'Access,\n+      S_Stack_Entries    'Access,\n+      S_Stack_Files      'Access,\n+      S_Stack_Help       'Access,\n+      S_Stack_List       'Access,\n+      S_Stack_Order      'Access,\n+      S_Stack_Path       'Access,\n+      S_Stack_Project    'Access,\n+      S_Stack_Output     'Access,\n+      S_Stack_Regexp     'Access,\n+      S_Stack_Unbounded  'Access,\n+      S_Stack_Unknown    'Access,\n+      S_Stack_Verbose    'Access,\n+      S_Stack_Warnings   'Access);\n+\n    ----------------------------\n    -- Switches for GNAT STUB --\n    ----------------------------"}]}