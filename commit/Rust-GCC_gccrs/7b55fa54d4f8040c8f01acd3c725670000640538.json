{"sha": "7b55fa54d4f8040c8f01acd3c725670000640538", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2I1NWZhNTRkNGY4MDQwYzhmMDFhY2QzYzcyNTY3MDAwMDY0MDUzOA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2014-12-01T13:49:20Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2014-12-01T13:49:20Z"}, "message": "re PR libstdc++/63840 (std::function copy constructor deletes an uninitialized pointer if new fails)\n\n\tPR libstdc++/63840\n\t* include/std/functional (function::function(const function&)): Set\n\t_M_manager after operations that might throw.\n\t* include/tr1/functional (function::function(const function&),\n\tfunction::function(_Functor, _Useless)): Likewise.\n\t* testsuite/20_util/function/63840.cc: New.\n\t* testsuite/tr1/3_function_objects/function/63840.cc: New.\n\nFrom-SVN: r218215", "tree": {"sha": "6d4a55ffd31c569daea99eed047d23e33962c50d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6d4a55ffd31c569daea99eed047d23e33962c50d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7b55fa54d4f8040c8f01acd3c725670000640538", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b55fa54d4f8040c8f01acd3c725670000640538", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b55fa54d4f8040c8f01acd3c725670000640538", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b55fa54d4f8040c8f01acd3c725670000640538/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31a46aa7d4f7d810624d98547948833d7bba4756", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31a46aa7d4f7d810624d98547948833d7bba4756", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31a46aa7d4f7d810624d98547948833d7bba4756"}], "stats": {"total": 126, "additions": 123, "deletions": 3}, "files": [{"sha": "12dd1e3c4cbdf34242657342639ed554331cb0fc", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b55fa54d4f8040c8f01acd3c725670000640538/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b55fa54d4f8040c8f01acd3c725670000640538/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=7b55fa54d4f8040c8f01acd3c725670000640538", "patch": "@@ -1,3 +1,13 @@\n+2014-12-01  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\tPR libstdc++/63840\n+\t* include/std/functional (function::function(const function&)): Set\n+\t_M_manager after operations that might throw.\n+\t* include/tr1/functional (function::function(const function&),\n+\tfunction::function(_Functor, _Useless)): Likewise.\n+\t* testsuite/20_util/function/63840.cc: New.\n+\t* testsuite/tr1/3_function_objects/function/63840.cc: New.\n+\n 2014-11-30  Jonathan Wakely  <jwakely@redhat.com>\n \n \t* config/abi/pre/gnu.ver: Fix ios_base::failure exports."}, {"sha": "158dfa11606e1fa2b88e4415c5c64cb60d4499bd", "filename": "libstdc++-v3/include/std/functional", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b55fa54d4f8040c8f01acd3c725670000640538/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b55fa54d4f8040c8f01acd3c725670000640538/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Ffunctional?ref=7b55fa54d4f8040c8f01acd3c725670000640538", "patch": "@@ -2239,9 +2239,9 @@ _GLIBCXX_MEM_FN_TRAITS(&&, false_type, true_type)\n     {\n       if (static_cast<bool>(__x))\n \t{\n+\t  __x._M_manager(_M_functor, __x._M_functor, __clone_functor);\n \t  _M_invoker = __x._M_invoker;\n \t  _M_manager = __x._M_manager;\n-\t  __x._M_manager(_M_functor, __x._M_functor, __clone_functor);\n \t}\n     }\n "}, {"sha": "58af9102441277bfc61b79e8b8db218857cfcf86", "filename": "libstdc++-v3/include/tr1/functional", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b55fa54d4f8040c8f01acd3c725670000640538/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b55fa54d4f8040c8f01acd3c725670000640538/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Ftr1%2Ffunctional?ref=7b55fa54d4f8040c8f01acd3c725670000640538", "patch": "@@ -2112,9 +2112,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     {\n       if (static_cast<bool>(__x))\n \t{\n+\t  __x._M_manager(_M_functor, __x._M_functor, __clone_functor);\n \t  _M_invoker = __x._M_invoker;\n \t  _M_manager = __x._M_manager;\n-\t  __x._M_manager(_M_functor, __x._M_functor, __clone_functor);\n \t}\n     }\n \n@@ -2130,9 +2130,9 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n \tif (_My_handler::_M_not_empty_function(__f))\n \t  {\n+\t    _My_handler::_M_init_functor(_M_functor, __f);\n \t    _M_invoker = &_My_handler::_M_invoke;\n \t    _M_manager = &_My_handler::_M_manager;\n-\t    _My_handler::_M_init_functor(_M_functor, __f);\n \t  }\n       }\n "}, {"sha": "cf80aa1dc115d91442f7e981b26453a2a578dd47", "filename": "libstdc++-v3/testsuite/20_util/function/63840.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b55fa54d4f8040c8f01acd3c725670000640538/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F63840.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b55fa54d4f8040c8f01acd3c725670000640538/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F63840.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Ffunction%2F63840.cc?ref=7b55fa54d4f8040c8f01acd3c725670000640538", "patch": "@@ -0,0 +1,55 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+// { dg-options \"-std=gnu++11\" }\n+\n+#include <functional>\n+#include <stdexcept>\n+#include <testsuite_hooks.h>\n+\n+struct functor\n+{\n+  functor() = default;\n+\n+  functor(const functor&)\n+  {\n+    throw std::runtime_error(\"test\");\n+  }\n+\n+  functor(functor&& f) = default;\n+\n+  void operator()() const { }\n+};\n+\n+\n+void\n+test01()\n+{\n+  std::function<void()> f = functor{};\n+  try {\n+    auto g = f;\n+  } catch (const std::runtime_error& e) {\n+    return;\n+  }\n+  VERIFY(false);\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}, {"sha": "760d490f2b2df100f3ff27b359e90c8fd52c7469", "filename": "libstdc++-v3/testsuite/tr1/3_function_objects/function/63840.cc", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7b55fa54d4f8040c8f01acd3c725670000640538/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F3_function_objects%2Ffunction%2F63840.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7b55fa54d4f8040c8f01acd3c725670000640538/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F3_function_objects%2Ffunction%2F63840.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2Ftr1%2F3_function_objects%2Ffunction%2F63840.cc?ref=7b55fa54d4f8040c8f01acd3c725670000640538", "patch": "@@ -0,0 +1,55 @@\n+// Copyright (C) 2014 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+#include <tr1/functional>\n+#include <stdexcept>\n+#include <testsuite_hooks.h>\n+\n+struct functor\n+{\n+  functor() : copies(0) { }\n+\n+  functor(const functor& f)\n+  : copies(f.copies + 1)\n+  {\n+    if (copies > 1)\n+      throw std::runtime_error(\"functor\");\n+  }\n+\n+  void operator()() const { }\n+\n+  int copies;\n+};\n+\n+\n+void\n+test01()\n+{\n+  std::tr1::function<void()> f = functor();\n+  try {\n+    std::tr1::function<void()> g = f;\n+  } catch (const std::runtime_error& e) {\n+    return;\n+  }\n+  VERIFY(false);\n+}\n+\n+int\n+main()\n+{\n+  test01();\n+}"}]}