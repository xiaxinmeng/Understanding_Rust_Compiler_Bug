{"sha": "647d340d4bcf9140b870b5ada6d3c08957d674a5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjQ3ZDM0MGQ0YmNmOTE0MGI4NzBiNWFkYTZkM2MwODk1N2Q2NzRhNQ==", "commit": {"author": {"name": "Jason Thorpe", "email": "thorpej@wasabisystems.com", "date": "2002-11-26T15:46:40Z"}, "committer": {"name": "Jason Thorpe", "email": "thorpej@gcc.gnu.org", "date": "2002-11-26T15:46:40Z"}, "message": "rs6000.h (RS6000_CPU_CPP_ENDIAN_BUILTINS): New.\n\n* config/rs6000/rs6000.h (RS6000_CPU_CPP_ENDIAN_BUILTINS): New.\n* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Use\nRS6000_CPU_CPP_ENDIAN_BUILTINS.\n* config/rs6000/netbsd.h (RS6000_CPU_CPP_ENDIAN_BUILTINS): Redefine.\n\nFrom-SVN: r59518", "tree": {"sha": "0a32cf922d630f6ada80600fc881203cd80c9825", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0a32cf922d630f6ada80600fc881203cd80c9825"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/647d340d4bcf9140b870b5ada6d3c08957d674a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/647d340d4bcf9140b870b5ada6d3c08957d674a5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/647d340d4bcf9140b870b5ada6d3c08957d674a5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/647d340d4bcf9140b870b5ada6d3c08957d674a5/comments", "author": null, "committer": null, "parents": [{"sha": "29742ba4f4eff92353b98ea0a7a039053ccb8de7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29742ba4f4eff92353b98ea0a7a039053ccb8de7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29742ba4f4eff92353b98ea0a7a039053ccb8de7"}], "stats": {"total": 63, "additions": 51, "deletions": 12}, "files": [{"sha": "51b1e88b43fd619f4b095a0b281963515982600a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647d340d4bcf9140b870b5ada6d3c08957d674a5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647d340d4bcf9140b870b5ada6d3c08957d674a5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=647d340d4bcf9140b870b5ada6d3c08957d674a5", "patch": "@@ -1,3 +1,10 @@\n+2002-11-26  Jason Thorpe  <thorpej@wasabisystems.com>\n+\n+\t* config/rs6000/rs6000.h (RS6000_CPU_CPP_ENDIAN_BUILTINS): New.\n+\t* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Use\n+\tRS6000_CPU_CPP_ENDIAN_BUILTINS.         \n+\t* config/rs6000/netbsd.h (RS6000_CPU_CPP_ENDIAN_BUILTINS): Redefine.\n+\n 2002-11-26  Hartmut Penner  <hpenner@de.ibm.com>\n \n \t* config/s390/s390.md (literal_pool_64, literal_pool_31 ): New"}, {"sha": "b473a8a868fe0e507cf9951fc4f3101db5d10717", "filename": "gcc/config/rs6000/netbsd.h", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647d340d4bcf9140b870b5ada6d3c08957d674a5/gcc%2Fconfig%2Frs6000%2Fnetbsd.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647d340d4bcf9140b870b5ada6d3c08957d674a5/gcc%2Fconfig%2Frs6000%2Fnetbsd.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fnetbsd.h?ref=647d340d4bcf9140b870b5ada6d3c08957d674a5", "patch": "@@ -31,6 +31,26 @@ Boston, MA 02111-1307, USA.  */\n     }\t\t\t\t\t\t\\\n   while (0)\n \n+/* Override the default from rs6000.h to avoid conflicts with macros\n+   defined in NetBSD header files.  */\n+\n+#undef RS6000_CPU_CPP_ENDIAN_BUILTINS\n+#define RS6000_CPU_CPP_ENDIAN_BUILTINS()\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      if (BYTES_BIG_ENDIAN)\t\t\t\\\n+\t{\t\t\t\t\t\\\n+\t  builtin_define (\"__BIG_ENDIAN__\");\t\\\n+\t  builtin_assert (\"machine=bigendian\");\t\\\n+\t}\t\t\t\t\t\\\n+      else\t\t\t\t\t\\\n+\t{\t\t\t\t\t\\\n+\t  builtin_define (\"__LITTLE_ENDIAN__\");\t\\\n+\t  builtin_assert (\"machine=littleendian\"); \\\n+\t}\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n+\n /* Make GCC agree with <machine/ansi.h>.  */\n \n #undef SIZE_TYPE"}, {"sha": "03f91baf2c7e32118b55b4d1ffe0545b9d3cfd23", "filename": "gcc/config/rs6000/rs6000-c.c", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647d340d4bcf9140b870b5ada6d3c08957d674a5/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647d340d4bcf9140b870b5ada6d3c08957d674a5/gcc%2Fconfig%2Frs6000%2Frs6000-c.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-c.c?ref=647d340d4bcf9140b870b5ada6d3c08957d674a5", "patch": "@@ -100,18 +100,10 @@ rs6000_cpu_cpp_builtins (pfile)\n   /* Used by lwarx/stwcx. errata work-around.  */\n   if (rs6000_cpu == PROCESSOR_PPC405)\n     builtin_define (\"__PPC405__\");\n-  if (BYTES_BIG_ENDIAN)\n-    {\n-      builtin_define (\"__BIG_ENDIAN__\");\n-      builtin_define (\"_BIG_ENDIAN\");\n-      builtin_assert (\"machine=bigendian\");\n-    }\n-  else\n-    {\n-      builtin_define (\"__LITTLE_ENDIAN__\");\n-      builtin_define (\"_LITTLE_ENDIAN\");\n-      builtin_assert (\"machine=littleendian\");\n-    }\n+\n+  /* May be overridden by target configuration.  */\n+  RS6000_CPU_CPP_ENDIAN_BUILTINS();\n+\n   if (TARGET_LONG_DOUBLE_128)\n     builtin_define (\"__LONG_DOUBLE_128__\");\n "}, {"sha": "ab38f5693eb740de512a71f1775e57aac0370f31", "filename": "gcc/config/rs6000/rs6000.h", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/647d340d4bcf9140b870b5ada6d3c08957d674a5/gcc%2Fconfig%2Frs6000%2Frs6000.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/647d340d4bcf9140b870b5ada6d3c08957d674a5/gcc%2Fconfig%2Frs6000%2Frs6000.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.h?ref=647d340d4bcf9140b870b5ada6d3c08957d674a5", "patch": "@@ -479,6 +479,26 @@ extern int rs6000_default_long_calls;\n /* Target #defines.  */\n #define TARGET_CPU_CPP_BUILTINS() \\\n   rs6000_cpu_cpp_builtins (pfile)\n+\n+/* This is used by rs6000_cpu_cpp_builtins to indicate the byte order\n+   we're compiling for.  Some configurations may need to override it.  */\n+#define RS6000_CPU_CPP_ENDIAN_BUILTINS()\t\\\n+  do\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\\\n+      if (BYTES_BIG_ENDIAN)\t\t\t\\\n+\t{\t\t\t\t\t\\\n+\t  builtin_define (\"__BIG_ENDIAN__\");\t\\\n+\t  builtin_define (\"_BIG_ENDIAN\");\t\\\n+\t  builtin_assert (\"machine=bigendian\");\t\\\n+\t}\t\t\t\t\t\\\n+      else\t\t\t\t\t\\\n+\t{\t\t\t\t\t\\\n+\t  builtin_define (\"__LITTLE_ENDIAN__\");\t\\\n+\t  builtin_define (\"_LITTLE_ENDIAN\");\t\\\n+\t  builtin_assert (\"machine=littleendian\"); \\\n+\t}\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\\\n+  while (0)\n \f\n /* Target machine storage layout.  */\n "}]}