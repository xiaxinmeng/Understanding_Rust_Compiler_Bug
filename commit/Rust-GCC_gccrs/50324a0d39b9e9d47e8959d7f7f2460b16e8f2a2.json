{"sha": "50324a0d39b9e9d47e8959d7f7f2460b16e8f2a2", "node_id": "C_kwDOANBUbNoAKDUwMzI0YTBkMzliOWU5ZDQ3ZTg5NTlkN2Y3ZjI0NjBiMTZlOGYyYTI", "commit": {"author": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2022-09-23T09:56:30Z"}, "committer": {"name": "Tamar Christina", "email": "tamar.christina@arm.com", "date": "2022-09-23T09:56:30Z"}, "message": "testsuite: make check-functions-body dump expected and seen cases on failure.\n\nOften times when a check_function_body check fails it can be quite hard to\nfigure out why as no additional information is provided.\n\nThis changes it so that on failures it prints out the regex expression it's\nusing and the text it's comparing against to the verbose log.\n\nThis makes it much easier to figure out why a test has failed.\n\ngcc/testsuite/ChangeLog:\n\n\t* lib/scanasm.exp (check_function_body): Add debug output to verbose log\n\ton failure.", "tree": {"sha": "5a23bcdb2432d43066b72bbb2d23cb40766f5d05", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a23bcdb2432d43066b72bbb2d23cb40766f5d05"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50324a0d39b9e9d47e8959d7f7f2460b16e8f2a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50324a0d39b9e9d47e8959d7f7f2460b16e8f2a2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50324a0d39b9e9d47e8959d7f7f2460b16e8f2a2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50324a0d39b9e9d47e8959d7f7f2460b16e8f2a2/comments", "author": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TamarChristinaArm", "id": 48126768, "node_id": "MDQ6VXNlcjQ4MTI2NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/48126768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TamarChristinaArm", "html_url": "https://github.com/TamarChristinaArm", "followers_url": "https://api.github.com/users/TamarChristinaArm/followers", "following_url": "https://api.github.com/users/TamarChristinaArm/following{/other_user}", "gists_url": "https://api.github.com/users/TamarChristinaArm/gists{/gist_id}", "starred_url": "https://api.github.com/users/TamarChristinaArm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TamarChristinaArm/subscriptions", "organizations_url": "https://api.github.com/users/TamarChristinaArm/orgs", "repos_url": "https://api.github.com/users/TamarChristinaArm/repos", "events_url": "https://api.github.com/users/TamarChristinaArm/events{/privacy}", "received_events_url": "https://api.github.com/users/TamarChristinaArm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7fd7fb5011106c062df9275ca8fddcbce4ebdeb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7fd7fb5011106c062df9275ca8fddcbce4ebdeb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7fd7fb5011106c062df9275ca8fddcbce4ebdeb"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "7c9dcfc9b2e49093355219f76838161f4c3302df", "filename": "gcc/testsuite/lib/scanasm.exp", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50324a0d39b9e9d47e8959d7f7f2460b16e8f2a2/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50324a0d39b9e9d47e8959d7f7f2460b16e8f2a2/gcc%2Ftestsuite%2Flib%2Fscanasm.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fscanasm.exp?ref=50324a0d39b9e9d47e8959d7f7f2460b16e8f2a2", "patch": "@@ -803,7 +803,12 @@ proc check_function_body { functions name body_regexp } {\n     if { ![info exists up_functions($name)] } {\n \treturn 0\n     }\n-    return [regexp \"^$body_regexp\\$\" $up_functions($name)]\n+    set fn_res [regexp \"^$body_regexp\\$\" $up_functions($name)]\n+    if { !$fn_res } {\n+      verbose -log \"body: $body_regexp\"\n+      verbose -log \"against: $up_functions($name)\"\n+    }\n+    return $fn_res\n }\n \n # Check the implementations of functions against expected output.  Used as:"}]}