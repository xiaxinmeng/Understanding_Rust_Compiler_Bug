{"sha": "4ac293e2393f779184f95ad18b17bb3df657fb0b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGFjMjkzZTIzOTNmNzc5MTg0Zjk1YWQxOGIxN2JiM2RmNjU3ZmIwYg==", "commit": {"author": {"name": "Vladimir Makarov", "email": "vmakarov@redhat.com", "date": "2010-05-25T16:29:38Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2010-05-25T16:29:38Z"}, "message": "ira-build.c (update_conflict_hard_reg_costs): New.\n\n        * ira-build.c (update_conflict_hard_reg_costs): New.\n        (ira_build): Call update_conflict_hard_reg_costs.\n\nFrom-SVN: r159830", "tree": {"sha": "ace36499c6ea271801246917f229ce0e4ae06195", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ace36499c6ea271801246917f229ce0e4ae06195"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4ac293e2393f779184f95ad18b17bb3df657fb0b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac293e2393f779184f95ad18b17bb3df657fb0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4ac293e2393f779184f95ad18b17bb3df657fb0b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4ac293e2393f779184f95ad18b17bb3df657fb0b/comments", "author": {"login": "vnmakarov", "id": 9855671, "node_id": "MDQ6VXNlcjk4NTU2NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/9855671?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vnmakarov", "html_url": "https://github.com/vnmakarov", "followers_url": "https://api.github.com/users/vnmakarov/followers", "following_url": "https://api.github.com/users/vnmakarov/following{/other_user}", "gists_url": "https://api.github.com/users/vnmakarov/gists{/gist_id}", "starred_url": "https://api.github.com/users/vnmakarov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vnmakarov/subscriptions", "organizations_url": "https://api.github.com/users/vnmakarov/orgs", "repos_url": "https://api.github.com/users/vnmakarov/repos", "events_url": "https://api.github.com/users/vnmakarov/events{/privacy}", "received_events_url": "https://api.github.com/users/vnmakarov/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "bb9862c6d963a989e659b971a47a2f77d8f9677f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bb9862c6d963a989e659b971a47a2f77d8f9677f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bb9862c6d963a989e659b971a47a2f77d8f9677f"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "c52247abf5231ff28d3b2618dc0d05ee8bdf77a8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac293e2393f779184f95ad18b17bb3df657fb0b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac293e2393f779184f95ad18b17bb3df657fb0b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4ac293e2393f779184f95ad18b17bb3df657fb0b", "patch": "@@ -1,3 +1,8 @@\n+2010-05-25  Vladimir Makarov <vmakarov@redhat.com>\n+\n+\t* ira-build.c (update_conflict_hard_reg_costs): New.\n+\t(ira_build): Call update_conflict_hard_reg_costs.\n+\n 2010-05-25  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/41371"}, {"sha": "3bd98f658cfdde962db3d73503ca0d3df126d094", "filename": "gcc/ira-build.c", "status": "modified", "additions": 40, "deletions": 1, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4ac293e2393f779184f95ad18b17bb3df657fb0b/gcc%2Fira-build.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4ac293e2393f779184f95ad18b17bb3df657fb0b/gcc%2Fira-build.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fira-build.c?ref=4ac293e2393f779184f95ad18b17bb3df657fb0b", "patch": "@@ -1,5 +1,5 @@\n /* Building internal representation for IRA.\n-   Copyright (C) 2006, 2007, 2008, 2009\n+   Copyright (C) 2006, 2007, 2008, 2009, 2010\n    Free Software Foundation, Inc.\n    Contributed by Vladimir Makarov <vmakarov@redhat.com>.\n \n@@ -2757,6 +2757,44 @@ check_allocno_creation (void)\n }\n #endif\n \n+/* Identify allocnos which prefer a register class with a single hard register.\n+   Adjust ALLOCNO_CONFLICT_HARD_REG_COSTS so that conflicting allocnos are\n+   less likely to use the preferred singleton register.  */\n+static void\n+update_conflict_hard_reg_costs (void)\n+{\n+  ira_allocno_t a;\n+  ira_allocno_iterator ai;\n+  int i, index, min;\n+\n+  FOR_EACH_ALLOCNO (a, ai)\n+    {\n+      enum reg_class cover_class = ALLOCNO_COVER_CLASS (a);\n+      enum reg_class pref = reg_preferred_class (ALLOCNO_REGNO (a));\n+\n+      if (reg_class_size[pref] != 1)\n+\tcontinue;\n+      index = (ira_class_hard_reg_index[cover_class]\n+\t       [ira_class_hard_regs[pref][0]]);\n+      if (index < 0)\n+\tcontinue;\n+      if (ALLOCNO_CONFLICT_HARD_REG_COSTS (a) == NULL\n+\t  || ALLOCNO_HARD_REG_COSTS (a) == NULL)\n+\tcontinue;\n+      min = INT_MAX;\n+      for (i = ira_class_hard_regs_num[cover_class] - 1; i >= 0; i--)\n+\tif (ALLOCNO_HARD_REG_COSTS (a)[i] > ALLOCNO_COVER_CLASS_COST (a)\n+\t    && min > ALLOCNO_HARD_REG_COSTS (a)[i])\n+\t  min = ALLOCNO_HARD_REG_COSTS (a)[i];\n+      if (min == INT_MAX)\n+\tcontinue;\n+      ira_allocate_and_set_costs (&ALLOCNO_CONFLICT_HARD_REG_COSTS (a),\n+\t\t\t\t  cover_class, 0);\n+      ALLOCNO_CONFLICT_HARD_REG_COSTS (a)[index]\n+\t-= min - ALLOCNO_COVER_CLASS_COST (a);\n+    }\n+}\n+\n /* Create a internal representation (IR) for IRA (allocnos, copies,\n    loop tree nodes).  If LOOPS_P is FALSE the nodes corresponding to\n    the loops (except the root which corresponds the all function) and\n@@ -2796,6 +2834,7 @@ ira_build (bool loops_p)\n   sort_conflict_id_allocno_map ();\n   setup_min_max_conflict_allocno_ids ();\n   ira_build_conflicts ();\n+  update_conflict_hard_reg_costs ();\n   if (! ira_conflicts_p)\n     {\n       ira_allocno_t a;"}]}