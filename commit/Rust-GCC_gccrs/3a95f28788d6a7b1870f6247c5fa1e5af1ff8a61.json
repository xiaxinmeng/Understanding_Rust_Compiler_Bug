{"sha": "3a95f28788d6a7b1870f6247c5fa1e5af1ff8a61", "node_id": "C_kwDOANBUbNoAKDNhOTVmMjg3ODhkNmE3YjE4NzBmNjI0N2M1ZmExZTVhZjFmZjhhNjE", "commit": {"author": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-05-25T14:01:52Z"}, "committer": {"name": "Philip Herron", "email": "philip.herron@embecosm.com", "date": "2022-05-25T14:01:52Z"}, "message": "Add testcase to prove bug is fixed\n\nThis bug was fixed in commit cb4d935508def8b250345ba5205a90ad9e177ab4\nwith related PR #1223\n\nThe issue is that associated tpyes get updated depending on the context\nthey are used so we need to monomorphize the types when we can so that we\ndon't then throw off the rest of typechecking with bogus errors like this.\n\nFixes #1237", "tree": {"sha": "6c97278aeaf9147d25198ad683127425a1b02dee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c97278aeaf9147d25198ad683127425a1b02dee"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3a95f28788d6a7b1870f6247c5fa1e5af1ff8a61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a95f28788d6a7b1870f6247c5fa1e5af1ff8a61", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a95f28788d6a7b1870f6247c5fa1e5af1ff8a61", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a95f28788d6a7b1870f6247c5fa1e5af1ff8a61/comments", "author": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "philberty", "id": 84585, "node_id": "MDQ6VXNlcjg0NTg1", "avatar_url": "https://avatars.githubusercontent.com/u/84585?v=4", "gravatar_id": "", "url": "https://api.github.com/users/philberty", "html_url": "https://github.com/philberty", "followers_url": "https://api.github.com/users/philberty/followers", "following_url": "https://api.github.com/users/philberty/following{/other_user}", "gists_url": "https://api.github.com/users/philberty/gists{/gist_id}", "starred_url": "https://api.github.com/users/philberty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/philberty/subscriptions", "organizations_url": "https://api.github.com/users/philberty/orgs", "repos_url": "https://api.github.com/users/philberty/repos", "events_url": "https://api.github.com/users/philberty/events{/privacy}", "received_events_url": "https://api.github.com/users/philberty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5c1531cc41ea7fab4d522dafe3ff725a766fb49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5c1531cc41ea7fab4d522dafe3ff725a766fb49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5c1531cc41ea7fab4d522dafe3ff725a766fb49"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "542be89794982a55617a28aa47fa181ee8452bf7", "filename": "gcc/testsuite/rust/compile/issue-1237.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3a95f28788d6a7b1870f6247c5fa1e5af1ff8a61/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1237.rs", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3a95f28788d6a7b1870f6247c5fa1e5af1ff8a61/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1237.rs", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Frust%2Fcompile%2Fissue-1237.rs?ref=3a95f28788d6a7b1870f6247c5fa1e5af1ff8a61", "patch": "@@ -0,0 +1,23 @@\n+// { dg-additional-options \"-w\" }\n+mod intrinsics {\n+    extern \"rust-intrinsic\" {\n+        pub fn offset<T>(ptr: *const T, count: isize) -> *const T;\n+    }\n+}\n+\n+impl<T> *const T {\n+    pub unsafe fn offset(self, count: isize) -> *const T {\n+        unsafe { intrinsics::offset(self, count) }\n+    }\n+}\n+\n+impl<T> [T] {\n+    pub unsafe fn get_unchecked(&self, index: usize) -> &T {\n+        unsafe { &*(self as *const [T] as *const T).offset(index as isize) }\n+    }\n+}\n+\n+#[inline]\n+unsafe fn u8to64_le(buf: &[u8], start: usize, len: usize) -> u64 {\n+    (unsafe { *buf.get_unchecked(start) } as u64)\n+}"}]}