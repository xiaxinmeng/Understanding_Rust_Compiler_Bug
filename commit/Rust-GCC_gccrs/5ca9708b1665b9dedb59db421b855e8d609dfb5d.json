{"sha": "5ca9708b1665b9dedb59db421b855e8d609dfb5d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWNhOTcwOGIxNjY1YjlkZWRiNTlkYjQyMWI4NTVlOGQ2MDlkZmI1ZA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2012-03-04T21:19:43Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2012-03-04T21:19:43Z"}, "message": "Only handle zero-extended DImode addresses\n\n2012-03-04  H.J. Lu  <hongjiu.lu@intel.com>\n\n\t* config/i386/i386.c (ix86_print_operand_address): Only handle\n\tzero-extended DImode addresses.\n\nFrom-SVN: r184899", "tree": {"sha": "68b8011e78e9a81a51c2163be51ebac171fba94b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/68b8011e78e9a81a51c2163be51ebac171fba94b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ca9708b1665b9dedb59db421b855e8d609dfb5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ca9708b1665b9dedb59db421b855e8d609dfb5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ca9708b1665b9dedb59db421b855e8d609dfb5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ca9708b1665b9dedb59db421b855e8d609dfb5d/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f57207b886fbccf06ecdcb549b1c32560ab9178c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f57207b886fbccf06ecdcb549b1c32560ab9178c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f57207b886fbccf06ecdcb549b1c32560ab9178c"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "486f9345f2835d5cea762f5ab76f2f4e11fd164d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ca9708b1665b9dedb59db421b855e8d609dfb5d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ca9708b1665b9dedb59db421b855e8d609dfb5d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ca9708b1665b9dedb59db421b855e8d609dfb5d", "patch": "@@ -1,3 +1,8 @@\n+2012-03-04  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386.c (ix86_print_operand_address): Only handle\n+\tzero-extended DImode addresses.\n+\n 2012-03-04  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/constraints.md (Ya): New internal constraint."}, {"sha": "fa040a9a47f535deb785386914c7bb5930cf8675", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ca9708b1665b9dedb59db421b855e8d609dfb5d/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ca9708b1665b9dedb59db421b855e8d609dfb5d/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=5ca9708b1665b9dedb59db421b855e8d609dfb5d", "patch": "@@ -14482,7 +14482,7 @@ ix86_print_operand_address (FILE *file, rtx addr)\n \n       /* Print SImode registers for zero-extended addresses to force\n \t addr32 prefix.  Otherwise print DImode registers to avoid it.  */\n-      if (TARGET_64BIT)\n+      if (TARGET_64BIT && GET_MODE (addr) == DImode)\n \tcode = ((GET_CODE (addr) == ZERO_EXTEND\n \t\t || GET_CODE (addr) == AND)\n \t\t? 'l'"}]}