{"sha": "1fa9ba224e9c93221cda08900070b7e66b5541ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWZhOWJhMjI0ZTljOTMyMjFjZGEwODkwMDA3MGI3ZTY2YjU1NDFlZQ==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2015-07-29T12:41:23Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2015-07-29T12:41:23Z"}, "message": "re PR libstdc++/60970 (Support std::hash with enum types (LWG 2148))\n\n2015-07-29  Ville Voutilainen  <ville.voutilainen@gmail.com>\n\n\tPR libstdc++/60970\n\t* include/bits/functional_hash.h (__hash_enum): New.\n\t(hash): Derive from __hash_enum.\n\t* testsuite/20_util/hash/60970.cc: New.\n\nFrom-SVN: r226347", "tree": {"sha": "75859a7e610da08b9b2b4585acc4bfd68524f85d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/75859a7e610da08b9b2b4585acc4bfd68524f85d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1fa9ba224e9c93221cda08900070b7e66b5541ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fa9ba224e9c93221cda08900070b7e66b5541ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1fa9ba224e9c93221cda08900070b7e66b5541ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1fa9ba224e9c93221cda08900070b7e66b5541ee/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2ec330c9af93429e85803ef2e7f2a92a23d3f64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c2ec330c9af93429e85803ef2e7f2a92a23d3f64", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c2ec330c9af93429e85803ef2e7f2a92a23d3f64"}], "stats": {"total": 71, "additions": 71, "deletions": 0}, "files": [{"sha": "f0f8c1aed837ef8220b9c7ea98bc78c851e5c186", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fa9ba224e9c93221cda08900070b7e66b5541ee/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fa9ba224e9c93221cda08900070b7e66b5541ee/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=1fa9ba224e9c93221cda08900070b7e66b5541ee", "patch": "@@ -1,3 +1,10 @@\n+2015-07-29  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tPR libstdc++/60970\n+\t* include/bits/functional_hash.h (__hash_enum): New.\n+\t(hash): Derive from __hash_enum.\n+\t* testsuite/20_util/hash/60970.cc: New.\n+\n 2015-07-29  Tim Shen  <timshen@google.com>\n \n \tPR libstdc++/67015"}, {"sha": "88937bdc4afb3ff27086643a0e290de125169dc9", "filename": "libstdc++-v3/include/bits/functional_hash.h", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fa9ba224e9c93221cda08900070b7e66b5541ee/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffunctional_hash.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fa9ba224e9c93221cda08900070b7e66b5541ee/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffunctional_hash.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffunctional_hash.h?ref=1fa9ba224e9c93221cda08900070b7e66b5541ee", "patch": "@@ -57,6 +57,34 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n   template<typename _Tp>\n     struct hash;\n \n+  // Helper struct for SFINAE-poisoning non-enum types.\n+  template<typename _Tp, bool = is_enum<_Tp>::value>\n+    struct __hash_enum\n+    {\n+    private:\n+      // Private rather than deleted to be non-trivially-copyable.\n+      __hash_enum(__hash_enum&&);\n+      ~__hash_enum();\n+    };\n+\n+  // Helper struct for hash with enum types.\n+  template<typename _Tp>\n+    struct __hash_enum<_Tp, true> : public __hash_base<size_t, _Tp>\n+    {\n+      size_t\n+      operator()(_Tp __val) const noexcept\n+      {\n+       using __type = typename underlying_type<_Tp>::type;\n+       return hash<__type>{}(static_cast<__type>(__val));\n+      }\n+    };\n+\n+  /// Primary class template hash, usable for enum types only.\n+  // Use with non-enum types still SFINAES.\n+  template<typename _Tp>\n+    struct hash : __hash_enum<_Tp>\n+    { };\n+\n   /// Partial specializations for pointer types.\n   template<typename _Tp>\n     struct hash<_Tp*> : public __hash_base<size_t, _Tp*>"}, {"sha": "ddc626f81cb14a53bb507ca34254a74a6d7e963a", "filename": "libstdc++-v3/testsuite/20_util/hash/60970.cc", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1fa9ba224e9c93221cda08900070b7e66b5541ee/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2F60970.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1fa9ba224e9c93221cda08900070b7e66b5541ee/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2F60970.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F20_util%2Fhash%2F60970.cc?ref=1fa9ba224e9c93221cda08900070b7e66b5541ee", "patch": "@@ -0,0 +1,36 @@\n+// { dg-options \"-std=gnu++11\" }\n+// { dg-do run }\n+\n+// Copyright (C) 2015 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 3, or (at your option)\n+// any later version.\n+//\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+//\n+// You should have received a copy of the GNU General Public License\n+// along with this library; see the file COPYING3.  If not see\n+// <http://www.gnu.org/licenses/>.\n+\n+\n+#include <functional>\n+#include <testsuite_hooks.h>\n+\n+using namespace std;\n+\n+enum E1 : int {FIRST=1, SECOND=2};\n+enum class E2 : int {THIRD=42, FOURTH=666};\n+\n+int main()\n+{\n+  VERIFY(hash<int>{}(1) == hash<E1>{}(FIRST));\n+  VERIFY(hash<int>{}(2) == hash<E1>{}(SECOND));\n+  VERIFY(hash<int>{}(42) == hash<E2>{}(E2::THIRD));\n+  VERIFY(hash<int>{}(666) == hash<E2>{}(E2::FOURTH));\n+}"}]}