{"sha": "2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmFlMWQxYjhiMjI4NGVhMjFhN2Q0ZGFjMjBkZDU3NGUyNGVkMDEzOA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-05-13T10:53:42Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-05-13T10:53:42Z"}, "message": "re PR middle-end/66110 (uint8_t memory access not optimized)\n\n2015-05-13  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/66110\n\t* alias.c (alias_sets_conflict_p): Do not treat has_zero_child\n\tspecially.\n\t* Makefile.in (dfp.o-warn): Add -Wno-strict-aliasing.\n\n\t* gcc.dg/alias-2.c: Adjust.\n\t* gcc.dg/tree-ssa/ssa-dse-17.c: New testcase.\n\nFrom-SVN: r223126", "tree": {"sha": "9e27beb313e792b09ca9438f61a123ebc466411f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e27beb313e792b09ca9438f61a123ebc466411f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ef9367656a2bbe734f134a029f7880b9b62227f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ef9367656a2bbe734f134a029f7880b9b62227f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ef9367656a2bbe734f134a029f7880b9b62227f"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "aa9c72e1dd689cfe8966431bcab82a623b8aa37c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138", "patch": "@@ -1,3 +1,10 @@\n+2015-05-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/66110\n+\t* alias.c (alias_sets_conflict_p): Do not treat has_zero_child\n+\tspecially.\n+\t* Makefile.in (dfp.o-warn): Add -Wno-strict-aliasing.\n+\n 2015-05-13  Michael Haubenwallner  <michael.haubenwallner@ssi-schaefer.com>\n \n \t* doc/install.texi: Bump latest automake 1.11 version to 1.11.6."}, {"sha": "ab9b637701f9780440c882a3c0f6d1d04dd0c0b4", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138", "patch": "@@ -211,6 +211,7 @@ libgcov-driver-tool.o-warn = -Wno-error\n libgcov-merge-tool.o-warn = -Wno-error\n gimple-match.o-warn = -Wno-unused\n generic-match.o-warn = -Wno-unused\n+dfp.o-warn = -Wno-strict-aliasing\n \n # All warnings have to be shut off in stage1 if the compiler used then\n # isn't gcc; configure determines that.  WARN_CFLAGS will be either"}, {"sha": "4bbad317e9623043efd8be09fe06e33c8a3b7b14", "filename": "gcc/alias.c", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138", "patch": "@@ -470,15 +470,13 @@ alias_sets_conflict_p (alias_set_type set1, alias_set_type set2)\n   /* See if the first alias set is a subset of the second.  */\n   ase = get_alias_set_entry (set1);\n   if (ase != 0\n-      && (ase->has_zero_child\n-\t  || ase->children->get (set2)))\n+      && ase->children->get (set2))\n     return 1;\n \n   /* Now do the same, but with the alias sets reversed.  */\n   ase = get_alias_set_entry (set2);\n   if (ase != 0\n-      && (ase->has_zero_child\n-\t  || ase->children->get (set1)))\n+      && ase->children->get (set1))\n     return 1;\n \n   /* The two alias sets are distinct and neither one is the"}, {"sha": "be355503c3a7e5443c886cd8de575c78d21d9973", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138", "patch": "@@ -1,3 +1,9 @@\n+2015-05-13  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/66110\n+\t* gcc.dg/alias-2.c: Adjust.\n+\t* gcc.dg/tree-ssa/ssa-dse-17.c: New testcase.\n+\n 2015-05-13  Ilya Enkovich  <ilya.enkovich@intel.com>\n \n \tPR target/65103"}, {"sha": "f42f22c0c8f977b452026845ca22c76765287b57", "filename": "gcc/testsuite/gcc.dg/alias-2.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138/gcc%2Ftestsuite%2Fgcc.dg%2Falias-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138/gcc%2Ftestsuite%2Fgcc.dg%2Falias-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Falias-2.c?ref=2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138", "patch": "@@ -11,6 +11,6 @@ struct foo {\n int\n sub1 (long long int foobar)\n {\n-  struct foo *tmp = (struct foo *) &foobar; // { dg-warning \"type-punned pointer might\" \"\" }\n+  struct foo *tmp = (struct foo *) &foobar; // { dg-warning \"type-punned pointer will\" \"\" }\n   return tmp->i;\n }"}, {"sha": "c565777695715db57624651252b125f8bf8ad51c", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-dse-17.c", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-dse-17.c?ref=2ae1d1b8b2284ea21a7d4dac20dd574e24ed0138", "patch": "@@ -0,0 +1,20 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fdump-tree-dse1\" } */\n+\n+struct s1 {\n+    unsigned short f1;\n+    unsigned char f2;\n+};\n+\n+struct s2 {\n+    struct s1 *p1;\n+};\n+\n+void f1(struct s2 *p)\n+{\n+  p->p1->f2 = 9;\n+  p->p1->f2 = 10;\n+}\n+\n+/* { dg-final { scan-tree-dump-times \"f2 =\" 1 \"dse1\" } } */\n+/* { dg-final { cleanup-tree-dump \"dse1\" } } */"}]}