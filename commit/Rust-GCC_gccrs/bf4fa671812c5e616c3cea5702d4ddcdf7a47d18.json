{"sha": "bf4fa671812c5e616c3cea5702d4ddcdf7a47d18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmY0ZmE2NzE4MTJjNWU2MTZjM2NlYTU3MDJkNGRkY2RmN2E0N2QxOA==", "commit": {"author": {"name": "Trevor Saunders", "email": "tbsaunde+gcc@tbsaunde.org", "date": "2016-07-13T02:43:17Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2016-07-13T02:43:17Z"}, "message": "c-decl.c: add [cd]tors to c_struct_parse_info\n\ngcc/c/ChangeLog:\n\n2016-07-12  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n\n\t* c-decl.c (struct c_struct_parse_info): Change member types\n\tfrom vec to auto_vec.\n\t(start_struct): Adjust.\n\t(finish_struct): Likewise.\n\nFrom-SVN: r238279", "tree": {"sha": "a6ab7fefda3c4ab4f7d539f7e4e6603bb63ba850", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6ab7fefda3c4ab4f7d539f7e4e6603bb63ba850"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bf4fa671812c5e616c3cea5702d4ddcdf7a47d18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf4fa671812c5e616c3cea5702d4ddcdf7a47d18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bf4fa671812c5e616c3cea5702d4ddcdf7a47d18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bf4fa671812c5e616c3cea5702d4ddcdf7a47d18/comments", "author": null, "committer": null, "parents": [{"sha": "74ea4cd5e3ecffdfbd50e2a03eac903d1c46900c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/74ea4cd5e3ecffdfbd50e2a03eac903d1c46900c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/74ea4cd5e3ecffdfbd50e2a03eac903d1c46900c"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "59b296c857aec14076a4e5b2151841313e747f91", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf4fa671812c5e616c3cea5702d4ddcdf7a47d18/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf4fa671812c5e616c3cea5702d4ddcdf7a47d18/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=bf4fa671812c5e616c3cea5702d4ddcdf7a47d18", "patch": "@@ -1,3 +1,10 @@\n+2016-07-12  Trevor Saunders  <tbsaunde+gcc@tbsaunde.org>\n+\n+\t* c-decl.c (struct c_struct_parse_info): Change member types\n+\tfrom vec to auto_vec.\n+\t(start_struct): Adjust.\n+\t(finish_struct): Likewise.\n+\n 2016-07-02  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c/71719"}, {"sha": "c173796b438cc65ffb9f678db77c8bcfa11e7b27", "filename": "gcc/c/c-decl.c", "status": "modified", "additions": 5, "deletions": 11, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bf4fa671812c5e616c3cea5702d4ddcdf7a47d18/gcc%2Fc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bf4fa671812c5e616c3cea5702d4ddcdf7a47d18/gcc%2Fc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-decl.c?ref=bf4fa671812c5e616c3cea5702d4ddcdf7a47d18", "patch": "@@ -574,15 +574,15 @@ struct c_struct_parse_info\n {\n   /* If warn_cxx_compat, a list of types defined within this\n      struct.  */\n-  vec<tree> struct_types;\n+  auto_vec<tree> struct_types;\n   /* If warn_cxx_compat, a list of field names which have bindings,\n      and which are defined in this struct, but which are not defined\n      in any enclosing struct.  This is used to clear the in_struct\n      field of the c_bindings structure.  */\n-  vec<c_binding_ptr> fields;\n+  auto_vec<c_binding_ptr> fields;\n   /* If warn_cxx_compat, a list of typedef names used when defining\n      fields in this struct.  */\n-  vec<tree> typedefs_seen;\n+  auto_vec<tree> typedefs_seen;\n };\n \n /* Information for the struct or union currently being parsed, or\n@@ -7443,10 +7443,7 @@ start_struct (location_t loc, enum tree_code code, tree name,\n     TYPE_PACKED (v) = flag_pack_struct;\n \n   *enclosing_struct_parse_info = struct_parse_info;\n-  struct_parse_info = XNEW (struct c_struct_parse_info);\n-  struct_parse_info->struct_types.create (0);\n-  struct_parse_info->fields.create (0);\n-  struct_parse_info->typedefs_seen.create (0);\n+  struct_parse_info = new c_struct_parse_info ();\n \n   /* FIXME: This will issue a warning for a use of a type defined\n      within a statement expr used within sizeof, et. al.  This is not\n@@ -8088,10 +8085,7 @@ finish_struct (location_t loc, tree t, tree fieldlist, tree attributes,\n   if (warn_cxx_compat)\n     warn_cxx_compat_finish_struct (fieldlist, TREE_CODE (t), loc);\n \n-  struct_parse_info->struct_types.release ();\n-  struct_parse_info->fields.release ();\n-  struct_parse_info->typedefs_seen.release ();\n-  XDELETE (struct_parse_info);\n+  delete struct_parse_info;\n \n   struct_parse_info = enclosing_struct_parse_info;\n "}]}