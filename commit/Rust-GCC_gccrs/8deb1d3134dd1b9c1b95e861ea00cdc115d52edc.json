{"sha": "8deb1d3134dd1b9c1b95e861ea00cdc115d52edc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGRlYjFkMzEzNGRkMWI5YzFiOTVlODYxZWEwMGNkYzExNWQ1MmVkYw==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2007-09-22T08:42:57Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2007-09-22T08:42:57Z"}, "message": "re PR target/32325 (cc1plus ICE configuring libstdc++ on Tru64 UNIX V5.1B: SEGV in rtl_verify_flow_info)\n\n\tPR target/32325\n\t* except.c (finish_eh_generation): Call commit_edge_insertions if\n\tthere are insns queued on the entry edge.\n\t* config/alpha/alpha.c (alpha_gp_save_rtx): Insert the insns on\n\tthe entry edge.\n\nFrom-SVN: r128665", "tree": {"sha": "ce35507892fd6bad041ced4cbba6f9dba4b58d20", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ce35507892fd6bad041ced4cbba6f9dba4b58d20"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8deb1d3134dd1b9c1b95e861ea00cdc115d52edc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8deb1d3134dd1b9c1b95e861ea00cdc115d52edc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8deb1d3134dd1b9c1b95e861ea00cdc115d52edc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8deb1d3134dd1b9c1b95e861ea00cdc115d52edc/comments", "author": null, "committer": null, "parents": [{"sha": "1018b4c3565d3c892addfc349b00b3519308211e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1018b4c3565d3c892addfc349b00b3519308211e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1018b4c3565d3c892addfc349b00b3519308211e"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "20bf0529736b53f90a6dc4eb588afa82c7c1db4c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8deb1d3134dd1b9c1b95e861ea00cdc115d52edc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8deb1d3134dd1b9c1b95e861ea00cdc115d52edc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8deb1d3134dd1b9c1b95e861ea00cdc115d52edc", "patch": "@@ -1,3 +1,11 @@\n+2007-09-22  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR target/32325\n+\t* except.c (finish_eh_generation): Call commit_edge_insertions if\n+\tthere are insns queued on the entry edge.\n+\t* config/alpha/alpha.c (alpha_gp_save_rtx): Insert the insns on\n+\tthe entry edge.\n+\n 2007-09-22  Richard Sandiford  <rsandifo@nildram.co.uk>\n \n \t* doc/sourcebuild.texi (dg-add-c99-runtime-options): Document."}, {"sha": "fee5cd11115f89cfc407b0dcaa4cdc3c4e3a9412", "filename": "gcc/config/alpha/alpha.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8deb1d3134dd1b9c1b95e861ea00cdc115d52edc/gcc%2Fconfig%2Falpha%2Falpha.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8deb1d3134dd1b9c1b95e861ea00cdc115d52edc/gcc%2Fconfig%2Falpha%2Falpha.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.c?ref=8deb1d3134dd1b9c1b95e861ea00cdc115d52edc", "patch": "@@ -4780,7 +4780,14 @@ alpha_gp_save_rtx (void)\n \n       seq = get_insns ();\n       end_sequence ();\n-      emit_insn_at_entry (seq);\n+\n+      /* We used to simply emit the sequence after entry_of_function.\n+\t However this breaks the CFG if the first instruction in the\n+\t first block is not the NOTE_INSN_BASIC_BLOCK, for example a\n+\t label.  Emit the sequence properly on the edge.  We are only\n+\t invoked from dw2_build_landing_pads and finish_eh_generation\n+\t will call commit_edge_insertions thanks to a kludge.  */\n+      insert_insn_on_edge (seq, single_succ_edge (ENTRY_BLOCK_PTR));\n \n       cfun->machine->gp_save_rtx = m;\n     }"}, {"sha": "fe98299450d19ca9ba1a1bc66a9504fbb71a220b", "filename": "gcc/except.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8deb1d3134dd1b9c1b95e861ea00cdc115d52edc/gcc%2Fexcept.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8deb1d3134dd1b9c1b95e861ea00cdc115d52edc/gcc%2Fexcept.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexcept.c?ref=8deb1d3134dd1b9c1b95e861ea00cdc115d52edc", "patch": "@@ -2107,7 +2107,9 @@ finish_eh_generation (void)\n   /* We've totally changed the CFG.  Start over.  */\n   find_exception_handler_labels ();\n   break_superblocks ();\n-  if (USING_SJLJ_EXCEPTIONS)\n+  if (USING_SJLJ_EXCEPTIONS\n+      /* Kludge for Alpha/Tru64 (see alpha_gp_save_rtx).  */\n+      || single_succ_edge (ENTRY_BLOCK_PTR)->insns.r)\n     commit_edge_insertions ();\n   FOR_EACH_BB (bb)\n     {"}]}