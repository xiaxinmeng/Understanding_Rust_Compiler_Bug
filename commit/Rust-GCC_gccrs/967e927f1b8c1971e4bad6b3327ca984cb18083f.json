{"sha": "967e927f1b8c1971e4bad6b3327ca984cb18083f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTY3ZTkyN2YxYjhjMTk3MWU0YmFkNmIzMzI3Y2E5ODRjYjE4MDgzZg==", "commit": {"author": {"name": "Ed Schonberg", "email": "schonberg@adacore.com", "date": "2012-06-12T10:34:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2012-06-12T10:34:33Z"}, "message": "sem_ch3.adb (Analyze_Subtype_Declaration): if an incomplete type is tagged, so is a subtype of it.\n\n2012-06-12  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sem_ch3.adb (Analyze_Subtype_Declaration): if an incomplete\n\ttype is tagged, so is a subtype of it.\n\t* sem_ch12.adb (Validate_Actual_Subprogram): implement AI05-0296,\n\tconcerning freeze rules in the presence of formal incomplete\n\ttypes: a formal abstract subprogram cannot have an incomplete\n\tcontrolling type, and the profile of the actual subprogram does\n\tnot freeze if it includes an incomplete untagged type.\n\nFrom-SVN: r188442", "tree": {"sha": "f140f24bc213ee097fe7069f1e32b700943da3eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f140f24bc213ee097fe7069f1e32b700943da3eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/967e927f1b8c1971e4bad6b3327ca984cb18083f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/967e927f1b8c1971e4bad6b3327ca984cb18083f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/967e927f1b8c1971e4bad6b3327ca984cb18083f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/967e927f1b8c1971e4bad6b3327ca984cb18083f/comments", "author": {"login": "Edschonberg", "id": 6352375, "node_id": "MDQ6VXNlcjYzNTIzNzU=", "avatar_url": "https://avatars.githubusercontent.com/u/6352375?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Edschonberg", "html_url": "https://github.com/Edschonberg", "followers_url": "https://api.github.com/users/Edschonberg/followers", "following_url": "https://api.github.com/users/Edschonberg/following{/other_user}", "gists_url": "https://api.github.com/users/Edschonberg/gists{/gist_id}", "starred_url": "https://api.github.com/users/Edschonberg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Edschonberg/subscriptions", "organizations_url": "https://api.github.com/users/Edschonberg/orgs", "repos_url": "https://api.github.com/users/Edschonberg/repos", "events_url": "https://api.github.com/users/Edschonberg/events{/privacy}", "received_events_url": "https://api.github.com/users/Edschonberg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "02f588343104177827aeb428ea9fca6e55910ef3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/02f588343104177827aeb428ea9fca6e55910ef3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/02f588343104177827aeb428ea9fca6e55910ef3"}], "stats": {"total": 83, "additions": 79, "deletions": 4}, "files": [{"sha": "6da4ac62251ecb63b476d1f8566012a00ba279ea", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/967e927f1b8c1971e4bad6b3327ca984cb18083f/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/967e927f1b8c1971e4bad6b3327ca984cb18083f/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=967e927f1b8c1971e4bad6b3327ca984cb18083f", "patch": "@@ -1,3 +1,13 @@\n+2012-06-12  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sem_ch3.adb (Analyze_Subtype_Declaration): if an incomplete\n+\ttype is tagged, so is a subtype of it.\n+\t* sem_ch12.adb (Validate_Actual_Subprogram): implement AI05-0296,\n+\tconcerning freeze rules in the presence of formal incomplete\n+\ttypes: a formal abstract subprogram cannot have an incomplete\n+\tcontrolling type, and the profile of the actual subprogram does\n+\tnot freeze if it includes an incomplete untagged type.\n+\n 2012-06-12  Robert Dewar  <dewar@adacore.com>\n \n \t* a-direct.adb: Minor reformatting."}, {"sha": "4bb7cee6a1dae780e92a1a8af4967ea8f87c587c", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/967e927f1b8c1971e4bad6b3327ca984cb18083f/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/967e927f1b8c1971e4bad6b3327ca984cb18083f/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=967e927f1b8c1971e4bad6b3327ca984cb18083f", "patch": "@@ -2664,6 +2664,14 @@ package body Sem_Ch12 is\n                Error_Msg_N\n                  (\"abstract formal subprogram must have a controlling type\",\n                   N);\n+\n+            elsif Ada_Version >= Ada_2012\n+              and then Is_Incomplete_Type (Ctrl_Type)\n+            then\n+               Error_Msg_NE\n+                 (\"controlling type of abstract formal subprogram cannot \" &\n+                     \"be incomplete type\", N, Ctrl_Type);\n+\n             else\n                Check_Controlling_Formals (Ctrl_Type, Nam);\n             end if;\n@@ -9411,6 +9419,59 @@ package body Sem_Ch12 is\n          end;\n       end if;\n \n+      --  In Ada 2012, enforce the (RM 13.14(10.2/3)) freezing rule concerning\n+      --  formal incomplete types: a callable entity freezes its profile,\n+      --  unless it has an incomplete untagged formal.\n+\n+      if Ada_Version >= Ada_2012 then\n+         declare\n+            F : Entity_Id;\n+            Has_Untagged_Inc : Boolean;\n+\n+         begin\n+            F := First_Formal (Analyzed_S);\n+            Has_Untagged_Inc := False;\n+            while Present (F) loop\n+               if Ekind (Etype (F)) = E_Incomplete_Type\n+                 and then not Is_Tagged_Type (Etype (F))\n+               then\n+                  Has_Untagged_Inc := True;\n+                  exit;\n+               end if;\n+\n+               F := Next_Formal (F);\n+            end loop;\n+\n+            if Ekind (Analyzed_S) = E_Function\n+              and then Ekind (Etype (Analyzed_S)) = E_Incomplete_Type\n+              and then not Is_Tagged_Type (Etype (F))\n+            then\n+               Has_Untagged_Inc := True;\n+            end if;\n+\n+            if Is_Entity_Name (Actual)\n+              and then not Has_Untagged_Inc\n+            then\n+               F := First_Formal (Entity (Actual));\n+               while Present (F) loop\n+                  Freeze_Before (Instantiation_Node, Etype (F));\n+\n+                  if Is_Incomplete_Or_Private_Type (Etype (F))\n+                    and then No (Full_View (Etype (F)))\n+                    and then not Is_Generic_Type (Etype (F))\n+                  then\n+                     Error_Msg_NE\n+                       (\"type& must be frozen before this point\",\n+                          Instantiation_Node, Etype (F));\n+                     Abandon_Instantiation (Instantiation_Node);\n+                  end if;\n+\n+                  F := Next_Formal (F);\n+               end loop;\n+            end if;\n+         end;\n+      end if;\n+\n       return Decl_Node;\n    end Instantiate_Formal_Subprogram;\n "}, {"sha": "1fdf17eca7c538b21ecf3ff310ceb3df6a6e6797", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/967e927f1b8c1971e4bad6b3327ca984cb18083f/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/967e927f1b8c1971e4bad6b3327ca984cb18083f/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=967e927f1b8c1971e4bad6b3327ca984cb18083f", "patch": "@@ -4340,11 +4340,15 @@ package body Sem_Ch3 is\n \n             when E_Incomplete_Type =>\n                if Ada_Version >= Ada_2005 then\n-                  Set_Ekind (Id, E_Incomplete_Subtype);\n \n-                  --  Ada 2005 (AI-412): Decorate an incomplete subtype\n-                  --  of an incomplete type visible through a limited\n-                  --  with clause.\n+                  --  A subtype of an incomplete type can be explicitly tagged\n+\n+                  Set_Ekind              (Id, E_Incomplete_Subtype);\n+                  Set_Is_Tagged_Type     (Id, Is_Tagged_Type (T));\n+                  Set_Private_Dependents (Id, New_Elmt_List);\n+\n+                  --  Ada 2005 (AI-412): Decorate an incomplete subtype of an\n+                  --  incomplete type visible through a limited with clause.\n \n                   if From_With_Type (T)\n                     and then Present (Non_Limited_View (T))"}]}