{"sha": "ff5dfc4869aad7bedad9e749e6eed7d5f783b970", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmY1ZGZjNDg2OWFhZDdiZWRhZDllNzQ5ZTZlZWQ3ZDVmNzgzYjk3MA==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2010-06-09T10:32:23Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2010-06-09T10:32:23Z"}, "message": "re PR bootstrap/44432 ([boot with C++] configure does not check presence of host C++ compiler)\n\n\tPR bootstrap/44432\n\t* configure.ac: Before using ZW_PROG_COMPILER_DEPENDENCIES for C++,\n\tcheck that C++ compiler works.\n\t* configure: Regenerate.\n\nFrom-SVN: r160460", "tree": {"sha": "2e4596e9549c064794426f4a44005559b7d52198", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e4596e9549c064794426f4a44005559b7d52198"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff5dfc4869aad7bedad9e749e6eed7d5f783b970", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff5dfc4869aad7bedad9e749e6eed7d5f783b970", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff5dfc4869aad7bedad9e749e6eed7d5f783b970", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff5dfc4869aad7bedad9e749e6eed7d5f783b970/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "07b7ede0bfdf1943af80159912cbf80e691e62eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07b7ede0bfdf1943af80159912cbf80e691e62eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07b7ede0bfdf1943af80159912cbf80e691e62eb"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "d6d9b6cf7c29b50b27579fee2b3a3cfe334e22db", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff5dfc4869aad7bedad9e749e6eed7d5f783b970/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff5dfc4869aad7bedad9e749e6eed7d5f783b970/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=ff5dfc4869aad7bedad9e749e6eed7d5f783b970", "patch": "@@ -1,3 +1,10 @@\n+2010-06-09  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\tPR bootstrap/44432\n+\t* configure.ac: Before using ZW_PROG_COMPILER_DEPENDENCIES for C++,\n+\tcheck that C++ compiler works.\n+\t* configure: Regenerate.\n+\n 2010-06-08  Laurynas Biveinis  <laurynas.biveinis@gmail.com>\n \n \t* include/symtab.h (ht_identifier_ptr): New."}, {"sha": "a4700e63a9277c1b7e66e1c43149d797e9e26d23", "filename": "libcpp/configure", "status": "modified", "additions": 24, "deletions": 2, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff5dfc4869aad7bedad9e749e6eed7d5f783b970/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff5dfc4869aad7bedad9e749e6eed7d5f783b970/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=ff5dfc4869aad7bedad9e749e6eed7d5f783b970", "patch": "@@ -4400,6 +4400,29 @@ else CCDEPMODE=depmode=$am_cv_CC_dependencies_compiler_type\n fi\n \n else\n+ac_ext=cpp\n+ac_cpp='$CXXCPP $CPPFLAGS'\n+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n+\n+\n+cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n+/* end confdefs.h.  */\n+int i;\n+_ACEOF\n+if ac_fn_cxx_try_compile \"$LINENO\"; then :\n+\n+else\n+  as_fn_error \"C++ compiler missing or inoperational\" \"$LINENO\" 5\n+fi\n+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n+ac_ext=c\n+ac_cpp='$CPP $CPPFLAGS'\n+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n+ac_compiler_gnu=$ac_cv_c_compiler_gnu\n+\n depcc=\"$CXX\"  am_compiler_list=\n \n am_depcomp=$ac_aux_dir/depcomp\n@@ -4997,8 +5020,7 @@ ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n ac_compiler_gnu=$ac_cv_cxx_compiler_gnu\n \n-\n-ac_ext=cpp\n+   ac_ext=cpp\n ac_cpp='$CXXCPP $CPPFLAGS'\n ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'"}, {"sha": "ceea29ce1651c0cbca925086770f80eab5c86c87", "filename": "libcpp/configure.ac", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff5dfc4869aad7bedad9e749e6eed7d5f783b970/libcpp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff5dfc4869aad7bedad9e749e6eed7d5f783b970/libcpp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure.ac?ref=ff5dfc4869aad7bedad9e749e6eed7d5f783b970", "patch": "@@ -45,6 +45,10 @@ ZW_CREATE_DEPDIR\n if test \"$ENABLE_BUILD_WITH_CXX\" = \"no\"; then\n ZW_PROG_COMPILER_DEPENDENCIES([CC])\n else\n+AC_LANG_PUSH([C++])\n+AC_COMPILE_IFELSE([[int i;]], [],\n+\t\t  [AC_MSG_ERROR([C++ compiler missing or inoperational])])\n+AC_LANG_POP([C++])\n ZW_PROG_COMPILER_DEPENDENCIES([CXX])\n fi\n "}]}