{"sha": "ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWU3MTJlYWIxNWRmZDBkZmUxNzhmZjQyNDkyYzIwYTlhOWFhZWFlOA==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-08-03T08:22:26Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-08-03T08:22:26Z"}, "message": "20001023-1.c, [...]: Declare built-in functions used.\n\n\t* gcc.dg/20001023-1.c, gcc.dg/20001108-1.c, gcc.dg/20001117-1.c,\n\tgcc.dg/20010202-1.c, gcc.dg/20011008-2.c, gcc.dg/20011214-1.c,\n\tgcc.dg/20020201-1.c, gcc.dg/20020312-2.c, gcc.dg/20020426-2.c,\n\tgcc.dg/20030331-2.c, gcc.dg/20030612-1.c, gcc.dg/20030926-1.c,\n\tgcc.dg/20031216-1.c, gcc.dg/20031218-3.c, gcc.dg/20040305-2.c,\n\tgcc.dg/980226-1.c, gcc.dg/Wreturn-type2.c,\n\tgcc.dg/Wunreachable-6.c, gcc.dg/Wunreachable-7.c,\n\tgcc.dg/align-1.c, gcc.dg/builtin-prefetch-1.c,\n\tgcc.dg/builtins-17.c, gcc.dg/builtins-19.c, gcc.dg/builtins-2.c,\n\tgcc.dg/builtins-20.c, gcc.dg/builtins-21.c, gcc.dg/builtins-7.c,\n\tgcc.dg/builtins-8.c, gcc.dg/cpp/19930510-1.c,\n\tgcc.dg/cpp/charconst-3.c, gcc.dg/cpp/charconst-4.c,\n\tgcc.dg/cpp/mi6.c, gcc.dg/cpp/tr-paste.c, gcc.dg/cpp/trad/mi6.c,\n\tgcc.dg/cpp/trad/paste.c, gcc.dg/cpp/trad/strify.c,\n\tgcc.dg/fastmath-1.c, gcc.dg/fshort-wchar.c, gcc.dg/i386-387-7.c,\n\tgcc.dg/i386-387-8.c, gcc.dg/i386-asm-1.c, gcc.dg/i386-cadd.c,\n\tgcc.dg/i386-fpcvt-3.c, gcc.dg/i386-loop-3.c,\n\tgcc.dg/i386-memset-1.c, gcc.dg/loop-2.c, gcc.dg/nest.c,\n\tgcc.dg/noncompile/971104-1.c, gcc.dg/noncompile/990416-1.c,\n\tgcc.dg/noncompile/scope.c, gcc.dg/pack-test-4.c,\n\tgcc.dg/pack-test-5.c, gcc.dg/pch/inline-4.c, gcc.dg/postincr-1.c,\n\tgcc.dg/pr10392-1.c, gcc.dg/pragma-align.c,\n\tgcc.dg/profile-generate-1.c, gcc.dg/sibcall-1.c,\n\tgcc.dg/sibcall-2.c, gcc.dg/sibcall-3.c, gcc.dg/sibcall-4.c,\n\tgcc.dg/sibcall-5.c, gcc.dg/sibcall-6.c, gcc.dg/switch-warn-1.c,\n\tgcc.dg/switch-warn-2.c, gcc.dg/torture/builtin-attr-1.c,\n\tgcc.dg/torture/builtin-math-1.c, gcc.dg/torture/builtin-noret-2.c,\n\tgcc.dg/trampoline-1.c, gcc.dg/tree-ssa/20030703-1.c,\n\tgcc.dg/tree-ssa/20030703-2.c, gcc.dg/tree-ssa/20030708-1.c,\n\tgcc.dg/tree-ssa/20030709-3.c, gcc.dg/tree-ssa/20030710-1.c,\n\tgcc.dg/tree-ssa/20030711-1.c, gcc.dg/tree-ssa/20030729-1.c,\n\tgcc.dg/tree-ssa/20030730-1.c, gcc.dg/tree-ssa/20030730-2.c,\n\tgcc.dg/tree-ssa/20030731-1.c, gcc.dg/tree-ssa/20030807-11.c,\n\tgcc.dg/tree-ssa/20030807-2.c, gcc.dg/tree-ssa/20030807-5.c,\n\tgcc.dg/tree-ssa/20030807-7.c, gcc.dg/tree-ssa/20030808-1.c,\n\tgcc.dg/tree-ssa/20030814-1.c, gcc.dg/tree-ssa/20030814-2.c,\n\tgcc.dg/tree-ssa/20030814-3.c, gcc.dg/tree-ssa/20030814-4.c,\n\tgcc.dg/tree-ssa/20030814-5.c, gcc.dg/tree-ssa/20030814-6.c,\n\tgcc.dg/tree-ssa/20030814-7.c, gcc.dg/tree-ssa/20030815-1.c,\n\tgcc.dg/tree-ssa/20030907-1.c, gcc.dg/tree-ssa/20030917-3.c,\n\tgcc.dg/tree-ssa/20030922-1.c, gcc.dg/tree-ssa/20031113-1.c,\n\tgcc.dg/tree-ssa/20040121-1.c, gcc.dg/tree-ssa/20040319-1.c,\n\tgcc.dg/tree-ssa/20040324-1.c, gcc.dg/tree-ssa/20040326-1.c,\n\tgcc.dg/tree-ssa/20040326-2.c, gcc.dg/tree-ssa/20040517-1.c,\n\tgcc.dg/tree-ssa/ssa-ccp-10.c, gcc.dg/tree-ssa/ssa-pre-1.c,\n\tgcc.dg/tree-ssa/tailcall-1.c, gcc.dg/tree-ssa/tailrecursion-5.c,\n\tgcc.dg/ultrasp3.c, gcc.dg/winline-7.c, gcc.misc-tests/bprob-1.c,\n\tgcc.misc-tests/bprob-2.c, gcc.misc-tests/gcov-3.c,\n\tgcc.misc-tests/gcov-4.c, gcc.misc-tests/gcov-4b.c,\n\tgcc.misc-tests/gcov-6.c, gcc.misc-tests/gcov-7.c,\n\tgcc.misc-tests/i386-pf-3dnow-1.c,\n\tgcc.misc-tests/i386-pf-athlon-1.c,\n\tgcc.misc-tests/i386-pf-none-1.c, gcc.misc-tests/i386-pf-sse-1.c,\n\tobjc.dg/nested-func-1.m, objc.dg/special/unclaimed-category-1.m:\n\tDeclare built-in functions used.\n\t* gcc.dg/torture/builtin-attr-1.c (nexttoward): Use FPTEST2ARG2.\n\nFrom-SVN: r85465", "tree": {"sha": "0dbbb69cb1e7a5f5767663d609d297409a79b362", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dbbb69cb1e7a5f5767663d609d297409a79b362"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "610b0ddd0e7fe971e8ceffca613beabfa4f0eb2b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/610b0ddd0e7fe971e8ceffca613beabfa4f0eb2b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/610b0ddd0e7fe971e8ceffca613beabfa4f0eb2b"}], "stats": {"total": 475, "additions": 450, "deletions": 25}, "files": [{"sha": "2ed388d8762207eaf74af1516cb0520e9d31cdc5", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,3 +1,62 @@\n+2004-08-03  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* gcc.dg/20001023-1.c, gcc.dg/20001108-1.c, gcc.dg/20001117-1.c,\n+\tgcc.dg/20010202-1.c, gcc.dg/20011008-2.c, gcc.dg/20011214-1.c,\n+\tgcc.dg/20020201-1.c, gcc.dg/20020312-2.c, gcc.dg/20020426-2.c,\n+\tgcc.dg/20030331-2.c, gcc.dg/20030612-1.c, gcc.dg/20030926-1.c,\n+\tgcc.dg/20031216-1.c, gcc.dg/20031218-3.c, gcc.dg/20040305-2.c,\n+\tgcc.dg/980226-1.c, gcc.dg/Wreturn-type2.c,\n+\tgcc.dg/Wunreachable-6.c, gcc.dg/Wunreachable-7.c,\n+\tgcc.dg/align-1.c, gcc.dg/builtin-prefetch-1.c,\n+\tgcc.dg/builtins-17.c, gcc.dg/builtins-19.c, gcc.dg/builtins-2.c,\n+\tgcc.dg/builtins-20.c, gcc.dg/builtins-21.c, gcc.dg/builtins-7.c,\n+\tgcc.dg/builtins-8.c, gcc.dg/cpp/19930510-1.c,\n+\tgcc.dg/cpp/charconst-3.c, gcc.dg/cpp/charconst-4.c,\n+\tgcc.dg/cpp/mi6.c, gcc.dg/cpp/tr-paste.c, gcc.dg/cpp/trad/mi6.c,\n+\tgcc.dg/cpp/trad/paste.c, gcc.dg/cpp/trad/strify.c,\n+\tgcc.dg/fastmath-1.c, gcc.dg/fshort-wchar.c, gcc.dg/i386-387-7.c,\n+\tgcc.dg/i386-387-8.c, gcc.dg/i386-asm-1.c, gcc.dg/i386-cadd.c,\n+\tgcc.dg/i386-fpcvt-3.c, gcc.dg/i386-loop-3.c,\n+\tgcc.dg/i386-memset-1.c, gcc.dg/loop-2.c, gcc.dg/nest.c,\n+\tgcc.dg/noncompile/971104-1.c, gcc.dg/noncompile/990416-1.c,\n+\tgcc.dg/noncompile/scope.c, gcc.dg/pack-test-4.c,\n+\tgcc.dg/pack-test-5.c, gcc.dg/pch/inline-4.c, gcc.dg/postincr-1.c,\n+\tgcc.dg/pr10392-1.c, gcc.dg/pragma-align.c,\n+\tgcc.dg/profile-generate-1.c, gcc.dg/sibcall-1.c,\n+\tgcc.dg/sibcall-2.c, gcc.dg/sibcall-3.c, gcc.dg/sibcall-4.c,\n+\tgcc.dg/sibcall-5.c, gcc.dg/sibcall-6.c, gcc.dg/switch-warn-1.c,\n+\tgcc.dg/switch-warn-2.c, gcc.dg/torture/builtin-attr-1.c,\n+\tgcc.dg/torture/builtin-math-1.c, gcc.dg/torture/builtin-noret-2.c,\n+\tgcc.dg/trampoline-1.c, gcc.dg/tree-ssa/20030703-1.c,\n+\tgcc.dg/tree-ssa/20030703-2.c, gcc.dg/tree-ssa/20030708-1.c,\n+\tgcc.dg/tree-ssa/20030709-3.c, gcc.dg/tree-ssa/20030710-1.c,\n+\tgcc.dg/tree-ssa/20030711-1.c, gcc.dg/tree-ssa/20030729-1.c,\n+\tgcc.dg/tree-ssa/20030730-1.c, gcc.dg/tree-ssa/20030730-2.c,\n+\tgcc.dg/tree-ssa/20030731-1.c, gcc.dg/tree-ssa/20030807-11.c,\n+\tgcc.dg/tree-ssa/20030807-2.c, gcc.dg/tree-ssa/20030807-5.c,\n+\tgcc.dg/tree-ssa/20030807-7.c, gcc.dg/tree-ssa/20030808-1.c,\n+\tgcc.dg/tree-ssa/20030814-1.c, gcc.dg/tree-ssa/20030814-2.c,\n+\tgcc.dg/tree-ssa/20030814-3.c, gcc.dg/tree-ssa/20030814-4.c,\n+\tgcc.dg/tree-ssa/20030814-5.c, gcc.dg/tree-ssa/20030814-6.c,\n+\tgcc.dg/tree-ssa/20030814-7.c, gcc.dg/tree-ssa/20030815-1.c,\n+\tgcc.dg/tree-ssa/20030907-1.c, gcc.dg/tree-ssa/20030917-3.c,\n+\tgcc.dg/tree-ssa/20030922-1.c, gcc.dg/tree-ssa/20031113-1.c,\n+\tgcc.dg/tree-ssa/20040121-1.c, gcc.dg/tree-ssa/20040319-1.c,\n+\tgcc.dg/tree-ssa/20040324-1.c, gcc.dg/tree-ssa/20040326-1.c,\n+\tgcc.dg/tree-ssa/20040326-2.c, gcc.dg/tree-ssa/20040517-1.c,\n+\tgcc.dg/tree-ssa/ssa-ccp-10.c, gcc.dg/tree-ssa/ssa-pre-1.c,\n+\tgcc.dg/tree-ssa/tailcall-1.c, gcc.dg/tree-ssa/tailrecursion-5.c,\n+\tgcc.dg/ultrasp3.c, gcc.dg/winline-7.c, gcc.misc-tests/bprob-1.c,\n+\tgcc.misc-tests/bprob-2.c, gcc.misc-tests/gcov-3.c,\n+\tgcc.misc-tests/gcov-4.c, gcc.misc-tests/gcov-4b.c,\n+\tgcc.misc-tests/gcov-6.c, gcc.misc-tests/gcov-7.c,\n+\tgcc.misc-tests/i386-pf-3dnow-1.c,\n+\tgcc.misc-tests/i386-pf-athlon-1.c,\n+\tgcc.misc-tests/i386-pf-none-1.c, gcc.misc-tests/i386-pf-sse-1.c,\n+\tobjc.dg/nested-func-1.m, objc.dg/special/unclaimed-category-1.m:\n+\tDeclare built-in functions used.\n+\t* gcc.dg/torture/builtin-attr-1.c (nexttoward): Use FPTEST2ARG2.\n+\n 2004-08-02  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/16707"}, {"sha": "10cb27259396eaf7600eec7e71727bec43639ab3", "filename": "gcc/testsuite/gcc.dg/20001023-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20001023-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20001023-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20001023-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -fomit-frame-pointer\" } */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n unsigned char a[256], b[256], c[256], d[256];\n \n void foo(unsigned char *x, int y, unsigned char *z)"}, {"sha": "682257fdb0951c90096aa9db32939b032f7f1168", "filename": "gcc/testsuite/gcc.dg/20001108-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20001108-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20001108-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20001108-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -fomit-frame-pointer\" } */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n void die (long) __attribute__ ((noreturn));\n \n void die (long e)"}, {"sha": "8eb7f58b6bfef5c649fffd430d1d5d913c8705ca", "filename": "gcc/testsuite/gcc.dg/20001117-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20001117-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20001117-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20001117-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -finstrument-functions\" } */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n double\n foo (double a, double b)\n {"}, {"sha": "f600373b8a3f90e94745509dca191000a92ac5de", "filename": "gcc/testsuite/gcc.dg/20010202-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20010202-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20010202-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20010202-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do compile { target i?86-*-* sparc*-*-* } } */\n /* { dg-options \"-O2\" } */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n typedef enum { false, true } __attribute__ ((packed)) boolean;\n typedef struct {\n   enum {"}, {"sha": "01ff172b4ff03023d3fd1205ac6e9e34ee2681fa", "filename": "gcc/testsuite/gcc.dg/20011008-2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20011008-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20011008-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20011008-2.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do run } */\n /* { dg-options \"-O0\" } */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n struct { union {int x; int y;}; int q; } b;\n union { struct {int x;}; int q; } e;\n "}, {"sha": "dd05798fabfe641775c92dd4abef3b791ec9d9a4", "filename": "gcc/testsuite/gcc.dg/20011214-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20011214-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20011214-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20011214-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,5 +1,8 @@\n /* { dg-do run } */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n #define small   __attribute__((mode(QI))) int\n int main()\n {"}, {"sha": "d187a66fb00767a4ba64e89b0482235c14bf355e", "filename": "gcc/testsuite/gcc.dg/20020201-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20020201-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20020201-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020201-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -7,6 +7,9 @@\n /* { dg-options \"-fprofile-arcs\" } */\n /* { dg-do run { target native } } */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n int rand (void);\n void srand (unsigned int seed);\n "}, {"sha": "322c1d04898133d1548b298c2976f4734b96f2c1", "filename": "gcc/testsuite/gcc.dg/20020312-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20020312-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20020312-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020312-2.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -8,6 +8,8 @@\n /* { dg-do run } */\n /* { dg-options \"-O -fno-pic\" } */\n \n+extern void abort (void);\n+\n #if defined(__alpha__)\n /* PIC register is $29, but is used even without -fpic.  */\n #elif defined(__arc__)"}, {"sha": "e38214cd9cf169758da5caa702d9f24ccce2bbe6", "filename": "gcc/testsuite/gcc.dg/20020426-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20020426-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20020426-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20020426-2.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -4,6 +4,8 @@\n /* { dg-options \"-O2\" } */\n /* { dg-options \"-O2 -frename-registers -fomit-frame-pointer -fPIC -mtune=i686\" { target i?86-*-* } } */\n \n+extern void exit (int);\n+\n typedef struct\n {\n   union"}, {"sha": "0509d8aad879f7399bc3fac55dbb6407bbd1d020", "filename": "gcc/testsuite/gcc.dg/20030331-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20030331-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20030331-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030331-2.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,5 +1,7 @@\n // { dg-options \"\" }\n \n+extern int printf (const char *, ...);\n+\n int foo() {\n   int yd;\n   float in[1][yd];"}, {"sha": "f0875124385c0d0e1e70761dc5493608fa80ce3e", "filename": "gcc/testsuite/gcc.dg/20030612-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20030612-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20030612-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030612-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n \n+extern void abort (void);\n+\n int A, B;\n \n void foo()"}, {"sha": "806dea7616564f84cbe01f04807a2e90121ccb83", "filename": "gcc/testsuite/gcc.dg/20030926-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20030926-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20030926-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20030926-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -3,6 +3,9 @@\n /* { dg-options \"-O2 -minline-all-stringops\" } */\n /* { dg-options \"-O2 -minline-all-stringops -march=pentium4\" { target i?86-*-* } } */\n \n+extern void *memcpy (void *, const void *, __SIZE_TYPE__);\n+extern __SIZE_TYPE__ strlen (const char *);\n+\n void\n foo (char *p)\n {"}, {"sha": "7c706d86bea1db7eb5bab4d30618482ef7eb5532", "filename": "gcc/testsuite/gcc.dg/20031216-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20031216-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20031216-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20031216-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -4,6 +4,8 @@\n /* { dg-options \"-O2\" } */\n /* { dg-options \"-O2 -fPIC\" { target s390*-*-* } } */\n \n+extern void abort (void);\n+\n int count = 0;\n char *str;\n "}, {"sha": "0bae456b8e76ad00fdc90b379a940efb029f0604", "filename": "gcc/testsuite/gcc.dg/20031218-3.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20031218-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20031218-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20031218-3.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -5,6 +5,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -g\" } */\n \n+extern __SIZE_TYPE__ strlen (const char *);\n+\n int x (char *s)\n {\n   int y () { return (strlen (s)); }"}, {"sha": "ffaf353e371de13b5a86494e231800e72ac57928", "filename": "gcc/testsuite/gcc.dg/20040305-2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20040305-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F20040305-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F20040305-2.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,8 @@\n /* PR target/14262 */\n /* { dg-do run } */\n \n+extern void abort (void);\n+\n typedef char   ACS;\n typedef char   LSM;\n typedef char   PANEL;"}, {"sha": "f9d915f22d43c966e7fa34c196f87a43632a3cbb", "filename": "gcc/testsuite/gcc.dg/980226-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F980226-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2F980226-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2F980226-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile { target i?86-*-* } } */\n /* { dg-options -O2 } */\n \n+extern int printf (const char *, ...);\n extern double bar (double);\n \n int"}, {"sha": "781414a1ae0767520cf3abd1f0bbff00a9d15804", "filename": "gcc/testsuite/gcc.dg/Wreturn-type2.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2FWreturn-type2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2FWreturn-type2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWreturn-type2.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -2,6 +2,8 @@\n    missing return.  */\n /* { dg-do compile } */\n \n+extern void abort (void);\n+\n f() {}\t\t\t\t/* { dg-bogus \"\" \"no return warning\" } */\n int g() { abort (); }\t\t/* { dg-bogus \"\" \"no return warning\" } */\n int main() {}\t\t\t/* { dg-bogus \"\" \"no return warning\" } */"}, {"sha": "6aac7aab205d201ae99c9da3d65545c366bea85e", "filename": "gcc/testsuite/gcc.dg/Wunreachable-6.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2FWunreachable-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2FWunreachable-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWunreachable-6.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -2,6 +2,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-Wunreachable-code\" } */\n \n+extern int printf (const char *, ...);\n+extern void exit (int);\n+\n int main(int argc, char *argv[])\n {\n   if (argc != 1)"}, {"sha": "9a4d411be22c96d5f36ca267f35af0dc46f1ca60", "filename": "gcc/testsuite/gcc.dg/Wunreachable-7.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2FWunreachable-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2FWunreachable-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2FWunreachable-7.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -2,6 +2,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -Wunreachable-code\" } */\n \n+extern int printf (const char *, ...);\n+extern void exit (int);\n+\n int main(int argc, char *argv[])\n {\n   if (argc != 1)"}, {"sha": "187eb5271d28bb50ad3273b15131b4e7b5630b3c", "filename": "gcc/testsuite/gcc.dg/align-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Falign-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Falign-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Falign-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -6,6 +6,8 @@\n    { dg-options \"\" }\n */\n \n+extern void abort (void);\n+\n struct A\n {\n   char c;"}, {"sha": "4e30275fde5c94da7100d3fb4d8f165da6108500", "filename": "gcc/testsuite/gcc.dg/builtin-prefetch-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-prefetch-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-prefetch-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltin-prefetch-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -5,6 +5,8 @@\n \n /* { dg-do run } */\n \n+extern void exit (int);\n+\n enum locality { none, low, moderate, high, bogus };\n enum rw { read, write };\n "}, {"sha": "a9e21fba8a31f0e9b7ae94f42c9f5035b7d12b86", "filename": "gcc/testsuite/gcc.dg/builtins-17.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-17.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -11,7 +11,7 @@\n extern void link_error(void);\n \n extern double exp(double);\n-\n+extern double atan(double);\n \n int main()\n {"}, {"sha": "f0583a9783b7f145bbda4ea00984cf8938a3b9e9", "filename": "gcc/testsuite/gcc.dg/builtins-19.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-19.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -10,6 +10,9 @@\n double cabs (__complex__ double);\n float cabsf (__complex__ float);\n long double cabsl (__complex__ long double);\n+double fabs (double);\n+float fabsf (float);\n+long double fabsl (long double);\n \n void link_error (void);\n "}, {"sha": "b1f31c84aa5791f1e6be616d7ac42b76d72babb9", "filename": "gcc/testsuite/gcc.dg/builtins-2.c", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-2.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -8,6 +8,28 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -ffast-math\" } */\n \n+extern double atan (double);\n+extern float atanf (float);\n+extern long double atanl (long double);\n+extern double exp (double);\n+extern float expf (float);\n+extern long double expl (long double);\n+extern double fabs (double);\n+extern float fabsf (float);\n+extern long double fabsl (long double);\n+extern double log (double);\n+extern float logf (float);\n+extern long double logl (long double);\n+extern double pow (double, double);\n+extern float powf (float, float);\n+extern long double powl (long double, long double);\n+extern double sqrt (double);\n+extern float sqrtf (float);\n+extern long double sqrtl (long double);\n+extern double tan (double);\n+extern float tanf (float);\n+extern long double tanl (long double);\n+\n double test1(double x)\n {\n   return log(exp(x));"}, {"sha": "fb7dd95c84b970167fc05d6b73f2c901c13b7bda", "filename": "gcc/testsuite/gcc.dg/builtins-20.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-20.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-20.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-20.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -10,6 +10,16 @@\n \n #include \"builtins-config.h\"\n \n+extern double cos (double);\n+extern double sin (double);\n+extern double tan (double);\n+extern float cosf (float);\n+extern float sinf (float);\n+extern float tanf (float);\n+extern long double cosl (long double);\n+extern long double sinl (long double);\n+extern long double tanl (long double);\n+\n extern void link_error(void);\n \n void test1(double x)"}, {"sha": "60b127fe61bfee2e9d7f4b1c7951144789cf4553", "filename": "gcc/testsuite/gcc.dg/builtins-21.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-21.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-21.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-21.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -8,6 +8,16 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -ffast-math\" } */\n \n+extern double fabs (double);\n+extern float fabsf (float);\n+extern long double fabsl (long double);\n+extern double sqrt (double);\n+extern float sqrtf (float);\n+extern long double sqrtl (long double);\n+extern double exp (double);\n+extern float expf (float);\n+extern long double expl (long double);\n+\n double test1(double x)\n {\n   return fabs(x*x);"}, {"sha": "13e708e299742c34a6ab12ce0cdda33ec3eb708e", "filename": "gcc/testsuite/gcc.dg/builtins-7.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-7.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -8,6 +8,16 @@\n /* { dg-do link } */\n /* { dg-options \"-O2 -ffast-math\" } */\n \n+extern double pow (double, double);\n+extern float powf (float, float);\n+extern long double powl (long double, long double);\n+extern double tan (double);\n+extern float tanf (float);\n+extern long double tanl (long double);\n+extern double atan (double);\n+extern float atanf (float);\n+extern long double atanl (long double);\n+\n extern void link_error(void);\n \n void test(double x)"}, {"sha": "c3066b41cabb14493b4443833dfac64d8184cd88", "filename": "gcc/testsuite/gcc.dg/builtins-8.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fbuiltins-8.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -9,6 +9,8 @@\n /* { dg-options \"-O2 -ffast-math\" } */\n \n extern void abort(void);\n+extern double pow(double, double);\n+extern double sqrt(double);\n \n void test(double x)\n {"}, {"sha": "62c1206745a2f4492d8ac26be06be114649f0ce1", "filename": "gcc/testsuite/gcc.dg/cpp/19930510-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19930510-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19930510-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2F19930510-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,5 +1,7 @@\n /* { dg-do compile } */\n \n+extern void exit (int);\n+\n #define ugly 3\n #ugly \"foobar\" 3\t/* { dg-error \"invalid\" \"invalid directive\" } */\n int main() { exit (0); }"}, {"sha": "7c1966391315b9b7d64f3adf59df4f2c47d6d599", "filename": "gcc/testsuite/gcc.dg/cpp/charconst-3.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcharconst-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcharconst-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcharconst-3.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -9,6 +9,8 @@\n \n #include <limits.h>\n \n+extern void abort (void);\n+\n int main ()\n {\n   /* These tests require at least 2-byte ints.  8-)  */"}, {"sha": "aae33d35eef7004ea5761d697b4b859de870fcd6", "filename": "gcc/testsuite/gcc.dg/cpp/charconst-4.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcharconst-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcharconst-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fcharconst-4.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -13,6 +13,8 @@\n \n #include <limits.h>\n \n+extern void abort (void);\n+\n #if INT_MAX == 32767\n # define LONG_CHARCONST '!\\234a'\n # define SHORT_CHARCONST '\\234a'"}, {"sha": "c3af2d3f237106632f2aa4c3ed251314cdfa95f6", "filename": "gcc/testsuite/gcc.dg/cpp/mi6.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Fmi6.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -5,6 +5,8 @@\n /* { dg-do compile } */\n /* { dg-options \"\" } */\n \n+extern void abort (void);\n+\n /* Each include file should not be subject to MI optimisation, since\n    macro definitions can change.  Each header increments the variable\n    VAR if it is defined."}, {"sha": "1dd82766317946f76028ae4b1008d8bbf8f4fa82", "filename": "gcc/testsuite/gcc.dg/cpp/tr-paste.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-paste.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-paste.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftr-paste.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -5,6 +5,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-traditional-cpp\" } */\n \n+extern int printf (const char *, ...);\n+\n #define A(name) X/**/name\n \n #define B(name) \\"}, {"sha": "c3af2d3f237106632f2aa4c3ed251314cdfa95f6", "filename": "gcc/testsuite/gcc.dg/cpp/trad/mi6.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fmi6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fmi6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fmi6.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -5,6 +5,8 @@\n /* { dg-do compile } */\n /* { dg-options \"\" } */\n \n+extern void abort (void);\n+\n /* Each include file should not be subject to MI optimisation, since\n    macro definitions can change.  Each header increments the variable\n    VAR if it is defined."}, {"sha": "9b83fd30f4ea5b2a2f1ed0f4100babe8f1479017", "filename": "gcc/testsuite/gcc.dg/cpp/trad/paste.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fpaste.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fpaste.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fpaste.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -4,6 +4,8 @@\n \n /* { dg-do compile } */\n \n+extern int printf (const char *, ...);\n+\n #define A(name) X/**/name\n \n #define B(name) \\"}, {"sha": "d97a439709c52c9c6e43fb49b1619917c283a219", "filename": "gcc/testsuite/gcc.dg/cpp/trad/strify.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fstrify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fstrify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcpp%2Ftrad%2Fstrify.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -4,6 +4,7 @@\n #define foo(a, b) c=\"a\"; d=\"b\";\n \n extern void abort ();\n+extern void exit (int);\n \n int main ()\n {"}, {"sha": "4efe43004678c6d9d89544579f961e8d145c3e15", "filename": "gcc/testsuite/gcc.dg/fastmath-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ffastmath-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ffastmath-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffastmath-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do run } */\n /* { dg-options \"-O2 -ffast-math\" } */\n \n+extern void abort (void);\n+\n int foo ( float* dists,  int k) \n { \n if ( ( dists [ 0 ] > 0 ) == ( dists [ 1 ] > 0 ) ) "}, {"sha": "9f4946307f0cbf1d8e20b3d0702c6c00dba5572c", "filename": "gcc/testsuite/gcc.dg/fshort-wchar.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ffshort-wchar.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ffshort-wchar.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ffshort-wchar.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -7,6 +7,8 @@\n \n    Test that __WCHAR_MAX__ is correct with -fshort-wchar.  */\n \n+extern void abort (void);\n+\n int main ()\n {\n   __WCHAR_TYPE__ w = ~(__WCHAR_TYPE__) 0;"}, {"sha": "210917ad415acec080b5480b6ce5cfdb130f42f9", "filename": "gcc/testsuite/gcc.dg/i386-387-7.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-387-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-387-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-387-7.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -3,6 +3,9 @@\n /* { dg-options \"-O -ffast-math -march=i686\" } */\n /* { dg-final { scan-assembler \"fsincos\" } } */\n \n+extern double sin (double);\n+extern double cos (double);\n+\n double f1(double x)\n {\n   return sin(x) + cos (x);"}, {"sha": "67c16d92c184c7f9874faaa48cb75a6248132155", "filename": "gcc/testsuite/gcc.dg/i386-387-8.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-387-8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-387-8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-387-8.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -5,6 +5,8 @@\n /* { dg-final { scan-assembler \"fptan\" } } */\n /* { dg-final { scan-assembler-not \"fld1\" } } */\n \n+extern double tan (double);\n+\n double f1(double x)\n {\n   return 1.0 / tan(x);"}, {"sha": "826f5b6dbe39d00f4a5e48eb3c84b4aa97856b81", "filename": "gcc/testsuite/gcc.dg/i386-asm-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-asm-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-asm-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-asm-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -2,6 +2,7 @@\n /* { dg-do run { target i?86-*-* } } */\n /* { dg-options \"-O2\" } */\n \n+extern void abort (void);\n static int bar(int x) __asm__(\"bar\") __attribute__((regparm(1)));\n static int __attribute__((regparm(1), noinline, used))\n bar(int x)"}, {"sha": "2c6360b946b3d602c4a47ea6f911d4c0c2715928", "filename": "gcc/testsuite/gcc.dg/i386-cadd.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cadd.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cadd.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-cadd.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -2,6 +2,8 @@\n /* { dg-options \"-O2 -march=k8\" } */\n /* { dg-final { scan-assembler \"sbb\" } } */\n \n+extern void abort (void);\n+\n /* Conditional increment is best done using sbb $-1, val.  */\n int t[]={0,0,0,0,1,1,1,1,1,1};\n q()"}, {"sha": "f47cd70ed9abc929b1b78e1027a039e26d358da8", "filename": "gcc/testsuite/gcc.dg/i386-fpcvt-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-fpcvt-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-fpcvt-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-fpcvt-3.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile { target i?86-*-* x86_64-*-* } } */\n /* { dg-options \"-O2 -msse2 -march=k8\" } */\n /* { dg-final { scan-assembler-not \"cvtss2sd\" } } */\n+extern double fabs (double);\n float a,b;\n main()\n {"}, {"sha": "59ed5bf589f73a3f3c75d77855290a87662493e6", "filename": "gcc/testsuite/gcc.dg/i386-loop-3.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-loop-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-loop-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-loop-3.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -4,6 +4,9 @@\n /* { dg-do run { target i?86-*-* } } */\n /* { dg-options \"-mtune=k6 -O3 -ffast-math -funroll-loops\" } */\n \n+extern void *memset (void *, int, __SIZE_TYPE__);\n+extern void abort (void);\n+\n typedef struct\n {\n         unsigned char colormod;"}, {"sha": "b87a05b8df77cff0b767917ee74f86c2a8236174", "filename": "gcc/testsuite/gcc.dg/i386-memset-1.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-memset-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-memset-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fi386-memset-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -10,6 +10,10 @@\n /* { dg-do run { target \"i?86-*-*\" } } */\n /* { dg-options \"-O2 -minline-all-stringops\" } */\n \n+extern void *memset (void *, int, __SIZE_TYPE__);\n+extern void abort (void);\n+extern void exit (int);\n+\n #ifndef MAX_OFFSET\n #define MAX_OFFSET (sizeof (long long))\n #endif"}, {"sha": "fa96f89278cf4182fe2d8287b7e946e2217e0b5c", "filename": "gcc/testsuite/gcc.dg/loop-2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Floop-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Floop-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Floop-2.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -3,6 +3,9 @@\n    0 iterations of the loop rather than the correct 1.  */\n /* { dg-do run } */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n __inline__ int tag() { return 0; }\n \n void f ();"}, {"sha": "981baece34e1bad3cad0ffb6fd0c3407f6a097bd", "filename": "gcc/testsuite/gcc.dg/nest.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fnest.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fnest.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnest.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -6,6 +6,8 @@\n /* { dg-error \"profiler\" \"No profiler support\" { target xstormy16-*-* } 0 } */\n /* { dg-error \"-pg not supported\" \"Profiler support missing\" { target *-*-sco3.2v5* } 0 } */\n \n+extern void abort (void);\n+\n long foo (long x)\n {\n   long i, sum = 0;"}, {"sha": "54337b209c932282c1d9d1dcc9ec5985665cb170", "filename": "gcc/testsuite/gcc.dg/noncompile/971104-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F971104-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F971104-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F971104-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,3 +1,4 @@\n+extern int printf(const char *, ...);\n typedef unsigned short          ushort;\n struct sembuf {\n   ushort  sem_num;         "}, {"sha": "72aa3cd131c6ef107b155c43e5c99db50831a273", "filename": "gcc/testsuite/gcc.dg/noncompile/990416-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F990416-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F990416-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2F990416-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,3 +1,4 @@\n+extern void *memcpy (void *, const void *, __SIZE_TYPE__);\n typedef int word_type;\n    \n static void"}, {"sha": "7f09c27cffd840286503b695658ed1f4c9f976e9", "filename": "gcc/testsuite/gcc.dg/noncompile/scope.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fscope.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fscope.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fnoncompile%2Fscope.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,3 +1,5 @@\n+extern void abort (void);\n+extern void exit (int);\n static int v = 3;\n \n f ()"}, {"sha": "60da6a07751f39ef18d00c7e7f20346a679f3722", "filename": "gcc/testsuite/gcc.dg/pack-test-4.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fpack-test-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fpack-test-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpack-test-4.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -3,6 +3,8 @@\n    { dg-options \"\" }\n    { dg-do run } */\n \n+extern void abort (void);\n+\n typedef unsigned char uint8_t;\n \n typedef struct {"}, {"sha": "7645043dd84f1ea62b9b5cd4005c9a0bec911ae4", "filename": "gcc/testsuite/gcc.dg/pack-test-5.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fpack-test-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fpack-test-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpack-test-5.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -2,6 +2,8 @@\n    of a field.  */\n /* { dg-do run } */\n \n+extern void abort (void);\n+\n struct A {\n   double d;\n } __attribute__ ((aligned));"}, {"sha": "60e35aa6266f04543cbc81dfe5cb7ff1291f8c7e", "filename": "gcc/testsuite/gcc.dg/pch/inline-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Finline-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Finline-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpch%2Finline-4.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,4 +1,5 @@\n #include \"inline-4.h\"\n+extern int printf (const char *, ...);\n int main(void) {\n   printf (getstring());\n   return 0;"}, {"sha": "752cda40c2236010360debae4e2249737987d6b0", "filename": "gcc/testsuite/gcc.dg/postincr-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fpostincr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fpostincr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpostincr-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,8 @@\n /* Simple test for proper postincrement semantics.  */\n /* { dg-do run } */\n \n+extern void abort (void);\n+\n int i;\n int c;\n int *f ()"}, {"sha": "8d599b8af74baae1d602d1ed9d26f0f9a36b4345", "filename": "gcc/testsuite/gcc.dg/pr10392-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr10392-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fpr10392-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr10392-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -13,6 +13,7 @@\n /* { dg-do run } */\n /* { dg-options \"-O2\" } */\n /* { dg-options \"-O2 -m4\" { target sh4-*-* } } */\n+extern void abort (void);\n const char *dont_optimize_function_away;\n \n const char *use(const char *str)"}, {"sha": "738693270349ad3b01c95933cc8ac22984721bd6", "filename": "gcc/testsuite/gcc.dg/pragma-align.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-align.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-align.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpragma-align.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -2,6 +2,8 @@\n \n /* { dg-do run { target i?86-*-linux* i?86-*-*bsd* i?86-*-sco3.2v5* *-*-solaris2.* } } */\n \n+extern void abort (void);\n+\n struct {\n         char one;\n         long two;"}, {"sha": "9c73e6c63e7559335dd8120b4adcf9f54f0dc51b", "filename": "gcc/testsuite/gcc.dg/profile-generate-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fprofile-generate-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fprofile-generate-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fprofile-generate-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,8 @@\n /* Bug 16325.  */\n /* { dg-options \"-O -fprofile-generate\" } */\n \n+extern void abort (void);\n+\n int *p1;\n int *p2;\n int *p3;"}, {"sha": "4521ace9e15b17e991a26e55d5a129a20e814054", "filename": "gcc/testsuite/gcc.dg/sibcall-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -11,6 +11,9 @@\n    marker.  Self-recursion tail calls are optimized for all targets,\n    regardless of presence of sibcall patterns.  */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n extern void recurser_void (int);\n extern void track (int);\n "}, {"sha": "4c226c496e358f25c8f85a0cb1bdceb298a2212b", "filename": "gcc/testsuite/gcc.dg/sibcall-2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-2.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -11,6 +11,9 @@\n    marker.  Self-recursion tail calls are optimized for all targets,\n    regardless of presence of sibcall patterns.  */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n extern void recurser_void (void);\n extern void track (void);\n "}, {"sha": "86bc8da38e588623ef278e05589aba59e5932f37", "filename": "gcc/testsuite/gcc.dg/sibcall-3.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-3.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -13,6 +13,9 @@\n    (except targets where the test does not work due to the return address\n    not saved on the regular stack).  */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n static void recurser_void1 (int);\n static void recurser_void2 (int);\n extern void track (int);"}, {"sha": "bbb03735490239ebf2feed1e871f55d3193a3178", "filename": "gcc/testsuite/gcc.dg/sibcall-4.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-4.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -13,6 +13,9 @@\n    (except targets where the test does not work due to the return address\n    not saved on the regular stack).  */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n static void recurser_void1 (void);\n static void recurser_void2 (void);\n extern void track (void);"}, {"sha": "da95f13e25c4e9501bdbc84b398f3803ccf42a6f", "filename": "gcc/testsuite/gcc.dg/sibcall-5.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-5.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -2,6 +2,8 @@\n /* { dg-do run { target i?86-*-* } } */\n /* { dg-options \"-O2\" } */\n \n+extern void abort (void);\n+\n int (*f)(int, int) __attribute__((regparm(2)));\n int (*g)(int, int, int) __attribute__((regparm(3)));\n "}, {"sha": "bb855108ee172ac0fc6df9833672f86331eef1d1", "filename": "gcc/testsuite/gcc.dg/sibcall-6.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fsibcall-6.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -9,6 +9,9 @@\n /* { dg-do run { target i?86-*-* s390*-*-* x86_64-*-*} } */\n /* { dg-options \"-O2 -foptimize-sibling-calls\" } */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n int foo (int);\n int bar (int);\n "}, {"sha": "04ca4e36765493dc3cf88699f18009e491669fc6", "filename": "gcc/testsuite/gcc.dg/switch-warn-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-warn-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-warn-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-warn-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do run } */\n /* { dg-options \"-O0\" } */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n /* Check that out-of-bounds case warnings work in the case that the\n    testing expression is promoted.  */\n int"}, {"sha": "7778b66e087c4030ecd897dbd41c1301811b9502", "filename": "gcc/testsuite/gcc.dg/switch-warn-2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-warn-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-warn-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fswitch-warn-2.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -2,6 +2,9 @@\n /* { dg-do run } */\n /* { dg-options \"-O0\" } */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n int\n foo (unsigned int i)\n {"}, {"sha": "62070c4e71cefd3b453996a1a599087bd0afc5b3", "filename": "gcc/testsuite/gcc.dg/torture/builtin-attr-1.c", "status": "modified", "additions": 86, "deletions": 19, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-attr-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-attr-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-attr-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -26,9 +26,10 @@ void test_builtin_##FN(TYPE x, TYPE y) \\\n { if (__builtin_##FN(x,y) != __builtin_##FN(x,y)) link_failure_builtin_##FN(); }\n \n /* Also test the regular (non-__builtin_) function.  */\n-#define TEST1(FN, TYPE) \\\n+#define TEST1(FN, TYPE, RTYPE) \\\n BUILTIN_TEST1(FN, TYPE) \\\n extern void link_failure_##FN(void); \\\n+extern RTYPE FN(TYPE); \\\n void test_##FN(TYPE x) { if (FN(x) != FN(x)) link_failure_##FN(); }\n \n /* Test the __builtin_ functions taking void arguments (with the \"f\"\n@@ -153,12 +154,32 @@ void test_builtin_##FN##l(_Complex long double ld1, _Complex long double ld2) \\\n /* These macros additionally test the non-__builtin_ functions.  */\n \n /* Test the functions taking one FP argument (with the \"f\" and \"l\"\n-   variants).  */\n+   variants) and returning that type.  */\n #define FPTEST1(FN) \\\n BUILTIN_FPTEST1(FN) \\\n extern void link_failure_##FN(void); \\\n extern void link_failure_##FN##f(void); \\\n extern void link_failure_##FN##l(void); \\\n+extern double FN(double); \\\n+extern float FN##f(float); \\\n+extern long double FN##l(long double); \\\n+void test_##FN(double d) \\\n+{ if (FN(d) != FN(d)) link_failure_##FN(); } \\\n+void test_##FN##f(float f) \\\n+{ if (FN##f(f) != FN##f(f)) link_failure_##FN##f(); } \\\n+void test_##FN##l(long double ld) \\\n+{ if (FN##l(ld) != FN##l(ld)) link_failure_##FN##l(); }\n+\n+/* Test the functions taking one FP argument (with the \"f\" and \"l\"\n+   variants) and returning TYPE.  */\n+#define FPTEST1T(FN, TYPE) \\\n+BUILTIN_FPTEST1(FN) \\\n+extern void link_failure_##FN(void); \\\n+extern void link_failure_##FN##f(void); \\\n+extern void link_failure_##FN##l(void); \\\n+extern TYPE FN(double); \\\n+extern TYPE FN##f(float); \\\n+extern TYPE FN##l(long double); \\\n void test_##FN(double d) \\\n { if (FN(d) != FN(d)) link_failure_##FN(); } \\\n void test_##FN##f(float f) \\\n@@ -173,6 +194,9 @@ BUILTIN_FPTEST2(FN) \\\n extern void link_failure_##FN(void); \\\n extern void link_failure_##FN##f(void); \\\n extern void link_failure_##FN##l(void); \\\n+extern double FN(double, double); \\\n+extern float FN##f(float, float); \\\n+extern long double FN##l(long double, long double); \\\n void test_##FN(double d1, double d2) \\\n { if (FN(d1,d2) != FN(d1,d2)) link_failure_##FN(); } \\\n void test_##FN##f(float f1, float f2) \\\n@@ -188,6 +212,9 @@ BUILTIN_FPTEST2ARG1(FN, TYPE) \\\n extern void link_failure_##FN(void); \\\n extern void link_failure_##FN##f(void); \\\n extern void link_failure_##FN##l(void); \\\n+extern double FN(TYPE, double); \\\n+extern float FN##f(TYPE, float); \\\n+extern long double FN##l(TYPE, long double); \\\n void test_##FN(TYPE x, double d) \\\n { if (FN(x,d) != FN(x,d)) link_failure_##FN(); } \\\n void test_##FN##f(TYPE x, float f) \\\n@@ -203,6 +230,9 @@ BUILTIN_FPTEST2ARG2(FN, TYPE) \\\n extern void link_failure_##FN(void); \\\n extern void link_failure_##FN##f(void); \\\n extern void link_failure_##FN##l(void); \\\n+extern double FN(double, TYPE); \\\n+extern float FN##f(float, TYPE); \\\n+extern long double FN##l(long double, TYPE); \\\n void test_##FN(double d, TYPE x) \\\n { if (FN(d,x) != FN(d,x)) link_failure_##FN(); } \\\n void test_##FN##f(float f, TYPE x) \\\n@@ -217,6 +247,9 @@ BUILTIN_FPTEST3(FN) \\\n extern void link_failure_##FN(void); \\\n extern void link_failure_##FN##f(void); \\\n extern void link_failure_##FN##l(void); \\\n+extern double FN(double, double, double); \\\n+extern float FN##f(float, float, float); \\\n+extern long double FN##l(long double, long double, long double); \\\n void test_##FN(double d1, double d2, double d3) \\\n { if (FN(d1,d2,d3) != FN(d1,d2,d3)) link_failure_##FN(); } \\\n void test_##FN##f(float f1, float f2, float f3) \\\n@@ -225,12 +258,32 @@ void test_##FN##l(long double ld1, long double ld2, long double ld3) \\\n { if (FN##l(ld1,ld2,ld3) != FN##l(ld1,ld2,ld3)) link_failure_##FN##l(); }\n \n /* Test the functions taking one complex argument (with the \"f\" and\n-   \"l\" variants).  */\n+   \"l\" variants) and returning that type.  */\n #define CPTEST1(FN) \\\n BUILTIN_CPTEST1(FN) \\\n extern void link_failure_##FN(void); \\\n extern void link_failure_##FN##f(void); \\\n extern void link_failure_##FN##l(void); \\\n+extern _Complex double FN(_Complex double); \\\n+extern _Complex float FN##f(_Complex float); \\\n+extern _Complex long double FN##l(_Complex long double); \\\n+void test_##FN(_Complex double d) \\\n+{ if (FN(d) != FN(d)) link_failure_##FN(); } \\\n+void test_##FN##f(_Complex float f) \\\n+{ if (FN##f(f) != FN##f(f)) link_failure_##FN##f(); } \\\n+void test_##FN##l(_Complex long double ld) \\\n+{ if (FN##l(ld) != FN##l(ld)) link_failure_##FN##l(); }\n+\n+/* Test the functions taking one complex argument (with the \"f\" and\n+   \"l\" variants) and returning the real type.  */\n+#define CPTEST1R(FN) \\\n+BUILTIN_CPTEST1(FN) \\\n+extern void link_failure_##FN(void); \\\n+extern void link_failure_##FN##f(void); \\\n+extern void link_failure_##FN##l(void); \\\n+extern double FN(_Complex double); \\\n+extern float FN##f(_Complex float); \\\n+extern long double FN##l(_Complex long double); \\\n void test_##FN(_Complex double d) \\\n { if (FN(d) != FN(d)) link_failure_##FN(); } \\\n void test_##FN##f(_Complex float f) \\\n@@ -245,6 +298,9 @@ BUILTIN_CPTEST2(FN) \\\n extern void link_failure_##FN(void); \\\n extern void link_failure_##FN##f(void); \\\n extern void link_failure_##FN##l(void); \\\n+extern _Complex double FN(_Complex double, _Complex double); \\\n+extern _Complex float FN##f(_Complex float, _Complex float); \\\n+extern _Complex long double FN##l(_Complex long double, _Complex long double); \\\n void test_##FN(_Complex double d1, _Complex double d2) \\\n { if (FN(d1,d2) != FN(d1,d2)) link_failure_##FN(); } \\\n void test_##FN##f(_Complex float f1, _Complex float f2) \\\n@@ -283,27 +339,27 @@ FPTEST2            (fmod)\n FPTEST1            (gamma)\n BUILTIN_FPTEST0    (huge_val)\n FPTEST2            (hypot)\n-FPTEST1            (ilogb)\n+FPTEST1T           (ilogb, int)\n BUILTIN_FPTEST0    (inf)\n FPTEST1            (j0)\n FPTEST1            (j1)\n FPTEST2ARG1        (jn, int)\n FPTEST2ARG2        (ldexp, int)\n FPTEST1            (lgamma)\n-FPTEST1            (llrint)\n-FPTEST1            (llround)\n+FPTEST1T           (llrint, long long)\n+FPTEST1T           (llround, long long)\n FPTEST1            (log)\n FPTEST1            (log10)\n FPTEST1            (log1p)\n FPTEST1            (log2)\n FPTEST1            (logb)\n-FPTEST1            (lrint)\n-FPTEST1            (lround)\n+FPTEST1T           (lrint, long)\n+FPTEST1T           (lround, long)\n BUILTIN_FPTEST1ARG (nan, char *)\n BUILTIN_FPTEST1ARG (nans, char *)\n FPTEST1            (nearbyint)\n FPTEST2            (nextafter)\n-FPTEST2            (nexttoward)\n+FPTEST2ARG2        (nexttoward, long double)\n FPTEST2            (pow)\n FPTEST1            (pow10)\n FPTEST2            (remainder)\n@@ -328,40 +384,51 @@ FPTEST2ARG1        (yn, int)\n /*CPTEST1 (cabs) See http://gcc.gnu.org/ml/gcc-patches/2003-09/msg00040.html */\n CPTEST1 (cacos)\n CPTEST1 (cacosh)\n-CPTEST1 (carg)\n+CPTEST1R (carg)\n CPTEST1 (casin)\n CPTEST1 (casinh)\n CPTEST1 (catan)\n CPTEST1 (catanh)\n CPTEST1 (ccos)\n CPTEST1 (ccosh)\n CPTEST1 (cexp)\n-CPTEST1 (cimag)\n+CPTEST1R (cimag)\n /*CPTEST1 (clog)*/\n CPTEST1 (conj)\n CPTEST2 (cpow)\n CPTEST1 (cproj)\n-CPTEST1 (creal)\n+CPTEST1R (creal)\n CPTEST1 (csin)\n CPTEST1 (csinh)\n CPTEST1 (csqrt)\n CPTEST1 (ctan)\n CPTEST1 (ctanh)\n \n+/* These next definitions are kludges.  When GCC has a <stdint.h> it\n+   should be used.\n+*/\n+#if __INT_MAX__ == __LONG_LONG_MAX__\n+typedef int intmax_t;\n+#elif __LONG_MAX__ == __LONG_LONG_MAX__\n+typedef long intmax_t;\n+#else\n+typedef long long intmax_t;\n+#endif\n+\n /* Various other const builtins.  */\n-TEST1         (abs, int)\n+TEST1         (abs, int, int)\n BUILTIN_TEST1 (clz, int)\n BUILTIN_TEST1 (clzl, long)\n BUILTIN_TEST1 (clzll, long long)\n BUILTIN_TEST1 (ctz, int)\n BUILTIN_TEST1 (ctzl, long)\n BUILTIN_TEST1 (ctzll, long long)\n-TEST1         (ffs, int)\n-TEST1         (ffsl, long)\n-TEST1         (ffsll, long long)\n-TEST1         (imaxabs, int)\n-TEST1         (labs, long)\n-TEST1         (llabs, long long)\n+TEST1         (ffs, int, int)\n+TEST1         (ffsl, long, int)\n+TEST1         (ffsll, long long, int)\n+TEST1         (imaxabs, intmax_t, intmax_t)\n+TEST1         (labs, long, long)\n+TEST1         (llabs, long long, long long)\n BUILTIN_TEST1 (parity, int)\n BUILTIN_TEST1 (parityl, long)\n BUILTIN_TEST1 (parityll, long long)"}, {"sha": "d052f5347bcdc840f3fc9723b82bad9cec26f857", "filename": "gcc/testsuite/gcc.dg/torture/builtin-math-1.c", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-math-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -7,6 +7,34 @@\n \n /* { dg-do link } */\n \n+extern double atan (double);\n+extern float atanf (float);\n+extern long double atanl (long double);\n+extern double cbrt (double);\n+extern float cbrtf (float);\n+extern long double cbrtl (long double);\n+extern double cos (double);\n+extern float cosf (float);\n+extern long double cosl (long double);\n+extern double exp (double);\n+extern float expf (float);\n+extern long double expl (long double);\n+extern double log (double);\n+extern float logf (float);\n+extern long double logl (long double);\n+extern double pow (double, double);\n+extern float powf (float, float);\n+extern long double powl (long double, long double);\n+extern double sin (double);\n+extern float sinf (float);\n+extern long double sinl (long double);\n+extern double sqrt (double);\n+extern float sqrtf (float);\n+extern long double sqrtl (long double);\n+extern double tan (double);\n+extern float tanf (float);\n+extern long double tanl (long double);\n+\n /* All references to link_error should go away at compile-time.  */\n extern void link_error(void);\n "}, {"sha": "c8c8609f62c2eb1730e459156d5660dc140858b6", "filename": "gcc/testsuite/gcc.dg/torture/builtin-noret-2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-noret-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-noret-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fbuiltin-noret-2.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -15,6 +15,7 @@ int\n main (void)\n {\n   volatile int i = 0;\n+  extern void exit (int);\n   if (i)\n     tabort ();\n   if (i)\n@@ -60,6 +61,7 @@ t_exit (void)\n void\n _exit (int i)\n {\n+  extern void abort (void);\n   abort ();\n }\n \n@@ -81,5 +83,6 @@ t_Exit (void)\n void\n _Exit (int i)\n {\n+  extern void abort (void);\n   abort ();\n }"}, {"sha": "88078621066bdf14d2d59240f4b58c8524e0239b", "filename": "gcc/testsuite/gcc.dg/trampoline-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftrampoline-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftrampoline-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftrampoline-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -8,6 +8,7 @@\n    trampoline couldn't be made executable.  */\n \n extern void abort(void);\n+extern double fabs(double);\n \n void foo (void)\n {"}, {"sha": "44cf3d2b0e9bc2089bda6b4a511557d76ef4228b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030703-1.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030703-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030703-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030703-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3\" } */\n   \n-\n+extern void abort (void);\n extern int blah[];\n \n foo(int index)"}, {"sha": "d1251c103a22c0f06c521a490727be81ada44f25", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030703-2.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030703-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030703-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030703-2.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3\" } */\n-                                                                                \n+\n+extern void abort (void);\n+\n union tree_node;\n typedef union tree_node *tree;\n extern const char tree_code_type[];"}, {"sha": "717c8affd7377123f9b9b40817e9dd4c8978d42e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030708-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030708-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030708-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030708-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3\" } */\n+extern void abort (void);\n struct rtx_def;\n typedef struct rtx_def *rtx;\n enum rtx_code"}, {"sha": "2bc21cae70b39b3b93358e27ef70b15d6f8a5141", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030709-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030709-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030709-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030709-3.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3\" } */\n   \n+extern void abort (void);\n \n union tree_node;\n typedef union tree_node *tree;"}, {"sha": "4b1d18120e18c6f0974417e64bdf94df804471c4", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030710-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030710-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030710-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030710-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3\" } */\n \n+extern void abort (void);\n union tree_node;\n typedef union tree_node *tree;\n struct tree_vec"}, {"sha": "a1ef017dfdaf143576a8a0d6e2a21b09dd1c63f9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030711-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030711-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3\" } */\n  \n+extern void abort (void);\n \n union tree_node;\n typedef union tree_node *tree;"}, {"sha": "8ac20d5c614a93d31cb40b980cb5344b190e9224", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030729-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030729-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030729-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030729-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3\" } */\n \n+extern void abort (void);\n union tree_node;\n typedef union tree_node *tree;\n "}, {"sha": "3dd95eabbcd93a546f5718307547bd84deda6476", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030730-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030730-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030730-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030730-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-dom3\" } */\n      \n+extern void exit (int);\n extern void *ggc_alloc (__SIZE_TYPE__);\n typedef struct dw_attr_struct *dw_attr_ref;\n typedef struct dw_attr_struct"}, {"sha": "7fd0c181945d5502d91344d5cc4c12732bfadd65", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030730-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030730-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030730-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030730-2.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-dom3\" } */\n      \n+extern void exit (int);\n extern void *ggc_alloc (__SIZE_TYPE__);\n typedef struct dw_attr_struct *dw_attr_ref;\n typedef struct dw_attr_struct"}, {"sha": "c622c98dcf117717baac34cce45a8bed356120ab", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030731-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030731-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030731-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030731-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3\" } */\n   \n+extern void abort (void);\n \n struct rtx_def;\n typedef struct rtx_def *rtx;"}, {"sha": "6df4702c70c941a20f1eec0994ce596f19e0e2c7", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-11.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-11.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-11.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-11.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3\" } */\n \n+extern void abort (void);\n struct rtx_def;\n typedef struct rtx_def *rtx;\n struct rtx_def"}, {"sha": "cd518eba9144b5cbc8084ee900187c50c90adde3", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-2.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3\" } */\n      \n+extern void abort (void);\n \n oof ()\n {"}, {"sha": "49f3a997d509348123ca1b4ce2ac20894b3e0b71", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-5.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-5.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3\" } */\n-                                                                                \n+\n+extern void abort (void);\n struct rtx_def;\n typedef struct rtx_def *rtx;\n "}, {"sha": "f1e0d00c2351d8c99852339d13c95b98c73845da", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030807-7.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030807-7.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,7 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-dom3\" } */\n   \n- \n+extern void abort (void);\n \n union tree_node;\n typedef union tree_node *tree;"}, {"sha": "11781f9d3876da536659312a3e651a270637cbc9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030808-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030808-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030808-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030808-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-cddce\" } */\n       \n+extern void abort (void);\n \n struct rtx_def;\n typedef struct rtx_def *rtx;"}, {"sha": "da48d2255a4fe47a840cb08c9f2af00c0da6d41d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3\" } */\n    \n+extern void abort (void);\n \n com(int *blah)\n {"}, {"sha": "5acc6e1dbb8723642fbe968ae687e62650e42fc9", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-2.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3\" } */\n     \n+extern void abort (void);\n \n void\n foo (int value)"}, {"sha": "bcebd075d6f30f93901195a0293af39e1a067d0b", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-3.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-3.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3\" } */\n     \n+extern void abort (void);\n \n void\n foo (int value)"}, {"sha": "7bdaaebed62745c49d435b15b2ae340897f23e46", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-4.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-4.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3 -fdump-tree-optimized\" } */\n     \n+extern void abort (void);\n union tree_node;\n typedef union tree_node *tree;\n extern const char tree_code_type[];"}, {"sha": "c34c2dc8bbf3024f169fee65ef6814b149f9c4cc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-5.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-5.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3 -fdump-tree-optimized\" } */\n     \n+extern void abort (void);\n union tree_node;\n typedef union tree_node *tree;\n extern const char tree_code_type[];"}, {"sha": "49b526ccc13a9038f950785bbe663b28cb636154", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-6.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-6.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3\" } */\n \n+extern void abort (void);\n union tree_node;\n typedef union tree_node *tree;\n enum tree_code"}, {"sha": "440794d6ae3d4deae13efe62d57ed213cd3b6964", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030814-7.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030814-7.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3\" } */\n \n+extern void abort (void);\n struct rtx_def;\n typedef struct rtx_def *rtx;\n struct rtvec_def;"}, {"sha": "ba0cf6b16a081b5ad13ca784774a232c003b7757", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030815-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030815-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030815-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030815-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3\" } */\n \n+extern void abort (void);\n typedef unsigned int size_t;\n struct rtx_def;\n typedef struct rtx_def *rtx;"}, {"sha": "6fb37c34349db83d04c5d4baf6bebe93ebb19ef5", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030907-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030907-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030907-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030907-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -6,6 +6,9 @@\n /* { dg-do compile } */\n /* { dg-options \"-O -fdump-tree-optimized\" } */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n int main() \n { \n    int i; "}, {"sha": "478933b3f488abc895042d7c88c455cc7cc4001f", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030917-3.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030917-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030917-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030917-3.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fno-tree-dominator-opts -fdump-tree-ccp\" } */\n-                                                                                \n+\n+extern int printf (const char *, ...); \n \n main ()\n {"}, {"sha": "f216125eae13a0215fbdfb9cabcc0af35a676f08", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030922-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030922-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030922-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030922-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,7 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-dom3\" } */\n   \n+extern void abort (void);\n \n union tree_node;\n typedef union tree_node *tree;"}, {"sha": "865915f4fb3a85044359b9f7678c9258e3a1cc8e", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20031113-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031113-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031113-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20031113-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -7,6 +7,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1\" } */ \n \n+extern __SIZE_TYPE__ strlen (const char *);\n+\n int i; \n \n static void "}, {"sha": "6225bcdc8a34b7a11b9495f0046237cf85a111fc", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040121-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040121-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040121-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040121-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -4,6 +4,7 @@\n     not boolean */\n /* { dg-options \"-O3\" } */\n /* { dg-do run } */\n+extern void abort (void);\n char *foo(char *p, char *q) {\n     int x = (p !=0) + (q != 0);\n     if (x==2)  return \"a\"; else return 0;"}, {"sha": "d6e5449716944ffb1d11f515248163bd1ae7c097", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040319-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040319-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040319-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040319-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -6,6 +6,8 @@\n    were not being processed by the type based alias analyzer,\n    resulting in optimizations removing a non-redundant load.  */\n \n+extern void abort (void);\n+\n struct bar { int count;  int *arr;};\n \n void foo (struct bar *b)"}, {"sha": "be718aba692a7c365056cd03a8009e08aa7ea977", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040324-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040324-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040324-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040324-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -10,6 +10,9 @@\n    Therefore, DOM did not see that i was modified between the two ifs\n    and optimized away the second if.  */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n struct x\n {\n   unsigned b:1;"}, {"sha": "4be6049e909483369fc5a072b4158daedcf98e18", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040326-1.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040326-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040326-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040326-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -4,6 +4,9 @@\n    a .GLOBAL_VAR to model the side effects of functions.  Without it,\n    we were moving the call to Faref() inside the second call to\n    Faset().  */\n+extern void abort (void);\n+extern void exit (int);\n+\n main ()\n {\n   int table, c, elt;"}, {"sha": "b1bed75dad2094d52ea517d0f828f5525a8e0093", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040326-2.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040326-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040326-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040326-2.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -4,6 +4,7 @@\n /* Gimplification problem exposed by zsh.  All the side-effects in\n    function arguments and in the called expression should happen\n    before the actual function call.  */\n+extern void abort (void);\n int A;\n \n typedef void (*fnptr) (void);"}, {"sha": "5f99be2874eeb3f4901abf88e815202d1b79a87a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20040517-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040517-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040517-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20040517-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O1 -fdump-tree-ssa-vops\" } */\n+extern void abort (void);\n int a; \n  \n extern void __attribute__ ((malloc)) *foo ();"}, {"sha": "b5e702c57ea01d2c44ef0eba7f9369ce89879858", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-ccp-10.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-10.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-10.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-ccp-10.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -5,6 +5,8 @@\n    fail to terminate when there is a nontrivial cycle in the corresponding\n    ssa graph.  */\n \n+extern __SIZE_TYPE__ strlen (const char *);\n+\n void foo(int i)\n {\n   char *s = \"abcde\";"}, {"sha": "ca1b81c5f0291135b2376ae10af8650a177de894", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */ \n /* { dg-options \"-O2 -fdump-tree-pre-stats\" } */\n+extern int printf (const char *, ...);\n int main(int argc, char **argv)\n {\n \tint a;"}, {"sha": "33901523fb38bd750e64519a1724527fb7c7c14a", "filename": "gcc/testsuite/gcc.dg/tree-ssa/tailcall-1.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailcall-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailcall-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailcall-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,5 +1,6 @@\n /* { dg-do compile } */\n /* { dg-options \"-O2 -fdump-tree-tailc-details\" } */\n+extern void *alloca (__SIZE_TYPE__);\n int q(int a);\n int *v;\n int"}, {"sha": "d0d4f3a1e45296b786d8a98a7c29dad832333126", "filename": "gcc/testsuite/gcc.dg/tree-ssa/tailrecursion-5.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Ftailrecursion-5.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,9 @@\n /* { dg-do run } */\n /* { dg-options \"-O1 -fdump-tree-optimized\" } */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n int sum (int n)\n {\n   if (n == 0)"}, {"sha": "4458658a58ecc219b3c5f81658cffd423e356279", "filename": "gcc/testsuite/gcc.dg/ultrasp3.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fultrasp3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fultrasp3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fultrasp3.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,9 @@\n /* { dg-options \"\" } */\n /* { dg-options \"-mcpu=ultrasparc -mv8plus\" { target sparc-*-* } } */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n unsigned long long foo (unsigned long long x)\n {\n   return 0x73500000735LL * x;"}, {"sha": "bab82a2d6822adffd85ff04964f42d407bde01be", "filename": "gcc/testsuite/gcc.dg/winline-7.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fwinline-7.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -1,6 +1,8 @@\n /* { dg-do compile } */\n /* { dg-options \"-Winline -O2\" } */\n \n+extern void *alloca (__SIZE_TYPE__);\n+\n void big (void);\n inline void *q (void)\n {\t\t\t\t/* { dg-warning \"(function not inlinable|alloca)\" } */"}, {"sha": "8c6018c566d825ff5c3333432558f518466dfdf2", "filename": "gcc/testsuite/gcc.misc-tests/bprob-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -4,6 +4,8 @@\n    This test is the same as gcov-4.c.  The \"count\" comments are left in to\n    make comparisons easier; they are ignored for this test. */\n \n+extern void abort (void);\n+\n int do_something (int i)\n {\n   return i;"}, {"sha": "e0931f39c469e9709b4782d9f899cda6141827ff", "filename": "gcc/testsuite/gcc.misc-tests/bprob-2.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fbprob-2.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -3,6 +3,9 @@\n    This is the same as test gcc.c-torture/execute/980526-1.c and\n    gcc.misc-tests/gcov-3.c */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n int expect_do1 = 1, expect_do2 = 2;\n  \n static int doit(int x){"}, {"sha": "fcccdeeff419575a95764c5ad54714c8582fc595", "filename": "gcc/testsuite/gcc.misc-tests/gcov-3.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-3.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -4,6 +4,9 @@\n /* { dg-options \"-fprofile-arcs -ftest-coverage\" } */\n /* { dg-do run { target native } } */\n \n+extern void abort (void);\n+extern void exit (int);\n+\n int expect_do1 = 1, expect_do2 = 2;\n  \n static int doit(int x){"}, {"sha": "9d8ab1c1097ec0fe0761b10e1e3447ded32944f9", "filename": "gcc/testsuite/gcc.misc-tests/gcov-4.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-4.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -4,6 +4,8 @@\n /* { dg-options \"-fprofile-arcs -ftest-coverage\" } */\n /* { dg-do run { target native } } */\n \n+extern void abort (void);\n+\n int do_something (int i)\n {\n   return i;"}, {"sha": "7653c5897ad7e18ad5b31a43277a5d4232d4f13d", "filename": "gcc/testsuite/gcc.misc-tests/gcov-4b.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-4b.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-4b.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-4b.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -4,6 +4,8 @@\n /* { dg-options \"-fprofile-arcs -ftest-coverage\" } */\n /* { dg-do run { target native } } */\n \n+extern void abort (void);\n+\n int do_something (int i)\n {\n   return i;"}, {"sha": "aefab3ed33a79dc53b534b455510b1e1ea10f500", "filename": "gcc/testsuite/gcc.misc-tests/gcov-6.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-6.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -6,6 +6,8 @@\n /* { dg-options \"-fprofile-arcs -ftest-coverage\" } */\n /* { dg-do run { target native } } */\n \n+extern void exit (int);\n+\n int val;\n \n void"}, {"sha": "2e0f6e8b03c1854942ddbe9d0afc3f54968bea33", "filename": "gcc/testsuite/gcc.misc-tests/gcov-7.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-7.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-7.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fgcov-7.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -6,6 +6,9 @@\n \n #include <setjmp.h>\n \n+extern void abort (void);\n+extern void exit (int);\n+\n jmp_buf env;\n int val;\n int longjmp_taken;"}, {"sha": "a44c6076481cc2ec25ffc6f58425a8e363641318", "filename": "gcc/testsuite/gcc.misc-tests/i386-pf-3dnow-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-3dnow-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-3dnow-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-3dnow-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -3,6 +3,8 @@\n \n /* { dg-do compile { target i?86-*-* } } */\n \n+extern void exit (int);\n+\n char *msg = \"howdy there\";\n \n void foo (char *p)"}, {"sha": "09a67d8342601d8e35e8f83c205d3ce40964004f", "filename": "gcc/testsuite/gcc.misc-tests/i386-pf-athlon-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-athlon-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-athlon-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-athlon-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -4,6 +4,8 @@\n \n /* { dg-do compile { target i?86-*-* } } */\n \n+extern void exit (int);\n+\n char *msg = \"howdy there\";\n \n void foo (char *p)"}, {"sha": "0ad3220e856cd48aef8fef8a024c0dfa5945538b", "filename": "gcc/testsuite/gcc.misc-tests/i386-pf-none-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-none-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-none-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-none-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -3,6 +3,8 @@\n \n /* { dg-do compile { target i?86-*-* } } */\n \n+extern void exit (int);\n+\n char *msg = \"howdy there\";\n \n void foo (char *p)"}, {"sha": "15275775caa29eb4e50637958ba1b39a18c46164", "filename": "gcc/testsuite/gcc.misc-tests/i386-pf-sse-1.c", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-sse-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-sse-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.misc-tests%2Fi386-pf-sse-1.c?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -3,6 +3,8 @@\n \n /* { dg-do compile { target i?86-*-* } } */\n \n+extern void exit (int);\n+\n char *msg = \"howdy there\";\n \n void foo (char *p)"}, {"sha": "8ec3f722c115dac29a17101c138e016115856951", "filename": "gcc/testsuite/objc.dg/nested-func-1.m", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fobjc.dg%2Fnested-func-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fobjc.dg%2Fnested-func-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fnested-func-1.m?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -4,6 +4,7 @@\n /* { dg-options \"-lobjc\" } */\n /* { dg-do run } */\n #include <stdio.h>\n+#include <stdlib.h>\n #include <objc/objc.h>\n #include <objc/Object.h>\n "}, {"sha": "b3a8c28b5e68a168df0cffa6d322278bb055cc9d", "filename": "gcc/testsuite/objc.dg/special/unclaimed-category-1.m", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Funclaimed-category-1.m", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ee712eab15dfd0dfe178ff42492c20a9a9aaeae8/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Funclaimed-category-1.m", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fobjc.dg%2Fspecial%2Funclaimed-category-1.m?ref=ee712eab15dfd0dfe178ff42492c20a9a9aaeae8", "patch": "@@ -4,6 +4,8 @@\n #include <objc/objc-api.h>\n #include <objc/Object.h>\n \n+extern void abort (void);\n+\n /* Test loading unclaimed categories - categories of a class defined\n    separately from the class itself.  */\n "}]}