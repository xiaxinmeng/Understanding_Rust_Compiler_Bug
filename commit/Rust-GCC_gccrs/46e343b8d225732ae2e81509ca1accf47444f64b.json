{"sha": "46e343b8d225732ae2e81509ca1accf47444f64b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDZlMzQzYjhkMjI1NzMyYWUyZTgxNTA5Y2ExYWNjZjQ3NDQ0ZjY0Yg==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2015-11-07T10:17:05Z"}, "committer": {"name": "Richard Sandiford", "email": "rsandifo@gcc.gnu.org", "date": "2015-11-07T10:17:05Z"}, "message": "Move #undef DEF_INTERNAL_FN to internal-fn.def\n\nIn practice the definition of DEF_INTERNAL_FN is never reused after\nincluding internal-fn.def, so we might as well #undef it there.\n\nThis becomes more obvious with a later patch that adds other\nDEF_INTERNAL_* directives, such as DEF_INTERNAL_OPTAB_FN.\nIf the includer doesn't care about the information carried in\nthese new directives, it can simply leave the macro undefined\nand internals.def will provide a definition that forwards to\nDEF_INTERNAL_FN.  It doesn't make much sense for includers to have\nto #undef macros that are defined by internals.def and it seems overly\ncomplicated to get internals.def to undef macros only in the cases\nwhere it provided a definition.  Instead I went with the approach of\n#undeffing all the DEF_INTERNAL_* macros unconditionally.\n\nTested on x86_64-linux-gnu, aarch64-linux-gnu and arm-linux-gnueabi.\n\ngcc/\n\t* internal-fn.def: #undef DEF_INTERNAL_FN at the end.\n\t* internal-fn.c: Don't undef it here.\n\t* tree-core.h: Likewise.\n\nFrom-SVN: r229923", "tree": {"sha": "bf2eb1c3768397191320000d6b39a9b2b2e6ea7d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bf2eb1c3768397191320000d6b39a9b2b2e6ea7d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/46e343b8d225732ae2e81509ca1accf47444f64b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46e343b8d225732ae2e81509ca1accf47444f64b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46e343b8d225732ae2e81509ca1accf47444f64b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46e343b8d225732ae2e81509ca1accf47444f64b/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "df838ef0f1a11355a217ab11ed8546dd97873870", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df838ef0f1a11355a217ab11ed8546dd97873870", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df838ef0f1a11355a217ab11ed8546dd97873870"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "753d992d84683771262fc3ec4b7197f97ae3ded7", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e343b8d225732ae2e81509ca1accf47444f64b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e343b8d225732ae2e81509ca1accf47444f64b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=46e343b8d225732ae2e81509ca1accf47444f64b", "patch": "@@ -1,3 +1,9 @@\n+2015-11-07  Richard Sandiford  <richard.sandiford@arm.com>\n+\n+\t* internal-fn.def: #undef DEF_INTERNAL_FN at the end.\n+\t* internal-fn.c: Don't undef it here.\n+\t* tree-core.h: Likewise.\n+\n 2015-11-07  Richard Sandiford  <richard.sandiford@arm.com>\n \n \t* builtins.c (fold_builtin_nan): Delete."}, {"sha": "afbfae815e5318ef10dfdc0daf7746b3b715e2d2", "filename": "gcc/internal-fn.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e343b8d225732ae2e81509ca1accf47444f64b/gcc%2Finternal-fn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e343b8d225732ae2e81509ca1accf47444f64b/gcc%2Finternal-fn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.c?ref=46e343b8d225732ae2e81509ca1accf47444f64b", "patch": "@@ -43,15 +43,13 @@ along with GCC; see the file COPYING3.  If not see\n const char *const internal_fn_name_array[] = {\n #define DEF_INTERNAL_FN(CODE, FLAGS, FNSPEC) #CODE,\n #include \"internal-fn.def\"\n-#undef DEF_INTERNAL_FN\n   \"<invalid-fn>\"\n };\n \n /* The ECF_* flags of each internal function, indexed by function number.  */\n const int internal_fn_flags_array[] = {\n #define DEF_INTERNAL_FN(CODE, FLAGS, FNSPEC) FLAGS,\n #include \"internal-fn.def\"\n-#undef DEF_INTERNAL_FN\n   0\n };\n \n@@ -65,7 +63,6 @@ init_internal_fns ()\n   if (FNSPEC) internal_fn_fnspec_array[IFN_##CODE] = \\\n     build_string ((int) sizeof (FNSPEC), FNSPEC ? FNSPEC : \"\");\n #include \"internal-fn.def\"\n-#undef DEF_INTERNAL_FN\n   internal_fn_fnspec_array[IFN_LAST] = 0;\n }\n \n@@ -2062,7 +2059,6 @@ expand_GOACC_REDUCTION (gcall *stmt ATTRIBUTE_UNUSED)\n static void (*const internal_fn_expanders[]) (gcall *) = {\n #define DEF_INTERNAL_FN(CODE, FLAGS, FNSPEC) expand_##CODE,\n #include \"internal-fn.def\"\n-#undef DEF_INTERNAL_FN\n   0\n };\n "}, {"sha": "d0eb704bd157db56bda31e911242215d7bd718ad", "filename": "gcc/internal-fn.def", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e343b8d225732ae2e81509ca1accf47444f64b/gcc%2Finternal-fn.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e343b8d225732ae2e81509ca1accf47444f64b/gcc%2Finternal-fn.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finternal-fn.def?ref=46e343b8d225732ae2e81509ca1accf47444f64b", "patch": "@@ -86,3 +86,5 @@ DEF_INTERNAL_FN (GOACC_LOOP, ECF_PURE | ECF_NOTHROW, NULL)\n \n /* OpenACC reduction abstraction.  See internal-fn.h  for usage.  */\n DEF_INTERNAL_FN (GOACC_REDUCTION, ECF_NOTHROW | ECF_LEAF, NULL)\n+\n+#undef DEF_INTERNAL_FN"}, {"sha": "3c50e578afda1a0846cee9af3dee8e8f151b6d81", "filename": "gcc/tree-core.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/46e343b8d225732ae2e81509ca1accf47444f64b/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/46e343b8d225732ae2e81509ca1accf47444f64b/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=46e343b8d225732ae2e81509ca1accf47444f64b", "patch": "@@ -774,7 +774,6 @@ enum annot_expr_kind {\n enum internal_fn {\n #define DEF_INTERNAL_FN(CODE, FLAGS, FNSPEC) IFN_##CODE,\n #include \"internal-fn.def\"\n-#undef DEF_INTERNAL_FN\n   IFN_LAST\n };\n "}]}