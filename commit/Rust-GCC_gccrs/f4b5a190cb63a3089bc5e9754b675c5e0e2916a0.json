{"sha": "f4b5a190cb63a3089bc5e9754b675c5e0e2916a0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjRiNWExOTBjYjYzYTMwODliYzVlOTc1NGI2NzVjNWUwZTI5MTZhMA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-08-21T17:15:58Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2009-08-21T17:15:58Z"}, "message": "boz_9.f90: Do not generate denormal floating point numbers.\n\n\t* gfortran.dg/boz_9.f90: Do not generate denormal floating\n\tpoint numbers.  Remove -mieee option for alpha*-*-* targets.\n\nFrom-SVN: r150992", "tree": {"sha": "6be45cc13f2284c7d7ddaa218861cff91988beb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6be45cc13f2284c7d7ddaa218861cff91988beb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f4b5a190cb63a3089bc5e9754b675c5e0e2916a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4b5a190cb63a3089bc5e9754b675c5e0e2916a0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f4b5a190cb63a3089bc5e9754b675c5e0e2916a0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f4b5a190cb63a3089bc5e9754b675c5e0e2916a0/comments", "author": null, "committer": null, "parents": [{"sha": "46107b99846a6361085dd67295e015211137f2af", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46107b99846a6361085dd67295e015211137f2af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46107b99846a6361085dd67295e015211137f2af"}], "stats": {"total": 84, "additions": 44, "deletions": 40}, "files": [{"sha": "1dada4017f8f52f076870ff2ce66e1240eee3966", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4b5a190cb63a3089bc5e9754b675c5e0e2916a0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4b5a190cb63a3089bc5e9754b675c5e0e2916a0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=f4b5a190cb63a3089bc5e9754b675c5e0e2916a0", "patch": "@@ -1,3 +1,8 @@\n+2009-08-21  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gfortran.dg/boz_9.f90: Do not generate denormal floating\n+\tpoint numbers.  Remove -mieee option for alpha*-*-* targets.\n+\n 2009-08-21  Janus Weil  <janus@gcc.gnu.org>\n \n \tPR fortran/41106\n@@ -41,9 +46,9 @@\n \t* gfortran.dg/intrinsic_5.f90: New.\n \n 2009-08-19  Ramana Radhakrishnan  <ramana.radhakrishnan@arm.com>\n-            Richard Earnshaw  <richard.earnshaw@arm.com>\n+\t    Richard Earnshaw  <richard.earnshaw@arm.com>\n \n-        * testsuite/gcc.target/arm/20090811-1.c: New test.\n+\t* testsuite/gcc.target/arm/20090811-1.c: New test.\n \n 2009-08-19  Jakub Jelinek  <jakub@redhat.com>\n "}, {"sha": "ec728cc65176ad56a4feb92707eeb41f53cd1a14", "filename": "gcc/testsuite/gfortran.dg/boz_9.f90", "status": "modified", "additions": 37, "deletions": 38, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f4b5a190cb63a3089bc5e9754b675c5e0e2916a0/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_9.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f4b5a190cb63a3089bc5e9754b675c5e0e2916a0/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_9.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fboz_9.f90?ref=f4b5a190cb63a3089bc5e9754b675c5e0e2916a0", "patch": "@@ -1,6 +1,5 @@\n ! { dg-do run }\n ! { dg-options \"-fno-range-check\" }\n-! { dg-options \"-fno-range-check -mieee\" { target alpha*-*-* } } \n !\n ! PR fortran/34342\n !\n@@ -10,40 +9,40 @@ program f2003\n implicit none\n \n real,parameter             :: r2c = real(int(z'3333'))\n-real,parameter             :: rc  = real(z'3333')\n+real,parameter             :: rc  = real(z'50CB9F09')\n double precision,parameter :: dc  = dble(Z'3FD34413509F79FF')\n-complex,parameter          :: z1c = cmplx(b'10101',-4.0)\n-complex,parameter          :: z2c = cmplx(5.0, o'01245')\n+complex,parameter          :: z1c = cmplx(b'11000001010001101101110110000011', 3.049426e-10)\n+complex,parameter          :: z2c = cmplx(4.160326e16, o'6503667306')\n \n real             :: r2 = real(int(z'3333'))\n-real             :: r  = real(z'3333')\n+real             :: r  = real(z'50CB9F09')\n double precision :: d  = dble(Z'3FD34413509F79FF')\n-complex          :: z1 = cmplx(b'10101',-4.0)\n-complex          :: z2 = cmplx(5.0, o'01245')\n+complex          :: z1 = cmplx(b'11000001010001101101110110000011', 3.049426e-10)\n+complex          :: z2 = cmplx(4.160326e16, o'6503667306')\n \n if (r2c /= 13107.0) call abort()\n-if (rc  /= 1.83668190E-41) call abort()\n+if (rc  /= 2.732958e10) call abort()\n if (dc /= 0.30102999566398120d0) call abort()\n-if (real(z1c) /= 2.94272678E-44 .or. aimag(z1c) /= -4.0) call abort()\n-if (real(z2c) /= 5.0 .or. aimag(z2c) /= 9.48679060E-43) call abort()\n+if (real(z1c) /= -1.242908e1 .or. aimag(z1c) /= 3.049426e-10) call abort()\n+if (real(z2c) /= 4.160326e16 .or. aimag(z2c) /= 5.343285e-7) call abort()\n \n if (r2 /= 13107.0) call abort()\n-if (r  /= 1.83668190E-41) call abort()\n+if (r  /= 2.732958e10) call abort()\n if (d /= 0.30102999566398120d0) call abort()\n-if (real(z1) /= 2.94272678E-44 .or. aimag(z1) /= -4.0) call abort()\n-if (real(z2) /= 5.0 .or. aimag(z2) /= 9.48679060E-43) call abort()\n+if (real(z1) /= -1.242908e1 .or. aimag(z1) /= 3.049426e-10) call abort()\n+if (real(z2) /= 4.160326e16 .or. aimag(z2) /= 5.343285e-7) call abort()\n \n r2 = dble(int(z'3333'))\n-r = real(z'3333')\n+r = real(z'50CB9F09')\n d = dble(Z'3FD34413509F79FF')\n-z1 = cmplx(b'10101',-4.0)\n-z2 = cmplx(5.0, o'01245')\n+z1 = cmplx(b'11000001010001101101110110000011', 3.049426e-10)\n+z2 = cmplx(4.160326e16, o'6503667306')\n \n-if (r2 /= 13107.0) call abort()\n-if (r  /= 1.83668190E-41) call abort()\n+if (r2 /= 13107d0) call abort()\n+if (r  /= 2.732958e10) call abort()\n if (d /= 0.30102999566398120d0) call abort()\n-if (real(z1) /= 2.94272678E-44 .or. aimag(z1) /= -4.0) call abort()\n-if (real(z2) /= 5.0 .or. aimag(z2) /= 9.48679060E-43) call abort()\n+if (real(z1) /= -1.242908e1 .or. aimag(z1) /= 3.049426e-10) call abort()\n+if (real(z2) /= 4.160326e16 .or. aimag(z2) /= 5.343285e-7) call abort()\n \n call test4()\n call test8()\n@@ -52,34 +51,34 @@ program f2003\n \n subroutine test4\n real,parameter             :: r2c = real(int(z'3333', kind=4), kind=4)\n-real,parameter             :: rc  = real(z'3333', kind=4)\n-complex,parameter          :: z1c = cmplx(b'10101',-4.0, kind=4)\n-complex,parameter          :: z2c = cmplx(5.0, o'01245', kind=4)\n+real,parameter             :: rc  = real(z'50CB9F09', kind=4)\n+complex,parameter          :: z1c = cmplx(b'11000001010001101101110110000011', 3.049426e-10, kind=4)\n+complex,parameter          :: z2c = cmplx(4.160326e16, o'6503667306', kind=4)\n \n real             :: r2 = real(int(z'3333', kind=4), kind=4)\n-real             :: r  = real(z'3333', kind=4)\n-complex          :: z1 = cmplx(b'10101',-4.0, kind=4)\n-complex          :: z2 = cmplx(5.0, o'01245', kind=4)\n+real             :: r  = real(z'50CB9F09', kind=4)\n+complex          :: z1 = cmplx(b'11000001010001101101110110000011', 3.049426e-10, kind=4)\n+complex          :: z2 = cmplx(4.160326e16, o'6503667306', kind=4)\n \n if (r2c /= 13107.0) call abort()\n-if (rc  /= 1.83668190E-41) call abort()\n-if (real(z1c) /= 2.94272678E-44 .or. aimag(z1c) /= -4.0) call abort()\n-if (real(z2c) /= 5.0 .or. aimag(z2c) /= 9.48679060E-43) call abort()\n+if (rc  /= 2.732958e10) call abort()\n+if (real(z1) /= -1.242908e1 .or. aimag(z1) /= 3.049426e-10) call abort()\n+if (real(z2) /= 4.160326e16 .or. aimag(z2) /= 5.343285e-7) call abort()\n \n if (r2 /= 13107.0) call abort()\n-if (r  /= 1.83668190E-41) call abort()\n-if (real(z1) /= 2.94272678E-44 .or. aimag(z1) /= -4.0) call abort()\n-if (real(z2) /= 5.0 .or. aimag(z2) /= 9.48679060E-43) call abort()\n+if (r  /= 2.732958e10) call abort()\n+if (real(z1) /= -1.242908e1 .or. aimag(z1) /= 3.049426e-10) call abort()\n+if (real(z2) /= 4.160326e16 .or. aimag(z2) /= 5.343285e-7) call abort()\n \n r2 = real(int(z'3333'), kind=4)\n-r = real(z'3333', kind=4)\n-z1 = cmplx(b'10101',-4.0, kind=4)\n-z2 = cmplx(5.0, o'01245', kind=4)\n+r = real(z'50CB9F09', kind=4)\n+z1 = cmplx(b'11000001010001101101110110000011', 3.049426e-10, kind=4)\n+z2 = cmplx(4.160326e16, o'6503667306', kind=4)\n \n if (r2 /= 13107.0) call abort()\n-if (r  /= 1.83668190E-41) call abort()\n-if (real(z1) /= 2.94272678E-44 .or. aimag(z1) /= -4.0) call abort()\n-if (real(z2) /= 5.0 .or. aimag(z2) /= 9.48679060E-43) call abort()\n+if (r  /= 2.732958e10) call abort()\n+if (real(z1) /= -1.242908e1 .or. aimag(z1) /= 3.049426e-10) call abort()\n+if (real(z2) /= 4.160326e16 .or. aimag(z2) /= 5.343285e-7) call abort()\n end subroutine test4\n \n "}]}