{"sha": "f351bfedf45d984166cd1d84978300564cda876e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjM1MWJmZWRmNDVkOTg0MTY2Y2QxZDg0OTc4MzAwNTY0Y2RhODc2ZQ==", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2005-01-11T21:56:01Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@gcc.gnu.org", "date": "2005-01-11T21:56:01Z"}, "message": "* regrename.c (kill_value): Handle subreg's that won't simplify.\n\nFrom-SVN: r93200", "tree": {"sha": "ab79c64ba9b51e95a4cb0265e13a68b36082f7cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab79c64ba9b51e95a4cb0265e13a68b36082f7cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f351bfedf45d984166cd1d84978300564cda876e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f351bfedf45d984166cd1d84978300564cda876e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f351bfedf45d984166cd1d84978300564cda876e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f351bfedf45d984166cd1d84978300564cda876e/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "eb701deb655a1ae74c35f2719d33c701544c7ccd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/eb701deb655a1ae74c35f2719d33c701544c7ccd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/eb701deb655a1ae74c35f2719d33c701544c7ccd"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "1ce03958e30c9ec9a61f0631a1f0057b1fad21d3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f351bfedf45d984166cd1d84978300564cda876e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f351bfedf45d984166cd1d84978300564cda876e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f351bfedf45d984166cd1d84978300564cda876e", "patch": "@@ -1,3 +1,7 @@\n+2005-01-11  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* regrename.c (kill_value): Handle subreg's that won't simplify.\n+\n 2005-01-11  Richard Henderson  <rth@redhat.com>\n \n \tPR target/13366"}, {"sha": "4b3860c647c225038466188abe1de37386897fce", "filename": "gcc/regrename.c", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f351bfedf45d984166cd1d84978300564cda876e/gcc%2Fregrename.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f351bfedf45d984166cd1d84978300564cda876e/gcc%2Fregrename.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregrename.c?ref=f351bfedf45d984166cd1d84978300564cda876e", "patch": "@@ -1104,14 +1104,15 @@ kill_value_regno (unsigned int regno, unsigned int nregs,\n static void\n kill_value (rtx x, struct value_data *vd)\n {\n-  /* SUBREGS are supposed to have been eliminated by now.  But some\n-     ports, e.g. i386 sse, use them to smuggle vector type information\n-     through to instruction selection.  Each such SUBREG should simplify,\n-     so if we get a NULL  we've done something wrong elsewhere.  */\n+  rtx orig_rtx = x;\n \n   if (GET_CODE (x) == SUBREG)\n-    x = simplify_subreg (GET_MODE (x), SUBREG_REG (x),\n-\t\t\t GET_MODE (SUBREG_REG (x)), SUBREG_BYTE (x));\n+    {\n+      x = simplify_subreg (GET_MODE (x), SUBREG_REG (x),\n+\t\t\t   GET_MODE (SUBREG_REG (x)), SUBREG_BYTE (x));\n+      if (x == NULL_RTX)\n+\tx = SUBREG_REG (orig_rtx);\n+    }\n   if (REG_P (x))\n     {\n       unsigned int regno = REGNO (x);"}]}