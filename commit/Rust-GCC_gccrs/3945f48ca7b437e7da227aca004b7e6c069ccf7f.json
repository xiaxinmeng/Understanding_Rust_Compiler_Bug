{"sha": "3945f48ca7b437e7da227aca004b7e6c069ccf7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzk0NWY0OGNhN2I0MzdlN2RhMjI3YWNhMDA0YjdlNmMwNjljY2Y3Zg==", "commit": {"author": {"name": "Dodji Seketeli", "email": "dodji@redhat.com", "date": "2011-11-22T16:41:10Z"}, "committer": {"name": "Dodji Seketeli", "email": "dodji@gcc.gnu.org", "date": "2011-11-22T16:41:10Z"}, "message": "PR c++/51143 - Alias template allows class definition\n\ngcc/cp\n\n\tPR c++/51143\n\t* parser.c (cp_parser_alias_declaration): Don't allow type\n\tdefinition in templates.\n\ngcc/testsuite\n\n\tPR c++/51143\n\t* g++.dg/cpp0x/alias-decl-16.C: New test.\n\nFrom-SVN: r181626", "tree": {"sha": "f65b4d85e3cb2cbf1b147d07e361614caf51ba6d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f65b4d85e3cb2cbf1b147d07e361614caf51ba6d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3945f48ca7b437e7da227aca004b7e6c069ccf7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3945f48ca7b437e7da227aca004b7e6c069ccf7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3945f48ca7b437e7da227aca004b7e6c069ccf7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3945f48ca7b437e7da227aca004b7e6c069ccf7f/comments", "author": null, "committer": null, "parents": [{"sha": "8dcf72a86209534445442f14b13e565e51963264", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8dcf72a86209534445442f14b13e565e51963264", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8dcf72a86209534445442f14b13e565e51963264"}], "stats": {"total": 68, "additions": 68, "deletions": 0}, "files": [{"sha": "867c45c7b8fe49cf5b50a776dba8f4111ffd1586", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3945f48ca7b437e7da227aca004b7e6c069ccf7f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3945f48ca7b437e7da227aca004b7e6c069ccf7f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=3945f48ca7b437e7da227aca004b7e6c069ccf7f", "patch": "@@ -1,3 +1,9 @@\n+2011-11-22  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/51143\n+\t* parser.c (cp_parser_alias_declaration): Don't allow type\n+\tdefinition in templates.\n+\n 2011-11-22  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/51196"}, {"sha": "d0adaa03c037c73791e24d02673097593d1df828", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3945f48ca7b437e7da227aca004b7e6c069ccf7f/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3945f48ca7b437e7da227aca004b7e6c069ccf7f/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=3945f48ca7b437e7da227aca004b7e6c069ccf7f", "patch": "@@ -14967,6 +14967,7 @@ cp_parser_alias_declaration (cp_parser* parser)\n   cp_declarator *declarator;\n   cp_decl_specifier_seq decl_specs;\n   bool member_p;\n+  const char *saved_message = NULL;\n \n   /* Look for the `using' keyword.  */\n   cp_parser_require_keyword (parser, RID_USING, RT_USING);\n@@ -14975,7 +14976,35 @@ cp_parser_alias_declaration (cp_parser* parser)\n   attributes = cp_parser_attributes_opt (parser);\n   cp_parser_require (parser, CPP_EQ, RT_EQ);\n \n+  /* Now we are going to parse the type-id of the declaration.  */\n+\n+  /*\n+    [dcl.type]/3 says:\n+\n+\t\"A type-specifier-seq shall not define a class or enumeration\n+\t unless it appears in the type-id of an alias-declaration (7.1.3) that\n+\t is not the declaration of a template-declaration.\"\n+\n+    In other words, if we currently are in an alias template, the\n+    type-id should not define a type.\n+\n+    So let's set parser->type_definition_forbidden_message in that\n+    case; cp_parser_check_type_definition (called by\n+    cp_parser_class_specifier) will then emit an error if a type is\n+    defined in the type-id.  */\n+  if (parser->num_template_parameter_lists)\n+    {\n+      saved_message = parser->type_definition_forbidden_message;\n+      parser->type_definition_forbidden_message =\n+\tG_(\"types may not be defined in alias template declarations\");\n+    }\n+\n   type = cp_parser_type_id (parser);\n+\n+  /* Restore the error message if need be.  */\n+  if (parser->num_template_parameter_lists)\n+    parser->type_definition_forbidden_message = saved_message;\n+\n   cp_parser_require (parser, CPP_SEMICOLON, RT_SEMICOLON);\n \n   if (cp_parser_error_occurred (parser))"}, {"sha": "0502af90351159771e6877054aeafd068142afb2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3945f48ca7b437e7da227aca004b7e6c069ccf7f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3945f48ca7b437e7da227aca004b7e6c069ccf7f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3945f48ca7b437e7da227aca004b7e6c069ccf7f", "patch": "@@ -1,3 +1,8 @@\n+2011-11-22  Dodji Seketeli  <dodji@redhat.com>\n+\n+\tPR c++/51143\n+\t* g++.dg/cpp0x/alias-decl-16.C: New test.\n+\n 2011-11-22  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR tree-optimization/50765"}, {"sha": "d66660a5f4e2473b92ac42c8fe578723888cb953", "filename": "gcc/testsuite/g++.dg/cpp0x/alias-decl-16.C", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3945f48ca7b437e7da227aca004b7e6c069ccf7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-16.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3945f48ca7b437e7da227aca004b7e6c069ccf7f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-16.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Falias-decl-16.C?ref=3945f48ca7b437e7da227aca004b7e6c069ccf7f", "patch": "@@ -0,0 +1,28 @@\n+// Origin PR c++/51143\n+// { dg-options \"-std=c++11\" }\n+\n+using A0 = struct B0 { void f() {} };\n+\n+template<int N>\n+using A1 =\n+    struct B1 { // { dg-error \"types may not be defined in alias template\" }\n+        static auto constexpr value = N;\n+    };\n+\n+A1<0> a1;\n+\n+template<class T>\n+using A2 =\n+    struct B2 {  // { dg-error \"types may not be defined in alias template\" }\n+        void f(T){}\n+    };\n+\n+A2<bool> a2;\n+\n+template<class T>\n+using A3 =\n+    enum B3 {b = 0;}; //{ dg-error \"types may not be defined in alias template\" }\n+\n+A3<int> a3;\n+\n+int main() { }"}]}