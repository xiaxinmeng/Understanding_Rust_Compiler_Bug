{"sha": "2f6babac7d88650d313ae7248da021a8849b2376", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmY2YmFiYWM3ZDg4NjUwZDMxM2FlNzI0OGRhMDIxYTg4NDliMjM3Ng==", "commit": {"author": {"name": "Igor Zamyatin", "email": "igor.zamyatin@intel.com", "date": "2014-04-12T17:57:15Z"}, "committer": {"name": "Kirill Yukhin", "email": "kyukhin@gcc.gnu.org", "date": "2014-04-12T17:57:15Z"}, "message": "re PR middle-end/60469 (simple cilk plus program ICEs)\n\ngcc/c/\n\tPR middle-end/60469\n\t* c-array-notation.c (fix_builtin_array_notation_fn): Use\n\tcreate_tmp_var instead build_decl for creating temps.\n\t(build_array_notation_expr): Likewise.\n\t(fix_conditional_array_notations_1): Likewise.\n\t(fix_array_notation_expr): Likewise.\n\t(fix_array_notation_call_expr): Likewise.\n\ngcc/testsuite/\n\tPR middle-end/60469\n\t* c-c++-common/cilk-plus/CK/pr60469.c: New test.\n\nFrom-SVN: r209336", "tree": {"sha": "c0fa8ecda7f3a8c4b89fa90e37e62d3cdfa28ecd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c0fa8ecda7f3a8c4b89fa90e37e62d3cdfa28ecd"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2f6babac7d88650d313ae7248da021a8849b2376", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f6babac7d88650d313ae7248da021a8849b2376", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2f6babac7d88650d313ae7248da021a8849b2376", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2f6babac7d88650d313ae7248da021a8849b2376/comments", "author": {"login": "Garra1980", "id": 25365940, "node_id": "MDQ6VXNlcjI1MzY1OTQw", "avatar_url": "https://avatars.githubusercontent.com/u/25365940?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Garra1980", "html_url": "https://github.com/Garra1980", "followers_url": "https://api.github.com/users/Garra1980/followers", "following_url": "https://api.github.com/users/Garra1980/following{/other_user}", "gists_url": "https://api.github.com/users/Garra1980/gists{/gist_id}", "starred_url": "https://api.github.com/users/Garra1980/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Garra1980/subscriptions", "organizations_url": "https://api.github.com/users/Garra1980/orgs", "repos_url": "https://api.github.com/users/Garra1980/repos", "events_url": "https://api.github.com/users/Garra1980/events{/privacy}", "received_events_url": "https://api.github.com/users/Garra1980/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5e7d8b4c02496eb117cd151872584683ab19ae4c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5e7d8b4c02496eb117cd151872584683ab19ae4c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5e7d8b4c02496eb117cd151872584683ab19ae4c"}], "stats": {"total": 51, "additions": 39, "deletions": 12}, "files": [{"sha": "bacfbe36702f3edb07214b00aeca6123c1228b14", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6babac7d88650d313ae7248da021a8849b2376/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6babac7d88650d313ae7248da021a8849b2376/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=2f6babac7d88650d313ae7248da021a8849b2376", "patch": "@@ -1,3 +1,13 @@\n+2014-04-12  Igor Zamyatin  <igor.zamyatin@intel.com>\n+\n+\tPR middle-end/60469\n+\t* c-array-notation.c (fix_builtin_array_notation_fn): Use\n+\tcreate_tmp_var instead build_decl for creating temps.\n+\t(build_array_notation_expr): Likewise.\n+\t(fix_conditional_array_notations_1): Likewise.\n+\t(fix_array_notation_expr): Likewise.\n+\t(fix_array_notation_call_expr): Likewise.\n+\n 2014-03-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/60689"}, {"sha": "0ac6ba8e119c523c50828e2562d26074dec2aab1", "filename": "gcc/c/c-array-notation.c", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6babac7d88650d313ae7248da021a8849b2376/gcc%2Fc%2Fc-array-notation.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6babac7d88650d313ae7248da021a8849b2376/gcc%2Fc%2Fc-array-notation.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2Fc-array-notation.c?ref=2f6babac7d88650d313ae7248da021a8849b2376", "patch": "@@ -70,6 +70,7 @@\n #include \"coretypes.h\"\n #include \"tree.h\"\n #include \"c-tree.h\"\n+#include \"gimple-expr.h\"\n #include \"tree-iterator.h\"\n #include \"opts.h\"\n #include \"c-family/c-common.h\"\n@@ -282,8 +283,7 @@ fix_builtin_array_notation_fn (tree an_builtin_fn, tree *new_var)\n \n   for (ii = 0; ii < rank; ii++)\n     {\n-      an_loop_info[ii].var = build_decl (location, VAR_DECL, NULL_TREE,\n-\t\t\t\t  integer_type_node);\n+      an_loop_info[ii].var = create_tmp_var (integer_type_node, NULL);\n       an_loop_info[ii].ind_init =\n \tbuild_modify_expr (location, an_loop_info[ii].var,\n \t\t\t   TREE_TYPE (an_loop_info[ii].var), NOP_EXPR,\n@@ -781,8 +781,8 @@ build_array_notation_expr (location_t location, tree lhs, tree lhs_origtype,\n   for (ii = 0; ii < lhs_rank; ii++)\n     if (lhs_an_info[0][ii].is_vector)\n       {\n-\tlhs_an_loop_info[ii].var = build_decl (location, VAR_DECL, NULL_TREE,\n-\t\t\t\t\t       integer_type_node);\n+\tlhs_an_loop_info[ii].var = create_tmp_var (integer_type_node,\n+\t\t\t\t\t\t   NULL);\n \tlhs_an_loop_info[ii].ind_init = build_modify_expr\n \t  (location, lhs_an_loop_info[ii].var,\n \t   TREE_TYPE (lhs_an_loop_info[ii].var), NOP_EXPR,\n@@ -793,8 +793,8 @@ build_array_notation_expr (location_t location, tree lhs, tree lhs_origtype,\n     {\n       /* When we have a polynomial, we assume that the indices are of type \n \t integer.  */\n-      rhs_an_loop_info[ii].var = build_decl (location, VAR_DECL, NULL_TREE,\n-\t\t\t\t\t     integer_type_node);\n+      rhs_an_loop_info[ii].var = create_tmp_var (integer_type_node,\n+\t\t\t\t\t\t NULL);\n       rhs_an_loop_info[ii].ind_init = build_modify_expr\n \t(location, rhs_an_loop_info[ii].var,\n \t TREE_TYPE (rhs_an_loop_info[ii].var), NOP_EXPR,\n@@ -970,8 +970,7 @@ fix_conditional_array_notations_1 (tree stmt)\n   cilkplus_extract_an_triplets (array_list, list_size, rank, &an_info);\n   for (ii = 0; ii < rank; ii++)\n     {\n-      an_loop_info[ii].var = build_decl (location, VAR_DECL, NULL_TREE,\n-\t\t\t\t\t integer_type_node);\n+      an_loop_info[ii].var = create_tmp_var (integer_type_node, NULL);\n       an_loop_info[ii].ind_init =\n \tbuild_modify_expr (location, an_loop_info[ii].var,\n \t\t\t   TREE_TYPE (an_loop_info[ii].var), NOP_EXPR,\n@@ -1067,8 +1066,7 @@ fix_array_notation_expr (location_t location, enum tree_code code,\n   loop_init = push_stmt_list ();\n   for (ii = 0; ii < rank; ii++)\n     {\n-      an_loop_info[ii].var = build_decl (location, VAR_DECL, NULL_TREE,\n-\t\t\t\t\t integer_type_node);\n+      an_loop_info[ii].var = create_tmp_var (integer_type_node, NULL);\n       an_loop_info[ii].ind_init =\n \tbuild_modify_expr (location, an_loop_info[ii].var,\n \t\t\t   TREE_TYPE (an_loop_info[ii].var), NOP_EXPR,\n@@ -1163,8 +1161,7 @@ fix_array_notation_call_expr (tree arg)\n     }\n   for (ii = 0; ii < rank; ii++)\n     {\n-      an_loop_info[ii].var = build_decl (location, VAR_DECL, NULL_TREE,\n-\t\t\t\t\t integer_type_node);\n+      an_loop_info[ii].var = create_tmp_var (integer_type_node, NULL);\n       an_loop_info[ii].ind_init =\n \tbuild_modify_expr (location, an_loop_info[ii].var,\n \t\t\t   TREE_TYPE (an_loop_info[ii].var), NOP_EXPR, location,"}, {"sha": "0639000234438ebba78e21b2879eadfcac66b64e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6babac7d88650d313ae7248da021a8849b2376/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6babac7d88650d313ae7248da021a8849b2376/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2f6babac7d88650d313ae7248da021a8849b2376", "patch": "@@ -1,3 +1,8 @@\n+2014-04-12  Igor Zamyatin  <igor.zamyatin@intel.com>\n+\n+\tPR middle-end/60469\n+\t* c-c++-common/cilk-plus/CK/pr60469.c: New test.\n+\n 2014-04-12  Richard Sandiford  <rdsandiford@googlemail.com>\n \n \t* gcc.target/mips/umips-store16-1.c: New test."}, {"sha": "ca0cf7f68bc7616f13b934d5046f0bd50dea87aa", "filename": "gcc/testsuite/c-c++-common/cilk-plus/CK/pr60469.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2f6babac7d88650d313ae7248da021a8849b2376/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fpr60469.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2f6babac7d88650d313ae7248da021a8849b2376/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fpr60469.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fcilk-plus%2FCK%2Fpr60469.c?ref=2f6babac7d88650d313ae7248da021a8849b2376", "patch": "@@ -0,0 +1,15 @@\n+/* PR middle-end/60469 */\n+/* { dg-do compile } */\n+/* { dg-options \"-fcilkplus\" } */\n+\n+void foo() {}\n+\n+#define ALEN 1024\n+\n+int main(int argc, char* argv[])\n+{\n+  int b[ALEN];\n+  b[:] = 100;\n+  _Cilk_spawn foo();\n+  return 0;\n+}"}]}