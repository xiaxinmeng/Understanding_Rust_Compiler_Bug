{"sha": "819c714522edca323f1d45dc35018a0a41db7e7d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODE5YzcxNDUyMmVkY2EzMjNmMWQ0NWRjMzUwMThhMGE0MWRiN2U3ZA==", "commit": {"author": {"name": "Alan Modra", "email": "amodra@gmail.com", "date": "2016-08-03T00:32:11Z"}, "committer": {"name": "Alan Modra", "email": "amodra@gcc.gnu.org", "date": "2016-08-03T00:32:11Z"}, "message": "[RS6000] Remove negative from option help strings\n\n\t* config/rs6000/rs6000.opt: Remove negatives from help strings\n\tand comments.\n\nFrom-SVN: r239010", "tree": {"sha": "cef2e3f57b680ea243229e12b3fd5b505be3682d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cef2e3f57b680ea243229e12b3fd5b505be3682d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/819c714522edca323f1d45dc35018a0a41db7e7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/819c714522edca323f1d45dc35018a0a41db7e7d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/819c714522edca323f1d45dc35018a0a41db7e7d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/819c714522edca323f1d45dc35018a0a41db7e7d/comments", "author": {"login": "amodra", "id": 6006325, "node_id": "MDQ6VXNlcjYwMDYzMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6006325?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amodra", "html_url": "https://github.com/amodra", "followers_url": "https://api.github.com/users/amodra/followers", "following_url": "https://api.github.com/users/amodra/following{/other_user}", "gists_url": "https://api.github.com/users/amodra/gists{/gist_id}", "starred_url": "https://api.github.com/users/amodra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amodra/subscriptions", "organizations_url": "https://api.github.com/users/amodra/orgs", "repos_url": "https://api.github.com/users/amodra/repos", "events_url": "https://api.github.com/users/amodra/events{/privacy}", "received_events_url": "https://api.github.com/users/amodra/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3717616ba7118e1ff8166024e819bba5cd3fca0c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3717616ba7118e1ff8166024e819bba5cd3fca0c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3717616ba7118e1ff8166024e819bba5cd3fca0c"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "da112f402fb621c35b2d96362c44789d32b6f3b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/819c714522edca323f1d45dc35018a0a41db7e7d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/819c714522edca323f1d45dc35018a0a41db7e7d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=819c714522edca323f1d45dc35018a0a41db7e7d", "patch": "@@ -1,3 +1,8 @@\n+2016-08-03  Alan Modra  <amodra@gmail.com>\n+\n+\t* config/rs6000/rs6000.opt: Remove negatives from help strings\n+\tand comments.\n+\n 2016-08-03  Alan Modra  <amodra@gmail.com>\n \n \t* config/rs6000/rs6000.c (rs6000_secondary_reload_direct_move):"}, {"sha": "9e9d33e0d3282258b3276758ccdbd260ddbd2035", "filename": "gcc/config/rs6000/rs6000.opt", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/819c714522edca323f1d45dc35018a0a41db7e7d/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/819c714522edca323f1d45dc35018a0a41db7e7d/gcc%2Fconfig%2Frs6000%2Frs6000.opt", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.opt?ref=819c714522edca323f1d45dc35018a0a41db7e7d", "patch": "@@ -209,27 +209,27 @@ Target Undocumented Report Var(TARGET_VSX_ALIGN_128) Save\n \n mallow-movmisalign\n Target Undocumented Var(TARGET_ALLOW_MOVMISALIGN) Init(-1) Save\n-; Allow/disallow the movmisalign in DF/DI vectors\n+; Allow the movmisalign in DF/DI vectors\n \n mefficient-unaligned-vector\n Target Undocumented Report Mask(EFFICIENT_UNALIGNED_VSX) Var(rs6000_isa_flags)\n-; Consider unaligned VSX accesses to be efficient/inefficient\n+; Consider unaligned VSX accesses to be efficient\n \n mallow-df-permute\n Target Undocumented Var(TARGET_ALLOW_DF_PERMUTE) Save\n-; Allow/disallow permutation of DF/DI vectors\n+; Allow permutation of DF/DI vectors\n \n msched-groups\n Target Undocumented Report Var(TARGET_SCHED_GROUPS) Init(-1) Save\n-; Explicitly set/unset whether rs6000_sched_groups is set\n+; Explicitly set rs6000_sched_groups\n \n malways-hint\n Target Undocumented Report Var(TARGET_ALWAYS_HINT) Init(-1) Save\n-; Explicitly set/unset whether rs6000_always_hint is set\n+; Explicitly set rs6000_always_hint\n \n malign-branch-targets\n Target Undocumented Report Var(TARGET_ALIGN_BRANCH_TARGETS) Init(-1) Save\n-; Explicitly set/unset whether rs6000_align_branch_targets is set\n+; Explicitly set rs6000_align_branch_targets\n \n mvectorize-builtins\n Target Undocumented Report Var(TARGET_VECTORIZE_BUILTINS) Init(-1) Save\n@@ -539,11 +539,11 @@ Specify Xilinx FPU.\n \n mpointers-to-nested-functions\n Target Report Var(TARGET_POINTERS_TO_NESTED_FUNCTIONS) Init(1) Save\n-Use/do not use r11 to hold the static link in calls to functions via pointers.\n+Use r11 to hold the static link in calls to functions via pointers.\n \n msave-toc-indirect\n Target Report Mask(SAVE_TOC_INDIRECT) Var(rs6000_isa_flags)\n-Control whether we save the TOC in the prologue for indirect calls or generate the save inline.\n+Save the TOC in the prologue for indirect calls rather than inline.\n \n mvsx-timode\n Target Undocumented Mask(VSX_TIMODE) Var(rs6000_isa_flags)\n@@ -559,7 +559,7 @@ Allow sign extension in fusion operations.\n \n mpower8-vector\n Target Report Mask(P8_VECTOR) Var(rs6000_isa_flags)\n-Use/do not use vector and scalar instructions added in ISA 2.07.\n+Use vector and scalar instructions added in ISA 2.07.\n \n mcrypto\n Target Report Mask(CRYPTO) Var(rs6000_isa_flags)\n@@ -611,27 +611,27 @@ Fuse certain operations together for better performance on power9.\n \n mpower9-misc\n Target Undocumented Report Mask(P9_MISC) Var(rs6000_isa_flags)\n-Use/do not use certain scalar instructions added in ISA 3.0.\n+Use certain scalar instructions added in ISA 3.0.\n \n mpower9-vector\n Target Undocumented Report Mask(P9_VECTOR) Var(rs6000_isa_flags)\n-Use/do not use vector instructions added in ISA 3.0.\n+Use vector instructions added in ISA 3.0.\n \n mpower9-dform-scalar\n Target Undocumented Mask(P9_DFORM_SCALAR) Var(rs6000_isa_flags)\n-Use/do not use scalar register+offset memory instructions added in ISA 3.0.\n+Use scalar register+offset memory instructions added in ISA 3.0.\n \n mpower9-dform-vector\n Target Undocumented Mask(P9_DFORM_VECTOR) Var(rs6000_isa_flags)\n-Use/do not use vector register+offset memory instructions added in ISA 3.0.\n+Use vector register+offset memory instructions added in ISA 3.0.\n \n mpower9-dform\n Target Undocumented Report Var(TARGET_P9_DFORM_BOTH) Init(-1) Save\n-Use/do not use register+offset memory instructions added in ISA 3.0.\n+Use register+offset memory instructions added in ISA 3.0.\n \n mpower9-minmax\n Target Undocumented Mask(P9_MINMAX) Var(rs6000_isa_flags)\n-Use/do not use the new min/max instructions defined in ISA 3.0.\n+Use the new min/max instructions defined in ISA 3.0.\n \n mtoc-fusion\n Target Undocumented Mask(TOC_FUSION) Var(rs6000_isa_flags)\n@@ -643,12 +643,12 @@ Generate the integer modulo instructions.\n \n mfloat128\n Target Report Mask(FLOAT128) Var(rs6000_isa_flags)\n-Enable/disable IEEE 128-bit floating point via the __float128 keyword.\n+Enable IEEE 128-bit floating point via the __float128 keyword.\n \n mfloat128-hardware\n Target Report Mask(FLOAT128_HW) Var(rs6000_isa_flags)\n-Enable/disable using IEEE 128-bit floating point instructions.\n+Enable using IEEE 128-bit floating point instructions.\n \n mfloat128-convert\n Target Undocumented Mask(FLOAT128_CVT) Var(rs6000_isa_flags)\n-Enable/disable default conversions between __float128 & long double.\n+Enable default conversions between __float128 & long double."}]}