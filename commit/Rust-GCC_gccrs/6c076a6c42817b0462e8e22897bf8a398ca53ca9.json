{"sha": "6c076a6c42817b0462e8e22897bf8a398ca53ca9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmMwNzZhNmM0MjgxN2IwNDYyZThlMjI4OTdiZjhhMzk4Y2E1M2NhOQ==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2010-02-07T07:45:55Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2010-02-07T07:45:55Z"}, "message": "re PR libfortran/42742 (Handle very large format strings correctly)\n\n2010-02-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n\n\tPR libfortran/42742\n\t* io/format.c (reset_fnode_counters): Use the correct pointer to the\n\thead of the fnode list. (parse_format): Remove previous hack that set\n\tlimit on size of format string for caching.\n\nFrom-SVN: r156568", "tree": {"sha": "b0d2e2afeabbe787c74af74e7e81d64b46ac1136", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b0d2e2afeabbe787c74af74e7e81d64b46ac1136"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6c076a6c42817b0462e8e22897bf8a398ca53ca9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c076a6c42817b0462e8e22897bf8a398ca53ca9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6c076a6c42817b0462e8e22897bf8a398ca53ca9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6c076a6c42817b0462e8e22897bf8a398ca53ca9/comments", "author": null, "committer": null, "parents": [{"sha": "e8583d3ae1588677f18d51f079b26a28c297cc13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8583d3ae1588677f18d51f079b26a28c297cc13", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8583d3ae1588677f18d51f079b26a28c297cc13"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "3f52e5f99bfb26983f125e859852b2dcc2ec7148", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c076a6c42817b0462e8e22897bf8a398ca53ca9/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c076a6c42817b0462e8e22897bf8a398ca53ca9/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=6c076a6c42817b0462e8e22897bf8a398ca53ca9", "patch": "@@ -1,3 +1,10 @@\n+2010-02-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n+\n+\tPR libfortran/42742\n+\t* io/format.c (reset_fnode_counters): Use the correct pointer to the\n+\thead of the fnode list. (parse_format): Remove previous hack that set\n+\tlimit on size of format string for caching.\n+\n 2010-02-06  Jerry DeLisle  <jvdelisle@gcc.gnu.org>\n \n \tPR libfortran"}, {"sha": "68b9e992d6d33cd99e1eccf02f78e4101dc3316f", "filename": "libgfortran/io/format.c", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6c076a6c42817b0462e8e22897bf8a398ca53ca9/libgfortran%2Fio%2Fformat.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6c076a6c42817b0462e8e22897bf8a398ca53ca9/libgfortran%2Fio%2Fformat.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Fformat.c?ref=6c076a6c42817b0462e8e22897bf8a398ca53ca9", "patch": "@@ -130,7 +130,7 @@ reset_fnode_counters (st_parameter_dt *dtp)\n   /* Clear this pointer at the head so things start at the right place.  */\n   fmt->array.array[0].current = NULL;\n \n-  for (f = fmt->last->array[0].u.child; f; f = f->next)\n+  for (f = fmt->array.array[0].u.child; f; f = f->next)\n     reset_node (f);\n }\n \n@@ -1212,8 +1212,6 @@ revert (st_parameter_dt *dtp)\n \n /* parse_format()-- Parse a format string.  */\n \n-#define FORMAT_CACHE_STRING_LIMIT 256\n-\n void\n parse_format (st_parameter_dt *dtp)\n {\n@@ -1222,8 +1220,7 @@ parse_format (st_parameter_dt *dtp)\n \n   /* Don't cache for internal units and set an arbitrary limit on the size of\n      format strings we will cache.  (Avoids memory issues.)  */\n-  format_cache_ok = !is_internal_unit (dtp)\n-\t\t    && (dtp->format_len < FORMAT_CACHE_STRING_LIMIT );\n+  format_cache_ok = !is_internal_unit (dtp);\n \n   /* Lookup format string to see if it has already been parsed.  */\n   if (format_cache_ok)"}]}