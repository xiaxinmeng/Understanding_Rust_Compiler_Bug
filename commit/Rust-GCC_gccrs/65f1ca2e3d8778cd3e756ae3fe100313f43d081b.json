{"sha": "65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVmMWNhMmUzZDg3NzhjZDNlNzU2YWUzZmUxMDAzMTNmNDNkMDgxYg==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2019-12-19T10:31:47Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-06-02T08:58:29Z"}, "message": "[Ada] Remove ASIS_Mode\n\n2020-06-02  Arnaud Charlet  <charlet@adacore.com>\n\ngcc/ada/\n\n\t* atree.ads, checks.adb, contracts.adb, debug.adb, einfo.ads,\n\texp_ch3.adb, exp_util.adb, expander.ads, expander.adb,\n\tfrontend.adb, gnat1drv.adb, itypes.adb, lib.ads, namet.ads,\n\topt.adb, opt.ads, par-prag.adb, repinfo.ads, sem_aggr.adb,\n\tsem_aux.ads, sem_case.ads, sem_ch10.adb, sem_ch12.adb,\n\tsem_ch13.adb, sem_ch3.adb, sem_ch4.adb, sem_ch6.adb,\n\tsem_dim.adb, sem_elab.adb, sem_prag.adb, sem_prag.ads,\n\tsem_res.adb, sem_type.adb, sem_util.adb, sinfo.ads, stand.ads,\n\ttree_io.ads: Remove references to ASIS_Mode.", "tree": {"sha": "ca908d991a601161ab9f618e78a165b2802c4ca5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca908d991a601161ab9f618e78a165b2802c4ca5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "646204de717040064c18c189e29a32d0d33fd08b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/646204de717040064c18c189e29a32d0d33fd08b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/646204de717040064c18c189e29a32d0d33fd08b"}], "stats": {"total": 1348, "additions": 239, "deletions": 1109}, "files": [{"sha": "3aa22e6ac168a924e7ed7cd764263b775f1300ca", "filename": "gcc/ada/atree.ads", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fatree.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fatree.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fatree.ads?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -1055,10 +1055,7 @@ package Atree is\n    procedure Set_Original_Node         (N : Node_Id; Val : Node_Id);\n    pragma Inline (Set_Original_Node);\n    --  Note that this routine is used only in very peculiar cases. In normal\n-   --  cases, the Original_Node link is set by calls to Rewrite. We currently\n-   --  use it in ASIS mode to manually set the link from pragma expressions to\n-   --  their aspect original source expressions, so that the original source\n-   --  expressions accessed by ASIS are also semantically analyzed.\n+   --  cases, the Original_Node link is set by calls to Rewrite.\n \n    procedure Set_Parent                (N : Node_Id; Val : Node_Id);\n    pragma Inline (Set_Parent);\n@@ -1180,10 +1177,9 @@ package Atree is\n    function Original_Node (Node : Node_Id) return Node_Id;\n    pragma Inline (Original_Node);\n    --  If Node has not been rewritten, then returns its input argument\n-   --  unchanged, else returns the Node for the original subtree. Note that\n-   --  this is used extensively by ASIS on the trees constructed in ASIS mode\n-   --  to reconstruct the original semantic tree. See section in sinfo.ads\n-   --  for requirements on original nodes returned by this function.\n+   --  unchanged, else returns the Node for the original subtree. See section\n+   --  in sinfo.ads for requirements on original nodes returned by this\n+   --  function.\n    --\n    --  Note: Parents are not preserved in original tree nodes that are\n    --  retrieved in this way (i.e. their children may have children whose"}, {"sha": "71c9564e131b680db573f2ac7d4c41bd4f8155e3", "filename": "gcc/ada/checks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fchecks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fchecks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fchecks.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -8064,7 +8064,7 @@ package body Checks is\n       --  Do not generate an elaboration check in compilation modes where\n       --  expansion is not desirable.\n \n-      if ASIS_Mode or GNATprove_Mode then\n+      if GNATprove_Mode then\n          return;\n \n       --  Do not generate an elaboration check if all checks have been"}, {"sha": "be14a309f82696a8fd640deb34f73ceba070366d", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -541,7 +541,6 @@ package body Contracts is\n \n       Skip_Assert_Exprs : constant Boolean :=\n                             Ekind_In (Subp_Id, E_Entry, E_Entry_Family)\n-                              and then not ASIS_Mode\n                               and then not GNATprove_Mode;\n \n       Depends  : Node_Id := Empty;\n@@ -2543,11 +2542,6 @@ package body Contracts is\n       if not Expander_Active then\n          return;\n \n-      --  ASIS requires an unaltered tree\n-\n-      elsif ASIS_Mode then\n-         return;\n-\n       --  GNATprove does not need the executable semantics of a contract\n \n       elsif GNATprove_Mode then"}, {"sha": "a1a7462084a2c9887db1e51f8e7bb3917d3ad443", "filename": "gcc/ada/debug.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fdebug.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fdebug.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fdebug.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -125,7 +125,7 @@ package body Debug is\n    --  d.E  Turn selected errors into warnings\n    --  d.F  Debug mode for GNATprove\n    --  d.G  Ignore calls through generic formal parameters for elaboration\n-   --  d.H  GNSA mode for ASIS\n+   --  d.H\n    --  d.I  Do not ignore enum representation clauses in CodePeer mode\n    --  d.J  Relaxed rules for pragma No_Return\n    --  d.K\n@@ -892,9 +892,6 @@ package body Debug is\n    --       now fixed, but we provide this debug flag to revert to the previous\n    --       situation of ignoring such calls to aid in transition.\n \n-   --  d.H  Sets ASIS_GNSA_Mode to True. This signals the front end to suppress\n-   --       the call to gigi in ASIS_Mode.\n-\n    --  d.I  Do not ignore enum representation clauses in CodePeer mode.\n    --       The default of ignoring representation clauses for enumeration\n    --       types in CodePeer is good for the majority of Ada code, but in some"}, {"sha": "1183d0aed8c6beff1f16294f9df9232a96225bee", "filename": "gcc/ada/einfo.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Feinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Feinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Feinfo.ads?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -973,7 +973,7 @@ package Einfo is\n --       list is always empty.\n --       When expansion is disabled the corresponding record type of a\n --       synchronized type is not constructed. In that case, such types\n---       carry this attribute directly, for ASIS use.\n+--       carry this attribute directly.\n \n --    Directly_Designated_Type (Node20)\n --       Defined in access types. This field points to the type that is"}, {"sha": "5ecda62445759a495b8440748779a4afc5dacf71", "filename": "gcc/ada/exp_ch3.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fexp_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fexp_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch3.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -9564,10 +9564,9 @@ package body Exp_Ch3 is\n                begin\n                   --  Build equality code with a user-defined operator, if\n                   --  available, and with the predefined \"=\" otherwise. For\n-                  --  compatibility with older Ada versions, and preserve the\n-                  --  workings of some ASIS tools, we also use the predefined\n-                  --  operation if the component-type equality is abstract,\n-                  --  rather than raising Program_Error.\n+                  --  compatibility with older Ada versions, we also use the\n+                  --  predefined operation if the component-type equality is\n+                  --  abstract, rather than raising Program_Error.\n \n                   if Ada_Version < Ada_2012 then\n                      Next_Test := Make_Op_Ne (Loc, Lhs, Rhs);\n@@ -10221,15 +10220,13 @@ package body Exp_Ch3 is\n       New_Ref  : Node_Id;\n \n    begin\n-      --  This expansion activity is called during analysis, but cannot\n-      --  be applied in ASIS mode when other expansion is disabled.\n+      --  This expansion activity is called during analysis.\n \n       if Is_Tagged_Type (Typ)\n        and then not Is_Class_Wide_Type (Typ)\n        and then not Is_CPP_Class (Typ)\n        and then Tagged_Type_Expansion\n        and then Nkind (Expr) /= N_Aggregate\n-       and then not ASIS_Mode\n        and then (Nkind (Expr) /= N_Qualified_Expression\n                   or else Nkind (Expression (Expr)) /= N_Aggregate)\n       then"}, {"sha": "0bccfcb21e35f2d57cd6ab3dd47d91767cd1460c", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 10, "deletions": 81, "changes": 91, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -1634,43 +1634,6 @@ package body Exp_Util is\n          DIC_Proc : constant Entity_Id := DIC_Procedure (DIC_Typ);\n          Obj_Id   : constant Entity_Id := First_Formal (DIC_Proc);\n \n-         procedure Preanalyze_Own_DIC_For_ASIS;\n-         --  Preanalyze the original DIC expression of an aspect or a source\n-         --  pragma for ASIS.\n-\n-         ---------------------------------\n-         -- Preanalyze_Own_DIC_For_ASIS --\n-         ---------------------------------\n-\n-         procedure Preanalyze_Own_DIC_For_ASIS is\n-            Expr : Node_Id := Empty;\n-\n-         begin\n-            --  The DIC pragma is a source construct, preanalyze the original\n-            --  expression of the pragma.\n-\n-            if Comes_From_Source (DIC_Prag) then\n-               Expr := DIC_Expr;\n-\n-            --  Otherwise preanalyze the expression of the corresponding aspect\n-\n-            elsif Present (DIC_Asp) then\n-               Expr := Expression (DIC_Asp);\n-            end if;\n-\n-            --  The expression must be subjected to the same substitutions as\n-            --  the copy used in the generation of the runtime check.\n-\n-            if Present (Expr) then\n-               Replace_Type_References\n-                 (Expr   => Expr,\n-                  Typ    => DIC_Typ,\n-                  Obj_Id => Obj_Id);\n-\n-               Preanalyze_Assert_Expression (Expr, Any_Boolean);\n-            end if;\n-         end Preanalyze_Own_DIC_For_ASIS;\n-\n          --  Local variables\n \n          Typ_Decl : constant Node_Id := Declaration_Node (DIC_Typ);\n@@ -1717,12 +1680,6 @@ package body Exp_Util is\n             Set_Entity (Identifier (DIC_Asp), New_Copy_Tree (Expr));\n          end if;\n \n-         --  Preanalyze the original DIC expression for ASIS\n-\n-         if ASIS_Mode then\n-            Preanalyze_Own_DIC_For_ASIS;\n-         end if;\n-\n          --  Once the DIC assertion expression is fully processed, add a check\n          --  to the statements of the DIC procedure.\n \n@@ -1951,11 +1908,11 @@ package body Exp_Util is\n          Set_Corresponding_Spec (Proc_Body, Proc_Id);\n \n          --  The body should not be inserted into the tree when the context\n-         --  is ASIS or a generic unit because it is not part of the template.\n+         --  is a generic unit because it is not part of the template.\n          --  Note that the body must still be generated in order to resolve the\n          --  DIC assertion expression.\n \n-         if ASIS_Mode or Inside_A_Generic then\n+         if Inside_A_Generic then\n             null;\n \n          --  Semi-insert the body into the tree for GNATprove by setting its\n@@ -2158,9 +2115,9 @@ package body Exp_Util is\n                     New_Occurrence_Of (Work_Typ, Loc)))));\n \n       --  The declaration should not be inserted into the tree when the context\n-      --  is ASIS or a generic unit because it is not part of the template.\n+      --  is a generic unit because it is not part of the template.\n \n-      if ASIS_Mode or Inside_A_Generic then\n+      if Inside_A_Generic then\n          null;\n \n       --  Semi-insert the declaration into the tree for GNATprove by setting\n@@ -2775,7 +2732,6 @@ package body Exp_Util is\n          Checks    : in out List_Id;\n          Priv_Item : Node_Id := Empty)\n       is\n-         ASIS_Expr     : Node_Id;\n          Expr          : Node_Id;\n          Prag          : Node_Id;\n          Prag_Asp      : Node_Id;\n@@ -2854,23 +2810,6 @@ package body Exp_Util is\n                   Set_Entity (Identifier (Prag_Asp), New_Copy_Tree (Expr));\n                end if;\n \n-               --  Analyze the original invariant expression for ASIS\n-\n-               if ASIS_Mode then\n-                  ASIS_Expr := Empty;\n-\n-                  if Comes_From_Source (Prag) then\n-                     ASIS_Expr := Prag_Expr;\n-                  elsif Present (Prag_Asp) then\n-                     ASIS_Expr := Expression (Prag_Asp);\n-                  end if;\n-\n-                  if Present (ASIS_Expr) then\n-                     Replace_Type_References (ASIS_Expr, T, Obj_Id);\n-                     Preanalyze_Assert_Expression (ASIS_Expr, Any_Boolean);\n-                  end if;\n-               end if;\n-\n                Add_Invariant_Check (Prag, Expr, Checks);\n             end if;\n \n@@ -3428,11 +3367,11 @@ package body Exp_Util is\n       Set_Corresponding_Spec (Proc_Body, Proc_Id);\n \n       --  The body should not be inserted into the tree when the context is\n-      --  ASIS or a generic unit because it is not part of the template. Note\n+      --  a generic unit because it is not part of the template. Note\n       --  that the body must still be generated in order to resolve the\n       --  invariants.\n \n-      if ASIS_Mode or Inside_A_Generic then\n+      if Inside_A_Generic then\n          null;\n \n       --  Semi-insert the body into the tree for GNATprove by setting its\n@@ -3663,9 +3602,9 @@ package body Exp_Util is\n                   Parameter_Type      => New_Occurrence_Of (Obj_Typ, Loc)))));\n \n       --  The declaration should not be inserted into the tree when the context\n-      --  is ASIS or a generic unit because it is not part of the template.\n+      --  is a generic unit because it is not part of the template.\n \n-      if ASIS_Mode or Inside_A_Generic then\n+      if Inside_A_Generic then\n          null;\n \n       --  Semi-insert the declaration into the tree for GNATprove by setting\n@@ -9666,11 +9605,6 @@ package body Exp_Util is\n          procedure Replace_Subtype_Reference (N : Node_Id) is\n          begin\n             Rewrite (N, New_Copy_Tree (Expr));\n-\n-            --  We want to treat the node as if it comes from source, so that\n-            --  ASIS will not ignore it.\n-\n-            Set_Comes_From_Source (N, True);\n          end Replace_Subtype_Reference;\n \n          procedure Replace_Subtype_References is\n@@ -12117,13 +12051,8 @@ package body Exp_Util is\n       procedure Replace_Type_Ref (N : Node_Id) is\n       begin\n          --  Decorate the reference to Typ even though it may be rewritten\n-         --  further down. This is done for two reasons:\n-\n-         --    * ASIS has all necessary semantic information in the original\n-         --      tree.\n-\n-         --    * Routines which examine properties of the Original_Node have\n-         --      some semantic information.\n+         --  further down. This is done so that routines which examine\n+         --  properties of the Original_Node have some semantic information.\n \n          if Nkind (N) = N_Identifier then\n             Set_Entity (N, Typ);"}, {"sha": "b8e86b8b30e0d29652b725f02e83f024c5a8da6a", "filename": "gcc/ada/expander.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fexpander.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fexpander.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -545,10 +545,10 @@ package body Expander is\n \n    procedure Expander_Mode_Restore is\n    begin\n-      --  Not active (has no effect) in ASIS and GNATprove modes (see comments\n+      --  Not active (has no effect) in GNATprove mode (see comments\n       --  in spec of Expander_Mode_Save_And_Set).\n \n-      if ASIS_Mode or GNATprove_Mode then\n+      if GNATprove_Mode then\n          return;\n       end if;\n \n@@ -572,10 +572,10 @@ package body Expander is\n \n    procedure Expander_Mode_Save_And_Set (Status : Boolean) is\n    begin\n-      --  Not active (has no effect) in ASIS and GNATprove modes (see comments\n+      --  Not active (has no effect) in GNATprove modes (see comments\n       --  in spec of Expander_Mode_Save_And_Set).\n \n-      if ASIS_Mode or GNATprove_Mode then\n+      if GNATprove_Mode then\n          return;\n       end if;\n "}, {"sha": "d7c61ecba5e4ad529e403ecef0a568cbffa4e6df", "filename": "gcc/ada/expander.ads", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fexpander.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fexpander.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexpander.ads?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -73,9 +73,9 @@\n --  For nodes other than subexpressions, it is not necessary to preserve the\n --  original tree in the Expand routines, unlike the case for modifications\n --  to the tree made in the semantic analyzer. This is because anyone who is\n---  interested in working with the original tree (like ASIS) is required to\n---  compile in semantics checks only mode. Thus Replace may be freely used\n---  in such instances.\n+--  interested in working with the original tree is required to compile in\n+--  semantics checks only mode. Thus Replace may be freely used in such\n+--  instances.\n \n --  For subexpressions, preservation of the original tree is required because\n --  of the need for conformance checking of default expressions, which occurs\n@@ -150,20 +150,17 @@ package Expander is\n    --  Saves the current setting of the Expander_Active flag on an internal\n    --  stack and then sets the flag to the given value.\n    --\n-   --  Note: this routine has no effect in ASIS and GNATprove modes. In ASIS\n-   --  mode, all expansion activity is always off, since we want the original\n-   --  semantic tree for ASIS purposes without any expansion. In GNATprove\n-   --  mode, a very light expansion is performed on specific nodes. Both are\n-   --  achieved by setting Expander_Active False in ASIS and GNATprove modes.\n+   --  Note: this routine has no effect in GNATprove mode. In this mode,\n+   --  a very light expansion is performed on specific nodes and\n+   --  Expander_Active is set to False.\n    --  In situations such as the call to Instantiate_Bodies in Frontend,\n    --  Expander_Mode_Save_And_Set may be called to temporarily turn the\n-   --  expander on, but this will have no effect in ASIS and GNATprove modes.\n+   --  expander on, but this will have no effect in GNATprove mode.\n \n    procedure Expander_Mode_Restore;\n    --  Restores the setting of the Expander_Active flag using the top entry\n    --  pushed onto the stack by Expander_Mode_Save_And_Reset, popping the\n    --  stack, except that if any errors have been detected, then the state of\n-   --  the flag is left set to False. Disabled for ASIS and GNATprove modes\n-   --  (see above).\n+   --  the flag is left set to False. Disabled for GNATprove mode (see above).\n \n end Expander;"}, {"sha": "712340a3a929393015966f03f5f25315060f560a", "filename": "gcc/ada/frontend.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Ffrontend.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Ffrontend.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffrontend.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -412,14 +412,15 @@ begin\n \n             --  Cleanup processing after completing main analysis\n \n-            --  Comment needed for ASIS mode test and GNATprove mode test???\n+            --  In GNATprove_Mode we do not perform most expansions but body\n+            --  instantiation is needed.\n \n             pragma Assert\n               (Operating_Mode = Generate_Code\n                 or else Operating_Mode = Check_Semantics);\n \n             if Operating_Mode = Generate_Code\n-              or else (ASIS_Mode or GNATprove_Mode)\n+              or else GNATprove_Mode\n             then\n                Instantiate_Bodies;\n             end if;"}, {"sha": "0549eefd39dad15b8cb6c482f492e05f516c55fe", "filename": "gcc/ada/gnat1drv.adb", "status": "modified", "additions": 10, "deletions": 43, "changes": 53, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fgnat1drv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fgnat1drv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat1drv.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -217,32 +217,6 @@ procedure Gnat1drv is\n          CodePeer_Mode := False;\n       end if;\n \n-      --  Set ASIS mode if -gnatt and -gnatc are set\n-\n-      if Operating_Mode = Check_Semantics and then Tree_Output then\n-         ASIS_Mode := True;\n-\n-         --  Set ASIS GNSA mode if -gnatd.H is set\n-\n-         if Debug_Flag_Dot_HH then\n-            ASIS_GNSA_Mode := True;\n-         end if;\n-\n-         --  Turn off inlining in ASIS mode, since ASIS cannot handle the extra\n-         --  information in the trees caused by inlining being active.\n-\n-         --  More specifically, the tree seems to be malformed from the ASIS\n-         --  point of view if -gnatc and -gnatn appear together???\n-\n-         Inline_Active := False;\n-\n-         --  Turn off SCIL generation and CodePeer mode in semantics mode,\n-         --  since SCIL requires front-end expansion.\n-\n-         Generate_SCIL := False;\n-         CodePeer_Mode := False;\n-      end if;\n-\n       --  SCIL mode needs to disable front-end inlining since the generated\n       --  trees (in particular order and consistency between specs compiled\n       --  as part of a main unit or as part of a with-clause) are causing\n@@ -655,11 +629,11 @@ procedure Gnat1drv is\n \n       --  Set and check exception mechanism. This is only meaningful when\n       --  compiling, and in particular not meaningful for special modes used\n-      --  for program analysis rather than compilation: ASIS mode, CodePeer\n-      --  mode and GNATprove mode.\n+      --  for program analysis rather than compilation: CodePeer mode and\n+      --  GNATprove mode.\n \n       if Operating_Mode = Generate_Code\n-        and then not (ASIS_Mode or CodePeer_Mode or GNATprove_Mode)\n+        and then not (CodePeer_Mode or GNATprove_Mode)\n       then\n          case Targparm.Frontend_Exceptions_On_Target is\n             when True =>\n@@ -803,10 +777,6 @@ procedure Gnat1drv is\n \n         not Generate_C_Code\n \n-        --  No back-end inlining available in ASIS mode\n-\n-        and then not ASIS_Mode\n-\n         --  No back-end inlining in GNATprove mode, since it just confuses\n         --  the formal verification process.\n \n@@ -1564,18 +1534,13 @@ begin\n       --  Annotation is suppressed for targets where front-end layout is\n       --  enabled, because the front end determines representations.\n \n-      --  The back end is not invoked in ASIS mode with GNSA because all type\n-      --  representation information will be provided by the GNSA back end, not\n-      --  gigi.\n-\n       --  A special back end is always called in CodePeer and GNATprove modes,\n       --  unless this is a subunit.\n \n       if Back_End_Mode = Declarations_Only\n         and then\n           (not (Back_Annotate_Rep_Info or Generate_SCIL or GNATprove_Mode)\n-            or else Main_Unit_Kind = N_Subunit\n-            or else ASIS_GNSA_Mode)\n+            or else Main_Unit_Kind = N_Subunit)\n       then\n          Post_Compilation_Validation_Checks;\n          Errout.Finalize (Last_Call => True);\n@@ -1701,10 +1666,12 @@ begin\n          Back_End.Gen_Or_Update_Object_File;\n       end if;\n \n-      --  Generate ASIS tree after writing the ALI file, since in ASIS mode,\n-      --  Write_ALI may in fact result in further tree decoration from the\n-      --  original tree file. Note that we dump the tree just before generating\n-      --  it, so that the dump will exactly reflect what is written out.\n+      --  Generate tree after writing the ALI file, since Write_ALI may in\n+      --  fact result in further tree decoration from the original tree file.\n+      --  Note that we dump the tree just before generating it, so that the\n+      --  dump will exactly reflect what is written out.\n+      --  Should we remove Tree_Dump completely now that ASIS is no longer\n+      --  supported???\n \n       Treepr.Tree_Dump;\n       Tree_Gen;"}, {"sha": "991824c70dee7fd57de2b37646144aa91b45867c", "filename": "gcc/ada/itypes.adb", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fitypes.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fitypes.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fitypes.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -24,7 +24,6 @@\n ------------------------------------------------------------------------------\n \n with Atree;    use Atree;\n-with Opt;      use Opt;\n with Sem;      use Sem;\n with Sinfo;    use Sinfo;\n with Stand;    use Stand;\n@@ -70,9 +69,7 @@ package body Itypes is\n       Set_Is_Itype (Typ);\n       Set_Associated_Node_For_Itype (Typ, Related_Nod);\n \n-      if In_Deleted_Code\n-        and then not ASIS_Mode\n-      then\n+      if In_Deleted_Code then\n          Set_Is_Frozen (Typ);\n       end if;\n "}, {"sha": "8376d7a662655e9aa83bfe173fad1e22d7ac6ce3", "filename": "gcc/ada/lib.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Flib.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Flib.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib.ads?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -537,7 +537,7 @@ package Lib is\n \n    function Get_Compilation_Switch (N : Pos) return String_Ptr;\n    --  Return the Nth stored compilation switch, or null if less than N\n-   --  switches have been stored. Used by ASIS and back ends written in Ada.\n+   --  switches have been stored. Used by back ends written in Ada.\n \n    function Generic_May_Lack_ALI (Unum : Unit_Number_Type) return Boolean;\n    --  Generic units must be separately compiled. Since we always use\n@@ -1003,7 +1003,7 @@ private\n    --  This table is set as part of the compiler argument scanning in\n    --  Back_End. It can also be reset in -gnatc mode from the data in an\n    --  existing ali file, and is read and written by the Tree_Read and\n-   --  Tree_Write routines for ASIS.\n+   --  Tree_Write routines.\n \n    package Compilation_Switches is new Table.Table (\n      Table_Component_Type => String_Ptr,"}, {"sha": "df90be732352ece42ba9d054744e5311e982c06a", "filename": "gcc/ada/namet.ads", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fnamet.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fnamet.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.ads?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -415,9 +415,7 @@ package Namet is\n    --  also the suffixes used to indicate package body entities and to\n    --  distinguish between overloaded entities). Note that names are not\n    --  qualified until just before the call to gigi, so this routine is only\n-   --  needed by processing that occurs after gigi has been called. This\n-   --  includes all ASIS processing, since ASIS works on the tree written\n-   --  after gigi has been called.\n+   --  needed by processing that occurs after gigi has been called.\n \n    procedure Append_Unqualified_Decoded\n      (Buf : in out Bounded_String;"}, {"sha": "ca1cfe1be117545f6a9fd8101f2ff18e68a0e7db", "filename": "gcc/ada/opt.adb", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fopt.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fopt.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -323,8 +323,6 @@ package body Opt is\n       Assertions_Enabled_Config_Val   : Nat;\n \n    begin\n-      Tree_Read_Int  (Tree_ASIS_Version_Number);\n-\n       Tree_Read_Bool (Address_Is_Private);\n       Tree_Read_Bool (Brief_Output);\n       Tree_Read_Bool (GNAT_Mode);\n@@ -393,8 +391,6 @@ package body Opt is\n       Version_String : String := Gnat_Version_String;\n \n    begin\n-      Tree_Write_Int  (ASIS_Version_Number);\n-\n       Tree_Write_Bool (Address_Is_Private);\n       Tree_Write_Bool (Brief_Output);\n       Tree_Write_Bool (GNAT_Mode);"}, {"sha": "29cb6e377952ca9f56310f5e79980b059f054fed", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 2, "deletions": 38, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -223,21 +223,6 @@ package Opt is\n    --  Set to non-null when Bind_Alternate_Main_Name is True. This value\n    --  is modified as needed by Gnatbind.Scan_Bind_Arg.\n \n-   ASIS_GNSA_Mode : Boolean := False;\n-   --  GNAT\n-   --  Enable GNSA back-end processing assuming ASIS_Mode is already set to\n-   --  True. ASIS_GNSA mode suppresses the call to gigi.\n-\n-   ASIS_Mode : Boolean := False;\n-   --  GNAT\n-   --  Enable semantic checks and tree transformations that are important\n-   --  for ASIS but that are usually skipped if Operating_Mode is set to\n-   --  Check_Semantics. This flag does not have the corresponding option to set\n-   --  it ON. It is set ON when Tree_Output is set ON, it can also be set ON\n-   --  from the code of GNSA-based tool (a client may need to set ON the\n-   --  Back_Annotate_Rep_Info flag in this case. At the moment this does not\n-   --  make very much sense, because GNSA cannot do back annotation).\n-\n    Assertions_Enabled : Boolean := False;\n    --  GNAT\n    --  Indicates default policy (True = Check, False = Ignore) to be applied\n@@ -854,7 +839,7 @@ package Opt is\n    Ignore_Rep_Clauses : Boolean := False;\n    --  GNAT\n    --  Set True to ignore all representation clauses. Useful when compiling\n-   --  code from foreign compilers for checking or ASIS purposes. Can be\n+   --  code from foreign compilers for checking purposes. Can be\n    --  set True by use of -gnatI.\n \n    Ignore_SPARK_Mode_Pragmas_In_Instance : Boolean := False;\n@@ -1072,6 +1057,7 @@ package Opt is\n    --  to the three corresponding procedures in Osint-C. The reason for this\n    --  slightly strange interface is to stop Repinfo from dragging in Osint in\n    --  ASIS mode, which would include lots of unwanted units in the ASIS build.\n+   --  ??? Revisit this now that ASIS mode is gone.\n \n    type Create_List_File_Proc is access procedure (S : String);\n    type Write_List_Info_Proc  is access procedure (S : String);\n@@ -2256,31 +2242,9 @@ package Opt is\n    procedure Tree_Write;\n    --  Writes out switch settings to current tree file using Tree_Write\n \n-   --------------------------\n-   -- ASIS Version Control --\n-   --------------------------\n-\n-   --  These two variables (Tree_Version_String and Tree_ASIS_Version_Number)\n-   --  are supposed to be used in the GNAT/ASIS version check performed in\n-   --  the ASIS code (this package is also a part of the ASIS implementation).\n-   --  They are set by Tree_Read procedure, so they represent the version\n-   --  number (and the version string) of the compiler which has created the\n-   --  tree, and they are supposed to be compared with the corresponding values\n-   --  from the Tree_IO and Gnatvsn packages which also are a part of ASIS\n-   --  implementation.\n-\n    Tree_Version_String : String_Access;\n    --  Used to store the compiler version string read from a tree file to check\n    --  if it is from the same date as stored in the version string in Gnatvsn.\n-   --  We require that ASIS Pro can be used only with GNAT Pro, but we allow\n-   --  non-Pro ASIS and ASIS-based tools to be used with any version of the\n-   --  GNAT compiler. Therefore, we need the possibility to compare the dates\n-   --  of the corresponding source sets, using version strings that may be\n-   --  of different lengths.\n-\n-   Tree_ASIS_Version_Number : Int;\n-   --  Used to store the ASIS version number read from a tree file to check if\n-   --  it is the same as stored in the ASIS version number in Tree_IO.\n \n    -----------------------------------\n    -- Modes for Formal Verification --"}, {"sha": "60b4d52272feca9e489a5b33bcee6932eda55591", "filename": "gcc/ada/par-prag.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fpar-prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fpar-prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-prag.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -1157,11 +1157,11 @@ begin\n             return Nkind (Arg1) = N_Identifier\n \n               --  Return True if the tool name is GNAT, and we're not in\n-              --  GNATprove or CodePeer or ASIS mode...\n+              --  GNATprove or CodePeer mode...\n \n               and then ((Chars (Arg1) = Name_Gnat\n                           and then not\n-                            (CodePeer_Mode or GNATprove_Mode or ASIS_Mode))\n+                            (CodePeer_Mode or GNATprove_Mode))\n \n               --  or if the tool name is GNATprove, and we're in GNATprove\n               --  mode."}, {"sha": "5df9bd2af09318912c57e0a49a89230883df564f", "filename": "gcc/ada/repinfo.ads", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Frepinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Frepinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Frepinfo.ads?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -31,9 +31,7 @@\n \n --  This package contains the routines to handle back annotation of the\n --  tree to fill in representation information, and also the routines used\n---  by -gnatR to output this information. This unit is used both in the\n---  compiler and in ASIS (it is used in ASIS as part of the implementation\n---  of the Data Decomposition Annex).\n+--  by -gnatR to output this information.\n \n --  WARNING: There is a C version of this package. Any changes to this\n --  source file must be properly reflected in the C header file repinfo.h\n@@ -112,12 +110,12 @@ package Repinfo is\n    --       in terms of the variables represented symbolically.\n \n    --  Note: the extended back annotation for the dynamic case is needed only\n-   --  for -gnatR3 output, and for proper operation of the ASIS DDA. Since it\n-   --  can be expensive to do this back annotation (for discriminated records\n-   --  with many variable-length arrays), we only do the full back annotation\n-   --  in -gnatR3 mode, or ASIS mode. In any other mode, the back-end just sets\n-   --  the value to Uint_Minus_1, indicating that the value of the attribute\n-   --  depends on discriminant information, but not giving further details.\n+   --  for -gnatR3 output. Since it can be expensive to do this back annotation\n+   --  (for discriminated records with many variable-length arrays), we only do\n+   --  the full back annotation in -gnatR3 mode. In any other mode, the\n+   --  back-end just sets the value to Uint_Minus_1, indicating that the value\n+   --  of the attribute depends on discriminant information, but not giving\n+   --  further details.\n \n    --  GCC expressions are represented with a Uint value that is negative.\n    --  See the body of this package for details on the representation used.\n@@ -129,8 +127,8 @@ package Repinfo is\n    --  with a given set of discriminant values, indicates whether the variant\n    --  is present for that set of values (result is True, i.e. non-zero) or\n    --  not present (result is False, i.e. zero). Again, the full annotation of\n-   --  this field is done only in -gnatR3 mode or in ASIS mode, and in other\n-   --  modes, the value is set to Uint_Minus_1.\n+   --  this field is done only in -gnatR3 mode, and in other modes, the value\n+   --  is set to Uint_Minus_1.\n \n    subtype Node_Ref is Uint;\n    --  Subtype used for negative Uint values used to represent nodes\n@@ -282,9 +280,9 @@ package Repinfo is\n    --    number of elements of the value of \"operands\" is specified by the\n    --    operands column in the line associated with the symbol in the table.\n \n-   --    As documented above, the full back annotation is only done in -gnatR3\n-   --    or ASIS mode. In the other cases, if the numerical expression is not\n-   --    a number, then it is replaced with the \"??\" string.\n+   --    As documented above, the full back annotation is only done in -gnatR3.\n+   --    In the other cases, if the numerical expression is not a number, then\n+   --    it is replaced with the \"??\" string.\n \n    ------------------------\n    -- The gigi Interface --\n@@ -375,9 +373,9 @@ package Repinfo is\n    --  and entity id values and the back end makes Get_Dynamic_SO_Ref\n    --  calls to retrieve them.\n \n-   --------------------\n-   -- ASIS_Interface --\n-   --------------------\n+   ------------------------------\n+   -- External tools Interface --\n+   ------------------------------\n \n    type Discrim_List is array (Pos range <>) of Uint;\n    --  Type used to represent list of discriminant values"}, {"sha": "aec14c4cde3fbc56281715272d6bc37d5441adcd", "filename": "gcc/ada/sem_aggr.adb", "status": "modified", "additions": 3, "deletions": 35, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_aggr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_aggr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aggr.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -1876,14 +1876,10 @@ package body Sem_Aggr is\n \n                         --  If the subtype has a static predicate, replace the\n                         --  original choice with the list of individual values\n-                        --  covered by the predicate. Do not perform this\n-                        --  transformation if we need to preserve the source\n-                        --  for ASIS use.\n+                        --  covered by the predicate.\n                         --  This should be deferred to expansion time ???\n \n-                        if Present (Static_Discrete_Predicate (E))\n-                          and then not ASIS_Mode\n-                        then\n+                        if Present (Static_Discrete_Predicate (E)) then\n                            Delete_Choice := True;\n \n                            New_Cs := New_List;\n@@ -2370,22 +2366,7 @@ package body Sem_Aggr is\n                               if Lo_Dup > Hi_Dup then\n                                  null;\n \n-                              --  Otherwise place proper message. Because\n-                              --  of the missing expansion of subtypes with\n-                              --  predicates in ASIS mode, do not report\n-                              --  spurious overlap errors.\n-\n-                              elsif ASIS_Mode\n-                                and then\n-                                   ((Is_Type (Entity (Table (J).Choice))\n-                                       and then Has_Predicates\n-                                         (Entity (Table (J).Choice)))\n-                                  or else\n-                                    (Is_Type (Entity (Table (K).Choice))\n-                                       and then Has_Predicates\n-                                         (Entity (Table (K).Choice))))\n-                              then\n-                                 null;\n+                              --  Otherwise place proper message\n \n                               else\n                                  --  We place message on later choice, with a\n@@ -3881,22 +3862,9 @@ package body Sem_Aggr is\n                         --  access types, even in compile_only mode.\n \n                         if not Inside_A_Generic then\n-\n-                           --  In ASIS mode, preanalyze the expression in an\n-                           --  others association before making copies for\n-                           --  separate resolution and accessibility checks.\n-                           --  This ensures that the type of the expression is\n-                           --  available to ASIS in all cases, in particular if\n-                           --  the expression is itself an aggregate.\n-\n-                           if ASIS_Mode then\n-                              Preanalyze_And_Resolve (Expression (Assoc), Typ);\n-                           end if;\n-\n                            return\n                              New_Copy_Tree_And_Copy_Dimensions\n                                (Expression (Assoc));\n-\n                         else\n                            return Expression (Assoc);\n                         end if;"}, {"sha": "8c647e84b8a260ef9bc3ecaff670453dc544a091", "filename": "gcc/ada/sem_aux.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_aux.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_aux.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_aux.ads?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -30,8 +30,7 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Package containing utility procedures used throughout the compiler,\n---  and also by ASIS so dependencies are limited to ASIS included packages.\n+--  Package containing utility procedures used throughout the compiler.\n \n --  Historical note. Many of the routines here were originally in Einfo, but\n --  Einfo is supposed to be a relatively low level package dealing with the"}, {"sha": "16fa24340aec96b86dd9af1f681b4b8f0d68a1c8", "filename": "gcc/ada/sem_case.ads", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_case.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_case.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.ads?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -49,8 +49,7 @@\n \n --    4. In the case of static predicates, we need to expand out choices that\n --    correspond to the predicate for the back end. This expansion destroys\n---    the list of choices, so it should be delayed to expansion time. We do\n---    not want to mess up the -gnatct ASIS tree, which needs to be able to\n+--    the list of choices, so it should be delayed to expansion time.\n \n --  Step 1 is performed by the generic procedure Analyze_Choices, which is\n --  called when the variant record or case statement/expression is first\n@@ -66,12 +65,9 @@\n --  for predicated subtypes to accurately construct this.\n \n --  Step 4 is performed by the procedure Expand_Static_Predicates_In_Choices.\n---  For case statements, this call only happens during expansion, so the tree\n---  generated for ASIS does not have this expansion. For the Variant case, the\n---  expansion is done in the ASIS -gnatct case, but with a proper Rewrite call\n---  on the N_Variant node, so ASIS can retrieve the original. The reason we do\n---  the expansion unconditionally for variants is that other processing, for\n---  example for aggregates, relies on having a complete list of choices.\n+--  For case statements, this call only happens during expansion. The reason\n+--  we do the expansion unconditionally for variants is that other processing,\n+--  for example for aggregates, relies on having a complete list of choices.\n \n --  Historical note: We used to perform all four of these functions at once in\n --  a single procedure called Analyze_Choices. This routine was called at the"}, {"sha": "b0f1ed3bbe2b55a39ad77c60683af8aa5b8287cf", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 12, "deletions": 33, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -1655,9 +1655,9 @@ package body Sem_Ch10 is\n       procedure Optional_Subunit;\n       --  This procedure is called when the main unit is a stub, or when we\n       --  are not generating code. In such a case, we analyze the subunit if\n-      --  present, which is user-friendly and in fact required for ASIS, but we\n-      --  don't complain if the subunit is missing. In GNATprove_Mode, we issue\n-      --  an error to avoid formal verification of a partial unit.\n+      --  present, which is user-friendly, but we don't complain if the subunit\n+      --  is missing. In GNATprove_Mode, we issue an error to avoid formal\n+      --  verification of a partial unit.\n \n       ----------------------\n       -- Optional_Subunit --\n@@ -1673,7 +1673,7 @@ package body Sem_Ch10 is\n          --  ignore all errors. Note that Fatal_Error will still be set, so we\n          --  will be able to check for this case below.\n \n-         if not (ASIS_Mode or GNATprove_Mode) then\n+         if not GNATprove_Mode then\n             Ignore_Errors_Enable := Ignore_Errors_Enable + 1;\n          end if;\n \n@@ -1684,7 +1684,7 @@ package body Sem_Ch10 is\n               Subunit    => True,\n               Error_Node => N);\n \n-         if not (ASIS_Mode or GNATprove_Mode) then\n+         if not GNATprove_Mode then\n             Ignore_Errors_Enable := Ignore_Errors_Enable - 1;\n          end if;\n \n@@ -1808,27 +1808,13 @@ package body Sem_Ch10 is\n \n       --  If the main unit is a subunit, then we are just performing semantic\n       --  analysis on that subunit, and any other subunits of any parent unit\n-      --  should be ignored, except that if we are building trees for ASIS\n-      --  usage we want to annotate the stub properly. If the main unit is\n-      --  itself a subunit, another subunit is irrelevant unless it is a\n-      --  subunit of the current one, that is to say appears in the current\n-      --  source tree.\n+      --  should be ignored. If the main unit is itself a subunit, another\n+      --  subunit is irrelevant unless it is a subunit of the current one, that\n+      --  is to say appears in the current source tree.\n \n       elsif Nkind (Unit (Cunit (Main_Unit))) = N_Subunit\n         and then Subunit_Name /= Unit_Name (Main_Unit)\n       then\n-         if ASIS_Mode then\n-            declare\n-               PB : constant Node_Id := Proper_Body (Unit (Cunit (Main_Unit)));\n-            begin\n-               if Nkind_In (PB, N_Package_Body, N_Subprogram_Body)\n-                 and then List_Containing (N) = Declarations (PB)\n-               then\n-                  Optional_Subunit;\n-               end if;\n-            end;\n-         end if;\n-\n          --  But before we return, set the flag for unloaded subunits. This\n          --  will suppress junk warnings of variables in the same declarative\n          --  part (or a higher level one) that are in danger of looking unused\n@@ -2610,14 +2596,7 @@ package body Sem_Ch10 is\n          --  clauses into regular with clauses.\n \n          if Sloc (U) /= No_Location then\n-            if In_Predefined_Unit (U)\n-\n-              --  In ASIS mode the rtsfind mechanism plays no role, and\n-              --  we need to maintain the original tree structure, so\n-              --  this transformation is not performed in this case.\n-\n-              and then not ASIS_Mode\n-            then\n+            if In_Predefined_Unit (U) then\n                Set_Limited_Present (N, False);\n                Analyze_With_Clause (N);\n             else\n@@ -5273,9 +5252,8 @@ package body Sem_Ch10 is\n \n                --  Set entity of parent identifiers if the unit is a child\n                --  unit. This ensures that the tree is properly formed from\n-               --  semantic point of view (e.g. for ASIS queries). The unit\n-               --  entities are not fully analyzed, so we need to follow unit\n-               --  links in the tree.\n+               --  semantic point of view. The unit entities are not fully\n+               --  analyzed, so we need to follow unit links in the tree.\n \n                Set_Entity (Nam, Ent);\n \n@@ -6866,6 +6844,7 @@ package body Sem_Ch10 is\n             --  clauses in other nested packages. We replace the clause with\n             --  a null statement, which is otherwise ignored by the rest of\n             --  the compiler, so that ASIS tools can reconstruct the source.\n+            --  Is this still needed now that ASIS mode is removed???\n \n             if In_Regular_With_Clause (Entity (Name (Item))) then\n                declare"}, {"sha": "be46867324f196009c8677a0fb71f5e3325fd6e9", "filename": "gcc/ada/sem_ch12.adb", "status": "modified", "additions": 35, "deletions": 138, "changes": 173, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_ch12.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_ch12.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch12.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -1101,7 +1101,7 @@ package body Sem_Ch12 is\n       --  actuals are positional, return the next one, if any. If the actuals\n       --  are named, scan the parameter associations to find the right one.\n       --  A_F is the corresponding entity in the analyzed generic, which is\n-      --  placed on the selector name for ASIS use.\n+      --  placed on the selector name.\n       --\n       --  In Ada 2005, a named association may be given with a box, in which\n       --  case Matching_Actual sets Found_Assoc to the generic association,\n@@ -3048,8 +3048,7 @@ package body Sem_Ch12 is\n \n       Set_Has_Completion (Formal, True);\n \n-      --  Add semantic information to the original defining identifier for ASIS\n-      --  use.\n+      --  Add semantic information to the original defining identifier.\n \n       Set_Ekind (Pack_Id, E_Package);\n       Set_Etype (Pack_Id, Standard_Void_Type);\n@@ -4348,8 +4347,7 @@ package body Sem_Ch12 is\n          --  body if there is one and it needs to be instantiated here.\n \n          --  We instantiate the body only if we are generating code, or if we\n-         --  are generating cross-reference information, or if we are building\n-         --  trees for ASIS use or GNATprove use.\n+         --  are generating cross-reference information, or for GNATprove use.\n \n          declare\n             Enclosing_Body_Present : Boolean := False;\n@@ -4446,7 +4444,7 @@ package body Sem_Ch12 is\n                and then not Inline_Now\n                and then (Operating_Mode = Generate_Code\n                           or else (Operating_Mode = Check_Semantics\n-                                    and then (ASIS_Mode or GNATprove_Mode)));\n+                                    and then GNATprove_Mode));\n \n             --  If front-end inlining is enabled or there are any subprograms\n             --  marked with Inline_Always, do not instantiate body when within\n@@ -4781,17 +4779,6 @@ package body Sem_Ch12 is\n          Inline_Instance_Body (N, Gen_Unit, Act_Decl);\n       end if;\n \n-      --  The following is a tree patch for ASIS: ASIS needs separate nodes to\n-      --  be used as defining identifiers for a formal package and for the\n-      --  corresponding expanded package.\n-\n-      if Nkind (N) = N_Formal_Package_Declaration then\n-         Act_Decl_Id := New_Copy (Defining_Entity (N));\n-         Set_Comes_From_Source (Act_Decl_Id, True);\n-         Set_Is_Generic_Instance (Act_Decl_Id, False);\n-         Set_Defining_Identifier (N, Act_Decl_Id);\n-      end if;\n-\n       --  Check that if N is an instantiation of System.Dim_Float_IO or\n       --  System.Dim_Integer_IO, the formal type has a dimension system.\n \n@@ -5185,17 +5172,17 @@ package body Sem_Ch12 is\n \n       if (Is_In_Main_Unit (N) or else Is_Inlined_Or_Child_Of_Inlined (Subp))\n \n-        --  Must be generating code or analyzing code in ASIS/GNATprove mode\n+        --  Must be generating code or analyzing code in GNATprove mode\n \n         and then (Operating_Mode = Generate_Code\n                    or else (Operating_Mode = Check_Semantics\n-                             and then (ASIS_Mode or GNATprove_Mode)))\n+                             and then GNATprove_Mode))\n \n-        --  The body is needed when generating code (full expansion), in ASIS\n-        --  mode for other tools, and in GNATprove mode (special expansion) for\n-        --  formal verification of the body itself.\n+        --  The body is needed when generating code (full expansion) and in\n+        --  in GNATprove mode (special expansion) for formal verification of\n+        --  the body itself.\n \n-        and then (Expander_Active or ASIS_Mode or GNATprove_Mode)\n+        and then (Expander_Active or GNATprove_Mode)\n \n         --  No point in inlining if ABE is inevitable\n \n@@ -5814,16 +5801,15 @@ package body Sem_Ch12 is\n             --  constitute a freeze point, but to insure that the freeze node\n             --  is placed properly, it is created directly when instantiating\n             --  the body (otherwise the freeze node might appear to early for\n-            --  nested instantiations). For ASIS purposes, indicate that the\n-            --  wrapper package has replaced the instantiation node.\n+            --  nested instantiations).\n \n             elsif Nkind (Parent (N)) = N_Compilation_Unit then\n                Rewrite (N, Unit (Parent (N)));\n                Set_Unit (Parent (N), N);\n             end if;\n \n          --  Replace instance node for library-level instantiations of\n-         --  intrinsic subprograms, for ASIS use.\n+         --  intrinsic subprograms.\n \n          elsif Nkind (Parent (N)) = N_Compilation_Unit then\n             Rewrite (N, Unit (Parent (N)));\n@@ -7701,9 +7687,8 @@ package body Sem_Ch12 is\n \n       function In_Defining_Unit_Name (Nam : Node_Id) return Boolean;\n       --  True if an identifier is part of the defining program unit name of\n-      --  a child unit. The entity of such an identifier must be kept (for\n-      --  ASIS use) even though as the name of an enclosing generic it would\n-      --  otherwise not be preserved in the generic tree.\n+      --  a child unit.\n+      --  Consider removing this subprogram now that ASIS no longer uses it.\n \n       ----------------------\n       -- Copy_Descendants --\n@@ -7887,7 +7872,7 @@ package body Sem_Ch12 is\n             --  The entities for parent units in the defining_program_unit of a\n             --  generic child unit are established when the context of the unit\n             --  is first analyzed, before the generic copy is made. They are\n-            --  preserved in the copy for use in ASIS queries.\n+            --  preserved in the copy for use in e.g. ASIS queries.\n \n             Ent := Entity (New_N);\n \n@@ -10924,41 +10909,6 @@ package body Sem_Ch12 is\n       Subt_Decl   : Node_Id             := Empty;\n       Subt_Mark   : Node_Id             := Empty;\n \n-      function Copy_Access_Def return Node_Id;\n-      --  If formal is an anonymous access, copy access definition of formal\n-      --  for generated object declaration.\n-\n-      ---------------------\n-      -- Copy_Access_Def --\n-      ---------------------\n-\n-      function Copy_Access_Def return Node_Id is\n-      begin\n-         Def := New_Copy_Tree (Acc_Def);\n-\n-         --  In addition, if formal is an access to subprogram we need to\n-         --  generate new formals for the signature of the default, so that\n-         --  the tree is properly formatted for ASIS use.\n-\n-         if Present (Access_To_Subprogram_Definition (Acc_Def)) then\n-            declare\n-               Par_Spec : Node_Id;\n-            begin\n-               Par_Spec :=\n-                 First (Parameter_Specifications\n-                          (Access_To_Subprogram_Definition (Def)));\n-               while Present (Par_Spec) loop\n-                  Set_Defining_Identifier (Par_Spec,\n-                    Make_Defining_Identifier (Sloc (Acc_Def),\n-                      Chars => Chars (Defining_Identifier (Par_Spec))));\n-                  Next (Par_Spec);\n-               end loop;\n-            end;\n-         end if;\n-\n-         return Def;\n-      end Copy_Access_Def;\n-\n    --  Start of processing for Instantiate_Object\n \n    begin\n@@ -10990,8 +10940,9 @@ package body Sem_Ch12 is\n          --  use the actual directly, rather than a copy, because it is not\n          --  used further in the list of actuals, and because a copy or a use\n          --  of relocate_node is incorrect if the instance is nested within a\n-         --  generic. In order to simplify ASIS searches, the Generic_Parent\n-         --  field links the declaration to the generic association.\n+         --  generic. In order to simplify e.g. ASIS queries, the\n+         --  Generic_Parent field links the declaration to the generic\n+         --  association.\n \n          if No (Actual) then\n             Error_Msg_NE\n@@ -11159,8 +11110,9 @@ package body Sem_Ch12 is\n          if Present (Actual) then\n             if Present (Subt_Mark) then\n                Def := New_Copy_Tree (Subt_Mark);\n-            else pragma Assert (Present (Acc_Def));\n-               Def := Copy_Access_Def;\n+            else\n+               pragma Assert (Present (Acc_Def));\n+               Def := New_Copy_Tree (Acc_Def);\n             end if;\n \n             Decl_Node :=\n@@ -11241,8 +11193,9 @@ package body Sem_Ch12 is\n \n             if Present (Subt_Mark) then\n                Def := New_Copy (Subt_Mark);\n-            else pragma Assert (Present (Acc_Def));\n-               Def := Copy_Access_Def;\n+            else\n+               pragma Assert (Present (Acc_Def));\n+               Def := New_Copy_Tree (Acc_Def);\n             end if;\n \n             Decl_Node :=\n@@ -15353,38 +15306,7 @@ package body Sem_Ch12 is\n             end if;\n \n             if Is_Global (E) then\n-\n-               --  If the entity is a package renaming that is the prefix of\n-               --  an expanded name, it has been rewritten as the renamed\n-               --  package, which is necessary semantically but complicates\n-               --  ASIS tree traversal, so we recover the original entity to\n-               --  expose the renaming. Take into account that the context may\n-               --  be a nested generic, that the original node may itself have\n-               --  an associated node that had better be an entity, and that\n-               --  the current node is still a selected component.\n-\n-               if Ekind (E) = E_Package\n-                 and then Nkind (N) = N_Selected_Component\n-                 and then Nkind (Parent (N)) = N_Expanded_Name\n-                 and then Present (Original_Node (N2))\n-                 and then Is_Entity_Name (Original_Node (N2))\n-                 and then Present (Entity (Original_Node (N2)))\n-               then\n-                  if Is_Global (Entity (Original_Node (N2))) then\n-                     N2 := Original_Node (N2);\n-                     Set_Associated_Node (N, N2);\n-                     Set_Global_Type     (N, N2);\n-\n-                  --  Renaming is local, and will be resolved in instance\n-\n-                  else\n-                     Set_Associated_Node (N, Empty);\n-                     Set_Etype (N, Empty);\n-                  end if;\n-\n-               else\n-                  Set_Global_Type (N, N2);\n-               end if;\n+               Set_Global_Type (N, N2);\n \n             elsif Nkind (N) = N_Op_Concat\n               and then Is_Generic_Type (Etype (N2))\n@@ -15917,41 +15839,14 @@ package body Sem_Ch12 is\n             --  The node did not undergo a transformation\n \n             if Nkind (N) = Nkind (Get_Associated_Node (N)) then\n-               declare\n-                  Aux_N2         : constant Node_Id := Get_Associated_Node (N);\n-                  Orig_N2_Parent : constant Node_Id :=\n-                                     Original_Node (Parent (Aux_N2));\n-               begin\n-                  --  The parent of this identifier is a selected component\n-                  --  which denotes a named number that was constant folded.\n-                  --  Preserve the original name for ASIS and link the parent\n-                  --  with its expanded name. The constant folding will be\n-                  --  repeated in the instance.\n-\n-                  if Nkind (Parent (N)) = N_Selected_Component\n-                    and then Nkind_In (Parent (Aux_N2), N_Integer_Literal,\n-                                                        N_Real_Literal)\n-                    and then Is_Entity_Name (Orig_N2_Parent)\n-                    and then Ekind (Entity (Orig_N2_Parent)) in Named_Kind\n-                    and then Is_Global (Entity (Orig_N2_Parent))\n-                  then\n-                     N2 := Aux_N2;\n-                     Set_Associated_Node\n-                       (Parent (N), Original_Node (Parent (N2)));\n-\n-                  --  Common case\n-\n-                  else\n-                     --  If this is a discriminant reference, always save it.\n-                     --  It is used in the instance to find the corresponding\n-                     --  discriminant positionally rather than by name.\n+               --  If this is a discriminant reference, always save it.\n+               --  It is used in the instance to find the corresponding\n+               --  discriminant positionally rather than by name.\n \n-                     Set_Original_Discriminant\n-                       (N, Original_Discriminant (Get_Associated_Node (N)));\n-                  end if;\n+               Set_Original_Discriminant\n+                 (N, Original_Discriminant (Get_Associated_Node (N)));\n \n-                  Reset_Entity (N);\n-               end;\n+               Reset_Entity (N);\n \n             --  The analysis of the generic copy transformed the identifier\n             --  into another construct. Propagate the changes to the template.\n@@ -15975,6 +15870,7 @@ package body Sem_Ch12 is\n                --  The identifier denotes a named number that was constant\n                --  folded. Preserve the original name for ASIS and undo the\n                --  constant folding which will be repeated in the instance.\n+               --  Is this still needed???\n \n                elsif Nkind_In (N2, N_Integer_Literal, N_Real_Literal)\n                  and then Is_Entity_Name (Original_Node (N2))\n@@ -16086,8 +15982,9 @@ package body Sem_Ch12 is\n                     and then Nkind (Original_Node (N2)) = Nkind (N)\n                   then\n                      --  Operation was constant-folded. Whenever possible,\n-                     --  recover semantic information from unfolded node,\n-                     --  for ASIS use.\n+                     --  recover semantic information from unfolded node.\n+                     --  This was initially done for ASIS but is apparently\n+                     --  needed also for e.g. compiling a-nbnbin.adb.\n \n                      Set_Associated_Node (N, Original_Node (N2));\n "}, {"sha": "9eaf70b4bce0887fedc50337deb5f31f4e1d1259", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 41, "deletions": 145, "changes": 186, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -2294,26 +2294,13 @@ package body Sem_Ch13 is\n                   --  Construct the attribute_definition_clause. The expression\n                   --  in the aspect specification is simply shared with the\n                   --  constructed attribute, because it will be fully analyzed\n-                  --  when the attribute is processed. However, in ASIS mode\n-                  --  the aspect expression itself is preanalyzed and resolved\n-                  --  to catch visibility errors that are otherwise caught\n-                  --  later, and we create a separate copy of the expression\n-                  --  to prevent analysis of a malformed tree (e.g. a function\n-                  --  call with parameter associations).\n-\n-                  if ASIS_Mode then\n-                     Aitem :=\n-                       Make_Attribute_Definition_Clause (Loc,\n-                         Name       => Ent,\n-                         Chars      => Chars (Id),\n-                         Expression => New_Copy_Tree (Expr));\n-                  else\n-                     Aitem :=\n-                       Make_Attribute_Definition_Clause (Loc,\n-                         Name       => Ent,\n-                         Chars      => Chars (Id),\n-                         Expression => Relocate_Node (Expr));\n-                  end if;\n+                  --  when the attribute is processed.\n+\n+                  Aitem :=\n+                    Make_Attribute_Definition_Clause (Loc,\n+                      Name       => Ent,\n+                      Chars      => Chars (Id),\n+                      Expression => Relocate_Node (Expr));\n \n                   --  If the address is specified, then we treat the entity as\n                   --  referenced, to avoid spurious warnings. This is analogous\n@@ -3488,17 +3475,14 @@ package body Sem_Ch13 is\n                   --  We do not do this for Pre'Class, since we have to put\n                   --  these conditions together in a complex OR expression.\n \n-                  --  We do not do this in ASIS mode, as ASIS relies on the\n-                  --  original node representing the complete expression, when\n-                  --  retrieving it through the source aspect table. Also, we\n-                  --  don't do this in GNATprove mode, because it brings no\n-                  --  benefit for proof and causes annoynace for flow analysis,\n+                  --  We don't do this in GNATprove mode, because it brings no\n+                  --  benefit for proof and causes annoyance for flow analysis,\n                   --  which prefers to be as close to the original source code\n                   --  as possible. Also we don't do this when analyzing generic\n                   --  units since it causes spurious visibility errors in the\n                   --  preanalysis of instantiations.\n \n-                  if not (ASIS_Mode or GNATprove_Mode)\n+                  if not GNATprove_Mode\n                     and then (Pname = Name_Postcondition\n                                or else not Class_Present (Aspect))\n                     and then not Inside_A_Generic\n@@ -3521,16 +3505,16 @@ package body Sem_Ch13 is\n                   --  because subsequent visibility analysis of the aspect\n                   --  depends on this sharing. This should be cleaned up???\n \n-                  --  If the context is generic or involves ASIS, we want\n-                  --  to preserve the original tree, and simply share it\n-                  --  between aspect and generated attribute. This parallels\n-                  --  what is done in sem_prag.adb (see Get_Argument).\n+                  --  If the context is generic, we want to preserve the\n+                  --  original tree, and simply share it between aspect and\n+                  --  generated attribute. This parallels what is done in\n+                  --  sem_prag.adb (see Get_Argument).\n \n                   declare\n                      New_Expr : Node_Id;\n \n                   begin\n-                     if ASIS_Mode or else Inside_A_Generic then\n+                     if Inside_A_Generic then\n                         New_Expr := Expr;\n                      else\n                         New_Expr := Relocate_Node (Expr);\n@@ -3599,6 +3583,7 @@ package body Sem_Ch13 is\n                   --  expressions through the Original_Node link. This is used\n                   --  in semantic analysis for ASIS mode, so that the original\n                   --  expression also gets analyzed.\n+                  --  Is this still needed???\n \n                   Comp_Expr := First (Expressions (Expr));\n                   while Present (Comp_Expr) loop\n@@ -5375,14 +5360,9 @@ package body Sem_Ch13 is\n                Set_Has_Alignment_Clause (U_Ent);\n \n                --  Tagged type case, check for attempt to set alignment to a\n-               --  value greater than Max_Align, and reset if so. This error\n-               --  is suppressed in ASIS mode to allow for different ASIS\n-               --  back ends or ASIS-based tools to query the illegal clause.\n+               --  value greater than Max_Align, and reset if so.\n \n-               if Is_Tagged_Type (U_Ent)\n-                 and then Align > Max_Align\n-                 and then not ASIS_Mode\n-               then\n+               if Is_Tagged_Type (U_Ent) and then Align > Max_Align then\n                   Error_Msg_N\n                     (\"alignment for & set to Maximum_Aligment??\", Nam);\n                   Set_Alignment (U_Ent, Max_Align);\n@@ -5816,11 +5796,7 @@ package body Sem_Ch13 is\n                elsif Radix = 10 then\n                   Set_Machine_Radix_10 (U_Ent);\n \n-               --  The following error is suppressed in ASIS mode to allow for\n-               --  different ASIS back ends or ASIS-based tools to query the\n-               --  illegal clause.\n-\n-               elsif not ASIS_Mode then\n+               else\n                   Error_Msg_N (\"machine radix value must be 2 or 10\", Expr);\n                end if;\n             end if;\n@@ -5848,14 +5824,7 @@ package body Sem_Ch13 is\n             else\n                Check_Size (Expr, U_Ent, Size, Biased);\n \n-               --  The following errors are suppressed in ASIS mode to allow\n-               --  for different ASIS back ends or ASIS-based tools to query\n-               --  the illegal clause.\n-\n-               if ASIS_Mode then\n-                  null;\n-\n-               elsif Size <= 0 then\n+               if Size <= 0 then\n                   Error_Msg_N (\"Object_Size must be positive\", Expr);\n \n                elsif Is_Scalar_Type (U_Ent) then\n@@ -6065,16 +6034,11 @@ package body Sem_Ch13 is\n                --  For objects, set Esize only\n \n                else\n-                  --  The following error is suppressed in ASIS mode to allow\n-                  --  for different ASIS back ends or ASIS-based tools to query\n-                  --  the illegal clause.\n-\n                   if Is_Elementary_Type (Etyp)\n                     and then Size /= System_Storage_Unit\n                     and then Size /= System_Storage_Unit * 2\n                     and then Size /= System_Storage_Unit * 4\n                     and then Size /= System_Storage_Unit * 8\n-                    and then not ASIS_Mode\n                   then\n                      Error_Msg_Uint_1 := UI_From_Int (System_Storage_Unit);\n                      Error_Msg_Uint_2 := Error_Msg_Uint_1 * 8;\n@@ -6396,15 +6360,7 @@ package body Sem_Ch13 is\n                null;\n \n             elsif Is_Elementary_Type (U_Ent) then\n-\n-               --  The following errors are suppressed in ASIS mode to allow\n-               --  for different ASIS back ends or ASIS-based tools to query\n-               --  the illegal clause.\n-\n-               if ASIS_Mode then\n-                  null;\n-\n-               elsif Size /= System_Storage_Unit\n+               if Size /= System_Storage_Unit\n                  and then Size /= System_Storage_Unit * 2\n                  and then Size /= System_Storage_Unit * 4\n                  and then Size /= System_Storage_Unit * 8\n@@ -7064,13 +7020,9 @@ package body Sem_Ch13 is\n \n       if Present (Mod_Clause (N)) then\n          declare\n-            Loc     : constant Source_Ptr := Sloc (N);\n-            M       : constant Node_Id := Mod_Clause (N);\n-            P       : constant List_Id := Pragmas_Before (M);\n-            AtM_Nod : Node_Id;\n-\n-            Mod_Val : Uint;\n-            pragma Warnings (Off, Mod_Val);\n+            M      : constant Node_Id := Mod_Clause (N);\n+            P      : constant List_Id := Pragmas_Before (M);\n+            Ignore : Uint;\n \n          begin\n             Check_Restriction (No_Obsolescent_Features, Mod_Clause (N));\n@@ -7086,31 +7038,9 @@ package body Sem_Ch13 is\n                Analyze_List (P);\n             end if;\n \n-            --  In ASIS_Mode mode, expansion is disabled, but we must convert\n-            --  the Mod clause into an alignment clause anyway, so that the\n-            --  back end can compute and back-annotate properly the size and\n-            --  alignment of types that may include this record.\n+            --  Get the alignment value to perform error checking\n \n-            --  This seems dubious, this destroys the source tree in a manner\n-            --  not detectable by ASIS ???\n-\n-            if Operating_Mode = Check_Semantics and then ASIS_Mode then\n-               AtM_Nod :=\n-                 Make_Attribute_Definition_Clause (Loc,\n-                   Name       => New_Occurrence_Of (Base_Type (Rectype), Loc),\n-                   Chars      => Name_Alignment,\n-                   Expression => Relocate_Node (Expression (M)));\n-\n-               Set_From_At_Mod (AtM_Nod);\n-               Insert_After (N, AtM_Nod);\n-               Mod_Val := Get_Alignment_Value (Expression (AtM_Nod));\n-               Set_Mod_Clause (N, Empty);\n-\n-            else\n-               --  Get the alignment value to perform error checking\n-\n-               Mod_Val := Get_Alignment_Value (Expression (M));\n-            end if;\n+            Ignore := Get_Alignment_Value (Expression (M));\n          end;\n       end if;\n \n@@ -8649,11 +8579,6 @@ package body Sem_Ch13 is\n \n                Set_Etype (N, Typ);\n                Set_Entity (N, Object_Entity);\n-\n-               --  We want to treat the node as if it comes from source, so\n-               --  that ASIS will not ignore it.\n-\n-               Set_Comes_From_Source (N, True);\n             end Replace_Type_Reference;\n \n             --  Local variables\n@@ -8672,6 +8597,7 @@ package body Sem_Ch13 is\n             --  Extract the arguments of the pragma. The expression itself\n             --  is copied for use in the predicate function, to preserve the\n             --  original version for ASIS use.\n+            --  Is this still needed???\n \n             Arg1 := First (Pragma_Argument_Associations (Prag));\n             Arg2 := Next (Arg1);\n@@ -11012,13 +10938,8 @@ package body Sem_Ch13 is\n \n       procedure Size_Too_Small_Error (Min_Siz : Uint) is\n       begin\n-         --  This error is suppressed in ASIS mode to allow for different ASIS\n-         --  back ends or ASIS-based tools to query the illegal clause.\n-\n-         if not ASIS_Mode then\n-            Error_Msg_Uint_1 := Min_Siz;\n-            Error_Msg_NE (Size_Too_Small_Message, N, T);\n-         end if;\n+         Error_Msg_Uint_1 := Min_Siz;\n+         Error_Msg_NE (Size_Too_Small_Message, N, T);\n       end Size_Too_Small_Error;\n \n       --  Local variables\n@@ -11302,6 +11223,7 @@ package body Sem_Ch13 is\n       --  between interface primitives and tagged type primitives. They are\n       --  also used to locate primitives covering interfaces when processing\n       --  generics (see Derive_Subprograms).\n+      --  ??? Revisit now that ASIS mode is gone.\n \n       --  This is not needed in the generic case\n \n@@ -11583,9 +11505,11 @@ package body Sem_Ch13 is\n                   --  for aggregates, requires the expanded list of choices.\n \n                   --  If the expander is not active, then we can't just clobber\n-                  --  the list since it would invalidate the ASIS -gnatct tree.\n+                  --  the list since it would invalidate the tree.\n                   --  So we have to rewrite the variant part with a Rewrite\n                   --  call that replaces it with a copy and clobber the copy.\n+                  --  This is no longer needed for ASIS, but possibly for\n+                  --  GNATprove???\n \n                   if not Expander_Active then\n                      declare\n@@ -11654,7 +11578,9 @@ package body Sem_Ch13 is\n                --  to the others choice (it's the list we're replacing).\n \n                --  We only want to do this if the expander is active, since\n-               --  we do not want to clobber the ASIS tree.\n+               --  we do not want to clobber the tree.\n+               --  This is no longer needed for ASIS, is this needed for\n+               --  GNATprove_Mode???\n \n                if Expander_Active then\n                   declare\n@@ -11692,14 +11618,7 @@ package body Sem_Ch13 is\n          return No_Uint;\n \n       elsif Align < 0 then\n-\n-         --  This error is suppressed in ASIS mode to allow for different ASIS\n-         --  back ends or ASIS-based tools to query the illegal clause.\n-\n-         if not ASIS_Mode then\n-            Error_Msg_N (\"alignment value must be positive\", Expr);\n-         end if;\n-\n+         Error_Msg_N (\"alignment value must be positive\", Expr);\n          return No_Uint;\n \n       --  If Alignment is specified to be 0, we treat it the same as 1\n@@ -11716,15 +11635,7 @@ package body Sem_Ch13 is\n                exit when M = Align;\n \n                if M > Align then\n-\n-                  --  This error is suppressed in ASIS mode to allow for\n-                  --  different ASIS back ends or ASIS-based tools to query the\n-                  --  illegal clause.\n-\n-                  if not ASIS_Mode then\n-                     Error_Msg_N (\"alignment value must be power of 2\", Expr);\n-                  end if;\n-\n+                  Error_Msg_N (\"alignment value must be power of 2\", Expr);\n                   return No_Uint;\n                end if;\n             end;\n@@ -12374,13 +12285,13 @@ package body Sem_Ch13 is\n       pragma Assert (Ignore_Rep_Clauses);\n \n       --  Note: we use Replace rather than Rewrite, because we don't want\n-      --  ASIS to be able to use Original_Node to dig out the (undecorated)\n+      --  tools to be able to use Original_Node to dig out the (undecorated)\n       --  rep clause that is being replaced.\n \n       Replace (N, Make_Null_Statement (Sloc (N)));\n \n       --  The null statement must be marked as not coming from source. This is\n-      --  so that ASIS ignores it, and also the back end does not expect bogus\n+      --  so that tools ignore it, and also the back end does not expect bogus\n       --  \"from source\" null statements in weird places (e.g. in declarative\n       --  regions where such null statements are not allowed).\n \n@@ -13369,9 +13280,6 @@ package body Sem_Ch13 is\n       --  introduce a local identifier that would require proper expansion to\n       --  handle properly.\n \n-      --  In ASIS_Mode we preserve the entity in the source because there is\n-      --  no subsequent expansion to decorate the tree.\n-\n       ------------------\n       -- Resolve_Name --\n       ------------------\n@@ -13398,19 +13306,7 @@ package body Sem_Ch13 is\n                       or else N /= Selector_Name (Parent (N)))\n          then\n             Find_Direct_Name (N);\n-\n-            --  In ASIS mode we must analyze overloaded identifiers to ensure\n-            --  their correct decoration because expansion is disabled (and\n-            --  the expansion of freeze nodes takes care of resolving aspect\n-            --  expressions).\n-\n-            if ASIS_Mode then\n-               if Is_Overloaded (N) then\n-                  Analyze (Parent (N));\n-               end if;\n-            else\n-               Set_Entity (N, Empty);\n-            end if;\n+            Set_Entity (N, Empty);\n \n          --  The name is component association needs no resolution.\n "}, {"sha": "1e3f0b825d27a85984230af1d314e1dfcaa19783", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 10, "deletions": 125, "changes": 135, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -1206,22 +1206,6 @@ package body Sem_Ch3 is\n          begin\n             F := First (Formals);\n \n-            --  In ASIS mode, the access_to_subprogram may be analyzed twice,\n-            --  when it is part of an unconstrained type and subtype expansion\n-            --  is disabled. To avoid back-end problems with shared profiles,\n-            --  use previous subprogram type as the designated type, and then\n-            --  remove scope added above.\n-\n-            if ASIS_Mode and then Present (Scope (Defining_Identifier (F)))\n-            then\n-               Set_Etype                    (T_Name, T_Name);\n-               Init_Size_Align              (T_Name);\n-               Set_Directly_Designated_Type (T_Name,\n-                 Scope (Defining_Identifier (F)));\n-               End_Scope;\n-               return;\n-            end if;\n-\n             while Present (F) loop\n                if No (Parent (Defining_Identifier (F))) then\n                   Set_Parent (Defining_Identifier (F), F);\n@@ -1808,13 +1792,9 @@ package body Sem_Ch3 is\n                --  of locally defined tagged types (or compiling with static\n                --  dispatch tables generation disabled) the corresponding\n                --  entry of the secondary dispatch table is filled when such\n-               --  an entity is frozen. This is an expansion activity that must\n-               --  be suppressed for ASIS because it leads to gigi elaboration\n-               --  issues in annotate mode.\n+               --  an entity is frozen.\n \n-               if not ASIS_Mode then\n-                  Set_Has_Delayed_Freeze (New_Subp);\n-               end if;\n+               Set_Has_Delayed_Freeze (New_Subp);\n             end if;\n \n             <<Continue>>\n@@ -2711,14 +2691,7 @@ package body Sem_Ch3 is\n \n                else\n                   --  For declarations in a subprogram body there is no issue\n-                  --  with name resolution in aspect specifications, but in\n-                  --  ASIS mode we need to preanalyze aspect specifications\n-                  --  that may otherwise only be analyzed during expansion\n-                  --  (e.g. during generation of a related subprogram).\n-\n-                  if ASIS_Mode then\n-                     Resolve_Aspects;\n-                  end if;\n+                  --  with name resolution in aspect specifications.\n \n                   Freeze_All (First_Entity (Current_Scope), Decl);\n                   Freeze_From := Last_Entity (Current_Scope);\n@@ -2744,16 +2717,6 @@ package body Sem_Ch3 is\n \n                --  End of a package declaration\n \n-               --  In compilation mode the expansion of freeze node takes care\n-               --  of resolving expressions of all aspects in the list. In ASIS\n-               --  mode this must be done explicitly.\n-\n-               if ASIS_Mode\n-                 and then Scope (Current_Scope) = Standard_Standard\n-               then\n-                  Resolve_Aspects;\n-               end if;\n-\n                --  This is a freeze point because it is the end of a\n                --  compilation unit.\n \n@@ -2815,18 +2778,10 @@ package body Sem_Ch3 is\n             --  to examine Next_Decl as the late primitive idiom can only apply\n             --  to the first encountered body.\n \n-            --  The spec of the late primitive is not generated in ASIS mode to\n-            --  ensure a consistent list of primitives that indicates the true\n-            --  semantic structure of the program (which is not relevant when\n-            --  generating executable code).\n-\n             --  ??? A cleaner approach may be possible and/or this solution\n             --  could be extended to general-purpose late primitives, TBD.\n \n-            if not ASIS_Mode\n-              and then not Body_Seen\n-              and then not Is_Body (Decl)\n-            then\n+            if not Body_Seen and then not Is_Body (Decl) then\n                Body_Seen := True;\n \n                if Nkind (Next_Decl) = N_Subprogram_Body then\n@@ -2836,6 +2791,7 @@ package body Sem_Ch3 is\n             else\n                --  In ASIS mode, if the next declaration is a body, complete\n                --  the analysis of declarations so far.\n+               --  Is this still needed???\n \n                Resolve_Aspects;\n             end if;\n@@ -6541,61 +6497,6 @@ package body Sem_Ch3 is\n \n       Mark_Rewrite_Insertion (Decl);\n \n-      --  In ASIS mode, analyze the profile on the original node, because\n-      --  the separate copy does not provide enough links to recover the\n-      --  original tree. Analysis is limited to type annotations, within\n-      --  a temporary scope that serves as an anonymous subprogram to collect\n-      --  otherwise useless temporaries and itypes.\n-\n-      if ASIS_Mode then\n-         declare\n-            Typ : constant Entity_Id := Make_Temporary (Loc, 'S');\n-\n-         begin\n-            if Nkind (Spec) = N_Access_Function_Definition then\n-               Set_Ekind (Typ, E_Function);\n-            else\n-               Set_Ekind (Typ, E_Procedure);\n-            end if;\n-\n-            Set_Parent (Typ, N);\n-            Set_Scope  (Typ, Current_Scope);\n-            Push_Scope (Typ);\n-\n-            --  Nothing to do if procedure is parameterless\n-\n-            if Present (Parameter_Specifications (Spec)) then\n-               Process_Formals (Parameter_Specifications (Spec), Spec);\n-            end if;\n-\n-            if Nkind (Spec) = N_Access_Function_Definition then\n-               declare\n-                  Def : constant Node_Id := Result_Definition (Spec);\n-\n-               begin\n-                  --  The result might itself be an anonymous access type, so\n-                  --  have to recurse.\n-\n-                  if Nkind (Def) = N_Access_Definition then\n-                     if Present (Access_To_Subprogram_Definition (Def)) then\n-                        Set_Etype\n-                          (Def,\n-                           Replace_Anonymous_Access_To_Protected_Subprogram\n-                            (Spec));\n-                     else\n-                        Find_Type (Subtype_Mark (Def));\n-                     end if;\n-\n-                  else\n-                     Find_Type (Def);\n-                  end if;\n-               end;\n-            end if;\n-\n-            End_Scope;\n-         end;\n-      end if;\n-\n       --  Insert the new declaration in the nearest enclosing scope. If the\n       --  parent is a body and N is its return type, the declaration belongs\n       --  in the enclosing scope. Likewise if N is the type of a parameter.\n@@ -9662,10 +9563,6 @@ package body Sem_Ch3 is\n       elsif not Private_Extension then\n          Expand_Record_Extension (Derived_Type, Type_Def);\n \n-         --  Note : previously in ASIS mode we set the Parent_Subtype of the\n-         --  derived type to propagate some semantic information. This led\n-         --  to other ASIS failures and has been removed.\n-\n          --  Ada 2005 (AI-251): Addition of the Tag corresponding to all the\n          --  implemented interfaces if we are in expansion mode\n \n@@ -11497,6 +11394,7 @@ package body Sem_Ch3 is\n \n             --  If an access to object, preserve entity of designated type,\n             --  for ASIS use, before rewriting the component definition.\n+            --  Is this still needed???\n \n             else\n                declare\n@@ -11505,16 +11403,16 @@ package body Sem_Ch3 is\n                begin\n                   Desig := Entity (Subtype_Indication (Type_Def));\n \n-                  --  If the access definition is to the current  record,\n-                  --  the visible entity at this point is an  incomplete\n-                  --  type. Retrieve the full view to simplify  ASIS queries\n+                  --  If the access definition is to the current record,\n+                  --  the visible entity at this point is an incomplete\n+                  --  type. Retrieve the full view to simplify ASIS queries\n \n                   if Ekind (Desig) = E_Incomplete_Type then\n                      Desig := Full_View (Desig);\n                   end if;\n \n                   Set_Entity\n-                    (Subtype_Mark (Access_Definition  (Comp_Def)), Desig);\n+                    (Subtype_Mark (Access_Definition (Comp_Def)), Desig);\n                end;\n             end if;\n \n@@ -17852,19 +17750,6 @@ package body Sem_Ch3 is\n \n       else\n          T := Process_Subtype (Obj_Def, Related_Nod);\n-\n-         --  If expansion is disabled an object definition that is an aggregate\n-         --  will not get expanded and may lead to scoping problems in the back\n-         --  end, if the object is referenced in an inner scope. In that case\n-         --  create an itype reference for the object definition now. This\n-         --  may be redundant in some cases, but harmless.\n-\n-         if Is_Itype (T)\n-           and then Nkind (Related_Nod) = N_Object_Declaration\n-           and then ASIS_Mode\n-         then\n-            Build_Itype_Reference (T, Related_Nod);\n-         end if;\n       end if;\n \n       return T;"}, {"sha": "787ba3ec62e7e7213a6f0076a73f49dced768327", "filename": "gcc/ada/sem_ch4.adb", "status": "modified", "additions": 4, "deletions": 22, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_ch4.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_ch4.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch4.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -2821,18 +2821,6 @@ package body Sem_Ch4 is\n            and then Is_Overloadable (Entity (Selector_Name (P)))\n          then\n             Process_Function_Call;\n-\n-         --  In ASIS mode within a generic, a prefixed call is analyzed and\n-         --  partially rewritten but the original indexed component has not\n-         --  yet been rewritten as a call. Perform the replacement now.\n-\n-         elsif Nkind (P) = N_Selected_Component\n-           and then Nkind (Parent (P)) = N_Function_Call\n-           and then ASIS_Mode\n-         then\n-            Rewrite (N, Parent (P));\n-            Analyze (N);\n-\n          else\n             --  Indexed component, slice, or a call to a member of a family\n             --  entry, which will be converted to an entry call later.\n@@ -4189,6 +4177,7 @@ package body Sem_Ch4 is\n                --  reflect the right kind. This is needed for proper ASIS\n                --  navigation. If expansion is enabled, the transformation is\n                --  performed when the expression is rewritten as a loop.\n+               --  Is this still needed???\n \n                Set_Iterator_Specification (N,\n                  New_Copy_Tree (Iterator_Specification (Parent (Loop_Par))));\n@@ -5308,6 +5297,7 @@ package body Sem_Ch4 is\n                --  In ASIS mode the generic parent type may be absent. Examine\n                --  the parent type directly for a component that may have been\n                --  visible in a parent generic unit.\n+               --  ??? Revisit now that ASIS mode is gone\n \n                elsif Is_Derived_Type (Prefix_Type) then\n                   Par := Etype (Prefix_Type);\n@@ -6703,8 +6693,8 @@ package body Sem_Ch4 is\n          --  in Standard to be chosen, and the \"/=\" will be rewritten as a\n          --  negation of \"=\" (see the end of Analyze_Equality_Op). This ensures\n          --  that rewriting happens during analysis rather than being\n-         --  delayed until expansion (this is needed for ASIS, which only sees\n-         --  the unexpanded tree). Note that if the node is N_Op_Ne, but Op_Id\n+         --  delayed until expansion (is this still needed now that ASIS mode\n+         --  is gone???). Note that if the node is N_Op_Ne, but Op_Id\n          --  is Name_Op_Eq then we still proceed with the interpretation,\n          --  because that indicates the potential rewriting case where the\n          --  interpretation to consider is actually \"=\" and the node may be\n@@ -8866,14 +8856,6 @@ package body Sem_Ch4 is\n          Actuals : List_Id;\n \n       begin\n-         --  Obj may already have been rewritten if it involves an implicit\n-         --  dereference (e.g. if it is an access to a limited view). Preserve\n-         --  a link to the original node for ASIS use.\n-\n-         if not Comes_From_Source (Obj) then\n-            Set_Original_Node (Dummy, Original_Node (Obj));\n-         end if;\n-\n          --  Common case covering 1) Call to a procedure and 2) Call to a\n          --  function that has some additional actuals.\n "}, {"sha": "12a1ad79542075c2243f8095d2dfc4da9b93e75b", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -425,6 +425,7 @@ package body Sem_Ch6 is\n \n          --  Once the aspects of the generated body have been analyzed, create\n          --  a copy for ASIS purposes and associate it with the original node.\n+         --  Is this still needed???\n \n          if Has_Aspects (N) then\n             Set_Aspect_Specifications (Orig_N,\n@@ -486,6 +487,7 @@ package body Sem_Ch6 is\n \n          --  Once the aspects of the generated spec have been analyzed, create\n          --  a copy for ASIS purposes and associate it with the original node.\n+         --  Is this still needed???\n \n          if Has_Aspects (N) then\n             Set_Aspect_Specifications (Orig_N,\n@@ -3836,8 +3838,8 @@ package body Sem_Ch6 is\n          --  the freeze actions that include the bodies. In particular, extra\n          --  formals for accessibility or for return-in-place may need to be\n          --  generated. Freeze nodes, if any, are inserted before the current\n-         --  body. These freeze actions are also needed in ASIS mode and in\n-         --  Compile_Only mode to enable the proper back-end type annotations.\n+         --  body. These freeze actions are also needed in Compile_Only mode to\n+         --  enable the proper back-end type annotations.\n          --  They are necessary in any case to ensure proper elaboration order\n          --  in gigi.\n \n@@ -3846,7 +3848,6 @@ package body Sem_Ch6 is\n            and then not Has_Completion (Spec_Id)\n            and then Serious_Errors_Detected = 0\n            and then (Expander_Active\n-                      or else ASIS_Mode\n                       or else Operating_Mode = Check_Semantics\n                       or else Is_Ignored_Ghost_Entity (Spec_Id))\n          then\n@@ -4037,9 +4038,7 @@ package body Sem_Ch6 is\n \n             --  Within an instance, add local renaming declarations so that\n             --  gdb can retrieve the values of actuals more easily. This is\n-            --  only relevant if generating code (and indeed we definitely\n-            --  do not want these definitions -gnatc mode, because that would\n-            --  confuse ASIS).\n+            --  only relevant if generating code.\n \n             if Is_Generic_Instance (Spec_Id)\n               and then Is_Wrapper_Package (Current_Scope)"}, {"sha": "d2fae2761cacf3e363a8335600376b3752615e72", "filename": "gcc/ada/sem_dim.adb", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_dim.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_dim.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_dim.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -2590,16 +2590,6 @@ package body Sem_Dim is\n             Result := No_Rational;\n          end if;\n \n-         --  Provide minimal semantic information on dimension expressions,\n-         --  even though they have no run-time existence. This is for use by\n-         --  ASIS tools, in particular pretty-printing. If generating code\n-         --  standard operator resolution will take place.\n-\n-         if ASIS_Mode then\n-            Set_Entity (N, Standard_Op_Minus);\n-            Set_Etype  (N, Standard_Integer);\n-         end if;\n-\n          return Result;\n       end Process_Minus;\n \n@@ -2626,16 +2616,6 @@ package body Sem_Dim is\n             Result := Left_Rat / Right_Rat;\n          end if;\n \n-         --  Provide minimal semantic information on dimension expressions,\n-         --  even though they have no run-time existence. This is for use by\n-         --  ASIS tools, in particular pretty-printing. If generating code\n-         --  standard operator resolution will take place.\n-\n-         if ASIS_Mode then\n-            Set_Entity (N, Standard_Op_Divide);\n-            Set_Etype  (N, Standard_Integer);\n-         end if;\n-\n          return Result;\n       end Process_Divide;\n "}, {"sha": "55a13009b63db0643bfe6a54d617510155086a72", "filename": "gcc/ada/sem_elab.adb", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_elab.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_elab.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_elab.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -3594,12 +3594,6 @@ package body Sem_Elab is\n       if Legacy_Elaboration_Checks then\n          return;\n \n-      --  Nothing to do for ASIS because ABE checks and diagnostics are not\n-      --  performed in this mode.\n-\n-      elsif ASIS_Mode then\n-         return;\n-\n       --  Nothing to do when the call is being preanalyzed as the marker will\n       --  be inserted in the wrong place.\n \n@@ -3937,13 +3931,6 @@ package body Sem_Elab is\n          Finalize_All_Data_Structures;\n          return;\n \n-      --  Nothing to do for ASIS because ABE checks and diagnostics are not\n-      --  performed in this mode.\n-\n-      elsif ASIS_Mode then\n-         Finalize_All_Data_Structures;\n-         return;\n-\n       --  Nothing to do when the elaboration phase of the compiler is not\n       --  active.\n \n@@ -14030,12 +14017,6 @@ package body Sem_Elab is\n       if Legacy_Elaboration_Checks then\n          return;\n \n-      --  Nothing to do for ASIS because ABE checks and diagnostics are not\n-      --  performed in this mode.\n-\n-      elsif ASIS_Mode then\n-         return;\n-\n       --  Nothing to do when the scenario is being preanalyzed\n \n       elsif Preanalysis_Active then"}, {"sha": "09d2485ad9fe159134fcc76a73e23dd9c89c42e9", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 25, "deletions": 47, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -2031,11 +2031,9 @@ package body Sem_Prag is\n \n                --  Do not normalize a clause if errors were detected (count\n                --  of Serious_Errors has increased) because the inputs and/or\n-               --  outputs may denote illegal items. Normalization is disabled\n-               --  in ASIS mode as it alters the tree by introducing new nodes\n-               --  similar to expansion.\n+               --  outputs may denote illegal items.\n \n-               if Serious_Errors_Detected = Errors and then not ASIS_Mode then\n+               if Serious_Errors_Detected = Errors then\n                   Normalize_Clause (Clause);\n                end if;\n \n@@ -9046,7 +9044,8 @@ package body Sem_Prag is\n                               Set_Mechanism_Value\n                                 (Formal, Expression (Massoc));\n \n-                              --  Set entity on identifier (needed by ASIS)\n+                              --  Set entity on identifier for proper tree\n+                              --  structure.\n \n                               Set_Entity (Choice, Formal);\n \n@@ -9964,15 +9963,6 @@ package body Sem_Prag is\n                   then\n                      Error_Msg_N\n                        (\"Inline cannot apply to a formal subprogram\", N);\n-\n-                  --  If Subp is a renaming, it is the renamed entity that\n-                  --  will appear in any call, and be inlined. However, for\n-                  --  ASIS uses it is convenient to indicate that the renaming\n-                  --  itself is an inlined subprogram, so that some gnatcheck\n-                  --  rules can be applied in the absence of expansion.\n-\n-                  elsif Nkind (Decl) = N_Subprogram_Renaming_Declaration then\n-                     Set_Inline_Flags (Subp);\n                   end if;\n                end if;\n \n@@ -13543,8 +13533,9 @@ package body Sem_Prag is\n             if Arg_Count > 1 then\n                Check_Optional_Identifier (Arg2, Name_Message);\n \n-               --  Provide semantic annnotations for optional argument, for\n+               --  Provide semantic annotations for optional argument, for\n                --  ASIS use, before rewriting.\n+               --  Is this still needed???\n \n                Preanalyze_And_Resolve (Expression (Arg2), Standard_String);\n                Append_To (New_Args, New_Copy_Tree (Arg2));\n@@ -17581,15 +17572,12 @@ package body Sem_Prag is\n \n                   if Present (CS) then\n \n-                     --  If we have multiple instances, concatenate them, but\n-                     --  not in ASIS, where we want the original tree.\n+                     --  If we have multiple instances, concatenate them.\n \n-                     if not ASIS_Mode then\n-                        Start_String (Strval (CS));\n-                        Store_String_Char (' ');\n-                        Store_String_Chars (Strval (Str));\n-                        Set_Strval (CS, End_String);\n-                     end if;\n+                     Start_String (Strval (CS));\n+                     Store_String_Char (' ');\n+                     Store_String_Chars (Strval (Str));\n+                     Set_Strval (CS, End_String);\n \n                   else\n                      Set_Ident_String (Current_Sem_Unit, Str);\n@@ -20495,8 +20483,7 @@ package body Sem_Prag is\n \n                if Present (Ename) then\n \n-                  --  If entity name matches, we are fine. Save entity in\n-                  --  pragma argument, for ASIS use.\n+                  --  If entity name matches, we are fine.\n \n                   if Chars (Ename) = Chars (Ent) then\n                      Set_Entity (Ename, Ent);\n@@ -22176,7 +22163,7 @@ package body Sem_Prag is\n \n                --  Now declare the operators. We do this during analysis rather\n                --  than expansion, since we want the operators available if we\n-               --  are operating in -gnatc or ASIS mode.\n+               --  are operating in -gnatc mode.\n \n                Declare_Shift_Operator (Name_Rotate_Left);\n                Declare_Shift_Operator (Name_Rotate_Right);\n@@ -24821,10 +24808,10 @@ package body Sem_Prag is\n \n             Add_Contract_Item (N, Subp_Id);\n \n-            --  Preanalyze the original aspect argument \"Name\" for ASIS or for\n-            --  a generic subprogram to properly capture global references.\n+            --  Preanalyze the original aspect argument \"Name\" for a generic\n+            --  subprogram to properly capture global references.\n \n-            if ASIS_Mode or else Is_Generic_Subprogram (Subp_Id) then\n+            if Is_Generic_Subprogram (Subp_Id) then\n                Asp_Arg := Test_Case_Arg (N, Name_Name, From_Aspect => True);\n \n                if Present (Asp_Arg) then\n@@ -25679,7 +25666,7 @@ package body Sem_Prag is\n                  and then Nam_In (Chars (Argx), Name_Gnat, Name_Gnatprove)\n                then\n                   if Chars (Argx) = Name_Gnat then\n-                     if CodePeer_Mode or GNATprove_Mode or ASIS_Mode then\n+                     if CodePeer_Mode or GNATprove_Mode then\n                         Rewrite (N, Make_Null_Statement (Loc));\n                         Analyze (N);\n                         raise Pragma_Exit;\n@@ -27302,13 +27289,6 @@ package body Sem_Prag is\n                Body_Outputs => Body_Outputs);\n          end if;\n \n-         --  Matching is disabled in ASIS because clauses are not normalized as\n-         --  this is a tree altering activity similar to expansion.\n-\n-         if ASIS_Mode then\n-            goto Leave;\n-         end if;\n-\n          --  Multiple dependency clauses appear as component associations of an\n          --  aggregate. Note that the clauses are copied because the algorithm\n          --  modifies them and this should not be visible in Depends.\n@@ -29361,10 +29341,10 @@ package body Sem_Prag is\n          Arg : Node_Id;\n \n       begin\n-         --  Preanalyze the original aspect argument for ASIS or for a generic\n-         --  subprogram to properly capture global references.\n+         --  Preanalyze the original aspect argument for a generic subprogram\n+         --  to properly capture global references.\n \n-         if ASIS_Mode or else Is_Generic_Subprogram (Spec_Id) then\n+         if Is_Generic_Subprogram (Spec_Id) then\n             Arg :=\n               Test_Case_Arg\n                 (Prag        => N,\n@@ -30892,14 +30872,13 @@ package body Sem_Prag is\n       Args : constant List_Id := Pragma_Argument_Associations (Prag);\n \n    begin\n-      --  Use the expression of the original aspect when compiling for ASIS or\n-      --  when analyzing the template of a generic unit. In both cases the\n-      --  aspect's tree must be decorated to allow for ASIS queries or to save\n-      --  the global references in the generic context.\n+      --  Use the expression of the original aspect when analyzing the template\n+      --  of a generic unit. In both cases the aspect's tree must be decorated\n+      --  to allow for ASIS queries or to save the global references in the\n+      --  generic context.\n \n       if From_Aspect_Specification (Prag)\n-        and then (ASIS_Mode or else (Present (Context_Id)\n-                                      and then Is_Generic_Unit (Context_Id)))\n+        and then (Present (Context_Id) and then Is_Generic_Unit (Context_Id))\n       then\n          return Corresponding_Aspect (Prag);\n \n@@ -32149,7 +32128,6 @@ package body Sem_Prag is\n       elsif Nkind (N) = N_Identifier\n         and then From_Policy\n         and then Serious_Errors_Detected = 0\n-        and then not ASIS_Mode\n       then\n          if Chars (N) = Name_Precondition\n            or else Chars (N) = Name_Postcondition"}, {"sha": "bdc449502c7a2d3f324b5a3cd83f7d72e60fdcff", "filename": "gcc/ada/sem_prag.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_prag.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_prag.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.ads?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -426,7 +426,7 @@ package Sem_Prag is\n    --  of the pragma. The argument is extracted in the following manner:\n    --\n    --    When the pragma is generated from an aspect, return the corresponding\n-   --    aspect for ASIS or when Context_Id denotes a generic unit.\n+   --    aspect when Context_Id denotes a generic unit.\n    --\n    --    Otherwise return the first argument of Prag\n    --"}, {"sha": "61dba77457f9429993404117ba6074702164a060", "filename": "gcc/ada/sem_res.adb", "status": "modified", "additions": 2, "deletions": 112, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_res.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_res.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_res.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -1751,78 +1751,6 @@ package body Sem_Res is\n       else\n          Resolve (N, Typ);\n       end if;\n-\n-      --  If in ASIS_Mode, propagate operand types to original actuals of\n-      --  function call, which would otherwise not be fully resolved. If\n-      --  the call has already been constant-folded, nothing to do. We\n-      --  relocate the operand nodes rather than copy them, to preserve\n-      --  original_node pointers, given that the operands themselves may\n-      --  have been rewritten. If the call was itself a rewriting of an\n-      --  operator node, nothing to do.\n-\n-      if ASIS_Mode\n-        and then Nkind (N) in N_Op\n-        and then Nkind (Original_Node (N)) = N_Function_Call\n-      then\n-         declare\n-            L : Node_Id;\n-            R : constant Node_Id := Right_Opnd (N);\n-\n-            Old_First : constant Node_Id :=\n-                          First (Parameter_Associations (Original_Node (N)));\n-            Old_Sec   : Node_Id;\n-\n-         begin\n-            if Is_Binary then\n-               L       := Left_Opnd (N);\n-               Old_Sec := Next (Old_First);\n-\n-               --  If the original call has named associations, replace the\n-               --  explicit actual parameter in the association with the proper\n-               --  resolved operand.\n-\n-               if Nkind (Old_First) = N_Parameter_Association then\n-                  if Chars (Selector_Name (Old_First)) =\n-                     Chars (First_Entity (Op_Id))\n-                  then\n-                     Rewrite (Explicit_Actual_Parameter (Old_First),\n-                       Relocate_Node (L));\n-                  else\n-                     Rewrite (Explicit_Actual_Parameter (Old_First),\n-                       Relocate_Node (R));\n-                  end if;\n-\n-               else\n-                  Rewrite (Old_First, Relocate_Node (L));\n-               end if;\n-\n-               if Nkind (Old_Sec) = N_Parameter_Association then\n-                  if Chars (Selector_Name (Old_Sec)) =\n-                     Chars (First_Entity (Op_Id))\n-                  then\n-                     Rewrite (Explicit_Actual_Parameter (Old_Sec),\n-                       Relocate_Node (L));\n-                  else\n-                     Rewrite (Explicit_Actual_Parameter (Old_Sec),\n-                       Relocate_Node (R));\n-                  end if;\n-\n-               else\n-                  Rewrite (Old_Sec, Relocate_Node (R));\n-               end if;\n-\n-            else\n-               if Nkind (Old_First) = N_Parameter_Association then\n-                  Rewrite (Explicit_Actual_Parameter (Old_First),\n-                    Relocate_Node (R));\n-               else\n-                  Rewrite (Old_First, Relocate_Node (R));\n-               end if;\n-            end if;\n-         end;\n-\n-         Set_Parent (Original_Node (N), Parent (N));\n-      end if;\n    end Make_Call_Into_Operator;\n \n    -------------------\n@@ -8847,47 +8775,9 @@ package body Sem_Res is\n \n    procedure Resolve_Generalized_Indexing (N : Node_Id; Typ : Entity_Id) is\n       Indexing : constant Node_Id := Generalized_Indexing (N);\n-      Call     : Node_Id;\n-      Indexes  : List_Id;\n-      Pref     : Node_Id;\n-\n    begin\n-      --  In ASIS mode, propagate the information about the indexes back to\n-      --  to the original indexing node. The generalized indexing is either\n-      --  a function call, or a dereference of one. The actuals include the\n-      --  prefix of the original node, which is the container expression.\n-\n-      if ASIS_Mode then\n-         Resolve (Indexing, Typ);\n-         Set_Etype  (N, Etype (Indexing));\n-         Set_Is_Overloaded (N, False);\n-\n-         Call := Indexing;\n-         while Nkind_In (Call, N_Explicit_Dereference, N_Selected_Component)\n-         loop\n-            Call := Prefix (Call);\n-         end loop;\n-\n-         if Nkind (Call) = N_Function_Call then\n-            Indexes := New_Copy_List (Parameter_Associations (Call));\n-            Pref := Remove_Head (Indexes);\n-            Set_Expressions (N, Indexes);\n-\n-            --  If expression is to be reanalyzed, reset Generalized_Indexing\n-            --  to recreate call node, as is the case when the expression is\n-            --  part of an expression function.\n-\n-            if In_Spec_Expression then\n-               Set_Generalized_Indexing (N, Empty);\n-            end if;\n-\n-            Set_Prefix (N, Pref);\n-         end if;\n-\n-      else\n-         Rewrite (N, Indexing);\n-         Resolve (N, Typ);\n-      end if;\n+      Rewrite (N, Indexing);\n+      Resolve (N, Typ);\n    end Resolve_Generalized_Indexing;\n \n    ---------------------------"}, {"sha": "12f2038e6bad4eebcf6c117cd6cfecfa7c5b8650", "filename": "gcc/ada/sem_type.adb", "status": "modified", "additions": 1, "deletions": 26, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_type.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_type.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_type.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -958,32 +958,7 @@ package body Sem_Type is\n             --  Note: test for presence of E is defense against previous error.\n \n             if No (E) then\n-\n-               --  If expansion is disabled the Corresponding_Record_Type may\n-               --  not be available yet, so use the interface list in the\n-               --  declaration directly.\n-\n-               if ASIS_Mode\n-                 and then Nkind (Parent (BT2)) = N_Protected_Type_Declaration\n-                 and then Present (Interface_List (Parent (BT2)))\n-               then\n-                  declare\n-                     Intf : Node_Id := First (Interface_List (Parent (BT2)));\n-                  begin\n-                     while Present (Intf) loop\n-                        if Is_Ancestor (Etype (T1), Entity (Intf)) then\n-                           return True;\n-                        else\n-                           Next (Intf);\n-                        end if;\n-                     end loop;\n-                  end;\n-\n-                  return False;\n-\n-               else\n-                  Check_Error_Detected;\n-               end if;\n+               Check_Error_Detected;\n \n             --  Here we have a corresponding record type\n "}, {"sha": "174bbccc387fcbdef7303b171573a6483efdb074", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -1899,12 +1899,6 @@ package body Sem_Util is\n       if Present (Elaboration_Entity (Spec_Id)) then\n          return;\n \n-      --  Ignore in ASIS mode, elaboration entity is not in source and plays\n-      --  no role in analysis.\n-\n-      elsif ASIS_Mode then\n-         return;\n-\n       --  Do not generate an elaboration entity in GNATprove move because the\n       --  elaboration counter is a form of expansion.\n \n@@ -20121,12 +20115,6 @@ package body Sem_Util is\n       if Legacy_Elaboration_Checks then\n          return False;\n \n-      --  No marker needs to be created for ASIS because ABE diagnostics and\n-      --  checks are not performed in this mode.\n-\n-      elsif ASIS_Mode then\n-         return False;\n-\n       --  No marker needs to be created when the reference is preanalyzed\n       --  because the marker will be inserted in the wrong place.\n "}, {"sha": "8c115b7f0b199837a6f40a5340a914214e1063a9", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 23, "deletions": 98, "changes": 121, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -381,7 +381,8 @@ package Sinfo is\n    --  subprogram instance, and the other is an anonymous subprogram nested\n    --  within a wrapper package that contains the renamings for the actuals.\n    --  Both of these entities have the Sloc of the defining entity in the\n-   --  instantiation node. This simplifies some ASIS queries.\n+   --  instantiation node. This simplified for instance in the past some ASIS\n+   --  queries.\n \n    -----------------------\n    -- Field Definitions --\n@@ -458,72 +459,6 @@ package Sinfo is\n    --  code is being generated, since they involved expander actions that\n    --  destroy the tree.\n \n-   ---------------\n-   -- ASIS Mode --\n-   ---------------\n-\n-   --  When a file is compiled in ASIS mode (-gnatct), expansion is skipped,\n-   --  and the analysis must generate a tree in a form that meets all ASIS\n-   --  requirements.\n-\n-   --  ASIS must be able to recover the original tree that corresponds to the\n-   --  source. It relies heavily on Original_Node for this purpose, which as\n-   --  described in Atree, records the history when a node is rewritten. ASIS\n-   --  uses Original_Node to recover the original node before the Rewrite.\n-\n-   --  At least in ASIS mode (not really important in non-ASIS mode), when\n-   --  N1 is rewritten as N2:\n-\n-   --    The subtree rooted by the original node N1 should be fully decorated,\n-   --    i.e. all semantic fields noted in sinfo.ads should be set properly\n-   --    and any referenced entities should be complete (with exceptions for\n-   --    representation information, noted below).\n-\n-   --    For all the direct descendants of N1 (original node) their Parent\n-   --    links should point not to N1, but to N2 (rewriting node).\n-\n-   --    The Parent links of rewritten nodes (N1 in this example) are set in\n-   --    some cases (to point to the rewritten parent), but in other cases\n-   --    they are set to Empty. This needs sorting out ??? It would be much\n-   --    cleaner if they could always be set in the original node ???\n-\n-   --  There are a few cases when ASIS has to use not the original, but the\n-   --  rewritten tree structures. This happens when because of some important\n-   --  technical reasons it is impossible or very hard to have the original\n-   --  structure properly decorated by semantic information, and the rewritten\n-   --  structure fully reproduces the original source. Below is the (incomplete\n-   --  for the moment???) list of such exceptions:\n-   --\n-   --    Generic specifications and generic bodies\n-   --    Function calls that use prefixed notation (Operand.Operation [(...)])\n-\n-   --  Representation Information\n-\n-   --    For the purposes of the data description annex, the representation\n-   --    information for source declared entities must be complete in the\n-   --    ASIS tree.\n-\n-   --    This requires that the front end call the back end (gigi/gcc) in\n-   --    a special \"back annotate only\" mode to obtain information on layout\n-   --    from the back end.\n-\n-   --    For the purposes of this special \"back annotate only\" mode, the\n-   --    requirements that would normally need to be met to generate code\n-   --    are relaxed as follows:\n-\n-   --      Anonymous types need not have full representation information (e.g.\n-   --      sizes need not be set for types where the front end would normally\n-   --      set the sizes), since anonymous types can be ignored in this mode.\n-\n-   --      In this mode, gigi will see at least fragments of a fully annotated\n-   --      unexpanded tree. This means that it will encounter nodes it does\n-   --      not normally handle (such as stubs, task bodies etc). It should\n-   --      simply ignore these nodes, since they are not relevant to the task\n-   --      of back annotating representation information.\n-\n-   --  Some other ASIS-specific issues are covered in specific comments in\n-   --  sections for particular nodes or flags.\n-\n    ----------------\n    -- Ghost Mode --\n    ----------------\n@@ -750,15 +685,15 @@ package Sinfo is\n    --  These three flags are always set by the front end during semantic\n    --  analysis, on expression nodes that may trigger the corresponding\n    --  check. The front end then inserts or not the check during expansion. In\n-   --  particular, these flags should also be correctly set in ASIS mode and\n-   --  GNATprove mode. As a special case, the front end does not insert a\n-   --  Do_Division_Check flag on float exponentiation expressions, for the case\n-   --  where the value is 0.0 and the exponent is negative, although this case\n-   --  does lead to a division check failure. As another special case,\n-   --  the front end does not insert a Do_Range_Check on an allocator where\n-   --  the designated type is scalar, and the designated type is more\n-   --  constrained than the type of the initialized allocator value or the type\n-   --  of the default value for an uninitialized allocator.\n+   --  particular, these flags should also be correctly set in GNATprove mode.\n+   --  As a special case, the front end does not insert a Do_Division_Check\n+   --  flag on float exponentiation expressions, for the case where the value\n+   --  is 0.0 and the exponent is negative, although this case does lead to a\n+   --  division check failure. As another special case, the front end does not\n+   --  insert a Do_Range_Check on an allocator where the designated type is\n+   --  scalar, and the designated type is more constrained than the type of the\n+   --  initialized allocator value or the type of the default value for an\n+   --  uninitialized allocator.\n \n    --  Note that the expander always takes care of the Do_Range_Check case, so\n    --  this flag will never be set in the expanded tree passed to the back end.\n@@ -1120,8 +1055,7 @@ package Sinfo is\n    --    map generic formals to their actuals. If set, the field points either\n    --    to a copy of a default expression for an actual of mode IN or to a\n    --    generic_association which is the original parent of the expression or\n-   --    name appearing in the declaration. This simplifies ASIS and GNATprove\n-   --    queries.\n+   --    name appearing in the declaration. This simplifies GNATprove queries.\n \n    --  Corresponding_Integer_Value (Uint4-Sem)\n    --    This field is set in real literals of fixed-point types (it is not\n@@ -1487,8 +1421,7 @@ package Sinfo is\n    --    attribute is a function call (possibly dereferenced) that corresponds\n    --    to the proper expansion of the source indexing operation. Before\n    --    expansion, the source node is rewritten as the resolved generalized\n-   --    indexing. In ASIS mode, the expansion does not take place, so that\n-   --    the source is preserved and properly annotated with types.\n+   --    indexing.\n \n    --  Generic_Parent (Node5-Sem)\n    --    Generic_Parent is defined on declaration nodes that are instances. The\n@@ -2028,10 +1961,9 @@ package Sinfo is\n    --  Label_Construct (Node2-Sem)\n    --    Used in an N_Implicit_Label_Declaration node. Refers to an N_Label,\n    --    N_Block_Statement or N_Loop_Statement node to which the label\n-   --    declaration applies. This attribute is used both in the compiler and\n-   --    in the implementation of ASIS queries. The field is left empty for the\n-   --    special labels generated as part of expanding raise statements with a\n-   --    local exception handler.\n+   --    declaration applies. The field is left empty for the special labels\n+   --    generated as part of expanding raise statements with a local exception\n+   --    handler.\n \n    --  Library_Unit (Node4-Sem)\n    --    In a stub node, Library_Unit points to the compilation unit node of\n@@ -2251,7 +2183,7 @@ package Sinfo is\n    --    Original_Entity is empty. This field is needed to handle properly\n    --    named numbers in generic units, where the Associated_Node field\n    --    interferes with the Entity field, making it impossible to preserve the\n-   --    original entity at the point of instantiation (ASIS problem).\n+   --    original entity at the point of instantiation.\n \n    --  Others_Discrete_Choices (List1-Sem)\n    --    When a case statement or variant is analyzed, the semantic checks\n@@ -2289,8 +2221,8 @@ package Sinfo is\n    --    values, this expression evaluates to False (zero) if variant is not\n    --    present, and True (non-zero) if it is present. See unit Repinfo for\n    --    further details on gigi back annotation. This field is used during\n-   --    ASIS processing (data decomposition annex) to determine if a field is\n-   --    present or not.\n+   --    back-annotation processing (for -gnatR -gnatc) to determine if a field\n+   --    is present or not.\n \n    --  Prev_Use_Clause (Node1-Sem)\n    --    Present in both N_Use_Package_Clause and N_Use_Type_Clause. Used in\n@@ -2502,10 +2434,7 @@ package Sinfo is\n    --  Was_Expression_Function (Flag18-Sem)\n    --    Present in N_Subprogram_Body. True if the original source had an\n    --    N_Expression_Function, which was converted to the N_Subprogram_Body\n-   --    by Analyze_Expression_Function. This is needed by ASIS to correctly\n-   --    recreate the expression function (for the instance body) when the\n-   --    completion of a generic function declaration is an expression\n-   --    function.\n+   --    by Analyze_Expression_Function.\n \n    --  Was_Originally_Stub (Flag13-Sem)\n    --    This flag is set in the node for a proper body that replaces stub.\n@@ -3697,9 +3626,7 @@ package Sinfo is\n       --  Note: in the list of Discrete_Choices, the tree passed to the back\n       --  end does not have choice entries corresponding to names of statically\n       --  predicated subtypes. Such entries are always expanded out to the list\n-      --  of equivalent values or ranges. The ASIS tree generated in -gnatct\n-      --  mode also has this expansion, but done with a proper Rewrite call on\n-      --  the N_Variant node so that ASIS can properly retrieve the original.\n+      --  of equivalent values or ranges.\n \n       ---------------------------------\n       -- 3.8.1  Discrete Choice List --\n@@ -5091,8 +5018,7 @@ package Sinfo is\n       --  Note: in the list of Discrete_Choices, the tree passed to the back\n       --  end does not have choice entries corresponding to names of statically\n       --  predicated subtypes. Such entries are always expanded out to the list\n-      --  of equivalent values or ranges. The ASIS tree generated in -gnatct\n-      --  mode does not have this expansion, and has the original choices.\n+      --  of equivalent values or ranges.\n \n       -------------------------\n       -- 5.5  Loop Statement --\n@@ -6769,8 +6695,7 @@ package Sinfo is\n       --  limited with clause is changed into a normal with clause, because we\n       --  are not prepared to deal with limited with in the context of Rtsfind.\n       --  So in this case, the Limited_Present flag will be False in the final\n-      --  tree. However, we do NOT do this transformation in ASIS mode, so for\n-      --  ASIS the flag will remain set in this situation.\n+      --  tree.\n \n       ----------------------\n       -- With_Type clause --"}, {"sha": "49676918176f80896b59e75bd550f9c12aac0f86", "filename": "gcc/ada/stand.ads", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fstand.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Fstand.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstand.ads?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -52,7 +52,7 @@ package Stand is\n \n       --  Types and subtypes defined in package Standard (in the order in which\n       --  they appear in the RM, so that the declarations are in the right\n-      --  order for the purposes of ASIS traversals\n+      --  order for the purposes of e.g. ASIS traversals\n \n       S_Boolean,\n "}, {"sha": "fb7fbc5a54eca08f8945884cb33471854f8b9e46", "filename": "gcc/ada/tree_io.ads", "status": "modified", "additions": 2, "deletions": 21, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Ftree_io.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f1ca2e3d8778cd3e756ae3fe100313f43d081b/gcc%2Fada%2Ftree_io.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ftree_io.ads?ref=65f1ca2e3d8778cd3e756ae3fe100313f43d081b", "patch": "@@ -34,6 +34,8 @@\n --  create and close routines are elsewhere (in Osint in the compiler, and in\n --  the tree read driver for the tree read interface).\n \n+--  Should we remove this package altogether???\n+\n with Types;  use Types;\n with System; use System;\n \n@@ -47,27 +49,6 @@ package Tree_IO is\n    Tree_Format_Error : exception;\n    --  Raised if a format error is detected in the input file\n \n-   ASIS_Version_Number : constant := 34;\n-   --  ASIS Version. This is used to check for consistency between the compiler\n-   --  used to generate trees and an ASIS application that is reading the\n-   --  trees. It must be incremented whenever a change is made to the tree\n-   --  format that would result in the compiler being incompatible with an\n-   --  older version of ASIS.\n-   --\n-   --  27  Changes in the tree structures for expression functions\n-   --  28  Changes in Snames\n-   --  29  Changes in Sem_Ch3 (tree copying in case of discriminant constraint\n-   --      for concurrent types).\n-   --  30  Add Check_Float_Overflow boolean to tree file\n-   --  31  Remove read/write of Debug_Pragmas_Disabled/Debug_Pragmas_Enabled\n-   --  32  Change the way entities are changed through Next_Entity field in\n-   --      the hierarchy of child units\n-   --  33  Add copying subtrees for rewriting infix calls of operator\n-   --      functions for the corresponding original nodes.\n-   --  34  Add read/write of Address_Is_Private, Ignore_Rep_Clauses,\n-   --      Ignore_Style_Check_Pragmas, Multiple_Unit_Index. Also this\n-   --      is the version where rep clauses are removed by -gnatI.\n-\n    procedure Tree_Read_Initialize (Desc : File_Descriptor);\n    --  Called to initialize reading of a tree file. This call must be made\n    --  before calls to Tree_Read_xx. No calls to Tree_Write_xx are permitted"}]}