{"sha": "be82759165691e01352cab8d9b9c20a75e69514d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmU4Mjc1OTE2NTY5MWUwMTM1MmNhYjhkOWI5YzIwYTc1ZTY5NTE0ZA==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-11-25T21:50:53Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2010-11-25T21:50:53Z"}, "message": "gengtype-state.c (read_state_structures): Initialize \"previous\".\n\n\t* gengtype-state.c (read_state_structures): Initialize \"previous\".\n\nFrom-SVN: r167153", "tree": {"sha": "eaf869382226c3b4dbd106f86ff7b8a5bd970fe0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/eaf869382226c3b4dbd106f86ff7b8a5bd970fe0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/be82759165691e01352cab8d9b9c20a75e69514d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be82759165691e01352cab8d9b9c20a75e69514d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be82759165691e01352cab8d9b9c20a75e69514d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be82759165691e01352cab8d9b9c20a75e69514d/comments", "author": null, "committer": null, "parents": [{"sha": "afe96d415d8a08ec2f428bdea0cfaa88207e4b6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/afe96d415d8a08ec2f428bdea0cfaa88207e4b6e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/afe96d415d8a08ec2f428bdea0cfaa88207e4b6e"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "2ad248b45cacda8e42501910910f15e8ca359471", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be82759165691e01352cab8d9b9c20a75e69514d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be82759165691e01352cab8d9b9c20a75e69514d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=be82759165691e01352cab8d9b9c20a75e69514d", "patch": "@@ -1,7 +1,11 @@\n+2010-11-25  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* gengtype-state.c (read_state_structures): Initialize \"previous\".\n+\n 2010-11-25  Basile Starynkevitch  <basile@starynkevitch.net>\n \t    Jeremie Salvucci  <jeremie.salvucci@free.fr>\n \n-\t* gentype-state.c: Add new file.\n+\t* gengtype-state.c: Add new file.\n \n \t* gengtype.c (type count): New variable.\n \t(new_structure, find_param_structure, create_pointer)\n@@ -65,14 +69,12 @@\n \t* opts.c (finish_options): Pass opts to targetm.except_unwind_info\n \tand targetm.supports_split_stack.  Remove assertions about opts\n \tand opts_set.\n-\t(common_handle_option): Remove assertions about opts, opts_set and\n-\tdc.\n+\t(common_handle_option): Remove assertions about opts, opts_set and dc.\n \t* tree-tailcall.c (suitable_for_tail_call_opt_p): Pass\n \t&global_options to targetm.except_unwind_info.\n \t* tree.c (build_common_builtin_nodes: Pass &global_options to\n \ttargetm.except_unwind_info.\n-\t* config/arm/arm.c (arm_except_unwind_info): Add gcc_options\n-\tparameter.\n+\t* config/arm/arm.c (arm_except_unwind_info): Add gcc_options parameter.\n \t(arm_compute_func_type, arm_expand_prologue, thumb_pushpop,\n \tthumb1_expand_prologue, thumb1_output_function_prologue,\n \tarm_unwind_emit, arm_output_fn_unwind): Update calls to\n@@ -185,7 +187,7 @@\n \tPR target/46519\n \t* config/i386/i386.c (upper_128bits_state): New.\n \t(block_info_def): Remove upper_128bits_set and done.  Add state,\n-\treferenced, count, processed and rescanned. \n+\treferenced, count, processed and rescanned.\n \t(check_avx256_stores): Updated.\n \t(move_or_delete_vzeroupper_2): Updated. Handle deleted BB_END.\n \tCall note_stores only if needed.  Set referenced and count.\n@@ -483,9 +485,8 @@\n \t(write_roots, note_def_vec, dump_options): Adjust for\n \tdiscriminated option.\n \n-\t* gengtype.h\n-\t(typedefs, structures, param_structs, variables, enum typekind):\n-\tMove from gengtype.c\n+\t* gengtype.h (typedefs, structures, param_structs, variables\n+\tenum typekind): Move from gengtype.c\n \t(enum option_kind): New discriminating enumeration.\n \t(struct options): Becomes discriminated.\n \t(struct nested_ptr_data): Nove from gengtype.c\n@@ -528,8 +529,7 @@\n \tdebug_info_levels.\n \t* flags.h (write_symbols, debug_info_level,\n \tuse_gnu_debug_info_extensions): Remove declarations.\n-\t* opts.c (exit_after_options, write_symbols, debug_info_level):\n-\tRemove.\n+\t* opts.c (exit_after_options, write_symbols, debug_info_level): Remove.\n \t(set_struct_debug_option): Make static variables const.\n \t(use_gnu_debug_info_extensions): Remove.\n \t(set_debug_level, print_filtered_help, print_specific_help,\n@@ -604,7 +604,7 @@\n \tno collection_rec is passed.\n \t(df_ref_record): Do not create multiword hard reg info when no\n \tcollection_rec is passed.\n-\t(df_uses_create): New. \n+\t(df_uses_create): New.\n \n 2010-11-21  Uros Bizjak  <ubizjak@gmail.com>\n \n@@ -23892,7 +23892,7 @@\n \t(ggc_common.o, ggc-page.o, ggc-zone.o, stringpool.o): Add\n \t$(GGC_INTERNAL_H) to dependencies.\n \n-\t* gentype.c: Update copyright year.\n+\t* gengtype.c: Update copyright year.\n \t(walk_type): Accept variable_size GTY option.\n \t(USED_BY_TYPED_GC_P): New macro.\n \t(write_enum_defn): Use USED_BY_TYPED_GC_P.  Do not output"}, {"sha": "07c880258a69f4487cd9ef16424925a74dc87341", "filename": "gcc/gengtype-state.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/be82759165691e01352cab8d9b9c20a75e69514d/gcc%2Fgengtype-state.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/be82759165691e01352cab8d9b9c20a75e69514d/gcc%2Fgengtype-state.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgengtype-state.c?ref=be82759165691e01352cab8d9b9c20a75e69514d", "patch": "@@ -2085,7 +2085,7 @@ static void\n read_state_structures (type_p *structures)\n {\n   type_p head = NULL;\n-  type_p previous;\n+  type_p previous = NULL;\n   type_p tmp;\n   int nbstruct = 0, countstruct = 0;\n   struct state_token_st *t0 = peek_state_token (0);"}]}