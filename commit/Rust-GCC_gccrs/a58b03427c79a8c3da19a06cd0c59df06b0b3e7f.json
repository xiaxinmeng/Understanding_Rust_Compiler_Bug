{"sha": "a58b03427c79a8c3da19a06cd0c59df06b0b3e7f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTU4YjAzNDI3Yzc5YThjM2RhMTlhMDZjZDBjNTlkZjA2YjBiM2U3Zg==", "commit": {"author": {"name": "Alexandre Oliva", "email": "aoliva@redhat.com", "date": "2006-02-07T06:51:39Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2006-02-07T06:51:39Z"}, "message": "re PR debug/24444 (invalid register in debug info)\n\n2006-02-07  Alexandre Oliva  <aoliva@redhat.com>\n\n\tPR debug/24444\n\t* config/ia64/unwind-ia64.c: Revert last change.\n\t* config/ia64/ia64.h (ARG_POINTER_CFA_OFFSET): Removed.\n\t(INCOMING_FRAME_SP_OFFSET): Define.\n\nFrom-SVN: r110688", "tree": {"sha": "639c982f79badea45d2df9ea9e64fd609ce3d9ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/639c982f79badea45d2df9ea9e64fd609ce3d9ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a58b03427c79a8c3da19a06cd0c59df06b0b3e7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a58b03427c79a8c3da19a06cd0c59df06b0b3e7f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a58b03427c79a8c3da19a06cd0c59df06b0b3e7f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a58b03427c79a8c3da19a06cd0c59df06b0b3e7f/comments", "author": null, "committer": null, "parents": [{"sha": "b38a05d08306bd2a0b81e1a59e0d7b3d66ddaca2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b38a05d08306bd2a0b81e1a59e0d7b3d66ddaca2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b38a05d08306bd2a0b81e1a59e0d7b3d66ddaca2"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "94ba94682d1d40a71348811b2e4ad7aca468a6ed", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a58b03427c79a8c3da19a06cd0c59df06b0b3e7f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a58b03427c79a8c3da19a06cd0c59df06b0b3e7f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a58b03427c79a8c3da19a06cd0c59df06b0b3e7f", "patch": "@@ -1,3 +1,10 @@\n+2006-02-07  Alexandre Oliva  <aoliva@redhat.com>\n+\n+\tPR debug/24444\n+\t* config/ia64/unwind-ia64.c: Revert last change.\n+\t* config/ia64/ia64.h (ARG_POINTER_CFA_OFFSET): Removed.\n+\t(INCOMING_FRAME_SP_OFFSET): Define.\n+\n 2006-02-06  Roger Sayle  <roger@eyesopen.com>\n \n \t* config/ia64/ia64.c (hfa_element_mode): Don't handle CHAR_TYPE."}, {"sha": "0ec6c96e5835e2c6ed28940583afecf3c287464d", "filename": "gcc/config/ia64/ia64.h", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a58b03427c79a8c3da19a06cd0c59df06b0b3e7f/gcc%2Fconfig%2Fia64%2Fia64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a58b03427c79a8c3da19a06cd0c59df06b0b3e7f/gcc%2Fconfig%2Fia64%2Fia64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Fia64.h?ref=a58b03427c79a8c3da19a06cd0c59df06b0b3e7f", "patch": "@@ -981,12 +981,6 @@ enum reg_class\n    On some machines it may depend on the data type of the function.  */\n #define FIRST_PARM_OFFSET(FUNDECL) 0\n \n-/* The CFA is defined as the SP at the call site, so we have to take\n-   into account that the first argument pointer is\n-   STACK_POINTER_OFFSET bytes off the stack pointer.  */\n-#define ARG_POINTER_CFA_OFFSET(FNDECL) \\\n-  (FIRST_PARM_OFFSET (FNDECL) - STACK_POINTER_OFFSET)\n-\n /* A C expression whose value is RTL representing the value of the return\n    address for the frame COUNT steps up from the current frame, after the\n    prologue.  */\n@@ -1022,7 +1016,9 @@ enum reg_class\n    beginning of any function, before the prologue.  The top of the frame is\n    defined to be the value of the stack pointer in the previous frame, just\n    before the call instruction.  */\n-#define INCOMING_FRAME_SP_OFFSET 0\n+/* The CFA is past the red zone, not at the entry-point stack\n+   pointer.  */\n+#define INCOMING_FRAME_SP_OFFSET STACK_POINTER_OFFSET\n \n \f\n /* Register That Address the Stack Frame.  */"}, {"sha": "302f0d149278b4b72e0d9b752db4110010c85d0f", "filename": "gcc/config/ia64/unwind-ia64.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a58b03427c79a8c3da19a06cd0c59df06b0b3e7f/gcc%2Fconfig%2Fia64%2Funwind-ia64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a58b03427c79a8c3da19a06cd0c59df06b0b3e7f/gcc%2Fconfig%2Fia64%2Funwind-ia64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fia64%2Funwind-ia64.c?ref=a58b03427c79a8c3da19a06cd0c59df06b0b3e7f", "patch": "@@ -2067,7 +2067,7 @@ uw_advance_context (struct _Unwind_Context *context, _Unwind_FrameState *fs)\n }\n \n /* Fill in CONTEXT for top-of-stack.  The only valid registers at this\n-   level will be the return address and the CFA.  */\n+   level will be the return address and the CFA.  Note that CFA = SP+16.  */\n    \n #define uw_init_context(CONTEXT)\t\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\t\\\n@@ -2083,7 +2083,7 @@ uw_init_context_1 (struct _Unwind_Context *context, void *bsp)\n {\n   void *rp = __builtin_extract_return_addr (__builtin_return_address (0));\n   /* Set psp to the caller's stack pointer.  */\n-  void *psp = __builtin_dwarf_cfa ();\n+  void *psp = __builtin_dwarf_cfa () - 16;\n   _Unwind_FrameState fs;\n   unsigned long rnat, tmp1, tmp2;\n "}]}