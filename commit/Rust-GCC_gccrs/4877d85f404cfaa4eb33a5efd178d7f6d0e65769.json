{"sha": "4877d85f404cfaa4eb33a5efd178d7f6d0e65769", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg3N2Q4NWY0MDRjZmFhNGViMzNhNWVmZDE3OGQ3ZjZkMGU2NTc2OQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-19T10:55:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2014-02-19T10:55:33Z"}, "message": "[multiple changes]\n\n2014-02-19  Gary Dismukes  <dismukes@adacore.com>\n\n\t* gnat_rm.texi: Minor spelling fixes.\n\n2014-02-19  Doug Rupp  <rupp@adacore.com>\n\n\t* init.c: Remove unneeded code.\n\t* fe.h (Float_Format): New macro\n\t* gcc-interface/trans.c (gigi): On VMS, set vms_float_format.\n\nFrom-SVN: r207887", "tree": {"sha": "33cbef6918a24c7e036710b3aacd30c1aac72af0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/33cbef6918a24c7e036710b3aacd30c1aac72af0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4877d85f404cfaa4eb33a5efd178d7f6d0e65769", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4877d85f404cfaa4eb33a5efd178d7f6d0e65769", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4877d85f404cfaa4eb33a5efd178d7f6d0e65769", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4877d85f404cfaa4eb33a5efd178d7f6d0e65769/comments", "author": null, "committer": null, "parents": [{"sha": "f660fba6af9ac165d3e02c0a9083c9e0897e0c52", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f660fba6af9ac165d3e02c0a9083c9e0897e0c52", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f660fba6af9ac165d3e02c0a9083c9e0897e0c52"}], "stats": {"total": 24, "additions": 18, "deletions": 6}, "files": [{"sha": "21269956a65e500ae6cd066a16c6931bdfcc9ed8", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4877d85f404cfaa4eb33a5efd178d7f6d0e65769/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4877d85f404cfaa4eb33a5efd178d7f6d0e65769/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=4877d85f404cfaa4eb33a5efd178d7f6d0e65769", "patch": "@@ -1,3 +1,13 @@\n+2014-02-19  Gary Dismukes  <dismukes@adacore.com>\n+\n+\t* gnat_rm.texi: Minor spelling fixes.\n+\n+2014-02-19  Doug Rupp  <rupp@adacore.com>\n+\n+\t* init.c: Remove unneeded code.\n+\t* fe.h (Float_Format): New macro\n+\t* gcc-interface/trans.c (gigi): On VMS, set vms_float_format.\n+\n 2014-02-19  Hristian Kirtchev  <kirtchev@adacore.com>\n \n \t* sem_prag.adb (Check_Refined_Global_Item):"}, {"sha": "9b38903f9a5b149a2ca75a8210fee22eac460553", "filename": "gcc/ada/fe.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4877d85f404cfaa4eb33a5efd178d7f6d0e65769/gcc%2Fada%2Ffe.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4877d85f404cfaa4eb33a5efd178d7f6d0e65769/gcc%2Fada%2Ffe.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffe.h?ref=4877d85f404cfaa4eb33a5efd178d7f6d0e65769", "patch": "@@ -184,6 +184,7 @@ extern Boolean In_Same_Source_Unit              (Node_Id, Node_Id);\n #define Exception_Mechanism            opt__exception_mechanism\n #define Generate_SCO_Instance_Table    opt__generate_sco_instance_table\n #define Global_Discard_Names           opt__global_discard_names\n+#define Float_Format                   opt__float_format\n \n typedef enum {Setjmp_Longjmp, Back_End_Exceptions} Exception_Mechanism_Type;\n \n@@ -193,6 +194,7 @@ extern Boolean Exception_Locations_Suppressed;\n extern Exception_Mechanism_Type Exception_Mechanism;\n extern Boolean Generate_SCO_Instance_Table;\n extern Boolean Global_Discard_Names;\n+extern Char Float_Format;\n \n /* restrict: */\n "}, {"sha": "d2446b1a5370cc0f4131272c43f198e73b78552b", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4877d85f404cfaa4eb33a5efd178d7f6d0e65769/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4877d85f404cfaa4eb33a5efd178d7f6d0e65769/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=4877d85f404cfaa4eb33a5efd178d7f6d0e65769", "patch": "@@ -316,6 +316,10 @@ gigi (Node_Id gnat_root,\n \n   type_annotate_only = (gigi_operating_mode == 1);\n \n+#if TARGET_ABI_OPEN_VMS\n+  vms_float_format = Float_Format;\n+#endif\n+\n   for (i = 0; i < number_file; i++)\n     {\n       /* Use the identifier table to make a permanent copy of the filename as"}, {"sha": "89ed0d37447ab91944a8b432bc7b383f112fe341", "filename": "gcc/ada/gnat_rm.texi", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4877d85f404cfaa4eb33a5efd178d7f6d0e65769/gcc%2Fada%2Fgnat_rm.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4877d85f404cfaa4eb33a5efd178d7f6d0e65769/gcc%2Fada%2Fgnat_rm.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgnat_rm.texi?ref=4877d85f404cfaa4eb33a5efd178d7f6d0e65769", "patch": "@@ -14273,9 +14273,9 @@ for a particular subtype. Consider this example:\n \n @noindent\n By default, @code{RAB}\n-has a size of 1 (sufficient to accomodate the representation\n+has a size of 1 (sufficient to accommodate the representation\n of @code{A} and @code{B}, 0 and 1), and @code{REF}\n-has a size of 3 (sufficient to accomodate the representation\n+has a size of 3 (sufficient to accommodate the representation\n of @code{E} and @code{F}, 4 and 5). But if we add the\n following @code{Value_Size} attribute definition clause:\n "}, {"sha": "e943837d07a583590433d05e0b266433d171b4d2", "filename": "gcc/ada/init.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4877d85f404cfaa4eb33a5efd178d7f6d0e65769/gcc%2Fada%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4877d85f404cfaa4eb33a5efd178d7f6d0e65769/gcc%2Fada%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Finit.c?ref=4877d85f404cfaa4eb33a5efd178d7f6d0e65769", "patch": "@@ -809,7 +809,6 @@ void (*__gnat_ctrl_c_handler) (void) = 0;\n /* Masks for facility identification. */\n #define FAC_MASK  \t\t0x0fff0000\n #define DECADA_M_FACILITY\t0x00310000\n-#define SEVERITY_MASK\t\t0x7\n \n /* Define macro symbols for the VMS conditions that become Ada exceptions.\n    It would be better to just include <ssdef.h> */\n@@ -1069,9 +1068,6 @@ __gnat_default_resignal_p (int code)\n     if ((code & FAC_MASK) == facility_resignal_table [i])\n       return 1;\n \n-  if ((code & SEVERITY_MASK) == 1 || (code & SEVERITY_MASK) == 3)\n-    return 1;\n-\n   for (i = 0, iexcept = 0;\n        cond_resignal_table [i]\n \t&& !(iexcept = LIB$MATCH_COND (&code, &cond_resignal_table [i]));"}]}