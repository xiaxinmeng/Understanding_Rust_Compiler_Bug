{"sha": "349c29b595de514c675f79f270206184ca17b26f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzQ5YzI5YjU5NWRlNTE0YzY3NWY3OWYyNzAyMDYxODRjYTE3YjI2Zg==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@axis.se", "date": "1999-11-10T07:53:20Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1999-11-10T07:53:20Z"}, "message": "invoke.texi (C Dialect Options): Add missing builtins from c-common.c to list.\n\n        * invoke.texi (C Dialect Options): Add missing builtins from\n        c-common.c to list.\n        * extend.texi (Other Builtins): Copy to this list.\n\nFrom-SVN: r30470", "tree": {"sha": "ab42416a38f28070741d1a3017e29fde4d63442f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab42416a38f28070741d1a3017e29fde4d63442f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/349c29b595de514c675f79f270206184ca17b26f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/349c29b595de514c675f79f270206184ca17b26f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/349c29b595de514c675f79f270206184ca17b26f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/349c29b595de514c675f79f270206184ca17b26f/comments", "author": null, "committer": null, "parents": [{"sha": "052777b9ae1e0a70f36ea3187c0dae7d12075855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/052777b9ae1e0a70f36ea3187c0dae7d12075855", "html_url": "https://github.com/Rust-GCC/gccrs/commit/052777b9ae1e0a70f36ea3187c0dae7d12075855"}], "stats": {"total": 41, "additions": 30, "deletions": 11}, "files": [{"sha": "0c1545a506a5e6b4823ddcdc73b5f10e5a2f9027", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/349c29b595de514c675f79f270206184ca17b26f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/349c29b595de514c675f79f270206184ca17b26f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=349c29b595de514c675f79f270206184ca17b26f", "patch": "@@ -1,3 +1,9 @@\n+Wed Nov 10 00:51:41 1999  Hans-Peter Nilsson  <hp@axis.se>\n+\n+\t* invoke.texi (C Dialect Options): Add missing builtins from\n+\tc-common.c to list.\n+\t* extend.texi (Other Builtins): Copy to this list.\n+\n Wed Nov 10 04:58:09 1999  Alexandre Oliva  <oliva@lsd.ic.unicamp.br>\n \n \t* Makefile.in (recog.o): Use BASIC_BLOCK_H macro."}, {"sha": "1a8f698749cf43f81e9564758d5cddf189b4da0a", "filename": "gcc/extend.texi", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/349c29b595de514c675f79f270206184ca17b26f/gcc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/349c29b595de514c675f79f270206184ca17b26f/gcc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fextend.texi?ref=349c29b595de514c675f79f270206184ca17b26f", "patch": "@@ -3136,11 +3136,12 @@ GNU CC includes builtin versions of many of the functions in the\n standard C library.  These will always be treated as having the same\n meaning as the C library function even if you specify the\n @samp{-fno-builtin} (@pxref{C Dialect Options}) option.  These functions\n-correspond to the C library functions @code{alloca}, @code{ffs},\n-@code{abs}, @code{fabsf}, @code{fabs}, @code{fabsl}, @code{labs},\n-@code{memcpy}, @code{memcmp}, @code{strcmp}, @code{strcpy},\n-@code{strlen}, @code{sqrtf}, @code{sqrt}, @code{sqrtl}, @code{sinf},\n-@code{sin}, @code{sinl}, @code{cosf}, @code{cos}, and @code{cosl}.\n+correspond to the C library functions @code{abort}, @code{abs},\n+@code{alloca}, @code{cos}, @code{cosf}, @code{cosl}, @code{exit},\n+@code{_exit}, @code{fabs}, @code{fabsf}, @code{fabsl}, @code{ffs},\n+@code{labs}, @code{memcmp}, @code{memcpy}, @code{memset}, @code{sin},\n+@code{sinf}, @code{sinl}, @code{sqrt}, @code{sqrtf}, @code{sqrtl},\n+@code{strcmp}, @code{strcpy}, and @code{strlen}.\n \n @findex __builtin_constant_p\n You can use the builtin function @code{__builtin_constant_p} to"}, {"sha": "bae33dd049efe45193aa64e83be932a00b7a5d8b", "filename": "gcc/invoke.texi", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/349c29b595de514c675f79f270206184ca17b26f/gcc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/349c29b595de514c675f79f270206184ca17b26f/gcc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Finvoke.texi?ref=349c29b595de514c675f79f270206184ca17b26f", "patch": "@@ -714,22 +714,34 @@ other, C++-specific, extension keywords such as @code{headof}.\n @findex abs\n @findex alloca\n @findex cos\n+@findex cosf\n+@findex cosl\n @findex exit\n+@findex _exit\n @findex fabs\n+@findex fabsf\n+@findex fabsl\n @findex ffs\n @findex labs\n @findex memcmp\n @findex memcpy\n+@findex memset\n @findex sin\n+@findex sinf\n+@findex sinl\n @findex sqrt\n+@findex sqrtf\n+@findex sqrtl\n @findex strcmp\n @findex strcpy\n @findex strlen\n Don't recognize builtin functions that do not begin with @samp{__builtin_}\n as prefix.  Currently, the functions affected include @code{abort},\n-@code{abs}, @code{alloca}, @code{cos}, @code{exit}, @code{fabs},\n-@code{ffs}, @code{labs}, @code{memcmp}, @code{memcpy}, @code{sin},\n-@code{sqrt}, @code{strcmp}, @code{strcpy}, and @code{strlen}.\n+@code{abs}, @code{alloca}, @code{cos}, @code{cosf}, @code{cosl},\n+@code{exit}, @code{_exit}, @code{fabs}, @code{fabsf}, @code{fabsl},\n+@code{ffs}, @code{labs}, @code{memcmp}, @code{memcpy}, @code{memset},\n+@code{sin}, @code{sinf}, @code{sinl}, @code{sqrt}, @code{sqrtf},\n+@code{sqrtl}, @code{strcmp}, @code{strcpy}, and @code{strlen}.\n \n GCC normally generates special code to handle certain builtin functions\n more efficiently; for instance, calls to @code{alloca} may become single\n@@ -739,9 +751,9 @@ and faster, but since the function calls no longer appear as such, you\n cannot set a breakpoint on those calls, nor can you change the behavior\n of the functions by linking with a different library.\n \n-The @samp{-ansi} option prevents @code{alloca} and @code{ffs} from being\n-builtin functions, since these functions do not have an ANSI standard\n-meaning.\n+The @samp{-ansi} option prevents @code{alloca}, @code{ffs} and @code{_exit}\n+from being builtin functions, since these functions do not have an ANSI\n+standard meaning.\n \n @item -fhosted\n @cindex hosted environment"}]}