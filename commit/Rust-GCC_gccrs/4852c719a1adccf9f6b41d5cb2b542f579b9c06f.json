{"sha": "4852c719a1adccf9f6b41d5cb2b542f579b9c06f", "node_id": "C_kwDOANBUbNoAKDQ4NTJjNzE5YTFhZGNjZjlmNmI0MWQ1Y2IyYjU0MmY1NzliOWMwNmY", "commit": {"author": {"name": "Ju-Zhe Zhong", "email": "juzhe.zhong@rivai.ai", "date": "2023-02-09T21:56:12Z"}, "committer": {"name": "Kito Cheng", "email": "kito.cheng@sifive.com", "date": "2023-02-12T07:26:32Z"}, "message": "RISC-V: Add vmv.v.x C API tests\n\ngcc/testsuite/ChangeLog:\n\n\t* gcc.target/riscv/rvv/base/vmv_v_x_rv32-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vmv_v_x_rv32-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vmv_v_x_rv32-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vmv_v_x_rv64-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vmv_v_x_rv64-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vmv_v_x_rv64-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vmv_v_x_tu_rv32-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vmv_v_x_tu_rv32-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vmv_v_x_tu_rv32-3.c: New test.\n\t* gcc.target/riscv/rvv/base/vmv_v_x_tu_rv64-1.c: New test.\n\t* gcc.target/riscv/rvv/base/vmv_v_x_tu_rv64-2.c: New test.\n\t* gcc.target/riscv/rvv/base/vmv_v_x_tu_rv64-3.c: New test.", "tree": {"sha": "38c5b812ddc33280faf50d524c9fcdb211b7b0cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38c5b812ddc33280faf50d524c9fcdb211b7b0cf"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4852c719a1adccf9f6b41d5cb2b542f579b9c06f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4852c719a1adccf9f6b41d5cb2b542f579b9c06f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4852c719a1adccf9f6b41d5cb2b542f579b9c06f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/comments", "author": {"login": "zhongjuzhe", "id": 66454988, "node_id": "MDQ6VXNlcjY2NDU0OTg4", "avatar_url": "https://avatars.githubusercontent.com/u/66454988?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zhongjuzhe", "html_url": "https://github.com/zhongjuzhe", "followers_url": "https://api.github.com/users/zhongjuzhe/followers", "following_url": "https://api.github.com/users/zhongjuzhe/following{/other_user}", "gists_url": "https://api.github.com/users/zhongjuzhe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zhongjuzhe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zhongjuzhe/subscriptions", "organizations_url": "https://api.github.com/users/zhongjuzhe/orgs", "repos_url": "https://api.github.com/users/zhongjuzhe/repos", "events_url": "https://api.github.com/users/zhongjuzhe/events{/privacy}", "received_events_url": "https://api.github.com/users/zhongjuzhe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kito-cheng", "id": 2723185, "node_id": "MDQ6VXNlcjI3MjMxODU=", "avatar_url": "https://avatars.githubusercontent.com/u/2723185?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kito-cheng", "html_url": "https://github.com/kito-cheng", "followers_url": "https://api.github.com/users/kito-cheng/followers", "following_url": "https://api.github.com/users/kito-cheng/following{/other_user}", "gists_url": "https://api.github.com/users/kito-cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/kito-cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kito-cheng/subscriptions", "organizations_url": "https://api.github.com/users/kito-cheng/orgs", "repos_url": "https://api.github.com/users/kito-cheng/repos", "events_url": "https://api.github.com/users/kito-cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/kito-cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1294253310014627d4294ae67eafef10c4c77e2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1294253310014627d4294ae67eafef10c4c77e2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1294253310014627d4294ae67eafef10c4c77e2"}], "stats": {"total": 3486, "additions": 3486, "deletions": 0}, "files": [{"sha": "96f490ee5d67d79775a69b6203f504e920bbd527", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmv_v_x_rv32-1.c", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv32-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv32-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv32-1.c?ref=4852c719a1adccf9f6b41d5cb2b542f579b9c06f", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmv_v_x_i8mf8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf8(src,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmv_v_x_i8mf4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf4(src,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmv_v_x_i8mf2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf2(src,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vmv_v_x_i8m1(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m1(src,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vmv_v_x_i8m2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m2(src,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vmv_v_x_i8m4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m4(src,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vmv_v_x_i8m8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m8(src,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmv_v_x_i16mf4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf4(src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmv_v_x_i16mf2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf2(src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vmv_v_x_i16m1(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m1(src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vmv_v_x_i16m2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m2(src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vmv_v_x_i16m4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m4(src,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vmv_v_x_i16m8(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m8(src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmv_v_x_i32mf2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32mf2(src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vmv_v_x_i32m1(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m1(src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vmv_v_x_i32m2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m2(src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vmv_v_x_i32m4(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m4(src,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vmv_v_x_i32m8(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m8(src,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vmv_v_x_i64m1(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m1(src,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vmv_v_x_i64m2(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m2(src,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vmv_v_x_i64m4(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m4(src,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vmv_v_x_i64m8(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m8(src,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vmv_v_x_u8mf8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf8(src,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vmv_v_x_u8mf4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf4(src,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vmv_v_x_u8mf2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf2(src,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vmv_v_x_u8m1(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m1(src,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vmv_v_x_u8m2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m2(src,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vmv_v_x_u8m4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m4(src,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vmv_v_x_u8m8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m8(src,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vmv_v_x_u16mf4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf4(src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vmv_v_x_u16mf2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf2(src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vmv_v_x_u16m1(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m1(src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vmv_v_x_u16m2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m2(src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vmv_v_x_u16m4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m4(src,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vmv_v_x_u16m8(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m8(src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vmv_v_x_u32mf2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32mf2(src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vmv_v_x_u32m1(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m1(src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vmv_v_x_u32m2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m2(src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vmv_v_x_u32m4(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m4(src,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vmv_v_x_u32m8(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m8(src,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vmv_v_x_u64m1(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m1(src,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vmv_v_x_u64m2(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m2(src,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vmv_v_x_u64m4(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m4(src,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vmv_v_x_u64m8(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m8(src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vlse} 8 } } */"}, {"sha": "c34d710b250f76fbf158965f2e4a8cdb49de9db3", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmv_v_x_rv32-2.c", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv32-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv32-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv32-2.c?ref=4852c719a1adccf9f6b41d5cb2b542f579b9c06f", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmv_v_x_i8mf8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf8(src,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmv_v_x_i8mf4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf4(src,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmv_v_x_i8mf2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf2(src,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vmv_v_x_i8m1(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m1(src,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vmv_v_x_i8m2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m2(src,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vmv_v_x_i8m4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m4(src,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vmv_v_x_i8m8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m8(src,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmv_v_x_i16mf4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf4(src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmv_v_x_i16mf2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf2(src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vmv_v_x_i16m1(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m1(src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vmv_v_x_i16m2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m2(src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vmv_v_x_i16m4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m4(src,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vmv_v_x_i16m8(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m8(src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmv_v_x_i32mf2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32mf2(src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vmv_v_x_i32m1(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m1(src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vmv_v_x_i32m2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m2(src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vmv_v_x_i32m4(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m4(src,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vmv_v_x_i32m8(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m8(src,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vmv_v_x_i64m1(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m1(src,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vmv_v_x_i64m2(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m2(src,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vmv_v_x_i64m4(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m4(src,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vmv_v_x_i64m8(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m8(src,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vmv_v_x_u8mf8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf8(src,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vmv_v_x_u8mf4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf4(src,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vmv_v_x_u8mf2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf2(src,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vmv_v_x_u8m1(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m1(src,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vmv_v_x_u8m2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m2(src,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vmv_v_x_u8m4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m4(src,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vmv_v_x_u8m8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m8(src,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vmv_v_x_u16mf4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf4(src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vmv_v_x_u16mf2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf2(src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vmv_v_x_u16m1(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m1(src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vmv_v_x_u16m2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m2(src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vmv_v_x_u16m4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m4(src,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vmv_v_x_u16m8(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m8(src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vmv_v_x_u32mf2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32mf2(src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vmv_v_x_u32m1(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m1(src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vmv_v_x_u32m2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m2(src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vmv_v_x_u32m4(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m4(src,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vmv_v_x_u32m8(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m8(src,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vmv_v_x_u64m1(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m1(src,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vmv_v_x_u64m2(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m2(src,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vmv_v_x_u64m4(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m4(src,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vmv_v_x_u64m8(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m8(src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vlse} 8 } } */"}, {"sha": "8332d2997366987746fc200f738395fb083f064f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmv_v_x_rv32-3.c", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv32-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv32-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv32-3.c?ref=4852c719a1adccf9f6b41d5cb2b542f579b9c06f", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmv_v_x_i8mf8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf8(src,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmv_v_x_i8mf4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf4(src,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmv_v_x_i8mf2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf2(src,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vmv_v_x_i8m1(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m1(src,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vmv_v_x_i8m2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m2(src,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vmv_v_x_i8m4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m4(src,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vmv_v_x_i8m8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m8(src,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmv_v_x_i16mf4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf4(src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmv_v_x_i16mf2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf2(src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vmv_v_x_i16m1(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m1(src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vmv_v_x_i16m2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m2(src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vmv_v_x_i16m4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m4(src,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vmv_v_x_i16m8(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m8(src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmv_v_x_i32mf2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32mf2(src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vmv_v_x_i32m1(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m1(src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vmv_v_x_i32m2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m2(src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vmv_v_x_i32m4(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m4(src,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vmv_v_x_i32m8(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m8(src,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vmv_v_x_i64m1(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m1(src,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vmv_v_x_i64m2(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m2(src,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vmv_v_x_i64m4(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m4(src,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vmv_v_x_i64m8(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m8(src,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vmv_v_x_u8mf8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf8(src,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vmv_v_x_u8mf4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf4(src,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vmv_v_x_u8mf2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf2(src,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vmv_v_x_u8m1(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m1(src,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vmv_v_x_u8m2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m2(src,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vmv_v_x_u8m4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m4(src,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vmv_v_x_u8m8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m8(src,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vmv_v_x_u16mf4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf4(src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vmv_v_x_u16mf2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf2(src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vmv_v_x_u16m1(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m1(src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vmv_v_x_u16m2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m2(src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vmv_v_x_u16m4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m4(src,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vmv_v_x_u16m8(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m8(src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vmv_v_x_u32mf2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32mf2(src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vmv_v_x_u32m1(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m1(src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vmv_v_x_u32m2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m2(src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vmv_v_x_u32m4(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m4(src,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vmv_v_x_u32m8(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m8(src,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vmv_v_x_u64m1(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m1(src,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vmv_v_x_u64m2(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m2(src,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vmv_v_x_u64m4(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m4(src,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vmv_v_x_u64m8(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m8(src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vlse} 8 } } */"}, {"sha": "91278068c8ddc7109623fbb4bf396041cbc8e04b", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmv_v_x_rv64-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv64-1.c?ref=4852c719a1adccf9f6b41d5cb2b542f579b9c06f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmv_v_x_i8mf8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf8(src,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmv_v_x_i8mf4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf4(src,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmv_v_x_i8mf2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf2(src,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vmv_v_x_i8m1(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m1(src,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vmv_v_x_i8m2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m2(src,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vmv_v_x_i8m4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m4(src,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vmv_v_x_i8m8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m8(src,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmv_v_x_i16mf4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf4(src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmv_v_x_i16mf2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf2(src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vmv_v_x_i16m1(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m1(src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vmv_v_x_i16m2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m2(src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vmv_v_x_i16m4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m4(src,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vmv_v_x_i16m8(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m8(src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmv_v_x_i32mf2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32mf2(src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vmv_v_x_i32m1(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m1(src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vmv_v_x_i32m2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m2(src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vmv_v_x_i32m4(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m4(src,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vmv_v_x_i32m8(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m8(src,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vmv_v_x_i64m1(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m1(src,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vmv_v_x_i64m2(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m2(src,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vmv_v_x_i64m4(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m4(src,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vmv_v_x_i64m8(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m8(src,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vmv_v_x_u8mf8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf8(src,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vmv_v_x_u8mf4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf4(src,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vmv_v_x_u8mf2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf2(src,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vmv_v_x_u8m1(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m1(src,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vmv_v_x_u8m2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m2(src,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vmv_v_x_u8m4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m4(src,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vmv_v_x_u8m8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m8(src,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vmv_v_x_u16mf4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf4(src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vmv_v_x_u16mf2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf2(src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vmv_v_x_u16m1(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m1(src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vmv_v_x_u16m2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m2(src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vmv_v_x_u16m4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m4(src,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vmv_v_x_u16m8(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m8(src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vmv_v_x_u32mf2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32mf2(src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vmv_v_x_u32m1(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m1(src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vmv_v_x_u32m2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m2(src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vmv_v_x_u32m4(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m4(src,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vmv_v_x_u32m8(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m8(src,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vmv_v_x_u64m1(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m1(src,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vmv_v_x_u64m2(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m2(src,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vmv_v_x_u64m4(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m4(src,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vmv_v_x_u64m8(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m8(src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */"}, {"sha": "68a8886a6e095c0a514b0bb387890089ae4acd77", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmv_v_x_rv64-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv64-2.c?ref=4852c719a1adccf9f6b41d5cb2b542f579b9c06f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmv_v_x_i8mf8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf8(src,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmv_v_x_i8mf4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf4(src,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmv_v_x_i8mf2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf2(src,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vmv_v_x_i8m1(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m1(src,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vmv_v_x_i8m2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m2(src,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vmv_v_x_i8m4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m4(src,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vmv_v_x_i8m8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m8(src,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmv_v_x_i16mf4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf4(src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmv_v_x_i16mf2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf2(src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vmv_v_x_i16m1(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m1(src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vmv_v_x_i16m2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m2(src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vmv_v_x_i16m4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m4(src,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vmv_v_x_i16m8(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m8(src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmv_v_x_i32mf2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32mf2(src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vmv_v_x_i32m1(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m1(src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vmv_v_x_i32m2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m2(src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vmv_v_x_i32m4(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m4(src,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vmv_v_x_i32m8(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m8(src,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vmv_v_x_i64m1(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m1(src,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vmv_v_x_i64m2(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m2(src,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vmv_v_x_i64m4(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m4(src,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vmv_v_x_i64m8(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m8(src,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vmv_v_x_u8mf8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf8(src,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vmv_v_x_u8mf4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf4(src,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vmv_v_x_u8mf2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf2(src,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vmv_v_x_u8m1(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m1(src,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vmv_v_x_u8m2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m2(src,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vmv_v_x_u8m4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m4(src,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vmv_v_x_u8m8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m8(src,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vmv_v_x_u16mf4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf4(src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vmv_v_x_u16mf2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf2(src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vmv_v_x_u16m1(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m1(src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vmv_v_x_u16m2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m2(src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vmv_v_x_u16m4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m4(src,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vmv_v_x_u16m8(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m8(src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vmv_v_x_u32mf2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32mf2(src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vmv_v_x_u32m1(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m1(src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vmv_v_x_u32m2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m2(src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vmv_v_x_u32m4(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m4(src,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vmv_v_x_u32m8(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m8(src,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vmv_v_x_u64m1(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m1(src,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vmv_v_x_u64m2(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m2(src,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vmv_v_x_u64m4(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m4(src,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vmv_v_x_u64m8(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m8(src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */"}, {"sha": "c8aea77cf6f41d02bb03458ba81bdf7e00a28116", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmv_v_x_rv64-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv64-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv64-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_rv64-3.c?ref=4852c719a1adccf9f6b41d5cb2b542f579b9c06f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmv_v_x_i8mf8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf8(src,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmv_v_x_i8mf4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf4(src,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmv_v_x_i8mf2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf2(src,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vmv_v_x_i8m1(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m1(src,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vmv_v_x_i8m2(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m2(src,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vmv_v_x_i8m4(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m4(src,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vmv_v_x_i8m8(int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m8(src,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmv_v_x_i16mf4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf4(src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmv_v_x_i16mf2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf2(src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vmv_v_x_i16m1(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m1(src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vmv_v_x_i16m2(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m2(src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vmv_v_x_i16m4(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m4(src,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vmv_v_x_i16m8(int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m8(src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmv_v_x_i32mf2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32mf2(src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vmv_v_x_i32m1(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m1(src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vmv_v_x_i32m2(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m2(src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vmv_v_x_i32m4(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m4(src,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vmv_v_x_i32m8(int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m8(src,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vmv_v_x_i64m1(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m1(src,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vmv_v_x_i64m2(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m2(src,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vmv_v_x_i64m4(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m4(src,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vmv_v_x_i64m8(int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m8(src,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vmv_v_x_u8mf8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf8(src,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vmv_v_x_u8mf4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf4(src,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vmv_v_x_u8mf2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf2(src,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vmv_v_x_u8m1(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m1(src,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vmv_v_x_u8m2(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m2(src,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vmv_v_x_u8m4(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m4(src,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vmv_v_x_u8m8(uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m8(src,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vmv_v_x_u16mf4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf4(src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vmv_v_x_u16mf2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf2(src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vmv_v_x_u16m1(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m1(src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vmv_v_x_u16m2(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m2(src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vmv_v_x_u16m4(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m4(src,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vmv_v_x_u16m8(uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m8(src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vmv_v_x_u32mf2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32mf2(src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vmv_v_x_u32m1(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m1(src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vmv_v_x_u32m2(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m2(src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vmv_v_x_u32m4(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m4(src,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vmv_v_x_u32m8(uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m8(src,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vmv_v_x_u64m1(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m1(src,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vmv_v_x_u64m2(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m2(src,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vmv_v_x_u64m4(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m4(src,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vmv_v_x_u64m8(uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m8(src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*t[au],\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */"}, {"sha": "66fbc3b600223097816a0a24e15aa6c3a81876e8", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmv_v_x_tu_rv32-1.c", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_tu_rv32-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_tu_rv32-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_tu_rv32-1.c?ref=4852c719a1adccf9f6b41d5cb2b542f579b9c06f", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmv_v_x_i8mf8_tu(vint8mf8_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf8_tu(merge,src,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmv_v_x_i8mf4_tu(vint8mf4_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf4_tu(merge,src,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmv_v_x_i8mf2_tu(vint8mf2_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf2_tu(merge,src,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vmv_v_x_i8m1_tu(vint8m1_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m1_tu(merge,src,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vmv_v_x_i8m2_tu(vint8m2_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m2_tu(merge,src,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vmv_v_x_i8m4_tu(vint8m4_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m4_tu(merge,src,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vmv_v_x_i8m8_tu(vint8m8_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m8_tu(merge,src,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmv_v_x_i16mf4_tu(vint16mf4_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf4_tu(merge,src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmv_v_x_i16mf2_tu(vint16mf2_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf2_tu(merge,src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vmv_v_x_i16m1_tu(vint16m1_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m1_tu(merge,src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vmv_v_x_i16m2_tu(vint16m2_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m2_tu(merge,src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vmv_v_x_i16m4_tu(vint16m4_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m4_tu(merge,src,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vmv_v_x_i16m8_tu(vint16m8_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m8_tu(merge,src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmv_v_x_i32mf2_tu(vint32mf2_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32mf2_tu(merge,src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vmv_v_x_i32m1_tu(vint32m1_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m1_tu(merge,src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vmv_v_x_i32m2_tu(vint32m2_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m2_tu(merge,src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vmv_v_x_i32m4_tu(vint32m4_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m4_tu(merge,src,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vmv_v_x_i32m8_tu(vint32m8_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m8_tu(merge,src,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vmv_v_x_i64m1_tu(vint64m1_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m1_tu(merge,src,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vmv_v_x_i64m2_tu(vint64m2_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m2_tu(merge,src,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vmv_v_x_i64m4_tu(vint64m4_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m4_tu(merge,src,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vmv_v_x_i64m8_tu(vint64m8_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m8_tu(merge,src,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vmv_v_x_u8mf8_tu(vuint8mf8_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf8_tu(merge,src,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vmv_v_x_u8mf4_tu(vuint8mf4_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf4_tu(merge,src,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vmv_v_x_u8mf2_tu(vuint8mf2_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf2_tu(merge,src,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vmv_v_x_u8m1_tu(vuint8m1_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m1_tu(merge,src,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vmv_v_x_u8m2_tu(vuint8m2_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m2_tu(merge,src,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vmv_v_x_u8m4_tu(vuint8m4_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m4_tu(merge,src,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vmv_v_x_u8m8_tu(vuint8m8_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m8_tu(merge,src,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vmv_v_x_u16mf4_tu(vuint16mf4_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf4_tu(merge,src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vmv_v_x_u16mf2_tu(vuint16mf2_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf2_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vmv_v_x_u16m1_tu(vuint16m1_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m1_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vmv_v_x_u16m2_tu(vuint16m2_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m2_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vmv_v_x_u16m4_tu(vuint16m4_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m4_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vmv_v_x_u16m8_tu(vuint16m8_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m8_tu(merge,src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vmv_v_x_u32mf2_tu(vuint32mf2_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32mf2_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vmv_v_x_u32m1_tu(vuint32m1_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m1_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vmv_v_x_u32m2_tu(vuint32m2_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m2_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vmv_v_x_u32m4_tu(vuint32m4_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m4_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vmv_v_x_u32m8_tu(vuint32m8_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m8_tu(merge,src,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vmv_v_x_u64m1_tu(vuint64m1_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m1_tu(merge,src,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vmv_v_x_u64m2_tu(vuint64m2_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m2_tu(merge,src,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vmv_v_x_u64m4_tu(vuint64m4_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m4_tu(merge,src,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vmv_v_x_u64m8_tu(vuint64m8_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m8_tu(merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vlse} 8 } } */"}, {"sha": "5b20bd1d6e82c158446a2a19768aab4b1a7e6430", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmv_v_x_tu_rv32-2.c", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_tu_rv32-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_tu_rv32-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_tu_rv32-2.c?ref=4852c719a1adccf9f6b41d5cb2b542f579b9c06f", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmv_v_x_i8mf8_tu(vint8mf8_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf8_tu(merge,src,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmv_v_x_i8mf4_tu(vint8mf4_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf4_tu(merge,src,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmv_v_x_i8mf2_tu(vint8mf2_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf2_tu(merge,src,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vmv_v_x_i8m1_tu(vint8m1_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m1_tu(merge,src,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vmv_v_x_i8m2_tu(vint8m2_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m2_tu(merge,src,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vmv_v_x_i8m4_tu(vint8m4_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m4_tu(merge,src,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vmv_v_x_i8m8_tu(vint8m8_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m8_tu(merge,src,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmv_v_x_i16mf4_tu(vint16mf4_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf4_tu(merge,src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmv_v_x_i16mf2_tu(vint16mf2_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf2_tu(merge,src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vmv_v_x_i16m1_tu(vint16m1_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m1_tu(merge,src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vmv_v_x_i16m2_tu(vint16m2_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m2_tu(merge,src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vmv_v_x_i16m4_tu(vint16m4_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m4_tu(merge,src,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vmv_v_x_i16m8_tu(vint16m8_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m8_tu(merge,src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmv_v_x_i32mf2_tu(vint32mf2_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32mf2_tu(merge,src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vmv_v_x_i32m1_tu(vint32m1_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m1_tu(merge,src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vmv_v_x_i32m2_tu(vint32m2_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m2_tu(merge,src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vmv_v_x_i32m4_tu(vint32m4_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m4_tu(merge,src,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vmv_v_x_i32m8_tu(vint32m8_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m8_tu(merge,src,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vmv_v_x_i64m1_tu(vint64m1_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m1_tu(merge,src,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vmv_v_x_i64m2_tu(vint64m2_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m2_tu(merge,src,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vmv_v_x_i64m4_tu(vint64m4_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m4_tu(merge,src,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vmv_v_x_i64m8_tu(vint64m8_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m8_tu(merge,src,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vmv_v_x_u8mf8_tu(vuint8mf8_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf8_tu(merge,src,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vmv_v_x_u8mf4_tu(vuint8mf4_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf4_tu(merge,src,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vmv_v_x_u8mf2_tu(vuint8mf2_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf2_tu(merge,src,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vmv_v_x_u8m1_tu(vuint8m1_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m1_tu(merge,src,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vmv_v_x_u8m2_tu(vuint8m2_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m2_tu(merge,src,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vmv_v_x_u8m4_tu(vuint8m4_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m4_tu(merge,src,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vmv_v_x_u8m8_tu(vuint8m8_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m8_tu(merge,src,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vmv_v_x_u16mf4_tu(vuint16mf4_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf4_tu(merge,src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vmv_v_x_u16mf2_tu(vuint16mf2_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf2_tu(merge,src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vmv_v_x_u16m1_tu(vuint16m1_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m1_tu(merge,src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vmv_v_x_u16m2_tu(vuint16m2_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m2_tu(merge,src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vmv_v_x_u16m4_tu(vuint16m4_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m4_tu(merge,src,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vmv_v_x_u16m8_tu(vuint16m8_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m8_tu(merge,src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vmv_v_x_u32mf2_tu(vuint32mf2_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32mf2_tu(merge,src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vmv_v_x_u32m1_tu(vuint32m1_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m1_tu(merge,src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vmv_v_x_u32m2_tu(vuint32m2_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m2_tu(merge,src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vmv_v_x_u32m4_tu(vuint32m4_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m4_tu(merge,src,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vmv_v_x_u32m8_tu(vuint32m8_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m8_tu(merge,src,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vmv_v_x_u64m1_tu(vuint64m1_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m1_tu(merge,src,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vmv_v_x_u64m2_tu(vuint64m2_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m2_tu(merge,src,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vmv_v_x_u64m4_tu(vuint64m4_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m4_tu(merge,src,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vmv_v_x_u64m8_tu(vuint64m8_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m8_tu(merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vlse} 8 } } */"}, {"sha": "32a2bd50dd03819c47d3b8efe8e7340d2e1a0f58", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmv_v_x_tu_rv32-3.c", "status": "added", "additions": 289, "deletions": 0, "changes": 289, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_tu_rv32-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_tu_rv32-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_tu_rv32-3.c?ref=4852c719a1adccf9f6b41d5cb2b542f579b9c06f", "patch": "@@ -0,0 +1,289 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv32gcv -mabi=ilp32d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmv_v_x_i8mf8_tu(vint8mf8_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf8_tu(merge,src,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmv_v_x_i8mf4_tu(vint8mf4_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf4_tu(merge,src,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmv_v_x_i8mf2_tu(vint8mf2_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf2_tu(merge,src,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vmv_v_x_i8m1_tu(vint8m1_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m1_tu(merge,src,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vmv_v_x_i8m2_tu(vint8m2_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m2_tu(merge,src,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vmv_v_x_i8m4_tu(vint8m4_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m4_tu(merge,src,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vmv_v_x_i8m8_tu(vint8m8_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m8_tu(merge,src,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmv_v_x_i16mf4_tu(vint16mf4_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf4_tu(merge,src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmv_v_x_i16mf2_tu(vint16mf2_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf2_tu(merge,src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vmv_v_x_i16m1_tu(vint16m1_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m1_tu(merge,src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vmv_v_x_i16m2_tu(vint16m2_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m2_tu(merge,src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vmv_v_x_i16m4_tu(vint16m4_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m4_tu(merge,src,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vmv_v_x_i16m8_tu(vint16m8_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m8_tu(merge,src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmv_v_x_i32mf2_tu(vint32mf2_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32mf2_tu(merge,src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vmv_v_x_i32m1_tu(vint32m1_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m1_tu(merge,src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vmv_v_x_i32m2_tu(vint32m2_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m2_tu(merge,src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vmv_v_x_i32m4_tu(vint32m4_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m4_tu(merge,src,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vmv_v_x_i32m8_tu(vint32m8_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m8_tu(merge,src,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vmv_v_x_i64m1_tu(vint64m1_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m1_tu(merge,src,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vmv_v_x_i64m2_tu(vint64m2_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m2_tu(merge,src,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vmv_v_x_i64m4_tu(vint64m4_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m4_tu(merge,src,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vmv_v_x_i64m8_tu(vint64m8_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m8_tu(merge,src,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vmv_v_x_u8mf8_tu(vuint8mf8_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf8_tu(merge,src,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vmv_v_x_u8mf4_tu(vuint8mf4_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf4_tu(merge,src,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vmv_v_x_u8mf2_tu(vuint8mf2_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf2_tu(merge,src,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vmv_v_x_u8m1_tu(vuint8m1_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m1_tu(merge,src,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vmv_v_x_u8m2_tu(vuint8m2_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m2_tu(merge,src,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vmv_v_x_u8m4_tu(vuint8m4_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m4_tu(merge,src,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vmv_v_x_u8m8_tu(vuint8m8_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m8_tu(merge,src,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vmv_v_x_u16mf4_tu(vuint16mf4_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf4_tu(merge,src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vmv_v_x_u16mf2_tu(vuint16mf2_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf2_tu(merge,src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vmv_v_x_u16m1_tu(vuint16m1_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m1_tu(merge,src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vmv_v_x_u16m2_tu(vuint16m2_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m2_tu(merge,src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vmv_v_x_u16m4_tu(vuint16m4_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m4_tu(merge,src,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vmv_v_x_u16m8_tu(vuint16m8_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m8_tu(merge,src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vmv_v_x_u32mf2_tu(vuint32mf2_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32mf2_tu(merge,src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vmv_v_x_u32m1_tu(vuint32m1_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m1_tu(merge,src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vmv_v_x_u32m2_tu(vuint32m2_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m2_tu(merge,src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vmv_v_x_u32m4_tu(vuint32m4_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m4_tu(merge,src,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vmv_v_x_u32m8_tu(vuint32m8_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m8_tu(merge,src,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vmv_v_x_u64m1_tu(vuint64m1_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m1_tu(merge,src,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vmv_v_x_u64m2_tu(vuint64m2_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m2_tu(merge,src,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vmv_v_x_u64m4_tu(vuint64m4_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m4_tu(merge,src,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vmv_v_x_u64m8_tu(vuint64m8_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m8_tu(merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vlse} 8 } } */"}, {"sha": "b0959b19f851339d5053d464c4ab41199663a31f", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmv_v_x_tu_rv64-1.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_tu_rv64-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_tu_rv64-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_tu_rv64-1.c?ref=4852c719a1adccf9f6b41d5cb2b542f579b9c06f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmv_v_x_i8mf8_tu(vint8mf8_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf8_tu(merge,src,vl);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmv_v_x_i8mf4_tu(vint8mf4_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf4_tu(merge,src,vl);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmv_v_x_i8mf2_tu(vint8mf2_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf2_tu(merge,src,vl);\n+}\n+\n+\n+vint8m1_t test___riscv_vmv_v_x_i8m1_tu(vint8m1_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m1_tu(merge,src,vl);\n+}\n+\n+\n+vint8m2_t test___riscv_vmv_v_x_i8m2_tu(vint8m2_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m2_tu(merge,src,vl);\n+}\n+\n+\n+vint8m4_t test___riscv_vmv_v_x_i8m4_tu(vint8m4_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m4_tu(merge,src,vl);\n+}\n+\n+\n+vint8m8_t test___riscv_vmv_v_x_i8m8_tu(vint8m8_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m8_tu(merge,src,vl);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmv_v_x_i16mf4_tu(vint16mf4_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf4_tu(merge,src,vl);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmv_v_x_i16mf2_tu(vint16mf2_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf2_tu(merge,src,vl);\n+}\n+\n+\n+vint16m1_t test___riscv_vmv_v_x_i16m1_tu(vint16m1_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m1_tu(merge,src,vl);\n+}\n+\n+\n+vint16m2_t test___riscv_vmv_v_x_i16m2_tu(vint16m2_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m2_tu(merge,src,vl);\n+}\n+\n+\n+vint16m4_t test___riscv_vmv_v_x_i16m4_tu(vint16m4_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m4_tu(merge,src,vl);\n+}\n+\n+\n+vint16m8_t test___riscv_vmv_v_x_i16m8_tu(vint16m8_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m8_tu(merge,src,vl);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmv_v_x_i32mf2_tu(vint32mf2_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32mf2_tu(merge,src,vl);\n+}\n+\n+\n+vint32m1_t test___riscv_vmv_v_x_i32m1_tu(vint32m1_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m1_tu(merge,src,vl);\n+}\n+\n+\n+vint32m2_t test___riscv_vmv_v_x_i32m2_tu(vint32m2_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m2_tu(merge,src,vl);\n+}\n+\n+\n+vint32m4_t test___riscv_vmv_v_x_i32m4_tu(vint32m4_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m4_tu(merge,src,vl);\n+}\n+\n+\n+vint32m8_t test___riscv_vmv_v_x_i32m8_tu(vint32m8_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m8_tu(merge,src,vl);\n+}\n+\n+\n+vint64m1_t test___riscv_vmv_v_x_i64m1_tu(vint64m1_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m1_tu(merge,src,vl);\n+}\n+\n+\n+vint64m2_t test___riscv_vmv_v_x_i64m2_tu(vint64m2_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m2_tu(merge,src,vl);\n+}\n+\n+\n+vint64m4_t test___riscv_vmv_v_x_i64m4_tu(vint64m4_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m4_tu(merge,src,vl);\n+}\n+\n+\n+vint64m8_t test___riscv_vmv_v_x_i64m8_tu(vint64m8_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m8_tu(merge,src,vl);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vmv_v_x_u8mf8_tu(vuint8mf8_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf8_tu(merge,src,vl);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vmv_v_x_u8mf4_tu(vuint8mf4_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf4_tu(merge,src,vl);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vmv_v_x_u8mf2_tu(vuint8mf2_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf2_tu(merge,src,vl);\n+}\n+\n+\n+vuint8m1_t test___riscv_vmv_v_x_u8m1_tu(vuint8m1_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m1_tu(merge,src,vl);\n+}\n+\n+\n+vuint8m2_t test___riscv_vmv_v_x_u8m2_tu(vuint8m2_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m2_tu(merge,src,vl);\n+}\n+\n+\n+vuint8m4_t test___riscv_vmv_v_x_u8m4_tu(vuint8m4_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m4_tu(merge,src,vl);\n+}\n+\n+\n+vuint8m8_t test___riscv_vmv_v_x_u8m8_tu(vuint8m8_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m8_tu(merge,src,vl);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vmv_v_x_u16mf4_tu(vuint16mf4_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf4_tu(merge,src,vl);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vmv_v_x_u16mf2_tu(vuint16mf2_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf2_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m1_t test___riscv_vmv_v_x_u16m1_tu(vuint16m1_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m1_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m2_t test___riscv_vmv_v_x_u16m2_tu(vuint16m2_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m2_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m4_t test___riscv_vmv_v_x_u16m4_tu(vuint16m4_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m4_tu(merge,src,vl);\n+}\n+\n+\n+vuint16m8_t test___riscv_vmv_v_x_u16m8_tu(vuint16m8_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m8_tu(merge,src,vl);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vmv_v_x_u32mf2_tu(vuint32mf2_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32mf2_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m1_t test___riscv_vmv_v_x_u32m1_tu(vuint32m1_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m1_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m2_t test___riscv_vmv_v_x_u32m2_tu(vuint32m2_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m2_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m4_t test___riscv_vmv_v_x_u32m4_tu(vuint32m4_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m4_tu(merge,src,vl);\n+}\n+\n+\n+vuint32m8_t test___riscv_vmv_v_x_u32m8_tu(vuint32m8_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m8_tu(merge,src,vl);\n+}\n+\n+\n+vuint64m1_t test___riscv_vmv_v_x_u64m1_tu(vuint64m1_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m1_tu(merge,src,vl);\n+}\n+\n+\n+vuint64m2_t test___riscv_vmv_v_x_u64m2_tu(vuint64m2_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m2_tu(merge,src,vl);\n+}\n+\n+\n+vuint64m4_t test___riscv_vmv_v_x_u64m4_tu(vuint64m4_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m4_tu(merge,src,vl);\n+}\n+\n+\n+vuint64m8_t test___riscv_vmv_v_x_u64m8_tu(vuint64m8_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m8_tu(merge,src,vl);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */"}, {"sha": "9d42f2443605b99df32f4c430bc3b8b828caee74", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmv_v_x_tu_rv64-2.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_tu_rv64-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_tu_rv64-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_tu_rv64-2.c?ref=4852c719a1adccf9f6b41d5cb2b542f579b9c06f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmv_v_x_i8mf8_tu(vint8mf8_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf8_tu(merge,src,31);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmv_v_x_i8mf4_tu(vint8mf4_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf4_tu(merge,src,31);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmv_v_x_i8mf2_tu(vint8mf2_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf2_tu(merge,src,31);\n+}\n+\n+\n+vint8m1_t test___riscv_vmv_v_x_i8m1_tu(vint8m1_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m1_tu(merge,src,31);\n+}\n+\n+\n+vint8m2_t test___riscv_vmv_v_x_i8m2_tu(vint8m2_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m2_tu(merge,src,31);\n+}\n+\n+\n+vint8m4_t test___riscv_vmv_v_x_i8m4_tu(vint8m4_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m4_tu(merge,src,31);\n+}\n+\n+\n+vint8m8_t test___riscv_vmv_v_x_i8m8_tu(vint8m8_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m8_tu(merge,src,31);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmv_v_x_i16mf4_tu(vint16mf4_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf4_tu(merge,src,31);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmv_v_x_i16mf2_tu(vint16mf2_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf2_tu(merge,src,31);\n+}\n+\n+\n+vint16m1_t test___riscv_vmv_v_x_i16m1_tu(vint16m1_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m1_tu(merge,src,31);\n+}\n+\n+\n+vint16m2_t test___riscv_vmv_v_x_i16m2_tu(vint16m2_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m2_tu(merge,src,31);\n+}\n+\n+\n+vint16m4_t test___riscv_vmv_v_x_i16m4_tu(vint16m4_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m4_tu(merge,src,31);\n+}\n+\n+\n+vint16m8_t test___riscv_vmv_v_x_i16m8_tu(vint16m8_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m8_tu(merge,src,31);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmv_v_x_i32mf2_tu(vint32mf2_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32mf2_tu(merge,src,31);\n+}\n+\n+\n+vint32m1_t test___riscv_vmv_v_x_i32m1_tu(vint32m1_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m1_tu(merge,src,31);\n+}\n+\n+\n+vint32m2_t test___riscv_vmv_v_x_i32m2_tu(vint32m2_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m2_tu(merge,src,31);\n+}\n+\n+\n+vint32m4_t test___riscv_vmv_v_x_i32m4_tu(vint32m4_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m4_tu(merge,src,31);\n+}\n+\n+\n+vint32m8_t test___riscv_vmv_v_x_i32m8_tu(vint32m8_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m8_tu(merge,src,31);\n+}\n+\n+\n+vint64m1_t test___riscv_vmv_v_x_i64m1_tu(vint64m1_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m1_tu(merge,src,31);\n+}\n+\n+\n+vint64m2_t test___riscv_vmv_v_x_i64m2_tu(vint64m2_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m2_tu(merge,src,31);\n+}\n+\n+\n+vint64m4_t test___riscv_vmv_v_x_i64m4_tu(vint64m4_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m4_tu(merge,src,31);\n+}\n+\n+\n+vint64m8_t test___riscv_vmv_v_x_i64m8_tu(vint64m8_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m8_tu(merge,src,31);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vmv_v_x_u8mf8_tu(vuint8mf8_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf8_tu(merge,src,31);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vmv_v_x_u8mf4_tu(vuint8mf4_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf4_tu(merge,src,31);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vmv_v_x_u8mf2_tu(vuint8mf2_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf2_tu(merge,src,31);\n+}\n+\n+\n+vuint8m1_t test___riscv_vmv_v_x_u8m1_tu(vuint8m1_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m1_tu(merge,src,31);\n+}\n+\n+\n+vuint8m2_t test___riscv_vmv_v_x_u8m2_tu(vuint8m2_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m2_tu(merge,src,31);\n+}\n+\n+\n+vuint8m4_t test___riscv_vmv_v_x_u8m4_tu(vuint8m4_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m4_tu(merge,src,31);\n+}\n+\n+\n+vuint8m8_t test___riscv_vmv_v_x_u8m8_tu(vuint8m8_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m8_tu(merge,src,31);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vmv_v_x_u16mf4_tu(vuint16mf4_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf4_tu(merge,src,31);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vmv_v_x_u16mf2_tu(vuint16mf2_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf2_tu(merge,src,31);\n+}\n+\n+\n+vuint16m1_t test___riscv_vmv_v_x_u16m1_tu(vuint16m1_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m1_tu(merge,src,31);\n+}\n+\n+\n+vuint16m2_t test___riscv_vmv_v_x_u16m2_tu(vuint16m2_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m2_tu(merge,src,31);\n+}\n+\n+\n+vuint16m4_t test___riscv_vmv_v_x_u16m4_tu(vuint16m4_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m4_tu(merge,src,31);\n+}\n+\n+\n+vuint16m8_t test___riscv_vmv_v_x_u16m8_tu(vuint16m8_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m8_tu(merge,src,31);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vmv_v_x_u32mf2_tu(vuint32mf2_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32mf2_tu(merge,src,31);\n+}\n+\n+\n+vuint32m1_t test___riscv_vmv_v_x_u32m1_tu(vuint32m1_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m1_tu(merge,src,31);\n+}\n+\n+\n+vuint32m2_t test___riscv_vmv_v_x_u32m2_tu(vuint32m2_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m2_tu(merge,src,31);\n+}\n+\n+\n+vuint32m4_t test___riscv_vmv_v_x_u32m4_tu(vuint32m4_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m4_tu(merge,src,31);\n+}\n+\n+\n+vuint32m8_t test___riscv_vmv_v_x_u32m8_tu(vuint32m8_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m8_tu(merge,src,31);\n+}\n+\n+\n+vuint64m1_t test___riscv_vmv_v_x_u64m1_tu(vuint64m1_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m1_tu(merge,src,31);\n+}\n+\n+\n+vuint64m2_t test___riscv_vmv_v_x_u64m2_tu(vuint64m2_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m2_tu(merge,src,31);\n+}\n+\n+\n+vuint64m4_t test___riscv_vmv_v_x_u64m4_tu(vuint64m4_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m4_tu(merge,src,31);\n+}\n+\n+\n+vuint64m8_t test___riscv_vmv_v_x_u64m8_tu(vuint64m8_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m8_tu(merge,src,31);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetivli\\s+zero,\\s*31,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */"}, {"sha": "fc240d6caafc794d8376c140e80a895548c8b3a3", "filename": "gcc/testsuite/gcc.target/riscv/rvv/base/vmv_v_x_tu_rv64-3.c", "status": "added", "additions": 292, "deletions": 0, "changes": 292, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_tu_rv64-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4852c719a1adccf9f6b41d5cb2b542f579b9c06f/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_tu_rv64-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Friscv%2Frvv%2Fbase%2Fvmv_v_x_tu_rv64-3.c?ref=4852c719a1adccf9f6b41d5cb2b542f579b9c06f", "patch": "@@ -0,0 +1,292 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-march=rv64gcv -mabi=lp64d -O3 -fno-schedule-insns -fno-schedule-insns2\" } */\n+\n+#include \"riscv_vector.h\"\n+\n+vint8mf8_t test___riscv_vmv_v_x_i8mf8_tu(vint8mf8_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf8_tu(merge,src,32);\n+}\n+\n+\n+vint8mf4_t test___riscv_vmv_v_x_i8mf4_tu(vint8mf4_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf4_tu(merge,src,32);\n+}\n+\n+\n+vint8mf2_t test___riscv_vmv_v_x_i8mf2_tu(vint8mf2_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8mf2_tu(merge,src,32);\n+}\n+\n+\n+vint8m1_t test___riscv_vmv_v_x_i8m1_tu(vint8m1_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m1_tu(merge,src,32);\n+}\n+\n+\n+vint8m2_t test___riscv_vmv_v_x_i8m2_tu(vint8m2_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m2_tu(merge,src,32);\n+}\n+\n+\n+vint8m4_t test___riscv_vmv_v_x_i8m4_tu(vint8m4_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m4_tu(merge,src,32);\n+}\n+\n+\n+vint8m8_t test___riscv_vmv_v_x_i8m8_tu(vint8m8_t merge,int8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i8m8_tu(merge,src,32);\n+}\n+\n+\n+vint16mf4_t test___riscv_vmv_v_x_i16mf4_tu(vint16mf4_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf4_tu(merge,src,32);\n+}\n+\n+\n+vint16mf2_t test___riscv_vmv_v_x_i16mf2_tu(vint16mf2_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16mf2_tu(merge,src,32);\n+}\n+\n+\n+vint16m1_t test___riscv_vmv_v_x_i16m1_tu(vint16m1_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m1_tu(merge,src,32);\n+}\n+\n+\n+vint16m2_t test___riscv_vmv_v_x_i16m2_tu(vint16m2_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m2_tu(merge,src,32);\n+}\n+\n+\n+vint16m4_t test___riscv_vmv_v_x_i16m4_tu(vint16m4_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m4_tu(merge,src,32);\n+}\n+\n+\n+vint16m8_t test___riscv_vmv_v_x_i16m8_tu(vint16m8_t merge,int16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i16m8_tu(merge,src,32);\n+}\n+\n+\n+vint32mf2_t test___riscv_vmv_v_x_i32mf2_tu(vint32mf2_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32mf2_tu(merge,src,32);\n+}\n+\n+\n+vint32m1_t test___riscv_vmv_v_x_i32m1_tu(vint32m1_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m1_tu(merge,src,32);\n+}\n+\n+\n+vint32m2_t test___riscv_vmv_v_x_i32m2_tu(vint32m2_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m2_tu(merge,src,32);\n+}\n+\n+\n+vint32m4_t test___riscv_vmv_v_x_i32m4_tu(vint32m4_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m4_tu(merge,src,32);\n+}\n+\n+\n+vint32m8_t test___riscv_vmv_v_x_i32m8_tu(vint32m8_t merge,int32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i32m8_tu(merge,src,32);\n+}\n+\n+\n+vint64m1_t test___riscv_vmv_v_x_i64m1_tu(vint64m1_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m1_tu(merge,src,32);\n+}\n+\n+\n+vint64m2_t test___riscv_vmv_v_x_i64m2_tu(vint64m2_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m2_tu(merge,src,32);\n+}\n+\n+\n+vint64m4_t test___riscv_vmv_v_x_i64m4_tu(vint64m4_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m4_tu(merge,src,32);\n+}\n+\n+\n+vint64m8_t test___riscv_vmv_v_x_i64m8_tu(vint64m8_t merge,int64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_i64m8_tu(merge,src,32);\n+}\n+\n+\n+vuint8mf8_t test___riscv_vmv_v_x_u8mf8_tu(vuint8mf8_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf8_tu(merge,src,32);\n+}\n+\n+\n+vuint8mf4_t test___riscv_vmv_v_x_u8mf4_tu(vuint8mf4_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf4_tu(merge,src,32);\n+}\n+\n+\n+vuint8mf2_t test___riscv_vmv_v_x_u8mf2_tu(vuint8mf2_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8mf2_tu(merge,src,32);\n+}\n+\n+\n+vuint8m1_t test___riscv_vmv_v_x_u8m1_tu(vuint8m1_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m1_tu(merge,src,32);\n+}\n+\n+\n+vuint8m2_t test___riscv_vmv_v_x_u8m2_tu(vuint8m2_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m2_tu(merge,src,32);\n+}\n+\n+\n+vuint8m4_t test___riscv_vmv_v_x_u8m4_tu(vuint8m4_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m4_tu(merge,src,32);\n+}\n+\n+\n+vuint8m8_t test___riscv_vmv_v_x_u8m8_tu(vuint8m8_t merge,uint8_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u8m8_tu(merge,src,32);\n+}\n+\n+\n+vuint16mf4_t test___riscv_vmv_v_x_u16mf4_tu(vuint16mf4_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf4_tu(merge,src,32);\n+}\n+\n+\n+vuint16mf2_t test___riscv_vmv_v_x_u16mf2_tu(vuint16mf2_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16mf2_tu(merge,src,32);\n+}\n+\n+\n+vuint16m1_t test___riscv_vmv_v_x_u16m1_tu(vuint16m1_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m1_tu(merge,src,32);\n+}\n+\n+\n+vuint16m2_t test___riscv_vmv_v_x_u16m2_tu(vuint16m2_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m2_tu(merge,src,32);\n+}\n+\n+\n+vuint16m4_t test___riscv_vmv_v_x_u16m4_tu(vuint16m4_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m4_tu(merge,src,32);\n+}\n+\n+\n+vuint16m8_t test___riscv_vmv_v_x_u16m8_tu(vuint16m8_t merge,uint16_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u16m8_tu(merge,src,32);\n+}\n+\n+\n+vuint32mf2_t test___riscv_vmv_v_x_u32mf2_tu(vuint32mf2_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32mf2_tu(merge,src,32);\n+}\n+\n+\n+vuint32m1_t test___riscv_vmv_v_x_u32m1_tu(vuint32m1_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m1_tu(merge,src,32);\n+}\n+\n+\n+vuint32m2_t test___riscv_vmv_v_x_u32m2_tu(vuint32m2_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m2_tu(merge,src,32);\n+}\n+\n+\n+vuint32m4_t test___riscv_vmv_v_x_u32m4_tu(vuint32m4_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m4_tu(merge,src,32);\n+}\n+\n+\n+vuint32m8_t test___riscv_vmv_v_x_u32m8_tu(vuint32m8_t merge,uint32_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u32m8_tu(merge,src,32);\n+}\n+\n+\n+vuint64m1_t test___riscv_vmv_v_x_u64m1_tu(vuint64m1_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m1_tu(merge,src,32);\n+}\n+\n+\n+vuint64m2_t test___riscv_vmv_v_x_u64m2_tu(vuint64m2_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m2_tu(merge,src,32);\n+}\n+\n+\n+vuint64m4_t test___riscv_vmv_v_x_u64m4_tu(vuint64m4_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m4_tu(merge,src,32);\n+}\n+\n+\n+vuint64m8_t test___riscv_vmv_v_x_u64m8_tu(vuint64m8_t merge,uint64_t src,size_t vl)\n+{\n+    return __riscv_vmv_v_x_u64m8_tu(merge,src,32);\n+}\n+\n+\n+\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e8,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e16,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*mf2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e32,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m1,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m2,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m4,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */\n+/* { dg-final { scan-assembler-times {vsetvli\\s+zero,\\s*[a-x0-9]+,\\s*e64,\\s*m8,\\s*tu,\\s*m[au]\\s+vmv\\.v\\.x\\s+v[0-9]+,\\s*[a-x0-9]+} 2 } } */"}]}