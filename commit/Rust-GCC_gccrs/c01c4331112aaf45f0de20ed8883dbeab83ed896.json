{"sha": "c01c4331112aaf45f0de20ed8883dbeab83ed896", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzAxYzQzMzExMTJhYWY0NWYwZGUyMGVkODg4M2RiZWFiODNlZDg5Ng==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-05-23T20:14:21Z"}, "committer": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2021-05-23T20:14:59Z"}, "message": "i386: Add push insns for 4-byte vectors [PR100722]\n\n2021-05-23  Uro\u0161 Bizjak  <ubizjak@gmail.com>\n\ngcc/\n\tPR target/100722\n\t* config/i386/mmx.md (*push<VI_32:mode>2_rex64):\n\tNew instruction pattern.\n\t(*push<VI_32:mode>2): Ditto.\n\t(push splitter for SSE registers): New splitter.\n\ngcc/testsuite/\n\n\tPR target/100722\n\t* gcc.target/i386/pr100722.c: New test.", "tree": {"sha": "666fb1a08c3b7ae0fbb931a42160581a9f2afa73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/666fb1a08c3b7ae0fbb931a42160581a9f2afa73"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c01c4331112aaf45f0de20ed8883dbeab83ed896", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c01c4331112aaf45f0de20ed8883dbeab83ed896", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c01c4331112aaf45f0de20ed8883dbeab83ed896", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c01c4331112aaf45f0de20ed8883dbeab83ed896/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe03f4fc9548b3fdbff3c8284a994feaa7d6307d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe03f4fc9548b3fdbff3c8284a994feaa7d6307d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe03f4fc9548b3fdbff3c8284a994feaa7d6307d"}], "stats": {"total": 50, "additions": 50, "deletions": 0}, "files": [{"sha": "453e8ea406dccc767c0d4a358fe5057c5d46ab79", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c01c4331112aaf45f0de20ed8883dbeab83ed896/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c01c4331112aaf45f0de20ed8883dbeab83ed896/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=c01c4331112aaf45f0de20ed8883dbeab83ed896", "patch": "@@ -302,6 +302,39 @@\n \t   ]\n \t   (symbol_ref \"true\")))])\n \n+;; For TARGET_64BIT we always round up to 8 bytes.\n+(define_insn \"*push<mode>2_rex64\"\n+  [(set (match_operand:VI_32 0 \"push_operand\" \"=X,X\")\n+\t(match_operand:VI_32 1 \"nonmemory_no_elim_operand\" \"rC,*v\"))]\n+  \"TARGET_SSE2 && TARGET_64BIT\"\n+  \"@\n+   push{q}\\t%q1\n+   #\"\n+  [(set_attr \"type\" \"push,multi\")\n+   (set_attr \"mode\" \"DI\")])\n+\n+(define_insn \"*push<mode>2\"\n+  [(set (match_operand:VI_32 0 \"push_operand\" \"=<,<\")\n+\t(match_operand:VI_32 1 \"general_no_elim_operand\" \"rC*m,*v\"))]\n+  \"TARGET_SSE2 && !TARGET_64BIT\"\n+  \"@\n+   push{l}\\t%1\n+   #\"\n+  [(set_attr \"type\" \"push,multi\")\n+   (set_attr \"mode\" \"SI\")])\n+\n+(define_split\n+  [(set (match_operand:VI_32 0 \"push_operand\")\n+\t(match_operand:VI_32 1 \"sse_reg_operand\"))]\n+  \"TARGET_SSE2 && reload_completed\"\n+  [(set (reg:P SP_REG) (plus:P (reg:P SP_REG) (match_dup 2)))\n+    (set (match_dup 0) (match_dup 1))]\n+{\n+  operands[2] = GEN_INT (-PUSH_ROUNDING (GET_MODE_SIZE (<VI_32:MODE>mode)));\n+  /* Preserve memory attributes. */\n+  operands[0] = replace_equiv_address (operands[0], stack_pointer_rtx);\n+})\n+\n (define_expand \"movmisalign<mode>\"\n   [(set (match_operand:VI_32 0 \"nonimmediate_operand\")\n \t(match_operand:VI_32 1 \"nonimmediate_operand\"))]"}, {"sha": "f784039f275301e96cd37e0132d6e1d3435eb24f", "filename": "gcc/testsuite/gcc.target/i386/pr100722.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c01c4331112aaf45f0de20ed8883dbeab83ed896/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100722.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c01c4331112aaf45f0de20ed8883dbeab83ed896/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100722.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr100722.c?ref=c01c4331112aaf45f0de20ed8883dbeab83ed896", "patch": "@@ -0,0 +1,17 @@\n+/* PR target/100722 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O -msse2\" } */\n+\n+typedef char int8x4_t __attribute__((vector_size(4)));\n+\n+void stack_callee (int8x4_t, int8x4_t, int8x4_t, int8x4_t,\n+\t\t   int8x4_t, int8x4_t, int8x4_t);\n+\n+int8x4_t stack_caller_x1;\n+\n+void stack_caller (void)\n+{\n+  stack_callee (stack_caller_x1, stack_caller_x1, stack_caller_x1,\n+\t\tstack_caller_x1, stack_caller_x1, stack_caller_x1,\n+\t\tstack_caller_x1);\n+}"}]}