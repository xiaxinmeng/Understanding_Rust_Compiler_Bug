{"sha": "6ce41093ccf6e93a284850b1397ee908c7726ee7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNlNDEwOTNjY2Y2ZTkzYTI4NDg1MGIxMzk3ZWU5MDhjNzcyNmVlNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@cygnus.com", "date": "1999-10-01T00:45:07Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "1999-10-01T00:45:07Z"}, "message": "alpha.md (*): Use nonimmediate not general_operand for SET_DEST.\n\n        * alpha.md (*): Use nonimmediate not general_operand for SET_DEST.\n        (ffsdi2, extxl, insxh, mskxh): Add missing DImode to SET_SRC.\n        (call-value patterns): Move to end of file.\n        (*): Remove mode from label_ref in (pc) context.\n        (movstrqi): Use memory not general_operand for BLKmode operands.\n        (prologue_stack_probe_loop, builtin_longjmp): Add missing mode\n        to register_operand operands.\n        (peep2 patterns): Convert from commented-out peephole patterns.\n\nFrom-SVN: r29739", "tree": {"sha": "91740e14c6138f1c4f7b887ccb7ecaf61be50e75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/91740e14c6138f1c4f7b887ccb7ecaf61be50e75"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6ce41093ccf6e93a284850b1397ee908c7726ee7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ce41093ccf6e93a284850b1397ee908c7726ee7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ce41093ccf6e93a284850b1397ee908c7726ee7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ce41093ccf6e93a284850b1397ee908c7726ee7/comments", "author": null, "committer": null, "parents": [{"sha": "2b76013c9a51825a9447cb693c2bb75ed35aa265", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b76013c9a51825a9447cb693c2bb75ed35aa265", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b76013c9a51825a9447cb693c2bb75ed35aa265"}], "stats": {"total": 220, "additions": 119, "deletions": 101}, "files": [{"sha": "52e741deeca9991d1690b9a813cd85d6309aa64f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ce41093ccf6e93a284850b1397ee908c7726ee7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ce41093ccf6e93a284850b1397ee908c7726ee7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6ce41093ccf6e93a284850b1397ee908c7726ee7", "patch": "@@ -1,3 +1,14 @@\n+Thu Sep 30 17:39:16 1999  Richard Henderson  <rth@cygnus.com>\n+\n+\t* alpha.md (*): Use nonimmediate not general_operand for SET_DEST.\n+\t(ffsdi2, extxl, insxh, mskxh): Add missing DImode to SET_SRC.\n+\t(call-value patterns): Move to end of file.\n+\t(*): Remove mode from label_ref in (pc) context.\n+\t(movstrqi): Use memory not general_operand for BLKmode operands.\n+\t(prologue_stack_probe_loop, builtin_longjmp): Add missing mode \n+\tto register_operand operands.\n+\t(peep2 patterns): Convert from commented-out peephole patterns.\n+\n Thu Sep 30 14:39:17 1999  Bernd Schmidt  <bernds@cygnus.co.uk>\n \n \t* tree.h (enum built_in_function): Rename BUILT_IN_DWARF_REG_SIZE"}, {"sha": "ab7dcb3b967237cf21ca6de1ff50223c06ba1ced", "filename": "gcc/config/alpha/alpha.md", "status": "modified", "additions": 108, "deletions": 101, "changes": 209, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6ce41093ccf6e93a284850b1397ee908c7726ee7/gcc%2Fconfig%2Falpha%2Falpha.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6ce41093ccf6e93a284850b1397ee908c7726ee7/gcc%2Fconfig%2Falpha%2Falpha.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Falpha.md?ref=6ce41093ccf6e93a284850b1397ee908c7726ee7", "patch": "@@ -901,7 +901,7 @@\n \t\t   (sign_extend:DI (div:SI (reg:DI 24) (reg:DI 25))))\n \t      (clobber (reg:DI 23))\n \t      (clobber (reg:DI 28))])\n-   (set (match_operand:SI 0 \"general_operand\" \"\")\n+   (set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n \t(subreg:SI (reg:DI 27) 0))]\n   \"!TARGET_OPEN_VMS\"\n   \"\")\n@@ -915,7 +915,7 @@\n \t\t   (sign_extend:DI (udiv:SI (reg:DI 24) (reg:DI 25))))\n \t      (clobber (reg:DI 23))\n \t      (clobber (reg:DI 28))])\n-   (set (match_operand:SI 0 \"general_operand\" \"\")\n+   (set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n \t(subreg:SI (reg:DI 27) 0))]\n   \"!TARGET_OPEN_VMS\"\n   \"\")\n@@ -929,7 +929,7 @@\n \t\t   (sign_extend:DI (mod:SI (reg:DI 24) (reg:DI 25))))\n \t      (clobber (reg:DI 23))\n \t      (clobber (reg:DI 28))])\n-   (set (match_operand:SI 0 \"general_operand\" \"\")\n+   (set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n \t(subreg:SI (reg:DI 27) 0))]\n   \"!TARGET_OPEN_VMS\"\n   \"\")\n@@ -943,7 +943,7 @@\n \t\t   (sign_extend:DI (umod:SI (reg:DI 24) (reg:DI 25))))\n \t      (clobber (reg:DI 23))\n \t      (clobber (reg:DI 28))])\n-   (set (match_operand:SI 0 \"general_operand\" \"\")\n+   (set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n \t(subreg:SI (reg:DI 27) 0))]\n   \"!TARGET_OPEN_VMS\"\n   \"\")\n@@ -956,7 +956,7 @@\n \t\t\t   (reg:DI 25)))\n \t      (clobber (reg:DI 23))\n \t      (clobber (reg:DI 28))])\n-   (set (match_operand:DI 0 \"general_operand\" \"\")\n+   (set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n \t(reg:DI 27))]\n   \"!TARGET_OPEN_VMS\"\n   \"\")\n@@ -969,7 +969,7 @@\n \t\t\t    (reg:DI 25)))\n \t      (clobber (reg:DI 23))\n \t      (clobber (reg:DI 28))])\n-   (set (match_operand:DI 0 \"general_operand\" \"\")\n+   (set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n \t(reg:DI 27))]\n   \"!TARGET_OPEN_VMS\"\n   \"\")\n@@ -982,7 +982,7 @@\n \t\t\t   (reg:DI 25)))\n \t      (clobber (reg:DI 23))\n \t      (clobber (reg:DI 28))])\n-   (set (match_operand:DI 0 \"general_operand\" \"\")\n+   (set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n \t(reg:DI 27))]\n   \"!TARGET_OPEN_VMS\"\n   \"\")\n@@ -995,7 +995,7 @@\n \t\t\t    (reg:DI 25)))\n \t      (clobber (reg:DI 23))\n \t      (clobber (reg:DI 28))])\n-   (set (match_operand:DI 0 \"general_operand\" \"\")\n+   (set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n \t(reg:DI 27))]\n   \"!TARGET_OPEN_VMS\"\n   \"\")\n@@ -1233,7 +1233,7 @@\n \n (define_expand \"ffsdi2\"\n   [(set (match_dup 2)\n-\t(unspec [(match_operand:DI 1 \"register_operand\" \"\")] 1))\n+\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"\")] 1))\n    (set (match_dup 3)\n \t(plus:DI (match_dup 2) (const_int 1)))\n    (set (match_operand:DI 0 \"register_operand\" \"\")\n@@ -1248,7 +1248,7 @@\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(unspec [(match_operand:DI 1 \"register_operand\" \"r\")] 1))]\n+\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"r\")] 1))]\n   \"TARGET_CIX\"\n   \"cttz %1,%0\"\n   ; EV6 calls all mvi and cttz/ctlz/popc class imisc, so just \n@@ -1582,9 +1582,9 @@\n \n (define_insn \"\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(and (lshiftrt:DI (match_operand:DI 1 \"reg_or_0_operand\" \"rJ\")\n-\t\t(ashift:DI (match_operand:DI 2 \"reg_or_8bit_operand\" \"rI\")\n-\t\t\t   (const_int 3)))\n+\t(and:DI (lshiftrt:DI (match_operand:DI 1 \"reg_or_0_operand\" \"rJ\")\n+\t\t  (ashift:DI (match_operand:DI 2 \"reg_or_8bit_operand\" \"rI\")\n+\t\t\t     (const_int 3)))\n \t     (match_operand:DI 3 \"mode_mask_operand\" \"n\")))]\n   \"\"\n   \"ext%U3l %1,%2,%0\"\n@@ -1769,9 +1769,9 @@\n \n (define_insn \"insxh\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(unspec [(match_operand:DI 1 \"register_operand\" \"r\")\n-\t\t (match_operand:DI 2 \"mode_width_operand\" \"n\")\n-\t\t (match_operand:DI 3 \"reg_or_8bit_operand\" \"rI\")] 2))]\n+\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"r\")\n+\t\t    (match_operand:DI 2 \"mode_width_operand\" \"n\")\n+\t\t    (match_operand:DI 3 \"reg_or_8bit_operand\" \"rI\")] 2))]\n   \"\"\n   \"ins%M2h %1,%3,%0\"\n   [(set_attr \"type\" \"shift\")])\n@@ -1795,9 +1795,9 @@\n \n (define_insn \"mskxh\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n-\t(unspec [(match_operand:DI 1 \"register_operand\" \"r\")\n-\t\t (match_operand:DI 2 \"mode_width_operand\" \"n\")\n-\t\t (match_operand:DI 3 \"reg_or_8bit_operand\" \"rI\")] 3))]\n+\t(unspec:DI [(match_operand:DI 1 \"register_operand\" \"r\")\n+\t\t    (match_operand:DI 2 \"mode_width_operand\" \"n\")\n+\t\t    (match_operand:DI 3 \"reg_or_8bit_operand\" \"rI\")] 3))]\n   \"\"\n   \"msk%M2h %1,%3,%0\"\n   [(set_attr \"type\" \"shift\")])\n@@ -3745,7 +3745,7 @@\n (define_insn \"\"\n   [(call (mem:DI (match_operand:DI 0 \"call_operand\" \"r,i\"))\n \t (match_operand 1 \"\" \"\"))\n-   (use (match_operand:DI 2 \"general_operand\" \"r,m\"))\n+   (use (match_operand:DI 2 \"nonimmediate_operand\" \"r,m\"))\n    (use (reg:DI 25))\n    (use (reg:DI 26))\n    (clobber (reg:DI 27))]\n@@ -3756,48 +3756,6 @@\n   [(set_attr \"type\" \"jsr\")\n    (set_attr \"length\" \"12,16\")])\n \n-(define_insn \"\"\n-  [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:DI (match_operand:DI 1 \"call_operand\" \"r,R,i\"))\n-\t      (match_operand 2 \"\" \"\")))\n-   (clobber (reg:DI 27))\n-   (clobber (reg:DI 26))]\n-  \"! TARGET_WINDOWS_NT && ! TARGET_OPEN_VMS\"\n-  \"@\n-   jsr $26,($27),0\\;ldgp $29,0($26)\n-   bsr $26,$%1..ng\n-   jsr $26,%1\\;ldgp $29,0($26)\"\n-  [(set_attr \"type\" \"jsr\")\n-   (set_attr \"length\" \"12,*,16\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:DI (match_operand:DI 1 \"call_operand\" \"r,R,i\"))\n-\t      (match_operand 2 \"\" \"\")))\n-   (clobber (reg:DI 26))]\n-  \"TARGET_WINDOWS_NT\"\n-  \"@\n-   jsr $26,(%1)\n-   bsr $26,%1\n-   jsr $26,%1\"\n-  [(set_attr \"type\" \"jsr\")\n-   (set_attr \"length\" \"*,*,12\")])\n-\n-(define_insn \"\"\n-  [(set (match_operand 0 \"\" \"\")\n-\t(call (mem:DI (match_operand:DI 1 \"call_operand\" \"r,i\"))\n-\t      (match_operand 2 \"\" \"\")))\n-   (use (match_operand:DI 3 \"general_operand\" \"r,m\"))\n-   (use (reg:DI 25))\n-   (use (reg:DI 26))\n-   (clobber (reg:DI 27))]\n-  \"TARGET_OPEN_VMS\"\n-  \"@\n-   mov %3,$27\\;jsr $26,0\\;ldq $27,0($29)\n-   ldq $27,%3\\;jsr $26,%1\\;ldq $27,0($29)\"\n-  [(set_attr \"type\" \"jsr\")\n-   (set_attr \"length\" \"12,16\")])\n-\n ;; Call subroutine returning any type.\n \n (define_expand \"untyped_call\"\n@@ -3885,7 +3843,7 @@\n \t(sign_extend:DI (match_operand:SI 0 \"register_operand\" \"\")))\n    (parallel [(set (pc)\n \t\t   (plus:DI (match_dup 3)\n-\t\t\t    (label_ref:DI (match_operand 1 \"\" \"\"))))\n+\t\t\t    (label_ref (match_operand 1 \"\" \"\"))))\n \t      (clobber (match_scratch:DI 2 \"=r\"))])]\n   \"\"\n   \"\n@@ -3911,15 +3869,15 @@\n       (match_operand:DI 0 \"register_operand\" \"\"))\n         (set (pc)\n \t(plus:DI (match_dup 2)\n-\t\t(label_ref:DI (match_operand 1 \"\" \"\"))))]\n+\t\t(label_ref (match_operand 1 \"\" \"\"))))]\n   \"\"\n   \"\n { operands[2] = gen_reg_rtx (DImode); }\")\n \n (define_insn \"\"\n   [(set (pc)\n-\t(plus:DI (match_operand:DI 0 \"register_operand\" \"r\")\n-\t\t (label_ref:DI (match_operand 1 \"\" \"\"))))\n+\t(plus (match_operand:DI 0 \"register_operand\" \"r\")\n+\t      (label_ref (match_operand 1 \"\" \"\"))))\n    (clobber (match_scratch:DI 2 \"=r\"))]\n   \"! TARGET_WINDOWS_NT && ! TARGET_OPEN_VMS && next_active_insn (insn) != 0\n    && GET_CODE (PATTERN (next_active_insn (insn))) == ADDR_DIFF_VEC\n@@ -4011,8 +3969,8 @@\n \n (define_insn \"\"\n   [(set (pc)\n-\t(plus:DI (match_operand 0 \"register_operand\" \"r\")\n-\t\t(label_ref (match_operand 1 \"\" \"\"))))]\n+\t(plus (match_operand:DI 0 \"register_operand\" \"r\")\n+\t      (label_ref (match_operand 1 \"\" \"\"))))]\n   \"TARGET_OPEN_VMS\"\n   \"jmp $31,(%0),0\"\n   [(set_attr \"type\" \"ibr\")])\n@@ -4225,7 +4183,7 @@\n ;; constants.\n \n (define_expand \"movsi\"\n-  [(set (match_operand:SI 0 \"general_operand\" \"\")\n+  [(set (match_operand:SI 0 \"nonimmediate_operand\" \"\")\n \t(match_operand:SI 1 \"general_operand\" \"\"))]\n   \"\"\n   \"\n@@ -4265,7 +4223,7 @@\n }\")\n \n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"general_operand\" \"=r,r,r,r,r,m,f,f,Q\")\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,m,f,f,Q\")\n \t(match_operand:DI 1 \"input_operand\" \"rJ,K,L,s,m,rJ,fJ,Q,f\"))]\n   \"! TARGET_FIX\n    && (register_operand (operands[0], DImode)\n@@ -4283,7 +4241,7 @@\n   [(set_attr \"type\" \"ilog,iadd,iadd,ldsym,ild,ist,fcpys,fld,fst\")])\n \n (define_insn \"\"\n-  [(set (match_operand:DI 0 \"general_operand\" \"=r,r,r,r,r,m,f,f,Q,r,*f\")\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"=r,r,r,r,r,m,f,f,Q,r,*f\")\n \t(match_operand:DI 1 \"input_operand\" \"rJ,K,L,s,m,rJ,fJ,Q,f,f,*r\"))]\n   \"TARGET_FIX\n    && (register_operand (operands[0], DImode)\n@@ -4306,7 +4264,7 @@\n ;; memory, and construct long 32-bit constants.\n \n (define_expand \"movdi\"\n-  [(set (match_operand:DI 0 \"general_operand\" \"\")\n+  [(set (match_operand:DI 0 \"nonimmediate_operand\" \"\")\n \t(match_operand:DI 1 \"general_operand\" \"\"))]\n   \"\"\n   \"\n@@ -4529,7 +4487,7 @@\n ;; registers for reload.\n \n (define_expand \"movqi\"\n-  [(set (match_operand:QI 0 \"general_operand\" \"\")\n+  [(set (match_operand:QI 0 \"nonimmediate_operand\" \"\")\n \t(match_operand:QI 1 \"general_operand\" \"\"))]\n   \"\"\n   \"\n@@ -4647,7 +4605,7 @@\n }\")\n \n (define_expand \"movhi\"\n-  [(set (match_operand:HI 0 \"general_operand\" \"\")\n+  [(set (match_operand:HI 0 \"nonimmediate_operand\" \"\")\n \t(match_operand:HI 1 \"general_operand\" \"\"))]\n   \"\"\n   \"\n@@ -5043,7 +5001,7 @@\n \n (define_expand \"extzv\"\n   [(set (match_operand:DI 0 \"register_operand\" \"\")\n-\t(zero_extract:DI (match_operand:DI 1 \"general_operand\" \"\")\n+\t(zero_extract:DI (match_operand:DI 1 \"nonimmediate_operand\" \"\")\n \t\t\t (match_operand:DI 2 \"immediate_operand\" \"\")\n \t\t\t (match_operand:DI 3 \"immediate_operand\" \"\")))]\n   \"\"\n@@ -5105,8 +5063,8 @@\n ;; Argument 3 is the alignment\n \n (define_expand \"movstrqi\"\n-  [(parallel [(set (match_operand:BLK 0 \"general_operand\" \"\")\n-\t\t   (match_operand:BLK 1 \"general_operand\" \"\"))\n+  [(parallel [(set (match_operand:BLK 0 \"memory_operand\" \"\")\n+\t\t   (match_operand:BLK 1 \"memory_operand\" \"\"))\n \t      (use (match_operand:DI 2 \"immediate_operand\" \"\"))\n \t      (use (match_operand:DI 3 \"immediate_operand\" \"\"))])]\n   \"\"\n@@ -5119,7 +5077,7 @@\n }\")\n \n (define_expand \"clrstrqi\"\n-  [(parallel [(set (match_operand:BLK 0 \"general_operand\" \"\")\n+  [(parallel [(set (match_operand:BLK 0 \"memory_operand\" \"\")\n \t\t   (const_int 0))\n \t      (use (match_operand:DI 1 \"immediate_operand\" \"\"))\n \t      (use (match_operand:DI 2 \"immediate_operand\" \"\"))])]\n@@ -5228,8 +5186,8 @@\n ;; the loop in this one insn.\n \n (define_insn \"prologue_stack_probe_loop\"\n-  [(unspec_volatile [(match_operand 0 \"register_operand\" \"r\")\n-\t\t     (match_operand 1 \"register_operand\" \"r\")] 5)]\n+  [(unspec_volatile [(match_operand:DI 0 \"register_operand\" \"r\")\n+\t\t     (match_operand:DI 1 \"register_operand\" \"r\")] 5)]\n   \"\"\n   \"*\n {\n@@ -5286,7 +5244,7 @@\n   \"lda %0,%1(%0)\")\n \n (define_expand \"builtin_longjmp\"\n-  [(unspec_volatile [(match_operand 0 \"register_operand\" \"r\")] 3)]\n+  [(unspec_volatile [(match_operand:DI 0 \"register_operand\" \"r\")] 3)]\n   \"! TARGET_OPEN_VMS && ! TARGET_WINDOWS_NT\"\n   \"\n {\n@@ -5397,28 +5355,77 @@\n   [(unspec_volatile [(match_operand 0 \"immediate_operand\" \"i\")] 6)]\n   \"\"\n   \".align %0 #realign\")\n+\n+;; The call patterns are at the end of the file because their\n+;; wildcard operand0 interferes with nice recognition.\n+\n+(define_insn \"\"\n+  [(set (match_operand 0 \"\" \"\")\n+\t(call (mem:DI (match_operand:DI 1 \"call_operand\" \"r,R,i\"))\n+\t      (match_operand 2 \"\" \"\")))\n+   (clobber (reg:DI 27))\n+   (clobber (reg:DI 26))]\n+  \"! TARGET_WINDOWS_NT && ! TARGET_OPEN_VMS\"\n+  \"@\n+   jsr $26,($27),0\\;ldgp $29,0($26)\n+   bsr $26,$%1..ng\n+   jsr $26,%1\\;ldgp $29,0($26)\"\n+  [(set_attr \"type\" \"jsr\")\n+   (set_attr \"length\" \"12,*,16\")])\n+\n+(define_insn \"\"\n+  [(set (match_operand 0 \"\" \"\")\n+\t(call (mem:DI (match_operand:DI 1 \"call_operand\" \"r,R,i\"))\n+\t      (match_operand 2 \"\" \"\")))\n+   (clobber (reg:DI 26))]\n+  \"TARGET_WINDOWS_NT\"\n+  \"@\n+   jsr $26,(%1)\n+   bsr $26,%1\n+   jsr $26,%1\"\n+  [(set_attr \"type\" \"jsr\")\n+   (set_attr \"length\" \"*,*,12\")])\n+\n+(define_insn \"\"\n+  [(set (match_operand 0 \"\" \"\")\n+\t(call (mem:DI (match_operand:DI 1 \"call_operand\" \"r,i\"))\n+\t      (match_operand 2 \"\" \"\")))\n+   (use (match_operand:DI 3 \"nonimmediate_operand\" \"r,m\"))\n+   (use (reg:DI 25))\n+   (use (reg:DI 26))\n+   (clobber (reg:DI 27))]\n+  \"TARGET_OPEN_VMS\"\n+  \"@\n+   mov %3,$27\\;jsr $26,0\\;ldq $27,0($29)\n+   ldq $27,%3\\;jsr $26,%1\\;ldq $27,0($29)\"\n+  [(set_attr \"type\" \"jsr\")\n+   (set_attr \"length\" \"12,16\")])\n+\n \f\n ;; Peepholes go at the end.\n \n ;; Optimize sign-extension of SImode loads.  This shows up in the wake of\n ;; reload when converting fp->int.\n-;;\n-;; ??? What to do now that we actually care about the packing and\n-;; alignment of instructions?  Perhaps reload can be enlightened, or\n-;; the peephole pass moved up after reload but before sched2?\n-;\n-;(define_peephole\n-;  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-;        (match_operand:SI 1 \"memory_operand\" \"m\"))\n-;   (set (match_operand:DI 2 \"register_operand\" \"=r\")\n-;        (sign_extend:DI (match_dup 0)))]\n-;  \"dead_or_set_p (insn, operands[0])\"\n-;  \"ldl %2,%1\")\n-;\n-;(define_peephole\n-;  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n-;        (match_operand:SI 1 \"hard_fp_register_operand\" \"f\"))\n-;   (set (match_operand:DI 2 \"register_operand\" \"=r\")\n-;        (sign_extend:DI (match_dup 0)))]\n-;  \"TARGET_FIX && dead_or_set_p (insn, operands[0])\"\n-;  \"ftois %1,%2\")\n+\n+(define_peephole2\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+        (match_operand:SI 1 \"memory_operand\" \"m\"))\n+   (set (match_operand:DI 2 \"register_operand\" \"=r\")\n+        (sign_extend:DI (match_dup 0)))]\n+  \"rtx_equal_p (operands[0], operands[2])\n+   || reg_dead_p (insn, operands[0])\"\n+  [(set (match_dup 2)\n+\t(sign_extend:DI (match_dup 1)))]\n+  \"\")\n+\n+(define_peephole2\n+  [(set (match_operand:SI 0 \"register_operand\" \"=r\")\n+        (match_operand:SI 1 \"hard_fp_register_operand\" \"f\"))\n+   (set (match_operand:DI 2 \"register_operand\" \"=r\")\n+        (sign_extend:DI (match_dup 0)))]\n+  \"TARGET_FIX\n+   && (rtx_equal_p (operands[0], operands[2])\n+       || reg_dead_p (insn, operands[0]))\"\n+  [(set (match_dup 2)\n+\t(sign_extend:DI (match_dup 1)))]\n+  \"\")"}]}