{"sha": "39bde5eae367fc1e57d277ea4496c485a3b9c09c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzliZGU1ZWFlMzY3ZmMxZTU3ZDI3N2VhNDQ5NmM0ODVhM2I5YzA5Yw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-05-23T20:51:22Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-05-23T20:51:22Z"}, "message": "re PR c++/57388 ([C++11] ICE when function types with ref-qualifiers meet other function types)\n\n\tPR c++/57388\n\t* tree.c (build_ref_qualified_type): Clear\n\tFUNCTION_RVALUE_QUALIFIED for lvalue ref-qualifier.\n\nFrom-SVN: r199269", "tree": {"sha": "328bd7d8b0c52a07236e22cfca2409b5dff3e30e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/328bd7d8b0c52a07236e22cfca2409b5dff3e30e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/39bde5eae367fc1e57d277ea4496c485a3b9c09c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39bde5eae367fc1e57d277ea4496c485a3b9c09c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/39bde5eae367fc1e57d277ea4496c485a3b9c09c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/39bde5eae367fc1e57d277ea4496c485a3b9c09c/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "46aeac1b9f62be85dcfa7f6a0396440dbe10f321", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/46aeac1b9f62be85dcfa7f6a0396440dbe10f321", "html_url": "https://github.com/Rust-GCC/gccrs/commit/46aeac1b9f62be85dcfa7f6a0396440dbe10f321"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "885d4c940f4add1e174c32d9f12e644454f5e96c", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39bde5eae367fc1e57d277ea4496c485a3b9c09c/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39bde5eae367fc1e57d277ea4496c485a3b9c09c/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=39bde5eae367fc1e57d277ea4496c485a3b9c09c", "patch": "@@ -1,3 +1,9 @@\n+2013-05-23  Jason Merrill  <jason@redhat.com>\n+\n+\tPR c++/57388\n+\t* tree.c (build_ref_qualified_type): Clear\n+\tFUNCTION_RVALUE_QUALIFIED for lvalue ref-qualifier.\n+\n 2013-05-22  Jason Merrill  <jason@redhat.com>\n \n \tPR c++/56930"}, {"sha": "0fbb33d2042dba52397d5df3d7054def733c116d", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39bde5eae367fc1e57d277ea4496c485a3b9c09c/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39bde5eae367fc1e57d277ea4496c485a3b9c09c/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=39bde5eae367fc1e57d277ea4496c485a3b9c09c", "patch": "@@ -1769,8 +1769,10 @@ build_ref_qualified_type (tree type, cp_ref_qualifier rqual)\n     {\n     case REF_QUAL_RVALUE:\n       FUNCTION_RVALUE_QUALIFIED (t) = 1;\n-      /* Intentional fall through */\n+      FUNCTION_REF_QUALIFIED (t) = 1;\n+      break;\n     case REF_QUAL_LVALUE:\n+      FUNCTION_RVALUE_QUALIFIED (t) = 0;\n       FUNCTION_REF_QUALIFIED (t) = 1;\n       break;\n     default:"}, {"sha": "84d3b0f2ddb69450864354ef5d119218adb94cf3", "filename": "gcc/testsuite/g++.dg/cpp0x/ref-qual13.C", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/39bde5eae367fc1e57d277ea4496c485a3b9c09c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fref-qual13.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/39bde5eae367fc1e57d277ea4496c485a3b9c09c/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fref-qual13.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Fref-qual13.C?ref=39bde5eae367fc1e57d277ea4496c485a3b9c09c", "patch": "@@ -0,0 +1,29 @@\n+// PR c++/57388\n+// { dg-require-effective-target c++11 }\n+\n+template<class> struct A\n+{\n+  static constexpr bool value = false;\n+};\n+\n+template<class Res, class... Args>\n+struct A<Res(Args...)>\n+{\n+  static constexpr bool value = true;\n+};\n+\n+template<class Res, class... Args>\n+struct A<Res(Args...) const &>\n+{\n+  static constexpr bool value = true;\n+};\n+\n+template<class Res, class... Args>\n+struct A<Res(Args...) const &&>\n+{\n+  static constexpr bool value = true;\n+};\n+\n+static_assert(A<void()>::value, \"Ouch\");\n+static_assert(A<void() const &>::value, \"\"); // #1\n+static_assert(A<void() const &&>::value, \"\"); // #2"}]}