{"sha": "de6e81ea961219d0726db67776d11ce75a4cae1b", "node_id": "C_kwDOANBUbNoAKGRlNmU4MWVhOTYxMjE5ZDA3MjZkYjY3Nzc2ZDExY2U3NWE0Y2FlMWI", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-02-15T22:03:49Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2022-03-04T13:21:01Z"}, "message": "OpenACC 'kernels' decomposition: Move 'TREE_ADDRESSABLE' setting into OMP lowering [PR100280]\n\n... in preparation for later changes.  No functional change.\n\nFollow-up to commit 9b32c1669aad5459dd053424f9967011348add83\n\"OpenACC 'kernels' decomposition: Mark variables used in\nsynthesized data clauses as addressable [PR100280]\".\n\n\tPR middle-end/100280\n\tgcc/\n\t* tree.h (OMP_CLAUSE_MAP_DECL_MAKE_ADDRESSABLE): New.\n\t* tree-core.h: Document it.\n\t* omp-low.cc (scan_sharing_clauses) <OMP_CLAUSE_MAP>: Handle\n\t'OMP_CLAUSE_MAP_DECL_MAKE_ADDRESSABLE'.\n\t* omp-oacc-kernels-decompose.cc (maybe_build_inner_data_region):\n\tSet 'OMP_CLAUSE_MAP_DECL_MAKE_ADDRESSABLE' instead of\n\t'TREE_ADDRESSABLE'.\n\tgcc/testsuite/\n\t* c-c++-common/goacc/classify-kernels-unparallelized.c: Adjust.\n\t* c-c++-common/goacc/classify-kernels.c: Likewise.\n\t* c-c++-common/goacc/kernels-decompose-2.c: Likewise.\n\t* c-c++-common/goacc/kernels-decompose-pr100280-1.c: Likewise.\n\t* c-c++-common/goacc/kernels-decompose-pr104061-1-2.c: Likewise.\n\t* c-c++-common/goacc/kernels-decompose-pr104061-1-3.c: Likewise.\n\t* c-c++-common/goacc/kernels-decompose-pr104061-1-4.c: Likewise.\n\t* c-c++-common/goacc/kernels-decompose-pr104132-1.c: Likewise.\n\t* c-c++-common/goacc/kernels-decompose-pr104133-1.c: Likewise.\n\tlibgomp/\n\t* testsuite/libgomp.oacc-c-c++-common/f-asyncwait-1.c: Adjust.\n\t* testsuite/libgomp.oacc-c-c++-common/kernels-decompose-1.c:\n\tLikewise.", "tree": {"sha": "9d03f47cf73d8f76c05ab7a2b9b4ca8d3a7c7e77", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9d03f47cf73d8f76c05ab7a2b9b4ca8d3a7c7e77"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/de6e81ea961219d0726db67776d11ce75a4cae1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6e81ea961219d0726db67776d11ce75a4cae1b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de6e81ea961219d0726db67776d11ce75a4cae1b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de6e81ea961219d0726db67776d11ce75a4cae1b/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5ae22c56152b1a1f4b4e1d7ae04431a9e4710cc"}], "stats": {"total": 86, "additions": 70, "deletions": 16}, "files": [{"sha": "6654bfd426e092cb41e52bd5056533e5503d4741", "filename": "gcc/omp-low.cc", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Fomp-low.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Fomp-low.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.cc?ref=de6e81ea961219d0726db67776d11ce75a4cae1b", "patch": "@@ -1495,6 +1495,37 @@ scan_sharing_clauses (tree clauses, omp_context *ctx)\n \t  if (ctx->outer)\n \t    scan_omp_op (&OMP_CLAUSE_SIZE (c), ctx->outer);\n \t  decl = OMP_CLAUSE_DECL (c);\n+\t  /* If requested, make 'decl' addressable.  */\n+\t  if (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_MAP\n+\t      && OMP_CLAUSE_MAP_DECL_MAKE_ADDRESSABLE (c))\n+\t    {\n+\t      gcc_checking_assert (DECL_P (decl));\n+\n+\t      gcc_checking_assert (!TREE_ADDRESSABLE (decl));\n+\t      TREE_ADDRESSABLE (decl) = 1;\n+\n+\t      if (dump_enabled_p ())\n+\t\t{\n+\t\t  location_t loc = OMP_CLAUSE_LOCATION (c);\n+\t\t  const dump_user_location_t d_u_loc\n+\t\t    = dump_user_location_t::from_location_t (loc);\n+\t\t  /* PR100695 \"Format decoder, quoting in 'dump_printf' etc.\" */\n+#if __GNUC__ >= 10\n+# pragma GCC diagnostic push\n+# pragma GCC diagnostic ignored \"-Wformat\"\n+#endif\n+\t\t  dump_printf_loc (MSG_NOTE, d_u_loc,\n+\t\t\t\t   \"variable %<%T%>\"\n+\t\t\t\t   \" made addressable\\n\",\n+\t\t\t\t   decl);\n+#if __GNUC__ >= 10\n+# pragma GCC diagnostic pop\n+#endif\n+\t\t}\n+\n+\t      /* Done.  */\n+\t      OMP_CLAUSE_MAP_DECL_MAKE_ADDRESSABLE (c) = 0;\n+\t    }\n \t  /* Global variables with \"omp declare target\" attribute\n \t     don't need to be copied, the receiver side will use them\n \t     directly.  However, global variables with \"omp declare target link\""}, {"sha": "ecbd3071e5dfbb19c3f1ae71f6a5f28324d7c188", "filename": "gcc/omp-oacc-kernels-decompose.cc", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Fomp-oacc-kernels-decompose.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Fomp-oacc-kernels-decompose.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-oacc-kernels-decompose.cc?ref=de6e81ea961219d0726db67776d11ce75a4cae1b", "patch": "@@ -847,7 +847,8 @@ maybe_build_inner_data_region (location_t loc, gimple *body,\n \t  /* See <https://gcc.gnu.org/PR100280>.  */\n \t  if (!TREE_ADDRESSABLE (v))\n \t    {\n-\t      TREE_ADDRESSABLE (v) = 1;\n+\t      /* Request that OMP lowering make 'v' addressable.  */\n+\t      OMP_CLAUSE_MAP_DECL_MAKE_ADDRESSABLE (new_clause) = 1;\n \n \t      if (dump_enabled_p ())\n \t\t{\n@@ -861,7 +862,7 @@ maybe_build_inner_data_region (location_t loc, gimple *body,\n \t\t  dump_printf_loc (MSG_NOTE, d_u_loc,\n \t\t\t\t   \"OpenACC %<kernels%> decomposition:\"\n \t\t\t\t   \" variable %<%T%> declared in block\"\n-\t\t\t\t   \" made addressable\\n\",\n+\t\t\t\t   \" requested to be made addressable\\n\",\n \t\t\t\t   v);\n #if __GNUC__ >= 10\n # pragma GCC diagnostic pop"}, {"sha": "61871d118a9800fa35b3a4c46a19028d6fe6edb1", "filename": "gcc/testsuite/c-c++-common/goacc/classify-kernels-unparallelized.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fclassify-kernels-unparallelized.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fclassify-kernels-unparallelized.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fclassify-kernels-unparallelized.c?ref=de6e81ea961219d0726db67776d11ce75a4cae1b", "patch": "@@ -29,7 +29,8 @@ extern unsigned int f (unsigned int);\n void KERNELS ()\n {\n #pragma acc kernels copyin (a[0:N], b[0:N]) copyout (c[0:N]) /* { dg-line l_compute1 } */\n-  /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block made addressable} {} { target *-*-* } l_compute1 } */\n+  /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block requested to be made addressable} {} { target *-*-* } l_compute1 } */\n+  /* { dg-note {variable 'i' made addressable} {} { target *-*-* } l_compute1 } */\n   /* { dg-note {variable 'i' declared in block is candidate for adjusting OpenACC privatization level} {} { target *-*-* } l_compute1 } */\n   /* { dg-note {variable '[abc]\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} {} { target *-*-* } l_compute1 } */\n   /* { dg-optimized {assigned OpenACC seq loop parallelism} {} { target *-*-* } l_compute1 } */"}, {"sha": "1473337986f9fce695665afc0344fea7b0c0dc91", "filename": "gcc/testsuite/c-c++-common/goacc/classify-kernels.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fclassify-kernels.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fclassify-kernels.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fclassify-kernels.c?ref=de6e81ea961219d0726db67776d11ce75a4cae1b", "patch": "@@ -25,7 +25,8 @@ extern unsigned int *__restrict c;\n void KERNELS ()\n {\n #pragma acc kernels copyin (a[0:N], b[0:N]) copyout (c[0:N]) /* { dg-line l_compute1 } */\n-  /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block made addressable} {} { target *-*-* } l_compute1 } */\n+  /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block requested to be made addressable} {} { target *-*-* } l_compute1 } */\n+  /* { dg-note {variable 'i' made addressable} {} { target *-*-* } l_compute1 } */\n   /* { dg-note {variable 'i' declared in block is candidate for adjusting OpenACC privatization level} {} { target *-*-* } l_compute1 } */\n   /* { dg-note {variable '[abc]\\.[0-9]+' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} {} { target *-*-* } l_compute1 } */\n   /* { dg-optimized {assigned OpenACC gang loop parallelism} {} { target *-*-* } l_compute1 } */"}, {"sha": "bf158311daec831a4533678d4e538e0a8ca55c32", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-decompose-2.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-2.c?ref=de6e81ea961219d0726db67776d11ce75a4cae1b", "patch": "@@ -66,14 +66,16 @@ main ()\n \n #pragma acc kernels /* { dg-line l_compute[incr c_compute] } */\n   /* { dg-note {beginning 'gang-single' part in OpenACC 'kernels' region} {} { target *-*-* } l_compute$c_compute } */\n-  /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block made addressable} {} { target *-*-* } l_compute$c_compute } */\n+  /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block requested to be made addressable} {} { target *-*-* } l_compute$c_compute } */\n+  /* { dg-note {variable 'i' made addressable} {} { target *-*-* } l_compute$c_compute } */\n   /* { dg-note {variable 'i' declared in block is candidate for adjusting OpenACC privatization level} {} { target *-*-* } l_compute$c_compute } */\n   {\n     int i;\n   }\n \n #pragma acc kernels /* { dg-line l_compute[incr c_compute] } */\n-  /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block made addressable} {} { target *-*-* } l_compute$c_compute } */\n+  /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block requested to be made addressable} {} { target *-*-* } l_compute$c_compute } */\n+  /* { dg-note {variable 'i' made addressable} {} { target *-*-* } l_compute$c_compute } */\n   /* { dg-note {variable 'i' declared in block is candidate for adjusting OpenACC privatization level} {} { target *-*-* } l_compute$c_compute } */\n   /* { dg-optimized {assigned OpenACC gang loop parallelism} {} { target *-*-* } l_compute$c_compute } */\n   /* { dg-note {beginning 'parloops' part in OpenACC 'kernels' region} {} { target *-*-* } .+1 } */"}, {"sha": "1c1e22c00ac39ac468653231382e1abcc44b7bde", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-decompose-pr100280-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr100280-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr100280-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr100280-1.c?ref=de6e81ea961219d0726db67776d11ce75a4cae1b", "patch": "@@ -10,7 +10,8 @@ void\n foo (void) /* { dg-line l_f_1 } */\n {\n #pragma acc kernels /* { dg-line l_k_1 } */\n-  /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block made addressable} {} { target *-*-* } l_k_1 } */\n+  /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block requested to be made addressable} {} { target *-*-* } l_k_1 } */\n+  /* { dg-note {variable 'i' made addressable} {} { target *-*-* } l_k_1 } */\n   /* { dg-note {variable 'i' declared in block is candidate for adjusting OpenACC privatization level} {} { target *-*-* } l_k_1 } */\n   /* { dg-optimized {assigned OpenACC seq loop parallelism} {} { target *-*-* } l_k_1 } */\n   /* { dg-bogus {note: beginning 'parloops' part in OpenACC 'kernels' region} {TODO location} { xfail *-*-* } l_f_1 }"}, {"sha": "336cf2ad4256eabea530fc36fab8e86d42bd50ca", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-decompose-pr104061-1-2.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104061-1-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104061-1-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104061-1-2.c?ref=de6e81ea961219d0726db67776d11ce75a4cae1b", "patch": "@@ -16,7 +16,8 @@ foo (void)\n {\n   /* { dg-bogus {sorry, unimplemented: 'gimple_debug' not yet supported} TODO { xfail *-*-* } .+1 } */\n #pragma acc kernels /* { dg-line l_compute1 } */\n-  /* { dg-bogus {note: OpenACC 'kernels' decomposition: variable 'k' declared in block made addressable} {w/ debug} { xfail *-*-* } l_compute1 } */\n+  /* { dg-bogus {note: OpenACC 'kernels' decomposition: variable 'k' declared in block requested to be made addressable} {w/ debug} { xfail *-*-* } l_compute1 } */\n+  /* { dg-bogus {note: variable 'k' made addressable} {w/ debug} { xfail *-*-* } l_compute1 } */\n   /* { dg-note {variable 'arr_0\\.0' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} {} { xfail *-*-* } l_compute1 } */\n   {\n     /* { dg-bogus {note: beginning 'gang-single' part in OpenACC 'kernels' region} {w/ debug} { xfail c++ } .-1 }"}, {"sha": "f41dda86122f58d2acda87f0618a4cf1f14d9a47", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-decompose-pr104061-1-3.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104061-1-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104061-1-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104061-1-3.c?ref=de6e81ea961219d0726db67776d11ce75a4cae1b", "patch": "@@ -23,7 +23,8 @@ foo (void)\n {\n   /* { dg-bogus {sorry, unimplemented: 'gimple_debug' not yet supported} {} { target *-*-* } .+1 } suppressed via '-fcompare-debug'.  */\n #pragma acc kernels /* { dg-line l_compute1 } */\n-  /* { dg-bogus {note: OpenACC 'kernels' decomposition: variable 'k' declared in block made addressable} {w/ debug} { xfail *-*-* } l_compute1 } */\n+  /* { dg-bogus {note: OpenACC 'kernels' decomposition: variable 'k' declared in block requested to be made addressable} {w/ debug} { xfail *-*-* } l_compute1 } */\n+  /* { dg-bogus {note: variable 'k' made addressable} {w/ debug} { xfail *-*-* } l_compute1 } */\n   /* { dg-bogus {note: variable 'k' declared in block is candidate for adjusting OpenACC privatization level} {w/ debug} { xfail *-*-* } l_compute1 } */\n   /* { dg-note {variable 'arr_0\\.0' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} {} { target *-*-* } l_compute1 } */\n   {"}, {"sha": "cde95a7b7ac96fe9986d254a66c2933846d6ec63", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-decompose-pr104061-1-4.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104061-1-4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104061-1-4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104061-1-4.c?ref=de6e81ea961219d0726db67776d11ce75a4cae1b", "patch": "@@ -21,7 +21,8 @@ foo (void)\n {\n   /* { dg-bogus {sorry, unimplemented: 'gimple_debug' not yet supported} {} { target *-*-* } .+1 } suppressed via '-fcompare-debug'.  */\n #pragma acc kernels /* { dg-line l_compute1 } */\n-  /* { dg-bogus {note: OpenACC 'kernels' decomposition: variable 'k' declared in block made addressable} {w/ debug} { xfail *-*-* } l_compute1 } */\n+  /* { dg-bogus {note: OpenACC 'kernels' decomposition: variable 'k' declared in block requested to be made addressable} {w/ debug} { xfail *-*-* } l_compute1 } */\n+  /* { dg-bogus {note: variable 'k' made addressable} {w/ debug} { xfail *-*-* } l_compute1 } */\n   /* { dg-bogus {note: variable 'k' declared in block is candidate for adjusting OpenACC privatization level} {w/ debug} { xfail *-*-* } l_compute1 } */\n   /* { dg-note {variable 'arr_0\\.0' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} {} { target *-*-* } l_compute1 } */\n   {"}, {"sha": "4f38a83bb193e4cefd716c7bb5ad6a986a0f987e", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-decompose-pr104132-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104132-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104132-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104132-1.c?ref=de6e81ea961219d0726db67776d11ce75a4cae1b", "patch": "@@ -18,7 +18,8 @@ void\n foo (void)\n {\n #pragma acc kernels /* { dg-line l_compute1 } */\n-  /* { dg-note {OpenACC 'kernels' decomposition: variable 'k' declared in block made addressable} {} { target *-*-* } l_compute1 } */\n+  /* { dg-note {OpenACC 'kernels' decomposition: variable 'k' declared in block requested to be made addressable} {} { target *-*-* } l_compute1 } */\n+  /* { dg-note {variable 'k' made addressable} {} { target *-*-* } l_compute1 } */\n   /* { dg-note {variable 'k' declared in block is candidate for adjusting OpenACC privatization level} {} { target *-*-* } l_compute1 } */\n   {\n     int k;"}, {"sha": "0499665777dcb7c005e81b34f2e21a57fa954e1a", "filename": "gcc/testsuite/c-c++-common/goacc/kernels-decompose-pr104133-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104133-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104133-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fgoacc%2Fkernels-decompose-pr104133-1.c?ref=de6e81ea961219d0726db67776d11ce75a4cae1b", "patch": "@@ -18,7 +18,8 @@ void\n foo (void)\n {\n #pragma acc kernels /* { dg-line l_compute1 } */\n-  /* { dg-note {OpenACC 'kernels' decomposition: variable 'k' declared in block made addressable} {} { target *-*-* } l_compute1 } */\n+  /* { dg-note {OpenACC 'kernels' decomposition: variable 'k' declared in block requested to be made addressable} {} { target *-*-* } l_compute1 } */\n+  /* { dg-note {variable 'k' made addressable} {} { target *-*-* } l_compute1 } */\n   /* { dg-note {variable 'k' declared in block is candidate for adjusting OpenACC privatization level} {} { target *-*-* } l_compute1 } */\n   /* { dg-note {variable 'arr_0\\.0' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} {} { target *-*-* } l_compute1 } */\n   /* { dg-note {variable 'arr_0\\.1' declared in block isn't candidate for adjusting OpenACC privatization level: not addressable} {} { target *-*-* } l_compute1 } */"}, {"sha": "4530bd8c2c7633bed2223c495210e552ff329e0f", "filename": "gcc/tree-core.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftree-core.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftree-core.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-core.h?ref=de6e81ea961219d0726db67776d11ce75a4cae1b", "patch": "@@ -1155,6 +1155,9 @@ struct GTY(()) tree_base {\n        PREDICT_EXPR_OUTCOME in\n \t   PREDICT_EXPR\n \n+       OMP_CLAUSE_MAP_DECL_MAKE_ADDRESSABLE in\n+\t   OMP_CLAUSE\n+\n    static_flag:\n \n        TREE_STATIC in"}, {"sha": "da6f3b38ba556c315c9abb145e3e74090582ce09", "filename": "gcc/tree.h", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6e81ea961219d0726db67776d11ce75a4cae1b/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=de6e81ea961219d0726db67776d11ce75a4cae1b", "patch": "@@ -1699,6 +1699,11 @@ class auto_suppress_location_wrappers\n #define OMP_CLAUSE_MAP_RUNTIME_IMPLICIT_P(NODE) \\\n   (OMP_CLAUSE_SUBCODE_CHECK (NODE, OMP_CLAUSE_MAP)->base.deprecated_flag)\n \n+/* Flag that 'OMP_CLAUSE_DECL (NODE)' is to be made addressable during OMP\n+   lowering.  */\n+#define OMP_CLAUSE_MAP_DECL_MAKE_ADDRESSABLE(NODE) \\\n+  (OMP_CLAUSE_SUBCODE_CHECK (NODE, OMP_CLAUSE_MAP)->base.addressable_flag)\n+\n /* True on an OMP_CLAUSE_USE_DEVICE_PTR with an OpenACC 'if_present'\n    clause.  */\n #define OMP_CLAUSE_USE_DEVICE_PTR_IF_PRESENT(NODE) \\"}, {"sha": "9f7b8b4af2fbe99db8f2b5544d295498cde2f20f", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/f-asyncwait-1.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6e81ea961219d0726db67776d11ce75a4cae1b/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Ff-asyncwait-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6e81ea961219d0726db67776d11ce75a4cae1b/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Ff-asyncwait-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Ff-asyncwait-1.c?ref=de6e81ea961219d0726db67776d11ce75a4cae1b", "patch": "@@ -260,7 +260,8 @@ main (void)\n #pragma acc data copy (a[0:N]) copy (b[0:N]) copy (c[0:N]) copy (d[0:N])\n   {\n #pragma acc kernels async (1) /* { dg-line l_compute[incr c_compute] } */\n-    /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block made addressable} \"\" { target *-*-* } l_compute$c_compute } */\n+    /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block requested to be made addressable} \"\" { target *-*-* } l_compute$c_compute } */\n+    /* { dg-note {variable 'i' made addressable} {} { target *-*-* } l_compute$c_compute } */\n     /* { dg-note {variable 'i' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_compute$c_compute } */\n     /* { dg-optimized \"assigned OpenACC seq loop parallelism\" \"\" { target { ! __OPTIMIZE__ } } l_compute$c_compute }\n        { dg-optimized \"assigned OpenACC gang loop parallelism\" \"\" { target { __OPTIMIZE__ } } l_compute$c_compute } */\n@@ -269,7 +270,8 @@ main (void)\n       b[i] = (a[i] * a[i] * a[i]) / a[i];\n \n #pragma acc kernels async (1) /* { dg-line l_compute[incr c_compute] } */\n-    /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block made addressable} \"\" { target *-*-* } l_compute$c_compute } */\n+    /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block requested to be made addressable} \"\" { target *-*-* } l_compute$c_compute } */\n+    /* { dg-note {variable 'i' made addressable} {} { target *-*-* } l_compute$c_compute } */\n     /* { dg-note {variable 'i' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_compute$c_compute } */\n     /* { dg-optimized \"assigned OpenACC seq loop parallelism\" \"\" { target { ! __OPTIMIZE__ } } l_compute$c_compute }\n        { dg-optimized \"assigned OpenACC gang loop parallelism\" \"\" { target { __OPTIMIZE__ } } l_compute$c_compute } */\n@@ -313,7 +315,8 @@ main (void)\n #pragma acc data copy (a[0:N], b[0:N], c[0:N], d[0:N], e[0:N])\n   {\n #pragma acc kernels async (1) /* { dg-line l_compute[incr c_compute] } */\n-    /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block made addressable} \"\" { target *-*-* } l_compute$c_compute } */\n+    /* { dg-note {OpenACC 'kernels' decomposition: variable 'i' declared in block requested to be made addressable} \"\" { target *-*-* } l_compute$c_compute } */\n+    /* { dg-note {variable 'i' made addressable} {} { target *-*-* } l_compute$c_compute } */\n     /* { dg-note {variable 'i' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_compute$c_compute } */\n     /* { dg-optimized \"assigned OpenACC seq loop parallelism\" \"\" { target { ! __OPTIMIZE__ } } l_compute$c_compute }\n        { dg-optimized \"assigned OpenACC gang loop parallelism\" \"\" { target { __OPTIMIZE__ } } l_compute$c_compute } */"}, {"sha": "85c39871f94551c08b1812cb24cc0eb7743bd2db", "filename": "libgomp/testsuite/libgomp.oacc-c-c++-common/kernels-decompose-1.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/de6e81ea961219d0726db67776d11ce75a4cae1b/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-decompose-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/de6e81ea961219d0726db67776d11ce75a4cae1b/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-decompose-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.oacc-c-c%2B%2B-common%2Fkernels-decompose-1.c?ref=de6e81ea961219d0726db67776d11ce75a4cae1b", "patch": "@@ -32,7 +32,8 @@ int main()\n   {\n     /* { dg-note {beginning 'gang-single' part in OpenACC 'kernels' region} {} { target *-*-* } .+1 } */\n     int c = 234;\n-    /* { dg-note {OpenACC 'kernels' decomposition: variable 'c' declared in block made addressable} \"\" { target *-*-* } l_compute$c_compute } */\n+    /* { dg-note {OpenACC 'kernels' decomposition: variable 'c' declared in block requested to be made addressable} \"\" { target *-*-* } l_compute$c_compute } */\n+    /* { dg-note {variable 'c' made addressable} {} { target *-*-* } l_compute$c_compute } */\n     /* { dg-note {variable 'c' declared in block is candidate for adjusting OpenACC privatization level} \"\" { target *-*-* } l_compute$c_compute } */\n \n #pragma acc loop independent gang /* { dg-line l_loop_i[incr c_loop_i] } */"}]}