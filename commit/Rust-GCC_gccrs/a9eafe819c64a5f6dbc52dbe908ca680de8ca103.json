{"sha": "a9eafe819c64a5f6dbc52dbe908ca680de8ca103", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTllYWZlODE5YzY0YTVmNmRiYzUyZGJlOTA4Y2E2ODBkZThjYTEwMw==", "commit": {"author": {"name": "Andrew Pinski", "email": "andrew_pinski@playstation.sony.com", "date": "2007-08-20T07:42:55Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2007-08-20T07:42:55Z"}, "message": "re PR tree-optimization/30564 (ice for legal code with -O3)\n\n2007-08-20  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\n        PR middle-end/30564\n        * tree-inline.c (optimize_inline_calls): Move the cgraph checking\n        code in front of the compacting of basic blocks.\n        Move the folding of statements inbetween the cgraph checking\n        and compacting of basic blocks.\n\n2007-08-20  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n\n        PR middle-end/30564\n        * gcc.c-torture/compile/pr30564-1.c: New test.\n        * gcc.c-torture/compile/pr30564-2.c: New test.\n\nFrom-SVN: r127638", "tree": {"sha": "d3d8854762eccbab4fae6d8c86b3a9bad23068eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d3d8854762eccbab4fae6d8c86b3a9bad23068eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9eafe819c64a5f6dbc52dbe908ca680de8ca103", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9eafe819c64a5f6dbc52dbe908ca680de8ca103", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9eafe819c64a5f6dbc52dbe908ca680de8ca103", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9eafe819c64a5f6dbc52dbe908ca680de8ca103/comments", "author": null, "committer": null, "parents": [{"sha": "5a4ac6841c58e0e0fa97c46f363736728c029215", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5a4ac6841c58e0e0fa97c46f363736728c029215", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5a4ac6841c58e0e0fa97c46f363736728c029215"}], "stats": {"total": 56, "additions": 50, "deletions": 6}, "files": [{"sha": "6f486f805adf9907fc90cbe4e8fd63fad6ebcb7f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9eafe819c64a5f6dbc52dbe908ca680de8ca103/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9eafe819c64a5f6dbc52dbe908ca680de8ca103/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a9eafe819c64a5f6dbc52dbe908ca680de8ca103", "patch": "@@ -1,3 +1,11 @@\n+2007-08-20  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR middle-end/30564\n+\t* tree-inline.c (optimize_inline_calls): Move the cgraph checking\n+\tcode in front of the compacting of basic blocks.\n+\tMove the folding of statements inbetween the cgraph checking\n+\tand compacting of basic blocks.\n+\n 2007-08-19  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n            Serge Belyshev  <belyshev@depni.sinp.msu.ru>\n "}, {"sha": "22e5df78637408f775d2a7d0a659c03cb5895bb4", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9eafe819c64a5f6dbc52dbe908ca680de8ca103/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9eafe819c64a5f6dbc52dbe908ca680de8ca103/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a9eafe819c64a5f6dbc52dbe908ca680de8ca103", "patch": "@@ -1,3 +1,9 @@\n+2007-08-20  Andrew Pinski  <andrew_pinski@playstation.sony.com>\n+\n+\tPR middle-end/30564\n+\t* gcc.c-torture/compile/pr30564-1.c: New test.\n+\t* gcc.c-torture/compile/pr30564-2.c: New test.\n+\n 2007-08-19  Joseph Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/debug/dwarf2/aranges-fnsec-1.c: New test."}, {"sha": "6c373f74bb3bf5f1c61c5ab5612692495da9cc4d", "filename": "gcc/testsuite/gcc.c-torture/compile/pr30564-1.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9eafe819c64a5f6dbc52dbe908ca680de8ca103/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr30564-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9eafe819c64a5f6dbc52dbe908ca680de8ca103/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr30564-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr30564-1.c?ref=a9eafe819c64a5f6dbc52dbe908ca680de8ca103", "patch": "@@ -0,0 +1,15 @@\n+static int spready[] = {0, 1, 2, 3};\n+void explosion_map (int y)\n+{\n+  int i;\n+  for (i = 0; i < 4; i++)\n+    if (y * spready[i] < 0)\n+      break;\n+}\n+void explosion (void)\n+{\n+  int i;\n+  explosion_map (0);\n+  for (i = 0; i < 2; i++)\n+    continue;\n+}"}, {"sha": "403f396617284befc830cc91d16ea6bb49b64979", "filename": "gcc/testsuite/gcc.c-torture/compile/pr30564-2.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9eafe819c64a5f6dbc52dbe908ca680de8ca103/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr30564-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9eafe819c64a5f6dbc52dbe908ca680de8ca103/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr30564-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr30564-2.c?ref=a9eafe819c64a5f6dbc52dbe908ca680de8ca103", "patch": "@@ -0,0 +1,12 @@\n+\n+static int RawOrEnc = 0;\n+static inline void addpair(int fp, int un)\n+{\n+  if (RawOrEnc == 0 && fp != un)\n+    RawOrEnc = 1;\n+}\n+int f(int un0, char *a, unsigned int __s2_len)\n+{\n+  addpair(un0, un0);\n+  __s2_len < 4 ? __builtin_strcmp (a, \"-\") : 0;\n+}"}, {"sha": "c078166bd168eaa313ea477f9249b6cc851223bd", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9eafe819c64a5f6dbc52dbe908ca680de8ca103/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9eafe819c64a5f6dbc52dbe908ca680de8ca103/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=a9eafe819c64a5f6dbc52dbe908ca680de8ca103", "patch": "@@ -2823,10 +2823,6 @@ optimize_inline_calls (tree fn)\n     gimple_expand_calls_inline (bb, &id);\n \n   pop_gimplify_context (NULL);\n-  /* Renumber the (code) basic_blocks consecutively.  */\n-  compact_blocks ();\n-  /* Renumber the lexical scoping (non-code) blocks consecutively.  */\n-  number_blocks (fn);\n \n #ifdef ENABLE_CHECKING\n     {\n@@ -2839,13 +2835,20 @@ optimize_inline_calls (tree fn)\n \tgcc_assert (e->inline_failed);\n     }\n #endif\n+  \n+  /* Fold the statements before compacting/renumbering the basic blocks.  */\n+  fold_marked_statements (last, id.statements_to_fold);\n+  pointer_set_destroy (id.statements_to_fold);\n+  \n+  /* Renumber the (code) basic_blocks consecutively.  */\n+  compact_blocks ();\n+  /* Renumber the lexical scoping (non-code) blocks consecutively.  */\n+  number_blocks (fn);\n \n   /* We are not going to maintain the cgraph edges up to date.\n      Kill it so it won't confuse us.  */\n   cgraph_node_remove_callees (id.dst_node);\n \n-  fold_marked_statements (last, id.statements_to_fold);\n-  pointer_set_destroy (id.statements_to_fold);\n   fold_cond_expr_cond ();\n   if (current_function_has_nonlocal_label)\n     make_nonlocal_label_edges ();"}]}