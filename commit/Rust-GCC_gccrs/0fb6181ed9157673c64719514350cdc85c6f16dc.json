{"sha": "0fb6181ed9157673c64719514350cdc85c6f16dc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGZiNjE4MWVkOTE1NzY3M2M2NDcxOTUxNDM1MGNkYzg1YzZmMTZkYw==", "commit": {"author": {"name": "Olivier Hainque", "email": "hainque@adacore.com", "date": "2018-06-22T16:46:22Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2018-06-22T16:46:22Z"}, "message": "Improve entry/exit instrumentation for nested functions\n\n2018-06-22  Olivier Hainque  <hainque@adacore.com>\n\n\t* gimplify.c (gimplify_function_tree): Prevent creation\n\tof a trampoline for the address of the current function\n\tpassed to entry/exit instrumentation hooks.\n\nFrom-SVN: r261908", "tree": {"sha": "7abc3e136c41506cefcfa91392d55263427dcbce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7abc3e136c41506cefcfa91392d55263427dcbce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0fb6181ed9157673c64719514350cdc85c6f16dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fb6181ed9157673c64719514350cdc85c6f16dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0fb6181ed9157673c64719514350cdc85c6f16dc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0fb6181ed9157673c64719514350cdc85c6f16dc/comments", "author": {"login": "hainque", "id": 18735142, "node_id": "MDQ6VXNlcjE4NzM1MTQy", "avatar_url": "https://avatars.githubusercontent.com/u/18735142?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hainque", "html_url": "https://github.com/hainque", "followers_url": "https://api.github.com/users/hainque/followers", "following_url": "https://api.github.com/users/hainque/following{/other_user}", "gists_url": "https://api.github.com/users/hainque/gists{/gist_id}", "starred_url": "https://api.github.com/users/hainque/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hainque/subscriptions", "organizations_url": "https://api.github.com/users/hainque/orgs", "repos_url": "https://api.github.com/users/hainque/repos", "events_url": "https://api.github.com/users/hainque/events{/privacy}", "received_events_url": "https://api.github.com/users/hainque/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3f14cdf84ad3d6fb66ec887a76486de2aed54e10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f14cdf84ad3d6fb66ec887a76486de2aed54e10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f14cdf84ad3d6fb66ec887a76486de2aed54e10"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "4b14a342af1e09a83f5aed3e4a3d3d544180a8e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb6181ed9157673c64719514350cdc85c6f16dc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb6181ed9157673c64719514350cdc85c6f16dc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0fb6181ed9157673c64719514350cdc85c6f16dc", "patch": "@@ -1,3 +1,9 @@\n+2018-06-22  Olivier Hainque  <hainque@adacore.com>\n+\n+\t* gimplify.c (gimplify_function_tree): Prevent creation\n+\tof a trampoline for the address of the current function\n+\tpassed to entry/exit instrumentation hooks.\n+\n 2018-06-22  Aaron Sawdey  <acsawdey@linux.ibm.com>\n \n \tPR target/86222"}, {"sha": "48ac92e2b16dabda6d2dd93a870111b021369aa5", "filename": "gcc/gimplify.c", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0fb6181ed9157673c64719514350cdc85c6f16dc/gcc%2Fgimplify.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0fb6181ed9157673c64719514350cdc85c6f16dc/gcc%2Fgimplify.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimplify.c?ref=0fb6181ed9157673c64719514350cdc85c6f16dc", "patch": "@@ -12799,18 +12799,23 @@ gimplify_function_tree (tree fndecl)\n       gbind *new_bind;\n       gimple *tf;\n       gimple_seq cleanup = NULL, body = NULL;\n-      tree tmp_var;\n+      tree tmp_var, this_fn_addr;\n       gcall *call;\n \n+      /* The instrumentation hooks aren't going to call the instrumented\n+\t function and the address they receive is expected to be matchable\n+\t against symbol addresses.  Make sure we don't create a trampoline,\n+\t in case the current function is nested.  */\n+      this_fn_addr = build_fold_addr_expr (current_function_decl);\n+      TREE_NO_TRAMPOLINE (this_fn_addr) = 1;\n+\n       x = builtin_decl_implicit (BUILT_IN_RETURN_ADDRESS);\n       call = gimple_build_call (x, 1, integer_zero_node);\n       tmp_var = create_tmp_var (ptr_type_node, \"return_addr\");\n       gimple_call_set_lhs (call, tmp_var);\n       gimplify_seq_add_stmt (&cleanup, call);\n       x = builtin_decl_implicit (BUILT_IN_PROFILE_FUNC_EXIT);\n-      call = gimple_build_call (x, 2,\n-\t\t\t\tbuild_fold_addr_expr (current_function_decl),\n-\t\t\t\ttmp_var);\n+      call = gimple_build_call (x, 2, this_fn_addr, tmp_var);\n       gimplify_seq_add_stmt (&cleanup, call);\n       tf = gimple_build_try (seq, cleanup, GIMPLE_TRY_FINALLY);\n \n@@ -12820,9 +12825,7 @@ gimplify_function_tree (tree fndecl)\n       gimple_call_set_lhs (call, tmp_var);\n       gimplify_seq_add_stmt (&body, call);\n       x = builtin_decl_implicit (BUILT_IN_PROFILE_FUNC_ENTER);\n-      call = gimple_build_call (x, 2,\n-\t\t\t\tbuild_fold_addr_expr (current_function_decl),\n-\t\t\t\ttmp_var);\n+      call = gimple_build_call (x, 2, this_fn_addr, tmp_var);\n       gimplify_seq_add_stmt (&body, call);\n       gimplify_seq_add_stmt (&body, tf);\n       new_bind = gimple_build_bind (NULL, body, NULL);"}]}