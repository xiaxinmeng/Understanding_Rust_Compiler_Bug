{"sha": "df7d2d8064462dd97080d05df30063808203b70a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGY3ZDJkODA2NDQ2MmRkOTcwODBkMDVkZjMwMDYzODA4MjAzYjcwYQ==", "commit": {"author": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2004-10-06T20:27:15Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2004-10-06T20:27:15Z"}, "message": "dwarf2.h: Sync with include/elf/dwarf2.h\n\n2004-10-06  Eric Christopher  <echristo@redhat.com>\n\n\t* dwarf2.h: Sync with include/elf/dwarf2.h\n\nFrom-SVN: r88626", "tree": {"sha": "6bda75f1fc1afe964ed3b3e6d37dc2c5b23f4731", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6bda75f1fc1afe964ed3b3e6d37dc2c5b23f4731"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df7d2d8064462dd97080d05df30063808203b70a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df7d2d8064462dd97080d05df30063808203b70a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df7d2d8064462dd97080d05df30063808203b70a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df7d2d8064462dd97080d05df30063808203b70a/comments", "author": null, "committer": null, "parents": [{"sha": "55e9452ed505b1421b6f58a752b69c4453a8dfdd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55e9452ed505b1421b6f58a752b69c4453a8dfdd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55e9452ed505b1421b6f58a752b69c4453a8dfdd"}], "stats": {"total": 248, "additions": 196, "deletions": 52}, "files": [{"sha": "90f94f26f4dd4db2152b275cd7312aedf2bbc029", "filename": "gcc/ChangeLog", "status": "modified", "additions": 26, "deletions": 22, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df7d2d8064462dd97080d05df30063808203b70a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df7d2d8064462dd97080d05df30063808203b70a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=df7d2d8064462dd97080d05df30063808203b70a", "patch": "@@ -1,13 +1,17 @@\n+2004-10-06  Eric Christopher  <echristo@redhat.com>\n+\n+\t* dwarf2.h: Sync with include/elf/dwarf2.h\n+\n 2004-10-06  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* tree-pretty-print.c (dump_generic_node): Fix printing of BINFO\n-\tand TREE_VEC nodes. \n+\tand TREE_VEC nodes.\n \n 2004-10-06  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* lambda-code.c (lambda_loopnest_to_gcc_loopnest): Convert\n \tto use FOR_EACH_SSA_USE_OPERAND iterator, and propagate_value.\n-\t\n+\n 2004-10-06  Daniel Berlin  <dberlin@dberlin.org>\n \n \t* lambda-code.c (compute_nest_using_fourier_motzkin): New\n@@ -19,7 +23,7 @@\n \t* tree-ssa-loop-ivopts.c (expr_invariant_in_loop): Make non-static.\n \t* tree-flow.h: Add prototype.\n \t* lambda-code.c (invariant_in_loop_and_outer_loops): Use\n-\texpr_invariant_in_loop. \n+\texpr_invariant_in_loop.\n \n 2004-10-06  Kazu Hirata  <kazu@cs.umass.edu>\n \n@@ -257,62 +261,62 @@\n \n \t* Makefile.in (tree-ssa-loop-niter.o): Depends on tree-data-ref.h.\n \t* cfgloop.c (initialize_loops_parallel_p): New.\n-\t(flow_loops_find): Initialize the parallel_p field to true for all \n+\t(flow_loops_find): Initialize the parallel_p field to true for all\n \tthe loops.\n \t* tree-ssa-loop-niter.c: Include \"tree-data-ref.h\".\n-\t(estimate_numbers_of_iterations_loop): Infers the loop bounds from \n+\t(estimate_numbers_of_iterations_loop): Infers the loop bounds from\n \tthe size of the data accessed in the loop.\n-\t(struct nb_iter_bound): Moved... \n+\t(struct nb_iter_bound): Moved...\n \t* cfgloop.h (struct nb_iter_bound): ... here.\n \t(estimated_nb_iterations, parallel_p): New fields in struct loop.\n \t(record_estimate): Declare extern here.\n \t* tree-chrec.c: Fix comments.\n \t(nb_vars_in_chrec): New function.\n \t* tree-chrec.h (nb_vars_in_chrec): Declared here.\n-\t* tree-data-ref.c: Don't include lambda.h, that is already included \n+\t* tree-data-ref.c: Don't include lambda.h, that is already included\n \tin tree-data-ref.h.\n \t(tree_fold_divides_p): Don't check for integer_onep.\n \t(tree_fold_bezout): Removed.\n \t(gcd): New static duplicated function.\n \t(int_divides_p, dump_subscript): New.\n \t(dump_data_dependence_relation): Use dump_subscript.\n-\t(dump_dist_dir_vectors, dump_ddrs, compute_estimated_nb_iterations, \n+\t(dump_dist_dir_vectors, dump_ddrs, compute_estimated_nb_iterations,\n \testimate_niter_from_size_of_data): New.\n-\t(analyze_array_indexes, analyze_array): Call \n-\testimate_niter_from_size_of_data during\tthe detection of array \n-\treferences.  Pass in a pointer to the statement that contains the \n+\t(analyze_array_indexes, analyze_array): Call\n+\testimate_niter_from_size_of_data during\tthe detection of array\n+\treferences.  Pass in a pointer to the statement that contains the\n \tarray reference.\n \t(all_chrecs_equal_p): New.\n \t(compute_distance_vector): Renamed compute_subscript_distance.\n \tDeal with multivariate conflict functions.\n-\t(initialize_data_dependence_relation): Initialize DDR_AFFINE_P, \n+\t(initialize_data_dependence_relation): Initialize DDR_AFFINE_P,\n \tDDR_SIZE_VECT, DDR_DIST_VECT, and DDR_DIR_VECT.\n \t(non_affine_dependence_relation): New.\n-\t(analyze_ziv_subscript, analyze_siv_subscript_cst_affine, \n-\tanalyze_siv_subscript, analyze_miv_subscript, \n-\tanalyze_overlapping_iterations, subscript_dependence_tester): \n+\t(analyze_ziv_subscript, analyze_siv_subscript_cst_affine,\n+\tanalyze_siv_subscript, analyze_miv_subscript,\n+\tanalyze_overlapping_iterations, subscript_dependence_tester):\n \tInitialize and return last_conflicts function.\n \t(initialize_matrix_A, FLOOR, compute_overlap_steps_for_affine_univar,\n \tcompute_overlap_steps_for_affine_1_2): New.\n \t(analyze_siv_subscript_affine_cst): Removed.\n-\t(analyze_subscript_affine_affine): Disprove dependences based on the \n-\titeration domains.  Solve the univariate dependence case as before, \n+\t(analyze_subscript_affine_affine): Disprove dependences based on the\n+\titeration domains.  Solve the univariate dependence case as before,\n \tbut use lambda_matrix_right_hermite instead of tree_fold_bezout.\n \tImplement the multivariate case of 2 versus 1 variables.\n-\t(undetermined_conflicts_p, no_conflicts_p): New.\t\n-\t(build_classic_dist_vector, build_classic_dir_vector): Implement some \n+\t(undetermined_conflicts_p, no_conflicts_p): New.\n+\t(build_classic_dist_vector, build_classic_dir_vector): Implement some\n \tunhandled cases.\n-\t(find_data_references_in_loop): Compute and initialize \n+\t(find_data_references_in_loop): Compute and initialize\n \tloop->estimated_nb_iterations and loop->parallel_p.\n \t(analyze_all_data_dependences): Modify the debug dump order.\n \t* tree-data-ref.h (SUB_LAST_CONFLICT_IN_A, SUB_LAST_CONFLICT_IN_B,\n \tsubscript->last_conflict_in_a, subscript->last_conflict_in_b): Removed.\n-\t(SUB_LAST_CONFLICT, subscript->last_conflict, \n+\t(SUB_LAST_CONFLICT, subscript->last_conflict,\n \tdata_dependence_relation->affine_p, data_dependence_relation->size_vect,\n \tDDR_AFFINE_P, DDR_SIZE_VECT): New.\n \t(find_data_references_in_loop, initialize_data_dependence_relation,\n \tdump_subscript, dump_ddrs, dump_dist_dir_vectors): Declared here.\n-\t\n+\n \n 2004-10-04  Sebastian Pop  <pop@cri.ensmp.fr>\n "}, {"sha": "aa550176024a5c2976f96329cb529c6f4b444035", "filename": "gcc/dwarf2.h", "status": "modified", "additions": 170, "deletions": 30, "changes": 200, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df7d2d8064462dd97080d05df30063808203b70a/gcc%2Fdwarf2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df7d2d8064462dd97080d05df30063808203b70a/gcc%2Fdwarf2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2.h?ref=df7d2d8064462dd97080d05df30063808203b70a", "patch": "@@ -1,7 +1,7 @@\n /* Declarations and definitions of codes relating to the DWARF2 symbolic\n    debugging information format.\n-   Copyright (C) 1992, 1993, 1995, 1996, 1997, 1999, 2000, 2001, 2002\n-   Free Software Foundation, Inc.\n+   Copyright (C) 1992, 1993, 1995, 1996, 1997, 1999, 2000, 2001, 2002,\n+   2003, 2004 Free Software Foundation, Inc.\n \n    Written by Gary Funck (gary@intrepid.com) The Ada Joint Program\n    Office (AJPO), Florida State University and Silicon Graphics Inc.\n@@ -10,22 +10,22 @@\n    Derived from the DWARF 1 implementation written by Ron Guilmette\n    (rfg@netcom.com), November 1990.\n \n-This file is part of GCC.\n+   This file is part of GCC.\n \n-GCC is free software; you can redistribute it and/or modify it under\n-the terms of the GNU General Public License as published by the Free\n-Software Foundation; either version 2, or (at your option) any later\n-version.\n+   GCC is free software; you can redistribute it and/or modify it under\n+   the terms of the GNU General Public License as published by the Free\n+   Software Foundation; either version 2, or (at your option) any later\n+   version.\n \n-GCC is distributed in the hope that it will be useful, but WITHOUT ANY\n-WARRANTY; without even the implied warranty of MERCHANTABILITY or\n-FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n-for more details.\n+   GCC is distributed in the hope that it will be useful, but WITHOUT\n+   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n+   or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public\n+   License for more details.\n \n-You should have received a copy of the GNU General Public License\n-along with GCC; see the file COPYING.  If not, write to the Free\n-Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n-02111-1307, USA.  */\n+   You should have received a copy of the GNU General Public License\n+   along with GCC; see the file COPYING.  If not, write to the Free\n+   Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+   02111-1307, USA.  */\n \n /* This file is derived from the DWARF specification (a public document)\n    Revision 2.0.0 (July 27, 1993) developed by the UNIX International\n@@ -41,6 +41,92 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #ifndef GCC_DWARF2_H\n #define GCC_DWARF2_H\n \n+/* Structure found in the .debug_line section.  */\n+typedef struct\n+{\n+  unsigned char li_length          [4];\n+  unsigned char li_version         [2];\n+  unsigned char li_prologue_length [4];\n+  unsigned char li_min_insn_length [1];\n+  unsigned char li_default_is_stmt [1];\n+  unsigned char li_line_base       [1];\n+  unsigned char li_line_range      [1];\n+  unsigned char li_opcode_base     [1];\n+}\n+DWARF2_External_LineInfo;\n+\n+typedef struct\n+{\n+  unsigned long  li_length;\n+  unsigned short li_version;\n+  unsigned int   li_prologue_length;\n+  unsigned char  li_min_insn_length;\n+  unsigned char  li_default_is_stmt;\n+  int            li_line_base;\n+  unsigned char  li_line_range;\n+  unsigned char  li_opcode_base;\n+}\n+DWARF2_Internal_LineInfo;\n+\n+/* Structure found in .debug_pubnames section.  */\n+typedef struct\n+{\n+  unsigned char pn_length  [4];\n+  unsigned char pn_version [2];\n+  unsigned char pn_offset  [4];\n+  unsigned char pn_size    [4];\n+}\n+DWARF2_External_PubNames;\n+\n+typedef struct\n+{\n+  unsigned long  pn_length;\n+  unsigned short pn_version;\n+  unsigned long  pn_offset;\n+  unsigned long  pn_size;\n+}\n+DWARF2_Internal_PubNames;\n+\n+/* Structure found in .debug_info section.  */\n+typedef struct\n+{\n+  unsigned char  cu_length        [4];\n+  unsigned char  cu_version       [2];\n+  unsigned char  cu_abbrev_offset [4];\n+  unsigned char  cu_pointer_size  [1];\n+}\n+DWARF2_External_CompUnit;\n+\n+typedef struct\n+{\n+  unsigned long  cu_length;\n+  unsigned short cu_version;\n+  unsigned long  cu_abbrev_offset;\n+  unsigned char  cu_pointer_size;\n+}\n+DWARF2_Internal_CompUnit;\n+\n+typedef struct\n+{\n+  unsigned char  ar_length       [4];\n+  unsigned char  ar_version      [2];\n+  unsigned char  ar_info_offset  [4];\n+  unsigned char  ar_pointer_size [1];\n+  unsigned char  ar_segment_size [1];\n+}\n+DWARF2_External_ARange;\n+\n+typedef struct\n+{\n+  unsigned long  ar_length;\n+  unsigned short ar_version;\n+  unsigned long  ar_info_offset;\n+  unsigned char  ar_pointer_size;\n+  unsigned char  ar_segment_size;\n+}\n+DWARF2_Internal_ARange;\n+\n+\n /* Tag names and codes.  */\n enum dwarf_tag\n   {\n@@ -103,12 +189,21 @@ enum dwarf_tag\n     DW_TAG_imported_unit = 0x3d,\n     /* SGI/MIPS Extensions.  */\n     DW_TAG_MIPS_loop = 0x4081,\n+    /* HP extensions.  See: ftp://ftp.hp.com/pub/lang/tools/WDB/wdb-4.0.tar.gz .  */\n+    DW_TAG_HP_array_descriptor = 0x4090,\n     /* GNU extensions.  */\n     DW_TAG_format_label = 0x4101,\t/* For FORTRAN 77 and Fortran 90.  */\n     DW_TAG_function_template = 0x4102,\t/* For C++.  */\n     DW_TAG_class_template = 0x4103,\t/* For C++.  */\n     DW_TAG_GNU_BINCL = 0x4104,\n-    DW_TAG_GNU_EINCL = 0x4105\n+    DW_TAG_GNU_EINCL = 0x4105,\n+    /* Extensions for UPC.  See: http://upc.gwu.edu/~upc.  */\n+    DW_TAG_upc_shared_type = 0x8765,\n+    DW_TAG_upc_strict_type = 0x8766,\n+    DW_TAG_upc_relaxed_type = 0x8767,\n+    /* PGI (STMicroelectronics) extensions.  No documentation available.  */\n+    DW_TAG_PGI_kanji_type      = 0xA000,\n+    DW_TAG_PGI_interface_block = 0xA020\n   };\n \n #define DW_TAG_lo_user\t0x4080\n@@ -145,7 +240,6 @@ enum dwarf_form\n   };\n \n /* Attribute names and codes.  */\n-\n enum dwarf_attribute\n   {\n     DW_AT_sibling = 0x01,\n@@ -223,7 +317,7 @@ enum dwarf_attribute\n     DW_AT_call_column   = 0x57,\n     DW_AT_call_file     = 0x58,\n     DW_AT_call_line     = 0x59,\n-    /* SGI/MIPS Extensions.  */\n+    /* SGI/MIPS extensions.  */\n     DW_AT_MIPS_fde = 0x2001,\n     DW_AT_MIPS_loop_begin = 0x2002,\n     DW_AT_MIPS_tail_loop_begin = 0x2003,\n@@ -235,6 +329,21 @@ enum dwarf_attribute\n     DW_AT_MIPS_abstract_name = 0x2009,\n     DW_AT_MIPS_clone_origin = 0x200a,\n     DW_AT_MIPS_has_inlines = 0x200b,\n+    /* HP extensions.  */\n+    DW_AT_HP_block_index         = 0x2000,\n+    DW_AT_HP_unmodifiable        = 0x2001, /* Same as DW_AT_MIPS_fde.  */\n+    DW_AT_HP_actuals_stmt_list   = 0x2010,\n+    DW_AT_HP_proc_per_section    = 0x2011,\n+    DW_AT_HP_raw_data_ptr        = 0x2012,\n+    DW_AT_HP_pass_by_reference   = 0x2013,\n+    DW_AT_HP_opt_level           = 0x2014,\n+    DW_AT_HP_prof_version_id     = 0x2015,\n+    DW_AT_HP_opt_flags           = 0x2016,\n+    DW_AT_HP_cold_region_low_pc  = 0x2017,\n+    DW_AT_HP_cold_region_high_pc = 0x2018,\n+    DW_AT_HP_all_variables_modifiable = 0x2019,\n+    DW_AT_HP_linkage_name        = 0x201a,\n+    DW_AT_HP_prof_flags          = 0x201b,  /* In comp unit of procs_info for -g.  */\n     /* GNU extensions.  */\n     DW_AT_sf_names   = 0x2101,\n     DW_AT_src_info   = 0x2102,\n@@ -243,8 +352,14 @@ enum dwarf_attribute\n     DW_AT_body_begin = 0x2105,\n     DW_AT_body_end   = 0x2106,\n     DW_AT_GNU_vector = 0x2107,\n-    /* VMS Extensions.  */\n-    DW_AT_VMS_rtnbeg_pd_address = 0x2201\n+    /* VMS extensions.  */\n+    DW_AT_VMS_rtnbeg_pd_address = 0x2201,\n+    /* UPC extension.  */\n+    DW_AT_upc_threads_scaled = 0x3210,\n+    /* PGI (STMicroelectronics) extensions.  */\n+    DW_AT_PGI_lbase    = 0x3a00,\n+    DW_AT_PGI_soffset  = 0x3a01,\n+    DW_AT_PGI_lstride  = 0x3a02\n   };\n \n #define DW_AT_lo_user\t0x2000\t/* Implementation-defined range start.  */\n@@ -404,7 +519,15 @@ enum dwarf_location_atom\n     DW_OP_call4 = 0x99,\n     DW_OP_call_ref = 0x9a,\n     /* GNU extensions.  */\n-    DW_OP_GNU_push_tls_address = 0xe0\n+    DW_OP_GNU_push_tls_address = 0xe0,\n+    /* HP extensions.  */\n+    DW_OP_HP_unknown     = 0xe0, /* Ouch, the same as GNU_push_tls_address.  */\n+    DW_OP_HP_is_value    = 0xe1,\n+    DW_OP_HP_fltconst4   = 0xe2,\n+    DW_OP_HP_fltconst8   = 0xe3,\n+    DW_OP_HP_mod_range   = 0xe4,\n+    DW_OP_HP_unmod_range = 0xe5,\n+    DW_OP_HP_tls         = 0xe6\n   };\n \n #define DW_OP_lo_user\t0xe0\t/* Implementation-defined range start.  */\n@@ -423,7 +546,15 @@ enum dwarf_type\n     DW_ATE_unsigned = 0x7,\n     DW_ATE_unsigned_char = 0x8,\n     /* DWARF 3.  */\n-    DW_ATE_imaginary_float = 0x9\n+    DW_ATE_imaginary_float = 0x9,\n+    /* HP extensions.  */\n+    DW_ATE_HP_float80            = 0x80, /* Floating-point (80 bit).  */\n+    DW_ATE_HP_complex_float80    = 0x81, /* Complex floating-point (80 bit).  */\n+    DW_ATE_HP_float128           = 0x82, /* Floating-point (128 bit).  */\n+    DW_ATE_HP_complex_float128   = 0x83, /* Complex floating-point (128 bit).  */\n+    DW_ATE_HP_floathpintel       = 0x84, /* Floating-point (82 bit IA64).  */\n+    DW_ATE_HP_imaginary_float80  = 0x85,\n+    DW_ATE_HP_imaginary_float128 = 0x86\n   };\n \n #define\tDW_ATE_lo_user 0x80\n@@ -521,7 +652,18 @@ enum dwarf_line_number_x_ops\n   {\n     DW_LNE_end_sequence = 1,\n     DW_LNE_set_address = 2,\n-    DW_LNE_define_file = 3\n+    DW_LNE_define_file = 3,\n+    /* HP extensions.  */\n+    DW_LNE_HP_negate_is_UV_update      = 0x11,\n+    DW_LNE_HP_push_context             = 0x12,\n+    DW_LNE_HP_pop_context              = 0x13,\n+    DW_LNE_HP_set_file_line_column     = 0x14,\n+    DW_LNE_HP_set_routine_name         = 0x15,\n+    DW_LNE_HP_set_sequence             = 0x16,\n+    DW_LNE_HP_negate_post_semantics    = 0x17,\n+    DW_LNE_HP_negate_function_exit     = 0x18,\n+    DW_LNE_HP_negate_front_end_logical = 0x19,\n+    DW_LNE_HP_define_proc              = 0x20\n   };\n \n /* Call frame information.  */\n@@ -545,17 +687,14 @@ enum dwarf_call_frame_info\n     DW_CFA_def_cfa = 0x0c,\n     DW_CFA_def_cfa_register = 0x0d,\n     DW_CFA_def_cfa_offset = 0x0e,\n-\n     /* DWARF 3.  */\n     DW_CFA_def_cfa_expression = 0x0f,\n     DW_CFA_expression = 0x10,\n     DW_CFA_offset_extended_sf = 0x11,\n     DW_CFA_def_cfa_sf = 0x12,\n     DW_CFA_def_cfa_offset_sf = 0x13,\n-\n     /* SGI/MIPS specific.  */\n     DW_CFA_MIPS_advance_loc8 = 0x1d,\n-\n     /* GNU extensions.  */\n     DW_CFA_GNU_window_save = 0x2d,\n     DW_CFA_GNU_args_size = 0x2e,\n@@ -566,8 +705,8 @@ enum dwarf_call_frame_info\n #define DW_CIE_VERSION\t  1\n \n #define DW_CFA_extended   0\n-#define DW_CFA_low_user   0x1c\n-#define DW_CFA_high_user  0x3f\n+#define DW_CFA_lo_user    0x1c\n+#define DW_CFA_hi_user    0x3f\n \n #define DW_CHILDREN_no\t\t     0x00\n #define DW_CHILDREN_yes\t\t     0x01\n@@ -593,10 +732,11 @@ enum dwarf_source_language\n     DW_LANG_Ada95 = 0x000d,\n     DW_LANG_Fortran95 = 0x000e,\n     /* MIPS.  */\n-    DW_LANG_Mips_Assembler = 0x8001\n+    DW_LANG_Mips_Assembler = 0x8001,\n+    /* UPC.  */\n+    DW_LANG_Upc = 0x8765\n   };\n \n-\n #define DW_LANG_lo_user 0x8000\t/* Implementation-defined range start.  */\n #define DW_LANG_hi_user 0xffff\t/* Implementation-defined range start.  */\n "}]}