{"sha": "cc2e8b2d919f2f65a289b31f3b12a27e868c21f6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2MyZThiMmQ5MTlmMmY2NWEyODliMzFmM2IxMmEyN2U4NjhjMjFmNg==", "commit": {"author": {"name": "Zack Weinberg", "email": "zackw@stanford.edu", "date": "2001-04-27T23:55:03Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2001-04-27T23:55:03Z"}, "message": "function.c (purge_addressof_1): Remove the duplicate if (code == SET) block.\n\n\t* function.c (purge_addressof_1): Remove the duplicate\n\tif (code == SET) block.  Fold the two if (code == ADDRESSOF)\n\tblocks together.\n\nFrom-SVN: r41649", "tree": {"sha": "38b7359e368f7c4d2de6a75f26835e769cb240f3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38b7359e368f7c4d2de6a75f26835e769cb240f3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cc2e8b2d919f2f65a289b31f3b12a27e868c21f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc2e8b2d919f2f65a289b31f3b12a27e868c21f6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cc2e8b2d919f2f65a289b31f3b12a27e868c21f6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cc2e8b2d919f2f65a289b31f3b12a27e868c21f6/comments", "author": null, "committer": null, "parents": [{"sha": "3f3942e8512d9cc64835773ed605656c9a4b30f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3f3942e8512d9cc64835773ed605656c9a4b30f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3f3942e8512d9cc64835773ed605656c9a4b30f5"}], "stats": {"total": 36, "additions": 17, "deletions": 19}, "files": [{"sha": "08224fcd4bc212fbf885cec8de8c7616ff08a679", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc2e8b2d919f2f65a289b31f3b12a27e868c21f6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc2e8b2d919f2f65a289b31f3b12a27e868c21f6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cc2e8b2d919f2f65a289b31f3b12a27e868c21f6", "patch": "@@ -1,3 +1,9 @@\n+2001-04-27  Zack Weinberg  <zackw@stanford.edu>\n+\n+\t* function.c (purge_addressof_1): Remove the duplicate\n+\tif (code == SET) block.  Fold the two if (code == ADDRESSOF)\n+\tblocks together.\n+\n 2001-04-28  Jason Merrill  <jason_merrill@redhat.com>\n \n \t* except.c (expand_eh_region_start): Don't start a new block."}, {"sha": "c2727047e2d171c5a09477c76228e941c22072a0", "filename": "gcc/function.c", "status": "modified", "additions": 11, "deletions": 19, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cc2e8b2d919f2f65a289b31f3b12a27e868c21f6/gcc%2Ffunction.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cc2e8b2d919f2f65a289b31f3b12a27e868c21f6/gcc%2Ffunction.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffunction.c?ref=cc2e8b2d919f2f65a289b31f3b12a27e868c21f6", "patch": "@@ -2991,14 +2991,19 @@ purge_addressof_1 (loc, insn, force, store, ht)\n       result &= purge_addressof_1 (&SET_SRC (x), insn, force, 0, ht);\n       return result;\n     }\n-\n-  else if (code == ADDRESSOF && GET_CODE (XEXP (x, 0)) == MEM)\n+  else if (code == ADDRESSOF)\n     {\n+      rtx sub, insns;\n+\n+      if (GET_CODE (XEXP (x, 0)) != MEM)\n+\t{\n+\t  put_addressof_into_stack (x, ht);\n+\t  return true;\n+\t}\n+\t  \n       /* We must create a copy of the rtx because it was created by\n \t overwriting a REG rtx which is always shared.  */\n-      rtx sub = copy_rtx (XEXP (XEXP (x, 0), 0));\n-      rtx insns;\n-\n+      sub = copy_rtx (XEXP (XEXP (x, 0), 0));\n       if (validate_change (insn, loc, sub, 0)\n \t  || validate_replace_rtx (x, sub, insn))\n \treturn true;\n@@ -3210,22 +3215,9 @@ purge_addressof_1 (loc, insn, force, store, ht)\n \t    }\n \t  goto restart;\n \t}\n-    give_up:;\n-      /* else give up and put it into the stack */\n-    }\n-\n-  else if (code == ADDRESSOF)\n-    {\n-      put_addressof_into_stack (x, ht);\n-      return true;\n-    }\n-  else if (code == SET)\n-    {\n-      result = purge_addressof_1 (&SET_DEST (x), insn, force, 1, ht);\n-      result &= purge_addressof_1 (&SET_SRC (x), insn, force, 0, ht);\n-      return result;\n     }\n \n+ give_up:\n   /* Scan all subexpressions.  */\n   fmt = GET_RTX_FORMAT (code);\n   for (i = 0; i < GET_RTX_LENGTH (code); i++, fmt++)"}]}