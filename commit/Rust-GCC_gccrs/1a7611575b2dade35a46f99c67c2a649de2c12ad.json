{"sha": "1a7611575b2dade35a46f99c67c2a649de2c12ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWE3NjExNTc1YjJkYWRlMzVhNDZmOTljNjdjMmE2NDlkZTJjMTJhZA==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2015-06-22T10:45:47Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2015-06-22T10:45:47Z"}, "message": "c-torture.exp: Set LTO_TORTURE_OPTIONS conditional on not existing TORTURE_OPTIONS only.\n\n2015-06-22  Richard Biener  <rguenther@suse.de>\n\n\t* lib/c-torture.exp: Set LTO_TORTURE_OPTIONS conditional on\n\tnot existing TORTURE_OPTIONS only.\n\t* lib/gcc-dg.exp: Likewise.\n\nFrom-SVN: r224724", "tree": {"sha": "5f51fb11012bfd0350a3468b153e1430d36dd602", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f51fb11012bfd0350a3468b153e1430d36dd602"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1a7611575b2dade35a46f99c67c2a649de2c12ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a7611575b2dade35a46f99c67c2a649de2c12ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a7611575b2dade35a46f99c67c2a649de2c12ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a7611575b2dade35a46f99c67c2a649de2c12ad/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6d098c572aef870f6a068d7e6697fde5a4ed2ccc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6d098c572aef870f6a068d7e6697fde5a4ed2ccc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6d098c572aef870f6a068d7e6697fde5a4ed2ccc"}], "stats": {"total": 78, "additions": 42, "deletions": 36}, "files": [{"sha": "06ab49726904616b90e5b2d13717adf27fc92938", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a7611575b2dade35a46f99c67c2a649de2c12ad/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a7611575b2dade35a46f99c67c2a649de2c12ad/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1a7611575b2dade35a46f99c67c2a649de2c12ad", "patch": "@@ -1,3 +1,9 @@\n+2015-06-22  Richard Biener  <rguenther@suse.de>\n+\n+\t* lib/c-torture.exp: Set LTO_TORTURE_OPTIONS conditional on\n+\tnot existing TORTURE_OPTIONS only.\n+\t* lib/gcc-dg.exp: Likewise.\n+\n 2015-06-22  Christian Bruel  <christian.bruel@st.com>\n \n \tPR target/52144"}, {"sha": "607e7d0435f477c053f210eb6d8088dba7976672", "filename": "gcc/testsuite/lib/c-torture.exp", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a7611575b2dade35a46f99c67c2a649de2c12ad/gcc%2Ftestsuite%2Flib%2Fc-torture.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a7611575b2dade35a46f99c67c2a649de2c12ad/gcc%2Ftestsuite%2Flib%2Fc-torture.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fc-torture.exp?ref=1a7611575b2dade35a46f99c67c2a649de2c12ad", "patch": "@@ -22,8 +22,9 @@ load_lib target-libpath.exp\n load_lib target-utils.exp\n \n # The default option list can be overridden by\n-# TORTURE_OPTIONS=\"{ { list1 } ... { listN } }\"\n+# TORTURE_OPTIONS=\"{ list1 } ... { listN }\"\n \n+set LTO_TORTURE_OPTIONS \"\"\n if [info exists TORTURE_OPTIONS] {\n     set C_TORTURE_OPTIONS $TORTURE_OPTIONS\n } else {\n@@ -44,6 +45,22 @@ if [info exists TORTURE_OPTIONS] {\n \t{ -O3 -g } \\\n \t{ -Os } \\\n \t{ -Og -g } ]\n+\n+    if [check_effective_target_lto] {\n+        # When having plugin test both slim and fat LTO and plugin/nonplugin\n+        # path.\n+        if [check_linker_plugin_available] {\n+          set LTO_TORTURE_OPTIONS [list \\\n+    \t      { -O2 -flto -fno-use-linker-plugin -flto-partition=none } \\\n+\t      { -O2 -flto -fuse-linker-plugin -fno-fat-lto-objects }\n+          ]\n+        } else {\n+          set LTO_TORTURE_OPTIONS [list \\\n+\t      { -O2 -flto -flto-partition=none } \\\n+\t      { -O2 -flto }\n+          ]\n+        }\n+    }\n }\n \n if [info exists ADDITIONAL_TORTURE_OPTIONS] {\n@@ -65,23 +82,6 @@ if { $orig_environment_saved == 0 } {\n     set_ld_library_path_env_vars\n }\n \n-set LTO_TORTURE_OPTIONS \"\"\n-if [check_effective_target_lto] {\n-    # When having plugin test both slim and fat LTO and plugin/nonplugin\n-    # path.\n-    if [check_linker_plugin_available] {\n-      set LTO_TORTURE_OPTIONS [list \\\n-\t  { -O2 -flto -fno-use-linker-plugin -flto-partition=none } \\\n-\t  { -O2 -flto -fuse-linker-plugin -fno-fat-lto-objects }\n-      ]\n-    } else {\n-      set LTO_TORTURE_OPTIONS [list \\\n-\t  { -O2 -flto -flto-partition=none } \\\n-\t  { -O2 -flto }\n-      ]\n-    }\n-}\n-\n #\n # c-torture-compile -- runs the Tege C-torture test\n #"}, {"sha": "00ca0c5d116d0b77697bf9c7e08361b3222c4a0a", "filename": "gcc/testsuite/lib/gcc-dg.exp", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1a7611575b2dade35a46f99c67c2a649de2c12ad/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1a7611575b2dade35a46f99c67c2a649de2c12ad/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Flib%2Fgcc-dg.exp?ref=1a7611575b2dade35a46f99c67c2a649de2c12ad", "patch": "@@ -46,6 +46,7 @@ if ![info exists GCC_UNDER_TEST] {\n     set GCC_UNDER_TEST \"[find_gcc]\"\n }\n \n+set LTO_TORTURE_OPTIONS \"\"\n if [info exists TORTURE_OPTIONS] {\n     set DG_TORTURE_OPTIONS $TORTURE_OPTIONS\n } else {\n@@ -65,6 +66,23 @@ if [info exists TORTURE_OPTIONS] {\n \t{ -O3 -fomit-frame-pointer -funroll-all-loops -finline-functions } \\\n \t{ -O3 -g } \\\n \t{ -Os } ]\n+\n+    if [check_effective_target_lto] {\n+        # When having plugin test both slim and fat LTO and plugin/nonplugin\n+        # path.\n+\tif [check_linker_plugin_available] {\n+           set LTO_TORTURE_OPTIONS [list \\\n+\t      { -O2 -flto -fno-use-linker-plugin -flto-partition=none } \\\n+\t      { -O2 -flto -fuse-linker-plugin -fno-fat-lto-objects }\n+           ]\n+           set gcc_force_conventional_output \"-ffat-lto-objects\"\n+        } else {\n+           set LTO_TORTURE_OPTIONS [list \\\n+\t      { -O2 -flto -flto-partition=none } \\\n+\t      { -O2 -flto }\n+           ]\n+        }\n+    }\n }\n \n if [info exists ADDITIONAL_TORTURE_OPTIONS] {\n@@ -87,24 +105,6 @@ if { $orig_environment_saved == 0 } {\n global gcc_force_conventional_output\n set gcc_force_conventional_output \"\"\n \n-set LTO_TORTURE_OPTIONS \"\"\n-if [check_effective_target_lto] {\n-    # When having plugin test both slim and fat LTO and plugin/nonplugin\n-    # path.\n-    if [check_linker_plugin_available] {\n-      set LTO_TORTURE_OPTIONS [list \\\n-\t  { -O2 -flto -fno-use-linker-plugin -flto-partition=none } \\\n-\t  { -O2 -flto -fuse-linker-plugin -fno-fat-lto-objects }\n-      ]\n-      set gcc_force_conventional_output \"-ffat-lto-objects\"\n-    } else {\n-      set LTO_TORTURE_OPTIONS [list \\\n-\t  { -O2 -flto -flto-partition=none } \\\n-\t  { -O2 -flto }\n-      ]\n-    }\n-}\n-\n # Deduce generated files from tool flags, return finalcode string\n proc schedule-cleanups { opts } {\n     global additional_sources"}]}