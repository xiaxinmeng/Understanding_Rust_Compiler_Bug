{"sha": "18e5eb77b7eb185b83795ab47f1ec52dd88c1c98", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MThlNWViNzdiN2ViMTg1YjgzNzk1YWI0N2YxZWM1MmRkODhjMWM5OA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2016-11-27T20:23:31Z"}, "committer": {"name": "Eric Botcazou", "email": "ebotcazou@gcc.gnu.org", "date": "2016-11-27T20:23:31Z"}, "message": "re PR ada/78531 (bootstrap broken with _FORTIFY_SOURCE enabled)\n\n\tPR ada/78531\n\t* namet.h (Max_Line_Length): Define.\n\t(struct Bounded_String): Declare Chars with exact size.\n\t(namet__get_decoded_name_string): Delete.\n\t(Get_Decoded_Name_String): Likewise.\n\t(casing__set_all_upper_case): Likewise.\n\nFrom-SVN: r242901", "tree": {"sha": "7d8820ac3267c7ff735a709a968441ef0b84ea90", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7d8820ac3267c7ff735a709a968441ef0b84ea90"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/18e5eb77b7eb185b83795ab47f1ec52dd88c1c98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18e5eb77b7eb185b83795ab47f1ec52dd88c1c98", "html_url": "https://github.com/Rust-GCC/gccrs/commit/18e5eb77b7eb185b83795ab47f1ec52dd88c1c98", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/18e5eb77b7eb185b83795ab47f1ec52dd88c1c98/comments", "author": null, "committer": null, "parents": [{"sha": "e578b767c509911cdef2325ad144fa3dacfb7f12", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e578b767c509911cdef2325ad144fa3dacfb7f12", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e578b767c509911cdef2325ad144fa3dacfb7f12"}], "stats": {"total": 45, "additions": 16, "deletions": 29}, "files": [{"sha": "d89b9674556c3441236cf608a99b71ae0087960a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18e5eb77b7eb185b83795ab47f1ec52dd88c1c98/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18e5eb77b7eb185b83795ab47f1ec52dd88c1c98/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=18e5eb77b7eb185b83795ab47f1ec52dd88c1c98", "patch": "@@ -1,3 +1,12 @@\n+2016-11-27  Eric Botcazou  <ebotcazou@adacore.com>\n+\n+\tPR ada/78531\n+\t* namet.h (Max_Line_Length): Define.\n+\t(struct Bounded_String): Declare Chars with exact size.\n+\t(namet__get_decoded_name_string): Delete.\n+\t(Get_Decoded_Name_String): Likewise.\n+\t(casing__set_all_upper_case): Likewise.\n+\n 2016-11-22  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* gcc-interface/Make-lang.in (check-acats): Fix detection"}, {"sha": "a016f93b93d0124f84f5899d0435d6691503cdf2", "filename": "gcc/ada/namet.h", "status": "modified", "additions": 7, "deletions": 29, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/18e5eb77b7eb185b83795ab47f1ec52dd88c1c98/gcc%2Fada%2Fnamet.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/18e5eb77b7eb185b83795ab47f1ec52dd88c1c98/gcc%2Fada%2Fnamet.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fnamet.h?ref=18e5eb77b7eb185b83795ab47f1ec52dd88c1c98", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                              C Header File                               *\n  *                                                                          *\n- *            Copyright (C) 1992-2015, Free Software Foundation, Inc.       *\n+ *            Copyright (C) 1992-2016, Free Software Foundation, Inc.       *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -25,7 +25,7 @@\n \n /* This is the C file that corresponds to the Ada package specification\n    Namet.  It was created manually from files namet.ads and namet.adb.\n-   Some subprograms from Sinput are also made accessible here.  */\n+   Subprograms from Exp_Dbug and Sinput are also made accessible here.  */\n \n #ifdef __cplusplus\n extern \"C\" {\n@@ -52,14 +52,15 @@ extern struct Name_Entry *Names_Ptr;\n #define Name_Chars_Ptr namet__name_chars__table\n extern char *Name_Chars_Ptr;\n \n-/* The global name buffer. */\n+/* This is Hostparm.Max_Line_Length.  */\n+#define Max_Line_Length (32767 - 1)\n+\n+/* The global name buffer.  */\n struct Bounded_String\n {\n   Nat Max_Length;\n   Nat Length;\n-  char Chars[1];\n-  /* The 1 here is wrong, but it doesn't matter, because all the code either\n-     goes by Length, or NUL-terminates the string before processing it. */\n+  char Chars[4 * Max_Line_Length]; /* Exact value for overflow detection.  */\n };\n \n #define Global_Name_Buffer namet__global_name_buffer\n@@ -81,32 +82,9 @@ Get_Name_String (Name_Id Id)\n   return Name_Chars_Ptr + Names_Ptr[Id - First_Name_Id].Name_Chars_Index + 1;\n }\n \n-/* Get_Decoded_Name_String returns a null terminated C string in the same\n-   manner as Get_Name_String, except that it is decoded (i.e. upper half or\n-   wide characters are put back in their external form, and character literals\n-   are also returned in their external form (with surrounding apostrophes) */\n-\n-extern void namet__get_decoded_name_string (Name_Id);\n-\n-static char *Get_Decoded_Name_String (Name_Id);\n-\n-INLINE char *\n-Get_Decoded_Name_String (Name_Id Id)\n-{\n-  namet__get_decoded_name_string (Id);\n-  Name_Buffer[Name_Len] = 0;\n-  return Name_Buffer;\n-}\n-\n #define Name_Equals namet__name_equals\n extern Boolean Name_Equals (Name_Id, Name_Id);\n \n-/* Like Get_Decoded_Name_String, but the result has all qualification and\n-   package body entity suffixes stripped, and also all letters are upper\n-   cased.  This is used for building the enumeration literal table. */\n-\n-extern void casing__set_all_upper_case (void);\n-\n /* The following routines and variables are not part of Namet, but we\n    include the header here since it seems the best place for it.  */\n "}]}