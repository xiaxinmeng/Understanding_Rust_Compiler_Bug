{"sha": "31a714f6d8619a542fe7a43ced8e205e47d03228", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzFhNzE0ZjZkODYxOWE1NDJmZTdhNDNjZWQ4ZTIwNWU0N2QwMzIyOA==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2000-12-29T09:20:46Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2000-12-29T09:20:46Z"}, "message": "class.c (pushclass): Remove #if 0'd code.\n\n\t* class.c (pushclass): Remove #if 0'd code.\n\t* cp-tree.h (overload_template_name): Remove.\n\t* decl.c (store_bindings): Simplify.\n\t(pop_from_top_level): Likewise.\n\t* pt.c (overload_template_name): Remove.\n\t(instantiate_decl): Don't call push_to_top_level if it's not\n\tneeded.\n\nFrom-SVN: r38530", "tree": {"sha": "ec49d6f6691a4b3187cd0c5b30dd5d1487d8854b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec49d6f6691a4b3187cd0c5b30dd5d1487d8854b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/31a714f6d8619a542fe7a43ced8e205e47d03228", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31a714f6d8619a542fe7a43ced8e205e47d03228", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31a714f6d8619a542fe7a43ced8e205e47d03228", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31a714f6d8619a542fe7a43ced8e205e47d03228/comments", "author": null, "committer": null, "parents": [{"sha": "d40fb37362d6d75b63ce5b8362e19b62b0c3bcc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d40fb37362d6d75b63ce5b8362e19b62b0c3bcc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d40fb37362d6d75b63ce5b8362e19b62b0c3bcc1"}], "stats": {"total": 70, "additions": 27, "deletions": 43}, "files": [{"sha": "d35161ab1f739bcb35588325e7c420db9e6f177b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a714f6d8619a542fe7a43ced8e205e47d03228/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a714f6d8619a542fe7a43ced8e205e47d03228/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=31a714f6d8619a542fe7a43ced8e205e47d03228", "patch": "@@ -1,3 +1,13 @@\n+2000-12-29  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* class.c (pushclass): Remove #if 0'd code.\n+\t* cp-tree.h (overload_template_name): Remove.\n+\t* decl.c (store_bindings): Simplify.\n+\t(pop_from_top_level): Likewise.\n+\t* pt.c (overload_template_name): Remove.\n+\t(instantiate_decl): Don't call push_to_top_level if it's not \n+\tneeded.\n+\n 2000-12-28  Mark Mitchell  <mark@codesourcery.com>\n \n \t* pt.c (register_local_specialization): Don't return a value."}, {"sha": "db4b480538c5931611f4853f78b60025db058a29", "filename": "gcc/cp/class.c", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a714f6d8619a542fe7a43ced8e205e47d03228/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a714f6d8619a542fe7a43ced8e205e47d03228/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=31a714f6d8619a542fe7a43ced8e205e47d03228", "patch": "@@ -5603,11 +5603,6 @@ pushclass (type, modify)\n \n   pushlevel_class ();\n \n-#if 0\n-  if (CLASSTYPE_TEMPLATE_INFO (type))\n-    overload_template_name (type);\n-#endif\n-\n   if (modify)\n     {\n       if (type != previous_class_type || current_class_depth > 1)"}, {"sha": "10afa3203f6c30fe7797a90f2fcd52ff36f8aedf", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a714f6d8619a542fe7a43ced8e205e47d03228/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a714f6d8619a542fe7a43ced8e205e47d03228/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=31a714f6d8619a542fe7a43ced8e205e47d03228", "patch": "@@ -4186,7 +4186,6 @@ extern tree lookup_template_function            PARAMS ((tree, tree));\n extern int uses_template_parms\t\t\tPARAMS ((tree));\n extern tree instantiate_class_template\t\tPARAMS ((tree));\n extern tree instantiate_template\t\tPARAMS ((tree, tree));\n-extern void overload_template_name\t\tPARAMS ((tree));\n extern int fn_type_unification                  PARAMS ((tree, tree, tree, tree, tree, unification_kind_t, int));\n extern tree tinst_for_decl\t\t\tPARAMS ((void));\n extern void mark_decl_instantiated\t\tPARAMS ((tree, int));"}, {"sha": "a07f6a9955179bdb36ea08c02106e47511b6f8dd", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 11, "deletions": 17, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a714f6d8619a542fe7a43ced8e205e47d03228/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a714f6d8619a542fe7a43ced8e205e47d03228/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=31a714f6d8619a542fe7a43ced8e205e47d03228", "patch": "@@ -2447,18 +2447,14 @@ store_bindings (names, old_bindings)\n \tif (TREE_VEC_ELT (t1, 0) == id)\n \t  goto skip_it;\n \n+      my_friendly_assert (TREE_CODE (id) == IDENTIFIER_NODE, 135);\n       binding = make_tree_vec (4);\n-\n-      if (id)\n-\t{\n-\t  my_friendly_assert (TREE_CODE (id) == IDENTIFIER_NODE, 135);\n-\t  TREE_VEC_ELT (binding, 0) = id;\n-\t  TREE_VEC_ELT (binding, 1) = REAL_IDENTIFIER_TYPE_VALUE (id);\n-\t  TREE_VEC_ELT (binding, 2) = IDENTIFIER_BINDING (id);\n-\t  TREE_VEC_ELT (binding, 3) = IDENTIFIER_CLASS_VALUE (id);\n-\t  IDENTIFIER_BINDING (id) = NULL_TREE;\n-\t  IDENTIFIER_CLASS_VALUE (id) = NULL_TREE;\n-\t}\n+      TREE_VEC_ELT (binding, 0) = id;\n+      TREE_VEC_ELT (binding, 1) = REAL_IDENTIFIER_TYPE_VALUE (id);\n+      TREE_VEC_ELT (binding, 2) = IDENTIFIER_BINDING (id);\n+      TREE_VEC_ELT (binding, 3) = IDENTIFIER_CLASS_VALUE (id);\n+      IDENTIFIER_BINDING (id) = NULL_TREE;\n+      IDENTIFIER_CLASS_VALUE (id) = NULL_TREE;\n       TREE_CHAIN (binding) = old_bindings;\n       old_bindings = binding;\n     skip_it:\n@@ -2552,12 +2548,10 @@ pop_from_top_level ()\n   for (t = s->old_bindings; t; t = TREE_CHAIN (t))\n     {\n       tree id = TREE_VEC_ELT (t, 0);\n-      if (id)\n-\t{\n-\t  SET_IDENTIFIER_TYPE_VALUE (id, TREE_VEC_ELT (t, 1));\n-\t  IDENTIFIER_BINDING (id) = TREE_VEC_ELT (t, 2);\n-\t  IDENTIFIER_CLASS_VALUE (id) = TREE_VEC_ELT (t, 3);\n- \t}\n+\n+      SET_IDENTIFIER_TYPE_VALUE (id, TREE_VEC_ELT (t, 1));\n+      IDENTIFIER_BINDING (id) = TREE_VEC_ELT (t, 2);\n+      IDENTIFIER_CLASS_VALUE (id) = TREE_VEC_ELT (t, 3);\n     }\n \n   /* If we were in the middle of compiling a function, restore our"}, {"sha": "9b049854644795e2fdb07a815e7515cdfcf8fd04", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 6, "deletions": 20, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/31a714f6d8619a542fe7a43ced8e205e47d03228/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/31a714f6d8619a542fe7a43ced8e205e47d03228/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=31a714f6d8619a542fe7a43ced8e205e47d03228", "patch": "@@ -7558,24 +7558,6 @@ instantiate_template (tmpl, targ_ptr)\n   return fndecl;\n }\n \n-/* Push the name of the class template into the scope of the instantiation.  */\n-\n-void\n-overload_template_name (type)\n-     tree type;\n-{\n-  tree id = DECL_NAME (CLASSTYPE_TI_TEMPLATE (type));\n-  tree decl;\n-\n-  if (IDENTIFIER_CLASS_VALUE (id)\n-      && TREE_TYPE (IDENTIFIER_CLASS_VALUE (id)) == type)\n-    return;\n-\n-  decl = build_decl (TYPE_DECL, id, type);\n-  DECL_ARTIFICIAL (decl) = 1;\n-  pushdecl_class_level (decl);\n-}\n-\n /* The FN is a TEMPLATE_DECL for a function.  The ARGS are the\n    arguments that are being used when calling it.  TARGS is a vector\n    into which the deduced template arguments are placed.  \n@@ -9621,6 +9603,7 @@ instantiate_decl (d, defer_ok)\n   tree gen_tmpl;\n   int pattern_defined;\n   int line = lineno;\n+  int need_push;\n   const char *file = input_filename;\n \n   /* This function should only be used to instantiate templates for\n@@ -9776,7 +9759,9 @@ instantiate_decl (d, defer_ok)\n       goto out;\n     }\n \n-  push_to_top_level ();\n+  need_push = !global_bindings_p ();\n+  if (need_push)\n+    push_to_top_level ();\n \n   /* We're now committed to instantiating this template.  Mark it as\n      instantiated so that recursive calls to instantiate_decl do not\n@@ -9840,7 +9825,8 @@ instantiate_decl (d, defer_ok)\n   /* We're not deferring instantiation any more.  */\n   TI_PENDING_TEMPLATE_FLAG (DECL_TEMPLATE_INFO (d)) = 0;\n \n-  pop_from_top_level ();\n+  if (need_push)\n+    pop_from_top_level ();\n \n out:\n   lineno = line;"}]}