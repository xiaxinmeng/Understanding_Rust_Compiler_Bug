{"sha": "531e214a01d19e889065032689d727cb754861ce", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTMxZTIxNGEwMWQxOWU4ODkwNjUwMzI2ODlkNzI3Y2I3NTQ4NjFjZQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2006-03-29T16:31:53Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2006-03-29T16:31:53Z"}, "message": "re PR java/26390 (Problem dispatching method call when method does not exist in superclass)\n\ngcc/java\n\tPR java/26390:\n\t* parse.y (find_most_specific_methods_list): Added 'class'\n\targument.\n\t(lookup_method_invoke): Updated.\nlibjava\n\tPR java/26390:\n\t* testsuite/libjava.lang/pr26390.out: New file.\n\t* testsuite/libjava.lang/pr26390.java: New file.\n\t* sources.am, Makefile.in: Rebuilt.\n\t* scripts/makemake.tcl: Compile gnu/java/awt/peer/swing.\n\nFrom-SVN: r112499", "tree": {"sha": "6f42da3be8a72fabc602b81ed7dd9cfe5515daca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f42da3be8a72fabc602b81ed7dd9cfe5515daca"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/531e214a01d19e889065032689d727cb754861ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/531e214a01d19e889065032689d727cb754861ce", "html_url": "https://github.com/Rust-GCC/gccrs/commit/531e214a01d19e889065032689d727cb754861ce", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/531e214a01d19e889065032689d727cb754861ce/comments", "author": null, "committer": null, "parents": [{"sha": "bd4ca424997fd4f8f7eaa32b933fc9e19eb38986", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bd4ca424997fd4f8f7eaa32b933fc9e19eb38986", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bd4ca424997fd4f8f7eaa32b933fc9e19eb38986"}], "stats": {"total": 137, "additions": 128, "deletions": 9}, "files": [{"sha": "826d60808f0147f9ac88712c0361e10584d16f21", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/531e214a01d19e889065032689d727cb754861ce/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/531e214a01d19e889065032689d727cb754861ce/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=531e214a01d19e889065032689d727cb754861ce", "patch": "@@ -1,3 +1,10 @@\n+2006-03-28  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR java/26390:\n+\t* parse.y (find_most_specific_methods_list): Added 'class'\n+\targument.\n+\t(lookup_method_invoke): Updated.\n+\n 2006-03-15  Tom Tromey  <tromey@redhat.com>\n \n \t* jcf-write.c (generate_bytecode_insns): Use qualifying type for"}, {"sha": "6b0bf767ca33196db1a52c3d0ad0b4edcaa9ff9b", "filename": "gcc/java/parse.y", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/531e214a01d19e889065032689d727cb754861ce/gcc%2Fjava%2Fparse.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/531e214a01d19e889065032689d727cb754861ce/gcc%2Fjava%2Fparse.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fparse.y?ref=531e214a01d19e889065032689d727cb754861ce", "patch": "@@ -134,7 +134,7 @@ static tree resolve_no_layout (tree, tree);\n static int invocation_mode (tree, int);\n static tree find_applicable_accessible_methods_list (int, tree, tree, tree);\n static void search_applicable_methods_list (int, tree, tree, tree, tree *, tree *);\n-static tree find_most_specific_methods_list (tree);\n+static tree find_most_specific_methods_list (tree, tree);\n static int argument_types_convertible (tree, tree);\n static tree patch_invoke (tree, tree, tree);\n static int maybe_use_access_method (int, tree *, tree *);\n@@ -11249,7 +11249,7 @@ lookup_method_invoke (int lc, tree cl, tree class, tree name, tree arg_list)\n   /* Find all candidates and then refine the list, searching for the\n      most specific method. */\n   list = find_applicable_accessible_methods_list (lc, class, name, atl);\n-  list = find_most_specific_methods_list (list);\n+  list = find_most_specific_methods_list (list, class);\n   if (list && !TREE_CHAIN (list))\n     return TREE_VALUE (list);\n \n@@ -11441,7 +11441,7 @@ search_applicable_methods_list (int lc, tree method, tree name, tree arglist,\n /* 15.11.2.2 Choose the Most Specific Method */\n \n static tree\n-find_most_specific_methods_list (tree list)\n+find_most_specific_methods_list (tree list, tree class)\n {\n   int max = 0;\n   int abstract, candidates;\n@@ -11464,8 +11464,23 @@ find_most_specific_methods_list (tree list)\n \t  /* Compare arguments and location where methods where declared */\n \t  if (argument_types_convertible (method_v, current_v))\n \t    {\n+\t      /* We have a rather odd special case here.  The front\n+\t\t end doesn't properly implement inheritance, so we\n+\t\t work around it here.  The idea is, if we are\n+\t\t comparing a method declared in a class to one\n+\t\t declared in an interface, and the invocation's\n+\t\t qualifying class is a class (and not an interface),\n+\t\t then we consider the method's class to be the\n+\t\t qualifying class of the invocation.  This lets us\n+\t\t fake the result of ordinary inheritance.  */\n+\t      tree context_v = DECL_CONTEXT (current_v);\n+\t      if (TYPE_INTERFACE_P (DECL_CONTEXT (method_v))\n+\t\t  && ! TYPE_INTERFACE_P (context_v)\n+\t\t  && ! TYPE_INTERFACE_P (class))\n+\t\tcontext_v = class;\n+\n \t      if (valid_method_invocation_conversion_p\n-\t\t  (DECL_CONTEXT (method_v), DECL_CONTEXT (current_v)))\n+\t\t  (DECL_CONTEXT (method_v), context_v))\n \t\t{\n \t\t  int v = (DECL_SPECIFIC_COUNT (current_v) += 1);\n \t\t  max = (v > max ? v : max);"}, {"sha": "2c8ea41ce5c4826f64226704712150089806a9b5", "filename": "libjava/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/531e214a01d19e889065032689d727cb754861ce/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/531e214a01d19e889065032689d727cb754861ce/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=531e214a01d19e889065032689d727cb754861ce", "patch": "@@ -1,3 +1,11 @@\n+2006-03-29  Tom Tromey  <tromey@redhat.com>\n+\n+\tPR java/26390:\n+\t* testsuite/libjava.lang/pr26390.out: New file.\n+\t* testsuite/libjava.lang/pr26390.java: New file.\n+\t* sources.am, Makefile.in: Rebuilt.\n+\t* scripts/makemake.tcl: Compile gnu/java/awt/peer/swing.\n+\n 2006-03-29  Tom Tromey  <tromey@redhat.com>\n \n \t* posix.cc (_Jv_platform_nanotime): Look for CLOCK_MONOTONIC and"}, {"sha": "b32f73eb4892e6fa5ee5c2ee74a917708fb3d7a0", "filename": "libjava/Makefile.in", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/531e214a01d19e889065032689d727cb754861ce/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/531e214a01d19e889065032689d727cb754861ce/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=531e214a01d19e889065032689d727cb754861ce", "patch": "@@ -234,9 +234,10 @@ am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tjavax/swing/text/html/parser.lo javax/swing/text/rtf.lo \\\n \tjavax/swing/tree.lo javax/swing/undo.lo javax/transaction.lo \\\n \tjavax/transaction/xa.lo org/ietf/jgss.lo\n-am__DEPENDENCIES_3 = gnu-CORBA.lo gnu-java-beans.lo gnu-javax-rmi.lo \\\n-\tgnu-javax-sound-midi.lo gnu-xml.lo javax-imageio.lo \\\n-\tjavax-rmi.lo javax-xml.lo org-omg.lo org-w3c.lo org-xml.lo\n+am__DEPENDENCIES_3 = gnu-CORBA.lo gnu-java-awt-peer-swing.lo \\\n+\tgnu-java-beans.lo gnu-javax-rmi.lo gnu-javax-sound-midi.lo \\\n+\tgnu-xml.lo javax-imageio.lo javax-rmi.lo javax-xml.lo \\\n+\torg-omg.lo org-w3c.lo org-xml.lo\n am__DEPENDENCIES_4 = $(patsubst classpath/resource/%,%,$(addsuffix \\\n \t.lo,$(property_files)))\n am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n@@ -1372,6 +1373,22 @@ classpath/gnu/java/awt/peer/qt/QtToolkit.java \\\n classpath/gnu/java/awt/peer/qt/QtVolatileImage.java \\\n classpath/gnu/java/awt/peer/qt/QtWindowPeer.java\n \n+gnu_java_awt_peer_swing_source_files = \\\n+classpath/gnu/java/awt/peer/swing/SwingButtonPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingCanvasPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingComponent.java \\\n+classpath/gnu/java/awt/peer/swing/SwingComponentPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingContainerPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingFramePeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingLabelPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingMenuBarPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingMenuItemPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingMenuPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingPanelPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingTextFieldPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingToolkit.java \\\n+classpath/gnu/java/awt/peer/swing/SwingWindowPeer.java\n+\n gnu_java_beans_source_files = \\\n classpath/gnu/java/beans/BeanInfoEmbryo.java \\\n classpath/gnu/java/beans/DefaultExceptionListener.java \\\n@@ -6618,6 +6635,7 @@ ordinary_header_files = \\\n \n bc_objects = \\\n   gnu-CORBA.lo \\\n+  gnu-java-awt-peer-swing.lo \\\n   gnu-java-beans.lo \\\n   gnu-javax-rmi.lo \\\n   gnu-javax-sound-midi.lo \\\n@@ -8662,6 +8680,11 @@ gnu-java-awt-peer-qt.lo: $(gnu_java_awt_peer_qt_source_files)\n \t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o gnu-java-awt-peer-qt.lo @gnu-java-awt-peer-qt.list\n \t@rm -f gnu-java-awt-peer-qt.list\n \n+gnu-java-awt-peer-swing.lo: $(gnu_java_awt_peer_swing_source_files)\n+\t@find classpath/lib/gnu/java/awt/peer/swing -name '*.class' > gnu-java-awt-peer-swing.list\n+\t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o gnu-java-awt-peer-swing.lo @gnu-java-awt-peer-swing.list\n+\t@rm -f gnu-java-awt-peer-swing.list\n+\n gnu-java-beans.lo: $(gnu_java_beans_source_files)\n \t@find classpath/lib/gnu/java/beans -name '*.class' > gnu-java-beans.list\n \t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o gnu-java-beans.lo @gnu-java-beans.list"}, {"sha": "d50b65a8a16d5353ba5aa83a0bedb96e8cd956d9", "filename": "libjava/scripts/makemake.tcl", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/531e214a01d19e889065032689d727cb754861ce/libjava%2Fscripts%2Fmakemake.tcl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/531e214a01d19e889065032689d727cb754861ce/libjava%2Fscripts%2Fmakemake.tcl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fscripts%2Fmakemake.tcl?ref=531e214a01d19e889065032689d727cb754861ce", "patch": "@@ -37,8 +37,7 @@ set package_map(.) package\n set package_map(gnu/test) ignore\n set package_map(gnu/javax/swing/plaf/gtk) ignore\n \n-# This package doesn't really work yet, and seems to trigger bug #26390\n-set package_map(gnu/java/awt/peer/swing) ignore\n+set package_map(gnu/java/awt/peer/swing) bc\n \n set package_map(gnu/xml) bc\n set package_map(javax/imageio) bc"}, {"sha": "4748a1b511015bf886eb89af8ec52a303f18c577", "filename": "libjava/sources.am", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/531e214a01d19e889065032689d727cb754861ce/libjava%2Fsources.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/531e214a01d19e889065032689d727cb754861ce/libjava%2Fsources.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fsources.am?ref=531e214a01d19e889065032689d727cb754861ce", "patch": "@@ -825,6 +825,27 @@ gnu-java-awt-peer-qt.lo: $(gnu_java_awt_peer_qt_source_files)\n \t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o gnu-java-awt-peer-qt.lo @gnu-java-awt-peer-qt.list\n \t@rm -f gnu-java-awt-peer-qt.list\n \n+gnu_java_awt_peer_swing_source_files = \\\n+classpath/gnu/java/awt/peer/swing/SwingButtonPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingCanvasPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingComponent.java \\\n+classpath/gnu/java/awt/peer/swing/SwingComponentPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingContainerPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingFramePeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingLabelPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingMenuBarPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingMenuItemPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingMenuPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingPanelPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingTextFieldPeer.java \\\n+classpath/gnu/java/awt/peer/swing/SwingToolkit.java \\\n+classpath/gnu/java/awt/peer/swing/SwingWindowPeer.java\n+\n+gnu-java-awt-peer-swing.lo: $(gnu_java_awt_peer_swing_source_files)\n+\t@find classpath/lib/gnu/java/awt/peer/swing -name '*.class' > gnu-java-awt-peer-swing.list\n+\t$(LTGCJCOMPILE) -fjni -findirect-dispatch -c -o gnu-java-awt-peer-swing.lo @gnu-java-awt-peer-swing.list\n+\t@rm -f gnu-java-awt-peer-swing.list\n+\n gnu_java_beans_source_files = \\\n classpath/gnu/java/beans/BeanInfoEmbryo.java \\\n classpath/gnu/java/beans/DefaultExceptionListener.java \\\n@@ -8186,6 +8207,7 @@ ordinary_header_files = \\\n \n bc_objects = \\\n   gnu-CORBA.lo \\\n+  gnu-java-awt-peer-swing.lo \\\n   gnu-java-beans.lo \\\n   gnu-javax-rmi.lo \\\n   gnu-javax-sound-midi.lo \\"}, {"sha": "09cca7ef9032caaad08ff86e2c094ca32322d883", "filename": "libjava/testsuite/libjava.lang/pr26390.java", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/531e214a01d19e889065032689d727cb754861ce/libjava%2Ftestsuite%2Flibjava.lang%2Fpr26390.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/531e214a01d19e889065032689d727cb754861ce/libjava%2Ftestsuite%2Flibjava.lang%2Fpr26390.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2Fpr26390.java?ref=531e214a01d19e889065032689d727cb754861ce", "patch": "@@ -0,0 +1,45 @@\n+public class pr26390\n+{\n+  public interface ComponentPeer {\n+    public void setBounds();\n+  }\n+\n+  public interface ContainerPeer extends ComponentPeer {\n+  }\n+\n+  public interface WindowPeer extends ContainerPeer {\n+  }\n+\n+  public interface FramePeer extends WindowPeer {\n+  }\n+\n+  public static class SwingComponentPeer implements ComponentPeer {\n+    public void setBounds() {\n+    }\n+  }\n+\n+  public static class SwingContainerPeer\n+    extends SwingComponentPeer implements ContainerPeer\n+  {\n+  }\n+\n+  public static class SwingWindowPeer\n+    extends SwingContainerPeer implements WindowPeer\n+  {\n+  }\n+\n+  public static class SwingFramePeer\n+    extends SwingWindowPeer implements FramePeer\n+  {\n+    public void setBounds() {\n+      super.setBounds();\n+    }\n+  }\n+\n+  public static void main(String[] args)\n+  {\n+    SwingFramePeer s = new SwingFramePeer();\n+    s.setBounds();\n+  }\n+}\n+"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "libjava/testsuite/libjava.lang/pr26390.out", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/531e214a01d19e889065032689d727cb754861ce/libjava%2Ftestsuite%2Flibjava.lang%2Fpr26390.out", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/531e214a01d19e889065032689d727cb754861ce/libjava%2Ftestsuite%2Flibjava.lang%2Fpr26390.out", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2Flibjava.lang%2Fpr26390.out?ref=531e214a01d19e889065032689d727cb754861ce"}]}