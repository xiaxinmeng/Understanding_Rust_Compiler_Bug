{"sha": "3e42d56b4b6fa2d03a6bd52e7135df62e12a3385", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2U0MmQ1NmI0YjZmYTJkMDNhNmJkNTJlNzEzNWRmNjJlMTJhMzM4NQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-04-13T21:24:37Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1997-04-13T21:24:37Z"}, "message": "integrate.c (copy_rtx_and_substitute): If FRAME_GROWS_DOWNWARD and regno == VIRTUAL_STACK_VARS_REGNUM...\n\n\t* integrate.c (copy_rtx_and_substitute): If FRAME_GROWS_DOWNWARD\n\tand regno == VIRTUAL_STACK_VARS_REGNUM,\tround size of stack slot up\n\tbefore calling assign_stack_temp.\n\nFrom-SVN: r13895", "tree": {"sha": "e33f6ef51c6019d4ed8612e4f38439d3bc2cf6ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e33f6ef51c6019d4ed8612e4f38439d3bc2cf6ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3e42d56b4b6fa2d03a6bd52e7135df62e12a3385", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e42d56b4b6fa2d03a6bd52e7135df62e12a3385", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3e42d56b4b6fa2d03a6bd52e7135df62e12a3385", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3e42d56b4b6fa2d03a6bd52e7135df62e12a3385/comments", "author": null, "committer": null, "parents": [{"sha": "53c87bfd9cb9ee6dd7c44daaabdea298913f033f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53c87bfd9cb9ee6dd7c44daaabdea298913f033f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53c87bfd9cb9ee6dd7c44daaabdea298913f033f"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "693304ab3d1bdd0e90d1ae5702242a87d464214c", "filename": "gcc/integrate.c", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3e42d56b4b6fa2d03a6bd52e7135df62e12a3385/gcc%2Fintegrate.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3e42d56b4b6fa2d03a6bd52e7135df62e12a3385/gcc%2Fintegrate.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fintegrate.c?ref=3e42d56b4b6fa2d03a6bd52e7135df62e12a3385", "patch": "@@ -2196,18 +2196,22 @@ copy_rtx_and_substitute (orig, map)\n \t    {\n \t      rtx loc, seq;\n \t      int size = DECL_FRAME_SIZE (map->fndecl);\n-\t      int rounded;\n \n+#ifdef FRAME_GROWS_DOWNWARD\n+\t      /* In this case, virtual_stack_vars_rtx points to one byte\n+\t\t higher than the top of the frame area.  So make sure we\n+\t\t allocate a big enough chunk to keep the frame pointer\n+\t\t aligned like a real one.  */\n+\t      size = CEIL_ROUND (size, BIGGEST_ALIGNMENT / BITS_PER_UNIT);\n+#endif\n \t      start_sequence ();\n \t      loc = assign_stack_temp (BLKmode, size, 1);\n \t      loc = XEXP (loc, 0);\n #ifdef FRAME_GROWS_DOWNWARD\n \t      /* In this case, virtual_stack_vars_rtx points to one byte\n \t\t higher than the top of the frame area.  So compute the offset\n-\t\t to one byte higher than our substitute frame.\n-\t\t Keep the fake frame pointer aligned like a real one.  */\n-\t      rounded = CEIL_ROUND (size, BIGGEST_ALIGNMENT / BITS_PER_UNIT);\n-\t      loc = plus_constant (loc, rounded);\n+\t\t to one byte higher than our substitute frame.  */\n+\t      loc = plus_constant (loc, size);\n #endif\n \t      map->reg_map[regno] = temp\n \t\t= force_reg (Pmode, force_operand (loc, NULL_RTX));"}]}