{"sha": "57590b41a987613dd6cedfa9fa5a057458ee6274", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc1OTBiNDFhOTg3NjEzZGQ2Y2VkZmE5ZmE1YTA1NzQ1OGVlNjI3NA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-11-04T20:00:34Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1993-11-04T20:00:34Z"}, "message": "Initial revision\n\nFrom-SVN: r5998", "tree": {"sha": "0dfa68d31da8f2aa172b4f18731e56c101ff6694", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0dfa68d31da8f2aa172b4f18731e56c101ff6694"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/57590b41a987613dd6cedfa9fa5a057458ee6274", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57590b41a987613dd6cedfa9fa5a057458ee6274", "html_url": "https://github.com/Rust-GCC/gccrs/commit/57590b41a987613dd6cedfa9fa5a057458ee6274", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/57590b41a987613dd6cedfa9fa5a057458ee6274/comments", "author": null, "committer": null, "parents": [{"sha": "cbee980e82b75f773bd9af16ba5e6ad6b34d18c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cbee980e82b75f773bd9af16ba5e6ad6b34d18c7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cbee980e82b75f773bd9af16ba5e6ad6b34d18c7"}], "stats": {"total": 116, "additions": 116, "deletions": 0}, "files": [{"sha": "7d22db0f062205e77932261878739941f2cd2c95", "filename": "gcc/config/i386/os2.h", "status": "added", "additions": 69, "deletions": 0, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57590b41a987613dd6cedfa9fa5a057458ee6274/gcc%2Fconfig%2Fi386%2Fos2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57590b41a987613dd6cedfa9fa5a057458ee6274/gcc%2Fconfig%2Fi386%2Fos2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fos2.h?ref=57590b41a987613dd6cedfa9fa5a057458ee6274", "patch": "@@ -0,0 +1,69 @@\n+/* Definitions of target machine for GNU compiler\n+   for an Intel i386 or later processor running OS/2 2.x.\n+   Copyright (C) 1993 Free Software Foundation, Inc.\n+   Contributed by Samuel Figueroa (figueroa@cs.nyu.edu)\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#ifndef DEFAULT_TARGET_MACHINE\n+#define DEFAULT_TARGET_MACHINE \"i386-os2\"\n+#endif\n+#ifndef STARTFILE_SPEC\n+#define STARTFILE_SPEC \"\"\n+#endif\n+#ifndef MD_EXEC_PREFIX\n+#define MD_EXEC_PREFIX \"\\\\gcc\\\\bin\\\\\"\n+#endif\n+#ifndef STANDARD_STARTFILE_PREFIX\n+#define STANDARD_STARTFILE_PREFIX \"\\\\gcc\\\\lib\\\\\"\n+#endif\n+#ifndef LOCAL_INCLUDE_DIR\n+#define LOCAL_INCLUDE_DIR \"\\\\gcc\\\\include\"\n+#endif\n+\n+#define YES_UNDERSCORES\n+#include \"i386/gstabs.h\"\n+\n+#define USE_COLLECT\n+\n+#define BIGGEST_FIELD_ALIGNMENT \\\n+  (maximum_field_alignment ? maximum_field_alignment : 32)\n+\n+extern int maximum_field_alignment;\n+\n+#undef PCC_BITFIELD_TYPE_MATTERS\n+#define PCC_BITFIELD_TYPE_MATTERS (maximum_field_alignment == 0)\n+\n+/* Define this macro if it is advisible to hold scalars in registers\n+   in a wider mode than that declared by the program.  In such cases,\n+   the value is constrained to be within the bounds of the declared\n+   type, but kept valid in the wider mode.  The signedness of the\n+   extension may differ from that of the type.  */\n+\n+#define PROMOTE_MODE(MODE,UNSIGNEDP,TYPE)  \\\n+  if (GET_MODE_CLASS (MODE) == MODE_INT         \\\n+      && GET_MODE_SIZE (MODE) < UNITS_PER_WORD) \\\n+      (MODE) = SImode;\n+\n+/* Define this if function arguments should also be promoted using the above\n+   procedure.  */\n+\n+#define PROMOTE_FUNCTION_ARGS\n+\n+/* Likewise, if the function return value is promoted.  */\n+\n+#define PROMOTE_FUNCTION_RETURN"}, {"sha": "be234d18585d35267e6c604675927da0b2dd7cce", "filename": "gcc/config/i386/xm-os2.h", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/57590b41a987613dd6cedfa9fa5a057458ee6274/gcc%2Fconfig%2Fi386%2Fxm-os2.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/57590b41a987613dd6cedfa9fa5a057458ee6274/gcc%2Fconfig%2Fi386%2Fxm-os2.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxm-os2.h?ref=57590b41a987613dd6cedfa9fa5a057458ee6274", "patch": "@@ -0,0 +1,47 @@\n+/* Configuration for GNU compiler\n+   for an Intel i386 or later processor running OS/2 2.x.\n+   Copyright (C) 1993 Free Software Foundation, Inc.\n+   Contributed by Samuel Figueroa (figueroa@cs.nyu.edu)\n+\n+This file is part of GNU CC.\n+\n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU CC; see the file COPYING.  If not, write to\n+the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.  */\n+\n+#ifndef OS2\n+#define OS2\n+#endif\n+\n+#ifdef __IBMC__\n+#include <stdlib.h> /* this defines alloca */\n+#define USG\n+#define ONLY_INT_FIELDS\n+#define HAVE_PUTENV\n+#define USE_PROTOTYPES 1\n+#define bcmp(a,b,c) memcmp (a,b,c)\n+#define bcopy(a,b,c) memcpy (b,a,c)\n+#define bzero(a,b) memset (a,0,b)\n+#define index  strchr\n+#define rindex strrchr\n+#define kill(a,b) raise(b)\n+#define mktemp tmpnam\n+#else\n+#define ____386BSD____\n+int spawnv (int modeflag, char *path, char *argv[]);\n+int spawnvp (int modeflag, char *path, char *argv[]);\n+#endif /* __IBMC__ */\n+\n+#define EXECUTABLE_SUFFIX \".exe\"\n+\n+#include \"i386/xm-i386.h\""}]}