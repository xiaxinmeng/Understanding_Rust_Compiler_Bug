{"sha": "012d5d2526e73eb98190fdabfd86e075ed5c7d50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDEyZDVkMjUyNmU3M2ViOTgxOTBmZGFiZmQ4NmUwNzVlZDVjN2Q1MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2011-06-23T16:52:48Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2011-06-23T16:52:48Z"}, "message": "re PR c++/49440 (Invalid dynamic_cast for unnamed namespace)\n\n\tPR c++/49440\n\t* class.c (set_linkage_according_to_type): Just check TREE_PUBLIC\n\ton the type's name.\n\nFrom-SVN: r175340", "tree": {"sha": "feb1e76edef896378861b84fbcf2443b81a3873a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/feb1e76edef896378861b84fbcf2443b81a3873a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/012d5d2526e73eb98190fdabfd86e075ed5c7d50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/012d5d2526e73eb98190fdabfd86e075ed5c7d50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/012d5d2526e73eb98190fdabfd86e075ed5c7d50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/012d5d2526e73eb98190fdabfd86e075ed5c7d50/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "ece620047b5ef8033e0c066c73c857a4d820d507", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ece620047b5ef8033e0c066c73c857a4d820d507", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ece620047b5ef8033e0c066c73c857a4d820d507"}], "stats": {"total": 39, "additions": 25, "deletions": 14}, "files": [{"sha": "da39680df0e6ad2632d4ba4d147f2bbd27bac2ee", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/012d5d2526e73eb98190fdabfd86e075ed5c7d50/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/012d5d2526e73eb98190fdabfd86e075ed5c7d50/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=012d5d2526e73eb98190fdabfd86e075ed5c7d50", "patch": "@@ -1,5 +1,9 @@\n 2011-06-23  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/49440\n+\t* class.c (set_linkage_according_to_type): Just check TREE_PUBLIC\n+\ton the type's name.\n+\n \tPR c++/49395\n \t* init.c (build_zero_init_1): Strip cv-quals from scalar types.\n "}, {"sha": "9e387a6923e7bb595b7b37df49d31e1958a27d6e", "filename": "gcc/cp/class.c", "status": "modified", "additions": 3, "deletions": 14, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/012d5d2526e73eb98190fdabfd86e075ed5c7d50/gcc%2Fcp%2Fclass.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/012d5d2526e73eb98190fdabfd86e075ed5c7d50/gcc%2Fcp%2Fclass.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fclass.c?ref=012d5d2526e73eb98190fdabfd86e075ed5c7d50", "patch": "@@ -677,21 +677,10 @@ get_vtable_name (tree type)\n    the abstract.  */\n \n void\n-set_linkage_according_to_type (tree type, tree decl)\n+set_linkage_according_to_type (tree type ATTRIBUTE_UNUSED, tree decl)\n {\n-  /* If TYPE involves a local class in a function with internal\n-     linkage, then DECL should have internal linkage too.  Other local\n-     classes have no linkage -- but if their containing functions\n-     have external linkage, it makes sense for DECL to have external\n-     linkage too.  That will allow template definitions to be merged,\n-     for example.  */\n-  if (no_linkage_check (type, /*relaxed_p=*/true))\n-    {\n-      TREE_PUBLIC (decl) = 0;\n-      DECL_INTERFACE_KNOWN (decl) = 1;\n-    }\n-  else\n-    TREE_PUBLIC (decl) = 1;\n+  TREE_PUBLIC (decl) = 1;\n+  determine_visibility (decl);\n }\n \n /* Create a VAR_DECL for a primary or secondary vtable for CLASS_TYPE."}, {"sha": "ec75281ff211be793fac44451e8730288313fe84", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/012d5d2526e73eb98190fdabfd86e075ed5c7d50/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/012d5d2526e73eb98190fdabfd86e075ed5c7d50/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=012d5d2526e73eb98190fdabfd86e075ed5c7d50", "patch": "@@ -1,5 +1,8 @@\n 2011-06-23  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/49440\n+\t* g++.dg/rtti/anon-ns1.C: New.\n+\n \tPR c++/49395\n \t* g++.dg/init/ref18.C: New.\n "}, {"sha": "fd6f8af61b084dd01a8dd791a505b6c82a59c452", "filename": "gcc/testsuite/g++.dg/rtti/anon-ns1.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/012d5d2526e73eb98190fdabfd86e075ed5c7d50/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Fanon-ns1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/012d5d2526e73eb98190fdabfd86e075ed5c7d50/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Fanon-ns1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Frtti%2Fanon-ns1.C?ref=012d5d2526e73eb98190fdabfd86e075ed5c7d50", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/49440\n+// The typeinfo name for A should start with * so we compare\n+// it by address rather than contents.\n+\n+// { dg-final { scan-assembler \"\\\"\\*N\\[^\\\"\\]+1AE\\\"\" } }\n+\n+namespace\n+{\n+  class A { };\n+}\n+\n+void f()\n+{\n+  throw A();\n+}"}]}