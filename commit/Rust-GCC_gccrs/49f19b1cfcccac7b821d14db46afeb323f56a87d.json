{"sha": "49f19b1cfcccac7b821d14db46afeb323f56a87d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDlmMTliMWNmY2NjYWM3YjgyMWQxNGRiNDZhZmViMzIzZjU2YTg3ZA==", "commit": {"author": {"name": "H.J. Lu", "email": "hongjiu.lu@intel.com", "date": "2010-05-12T12:48:02Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2010-05-12T12:48:02Z"}, "message": "Support AVX for cmpss/cmpsd.\n\ngcc/\n\n2010-05-12  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/44088\n\t* config/i386/sse.md (*avx_vmmaskcmp<mode>3): New.\n\ngcc/testsuite/\n\n2010-05-12  H.J. Lu  <hongjiu.lu@intel.com>\n\n\tPR target/44088\n\t* gcc.target/i386/avx-cmpsd-1.c: New.\n\t* gcc.target/i386/avx-cmpsd-2.c: Likewise.\n\t* gcc.target/i386/avx-cmpss-1.c: Likewise.\n\t* gcc.target/i386/avx-cmpss-2.c: Likewise.\n\t* gcc.target/i386/sse-cmpss-1.c: Likewise.\n\t* gcc.target/i386/sse2-cmpsd-1.c: Likewise.\n\nFrom-SVN: r159319", "tree": {"sha": "c1d3f33ef7dcee01bee4cb16cdd89f39d600cfb7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1d3f33ef7dcee01bee4cb16cdd89f39d600cfb7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/49f19b1cfcccac7b821d14db46afeb323f56a87d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49f19b1cfcccac7b821d14db46afeb323f56a87d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/49f19b1cfcccac7b821d14db46afeb323f56a87d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/49f19b1cfcccac7b821d14db46afeb323f56a87d/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f22f434020d20d8d12bf5171cbb7ba720808ac15", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f22f434020d20d8d12bf5171cbb7ba720808ac15", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f22f434020d20d8d12bf5171cbb7ba720808ac15"}], "stats": {"total": 187, "additions": 187, "deletions": 0}, "files": [{"sha": "09043fd2ccf971429b2bee9c0cf767c73bea23cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49f19b1cfcccac7b821d14db46afeb323f56a87d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49f19b1cfcccac7b821d14db46afeb323f56a87d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=49f19b1cfcccac7b821d14db46afeb323f56a87d", "patch": "@@ -1,3 +1,8 @@\n+2010-05-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/44088\n+\t* config/i386/sse.md (*avx_vmmaskcmp<mode>3): New.\n+\n 2010-05-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/44085"}, {"sha": "efe55e8c6d6bca757b8b2059b2190ff67766d7ce", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49f19b1cfcccac7b821d14db46afeb323f56a87d/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49f19b1cfcccac7b821d14db46afeb323f56a87d/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=49f19b1cfcccac7b821d14db46afeb323f56a87d", "patch": "@@ -1483,6 +1483,20 @@\n    (set_attr \"length_immediate\" \"1\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+(define_insn \"*avx_vmmaskcmp<mode>3\"\n+  [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n+\t(vec_merge:SSEMODEF2P\n+\t (match_operator:SSEMODEF2P 3 \"sse_comparison_operator\"\n+\t\t[(match_operand:SSEMODEF2P 1 \"register_operand\" \"x\")\n+\t\t (match_operand:SSEMODEF2P 2 \"nonimmediate_operand\" \"xm\")])\n+\t (match_dup 1)\n+\t (const_int 1)))]\n+  \"AVX_VEC_FLOAT_MODE_P (<MODE>mode)\"\n+  \"vcmp%D3s<ssemodesuffixf2c>\\t{%2, %1, %0|%0, %1, %2}\"\n+  [(set_attr \"type\" \"ssecmp\")\n+   (set_attr \"prefix\" \"vex\")\n+   (set_attr \"mode\" \"<ssescalarmode>\")])\n+\n (define_insn \"<sse>_vmmaskcmp<mode>3\"\n   [(set (match_operand:SSEMODEF2P 0 \"register_operand\" \"=x\")\n \t(vec_merge:SSEMODEF2P"}, {"sha": "e5f3a50f2ad55b62b0fa9cf52f8b4fb3af267822", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49f19b1cfcccac7b821d14db46afeb323f56a87d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49f19b1cfcccac7b821d14db46afeb323f56a87d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=49f19b1cfcccac7b821d14db46afeb323f56a87d", "patch": "@@ -1,3 +1,13 @@\n+2010-05-12  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR target/44088\n+\t* gcc.target/i386/avx-cmpsd-1.c: New.\n+\t* gcc.target/i386/avx-cmpsd-2.c: Likewise.\n+\t* gcc.target/i386/avx-cmpss-1.c: Likewise.\n+\t* gcc.target/i386/avx-cmpss-2.c: Likewise.\n+\t* gcc.target/i386/sse-cmpss-1.c: Likewise.\n+\t* gcc.target/i386/sse2-cmpsd-1.c: Likewise.\n+\n 2010-05-12  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/44085"}, {"sha": "ad59f268c18ce0ea324302d4c711840dcca5fed2", "filename": "gcc/testsuite/gcc.target/i386/avx-cmpsd-1.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49f19b1cfcccac7b821d14db46afeb323f56a87d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cmpsd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49f19b1cfcccac7b821d14db46afeb323f56a87d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cmpsd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cmpsd-1.c?ref=49f19b1cfcccac7b821d14db46afeb323f56a87d", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target avx } */\n+/* { dg-options \"-O2 -mavx\" } */\n+\n+#define CHECK_H \"avx-check.h\"\n+#define TEST avx_test\n+\n+#include \"sse2-cmpsd-1.c\""}, {"sha": "3162912b89e2f36611146aab0f7fd53592e040c7", "filename": "gcc/testsuite/gcc.target/i386/avx-cmpsd-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49f19b1cfcccac7b821d14db46afeb323f56a87d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cmpsd-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49f19b1cfcccac7b821d14db46afeb323f56a87d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cmpsd-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cmpsd-2.c?ref=49f19b1cfcccac7b821d14db46afeb323f56a87d", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx\" } */\n+\n+#include <emmintrin.h>\n+\n+__m128d\n+foo (__m128d x, __m128d y)\n+{\n+  return _mm_cmpeq_sd (x, y);\n+}\n+\n+\n+/* { dg-final { scan-assembler \"vcmpeqsd\" } } */"}, {"sha": "c0cdd68f0c65487899113a45dc684456aa391c7c", "filename": "gcc/testsuite/gcc.target/i386/avx-cmpss-1.c", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49f19b1cfcccac7b821d14db46afeb323f56a87d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cmpss-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49f19b1cfcccac7b821d14db46afeb323f56a87d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cmpss-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cmpss-1.c?ref=49f19b1cfcccac7b821d14db46afeb323f56a87d", "patch": "@@ -0,0 +1,8 @@\n+/* { dg-do run } */\n+/* { dg-require-effective-target avx } */\n+/* { dg-options \"-O2 -mavx\" } */\n+\n+#define CHECK_H \"avx-check.h\"\n+#define TEST avx_test\n+\n+#include \"sse-cmpss-1.c\""}, {"sha": "0fcc620c47077def3fb064d985b91193d9039735", "filename": "gcc/testsuite/gcc.target/i386/avx-cmpss-2.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49f19b1cfcccac7b821d14db46afeb323f56a87d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cmpss-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49f19b1cfcccac7b821d14db46afeb323f56a87d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cmpss-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Favx-cmpss-2.c?ref=49f19b1cfcccac7b821d14db46afeb323f56a87d", "patch": "@@ -0,0 +1,13 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mavx\" } */\n+\n+#include <xmmintrin.h>\n+\n+__m128\n+foo (__m128 x, __m128 y)\n+{\n+  return _mm_cmpeq_ss (x, y);\n+}\n+\n+\n+/* { dg-final { scan-assembler \"vcmpeqss\" } } */"}, {"sha": "e4be7318e068d08bbdaa707626fca3534e23a807", "filename": "gcc/testsuite/gcc.target/i386/sse-cmpss-1.c", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49f19b1cfcccac7b821d14db46afeb323f56a87d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-cmpss-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49f19b1cfcccac7b821d14db46afeb323f56a87d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-cmpss-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse-cmpss-1.c?ref=49f19b1cfcccac7b821d14db46afeb323f56a87d", "patch": "@@ -0,0 +1,59 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -msse -std=c99\" } */\n+\n+#ifndef CHECK_H\n+#define CHECK_H \"sse-check.h\"\n+#endif\n+\n+#ifndef TEST\n+#define TEST sse_test\n+#endif\n+\n+#include CHECK_H\n+\n+#include <math.h>\n+\n+float s1[]={2134.3343, 6678.346, 453.345635, 54646.464356};\n+float s2[]={41124.234, 6678.346, 8653.65635, 856.43576};\n+int dd[] = {1, 2, 3, 4};\n+float d[4];\n+union{int i[4]; float f[4];} e;\n+\n+void check(char *id)\n+{\n+    if(checkVi((int*)d, e.i, 4)){\n+\tprintf(\"mm_cmp%s_ss FAILED\\n\", id);\n+    }\n+}\n+\n+static void\n+TEST ()\n+{\n+    __m128 source1, source2, dest;\n+    int i;\n+\n+#define CMP(cmp, rel)\t\t\t\t\t\\\n+    e.i[0] = rel ? -1 : 0;\t                        \\\n+    dest = _mm_loadu_ps((float*)dd);\t\t\t\\\n+    source1 = _mm_loadu_ps(s1);\t\t\t\t\\\n+    source2 = _mm_loadu_ps(s2);\t\t\t\t\\\n+    dest = _mm_cmp##cmp##_ss(source1, source2);\t\t\\\n+    _mm_storeu_ps(d, dest);\t\t\t        \\\n+    check(\"\" #cmp \"\");\n+\n+    for(i = 1; i < 4; i++) e.f[i] = s1[i];\n+    \n+    CMP(eq, !isunordered(s1[0], s2[0]) && s1[0] == s2[0]);\n+    CMP(lt, !isunordered(s1[0], s2[0]) && s1[0] < s2[0]);\n+    CMP(le, !isunordered(s1[0], s2[0]) && s1[0] <= s2[0]);\n+    CMP(unord, isunordered(s1[0], s2[0]));\n+    CMP(neq, isunordered(s1[0], s2[0]) || s1[0] != s2[0]);\n+    CMP(nlt, isunordered(s1[0], s2[0]) || s1[0] >= s2[0]);\n+    CMP(nle, isunordered(s1[0], s2[0]) || s1[0] > s2[0]);\n+    CMP(ord, !isunordered(s1[0], s2[0]));\n+\n+    CMP(ge, isunordered(s1[0], s2[0]) || s1[0] >= s2[0]);\n+    CMP(gt, isunordered(s1[0], s2[0]) || s1[0] > s2[0]);\n+    CMP(nge, !isunordered(s1[0], s2[0]) && s1[0] < s2[0]);\n+    CMP(ngt, !isunordered(s1[0], s2[0]) && s1[0] <= s2[0]);\n+}"}, {"sha": "224a609ad296a93fc6680dc8cd20299945af4036", "filename": "gcc/testsuite/gcc.target/i386/sse2-cmpsd-1.c", "status": "added", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/49f19b1cfcccac7b821d14db46afeb323f56a87d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-cmpsd-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/49f19b1cfcccac7b821d14db46afeb323f56a87d/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-cmpsd-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fsse2-cmpsd-1.c?ref=49f19b1cfcccac7b821d14db46afeb323f56a87d", "patch": "@@ -0,0 +1,57 @@\n+/* { dg-do run } */\n+/* { dg-options \"-O2 -msse2 -std=c99\" } */\n+\n+#ifndef CHECK_H\n+#define CHECK_H \"sse2-check.h\"\n+#endif\n+\n+#ifndef TEST\n+#define TEST sse2_test\n+#endif\n+\n+#include CHECK_H\n+\n+#include <math.h>\n+\n+double s1[] = {2134.3343, 6678.346};\n+double s2[] = {41124.234, 6678.346};\n+long long dd[] =  {1, 2}, d[2];\n+union{long long l[2]; double d[2];} e;\n+\n+void check(char *id)\n+{\n+    if(checkVl(d, e.l, 2)){\n+\tprintf(\"mm_cmp%s_sd FAILED\\n\", id);\n+    }\n+}\n+\n+#define CMP(cmp, rel)\t\t\t\t\t\\\n+    e.l[0] = rel ? -1 : 0;\t                        \\\n+    dest = _mm_loadu_pd((double*)dd);\t      \t\t\\\n+    source1 = _mm_loadu_pd(s1);\t\t\t\t\\\n+    source2 = _mm_loadu_pd(s2);\t\t\t\t\\\n+    dest = _mm_cmp##cmp##_sd(source1, source2);\t\t\\\n+    _mm_storeu_pd((double*) d, dest);\t\t\t\\\n+    check(\"\" #cmp \"\");\n+\n+static void\n+TEST ()\n+{\n+    __m128d source1, source2, dest;\n+\n+    e.d[1] = s1[1];\n+    \n+    CMP(eq, !isunordered(s1[0], s2[0]) && s1[0] == s2[0]);\n+    CMP(lt, !isunordered(s1[0], s2[0]) && s1[0] < s2[0]);\n+    CMP(le, !isunordered(s1[0], s2[0]) && s1[0] <= s2[0]);\n+    CMP(unord, isunordered(s1[0], s2[0]));\n+    CMP(neq, isunordered(s1[0], s2[0]) || s1[0] != s2[0]);\n+    CMP(nlt, isunordered(s1[0], s2[0]) || s1[0] >= s2[0]);\n+    CMP(nle, isunordered(s1[0], s2[0]) || s1[0] > s2[0]);\n+    CMP(ord, !isunordered(s1[0], s2[0]));\n+\n+    CMP(ge, isunordered(s1[0], s2[0]) || s1[0] >= s2[0]);\n+    CMP(gt, isunordered(s1[0], s2[0]) || s1[0] > s2[0]);\n+    CMP(nge, !isunordered(s1[0], s2[0]) && s1[0] < s2[0]);\n+    CMP(ngt, !isunordered(s1[0], s2[0]) && s1[0] <= s2[0]);\n+}"}]}