{"sha": "a442bed36cfbfb739244963f22eaf10320a27ec9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQ0MmJlZDM2Y2ZiZmI3MzkyNDQ5NjNmMjJlYWYxMDMyMGEyN2VjOQ==", "commit": {"author": {"name": "Bob Duff", "email": "duff@adacore.com", "date": "2020-11-08T21:54:56Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-30T14:16:16Z"}, "message": "[Ada] Crash on ghost assignment check for illegal code\n\ngcc/ada/\n\n\t* errout.adb (Error_Msg_NEL): Do not call Set_Posted if errors\n\tare being ignored.\n\t(Error_Msg): Change Errors_Must_Be_Ignored to use the getter.\n\t* sem_ch8.adb (Find_Direct_Name): Do not skip all the error\n\tchecks when ignoring errors, but instead do not add an entry to\n\tthe Urefs table if errors are being ignored.\n\t* exp_ch5.adb: Minor comment fix.", "tree": {"sha": "d9ae488fac05a29ba1a7f9fc4a739c39e1546289", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9ae488fac05a29ba1a7f9fc4a739c39e1546289"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a442bed36cfbfb739244963f22eaf10320a27ec9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a442bed36cfbfb739244963f22eaf10320a27ec9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a442bed36cfbfb739244963f22eaf10320a27ec9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a442bed36cfbfb739244963f22eaf10320a27ec9/comments", "author": {"login": "bobduff", "id": 29099567, "node_id": "MDQ6VXNlcjI5MDk5NTY3", "avatar_url": "https://avatars.githubusercontent.com/u/29099567?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bobduff", "html_url": "https://github.com/bobduff", "followers_url": "https://api.github.com/users/bobduff/followers", "following_url": "https://api.github.com/users/bobduff/following{/other_user}", "gists_url": "https://api.github.com/users/bobduff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bobduff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bobduff/subscriptions", "organizations_url": "https://api.github.com/users/bobduff/orgs", "repos_url": "https://api.github.com/users/bobduff/repos", "events_url": "https://api.github.com/users/bobduff/events{/privacy}", "received_events_url": "https://api.github.com/users/bobduff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f456de4c432c6f44cc0de9ccc19a4ff4eadb8f9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f456de4c432c6f44cc0de9ccc19a4ff4eadb8f9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f456de4c432c6f44cc0de9ccc19a4ff4eadb8f9c"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "fbbf57949ac1b723b757ea91f585d1124dcf719d", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a442bed36cfbfb739244963f22eaf10320a27ec9/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a442bed36cfbfb739244963f22eaf10320a27ec9/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=a442bed36cfbfb739244963f22eaf10320a27ec9", "patch": "@@ -337,7 +337,7 @@ package body Errout is\n    begin\n       --  Return if all errors are to be ignored\n \n-      if Errors_Must_Be_Ignored then\n+      if Get_Ignore_Errors then\n          return;\n       end if;\n \n@@ -1430,7 +1430,9 @@ package body Errout is\n          Last_Killed := True;\n       end if;\n \n-      Set_Posted (N);\n+      if not Get_Ignore_Errors then\n+         Set_Posted (N);\n+      end if;\n    end Error_Msg_NEL;\n \n    ------------------"}, {"sha": "e720656d847061750a24ef4c1232494d53daa628", "filename": "gcc/ada/exp_ch5.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a442bed36cfbfb739244963f22eaf10320a27ec9/gcc%2Fada%2Fexp_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a442bed36cfbfb739244963f22eaf10320a27ec9/gcc%2Fada%2Fexp_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch5.adb?ref=a442bed36cfbfb739244963f22eaf10320a27ec9", "patch": "@@ -1469,7 +1469,7 @@ package body Exp_Ch5 is\n       --  there are volatile or independent components. If the Prefix of the\n       --  slice is a component or slice, then it might be a part of an object\n       --  with some other volatile or independent components, so we disable the\n-      --  optimization in that case as well.  We could complicate this code by\n+      --  optimization in that case as well. We could complicate this code by\n       --  actually looking for such volatile and independent components.\n \n       if Is_Bit_Packed_Array (L_Type)"}, {"sha": "07484d542992b1669f206e931e83cb92ed021178", "filename": "gcc/ada/sem_ch8.adb", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a442bed36cfbfb739244963f22eaf10320a27ec9/gcc%2Fada%2Fsem_ch8.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a442bed36cfbfb739244963f22eaf10320a27ec9/gcc%2Fada%2Fsem_ch8.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch8.adb?ref=a442bed36cfbfb739244963f22eaf10320a27ec9", "patch": "@@ -5622,7 +5622,10 @@ package body Sem_Ch8 is\n          --  undefined reference. The entry is not added if we are ignoring\n          --  errors.\n \n-         if not All_Errors_Mode and then Ignore_Errors_Enable = 0 then\n+         if not All_Errors_Mode\n+           and then Ignore_Errors_Enable = 0\n+           and then not Get_Ignore_Errors\n+         then\n             Urefs.Append (\n               (Node => N,\n                Err  => Emsg,\n@@ -5752,12 +5755,6 @@ package body Sem_Ch8 is\n          E := Homonym (E);\n       end loop;\n \n-      --  If we are ignoring errors, skip the error processing\n-\n-      if Get_Ignore_Errors then\n-         return;\n-      end if;\n-\n       --  If no entries on homonym chain that were potentially visible,\n       --  and no entities reasonably considered as non-visible, then\n       --  we have a plain undefined reference, with no additional"}]}