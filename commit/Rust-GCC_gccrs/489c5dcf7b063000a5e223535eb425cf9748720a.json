{"sha": "489c5dcf7b063000a5e223535eb425cf9748720a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDg5YzVkY2Y3YjA2MzAwMGE1ZTIyMzUzNWViNDI1Y2Y5NzQ4NzIwYQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-06-29T13:50:23Z"}, "committer": {"name": "Tobias Burnus", "email": "tobias@codesourcery.com", "date": "2021-06-29T13:50:23Z"}, "message": "libgomp.fortran/defaultmap-8.f90: Fix non-shared memory handling\n\nDisable some more parts of the test as firstprivate does not work yet\ndue to PR fortran/90742.\n\nlibgomp/\n\t* testsuite/libgomp.fortran/defaultmap-8.f90 (bar): Determine whether\n\ttarget has shared memory and disable some scalar pointer/allocatable\n\tchecks if not as firstprivate does not work.", "tree": {"sha": "6f85f77f2d99708262722615ca5a87c63d6c3228", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6f85f77f2d99708262722615ca5a87c63d6c3228"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/489c5dcf7b063000a5e223535eb425cf9748720a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/489c5dcf7b063000a5e223535eb425cf9748720a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/489c5dcf7b063000a5e223535eb425cf9748720a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/489c5dcf7b063000a5e223535eb425cf9748720a/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d479ddc0d9854905d03a3290b203a5dcb8db07eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d479ddc0d9854905d03a3290b203a5dcb8db07eb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d479ddc0d9854905d03a3290b203a5dcb8db07eb"}], "stats": {"total": 37, "additions": 25, "deletions": 12}, "files": [{"sha": "54f4b2e9ddc49e14298f9a6327872355e06ce778", "filename": "libgomp/testsuite/libgomp.fortran/defaultmap-8.f90", "status": "modified", "additions": 25, "deletions": 12, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/489c5dcf7b063000a5e223535eb425cf9748720a/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdefaultmap-8.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/489c5dcf7b063000a5e223535eb425cf9748720a/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdefaultmap-8.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2Ftestsuite%2Flibgomp.fortran%2Fdefaultmap-8.f90?ref=489c5dcf7b063000a5e223535eb425cf9748720a", "patch": "@@ -205,35 +205,48 @@ subroutine bar (ea1, ea2, ep1, ep2, eat1, eat2, et1, et2, ei1, ei2)\n   pointer :: ep1, ep2, ep3\n   target :: eat1, eat2, eat3, et1, et2, et3\n   optional :: ea1, ep1, eat1, et1, ei1\n+  logical :: shared_memory\n \n   allocate(ea3, eat3, ep3)\n \n   ea1 = 2; ea2 = 2; ea3 = 2; ep1 = 2; ep2 = 2; ep3 = 2;\n   eat1 = 2; eat2 = 2; eat3 = 2; et1 = 2; et2 = 2; et3 = 2\n   ei1 = 2; ei2 = 2; ei3 = 2\n \n+  shared_memory = .false.\n+  !$omp target map(to: shared_memory)\n+    shared_memory = .true.\n+  !$omp end target\n+\n   ! While here 'scalar' implies nonallocatable/nonpointer and\n   ! the target attribute plays no role.\n   !$omp target defaultmap(tofrom:scalar) defaultmap(firstprivate:allocatable) &\n-  !$omp&       defaultmap(none:aggregate) defaultmap(firstprivate:pointer)\n-    if (ea1 /= 2) stop 91\n-    if (ea2 /= 2) stop 92\n-    if (ea3 /= 2) stop 93\n-    if (ep1 /= 2) stop 94\n-    if (ep2 /= 2) stop 95\n-    if (ep3 /= 2) stop 96\n-    if (eat1 /= 2) stop 97\n-    if (eat2 /= 2) stop 98\n-    if (eat3 /= 2) stop 99\n+  !$omp&       defaultmap(none:aggregate) defaultmap(firstprivate:pointer) &\n+  !$omp&       map(always, to: shared_memory)\n+    if (shared_memory) then\n+      ! Due to fortran/90742 this fails when doing non-shared memory offloading\n+      if (ea1 /= 2) stop 91\n+      if (ea2 /= 2) stop 92\n+      if (ea3 /= 2) stop 93\n+      if (ep1 /= 2) stop 94\n+      if (ep2 /= 2) stop 95\n+      if (ep3 /= 2) stop 96\n+      if (eat1 /= 2) stop 97\n+      if (eat2 /= 2) stop 98\n+      if (eat3 /= 2) stop 99\n+    end if\n     if (et1 /= 2) stop 100\n     if (et2 /= 2) stop 101\n     if (et3 /= 2) stop 102\n     if (ei1 /= 2) stop 103\n     if (ei2 /= 2) stop 104\n     if (ei3 /= 2) stop 105\n     ep1 => null(); ep2 => null(); ep3 => null()\n-    ea1 = 1; ea2 = 1; ea3 = 1\n-    eat1 = 1; eat2 = 1; eat3 = 1\n+    if (shared_memory) then\n+      ! Due to fortran/90742 this fails when doing non-shared memory offloading\n+      ea1 = 1; ea2 = 1; ea3 = 1\n+      eat1 = 1; eat2 = 1; eat3 = 1\n+    end if\n     et1 = 1; et2 = 1; et3 = 1\n     ei1 = 1; ei2 = 1; ei3 = 1\n   !$omp end target"}]}