{"sha": "b719f884b44f4b678025606356f25a0da277529d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjcxOWY4ODRiNDRmNGI2NzgwMjU2MDYzNTZmMjVhMGRhMjc3NTI5ZA==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2017-02-14T14:48:33Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2017-02-14T14:48:33Z"}, "message": "[Patch AArch64] Use 128-bit vectors when autovectorizing 16-bit float types\n\ngcc/\n\n\t* config/aarch64/aarch64.c (aarch64_simd_container_mode): Handle\n\tHFmode.\n\ngcc/testsuite/\n\n\t* gcc.target/aarch64/vect_fp16_1.c: New.\n\nFrom-SVN: r245429", "tree": {"sha": "44c3914c58299745b0575286c168d58c9fd95397", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/44c3914c58299745b0575286c168d58c9fd95397"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b719f884b44f4b678025606356f25a0da277529d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b719f884b44f4b678025606356f25a0da277529d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b719f884b44f4b678025606356f25a0da277529d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b719f884b44f4b678025606356f25a0da277529d/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6cc254a285a61e122ea64316a2726ae7286289d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6cc254a285a61e122ea64316a2726ae7286289d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6cc254a285a61e122ea64316a2726ae7286289d"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "2c184214d0f9207e5bb51d075d1d47f0787fd641", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b719f884b44f4b678025606356f25a0da277529d/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b719f884b44f4b678025606356f25a0da277529d/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b719f884b44f4b678025606356f25a0da277529d", "patch": "@@ -1,3 +1,8 @@\n+2017-02-14  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/aarch64/aarch64.c (aarch64_simd_container_mode): Handle\n+\tHFmode.\n+\n 2017-02-14  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n \n \tPR rtl-optimization/68664"}, {"sha": "ab1bdc0233afe7a3c41501cb724a5c4c719123b8", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b719f884b44f4b678025606356f25a0da277529d/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b719f884b44f4b678025606356f25a0da277529d/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=b719f884b44f4b678025606356f25a0da277529d", "patch": "@@ -10845,6 +10845,8 @@ aarch64_simd_container_mode (machine_mode mode, unsigned width)\n \t    return V2DFmode;\n \t  case SFmode:\n \t    return V4SFmode;\n+\t  case HFmode:\n+\t    return V8HFmode;\n \t  case SImode:\n \t    return V4SImode;\n \t  case HImode:\n@@ -10861,6 +10863,8 @@ aarch64_simd_container_mode (machine_mode mode, unsigned width)\n \t  {\n \t  case SFmode:\n \t    return V2SFmode;\n+\t  case HFmode:\n+\t    return V4HFmode;\n \t  case SImode:\n \t    return V2SImode;\n \t  case HImode:"}, {"sha": "6f6f0da8b0dcd2627f8d0d364e112ad4d8978e3b", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b719f884b44f4b678025606356f25a0da277529d/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b719f884b44f4b678025606356f25a0da277529d/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b719f884b44f4b678025606356f25a0da277529d", "patch": "@@ -1,3 +1,7 @@\n+2017-02-14  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* gcc.target/aarch64/vect_fp16_1.c: New.\n+\n 2017-02-14  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>\n \n \t* gcc.dg/gimplefe-25.c: New test."}, {"sha": "da0cd8145ac572376d17824a64cdb2f2574fc2cb", "filename": "gcc/testsuite/gcc.target/aarch64/vect_fp16_1.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b719f884b44f4b678025606356f25a0da277529d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect_fp16_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b719f884b44f4b678025606356f25a0da277529d/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect_fp16_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fvect_fp16_1.c?ref=b719f884b44f4b678025606356f25a0da277529d", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -fno-vect-cost-model\" } */\n+\n+/* Check that we vectorize to a full 128-bit vector for _Float16 and __fp16\n+   types.  */\n+\n+/* Enable ARMv8.2-A+fp16 so we have access to the vector instructions.  */\n+#pragma GCC target (\"arch=armv8.2-a+fp16\")\n+\n+_Float16\n+sum_Float16 (_Float16 *__restrict__ __attribute__ ((__aligned__ (16))) a,\n+\t     _Float16 *__restrict__ __attribute__ ((__aligned__ (16))) b,\n+\t     _Float16 *__restrict__ __attribute__ ((__aligned__ (16))) c)\n+{\n+  for (int i = 0; i < 256; i++)\n+    a[i] = b[i] + c[i];\n+}\n+\n+_Float16\n+sum_fp16 (__fp16 *__restrict__ __attribute__ ((__aligned__ (16))) a,\n+\t  __fp16 *__restrict__ __attribute__ ((__aligned__ (16))) b,\n+\t  __fp16 *__restrict__ __attribute__ ((__aligned__ (16))) c)\n+{\n+  for (int i = 0; i < 256; i++)\n+    a[i] = b[i] + c[i];\n+}\n+\n+/* Two FADD operations on \"8h\" data widths, one from sum_Float16, one from\n+   sum_fp16.  */\n+/* { dg-final { scan-assembler-times \"fadd\\tv\\[0-9\\]\\+.8h\" 2 } } */"}]}