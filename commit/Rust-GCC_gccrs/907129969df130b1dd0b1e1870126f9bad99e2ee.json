{"sha": "907129969df130b1dd0b1e1870126f9bad99e2ee", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTA3MTI5OTY5ZGYxMzBiMWRkMGIxZTE4NzAxMjZmOWJhZDk5ZTJlZQ==", "commit": {"author": {"name": "Janis Johnson", "email": "janis187@us.ibm.com", "date": "2003-06-10T21:01:39Z"}, "committer": {"name": "Janis Johnson", "email": "janis@gcc.gnu.org", "date": "2003-06-10T21:01:39Z"}, "message": "fp2-struct-check.h: New file.\n\n\t* gcc.dg/compat/fp2-struct-check.h: New file.\n\t* gcc.dg/compat/fp2-struct-defs.h: New file.\n\t* gcc.dg/compat/fp2-struct-init.h: New file.\n\t* gcc.dg/compat/struct-by-value-10_main.c: New file.\n\t* gcc.dg/compat/struct-by-value-10_x.c: New file.\n\t* gcc.dg/compat/struct-by-value-10_y.c: New file.\n\t* gcc.dg/compat/struct-return-10_main.c: New file.\n\t* gcc.dg/compat/struct-return-10_x.c: New file.\n\t* gcc.dg/compat/struct-return-10_y.c: New file.\n\nFrom-SVN: r67734", "tree": {"sha": "94bc3aad62d22c796dc69ea365f047095b9da25f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/94bc3aad62d22c796dc69ea365f047095b9da25f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/907129969df130b1dd0b1e1870126f9bad99e2ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/907129969df130b1dd0b1e1870126f9bad99e2ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/907129969df130b1dd0b1e1870126f9bad99e2ee", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/907129969df130b1dd0b1e1870126f9bad99e2ee/comments", "author": null, "committer": null, "parents": [{"sha": "e85f3dc8ec290ed34ed16bf0e1dce2e641e784db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e85f3dc8ec290ed34ed16bf0e1dce2e641e784db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e85f3dc8ec290ed34ed16bf0e1dce2e641e784db"}], "stats": {"total": 582, "additions": 582, "deletions": 0}, "files": [{"sha": "f8bea2f282d513d207f2a4d8bc004b1a99ec00b2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=907129969df130b1dd0b1e1870126f9bad99e2ee", "patch": "@@ -1,5 +1,15 @@\n 2003-06-10  Janis Johnson  <janis187@us.ibm.com>\n \n+\t* gcc.dg/compat/fp2-struct-check.h: New file.\n+\t* gcc.dg/compat/fp2-struct-defs.h: New file.\n+\t* gcc.dg/compat/fp2-struct-init.h: New file.\n+\t* gcc.dg/compat/struct-by-value-10_main.c: New file.\n+\t* gcc.dg/compat/struct-by-value-10_x.c: New file.\n+\t* gcc.dg/compat/struct-by-value-10_y.c: New file.\n+\t* gcc.dg/compat/struct-return-10_main.c: New file.\n+\t* gcc.dg/compat/struct-return-10_x.c: New file.\n+\t* gcc.dg/compat/struct-return-10_y.c: New file.\n+\n \t* gcc.dg/compat/compat-common.h: New file.\n \t* gcc.dg/compat/fp-struct-check.h: Improve debugging output.\n \t* gcc.dg/compat/fp-struct-test-by-value-x.h: Ditto."}, {"sha": "c00f705471cb9047af6efafb192a4207390e9250", "filename": "gcc/testsuite/gcc.dg/compat/fp2-struct-check.h", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp2-struct-check.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp2-struct-check.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp2-struct-check.h?ref=907129969df130b1dd0b1e1870126f9bad99e2ee", "patch": "@@ -0,0 +1,27 @@\n+/* Function definitions that are used by multiple tests.  */\n+\n+void checkSfd (Sfd x, double y)\n+{ if (x.f != y || x.d != y+1) DEBUG_CHECK }\n+void checkSfl (Sfl x, double y)\n+{ if (x.f != y || x.l != y+1) DEBUG_CHECK }\n+void checkSdf (Sdf x, double y)\n+{ if (x.d != y || x.f != y+1) DEBUG_CHECK }\n+void checkSdl (Sdl x, double y)\n+{ if (x.d != y || x.l != y+1) DEBUG_CHECK }\n+void checkSlf (Slf x, double y)\n+{ if (x.l != y || x.f != y+1) DEBUG_CHECK }\n+void checkSld (Sld x, double y)\n+{ if (x.l != y || x.d != y+1) DEBUG_CHECK }\n+\n+void checkSfdl (Sfdl x, double y)\n+{ if (x.f != y || x.d != y+1 || x.l != y+2) DEBUG_CHECK }\n+void checkSfld (Sfld x, double y)\n+{ if (x.f != y || x.l != y+1 || x.d != y+2) DEBUG_CHECK }\n+void checkSdfl (Sdfl x, double y)\n+{ if (x.d != y || x.f != y+1 || x.l != y+2) DEBUG_CHECK }\n+void checkSdlf (Sdlf x, double y)\n+{ if (x.d != y || x.l != y+1 || x.f != y+2) DEBUG_CHECK }\n+void checkSlfd (Slfd x, double y)\n+{ if (x.l != y || x.f != y+1 || x.d != y+2) DEBUG_CHECK }\n+void checkSldf (Sldf x, double y)\n+{ if (x.l != y || x.d != y+1 || x.f != y+2) DEBUG_CHECK }"}, {"sha": "be387a70a642f1cdbba03fe4d102c266cd574af5", "filename": "gcc/testsuite/gcc.dg/compat/fp2-struct-defs.h", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp2-struct-defs.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp2-struct-defs.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp2-struct-defs.h?ref=907129969df130b1dd0b1e1870126f9bad99e2ee", "patch": "@@ -0,0 +1,15 @@\n+/* Type definitions that are used by multiple tests.  */\n+\n+typedef struct { float f; double d; } Sfd;\n+typedef struct { float f; long double l; } Sfl;\n+typedef struct { double d; float f; } Sdf;\n+typedef struct { double d; long double l; } Sdl;\n+typedef struct { long double l; float f; } Slf;\n+typedef struct { long double l; double d; } Sld;\n+\n+typedef struct { float f; double d; long double l; } Sfdl;\n+typedef struct { float f; long double l; double d; } Sfld;\n+typedef struct { double d; float f; long double l; } Sdfl;\n+typedef struct { double d; long double l; float f; } Sdlf;\n+typedef struct { long double l; float f; double d; } Slfd;\n+typedef struct { long double l; double d; float f; } Sldf;"}, {"sha": "35fe77e004245da95f8c41c5a52c4542844b8ac5", "filename": "gcc/testsuite/gcc.dg/compat/fp2-struct-init.h", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp2-struct-init.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp2-struct-init.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Ffp2-struct-init.h?ref=907129969df130b1dd0b1e1870126f9bad99e2ee", "patch": "@@ -0,0 +1,27 @@\n+/* Function definitions that are used by multiple tests.  */\n+\n+void initSfd (Sfd *p, double y)\n+{ p->f = y; p->d = y+1; }\n+void initSfl (Sfl *p, double y)\n+{ p->f = y; p->l = y+1; }\n+void initSdf (Sdf *p, double y)\n+{ p->d = y; p->f = y+1; }\n+void initSdl (Sdl *p, double y)\n+{ p->d = y; p->l = y+1; }\n+void initSlf (Slf *p, double y)\n+{ p->l = y; p->f = y+1; }\n+void initSld (Sld *p, double y)\n+{ p->l = y; p->d = y+1; }\n+\n+void initSfdl (Sfdl *p, double y)\n+{ p->f = y; p->d = y+1; p->l = y+2; }\n+void initSfld (Sfld *p, double y)\n+{ p->f = y; p->l = y+1; p->d = y+2; }\n+void initSdfl (Sdfl *p, double y)\n+{ p->d = y; p->f = y+1; p->l = y+2; }\n+void initSdlf (Sdlf *p, double y)\n+{ p->d = y; p->l = y+1; p->f = y+2; }\n+void initSlfd (Slfd *p, double y)\n+{ p->l = y; p->f = y+1; p->d = y+2; }\n+void initSldf (Sldf *p, double y)\n+{ p->l = y; p->d = y+1; p->f = y+2; }"}, {"sha": "e41b93c5733d26dc470c7457db2320a980ce2e47", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-10_main.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-10_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-10_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-10_main.c?ref=907129969df130b1dd0b1e1870126f9bad99e2ee", "patch": "@@ -0,0 +1,14 @@\n+/* Test structures passed by value, including to a function with a\n+   variable-length argument lists.  All struct members are floating\n+   point scalars.  */\n+\n+extern void struct_by_value_10_x (void);\n+extern void exit (int);\n+int fails;\n+\n+int\n+main ()\n+{\n+  struct_by_value_10_x ();\n+  exit (0);\n+}"}, {"sha": "7468dc72a9d96a50f9b771bb414a154744820a16", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-10_x.c", "status": "added", "additions": 180, "deletions": 0, "changes": 180, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-10_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-10_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-10_x.c?ref=907129969df130b1dd0b1e1870126f9bad99e2ee", "patch": "@@ -0,0 +1,180 @@\n+#include \"compat-common.h\"\n+\n+#include \"fp2-struct-defs.h\"\n+#include \"fp2-struct-check.h\"\n+\n+#define TEST(TYPE)\t\t\t\t\t\t\\\n+TYPE g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE;\t\t\\\n+TYPE g5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE;\t\t\\\n+TYPE g9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE;\t\t\\\n+TYPE g13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE;\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void init##TYPE (TYPE *p, double x);\t\t\t\\\n+extern void checkg##TYPE (void);\t\t\t\t\\\n+extern void\t\t\t\t\t\t\t\\\n+test##TYPE (TYPE s1, TYPE s2, TYPE s3, TYPE s4,\t\t\t\\\n+\t    TYPE s5, TYPE s6, TYPE s7, TYPE s8,\t\t\t\\\n+\t    TYPE s9, TYPE s10, TYPE s11, TYPE s12,\t\t\\\n+\t    TYPE s13, TYPE s14, TYPE s15, TYPE s16);\t\t\\\n+extern void testva##TYPE (int n, ...);\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+test2_##TYPE (TYPE s1, TYPE s2, TYPE s3, TYPE s4,\t\t\\\n+\t      TYPE s5, TYPE s6, TYPE s7, TYPE s8)\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  test##TYPE (s1, g2s##TYPE, s2, g4s##TYPE,\t\t\t\\\n+\t      s3, g6s##TYPE, s4, g8s##TYPE,\t\t\t\\\n+\t      s5, g10s##TYPE, s6, g12s##TYPE,\t\t\t\\\n+\t      s7, g14s##TYPE, s8, g16s##TYPE);\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+testit##TYPE (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" init: \");\t\t\t\t\t\\\n+  init##TYPE  ( &g1s##TYPE,  (double)1);\t\t\t\\\n+  init##TYPE  ( &g2s##TYPE,  (double)2);\t\t\t\\\n+  init##TYPE  ( &g3s##TYPE,  (double)3);\t\t\t\\\n+  init##TYPE  ( &g4s##TYPE,  (double)4);\t\t\t\\\n+  init##TYPE  ( &g5s##TYPE,  (double)5);\t\t\t\\\n+  init##TYPE  ( &g6s##TYPE,  (double)6);\t\t\t\\\n+  init##TYPE  ( &g7s##TYPE,  (double)7);\t\t\t\\\n+  init##TYPE  ( &g8s##TYPE,  (double)8);\t\t\t\\\n+  init##TYPE  ( &g9s##TYPE,  (double)9);\t\t\t\\\n+  init##TYPE  (&g10s##TYPE, (double)10);\t\t\t\\\n+  init##TYPE  (&g11s##TYPE, (double)11);\t\t\t\\\n+  init##TYPE  (&g12s##TYPE, (double)12);\t\t\t\\\n+  init##TYPE  (&g13s##TYPE, (double)13);\t\t\t\\\n+  init##TYPE  (&g14s##TYPE, (double)14);\t\t\t\\\n+  init##TYPE  (&g15s##TYPE, (double)15);\t\t\t\\\n+  init##TYPE  (&g16s##TYPE, (double)16);\t\t\t\\\n+  checkg##TYPE ();\t\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test: \");\t\t\t\t\t\\\n+  test##TYPE (g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t      g5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n+\t      g9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n+\t      g13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" testva:\");\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##TYPE (1,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##TYPE (2,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##TYPE (3,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##TYPE (4,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##TYPE (5,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##TYPE (6,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##TYPE (7,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##TYPE (8,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##TYPE (9,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n+\t\tg9s##TYPE);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##TYPE (10,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n+\t\tg9s##TYPE, g10s##TYPE);\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##TYPE (11,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n+\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##TYPE (12,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n+\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##TYPE (13,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n+\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n+\t\tg13s##TYPE);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##TYPE (14,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n+\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n+\t\tg13s##TYPE, g14s##TYPE);\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##TYPE (15,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n+\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n+\t\tg13s##TYPE, g14s##TYPE, g15s##TYPE);\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  testva##TYPE (16,\t\t\t\t\t\t\\\n+\t\tg1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE,\t\\\n+\t\tg5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE,\t\\\n+\t\tg9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE,\t\\\n+\t\tg13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE); \\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test2: \");\t\t\t\t\t\\\n+  test2_##TYPE (g1s##TYPE, g3s##TYPE, g5s##TYPE, g7s##TYPE,\t\\\n+\t\tg9s##TYPE, g11s##TYPE, g13s##TYPE, g15s##TYPE);\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+}\n+\n+TEST(Sfd)\n+TEST(Sfl)\n+TEST(Sdf)\n+TEST(Sdl)\n+TEST(Slf)\n+TEST(Sld)\n+TEST(Sfdl)\n+TEST(Sfld)\n+TEST(Sdfl)\n+TEST(Sdlf)\n+TEST(Slfd)\n+TEST(Sldf)\n+\n+#undef T\n+\n+void\n+struct_by_value_10_x ()\n+{\n+#define T(TYPE) testit##TYPE ();\n+\n+T(Sfd)\n+T(Sfl)\n+T(Sdf)\n+T(Sdl)\n+T(Slf)\n+T(Sld)\n+T(Sfdl)\n+T(Sfld)\n+T(Sdfl)\n+T(Sdlf)\n+T(Slfd)\n+T(Sldf)\n+\n+if (fails != 0)\n+  abort ();\n+\n+#undef T\n+}"}, {"sha": "30ad45fe7b6308bc1cfbf81893e3adc48be21108", "filename": "gcc/testsuite/gcc.dg/compat/struct-by-value-10_y.c", "status": "added", "additions": 96, "deletions": 0, "changes": 96, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-10_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-10_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-by-value-10_y.c?ref=907129969df130b1dd0b1e1870126f9bad99e2ee", "patch": "@@ -0,0 +1,96 @@\n+#include <stdarg.h>\n+\n+#include \"compat-common.h\"\n+\n+/* Turn off checking for variable arguments with -DSKIPVA.  */\n+#ifdef SKIPVA\n+const int test_va = 0;\n+#else\n+const int test_va = 1;\n+#endif\n+\n+#include \"fp2-struct-defs.h\"\n+#include \"fp2-struct-init.h\"\n+\n+#define TEST(TYPE)\t\t\t\t\t\t\\\n+extern TYPE g1s##TYPE, g2s##TYPE, g3s##TYPE, g4s##TYPE;\t\t\\\n+extern TYPE g5s##TYPE, g6s##TYPE, g7s##TYPE, g8s##TYPE;\t\t\\\n+extern TYPE g9s##TYPE, g10s##TYPE, g11s##TYPE, g12s##TYPE;\t\\\n+extern TYPE g13s##TYPE, g14s##TYPE, g15s##TYPE, g16s##TYPE;\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void check##TYPE (TYPE x, double y);\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+checkg##TYPE (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  check##TYPE (  g1s##TYPE,  (double)1);\t\t\t\\\n+  check##TYPE (  g2s##TYPE,  (double)2);\t\t\t\\\n+  check##TYPE (  g3s##TYPE,  (double)3);\t\t\t\\\n+  check##TYPE (  g4s##TYPE,  (double)4);\t\t\t\\\n+  check##TYPE (  g5s##TYPE,  (double)5);\t\t\t\\\n+  check##TYPE (  g6s##TYPE,  (double)6);\t\t\t\\\n+  check##TYPE (  g7s##TYPE,  (double)7);\t\t\t\\\n+  check##TYPE (  g8s##TYPE,  (double)8);\t\t\t\\\n+  check##TYPE (  g9s##TYPE,  (double)9);\t\t\t\\\n+  check##TYPE ( g10s##TYPE, (double)10);\t\t\t\\\n+  check##TYPE ( g11s##TYPE, (double)11);\t\t\t\\\n+  check##TYPE ( g12s##TYPE, (double)12);\t\t\t\\\n+  check##TYPE ( g13s##TYPE, (double)13);\t\t\t\\\n+  check##TYPE ( g14s##TYPE, (double)14);\t\t\t\\\n+  check##TYPE ( g15s##TYPE, (double)15);\t\t\t\\\n+  check##TYPE ( g16s##TYPE, (double)16);\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+test##TYPE (TYPE s1, TYPE s2, TYPE s3, TYPE s4,\t\t\t\\\n+\t    TYPE s5, TYPE s6, TYPE s7, TYPE s8,\t\t\t\\\n+\t    TYPE s9, TYPE s10, TYPE s11, TYPE s12,\t\t\\\n+\t    TYPE s13, TYPE s14, TYPE s15, TYPE s16)\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  check##TYPE (s1, (double)1);\t\t\t\t\t\\\n+  check##TYPE (s2, (double)2);\t\t\t\t\t\\\n+  check##TYPE (s3, (double)3);\t\t\t\t\t\\\n+  check##TYPE (s4, (double)4);\t\t\t\t\t\\\n+  check##TYPE (s5, (double)5);\t\t\t\t\t\\\n+  check##TYPE (s6, (double)6);\t\t\t\t\t\\\n+  check##TYPE (s7, (double)7);\t\t\t\t\t\\\n+  check##TYPE (s8, (double)8);\t\t\t\t\t\\\n+  check##TYPE (s9, (double)9);\t\t\t\t\t\\\n+  check##TYPE (s10, (double)10);\t\t\t\t\\\n+  check##TYPE (s11, (double)11);\t\t\t\t\\\n+  check##TYPE (s12, (double)12);\t\t\t\t\\\n+  check##TYPE (s13, (double)13);\t\t\t\t\\\n+  check##TYPE (s14, (double)14);\t\t\t\t\\\n+  check##TYPE (s15, (double)15);\t\t\t\t\\\n+  check##TYPE (s16, (double)16);\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+testva##TYPE (int n, ...)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  int i;\t\t\t\t\t\t\t\\\n+  va_list ap;\t\t\t\t\t\t\t\\\n+  if (test_va)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      va_start (ap, n);\t\t\t\t\t\t\\\n+      for (i = 0; i < n; i++)\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  TYPE t = va_arg (ap, TYPE);\t\t\t\t\\\n+\t  check##TYPE (t, (double)i+1);\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      va_end (ap);\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+}\n+\n+TEST(Sfd)\n+TEST(Sfl)\n+TEST(Sdf)\n+TEST(Sdl)\n+TEST(Slf)\n+TEST(Sld)\n+TEST(Sfdl)\n+TEST(Sfld)\n+TEST(Sdfl)\n+TEST(Sdlf)\n+TEST(Slfd)\n+TEST(Sldf)"}, {"sha": "fca68286cfd25ba3df4a92cb2de10ae9db458ef4", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-10_main.c", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-10_main.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-10_main.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-10_main.c?ref=907129969df130b1dd0b1e1870126f9bad99e2ee", "patch": "@@ -0,0 +1,13 @@\n+/* Test function return values.  For this test, all struct members are\n+   scalar floating point types.  */\n+\n+extern void struct_return_10_x (void);\n+extern void exit (int);\n+int fails;\n+\n+int\n+main ()\n+{\n+  struct_return_10_x ();\n+  exit (0);\n+}"}, {"sha": "f3e375bb44670218d3f4c8c414facccdd6b83261", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-10_x.c", "status": "added", "additions": 115, "deletions": 0, "changes": 115, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-10_x.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-10_x.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-10_x.c?ref=907129969df130b1dd0b1e1870126f9bad99e2ee", "patch": "@@ -0,0 +1,115 @@\n+#include \"compat-common.h\"\n+\n+#define T(TYPE)\t\t\t\t\t\t\t\\\n+TYPE g01##TYPE, g02##TYPE, g03##TYPE, g04##TYPE;\t\t\\\n+TYPE g05##TYPE, g06##TYPE, g07##TYPE, g08##TYPE;\t\t\\\n+TYPE g09##TYPE, g10##TYPE, g11##TYPE, g12##TYPE;\t\t\\\n+TYPE g13##TYPE, g14##TYPE, g15##TYPE, g16##TYPE;\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void init##TYPE (TYPE *p, double y);\t\t\t\\\n+extern void checkg##TYPE (void);\t\t\t\t\\\n+extern TYPE test0##TYPE (void);\t\t\t\t\t\\\n+extern TYPE test1##TYPE (TYPE);\t\t\t\t\t\\\n+extern TYPE testva##TYPE (int n, ...);\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+testit##TYPE (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  TYPE rslt;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" init: \");\t\t\t\t\t\\\n+  init##TYPE  (&g01##TYPE,  1.0);\t\t\t\t\\\n+  init##TYPE  (&g02##TYPE,  2.0);\t\t\t\t\\\n+  init##TYPE  (&g03##TYPE,  3.0);\t\t\t\t\\\n+  init##TYPE  (&g04##TYPE,  4.0);\t\t\t\t\\\n+  init##TYPE  (&g05##TYPE,  5.0);\t\t\t\t\\\n+  init##TYPE  (&g06##TYPE,  6.0);\t\t\t\t\\\n+  init##TYPE  (&g07##TYPE,  7.0);\t\t\t\t\\\n+  init##TYPE  (&g08##TYPE,  8.0);\t\t\t\t\\\n+  init##TYPE  (&g09##TYPE,  9.0);\t\t\t\t\\\n+  init##TYPE  (&g10##TYPE, 10.0);\t\t\t\t\\\n+  init##TYPE  (&g11##TYPE, 11.0);\t\t\t\t\\\n+  init##TYPE  (&g12##TYPE, 12.0);\t\t\t\t\\\n+  init##TYPE  (&g13##TYPE, 13.0);\t\t\t\t\\\n+  init##TYPE  (&g14##TYPE, 14.0);\t\t\t\t\\\n+  init##TYPE  (&g15##TYPE, 15.0);\t\t\t\t\\\n+  init##TYPE  (&g16##TYPE, 16.0);\t\t\t\t\\\n+  checkg##TYPE ();\t\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test0: \");\t\t\t\t\t\\\n+  rslt = test0##TYPE ();\t\t\t\t\t\\\n+  check##TYPE (rslt, 1.0);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" test1: \");\t\t\t\t\t\\\n+  rslt = test1##TYPE (g01##TYPE);\t\t\t\t\\\n+  check##TYPE (rslt, 1.0);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (#TYPE);\t\t\t\t\t\t\\\n+  DEBUG_FPUTS (\" testva:\");\t\t\t\t\t\\\n+  rslt = testva##TYPE (1, g01##TYPE);\t\t\t\t\\\n+  check##TYPE (rslt, 1.0);\t\t\t\t\t\\\n+  rslt = testva##TYPE (5, g01##TYPE, g02##TYPE,\t\t\t\\\n+\t\t\t  g03##TYPE, g04##TYPE,\t\t\t\\\n+\t\t\t  g05##TYPE);\t\t\t\t\\\n+  check##TYPE (rslt, 5.0);\t\t\t\t\t\\\n+  rslt = testva##TYPE (9, g01##TYPE, g02##TYPE,\t\t\t\\\n+\t\t\t  g03##TYPE, g04##TYPE,\t\t\t\\\n+\t\t\t  g05##TYPE, g06##TYPE,\t\t\t\\\n+\t\t\t  g07##TYPE, g08##TYPE,\t\t\t\\\n+\t\t\t  g09##TYPE);\t\t\t\t\\\n+  check##TYPE (rslt, 9.0);\t\t\t\t\t\\\n+  rslt = testva##TYPE (16, g01##TYPE, g02##TYPE,\t\t\\\n+\t\t\t  g03##TYPE, g04##TYPE,\t\t\t\\\n+\t\t\t  g05##TYPE, g06##TYPE,\t\t\t\\\n+\t\t\t  g07##TYPE, g08##TYPE,\t\t\t\\\n+\t\t\t  g09##TYPE, g10##TYPE,\t\t\t\\\n+\t\t\t  g11##TYPE, g12##TYPE,\t\t\t\\\n+\t\t\t  g13##TYPE, g14##TYPE,\t\t\t\\\n+\t\t\t  g15##TYPE, g16##TYPE);\t\t\\\n+  check##TYPE (rslt, 16.0);\t\t\t\t\t\\\n+  DEBUG_NL;\t\t\t\t\t\t\t\\\n+}\n+\n+#include \"fp2-struct-defs.h\"\n+#include \"fp2-struct-check.h\"\n+\n+T(Sfd);\n+T(Sfl);\n+T(Sdf);\n+T(Sdl);\n+T(Slf);\n+T(Sld);\n+T(Sfdl);\n+T(Sfld);\n+T(Sdfl);\n+T(Sdlf);\n+T(Slfd);\n+T(Sldf);\n+\n+#undef T\n+\n+void\n+struct_return_10_x ()\n+{\n+#define T(TYPE) testit##TYPE ();\n+\n+T(Sfd);\n+T(Sfl);\n+T(Sdf);\n+T(Sdl);\n+T(Slf);\n+T(Sld);\n+T(Sfdl);\n+T(Sfld);\n+T(Sdfl);\n+T(Sdlf);\n+T(Slfd);\n+T(Sldf);\n+\n+if (fails != 0)\n+  return;\n+\n+#undef T\n+}"}, {"sha": "2cd9c604c06b7bc6a4961b3db33ef52ac4208931", "filename": "gcc/testsuite/gcc.dg/compat/struct-return-10_y.c", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-10_y.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/907129969df130b1dd0b1e1870126f9bad99e2ee/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-10_y.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fcompat%2Fstruct-return-10_y.c?ref=907129969df130b1dd0b1e1870126f9bad99e2ee", "patch": "@@ -0,0 +1,85 @@\n+#include <stdarg.h>\n+\n+#include \"compat-common.h\"\n+\n+/* Turn off checking for variable arguments with -DSKIPVA.  */\n+#ifdef SKIPVA\n+const int test_va = 0;\n+#else\n+const int test_va = 1;\n+#endif\n+\n+#include \"fp2-struct-defs.h\"\n+#include \"fp2-struct-init.h\"\n+\n+#define T(TYPE)\t\t\t\t\t\t\t\\\n+extern TYPE g01##TYPE, g02##TYPE, g03##TYPE, g04##TYPE;\t\t\\\n+extern TYPE g05##TYPE, g06##TYPE, g07##TYPE, g08##TYPE;\t\t\\\n+extern TYPE g09##TYPE, g10##TYPE, g11##TYPE, g12##TYPE;\t\t\\\n+extern TYPE g13##TYPE, g14##TYPE, g15##TYPE, g16##TYPE;\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+extern void check##TYPE (TYPE x, double y);\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+checkg##TYPE (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  check##TYPE (g01##TYPE,  1.0);\t\t\t\t\t\\\n+  check##TYPE (g02##TYPE,  2.0);\t\t\t\t\t\\\n+  check##TYPE (g03##TYPE,  3.0);\t\t\t\t\t\\\n+  check##TYPE (g04##TYPE,  4.0);\t\t\t\t\t\\\n+  check##TYPE (g05##TYPE,  5.0);\t\t\t\t\t\\\n+  check##TYPE (g06##TYPE,  6.0);\t\t\t\t\t\\\n+  check##TYPE (g07##TYPE,  7.0);\t\t\t\t\t\\\n+  check##TYPE (g08##TYPE,  8.0);\t\t\t\t\t\\\n+  check##TYPE (g09##TYPE,  9.0);\t\t\t\t\t\\\n+  check##TYPE (g10##TYPE, 10.0);\t\t\t\t\t\\\n+  check##TYPE (g11##TYPE, 11.0);\t\t\t\t\t\\\n+  check##TYPE (g12##TYPE, 12.0);\t\t\t\t\t\\\n+  check##TYPE (g13##TYPE, 13.0);\t\t\t\t\t\\\n+  check##TYPE (g14##TYPE, 14.0);\t\t\t\t\t\\\n+  check##TYPE (g15##TYPE, 15.0);\t\t\t\t\t\\\n+  check##TYPE (g16##TYPE, 16.0);\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+TYPE\t\t\t\t\t\t\t\t\\\n+test0##TYPE (void)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  return g01##TYPE;\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+TYPE\t\t\t\t\t\t\t\t\\\n+test1##TYPE (TYPE x01)\t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  return x01;\t\t\t\t\t\t\t\\\n+}\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+TYPE\t\t\t\t\t\t\t\t\\\n+testva##TYPE (int n, ...)\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  int i;\t\t\t\t\t\t\t\\\n+  TYPE rslt;\t\t\t\t\t\t\t\\\n+  va_list ap;\t\t\t\t\t\t\t\\\n+  if (test_va)\t\t\t\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      va_start (ap, n);\t\t\t\t\t\t\\\n+      for (i = 0; i < n; i++)\t\t\t\t\t\\\n+\t{\t\t\t\t\t\t\t\\\n+\t  rslt = va_arg (ap, TYPE);\t\t\t\t\\\n+\t}\t\t\t\t\t\t\t\\\n+      va_end (ap);\t\t\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+  return rslt;\t\t\t\t\t\t\t\\\n+}\n+\n+T(Sfd)\n+T(Sfl)\n+T(Sdf)\n+T(Sdl)\n+T(Slf)\n+T(Sld)\n+T(Sfdl)\n+T(Sfld)\n+T(Sdfl)\n+T(Sdlf)\n+T(Slfd)\n+T(Sldf)"}]}