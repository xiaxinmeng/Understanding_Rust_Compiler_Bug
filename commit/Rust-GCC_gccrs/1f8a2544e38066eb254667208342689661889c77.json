{"sha": "1f8a2544e38066eb254667208342689661889c77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWY4YTI1NDRlMzgwNjZlYjI1NDY2NzIwODM0MjY4OTY2MTg4OWM3Nw==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-06-15T21:45:49Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-06-15T21:45:49Z"}, "message": "arg3.C: Adjust error locations.\n\n\t* g++.dg/overload/arg3.C: Adjust error locations.\n\t* g++.dg/overload/copy1.C: Likewise.\n\t* g++.dg/tc1/dr152.C: Likewise.\n\t* g++.dg/template/incomplete4.C: Likewise.\n\t* g++.dg/template/incomplete5.C: Likewise.\n\t* g++.old-deja/g++.bob/inherit2.C: Likewise.\n\t* g++.old-deja/g++.pt/auto_ptr.C: Likewise.\n\t* g++.old-deja/g++.pt/crash9.C: Likewise.\n\nFrom-SVN: r160814", "tree": {"sha": "2e15143d390599bb69c7cefc432815f9aeca6ea3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2e15143d390599bb69c7cefc432815f9aeca6ea3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1f8a2544e38066eb254667208342689661889c77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f8a2544e38066eb254667208342689661889c77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1f8a2544e38066eb254667208342689661889c77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1f8a2544e38066eb254667208342689661889c77/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f582a3aa6b6954d44bd216e756763ada3afa5d1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f582a3aa6b6954d44bd216e756763ada3afa5d1e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f582a3aa6b6954d44bd216e756763ada3afa5d1e"}], "stats": {"total": 45, "additions": 24, "deletions": 21}, "files": [{"sha": "0263635438763de626c2ba36ddbd7089005327b9", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=1f8a2544e38066eb254667208342689661889c77", "patch": "@@ -1,5 +1,14 @@\n 2010-06-15  Jason Merrill  <jason@redhat.com>\n \n+\t* g++.dg/overload/arg3.C: Adjust error locations.\n+\t* g++.dg/overload/copy1.C: Likewise.\n+\t* g++.dg/tc1/dr152.C: Likewise.\n+\t* g++.dg/template/incomplete4.C: Likewise.\n+\t* g++.dg/template/incomplete5.C: Likewise.\n+\t* g++.old-deja/g++.bob/inherit2.C: Likewise.\n+\t* g++.old-deja/g++.pt/auto_ptr.C: Likewise.\n+\t* g++.old-deja/g++.pt/crash9.C: Likewise.\n+\n \t* g++.dg/inherit/virtual5.C: New.\n \n \t* g++.dg/cpp0x/defaulted18.C: New."}, {"sha": "eb65271752e8c6737acb5e6140bba0a3f6b20bae", "filename": "gcc/testsuite/g++.dg/overload/arg3.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Farg3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Farg3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Farg3.C?ref=1f8a2544e38066eb254667208342689661889c77", "patch": "@@ -14,10 +14,9 @@ struct B : A\n   B(B&);  // { dg-message \"candidates\" \"\" }\n };\n \n-void foo(B);\n+void foo(B);\t\t\t// { dg-error \"initializing\" }\n \n void bar()\n {\n   foo(0); // { dg-error \"no matching function\" \"no matching\" }\n-          // { dg-error \"initializing\" \"initializing\" { target *-*-* } 21 }\n }"}, {"sha": "2bd8e539dd1a14f131eecbffac6a8b6937557eb3", "filename": "gcc/testsuite/g++.dg/overload/copy1.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fcopy1.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fcopy1.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Foverload%2Fcopy1.C?ref=1f8a2544e38066eb254667208342689661889c77", "patch": "@@ -10,12 +10,11 @@ struct B\n \n struct A\n {\n-  A (B);\n+  A (B);\t\t\t// { dg-error \"initializing\" }\n };\n \n B\n f (B const& b)\n {\n   return b;\t\t\t// { dg-error \"matching\" \"matching\" }\n-                                // { dg-error \"initializing\" \"initializing\" { target *-*-* } 19 }\n }"}, {"sha": "fdf4f124bb17c100345defbaf4f35f53e1a50c94", "filename": "gcc/testsuite/g++.dg/tc1/dr152.C", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr152.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr152.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftc1%2Fdr152.C?ref=1f8a2544e38066eb254667208342689661889c77", "patch": "@@ -7,12 +7,11 @@ namespace N1 {\n     X();\t\t\t// { dg-message \"candidate\" }\n     explicit X(const X&);\n   };\n-  void f(X);\n+  void f(X);\t\t\t// { dg-error \"initializing\" }\n   int foo() \n   { \n     X x; \n     f(x);     // { dg-error \"matching\" \"matching\" }\n-\t      // { dg-error \"initializing\" \"initializing\" { target *-*-* } 14 }\n   }\n }\n \n@@ -24,14 +23,13 @@ namespace N2 {\n   };\n \n   template <class T>\n-  void f(T ) {}\n+  void f(T ) {}\t\t\t// { dg-error \"initializing\" }\n   \n   template <class T>\n   int foo() \n   { \n     X<T> x; \n     N2::f(x);   // { dg-error \"matching\" \"matching\" }\n-\t\t// { dg-error \"initializing \" initializing\" { target *-*-* } 33 }\n   }\n \n   template int foo<float>();  // { dg-message \"instantiated from here\" }"}, {"sha": "f2832a73c4ceeef54ebccb7a9205962c08712593", "filename": "gcc/testsuite/g++.dg/template/incomplete4.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete4.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete4.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete4.C?ref=1f8a2544e38066eb254667208342689661889c77", "patch": "@@ -5,12 +5,12 @@ class A;\t// { dg-error \"forward declaration\" }\n \n template <typename T> struct X\n {\n-  static int f (T);\n+  static int f (T);\t\t// { dg-error \"initializing\" }\n   static const T &make ();\n };\n \n int\n main ()\n {\n-  return X<A>::f (X<A>::make ());\t// { dg-error \"invalid use of incomplete type|initializing argument\" }\n+  return X<A>::f (X<A>::make ());\t// { dg-error \"invalid use of incomplete type\" }\n }"}, {"sha": "f7802825fde9658a0bc14e6638259ac56e4614e5", "filename": "gcc/testsuite/g++.dg/template/incomplete5.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fincomplete5.C?ref=1f8a2544e38066eb254667208342689661889c77", "patch": "@@ -5,9 +5,9 @@ class A;\t// { dg-error \"forward declaration\" }\n \n template <typename T> struct X\n {\n-  static int f (T);\n+  static int f (T);\t\t// { dg-error \"initializing\" }\n   static const T &make ();\n-  static const bool value = sizeof (f (make ())) == sizeof (int);\t// { dg-error \"invalid use of incomplete type|initializing argument\" }\n+  static const bool value = sizeof (f (make ())) == sizeof (int);\t// { dg-error \"invalid use of incomplete type\" }\n };\n \n int"}, {"sha": "30be26749c94aa7018560c51e90be878e572adb2", "filename": "gcc/testsuite/g++.dg/warn/incomplete2.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fincomplete2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fincomplete2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2Fincomplete2.C?ref=1f8a2544e38066eb254667208342689661889c77", "patch": "@@ -3,11 +3,11 @@\n \n class A;\t// { dg-error \"forward declaration\" }\n \n-int f (A);\n+int f (A);\t\t\t// { dg-error \"initializing\" }\n const A &make ();\n \n int\n main ()\n {\n-  return f (make ());\t// { dg-error \"invalid use of incomplete type|initializing argument\" }\n+  return f (make ());\t// { dg-error \"invalid use of incomplete type\" }\n }"}, {"sha": "c0a821bb6b19db746d44f601716fef219e7fd430", "filename": "gcc/testsuite/g++.old-deja/g++.bob/inherit2.C", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bob%2Finherit2.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bob%2Finherit2.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.bob%2Finherit2.C?ref=1f8a2544e38066eb254667208342689661889c77", "patch": "@@ -15,11 +15,10 @@ public:\n   B(void) {}\n };\n \n-void f(B b) {\n+void f(B b) {\t\t\t// { dg-error \"initializing\" }\n }\n \n void g() {\n   B h;\n-  f(h); // { dg-error \"argument\" \"arg\" } \n-  // { dg-message \"synthesized\" \"synth\" { target *-*-* } 23 }\n+  f(h);  // { dg-message \"synthesized\" \"synth\" }\n }"}, {"sha": "3a587d8738ea9c4587db6dec1f3c1e47f94c4d13", "filename": "gcc/testsuite/g++.old-deja/g++.pt/auto_ptr.C", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fauto_ptr.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fauto_ptr.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fauto_ptr.C?ref=1f8a2544e38066eb254667208342689661889c77", "patch": "@@ -44,13 +44,12 @@ struct Derived : Base { Derived() {} };\n \n auto_ptr<Derived> f() { auto_ptr<Derived> null(0); return null; }\n void g(auto_ptr<Derived>) { }\n-void h(auto_ptr<Base>) { }\n+void h(auto_ptr<Base>) { }\t// { dg-error \"initializing\" }\n \n int main() {\n     auto_ptr<Base> x(f());\n     auto_ptr<Derived> y(f());\n     x = y;\n     g(f());\n     h(f());\t\t\t// { dg-error \"match\" \"match\" } no usable copy ctor\n-// { dg-error \"initializing\" \"init\" { target *-*-* } 54 }\n }"}, {"sha": "f2d811dda1a75c8261b55a289bc664eabff4b1d8", "filename": "gcc/testsuite/g++.old-deja/g++.pt/crash9.C", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1f8a2544e38066eb254667208342689661889c77/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.pt%2Fcrash9.C?ref=1f8a2544e38066eb254667208342689661889c77", "patch": "@@ -1,11 +1,11 @@\n // { dg-do assemble  }\n \n template <class T>\n-void f(T) {}\n+void f(T) {}\t\t\t// { dg-error \"initializing\" }\n \n class C;    // { dg-error \"forward declaration\" }\n \n void g(const C& c)\n {\n-  f(c); // { dg-error \"invalid use of incomplete type|initializing argument\" }\n+  f(c); // { dg-error \"invalid use of incomplete type\" }\n }"}]}