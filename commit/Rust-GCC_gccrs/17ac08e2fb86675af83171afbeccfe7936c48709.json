{"sha": "17ac08e2fb86675af83171afbeccfe7936c48709", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdhYzA4ZTJmYjg2Njc1YWY4MzE3MWFmYmVjY2ZlNzkzNmM0ODcwOQ==", "commit": {"author": {"name": "Ian Lance Taylor", "email": "ian@airs.com", "date": "2005-03-23T15:59:40Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2005-03-23T15:59:40Z"}, "message": "final.c (final_scan_insn): Don't remove no-op instructions.\n\n\t* final.c (final_scan_insn): Don't remove no-op instructions.\n\t* reload1.c (reload): Remove simple no-op instructions even when\n\tnot optimizing.\n\nFrom-SVN: r96933", "tree": {"sha": "1d2e8d636e2d097fbbf7d8d91bff95a8cd0968e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1d2e8d636e2d097fbbf7d8d91bff95a8cd0968e0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17ac08e2fb86675af83171afbeccfe7936c48709", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17ac08e2fb86675af83171afbeccfe7936c48709", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17ac08e2fb86675af83171afbeccfe7936c48709", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17ac08e2fb86675af83171afbeccfe7936c48709/comments", "author": {"login": "ianlancetaylor", "id": 3194333, "node_id": "MDQ6VXNlcjMxOTQzMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3194333?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ianlancetaylor", "html_url": "https://github.com/ianlancetaylor", "followers_url": "https://api.github.com/users/ianlancetaylor/followers", "following_url": "https://api.github.com/users/ianlancetaylor/following{/other_user}", "gists_url": "https://api.github.com/users/ianlancetaylor/gists{/gist_id}", "starred_url": "https://api.github.com/users/ianlancetaylor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ianlancetaylor/subscriptions", "organizations_url": "https://api.github.com/users/ianlancetaylor/orgs", "repos_url": "https://api.github.com/users/ianlancetaylor/repos", "events_url": "https://api.github.com/users/ianlancetaylor/events{/privacy}", "received_events_url": "https://api.github.com/users/ianlancetaylor/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e6b0dafa31335e74c230356f71d0356089a3a3f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0e6b0dafa31335e74c230356f71d0356089a3a3f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0e6b0dafa31335e74c230356f71d0356089a3a3f"}], "stats": {"total": 36, "additions": 21, "deletions": 15}, "files": [{"sha": "36c07b8875643be65e8c632d6144bfd3eabd0e71", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17ac08e2fb86675af83171afbeccfe7936c48709/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17ac08e2fb86675af83171afbeccfe7936c48709/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17ac08e2fb86675af83171afbeccfe7936c48709", "patch": "@@ -1,3 +1,9 @@\n+2005-03-23  Ian Lance Taylor  <ian@airs.com>\n+\n+\t* final.c (final_scan_insn): Don't remove no-op instructions.\n+\t* reload1.c (reload): Remove simple no-op instructions even when\n+\tnot optimizing.\n+\n 2005-03-23  Dorit Naishlos  <dorit@il.ib.com>\n  \n \tPR tree-optimization/20501"}, {"sha": "906e50c00fefd95b60bb89c9017c5177ea17b2b6", "filename": "gcc/final.c", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17ac08e2fb86675af83171afbeccfe7936c48709/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17ac08e2fb86675af83171afbeccfe7936c48709/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=17ac08e2fb86675af83171afbeccfe7936c48709", "patch": "@@ -1,6 +1,7 @@\n /* Convert RTL to assembler code and output it, for GNU compiler.\n    Copyright (C) 1987, 1988, 1989, 1992, 1993, 1994, 1995, 1996, 1997,\n-   1998, 1999, 2000, 2001, 2002, 2003, 2004 Free Software Foundation, Inc.\n+   1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005\n+   Free Software Foundation, Inc.\n \n This file is part of GCC.\n \n@@ -2267,20 +2268,6 @@ final_scan_insn (rtx insn, FILE *file, int optimize ATTRIBUTE_UNUSED,\n \t  }\n #endif\n \n-#ifndef STACK_REGS\n-\t/* Don't bother outputting obvious no-ops, even without -O.\n-\t   This optimization is fast and doesn't interfere with debugging.\n-\t   Don't do this if the insn is in a delay slot, since this\n-\t   will cause an improper number of delay insns to be written.  */\n-\tif (final_sequence == 0\n-\t    && prescan >= 0\n-\t    && NONJUMP_INSN_P (insn) && GET_CODE (body) == SET\n-\t    && REG_P (SET_SRC (body))\n-\t    && REG_P (SET_DEST (body))\n-\t    && REGNO (SET_SRC (body)) == REGNO (SET_DEST (body)))\n-\t  break;\n-#endif\n-\n #ifdef HAVE_cc0\n \t/* If this is a conditional branch, maybe modify it\n \t   if the cc's are in a nonstandard state"}, {"sha": "5e1ab1a27ccfae4c4c5f0a65e530e76917edebf5", "filename": "gcc/reload1.c", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17ac08e2fb86675af83171afbeccfe7936c48709/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17ac08e2fb86675af83171afbeccfe7936c48709/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=17ac08e2fb86675af83171afbeccfe7936c48709", "patch": "@@ -1174,6 +1174,19 @@ reload (rtx first, int global)\n \t  replace_pseudos_in (& XEXP (PATTERN (insn), 0),\n \t\t\t      VOIDmode, PATTERN (insn));\n \n+\t/* Discard obvious no-ops, even without -O.  This optimization\n+\t   is fast and doesn't interfere with debugging.  */\n+\tif (NONJUMP_INSN_P (insn)\n+\t    && GET_CODE (PATTERN (insn)) == SET\n+\t    && REG_P (SET_SRC (PATTERN (insn)))\n+\t    && REG_P (SET_DEST (PATTERN (insn)))\n+\t    && (REGNO (SET_SRC (PATTERN (insn)))\n+\t\t== REGNO (SET_DEST (PATTERN (insn)))))\n+\t  {\n+\t    delete_insn (insn);\n+\t    continue;\n+\t  }\n+\n \tpnote = &REG_NOTES (insn);\n \twhile (*pnote != 0)\n \t  {"}]}