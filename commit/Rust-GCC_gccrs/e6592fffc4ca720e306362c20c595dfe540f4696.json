{"sha": "e6592fffc4ca720e306362c20c595dfe540f4696", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTY1OTJmZmZjNGNhNzIwZTMwNjM2MmMyMGM1OTVkZmU1NDBmNDY5Ng==", "commit": {"author": {"name": "Catherine Moore", "email": "clm@cygnus.com", "date": "1998-12-07T09:15:34Z"}, "committer": {"name": "Catherine Moore", "email": "clm@gcc.gnu.org", "date": "1998-12-07T09:15:34Z"}, "message": "configure.in: (arm*-*-ecos-elf): New target.\n\nMon Dec  7 09:58:26 1998  Catherine Moore  <clm@cygnus.com>\n        * configure.in:  (arm*-*-ecos-elf):  New target.\n        * configure:  Regenerated.\n        * config/arm/elf.h (ASM_WEAKEN_LABEL):  Define.\n        * config/arm/ecos-elf.h:  New file.\n        * config/arm/unknown-elf.h (TARGET_VERSION):  Check\n        for redefinition.\n\nFrom-SVN: r24145", "tree": {"sha": "647a3224da3c3ff837edeb41b4a36aebefb53a67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/647a3224da3c3ff837edeb41b4a36aebefb53a67"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6592fffc4ca720e306362c20c595dfe540f4696", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6592fffc4ca720e306362c20c595dfe540f4696", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6592fffc4ca720e306362c20c595dfe540f4696", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6592fffc4ca720e306362c20c595dfe540f4696/comments", "author": null, "committer": null, "parents": [{"sha": "1a953d0f164569382e9f6704aa0a7f6f2bdc5579", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1a953d0f164569382e9f6704aa0a7f6f2bdc5579", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1a953d0f164569382e9f6704aa0a7f6f2bdc5579"}], "stats": {"total": 54, "additions": 54, "deletions": 0}, "files": [{"sha": "0fb314c43677689b69df9f1aec822acbf11d3d6c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6592fffc4ca720e306362c20c595dfe540f4696/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6592fffc4ca720e306362c20c595dfe540f4696/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e6592fffc4ca720e306362c20c595dfe540f4696", "patch": "@@ -1,3 +1,12 @@\n+Mon Dec  7 11:04:40 1998  Catherine Moore  <clm@cygnus.com>\n+ \n+        * configure.in:  (arm*-*-ecos-elf):  New target.\n+        * configure:  Regenerated.\n+        * config/arm/elf.h (ASM_WEAKEN_LABEL):  Define.\n+        * config/arm/ecos-elf.h:  New file.\n+        * config/arm/unknown-elf.h (TARGET_VERSION):  Check\n+        for redefinition.\n+ \n Mon Dec  7 16:15:51 1998  J\"orn Rennecke <amylaar@cygnus.co.uk>\n \n \t* sh.c (output_far_jump): Emit braf only for TARGET_SH2."}, {"sha": "9fdc64ae6cd97ae0461aeca2455012fe5bdd5db9", "filename": "gcc/config/arm/ecos-elf.h", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6592fffc4ca720e306362c20c595dfe540f4696/gcc%2Fconfig%2Farm%2Fecos-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6592fffc4ca720e306362c20c595dfe540f4696/gcc%2Fconfig%2Farm%2Fecos-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fecos-elf.h?ref=e6592fffc4ca720e306362c20c595dfe540f4696", "patch": "@@ -0,0 +1,29 @@\n+/* Definitions for ecos based ARM systems using ELF\n+   Copyright (C) 1998 Free Software Foundation, Inc.\n+ \n+This file is part of GNU CC.\n+ \n+GNU CC is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU CC is distributed in the hope that it will be useful,\n+but WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+GNU General Public License for more details.\n+ \n+You should have received a copy of the GNU General Public License\n+along with this program; see the file COPYING.  If not, write to\n+the Free Software Foundation, 59 Temple Place - Suite 330,\n+Boston, MA 02111-1307, USA.  */\n+\n+/* Run-time Target Specification.  */\n+#define TARGET_VERSION\tfputs (\" (ARM/ELF Ecos)\", stderr);\n+\n+#define HAS_INIT_SECTION\n+\n+#include \"unknown-elf.h\"\n+\n+#undef INVOKE_main\n+"}, {"sha": "28af933ef0903c4c1d9c0d4800f33ea1901ddd7f", "filename": "gcc/config/arm/elf.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6592fffc4ca720e306362c20c595dfe540f4696/gcc%2Fconfig%2Farm%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6592fffc4ca720e306362c20c595dfe540f4696/gcc%2Fconfig%2Farm%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Felf.h?ref=e6592fffc4ca720e306362c20c595dfe540f4696", "patch": "@@ -325,6 +325,12 @@ do {\t\t\t\t\t\t\\\n } while (0)\n #endif\n \n+/* This is how we tell the assembler that a symbol is weak.  */\n+\n+#define ASM_WEAKEN_LABEL(FILE,NAME) \\\n+  do { fputs (\"\\t.weak\\t\", FILE); assemble_name (FILE, NAME); \\\n+       fputc ('\\n', FILE); } while (0)\n+\n #include \"arm/aout.h\"\n \n "}, {"sha": "be8da8175715dd98242adee3738e67038fb55214", "filename": "gcc/config/arm/unknown-elf.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6592fffc4ca720e306362c20c595dfe540f4696/gcc%2Fconfig%2Farm%2Funknown-elf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6592fffc4ca720e306362c20c595dfe540f4696/gcc%2Fconfig%2Farm%2Funknown-elf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Funknown-elf.h?ref=e6592fffc4ca720e306362c20c595dfe540f4696", "patch": "@@ -20,7 +20,9 @@ the Free Software Foundation, 59 Temple Place - Suite 330,\n Boston, MA 02111-1307, USA.  */\n \n /* Run-time Target Specification.  */\n+#ifndef TARGET_VERSION\n #define TARGET_VERSION\tfputs (\" (ARM/ELF non-Linux)\", stderr);\n+#endif\n \n /* If you don't define HAVE_ATEXIT, and the object file format/OS/whatever \n    does not support constructors/destructors, then gcc implements destructors"}, {"sha": "d2a998cf01f755105e40088f4191acba5e05026c", "filename": "gcc/configure", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6592fffc4ca720e306362c20c595dfe540f4696/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6592fffc4ca720e306362c20c595dfe540f4696/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=e6592fffc4ca720e306362c20c595dfe540f4696", "patch": "@@ -3001,6 +3001,10 @@ for machine in $build $host $target; do\n \t\ttm_file=arm/aout.h\n \t\ttmake_file=arm/t-bare\n \t\t;;\n+        arm*-*-ecos-elf)\n+                tm_file=arm/ecos-elf.h\n+                tmake_file=arm/t-elf\n+                ;;\n \tarm*-*-elf)\n \t\ttm_file=arm/unknown-elf.h\n \t\ttmake_file=arm/t-arm-elf"}, {"sha": "cbde7ebbb1032700f5fd7a1e8b0968184cb67789", "filename": "gcc/configure.in", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6592fffc4ca720e306362c20c595dfe540f4696/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6592fffc4ca720e306362c20c595dfe540f4696/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=e6592fffc4ca720e306362c20c595dfe540f4696", "patch": "@@ -714,6 +714,10 @@ changequote([,])dnl\n \t\ttm_file=arm/aout.h\n \t\ttmake_file=arm/t-bare\n \t\t;;\n+        arm*-*-ecos-elf)\n+\t\ttm_file=arm/ecos-elf.h\n+\t\ttmake_file=arm/t-elf\n+\t\t;; \n \tarm*-*-elf)\n \t\ttm_file=arm/unknown-elf.h\n \t\ttmake_file=arm/t-arm-elf"}]}