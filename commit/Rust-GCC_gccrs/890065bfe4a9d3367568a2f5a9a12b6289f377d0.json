{"sha": "890065bfe4a9d3367568a2f5a9a12b6289f377d0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODkwMDY1YmZlNGE5ZDMzNjc1NjhhMmY1YTlhMTJiNjI4OWYzNzdkMA==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-01-18T15:51:12Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-01-18T15:51:12Z"}, "message": "re PR tree-optimization/38819 (trapping expression wrongly hoisted out of loop)\n\n2009-01-18  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/38819\n\t* tree-flow.h (operation_could_trap_helper_p): Declare.\n\t* tree-eh.c (operation_could_trap_helper_p): Export.\n\t* tree-ssa-sccvn.h (vn_nary_may_trap): Declare.\n\t* tree-ssa-sccvn.c (vn_nary_may_trap): New function.\n\t* tree-ssa-pre.c (insert_into_preds_of_block): Check if we\n\tare about to insert a possibly trapping instruction and fail\n\tin this case.\n\n\t* gcc.c-torture/execute/pr38819.c: New testcase.\n\nFrom-SVN: r143485", "tree": {"sha": "c3c88c9e03ec958f75cbb15702d98af42d7408c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c3c88c9e03ec958f75cbb15702d98af42d7408c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/890065bfe4a9d3367568a2f5a9a12b6289f377d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/890065bfe4a9d3367568a2f5a9a12b6289f377d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/890065bfe4a9d3367568a2f5a9a12b6289f377d0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/890065bfe4a9d3367568a2f5a9a12b6289f377d0/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a729d731c8a6dcd45760f1bd7bc5d5379ae49d2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a729d731c8a6dcd45760f1bd7bc5d5379ae49d2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a729d731c8a6dcd45760f1bd7bc5d5379ae49d2c"}], "stats": {"total": 106, "additions": 105, "deletions": 1}, "files": [{"sha": "1448c0db3a86d22670a07880eb2c66f7967d969c", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890065bfe4a9d3367568a2f5a9a12b6289f377d0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890065bfe4a9d3367568a2f5a9a12b6289f377d0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=890065bfe4a9d3367568a2f5a9a12b6289f377d0", "patch": "@@ -1,3 +1,14 @@\n+2009-01-18  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/38819\n+\t* tree-flow.h (operation_could_trap_helper_p): Declare.\n+\t* tree-eh.c (operation_could_trap_helper_p): Export.\n+\t* tree-ssa-sccvn.h (vn_nary_may_trap): Declare.\n+\t* tree-ssa-sccvn.c (vn_nary_may_trap): New function.\n+\t* tree-ssa-pre.c (insert_into_preds_of_block): Check if we\n+\tare about to insert a possibly trapping instruction and fail\n+\tin this case.\n+\n 2009-01-18  Andreas Schwab  <schwab@suse.de>\n \n \t* doc/install.texi (Configuration): Remove obsolete paragraph"}, {"sha": "43fe9a9396bb7a72a226058af30ea2680d45bb11", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890065bfe4a9d3367568a2f5a9a12b6289f377d0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890065bfe4a9d3367568a2f5a9a12b6289f377d0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=890065bfe4a9d3367568a2f5a9a12b6289f377d0", "patch": "@@ -1,3 +1,8 @@\n+2009-01-18  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/38819\n+\t* gcc.c-torture/execute/pr38819.c: New testcase.\n+\n 2009-01-17  Paul Thomas  <pault@gcc.gnu.org>\n \n \tPR fortran/38657"}, {"sha": "91ae7d82b7c0abfd637df52822b9015fb11518bc", "filename": "gcc/testsuite/gcc.c-torture/execute/pr38819.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890065bfe4a9d3367568a2f5a9a12b6289f377d0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr38819.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890065bfe4a9d3367568a2f5a9a12b6289f377d0/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr38819.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr38819.c?ref=890065bfe4a9d3367568a2f5a9a12b6289f377d0", "patch": "@@ -0,0 +1,29 @@\n+extern void exit (int);\n+extern void abort (void);\n+\n+volatile int a = 1;\n+volatile int b = 0;\n+volatile int x = 2;\n+volatile signed int r = 8;\n+\n+void __attribute__((noinline))\n+foo (void)\n+{\n+  exit (0);\n+}\n+\n+int\n+main (void)\n+{\n+  int si1 = a;\n+  int si2 = b;\n+  int i;\n+\n+  for (i = 0; i < 100; ++i) {\n+      foo ();\n+      if (x == 8)\n+\ti++;\n+      r += i + si1 % si2;\n+  }\n+  abort ();\n+}"}, {"sha": "4e95cf3d66db6c0bd8f257d694300b069aabd5fe", "filename": "gcc/tree-eh.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890065bfe4a9d3367568a2f5a9a12b6289f377d0/gcc%2Ftree-eh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890065bfe4a9d3367568a2f5a9a12b6289f377d0/gcc%2Ftree-eh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-eh.c?ref=890065bfe4a9d3367568a2f5a9a12b6289f377d0", "patch": "@@ -2067,7 +2067,7 @@ verify_eh_edges (gimple stmt)\n \f\n /* Helper function for operation_could_trap_p and stmt_could_throw_p.  */\n \n-static bool\n+bool\n operation_could_trap_helper_p (enum tree_code op,\n \t\t\t       bool fp_operation,\n \t\t\t       bool honor_trapv,"}, {"sha": "96c098ec3763834df9e3ebc732534e031fe40c16", "filename": "gcc/tree-flow.h", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890065bfe4a9d3367568a2f5a9a12b6289f377d0/gcc%2Ftree-flow.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890065bfe4a9d3367568a2f5a9a12b6289f377d0/gcc%2Ftree-flow.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-flow.h?ref=890065bfe4a9d3367568a2f5a9a12b6289f377d0", "patch": "@@ -1071,6 +1071,8 @@ static inline bool unmodifiable_var_p (const_tree);\n /* In tree-eh.c  */\n extern void make_eh_edges (gimple);\n extern bool tree_could_trap_p (tree);\n+extern bool operation_could_trap_helper_p (enum tree_code, bool, bool, bool,\n+\t\t\t\t\t   bool, tree, bool *);\n extern bool operation_could_trap_p (enum tree_code, bool, bool, tree);\n extern bool stmt_could_throw_p (gimple);\n extern bool tree_could_throw_p (tree);"}, {"sha": "0717a366bf380b6ab8d6fa78615374ed55dae69f", "filename": "gcc/tree-ssa-pre.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890065bfe4a9d3367568a2f5a9a12b6289f377d0/gcc%2Ftree-ssa-pre.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890065bfe4a9d3367568a2f5a9a12b6289f377d0/gcc%2Ftree-ssa-pre.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-pre.c?ref=890065bfe4a9d3367568a2f5a9a12b6289f377d0", "patch": "@@ -3004,6 +3004,15 @@ insert_into_preds_of_block (basic_block block, unsigned int exprnum,\n \t}\n     }\n \n+  /* Make sure we are not inserting trapping expressions.  */\n+  FOR_EACH_EDGE (pred, ei, block->preds)\n+    {\n+      bprime = pred->src;\n+      eprime = avail[bprime->index];\n+      if (eprime->kind == NARY\n+\t  && vn_nary_may_trap (PRE_EXPR_NARY (eprime)))\n+\treturn false;\n+    }\n \n   /* Make the necessary insertions.  */\n   FOR_EACH_EDGE (pred, ei, block->preds)"}, {"sha": "78af47ed5ebca88cf654b5331da119783e982ad8", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890065bfe4a9d3367568a2f5a9a12b6289f377d0/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890065bfe4a9d3367568a2f5a9a12b6289f377d0/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=890065bfe4a9d3367568a2f5a9a12b6289f377d0", "patch": "@@ -3072,3 +3072,50 @@ sort_vuses_heap (VEC (tree,heap) *vuses)\n \t   sizeof (tree),\n \t   operand_build_cmp);\n }\n+\n+\n+/* Return true if the nary operation NARY may trap.  This is a copy\n+   of stmt_could_throw_1_p adjusted to the SCCVN IL.  */\n+\n+bool\n+vn_nary_may_trap (vn_nary_op_t nary)\n+{\n+  tree type;\n+  tree rhs2;\n+  bool honor_nans = false;\n+  bool honor_snans = false;\n+  bool fp_operation = false;\n+  bool honor_trapv = false;\n+  bool handled, ret;\n+  unsigned i;\n+\n+  if (TREE_CODE_CLASS (nary->opcode) == tcc_comparison\n+      || TREE_CODE_CLASS (nary->opcode) == tcc_unary\n+      || TREE_CODE_CLASS (nary->opcode) == tcc_binary)\n+    {\n+      type = nary->type;\n+      fp_operation = FLOAT_TYPE_P (type);\n+      if (fp_operation)\n+\t{\n+\t  honor_nans = flag_trapping_math && !flag_finite_math_only;\n+\t  honor_snans = flag_signaling_nans != 0;\n+\t}\n+      else if (INTEGRAL_TYPE_P (type)\n+\t       && TYPE_OVERFLOW_TRAPS (type))\n+\thonor_trapv = true;\n+    }\n+  rhs2 = nary->op[1];\n+  ret = operation_could_trap_helper_p (nary->opcode, fp_operation,\n+\t\t\t\t       honor_trapv,\n+\t\t\t\t       honor_nans, honor_snans, rhs2,\n+\t\t\t\t       &handled);\n+  if (handled\n+      && ret)\n+    return true;\n+\n+  for (i = 0; i < nary->length; ++i)\n+    if (tree_could_trap_p (nary->op[i]))\n+      return true;\n+\n+  return false;\n+}"}, {"sha": "74f43c3df2ea429af0337f8a3b97fed3fcc701a5", "filename": "gcc/tree-ssa-sccvn.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/890065bfe4a9d3367568a2f5a9a12b6289f377d0/gcc%2Ftree-ssa-sccvn.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/890065bfe4a9d3367568a2f5a9a12b6289f377d0/gcc%2Ftree-ssa-sccvn.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.h?ref=890065bfe4a9d3367568a2f5a9a12b6289f377d0", "patch": "@@ -188,6 +188,7 @@ tree vn_phi_lookup (gimple);\n \n hashval_t vn_nary_op_compute_hash (const vn_nary_op_t);\n int vn_nary_op_eq (const void *, const void *);\n+bool vn_nary_may_trap (vn_nary_op_t);\n hashval_t vn_reference_compute_hash (const vn_reference_t);\n int vn_reference_eq (const void *, const void *);\n unsigned int get_max_value_id (void);"}]}