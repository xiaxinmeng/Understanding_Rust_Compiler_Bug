{"sha": "4c17e288380c5b3ff5350fbe83357e077b9213d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NGMxN2UyODgzODBjNWIzZmY1MzUwZmJlODMzNTdlMDc3YjkyMTNkNQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2005-10-07T18:12:11Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2005-10-07T18:12:11Z"}, "message": "re PR middle-end/24227 (ICE in compare_values, at tree-vrp.c:415)\n\n2005-10-07  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/24227\n\t* fold-const.c (fold_binary): Fix operand types during folding\n\tof X op (A, Y).  Evaluation order of the side-effects of\n\tX and A are frontend-defined, so ensure we honour that even for\n\ttcc_comparison class operands; eased by removing duplicate code.\n\n\t* gcc.c-torture/compile/pr24227.c: New testcase.\n\nFrom-SVN: r105096", "tree": {"sha": "bfb09f8e50fe34c54fd0b2b25446451c3bd85d21", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bfb09f8e50fe34c54fd0b2b25446451c3bd85d21"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/4c17e288380c5b3ff5350fbe83357e077b9213d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c17e288380c5b3ff5350fbe83357e077b9213d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4c17e288380c5b3ff5350fbe83357e077b9213d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4c17e288380c5b3ff5350fbe83357e077b9213d5/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "002a9071e6fe429c55e02c5b678b4e47282d05ca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/002a9071e6fe429c55e02c5b678b4e47282d05ca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/002a9071e6fe429c55e02c5b678b4e47282d05ca"}], "stats": {"total": 37, "additions": 24, "deletions": 13}, "files": [{"sha": "7964e0ec911ec07d6f5105383318394323d2088a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c17e288380c5b3ff5350fbe83357e077b9213d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c17e288380c5b3ff5350fbe83357e077b9213d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=4c17e288380c5b3ff5350fbe83357e077b9213d5", "patch": "@@ -1,3 +1,11 @@\n+2005-10-07  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/24227\n+\t* fold-const.c (fold_binary): Fix operand types during folding\n+\tof X op (A, Y).  Evaluation order of the side-effects of\n+\tX and A are frontend-defined, so ensure we honour that even for\n+\ttcc_comparison class operands; eased by removing duplicate code.\n+\n 2005-10-07  Steve Ellcey  <sje@cup.hp.com>\n \n \t* stor-layout.c (layout_type): Do not allow alignment of array"}, {"sha": "015930e5ca67c71ade40fd436e9f903c1797b78c", "filename": "gcc/fold-const.c", "status": "modified", "additions": 5, "deletions": 13, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c17e288380c5b3ff5350fbe83357e077b9213d5/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c17e288380c5b3ff5350fbe83357e077b9213d5/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=4c17e288380c5b3ff5350fbe83357e077b9213d5", "patch": "@@ -7113,26 +7113,18 @@ fold_binary (enum tree_code code, tree type, tree op0, tree op1)\n       return fold_convert (type, tem);\n     }\n \n-  if (TREE_CODE_CLASS (code) == tcc_comparison\n-\t   && TREE_CODE (arg0) == COMPOUND_EXPR)\n-    return build2 (COMPOUND_EXPR, type, TREE_OPERAND (arg0, 0),\n-\t\t   fold_build2 (code, type, TREE_OPERAND (arg0, 1), arg1));\n-  else if (TREE_CODE_CLASS (code) == tcc_comparison\n-\t   && TREE_CODE (arg1) == COMPOUND_EXPR)\n-    return build2 (COMPOUND_EXPR, type, TREE_OPERAND (arg1, 0),\n-\t\t   fold_build2 (code, type, arg0, TREE_OPERAND (arg1, 1)));\n-  else if (TREE_CODE_CLASS (code) == tcc_binary\n-\t   || TREE_CODE_CLASS (code) == tcc_comparison)\n+  if (TREE_CODE_CLASS (code) == tcc_binary\n+      || TREE_CODE_CLASS (code) == tcc_comparison)\n     {\n       if (TREE_CODE (arg0) == COMPOUND_EXPR)\n \treturn build2 (COMPOUND_EXPR, type, TREE_OPERAND (arg0, 0),\n-\t\t       fold_build2 (code, type, TREE_OPERAND (arg0, 1),\n-\t\t\t\t    arg1));\n+\t\t       fold_build2 (code, type,\n+\t\t\t\t    TREE_OPERAND (arg0, 1), op1));\n       if (TREE_CODE (arg1) == COMPOUND_EXPR\n \t  && reorder_operands_p (arg0, TREE_OPERAND (arg1, 0)))\n \treturn build2 (COMPOUND_EXPR, type, TREE_OPERAND (arg1, 0),\n \t\t       fold_build2 (code, type,\n-\t\t\t\t    arg0, TREE_OPERAND (arg1, 1)));\n+\t\t\t\t    op0, TREE_OPERAND (arg1, 1)));\n \n       if (TREE_CODE (arg0) == COND_EXPR || COMPARISON_CLASS_P (arg0))\n \t{"}, {"sha": "d189677cebeae5711473eab8318aa8487eb25cdc", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c17e288380c5b3ff5350fbe83357e077b9213d5/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c17e288380c5b3ff5350fbe83357e077b9213d5/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=4c17e288380c5b3ff5350fbe83357e077b9213d5", "patch": "@@ -1,3 +1,8 @@\n+2005-10-07  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/24227\n+\t* gcc.c-torture/compile/pr24227.c: New testcase.\n+\n 2005-10-07  Steve Ellcey  <sje@cup.hp.com>\n \n \t* gcc.dg/compat/struct-layout-1_generate.c (generate_fields):"}, {"sha": "a4bb44ad47ca21873127cf3ef5f0e5ad6c3f11e5", "filename": "gcc/testsuite/gcc.c-torture/compile/pr24227.c", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/4c17e288380c5b3ff5350fbe83357e077b9213d5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr24227.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/4c17e288380c5b3ff5350fbe83357e077b9213d5/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr24227.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr24227.c?ref=4c17e288380c5b3ff5350fbe83357e077b9213d5", "patch": "@@ -0,0 +1,6 @@\n+int Fdisplay_buffer   (int buffer)\n+{\n+  if (((struct buffer *) ((unsigned int) buffer)) ==\n+      (0,(struct buffer *) ((unsigned int) ((buffer) & 1))))\n+    return 1;\n+}"}]}