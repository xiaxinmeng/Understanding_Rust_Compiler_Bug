{"sha": "d288e53d0c83a81e8001d3661b4bfc455c1ebb18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDI4OGU1M2QwYzgzYTgxZTgwMDFkMzY2MWI0YmZjNDU1YzFlYmIxOA==", "commit": {"author": {"name": "David Edelsohn", "email": "edelsohn@gnu.org", "date": "2002-01-10T18:20:03Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2002-01-10T18:20:03Z"}, "message": "alias.c (find_base_value): Add cases for HIGH...\n\n2002-01-10  David Edelsohn  <edelsohn@gnu.org>\n\n        * alias.c (find_base_value): Add cases for HIGH, PRE_INC, PRE_DEC,\n        POST_INC, POST_DEC, PRE_MODIFY, and POST_MODIFY.\n        (find_base_term): Add cases for TRUNCATE, PRE_MODIFY, and POST_MODIFY.\n        Recurse for any operand of AND as long as constant is non-zero.\n\nFrom-SVN: r48741", "tree": {"sha": "b93f54fc44bdc3513c7b7850a0fbf80b3744001d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b93f54fc44bdc3513c7b7850a0fbf80b3744001d"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d288e53d0c83a81e8001d3661b4bfc455c1ebb18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d288e53d0c83a81e8001d3661b4bfc455c1ebb18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d288e53d0c83a81e8001d3661b4bfc455c1ebb18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d288e53d0c83a81e8001d3661b4bfc455c1ebb18/comments", "author": null, "committer": null, "parents": [{"sha": "ac2ee9b7e7a43987b6b7e3b8c7e97e31157deee6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ac2ee9b7e7a43987b6b7e3b8c7e97e31157deee6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ac2ee9b7e7a43987b6b7e3b8c7e97e31157deee6"}], "stats": {"total": 23, "additions": 21, "deletions": 2}, "files": [{"sha": "5a5e12e735a77eb250071faa13900b6fbfd0c55f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d288e53d0c83a81e8001d3661b4bfc455c1ebb18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d288e53d0c83a81e8001d3661b4bfc455c1ebb18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d288e53d0c83a81e8001d3661b4bfc455c1ebb18", "patch": "@@ -1,3 +1,10 @@\n+2002-01-10  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* alias.c (find_base_value): Add cases for HIGH, PRE_INC, PRE_DEC,\n+\tPOST_INC, POST_DEC, PRE_MODIFY, and POST_MODIFY.\n+\t(find_base_term): Add cases for TRUNCATE, PRE_MODIFY, and POST_MODIFY.\n+\tRecurse for any operand of AND as long as constant is non-zero.\n+\n 2002-01-10  Kazu Hirata  <kazu@hxi.com>\n \n \t* config/h8300/h8300.md: Remove constraints from expanders."}, {"sha": "a84d89439a7389a5818a1855888f672068137f30", "filename": "gcc/alias.c", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d288e53d0c83a81e8001d3661b4bfc455c1ebb18/gcc%2Falias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d288e53d0c83a81e8001d3661b4bfc455c1ebb18/gcc%2Falias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Falias.c?ref=d288e53d0c83a81e8001d3661b4bfc455c1ebb18", "patch": "@@ -849,6 +849,12 @@ find_base_value (src)\n     case ZERO_EXTEND:\n     case SIGN_EXTEND:\t/* used for NT/Alpha pointers */\n     case HIGH:\n+    case PRE_INC:\n+    case PRE_DEC:\n+    case POST_INC:\n+    case POST_DEC:\n+    case PRE_MODIFY:\n+    case POST_MODIFY:\n       return find_base_value (XEXP (src, 0));\n \n     default:\n@@ -1220,13 +1226,19 @@ find_base_term (x)\n     case REG:\n       return REG_BASE_VALUE (x);\n \n+    case TRUNCATE:\n+      if (GET_MODE_SIZE (GET_MODE (x)) < GET_MODE_SIZE (Pmode))\n+        return 0;\n+      /* Fall through.  */\n     case ZERO_EXTEND:\n     case SIGN_EXTEND:\t/* Used for Alpha/NT pointers */\n     case HIGH:\n     case PRE_INC:\n     case PRE_DEC:\n     case POST_INC:\n     case POST_DEC:\n+    case PRE_MODIFY:\n+    case POST_MODIFY:\n       return find_base_term (XEXP (x, 0));\n \n     case VALUE:\n@@ -1300,8 +1312,8 @@ find_base_term (x)\n       }\n \n     case AND:\n-      if (GET_CODE (XEXP (x, 0)) == REG && GET_CODE (XEXP (x, 1)) == CONST_INT)\n-\treturn REG_BASE_VALUE (XEXP (x, 0));\n+      if (GET_CODE (XEXP (x, 1)) == CONST_INT && INTVAL (XEXP (x, 1)) != 0)\n+\treturn find_base_term (XEXP (x, 0));\n       return 0;\n \n     case SYMBOL_REF:"}]}