{"sha": "193040a071b1170e5e22b7371d81b880f69aeae1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTkzMDQwYTA3MWIxMTcwZTVlMjJiNzM3MWQ4MWI4ODBmNjlhZWFlMQ==", "commit": {"author": {"name": "Ghjuvan Lacambre", "email": "lacambre@adacore.com", "date": "2020-10-09T14:36:45Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-11-25T13:22:24Z"}, "message": "[Ada] Fix crash on invalid `pragma Profile`\n\ngcc/ada/\n\n\t* sem_prag.adb (Analyze_Pragma): Emit error on wrong argument\n\tnkind.", "tree": {"sha": "c7fb76f77980cf6bbb3a1df0c52335037c08e6c5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c7fb76f77980cf6bbb3a1df0c52335037c08e6c5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/193040a071b1170e5e22b7371d81b880f69aeae1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/193040a071b1170e5e22b7371d81b880f69aeae1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/193040a071b1170e5e22b7371d81b880f69aeae1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/193040a071b1170e5e22b7371d81b880f69aeae1/comments", "author": {"login": "glacambre", "id": 11534587, "node_id": "MDQ6VXNlcjExNTM0NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/11534587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glacambre", "html_url": "https://github.com/glacambre", "followers_url": "https://api.github.com/users/glacambre/followers", "following_url": "https://api.github.com/users/glacambre/following{/other_user}", "gists_url": "https://api.github.com/users/glacambre/gists{/gist_id}", "starred_url": "https://api.github.com/users/glacambre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glacambre/subscriptions", "organizations_url": "https://api.github.com/users/glacambre/orgs", "repos_url": "https://api.github.com/users/glacambre/repos", "events_url": "https://api.github.com/users/glacambre/events{/privacy}", "received_events_url": "https://api.github.com/users/glacambre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "868268a8ecd1961870513ad2c49df7e1fecd92b8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/868268a8ecd1961870513ad2c49df7e1fecd92b8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/868268a8ecd1961870513ad2c49df7e1fecd92b8"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "eda8898bdb3c3905f549c095b85e4579919f6ae2", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/193040a071b1170e5e22b7371d81b880f69aeae1/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/193040a071b1170e5e22b7371d81b880f69aeae1/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=193040a071b1170e5e22b7371d81b880f69aeae1", "patch": "@@ -21494,7 +21494,11 @@ package body Sem_Prag is\n                Argx : constant Node_Id := Get_Pragma_Arg (Arg1);\n \n             begin\n-               if Chars (Argx) = Name_Ravenscar then\n+               if Nkind (Argx) /= N_Identifier then\n+                  Error_Msg_N\n+                    (\"argument of pragma Profile must be an identifier\", N);\n+\n+               elsif Chars (Argx) = Name_Ravenscar then\n                   Set_Ravenscar_Profile (Ravenscar, N);\n \n                elsif Chars (Argx) = Name_Jorvik then"}]}