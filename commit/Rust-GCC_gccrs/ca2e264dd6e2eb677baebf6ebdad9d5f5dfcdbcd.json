{"sha": "ca2e264dd6e2eb677baebf6ebdad9d5f5dfcdbcd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EyZTI2NGRkNmUyZWI2NzdiYWViZjZlYmRhZDlkNWY1ZGZjZGJjZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2013-03-17T02:37:33Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2013-03-17T02:37:33Z"}, "message": "* search.c (lookup_base): Handle NULL_TREE.\n\nFrom-SVN: r196738", "tree": {"sha": "d9789b0249ac2541f2232a3bff6da282ccbe9a40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d9789b0249ac2541f2232a3bff6da282ccbe9a40"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca2e264dd6e2eb677baebf6ebdad9d5f5dfcdbcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca2e264dd6e2eb677baebf6ebdad9d5f5dfcdbcd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca2e264dd6e2eb677baebf6ebdad9d5f5dfcdbcd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca2e264dd6e2eb677baebf6ebdad9d5f5dfcdbcd/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "b7df43cdb4108016f6cbf511a65194384792e34d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b7df43cdb4108016f6cbf511a65194384792e34d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b7df43cdb4108016f6cbf511a65194384792e34d"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "c0e15426719fed322ff7a2bb9188bef880bd5ffd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2e264dd6e2eb677baebf6ebdad9d5f5dfcdbcd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2e264dd6e2eb677baebf6ebdad9d5f5dfcdbcd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ca2e264dd6e2eb677baebf6ebdad9d5f5dfcdbcd", "patch": "@@ -1,5 +1,7 @@\n 2013-03-16  Jason Merrill  <jason@redhat.com>\n \n+\t* search.c (lookup_base): Handle NULL_TREE.\n+\n \tPR c++/56481\n \t* semantics.c (potential_constant_expression_1): Use of 'this' in\n \ta non-constexpr function makes the expression not potentially"}, {"sha": "54a5e4ae75db6b9fea3f084e48af1d95635fb4d6", "filename": "gcc/cp/search.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca2e264dd6e2eb677baebf6ebdad9d5f5dfcdbcd/gcc%2Fcp%2Fsearch.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca2e264dd6e2eb677baebf6ebdad9d5f5dfcdbcd/gcc%2Fcp%2Fsearch.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fsearch.c?ref=ca2e264dd6e2eb677baebf6ebdad9d5f5dfcdbcd", "patch": "@@ -188,6 +188,14 @@ lookup_base (tree t, tree base, base_access access,\n   tree t_binfo;\n   base_kind bk;\n \n+  /* \"Nothing\" is definitely not derived from Base.  */\n+  if (t == NULL_TREE)\n+    {\n+      if (kind_ptr)\n+\t*kind_ptr = bk_not_base;\n+      return NULL_TREE;\n+    }\n+\n   if (t == error_mark_node || base == error_mark_node)\n     {\n       if (kind_ptr)"}]}