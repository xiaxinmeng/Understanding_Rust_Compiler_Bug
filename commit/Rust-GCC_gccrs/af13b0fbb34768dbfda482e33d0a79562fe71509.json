{"sha": "af13b0fbb34768dbfda482e33d0a79562fe71509", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWYxM2IwZmJiMzQ3NjhkYmZkYTQ4MmUzM2QwYTc5NTYyZmU3MTUwOQ==", "commit": {"author": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-02-18T18:54:34Z"}, "committer": {"name": "Doug Evans", "email": "dje@gnu.org", "date": "1995-02-18T18:54:34Z"}, "message": "(output_constructor): Fix typo byte_size -> size.\n\nFrom-SVN: r8968", "tree": {"sha": "01d41da17aedeafb2853d2c16b739efeb7acc18e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01d41da17aedeafb2853d2c16b739efeb7acc18e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af13b0fbb34768dbfda482e33d0a79562fe71509", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af13b0fbb34768dbfda482e33d0a79562fe71509", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af13b0fbb34768dbfda482e33d0a79562fe71509", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af13b0fbb34768dbfda482e33d0a79562fe71509/comments", "author": null, "committer": null, "parents": [{"sha": "4e95c4d02eae645ca3d4b9d93d77a30452d8b0d8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4e95c4d02eae645ca3d4b9d93d77a30452d8b0d8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4e95c4d02eae645ca3d4b9d93d77a30452d8b0d8"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "989e08f85d8ed51d37f8db1394f08c05e5936272", "filename": "gcc/varasm.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af13b0fbb34768dbfda482e33d0a79562fe71509/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af13b0fbb34768dbfda482e33d0a79562fe71509/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=af13b0fbb34768dbfda482e33d0a79562fe71509", "patch": "@@ -3519,13 +3519,13 @@ output_constant (exp, size)\n       if (TREE_CODE (exp) == INTEGER_CST)\n \tassemble_integer (expand_expr (exp, NULL_RTX,\n \t\t\t\t       VOIDmode, EXPAND_INITIALIZER),\n-\t\t\t  byte_size, 1);\n+\t\t\t  size, 1);\n       else if (TREE_CODE (exp) == CONSTRUCTOR)\n \t{\n-\t  unsigned char *buffer = (unsigned char *) alloca (byte_size);\n-\t  if (get_set_constructor_bytes (constructor, buffer, byte_size))\n+\t  unsigned char *buffer = (unsigned char *) alloca (size);\n+\t  if (get_set_constructor_bytes (exp, buffer, size))\n \t    abort ();\n-\t  assemble_string (buffer, byte_size);\n+\t  assemble_string (buffer, size);\n \t}\n       else\n \terror (\"unknown set constructor type\");"}]}