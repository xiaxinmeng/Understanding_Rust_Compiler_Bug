{"sha": "a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTE3YzlmMmVhMWVjZWM3MTE2OWVmZjQwYzU5MWNhM2JmODMwN2EzMg==", "commit": {"author": {"name": "Michael Koch", "email": "konqueror@gmx.de", "date": "2004-04-20T14:45:10Z"}, "committer": {"name": "Michael Koch", "email": "mkoch@gcc.gnu.org", "date": "2004-04-20T14:45:10Z"}, "message": "MarshalledObject.java, [...]: Fixed javadoc, coding style and argument names all over.\n\n2004-04-20  Michael Koch  <konqueror@gmx.de>\n\n\t* java/rmi/MarshalledObject.java,\n\tjava/rmi/Naming.java,\n\tjava/rmi/RemoteException.java,\n\tjava/rmi/activation/ActivationException.java,\n\tjava/rmi/server/ServerCloneException.java,\n\tjava/security/AccessController.java,\n\tjava/security/AlgorithmParameterGenerator.java,\n\tjava/security/AlgorithmParameters.java,\n\tjava/security/CodeSource.java,\n\tjava/security/Identity.java,\n\tjava/security/IdentityScope.java,\n\tjava/security/KeyPairGenerator.java,\n\tjava/security/KeyStore.java,\n\tjava/security/Security.java,\n\tjava/security/Signature.java,\n\tjava/security/SignatureSpi.java,\n\tjava/security/SignedObject.java,\n\tjava/security/spec/DSAParameterSpec.java,\n\tjava/security/spec/DSAPrivateKeySpec.java,\n\tjava/security/spec/DSAPublicKeySpec.java,\n\tjava/sql/Array.java,\n\tjava/sql/DatabaseMetaData.java,\n\tjava/sql/ResultSet.java,\n\tjava/text/ChoiceFormat.java,\n\tjava/text/CollationElementIterator.java,\n\tjava/text/CollationKey.java,\n\tjava/text/Collator.java,\n\tjava/text/DateFormat.java,\n\tjava/text/DateFormatSymbols.java,\n\tjava/text/DecimalFormatSymbols.java,\n\tjava/text/Format.java,\n\tjava/text/ParsePosition.java,\n\tjava/text/RuleBasedCollator.java,\n\tjava/text/SimpleDateFormat.java,\n\tjava/text/StringCharacterIterator.java,\n\tjava/util/Collections.java,\n\tjava/util/PropertyResourceBundle.java,\n\tjava/util/ResourceBundle.java,\n\tjava/util/StringTokenizer.java,\n\tjava/util/jar/Attributes.java,\n\tjava/util/logging/ConsoleHandler.java,\n\tjava/util/logging/LogManager.java,\n\tjava/util/logging/MemoryHandler.java,\n\tjava/util/logging/SocketHandler.java,\n\tjavax/naming/NamingException.java:\n\tFixed javadoc, coding style and argument names all over.\n\nFrom-SVN: r80906", "tree": {"sha": "2f1b4325d5c68c60284c5788c751fe9dfe6a3579", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2f1b4325d5c68c60284c5788c751fe9dfe6a3579"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/comments", "author": null, "committer": null, "parents": [{"sha": "386d3a1616016db1b84351554de4aa643fe0d92a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/386d3a1616016db1b84351554de4aa643fe0d92a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/386d3a1616016db1b84351554de4aa643fe0d92a"}], "stats": {"total": 827, "additions": 441, "deletions": 386}, "files": [{"sha": "e53db66f8baaa1b8afcc0e69b040dae455b62045", "filename": "libjava/ChangeLog", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -1,3 +1,52 @@\n+2004-04-20  Michael Koch  <konqueror@gmx.de>\n+\n+\t* java/rmi/MarshalledObject.java,\n+\tjava/rmi/Naming.java,\n+\tjava/rmi/RemoteException.java,\n+\tjava/rmi/activation/ActivationException.java,\n+\tjava/rmi/server/ServerCloneException.java,\n+\tjava/security/AccessController.java,\n+\tjava/security/AlgorithmParameterGenerator.java,\n+\tjava/security/AlgorithmParameters.java,\n+\tjava/security/CodeSource.java,\n+\tjava/security/Identity.java,\n+\tjava/security/IdentityScope.java,\n+\tjava/security/KeyPairGenerator.java,\n+\tjava/security/KeyStore.java,\n+\tjava/security/Security.java,\n+\tjava/security/Signature.java,\n+\tjava/security/SignatureSpi.java,\n+\tjava/security/SignedObject.java,\n+\tjava/security/spec/DSAParameterSpec.java,\n+\tjava/security/spec/DSAPrivateKeySpec.java,\n+\tjava/security/spec/DSAPublicKeySpec.java,\n+\tjava/sql/Array.java,\n+\tjava/sql/DatabaseMetaData.java,\n+\tjava/sql/ResultSet.java,\n+\tjava/text/ChoiceFormat.java,\n+\tjava/text/CollationElementIterator.java,\n+\tjava/text/CollationKey.java,\n+\tjava/text/Collator.java,\n+\tjava/text/DateFormat.java,\n+\tjava/text/DateFormatSymbols.java,\n+\tjava/text/DecimalFormatSymbols.java,\n+\tjava/text/Format.java,\n+\tjava/text/ParsePosition.java,\n+\tjava/text/RuleBasedCollator.java,\n+\tjava/text/SimpleDateFormat.java,\n+\tjava/text/StringCharacterIterator.java,\n+\tjava/util/Collections.java,\n+\tjava/util/PropertyResourceBundle.java,\n+\tjava/util/ResourceBundle.java,\n+\tjava/util/StringTokenizer.java,\n+\tjava/util/jar/Attributes.java,\n+\tjava/util/logging/ConsoleHandler.java,\n+\tjava/util/logging/LogManager.java,\n+\tjava/util/logging/MemoryHandler.java,\n+\tjava/util/logging/SocketHandler.java,\n+\tjavax/naming/NamingException.java:\n+\tFixed javadoc, coding style and argument names all over.\n+\n 2004-04-20  Jeroen Frijters  <jeroen@frijters.net>\n \n \t* java/io/FileDescriptor.java: (FileDescriptor) Added public"}, {"sha": "ef22310c7b1b7fd7eec5b272fe24894f4bc86ec7", "filename": "libjava/java/rmi/MarshalledObject.java", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Frmi%2FMarshalledObject.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Frmi%2FMarshalledObject.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2FMarshalledObject.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -1,5 +1,5 @@\n /*\n-  Copyright (c) 1996, 1997, 1998, 1999 Free Software Foundation, Inc.\n+  Copyright (c) 1996, 1997, 1998, 1999, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -46,8 +46,7 @@\n /**\n  * FIXME - doc missing\n  */\n-public final class MarshalledObject\n-  extends Object implements Serializable \n+public final class MarshalledObject implements Serializable \n {\n   \n   //The following fields are from Java API Documentation \"Serialized form\""}, {"sha": "1a30c1f2c07564fb8a4d342d0cd5ab922d74873b", "filename": "libjava/java/rmi/Naming.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Frmi%2FNaming.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Frmi%2FNaming.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2FNaming.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -44,14 +44,16 @@\n \n public final class Naming {\n \n-/** <pre>\n+/**\n  * Looks for the remote object that is associated with the named service.\n  * Name and location is given in form of a URL without a scheme:\n- * \n- *   //host:port/service-name\n+ *\n+ * <pre>\n+ * //host:port/service-name\n+ * </pre>\n  *  \n  * The port is optional.\n- * </pre>\n+ * \n  * @param name the service name and location\n  * @return Remote-object that implements the named service\n  * @throws NotBoundException if no object implements the service"}, {"sha": "b28f0709099abaafbef6d82873a38b7756f90048", "filename": "libjava/java/rmi/RemoteException.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Frmi%2FRemoteException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Frmi%2FRemoteException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2FRemoteException.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -99,7 +99,7 @@ public RemoteException(String s, Throwable e)\n    * This method returns a message indicating what went wrong, in this\n    * format:\n    * <code>super.getMessage() + (detail == null ? \"\"\n-   *    : \"; nested exception is:\\n\\t\" + detail)<code>.\n+   *    : \"; nested exception is:\\n\\t\" + detail)</code>.\n    *\n    * @return the chained message\n    */"}, {"sha": "a335142ce47c0c122c594b1023c78833cd1965aa", "filename": "libjava/java/rmi/activation/ActivationException.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Frmi%2Factivation%2FActivationException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Frmi%2Factivation%2FActivationException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Factivation%2FActivationException.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -94,7 +94,7 @@ public ActivationException(String s, Throwable ex)\n    * This method returns a message indicating what went wrong, in this\n    * format:\n    * <code>super.getMessage() + (detail == null ? \"\"\n-   *    : \"; nested exception is:\\n\\t\" + detail)<code>.\n+   *    : \"; nested exception is:\\n\\t\" + detail)</code>.\n    *\n    * @return the chained message\n    */"}, {"sha": "3334c8d95b2d06163e15b6f7a0c181395919de85", "filename": "libjava/java/rmi/server/ServerCloneException.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Frmi%2Fserver%2FServerCloneException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Frmi%2Fserver%2FServerCloneException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Frmi%2Fserver%2FServerCloneException.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -89,7 +89,7 @@ public ServerCloneException(String s, Exception e)\n    * This method returns a message indicating what went wrong, in this\n    * format:\n    * <code>super.getMessage() + (detail == null ? \"\"\n-   *    : \"; nested exception is:\\n\\t\" + detail)<code>.\n+   *    : \"; nested exception is:\\n\\t\" + detail)</code>.\n    *\n    * @return the chained message\n    */"}, {"sha": "66aed9e38983438f130a7fc7a512eb797e3a8ec0", "filename": "libjava/java/security/AccessController.java", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FAccessController.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FAccessController.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FAccessController.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -1,5 +1,5 @@\n /* AccessController.java --- Access control context and permission checker\n-   Copyright (C) 2001 Free Software Foundation, Inc.\n+   Copyright (C) 2001, 2004  Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -91,7 +91,7 @@ public static void checkPermission(Permission perm)\n    *\n    * @param action the <code>PrivilegedAction</code> whose <code>run()</code>\n    * should be be called.\n-   * @returns the result of the <code>action.run()</code> method.\n+   * @return the result of the <code>action.run()</code> method.\n    */\n   public static Object doPrivileged(PrivilegedAction action)\n   {\n@@ -110,7 +110,7 @@ public static Object doPrivileged(PrivilegedAction action)\n    * should be be called.\n    * @param context the <code>AccessControlContext</code> whose protection\n    * domains should be added to the protection domain of the calling class.\n-   * @returns the result of the <code>action.run()</code> method.\n+   * @return the result of the <code>action.run()</code> method.\n    */\n   public static Object doPrivileged(PrivilegedAction action,\n \t\t\t\t    AccessControlContext context)\n@@ -130,7 +130,7 @@ public static Object doPrivileged(PrivilegedAction action,\n    *\n    * @param action the <code>PrivilegedExceptionAction</code> whose\n    * <code>run()</code> should be be called.\n-   * @returns the result of the <code>action.run()</code> method.\n+   * @return the result of the <code>action.run()</code> method.\n    * @exception PrivilegedActionException wrapped around any exception that\n    * is thrown in the <code>run()</code> method.\n    */\n@@ -162,7 +162,7 @@ public static Object doPrivileged(PrivilegedExceptionAction action)\n    * <code>run()</code> should be be called.\n    * @param context the <code>AccessControlContext</code> whose protection\n    * domains should be added to the protection domain of the calling class.\n-   * @returns the result of the <code>action.run()</code> method.\n+   * @return the result of the <code>action.run()</code> method.\n    * @exception PrivilegedActionException wrapped around any exception that\n    * is thrown in the <code>run()</code> method.\n    */"}, {"sha": "034302504f05ece77ffcd7a04ac3cc9e7ab9d15e", "filename": "libjava/java/security/AlgorithmParameterGenerator.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FAlgorithmParameterGenerator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FAlgorithmParameterGenerator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FAlgorithmParameterGenerator.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -67,7 +67,7 @@\n  *  system parameters, for example, the parameter generation values usually\n  *  consist of the size of the prime modulus and the size of the random\n  *  exponent, both specified in number of bits.</li>\n- * <ul>\n+ * </ul>\n  *\n  * <p>In case the client does not explicitly initialize the\n  * <code>AlgorithmParameterGenerator</code> (via a call to an <code>init()</code>"}, {"sha": "86298b9ea9348c1ad6531a3f0cf22aa2adab649f", "filename": "libjava/java/security/AlgorithmParameters.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FAlgorithmParameters.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FAlgorithmParameters.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FAlgorithmParameters.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -71,7 +71,7 @@\n  * parameter specification or parameter encoding.</p>\n  *\n  * <p>A transparent parameter specification is obtained from an\n- * <ocde>AlgorithmParameters</code> object via a call to\n+ * <code>AlgorithmParameters</code> object via a call to\n  * <code>getParameterSpec()</code>, and a byte encoding of the parameters is\n  * obtained via a call to <code>getEncoded()</code>.</p>\n  *"}, {"sha": "35ec573cd9bf5daf9fc4f7745d78e504f1c36d1a", "filename": "libjava/java/security/CodeSource.java", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FCodeSource.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FCodeSource.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FCodeSource.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -159,17 +159,22 @@ public final Certificate[] getCertificates()\n    * object must have all the certifcates this object has (but may have more),\n    * and must have a location that is a subset of this object's.  In order\n    * for this object to imply the specified object, the following must be\n-   * true:<ol>\n+   * true:\n+   *\n+   * <ol>\n    * <li><em>codesource</em> must not be <code>null</code>.</li>\n    * <li>If <em>codesource</em> has a certificate list, all of it's\n    *     certificates must be present in the certificate list of this\n    *     code source.</li>\n    * <li>If this object does not have a <code>null</code> location, then\n-   *     the following addtional tests must be passed.<ol>\n+   *     the following addtional tests must be passed.\n+   *\n+   *     <ol>\n    *     <li><em>codesource</em> must not have a <code>null</code>\n    *         location.</li>\n    *     <li><em>codesource</em>'s location must be equal to this object's\n-   *         location, or<br><ul>\n+   *         location, or\n+   *         <ul>\n    *         <li><em>codesource</em>'s location protocol, port, and ref (aka,\n    *             anchor) must equal this objects</li>\n    *         <li><em>codesource</em>'s location host must imply this object's\n@@ -183,19 +188,21 @@ public final Certificate[] getCertificates()\n    *             location file must start with this object's location file\n    *             with the '/' character appended to it.</li>\n    *         </ul></li>\n-   *     </ol>\n+   *     </ol></li>\n    * </ol>\n    *\n    * <p>For example, each of these locations imply the location\n-   * \"http://java.sun.com/classes/foo.jar\":<ul>\n+   * \"http://java.sun.com/classes/foo.jar\":</p>\n+   * \n    * <pre>\n    * http:\n    * http://*.sun.com/classes/*\n    * http://java.sun.com/classes/-\n    * http://java.sun.com/classes/foo.jar\n    * </pre>\n-   * Note that the code source with null location and null certificates implies\n-   * all other code sources.\n+   * \n+   * <p>Note that the code source with null location and null certificates implies\n+   * all other code sources.</p>\n    *\n    * @param cs the <code>CodeSource</code> to test against this object\n    * @return true if this specified <code>CodeSource</code> is implied\n@@ -245,7 +252,7 @@ public boolean implies(CodeSource cs)\n   /**\n    * This method returns a <code>String</code> that represents this object.\n    * The result is in the format <code>\"(\" + getLocation()</code> followed\n-   * by a space separated list of certificates (or \"<no certificates>\"),\n+   * by a space separated list of certificates (or \"&lt;no certificates&gt;\"),\n    * followed by <code>\")\"</code>.\n    *\n    * @return a <code>String</code> for this object"}, {"sha": "2e9ddea1a2972afbc49bc471ac5e40ea4f1804ec", "filename": "libjava/java/security/Identity.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FIdentity.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FIdentity.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FIdentity.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -151,7 +151,7 @@ public PublicKey getPublicKey()\n    * @throws KeyManagementException if another identity in the identity's scope\n    * has the same public key, or if another exception occurs.\n    * @throws SecurityException if a security manager exists and its\n-   * <code>checkSecurityAccess()<code> method doesn't allow setting the public\n+   * <code>checkSecurityAccess()</code> method doesn't allow setting the public\n    * key.\n    * @see #getPublicKey()\n    * @see SecurityManager#checkSecurityAccess(String)"}, {"sha": "5965a00a122c19e2cb2e969da23bf88d06a3b395", "filename": "libjava/java/security/IdentityScope.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FIdentityScope.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FIdentityScope.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FIdentityScope.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -123,15 +123,15 @@ public static IdentityScope getSystemScope()\n   }\n \n   /**\n-   * <p>Sets the system's identity scope.</p>\n+   * Sets the system's identity scope.\n    *\n    * <p>First, if there is a security manager, its <code>checkSecurityAccess()\n    * </code> method is called with <code>\"setSystemScope\"</code> as its argument\n    * to see if it's ok to set the identity scope.</p>\n    *\n    * @param scope the scope to set.\n    * @throws SecurityException if a security manager exists and its\n-   * <code>checkSecurityAccess()<code> method doesn't allow setting the\n+   * <code>checkSecurityAccess()</code> method doesn't allow setting the\n    * identity scope.\n    * @see #getSystemScope()\n    * @see SecurityManager#checkSecurityAccess(String)"}, {"sha": "9a3a04d4ef82a9728edb42a9a68a6d06aaa1ec9c", "filename": "libjava/java/security/KeyPairGenerator.java", "status": "modified", "additions": 34, "deletions": 35, "changes": 69, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FKeyPairGenerator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FKeyPairGenerator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FKeyPairGenerator.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -56,43 +56,42 @@\n  * two is the initialization of the object:</p>\n  *\n  * <ul>\n- *    <li><b>Algorithm-Independent Initialization</b><br/>\n- *    All key pair generators share the concepts of a <i>keysize</i> and a\n- *    <i>source of randomness</i>. The <i>keysize</i> is interpreted differently\n- *    for different algorithms (e.g., in the case of the <i>DSA</i> algorithm,\n- *    the <i>keysize</i> corresponds to the length of the modulus). There is an\n- *    <code>initialize()</code> method in this <code>KeyPairGenerator</code>\n- *    class that takes these two universally shared types of arguments. There\n- *    is also one that takes just a <i>keysize</i> argument, and uses the\n- *    {@link SecureRandom} implementation of the highest-priority installed\n- *    provider as the <i>source of randomness</i>. (If none of the installed\n- *    providers supply an implementation of {@link SecureRandom}, a\n- *    system-provided source of randomness is used.)<br/><br/>\n+ * <li><b>Algorithm-Independent Initialization</b><br/>\n+ *     All key pair generators share the concepts of a <i>keysize</i> and a\n+ *     <i>source of randomness</i>. The <i>keysize</i> is interpreted differently\n+ *     for different algorithms (e.g., in the case of the <i>DSA</i> algorithm,\n+ *     the <i>keysize</i> corresponds to the length of the modulus). There is an\n+ *     <code>initialize()</code> method in this <code>KeyPairGenerator</code>\n+ *     class that takes these two universally shared types of arguments. There\n+ *     is also one that takes just a <i>keysize</i> argument, and uses the\n+ *     {@link SecureRandom} implementation of the highest-priority installed\n+ *     provider as the <i>source of randomness</i>. (If none of the installed\n+ *     providers supply an implementation of {@link SecureRandom}, a\n+ *     system-provided source of randomness is used.)\n  *\n- *    Since no other parameters are specified when you call the above\n- *    algorithm-independent initialize methods, it is up to the provider what\n- *    to do about the algorithm-specific parameters (if any) to be associated\n- *    with each of the keys.<br/><br/>\n+ *     <p>Since no other parameters are specified when you call the above\n+ *     algorithm-independent initialize methods, it is up to the provider what\n+ *     to do about the algorithm-specific parameters (if any) to be associated\n+ *     with each of the keys.</p>\n  *\n- *    If the algorithm is the <i>DSA</i> algorithm, and the <i>keysize</i>\n- *    (modulus size) is <code>512</code>, <code>768</code>, or <code>1024</code>,\n- *    then the <b>GNU</b> provider uses a set of precomputed values for the\n- *    <code>p</code>, <code>q</code>, and <code>g</code> parameters. If the\n- *    <i>modulus size</i> is not one of the above values, the <b>GNU</b>\n- *    provider creates a new set of parameters. Other providers might have\n- *    precomputed parameter sets for more than just the three modulus sizes\n- *    mentioned above. Still others might not have a list of precomputed\n- *    parameters at all and instead always create new parameter sets.<br/></li>\n- *\n- *    <li><b>Algorithm-Specific Initialization</b><br/>\n- *    For situations where a set of algorithm-specific parameters already\n- *    exists (e.g., so-called <i>community parameters</i> in <i>DSA</i>), there\n- *    are two initialize methods that have an {@link AlgorithmParameterSpec}\n- *    argument. One also has a {@link SecureRandom} argument, while the the\n- *    other uses the {@link SecureRandom} implementation of the highest-priority\n- *    installed provider as the source of randomness. (If none of the installed\n- *    providers supply an implementation of {@link SecureRandom}, a\n- *    system-provided source of randomness is used.)</li>\n+ *     <p>If the algorithm is the <i>DSA</i> algorithm, and the <i>keysize</i>\n+ *     (modulus size) is <code>512</code>, <code>768</code>, or <code>1024</code>,\n+ *     then the <b>GNU</b> provider uses a set of precomputed values for the\n+ *     <code>p</code>, <code>q</code>, and <code>g</code> parameters. If the\n+ *     <i>modulus size</i> is not one of the above values, the <b>GNU</b>\n+ *     provider creates a new set of parameters. Other providers might have\n+ *     precomputed parameter sets for more than just the three modulus sizes\n+ *     mentioned above. Still others might not have a list of precomputed\n+ *     parameters at all and instead always create new parameter sets.</p></li>\n+ * <li><b>Algorithm-Specific Initialization</b><br/>\n+ *     For situations where a set of algorithm-specific parameters already\n+ *     exists (e.g., so-called <i>community parameters</i> in <i>DSA</i>), there\n+ *     are two initialize methods that have an {@link AlgorithmParameterSpec}\n+ *     argument. One also has a {@link SecureRandom} argument, while the the\n+ *     other uses the {@link SecureRandom} implementation of the highest-priority\n+ *     installed provider as the source of randomness. (If none of the installed\n+ *     providers supply an implementation of {@link SecureRandom}, a\n+ *     system-provided source of randomness is used.)</li>\n  * </ul>\n  *\n  * <p>In case the client does not explicitly initialize the"}, {"sha": "4ca16a2290eaf1f08456dd077d3cad223fa2afd6", "filename": "libjava/java/security/KeyStore.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FKeyStore.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FKeyStore.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FKeyStore.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -208,7 +208,7 @@ public static KeyStore getInstance(String type, Provider provider)\n \n   /**\n    * Returns the default KeyStore type. This method looks up the\n-   * type in <JAVA_HOME>/lib/security/java.security with the \n+   * type in &lt;JAVA_HOME&gt;/lib/security/java.security with the \n    * property \"keystore.type\" or if that fails then \"jks\" .\n    */\n   public static final String getDefaultType()"}, {"sha": "d7edf20656ff93fb9ef12b6f1b5a8932fec6a970", "filename": "libjava/java/security/Security.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FSecurity.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FSecurity.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSecurity.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -1,5 +1,5 @@\n /* Security.java --- Java base security class implementation\n-   Copyright (C) 1999, 2001, 2002, 2003, Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2001, 2002, 2003, 2004, Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -59,7 +59,7 @@\n  *\n  * @author Mark Benvenuto <ivymccough@worldnet.att.net>\n  */\n-public final class Security extends Object\n+public final class Security\n {\n   private static final String ALG_ALIAS = \"Alg.Alias.\";\n \n@@ -670,7 +670,7 @@ private static boolean provides(Provider p, String svc, String algo,\n     outer: for (int r = 0; r < 3; r++) // guard against circularity\n       {\n         serviceDotAlgorithm = (svc+\".\"+String.valueOf(algo)).trim();\n-        inner: for (it = p.keySet().iterator(); it.hasNext(); )\n+        for (it = p.keySet().iterator(); it.hasNext(); )\n           {\n             key = (String) it.next();\n             if (key.equalsIgnoreCase(serviceDotAlgorithm)) // eureka"}, {"sha": "bf614e388b3fe43694ce81b1e13e7be4d26dbf2b", "filename": "libjava/java/security/Signature.java", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FSignature.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FSignature.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSignature.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -83,20 +83,20 @@\n  * either signing data or verifying a signature:</p>\n  *\n  * <ol>\n- *    <li>Initialization, with either\n- *      <ul>\n- *        <li>a public key, which initializes the signature for verification\n- *        (see <code>initVerify()</code>), or</li>\n- *        <li>a private key (and optionally a Secure Random Number Generator),\n- *        which initializes the signature for signing (see\n- *        {@link #initSign(PrivateKey)} and {@link #initSign(PrivateKey, SecureRandom)}\n- *        ).</li>\n- *      </ul></li>\n- *    <li>Updating<br/>\n- *      Depending on the type of initialization, this will update the bytes to\n- *      be signed or verified. See the update methods.<br/></li>\n- *    <li>Signing or Verifying a signature on all updated bytes. See the\n- *    <code>sign()</code> methods and the <code>verify()</code> method.</li>\n+ * <li>Initialization, with either\n+ *     <ul>\n+ *     <li>a public key, which initializes the signature for verification\n+ *         (see <code>initVerify()</code>), or</li>\n+ *     <li>a private key (and optionally a Secure Random Number Generator),\n+ *         which initializes the signature for signing (see\n+ *         {@link #initSign(PrivateKey)} and {@link #initSign(PrivateKey, SecureRandom)}\n+ *         ).</li>\n+ *     </ul></li>\n+ * <li>Updating<br/>\n+ *     Depending on the type of initialization, this will update the bytes to\n+ *     be signed or verified. See the update methods.<br/></li>\n+ * <li>Signing or Verifying a signature on all updated bytes. See the\n+ *     <code>sign()</code> methods and the <code>verify()</code> method.</li>\n  *  </ol>\n  *\n  * <p>Note that this class is abstract and extends from {@link SignatureSpi} for\n@@ -105,7 +105,7 @@\n  * superclass are intended for cryptographic service providers who wish to\n  * supply their own implementations of digital signature algorithms.\n  *\n- * @author Mark Benvenuto <ivymccough@worldnet.att.net>\n+ * @author Mark Benvenuto  (ivymccough@worldnet.att.net)\n  */\n public abstract class Signature extends SignatureSpi\n {"}, {"sha": "bf2382d8e407151d939fbc75bcf24d25b90a474e", "filename": "libjava/java/security/SignatureSpi.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FSignatureSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FSignatureSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSignatureSpi.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -279,7 +279,7 @@ protected AlgorithmParameters engineGetParameters()\n    * @param param the string name of the parameter.\n    * @return the object that represents the parameter value, or <code>null</code>\n    * if there is none.\n-   * @throws InvalidParameterException if <code>param<?code> is an invalid\n+   * @throws InvalidParameterException if <code>param</code> is an invalid\n    * parameter for this engine, or another exception occurs while trying to get\n    * this parameter.\n    * @deprecated"}, {"sha": "0d9f733e70daddc54aa5ed84ae14118e9c5be8ea", "filename": "libjava/java/security/SignedObject.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FSignedObject.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2FSignedObject.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2FSignedObject.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -98,7 +98,7 @@\n  * <p>The signature algorithm can be, among others, the NIST standard <i>DSS</i>,\n  * using <i>DSA</i> and <i>SHA-1</i>. The algorithm is specified using the same\n  * convention as that for signatures. The <i>DSA</i> algorithm using the\n- * </i>SHA-1</i> message digest algorithm can be specified, for example, as\n+ * <i>SHA-1</i> message digest algorithm can be specified, for example, as\n  * <code>\"SHA/DSA\"</code> or <code>\"SHA-1/DSA\"</code> (they are equivalent). In\n  * the case of <i>RSA</i>, there are multiple choices for the message digest\n  * algorithm, so the signing algorithm could be specified as, for example,"}, {"sha": "5c7911f7420e2c64cc200b1f699a67f46720bda1", "filename": "libjava/java/security/spec/DSAParameterSpec.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2Fspec%2FDSAParameterSpec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2Fspec%2FDSAParameterSpec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fspec%2FDSAParameterSpec.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -1,5 +1,5 @@\n /* DSAParameterSpec.java --- DSA Parameter Specificaton class\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -48,7 +48,7 @@\n \n \t@author Mark Benvenuto\n */\n-public class DSAParameterSpec extends Object implements AlgorithmParameterSpec, DSAParams\n+public class DSAParameterSpec implements AlgorithmParameterSpec, DSAParams\n {\n   private BigInteger p = null;\n   private BigInteger q = null;"}, {"sha": "c148481ca50e2146567127775ae09c0880fe7d54", "filename": "libjava/java/security/spec/DSAPrivateKeySpec.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2Fspec%2FDSAPrivateKeySpec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2Fspec%2FDSAPrivateKeySpec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fspec%2FDSAPrivateKeySpec.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -1,5 +1,5 @@\n /* DSAPrivateKeySpec.java --- DSA Private Key Specificaton class\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -47,7 +47,7 @@\n \n \t@author Mark Benvenuto\n */\n-public class DSAPrivateKeySpec extends Object implements KeySpec \n+public class DSAPrivateKeySpec implements KeySpec \n {\n   private BigInteger x = null;\n   private BigInteger p = null;"}, {"sha": "687f8dd10fd08ec0d142c80468434b12f227d999", "filename": "libjava/java/security/spec/DSAPublicKeySpec.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2Fspec%2FDSAPublicKeySpec.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsecurity%2Fspec%2FDSAPublicKeySpec.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsecurity%2Fspec%2FDSAPublicKeySpec.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -1,5 +1,5 @@\n /* DSAPublicKeySpec.java --- DSA Public Key Specificaton class\n-   Copyright (C) 1999 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2004 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -47,7 +47,7 @@\n \n \t@author Mark Benvenuto\n */\n-public class DSAPublicKeySpec extends Object implements KeySpec \n+public class DSAPublicKeySpec implements KeySpec \n {\n   private BigInteger y = null;\n   private BigInteger p = null;"}, {"sha": "3246c86f8e8400cde68a9eedaa1634c7a90b1289", "filename": "libjava/java/sql/Array.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsql%2FArray.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsql%2FArray.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsql%2FArray.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -165,13 +165,13 @@ public interface Array\n   /**\n    * This method returns a portion of the array as a <code>ResultSet</code>.\n    * The returned portion will start at <code>index</code> into the\n-   * array and up to <cod>count</code> elements will be returned.\n-   * <p>\n-   * Each row of the result set will have two columns.  The first will be\n+   * array and up to <code>count</code> elements will be returned.\n+   *\n+   * <p> Each row of the result set will have two columns.  The first will be\n    * the index into the array of that row's contents.  The second will be\n    * the actual value of that array element.  The specified <code>Map</code>\n    * will be used to override selected default mappings of SQL types to\n-   * Java classes.\n+   * Java classes.</p>\n    *\n    * @param offset The index into the array to start returning elements from.\n    * @param length The requested number of elements to return."}, {"sha": "cd20691b7d7b9c4d54802e9491554bbbdf0814dd", "filename": "libjava/java/sql/DatabaseMetaData.java", "status": "modified", "additions": 180, "deletions": 180, "changes": 360, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsql%2FDatabaseMetaData.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsql%2FDatabaseMetaData.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsql%2FDatabaseMetaData.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -412,7 +412,7 @@ public interface DatabaseMetaData\n    * each table.\n    *\n    * @return <code>true</code> if the database uses a separate file for each\n-   * table </code>false</code> otherwise.\n+   * table <code>false</code> otherwise.\n    *\n    * @exception SQLException If an error occurs.\n    */\n@@ -433,8 +433,8 @@ public interface DatabaseMetaData\n    * This method tests whether or not the database treats mixed case\n    * identifiers as all upper case.\n    *\n-   * @exception <code>true</code> if the database treats all identifiers as\n-   *            upper case, <code>false</code> otherwise.\n+   * @return <code>true</code> if the database treats all identifiers as\n+   *         upper case, <code>false</code> otherwise.\n    * @exception SQLException If an error occurs.\n    */\n   boolean storesUpperCaseIdentifiers() throws SQLException;\n@@ -443,8 +443,8 @@ public interface DatabaseMetaData\n    * This method tests whether or not the database treats mixed case\n    * identifiers as all lower case.\n    *\n-   * @exception <code>true</code> if the database treats all identifiers as\n-   *            lower case, <code>false</code> otherwise.\n+   * @return <code>true</code> if the database treats all identifiers as\n+   *         lower case, <code>false</code> otherwise.\n    * @exception SQLException If an error occurs.\n    */\n   boolean storesLowerCaseIdentifiers() throws SQLException;\n@@ -473,8 +473,8 @@ public interface DatabaseMetaData\n    * This method tests whether or not the database treats mixed case\n    * quoted identifiers as all upper case.\n    *\n-   * @exception <code>true</code> if the database treats all quoted identifiers \n-   *            as upper case, <code>false</code> otherwise.\n+   * @return <code>true</code> if the database treats all quoted identifiers \n+   *         as upper case, <code>false</code> otherwise.\n    * @exception SQLException If an error occurs.\n    */\n   boolean storesUpperCaseQuotedIdentifiers() throws SQLException;\n@@ -483,8 +483,8 @@ public interface DatabaseMetaData\n    * This method tests whether or not the database treats mixed case\n    * quoted identifiers as all lower case.\n    *\n-   * @exception <code>true</code> if the database treats all quoted identifiers \n-   *            as lower case, <code>false</code> otherwise.\n+   * @return <code>true</code> if the database treats all quoted identifiers \n+   *         as lower case, <code>false</code> otherwise.\n    * @exception SQLException If an error occurs.\n    */\n   boolean storesLowerCaseQuotedIdentifiers() throws SQLException;\n@@ -1377,18 +1377,18 @@ boolean supportsDataManipulationTransactionsOnly() throws\n    * <p>\n    * <ol>\n    * <li>PROCEDURE_CAT - The catalog the procedure is in, which may be \n-   * <code>null</code>.\n+   * <code>null</code>.</li>\n    * <li>PROCEDURE_SCHEM - The schema the procedures is in, which may be\n-   * <code>null</code>.\n-   * <li>PROCEDURE_NAME - The name of the procedure.\n-   * <li>Unused\n-   * <li>Unused\n-   * <li>Unused\n-   * <li>REMARKS - A description of the procedure\n+   * <code>null</code>.</li>\n+   * <li>PROCEDURE_NAME - The name of the procedure.</li>\n+   * <li>Unused</li>\n+   * <li>Unused</li>\n+   * <li>Unused</li>\n+   * <li>REMARKS - A description of the procedure</li>\n    * <li>PROCEDURE_TYPE - Indicates the return type of the procedure, which \n    * is one of the contstants defined in this class \n    * (<code>procedureResultUnknown</code>, <code>procedureNoResult</code>, or\n-   * <code>procedureReturnsResult</code>).\n+   * <code>procedureReturnsResult</code>).</li>\n    * </ol>\n    *\n    * @param catalog The name of the catalog to return stored procedured from,\n@@ -1409,27 +1409,27 @@ ResultSet getProcedures(String catalog, String schemaPattern, String\n    * <p>\n    * <ol>\n    * <li>PROCEDURE_CAT - The catalog the procedure is in, which may be \n-   * <code>null</code>.\n+   * <code>null</code>.</li>\n    * <li>PROCEDURE_SCHEM - The schema the procedures is in, which may be\n-   * <code>null</code>.\n-   * <li>PROCEDURE_NAME - The name of the procedure.\n-   * <li>COLUMN_NAME - The name of the column\n+   * <code>null</code>.</li>\n+   * <li>PROCEDURE_NAME - The name of the procedure.</li>\n+   * <li>COLUMN_NAME - The name of the column</li>\n    * <li>COLUMN_TYPE - The type of the column, which will be one of the\n    * contants defined in this class (<code>procedureColumnUnknown</code>,\n    * <code>procedureColumnIn</code>, <code>procedureColumnInOut</code>,\n    * <code>procedureColumnOut</code>, <code>procedureColumnReturn</code>,\n-   * or <code>procedureColumnResult</code>).\n+   * or <code>procedureColumnResult</code>).</li>\n    * <li>DATA_TYPE - The SQL type of the column. This is one of the constants\n-   * defined in <code>Types</code>.\n-   * <li>TYPE_NAME - The string name of the data type for this column.\n-   * <li>PRECISION - The precision of the column.\n-   * <li>LENGTH - The length of the column in bytes\n-   * <li>SCALE - The scale of the column.\n-   * <li>RADIX - The radix of the column.\n+   * defined in <code>Types</code>.</li>\n+   * <li>TYPE_NAME - The string name of the data type for this column.</li>\n+   * <li>PRECISION - The precision of the column.</li>\n+   * <li>LENGTH - The length of the column in bytes</li>\n+   * <li>SCALE - The scale of the column.</li>\n+   * <li>RADIX - The radix of the column.</li>\n    * <li>NULLABLE - Whether or not the column is NULLABLE.  This is one of\n    * the constants defined in this class (<code>procedureNoNulls</code>,\n-   * <code>procedureNullable</code>, or <code>procedureNullableUnknown</code>)\n-   * <li>REMARKS - A description of the column.\n+   * <code>procedureNullable</code>, or <code>procedureNullableUnknown</code>)</li>\n+   * <li>REMARKS - A description of the column.</li>\n    * </ol>\n    *\n    * @param catalog The name of the catalog to return stored procedured from,\n@@ -1448,14 +1448,14 @@ ResultSet getProcedureColumns(String catalog, String schemaPattern,\n   /**\n    * This method returns a list of the requested table as a   \n    * <code>ResultSet</code> with the following columns:\n-   * <p>\n+   *\n    * <ol>\n-   * <li>TABLE_CAT - The catalog the table is in, which may be <code>null</code>.\n-   * <li>TABLE_SCHEM - The schema the table is in, which may be <code>null</code>.\n-   * <li>TABLE_NAME - The name of the table.\n+   * <li>TABLE_CAT - The catalog the table is in, which may be <code>null</code>.</li>\n+   * <li>TABLE_SCHEM - The schema the table is in, which may be <code>null</code>.</li>\n+   * <li>TABLE_NAME - The name of the table.</li>\n    * <li>TABLE_TYPE - A string describing the table type.  This will be one\n-   * of the values returned by the <code>getTableTypes()</code> method.\n-   * <li>REMARKS - Comments about the table.\n+   * of the values returned by the <code>getTableTypes()</code> method.</li>\n+   * <li>REMARKS - Comments about the table.</li>\n    * </ol>\n    * \n    * @param catalog The name of the catalog to return tables from,\n@@ -1507,29 +1507,29 @@ ResultSet getTables(String catalog, String schemaPattern, String\n    * <p>\n    * <ol>\n    * <li>TABLE_CAT - The catalog the table is in, which may be \n-   * <code>null</code>.\n+   * <code>null</code>.</li>\n    * <li>TABLE_SCHEM - The schema the tables is in, which may be\n-   * <code>null</code>.\n-   * <li>TABLE_NAME - The name of the table.\n-   * <li>COLUMN_NAME - The name of the column\n+   * <code>null</code>.</li>\n+   * <li>TABLE_NAME - The name of the table.</li>\n+   * <li>COLUMN_NAME - The name of the column</li>\n    * <li>DATA_TYPE - The SQL type of the column. This is one of the constants\n-   * defined in <code>Types</code>.\n-   * <li>TYPE_NAME - The string name of the data type for this column.\n-   * <li>COLUMN_SIZE - The size of the column.\n-   * <li>Unused\n-   * <li>NUM_PREC_RADIX - The radix of the column.\n+   * defined in <code>Types</code>.</li>\n+   * <li>TYPE_NAME - The string name of the data type for this column.</li>\n+   * <li>COLUMN_SIZE - The size of the column.</li>\n+   * <li>Unused</li>\n+   * <li>NUM_PREC_RADIX - The radix of the column.</li>\n    * <li>NULLABLE - Whether or not the column is NULLABLE.  This is one of\n    * the constants defined in this class (<code>tableNoNulls</code>,\n-   * <code>tableNullable</code>, or <code>tableNullableUnknown</code>)\n-   * <li>REMARKS - A description of the column.\n-   * <li>COLUMN_DEF - The default value for the column, may be <code>null</code>.\n-   * <li>SQL_DATA_TYPE - Unused\n-   * <li>SQL_DATETIME_SUB - Unused\n+   * <code>tableNullable</code>, or <code>tableNullableUnknown</code>)</li>\n+   * <li>REMARKS - A description of the column.</li>\n+   * <li>COLUMN_DEF - The default value for the column, may be <code>null</code>.</li>\n+   * <li>SQL_DATA_TYPE - Unused</li>\n+   * <li>SQL_DATETIME_SUB - Unused</li>\n    * <li>CHAR_OCTET_LENGTH - For character columns, the maximum number of bytes\n-   * in the column.\n-   * <li>ORDINAL_POSITION - The index of the column in the table.\n+   * in the column.</li>\n+   * <li>ORDINAL_POSITION - The index of the column in the table.</li>\n    * <li>IS_NULLABLE - \"NO\" means no, \"YES\" means maybe, and an empty string\n-   * means unknown.\n+   * means unknown.</li>\n    * </ol>\n    *\n    * @param catalog The name of the catalog to return table from,\n@@ -1548,19 +1548,19 @@ ResultSet getColumns(String catalog, String schemaPattern, String\n    * This method returns the access rights that have been granted to the\n    * requested columns.  This information is returned as a <code>ResultSet</code>\n    * with the following columns:\n-   * <p>\n+   *\n    * <ol>\n    * <li>TABLE_CAT - The catalog the table is in, which may be \n-   * <code>null</code>.\n+   * <code>null</code>.</li>\n    * <li>TABLE_SCHEM - The schema the tables is in, which may be\n-   * <code>null</code>.\n-   * <li>TABLE_NAME - The name of the table.\n-   * <li>COLUMN_NAME - The name of the column.\n-   * <li>GRANTOR - The entity that granted the access.\n-   * <li>GRANTEE - The entity granted the access.\n-   * <li>PRIVILEGE - The name of the privilege granted.\n+   * <code>null</code>.</li>\n+   * <li>TABLE_NAME - The name of the table.</li>\n+   * <li>COLUMN_NAME - The name of the column.</li>\n+   * <li>GRANTOR - The entity that granted the access.</li>\n+   * <li>GRANTEE - The entity granted the access.</li>\n+   * <li>PRIVILEGE - The name of the privilege granted.</li>\n    * <li>IS_GRANTABLE - \"YES\" if the grantee can grant the privilege to\n-   * others, \"NO\" if not, and <code>null</code> if unknown.\n+   * others, \"NO\" if not, and <code>null</code> if unknown.</li>\n    * </ol>\n    *\n    * @param catalog The catalog to retrieve information from, or the empty string\n@@ -1580,18 +1580,18 @@ ResultSet getColumnPrivileges(String catalog, String schema, String\n    * This method returns the access rights that have been granted to the\n    * requested tables.  This information is returned as a <code>ResultSet</code>\n    * with the following columns:\n-   * <p>\n+   *\n    * <ol>\n    * <li>TABLE_CAT - The catalog the table is in, which may be \n-   * <code>null</code>.\n+   * <code>null</code>.</li>\n    * <li>TABLE_SCHEM - The schema the tables is in, which may be\n-   * <code>null</code>.\n-   * <li>TABLE_NAME - The name of the table.\n-   * <li>GRANTOR - The entity that granted the access.\n-   * <li>GRANTEE - The entity granted the access.\n-   * <li>PRIVILEGE - The name of the privilege granted.\n+   * <code>null</code>.</li>\n+   * <li>TABLE_NAME - The name of the table.</li>\n+   * <li>GRANTOR - The entity that granted the access.</li>\n+   * <li>GRANTEE - The entity granted the access.</li>\n+   * <li>PRIVILEGE - The name of the privilege granted.</li>\n    * <li>IS_GRANTABLE - \"YES\" if the grantee can grant the privilege to\n-   * others, \"NO\" if not, and <code>null</code> if unknown.\n+   * others, \"NO\" if not, and <code>null</code> if unknown.</li>\n    * </ol>\n    *\n    * @param catalog The catalog to retrieve information from, or the empty string\n@@ -1611,22 +1611,22 @@ ResultSet getTablePrivileges(String catalog, String schemaPattern,\n    * This method returns the best set of columns for uniquely identifying\n    * a row.  It returns this information as a <code>ResultSet</code> with\n    * the following columns:\n-   * <p>\n+   *\n    * <ol>\n    * <li>SCOPE - The scope of the results returned.  This is one of the \n    * constants defined in this class (<code>bestRowTemporary</code>,\n-   * <code>bestRowTransaction</code>, or <code>bestRowSession</code>).\n-   * <li>COLUMN_NAME - The name of the column.\n+   * <code>bestRowTransaction</code>, or <code>bestRowSession</code>).</li>\n+   * <li>COLUMN_NAME - The name of the column.</li>\n    * <li>DATA_TYPE - The SQL type of the column. This is one of the constants\n-   * defined in <code>Types</code>.\n-   * <li>TYPE_NAME - The string name of the data type for this column.\n-   * <li>COLUMN_SIZE - The precision of the columns\n-   * <li>BUFFER_LENGTH - Unused\n-   * <li>DECIMAL_DIGITS - The scale of the column.\n+   * defined in <code>Types</code>.</li>\n+   * <li>TYPE_NAME - The string name of the data type for this column.</li>\n+   * <li>COLUMN_SIZE - The precision of the columns</li>\n+   * <li>BUFFER_LENGTH - Unused</li>\n+   * <li>DECIMAL_DIGITS - The scale of the column.</li>\n    * <li>PSEUDO_COLUMN - Whether or not the best row identifier is a\n    * pseudo_column.  This is one of the constants defined in this class \n    * (<code>bestRowUnknown</code>, <code>bestRowNotPseudo</code>, or\n-   * <code>bestRowPseudo</code>).\n+   * <code>bestRowPseudo</code>).</li>\n    * </ol>\n    *\n    * @param catalog The catalog to retrieve information from, or the empty string\n@@ -1649,20 +1649,20 @@ ResultSet getBestRowIdentifier(String catalog, String schema,\n    * This method returns the set of columns that are automatically updated\n    * when the row is update. It returns this information as a \n    * <code>ResultSet</code> with the following columns:\n-   * <p>\n+   *\n    * <ol>\n-   * <li>SCOPE - Unused\n-   * <li>COLUMN_NAME - The name of the column.\n+   * <li>SCOPE - Unused</li>\n+   * <li>COLUMN_NAME - The name of the column.</li>\n    * <li>DATA_TYPE - The SQL type of the column. This is one of the constants\n-   * defined in <code>Types</code>.\n-   * <li>TYPE_NAME - The string name of the data type for this column.\n-   * <li>COLUMN_SIZE - The precision of the columns\n-   * <li>BUFFER_LENGTH - Unused\n-   * <li>DECIMAL_DIGITS - The scale of the column.\n+   * defined in <code>Types</code>.</li>\n+   * <li>TYPE_NAME - The string name of the data type for this column.</li>\n+   * <li>COLUMN_SIZE - The precision of the columns</li>\n+   * <li>BUFFER_LENGTH - Unused</li>\n+   * <li>DECIMAL_DIGITS - The scale of the column.</li>\n    * <li>PSEUDO_COLUMN - Whether or not the best row identifier is a\n    * pseudo_column.  This is one of the constants defined in this class \n    * (<code>versionRowUnknown</code>, <code>versionRowNotPseudo</code>, or\n-   * <code>versionRowPseudo</code>).\n+   * <code>versionRowPseudo</code>).</li>\n    * </ol>\n    *\n    * @param catalog The catalog to retrieve information from, or the empty string\n@@ -1681,14 +1681,14 @@ ResultSet getVersionColumns(String catalog, String schema,\n   /**\n    * This method returns a list of a table's primary key columns.  These\n    * are returned as a <code>ResultSet</code> with the following columns.\n-   * <p>\n+   *\n    * <ol>\n-   * <li>TABLE_CAT - The catalog of the table, which may be <code>null</code>.\n-   * <li>TABLE_SCHEM - The schema of the table, which may be <code>null</code>.\n-   * <li>TABLE_NAME - The name of the table.\n-   * <li>COLUMN_NAME - The name of the column.\n-   * <li>KEY_SEQ - The sequence number of the column within the primary key.\n-   * <li>PK_NAME - The name of the primary key, which may be <code>null</code>.\n+   * <li>TABLE_CAT - The catalog of the table, which may be <code>null</code>.</li>\n+   * <li>TABLE_SCHEM - The schema of the table, which may be <code>null</code>.</li>\n+   * <li>TABLE_NAME - The name of the table.</li>\n+   * <li>COLUMN_NAME - The name of the column.</li>\n+   * <li>KEY_SEQ - The sequence number of the column within the primary key.</li>\n+   * <li>PK_NAME - The name of the primary key, which may be <code>null</code>.</li>\n    * </ol>\n    *\n    * @param catalog The catalog to retrieve information from, or the empty string\n@@ -1707,32 +1707,32 @@ ResultSet getPrimaryKeys(String catalog, String schema, String table)\n   /**\n    * This method returns a list of the table's foreign keys.  These are\n    * returned as a <code>ResultSet</code> with the following columns:\n-   * <p>\n+   *\n    * <ol>\n-   * <li>PKTABLE_CAT - The catalog of the table the key was imported from.\n-   * <li>PKTABLE_SCHEM - The schema of the table the key was imported from.\n-   * <li>PKTABLE_NAME - The name of the table the key was imported from.\n-   * <li>PKCOLUMN_NAME - The name of the column that was imported.\n-   * <li>FKTABLE_CAT - The foreign key catalog name.\n-   * <li>FKTABLE_SCHEM - The foreign key schema name.\n-   * <li>FKTABLE_NAME - The foreign key table name.\n-   * <li>FKCOLUMN_NAME - The foreign key column name.\n-   * <li>KEY_SEQ - The sequence number of the column within the foreign key.\n+   * <li>PKTABLE_CAT - The catalog of the table the key was imported from.</li>\n+   * <li>PKTABLE_SCHEM - The schema of the table the key was imported from.</li>\n+   * <li>PKTABLE_NAME - The name of the table the key was imported from.</li>\n+   * <li>PKCOLUMN_NAME - The name of the column that was imported.</li>\n+   * <li>FKTABLE_CAT - The foreign key catalog name.</li>\n+   * <li>FKTABLE_SCHEM - The foreign key schema name.</li>\n+   * <li>FKTABLE_NAME - The foreign key table name.</li>\n+   * <li>FKCOLUMN_NAME - The foreign key column name.</li>\n+   * <li>KEY_SEQ - The sequence number of the column within the foreign key.</li>\n    * <li>UPDATE_RULE - How the foreign key behaves when the primary key is\n    * updated.  This is one of the constants defined in this class \n    * (<code>importedNoAction</code>, <code>importedKeyCascade</code>,\n    * <code>importedKeySetNull</code>, <code>importedKeySetDefault</code>, or\n-   * <code>importedKeyRestrict</code>).\n+   * <code>importedKeyRestrict</code>).</li>\n    * <li>DELETE_RULE - How the foreign key behaves when the primary key is\n    * deleted.  This is one of the constants defined in this class \n    * (<code>importedNoAction</code>, <code>importedKeyCascade</code>,\n-   * <code>importedKeySetNull</code>, or <code>importedKeySetDefault</code>)\n-   * <li>FK_NAME - The name of the foreign key.\n-   * <li>PK_NAME - The name of the primary key.\n+   * <code>importedKeySetNull</code>, or <code>importedKeySetDefault</code>)</li>\n+   * <li>FK_NAME - The name of the foreign key.</li>\n+   * <li>PK_NAME - The name of the primary key.</li>\n    * <li>DEFERRABILITY - The deferrability value.  This is one of the\n    * constants defined in this table (<code>importedKeyInitiallyDeferred</code>,\n    * <code>importedKeyInitiallyImmediate</code>, or\n-   * <code>importedKeyNotDeferrable</code>).\n+   * <code>importedKeyNotDeferrable</code>).</li>\n    * </ol>\n    *\n    * @param catalog The catalog to retrieve information from, or the empty string\n@@ -1753,32 +1753,32 @@ ResultSet getImportedKeys(String catalog, String schema,\n    * This method returns a list of the table's which use this table's\n    * primary key as a foreign key.  The information is\n    * returned as a <code>ResultSet</code> with the following columns:\n-   * <p>\n+   *\n    * <ol>\n-   * <li>PKTABLE_CAT - The catalog of the table the key was imported from.\n-   * <li>PKTABLE_SCHEM - The schema of the table the key was imported from.\n-   * <li>PKTABLE_NAME - The name of the table the key was imported from.\n-   * <li>PKCOLUMN_NAME - The name of the column that was imported.\n-   * <li>FKTABLE_CAT - The foreign key catalog name.\n-   * <li>FKTABLE_SCHEM - The foreign key schema name.\n-   * <li>FKTABLE_NAME - The foreign key table name.\n-   * <li>FKCOLUMN_NAME - The foreign key column name.\n-   * <li>KEY_SEQ - The sequence number of the column within the foreign key.\n+   * <li>PKTABLE_CAT - The catalog of the table the key was imported from.</li>\n+   * <li>PKTABLE_SCHEM - The schema of the table the key was imported from.</li>\n+   * <li>PKTABLE_NAME - The name of the table the key was imported from.</li>\n+   * <li>PKCOLUMN_NAME - The name of the column that was imported.</li>\n+   * <li>FKTABLE_CAT - The foreign key catalog name.</li>\n+   * <li>FKTABLE_SCHEM - The foreign key schema name.</li>\n+   * <li>FKTABLE_NAME - The foreign key table name.</li>\n+   * <li>FKCOLUMN_NAME - The foreign key column name.</li>\n+   * <li>KEY_SEQ - The sequence number of the column within the foreign key.</li>\n    * <li>UPDATE_RULE - How the foreign key behaves when the primary key is\n    * updated.  This is one of the constants defined in this class \n    * (<code>importedNoAction</code>, <code>importedKeyCascade</code>,\n    * <code>importedKeySetNull</code>, <code>importedKeySetDefault</code>, or\n-   * <code>importedKeyRestrict</code>).\n+   * <code>importedKeyRestrict</code>).</li>\n    * <li>DELETE_RULE - How the foreign key behaves when the primary key is\n    * deleted.  This is one of the constants defined in this class \n    * (<code>importedNoAction</code>, <code>importedKeyCascade</code>,\n-   * <code>importedKeySetNull</code>, or <code>importedKeySetDefault</code>)\n-   * <li>FK_NAME - The name of the foreign key.\n-   * <li>PK_NAME - The name of the primary key.\n+   * <code>importedKeySetNull</code>, or <code>importedKeySetDefault</code>)</li>\n+   * <li>FK_NAME - The name of the foreign key.</li>\n+   * <li>PK_NAME - The name of the primary key.</li>\n    * <li>DEFERRABILITY - The deferrability value.  This is one of the\n    * constants defined in this table (<code>importedKeyInitiallyDeferred</code>,\n    * <code>importedKeyInitiallyImmediate</code>, or\n-   * <code>importedKeyNotDeferrable</code>).\n+   * <code>importedKeyNotDeferrable</code>).</li>\n    * </ol>\n    *\n    * @param catalog The catalog to retrieve information from, or the empty string\n@@ -1797,32 +1797,32 @@ ResultSet getExportedKeys(String catalog, String schema,\n    * This method returns a description of how one table imports another\n    * table's primary key as a foreign key.  The information is\n    * returned as a <code>ResultSet</code> with the following columns:\n-   * <p>\n+   *\n    * <ol>\n-   * <li>PKTABLE_CAT - The catalog of the table the key was imported from.\n-   * <li>PKTABLE_SCHEM - The schema of the table the key was imported from.\n-   * <li>PKTABLE_NAME - The name of the table the key was imported from.\n-   * <li>PKCOLUMN_NAME - The name of the column that was imported.\n-   * <li>FKTABLE_CAT - The foreign key catalog name.\n-   * <li>FKTABLE_SCHEM - The foreign key schema name.\n-   * <li>FKTABLE_NAME - The foreign key table name.\n-   * <li>FKCOLUMN_NAME - The foreign key column name.\n-   * <li>KEY_SEQ - The sequence number of the column within the foreign key.\n+   * <li>PKTABLE_CAT - The catalog of the table the key was imported from.</li>\n+   * <li>PKTABLE_SCHEM - The schema of the table the key was imported from.</li>\n+   * <li>PKTABLE_NAME - The name of the table the key was imported from.</li>\n+   * <li>PKCOLUMN_NAME - The name of the column that was imported.</li>\n+   * <li>FKTABLE_CAT - The foreign key catalog name.</li>\n+   * <li>FKTABLE_SCHEM - The foreign key schema name.</li>\n+   * <li>FKTABLE_NAME - The foreign key table name.</li>\n+   * <li>FKCOLUMN_NAME - The foreign key column name.</li>\n+   * <li>KEY_SEQ - The sequence number of the column within the foreign key.</li>\n    * <li>UPDATE_RULE - How the foreign key behaves when the primary key is\n    * updated.  This is one of the constants defined in this class \n    * (<code>importedNoAction</code>, <code>importedKeyCascade</code>,\n    * <code>importedKeySetNull</code>, <code>importedKeySetDefault</code>, or\n-   * <code>importedKeyRestrict</code>).\n+   * <code>importedKeyRestrict</code>).</li>\n    * <li>DELETE_RULE - How the foreign key behaves when the primary key is\n    * deleted.  This is one of the constants defined in this class \n    * (<code>importedNoAction</code>, <code>importedKeyCascade</code>,\n-   * <code>importedKeySetNull</code>, or <code>importedKeySetDefault</code>)\n-   * <li>FK_NAME - The name of the foreign key.\n-   * <li>PK_NAME - The name of the primary key.\n+   * <code>importedKeySetNull</code>, or <code>importedKeySetDefault</code>)</li>\n+   * <li>FK_NAME - The name of the foreign key.</li>\n+   * <li>PK_NAME - The name of the primary key.</li>\n    * <li>DEFERRABILITY - The deferrability value.  This is one of the\n    * constants defined in this table (<code>importedKeyInitiallyDeferred</code>,\n    * <code>importedKeyInitiallyImmediate</code>, or\n-   * <code>importedKeyNotDeferrable</code>).\n+   * <code>importedKeyNotDeferrable</code>).</li>\n    * </ol>\n    *\n    * @param primCatalog The catalog to retrieve information from, or the empty string\n@@ -1850,36 +1850,36 @@ ResultSet getCrossReference(String primaryCatalog, String\n    * This method returns a list of the SQL types supported by this\n    * database.  The information is returned as a <code>ResultSet</code>\n    * with the following columns:\n-   * <p>\n+   *\n    * <ol>\n-   * <li>TYPE_NAME - The name of the data type.\n+   * <li>TYPE_NAME - The name of the data type.</li>\n    * <li>DATA_TYPE - A data type constant from <code>Types</code> for this\n-   * type.\n-   * <li>PRECISION - The maximum precision of this type.\n+   * type.</li>\n+   * <li>PRECISION - The maximum precision of this type.</li>\n    * <li>LITERAL_PREFIX - Prefix value used to quote a literal, which may be\n-   * <code>null</code>.\n+   * <code>null</code>.</li>\n    * <li>LITERAL_SUFFIX - Suffix value used to quote a literal, which may be\n-   * <code>null</code>.\n+   * <code>null</code>.</li>\n    * <li>CREATE_PARAMS - The parameters used to create the type, which may be\n-   * <code>null</code>.\n+   * <code>null</code>.</li>\n    * <li>NULLABLE - Whether or not this type supports NULL values.  This will\n    * be one of the constants defined in this interface \n    * (<code>typeNoNulls</code>, <code>typeNullable</code>, or\n-   * <code>typeNullableUnknown</code>).\n-   * <li>CASE_SENSITIVE - Whether or not the value is case sensitive.\n+   * <code>typeNullableUnknown</code>).</li>\n+   * <li>CASE_SENSITIVE - Whether or not the value is case sensitive.</li>\n    * <li>SEARCHABLE - Whether or not \"LIKE\" expressions are supported in\n    * WHERE clauses for this type.  This will be one of the constants defined\n    * in this interface (<code>typePredNone</code>, <code>typePredChar</code>,\n-   * <code>typePredBasic</code>, or <code>typeSearchable</code>).\n-   * <li>UNSIGNED_ATTRIBUTE - Is the value of this type unsigned.\n-   * <li>FIXED_PREC_SCALE - Whether or not this type can be used for money.\n-   * <li>AUTO_INCREMENT - Whether or not this type supports auto-incrementing.\n-   * <li>LOCAL_TYPE_NAME - A localized name for this data type.\n-   * <li>MINIMUM_SCALE - The minimum scale supported by this type.\n-   * <li>MAXIMUM_SCALE - The maximum scale supported by this type.\n-   * <li>SQL_DATA_TYPE - Unused.\n-   * <li>SQL_DATETIME_SUB - Unused.\n-   * <li>NUM_PREC_RADIX - The radix of this data type.\n+   * <code>typePredBasic</code>, or <code>typeSearchable</code>).</li>\n+   * <li>UNSIGNED_ATTRIBUTE - Is the value of this type unsigned.</li>\n+   * <li>FIXED_PREC_SCALE - Whether or not this type can be used for money.</li>\n+   * <li>AUTO_INCREMENT - Whether or not this type supports auto-incrementing.</li>\n+   * <li>LOCAL_TYPE_NAME - A localized name for this data type.</li>\n+   * <li>MINIMUM_SCALE - The minimum scale supported by this type.</li>\n+   * <li>MAXIMUM_SCALE - The maximum scale supported by this type.</li>\n+   * <li>SQL_DATA_TYPE - Unused.</li>\n+   * <li>SQL_DATETIME_SUB - Unused.</li>\n+   * <li>NUM_PREC_RADIX - The radix of this data type.</li>\n    * </ol>\n    * \n    * @return A <code>ResultSet</code> with the list of available data types.\n@@ -1890,30 +1890,30 @@ ResultSet getCrossReference(String primaryCatalog, String\n   /**\n    * This method returns information about a tables indices and statistics.\n    * It is returned as a <code>ResultSet</code> with the following columns:\n-   * <p>\n+   *\n    * <ol>\n-   * <li>TABLE_CAT - The catalog of the table, which may be <code>null</code>.\n-   * <li>TABLE_SCHEM - The schema of the table, which may be <code>null</code>.\n-   * <li>TABLE_NAME - The name of the table.\n-   * <li>NON_UNIQUE - Are index values non-unique?\n-   * <li>INDEX_QUALIFIER The index catalog, which may be <code>null</code>\n-   * <li>INDEX_NAME - The name of the index.\n+   * <li>TABLE_CAT - The catalog of the table, which may be <code>null</code>.</li>\n+   * <li>TABLE_SCHEM - The schema of the table, which may be <code>null</code>.</li>\n+   * <li>TABLE_NAME - The name of the table.</li>\n+   * <li>NON_UNIQUE - Are index values non-unique?</li>\n+   * <li>INDEX_QUALIFIER The index catalog, which may be <code>null</code></li>\n+   * <li>INDEX_NAME - The name of the index.</li>\n    * <li>TYPE - The type of index, which will be one of the constants defined\n    * in this interface (<code>tableIndexStatistic</code>,\n    * <code>tableIndexClustered</code>, <code>tableIndexHashed</code>, or\n-   * <code>tableIndexOther</code>).\n+   * <code>tableIndexOther</code>).</li>\n    * <li>ORDINAL_POSITION - The sequence number of this column in the index.\n-   * This will be 0 when the index type is <code>tableIndexStatistic</code>.\n-   * <li>COLUMN_NAME - The name of this column in the index.\n+   * This will be 0 when the index type is <code>tableIndexStatistic</code>.</li>\n+   * <li>COLUMN_NAME - The name of this column in the index.</li>\n    * <li>ASC_OR_DESC - \"A\" for an ascending sort sequence, \"D\" for a\n    * descending sort sequence or <code>null</code> if a sort sequence is not\n-   * supported.\n+   * supported.</li>\n    * <li>CARDINALITY - The number of unique rows in the index, or the number\n-   * of rows in the table if the index type is <code>tableIndexStatistic</code>.\n+   * of rows in the table if the index type is <code>tableIndexStatistic</code>.</li>\n    * <li>PAGES - The number of pages used for the index, or the number of pages\n-   * in the table if the index type is <code>tableIndexStatistic</code>.\n+   * in the table if the index type is <code>tableIndexStatistic</code>.</li>\n    * <li>FILTER_CONDITION - The filter condition for this index, which may be\n-   * <code>null</code>.\n+   * <code>null</code>.</li>\n    * </ol>\n    *\n    * @param catalog The catalog to retrieve information from, or the empty string\n@@ -2093,16 +2093,16 @@ boolean supportsResultSetConcurrency(int type, int concurrency)\n   /**\n    * This method returns the list of user defined data types in use.  These\n    * are returned as a <code>ResultSet</code> with the following columns:\n-   * <p>\n+   *\n    * <ol>\n-   * <li>TYPE_CAT - The catalog name, which may be <code>null</code>.\n-   * <li>TYPE_SCEHM - The schema name, which may be <code>null</code>.\n-   * <li>TYPE_NAME - The user defined data type name.\n-   * <li>CLASS_NAME - The Java class name this type maps to.\n+   * <li>TYPE_CAT - The catalog name, which may be <code>null</code>.</li>\n+   * <li>TYPE_SCEHM - The schema name, which may be <code>null</code>.</li>\n+   * <li>TYPE_NAME - The user defined data type name.</li>\n+   * <li>CLASS_NAME - The Java class name this type maps to.</li>\n    * <li>DATA_TYPE - A type identifier from <code>Types</code> for this type.\n    * This will be one of <code>JAVA_OBJECT</code>, <code>STRUCT</code>, or\n-   * <code>DISTINCT</code>.\n-   * <li>REMARKS - Comments about this data type.\n+   * <code>DISTINCT</code>.</li>\n+   * <li>REMARKS - Comments about this data type.</li>\n    * </ol>\n    *\n    * @param catalog The catalog to retrieve information from, or the empty string"}, {"sha": "bbc2bae137d1ef90e2d8617dd8d752745274e1fe", "filename": "libjava/java/sql/ResultSet.java", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsql%2FResultSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Fsql%2FResultSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Fsql%2FResultSet.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -48,14 +48,14 @@\n /**\n  * This interface provides access to the data set returned by a SQL\n  * statement.  An instance of this interface is returned by the various\n- * execution methods in the <code>Statement</code.\n- * <p>\n- * This class models a cursor, which can be stepped through one row at a\n+ * execution methods in the <code>Statement</code>.\n+ *\n+ * <p> This class models a cursor, which can be stepped through one row at a\n  * time.  Methods are provided for accessing columns by column name or by\n- * index.\n- * <p>\n- * Note that a result set is invalidated if the statement that returned\n- * it is closed.\n+ * index.</p>\n+ *\n+ * <p> Note that a result set is invalidated if the statement that returned\n+ * it is closed.</p>\n  *\n  * @author Aaron M. Renn (arenn@urbanophile.com)\n  */"}, {"sha": "f23bd128a5e6750650fad145f890e79cd8bf8927", "filename": "libjava/java/text/ChoiceFormat.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FChoiceFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FChoiceFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FChoiceFormat.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -45,7 +45,7 @@\n  * To use this class, first specify two lists of formats and range terminators.\n  * These lists must be arrays of equal length.  The format of index \n  * <code>i</code> will be selected for value <code>X</code> if \n- * <code>terminator[i] <= X < limit[i + 1]</code>.  If the value X is not\n+ * <code>terminator[i] &lt;= X &lt; limit[i + 1]</code>.  If the value X is not\n  * included in any range, then either the first or last format will be \n  * used depending on whether the value X falls outside the range.\n  * <p>\n@@ -196,10 +196,10 @@ public ChoiceFormat (double[] choiceLimits, String[] choiceFormats)\n    * This method tests this object for equality with the specified \n    * object.  This will be true if and only if:\n    * <ul>\n-   * <li>The specified object is not <code>null</code>.\n-   * <li>The specified object is an instance of <code>ChoiceFormat</code>.\n+   * <li>The specified object is not <code>null</code>.</li>\n+   * <li>The specified object is an instance of <code>ChoiceFormat</code>.</li>\n    * <li>The termination ranges and format strings are identical to\n-   *     this object's. \n+   *     this object's. </li>\n    * </ul>\n    *\n    * @param obj The object to test for equality against."}, {"sha": "2377a09548bc0f27e483ada40e52b90acc68f28e", "filename": "libjava/java/text/CollationElementIterator.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FCollationElementIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FCollationElementIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FCollationElementIterator.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -129,7 +129,7 @@ public static final int primaryOrder(int order)\n \n   /**\n    * This method resets the internal position pointer to read from the\n-   * beginning of the <code>String again.\n+   * beginning of the <code>String</code> again.\n    */\n   public void reset()\n   {"}, {"sha": "abc28b22ebb411176f6e7370129c4c99ef7d20f7", "filename": "libjava/java/text/CollationKey.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FCollationKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FCollationKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FCollationKey.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -140,12 +140,12 @@ public int compareTo (Object obj)\n    * this object.  This will be true if and only if:\n    * <p>\n    * <ul>\n-   * <li>The specified object must not be <code>null</code>\n-   * <li>The specified object is an instance of <code>CollationKey</code>.\n+   * <li>The specified object must not be <code>null</code></li>\n+   * <li>The specified object is an instance of <code>CollationKey</code>.</li>\n    * <li>The specified object was created from the same <code>Collator</code>\n-   * as this object.\n+   * as this object.</li>\n    * <li>The specified object has the same source string and bit key as\n-   * this object.\n+   * this object.</li>\n    * </ul>\n    *\n    * @param obj The <code>Object</code> to test for equality."}, {"sha": "907057eb0f9b44a67f8fc2149b4e68bb4f7e81f5", "filename": "libjava/java/text/Collator.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FCollator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FCollator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FCollator.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -183,10 +183,10 @@ public int compare (Object o1, Object o2)\n    * object.  This will be true if and only if the following conditions are\n    * met:\n    * <ul>\n-   * <li>The specified object is not <code>null</code>.\n-   * <li>The specified object is an instance of <code>Collator</code>.\n+   * <li>The specified object is not <code>null</code>.</li>\n+   * <li>The specified object is an instance of <code>Collator</code>.</li>\n    * <li>The specified object has the same strength and decomposition\n-   * settings as this object.\n+   * settings as this object.</li>\n    * </ul>\n    *\n    * @param obj The <code>Object</code> to test for equality against"}, {"sha": "0947b8058adb064c221cf1d5c532ad501a9c2f02", "filename": "libjava/java/text/DateFormat.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FDateFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FDateFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDateFormat.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -196,9 +196,9 @@ protected DateFormat ()\n    * object:\n    * <P>\n    * <ul>\n-   * <li>Is not <code>null</code>.\n-   * <li>Is an instance of <code>DateFormat</code>.\n-   * <li>Has the same numberFormat field value as this object.\n+   * <li>Is not <code>null</code>.</li>\n+   * <li>Is an instance of <code>DateFormat</code>.</li>\n+   * <li>Has the same numberFormat field value as this object.</li>\n    * </ul>\n    *\n    * @param obj The object to test for equality against."}, {"sha": "33a541bd1b7c5d89ca6e27c98c8c537e53b7437d", "filename": "libjava/java/text/DateFormatSymbols.java", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FDateFormatSymbols.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FDateFormatSymbols.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDateFormatSymbols.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -245,11 +245,12 @@ public String[] getWeekdays ()\n    * the array contains five values:\n    * <P>\n    * <ul>\n-   * <li>0 - The non-localized time zone id string.\n-   * <li>1 - The long name of the time zone (standard time).\n-   * <li>2 - The short name of the time zone (standard time).\n-   * <li>3 - The long name of the time zone (daylight savings time).\n-   * <li>4 - the short name of the time zone (daylight savings time).\n+   * <li>0 - The non-localized time zone id string.</li>\n+   * <li>1 - The long name of the time zone (standard time).</li>\n+   * <li>2 - The short name of the time zone (standard time).</li>\n+   * <li>3 - The long name of the time zone (daylight savings time).</li>\n+   * <li>4 - the short name of the time zone (daylight savings time).</li>\n+   * </ul>\n    *\n    * @return The list of time zone display strings.\n    */\n@@ -386,11 +387,12 @@ public void setWeekdays (String[] value)\n    * the array contains five values:\n    * <P>\n    * <ul>\n-   * <li>0 - The non-localized time zone id string.\n-   * <li>1 - The long name of the time zone (standard time).\n-   * <li>2 - The short name of the time zone (standard time).\n-   * <li>3 - The long name of the time zone (daylight savings time).\n-   * <li>4 - the short name of the time zone (daylight savings time).\n+   * <li>0 - The non-localized time zone id string.</li>\n+   * <li>1 - The long name of the time zone (standard time).</li>\n+   * <li>2 - The short name of the time zone (standard time).</li>\n+   * <li>3 - The long name of the time zone (daylight savings time).</li>\n+   * <li>4 - the short name of the time zone (daylight savings time).</li>\n+   * </ul>\n    *\n    * @return The list of time zone display strings.\n    */\n@@ -438,15 +440,15 @@ private static int hashCode (Object x)\n    * This will be true if and only if the specified object:\n    * <p>\n    * <ul>\n-   * <li> Is not <code>null</code>.\n-   * <li> Is an instance of <code>DateFormatSymbols</code>.\n-   * <li> Contains identical formatting symbols to this object.\n+   * <li> Is not <code>null</code>.</li>\n+   * <li> Is an instance of <code>DateFormatSymbols</code>.</li>\n+   * <li> Contains identical formatting symbols to this object.</li>\n    * </ul>\n    * \n    * @param obj The <code>Object</code> to test for equality against.\n    *\n    * @return <code>true</code> if the specified object is equal to this one,\n-   * </code>false</code> otherwise.\n+   * <code>false</code> otherwise.\n    */\n   public boolean equals (Object obj)\n   {"}, {"sha": "35e75311eb09354d126a89ca5dbe8cb1a7239b53", "filename": "libjava/java/text/DecimalFormatSymbols.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FDecimalFormatSymbols.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FDecimalFormatSymbols.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FDecimalFormatSymbols.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -167,9 +167,9 @@ public DecimalFormatSymbols (Locale loc)\n    * regard to the specified object:\n    * <p>\n    * <ul>\n-   * <li>It is not <code>null</code>.\n-   * <li>It is an instance of <code>DecimalFormatSymbols</code>\n-   * <li>All of its symbols are identical to the symbols in this object.\n+   * <li>It is not <code>null</code>.</li>\n+   * <li>It is an instance of <code>DecimalFormatSymbols</code>.</li>\n+   * <li>All of its symbols are identical to the symbols in this object.</li>\n    * </ul>\n    *\n    * @return <code>true</code> if the specified object is equal to this"}, {"sha": "d3b7fccce01d6865c881427607d3273883d1304d", "filename": "libjava/java/text/Format.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FFormat.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -123,7 +123,7 @@ public abstract StringBuffer format (Object obj, StringBuffer sb,\n    * This method parses a <code>String</code> and converts the parsed \n    * contents into an <code>Object</code>.\n    *\n-   * @param str The <code>String to parse.\n+   * @param str The <code>String</code> to parse.\n    *\n    * @return The resulting <code>Object</code>.\n    *"}, {"sha": "c6dffed8f59740306967594b25aa7f8a0a3d30fd", "filename": "libjava/java/text/ParsePosition.java", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FParsePosition.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FParsePosition.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FParsePosition.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -116,10 +116,10 @@ public void setErrorIndex (int error_index)\n    * all of the following conditions are met.\n    * <p>\n    * <ul>\n-   * <li>The specified object is not <code>null</code>.\n-   * <li>The specified object is an instance of <code>ParsePosition</code>.\n+   * <li>The specified object is not <code>null</code>.</li>\n+   * <li>The specified object is an instance of <code>ParsePosition</code>.</li>\n    * <li>The specified object has the same index and error index as\n-   *     this object.  \n+   *     this object.</li>\n    * </ul>\n    *\n    * @param obj The <code>Object</code> to test for equality against"}, {"sha": "1c1feab4e3c5cf3f9192f9e33a66216ee70bf58b", "filename": "libjava/java/text/RuleBasedCollator.java", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FRuleBasedCollator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FRuleBasedCollator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FRuleBasedCollator.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -56,9 +56,9 @@\n  * <p>\n  * Rules take the form of a <code>String</code> with the following syntax\n  * <ul>\n- * <li> Modifier: '@' \n- * <li> Relation: '&lt;' | ';' | ',' | '=' : <text>\n- * <li> Reset: '&amp;' : <text>\n+ * <li> Modifier: '@'</li>\n+ * <li> Relation: '&lt;' | ';' | ',' | '=' : &lt;text&gt;</li>\n+ * <li> Reset: '&amp;' : &lt;text&gt;</li>\n  * </ul>\n  * The modifier character indicates that accents sort backward as is the\n  * case with French.  The modifier applies to all rules <b>after</b>\n@@ -69,12 +69,12 @@\n  * the following meanings:\n  * <ul>\n  * <li>'&lt;' - The text argument is greater than the prior term at the primary\n- * difference level.\n+ * difference level.</li>\n  * <li>';' - The text argument is greater than the prior term at the secondary\n- * difference level.\n+ * difference level.</li>\n  * <li>',' - The text argument is greater than the prior term at the tertiary\n- * difference level.\n- * <li>'=' - The text argument is equal to the prior term\n+ * difference level.</li>\n+ * <li>'=' - The text argument is equal to the prior term</li>\n  * </ul>\n  * <p>\n  * As for the text argument itself, this is any sequence of Unicode\n@@ -131,15 +131,15 @@\n  * A <code>ParseException</code> will be thrown for any of the following\n  * conditions:\n  * <ul>\n- * <li>Unquoted punctuation characters in a text argument.\n- * <li>A relational or reset operator not followed by a text argument\n+ * <li>Unquoted punctuation characters in a text argument.</li>\n+ * <li>A relational or reset operator not followed by a text argument</li>\n  * <li>A reset operator where the text argument is not present in\n- * the previous rule string section.\n+ * the previous rule string section.</li>\n  * </ul>\n  *\n- * @author Aaron M. Renn <arenn@urbanophile.com>\n- * @author Tom Tromey <tromey@cygnus.com>\n- * @author Guilhem Lavaux <guilhem@kaffe.org>\n+ * @author Aaron M. Renn (arenn@urbanophile.com)\n+ * @author Tom Tromey (tromey@cygnus.com)\n+ * @author Guilhem Lavaux (guilhem@kaffe.org)\n  */\n public class RuleBasedCollator extends Collator\n {"}, {"sha": "69ce391db8d19e09e32847b649811e067350478e", "filename": "libjava/java/text/SimpleDateFormat.java", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FSimpleDateFormat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FSimpleDateFormat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FSimpleDateFormat.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -358,13 +358,13 @@ public void setDateFormatSymbols(DateFormatSymbols formatData)\n    * object.  This will be true if and only if the specified object:\n    * <p>\n    * <ul>\n-   * <li>Is not <code>null</code>.\n-   * <li>Is an instance of <code>SimpleDateFormat</code>.\n+   * <li>Is not <code>null</code>.</li>\n+   * <li>Is an instance of <code>SimpleDateFormat</code>.</li>\n    * <li>Is equal to this object at the superclass (i.e., <code>DateFormat</code>)\n-   *     level.\n-   * <li>Has the same formatting pattern.\n-   * <li>Is using the same formatting symbols.\n-   * <li>Is using the same century for two digit years.\n+   *     level.</li>\n+   * <li>Has the same formatting pattern.</li>\n+   * <li>Is using the same formatting symbols.</li>\n+   * <li>Is using the same century for two digit years.</li>\n    * </ul>\n    *\n    * @param obj The object to compare for equality against."}, {"sha": "44bac6b74a3cee5e1ed21cea260c2504dd575dd7", "filename": "libjava/java/text/StringCharacterIterator.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FStringCharacterIterator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Ftext%2FStringCharacterIterator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Ftext%2FStringCharacterIterator.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -314,10 +314,10 @@ public Object clone ()\n    * object.  This will be true if and only if the specified object:\n    * <p>\n    * <ul>\n-   * <li>is not <code>null</code>.\n-   * <li>is an instance of <code>StringCharacterIterator</code>\n-   * <li>has the same text as this object\n-   * <li>has the same beginning, ending, and current index as this object.\n+   * <li>is not <code>null</code>.</li>\n+   * <li>is an instance of <code>StringCharacterIterator</code></li>\n+   * <li>has the same text as this object</li>\n+   * <li>has the same beginning, ending, and current index as this object.</li>\n    * </ul>\n    *\n    * @param obj The object to test for equality against."}, {"sha": "7e5ac6ec2c119dd0f5ce80c1b79a4b83f29e066f", "filename": "libjava/java/util/Collections.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Futil%2FCollections.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Futil%2FCollections.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FCollections.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -54,7 +54,7 @@\n  * are not required, to throw the {@link UnsupportedOperationException} that\n  * the underlying collection would throw during an attempt at modification.\n  * For example,\n- * <code>Collections.singleton(\"\").addAll(Collections.EMPTY_SET)<code>\n+ * <code>Collections.singleton(\"\").addAll(Collections.EMPTY_SET)</code>\n  * does not throw a exception, even though addAll is an unsupported operation\n  * on a singleton; the reason for this is that addAll did not attempt to\n  * modify the set."}, {"sha": "9d556f2e4b67bb315a948b716134ef4de24ac24e", "filename": "libjava/java/util/PropertyResourceBundle.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Futil%2FPropertyResourceBundle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Futil%2FPropertyResourceBundle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FPropertyResourceBundle.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -54,7 +54,7 @@\n  *\n  * If there is also a class for this resource and the same locale, the\n  * class will be chosen. The properties file should have the name of the\n- * resource bundle, appended with the locale (e.g. <code>_de</code) and the\n+ * resource bundle, appended with the locale (e.g. <code>_de</code> and the\n  * extension <code>.properties</code>. The file should have the same format\n  * as for <code>Properties.load()</code>\n  *"}, {"sha": "6663bd4533ee6f6b0b0068fd0aeeab156aa65e6e", "filename": "libjava/java/util/ResourceBundle.java", "status": "modified", "additions": 16, "deletions": 9, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Futil%2FResourceBundle.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Futil%2FResourceBundle.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FResourceBundle.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -51,7 +51,7 @@\n  * <code>getObject</code> or <code>getString</code> on that bundle.\n  *\n  * <p>When a bundle is demanded for a specific locale, the ResourceBundle\n- * is searched in following order (<i>def. language<i> stands for the\n+ * is searched in following order (<i>def. language</i> stands for the\n  * two letter ISO language code of the default locale (see\n  * <code>Locale.getDefault()</code>).\n  *\n@@ -251,18 +251,22 @@ public static final ResourceBundle getBundle(String baseName,\n    *\n    * <p>A sequence of candidate bundle names are generated, and tested in\n    * this order, where the suffix 1 means the string from the specified\n-   * locale, and the suffix 2 means the string from the default locale:<ul>\n+   * locale, and the suffix 2 means the string from the default locale:</p>\n+   *\n+   * <ul>\n    * <li>baseName + \"_\" + language1 + \"_\" + country1 + \"_\" + variant1</li>\n    * <li>baseName + \"_\" + language1 + \"_\" + country1</li>\n    * <li>baseName + \"_\" + language1</li>\n    * <li>baseName + \"_\" + language2 + \"_\" + country2 + \"_\" + variant2</li>\n    * <li>baseName + \"_\" + language2 + \"_\" + country2</li>\n-   * <li>baseName + \"_\" + language2<li>\n+   * <li>baseName + \"_\" + language2</li>\n    * <li>baseName</li>\n    * </ul>\n    *\n    * <p>In the sequence, entries with an empty string are ignored. Next,\n-   * <code>getBundle</code> tries to instantiate the resource bundle:<ul>\n+   * <code>getBundle</code> tries to instantiate the resource bundle:</p>\n+   *\n+   * <ul>\n    * <li>First, an attempt is made to load a class in the specified classloader\n    * which is a subclass of ResourceBundle, and which has a public constructor\n    * with no arguments, via reflection.</li>\n@@ -277,7 +281,7 @@ public static final ResourceBundle getBundle(String baseName,\n    * in the above sequence are tested in a similar manner, and if any results\n    * in a resource bundle, it is assigned as the parent of the first bundle\n    * using the <code>setParent</code> method (unless the first bundle already\n-   * has a parent).\n+   * has a parent).</p>\n    *\n    * <p>For example, suppose the following class and property files are\n    * provided: MyResources.class, MyResources_fr_CH.properties,\n@@ -286,10 +290,12 @@ public static final ResourceBundle getBundle(String baseName,\n    * all files are valid (that is, public non-abstract subclasses of\n    * ResourceBundle with public nullary constructors for the \".class\" files,\n    * syntactically correct \".properties\" files). The default locale is\n-   * Locale(\"en\", \"UK\").\n+   * Locale(\"en\", \"UK\").</p>\n    *\n    * <p>Calling getBundle with the shown locale argument values instantiates\n-   * resource bundles from the following sources:<ul>\n+   * resource bundles from the following sources:</p>\n+   *\n+   * <ul>\n    * <li>Locale(\"fr\", \"CH\"): result MyResources_fr_CH.class, parent\n    *   MyResources_fr.properties, parent MyResources.class</li>\n    * <li>Locale(\"fr\", \"FR\"): result MyResources_fr.properties, parent\n@@ -301,8 +307,9 @@ public static final ResourceBundle getBundle(String baseName,\n    * <li>Locale(\"es\", \"ES\"): result MyResources_es_ES.class, parent\n    *   MyResources.class</li>\n    * </ul>\n-   * The file MyResources_fr_CH.properties is never used because it is hidden\n-   * by MyResources_fr_CH.class.\n+   * \n+   * <p>The file MyResources_fr_CH.properties is never used because it is hidden\n+   * by MyResources_fr_CH.class.</p>\n    *\n    * @param baseName the name of the ResourceBundle\n    * @param locale A locale"}, {"sha": "472d8951e5d31e5abebdc44f58842be93042d230", "filename": "libjava/java/util/StringTokenizer.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Futil%2FStringTokenizer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Futil%2FStringTokenizer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2FStringTokenizer.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -196,7 +196,7 @@ public String nextToken() throws NoSuchElementException\n \n   /**\n    * This does the same as hasMoreTokens. This is the\n-   * <code>Enumeration</code interface method.\n+   * <code>Enumeration</code> interface method.\n    *\n    * @return true, if the next call of nextElement() will succeed\n    * @see #hasMoreTokens()\n@@ -208,7 +208,7 @@ public boolean hasMoreElements()\n \n   /**\n    * This does the same as nextTokens. This is the\n-   * <code>Enumeration</code interface method.\n+   * <code>Enumeration</code> interface method.\n    *\n    * @return the next token with respect to the current delimiter characters\n    * @throws NoSuchElementException if there are no more tokens"}, {"sha": "06dc4f89fc56611c392d83cb0d7f6160ea4fdef9", "filename": "libjava/java/util/jar/Attributes.java", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Futil%2Fjar%2FAttributes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Futil%2Fjar%2FAttributes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fjar%2FAttributes.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -85,17 +85,18 @@ public class Attributes implements Cloneable, Map\n    * attributes, applet attributes, extension identification attributes,\n    * package versioning and sealing attributes, file contents attributes,\n    * bean objects attribute and signing attributes. See the \n-   * <p>\n-   * The characters of a Name must obey the following restrictions:\n+   * \n+   * <p>The characters of a Name must obey the following restrictions:</p>\n+   * \n    * <ul>\n-   * <li> Must contain at least one character\n-   * <li> The first character must be alphanumeric (a-z, A-Z, 0-9)\n-   * <li> All other characters must be alphanumeric, a '-' or a '_'\n+   * <li>Must contain at least one character</li>\n+   * <li>The first character must be alphanumeric (a-z, A-Z, 0-9)</li>\n+   * <li>All other characters must be alphanumeric, a '-' or a '_'</li>\n    * </ul>\n-   * <p>\n-   * When comparing Names (with <code>equals</code>) all characters are\n+   * \n+   * <p>When comparing Names (with <code>equals</code>) all characters are\n    * converted to lowercase. But you can get the original case sensitive\n-   * string with the <code>toString()</code> method.\n+   * string with the <code>toString()</code> method.</p>\n    *\n    * @since 1.2\n    * @author Mark Wielaard (mark@klomp.org)\n@@ -145,15 +146,15 @@ public class Attributes implements Cloneable, Map\n      * Manifest manifest file with the following Names:\n      * <ul>\n      * <li> &lt;extension&gt;-Extension-Name:\n-     * unique name of the extension\n+     * unique name of the extension</li>\n      * <li> &lt;extension&gt;-Specification-Version:\n-     * minimum specification version\n+     * minimum specification version</li>\n      * <li> &lt;extension&gt;-Implementation-Version:\n-     * minimum implementation version\n+     * minimum implementation version</li>\n      * <li> &lt;extension&gt;-Implementation-Vendor-Id:\n-     * unique id of implementation vendor\n+     * unique id of implementation vendor</li>\n      * <li> &lt;extension&gt;-Implementation-URL:\n-     * where the latest version of the extension library can be found\n+     * where the latest version of the extension library can be found</li>\n      * </ul>\n      */\n     public static final Name EXTENSION_LIST = new Name(\"Extension-List\");"}, {"sha": "6d79c1dbfca326060b03334edc47c53f0fd67bf5", "filename": "libjava/java/util/logging/ConsoleHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Futil%2Flogging%2FConsoleHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Futil%2Flogging%2FConsoleHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Flogging%2FConsoleHandler.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -67,7 +67,7 @@\n  *\n  * <li><code>java.util.logging.ConsoleHandler.encoding</code> - specifies\n  *     the name of the character encoding. Default value:\n- *     the default platform encoding.\n+ *     the default platform encoding.</li>\n  *\n  * </ul>\n  *"}, {"sha": "24757089410f746341abcdea9e2a92b6d35d0140", "filename": "libjava/java/util/logging/LogManager.java", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Futil%2Flogging%2FLogManager.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Futil%2Flogging%2FLogManager.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Flogging%2FLogManager.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -67,13 +67,12 @@\n  * <code>java.util.logging.LogManager</code> is initialized.\n  * The configuration process includes the subsequent steps:\n  *\n- * <ol>\n+ * <ul>\n  * <li>If the system property <code>java.util.logging.manager</code>\n  *     is set to the name of a subclass of\n  *     <code>java.util.logging.LogManager</code>, an instance of\n  *     that subclass is created and becomes the global LogManager.\n  *     Otherwise, a new instance of LogManager is created.</li>\n- *     \n  * <li>The <code>LogManager</code> constructor tries to create\n  *     a new instance of the class specified by the system\n  *     property <code>java.util.logging.config.class</code>.\n@@ -91,14 +90,13 @@\n  *     {@link #readConfiguration(java.io.InputStream)}.\n  *     The name and location of this file are specified by the system\n  *     property <code>java.util.logging.config.file</code>.</li>\n- *\n  * <li>If the system property <code>java.util.logging.config.file</code>\n  *     is not set, however, the contents of the URL\n  *     \"{gnu.classpath.home.url}/logging.properties\" are passed to\n  *     {@link #readConfiguration(java.io.InputStream)}.\n  *     Here, \"{gnu.classpath.home.url}\" stands for the value of\n  *     the system property <code>gnu.classpath.home.url</code>.</li>\n- * </ol>\n+ * </ul>\n  *\n  * @author Sascha Brawer (brawer@acm.org)\n  */\n@@ -259,10 +257,10 @@ public synchronized void removePropertyChangeListener(PropertyChangeListener lis\n    *\n    * @param logger the logger to be added.\n    *\n-   * @return <code>true<code>if <code>logger</code> was added,\n+   * @return <code>true</code>if <code>logger</code> was added,\n    *         <code>false</code> otherwise.\n    *\n-   * @throws NullPointerException if <code>name<code> is\n+   * @throws NullPointerException if <code>name</code> is\n    *         <code>null</code>.\n    */\n   public synchronized boolean addLogger(Logger logger)"}, {"sha": "3c18b527d18c7b32bcaeb2c04128833550ae303d", "filename": "libjava/java/util/logging/MemoryHandler.java", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Futil%2Flogging%2FMemoryHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Futil%2Flogging%2FMemoryHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Flogging%2FMemoryHandler.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -35,10 +35,7 @@\n or based on this library.  If you modify this library, you may extend\n this exception to your version of the library, but you are not\n obligated to do so.  If you do not wish to do so, delete this\n-exception statement from your version.\n-\n-*/\n-\n+exception statement from your version. */\n \n package java.util.logging;\n \n@@ -53,28 +50,22 @@\n  * value, a default is taken without an exception being thrown.\n  *\n  * <ul>\n- *\n  * <li><code>java.util.MemoryHandler.level</code> - specifies\n  *     the initial severity level threshold. Default value:\n  *     <code>Level.ALL</code>.</li>\n- *\n  * <li><code>java.util.MemoryHandler.filter</code> - specifies\n  *     the name of a Filter class. Default value: No Filter.</li>\n- *\n  * <li><code>java.util.MemoryHandler.size</code> - specifies the\n  *     maximum number of log records that are kept in the circular\n  *     buffer.  Default value: 1000.</li>\n- *\n  * <li><code>java.util.MemoryHandler.push</code> - specifies the\n  *     <code>pushLevel</code>. Default value:\n  *     <code>Level.SEVERE</code>.</li>\n- *\n  * <li><code>java.util.MemoryHandler.target</code> - specifies the\n  *     name of a subclass of {@link Handler} that will be used as the\n  *     target handler.  There is no default value for this property;\n  *     if it is not set, the no-argument MemoryHandler constructor\n  *     will throw an exception.</li>\n- *\n  * </ul>\n  *\n  * @author Sascha Brawer (brawer@acm.org)"}, {"sha": "d4fc6e603c1e69cc7542fa7c02848740249e171d", "filename": "libjava/java/util/logging/SocketHandler.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Futil%2Flogging%2FSocketHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjava%2Futil%2Flogging%2FSocketHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Flogging%2FSocketHandler.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -68,7 +68,7 @@\n  *\n  * <li><code>java.util.SocketHandler.encoding</code> - specifies\n  *     the name of the character encoding. Default value:\n- *     the default platform encoding.\n+ *     the default platform encoding.</li>\n  *\n  * <li><code>java.util.SocketHandler.host</code> - specifies\n  *     the name of the host to which records are published."}, {"sha": "e0aef0a5e2f490ce173a173f36194d13d4a16f53", "filename": "libjava/javax/naming/NamingException.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjavax%2Fnaming%2FNamingException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a17c9f2ea1ecec71169eff40c591ca3bf8307a32/libjava%2Fjavax%2Fnaming%2FNamingException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjavax%2Fnaming%2FNamingException.java?ref=a17c9f2ea1ecec71169eff40c591ca3bf8307a32", "patch": "@@ -93,7 +93,7 @@ public class NamingException extends Exception\n   /**\n    * Creates a new NamingException without a message. Does not set any of the\n    * <code>rootException</code>, <code>resolvedName</code>,\n-   * <code>resolvedObj</code> or <code>remainingObject,<code> fields.\n+   * <code>resolvedObj</code> or <code>remainingObject</code> fields.\n    * These fields can be set later.\n    */\n   public NamingException ()\n@@ -104,7 +104,7 @@ public NamingException ()\n   /**\n    * Creates a new NamingException with a detailed message. Does not set\n    * the <code>rootException</code>, <code>resolvedName</code>,\n-   * <code>resolvedObj</code> or <code>remainingObject,<code> fields.\n+   * <code>resolvedObj</code> or <code>remainingObject,</code> fields.\n    * These fields can be set later.\n    */\n   public NamingException (String msg)"}]}