{"sha": "70fb00df825a01713f7e907128ed2f900e5ac287", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzBmYjAwZGY4MjVhMDE3MTNmN2U5MDcxMjhlZDJmOTAwZTVhYzI4Nw==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2006-09-16T09:01:16Z"}, "committer": {"name": "Eric Christopher", "email": "echristo@gcc.gnu.org", "date": "2006-09-16T09:01:16Z"}, "message": "re PR target/29030 (gcc.dg/array-9.c produces internal compiler error on Darwin at -m64)\n\n2006-09-16   Andrew Pinski  <pinskia@physics.uc.edu>\n             Jack Howarth  <howarth@bromo.med.uc.edu>\n\n        PR target/29030\n        * config/rs6000/rs6000.c (rs6000_darwin64_record_arg_advance_recurse)\n        skip on error_mark_node.                                                                   (rs6000_darwin64_record_arg_recurse): Likewise.\n\nCo-Authored-By: Jack Howarth <howarth@bromo.med.uc.edu>\n\nFrom-SVN: r116994", "tree": {"sha": "def99f4399c3f3870a8bf4fd8e214410a64584eb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/def99f4399c3f3870a8bf4fd8e214410a64584eb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/70fb00df825a01713f7e907128ed2f900e5ac287", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70fb00df825a01713f7e907128ed2f900e5ac287", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70fb00df825a01713f7e907128ed2f900e5ac287", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70fb00df825a01713f7e907128ed2f900e5ac287/comments", "author": null, "committer": null, "parents": [{"sha": "3c40b0525ea4b4fd83041c2b9d0ef78801a3dabe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3c40b0525ea4b4fd83041c2b9d0ef78801a3dabe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3c40b0525ea4b4fd83041c2b9d0ef78801a3dabe"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "52549ad870e1ce0bb846c3e6414b9e5091928e18", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70fb00df825a01713f7e907128ed2f900e5ac287/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70fb00df825a01713f7e907128ed2f900e5ac287/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=70fb00df825a01713f7e907128ed2f900e5ac287", "patch": "@@ -1,3 +1,11 @@\n+2006-09-16   Andrew Pinski  <pinskia@physics.uc.edu>\n+\t     Jack Howarth  <howarth@bromo.med.uc.edu>\n+\n+\tPR target/29030\n+\t* config/rs6000/rs6000.c (rs6000_darwin64_record_arg_advance_recurse)\n+\tskip on error_mark_node.\n+\t(rs6000_darwin64_record_arg_recurse): Likewise.\n+\n 2006-09-16  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* rtl.h (LABEL_OUTSIDE_LOOP_P): Remove."}, {"sha": "d8d0db10b7c6b5085179c8dfc4fa4d3eb781ecc5", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/70fb00df825a01713f7e907128ed2f900e5ac287/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/70fb00df825a01713f7e907128ed2f900e5ac287/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=70fb00df825a01713f7e907128ed2f900e5ac287", "patch": "@@ -4607,7 +4607,10 @@ rs6000_darwin64_record_arg_advance_recurse (CUMULATIVE_ARGS *cum,\n       {\n \tHOST_WIDE_INT bitpos = startbitpos;\n \ttree ftype = TREE_TYPE (f);\n-\tenum machine_mode mode = TYPE_MODE (ftype);\n+\tenum machine_mode mode;\n+\tif (ftype == error_mark_node)\n+\t  continue;\n+\tmode = TYPE_MODE (ftype);\n \n \tif (DECL_SIZE (f) != 0\n \t    && host_integerp (bit_position (f), 1))\n@@ -4975,7 +4978,10 @@ rs6000_darwin64_record_arg_recurse (CUMULATIVE_ARGS *cum, tree type,\n       {\n \tHOST_WIDE_INT bitpos = startbitpos;\n \ttree ftype = TREE_TYPE (f);\n-\tenum machine_mode mode = TYPE_MODE (ftype);\n+\tenum machine_mode mode;\n+\tif (ftype == error_mark_node)\n+\t  continue;\n+\tmode = TYPE_MODE (ftype);\n \n \tif (DECL_SIZE (f) != 0\n \t    && host_integerp (bit_position (f), 1))"}]}