{"sha": "bc202b70061a5e8765d537d4222b25284b24361a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmMyMDJiNzAwNjFhNWU4NzY1ZDUzN2Q0MjIyYjI1Mjg0YjI0MzYxYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-11-19T10:56:53Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2004-11-19T10:56:53Z"}, "message": "errout.ads, errout.adb: (First_Sloc): New function\n\n\t* errout.ads, errout.adb: (First_Sloc): New function\n\n\t* par-ch5.adb (P_Condition): Check for redundant parens is now a style\n\tcheck (-gnatyx) instead of being included as a redundant construct\n\twarning.\n\n\t* sem_ch6.adb: Change name Style_Check_Subprogram_Order to\n\tStyle_Check_Order_Subprograms.\n\n\t* style.ads, styleg.ads, styleg.adb, styleg-c.adb, stylesw.ads,\n\tstylesw.adb: Add Style_Check_Xtra_Parens\n\n\t* usage.adb: Add line for -gnatyx (check extra parens)\n\n\t* vms_data.ads: Add entry for STYLE_CHECKS=XTRA_PARENS => -gnatyx\n\nFrom-SVN: r90905", "tree": {"sha": "bd2bdeb5f19ff29203c41b2c8b4fd854bcaa43aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd2bdeb5f19ff29203c41b2c8b4fd854bcaa43aa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bc202b70061a5e8765d537d4222b25284b24361a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc202b70061a5e8765d537d4222b25284b24361a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bc202b70061a5e8765d537d4222b25284b24361a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bc202b70061a5e8765d537d4222b25284b24361a/comments", "author": null, "committer": null, "parents": [{"sha": "1d571f3b00a155910504a2b219c77b839aebbb16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d571f3b00a155910504a2b219c77b839aebbb16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d571f3b00a155910504a2b219c77b839aebbb16"}], "stats": {"total": 158, "additions": 100, "deletions": 58}, "files": [{"sha": "9751d2a2cebd92e65de4b6b6c4a1bf913fe4d035", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 53, "deletions": 45, "changes": 98, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=bc202b70061a5e8765d537d4222b25284b24361a", "patch": "@@ -601,52 +601,8 @@ package body Errout is\n    -----------------\n \n    procedure Error_Msg_F (Msg : String; N : Node_Id) is\n-      SI : constant Source_File_Index := Source_Index (Get_Source_Unit (N));\n-      SF : constant Source_Ptr        := Source_First (SI);\n-      F  : Node_Id;\n-      S  : Source_Ptr;\n-\n    begin\n-      F := First_Node (N);\n-      S := Sloc (F);\n-\n-      --  The following circuit is a bit subtle. When we have parenthesized\n-      --  expressions, then the Sloc will not record the location of the\n-      --  paren, but we would like to post the flag on the paren. So what\n-      --  we do is to crawl up the tree from the First_Node, adjusting the\n-      --  Sloc value for any parentheses we know are present. Yes, we know\n-      --  this circuit is not 100% reliable (e.g. because we don't record\n-      --  all possible paren level valoues), but this is only for an error\n-      --  message so it is good enough.\n-\n-      Node_Loop : loop\n-         Paren_Loop : for J in 1 .. Paren_Count (F) loop\n-\n-            --  We don't look more than 12 characters behind the current\n-            --  location, and in any case not past the front of the source.\n-\n-            Search_Loop : for K in 1 .. 12 loop\n-               exit Search_Loop when S = SF;\n-\n-               if Source_Text (SI) (S - 1) = '(' then\n-                  S := S - 1;\n-                  exit Search_Loop;\n-\n-               elsif Source_Text (SI) (S - 1) <= ' ' then\n-                  S := S - 1;\n-\n-               else\n-                  exit Search_Loop;\n-               end if;\n-            end loop Search_Loop;\n-         end loop Paren_Loop;\n-\n-         exit Node_Loop when F = N;\n-         F := Parent (F);\n-         exit Node_Loop when Nkind (F) not in N_Subexpr;\n-      end loop Node_Loop;\n-\n-      Error_Msg_NEL (Msg, N, N, S);\n+      Error_Msg_NEL (Msg, N, N, First_Sloc (N));\n    end Error_Msg_F;\n \n    ------------------\n@@ -1390,6 +1346,58 @@ package body Errout is\n       return Earliest;\n    end First_Node;\n \n+   ----------------\n+   -- First_Sloc --\n+   ----------------\n+\n+   function First_Sloc (N : Node_Id) return Source_Ptr is\n+      SI : constant Source_File_Index := Source_Index (Get_Source_Unit (N));\n+      SF : constant Source_Ptr        := Source_First (SI);\n+      F  : Node_Id;\n+      S  : Source_Ptr;\n+\n+   begin\n+      F := First_Node (N);\n+      S := Sloc (F);\n+\n+      --  The following circuit is a bit subtle. When we have parenthesized\n+      --  expressions, then the Sloc will not record the location of the\n+      --  paren, but we would like to post the flag on the paren. So what\n+      --  we do is to crawl up the tree from the First_Node, adjusting the\n+      --  Sloc value for any parentheses we know are present. Yes, we know\n+      --  this circuit is not 100% reliable (e.g. because we don't record\n+      --  all possible paren level valoues), but this is only for an error\n+      --  message so it is good enough.\n+\n+      Node_Loop : loop\n+         Paren_Loop : for J in 1 .. Paren_Count (F) loop\n+\n+            --  We don't look more than 12 characters behind the current\n+            --  location, and in any case not past the front of the source.\n+\n+            Search_Loop : for K in 1 .. 12 loop\n+               exit Search_Loop when S = SF;\n+\n+               if Source_Text (SI) (S - 1) = '(' then\n+                  S := S - 1;\n+                  exit Search_Loop;\n+\n+               elsif Source_Text (SI) (S - 1) <= ' ' then\n+                  S := S - 1;\n+\n+               else\n+                  exit Search_Loop;\n+               end if;\n+            end loop Search_Loop;\n+         end loop Paren_Loop;\n+\n+         exit Node_Loop when F = N;\n+         F := Parent (F);\n+         exit Node_Loop when Nkind (F) not in N_Subexpr;\n+      end loop Node_Loop;\n+\n+      return S;\n+   end First_Sloc;\n \n    ----------------\n    -- Initialize --"}, {"sha": "ffc44bd19b14d2f947d78c64e309ec1faa3c8e29", "filename": "gcc/ada/errout.ads", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Ferrout.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Ferrout.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.ads?ref=bc202b70061a5e8765d537d4222b25284b24361a", "patch": "@@ -584,6 +584,12 @@ package Errout is\n    --  Given a construct C, finds the first node in the construct, i.e. the\n    --  one with the lowest Sloc value. This is useful in placing error msgs.\n \n+   function First_Sloc (N : Node_Id) return Source_Ptr;\n+   --  Given the node for an expression, return a source pointer value that\n+   --  points to the start of the first token in the expression. In the case\n+   --  where the expression is parenthesized, an attempt is made to include\n+   --  the parentheses (i.e. to return the location of the initial paren).\n+\n    procedure Purge_Messages (From : Source_Ptr; To : Source_Ptr)\n      renames Erroutc.Purge_Messages;\n    --  All error messages whose location is in the range From .. To (not"}, {"sha": "6293ad6ba6b86c8329f15869e192bec35281d100", "filename": "gcc/ada/par-ch5.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Fpar-ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Fpar-ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fpar-ch5.adb?ref=bc202b70061a5e8765d537d4222b25284b24361a", "patch": "@@ -1268,10 +1268,10 @@ package body Ch5 is\n       --  Otherwise check for redundant parens\n \n       else\n-         if Warn_On_Redundant_Constructs\n+         if Style_Check\n            and then Paren_Count (Cond) > 0\n          then\n-            Error_Msg_F (\"redundant parentheses?\", Cond);\n+            Style.Check_Xtra_Parens (First_Sloc (Cond));\n          end if;\n \n          --  And return the result"}, {"sha": "58d7e53cb22af54d305a12b921fb0696ab7c6a91", "filename": "gcc/ada/sem_ch6.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Fsem_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Fsem_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch6.adb?ref=bc202b70061a5e8765d537d4222b25284b24361a", "patch": "@@ -2978,7 +2978,7 @@ package body Sem_Ch6 is\n       --  Check body in alpha order if this is option\n \n       if Style_Check\n-        and then Style_Check_Subprogram_Order\n+        and then Style_Check_Order_Subprograms\n         and then Nkind (N) = N_Subprogram_Body\n         and then Comes_From_Source (N)\n         and then In_Extended_Main_Source_Unit (N)"}, {"sha": "c7a46ed3e3b56e53960a5e41c34bd26b6c116551", "filename": "gcc/ada/style.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Fstyle.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Fstyle.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyle.ads?ref=bc202b70061a5e8765d537d4222b25284b24361a", "patch": "@@ -169,6 +169,11 @@ package Style is\n      renames Style_Inst.Check_Vertical_Bar;\n    --  Called after scanning a vertical bar to check spacing\n \n+   procedure Check_Xtra_Parens (Loc : Source_Ptr)\n+     renames Style_Inst.Check_Xtra_Parens;\n+   --  Called after scanning a conditional expression that has at least one\n+   --  level of parentheses around the entire expression.\n+\n    procedure No_End_Name (Name : Node_Id)\n      renames Style_Inst.No_End_Name;\n    --  Called if an END is encountered where a name is allowed but not present."}, {"sha": "bc1a13bc4478ae39b96196b0d0d68a74d74e7382", "filename": "gcc/ada/styleg-c.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Fstyleg-c.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Fstyleg-c.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg-c.adb?ref=bc202b70061a5e8765d537d4222b25284b24361a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -217,7 +217,7 @@ package body Styleg.C is\n \n    procedure Subprogram_Not_In_Alpha_Order (Name : Node_Id) is\n    begin\n-      if Style_Check_Subprogram_Order then\n+      if Style_Check_Order_Subprograms then\n          Error_Msg_N\n            (\"(style) subprogram body& not in alphabetical order\", Name);\n       end if;"}, {"sha": "91c807b1a0707728a66df2db76430a4fd346d922", "filename": "gcc/ada/styleg.adb", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Fstyleg.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Fstyleg.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg.adb?ref=bc202b70061a5e8765d537d4222b25284b24361a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 1992-2003 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -28,7 +28,7 @@\n --  checking rules. For documentation of these rules, see comments on the\n --  individual procedures.\n \n-with Casing;  use Casing;\n+with Casing;   use Casing;\n with Csets;    use Csets;\n with Err_Vars; use Err_Vars;\n with Opt;      use Opt;\n@@ -667,6 +667,17 @@ package body Styleg is\n       end if;\n    end Check_Vertical_Bar;\n \n+   -----------------------\n+   -- Check_Xtra_Parens --\n+   -----------------------\n+\n+   procedure Check_Xtra_Parens (Loc : Source_Ptr) is\n+   begin\n+      if Style_Check_Xtra_Parens then\n+         Error_Msg (\"redundant parentheses?\", Loc);\n+      end if;\n+   end Check_Xtra_Parens;\n+\n    ----------------------------\n    -- Determine_Token_Casing --\n    ----------------------------"}, {"sha": "bf5b1e144cd2ad43fa2bffc579adca7b70ac8a6a", "filename": "gcc/ada/styleg.ads", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Fstyleg.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Fstyleg.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstyleg.ads?ref=bc202b70061a5e8765d537d4222b25284b24361a", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2002 Free Software Foundation, Inc.          --\n+--          Copyright (C) 1992-2004 Free Software Foundation, Inc.          --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -132,6 +132,10 @@ package Styleg is\n    procedure Check_Vertical_Bar;\n    --  Called after scanning a vertical bar to check spacing\n \n+   procedure Check_Xtra_Parens (Loc : Source_Ptr);\n+   --  Called after scanning a conditional expression that has at least one\n+   --  level of parentheses around the entire expression.\n+\n    procedure No_End_Name (Name : Node_Id);\n    --  Called if an END is encountered where a name is allowed but not present.\n    --  The parameter is the node whose name is the name that is permitted in"}, {"sha": "d3c46def5394eac5bb513fa9f5cfb7aace74fada", "filename": "gcc/ada/stylesw.ads", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Fstylesw.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Fstylesw.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fstylesw.ads?ref=bc202b70061a5e8765d537d4222b25284b24361a", "patch": "@@ -145,6 +145,11 @@ package Stylesw is\n    --  zero (a value of zero resets it to False). If True, it activates\n    --  checking the maximum nesting level against Style_Max_Nesting_Level.\n \n+   Style_Check_Order_Subprograms : Boolean := False;\n+   --  This can be set True by using the -gnatg or -gnatyo switch. If it\n+   --  is True, then names of subprogram bodies must be in alphabetical\n+   --  order (not taking casing into account).\n+\n    Style_Check_Pragma_Casing : Boolean := False;\n    --  This can be set True by using the -gnatg or -gnatyp switches. If\n    --  it is True, then pragma names must use mixed case.\n@@ -216,10 +221,10 @@ package Stylesw is\n    --  where horizontal tabs are permitted, a horizontal tab is acceptable\n    --  for meeting the requirement for a space.\n \n-   Style_Check_Subprogram_Order : Boolean := False;\n-   --  This can be set True by using the -gnatg or -gnatyo switch. If it\n-   --  is True, then names of subprogram bodies must be in alphabetical\n-   --  order (not taking casing into account).\n+   Style_Check_Xtra_Parens : Boolean := False;\n+   --  This can be set True by using the -gnatg or -gnatyx switch. If true,\n+   --  then it is not allowed to enclose entire conditional expressions\n+   --  in parentheses (C style).\n \n    Style_Max_Line_Length : Int := 0;\n    --  Value used to check maximum line length. Gets reset as a result of"}, {"sha": "44d8df730e7145ca4e3e42e5aa9ea7d821d00963", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=bc202b70061a5e8765d537d4222b25284b24361a", "patch": "@@ -445,6 +445,7 @@ begin\n    Write_Line (\"        r    check casing for identifier references\");\n    Write_Line (\"        s    check separate subprogram specs present\");\n    Write_Line (\"        t    check token separation rules\");\n+   Write_Line (\"        x    check extra parens around conditionals\");\n \n    --  Lines for -gnatyN switch\n "}, {"sha": "12b6734f57352005d66db648ecb4cbfb4b9acce9", "filename": "gcc/ada/vms_data.ads", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Fvms_data.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bc202b70061a5e8765d537d4222b25284b24361a/gcc%2Fada%2Fvms_data.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fvms_data.ads?ref=bc202b70061a5e8765d537d4222b25284b24361a", "patch": "@@ -1815,7 +1815,9 @@ package VMS_Data is\n                                             \"SPECS \"                       &\n                                                \"-gnatys \"                  &\n                                             \"TOKEN \"                       &\n-                                               \"-gnatyt \";\n+                                               \"-gnatyt \"                  &\n+                                            \"XTRA_PARENS \"                 &\n+                                               \"-gnatyx \";\n    --        /NOSTYLE_CHECKS (D)\n    --        /STYLE_CHECKS[=(keyword,[...])]\n    --"}]}