{"sha": "5f895f22173d78c1995a001d721d2ae1d075797b", "node_id": "C_kwDOANBUbNoAKDVmODk1ZjIyMTczZDc4YzE5OTVhMDAxZDcyMWQyYWUxZDA3NTc5N2I", "commit": {"author": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-09-05T18:06:30Z"}, "committer": {"name": "Aldy Hernandez", "email": "aldyh@redhat.com", "date": "2022-09-05T20:16:14Z"}, "message": "Do not fold __builtin_signbit if NAN is a possibility.\n\nI had some queued up work to try harder to keep the sign bit up to\ndate in the presence of NANs, but after the discussion with Richi\nregarding the representation of NAN and signs in the frange, I've\ndecided to put it aside until after Cauldron, since it'll probably get\nrewritten anyhow.  So for now, the sign property in the frange is not\napplicable to NANs.\n\nRight now the only user of the sign bit that affects generated code\n(apart from signed zeros) is __builtin_sign, so I'm just checking for\nNAN there.  Signed zeros continue working as before.\n\nRegstrapped and mpfr checked on x86-64 Linux.\n\ngcc/ChangeLog:\n\n\t* gimple-range-fold.cc\n\t(fold_using_range::range_of_builtin_int_call): Ignore sign bit\n\twhen there's the possibility of a NAN.", "tree": {"sha": "93892fb147b0280e2b7d62256c6f45a0d0bb5ec8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/93892fb147b0280e2b7d62256c6f45a0d0bb5ec8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5f895f22173d78c1995a001d721d2ae1d075797b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f895f22173d78c1995a001d721d2ae1d075797b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5f895f22173d78c1995a001d721d2ae1d075797b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5f895f22173d78c1995a001d721d2ae1d075797b/comments", "author": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aldyh", "id": 12937877, "node_id": "MDQ6VXNlcjEyOTM3ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/12937877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aldyh", "html_url": "https://github.com/aldyh", "followers_url": "https://api.github.com/users/aldyh/followers", "following_url": "https://api.github.com/users/aldyh/following{/other_user}", "gists_url": "https://api.github.com/users/aldyh/gists{/gist_id}", "starred_url": "https://api.github.com/users/aldyh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aldyh/subscriptions", "organizations_url": "https://api.github.com/users/aldyh/orgs", "repos_url": "https://api.github.com/users/aldyh/repos", "events_url": "https://api.github.com/users/aldyh/events{/privacy}", "received_events_url": "https://api.github.com/users/aldyh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1de9aa45529a98a5760a21570b181b78dbd11b3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1de9aa45529a98a5760a21570b181b78dbd11b3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1de9aa45529a98a5760a21570b181b78dbd11b3c"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "c9c7a2ccc7026e40b4292bbdebff812d9ac60d29", "filename": "gcc/gimple-range-fold.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5f895f22173d78c1995a001d721d2ae1d075797b/gcc%2Fgimple-range-fold.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5f895f22173d78c1995a001d721d2ae1d075797b/gcc%2Fgimple-range-fold.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-range-fold.cc?ref=5f895f22173d78c1995a001d721d2ae1d075797b", "patch": "@@ -1029,7 +1029,9 @@ fold_using_range::range_of_builtin_int_call (irange &r, gcall *call,\n \tfrange tmp;\n \tif (src.get_operand (tmp, arg))\n \t  {\n-\t    if (tmp.get_signbit ().varying_p ())\n+\t    if (tmp.get_signbit ().varying_p ()\n+\t\t// FIXME: We don't support signed NANs yet.\n+\t\t|| !tmp.get_nan ().no_p ())\n \t      return false;\n \t    if (tmp.get_signbit ().yes_p ())\n \t      r.set_nonzero (type);"}]}