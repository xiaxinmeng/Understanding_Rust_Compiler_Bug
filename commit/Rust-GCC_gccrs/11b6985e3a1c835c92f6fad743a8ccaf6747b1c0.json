{"sha": "11b6985e3a1c835c92f6fad743a8ccaf6747b1c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFiNjk4NWUzYTFjODM1YzkyZjZmYWQ3NDNhOGNjYWY2NzQ3YjFjMA==", "commit": {"author": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2005-05-26T07:27:21Z"}, "committer": {"name": "Andreas Jaeger", "email": "aj@gcc.gnu.org", "date": "2005-05-26T07:27:21Z"}, "message": "* gcc.dg/tree-ssa/ssa-pre-14.c (foo): Use correct type for strlen.\n\nFrom-SVN: r100194", "tree": {"sha": "86d12ee612f1f78ea03d5e7e81f5be9d9d2ee474", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86d12ee612f1f78ea03d5e7e81f5be9d9d2ee474"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11b6985e3a1c835c92f6fad743a8ccaf6747b1c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11b6985e3a1c835c92f6fad743a8ccaf6747b1c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11b6985e3a1c835c92f6fad743a8ccaf6747b1c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11b6985e3a1c835c92f6fad743a8ccaf6747b1c0/comments", "author": null, "committer": null, "parents": [{"sha": "36b72d8d92f000ea8b35df9409167afb88760501", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/36b72d8d92f000ea8b35df9409167afb88760501", "html_url": "https://github.com/Rust-GCC/gccrs/commit/36b72d8d92f000ea8b35df9409167afb88760501"}], "stats": {"total": 66, "additions": 35, "deletions": 31}, "files": [{"sha": "e7747a3706aa64696516812c4d60a3f18c73233e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 32, "deletions": 28, "changes": 60, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11b6985e3a1c835c92f6fad743a8ccaf6747b1c0/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11b6985e3a1c835c92f6fad743a8ccaf6747b1c0/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=11b6985e3a1c835c92f6fad743a8ccaf6747b1c0", "patch": "@@ -1,3 +1,7 @@\n+2005-05-26  Andreas Jaeger  <aj@suse.de>\n+\n+\t* gcc.dg/tree-ssa/ssa-pre-14.c (foo): Use correct type for strlen.\n+\n 2005-05-26  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR libfortran/17283\n@@ -13,7 +17,7 @@\n \t    Mike Stump  <mrs@apple.com>\n \n \t* objc/execute/next_mapping.h: Update for C++.\n-\t\n+\n \t* obj-c++.dg/selector-1.mm: Move to...\n \t* obj-c++.dg/selector-4.mm: here...\n \n@@ -213,7 +217,7 @@\n \t* gcc.c-torture/execute/20020720-1.x: Add xfail for m32r*-*.\n \n 2005-05-20  Bjoern Haase <bjoern.m.haase@web.de>\n-\t\n+\n \t* gcc.c-torture/execute/20020720-1.x: Add xfail for avr-*-*.\n \n 2004-05-19  Richard Henderson  <rth@redhat.com>\n@@ -246,7 +250,7 @@\n 2005-05-18  Devang Patel  <dpatel@apple.com>\n \n \t* g++.dg/opt/20050511-1.C: New test.\n-\t\n+\n 2005-05-18  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \tPR libfortran/21127\n@@ -275,7 +279,7 @@\n 2005-05-17  Mark Mitchell  <mark@codesourcery.com>\n \n \t* gcc.dg/compat/struct-layout-1_generate.c (iterative_hash):\n-\tRemove little-endian optimizations. \n+\tRemove little-endian optimizations.\n \n 2005-05-17  Jeff Law  <law@redhat.com>\n \n@@ -332,7 +336,7 @@\n \t* gcc.dg/compat/struct-layout-1.exp: Do not link with libiberty.\n \t* gcc.dg/compat/struct-layout-1_generate.c (config.h): Do not include.\n \t(limits.h): Include unconditionally.\n-\t(stdlib.h): Likewise. \n+\t(stdlib.h): Likewise.\n \t(hashtab.h): Do not include.\n \t(getopt.h): Likewise.\n \t(stddef.h): Include.\n@@ -348,7 +352,7 @@\n \t(e_insert): Likewise.\n \t(output): Use, instead of libiberty hashtable functions.\n \t(main): Do not use getopt.  Do not call htab_create.\n-\t\n+\n 2005-05-16  David Billinghurst <David.Billinghurst@riotinto.com>\n \n \tPR libstdc++/21526\n@@ -531,7 +535,7 @@\n 2005-05-05  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/21352\n-\t* g++.dg/template/crash37.C: New test. \n+\t* g++.dg/template/crash37.C: New test.\n \n 2005-05-05  Paul Brook  <paul@codesourcery.com>\n \n@@ -663,7 +667,7 @@\n \n \tPR tree-optimization/21272\n \t* gcc.dg/vect/vect-ifcvt-10.c: New test.\n-\t\n+\n 2005-04-29  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR fortran/13082\n@@ -796,7 +800,7 @@\n 2005-04-25  Devang Patel <dpatel@apple.com>\n \n \t* gcc.dg/stabs-attrib-vect-darwin.c: New test.\n-\t\n+\n 2005-04-25  Andrew Pinski  <pinskia@physics.uc.edu>\n \n \tPR testsuite/21062\n@@ -896,7 +900,7 @@\n \n \tPR optimization/20994\n \t* gcc.dg/tree-ssa/ifc-3.c: New test.\n-\t\n+\n 2005-04-20  Joseph S. Myers  <joseph@codesourcery.com>\n \n \tPR c/12913\n@@ -906,7 +910,7 @@\n \n 2005-04-19  Richard Henderson  <rth@redhat.com>\n \n-\t* lib/target-supports.exp (check_effective_target_vect_int_mult): \n+\t* lib/target-supports.exp (check_effective_target_vect_int_mult):\n \tFix typo in exists check.\n \t(check_effective_target_sync_int_long): New.\n \t* gcc.dg/ia64-sync-1.c: Enable for all effective-target sync_int_long.\n@@ -973,7 +977,7 @@\n 2005-04-18  Laurent GUERBY  <laurent@guerby.net>\n \n \t* ada/acats/run_all.sh: Use sync when executable not present.\n-\t\n+\n 2005-04-18  Devang Patel  <dpatel@apple.com>\n \n \t* gcc.dg/vect/vect-11.c: Require effective target vect_int_mult.\n@@ -1046,7 +1050,7 @@\n \t* typeck.c (cxx_sizeof_or_alignof_type): Check whether the type to\n \twhich sizeof/alignof is dependent, rather than just whether we are\n \tprocessing_template_decl.\n-\t\n+\n 2005-04-15  Thomas Koenig  <Thomas.Koenig@online.de>\n \n \t* gfortran.fortran-torture/execute/intrinsic_spread.f90:\n@@ -1071,7 +1075,7 @@\n \t* gcc.dg/builtins-53.c: Include builtins-config.h.\n \tCheck floorf, ceilf, floorl and ceill transformations\n \tonly when HAVE_C99_RUNTIME is defined.\n-\t\n+\n 2005-04-15  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR middle-end/20739\n@@ -1219,12 +1223,12 @@\n         * gcc.dg/vect/vect-ifcvt-6.c: New test.\n         * gcc.dg/vect/vect-ifcvt-7.c: New test.\n         * gcc.dg/vect/vect-none.c: Now one loop is vectorized.\n-\t\n+\n 2004-04-11  Devang Patel  <dpatel@apple.com>\n \n         * gcc.dg/vect/vect-dv-1.c: New test.\n         * gcc.dg/vect/vect-dv-2.c: New test.\n-\t\n+\n 2005-04-11  Diego Novillo  <dnovillo@redhat.com>\n \n \tPR tree-optimization/20933\n@@ -1247,7 +1251,7 @@\n \n \t* gcc.dg/builtins-53.c: Also check (int)ceil* and\n \t(long long int)ceil*.\n-\t\n+\n 2005-04-10  Mark Mitchell  <mark@codesourcery.com>\n \n \t* g++.dg/warn/Wdtor1.C: Declare template in system header with\n@@ -1416,7 +1420,7 @@\n \n 2005-04-06  Dorit Naishlos  <dorit@il.ibm.com>\n \n-\t* gfortran.dg/vect/vect-5.f90: xfail for lp64. \n+\t* gfortran.dg/vect/vect-5.f90: xfail for lp64.\n \n 2005-04-05  Mark Mitchell  <mark@codesourcery.com>\n \n@@ -1463,7 +1467,7 @@\n \n \t* lib/target-supports.exp (check_effective_target_vect_shif): New.\n \t* gcc.dg/vect/vect-shift-1.c: New test.\n-\t\n+\n 2005-04-05  Francois-Xavier Coudert  <coudert@clipper.ens.fr>\n \n \tPR libfortran/20755\n@@ -1935,7 +1939,7 @@\n \t(g++_init): Make sure that CXXFLAGS is set.\n \t* lib/gcc-defs.exp (gcc-set-multilib-library-path): New function.\n \t* lib/gcc-dg.exp: Use gcc-set-multilib-library-path.\n-\t* lib/gfortran.exp (gfortran_link_flags): Likewise. \n+\t* lib/gfortran.exp (gfortran_link_flags): Likewise.\n \t* lib/objc.exp (objc_init): Likewise.\n \t* lib/treelang.exp (treelang_init): Likewise.\n \n@@ -2019,7 +2023,7 @@\n \t* gfortran.dg/pr18025.f90: New test.\n \n 2005-03-23  Dale Johannesen  <dalej@apple.com>\n-\t\n+\n \t* gcc.dg/20020312-2.c:  Fix for non-PowerPC Darwin.\n \n 2005-03-23  Mark Mitchell  <mark@codesourcery.com>\n@@ -2088,7 +2092,7 @@\n 2005-03-21  Stuart Hastings  <stuart@apple.com>\n \n \t* gcc.target/i386/sse-2.c: New.\n-\t\n+\n 2005-03-21  Uros Bizjak  <uros@kss-loka.si>\n \n \t* gcc.dg/builtins-46.c: Also check lrint* and llrint*.\n@@ -2107,7 +2111,7 @@\n \n 2005-03-21  Paolo Carlini  <pcarlini@suse.de>\n \n-\tPR c++/20147\t\n+\tPR c++/20147\n \t* g++.dg/ext/stmtexpr4.C: New test.\n \n 2005-03-20  Roger Sayle  <roger@eyesopen.com>\n@@ -2431,7 +2435,7 @@\n \n \tPR c++/20142\n \t* g++.dg/init/array18.C: Add dg-do run marker.\n-\t\n+\n \tPR c++/20142\n \t* g++.dg/init/array18.C: New test.\n \n@@ -2531,13 +2535,13 @@\n \n \t* objc.dg/stabs-1.m: hppa*64*-*-* doesn't have stabs.\n \n-2005-03-05  Steven G. Kargl  <kargls@comcast.net> \n+2005-03-05  Steven G. Kargl  <kargls@comcast.net>\n \n \t* gfortran.dg/pr19936_1.f90: New test.\n \t* gfortran.dg/pr19936_2.f90: New test.\n \t* gfortran.dg/pr19936_3.f90: New test.\n \n-2005-03-05  Steven G. Kargl  <kargls@comcast.net> \n+2005-03-05  Steven G. Kargl  <kargls@comcast.net>\n             Paul Thomas <prthomas@drfccad.cea.fr>\n \n \t* gfortran.dg/PR19754_1.f90: New test.\n@@ -2746,7 +2750,7 @@\n \t* g++.dg/parse/error27.C: New test.\n \t* g++.dg/template/qualttp15.C: Adjust error markers.\n \t* g++.old-deja/g++.other/struct1.C: Likewise.\n-\t\n+\n \tPR c++/20153\n \t* g++.dg/template/error17.C: New test.\n \n@@ -2776,7 +2780,7 @@\n \n \tPR 19952\n \t* g++.dg/tree-ssa/pr19952.C: New test.\n-\t\n+\n 2005-02-22  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/19883"}, {"sha": "2371cfa1a58035614ce2e293332376056c44bf9d", "filename": "gcc/testsuite/gcc.dg/tree-ssa/ssa-pre-14.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11b6985e3a1c835c92f6fad743a8ccaf6747b1c0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11b6985e3a1c835c92f6fad743a8ccaf6747b1c0/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2Fssa-pre-14.c?ref=11b6985e3a1c835c92f6fad743a8ccaf6747b1c0", "patch": "@@ -1,12 +1,12 @@\n /* { dg-do compile } */ \n /* { dg-options \"-O2 -fdump-tree-optimized\" } */\n-extern unsigned int strlen (const char *) __attribute__ ((__pure__));\n+extern __SIZE_TYPE__ strlen (const char *) __attribute__ ((__pure__));\n \n void\n foo (const char *str)\n {\n-  unsigned int a = strlen (str);\n-  unsigned int b = strlen (str);\n+  __SIZE_TYPE__ a = strlen (str);\n+  __SIZE_TYPE__ b = strlen (str);\n   if (a != b)\n     link_error ();\n }"}]}