{"sha": "b17fc9eb2572616887716bd7ec21219b2be83e3b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjE3ZmM5ZWIyNTcyNjE2ODg3NzE2YmQ3ZWMyMTIxOWIyYmU4M2UzYg==", "commit": {"author": {"name": "Thomas Fitzsimmons", "email": "fitzsim@redhat.com", "date": "2004-01-05T21:13:46Z"}, "committer": {"name": "Thomas Fitzsimmons", "email": "fitzsim@gcc.gnu.org", "date": "2004-01-05T21:13:46Z"}, "message": "2004-01-05  Thomas Fitzsimmons  <fitzsim@redhat.com>\n\n\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java,\n\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n\t(getPreferredSize): Call preferredSize.\n\t(preferredSize): Call gtkWidgetGetPreferredDimensions.\n\t(getMinimumSize): Call minimumSize.\n\t(minimumSize): Call gtkWidgetGetPreferredDimensions.\n\t(gtkWidgetGetDimensions): Return the peer widget's current size\n\trequest.\n\t(gtkWidgetGetPreferredDimensions): Return the peer widget's\n\tnatural size request.\n\nFrom-SVN: r75442", "tree": {"sha": "2be5b938e65b9fca201b98f7e8575f3a4a0b6bb5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2be5b938e65b9fca201b98f7e8575f3a4a0b6bb5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b17fc9eb2572616887716bd7ec21219b2be83e3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b17fc9eb2572616887716bd7ec21219b2be83e3b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b17fc9eb2572616887716bd7ec21219b2be83e3b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b17fc9eb2572616887716bd7ec21219b2be83e3b/comments", "author": null, "committer": null, "parents": [{"sha": "216bb6e1f75e2b77aed197ce0eddbe72d574047b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/216bb6e1f75e2b77aed197ce0eddbe72d574047b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/216bb6e1f75e2b77aed197ce0eddbe72d574047b"}], "stats": {"total": 108, "additions": 82, "deletions": 26}, "files": [{"sha": "25d611abf38ac6885df996a946f5f1010316c03a", "filename": "libjava/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b17fc9eb2572616887716bd7ec21219b2be83e3b/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b17fc9eb2572616887716bd7ec21219b2be83e3b/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=b17fc9eb2572616887716bd7ec21219b2be83e3b", "patch": "@@ -1,3 +1,16 @@\n+2004-01-05  Thomas Fitzsimmons  <fitzsim@redhat.com>\n+\n+\t* gnu/java/awt/peer/gtk/GtkComponentPeer.java,\n+\tjni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c\n+\t(getPreferredSize): Call preferredSize.\n+\t(preferredSize): Call gtkWidgetGetPreferredDimensions.\n+\t(getMinimumSize): Call minimumSize.\n+\t(minimumSize): Call gtkWidgetGetPreferredDimensions.\n+\t(gtkWidgetGetDimensions): Return the peer widget's current size\n+\trequest.\n+\t(gtkWidgetGetPreferredDimensions): Return the peer widget's\n+\tnatural size request.\n+\n 2004-01-05  Sascha Brawer  <brawer@dandelis.ch>\n \n \tThanks to Brian Gough <bjg@network-theory.com>"}, {"sha": "0a712a0597cbdeb96450243183b932edc10dc3af", "filename": "libjava/gnu/java/awt/peer/gtk/GtkComponentPeer.java", "status": "modified", "additions": 16, "deletions": 13, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b17fc9eb2572616887716bd7ec21219b2be83e3b/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b17fc9eb2572616887716bd7ec21219b2be83e3b/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkComponentPeer.java?ref=b17fc9eb2572616887716bd7ec21219b2be83e3b", "patch": "@@ -84,8 +84,9 @@ public class GtkComponentPeer extends GtkGenericPeer\n   native int[] gtkWidgetGetForeground ();\n   native int[] gtkWidgetGetBackground ();\n   native void gtkWidgetSetVisible (boolean b);\n-  native void gtkWidgetGetDimensions(int[] dim);\n-  native void gtkWidgetGetLocationOnScreen(int[] point);\n+  native void gtkWidgetGetDimensions (int[] dim);\n+  native void gtkWidgetGetPreferredDimensions (int[] dim);\n+  native void gtkWidgetGetLocationOnScreen (int[] point);\n   native void gtkWidgetSetCursor (int type);\n   native void gtkWidgetSetBackground (int red, int green, int blue);\n   native void gtkWidgetSetForeground (int red, int green, int blue);\n@@ -196,18 +197,12 @@ public Point getLocationOnScreen ()\n \n   public Dimension getMinimumSize () \n   {\n-    int dim[]=new int[2];\n-    gtkWidgetGetDimensions (dim);\n-    Dimension d = new Dimension (dim[0],dim[1]);\n-    return (d);\n+    return minimumSize ();\n   }\n \n   public Dimension getPreferredSize ()\n   {\n-    int dim[]=new int[2];\n-    gtkWidgetGetDimensions (dim);\n-    Dimension d = new Dimension (dim[0],dim[1]);\n-    return (d);\n+    return preferredSize ();\n   }\n \n   public Toolkit getToolkit ()\n@@ -226,17 +221,25 @@ public boolean isFocusTraversable ()\n \n   public Dimension minimumSize () \n   {\n-    return getMinimumSize();\n+    int dim[] = new int[2];\n+\n+    gtkWidgetGetPreferredDimensions (dim);\n+\n+    return new Dimension (dim[0], dim[1]);\n   }\n \n   public void paint (Graphics g)\n   {\n     awtComponent.paint (g);\n   }\n \n-  public Dimension preferredSize()\n+  public Dimension preferredSize ()\n   {\n-    return getPreferredSize();\n+    int dim[] = new int[2];\n+\n+    gtkWidgetGetPreferredDimensions (dim);\n+\n+    return new Dimension (dim[0], dim[1]);\n   }\n \n   public boolean prepareImage (Image image, int width, int height,"}, {"sha": "b244fd7d59dd4dc8fbb8f3c2dc8864f01cd20360", "filename": "libjava/jni/gtk-peer/gnu_java_awt_peer_gtk_GtkComponentPeer.c", "status": "modified", "additions": 53, "deletions": 13, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b17fc9eb2572616887716bd7ec21219b2be83e3b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b17fc9eb2572616887716bd7ec21219b2be83e3b/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjni%2Fgtk-peer%2Fgnu_java_awt_peer_gtk_GtkComponentPeer.c?ref=b17fc9eb2572616887716bd7ec21219b2be83e3b", "patch": "@@ -169,29 +169,69 @@ Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkWidgetGetLocationOnScreen\n }\n \n /*\n- * Find the preferred size of a widget.\n+ * Find this widget's current size.\n  */\n JNIEXPORT void JNICALL \n Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkWidgetGetDimensions\n-    (JNIEnv *env, jobject obj, jintArray jdims)\n+  (JNIEnv *env, jobject obj, jintArray jdims)\n {\n-    void *ptr;\n-    jint *dims;\n-    GtkRequisition req;\n+  void *ptr;\n+  jint *dims;\n+  GtkRequisition requisition;\n+\n+  ptr = NSA_GET_PTR (env, obj);\n+\n+  dims = (*env)->GetIntArrayElements (env, jdims, 0);  \n+  dims[0] = dims[1] = 0;\n+\n+  gdk_threads_enter ();\n+\n+  gtk_widget_size_request (GTK_WIDGET (ptr), &requisition);\n+\n+  dims[0] = requisition.width;\n+  dims[1] = requisition.height;\n+\n+  gdk_threads_leave ();\n+\n+  (*env)->ReleaseIntArrayElements (env, jdims, dims, 0);\n+}\n \n-    ptr = NSA_GET_PTR (env, obj);\n-    dims = (*env)->GetIntArrayElements (env, jdims, 0);  \n+/*\n+ * Find this widget's preferred size.\n+ */\n+JNIEXPORT void JNICALL \n+Java_gnu_java_awt_peer_gtk_GtkComponentPeer_gtkWidgetGetPreferredDimensions\n+  (JNIEnv *env, jobject obj, jintArray jdims)\n+{\n+  void *ptr;\n+  jint *dims;\n+  GtkRequisition current_req;\n+  GtkRequisition natural_req;\n+\n+  ptr = NSA_GET_PTR (env, obj);\n+\n+  dims = (*env)->GetIntArrayElements (env, jdims, 0);  \n+  dims[0] = dims[1] = 0;\n+\n+  gdk_threads_enter ();\n+\n+  /* Save the widget's current size request. */\n+  gtk_widget_size_request (GTK_WIDGET (ptr), &current_req);\n \n-    gdk_threads_enter ();\n+  /* Get the widget's \"natural\" size request. */\n+  gtk_widget_set_size_request (GTK_WIDGET (ptr), -1, -1);\n+  gtk_widget_size_request (GTK_WIDGET (ptr), &natural_req);\n \n-    gtk_signal_emit_by_name (GTK_OBJECT (ptr), \"size_request\", &req);\n+  /* Reset the widget's size request. */\n+  gtk_widget_set_size_request (GTK_WIDGET (ptr),\n+\t\t\t       current_req.width, current_req.height);\n \n-    dims[0] = req.width;\n-    dims[1] = req.height;\n+  dims[0] = natural_req.width;\n+  dims[1] = natural_req.height;\n \n-    gdk_threads_leave ();\n+  gdk_threads_leave ();\n \n-    (*env)->ReleaseIntArrayElements(env, jdims, dims, 0);\n+  (*env)->ReleaseIntArrayElements (env, jdims, dims, 0);\n }\n \n JNIEXPORT void JNICALL "}]}