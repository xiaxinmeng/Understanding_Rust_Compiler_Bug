{"sha": "ed649cda944c2ff0b77f0203bf83f106e930c5e8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWQ2NDljZGE5NDRjMmZmMGI3N2YwMjAzYmY4M2YxMDZlOTMwYzVlOA==", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2019-11-25T10:09:42Z"}, "committer": {"name": "Martin Jambor", "email": "jamborm@gcc.gnu.org", "date": "2019-11-25T10:09:42Z"}, "message": "Make IPA-SRA follow comdat-local rules (PR 91956)\n\n2019-11-25  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/91956\n\t* ipa-sra.c (process_isra_node_results): Put the new node to the\n\tsame comdat group as the original node.\n\n\ttestsuite/\n\t* g++.dg/ipa/pr91956.C: New test.\n\nFrom-SVN: r278669", "tree": {"sha": "d1cb5d2e303d82acf499b8d891ab40e4e3abcef7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1cb5d2e303d82acf499b8d891ab40e4e3abcef7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ed649cda944c2ff0b77f0203bf83f106e930c5e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed649cda944c2ff0b77f0203bf83f106e930c5e8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ed649cda944c2ff0b77f0203bf83f106e930c5e8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ed649cda944c2ff0b77f0203bf83f106e930c5e8/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b01f1a57cc90bcee58ccf75e6062748e1d66448", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b01f1a57cc90bcee58ccf75e6062748e1d66448", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b01f1a57cc90bcee58ccf75e6062748e1d66448"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "a15cc758e541c771daad8e9a78a30481a3b2418f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed649cda944c2ff0b77f0203bf83f106e930c5e8/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed649cda944c2ff0b77f0203bf83f106e930c5e8/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ed649cda944c2ff0b77f0203bf83f106e930c5e8", "patch": "@@ -1,3 +1,9 @@\n+2019-11-25  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/91956\n+\t* ipa-sra.c (process_isra_node_results): Put the new node to the\n+\tsame comdat group as the original node.\n+\n 2019-11-25  Georg-Johann Lay  <avr@gjlay.de>\n \n \tBuild double32 / long-double32 multilibs if needed."}, {"sha": "c6ed0f44b8775352129eb94841ee2189206170d1", "filename": "gcc/ipa-sra.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed649cda944c2ff0b77f0203bf83f106e930c5e8/gcc%2Fipa-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed649cda944c2ff0b77f0203bf83f106e930c5e8/gcc%2Fipa-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-sra.c?ref=ed649cda944c2ff0b77f0203bf83f106e930c5e8", "patch": "@@ -3759,6 +3759,9 @@ process_isra_node_results (cgraph_node *node,\n     = node->create_virtual_clone (callers, NULL, new_adjustments, \"isra\",\n \t\t\t\t  suffix_counter);\n   suffix_counter++;\n+  if (node->same_comdat_group)\n+    new_node->add_to_same_comdat_group (node);\n+  new_node->calls_comdat_local = node->calls_comdat_local;\n \n   if (dump_file)\n     fprintf (dump_file, \"  Created new node %s\\n\", new_node->dump_name ());"}, {"sha": "ce59906e8c90304669f5a2a09dad6a49c14fa354", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed649cda944c2ff0b77f0203bf83f106e930c5e8/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed649cda944c2ff0b77f0203bf83f106e930c5e8/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ed649cda944c2ff0b77f0203bf83f106e930c5e8", "patch": "@@ -1,3 +1,8 @@\n+2019-11-25  Martin Jambor  <mjambor@suse.cz>\n+\n+\tPR ipa/91956\n+\t* g++.dg/ipa/pr91956.C: New test.\n+\n 2019-11-23  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \tHarald Anlauf <anlauf@gmx.de>\n "}, {"sha": "6f6edc30a4706030da1097859f7cfad7d32da271", "filename": "gcc/testsuite/g++.dg/ipa/pr91956.C", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ed649cda944c2ff0b77f0203bf83f106e930c5e8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr91956.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ed649cda944c2ff0b77f0203bf83f106e930c5e8/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr91956.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr91956.C?ref=ed649cda944c2ff0b77f0203bf83f106e930c5e8", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Os -std=c++11 -fno-strict-aliasing -fno-tree-fre -fno-tree-vrp\"  } */\n+\n+int count = 0;\n+struct VB\n+{\n+  VB() {++count;}\n+};\n+\n+struct B : virtual VB\n+{\n+  B() : B(42) {}\n+  B(int)  {}\n+};\n+\n+struct D : B\n+{\n+  D() {}\n+  D(int) : D() {}\n+};\n+\n+int main()\n+{\n+  D d{42};\n+  if (count != 1)\n+    __builtin_abort();\n+}"}]}