{"sha": "ff0cf464a4d7dab8a774739d9c566466377899fd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmYwY2Y0NjRhNGQ3ZGFiOGE3NzQ3MzlkOWM1NjY0NjYzNzc4OTlmZA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@yorick.cygnus.com", "date": "1998-11-22T23:21:44Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "1998-11-22T23:21:44Z"}, "message": "decl.c: Lose warn_about_return_type.\n\n\t* decl.c: Lose warn_about_return_type.\n\t(grokdeclarator): Always complain about implicit int, except for\n\t`main () { ... }'.\nFixes Sec7/1_5/C07352.cm.\n\nFrom-SVN: r23759", "tree": {"sha": "43045c5b0a9ac1b557aaaf9cd06b3967fb52cf4a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43045c5b0a9ac1b557aaaf9cd06b3967fb52cf4a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ff0cf464a4d7dab8a774739d9c566466377899fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff0cf464a4d7dab8a774739d9c566466377899fd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ff0cf464a4d7dab8a774739d9c566466377899fd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ff0cf464a4d7dab8a774739d9c566466377899fd/comments", "author": null, "committer": null, "parents": [{"sha": "094fe153c47e21f0c332ad277babde2858600ab4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/094fe153c47e21f0c332ad277babde2858600ab4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/094fe153c47e21f0c332ad277babde2858600ab4"}], "stats": {"total": 45, "additions": 14, "deletions": 31}, "files": [{"sha": "bc99a43694a36828d7b092450f64b2387af7f6a2", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff0cf464a4d7dab8a774739d9c566466377899fd/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff0cf464a4d7dab8a774739d9c566466377899fd/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=ff0cf464a4d7dab8a774739d9c566466377899fd", "patch": "@@ -1,5 +1,9 @@\n 1998-11-22  Jason Merrill  <jason@yorick.cygnus.com>\n \n+\t* decl.c: Lose warn_about_return_type.\n+\t(grokdeclarator): Always complain about implicit int, except for\n+\t`main () { ... }'.\n+\n \t* decl.c (tag_name): New fn.\n \t(xref_tag): Complain about using typedef-name after class-key.\n "}, {"sha": "9611b0da17eae26a9bfc5f1d75a471149df7571f", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 10, "deletions": 31, "changes": 41, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ff0cf464a4d7dab8a774739d9c566466377899fd/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ff0cf464a4d7dab8a774739d9c566466377899fd/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=ff0cf464a4d7dab8a774739d9c566466377899fd", "patch": "@@ -509,11 +509,6 @@ int current_function_returns_null;\n \n tree current_function_return_value;\n \n-/* Set to nonzero by `grokdeclarator' for a function\n-   whose return type is defaulted, if warnings for this are desired.  */\n-\n-static int warn_about_return_type;\n-\n /* Nonzero means give `double' the same size as `float'.  */\n \n extern int flag_short_double;\n@@ -9117,24 +9112,16 @@ grokdeclarator (declarator, declspecs, decl_context, initialized, attrlist)\n \t}\n       else\n \t{\n-\t  if (funcdef_flag)\n-\t    {\n-\t      if (warn_return_type\n-\t\t  && return_type == return_normal)\n-\t\t/* Save warning until we know what is really going on.  */\n-\t\twarn_about_return_type = 1;\n-\t    }\n-\t  else if (RIDBIT_SETP (RID_TYPEDEF, specbits))\n-\t    pedwarn (\"ANSI C++ forbids typedef which does not specify a type\");\n-\t  else if (innermost_code != CALL_EXPR || pedantic\n-\t\t   || (warn_return_type && return_type == return_normal))\n-\t    {\n-\t      if (innermost_code == CALL_EXPR)\n-\t\tcp_pedwarn (\"return-type of `%D' defaults to `int'\", dname);\n-\t      else\n-\t\tcp_pedwarn (\"ANSI C++ forbids declaration `%D' with no type\",\n-\t\t\t    dname);\n-\t    }\n+\t  if (! pedantic && ! warn_return_type\n+\t      && funcdef_flag\n+\t      && MAIN_NAME_P (dname)\n+\t      && ctype == NULL_TREE\n+\t      && in_namespace == NULL_TREE\n+\t      && current_namespace == global_namespace)\n+\t    /* Let `main () { }' slide, since it's so common.  */;\n+\t  else\n+\t    cp_pedwarn (\"ANSI C++ forbids declaration `%D' with no type\",\n+\t\t\tdname);\n \t  type = integer_type_node;\n \t}\n     }\n@@ -12482,7 +12469,6 @@ start_function (declspecs, declarator, attrs, pre_parsed_p)\n   /* Assume, until we see it does.  */\n   current_function_returns_value = 0;\n   current_function_returns_null = 0;\n-  warn_about_return_type = 0;\n   named_labels = 0;\n   shadowed_labels = 0;\n   current_function_assigns_this = 0;\n@@ -12597,7 +12583,6 @@ start_function (declspecs, declarator, attrs, pre_parsed_p)\n \t\tpedwarn (\"return type for `main' changed to `int'\");\n \t      TREE_TYPE (decl1) = fntype = default_function_type;\n \t    }\n-\t  warn_about_return_type = 0;\n \t}\n     }\n \n@@ -12648,9 +12633,6 @@ start_function (declspecs, declarator, attrs, pre_parsed_p)\n \tabstract_virtuals_error (decl1, TREE_TYPE (fntype));\n     }\n \n-  if (warn_about_return_type)\n-    pedwarn (\"return-type defaults to `int'\");\n-\n   /* Effective C++ rule 15.  See also c_expand_return.  */\n   if (warn_ecpp\n       && DECL_NAME (decl1) == ansi_opname[(int) MODIFY_EXPR]\n@@ -14106,7 +14088,6 @@ struct cp_function\n {\n   int returns_value;\n   int returns_null;\n-  int warn_about_return_type;\n   int assigns_this;\n   int just_assigned_this;\n   int parms_stored;\n@@ -14153,7 +14134,6 @@ push_cp_function_context (context)\n   p->shadowed_labels = shadowed_labels;\n   p->returns_value = current_function_returns_value;\n   p->returns_null = current_function_returns_null;\n-  p->warn_about_return_type = warn_about_return_type;\n   p->binding_level = current_binding_level;\n   p->ctor_label = ctor_label;\n   p->dtor_label = dtor_label;\n@@ -14196,7 +14176,6 @@ pop_cp_function_context (context)\n   shadowed_labels = p->shadowed_labels;\n   current_function_returns_value = p->returns_value;\n   current_function_returns_null = p->returns_null;\n-  warn_about_return_type = p->warn_about_return_type;\n   current_binding_level = p->binding_level;\n   ctor_label = p->ctor_label;\n   dtor_label = p->dtor_label;"}]}