{"sha": "cd6d4007aa4f72b51756e4a571abf876fa3e3133", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q2ZDQwMDdhYTRmNzJiNTE3NTZlNGE1NzFhYmY4NzZmYTNlMzEzMw==", "commit": {"author": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2008-10-21T17:55:01Z"}, "committer": {"name": "Matthias Klose", "email": "doko@gcc.gnu.org", "date": "2008-10-21T17:55:01Z"}, "message": "re PR libgcj/37636 (java tools are unable to find resource files)\n\nlibjava/ChangeLog:\n\n2008-10-21  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n        * sources.am, Makfile.in: Regenerate.\n\n2008-10-17  Matthias Klose  <doko@ubuntu.com>\n\n\t* configure.ac: Fix bashisms.\n\t* configure: Regenerate.\n\n2008-10-15  Matthias Klose  <doko@ubuntu.com>\n\n\t* configure.ac: Disable build of gjdoc, if configured without\n\t--with-antlr-jar or if no antlr.jar found.\n\t* configure: Regenerate.\n\n2008-10-09  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* classpath/configure.ac,\n\t* classpath/m4/ac_prog_antlr.m4,\n\t* classpath/m4/ac_prog_java.m4,\n\t* classpath/tools/Makefile.am:\n\tPorted --regen-gjdoc-parser patch and\n\tcantlr support from GNU Classpath.\n\n2008-10-06  Andrew Haley  <aph@redhat.com>\n\n\t* java/lang/Thread.java (Thread): Always create the ThreadLocalMap\n\twhen creating a thread.\n\t(getThreadLocals) Don't lazily create the ThreadLocalMap.\n\n2008-09-28  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* classpath/java/lang/ThreadLocalMap.java,\n\t* java/lang/ThreadLocalMap$Entry.h,\n\t* java/lang/ThreadLocalMap.h,\n\t* lib/java/lang/ThreadLocalMap.class,\n\t* lib/java/lang/ThreadLocalMap$Entry.class:\n\tAdd the new files for the ThreadLocal patch.\n\n2008-09-28  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* classpath/ChangeLog,\n\t* classpath/java/lang/InheritableThreadLocal.java,\n\t* classpath/java/lang/Thread.java,\n\t* classpath/java/lang/ThreadLocal.java:\n\tMerge Daniel Frampton's ThreadLocal patch.\n\t* gcj/javaprims.h: Updated.\n\t* java/lang/Thread.h: Regenerated.\n\t* java/lang/Thread.java:\n\tReplace WeakIdentityHashMap with ThreadLocalMap.\n\t(getThreadLocals()): Likewise.\n\t* java/lang/ThreadLocal.h: Regenerated.\n\t* java/lang/ThreadLocal.java:\n\t(computeNextHash()): New method.\n\t(ThreadLocal()): Initialise fastHash.\n\t(internalGet()): Updated to match Classpath's get().\n\t(internalSet(Object)): Likewise for set(Object).\n\t(internalRemove()): Likewise for remove().\n\t\n2008-09-25  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* classpath/configure,\n\t* classpath/configure.ac:\n\tResynchronise with Classpath's configure.\n\t* classpath/examples/Makefile.in:\n\tAdd equivalent support for building as in\n\ttools/Makefile.in.\n\t* classpath/java/nio/Buffer.java,\n\t* classpath/java/nio/ByteBuffer.java,\n\t* classpath/java/nio/ByteBufferImpl.java,\n\t* classpath/java/nio/CharBuffer.java,\n\t* classpath/java/nio/CharBufferImpl.java,\n\t* classpath/java/nio/CharSequenceBuffer.java,\n\t* classpath/java/nio/CharViewBufferImpl.java,\n\t* classpath/java/nio/DirectByteBufferImpl.java,\n\t* classpath/java/nio/DoubleBuffer.java,\n\t* classpath/java/nio/DoubleBufferImpl.java,\n\t* classpath/java/nio/DoubleViewBufferImpl.java,\n\t* classpath/java/nio/FloatBuffer.java,\n\t* classpath/java/nio/FloatBufferImpl.java,\n\t* classpath/java/nio/FloatViewBufferImpl.java,\n\t* classpath/java/nio/IntBuffer.java,\n\t* classpath/java/nio/IntBufferImpl.java,\n\t* classpath/java/nio/IntViewBufferImpl.java,\n\t* classpath/java/nio/LongBuffer.java,\n\t* classpath/java/nio/LongBufferImpl.java,\n\t* classpath/java/nio/LongViewBufferImpl.java,\n\t* classpath/java/nio/MappedByteBuffer.java,\n\t* classpath/java/nio/MappedByteBufferImpl.java,\n\t* classpath/java/nio/ShortBuffer.java,\n\t* classpath/java/nio/ShortBufferImpl.java,\n\t* classpath/java/nio/ShortViewBufferImpl.java:\n\tReplace use of gnu.classpath.Pointer with gnu.gcj.RawData,\n\tand fix some formatting issues.\n\t* classpath/tools/gnu/classpath/tools/gjdoc/expr/JavaLexer.java,\n\t* classpath/tools/gnu/classpath/tools/gjdoc/expr/JavaLexer.smap,\n\t* classpath/tools/gnu/classpath/tools/gjdoc/expr/JavaRecognizer.java,\n\t* classpath/tools/gnu/classpath/tools/gjdoc/expr/JavaRecognizer.smap,\n\t* classpath/tools/gnu/classpath/tools/gjdoc/expr/JavaTokenTypes.java,\n\t* classpath/tools/gnu/classpath/tools/gjdoc/expr/JavaTokenTypes.txt:\n\tRegenerated (later version of antlr).\n\t* java/nio/Buffer.h: Regenerated.\n\t* java/nio/Buffer.java: Ported changes from Classpath.\n\t* java/nio/ByteBuffer.h,\n\t* java/nio/CharBuffer.h: Regenerated.\n\t* java/nio/DirectByteBufferImpl.java: Ported changes from\n\tClasspath.\n\t* java/nio/DoubleBuffer.h,\n\t* java/nio/FloatBuffer.h,\n\t* java/nio/IntBuffer.h,\n\t* java/nio/LongBuffer.h,\n\t* java/nio/MappedByteBuffer.h,\n\t* java/nio/MappedByteBufferImpl.h: Regenerated.\n\t* java/nio/MappedByteBufferImpl.java: Ported changes from\n\tClasspath.\n\t* java/nio/ShortBuffer.h: Regenerated.\n\n2008-09-24  Matthias Klose  <doko@ubuntu.com>\n\n\t* configure.ac: Search for antlr.jar, if not configured.\n\t* configure: Regenerate.\n\n2008-09-24  Matthias Klose  <doko@ubuntu.com>\n\n\t* Makefile.am: Build a gjdoc binary, if enabled.\n\t* configure.ac: Add options --disable-gjdoc, --with-antlr-jar=file.\n\t* Makefile.in, */Makefile.in, configure: Regenerate.\n\n2008-09-22  Andrew Haley  <aph@redhat.com>\n\n\t* java/lang/String.java (toString(char[], int, int)): New method.\n\n2008-09-14  Matthias Klose  <doko@ubuntu.com>\n\n\tImport GNU Classpath (libgcj-import-20080914).\n\n\t* Regenerate class and header files.\n\t* Regenerate auto* files.\n\t* configure.ac: Don't pass --disable-gjdoc to classpath.\n\t* sources.am: Regenerated.\n\t* HACKING: Mention to build gjdoc in maintainer builds.\n\t* gnu/classpath/Configuration.java: Update classpath version.\n\t* gcj/javaprims.h: Update.\n\n2008-09-08  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* Makefile.am: Replace natStringBuffer.cc\n\tand natStringBuilder.cc with natAbstractStringBuffer.cc.\n\t* Makefile.in: Regenerated.\n\t* java/lang/AbstractStringBuffer.java:\n\t(append(int)): Made native.\n\t(regionMatches(int,String)): Likewise.\n\t* java/lang/StringBuffer.h: Regenerated.\n\t* java/lang/StringBuffer.java: Remerged with GNU Classpath.\n\t* java/lang/StringBuilder.h: Regenerated.\n\t* java/lang/StringBuilder.java: Remerged with GNU Classpath.\n\t* java/lang/natAbstractStringBuffer.cc: Provide common\n\tnative methods for StringBuffer and StringBuilder.\n\t* java/lang/natStringBuffer.cc,\n\t* java/lang/natStringBuilder.cc: Removed.\n\n2008-09-04  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* Makefile.in,\n\t* classpath/configure: Regenerated.\n\t* gnu/gcj/util/natDebug.cc,\n\t* gnu/gcj/xlib/natColormap.cc,\n\t* gnu/gcj/xlib/natDisplay.cc,\n\t* gnu/gcj/xlib/natDrawable.cc,\n\t* gnu/gcj/xlib/natFont.cc,\n\t* gnu/gcj/xlib/natWMSizeHints.cc,\n\t* gnu/gcj/xlib/natWindow.cc,\n\t* gnu/gcj/xlib/natXImage.cc:\n\tAdd :: prefix to namespaces.\n\t* java/io/CharArrayWriter.h,\n\t* java/lang/StringBuffer.h:\n\tRegenerated using patched gjavah.\n\t* java/lang/natStringBuffer.cc:\n\tFix naming of append(jint).\n\t* java/sql/Timestamp.h: Regenerated\n\tusing patched gjavah.\n\t* jni.cc: Rename p to functions\n\tto match change in GNU Classpath.\n\t* scripts/makemake.tcl: Switch\n\tgnu.java.math to BC compilation.\n\t* sources.am: Regenerated.\n\n2008-08-21  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\t\n\t* Makefile.in: Updated location of Configuration.java.\n\t* classpath/lib/gnu/java/locale/LocaleData.class: Regenerated.\n\n2008-08-18  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\t\n\t* Makefile.in: Updated with new Java files.\n\t* classpath/configure: Regenerated.\n\t* classpath/tools/Makefile.am: Add missing\n\tuse of GJDOC_EX so --disable-gjdoc works.\n\t* classpath/tools/Makefile.in: Regenerated.\n\n2008-08-15  Matthias Klose  <doko@ubuntu.com>\n\n\tImport GNU Classpath (libgcj-import-20080811).\n\n\t* Regenerate class and header files.\n\t* Regenerate auto* files.\n\t* configure.ac: Don't pass --with-fastjar to classpath, substitute new\n\tdummy value in classpath/gnu/classpath/Configuration.java.in, pass\n\t--disable-gjdoc to classpath.\n\t* scripts/makemake.tcl:\n\t* sources.am: Regenerated.\n\t* java/lang/AbstractStringBuffer.java, gnu/java/lang/VMCPStringBuilder.java:\n\tNew, copied from classpath, use System instead of VMSystem.\n\t* java/lang/StringBuffer.java: Merge from classpath.\n\t* java/lang/ClassLoader.java: Merge from classpath.\n\t* gcj/javaprims.h: Update class definitions,\n\tremove _Jv_jobjectRefType, jobjectRefType definitions.\n\nlibjava/classpath/ChangeLog.gcj:\n\n2008-10-21  Matthias Klose  <doko@ubuntu.com>\n\n        * classpath/tools/gnu/classpath/tools/gjdoc/expr/Java*: Move from ...\n        * classpath/tools/generated/gnu/classpath/tools/gjdoc/expr/ ... here.\n        * Update .class files.\n        \n2008-10-21  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n        * tools/Makefile.am:\n        Always generate parser in the srcdir.\n\n2008-10-21  Matthias Klose  <doko@ubuntu.com>\n\n        * doc/Makefile.am (MAINTAINERCLEANFILES): Add gjdoc.1.\n        * doc/Makefile.in: Regenerate.\n\n2008-10-20  Matthias Klose  <doko@ubuntu.com>\n\n\t* configure.ac: Don't check for working java, if not configured\n        with --enable-java-maintainer-mode.\n\t* configure: Regenerate.\n\n2008-10-19  Matthias Klose  <doko@ubuntu.com>\n\n\t* m4/ac_prog_java.m4: Revert previous change.\n\t* m4/ac_prog_javac.m4: Apply it here.\n\t* configure: Regenerate.\n\n2008-10-19  Matthias Klose  <doko@ubuntu.com>\n\n\t* m4/ac_prog_javac.m4: Don't check for working javac, if not configured\n\twith --enable-java-maintainer-mode.\n\t* configure: Regenerate.\n\t* Makefile.in, */Makefile.in: Regenerate.\n\n2008-09-30  Matthias Klose  <doko@ubuntu.com>\n\n\t* m4/ac_prog_antlr.m4: Check for cantlr binary as well.\n\n2008-09-29  Matthias Klose  <doko@ubuntu.com>\n\n\t* m4/ac_prog_antlr.m4: Check for antlr binary as well.\n\n2008-09-28  Matthias Klose  <doko@ubuntu.com>\n\n\t* PR libgcj/37636. Revert:\n\t2008-02-20  Matthias Klose  <doko@ubuntu.com>\n\n\t* tools/Makefile.am ($(TOOLS_ZIP)): Revert part of previous change,\n\tDo copy resource files in JAVA_MAINTAINER_MODE only.\n\t* tools/Makefile.in: Regenerate.\n\n2008-09-14  Matthias Klose  <doko@ubuntu.com>\n\n\t* m4/ac_prog_javac_works.m4, m4/ac_prog_javac.m4, m4/acinclude.m4:\n\tRevert local changes.\n\t* m4/ac_prog_antlr.m4: Check for an runantlr binary.\n\t* tools/Makefile.am, lib/Makefile.am: Revert local changes (JCOMPILER).\n\t* tools/Makefile.am: Remove USE_JAVAC_FLAGS, pass ANTLR_JAR in\n\tGLIBJ_CLASSPATH.\n\n2008-09-14  Matthias Klose  <doko@ubuntu.com>\n\n\tRevert:\n\tDaniel Frampton  <zyridium at zyridium.net>\n\n\t* AUTHORS: Added.\n\t* java/lang/InheritableThreadLocal.java,\n\t* java/lang/Thread.java,\n\t* java/lang/ThreadLocal.java:\n\tModified to use java.lang.ThreadLocalMap.\n\t* java/lang/ThreadLocalMap.java:\n\tNew cheaper ThreadLocal-specific WeakHashMap.\n\n2008-08-15  Matthias Klose  <doko@ubuntu.com>\n\n\t* m4/acinclude.m4 (CLASSPATH_JAVAC_MEM_CHECK): Remove unknown\n\targs for javac.\n\nlibjava/classpath/ChangeLog:\n\n2008-10-20  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n        * m4/ac_prog_antlr.m4:\n        Remove redundant checks.\n        * tools/Makefile.am:\n        Use gjdoc_gendir when calling antlr.\n\n2008-10-15  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n        * configure.ac:\n        Remove superfluous AC_PROG_JAVA call.\n\n2008-10-06  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* m4/ac_prog_antlr:\n\tCheck for cantlr as well.\n\t* tools/Makefile.am:\n\tOnly build GJDoc parser when both\n\tCREATE_GJDOC and CREATE_GJDOC_PARSER\n\tare on.\n\t\n2008-10-02  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* configure.ac:\n\tAdd regen-gjdoc-parser option,\n\tand separate antlr tests.\n\t* m4/ac_prog_antlr.m4:\n\tTurn single test into AC_LIB_ANTLR\n\tand AC_PROG_ANTLR.\n\t* m4/ac_prog_java.m4:\n\tQuote tests.\n\t* tools/Makefile.am:\n\tSupport CREATE_GJDOC_PARSER option.\n\n2008-09-14  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* examples/Makefile.am:\n        Check lib directly as well as glibj.zip\n        for boot classes.\n\t* m4/acinclude.m4:\n        Only require the class files to be built\n        to allow the tools and examples to be built,\n        not the installation of glibj.zip.\n\t* tools/Makefile.am:\n\tCheck lib directly as well as glibj.zip\n\tfor boot classes.\n\n2008-09-13  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* examples/Makefile.am,\n\t* lib/Makefile.am:\n\tAdd GCJ rules.\n\t* m4/ac_prog_javac.m4:\n\tCheck whether JAVAC is gcj.\n\t* m4/ac_prog_javac_works.m4:\n\tAdd GCJ rules.\n\t* m4/acinclude.m4:\n\tDon't bother checking for -J\n\tif using GCJ.\n\t* tools/Makefile.am:\n\tAdd GCJ rules.\n\n2007-08-23  Daniel Frampton  <zyridium@zyridium.net>\n\n\t* AUTHORS: Added.\n\t* java/lang/InheritableThreadLocal.java,\n\t* java/lang/Thread.java,\n\t* java/lang/ThreadLocal.java:\n\tModified to use java.lang.ThreadLocalMap.\n\t* java/lang/ThreadLocalMap.java:\n\tNew cheaper ThreadLocal-specific WeakHashMap.\n\n2008-02-07  Ian Rogers  <ian.rogers@manchester.ac.uk>\n\n\t* java/util/zip/ZipEntry.java:\n\tUse byte fields instead of integer fields,\n\tstore the time as well as the DOS time and\n\tdon't retain a global Calendar instance.\n\t(setDOSTime(int)): Set KNOWN_DOSTIME instead\n\tof KNOWN_TIME, and unset KNOWN_TIME.\n\t(getDOSTime()): Compute DOS time from UNIX time\n\tonly when needed.\n\t(clone()): Provide cloning via the ZipEntry constructor\n\twhere possible.\n\t(setTime(long)): Don't compute DOS time at this point.\n\t(getCalendar()): Removed.\n\t\n2008-09-09  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* tools/gnu/classpath/tools/getopt/Parser.java:\n\t(setHeader(String)): Make synchronized.\n\t(setFooter(String)): Likewise.\n\t* tools/gnu/classpath/tools/rmic/SourceGiopRmicCompiler.java,\n\t(reset()): Make synchronized.\n\t(name(Class)): Likewise.\n\t\n2008-09-04  Robert Schuster  <robertschuster@fsfe.org>\n\n\t* gnu/java/nio/charset/ByteDecodeLoopHelper:\n\t(arrayDecodeLoop): Added new break label, escape to that label.\n\t* gnu/java/nio/charset/ByteEncodeLoopHelper:\n\t(arrayDecodeLoop): Added new break label, escape to that label.\n\n2008-09-04  Robert Schuster  <robertschuster@fsfe.org>\n\n\t* java/text/DecimalFormat.java:\n\t(scanFix): Use 'i + 1' when looking at following character.\n\t(scanNegativePattern): Dito.\n\n2008-09-02  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* tools/gnu/classpath/tools/javah/ClassWrapper.java:\n\t(makeVtable()): Populate methodNameMap.\n\t(printMethods(CniPrintStream)): Always use pre-populated\n\tmethodNameMap for bridge targets.\n\n2008-09-01  Mario Torre  <neugens@aicas.com>\n\n\t* gnu/java/awt/peer/x/XImage.java (XImageProducer): remove @Override\n\tannotation to allow compilation on javac < 1.6 and ecj < 3.4.\n\n2008-09-01  Mario Torre  <neugens@aicas.com>\n\n\t* gnu/java/awt/peer/x/XGraphicsDevice.java (getDisplay): fix to support\n\tnew Escher API.\n\t* gnu/java/awt/peer/x/XImage.java (getSource): method implemented.\n\t* gnu/java/awt/peer/x/XImage.java (XImageProducer): implement ImageProducer\n\tfor getSource.\n\t \n2008-09-01  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* gnu/java/util/regex/BacktrackStack.java,\n\t* gnu/java/util/regex/CharIndexed.java,\n\t* gnu/java/util/regex/CharIndexedCharArray.java,\n\t* gnu/java/util/regex/CharIndexedCharSequence.java,\n\t* gnu/java/util/regex/CharIndexedInputStream.java,\n\t* gnu/java/util/regex/CharIndexedString.java,\n\t* gnu/java/util/regex/CharIndexedStringBuffer.java,\n\t* gnu/java/util/regex/RE.java,\n\t* gnu/java/util/regex/REException.java,\n\t* gnu/java/util/regex/REFilterInputStream.java,\n\t* gnu/java/util/regex/REMatch.java,\n\t* gnu/java/util/regex/REMatchEnumeration.java,\n\t* gnu/java/util/regex/RESyntax.java,\n\t* gnu/java/util/regex/REToken.java,\n\t* gnu/java/util/regex/RETokenAny.java,\n\t* gnu/java/util/regex/RETokenBackRef.java,\n\t* gnu/java/util/regex/RETokenChar.java,\n\t* gnu/java/util/regex/RETokenEnd.java,\n\t* gnu/java/util/regex/RETokenEndOfPreviousMatch.java,\n\t* gnu/java/util/regex/RETokenEndSub.java,\n\t* gnu/java/util/regex/RETokenIndependent.java,\n\t* gnu/java/util/regex/RETokenLookAhead.java,\n\t* gnu/java/util/regex/RETokenLookBehind.java,\n\t* gnu/java/util/regex/RETokenNamedProperty.java,\n\t* gnu/java/util/regex/RETokenOneOf.java,\n\t* gnu/java/util/regex/RETokenPOSIX.java,\n\t* gnu/java/util/regex/RETokenRange.java,\n\t* gnu/java/util/regex/RETokenRepeated.java,\n\t* gnu/java/util/regex/RETokenStart.java,\n\t* gnu/java/util/regex/RETokenWordBoundary.java,\n\t* gnu/java/util/regex/UncheckedRE.java:\n\tFix indentation.\n\n2008-09-01  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* gnu/java/util/regex/RETokenStart.java:\n\t(getMaximumLength()): Add Override annotation.\n\t(matchThis(CharIndexed, REMatch)): Likewise.\n\t(returnsFixedLengthMatches()): Renamed from\n\treturnsFixedLengthmatches and added Override\n\tannotation.\n\t(findFixedLengthMatches(CharIndexed,REMatch,int)):\n\tAdd Override annotation.\n\t(dump(CPStringBuilder)): Likewise.\n\t* gnu/javax/print/ipp/IppRequest.java:\n\t(RequestWriter.writeOperationAttributes(AttributeSet)):\n\tThrow exception, don't just create and drop it.\n\t* javax/management/MBeanServerPermission.java:\n\t(MBeanServerPermissionCollection.add(Permission)): Compare\n\tagainst individual Strings not the entire array, and\n\tstore the result of replace.\n\t* javax/swing/text/html/StyleSheet.java:\n\t(setBaseFontSize(size)): Store result of trim().\n\n2008-09-01  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* javax/tools/FileObject.java:\n\t(openReader(boolean)): Document new parameter.\n\t\n2008-03-27  Michael Franz  <mvfranz@gmail.com>\n\n\tPR classpath/35690:\n\t* javax/tools/FileObject.java:\n\t(toUri()): Fix case from toURI.\n\t(openReader(boolean)): Add missing boolean argument.\n\t\n2008-08-26  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\tPR classpath/35487:\n\t* gnu/javax/management/Server.java:\n\t(beans): Change to ConcurrentHashMap.\n\t(defaultDomain): Make final.\n\t(outer): Likewise.\n\t(LazyListenersHolder): Added to wrap\n\tlisteners, also now a ConcurrentHashMap,\n\tproviding lazy initialisation safely.\n\t(sequenceNumber): Documented.\n\t(getBean(ObjectName)): Remove redundant cast.\n\t(addNotificationListener(ObjectName,NotificationListener,\n\tNotificationFilter,Object)): Remove map initialisation\n\tand use holder.\n\t(getObjectInstance(ObjectName)): Remove redundant cast.\n\t(registerMBean(Object,ObjectName)): Add bean atomically.\n\t(removeNotificationListener(ObjectName,NotificationListener)):\n\tSimplified.\n\t(removeNotificationListener(ObjectName,NotificationListener,\n\tNotificationFilter,Object)): Likewise.\n\t(notify(ObjectName,String)): Documented.\n\t\n2008-08-26  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* gnu/javax/management/Server.java:\n\tGenericised.\n\n2008-08-26  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* gnu/javax/management/Translator.java:\n\tGenericised.\n\n2008-08-26  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* javax/management/DefaultLoaderRepository.java,\n\t* javax/management/JMX.java,\n\t* javax/management/MBeanAttributeInfo.java,\n\t* javax/management/MBeanConstructorInfo.java,\n\t* javax/management/MBeanOperationInfo.java,\n\t* javax/management/MBeanServerDelegate.java:\n\tFix warnings due to generics.\n\n2008-08-25  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* javax/management/MBeanPermission.java,\n\t* javax/management/MBeanServerDelegate.java,\n\t* javax/management/MBeanServerFactory.java,\n\t* javax/management/MBeanServerInvocationHandler.java,\n\t* javax/management/MBeanServerPermission.java:\n\tFix warnings due to use of non-generic collections.\n\n2008-08-25  Mario Torre  <neugens@aicas.com>\n\n\t* gnu/javax/rmi/CORBA/RmiUtilities.java (readValue): check if sender is\n\tnull to avoid NPE.\n\t\n2008-08-22  Mario Torre  <neugens@aicas.com>\n \n\t* gnu/CORBA/OrbFunctional.java (set_parameters): Fix\n\tNullPointerException checking when param is null. \n\n2008-08-23  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* java/util/regex/Matcher.java:\n\t(reset()): Reset append position so\n\twe don't try and append to the end of\n\tthe old input.\n\t\n2008-08-22  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\tPR classpath/32028:\n\t* m4/acinclude.m4:\n\tAlso allow versions of GJDoc from 0.8* on, as\n\tCVS is 0.8.0-pre.\n\t\n2008-08-21  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\tPR classpath/32028:\n\t* m4/acinclude.m4:\n\t(CLASSPATH_WITH_GJDOC): Ensure version 0.7.9 is\n\tbeing used.\n\t\n2008-08-20  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* tools/Makefile.am:\n\tAdd taglets subdirectory to list of excluded\n\tpaths when GJDoc is not compiled.\n\t\n2008-08-19  David P Grove  <groved@us.ibm.com>\n\n\t* scripts/check_jni_methods.sh.in:\n\tFix build issue on AIX by splitting generation\n\tof method list.\n\t\n2008-08-18  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* native/jni/gstreamer-peer/gst_native_pipeline.c:\n\t(get_free_space(int)): Use #else not #elif when\n\tthere is no condition.\n\n2008-08-17  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\tPR classpath/31895:\n\t* java/text/DecimalFormat.java:\n\t(setCurrency(Currency)): Update prefixes and\n\tsuffixes when currency changes.\n\t* java/text/DecimalFormatSymbols.java:\n\t(DecimalFormatSymbols(Locale)): Set locale earlier\n\tso it can be used by setCurrency(Currency).\n\t(setCurrency(Currency)): Set the symbol correctly using\n\tthe locale of the instance.\n\t* java/util/Currency.java:\n\tThrow error instead of just printing a message.\n\n2008-08-17  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* javax/activation/ActivationDataFlavor.java:\n\tSuppress warnings from public API.\n\t(mimeType): Made final.\n\t(representationClass): Added generic type and\n\tmade final.\n\t(normalizeMimeTypeParameter(String,String)):\n\tUse CPStringBuilder.\n\t* javax/activation/CommandInfo.java:\n\t(verb): Made final.\n\t(className): Made final.\n\t* javax/activation/DataHandler.java:\n\t(dataSource): Made final.\n\t* javax/activation/FileDataSource.java:\n\t(file): Made final.\n\t* javax/activation/MailcapCommandMap.java:\n\tUse generics on collections and CPStringBuilder\n\tinstead of StringBuffer.\n\t* javax/activation/MimeType.java:\n\t(toString()): Use CPStringBuilder.\n\t(getBaseType()): Likewise.\n\t* javax/activation/MimeTypeParameterList.java:\n\tUse generics on collections and CPStringBuilder\n\tinstead of StringBuffer.\n\t* javax/activation/MimeTypeParseException.java:\n\t(MimeTypeParseException(String,String)): Use\n\tCPStringBuilder.\n\t* javax/activation/MimetypesFileTypeMap.java:\n\tUse generics on collections and CPStringBuilder\n\tinstead of StringBuffer.\t\n\t* javax/activation/URLDataSource.java:\n\t(url): Made final.\n\n2008-08-17  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* gnu/javax/activation/viewers/ImageViewer.java,\n\t* gnu/javax/activation/viewers/TextEditor.java,\n\t* gnu/javax/activation/viewers/TextViewer.java,\n\t* javax/activation/ActivationDataFlavor.java,\n\t* javax/activation/CommandInfo.java,\n\t* javax/activation/CommandMap.java,\n\t* javax/activation/CommandObject.java,\n\t* javax/activation/DataContentHandler.java,\n\t* javax/activation/DataContentHandlerFactory.java,\n\t* javax/activation/DataHandler.java,\n\t* javax/activation/DataHandlerDataSource.java,\n\t* javax/activation/DataSource.java,\n\t* javax/activation/DataSourceDataContentHandler.java,\n\t* javax/activation/FileDataSource.java,\n\t* javax/activation/FileTypeMap.java,\n\t* javax/activation/MailcapCommandMap.java,\n\t* javax/activation/MimeType.java,\n\t* javax/activation/MimeTypeParameterList.java,\n\t* javax/activation/MimeTypeParseException.java,\n\t* javax/activation/MimetypesFileTypeMap.java,\n\t* javax/activation/ObjectDataContentHandler.java,\n\t* javax/activation/URLDataSource.java,\n\t* javax/activation/UnsupportedDataTypeException.java,\n\t* javax/activation/package.html,\n\t* resource/META-INF/mailcap.default,\n\t* resource/META-INF/mimetypes.default:\n\tImport GNU JAF CVS as of 17/08/2008.\n\n2006-04-25  Archit Shah  <ashah@redhat.com>\n\n\t* javax/activation/MimeTypeParameterList.java:\n\tInsert ';' separator before parameter list.\n\n2005-06-29  Xavier Poinsard  <xpoinsard@openpricer.com>\n\n\t* javax/activation/ObjectDataContentHandler.java:\n\tFixed typo.\n\n2005-05-28  Chris Burdess  <dog@bluezoo.org>\n\n\t* javax/activation/CommandMap.java, \n\t* javax/activation/MailcapCommandMap.java:\n\tUpdated to JAF 1.1.\n\n2004-06-09  Chris Burdess  <dog@bluezoo.org>\n\n\t* javax/activation/MailcapCommandMap.java:\n\tFixed bug whereby x-java prefix was not\n\tattempted.\n\n2008-08-17  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* AUTHORS: Added Laszlo.\n\n2008-04-20  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\tPR classpath/30436:\n\t* java/util/Scanner.java:\n\tFix package to be java.util and correct\n\tindentation.\n\n2007-07-25  Laszlo Andras Hernadi  <e0327023@student.tuwien.ac.at>\n\n\tPR classpath/30436:\n\t* java/util/Scanner.java:\n\tInitial implementation.\n\n2008-08-17  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n\n\t* java/util/regex/Matcher.java:\n\t(toMatchResult()): Implemented.\n\t\n2008-08-13  Joshua Sumali  <jsumali@redhat.com>\n\n\t* doc/Makefile.am (gjdoc.pod): Generate gjdoc pod from cp-tools.texinfo\n\tinstead of invoke.texi. Remove invoke.texi from EXTRA_DIST.\n\t* doc/invoke.texi: Removed and merged into ...\n\t* doc/cp-tools.texinfo: Here\n\n2008-08-12  Robert Schuster  <robertschuster@fsfe.org>\n\n\t* native/jni/java-net/local.c\n\t(local_bind): Removed fprintf call, fixed access outside\n\tof array bounds.\n\nFrom-SVN: r141271", "tree": {"sha": "6de8da5758622565799768e49cd0de6698ca3cb8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6de8da5758622565799768e49cd0de6698ca3cb8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd6d4007aa4f72b51756e4a571abf876fa3e3133", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd6d4007aa4f72b51756e4a571abf876fa3e3133", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd6d4007aa4f72b51756e4a571abf876fa3e3133", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd6d4007aa4f72b51756e4a571abf876fa3e3133/comments", "author": null, "committer": null, "parents": [{"sha": "d9cc481a359c713f473a136730e4019124368d6b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9cc481a359c713f473a136730e4019124368d6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9cc481a359c713f473a136730e4019124368d6b"}], "stats": {"total": 150604, "additions": 124184, "deletions": 26420}, "files": [{"sha": "7e0bf0bc48c6acae639fd7c1abfa5c52e2253751", "filename": "libjava/ChangeLog", "status": "modified", "additions": 218, "deletions": 0, "changes": 218, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -1,3 +1,221 @@\n+2008-10-21  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* sources.am, Makfile.in: Regenerate.\n+\n+2008-10-17  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* configure.ac: Fix bashisms.\n+\t* configure: Regenerate.\n+\n+2008-10-15  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* configure.ac: Disable build of gjdoc, if configured without\n+\t--with-antlr-jar or if no antlr.jar found.\n+\t* configure: Regenerate.\n+\n+2008-10-09  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* classpath/configure.ac,\n+\t* classpath/m4/ac_prog_antlr.m4,\n+\t* classpath/m4/ac_prog_java.m4,\n+\t* classpath/tools/Makefile.am:\n+\tPorted --regen-gjdoc-parser patch and\n+\tcantlr support from GNU Classpath.\n+\n+2008-10-06  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/Thread.java (Thread): Always create the ThreadLocalMap\n+\twhen creating a thread.\n+\t(getThreadLocals) Don't lazily create the ThreadLocalMap.\n+\n+2008-09-28  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* classpath/java/lang/ThreadLocalMap.java,\n+\t* java/lang/ThreadLocalMap$Entry.h,\n+\t* java/lang/ThreadLocalMap.h,\n+\t* lib/java/lang/ThreadLocalMap.class,\n+\t* lib/java/lang/ThreadLocalMap$Entry.class:\n+\tAdd the new files for the ThreadLocal patch.\n+\n+2008-09-28  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* classpath/ChangeLog,\n+\t* classpath/java/lang/InheritableThreadLocal.java,\n+\t* classpath/java/lang/Thread.java,\n+\t* classpath/java/lang/ThreadLocal.java:\n+\tMerge Daniel Frampton's ThreadLocal patch.\n+\t* gcj/javaprims.h: Updated.\n+\t* java/lang/Thread.h: Regenerated.\n+\t* java/lang/Thread.java:\n+\tReplace WeakIdentityHashMap with ThreadLocalMap.\n+\t(getThreadLocals()): Likewise.\n+\t* java/lang/ThreadLocal.h: Regenerated.\n+\t* java/lang/ThreadLocal.java:\n+\t(computeNextHash()): New method.\n+\t(ThreadLocal()): Initialise fastHash.\n+\t(internalGet()): Updated to match Classpath's get().\n+\t(internalSet(Object)): Likewise for set(Object).\n+\t(internalRemove()): Likewise for remove().\n+\t\n+2008-09-25  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* classpath/configure,\n+\t* classpath/configure.ac:\n+\tResynchronise with Classpath's configure.\n+\t* classpath/examples/Makefile.in:\n+\tAdd equivalent support for building as in\n+\ttools/Makefile.in.\n+\t* classpath/java/nio/Buffer.java,\n+\t* classpath/java/nio/ByteBuffer.java,\n+\t* classpath/java/nio/ByteBufferImpl.java,\n+\t* classpath/java/nio/CharBuffer.java,\n+\t* classpath/java/nio/CharBufferImpl.java,\n+\t* classpath/java/nio/CharSequenceBuffer.java,\n+\t* classpath/java/nio/CharViewBufferImpl.java,\n+\t* classpath/java/nio/DirectByteBufferImpl.java,\n+\t* classpath/java/nio/DoubleBuffer.java,\n+\t* classpath/java/nio/DoubleBufferImpl.java,\n+\t* classpath/java/nio/DoubleViewBufferImpl.java,\n+\t* classpath/java/nio/FloatBuffer.java,\n+\t* classpath/java/nio/FloatBufferImpl.java,\n+\t* classpath/java/nio/FloatViewBufferImpl.java,\n+\t* classpath/java/nio/IntBuffer.java,\n+\t* classpath/java/nio/IntBufferImpl.java,\n+\t* classpath/java/nio/IntViewBufferImpl.java,\n+\t* classpath/java/nio/LongBuffer.java,\n+\t* classpath/java/nio/LongBufferImpl.java,\n+\t* classpath/java/nio/LongViewBufferImpl.java,\n+\t* classpath/java/nio/MappedByteBuffer.java,\n+\t* classpath/java/nio/MappedByteBufferImpl.java,\n+\t* classpath/java/nio/ShortBuffer.java,\n+\t* classpath/java/nio/ShortBufferImpl.java,\n+\t* classpath/java/nio/ShortViewBufferImpl.java:\n+\tReplace use of gnu.classpath.Pointer with gnu.gcj.RawData,\n+\tand fix some formatting issues.\n+\t* classpath/tools/gnu/classpath/tools/gjdoc/expr/JavaLexer.java,\n+\t* classpath/tools/gnu/classpath/tools/gjdoc/expr/JavaLexer.smap,\n+\t* classpath/tools/gnu/classpath/tools/gjdoc/expr/JavaRecognizer.java,\n+\t* classpath/tools/gnu/classpath/tools/gjdoc/expr/JavaRecognizer.smap,\n+\t* classpath/tools/gnu/classpath/tools/gjdoc/expr/JavaTokenTypes.java,\n+\t* classpath/tools/gnu/classpath/tools/gjdoc/expr/JavaTokenTypes.txt:\n+\tRegenerated (later version of antlr).\n+\t* java/nio/Buffer.h: Regenerated.\n+\t* java/nio/Buffer.java: Ported changes from Classpath.\n+\t* java/nio/ByteBuffer.h,\n+\t* java/nio/CharBuffer.h: Regenerated.\n+\t* java/nio/DirectByteBufferImpl.java: Ported changes from\n+\tClasspath.\n+\t* java/nio/DoubleBuffer.h,\n+\t* java/nio/FloatBuffer.h,\n+\t* java/nio/IntBuffer.h,\n+\t* java/nio/LongBuffer.h,\n+\t* java/nio/MappedByteBuffer.h,\n+\t* java/nio/MappedByteBufferImpl.h: Regenerated.\n+\t* java/nio/MappedByteBufferImpl.java: Ported changes from\n+\tClasspath.\n+\t* java/nio/ShortBuffer.h: Regenerated.\n+\n+2008-09-24  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* configure.ac: Search for antlr.jar, if not configured.\n+\t* configure: Regenerate.\n+\n+2008-09-24  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* Makefile.am: Build a gjdoc binary, if enabled.\n+\t* configure.ac: Add options --disable-gjdoc, --with-antlr-jar=file.\n+\t* Makefile.in, */Makefile.in, configure: Regenerate.\n+\n+2008-09-22  Andrew Haley  <aph@redhat.com>\n+\n+\t* java/lang/String.java (toString(char[], int, int)): New method.\n+\n+2008-09-14  Matthias Klose  <doko@ubuntu.com>\n+\n+\tImport GNU Classpath (libgcj-import-20080914).\n+\n+\t* Regenerate class and header files.\n+\t* Regenerate auto* files.\n+\t* configure.ac: Don't pass --disable-gjdoc to classpath.\n+\t* sources.am: Regenerated.\n+\t* HACKING: Mention to build gjdoc in maintainer builds.\n+\t* gnu/classpath/Configuration.java: Update classpath version.\n+\t* gcj/javaprims.h: Update.\n+\n+2008-09-08  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* Makefile.am: Replace natStringBuffer.cc\n+\tand natStringBuilder.cc with natAbstractStringBuffer.cc.\n+\t* Makefile.in: Regenerated.\n+\t* java/lang/AbstractStringBuffer.java:\n+\t(append(int)): Made native.\n+\t(regionMatches(int,String)): Likewise.\n+\t* java/lang/StringBuffer.h: Regenerated.\n+\t* java/lang/StringBuffer.java: Remerged with GNU Classpath.\n+\t* java/lang/StringBuilder.h: Regenerated.\n+\t* java/lang/StringBuilder.java: Remerged with GNU Classpath.\n+\t* java/lang/natAbstractStringBuffer.cc: Provide common\n+\tnative methods for StringBuffer and StringBuilder.\n+\t* java/lang/natStringBuffer.cc,\n+\t* java/lang/natStringBuilder.cc: Removed.\n+\n+2008-09-04  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* Makefile.in,\n+\t* classpath/configure: Regenerated.\n+\t* gnu/gcj/util/natDebug.cc,\n+\t* gnu/gcj/xlib/natColormap.cc,\n+\t* gnu/gcj/xlib/natDisplay.cc,\n+\t* gnu/gcj/xlib/natDrawable.cc,\n+\t* gnu/gcj/xlib/natFont.cc,\n+\t* gnu/gcj/xlib/natWMSizeHints.cc,\n+\t* gnu/gcj/xlib/natWindow.cc,\n+\t* gnu/gcj/xlib/natXImage.cc:\n+\tAdd :: prefix to namespaces.\n+\t* java/io/CharArrayWriter.h,\n+\t* java/lang/StringBuffer.h:\n+\tRegenerated using patched gjavah.\n+\t* java/lang/natStringBuffer.cc:\n+\tFix naming of append(jint).\n+\t* java/sql/Timestamp.h: Regenerated\n+\tusing patched gjavah.\n+\t* jni.cc: Rename p to functions\n+\tto match change in GNU Classpath.\n+\t* scripts/makemake.tcl: Switch\n+\tgnu.java.math to BC compilation.\n+\t* sources.am: Regenerated.\n+\n+2008-08-21  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\t\n+\t* Makefile.in: Updated location of Configuration.java.\n+\t* classpath/lib/gnu/java/locale/LocaleData.class: Regenerated.\n+\n+2008-08-18  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\t\n+\t* Makefile.in: Updated with new Java files.\n+\t* classpath/configure: Regenerated.\n+\t* classpath/tools/Makefile.am: Add missing\n+\tuse of GJDOC_EX so --disable-gjdoc works.\n+\t* classpath/tools/Makefile.in: Regenerated.\n+\n+2008-08-15  Matthias Klose  <doko@ubuntu.com>\n+\n+\tImport GNU Classpath (libgcj-import-20080811).\n+\n+\t* Regenerate class and header files.\n+\t* Regenerate auto* files.\n+\t* configure.ac: Don't pass --with-fastjar to classpath, substitute new\n+\tdummy value in classpath/gnu/classpath/Configuration.java.in, pass\n+\t--disable-gjdoc to classpath.\n+\t* scripts/makemake.tcl:\n+\t* sources.am: Regenerated.\n+\t* java/lang/AbstractStringBuffer.java, gnu/java/lang/VMCPStringBuilder.java:\n+\tNew, copied from classpath, use System instead of VMSystem.\n+\t* java/lang/StringBuffer.java: Merge from classpath.\n+\t* java/lang/ClassLoader.java: Merge from classpath.\n+\t* gcj/javaprims.h: Update class definitions,\n+\tremove _Jv_jobjectRefType, jobjectRefType definitions.\n+\n 2008-09-30  Andreas Tobler  <a.tobler@schweiz.org>\n \n \t* testsuite/lib/libjava.exp (libjava_arguments): Do not append"}, {"sha": "ba85b697be2f8255a4eb68cf2c4dc79ff27aa2fc", "filename": "libjava/HACKING", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2FHACKING", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2FHACKING", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FHACKING?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -111,7 +111,8 @@ To import a new release:\n     | xargs -r rm -f\n - Build, fix, till everything works.\n   Be sure to build all peers (--enable-java-awt=gtk,xlib,qt\n-  --enable-gconf-peer --enable-gstreamer-peer)\n+  --enable-gconf-peer --enable-gstreamer-peer).\n+  Be sure to build gjdoc (--enable-gjdoc).\n   Be sure to update gnu/classpath/Configuration.java to reflect\n     the new version\n   Possibly update the gcj/javaprims.h file with scripts/classes.pl"}, {"sha": "82cc63e3a81845e1a4b6b9e016638b6c6124cd09", "filename": "libjava/Makefile.am", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -82,6 +82,9 @@ if NATIVE\n bin_PROGRAMS = jv-convert gij grmic grmiregistry gcj-dbtool \\\n \tgappletviewer gjarsigner gkeytool gjar gcjh gjavah gnative2ascii \\\n \tgorbd grmid gserialver gtnameserv gc-analyze\n+if CREATE_GJDOC\n+bin_PROGRAMS += gjdoc\n+endif\n \n ## It is convenient to actually build and install the default database\n ## when gcj-dbtool is available.\n@@ -1013,6 +1016,16 @@ grmiregistry_LINK = $(GCJLINK)\n grmiregistry_LDADD = -L$(here)/.libs libgcj-tools.la\n grmiregistry_DEPENDENCIES = libgcj-tools.la\n \n+## This is a dummy definition.\n+gjdoc_SOURCES =\n+gjdoc_LDFLAGS = --main=gnu.classpath.tools.gjdoc.Main \\\n+\t-Djava.class.path=$(ANTLR_JAR) \\\n+\t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n+gjdoc_LINK = $(GCJLINK)\n+## See jv_convert_LDADD.\n+gjdoc_LDADD = -L$(here)/.libs libgcj-tools.la\n+gjdoc_DEPENDENCIES = libgcj-tools.la\n+\n ## ################################################################\n if INTERPRETER\n nat_jdwp_source_files = \\\n@@ -1082,8 +1095,7 @@ java/lang/natMath.cc \\\n java/lang/natObject.cc \\\n java/lang/natRuntime.cc\t\\\n java/lang/natString.cc \\\n-java/lang/natStringBuffer.cc \\\n-java/lang/natStringBuilder.cc \\\n+java/lang/natAbstractStringBuffer.cc \\\n java/lang/natSystem.cc \\\n java/lang/natThread.cc \\\n java/lang/natThreadLocal.cc \\"}, {"sha": "a803fedb59066760343cc0930a149caabde0b810", "filename": "libjava/Makefile.in", "status": "modified", "additions": 213, "deletions": 96, "changes": 309, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -51,20 +51,22 @@ target_triplet = @target@\n @NATIVE_TRUE@\tgjar$(EXEEXT) gcjh$(EXEEXT) gjavah$(EXEEXT) \\\n @NATIVE_TRUE@\tgnative2ascii$(EXEEXT) gorbd$(EXEEXT) \\\n @NATIVE_TRUE@\tgrmid$(EXEEXT) gserialver$(EXEEXT) \\\n-@NATIVE_TRUE@\tgtnameserv$(EXEEXT) gc-analyze$(EXEEXT)\n-@INSTALL_AOT_RPM_TRUE@am__append_5 = contrib/aot-compile-rpm\n+@NATIVE_TRUE@\tgtnameserv$(EXEEXT) gc-analyze$(EXEEXT) \\\n+@NATIVE_TRUE@\t$(am__EXEEXT_1)\n+@CREATE_GJDOC_TRUE@@NATIVE_TRUE@am__append_5 = gjdoc\n+@INSTALL_AOT_RPM_TRUE@am__append_6 = contrib/aot-compile-rpm\n @BUILD_ECJ1_TRUE@libexecsub_PROGRAMS = ecjx$(EXEEXT)\n-@ANONVERSCRIPT_TRUE@am__append_6 = -Wl,--version-script=$(srcdir)/libgcj.ver\n-@USING_GCC_TRUE@am__append_7 = $(WARNINGS)\n-@USING_BOEHMGC_TRUE@am__append_8 = boehm.cc\n-@USING_NOGC_TRUE@am__append_9 = nogc.cc\n-@USING_POSIX_PLATFORM_TRUE@am__append_10 = posix.cc\n-@USING_WIN32_PLATFORM_TRUE@am__append_11 = win32.cc\n-@USING_DARWIN_CRT_TRUE@am__append_12 = darwin.cc\n-@USING_POSIX_THREADS_TRUE@am__append_13 = posix-threads.cc\n-@USING_WIN32_THREADS_TRUE@am__append_14 = win32-threads.cc\n-@USING_NO_THREADS_TRUE@am__append_15 = no-threads.cc\n-@ANONVERSCRIPT_TRUE@am__append_16 = $(srcdir)/libgcj.ver\n+@ANONVERSCRIPT_TRUE@am__append_7 = -Wl,--version-script=$(srcdir)/libgcj.ver\n+@USING_GCC_TRUE@am__append_8 = $(WARNINGS)\n+@USING_BOEHMGC_TRUE@am__append_9 = boehm.cc\n+@USING_NOGC_TRUE@am__append_10 = nogc.cc\n+@USING_POSIX_PLATFORM_TRUE@am__append_11 = posix.cc\n+@USING_WIN32_PLATFORM_TRUE@am__append_12 = win32.cc\n+@USING_DARWIN_CRT_TRUE@am__append_13 = darwin.cc\n+@USING_POSIX_THREADS_TRUE@am__append_14 = posix-threads.cc\n+@USING_WIN32_THREADS_TRUE@am__append_15 = win32-threads.cc\n+@USING_NO_THREADS_TRUE@am__append_16 = no-threads.cc\n+@ANONVERSCRIPT_TRUE@am__append_17 = $(srcdir)/libgcj.ver\n DIST_COMMON = README $(am__configure_deps) $(srcdir)/../compile \\\n \t$(srcdir)/../config.guess $(srcdir)/../config.sub \\\n \t$(srcdir)/../depcomp $(srcdir)/../install-sh \\\n@@ -80,8 +82,8 @@ DIST_COMMON = README $(am__configure_deps) $(srcdir)/../compile \\\n \t$(top_srcdir)/scripts/jar.in COPYING ChangeLog NEWS THANKS\n @MAINTAINER_MODE_TRUE@@NATIVE_TRUE@noinst_PROGRAMS =  \\\n @MAINTAINER_MODE_TRUE@@NATIVE_TRUE@\tgen-from-JIS$(EXEEXT)\n-@NATIVE_TRUE@@USE_LIBGCJ_BC_TRUE@am__append_17 = libgcj_bc.la\n-@XLIB_AWT_TRUE@am__append_18 = $(xlib_nat_headers)\n+@NATIVE_TRUE@@USE_LIBGCJ_BC_TRUE@am__append_18 = libgcj_bc.la\n+@XLIB_AWT_TRUE@am__append_19 = $(xlib_nat_headers)\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/libltdl/acinclude.m4 \\\n@@ -183,14 +185,14 @@ am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tgnu/java/awt/java2d.lo gnu/java/awt/peer.lo \\\n \tgnu/java/awt/peer/headless.lo gnu/java/awt/print.lo \\\n \tgnu/java/io.lo gnu/java/lang.lo gnu/java/lang/reflect.lo \\\n-\tgnu/java/locale.lo gnu/java/math.lo gnu/java/net.lo \\\n-\tgnu/java/net/loader.lo gnu/java/net/local.lo \\\n-\tgnu/java/net/protocol/core.lo gnu/java/net/protocol/file.lo \\\n-\tgnu/java/net/protocol/ftp.lo gnu/java/net/protocol/gcjlib.lo \\\n-\tgnu/java/net/protocol/http.lo gnu/java/net/protocol/https.lo \\\n-\tgnu/java/net/protocol/jar.lo gnu/java/nio.lo \\\n-\tgnu/java/nio/channels.lo gnu/java/nio/charset.lo \\\n-\tgnu/java/rmi.lo gnu/java/rmi/activation.lo gnu/java/rmi/dgc.lo \\\n+\tgnu/java/locale.lo gnu/java/net.lo gnu/java/net/loader.lo \\\n+\tgnu/java/net/local.lo gnu/java/net/protocol/core.lo \\\n+\tgnu/java/net/protocol/file.lo gnu/java/net/protocol/ftp.lo \\\n+\tgnu/java/net/protocol/gcjlib.lo gnu/java/net/protocol/http.lo \\\n+\tgnu/java/net/protocol/https.lo gnu/java/net/protocol/jar.lo \\\n+\tgnu/java/nio.lo gnu/java/nio/channels.lo \\\n+\tgnu/java/nio/charset.lo gnu/java/rmi.lo \\\n+\tgnu/java/rmi/activation.lo gnu/java/rmi/dgc.lo \\\n \tgnu/java/rmi/registry.lo gnu/java/rmi/server.lo \\\n \tgnu/java/security.lo gnu/java/security/action.lo \\\n \tgnu/java/security/ber.lo gnu/java/security/der.lo \\\n@@ -204,18 +206,18 @@ am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tgnu/java/security/x509.lo gnu/java/security/x509/ext.lo \\\n \tgnu/java/text.lo gnu/java/util.lo gnu/java/util/jar.lo \\\n \tgnu/java/util/prefs.lo gnu/java/util/regex.lo \\\n-\tgnu/javax/crypto.lo gnu/javax/crypto/assembly.lo \\\n-\tgnu/javax/crypto/cipher.lo gnu/javax/crypto/jce.lo \\\n-\tgnu/javax/crypto/jce/cipher.lo gnu/javax/crypto/jce/key.lo \\\n-\tgnu/javax/crypto/jce/keyring.lo gnu/javax/crypto/jce/mac.lo \\\n-\tgnu/javax/crypto/jce/params.lo gnu/javax/crypto/jce/prng.lo \\\n-\tgnu/javax/crypto/jce/sig.lo gnu/javax/crypto/jce/spec.lo \\\n-\tgnu/javax/crypto/key.lo gnu/javax/crypto/key/dh.lo \\\n-\tgnu/javax/crypto/key/srp6.lo gnu/javax/crypto/keyring.lo \\\n-\tgnu/javax/crypto/kwa.lo gnu/javax/crypto/mac.lo \\\n-\tgnu/javax/crypto/mode.lo gnu/javax/crypto/pad.lo \\\n-\tgnu/javax/crypto/prng.lo gnu/javax/crypto/sasl.lo \\\n-\tgnu/javax/crypto/sasl/anonymous.lo \\\n+\tgnu/javax/activation/viewers.lo gnu/javax/crypto.lo \\\n+\tgnu/javax/crypto/assembly.lo gnu/javax/crypto/cipher.lo \\\n+\tgnu/javax/crypto/jce.lo gnu/javax/crypto/jce/cipher.lo \\\n+\tgnu/javax/crypto/jce/key.lo gnu/javax/crypto/jce/keyring.lo \\\n+\tgnu/javax/crypto/jce/mac.lo gnu/javax/crypto/jce/params.lo \\\n+\tgnu/javax/crypto/jce/prng.lo gnu/javax/crypto/jce/sig.lo \\\n+\tgnu/javax/crypto/jce/spec.lo gnu/javax/crypto/key.lo \\\n+\tgnu/javax/crypto/key/dh.lo gnu/javax/crypto/key/srp6.lo \\\n+\tgnu/javax/crypto/keyring.lo gnu/javax/crypto/kwa.lo \\\n+\tgnu/javax/crypto/mac.lo gnu/javax/crypto/mode.lo \\\n+\tgnu/javax/crypto/pad.lo gnu/javax/crypto/prng.lo \\\n+\tgnu/javax/crypto/sasl.lo gnu/javax/crypto/sasl/anonymous.lo \\\n \tgnu/javax/crypto/sasl/crammd5.lo \\\n \tgnu/javax/crypto/sasl/plain.lo gnu/javax/crypto/sasl/srp.lo \\\n \tgnu/javax/imageio.lo gnu/javax/imageio/bmp.lo \\\n@@ -263,16 +265,17 @@ am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tjava/util/concurrent/atomic.lo java/util/concurrent/locks.lo \\\n \tjava/util/jar.lo java/util/logging.lo java/util/prefs.lo \\\n \tjava/util/regex.lo java/util/spi.lo java/util/zip.lo \\\n-\tjavax/accessibility.lo javax/activity.lo javax/crypto.lo \\\n-\tjavax/crypto/interfaces.lo javax/crypto/spec.lo \\\n-\tjavax/management.lo javax/management/loading.lo \\\n-\tjavax/management/openmbean.lo javax/management/remote.lo \\\n-\tjavax/management/remote/rmi.lo javax/naming.lo \\\n-\tjavax/naming/directory.lo javax/naming/event.lo \\\n-\tjavax/naming/ldap.lo javax/naming/spi.lo javax/net.lo \\\n-\tjavax/net/ssl.lo javax/print.lo javax/print/attribute.lo \\\n-\tjavax/print/attribute/standard.lo javax/print/event.lo \\\n-\tjavax/security/auth.lo javax/security/auth/callback.lo \\\n+\tjavax/accessibility.lo javax/activation.lo javax/activity.lo \\\n+\tjavax/crypto.lo javax/crypto/interfaces.lo \\\n+\tjavax/crypto/spec.lo javax/management.lo \\\n+\tjavax/management/loading.lo javax/management/openmbean.lo \\\n+\tjavax/management/remote.lo javax/management/remote/rmi.lo \\\n+\tjavax/naming.lo javax/naming/directory.lo \\\n+\tjavax/naming/event.lo javax/naming/ldap.lo javax/naming/spi.lo \\\n+\tjavax/net.lo javax/net/ssl.lo javax/print.lo \\\n+\tjavax/print/attribute.lo javax/print/attribute/standard.lo \\\n+\tjavax/print/event.lo javax/security/auth.lo \\\n+\tjavax/security/auth/callback.lo \\\n \tjavax/security/auth/kerberos.lo javax/security/auth/login.lo \\\n \tjavax/security/auth/spi.lo javax/security/auth/x500.lo \\\n \tjavax/security/cert.lo javax/security/sasl.lo \\\n@@ -292,7 +295,7 @@ am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tsun/reflect/misc.lo $(am__DEPENDENCIES_1)\n am__DEPENDENCIES_3 = gnu-CORBA.lo gnu-java-awt-dnd-peer-gtk.lo \\\n \tgnu-java-awt-peer-gtk.lo gnu-java-awt-peer-swing.lo \\\n-\tgnu-java-beans.lo gnu-java-lang-management.lo \\\n+\tgnu-java-beans.lo gnu-java-lang-management.lo gnu-java-math.lo \\\n \tgnu-java-util-prefs-gconf.lo gnu-javax-management.lo \\\n \tgnu-javax-rmi.lo gnu-javax-sound-midi.lo gnu-xml-aelfred2.lo \\\n \tgnu-xml-dom.lo gnu-xml-libxmlj.lo gnu-xml-pipeline.lo \\\n@@ -352,12 +355,11 @@ am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tjava/lang/natConcreteProcess.cc java/lang/natVMDouble.cc \\\n \tjava/lang/natVMFloat.cc java/lang/natMath.cc \\\n \tjava/lang/natObject.cc java/lang/natRuntime.cc \\\n-\tjava/lang/natString.cc java/lang/natStringBuffer.cc \\\n-\tjava/lang/natStringBuilder.cc java/lang/natSystem.cc \\\n-\tjava/lang/natThread.cc java/lang/natThreadLocal.cc \\\n-\tjava/lang/natVMClassLoader.cc java/lang/natVMProcess.cc \\\n-\tjava/lang/natVMThrowable.cc java/lang/ref/natReference.cc \\\n-\tjava/lang/reflect/natArray.cc \\\n+\tjava/lang/natString.cc java/lang/natAbstractStringBuffer.cc \\\n+\tjava/lang/natSystem.cc java/lang/natThread.cc \\\n+\tjava/lang/natThreadLocal.cc java/lang/natVMClassLoader.cc \\\n+\tjava/lang/natVMProcess.cc java/lang/natVMThrowable.cc \\\n+\tjava/lang/ref/natReference.cc java/lang/reflect/natArray.cc \\\n \tjava/lang/reflect/natConstructor.cc \\\n \tjava/lang/reflect/natField.cc java/lang/reflect/natMethod.cc \\\n \tjava/lang/reflect/natVMProxy.cc java/net/natVMInetAddress.cc \\\n@@ -417,12 +419,11 @@ am__objects_5 = $(am__objects_3) gnu/classpath/natConfiguration.lo \\\n \tjava/lang/natConcreteProcess.lo java/lang/natVMDouble.lo \\\n \tjava/lang/natVMFloat.lo java/lang/natMath.lo \\\n \tjava/lang/natObject.lo java/lang/natRuntime.lo \\\n-\tjava/lang/natString.lo java/lang/natStringBuffer.lo \\\n-\tjava/lang/natStringBuilder.lo java/lang/natSystem.lo \\\n-\tjava/lang/natThread.lo java/lang/natThreadLocal.lo \\\n-\tjava/lang/natVMClassLoader.lo java/lang/natVMProcess.lo \\\n-\tjava/lang/natVMThrowable.lo java/lang/ref/natReference.lo \\\n-\tjava/lang/reflect/natArray.lo \\\n+\tjava/lang/natString.lo java/lang/natAbstractStringBuffer.lo \\\n+\tjava/lang/natSystem.lo java/lang/natThread.lo \\\n+\tjava/lang/natThreadLocal.lo java/lang/natVMClassLoader.lo \\\n+\tjava/lang/natVMProcess.lo java/lang/natVMThrowable.lo \\\n+\tjava/lang/ref/natReference.lo java/lang/reflect/natArray.lo \\\n \tjava/lang/reflect/natConstructor.lo \\\n \tjava/lang/reflect/natField.lo java/lang/reflect/natMethod.lo \\\n \tjava/lang/reflect/natVMProxy.lo java/net/natVMInetAddress.lo \\\n@@ -457,6 +458,7 @@ am_libgij_la_OBJECTS = gij.lo\n libgij_la_OBJECTS = $(am_libgij_la_OBJECTS)\n am_libjvm_la_OBJECTS = jni-libjvm.lo\n libjvm_la_OBJECTS = $(am_libjvm_la_OBJECTS)\n+@CREATE_GJDOC_TRUE@@NATIVE_TRUE@am__EXEEXT_1 = gjdoc$(EXEEXT)\n binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)\n libexecsubPROGRAMS_INSTALL = $(INSTALL_PROGRAM)\n PROGRAMS = $(bin_PROGRAMS) $(libexecsub_PROGRAMS) $(noinst_PROGRAMS)\n@@ -484,6 +486,8 @@ am_gjarsigner_OBJECTS =\n gjarsigner_OBJECTS = $(am_gjarsigner_OBJECTS)\n am_gjavah_OBJECTS =\n gjavah_OBJECTS = $(am_gjavah_OBJECTS)\n+am_gjdoc_OBJECTS =\n+gjdoc_OBJECTS = $(am_gjdoc_OBJECTS)\n am_gkeytool_OBJECTS =\n gkeytool_OBJECTS = $(am_gkeytool_OBJECTS)\n am_gnative2ascii_OBJECTS =\n@@ -533,10 +537,11 @@ SOURCES = $(lib_gnu_awt_xlib_la_SOURCES) $(libgcj_tools_la_SOURCES) \\\n \t$(libjvm_la_SOURCES) $(ecjx_SOURCES) $(gappletviewer_SOURCES) \\\n \t$(gc_analyze_SOURCES) $(gcj_dbtool_SOURCES) $(gcjh_SOURCES) \\\n \t$(gen_from_JIS_SOURCES) $(gij_SOURCES) $(gjar_SOURCES) \\\n-\t$(gjarsigner_SOURCES) $(gjavah_SOURCES) $(gkeytool_SOURCES) \\\n-\t$(gnative2ascii_SOURCES) $(gorbd_SOURCES) $(grmic_SOURCES) \\\n-\t$(grmid_SOURCES) $(grmiregistry_SOURCES) $(gserialver_SOURCES) \\\n-\t$(gtnameserv_SOURCES) $(jv_convert_SOURCES)\n+\t$(gjarsigner_SOURCES) $(gjavah_SOURCES) $(gjdoc_SOURCES) \\\n+\t$(gkeytool_SOURCES) $(gnative2ascii_SOURCES) $(gorbd_SOURCES) \\\n+\t$(grmic_SOURCES) $(grmid_SOURCES) $(grmiregistry_SOURCES) \\\n+\t$(gserialver_SOURCES) $(gtnameserv_SOURCES) \\\n+\t$(jv_convert_SOURCES)\n DIST_SOURCES = $(lib_gnu_awt_xlib_la_SOURCES) \\\n \t$(libgcj_tools_la_SOURCES) $(am__libgcj_la_SOURCES_DIST) \\\n \t$(EXTRA_libgcj_la_SOURCES) $(libgcj_bc_la_SOURCES) \\\n@@ -545,10 +550,10 @@ DIST_SOURCES = $(lib_gnu_awt_xlib_la_SOURCES) \\\n \t$(gcj_dbtool_SOURCES) $(gcjh_SOURCES) \\\n \t$(am__gen_from_JIS_SOURCES_DIST) $(gij_SOURCES) \\\n \t$(gjar_SOURCES) $(gjarsigner_SOURCES) $(gjavah_SOURCES) \\\n-\t$(gkeytool_SOURCES) $(gnative2ascii_SOURCES) $(gorbd_SOURCES) \\\n-\t$(grmic_SOURCES) $(grmid_SOURCES) $(grmiregistry_SOURCES) \\\n-\t$(gserialver_SOURCES) $(gtnameserv_SOURCES) \\\n-\t$(jv_convert_SOURCES)\n+\t$(gjdoc_SOURCES) $(gkeytool_SOURCES) $(gnative2ascii_SOURCES) \\\n+\t$(gorbd_SOURCES) $(grmic_SOURCES) $(grmid_SOURCES) \\\n+\t$(grmiregistry_SOURCES) $(gserialver_SOURCES) \\\n+\t$(gtnameserv_SOURCES) $(jv_convert_SOURCES)\n RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \\\n \thtml-recursive info-recursive install-data-recursive \\\n \tinstall-exec-recursive install-info-recursive \\\n@@ -579,6 +584,7 @@ AMDEP_TRUE = @AMDEP_TRUE@\n AMTAR = @AMTAR@\n ANONVERSCRIPT_FALSE = @ANONVERSCRIPT_FALSE@\n ANONVERSCRIPT_TRUE = @ANONVERSCRIPT_TRUE@\n+ANTLR_JAR = @ANTLR_JAR@\n AR = @AR@\n AS = @AS@\n AUTOCONF = @AUTOCONF@\n@@ -599,6 +605,8 @@ CLASSPATH_SEPARATOR = @CLASSPATH_SEPARATOR@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n CPU = @CPU@\n+CREATE_GJDOC_FALSE = @CREATE_GJDOC_FALSE@\n+CREATE_GJDOC_TRUE = @CREATE_GJDOC_TRUE@\n CREATE_JAVA_HOME_FALSE = @CREATE_JAVA_HOME_FALSE@\n CREATE_JAVA_HOME_TRUE = @CREATE_JAVA_HOME_TRUE@\n CXX = @CXX@\n@@ -821,7 +829,7 @@ dbexecdir = @dbexecdir@\n exec_prefix = @exec_prefix@\n extra_gij_ldflags = @extra_gij_ldflags@\n extra_ldflags = @extra_ldflags@\n-extra_ldflags_libjava = @extra_ldflags_libjava@ $(am__append_6)\n+extra_ldflags_libjava = @extra_ldflags_libjava@ $(am__append_7)\n gcc_suffix = @gcc_suffix@\n gcjsubdir = @gcjsubdir@\n gxx_include_dir = @gxx_include_dir@\n@@ -909,7 +917,7 @@ db_name = classmap.db\n db_pathtail = $(gcjsubdir)/$(db_name)\n @NATIVE_TRUE@dbexec_DATA = $(db_name)\n bin_SCRIPTS = addr2name.awk contrib/rebuild-gcj-db contrib/aot-compile \\\n-\t$(am__append_5)\n+\t$(am__append_6)\n GCJ_WITH_FLAGS = $(GCJ) --encoding=UTF-8 -Wno-deprecated\n GCJLINK = $(LIBTOOL) --tag=GCJ --mode=link $(GCJ) -L$(here) $(JC1FLAGS) \\\n           $(LDFLAGS) -o $@\n@@ -947,7 +955,7 @@ AM_GCJFLAGS = \\\n \t--encoding=UTF-8 \\\n \t-Wno-deprecated -fbootstrap-classes\n \n-AM_CFLAGS = @LIBGCJ_CFLAGS@ $(am__append_7)\n+AM_CFLAGS = @LIBGCJ_CFLAGS@ $(am__append_8)\n @SUPPRESS_LIBGCJ_BC_FALSE@LIBGCJ_BC_FLAGS = -findirect-dispatch -fno-indirect-classes\n @SUPPRESS_LIBGCJ_BC_TRUE@LIBGCJ_BC_FLAGS = \n @BUILD_LIBGCJ_REDUCED_REFLECTION_FALSE@LIBGCJ_REDUCED_REFLECTION_FLAGS = \n@@ -974,9 +982,9 @@ libgij_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n @INTERPRETER_TRUE@libgcj_interpret_source_files = jvmti.cc interpret.cc\n libgcj_la_SOURCES = prims.cc jni.cc exception.cc stacktrace.cc link.cc \\\n \tdefineclass.cc verify.cc $(libgcj_interpret_source_files) \\\n-\t$(nat_source_files) $(am__append_8) $(am__append_9) \\\n-\t$(am__append_10) $(am__append_11) $(am__append_12) \\\n-\t$(am__append_13) $(am__append_14) $(am__append_15)\n+\t$(nat_source_files) $(am__append_9) $(am__append_10) \\\n+\t$(am__append_11) $(am__append_12) $(am__append_13) \\\n+\t$(am__append_14) $(am__append_15) $(am__append_16)\n nat_files = $(nat_source_files:.cc=.lo)\n xlib_nat_files = $(xlib_nat_source_files:.cc=.lo)\n \n@@ -1000,7 +1008,7 @@ libgcj_la_LIBADD = \\\n libgcj_la_DEPENDENCIES = libgcj-$(gcc_version).jar java/lang/Object.lo \\\n \tjava/lang/Class.lo java/process-$(PLATFORM).lo \\\n \t$(all_packages_source_files:.list=.lo) $(LIBLTDL) \\\n-\t$(libgcj_la_LIBADD) $(am__append_16)\n+\t$(libgcj_la_LIBADD) $(am__append_17)\n libgcj_la_LINK = $(LIBLINK)\n EXTRA_libgcj_la_SOURCES = java/lang/Object.java\n libgcj_tools_la_SOURCES = classpath/tools/tools.zip\n@@ -1239,7 +1247,7 @@ gnu/awt/xlib/XToolkit.java\n \n gnu_awt_xlib_header_files = $(patsubst %.java,%.h,$(gnu_awt_xlib_source_files))\n gnu_classpath_source_files = \\\n-gnu/classpath/Configuration.java \\\n+classpath/gnu/classpath/Configuration.java \\\n classpath/gnu/classpath/NotImplementedException.java \\\n classpath/gnu/classpath/Pair.java \\\n classpath/gnu/classpath/Pointer.java \\\n@@ -1870,10 +1878,12 @@ classpath/gnu/java/io/PlatformHelper.java\n gnu_java_io_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_io_source_files)))\n gnu_java_lang_source_files = \\\n classpath/gnu/java/lang/ArrayHelper.java \\\n+classpath/gnu/java/lang/CPStringBuilder.java \\\n classpath/gnu/java/lang/CharData.java \\\n classpath/gnu/java/lang/ClassHelper.java \\\n classpath/gnu/java/lang/InstrumentationImpl.java \\\n gnu/java/lang/MainThread.java \\\n+gnu/java/lang/VMCPStringBuilder.java \\\n gnu/java/lang/VMInstrumentationImpl.java\n \n gnu_java_lang_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_lang_source_files)))\n@@ -1915,9 +1925,9 @@ classpath/gnu/java/locale/LocaleHelper.java\n gnu_java_locale_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_locale_source_files)))\n gnu_java_math_source_files = \\\n classpath/gnu/java/math/Fixed.java \\\n+classpath/gnu/java/math/GMP.java \\\n classpath/gnu/java/math/MPN.java\n \n-gnu_java_math_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_math_source_files)))\n gnu_java_net_source_files = \\\n classpath/gnu/java/net/CRLFInputStream.java \\\n classpath/gnu/java/net/CRLFOutputStream.java \\\n@@ -2420,7 +2430,6 @@ classpath/gnu/java/util/jar/JarUtils.java\n \n gnu_java_util_jar_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_util_jar_source_files)))\n gnu_java_util_prefs_source_files = \\\n-classpath/gnu/java/util/prefs/EventDispatcher.java \\\n classpath/gnu/java/util/prefs/FileBasedFactory.java \\\n classpath/gnu/java/util/prefs/FileBasedPreferences.java \\\n classpath/gnu/java/util/prefs/GConfBasedFactory.java \\\n@@ -2468,6 +2477,12 @@ classpath/gnu/java/util/regex/RETokenWordBoundary.java \\\n classpath/gnu/java/util/regex/UncheckedRE.java\n \n gnu_java_util_regex_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_java_util_regex_source_files)))\n+gnu_javax_activation_viewers_source_files = \\\n+classpath/gnu/javax/activation/viewers/ImageViewer.java \\\n+classpath/gnu/javax/activation/viewers/TextEditor.java \\\n+classpath/gnu/javax/activation/viewers/TextViewer.java\n+\n+gnu_javax_activation_viewers_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(gnu_javax_activation_viewers_source_files)))\n gnu_javax_crypto_source_files = \\\n classpath/gnu/javax/crypto/RSACipherImpl.java\n \n@@ -4228,6 +4243,7 @@ classpath/java/io/Writer.java\n java_io_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(java_io_source_files)))\n java_lang_source_files = \\\n classpath/java/lang/AbstractMethodError.java \\\n+java/lang/AbstractStringBuffer.java \\\n classpath/java/lang/Appendable.java \\\n classpath/java/lang/ArithmeticException.java \\\n classpath/java/lang/ArrayIndexOutOfBoundsException.java \\\n@@ -4311,6 +4327,7 @@ java/lang/Thread.java \\\n classpath/java/lang/ThreadDeath.java \\\n classpath/java/lang/ThreadGroup.java \\\n java/lang/ThreadLocal.java \\\n+classpath/java/lang/ThreadLocalMap.java \\\n classpath/java/lang/Throwable.java \\\n classpath/java/lang/TypeNotPresentException.java \\\n classpath/java/lang/UnknownError.java \\\n@@ -4949,6 +4966,7 @@ classpath/external/jsr166/java/util/Queue.java \\\n classpath/java/util/Random.java \\\n classpath/java/util/RandomAccess.java \\\n classpath/java/util/ResourceBundle.java \\\n+classpath/java/util/Scanner.java \\\n classpath/java/util/ServiceConfigurationError.java \\\n classpath/java/util/ServiceLoader.java \\\n classpath/java/util/Set.java \\\n@@ -5152,6 +5170,29 @@ classpath/javax/accessibility/AccessibleTextSequence.java \\\n classpath/javax/accessibility/AccessibleValue.java\n \n javax_accessibility_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_accessibility_source_files)))\n+javax_activation_source_files = \\\n+classpath/javax/activation/ActivationDataFlavor.java \\\n+classpath/javax/activation/CommandInfo.java \\\n+classpath/javax/activation/CommandMap.java \\\n+classpath/javax/activation/CommandObject.java \\\n+classpath/javax/activation/DataContentHandler.java \\\n+classpath/javax/activation/DataContentHandlerFactory.java \\\n+classpath/javax/activation/DataHandler.java \\\n+classpath/javax/activation/DataHandlerDataSource.java \\\n+classpath/javax/activation/DataSource.java \\\n+classpath/javax/activation/DataSourceDataContentHandler.java \\\n+classpath/javax/activation/FileDataSource.java \\\n+classpath/javax/activation/FileTypeMap.java \\\n+classpath/javax/activation/MailcapCommandMap.java \\\n+classpath/javax/activation/MimeType.java \\\n+classpath/javax/activation/MimeTypeParameterList.java \\\n+classpath/javax/activation/MimeTypeParseException.java \\\n+classpath/javax/activation/MimetypesFileTypeMap.java \\\n+classpath/javax/activation/ObjectDataContentHandler.java \\\n+classpath/javax/activation/URLDataSource.java \\\n+classpath/javax/activation/UnsupportedDataTypeException.java\n+\n+javax_activation_header_files = $(patsubst classpath/%,%,$(patsubst %.java,%.h,$(javax_activation_source_files)))\n javax_activity_source_files = \\\n classpath/javax/activity/ActivityCompletedException.java \\\n classpath/javax/activity/ActivityRequiredException.java \\\n@@ -7362,7 +7403,6 @@ all_packages_source_files = \\\n   gnu/java/lang.list \\\n   gnu/java/lang/reflect.list \\\n   gnu/java/locale.list \\\n-  gnu/java/math.list \\\n   gnu/java/net.list \\\n   gnu/java/net/loader.list \\\n   gnu/java/net/local.list \\\n@@ -7406,6 +7446,7 @@ all_packages_source_files = \\\n   gnu/java/util/jar.list \\\n   gnu/java/util/prefs.list \\\n   gnu/java/util/regex.list \\\n+  gnu/javax/activation/viewers.list \\\n   gnu/javax/crypto.list \\\n   gnu/javax/crypto/assembly.list \\\n   gnu/javax/crypto/cipher.list \\\n@@ -7524,6 +7565,7 @@ all_packages_source_files = \\\n   java/util/spi.list \\\n   java/util/zip.list \\\n   javax/accessibility.list \\\n+  javax/activation.list \\\n   javax/activity.list \\\n   javax/crypto.list \\\n   javax/crypto/interfaces.list \\\n@@ -7614,7 +7656,6 @@ ordinary_header_files = \\\n   $(gnu_java_lang_management_header_files) \\\n   $(gnu_java_lang_reflect_header_files) \\\n   $(gnu_java_locale_header_files) \\\n-  $(gnu_java_math_header_files) \\\n   $(gnu_java_net_header_files) \\\n   $(gnu_java_net_loader_header_files) \\\n   $(gnu_java_net_local_header_files) \\\n@@ -7658,6 +7699,7 @@ ordinary_header_files = \\\n   $(gnu_java_util_jar_header_files) \\\n   $(gnu_java_util_prefs_header_files) \\\n   $(gnu_java_util_regex_header_files) \\\n+  $(gnu_javax_activation_viewers_header_files) \\\n   $(gnu_javax_crypto_header_files) \\\n   $(gnu_javax_crypto_assembly_header_files) \\\n   $(gnu_javax_crypto_cipher_header_files) \\\n@@ -7771,6 +7813,7 @@ ordinary_header_files = \\\n   $(java_util_spi_header_files) \\\n   $(java_util_zip_header_files) \\\n   $(javax_accessibility_header_files) \\\n+  $(javax_activation_header_files) \\\n   $(javax_activity_header_files) \\\n   $(javax_crypto_header_files) \\\n   $(javax_crypto_interfaces_header_files) \\\n@@ -7839,6 +7882,7 @@ bc_objects = \\\n   gnu-java-awt-peer-swing.lo \\\n   gnu-java-beans.lo \\\n   gnu-java-lang-management.lo \\\n+  gnu-java-math.lo \\\n   gnu-java-util-prefs-gconf.lo \\\n   gnu-javax-management.lo \\\n   gnu-javax-rmi.lo \\\n@@ -7883,7 +7927,9 @@ property_files = \\\n   classpath/resource/gnu/java/locale/LocaleInformation_aa_ER_SAAHO.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_aa_ET.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_af.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_af_NA.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_af_ZA.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ak.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_am.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_am_ET.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ar.properties \\\n@@ -7906,11 +7952,14 @@ property_files = \\\n   classpath/resource/gnu/java/locale/LocaleInformation_bg_BG.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_bn.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_bn_IN.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_bo.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_bs.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_byn.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_byn_ER.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ca.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ca_ES.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_cch.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_cop.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_cs.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_cs_CZ.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_cy.properties \\\n@@ -7928,6 +7977,7 @@ property_files = \\\n   classpath/resource/gnu/java/locale/LocaleInformation_dv_MV.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_dz.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_dz_BT.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ee.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_el.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_el_CY.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_el_GR.properties \\\n@@ -7938,18 +7988,23 @@ property_files = \\\n   classpath/resource/gnu/java/locale/LocaleInformation_en_BW.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_en_BZ.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_en_CA.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_en_Dsrt.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_en_GB.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_en_GU.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_en_HK.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_en_IE.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_en_IN.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_en_JM.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_en_MH.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_en_MP.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_en_MT.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_en_NA.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_en_NZ.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_en_PH.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_en_PK.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_en_SG.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_en_Shaw.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_en_TT.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_en_UM.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_en_US.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_en_US_POSIX.properties \\\n@@ -7987,15 +8042,18 @@ property_files = \\\n   classpath/resource/gnu/java/locale/LocaleInformation_fa_IR.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_fi.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_fi_FI.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_fil.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_fo.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_fo_FO.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_fr.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_fr_BE.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_fr_CA.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_fr_CH.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_fr_LU.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_fur.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ga.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ga_IE.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_gaa.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_gez.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_gez_ER.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_gez_ET.properties \\\n@@ -8005,6 +8063,8 @@ property_files = \\\n   classpath/resource/gnu/java/locale/LocaleInformation_gu_IN.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_gv.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_gv_GB.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ha.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ha_Arab.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_haw.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_haw_US.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_he.properties \\\n@@ -8017,8 +8077,11 @@ property_files = \\\n   classpath/resource/gnu/java/locale/LocaleInformation_hy.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_hy_AM.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_hy_AM_REVISED.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ia.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_id.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_id_ID.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ig.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ii.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_is.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_is_IS.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_it.properties \\\n@@ -8028,6 +8091,10 @@ property_files = \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ja.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ja_JP.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ka.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_kaj.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_kam.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_kcg.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_kfo.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_kk.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_kk_KZ.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_kl.properties \\\n@@ -8040,9 +8107,14 @@ property_files = \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ko_KR.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_kok.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_kok_IN.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_kpe.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ku.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ku_Arab.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ku_Latn.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_kw.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_kw_GB.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ky.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ln.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_lo.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_lo_LA.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_lt.properties \\\n@@ -8060,19 +8132,25 @@ property_files = \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ms_MY.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_mt.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_mt_MT.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_my.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_nb.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_nb_NO.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ne.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_nl.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_nl_BE.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_nl_NL.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_nn.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_nn_NO.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_nr.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_nso.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ny.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_om.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_om_ET.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_om_KE.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_or.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_or_IN.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_pa.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_pa_Arab.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_pa_IN.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_pl.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_pl_PL.properties \\\n@@ -8086,8 +8164,12 @@ property_files = \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ru.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ru_RU.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ru_UA.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_rw.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_sa.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_sa_IN.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_se.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_se_FI.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_si.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_sid.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_sid_ET.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_sk.properties \\\n@@ -8106,6 +8188,11 @@ property_files = \\\n   classpath/resource/gnu/java/locale/LocaleInformation_sr_BA_Latn.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_sr_Cyrl.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_sr_Latn.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_sr_ME_Latn.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_sr_RS_Latn.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ss.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ssy.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_st.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_sv.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_sv_FI.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_sv_SE.properties \\\n@@ -8118,41 +8205,55 @@ property_files = \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ta_IN.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_te.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_te_IN.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_tg.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_th.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_th_TH.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ti.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ti_ER.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ti_ET.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_tig.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_tig_ER.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_tn.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_to.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_tr.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_tr_TR.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_trv.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ts.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_tt.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_tt_RU.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ug.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_uk.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_uk_UA.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_ur.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ur_IN.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_uz.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_uz_AF_Arab.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_uz_Arab.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_uz_Latn.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_ve.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_vi.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_wal.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_wal_ET.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_wo.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_xh.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_yo.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_zh.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_zh_CN_Hans.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_zh_HK_Hant.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_zh_Hant.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_zh_MO_Hant.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_zh_SG_Hans.properties \\\n   classpath/resource/gnu/java/locale/LocaleInformation_zh_TW_Hant.properties \\\n+  classpath/resource/gnu/java/locale/LocaleInformation_zu.properties \\\n   classpath/resource/gnu/java/util/regex/MessagesBundle.properties \\\n   classpath/resource/gnu/java/util/regex/MessagesBundle_fr.properties \\\n   classpath/resource/gnu/java/util/regex/MessagesBundle_it.properties \\\n   classpath/resource/gnu/javax/print/PrinterDialog.properties \\\n   classpath/resource/gnu/javax/print/PrinterDialog_de.properties \\\n   classpath/resource/gnu/javax/security/auth/callback/MessagesBundle.properties \\\n+  classpath/resource/java/text/metazones.properties \\\n   classpath/resource/java/util/iso4217.properties \\\n+  classpath/resource/java/util/weeks.properties \\\n   classpath/resource/javax/imageio/plugins/jpeg/MessagesBundle.properties \\\n   classpath/resource/javax/swing/text/html/default.css \\\n   classpath/resource/org/ietf/jgss/MessagesBundle.properties \\\n@@ -8244,7 +8345,7 @@ ECJX_BASE_FLAGS = -findirect-dispatch \\\n @NATIVE_TRUE@ecjx_LDADD = -L$(here)/.libs libgcj.la\n @NATIVE_FALSE@ecjx_DEPENDENCIES = \n @NATIVE_TRUE@ecjx_DEPENDENCIES = libgcj.la libgcj.spec \\\n-@NATIVE_TRUE@\t$(am__append_17)\n+@NATIVE_TRUE@\t$(am__append_18)\n gappletviewer_SOURCES = \n gappletviewer_LDFLAGS = --main=gnu.classpath.tools.appletviewer.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n@@ -8336,6 +8437,14 @@ grmiregistry_LDFLAGS = --main=gnu.classpath.tools.rmiregistry.Main \\\n grmiregistry_LINK = $(GCJLINK)\n grmiregistry_LDADD = -L$(here)/.libs libgcj-tools.la\n grmiregistry_DEPENDENCIES = libgcj-tools.la\n+gjdoc_SOURCES = \n+gjdoc_LDFLAGS = --main=gnu.classpath.tools.gjdoc.Main \\\n+\t-Djava.class.path=$(ANTLR_JAR) \\\n+\t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n+\n+gjdoc_LINK = $(GCJLINK)\n+gjdoc_LDADD = -L$(here)/.libs libgcj-tools.la\n+gjdoc_DEPENDENCIES = libgcj-tools.la\n @INTERPRETER_FALSE@nat_jdwp_source_files = \n @INTERPRETER_TRUE@nat_jdwp_source_files = \\\n @INTERPRETER_TRUE@gnu/classpath/jdwp/natVMFrame.cc \\\n@@ -8401,8 +8510,7 @@ java/lang/natMath.cc \\\n java/lang/natObject.cc \\\n java/lang/natRuntime.cc\t\\\n java/lang/natString.cc \\\n-java/lang/natStringBuffer.cc \\\n-java/lang/natStringBuilder.cc \\\n+java/lang/natAbstractStringBuffer.cc \\\n java/lang/natSystem.cc \\\n java/lang/natThread.cc \\\n java/lang/natThreadLocal.cc \\\n@@ -8453,7 +8561,7 @@ gnu/gcj/xlib/natXImage.cc \\\n gnu/gcj/xlib/natXUnmapEvent.cc\n \n sourcesdir = $(jardir)\n-headers_to_make = $(nat_headers) $(am__append_18)\n+headers_to_make = $(nat_headers) $(am__append_19)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n@@ -8919,9 +9027,7 @@ java/lang/natRuntime.lo: java/lang/$(am__dirstamp) \\\n \tjava/lang/$(DEPDIR)/$(am__dirstamp)\n java/lang/natString.lo: java/lang/$(am__dirstamp) \\\n \tjava/lang/$(DEPDIR)/$(am__dirstamp)\n-java/lang/natStringBuffer.lo: java/lang/$(am__dirstamp) \\\n-\tjava/lang/$(DEPDIR)/$(am__dirstamp)\n-java/lang/natStringBuilder.lo: java/lang/$(am__dirstamp) \\\n+java/lang/natAbstractStringBuffer.lo: java/lang/$(am__dirstamp) \\\n \tjava/lang/$(DEPDIR)/$(am__dirstamp)\n java/lang/natSystem.lo: java/lang/$(am__dirstamp) \\\n \tjava/lang/$(DEPDIR)/$(am__dirstamp)\n@@ -9165,6 +9271,9 @@ gjarsigner$(EXEEXT): $(gjarsigner_OBJECTS) $(gjarsigner_DEPENDENCIES)\n gjavah$(EXEEXT): $(gjavah_OBJECTS) $(gjavah_DEPENDENCIES) \n \t@rm -f gjavah$(EXEEXT)\n \t$(gjavah_LINK) $(gjavah_LDFLAGS) $(gjavah_OBJECTS) $(gjavah_LDADD) $(LIBS)\n+gjdoc$(EXEEXT): $(gjdoc_OBJECTS) $(gjdoc_DEPENDENCIES) \n+\t@rm -f gjdoc$(EXEEXT)\n+\t$(gjdoc_LINK) $(gjdoc_LDFLAGS) $(gjdoc_OBJECTS) $(gjdoc_LDADD) $(LIBS)\n gkeytool$(EXEEXT): $(gkeytool_OBJECTS) $(gkeytool_DEPENDENCIES) \n \t@rm -f gkeytool$(EXEEXT)\n \t$(gkeytool_LINK) $(gkeytool_LDFLAGS) $(gkeytool_OBJECTS) $(gkeytool_LDADD) $(LIBS)\n@@ -9353,6 +9462,8 @@ mostlyclean-compile:\n \t-rm -f java/io/natVMObjectStreamClass.lo\n \t-rm -f java/lang/Object.$(OBJEXT)\n \t-rm -f java/lang/Object.lo\n+\t-rm -f java/lang/natAbstractStringBuffer.$(OBJEXT)\n+\t-rm -f java/lang/natAbstractStringBuffer.lo\n \t-rm -f java/lang/natCharacter.$(OBJEXT)\n \t-rm -f java/lang/natCharacter.lo\n \t-rm -f java/lang/natClass.$(OBJEXT)\n@@ -9369,10 +9480,6 @@ mostlyclean-compile:\n \t-rm -f java/lang/natRuntime.lo\n \t-rm -f java/lang/natString.$(OBJEXT)\n \t-rm -f java/lang/natString.lo\n-\t-rm -f java/lang/natStringBuffer.$(OBJEXT)\n-\t-rm -f java/lang/natStringBuffer.lo\n-\t-rm -f java/lang/natStringBuilder.$(OBJEXT)\n-\t-rm -f java/lang/natStringBuilder.lo\n \t-rm -f java/lang/natSystem.$(OBJEXT)\n \t-rm -f java/lang/natSystem.lo\n \t-rm -f java/lang/natThread.$(OBJEXT)\n@@ -9524,6 +9631,7 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@java/io/$(DEPDIR)/natVMObjectInputStream.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/io/$(DEPDIR)/natVMObjectStreamClass.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/$(DEPDIR)/Object.Plo@am__quote@\n+@AMDEP_TRUE@@am__include@ @am__quote@java/lang/$(DEPDIR)/natAbstractStringBuffer.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/$(DEPDIR)/natCharacter.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/$(DEPDIR)/natClass.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/$(DEPDIR)/natClassLoader.Plo@am__quote@\n@@ -9532,8 +9640,6 @@ distclean-compile:\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/$(DEPDIR)/natObject.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/$(DEPDIR)/natRuntime.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/$(DEPDIR)/natString.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@java/lang/$(DEPDIR)/natStringBuffer.Plo@am__quote@\n-@AMDEP_TRUE@@am__include@ @am__quote@java/lang/$(DEPDIR)/natStringBuilder.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/$(DEPDIR)/natSystem.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/$(DEPDIR)/natThread.Plo@am__quote@\n @AMDEP_TRUE@@am__include@ @am__quote@java/lang/$(DEPDIR)/natThreadLocal.Plo@am__quote@\n@@ -10696,11 +10802,10 @@ gnu/java/locale.list: $(gnu_java_locale_source_files)\n \n -include gnu/java/locale.deps\n \n-gnu/java/math.list: $(gnu_java_math_source_files)\n-\t@$(mkinstalldirs) $(dir $@)\n-\techo $(srcdir)/classpath/lib/gnu/java/math/*.class > gnu/java/math.list\n-\n--include gnu/java/math.deps\n+gnu-java-math.lo: $(gnu_java_math_source_files)\n+\t@find $(srcdir)/classpath/lib/gnu/java/math -name '*.class' > gnu-java-math.list\n+\t$(LTGCJCOMPILE) -fsource-filename=$(here)/classpath/lib/classes -fjni $(LIBGCJ_BC_FLAGS) -c -o gnu-java-math.lo @gnu-java-math.list\n+\t@rm -f gnu-java-math.list\n \n gnu/java/net.list: $(gnu_java_net_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n@@ -10965,6 +11070,12 @@ gnu/java/util/regex.list: $(gnu_java_util_regex_source_files)\n \n -include gnu/java/util/regex.deps\n \n+gnu/javax/activation/viewers.list: $(gnu_javax_activation_viewers_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\techo $(srcdir)/classpath/lib/gnu/javax/activation/viewers/*.class > gnu/javax/activation/viewers.list\n+\n+-include gnu/javax/activation/viewers.deps\n+\n gnu/javax/crypto.list: $(gnu_javax_crypto_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \techo $(srcdir)/classpath/lib/gnu/javax/crypto/*.class > gnu/javax/crypto.list\n@@ -11738,6 +11849,12 @@ javax/accessibility.list: $(javax_accessibility_source_files)\n \n -include javax/accessibility.deps\n \n+javax/activation.list: $(javax_activation_source_files)\n+\t@$(mkinstalldirs) $(dir $@)\n+\techo $(srcdir)/classpath/lib/javax/activation/*.class > javax/activation.list\n+\n+-include javax/activation.deps\n+\n javax/activity.list: $(javax_activity_source_files)\n \t@$(mkinstalldirs) $(dir $@)\n \techo $(srcdir)/classpath/lib/javax/activity/*.class > javax/activity.list"}, {"sha": "19a2658b7e1d3a401051a01a75b99a77e2eb9088", "filename": "libjava/classpath/AUTHORS", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2FAUTHORS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2FAUTHORS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FAUTHORS?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -22,6 +22,7 @@ Thomas Fitzsimmons (fitzsim@redhat.com)\n Jeroen Frijters (jeroen@frijters.net)\n David Gilbert (david.gilbert@object-refinery.com)\n Anthony Green (green@redhat.com)\n+Laszlo Andras Hernadi (e0327023@student.tuwien.ac.at)\n Jochen Hoenicke (Jochen.Hoenicke@Informatik.Uni-Oldenburg.de)\n Andrew John Hughes (gnu_andrew@member.fsf.org)\n Kazumitsu Ito (kaz@maczuka.gcd.org)\n@@ -42,6 +43,7 @@ Aaron M. Renn (arenn@urbanophile.com)\n Ian Rogers (ian.rogers@manchester.ac.uk)\n Andrew Selkirk (aselkirk@sympatico.ca)\n Robert Schuster (robertschuster@fsfe.org)\n+Joshua Sumali (jsumali@redhat.com)\n Christian Thalinger (twisti@complang.tuwien.ac.at)\n Andreas Tobler (a.tobler@schweiz.org)\n Mario Torre (neugens@limasoftware.net)"}, {"sha": "f9db385f7c1f2833de1669d3450173d30bbfd278", "filename": "libjava/classpath/ChangeLog", "status": "modified", "additions": 3171, "deletions": 153, "changes": 3324, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "7e7c40a1c54e2f389caaea90c243e53649cdb527", "filename": "libjava/classpath/ChangeLog.gcj", "status": "modified", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2FChangeLog.gcj", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2FChangeLog.gcj", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FChangeLog.gcj?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -1,3 +1,87 @@\n+2008-10-21  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* classpath/tools/gnu/classpath/tools/gjdoc/expr/Java*: Move from ...\n+\t* classpath/tools/generated/gnu/classpath/tools/gjdoc/expr/ ... here.\n+\t* Update .class files.\n+\t\n+2008-10-21  Andrew John Hughes  <gnu_andrew@member.fsf.org>\n+\n+\t* tools/Makefile.am:\n+\tAlways generate parser in the srcdir.\n+\n+2008-10-21  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* doc/Makefile.am (MAINTAINERCLEANFILES): Add gjdoc.1.\n+\t* doc/Makefile.in: Regenerate.\n+\n+2008-10-20  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* configure.ac: Fix path name in check for generated gjdoc parser files.\n+\t* configure: Regenerate.\n+\n+2008-10-20  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* configure.ac: Don't check for working java, if not configured\n+        with --enable-java-maintainer-mode.\n+\t* configure: Regenerate.\n+\n+2008-10-19  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* m4/ac_prog_java.m4: Revert previous change.\n+\t* m4/ac_prog_javac.m4: Apply it here.\n+\t* configure: Regenerate.\n+\n+2008-10-19  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* m4/ac_prog_javac.m4: Don't check for working javac, if not configured\n+\twith --enable-java-maintainer-mode.\n+\t* configure: Regenerate.\n+\t* Makefile.in, */Makefile.in: Regenerate.\n+\n+2008-09-30  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* m4/ac_prog_antlr.m4: Check for cantlr binary as well.\n+\n+2008-09-29  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* m4/ac_prog_antlr.m4: Check for antlr binary as well.\n+\n+2008-09-28  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* PR libgcj/37636. Revert:\n+\t2008-02-20  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* tools/Makefile.am ($(TOOLS_ZIP)): Revert part of previous change,\n+\tDo copy resource files in JAVA_MAINTAINER_MODE only.\n+\t* tools/Makefile.in: Regenerate.\n+\n+2008-09-14  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* m4/ac_prog_javac_works.m4, m4/ac_prog_javac.m4, m4/acinclude.m4:\n+\tRevert local changes.\n+\t* m4/ac_prog_antlr.m4: Check for an runantlr binary.\n+\t* tools/Makefile.am, lib/Makefile.am: Revert local changes (JCOMPILER).\n+\t* tools/Makefile.am: Remove USE_JAVAC_FLAGS, pass ANTLR_JAR in\n+\tGLIBJ_CLASSPATH.\n+\n+2008-09-14  Matthias Klose  <doko@ubuntu.com>\n+\n+\tRevert:\n+\tDaniel Frampton  <zyridium at zyridium.net>\n+\n+\t* AUTHORS: Added.\n+\t* java/lang/InheritableThreadLocal.java,\n+\t* java/lang/Thread.java,\n+\t* java/lang/ThreadLocal.java:\n+\tModified to use java.lang.ThreadLocalMap.\n+\t* java/lang/ThreadLocalMap.java:\n+\tNew cheaper ThreadLocal-specific WeakHashMap.\n+\n+2008-08-15  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* m4/acinclude.m4 (CLASSPATH_JAVAC_MEM_CHECK): Remove unknown\n+\targs for javac.\n+\n 2008-08-17  Mark Wielaard  <mark@klomp.org>\n \n \t* gnu/java/awt/peer/gtk/CairoGraphics2D.java: Always loadLibrary"}, {"sha": "af47684b185cb83692e346aeb3c1a034a39a3a4b", "filename": "libjava/classpath/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FMakefile.am?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -11,7 +11,7 @@ ACLOCAL_AMFLAGS = -I m4 -I ../.. -I ../../config ${LOCAL_AUTORECONF_FLAGS}\n \n native: lib\n \n-EXTRA_DIST = HACKING BUGS THANKYOU mauve-classpath LICENSE \\\n+EXTRA_DIST = HACKING BUGS THANKYOU mauve-classpath LICENSE ChangeLog-2007 \\\n              ChangeLog-2003 ChangeLog-2004 ChangeLog-2005 ChangeLog-2006 \\\n              ChangeLog.gnujaxp.1 ChangeLog.gnujaxp.2 ChangeLog.libxmlj \\\n \t     autogen.sh"}, {"sha": "068771a85a229cbf3ef4dd71e94f5586ceba5be7", "filename": "libjava/classpath/Makefile.in", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FMakefile.in?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -68,6 +68,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../ltsugar.m4 \\\n \t$(top_srcdir)/../../ltversion.m4 \\\n \t$(top_srcdir)/../../lt~obsolete.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_antlr.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_java.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_java_works.m4 \\\n \t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n \t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n@@ -120,6 +123,8 @@ ACLOCAL = @ACLOCAL@\n AMDEP_FALSE = @AMDEP_FALSE@\n AMDEP_TRUE = @AMDEP_TRUE@\n AMTAR = @AMTAR@\n+ANTLR = @ANTLR@\n+ANTLR_JAR = @ANTLR_JAR@\n AR = @AR@\n AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n@@ -151,6 +156,12 @@ CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n CREATE_GCONF_PEER_LIBRARIES_FALSE = @CREATE_GCONF_PEER_LIBRARIES_FALSE@\n CREATE_GCONF_PEER_LIBRARIES_TRUE = @CREATE_GCONF_PEER_LIBRARIES_TRUE@\n+CREATE_GJDOC_FALSE = @CREATE_GJDOC_FALSE@\n+CREATE_GJDOC_PARSER_FALSE = @CREATE_GJDOC_PARSER_FALSE@\n+CREATE_GJDOC_PARSER_TRUE = @CREATE_GJDOC_PARSER_TRUE@\n+CREATE_GJDOC_TRUE = @CREATE_GJDOC_TRUE@\n+CREATE_GMPBI_LIBRARY_FALSE = @CREATE_GMPBI_LIBRARY_FALSE@\n+CREATE_GMPBI_LIBRARY_TRUE = @CREATE_GMPBI_LIBRARY_TRUE@\n CREATE_GSTREAMER_PEER_LIBRARIES_FALSE = @CREATE_GSTREAMER_PEER_LIBRARIES_FALSE@\n CREATE_GSTREAMER_PEER_LIBRARIES_TRUE = @CREATE_GSTREAMER_PEER_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n@@ -189,11 +200,12 @@ ERROR_CFLAGS = @ERROR_CFLAGS@\n EXAMPLESDIR = @EXAMPLESDIR@\n EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n-FASTJAR = @FASTJAR@\n FGREP = @FGREP@\n FIND = @FIND@\n FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n+GCJ_JAVAC_FALSE = @GCJ_JAVAC_FALSE@\n+GCJ_JAVAC_TRUE = @GCJ_JAVAC_TRUE@\n GCONF_CFLAGS = @GCONF_CFLAGS@\n GCONF_LIBS = @GCONF_LIBS@\n GDK_CFLAGS = @GDK_CFLAGS@\n@@ -203,6 +215,8 @@ GENINSRC_TRUE = @GENINSRC_TRUE@\n GJDOC = @GJDOC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n+GMP_CFLAGS = @GMP_CFLAGS@\n+GMP_LIBS = @GMP_LIBS@\n GREP = @GREP@\n GSTREAMER_BASE_CFLAGS = @GSTREAMER_BASE_CFLAGS@\n GSTREAMER_BASE_LIBS = @GSTREAMER_BASE_LIBS@\n@@ -224,7 +238,10 @@ INSTALL_GLIBJ_ZIP_TRUE = @INSTALL_GLIBJ_ZIP_TRUE@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+JAR = @JAR@\n+JAVA = @JAVA@\n JAVAC = @JAVAC@\n+JAVAC_IS_GCJ = @JAVAC_IS_GCJ@\n JAVAC_MEM_OPT = @JAVAC_MEM_OPT@\n JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n JAVA_MAINTAINER_MODE_FALSE = @JAVA_MAINTAINER_MODE_FALSE@\n@@ -290,8 +307,10 @@ USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n USE_PREBUILT_GLIBJ_ZIP_TRUE = @USE_PREBUILT_GLIBJ_ZIP_TRUE@\n VERSION = @VERSION@\n-VM_BINARY = @VM_BINARY@\n+WANT_NATIVE_BIG_INTEGER = @WANT_NATIVE_BIG_INTEGER@\n WARNING_CFLAGS = @WARNING_CFLAGS@\n+WITH_JAR_FALSE = @WITH_JAR_FALSE@\n+WITH_JAR_TRUE = @WITH_JAR_TRUE@\n XML_CFLAGS = @XML_CFLAGS@\n XML_LIBS = @XML_LIBS@\n XSLT_CFLAGS = @XSLT_CFLAGS@\n@@ -302,6 +321,7 @@ X_EXTRA_LIBS = @X_EXTRA_LIBS@\n X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZIP = @ZIP@\n+ac_ct_ANTLR = @ac_ct_ANTLR@\n ac_ct_AR = @ac_ct_AR@\n ac_ct_CC = @ac_ct_CC@\n ac_ct_CXX = @ac_ct_CXX@\n@@ -361,6 +381,7 @@ target_cpu = @target_cpu@\n target_os = @target_os@\n target_vendor = @target_vendor@\n toolexeclibdir = @toolexeclibdir@\n+uudecode = @uudecode@\n vm_classes = @vm_classes@\n \n # lib first, to compile .class files before native code, last examples\n@@ -369,7 +390,7 @@ DIST_SUBDIRS = lib doc external include native resource scripts tools examples\n \n # Allow users to pass site-specific flags to autoreconf via an env var. \n ACLOCAL_AMFLAGS = -I m4 -I ../.. -I ../../config ${LOCAL_AUTORECONF_FLAGS}\n-EXTRA_DIST = HACKING BUGS THANKYOU mauve-classpath LICENSE \\\n+EXTRA_DIST = HACKING BUGS THANKYOU mauve-classpath LICENSE ChangeLog-2007 \\\n              ChangeLog-2003 ChangeLog-2004 ChangeLog-2005 ChangeLog-2006 \\\n              ChangeLog.gnujaxp.1 ChangeLog.gnujaxp.2 ChangeLog.libxmlj \\\n \t     autogen.sh"}, {"sha": "4be4d60434c88a1ef0a4b1909739195eb146b2ad", "filename": "libjava/classpath/NEWS", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2FNEWS", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2FNEWS", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FNEWS?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -1,3 +1,19 @@\n+New in release 0.98\n+\n+* Native support for BigInteger is now provided using the GMP\n+library.  A new option, --enable/disable-gmp is provided, and\n+the option is enabled by default if GMP is found.\n+* Classpath now makes use of a new StringBuilder implementation\n+internally called CPStringBuilder.  In addition to being\n+unsynchronised, like StringBuilder, this also avoids copying the\n+array when toString or substring is called.  While StringBuffer/Builder\n+always retain their own array, which is only altered during resizing,\n+CPStringBuilder gives away its array when the result is generated\n+by toString()/substring() and starts afresh.  The default capacity of\n+CPStringBuilder can also be configured using the\n+gnu.classpath.cpstringbuilder.capacity property.\n+* gjdoc is now built as part of tools.zip.\n+\n Bug fixes in release 0.97.2 (Jun 06, 2007)\n \n * Include headers in the release tarball."}, {"sha": "21e75c84e471f69074ac997f0858b6a8a5eec977", "filename": "libjava/classpath/THANKYOU", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2FTHANKYOU", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2FTHANKYOU", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2FTHANKYOU?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -26,6 +26,7 @@ Andrew Haley (aph@redhat.com)\n Steven Hugg (hugg@pobox.com)\n jockey@aromasoft.com\n Isaac Jones (ijones@cis.ohio-state.edu)\n+Byeogncheol Lee (lineonking@gmail.com)\n Oskar Liljeblad (osk@hem.passagen.se)\n Trevor Linton (tlinton@xmission.com)\n Casey Marshall (rsdio@metastatic.org)"}, {"sha": "84b45a46eca6abdf75d61099bd23c1083c888377", "filename": "libjava/classpath/aclocal.m4", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Faclocal.m4?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -912,6 +912,9 @@ m4_include([../../ltoptions.m4])\n m4_include([../../ltsugar.m4])\n m4_include([../../ltversion.m4])\n m4_include([../../lt~obsolete.m4])\n+m4_include([m4/ac_prog_antlr.m4])\n+m4_include([m4/ac_prog_java.m4])\n+m4_include([m4/ac_prog_java_works.m4])\n m4_include([m4/ac_prog_javac.m4])\n m4_include([m4/ac_prog_javac_works.m4])\n m4_include([m4/acattribute.m4])"}, {"sha": "5907cf809024b694bfd9078145d60ff7594c8736", "filename": "libjava/classpath/configure", "status": "modified", "additions": 1591, "deletions": 85, "changes": 1676, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -1,6 +1,6 @@\n #! /bin/sh\n # Guess values for system-dependent variables and create Makefiles.\n-# Generated by GNU Autoconf 2.59 for GNU Classpath 0.97.2.\n+# Generated by GNU Autoconf 2.59 for GNU Classpath 0.98-pre.\n #\n # Report bugs to <classpath@gnu.org>.\n #\n@@ -418,8 +418,8 @@ SHELL=${CONFIG_SHELL-/bin/sh}\n # Identity of this package.\n PACKAGE_NAME='GNU Classpath'\n PACKAGE_TARNAME='classpath'\n-PACKAGE_VERSION='0.97.2'\n-PACKAGE_STRING='GNU Classpath 0.97.2'\n+PACKAGE_VERSION='0.98-pre'\n+PACKAGE_STRING='GNU Classpath 0.98-pre'\n PACKAGE_BUGREPORT='classpath@gnu.org'\n \n ac_unique_file=\"java/lang/System.java\"\n@@ -461,7 +461,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os JAVA_MAINTAINER_MODE_TRUE JAVA_MAINTAINER_MODE_FALSE GENINSRC_TRUE GENINSRC_FALSE multi_basedir LIBVERSION CLASSPATH_MODULE CLASSPATH_CONVENIENCE INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CREATE_COLLECTIONS_TRUE CREATE_COLLECTIONS_FALSE CREATE_JNI_LIBRARIES_TRUE CREATE_JNI_LIBRARIES_FALSE CREATE_CORE_JNI_LIBRARIES_TRUE CREATE_CORE_JNI_LIBRARIES_FALSE CREATE_GCONF_PEER_LIBRARIES_TRUE CREATE_GCONF_PEER_LIBRARIES_FALSE CREATE_GSTREAMER_PEER_LIBRARIES_TRUE CREATE_GSTREAMER_PEER_LIBRARIES_FALSE default_toolkit CREATE_XMLJ_LIBRARY_TRUE CREATE_XMLJ_LIBRARY_FALSE CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CPP EGREP CREATE_ALSA_LIBRARIES_TRUE CREATE_ALSA_LIBRARIES_FALSE CREATE_DSSI_LIBRARIES_TRUE CREATE_DSSI_LIBRARIES_FALSE CREATE_GTK_PEER_LIBRARIES_TRUE CREATE_GTK_PEER_LIBRARIES_FALSE CREATE_QT_PEER_LIBRARIES_TRUE CREATE_QT_PEER_LIBRARIES_FALSE CREATE_PLUGIN_TRUE CREATE_PLUGIN_FALSE toolexeclibdir nativeexeclibdir glibjdir VM_BINARY CREATE_JNI_HEADERS_TRUE CREATE_JNI_HEADERS_FALSE CREATE_WRAPPERS_TRUE CREATE_WRAPPERS_FALSE LN_S LIBTOOL SED FGREP GREP LD DUMPBIN ac_ct_DUMPBIN NM OBJDUMP ac_ct_OBJDUMP AR ac_ct_AR RANLIB ac_ct_RANLIB lt_ECHO DSYMUTIL ac_ct_DSYMUTIL NMEDIT ac_ct_NMEDIT LIPO ac_ct_LIPO OTOOL ac_ct_OTOOL OTOOL64 ac_ct_OTOOL64 CXX CXXFLAGS ac_ct_CXX CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE CXXCPP PERL COLLECTIONS_PREFIX LIBMAGIC LIBICONV LTLIBICONV WARNING_CFLAGS EXTRA_CFLAGS STRICT_WARNING_CFLAGS ERROR_CFLAGS PKG_CONFIG XML_CFLAGS XML_LIBS XSLT_CFLAGS XSLT_LIBS X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS GTK_CFLAGS GTK_LIBS FREETYPE2_CFLAGS FREETYPE2_LIBS PANGOFT2_CFLAGS PANGOFT2_LIBS CAIRO_CFLAGS CAIRO_LIBS XTEST_LIBS GCONF_CFLAGS GCONF_LIBS GDK_CFLAGS GDK_LIBS GSTREAMER_CFLAGS GSTREAMER_LIBS GSTREAMER_BASE_CFLAGS GSTREAMER_BASE_LIBS GSTREAMER_PLUGINS_BASE_CFLAGS GSTREAMER_PLUGINS_BASE_LIBS GST_PLUGIN_LDFLAGS GSTREAMER_FILE_READER GSTREAMER_MIXER_PROVIDER QT_CFLAGS QT_LIBS MOC MOZILLA_CFLAGS MOZILLA_LIBS GLIB_CFLAGS GLIB_LIBS PLUGIN_DIR USER_JAVAH CLASSPATH_INCLUDES vm_classes MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBDEBUG INIT_LOAD_LIBRARY ECJ_JAR JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION REMOVE MKDIR CP DATE FIND ZIP FASTJAR INSTALL_GLIBJ_ZIP_TRUE INSTALL_GLIBJ_ZIP_FALSE INSTALL_CLASS_FILES_TRUE INSTALL_CLASS_FILES_FALSE BUILD_CLASS_FILES_TRUE BUILD_CLASS_FILES_FALSE EXAMPLESDIR TOOLSDIR GJDOC CREATE_API_DOCS_TRUE CREATE_API_DOCS_FALSE JAY JAY_SKELETON REGEN_PARSERS_TRUE REGEN_PARSERS_FALSE USE_PREBUILT_GLIBJ_ZIP_TRUE USE_PREBUILT_GLIBJ_ZIP_FALSE PATH_TO_GLIBJ_ZIP JAVAC JAVAC_MEM_OPT USE_ESCHER_TRUE USE_ESCHER_FALSE PATH_TO_ESCHER ENABLE_LOCAL_SOCKETS_TRUE ENABLE_LOCAL_SOCKETS_FALSE DEFAULT_PREFS_PEER LIBOBJS LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os JAVA_MAINTAINER_MODE_TRUE JAVA_MAINTAINER_MODE_FALSE GENINSRC_TRUE GENINSRC_FALSE multi_basedir LIBVERSION CLASSPATH_MODULE CLASSPATH_CONVENIENCE INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CYGPATH_W PACKAGE VERSION ACLOCAL AUTOCONF AUTOMAKE AUTOHEADER MAKEINFO install_sh STRIP ac_ct_STRIP INSTALL_STRIP_PROGRAM mkdir_p AWK SET_MAKE am__leading_dot AMTAR am__tar am__untar CREATE_COLLECTIONS_TRUE CREATE_COLLECTIONS_FALSE CREATE_JNI_LIBRARIES_TRUE CREATE_JNI_LIBRARIES_FALSE CREATE_CORE_JNI_LIBRARIES_TRUE CREATE_CORE_JNI_LIBRARIES_FALSE CREATE_GCONF_PEER_LIBRARIES_TRUE CREATE_GCONF_PEER_LIBRARIES_FALSE CREATE_GSTREAMER_PEER_LIBRARIES_TRUE CREATE_GSTREAMER_PEER_LIBRARIES_FALSE default_toolkit CREATE_XMLJ_LIBRARY_TRUE CREATE_XMLJ_LIBRARY_FALSE CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT DEPDIR am__include am__quote AMDEP_TRUE AMDEP_FALSE AMDEPBACKSLASH CCDEPMODE am__fastdepCC_TRUE am__fastdepCC_FALSE CPP EGREP CREATE_ALSA_LIBRARIES_TRUE CREATE_ALSA_LIBRARIES_FALSE CREATE_DSSI_LIBRARIES_TRUE CREATE_DSSI_LIBRARIES_FALSE CREATE_GTK_PEER_LIBRARIES_TRUE CREATE_GTK_PEER_LIBRARIES_FALSE CREATE_QT_PEER_LIBRARIES_TRUE CREATE_QT_PEER_LIBRARIES_FALSE CREATE_PLUGIN_TRUE CREATE_PLUGIN_FALSE CREATE_GJDOC_TRUE CREATE_GJDOC_FALSE toolexeclibdir nativeexeclibdir glibjdir CREATE_JNI_HEADERS_TRUE CREATE_JNI_HEADERS_FALSE CREATE_GJDOC_PARSER_TRUE CREATE_GJDOC_PARSER_FALSE CREATE_WRAPPERS_TRUE CREATE_WRAPPERS_FALSE LN_S LIBTOOL SED FGREP GREP LD DUMPBIN ac_ct_DUMPBIN NM OBJDUMP ac_ct_OBJDUMP AR ac_ct_AR RANLIB ac_ct_RANLIB lt_ECHO DSYMUTIL ac_ct_DSYMUTIL NMEDIT ac_ct_NMEDIT LIPO ac_ct_LIPO OTOOL ac_ct_OTOOL OTOOL64 ac_ct_OTOOL64 CXX CXXFLAGS ac_ct_CXX CXXDEPMODE am__fastdepCXX_TRUE am__fastdepCXX_FALSE CXXCPP PERL COLLECTIONS_PREFIX LIBMAGIC LIBICONV LTLIBICONV WARNING_CFLAGS EXTRA_CFLAGS STRICT_WARNING_CFLAGS ERROR_CFLAGS PKG_CONFIG XML_CFLAGS XML_LIBS XSLT_CFLAGS XSLT_LIBS X_CFLAGS X_PRE_LIBS X_LIBS X_EXTRA_LIBS GTK_CFLAGS GTK_LIBS FREETYPE2_CFLAGS FREETYPE2_LIBS PANGOFT2_CFLAGS PANGOFT2_LIBS CAIRO_CFLAGS CAIRO_LIBS XTEST_LIBS GCONF_CFLAGS GCONF_LIBS GDK_CFLAGS GDK_LIBS GSTREAMER_CFLAGS GSTREAMER_LIBS GSTREAMER_BASE_CFLAGS GSTREAMER_BASE_LIBS GSTREAMER_PLUGINS_BASE_CFLAGS GSTREAMER_PLUGINS_BASE_LIBS GST_PLUGIN_LDFLAGS GSTREAMER_FILE_READER GSTREAMER_MIXER_PROVIDER QT_CFLAGS QT_LIBS MOC MOZILLA_CFLAGS MOZILLA_LIBS GLIB_CFLAGS GLIB_LIBS PLUGIN_DIR GMP_CFLAGS GMP_LIBS USER_JAVAH CLASSPATH_INCLUDES vm_classes MAINTAINER_MODE_TRUE MAINTAINER_MODE_FALSE MAINT LIBDEBUG INIT_LOAD_LIBRARY ECJ_JAR JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION REMOVE MKDIR CP DATE FIND ZIP JAR WITH_JAR_TRUE WITH_JAR_FALSE INSTALL_GLIBJ_ZIP_TRUE INSTALL_GLIBJ_ZIP_FALSE INSTALL_CLASS_FILES_TRUE INSTALL_CLASS_FILES_FALSE BUILD_CLASS_FILES_TRUE BUILD_CLASS_FILES_FALSE EXAMPLESDIR TOOLSDIR GJDOC CREATE_API_DOCS_TRUE CREATE_API_DOCS_FALSE JAY JAY_SKELETON REGEN_PARSERS_TRUE REGEN_PARSERS_FALSE USE_PREBUILT_GLIBJ_ZIP_TRUE USE_PREBUILT_GLIBJ_ZIP_FALSE PATH_TO_GLIBJ_ZIP JAVA uudecode JAVAC JAVAC_IS_GCJ GCJ_JAVAC_TRUE GCJ_JAVAC_FALSE ANTLR_JAR ANTLR ac_ct_ANTLR JAVAC_MEM_OPT USE_ESCHER_TRUE USE_ESCHER_FALSE PATH_TO_ESCHER ENABLE_LOCAL_SOCKETS_TRUE ENABLE_LOCAL_SOCKETS_FALSE DEFAULT_PREFS_PEER WANT_NATIVE_BIG_INTEGER CREATE_GMPBI_LIBRARY_TRUE CREATE_GMPBI_LIBRARY_FALSE LIBOBJS LTLIBOBJS'\n ac_subst_files=''\n ac_pwd=`pwd`\n \n@@ -943,7 +943,7 @@ if test \"$ac_init_help\" = \"long\"; then\n   # Omit some internal or obsolete options to make the list less imposing.\n   # This message is too long to be a string in the A/UX 3.1 sh.\n   cat <<_ACEOF\n-\\`configure' configures GNU Classpath 0.97.2 to adapt to many kinds of systems.\n+\\`configure' configures GNU Classpath 0.98-pre to adapt to many kinds of systems.\n \n Usage: $0 [OPTION]... [VAR=VALUE]...\n \n@@ -1014,7 +1014,7 @@ fi\n \n if test -n \"$ac_init_help\"; then\n   case $ac_init_help in\n-     short | recursive ) echo \"Configuration of GNU Classpath 0.97.2:\";;\n+     short | recursive ) echo \"Configuration of GNU Classpath 0.98-pre:\";;\n    esac\n   cat <<\\_ACEOF\n \n@@ -1059,8 +1059,15 @@ Optional Features:\n                           default=no\n   --disable-plugin        compile gcjwebplugin (disabled by --disable-plugin)\n                           default=yes\n+  --enable-gmp            compile native java.math.BigInteger library\n+                          (disabled by --disable-gmp) default=yes\n+  --disable-gjdoc         compile GJDoc (disabled by --disable-gjdoc)\n+                          default=yes\n   --enable-regen-headers  automatically regenerate JNI headers default=yes if\n                           headers don't exist\n+  --enable-regen-gjdoc-parser\n+                          automatically regenerate the GJDoc parser\n+                          default=yes if generated source doesn't exist\n   --enable-tool-wrappers  create tool wrapper binaries default=no\n   --enable-static[=PKGS]\n                           build static libraries [default=no]\n@@ -1090,8 +1097,7 @@ Optional Packages:\n                           default='${libdir}/${PACKAGE}'\n   --with-glibj-dir        sets the installation directory for glibj.zip\n                           default='${libdir}/${PACKAGE}'\n-  --with-vm               sets the VM binary name\n-                          default='${prefix}/bin/jamvm'\n+  --with-antlr-jar=file   Use ANTLR from the specified jar file\n   --with-pic              try to use only PIC/non-PIC objects [default=use\n                           both]\n   --with-gnu-ld           assume the C compiler uses GNU ld [default=no]\n@@ -1105,7 +1111,7 @@ Optional Packages:\n   --with-vm-classes       specify path to VM override source files\n   --with-ecj-jar=ABS.PATH specify jar file containing the Eclipse Java\n                           Compiler\n-  --with-fastjar=PATH     define to use a fastjar style tool\n+  --with-jar=PATH         define to use a jar style tool\n   --with-glibj            define what to install (zip|flat|both|none|build)\n                           [default=zip]\n   --with-gjdoc            generate documentation using gjdoc (default is NO)\n@@ -1225,7 +1231,7 @@ fi\n test -n \"$ac_init_help\" && exit 0\n if $ac_init_version; then\n   cat <<\\_ACEOF\n-GNU Classpath configure 0.97.2\n+GNU Classpath configure 0.98-pre\n generated by GNU Autoconf 2.59\n \n Copyright (C) 2003 Free Software Foundation, Inc.\n@@ -1239,7 +1245,7 @@ cat >&5 <<_ACEOF\n This file contains any messages produced by compilers while\n running configure, to aid debugging if configure makes a mistake.\n \n-It was created by GNU Classpath $as_me 0.97.2, which was\n+It was created by GNU Classpath $as_me 0.98-pre, which was\n generated by GNU Autoconf 2.59.  Invocation command line was\n \n   $ $0 $@\n@@ -2100,7 +2106,7 @@ fi\n \n # Define the identity of the package.\n  PACKAGE='classpath'\n- VERSION='0.97.2'\n+ VERSION='0.98-pre'\n \n \n cat >>confdefs.h <<_ACEOF\n@@ -4787,6 +4793,40 @@ else\n fi\n \n \n+# Check whether --enable-gmp or --disable-gmp was given.\n+if test \"${enable_gmp+set}\" = set; then\n+  enableval=\"$enable_gmp\"\n+  case \"${enableval}\" in\n+                yes|true) COMPILE_GMP=yes ;;\n+                no|false) COMPILE_GMP=no ;;\n+                *) COMPILE_GMP=yes ;;\n+              esac\n+else\n+  COMPILE_GMP=yes\n+fi;\n+\n+# Check whether --enable-gjdoc or --disable-gjdoc was given.\n+if test \"${enable_gjdoc+set}\" = set; then\n+  enableval=\"$enable_gjdoc\"\n+  case \"${enableval}\" in\n+                yes) COMPILE_GJDOC=yes ;;\n+                no) COMPILE_GJDOC=no ;;\n+                *) COMPILE_GJDOC=yes ;;\n+              esac\n+else\n+  COMPILE_GJDOC=yes\n+fi;\n+\n+\n+if test \"x${COMPILE_GJDOC}\" = xyes; then\n+  CREATE_GJDOC_TRUE=\n+  CREATE_GJDOC_FALSE='#'\n+else\n+  CREATE_GJDOC_TRUE='#'\n+  CREATE_GJDOC_FALSE=\n+fi\n+\n+\n \n   multi_os_directory=`$CC -print-multi-os-directory`\n   case $multi_os_directory in\n@@ -4827,20 +4867,20 @@ fi;\n \n \n \n-# Check whether --with-vm or --without-vm was given.\n-if test \"${with_vm+set}\" = set; then\n-  withval=\"$with_vm\"\n+# Check whether --with-antlr-jar or --without-antlr-jar was given.\n+if test \"${with_antlr_jar+set}\" = set; then\n+  withval=\"$with_antlr_jar\"\n \n-\t     VM_BINARY=${withval}\n+             ANTLR_JAR=$withval\n \n else\n \n-\t     VM_BINARY='${prefix}/bin/jamvm'\n+             ANTLR_JAR=\"$ANTLR_JAR\"\n \n fi;\n \n-\n-\n+echo \"$as_me:$LINENO: checking whether to regenerate the headers\" >&5\n+echo $ECHO_N \"checking whether to regenerate the headers... $ECHO_C\" >&6\n # Check whether --enable-regen-headers or --disable-regen-headers was given.\n if test \"${enable_regen_headers+set}\" = set; then\n   enableval=\"$enable_regen_headers\"\n@@ -4850,12 +4890,14 @@ if test \"${enable_regen_headers+set}\" = set; then\n                 *) REGENERATE_JNI_HEADERS=yes ;;\n               esac\n else\n-  if test -e include/java_lang_VMSystem.h; then\n+  if test -e ${srcdir}/include/java_lang_VMSystem.h; then\n \t\t\tREGENERATE_JNI_HEADERS=no ;\n \t\t   else\n \t\t\tREGENERATE_JNI_HEADERS=yes ;\n \t       fi\n fi;\n+echo \"$as_me:$LINENO: result: ${REGENERATE_JNI_HEADERS}\" >&5\n+echo \"${ECHO_T}${REGENERATE_JNI_HEADERS}\" >&6\n \n \n if test \"x${REGENERATE_JNI_HEADERS}\" = xyes; then\n@@ -4867,6 +4909,36 @@ else\n fi\n \n \n+echo \"$as_me:$LINENO: checking whether to regenerate the GJDoc parser\" >&5\n+echo $ECHO_N \"checking whether to regenerate the GJDoc parser... $ECHO_C\" >&6\n+# Check whether --enable-regen-gjdoc-parser or --disable-regen-gjdoc-parser was given.\n+if test \"${enable_regen_gjdoc_parser+set}\" = set; then\n+  enableval=\"$enable_regen_gjdoc_parser\"\n+  case \"${enableval}\" in\n+                yes) REGENERATE_GJDOC_PARSER=yes ;;\n+                no) REGENERATE_GJDOC_PARSER=no ;;\n+                *) REGENERATE_GJDOC_PARSER=yes ;;\n+              esac\n+else\n+  if test -e ${srcdir}/tools/generated/gnu/classpath/tools/gjdoc/expr/JavaLexer.java; then\n+\t\t\tREGENERATE_GJDOC_PARSER=no ;\n+\t\t   else\n+\t\t\tREGENERATE_GJDOC_PARSER=yes ;\n+\t       fi\n+fi;\n+echo \"$as_me:$LINENO: result: ${REGENERATE_GJDOC_PARSER}\" >&5\n+echo \"${ECHO_T}${REGENERATE_GJDOC_PARSER}\" >&6\n+\n+\n+if test \"x${REGENERATE_GJDOC_PARSER}\" = xyes; then\n+  CREATE_GJDOC_PARSER_TRUE=\n+  CREATE_GJDOC_PARSER_FALSE='#'\n+else\n+  CREATE_GJDOC_PARSER_TRUE='#'\n+  CREATE_GJDOC_PARSER_FALSE=\n+fi\n+\n+\n # Check whether --enable-tool-wrappers or --disable-tool-wrappers was given.\n if test \"${enable_tool_wrappers+set}\" = set; then\n   enableval=\"$enable_tool_wrappers\"\n@@ -5670,13 +5742,13 @@ if test \"${lt_cv_nm_interface+set}\" = set; then\n else\n   lt_cv_nm_interface=\"BSD nm\"\n   echo \"int some_variable = 0;\" > conftest.$ac_ext\n-  (eval echo \"\\\"\\$as_me:5673: $ac_compile\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:5745: $ac_compile\\\"\" >&5)\n   (eval \"$ac_compile\" 2>conftest.err)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:5676: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:5748: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n   (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:5679: output\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:5751: output\\\"\" >&5)\n   cat conftest.out >&5\n   if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n     lt_cv_nm_interface=\"MS dumpbin\"\n@@ -6822,7 +6894,7 @@ ia64-*-hpux*)\n   ;;\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 6825 \"configure\"' > conftest.$ac_ext\n+  echo '#line 6897 \"configure\"' > conftest.$ac_ext\n   if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -8108,11 +8180,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:8111: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:8183: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:8115: \\$? = $ac_status\" >&5\n+   echo \"$as_me:8187: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -8447,11 +8519,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:8450: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:8522: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:8454: \\$? = $ac_status\" >&5\n+   echo \"$as_me:8526: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -8552,11 +8624,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:8555: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:8627: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:8559: \\$? = $ac_status\" >&5\n+   echo \"$as_me:8631: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -8607,11 +8679,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:8610: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:8682: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:8614: \\$? = $ac_status\" >&5\n+   echo \"$as_me:8686: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -11459,7 +11531,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11462 \"configure\"\n+#line 11534 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11555,7 +11627,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11558 \"configure\"\n+#line 11630 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15986,11 +16058,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:15989: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:16061: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:15993: \\$? = $ac_status\" >&5\n+   echo \"$as_me:16065: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -16085,11 +16157,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:16088: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:16160: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:16092: \\$? = $ac_status\" >&5\n+   echo \"$as_me:16164: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -16137,11 +16209,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:16140: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:16212: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:16144: \\$? = $ac_status\" >&5\n+   echo \"$as_me:16216: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -17796,6 +17868,7 @@ fi\n \n \n \n+\n \n \n for ac_header in unistd.h sys/types.h sys/config.h sys/ioctl.h \\\n@@ -17810,7 +17883,7 @@ for ac_header in unistd.h sys/types.h sys/config.h sys/ioctl.h \\\n                     sys/event.h sys/epoll.h \\\n \t\t    ifaddrs.h \\\n \t\t    netinet/in_systm.h netinet/ip.h net/if.h \\\n-\t\t    sys/loadavg.h\n+\t\t    sys/loadavg.h sys/sockio.h\n do\n as_ac_Header=`echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n if eval \"test \\\"\\${$as_ac_Header+set}\\\" = set\"; then\n@@ -18174,6 +18247,85 @@ if test \"$ac_cv_search_inet_pton\" != no; then\n fi\n \n \n+echo \"$as_me:$LINENO: checking for gethostname in -lsocket\" >&5\n+echo $ECHO_N \"checking for gethostname in -lsocket... $ECHO_C\" >&6\n+if test \"${ac_cv_lib_socket_gethostname+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lsocket  $LIBS\"\n+if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+/* We use char because int might match the return type of a gcc2\n+   builtin and then its argument prototype would still apply.  */\n+char gethostname ();\n+int\n+main ()\n+{\n+gethostname ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_lib_socket_gethostname=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_lib_socket_gethostname=no\n+fi\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_lib_socket_gethostname\" >&5\n+echo \"${ECHO_T}$ac_cv_lib_socket_gethostname\" >&6\n+if test $ac_cv_lib_socket_gethostname = yes; then\n+  cat >>confdefs.h <<_ACEOF\n+#define HAVE_LIBSOCKET 1\n+_ACEOF\n+\n+  LIBS=\"-lsocket $LIBS\"\n+\n+fi\n+\n+\n \n \n \n@@ -24548,6 +24700,242 @@ echo \"$as_me: error: Library requirements (gtk+-2.0 >= 2.8 gthread-2.0 >= 2.2 gd\n     PLUGIN_DIR=$HOME/.mozilla/plugins/\n \n   fi\n+\n+            if test \"x${COMPILE_GMP}\" = xyes; then\n+    echo \"$as_me:$LINENO: checking for __gmpz_mul_si in -lgmp\" >&5\n+echo $ECHO_N \"checking for __gmpz_mul_si in -lgmp... $ECHO_C\" >&6\n+if test \"${ac_cv_lib_gmp___gmpz_mul_si+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  ac_check_lib_save_LIBS=$LIBS\n+LIBS=\"-lgmp  $LIBS\"\n+if test x$gcc_no_link = xyes; then\n+  { { echo \"$as_me:$LINENO: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&5\n+echo \"$as_me: error: Link tests are not allowed after GCC_NO_EXECUTABLES.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+\n+/* Override any gcc2 internal prototype to avoid an error.  */\n+#ifdef __cplusplus\n+extern \"C\"\n+#endif\n+/* We use char because int might match the return type of a gcc2\n+   builtin and then its argument prototype would still apply.  */\n+char __gmpz_mul_si ();\n+int\n+main ()\n+{\n+__gmpz_mul_si ();\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext conftest$ac_exeext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_link\\\"\") >&5\n+  (eval $ac_link) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest$ac_exeext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_cv_lib_gmp___gmpz_mul_si=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_cv_lib_gmp___gmpz_mul_si=no\n+fi\n+rm -f conftest.err conftest.$ac_objext \\\n+      conftest$ac_exeext conftest.$ac_ext\n+LIBS=$ac_check_lib_save_LIBS\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_lib_gmp___gmpz_mul_si\" >&5\n+echo \"${ECHO_T}$ac_cv_lib_gmp___gmpz_mul_si\" >&6\n+if test $ac_cv_lib_gmp___gmpz_mul_si = yes; then\n+  GMP_CFLAGS=-I/usr/include\n+       GMP_LIBS=-lgmp\n+else\n+  GMP_CFLAGS=\n+       GMP_LIBS=\n+fi\n+\n+\n+\n+\n+\n+for ac_header in gmp.h\n+do\n+as_ac_Header=`echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\n+if eval \"test \\\"\\${$as_ac_Header+set}\\\" = set\"; then\n+  echo \"$as_me:$LINENO: checking for $ac_header\" >&5\n+echo $ECHO_N \"checking for $ac_header... $ECHO_C\" >&6\n+if eval \"test \\\"\\${$as_ac_Header+set}\\\" = set\"; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+fi\n+echo \"$as_me:$LINENO: result: `eval echo '${'$as_ac_Header'}'`\" >&5\n+echo \"${ECHO_T}`eval echo '${'$as_ac_Header'}'`\" >&6\n+else\n+  # Is the header compilable?\n+echo \"$as_me:$LINENO: checking $ac_header usability\" >&5\n+echo $ECHO_N \"checking $ac_header usability... $ECHO_C\" >&6\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+$ac_includes_default\n+#include <$ac_header>\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  ac_header_compiler=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+ac_header_compiler=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+echo \"$as_me:$LINENO: result: $ac_header_compiler\" >&5\n+echo \"${ECHO_T}$ac_header_compiler\" >&6\n+\n+# Is the header present?\n+echo \"$as_me:$LINENO: checking $ac_header presence\" >&5\n+echo $ECHO_N \"checking $ac_header presence... $ECHO_C\" >&6\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+#include <$ac_header>\n+_ACEOF\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_cpp conftest.$ac_ext\\\"\") >&5\n+  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } >/dev/null; then\n+  if test -s conftest.err; then\n+    ac_cpp_err=$ac_c_preproc_warn_flag\n+    ac_cpp_err=$ac_cpp_err$ac_c_werror_flag\n+  else\n+    ac_cpp_err=\n+  fi\n+else\n+  ac_cpp_err=yes\n+fi\n+if test -z \"$ac_cpp_err\"; then\n+  ac_header_preproc=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+  ac_header_preproc=no\n+fi\n+rm -f conftest.err conftest.$ac_ext\n+echo \"$as_me:$LINENO: result: $ac_header_preproc\" >&5\n+echo \"${ECHO_T}$ac_header_preproc\" >&6\n+\n+# So?  What about this header?\n+case $ac_header_compiler:$ac_header_preproc:$ac_c_preproc_warn_flag in\n+  yes:no: )\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!\" >&5\n+echo \"$as_me: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header: proceeding with the compiler's result\" >&5\n+echo \"$as_me: WARNING: $ac_header: proceeding with the compiler's result\" >&2;}\n+    ac_header_preproc=yes\n+    ;;\n+  no:yes:* )\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header: present but cannot be compiled\" >&5\n+echo \"$as_me: WARNING: $ac_header: present but cannot be compiled\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header:     check for missing prerequisite headers?\" >&5\n+echo \"$as_me: WARNING: $ac_header:     check for missing prerequisite headers?\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header: see the Autoconf documentation\" >&5\n+echo \"$as_me: WARNING: $ac_header: see the Autoconf documentation\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header:     section \\\"Present But Cannot Be Compiled\\\"\" >&5\n+echo \"$as_me: WARNING: $ac_header:     section \\\"Present But Cannot Be Compiled\\\"\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header: proceeding with the preprocessor's result\" >&5\n+echo \"$as_me: WARNING: $ac_header: proceeding with the preprocessor's result\" >&2;}\n+    { echo \"$as_me:$LINENO: WARNING: $ac_header: in the future, the compiler will take precedence\" >&5\n+echo \"$as_me: WARNING: $ac_header: in the future, the compiler will take precedence\" >&2;}\n+    (\n+      cat <<\\_ASBOX\n+## -------------------------------- ##\n+## Report this to classpath@gnu.org ##\n+## -------------------------------- ##\n+_ASBOX\n+    ) |\n+      sed \"s/^/$as_me: WARNING:     /\" >&2\n+    ;;\n+esac\n+echo \"$as_me:$LINENO: checking for $ac_header\" >&5\n+echo $ECHO_N \"checking for $ac_header... $ECHO_C\" >&6\n+if eval \"test \\\"\\${$as_ac_Header+set}\\\" = set\"; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  eval \"$as_ac_Header=\\$ac_header_preproc\"\n+fi\n+echo \"$as_me:$LINENO: result: `eval echo '${'$as_ac_Header'}'`\" >&5\n+echo \"${ECHO_T}`eval echo '${'$as_ac_Header'}'`\" >&6\n+\n+fi\n+if test `eval echo '${'$as_ac_Header'}'` = yes; then\n+  cat >>confdefs.h <<_ACEOF\n+#define `echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n+_ACEOF\n+\n+fi\n+\n+done\n+\n+  fi\n+\n+else\n+  COMPILE_GMP=no\n fi\n \n if test \"x${REGENERATE_JNI_HEADERS}\" = xyes; then\n@@ -25194,29 +25582,57 @@ echo \"${ECHO_T}no\" >&6\n fi\n \n \n-# Check whether --with-fastjar or --without-fastjar was given.\n-if test \"${with_fastjar+set}\" = set; then\n-  withval=\"$with_fastjar\"\n-\n-\t\techo \"$as_me:$LINENO: checking for user supplied fastjar\" >&5\n-echo $ECHO_N \"checking for user supplied fastjar... $ECHO_C\" >&6\n-\t\tFASTJAR=${withval}\n-\t\techo \"$as_me:$LINENO: result: ${FASTJAR}\" >&5\n-echo \"${ECHO_T}${FASTJAR}\" >&6\n+  echo \"$as_me:$LINENO: checking for a jar-like tool\" >&5\n+echo $ECHO_N \"checking for a jar-like tool... $ECHO_C\" >&6\n+\n+# Check whether --with-jar or --without-jar was given.\n+if test \"${with_jar+set}\" = set; then\n+  withval=\"$with_jar\"\n+\n+\t        case \"${withval}\" in\n+      \t\t  yes)\n+\t\t    JAR=yes\n+        \t    ;;\n+      \t\t  no)\n+\t\t    JAR=no\n+  \t\t    echo \"$as_me:$LINENO: result: ${JAR}\" >&5\n+echo \"${ECHO_T}${JAR}\" >&6\n+\t\t    ;;\n+\t\t  *)\n+    \t\t    if test -f \"${withval}\"; then\n+          \t      JAR=\"${withval}\"\n+\t\t      echo \"$as_me:$LINENO: result: ${JAR}\" >&5\n+echo \"${ECHO_T}${JAR}\" >&6\n+        \t    else\n+\t  \t      echo \"$as_me:$LINENO: result: not found\" >&5\n+echo \"${ECHO_T}not found\" >&6\n+\t              { { echo \"$as_me:$LINENO: error: The jar tool ${withval} was not found.\" >&5\n+echo \"$as_me: error: The jar tool ${withval} was not found.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+        \t    fi\n+\t\t    ;;\n+     \t\tesac\n \n else\n-  for ac_prog in fastjar gjar jar\n+\n+\t\tJAR=yes\n+\n+fi;\n+  if test x\"${JAR}\" = \"xyes\"; then\n+    echo \"$as_me:$LINENO: result: trying fastjar, gjar and jar\" >&5\n+echo \"${ECHO_T}trying fastjar, gjar and jar\" >&6\n+    for ac_prog in fastjar gjar jar\n do\n   # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n-if test \"${ac_cv_path_FASTJAR+set}\" = set; then\n+if test \"${ac_cv_path_JAR+set}\" = set; then\n   echo $ECHO_N \"(cached) $ECHO_C\" >&6\n else\n-  case $FASTJAR in\n+  case $JAR in\n   [\\\\/]* | ?:[\\\\/]*)\n-  ac_cv_path_FASTJAR=\"$FASTJAR\" # Let the user override the test with a path.\n+  ac_cv_path_JAR=\"$JAR\" # Let the user override the test with a path.\n   ;;\n   *)\n   as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n@@ -25226,7 +25642,7 @@ do\n   test -z \"$as_dir\" && as_dir=.\n   for ac_exec_ext in '' $ac_executable_extensions; do\n   if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n-    ac_cv_path_FASTJAR=\"$as_dir/$ac_word$ac_exec_ext\"\n+    ac_cv_path_JAR=\"$as_dir/$ac_word$ac_exec_ext\"\n     echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n     break 2\n   fi\n@@ -25236,25 +25652,42 @@ done\n   ;;\n esac\n fi\n-FASTJAR=$ac_cv_path_FASTJAR\n+JAR=$ac_cv_path_JAR\n \n-if test -n \"$FASTJAR\"; then\n-  echo \"$as_me:$LINENO: result: $FASTJAR\" >&5\n-echo \"${ECHO_T}$FASTJAR\" >&6\n+if test -n \"$JAR\"; then\n+  echo \"$as_me:$LINENO: result: $JAR\" >&5\n+echo \"${ECHO_T}$JAR\" >&6\n else\n   echo \"$as_me:$LINENO: result: no\" >&5\n echo \"${ECHO_T}no\" >&6\n fi\n \n-  test -n \"$FASTJAR\" && break\n+  test -n \"$JAR\" && break\n done\n \n-fi;\n-  if test x\"${FASTJAR}\" != x; then\n-    ZIP=\"\"\n+    if test x\"${RHINO_JAR}\" = \"xyes\"; then\n+      echo \"$as_me:$LINENO: result: not found\" >&5\n+echo \"${ECHO_T}not found\" >&6\n+    fi\n+  fi\n+  if test x\"${JAR}\" = \"xno\" && test x\"${ZIP}\" = \"\"; then\n+    { { echo \"$as_me:$LINENO: error: No zip or jar tool found.\" >&5\n+echo \"$as_me: error: No zip or jar tool found.\" >&2;}\n+   { (exit 1); exit 1; }; }\n   fi\n \n \n+if test x\"${JAR}\" != \"xno\" && test x\"${JAR}\" != \"xyes\"; then\n+  WITH_JAR_TRUE=\n+  WITH_JAR_FALSE='#'\n+else\n+  WITH_JAR_TRUE='#'\n+  WITH_JAR_FALSE=\n+fi\n+\n+\n+\n+\n # Check whether --with-glibj or --without-glibj was given.\n if test \"${with_glibj+set}\" = set; then\n   withval=\"$with_glibj\"\n@@ -25335,7 +25768,7 @@ echo \"$as_me: error: bad value ${enableval} for --enable-examples\" >&2;}\n else\n   EXAMPLESDIR=\"examples\"\n fi;\n-  if test \"x${use_zip}\" = xno && test \"x${install_class_files}\" = xno; then\n+  if test \"x${build_class_files}\" = xno; then\n     EXAMPLESDIR=\"\"\n   fi\n \n@@ -25353,7 +25786,7 @@ echo \"$as_me: error: bad value ${enableval} for --enable-tools\" >&2;}\n else\n   TOOLSDIR=\"tools\"\n fi;\n-  if test \"x${use_zip}\" = xno && test \"x${install_class_files}\" = xno; then\n+  if test \"x${build_class_files}\" = xno; then\n     TOOLSDIR=\"\"\n   fi\n \n@@ -25448,7 +25881,6 @@ else\n fi;\n \n \n-\n if test \"x${WITH_GJDOC}\" = xyes; then\n   CREATE_API_DOCS_TRUE=\n   CREATE_API_DOCS_FALSE='#'\n@@ -25457,6 +25889,20 @@ else\n   CREATE_API_DOCS_FALSE=\n fi\n \n+  if test \"x${WITH_GJDOC}\" = xyes; then\n+    echo \"$as_me:$LINENO: checking version of GJDoc\" >&5\n+echo $ECHO_N \"checking version of GJDoc... $ECHO_C\" >&6\n+    gjdoc_version=$(${GJDOC} --version|cut -d ' ' -f2)\n+    echo \"$as_me:$LINENO: result: ${gjdoc_version}\" >&5\n+echo \"${ECHO_T}${gjdoc_version}\" >&6\n+    case ${gjdoc_version} in\n+      0.7.9) ;;\n+      0.8*) ;;\n+      *) { { echo \"$as_me:$LINENO: error: Building documentation requires GJDoc >= 0.7.9, ${gjdoc_version} found.\" >&5\n+echo \"$as_me: error: Building documentation requires GJDoc >= 0.7.9, ${gjdoc_version} found.\" >&2;}\n+   { (exit 1); exit 1; }; } ;;\n+    esac\n+  fi\n \n \n \n@@ -28537,16 +28983,936 @@ fi\n \n \n \n+if test \"x${TOOLSDIR}\" != x; then\n+  if test \"x${COMPILE_WRAPPERS}\" = xno && test \"x${enable_java_maintainer_mode}\" = xyes; then\n+\n+\n+if test \"x$JAVAPREFIX\" = x; then\n+        test \"x$JAVA\" = x && for ac_prog in cacao$EXEEXT jamvm$EXEEXT kaffe$EXEEXT gij$EXEEXT java$EXEEXT\n+do\n+  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n+set dummy $ac_prog; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_JAVA+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test -n \"$JAVA\"; then\n+  ac_cv_prog_JAVA=\"$JAVA\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_JAVA=\"$ac_prog\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+fi\n+fi\n+JAVA=$ac_cv_prog_JAVA\n+if test -n \"$JAVA\"; then\n+  echo \"$as_me:$LINENO: result: $JAVA\" >&5\n+echo \"${ECHO_T}$JAVA\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+  test -n \"$JAVA\" && break\n+done\n+\n+else\n+        test \"x$JAVA\" = x && for ac_prog in cacao$EXEEXT jamvm$EXEEXT kaffe$EXEEXT gij$EXEEXT java$EXEEXT\n+do\n+  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n+set dummy $ac_prog; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_JAVA+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test -n \"$JAVA\"; then\n+  ac_cv_prog_JAVA=\"$JAVA\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_JAVA=\"$ac_prog\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+fi\n+fi\n+JAVA=$ac_cv_prog_JAVA\n+if test -n \"$JAVA\"; then\n+  echo \"$as_me:$LINENO: result: $JAVA\" >&5\n+echo \"${ECHO_T}$JAVA\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+  test -n \"$JAVA\" && break\n+done\n+test -n \"$JAVA\" || JAVA=\"$JAVAPREFIX\"\n+\n+fi\n+test \"x$JAVA\" = x && { { echo \"$as_me:$LINENO: error: no acceptable Java virtual machine found in \\$PATH\" >&5\n+echo \"$as_me: error: no acceptable Java virtual machine found in \\$PATH\" >&2;}\n+   { (exit 1); exit 1; }; }\n+\n+# Extract the first word of \"uudecode$EXEEXT\", so it can be a program name with args.\n+set dummy uudecode$EXEEXT; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_uudecode+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test -n \"$uudecode\"; then\n+  ac_cv_prog_uudecode=\"$uudecode\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_uudecode=\"yes\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+fi\n+fi\n+uudecode=$ac_cv_prog_uudecode\n+if test -n \"$uudecode\"; then\n+  echo \"$as_me:$LINENO: result: $uudecode\" >&5\n+echo \"${ECHO_T}$uudecode\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+if test x$uudecode = xyes; then\n+echo \"$as_me:$LINENO: checking if uudecode can decode base 64 file\" >&5\n+echo $ECHO_N \"checking if uudecode can decode base 64 file... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_uudecode_base64+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+cat << \\EOF > Test.uue\n+begin-base64 644 Test.class\n+yv66vgADAC0AFQcAAgEABFRlc3QHAAQBABBqYXZhL2xhbmcvT2JqZWN0AQAE\n+bWFpbgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAARDb2RlAQAPTGluZU51\n+bWJlclRhYmxlDAAKAAsBAARleGl0AQAEKEkpVgoADQAJBwAOAQAQamF2YS9s\n+YW5nL1N5c3RlbQEABjxpbml0PgEAAygpVgwADwAQCgADABEBAApTb3VyY2VG\n+aWxlAQAJVGVzdC5qYXZhACEAAQADAAAAAAACAAkABQAGAAEABwAAACEAAQAB\n+AAAABQO4AAyxAAAAAQAIAAAACgACAAAACgAEAAsAAQAPABAAAQAHAAAAIQAB\n+AAEAAAAFKrcAErEAAAABAAgAAAAKAAIAAAAEAAQABAABABMAAAACABQ=\n+====\n+EOF\n+if uudecode$EXEEXT Test.uue; then\n+        ac_cv_prog_uudecode_base64=yes\n+else\n+        echo \"configure: 29134: uudecode had trouble decoding base 64 file 'Test.uue'\" >&5\n+        echo \"configure: failed file was:\" >&5\n+        cat Test.uue >&5\n+        ac_cv_prog_uudecode_base64=no\n+fi\n+rm -f Test.uue\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_prog_uudecode_base64\" >&5\n+echo \"${ECHO_T}$ac_cv_prog_uudecode_base64\" >&6\n+fi\n+if test x$ac_cv_prog_uudecode_base64 != xyes; then\n+        rm -f Test.class\n+        { echo \"$as_me:$LINENO: WARNING: I have to compile Test.class from scratch\" >&5\n+echo \"$as_me: WARNING: I have to compile Test.class from scratch\" >&2;}\n+        if test x$ac_cv_prog_javac_works = xno; then\n+                { { echo \"$as_me:$LINENO: error: Cannot compile java source. $JAVAC does not work properly\" >&5\n+echo \"$as_me: error: Cannot compile java source. $JAVAC does not work properly\" >&2;}\n+   { (exit 1); exit 1; }; }\n+        fi\n+        if test x$ac_cv_prog_javac_works = x; then\n+\n+ECJ_OPTS=\"-warn:-deprecation,serial,unusedImport\"\n+JAVAC_OPTS=\"-Xlint:unchecked,cast,divzero,empty,finally,overrides\"\n+GCJ_OPTS=\"-g\"\n+if test \"x$JAVAPREFIX\" = x; then\n+        test \"x$JAVAC\" = x && for ac_prog in \"ecj$EXEEXT $ECJ_OPTS\" \"ecj-3.3$EXEEXT $ECJ_OPTS\" \"ecj-3.2$EXEEXT $ECJ_OPTS\" \"javac$EXEEXT $JAVAC_OPTS\" \"gcj$EXEEXT -C\"\n+do\n+  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n+set dummy $ac_prog; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_JAVAC+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test -n \"$JAVAC\"; then\n+  ac_cv_prog_JAVAC=\"$JAVAC\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_JAVAC=\"$ac_prog\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+fi\n+fi\n+JAVAC=$ac_cv_prog_JAVAC\n+if test -n \"$JAVAC\"; then\n+  echo \"$as_me:$LINENO: result: $JAVAC\" >&5\n+echo \"${ECHO_T}$JAVAC\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+  test -n \"$JAVAC\" && break\n+done\n+\n+else\n+        test \"x$JAVAC\" = x && for ac_prog in \"ecj$EXEEXT $ECJ_OPTS\" \"ecj-3.3$EXEEXT $ECJ_OPTS\" \"ecj-3.2$EXEEXT $ECJ_OPTS\" \"javac$EXEEXT $JAVAC_OPTS\" \"gcj$EXEEXT -C\"\n+do\n+  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n+set dummy $ac_prog; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_JAVAC+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test -n \"$JAVAC\"; then\n+  ac_cv_prog_JAVAC=\"$JAVAC\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_JAVAC=\"$ac_prog\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+fi\n+fi\n+JAVAC=$ac_cv_prog_JAVAC\n+if test -n \"$JAVAC\"; then\n+  echo \"$as_me:$LINENO: result: $JAVAC\" >&5\n+echo \"${ECHO_T}$JAVAC\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+  test -n \"$JAVAC\" && break\n+done\n+test -n \"$JAVAC\" || JAVAC=\"$JAVAPREFIX\"\n+\n+fi\n+test \"x$JAVAC\" = x && { { echo \"$as_me:$LINENO: error: no acceptable Java compiler found in \\$PATH\" >&5\n+echo \"$as_me: error: no acceptable Java compiler found in \\$PATH\" >&2;}\n+   { (exit 1); exit 1; }; }\n+echo \"$as_me:$LINENO: checking if $JAVAC is a version of gcj\" >&5\n+echo $ECHO_N \"checking if $JAVAC is a version of gcj... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_javac_is_gcj+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+if $JAVAC --version | grep gcj > /dev/null; then\n+  ac_cv_prog_javac_is_gcj=yes;\n+  JAVAC=\"$JAVAC $GCJ_OPTS\";\n+fi\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_prog_javac_is_gcj\" >&5\n+echo \"${ECHO_T}$ac_cv_prog_javac_is_gcj\" >&6\n+JAVAC_IS_GCJ=$ac_cv_prog_javac_is_gcj\n+\n+\n+\n+if test x\"${JAVAC_IS_GCJ}\" = xyes; then\n+  GCJ_JAVAC_TRUE=\n+  GCJ_JAVAC_FALSE='#'\n+else\n+  GCJ_JAVAC_TRUE='#'\n+  GCJ_JAVAC_FALSE=\n+fi\n+\n+if test \"$enable_java_maintainer_mode\" = yes; then\n+\n+echo \"$as_me:$LINENO: checking if $JAVAC works\" >&5\n+echo $ECHO_N \"checking if $JAVAC works... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_javac_works+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+JAVA_TEST=Object.java\n+CLASS_TEST=Object.class\n+cat << \\EOF > $JAVA_TEST\n+/* #line 29281 \"configure\" */\n+package java.lang;\n+\n+public class Object\n+{\n+  static <T> void doStuff()\n+  {\n+  }\n+}\n+EOF\n+if test x$JAVAC_IS_GCJ = xyes; then\n+  CMD=\"$JAVAC $JAVACFLAGS -fsource=1.5 -ftarget=1.5 $JAVA_TEST\"\n+else\n+  CMD=\"$JAVAC $JAVACFLAGS -source 1.5 -target 1.5 $JAVA_TEST\"\n+fi\n+if { ac_try='$CMD'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } >/dev/null 2>&1; then\n+  ac_cv_prog_javac_works=yes\n+else\n+  { { echo \"$as_me:$LINENO: error: The Java compiler $JAVAC failed (see config.log, check the CLASSPATH?)\" >&5\n+echo \"$as_me: error: The Java compiler $JAVAC failed (see config.log, check the CLASSPATH?)\" >&2;}\n+   { (exit 1); exit 1; }; }\n+  echo \"configure: failed program was:\" >&5\n+  cat $JAVA_TEST >&5\n+fi\n+rm -f $JAVA_TEST $CLASS_TEST\n+\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_prog_javac_works\" >&5\n+echo \"${ECHO_T}$ac_cv_prog_javac_works\" >&6\n+\n+fi\n+\n+        fi\n+fi\n+echo \"$as_me:$LINENO: checking if $JAVA works\" >&5\n+echo $ECHO_N \"checking if $JAVA works... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_java_works+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+JAVA_TEST=Test.java\n+CLASS_TEST=Test.class\n+TEST=Test\n+cat << \\EOF > $JAVA_TEST\n+/* [#]line 29330 \"configure\" */\n+public class Test {\n+public static void main (String args[]) {\n+        System.exit (0);\n+} }\n+EOF\n+if test x$ac_cv_prog_uudecode_base64 != xyes; then\n+        if { ac_try='$JAVAC $JAVACFLAGS $JAVA_TEST'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } && test -s $CLASS_TEST; then\n+                :\n+        else\n+          echo \"configure: failed program was:\" >&5\n+          cat $JAVA_TEST >&5\n+          { { echo \"$as_me:$LINENO: error: The Java compiler $JAVAC failed (see config.log, check the CLASSPATH?)\" >&5\n+echo \"$as_me: error: The Java compiler $JAVAC failed (see config.log, check the CLASSPATH?)\" >&2;}\n+   { (exit 1); exit 1; }; }\n+        fi\n+fi\n+if { ac_try='CLASSPATH=.:$CLASSPATH $JAVA $JAVAFLAGS $TEST'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } >/dev/null 2>&1; then\n+  ac_cv_prog_java_works=yes\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat $JAVA_TEST >&5\n+  { { echo \"$as_me:$LINENO: error: The Java VM $JAVA failed (see config.log, check the CLASSPATH?)\" >&5\n+echo \"$as_me: error: The Java VM $JAVA failed (see config.log, check the CLASSPATH?)\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+rm -fr $JAVA_TEST $CLASS_TEST Test.uue\n+\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_prog_java_works\" >&5\n+echo \"${ECHO_T}$ac_cv_prog_java_works\" >&6\n+\n+\n+\n+  fi\n+  if test \"x${COMPILE_GJDOC}\" = xyes; then\n+\n+  echo \"$as_me:$LINENO: checking for the ANTLR parser generator JAR file\" >&5\n+echo $ECHO_N \"checking for the ANTLR parser generator JAR file... $ECHO_C\" >&6\n+  if test -z \"$ANTLR_JAR\"; then\n+    for antlr_lib_home in `ls -d /usr/local/share/antlr* 2> /dev/null` \\\n+\t/usr/share/antlr/lib /usr/share/java /usr/lib;\n+\tdo\n+\t    if test -f \"$antlr_lib_home/antlr.jar\"; then\n+\t      ANTLR_JAR=\"$antlr_lib_home/antlr.jar\"\n+\t      break\n+\t    fi\n+     done\n+  fi\n+  test -f $ANTLR_JAR || { { echo \"$as_me:$LINENO: error: specified ANTLR jar file $ANTLR_JAR not found.\" >&5\n+echo \"$as_me: error: specified ANTLR jar file $ANTLR_JAR not found.\" >&2;}\n+   { (exit 1); exit 1; }; } \\\n+        && echo \"$as_me:$LINENO: result: $ANTLR_JAR\" >&5\n+echo \"${ECHO_T}$ANTLR_JAR\" >&6\n+\n+\n+    if test \"x${REGENERATE_GJDOC_PARSER}\" = xyes; then\n+      if test \"x${enable_java_maintainer_mode}\" = xyes; then\n+\n+if test \"x$JAVAPREFIX\" = x; then\n+        test \"x$JAVA\" = x && for ac_prog in cacao$EXEEXT jamvm$EXEEXT kaffe$EXEEXT gij$EXEEXT java$EXEEXT\n+do\n+  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n+set dummy $ac_prog; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_JAVA+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test -n \"$JAVA\"; then\n+  ac_cv_prog_JAVA=\"$JAVA\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_JAVA=\"$ac_prog\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+fi\n+fi\n+JAVA=$ac_cv_prog_JAVA\n+if test -n \"$JAVA\"; then\n+  echo \"$as_me:$LINENO: result: $JAVA\" >&5\n+echo \"${ECHO_T}$JAVA\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+  test -n \"$JAVA\" && break\n+done\n+\n+else\n+        test \"x$JAVA\" = x && for ac_prog in cacao$EXEEXT jamvm$EXEEXT kaffe$EXEEXT gij$EXEEXT java$EXEEXT\n+do\n+  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n+set dummy $ac_prog; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_JAVA+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test -n \"$JAVA\"; then\n+  ac_cv_prog_JAVA=\"$JAVA\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_JAVA=\"$ac_prog\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+fi\n+fi\n+JAVA=$ac_cv_prog_JAVA\n+if test -n \"$JAVA\"; then\n+  echo \"$as_me:$LINENO: result: $JAVA\" >&5\n+echo \"${ECHO_T}$JAVA\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+  test -n \"$JAVA\" && break\n+done\n+test -n \"$JAVA\" || JAVA=\"$JAVAPREFIX\"\n+\n+fi\n+test \"x$JAVA\" = x && { { echo \"$as_me:$LINENO: error: no acceptable Java virtual machine found in \\$PATH\" >&5\n+echo \"$as_me: error: no acceptable Java virtual machine found in \\$PATH\" >&2;}\n+   { (exit 1); exit 1; }; }\n+\n+# Extract the first word of \"uudecode$EXEEXT\", so it can be a program name with args.\n+set dummy uudecode$EXEEXT; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_uudecode+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test -n \"$uudecode\"; then\n+  ac_cv_prog_uudecode=\"$uudecode\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_uudecode=\"yes\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+fi\n+fi\n+uudecode=$ac_cv_prog_uudecode\n+if test -n \"$uudecode\"; then\n+  echo \"$as_me:$LINENO: result: $uudecode\" >&5\n+echo \"${ECHO_T}$uudecode\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+if test x$uudecode = xyes; then\n+echo \"$as_me:$LINENO: checking if uudecode can decode base 64 file\" >&5\n+echo $ECHO_N \"checking if uudecode can decode base 64 file... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_uudecode_base64+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+cat << \\EOF > Test.uue\n+begin-base64 644 Test.class\n+yv66vgADAC0AFQcAAgEABFRlc3QHAAQBABBqYXZhL2xhbmcvT2JqZWN0AQAE\n+bWFpbgEAFihbTGphdmEvbGFuZy9TdHJpbmc7KVYBAARDb2RlAQAPTGluZU51\n+bWJlclRhYmxlDAAKAAsBAARleGl0AQAEKEkpVgoADQAJBwAOAQAQamF2YS9s\n+YW5nL1N5c3RlbQEABjxpbml0PgEAAygpVgwADwAQCgADABEBAApTb3VyY2VG\n+aWxlAQAJVGVzdC5qYXZhACEAAQADAAAAAAACAAkABQAGAAEABwAAACEAAQAB\n+AAAABQO4AAyxAAAAAQAIAAAACgACAAAACgAEAAsAAQAPABAAAQAHAAAAIQAB\n+AAEAAAAFKrcAErEAAAABAAgAAAAKAAIAAAAEAAQABAABABMAAAACABQ=\n+====\n+EOF\n+if uudecode$EXEEXT Test.uue; then\n+        ac_cv_prog_uudecode_base64=yes\n+else\n+        echo \"configure: 29543: uudecode had trouble decoding base 64 file 'Test.uue'\" >&5\n+        echo \"configure: failed file was:\" >&5\n+        cat Test.uue >&5\n+        ac_cv_prog_uudecode_base64=no\n+fi\n+rm -f Test.uue\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_prog_uudecode_base64\" >&5\n+echo \"${ECHO_T}$ac_cv_prog_uudecode_base64\" >&6\n+fi\n+if test x$ac_cv_prog_uudecode_base64 != xyes; then\n+        rm -f Test.class\n+        { echo \"$as_me:$LINENO: WARNING: I have to compile Test.class from scratch\" >&5\n+echo \"$as_me: WARNING: I have to compile Test.class from scratch\" >&2;}\n+        if test x$ac_cv_prog_javac_works = xno; then\n+                { { echo \"$as_me:$LINENO: error: Cannot compile java source. $JAVAC does not work properly\" >&5\n+echo \"$as_me: error: Cannot compile java source. $JAVAC does not work properly\" >&2;}\n+   { (exit 1); exit 1; }; }\n+        fi\n+        if test x$ac_cv_prog_javac_works = x; then\n+\n+ECJ_OPTS=\"-warn:-deprecation,serial,unusedImport\"\n+JAVAC_OPTS=\"-Xlint:unchecked,cast,divzero,empty,finally,overrides\"\n+GCJ_OPTS=\"-g\"\n+if test \"x$JAVAPREFIX\" = x; then\n+        test \"x$JAVAC\" = x && for ac_prog in \"ecj$EXEEXT $ECJ_OPTS\" \"ecj-3.3$EXEEXT $ECJ_OPTS\" \"ecj-3.2$EXEEXT $ECJ_OPTS\" \"javac$EXEEXT $JAVAC_OPTS\" \"gcj$EXEEXT -C\"\n+do\n+  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n+set dummy $ac_prog; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_JAVAC+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test -n \"$JAVAC\"; then\n+  ac_cv_prog_JAVAC=\"$JAVAC\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_JAVAC=\"$ac_prog\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+fi\n+fi\n+JAVAC=$ac_cv_prog_JAVAC\n+if test -n \"$JAVAC\"; then\n+  echo \"$as_me:$LINENO: result: $JAVAC\" >&5\n+echo \"${ECHO_T}$JAVAC\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+  test -n \"$JAVAC\" && break\n+done\n+\n+else\n+        test \"x$JAVAC\" = x && for ac_prog in \"ecj$EXEEXT $ECJ_OPTS\" \"ecj-3.3$EXEEXT $ECJ_OPTS\" \"ecj-3.2$EXEEXT $ECJ_OPTS\" \"javac$EXEEXT $JAVAC_OPTS\" \"gcj$EXEEXT -C\"\n+do\n+  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n+set dummy $ac_prog; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_JAVAC+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test -n \"$JAVAC\"; then\n+  ac_cv_prog_JAVAC=\"$JAVAC\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_JAVAC=\"$ac_prog\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+fi\n+fi\n+JAVAC=$ac_cv_prog_JAVAC\n+if test -n \"$JAVAC\"; then\n+  echo \"$as_me:$LINENO: result: $JAVAC\" >&5\n+echo \"${ECHO_T}$JAVAC\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+  test -n \"$JAVAC\" && break\n+done\n+test -n \"$JAVAC\" || JAVAC=\"$JAVAPREFIX\"\n+\n+fi\n+test \"x$JAVAC\" = x && { { echo \"$as_me:$LINENO: error: no acceptable Java compiler found in \\$PATH\" >&5\n+echo \"$as_me: error: no acceptable Java compiler found in \\$PATH\" >&2;}\n+   { (exit 1); exit 1; }; }\n+echo \"$as_me:$LINENO: checking if $JAVAC is a version of gcj\" >&5\n+echo $ECHO_N \"checking if $JAVAC is a version of gcj... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_javac_is_gcj+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+if $JAVAC --version | grep gcj > /dev/null; then\n+  ac_cv_prog_javac_is_gcj=yes;\n+  JAVAC=\"$JAVAC $GCJ_OPTS\";\n+fi\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_prog_javac_is_gcj\" >&5\n+echo \"${ECHO_T}$ac_cv_prog_javac_is_gcj\" >&6\n+JAVAC_IS_GCJ=$ac_cv_prog_javac_is_gcj\n+\n+\n+\n+if test x\"${JAVAC_IS_GCJ}\" = xyes; then\n+  GCJ_JAVAC_TRUE=\n+  GCJ_JAVAC_FALSE='#'\n+else\n+  GCJ_JAVAC_TRUE='#'\n+  GCJ_JAVAC_FALSE=\n+fi\n+\n+if test \"$enable_java_maintainer_mode\" = yes; then\n+\n+echo \"$as_me:$LINENO: checking if $JAVAC works\" >&5\n+echo $ECHO_N \"checking if $JAVAC works... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_javac_works+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+JAVA_TEST=Object.java\n+CLASS_TEST=Object.class\n+cat << \\EOF > $JAVA_TEST\n+/* #line 29690 \"configure\" */\n+package java.lang;\n+\n+public class Object\n+{\n+  static <T> void doStuff()\n+  {\n+  }\n+}\n+EOF\n+if test x$JAVAC_IS_GCJ = xyes; then\n+  CMD=\"$JAVAC $JAVACFLAGS -fsource=1.5 -ftarget=1.5 $JAVA_TEST\"\n+else\n+  CMD=\"$JAVAC $JAVACFLAGS -source 1.5 -target 1.5 $JAVA_TEST\"\n+fi\n+if { ac_try='$CMD'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } >/dev/null 2>&1; then\n+  ac_cv_prog_javac_works=yes\n+else\n+  { { echo \"$as_me:$LINENO: error: The Java compiler $JAVAC failed (see config.log, check the CLASSPATH?)\" >&5\n+echo \"$as_me: error: The Java compiler $JAVAC failed (see config.log, check the CLASSPATH?)\" >&2;}\n+   { (exit 1); exit 1; }; }\n+  echo \"configure: failed program was:\" >&5\n+  cat $JAVA_TEST >&5\n+fi\n+rm -f $JAVA_TEST $CLASS_TEST\n+\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_prog_javac_works\" >&5\n+echo \"${ECHO_T}$ac_cv_prog_javac_works\" >&6\n+\n+fi\n+\n+        fi\n+fi\n+echo \"$as_me:$LINENO: checking if $JAVA works\" >&5\n+echo $ECHO_N \"checking if $JAVA works... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_java_works+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+JAVA_TEST=Test.java\n+CLASS_TEST=Test.class\n+TEST=Test\n+cat << \\EOF > $JAVA_TEST\n+/* [#]line 29739 \"configure\" */\n+public class Test {\n+public static void main (String args[]) {\n+        System.exit (0);\n+} }\n+EOF\n+if test x$ac_cv_prog_uudecode_base64 != xyes; then\n+        if { ac_try='$JAVAC $JAVACFLAGS $JAVA_TEST'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } && test -s $CLASS_TEST; then\n+                :\n+        else\n+          echo \"configure: failed program was:\" >&5\n+          cat $JAVA_TEST >&5\n+          { { echo \"$as_me:$LINENO: error: The Java compiler $JAVAC failed (see config.log, check the CLASSPATH?)\" >&5\n+echo \"$as_me: error: The Java compiler $JAVAC failed (see config.log, check the CLASSPATH?)\" >&2;}\n+   { (exit 1); exit 1; }; }\n+        fi\n+fi\n+if { ac_try='CLASSPATH=.:$CLASSPATH $JAVA $JAVAFLAGS $TEST'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } >/dev/null 2>&1; then\n+  ac_cv_prog_java_works=yes\n+else\n+  echo \"configure: failed program was:\" >&5\n+  cat $JAVA_TEST >&5\n+  { { echo \"$as_me:$LINENO: error: The Java VM $JAVA failed (see config.log, check the CLASSPATH?)\" >&5\n+echo \"$as_me: error: The Java VM $JAVA failed (see config.log, check the CLASSPATH?)\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+rm -fr $JAVA_TEST $CLASS_TEST Test.uue\n+\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_prog_java_works\" >&5\n+echo \"${ECHO_T}$ac_cv_prog_java_works\" >&6\n+\n+\n+\n+\n+    if test -n \"$ac_tool_prefix\"; then\n+  for ac_prog in cantlr runantlr antlr\n+  do\n+    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\n+set dummy $ac_tool_prefix$ac_prog; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_ANTLR+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test -n \"$ANTLR\"; then\n+  ac_cv_prog_ANTLR=\"$ANTLR\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_ANTLR=\"$ac_tool_prefix$ac_prog\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+fi\n+fi\n+ANTLR=$ac_cv_prog_ANTLR\n+if test -n \"$ANTLR\"; then\n+  echo \"$as_me:$LINENO: result: $ANTLR\" >&5\n+echo \"${ECHO_T}$ANTLR\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+    test -n \"$ANTLR\" && break\n+  done\n+fi\n+if test -z \"$ANTLR\"; then\n+  ac_ct_ANTLR=$ANTLR\n+  for ac_prog in cantlr runantlr antlr\n+do\n+  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n+set dummy $ac_prog; ac_word=$2\n+echo \"$as_me:$LINENO: checking for $ac_word\" >&5\n+echo $ECHO_N \"checking for $ac_word... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_ac_ct_ANTLR+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  if test -n \"$ac_ct_ANTLR\"; then\n+  ac_cv_prog_ac_ct_ANTLR=\"$ac_ct_ANTLR\" # Let the user override the test.\n+else\n+as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\n+for as_dir in $PATH\n+do\n+  IFS=$as_save_IFS\n+  test -z \"$as_dir\" && as_dir=.\n+  for ac_exec_ext in '' $ac_executable_extensions; do\n+  if $as_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n+    ac_cv_prog_ac_ct_ANTLR=\"$ac_prog\"\n+    echo \"$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext\" >&5\n+    break 2\n+  fi\n+done\n+done\n+\n+fi\n+fi\n+ac_ct_ANTLR=$ac_cv_prog_ac_ct_ANTLR\n+if test -n \"$ac_ct_ANTLR\"; then\n+  echo \"$as_me:$LINENO: result: $ac_ct_ANTLR\" >&5\n+echo \"${ECHO_T}$ac_ct_ANTLR\" >&6\n+else\n+  echo \"$as_me:$LINENO: result: no\" >&5\n+echo \"${ECHO_T}no\" >&6\n+fi\n+\n+  test -n \"$ac_ct_ANTLR\" && break\n+done\n+\n+  ANTLR=$ac_ct_ANTLR\n+fi\n+\n+  if test \"x$ANTLR\" = x; then\n+      if test -z \"$JAVA\"; then\n+        { { echo \"$as_me:$LINENO: error: Failed to find either an antlr binary or a suitable Java runtime for ANTLR.\" >&5\n+echo \"$as_me: error: Failed to find either an antlr binary or a suitable Java runtime for ANTLR.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+      else\n+        ANTLR=\"$JAVA -classpath $ANTLR_JAR antlr.Tool\"\n+      fi\n+  fi\n+\n+  echo \"$as_me:$LINENO: checking for antlr 2.7.1 or better\" >&5\n+echo $ECHO_N \"checking for antlr 2.7.1 or better... $ECHO_C\" >&6\n+  antlr_version_str=`$ANTLR 2>&1 | head -n 1 | sed '/.*Version */!d; s///;q'`\n+  if test \"$antlr_version_str\"; then\n+    antlr_version_regex='s/\\([[:digit:]]\\+\\)\\.\\([[:digit:]]\\+\\)\\.\\([[:digit:]]\\+\\).*$/'\n+    antlr_version_major=`echo $antlr_version_str | sed \"$antlr_version_regex\\\\1/\"`\n+    antlr_version_minor=`echo $antlr_version_str | sed \"$antlr_version_regex\\\\2/\"`\n+    antlr_version_micro=`echo $antlr_version_str | sed \"$antlr_version_regex\\\\3/\"`\n+    (test $antlr_version_major -gt 2 || \\\n+    (test $antlr_version_major -eq 2 && \\\n+     test $antlr_version_minor -gt 7) || \\\n+    (test $antlr_version_major -eq 2 && \\\n+     test $antlr_version_minor -eq 7 && \\\n+     test $antlr_version_micro -ge 1))\n+  fi\n+  echo \"$as_me:$LINENO: result: $antlr_version_major.$antlr_version_minor.$antlr_version_micro\" >&5\n+echo \"${ECHO_T}$antlr_version_major.$antlr_version_minor.$antlr_version_micro\" >&6\n+\n+      fi\n+    fi\n+  fi\n+fi\n+\n+\n # Check for javac if we need to build either the class library,\n # the examples or the tools\n if test \"x${use_glibj_zip}\" = xfalse || \\\n    test \"x${EXAMPLESDIR}\" != x || \\\n    test \"x${TOOLSDIR}\" != x && \\\n    test \"x${build_class_files}\" != xno; then\n \n-\n+ECJ_OPTS=\"-warn:-deprecation,serial,unusedImport\"\n+JAVAC_OPTS=\"-Xlint:unchecked,cast,divzero,empty,finally,overrides\"\n+GCJ_OPTS=\"-g\"\n if test \"x$JAVAPREFIX\" = x; then\n-        test \"x$JAVAC\" = x && for ac_prog in \"ecj$EXEEXT -warn:-deprecation,serial,unusedImport\" \"ecj-3.3$EXEEXT -warn:-deprecation,serial,unusedImport\" \"ecj-3.2$EXEEXT -warn:-deprecation,serial,unusedImport\" \"javac$EXEEXT -Xlint:unchecked\" \"gcj$EXEEXT -C\"\n+        test \"x$JAVAC\" = x && for ac_prog in \"ecj$EXEEXT $ECJ_OPTS\" \"ecj-3.3$EXEEXT $ECJ_OPTS\" \"ecj-3.2$EXEEXT $ECJ_OPTS\" \"javac$EXEEXT $JAVAC_OPTS\" \"gcj$EXEEXT -C\"\n do\n   # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -28587,7 +29953,7 @@ fi\n done\n \n else\n-        test \"x$JAVAC\" = x && for ac_prog in \"ecj$EXEEXT -warn:-deprecation,serial,unusedImport\" \"ecj-3.3$EXEEXT -warn:-deprecation,serial,unusedImport\" \"ecj-3.2$EXEEXT -warn:-deprecation,serial,unusedImport\" \"javac$EXEEXT -Xlint:unchecked\" \"gcj$EXEEXT -C\"\n+        test \"x$JAVAC\" = x && for ac_prog in \"ecj$EXEEXT $ECJ_OPTS\" \"ecj-3.3$EXEEXT $ECJ_OPTS\" \"ecj-3.2$EXEEXT $ECJ_OPTS\" \"javac$EXEEXT $JAVAC_OPTS\" \"gcj$EXEEXT -C\"\n do\n   # Extract the first word of \"$ac_prog\", so it can be a program name with args.\n set dummy $ac_prog; ac_word=$2\n@@ -28632,6 +29998,31 @@ fi\n test \"x$JAVAC\" = x && { { echo \"$as_me:$LINENO: error: no acceptable Java compiler found in \\$PATH\" >&5\n echo \"$as_me: error: no acceptable Java compiler found in \\$PATH\" >&2;}\n    { (exit 1); exit 1; }; }\n+echo \"$as_me:$LINENO: checking if $JAVAC is a version of gcj\" >&5\n+echo $ECHO_N \"checking if $JAVAC is a version of gcj... $ECHO_C\" >&6\n+if test \"${ac_cv_prog_javac_is_gcj+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+\n+if $JAVAC --version | grep gcj > /dev/null; then\n+  ac_cv_prog_javac_is_gcj=yes;\n+  JAVAC=\"$JAVAC $GCJ_OPTS\";\n+fi\n+fi\n+echo \"$as_me:$LINENO: result: $ac_cv_prog_javac_is_gcj\" >&5\n+echo \"${ECHO_T}$ac_cv_prog_javac_is_gcj\" >&6\n+JAVAC_IS_GCJ=$ac_cv_prog_javac_is_gcj\n+\n+\n+\n+if test x\"${JAVAC_IS_GCJ}\" = xyes; then\n+  GCJ_JAVAC_TRUE=\n+  GCJ_JAVAC_FALSE='#'\n+else\n+  GCJ_JAVAC_TRUE='#'\n+  GCJ_JAVAC_FALSE=\n+fi\n+\n if test \"$enable_java_maintainer_mode\" = yes; then\n \n echo \"$as_me:$LINENO: checking if $JAVAC works\" >&5\n@@ -28643,7 +30034,7 @@ else\n JAVA_TEST=Object.java\n CLASS_TEST=Object.class\n cat << \\EOF > $JAVA_TEST\n-/* #line 28646 \"configure\" */\n+/* #line 30037 \"configure\" */\n package java.lang;\n \n public class Object\n@@ -28653,7 +30044,12 @@ public class Object\n   }\n }\n EOF\n-if { ac_try='$JAVAC $JAVA_TEST'\n+if test x$JAVAC_IS_GCJ = xyes; then\n+  CMD=\"$JAVAC $JAVACFLAGS -fsource=1.5 -ftarget=1.5 $JAVA_TEST\"\n+else\n+  CMD=\"$JAVAC $JAVACFLAGS -source 1.5 -target 1.5 $JAVA_TEST\"\n+fi\n+if { ac_try='$CMD'\n   { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n   (eval $ac_try) 2>&5\n   ac_status=$?\n@@ -28679,7 +30075,7 @@ fi\n   JAVA_TEST=Test.java\n   CLASS_TEST=Test.class\n   cat << \\EOF > $JAVA_TEST\n-  /* #line 28682 \"configure\" */\n+  /* #line 30078 \"configure\" */\n   public class Test\n   {\n     public static void main(String args)\n@@ -28688,17 +30084,19 @@ fi\n     }\n   }\n EOF\n-  echo \"$as_me:$LINENO: checking whether javac supports -J\" >&5\n+  if test x$JAVAC_IS_GCJ != xyes; then\n+    echo \"$as_me:$LINENO: checking whether javac supports -J\" >&5\n echo $ECHO_N \"checking whether javac supports -J... $ECHO_C\" >&6\n-  $JAVAC $JAVACFLAGS -J-Xmx768M -sourcepath '' $JAVA_TEST\n-  javac_result=$?\n-  if test \"x$javac_result\" = \"x0\"; then\n-    echo \"$as_me:$LINENO: result: yes\" >&5\n+    $JAVAC $JAVACFLAGS -J-Xmx768M -sourcepath '' $JAVA_TEST\n+    javac_result=$?\n+    if test \"x$javac_result\" = \"x0\"; then\n+      echo \"$as_me:$LINENO: result: yes\" >&5\n echo \"${ECHO_T}yes\" >&6\n-    JAVAC_MEM_OPT=\"-J-Xmx768M\"\n-  else\n-    echo \"$as_me:$LINENO: result: no\" >&5\n+      JAVAC_MEM_OPT=\"-J-Xmx768M\"\n+    else\n+      echo \"$as_me:$LINENO: result: no\" >&5\n echo \"${ECHO_T}no\" >&6\n+    fi\n   fi\n   rm -f $JAVA_TEST $CLASS_TEST\n \n@@ -29029,7 +30427,36 @@ fi\n \n \n \n-                                                                                                                                                                                                                                                                                                                                                                                                                                                        ac_config_files=\"$ac_config_files Makefile doc/Makefile doc/api/Makefile external/Makefile external/sax/Makefile external/w3c_dom/Makefile external/relaxngDatatype/Makefile external/jsr166/Makefile gnu/classpath/Configuration.java gnu/java/security/Configuration.java include/Makefile native/Makefile native/fdlibm/Makefile native/jawt/Makefile native/jni/Makefile native/jni/classpath/Makefile native/jni/java-io/Makefile native/jni/java-lang/Makefile native/jni/java-net/Makefile native/jni/java-nio/Makefile native/jni/java-util/Makefile native/jni/gtk-peer/Makefile native/jni/gconf-peer/Makefile native/jni/gstreamer-peer/Makefile native/jni/qt-peer/Makefile native/jni/xmlj/Makefile native/jni/midi-alsa/Makefile native/jni/midi-dssi/Makefile native/jni/native-lib/Makefile native/plugin/Makefile resource/Makefile resource/META-INF/services/java.util.prefs.PreferencesFactory resource/META-INF/services/javax.sound.sampled.spi.AudioFileReader resource/META-INF/services/javax.sound.sampled.spi.MixerProvider scripts/Makefile scripts/classpath.spec lib/Makefile lib/gen-classlist.sh lib/copy-vmresources.sh scripts/check_jni_methods.sh tools/Makefile examples/Makefile examples/Makefile.jawt examples/Makefile.java2d\"\n+WANT_NATIVE_BIG_INTEGER=false\n+if test \"x${COMPILE_GMP}\" = xyes; then\n+  if test \"x${ac_cv_lib_gmp___gmpz_mul_si}\" = xyes; then\n+    if test \"x${ac_cv_header_gmp_h}\" = xyes; then\n+      WANT_NATIVE_BIG_INTEGER=true\n+\n+cat >>confdefs.h <<\\_ACEOF\n+#define WITH_GNU_MP 1\n+_ACEOF\n+\n+    else\n+      COMPILE_GMP=no\n+    fi\n+  else\n+    COMPILE_GMP=no\n+  fi\n+fi\n+\n+\n+\n+if test \"x${COMPILE_GMP}\" = xyes; then\n+  CREATE_GMPBI_LIBRARY_TRUE=\n+  CREATE_GMPBI_LIBRARY_FALSE='#'\n+else\n+  CREATE_GMPBI_LIBRARY_TRUE='#'\n+  CREATE_GMPBI_LIBRARY_FALSE=\n+fi\n+\n+\n+                                                                                                                                                                                                                                                                                                                                                                                                                                                                  ac_config_files=\"$ac_config_files Makefile doc/Makefile doc/api/Makefile external/Makefile external/sax/Makefile external/w3c_dom/Makefile external/relaxngDatatype/Makefile external/jsr166/Makefile gnu/classpath/Configuration.java gnu/java/security/Configuration.java include/Makefile native/Makefile native/fdlibm/Makefile native/jawt/Makefile native/jni/Makefile native/jni/classpath/Makefile native/jni/java-io/Makefile native/jni/java-lang/Makefile native/jni/java-math/Makefile native/jni/java-net/Makefile native/jni/java-nio/Makefile native/jni/java-util/Makefile native/jni/gtk-peer/Makefile native/jni/gconf-peer/Makefile native/jni/gstreamer-peer/Makefile native/jni/qt-peer/Makefile native/jni/xmlj/Makefile native/jni/midi-alsa/Makefile native/jni/midi-dssi/Makefile native/jni/native-lib/Makefile native/plugin/Makefile resource/Makefile resource/META-INF/services/java.util.prefs.PreferencesFactory resource/META-INF/services/javax.sound.sampled.spi.AudioFileReader resource/META-INF/services/javax.sound.sampled.spi.MixerProvider scripts/Makefile scripts/classpath.spec lib/Makefile lib/gen-classlist.sh lib/copy-vmresources.sh scripts/check_jni_methods.sh tools/Makefile examples/Makefile examples/Makefile.jawt examples/Makefile.java2d\"\n \n \n if test \"x${COMPILE_WRAPPERS}\" = xyes; then\n@@ -29066,6 +30493,14 @@ if test \"x${COMPILE_WRAPPERS}\" = xyes; then\n    fi\n \n \n+if test \"x${COMPILE_GJDOC}\" = xyes\n+then\n+          ac_config_files=\"$ac_config_files tools/gjdoc\"\n+\n+          ac_config_commands=\"$ac_config_commands gjdoc\"\n+\n+fi\n+\n           ac_config_commands=\"$ac_config_commands gen-classlist\"\n \n           ac_config_commands=\"$ac_config_commands copy-vmresources\"\n@@ -29266,13 +30701,27 @@ echo \"$as_me: error: conditional \\\"CREATE_PLUGIN\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n+if test -z \"${CREATE_GJDOC_TRUE}\" && test -z \"${CREATE_GJDOC_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"CREATE_GJDOC\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&5\n+echo \"$as_me: error: conditional \\\"CREATE_GJDOC\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n if test -z \"${CREATE_JNI_HEADERS_TRUE}\" && test -z \"${CREATE_JNI_HEADERS_FALSE}\"; then\n   { { echo \"$as_me:$LINENO: error: conditional \\\"CREATE_JNI_HEADERS\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5\n echo \"$as_me: error: conditional \\\"CREATE_JNI_HEADERS\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n+if test -z \"${CREATE_GJDOC_PARSER_TRUE}\" && test -z \"${CREATE_GJDOC_PARSER_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"CREATE_GJDOC_PARSER\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&5\n+echo \"$as_me: error: conditional \\\"CREATE_GJDOC_PARSER\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n if test -z \"${CREATE_WRAPPERS_TRUE}\" && test -z \"${CREATE_WRAPPERS_FALSE}\"; then\n   { { echo \"$as_me:$LINENO: error: conditional \\\"CREATE_WRAPPERS\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5\n@@ -29308,6 +30757,13 @@ echo \"$as_me: error: conditional \\\"MAINTAINER_MODE\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n+if test -z \"${WITH_JAR_TRUE}\" && test -z \"${WITH_JAR_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"WITH_JAR\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&5\n+echo \"$as_me: error: conditional \\\"WITH_JAR\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n if test -z \"${INSTALL_GLIBJ_ZIP_TRUE}\" && test -z \"${INSTALL_GLIBJ_ZIP_FALSE}\"; then\n   { { echo \"$as_me:$LINENO: error: conditional \\\"INSTALL_GLIBJ_ZIP\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5\n@@ -29350,6 +30806,27 @@ echo \"$as_me: error: conditional \\\"USE_PREBUILT_GLIBJ_ZIP\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n+if test -z \"${GCJ_JAVAC_TRUE}\" && test -z \"${GCJ_JAVAC_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"GCJ_JAVAC\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&5\n+echo \"$as_me: error: conditional \\\"GCJ_JAVAC\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+if test -z \"${GCJ_JAVAC_TRUE}\" && test -z \"${GCJ_JAVAC_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"GCJ_JAVAC\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&5\n+echo \"$as_me: error: conditional \\\"GCJ_JAVAC\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n+if test -z \"${GCJ_JAVAC_TRUE}\" && test -z \"${GCJ_JAVAC_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"GCJ_JAVAC\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&5\n+echo \"$as_me: error: conditional \\\"GCJ_JAVAC\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n if test -z \"${USE_ESCHER_TRUE}\" && test -z \"${USE_ESCHER_FALSE}\"; then\n   { { echo \"$as_me:$LINENO: error: conditional \\\"USE_ESCHER\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&5\n@@ -29364,6 +30841,13 @@ echo \"$as_me: error: conditional \\\"ENABLE_LOCAL_SOCKETS\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" >&2;}\n    { (exit 1); exit 1; }; }\n fi\n+if test -z \"${CREATE_GMPBI_LIBRARY_TRUE}\" && test -z \"${CREATE_GMPBI_LIBRARY_FALSE}\"; then\n+  { { echo \"$as_me:$LINENO: error: conditional \\\"CREATE_GMPBI_LIBRARY\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&5\n+echo \"$as_me: error: conditional \\\"CREATE_GMPBI_LIBRARY\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" >&2;}\n+   { (exit 1); exit 1; }; }\n+fi\n \n : ${CONFIG_STATUS=./config.status}\n ac_clean_files_save=$ac_clean_files\n@@ -29635,7 +31119,7 @@ _ASBOX\n } >&5\n cat >&5 <<_CSEOF\n \n-This file was extended by GNU Classpath $as_me 0.97.2, which was\n+This file was extended by GNU Classpath $as_me 0.98-pre, which was\n generated by GNU Autoconf 2.59.  Invocation command line was\n \n   CONFIG_FILES    = $CONFIG_FILES\n@@ -29701,7 +31185,7 @@ _ACEOF\n \n cat >>$CONFIG_STATUS <<_ACEOF\n ac_cs_version=\"\\\\\n-GNU Classpath config.status 0.97.2\n+GNU Classpath config.status 0.98-pre\n configured by $0, generated by GNU Autoconf 2.59,\n   with options \\\\\"`echo \"$ac_configure_args\" | sed 's/[\\\\\"\"\\`\\$]/\\\\\\\\&/g'`\\\\\"\n \n@@ -30210,6 +31694,7 @@ do\n   \"native/jni/classpath/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/jni/classpath/Makefile\" ;;\n   \"native/jni/java-io/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/jni/java-io/Makefile\" ;;\n   \"native/jni/java-lang/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/jni/java-lang/Makefile\" ;;\n+  \"native/jni/java-math/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/jni/java-math/Makefile\" ;;\n   \"native/jni/java-net/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/jni/java-net/Makefile\" ;;\n   \"native/jni/java-nio/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/jni/java-nio/Makefile\" ;;\n   \"native/jni/java-util/Makefile\" ) CONFIG_FILES=\"$CONFIG_FILES native/jni/java-util/Makefile\" ;;\n@@ -30248,6 +31733,7 @@ do\n   \"tools/grmid\" ) CONFIG_FILES=\"$CONFIG_FILES tools/grmid\" ;;\n   \"tools/grmic\" ) CONFIG_FILES=\"$CONFIG_FILES tools/grmic\" ;;\n   \"tools/gjavah\" ) CONFIG_FILES=\"$CONFIG_FILES tools/gjavah\" ;;\n+  \"tools/gjdoc\" ) CONFIG_FILES=\"$CONFIG_FILES tools/gjdoc\" ;;\n   \"$ac_config_links_1\" ) CONFIG_LINKS=\"$CONFIG_LINKS $ac_config_links_1\" ;;\n   \"default-1\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS default-1\" ;;\n   \"depfiles\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS depfiles\" ;;\n@@ -30266,6 +31752,7 @@ do\n   \"grmid\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS grmid\" ;;\n   \"grmic\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS grmic\" ;;\n   \"gjavah\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS gjavah\" ;;\n+  \"gjdoc\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS gjdoc\" ;;\n   \"gen-classlist\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS gen-classlist\" ;;\n   \"copy-vmresources\" ) CONFIG_COMMANDS=\"$CONFIG_COMMANDS copy-vmresources\" ;;\n   \"include/config.h\" ) CONFIG_HEADERS=\"$CONFIG_HEADERS include/config.h\" ;;\n@@ -30438,12 +31925,15 @@ s,@CREATE_QT_PEER_LIBRARIES_TRUE@,$CREATE_QT_PEER_LIBRARIES_TRUE,;t t\n s,@CREATE_QT_PEER_LIBRARIES_FALSE@,$CREATE_QT_PEER_LIBRARIES_FALSE,;t t\n s,@CREATE_PLUGIN_TRUE@,$CREATE_PLUGIN_TRUE,;t t\n s,@CREATE_PLUGIN_FALSE@,$CREATE_PLUGIN_FALSE,;t t\n+s,@CREATE_GJDOC_TRUE@,$CREATE_GJDOC_TRUE,;t t\n+s,@CREATE_GJDOC_FALSE@,$CREATE_GJDOC_FALSE,;t t\n s,@toolexeclibdir@,$toolexeclibdir,;t t\n s,@nativeexeclibdir@,$nativeexeclibdir,;t t\n s,@glibjdir@,$glibjdir,;t t\n-s,@VM_BINARY@,$VM_BINARY,;t t\n s,@CREATE_JNI_HEADERS_TRUE@,$CREATE_JNI_HEADERS_TRUE,;t t\n s,@CREATE_JNI_HEADERS_FALSE@,$CREATE_JNI_HEADERS_FALSE,;t t\n+s,@CREATE_GJDOC_PARSER_TRUE@,$CREATE_GJDOC_PARSER_TRUE,;t t\n+s,@CREATE_GJDOC_PARSER_FALSE@,$CREATE_GJDOC_PARSER_FALSE,;t t\n s,@CREATE_WRAPPERS_TRUE@,$CREATE_WRAPPERS_TRUE,;t t\n s,@CREATE_WRAPPERS_FALSE@,$CREATE_WRAPPERS_FALSE,;t t\n s,@LN_S@,$LN_S,;t t\n@@ -30527,6 +32017,8 @@ s,@MOZILLA_LIBS@,$MOZILLA_LIBS,;t t\n s,@GLIB_CFLAGS@,$GLIB_CFLAGS,;t t\n s,@GLIB_LIBS@,$GLIB_LIBS,;t t\n s,@PLUGIN_DIR@,$PLUGIN_DIR,;t t\n+s,@GMP_CFLAGS@,$GMP_CFLAGS,;t t\n+s,@GMP_LIBS@,$GMP_LIBS,;t t\n s,@USER_JAVAH@,$USER_JAVAH,;t t\n s,@CLASSPATH_INCLUDES@,$CLASSPATH_INCLUDES,;t t\n s,@vm_classes@,$vm_classes,;t t\n@@ -30543,7 +32035,9 @@ s,@CP@,$CP,;t t\n s,@DATE@,$DATE,;t t\n s,@FIND@,$FIND,;t t\n s,@ZIP@,$ZIP,;t t\n-s,@FASTJAR@,$FASTJAR,;t t\n+s,@JAR@,$JAR,;t t\n+s,@WITH_JAR_TRUE@,$WITH_JAR_TRUE,;t t\n+s,@WITH_JAR_FALSE@,$WITH_JAR_FALSE,;t t\n s,@INSTALL_GLIBJ_ZIP_TRUE@,$INSTALL_GLIBJ_ZIP_TRUE,;t t\n s,@INSTALL_GLIBJ_ZIP_FALSE@,$INSTALL_GLIBJ_ZIP_FALSE,;t t\n s,@INSTALL_CLASS_FILES_TRUE@,$INSTALL_CLASS_FILES_TRUE,;t t\n@@ -30562,14 +32056,25 @@ s,@REGEN_PARSERS_FALSE@,$REGEN_PARSERS_FALSE,;t t\n s,@USE_PREBUILT_GLIBJ_ZIP_TRUE@,$USE_PREBUILT_GLIBJ_ZIP_TRUE,;t t\n s,@USE_PREBUILT_GLIBJ_ZIP_FALSE@,$USE_PREBUILT_GLIBJ_ZIP_FALSE,;t t\n s,@PATH_TO_GLIBJ_ZIP@,$PATH_TO_GLIBJ_ZIP,;t t\n+s,@JAVA@,$JAVA,;t t\n+s,@uudecode@,$uudecode,;t t\n s,@JAVAC@,$JAVAC,;t t\n+s,@JAVAC_IS_GCJ@,$JAVAC_IS_GCJ,;t t\n+s,@GCJ_JAVAC_TRUE@,$GCJ_JAVAC_TRUE,;t t\n+s,@GCJ_JAVAC_FALSE@,$GCJ_JAVAC_FALSE,;t t\n+s,@ANTLR_JAR@,$ANTLR_JAR,;t t\n+s,@ANTLR@,$ANTLR,;t t\n+s,@ac_ct_ANTLR@,$ac_ct_ANTLR,;t t\n s,@JAVAC_MEM_OPT@,$JAVAC_MEM_OPT,;t t\n s,@USE_ESCHER_TRUE@,$USE_ESCHER_TRUE,;t t\n s,@USE_ESCHER_FALSE@,$USE_ESCHER_FALSE,;t t\n s,@PATH_TO_ESCHER@,$PATH_TO_ESCHER,;t t\n s,@ENABLE_LOCAL_SOCKETS_TRUE@,$ENABLE_LOCAL_SOCKETS_TRUE,;t t\n s,@ENABLE_LOCAL_SOCKETS_FALSE@,$ENABLE_LOCAL_SOCKETS_FALSE,;t t\n s,@DEFAULT_PREFS_PEER@,$DEFAULT_PREFS_PEER,;t t\n+s,@WANT_NATIVE_BIG_INTEGER@,$WANT_NATIVE_BIG_INTEGER,;t t\n+s,@CREATE_GMPBI_LIBRARY_TRUE@,$CREATE_GMPBI_LIBRARY_TRUE,;t t\n+s,@CREATE_GMPBI_LIBRARY_FALSE@,$CREATE_GMPBI_LIBRARY_FALSE,;t t\n s,@LIBOBJS@,$LIBOBJS,;t t\n s,@LTLIBOBJS@,$LTLIBOBJS,;t t\n CEOF\n@@ -32717,6 +34222,7 @@ echo \"$as_me: error: cannot create directory \\\"$ac_dir\\\"\" >&2;}\n     grmid ) chmod 755 tools/grmid ;;\n     grmic ) chmod 755 tools/grmic ;;\n     gjavah ) chmod 755 tools/gjavah ;;\n+    gjdoc ) chmod 755 tools/gjdoc ;;\n     gen-classlist ) chmod 755 lib/gen-classlist.sh ;;\n     copy-vmresources ) chmod 755 lib/copy-vmresources.sh ;;\n   esac"}, {"sha": "18311eab50abfc6edbb9728579c5b0eb8a976582", "filename": "libjava/classpath/configure.ac", "status": "modified", "additions": 126, "deletions": 16, "changes": 142, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fconfigure.ac?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -6,7 +6,7 @@ dnl -----------------------------------------------------------\n dnl define([AC_CACHE_LOAD], )dnl\n dnl define([AC_CACHE_SAVE], )dnl\n \n-AC_INIT([GNU Classpath],[0.97.2],[classpath@gnu.org],[classpath])\n+AC_INIT([GNU Classpath],[0.98-pre],[classpath@gnu.org],[classpath])\n AC_CONFIG_SRCDIR(java/lang/System.java)\n \n dnl GCJ LOCAL\n@@ -284,6 +284,31 @@ AC_ARG_ENABLE([plugin],\n AM_CONDITIONAL(CREATE_PLUGIN, test \"x${COMPILE_PLUGIN}\" = xyes)\n \n dnl -----------------------------------------------------------\n+dnl Native java.math.BigInteger (enabled by default)\n+dnl -----------------------------------------------------------\n+AC_ARG_ENABLE([gmp],\n+              [AS_HELP_STRING(--enable-gmp,\n+                              compile native java.math.BigInteger library (disabled by --disable-gmp) [default=yes])],\n+              [case \"${enableval}\" in\n+                yes|true) COMPILE_GMP=yes ;;\n+                no|false) COMPILE_GMP=no ;;\n+                *) COMPILE_GMP=yes ;;\n+              esac],\n+              [COMPILE_GMP=yes])\n+\n+dnl -----------------------------------------------------------\n+dnl GJDoc (enabled by default)\n+dnl -----------------------------------------------------------\n+AC_ARG_ENABLE([gjdoc],\n+              [AS_HELP_STRING(--disable-gjdoc,compile GJDoc (disabled by --disable-gjdoc) [default=yes])],\n+              [case \"${enableval}\" in\n+                yes) COMPILE_GJDOC=yes ;;\n+                no) COMPILE_GJDOC=no ;;\n+                *) COMPILE_GJDOC=yes ;;\n+              esac],\n+              [COMPILE_GJDOC=yes])\n+AM_CONDITIONAL(CREATE_GJDOC, test \"x${COMPILE_GJDOC}\" = xyes)\n+\n dnl GCJ LOCAL: Calculates and substitutes toolexeclibdir.  $libdir is\n dnl defined to the same value for all multilibs.  We define toolexeclibdir\n dnl so that we can refer to the multilib installation directories from\n@@ -321,36 +346,55 @@ AC_ARG_WITH([glibj-dir],\n AC_SUBST(glibjdir)\n \n dnl -----------------------------------------------------------\n-dnl Sets the VM name for use in tool wrapper scripts\n+dnl Sets the Antlr jar to use for compiling gjdoc\n dnl -----------------------------------------------------------\n-AC_ARG_WITH([vm],\n-\t    [AS_HELP_STRING(--with-vm,sets the VM binary name [default='${prefix}/bin/jamvm'])],\n-\t    [\n-\t     VM_BINARY=${withval}\n-\t    ],\n-\t    [\n-\t     VM_BINARY='${prefix}/bin/jamvm'\n-\t    ])\n-\n-AC_SUBST(VM_BINARY)\n+AC_ARG_WITH([antlr-jar],\n+            [AS_HELP_STRING([--with-antlr-jar=file],[Use ANTLR from the specified jar file])],\n+            [\n+             ANTLR_JAR=$withval\n+            ],\n+            [\n+             ANTLR_JAR=\"$ANTLR_JAR\"\n+            ])\n \n dnl -----------------------------------------------------------\n-dnl Regenerate headers at build time (disabled by default)\n+dnl Regenerate headers at build time (enabled if not found)\n dnl -----------------------------------------------------------\n+AC_MSG_CHECKING([whether to regenerate the headers])\n AC_ARG_ENABLE([regen-headers],\n               [AS_HELP_STRING(--enable-regen-headers,automatically regenerate JNI headers [default=yes if headers don't exist])],\n               [case \"${enableval}\" in\n                 yes) REGENERATE_JNI_HEADERS=yes ;;\n                 no) REGENERATE_JNI_HEADERS=no ;;\n                 *) REGENERATE_JNI_HEADERS=yes ;;\n               esac],\n-              [if test -e include/java_lang_VMSystem.h; then\n+              [if test -e ${srcdir}/include/java_lang_VMSystem.h; then\n \t\t\tREGENERATE_JNI_HEADERS=no ;\n \t\t   else\n \t\t\tREGENERATE_JNI_HEADERS=yes ;\n \t       fi])\n+AC_MSG_RESULT(${REGENERATE_JNI_HEADERS})\n AM_CONDITIONAL(CREATE_JNI_HEADERS, test \"x${REGENERATE_JNI_HEADERS}\" = xyes)\n \n+dnl ------------------------------------------------------------------------\n+dnl Regenerate GJDoc parser at build time (enabled if not found)\n+dnl ------------------------------------------------------------------------\n+AC_MSG_CHECKING([whether to regenerate the GJDoc parser])\n+AC_ARG_ENABLE([regen-gjdoc-parser],\n+              [AS_HELP_STRING(--enable-regen-gjdoc-parser,automatically regenerate the GJDoc parser [default=yes if generated source doesn't exist])],\n+              [case \"${enableval}\" in\n+                yes) REGENERATE_GJDOC_PARSER=yes ;;\n+                no) REGENERATE_GJDOC_PARSER=no ;;\n+                *) REGENERATE_GJDOC_PARSER=yes ;;\n+              esac],\n+              [if test -e ${srcdir}/tools/generated/gnu/classpath/tools/gjdoc/expr/JavaLexer.java; then\n+\t\t\tREGENERATE_GJDOC_PARSER=no ;\n+\t\t   else\n+\t\t\tREGENERATE_GJDOC_PARSER=yes ;\n+\t       fi])\n+AC_MSG_RESULT(${REGENERATE_GJDOC_PARSER})\n+AM_CONDITIONAL(CREATE_GJDOC_PARSER, test \"x${REGENERATE_GJDOC_PARSER}\" = xyes)\n+\n dnl -----------------------------------------------------------\n dnl Enable tool wrapper binaries (disabled by default)\n dnl -----------------------------------------------------------\n@@ -422,6 +466,7 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n   dnl Check for crt_externs.h on Darwin.\n   dnl Check for netinet/in_systm.h, netinet/ip.h and net/if.h for Windows CE.\n   dnl Check for sys/loadavg.h for getloadavg() on Solaris 9.\n+  dnl Check for sys/sockio.h for SIOCGIFFLAGS on OpenSolaris.\n   AC_CHECK_HEADERS([unistd.h sys/types.h sys/config.h sys/ioctl.h \\\n \t\t    asm/ioctls.h \\\n \t\t    inttypes.h stdint.h utime.h sys/utime.h sys/filio.h \\\n@@ -434,14 +479,15 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n                     sys/event.h sys/epoll.h \\\n \t\t    ifaddrs.h \\\n \t\t    netinet/in_systm.h netinet/ip.h net/if.h \\\n-\t\t    sys/loadavg.h])\n+\t\t    sys/loadavg.h sys/sockio.h])\n \n   AC_EGREP_HEADER(uint32_t, stdint.h, AC_DEFINE(HAVE_INT32_DEFINED, 1, [Define to 1 if you have uint32_t]))\n   AC_EGREP_HEADER(uint32_t, inttypes.h, AC_DEFINE(HAVE_INT32_DEFINED, 1, [Define to 1 if you have uint32_t]))\n   AC_EGREP_HEADER(u_int32_t, sys/types.h, AC_DEFINE(HAVE_BSD_INT32_DEFINED, 1, [Define to 1 if you have BSD u_int32_t]))\n   AC_EGREP_HEADER(u_int32_t, sys/config.h, AC_DEFINE(HAVE_BSD_INT32_DEFINED, 1, [Define to 1 if you have BSD u_int32_t]))\n \n-  AC_SEARCH_LIBS([inet_pton],[nsl]) \n+  AC_SEARCH_LIBS([inet_pton],[nsl])\n+  AC_CHECK_LIB([socket], [gethostname]) \n   AC_CHECK_FUNCS([ftruncate fsync select \\\n \t\t  gethostname socket strerror fork pipe execve open close \\\n \t\t  lseek fstat read readv write writev htonl memset htons connect \\\n@@ -755,6 +801,26 @@ if test \"x${COMPILE_JNI}\" = xyes; then\n \n     AC_SUBST(PLUGIN_DIR, $HOME/.mozilla/plugins/)\n   fi\n+\n+  dnl Check for GNU MP library and header file\n+  dnl for GNU MP versions >= 4.2 use __gmpz_combit; otherwise look for\n+  dnl __gmpz_mul_si for earlier versions (>= 3.1).\n+  dnl IMPORTANT: if you decide to look for __gmpz_combit, don't forget to\n+  dnl change the name of the corresponding ac_ variable on lines 860...\n+  if test \"x${COMPILE_GMP}\" = xyes; then\n+    AC_CHECK_LIB(gmp, __gmpz_mul_si,\n+      [GMP_CFLAGS=-I/usr/include\n+       GMP_LIBS=-lgmp ],\n+      [GMP_CFLAGS=\n+       GMP_LIBS= ])\n+    AC_SUBST(GMP_CFLAGS)\n+    AC_SUBST(GMP_LIBS)\n+\n+    AC_CHECK_HEADERS([gmp.h])\n+  fi\n+\n+else\n+  COMPILE_GMP=no\n fi\n \n if test \"x${REGENERATE_JNI_HEADERS}\" = xyes; then\n@@ -948,6 +1014,24 @@ esac;\n AM_CONDITIONAL(USE_PREBUILT_GLIBJ_ZIP, test x$use_glibj_zip = xtrue)\n AC_SUBST(PATH_TO_GLIBJ_ZIP)\n \n+if test \"x${TOOLSDIR}\" != x; then\n+  if test \"x${COMPILE_WRAPPERS}\" = xno && test \"x${enable_java_maintainer_mode}\" = xyes; then\n+    AC_PROG_JAVA\n+  fi\n+  if test \"x${COMPILE_GJDOC}\" = xyes; then\n+    AC_LIB_ANTLR\n+    if test \"x${REGENERATE_GJDOC_PARSER}\" = xyes; then\n+dnl GCJ LOCAL\n+      if test \"x${enable_java_maintainer_mode}\" = xyes; then\n+        AC_PROG_JAVA\n+\tAC_PROG_ANTLR(2,7,1)\n+      fi\n+dnl END GCJ LOCAL\n+    fi\n+  fi\n+fi\n+\n+\n # Check for javac if we need to build either the class library,\n # the examples or the tools\n if test \"x${use_glibj_zip}\" = xfalse || \\\n@@ -1011,6 +1095,25 @@ dnl Add the default preference peer\n dnl -----------------------------------------------------------\n AC_SUBST(DEFAULT_PREFS_PEER)\n \n+dnl -----------------------------------------------------------\n+dnl Set GNU MP related params\n+dnl -----------------------------------------------------------\n+WANT_NATIVE_BIG_INTEGER=false\n+if test \"x${COMPILE_GMP}\" = xyes; then\n+  if test \"x${ac_cv_lib_gmp___gmpz_mul_si}\" = xyes; then\n+    if test \"x${ac_cv_header_gmp_h}\" = xyes; then\n+      WANT_NATIVE_BIG_INTEGER=true\n+      AC_DEFINE(WITH_GNU_MP, 1, [Define to 1 if gmp is usable])\n+    else\n+      COMPILE_GMP=no\n+    fi\n+  else\n+    COMPILE_GMP=no\n+  fi\n+fi\n+AC_SUBST(WANT_NATIVE_BIG_INTEGER)\n+AM_CONDITIONAL(CREATE_GMPBI_LIBRARY, test \"x${COMPILE_GMP}\" = xyes)\n+\n dnl -----------------------------------------------------------\n dnl output files\n dnl -----------------------------------------------------------\n@@ -1032,6 +1135,7 @@ native/jni/Makefile\n native/jni/classpath/Makefile\n native/jni/java-io/Makefile\n native/jni/java-lang/Makefile\n+native/jni/java-math/Makefile\n native/jni/java-net/Makefile\n native/jni/java-nio/Makefile\n native/jni/java-util/Makefile\n@@ -1087,6 +1191,12 @@ AC_CONFIG_COMMANDS([grmic],[chmod 755 tools/grmic])\n AC_CONFIG_COMMANDS([gjavah], [chmod 755 tools/gjavah])\n ])\n \n+if test \"x${COMPILE_GJDOC}\" = xyes\n+then\n+AC_CONFIG_FILES([tools/gjdoc])\n+AC_CONFIG_COMMANDS([gjdoc], [chmod 755 tools/gjdoc])\n+fi\n+\n AC_CONFIG_COMMANDS([gen-classlist],[chmod 755 lib/gen-classlist.sh])\n AC_CONFIG_COMMANDS([copy-vmresources],[chmod 755 lib/copy-vmresources.sh])\n AC_OUTPUT"}, {"sha": "aca543158596fd5165dcb427d19ba7e0168f577b", "filename": "libjava/classpath/doc/Makefile.am", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fdoc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fdoc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2FMakefile.am?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -28,7 +28,8 @@ TOOLS_MANFILES = \\\n \tgrmid.1 \\\n \tgrmiregistry.1 \\\n \tgserialver.1 \\\n-\tgtnameserv.1\n+\tgtnameserv.1 \\\n+\tgjdoc.1\n \n POD2MAN = pod2man --center=\"GNU\" --release=\"$(VERSION)\"\n TEXI2POD = perl $(srcdir)/texi2pod.pl\n@@ -42,7 +43,7 @@ STAMP = echo timestamp >\n \n .INTERMEDIATE: gappletviewer.pod gjarsigner.pod gjar.pod gjavah.pod \\\n \tgkeytool.pod gnative2ascii.pod gorbd.pod grmid.pod grmiregistry.pod \\\n-\tgserialver.pod gtnameserv.pod gcjh.pod\n+\tgserialver.pod gtnameserv.pod gcjh.pod gjdoc.pod\n \n gappletviewer.pod: $(srcdir)/cp-tools.texinfo\n \t-$(TEXI2POD) -D gappletviewer < $< > $@\n@@ -84,6 +85,12 @@ gserialver.pod: $(srcdir)/cp-tools.texinfo\n gtnameserv.pod: $(srcdir)/cp-tools.texinfo\n \t-$(TEXI2POD) -D gtnameserv < $< > $@\n \n+gjdoc.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gjdoc < $< > $@\n+\n+# GCJ LOCAL CHANGE\n+#CLEANFILES = $(TOOLS_MANFILES)\n+\n # GCJ LOCAL CHANGE\n # The following commands allow us to release tarballs with the man pages\n # and info documentation prebuilt.  This feature is enabled via \n@@ -102,6 +109,7 @@ stamp-geninsrc: $(TOOLS_MANFILES) cp-tools.info\n \t-cp -p gjar.1 $(srcdir)/gjar.1\n \t-cp -p gjarsigner.1 $(srcdir)/gjarsigner.1\n \t-cp -p gjavah.1 $(srcdir)/gjavah.1\n+\t-cp -p gjdoc.1 $(srcdir)/gjdoc.1\n \t-cp -p gkeytool.1 $(srcdir)/gkeytool.1\n \t-cp -p gnative2ascii.1 $(srcdir)/gnative2ascii.1\n \t-cp -p gorbd.1 $(srcdir)/gorbd.1\n@@ -118,6 +126,7 @@ MAINTAINERCLEANFILES = \\\n \t\t$(srcdir)/gjar.1 \\\n \t\t$(srcdir)/gjarsigner.1 \\\n \t\t$(srcdir)/gjavah.1 \\\n+\t\t$(srcdir)/gjdoc.1 \\\n \t\t$(srcdir)/gkeytool.1 \\\n \t\t$(srcdir)/gnative2ascii.1 \\\n \t\t$(srcdir)/gorbd.1 \\"}, {"sha": "e2bfd66d2a74267aef6f66c75df5143285760e22", "filename": "libjava/classpath/doc/Makefile.in", "status": "modified", "additions": 34, "deletions": 4, "changes": 38, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fdoc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2FMakefile.in?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -50,6 +50,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../ltsugar.m4 \\\n \t$(top_srcdir)/../../ltversion.m4 \\\n \t$(top_srcdir)/../../lt~obsolete.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_antlr.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_java.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_java_works.m4 \\\n \t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n \t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n@@ -97,6 +100,8 @@ ACLOCAL = @ACLOCAL@\n AMDEP_FALSE = @AMDEP_FALSE@\n AMDEP_TRUE = @AMDEP_TRUE@\n AMTAR = @AMTAR@\n+ANTLR = @ANTLR@\n+ANTLR_JAR = @ANTLR_JAR@\n AR = @AR@\n AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n@@ -128,6 +133,12 @@ CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n CREATE_GCONF_PEER_LIBRARIES_FALSE = @CREATE_GCONF_PEER_LIBRARIES_FALSE@\n CREATE_GCONF_PEER_LIBRARIES_TRUE = @CREATE_GCONF_PEER_LIBRARIES_TRUE@\n+CREATE_GJDOC_FALSE = @CREATE_GJDOC_FALSE@\n+CREATE_GJDOC_PARSER_FALSE = @CREATE_GJDOC_PARSER_FALSE@\n+CREATE_GJDOC_PARSER_TRUE = @CREATE_GJDOC_PARSER_TRUE@\n+CREATE_GJDOC_TRUE = @CREATE_GJDOC_TRUE@\n+CREATE_GMPBI_LIBRARY_FALSE = @CREATE_GMPBI_LIBRARY_FALSE@\n+CREATE_GMPBI_LIBRARY_TRUE = @CREATE_GMPBI_LIBRARY_TRUE@\n CREATE_GSTREAMER_PEER_LIBRARIES_FALSE = @CREATE_GSTREAMER_PEER_LIBRARIES_FALSE@\n CREATE_GSTREAMER_PEER_LIBRARIES_TRUE = @CREATE_GSTREAMER_PEER_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n@@ -166,11 +177,12 @@ ERROR_CFLAGS = @ERROR_CFLAGS@\n EXAMPLESDIR = @EXAMPLESDIR@\n EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n-FASTJAR = @FASTJAR@\n FGREP = @FGREP@\n FIND = @FIND@\n FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n+GCJ_JAVAC_FALSE = @GCJ_JAVAC_FALSE@\n+GCJ_JAVAC_TRUE = @GCJ_JAVAC_TRUE@\n GCONF_CFLAGS = @GCONF_CFLAGS@\n GCONF_LIBS = @GCONF_LIBS@\n GDK_CFLAGS = @GDK_CFLAGS@\n@@ -180,6 +192,8 @@ GENINSRC_TRUE = @GENINSRC_TRUE@\n GJDOC = @GJDOC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n+GMP_CFLAGS = @GMP_CFLAGS@\n+GMP_LIBS = @GMP_LIBS@\n GREP = @GREP@\n GSTREAMER_BASE_CFLAGS = @GSTREAMER_BASE_CFLAGS@\n GSTREAMER_BASE_LIBS = @GSTREAMER_BASE_LIBS@\n@@ -201,7 +215,10 @@ INSTALL_GLIBJ_ZIP_TRUE = @INSTALL_GLIBJ_ZIP_TRUE@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+JAR = @JAR@\n+JAVA = @JAVA@\n JAVAC = @JAVAC@\n+JAVAC_IS_GCJ = @JAVAC_IS_GCJ@\n JAVAC_MEM_OPT = @JAVAC_MEM_OPT@\n JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n JAVA_MAINTAINER_MODE_FALSE = @JAVA_MAINTAINER_MODE_FALSE@\n@@ -267,8 +284,10 @@ USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n USE_PREBUILT_GLIBJ_ZIP_TRUE = @USE_PREBUILT_GLIBJ_ZIP_TRUE@\n VERSION = @VERSION@\n-VM_BINARY = @VM_BINARY@\n+WANT_NATIVE_BIG_INTEGER = @WANT_NATIVE_BIG_INTEGER@\n WARNING_CFLAGS = @WARNING_CFLAGS@\n+WITH_JAR_FALSE = @WITH_JAR_FALSE@\n+WITH_JAR_TRUE = @WITH_JAR_TRUE@\n XML_CFLAGS = @XML_CFLAGS@\n XML_LIBS = @XML_LIBS@\n XSLT_CFLAGS = @XSLT_CFLAGS@\n@@ -279,6 +298,7 @@ X_EXTRA_LIBS = @X_EXTRA_LIBS@\n X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZIP = @ZIP@\n+ac_ct_ANTLR = @ac_ct_ANTLR@\n ac_ct_AR = @ac_ct_AR@\n ac_ct_CC = @ac_ct_CC@\n ac_ct_CXX = @ac_ct_CXX@\n@@ -338,6 +358,7 @@ target_cpu = @target_cpu@\n target_os = @target_os@\n target_vendor = @target_vendor@\n toolexeclibdir = @toolexeclibdir@\n+uudecode = @uudecode@\n vm_classes = @vm_classes@\n SUBDIRS = api\n EXTRA_DIST = README.jaxp texi2pod.pl $(man_MANS)\n@@ -356,13 +377,17 @@ TOOLS_MANFILES = \\\n \tgrmid.1 \\\n \tgrmiregistry.1 \\\n \tgserialver.1 \\\n-\tgtnameserv.1\n+\tgtnameserv.1 \\\n+\tgjdoc.1\n \n POD2MAN = pod2man --center=\"GNU\" --release=\"$(VERSION)\"\n TEXI2POD = perl $(srcdir)/texi2pod.pl\n STAMP = echo timestamp >\n @GENINSRC_FALSE@STAMP_GENINSRC = \n \n+# GCJ LOCAL CHANGE\n+#CLEANFILES = $(TOOLS_MANFILES)\n+\n # GCJ LOCAL CHANGE\n # The following commands allow us to release tarballs with the man pages\n # and info documentation prebuilt.  This feature is enabled via \n@@ -374,6 +399,7 @@ MAINTAINERCLEANFILES = \\\n \t\t$(srcdir)/gjar.1 \\\n \t\t$(srcdir)/gjarsigner.1 \\\n \t\t$(srcdir)/gjavah.1 \\\n+\t\t$(srcdir)/gjdoc.1 \\\n \t\t$(srcdir)/gkeytool.1 \\\n \t\t$(srcdir)/gnative2ascii.1 \\\n \t\t$(srcdir)/gorbd.1 \\\n@@ -892,7 +918,7 @@ docs: cp-hacking.ps cp-vmintegration.ps cp-tools.ps $(TOOLS_MANFILES)\n \n .INTERMEDIATE: gappletviewer.pod gjarsigner.pod gjar.pod gjavah.pod \\\n \tgkeytool.pod gnative2ascii.pod gorbd.pod grmid.pod grmiregistry.pod \\\n-\tgserialver.pod gtnameserv.pod gcjh.pod\n+\tgserialver.pod gtnameserv.pod gcjh.pod gjdoc.pod\n \n gappletviewer.pod: $(srcdir)/cp-tools.texinfo\n \t-$(TEXI2POD) -D gappletviewer < $< > $@\n@@ -934,13 +960,17 @@ gserialver.pod: $(srcdir)/cp-tools.texinfo\n gtnameserv.pod: $(srcdir)/cp-tools.texinfo\n \t-$(TEXI2POD) -D gtnameserv < $< > $@\n \n+gjdoc.pod: $(srcdir)/cp-tools.texinfo\n+\t-$(TEXI2POD) -D gjdoc < $< > $@\n+\n all-local: $(STAMP_GENINSRC) \n \n stamp-geninsrc: $(TOOLS_MANFILES) cp-tools.info\n \t-cp -p gappletviewer.1 $(srcdir)/gappletviewer.1\n \t-cp -p gjar.1 $(srcdir)/gjar.1\n \t-cp -p gjarsigner.1 $(srcdir)/gjarsigner.1\n \t-cp -p gjavah.1 $(srcdir)/gjavah.1\n+\t-cp -p gjdoc.1 $(srcdir)/gjdoc.1\n \t-cp -p gkeytool.1 $(srcdir)/gkeytool.1\n \t-cp -p gnative2ascii.1 $(srcdir)/gnative2ascii.1\n \t-cp -p gorbd.1 $(srcdir)/gorbd.1"}, {"sha": "2256739d19388a15db322f3ff0868a029524dbaf", "filename": "libjava/classpath/doc/api/Makefile.in", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fapi%2FMakefile.in?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -51,6 +51,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../ltsugar.m4 \\\n \t$(top_srcdir)/../../ltversion.m4 \\\n \t$(top_srcdir)/../../lt~obsolete.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_antlr.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_java.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_java_works.m4 \\\n \t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n \t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n@@ -74,6 +77,8 @@ ACLOCAL = @ACLOCAL@\n AMDEP_FALSE = @AMDEP_FALSE@\n AMDEP_TRUE = @AMDEP_TRUE@\n AMTAR = @AMTAR@\n+ANTLR = @ANTLR@\n+ANTLR_JAR = @ANTLR_JAR@\n AR = @AR@\n AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n@@ -105,6 +110,12 @@ CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n CREATE_GCONF_PEER_LIBRARIES_FALSE = @CREATE_GCONF_PEER_LIBRARIES_FALSE@\n CREATE_GCONF_PEER_LIBRARIES_TRUE = @CREATE_GCONF_PEER_LIBRARIES_TRUE@\n+CREATE_GJDOC_FALSE = @CREATE_GJDOC_FALSE@\n+CREATE_GJDOC_PARSER_FALSE = @CREATE_GJDOC_PARSER_FALSE@\n+CREATE_GJDOC_PARSER_TRUE = @CREATE_GJDOC_PARSER_TRUE@\n+CREATE_GJDOC_TRUE = @CREATE_GJDOC_TRUE@\n+CREATE_GMPBI_LIBRARY_FALSE = @CREATE_GMPBI_LIBRARY_FALSE@\n+CREATE_GMPBI_LIBRARY_TRUE = @CREATE_GMPBI_LIBRARY_TRUE@\n CREATE_GSTREAMER_PEER_LIBRARIES_FALSE = @CREATE_GSTREAMER_PEER_LIBRARIES_FALSE@\n CREATE_GSTREAMER_PEER_LIBRARIES_TRUE = @CREATE_GSTREAMER_PEER_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n@@ -143,11 +154,12 @@ ERROR_CFLAGS = @ERROR_CFLAGS@\n EXAMPLESDIR = @EXAMPLESDIR@\n EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n-FASTJAR = @FASTJAR@\n FGREP = @FGREP@\n FIND = @FIND@\n FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n+GCJ_JAVAC_FALSE = @GCJ_JAVAC_FALSE@\n+GCJ_JAVAC_TRUE = @GCJ_JAVAC_TRUE@\n GCONF_CFLAGS = @GCONF_CFLAGS@\n GCONF_LIBS = @GCONF_LIBS@\n GDK_CFLAGS = @GDK_CFLAGS@\n@@ -157,6 +169,8 @@ GENINSRC_TRUE = @GENINSRC_TRUE@\n GJDOC = @GJDOC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n+GMP_CFLAGS = @GMP_CFLAGS@\n+GMP_LIBS = @GMP_LIBS@\n GREP = @GREP@\n GSTREAMER_BASE_CFLAGS = @GSTREAMER_BASE_CFLAGS@\n GSTREAMER_BASE_LIBS = @GSTREAMER_BASE_LIBS@\n@@ -178,7 +192,10 @@ INSTALL_GLIBJ_ZIP_TRUE = @INSTALL_GLIBJ_ZIP_TRUE@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+JAR = @JAR@\n+JAVA = @JAVA@\n JAVAC = @JAVAC@\n+JAVAC_IS_GCJ = @JAVAC_IS_GCJ@\n JAVAC_MEM_OPT = @JAVAC_MEM_OPT@\n JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n JAVA_MAINTAINER_MODE_FALSE = @JAVA_MAINTAINER_MODE_FALSE@\n@@ -244,8 +261,10 @@ USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n USE_PREBUILT_GLIBJ_ZIP_TRUE = @USE_PREBUILT_GLIBJ_ZIP_TRUE@\n VERSION = @VERSION@\n-VM_BINARY = @VM_BINARY@\n+WANT_NATIVE_BIG_INTEGER = @WANT_NATIVE_BIG_INTEGER@\n WARNING_CFLAGS = @WARNING_CFLAGS@\n+WITH_JAR_FALSE = @WITH_JAR_FALSE@\n+WITH_JAR_TRUE = @WITH_JAR_TRUE@\n XML_CFLAGS = @XML_CFLAGS@\n XML_LIBS = @XML_LIBS@\n XSLT_CFLAGS = @XSLT_CFLAGS@\n@@ -256,6 +275,7 @@ X_EXTRA_LIBS = @X_EXTRA_LIBS@\n X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZIP = @ZIP@\n+ac_ct_ANTLR = @ac_ct_ANTLR@\n ac_ct_AR = @ac_ct_AR@\n ac_ct_CC = @ac_ct_CC@\n ac_ct_CXX = @ac_ct_CXX@\n@@ -315,6 +335,7 @@ target_cpu = @target_cpu@\n target_os = @target_os@\n target_vendor = @target_vendor@\n toolexeclibdir = @toolexeclibdir@\n+uudecode = @uudecode@\n vm_classes = @vm_classes@\n @CREATE_API_DOCS_TRUE@noinst_DATA = html\n sourcepath = $(top_builddir):$(top_srcdir):$(top_srcdir)/vm/reference:$(top_srcdir)/external/w3c_dom:$(top_srcdir)/external/sax:$(top_srcdir)/external/jsr166"}, {"sha": "f7a2d245e7dd4e6748373cc9238e1a433fab093c", "filename": "libjava/classpath/doc/cp-tools.texinfo", "status": "modified", "additions": 1413, "deletions": 1, "changes": 1414, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fdoc%2Fcp-tools.texinfo", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fdoc%2Fcp-tools.texinfo", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fdoc%2Fcp-tools.texinfo?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -134,6 +134,59 @@ Other Tools\n * rmid Tool::                  RMI activation daemon\n * rmiregistry Tool::           Remote object registry\n * tnameserv Tool::             Naming service\n+* gjdoc Tool::                 Documenation generator tool.\n+\n+Generating HTML Documentation\n+\n+* Invoking the Standard Doclet::   How to generate HTML documentation.\n+* Invoking a Custom Doclet::       How to run third-party and other \n+                                   built-in Doclets.\n+\n+* Option Summary by Type::         Brief list of all options, grouped by type.\n+* Gjdoc Option Summary::           List of all options accepted by Gjdoc.\n+\n+* Source Set Options::      Select the set of source codes to run Gjdoc on.\n+* Source Format Options::   Specify the format of the source codes to document.\n+\n+* Interlinking Options::    Connection your documentation with other projects.\n+* Output Control Options::  Specify the target directory and locale, and more.\n+* Generation Options::      Select which pieces of information to generate.\n+* Decoration Options::      Add or modify some titles, headers and footers or\n+                            override/amend static resources like stylesheets.\n+* Taglet Options::          Define your own javadoc @@tags.\n+\n+* Virtual Machine Options:: Controlling the kind of output:\n+                            an executable, object files, assembler files,\n+                            or preprocessed source.\n+* Verbosity Options::\n+* Doclet Options::\n+\n+* Other Doclets::           Generating Other Output Types. \n+\n+* Built-in Doclets::        Using the Built-in Doclets.\n+* Using XmlDoclet::\n+* Using TexiDoclet::\n+* Using IspellDoclet::\n+* Using DebugDoclet::\n+\n+* Third-party Doclets::     Using Third-Party Doclets.\n+* DocBook Doclet::\n+* PDFDoclet::\n+* JUnitDoclet::\n+\n+* Gjdoc Concepts::          Advanced Concepts.\n+* Writing Doclets::\n+\n+* Doclet Invocation Interface::    Implementing the Doclet Invocation Interface\n+* Using AbstractDoclet::           Deriving Your Doclet from AbstractDoclet.\n+* GNU Doclet SPI::                 Preparing the GNU Doclet Service Provider\n+                                   Interface.\n+\n+* Taglets::                        Adding Custom Tags to the Documentation.\n+* XHTML Fragments::                Well-Formed Documentation Fragments.\n+* First Sentence Detector::        How Gjdoc Determines where the First\n+                                   Sentence Ends.\n+* Adding Custom Resources::        Adding Images and Other Resources.\n \n I18N Issues\n \n@@ -1229,6 +1282,7 @@ and @b{tnameserv}.\n * rmid Tool::                  RMI activation daemon\n * rmiregistry Tool::           Remote object registry\n * tnameserv Tool::             Naming service\n+* gjdoc Tool::                 A documentation generator\n @end menu\n \n @comment ----------------------------------------------------------------------\n@@ -1743,7 +1797,7 @@ java(1), @dots{}\n \n @comment ----------------------------------------------------------------------\n \n-@node tnameserv Tool, , rmiregistry Tool, Other Tools\n+@node tnameserv Tool, gjdoc Tool, rmiregistry Tool, Other Tools\n @comment node-name, next, previous, up\n @section The @command{tnameserv} Tool\n @c man title gtnameserv Naming service\n@@ -1788,6 +1842,1364 @@ java(1), @dots{}\n \n @comment ----------------------------------------------------------------------\n \n+@ignore\n+@c man begin SYNOPSIS gjdoc\n+gjdoc [@option{-sourcepath }@var{pathlist}]\n+      [@option{-all}] [@option{-subpackages }@var{pkg:pkg:@dots{}}] [@option{-exclude }@var{pkglist}]\n+      [@option{-encoding }@var{charset}] [@option{-locale }@var{name}] [@option{-source }@var{release}]\n+      [@option{-public}] [@option{-protected}] [@option{-package}] [@option{-private}] \n+      [@option{-doctitle }@var{text}] [@option{-header }@var{text}] [@option{-footer }@var{text}] [@option{-bottom }@var{text}]\n+      [@option{-link }@var{url}] [@option{-linkoffline }@var{url} @var{path}] [@option{-noqualifier }@var{pkg:pkg:@dots{}}] \n+      [@option{-tagletpath }@var{pathlist}] [@option{-taglet }@var{className}] [@option{-tag }@var{tagspec}]\n+      [@option{-use}] [@option{-linksource}] [@option{-splitindex}] [@option{-noindex}] [@option{-notree}] \n+      [@option{-version}] [@option{-author}] [@option{-nosince}] [@option{-addstylesheet }@var{file}]\n+      [@option{-d }@var{targetdir}] \n+      [@var{packages}@dots{}] [@var{sourcefiles}@dots{}] [@@@var{cmdfile}]\n+\n+gjdoc [@option{-sourcepath }@var{pathlist}]\n+      [@option{-all}] [@option{-subpackages }@var{pkg:pkg:@dots{}}] [@option{-exclude }@var{pkglist}]\n+      [@option{-encoding }@var{charset}] [@option{-locale }@var{name}] [@option{-source }@var{release}]\n+      [@option{-public}] [@option{-protected}] [@option{-package}] [@option{-private}] \n+      [@option{-docletpath }@var{pathlist}] [@option{-doclet }@var{className}]\n+      [@var{packages}@dots{}] [@var{sourcefiles}@dots{}] [@@@var{cmdfile}]\n+      [doclet options]\n+\n+gjdoc @option{--help}\n+\n+gjdoc @option{--version}\n+\n+Only the most useful options are listed here; see below for the\n+remainder.\n+@c man end\n+@end ignore\n+@c man begin SEEALSO gjdoc\n+Info entry for @file{gjdoc}.\n+@c man end\n+@c man begin BUGS gjdoc\n+Please report bugs to @w{@uref{http://savannah.gnu.org/bugs/?group=classpath}}.\n+@c man end\n+@c man begin AUTHOR gjdoc\n+Julian Scheid\n+@c man end\n+\n+@node gjdoc Tool, , tnameserv Tool, Other Tools\n+@chapter Generating HTML Documentation\n+@cindex Gjdoc command options\n+@cindex command options\n+@cindex options, Gjdoc command\n+\n+@c man begin DESCRIPTION gjdoc\n+Gjdoc can be used in two ways: as a stand-alone documentation tool, or\n+as a driver for a user-specified Doclet. @xref{Other Doclets}.\n+\n+In the default mode, Gjdoc will use the Standard Doclet\n+@samp{HtmlDoclet} to generate a set of HTML pages.  The canonical\n+usage is:\n+\n+@smallexample\n+gjdoc -s src/java/ -all -d api-docs/\n+@end smallexample\n+\n+Here, @samp{src/java/} is the root of your source code class\n+hierarchy, @option{-all} means that all valid Java files found under\n+this root directory should be processed, and @samp{api-docs/} is the\n+directory where the generated documentation should be placed.\n+\n+To learn more about running Doclets other than the Standard Doclet,\n+refer to the manual.  @xref{Invoking a Custom Doclet}.\n+\n+@menu\n+* Invoking the Standard Doclet::   How to generate HTML documentation.\n+* Invoking a Custom Doclet::       How to run third-party and other \n+                                   built-in Doclets.\n+\n+* Option Summary by Type::         Brief list of all options, grouped by type.\n+* Gjdoc Option Summary::           List of all options accepted by Gjdoc.\n+\n+* Source Set Options::      Select the set of source codes to run Gjdoc on.\n+* Source Format Options::   Specify the format of the source codes to document.\n+\n+* Interlinking Options::    Connection your documentation with other projects.\n+* Output Control Options::  Specify the target directory and locale, and more.\n+* Generation Options::       Select which pieces of information to generate.\n+* Decoration Options::      Add or modify some titles, headers and footers or\n+                              override/amend static resources like stylesheets.\n+* Taglet Options::          Define your own javadoc @@tags\n+\n+* Virtual Machine Options::\n+* Verbosity Options::\n+* Doclet Options::\n+\n+* Other Doclets::                  Generating Other Output Types\n+* Gjdoc Concepts::                 Advanced Concepts\n+\n+@end menu\n+\n+@c man end\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Invoking the Standard Doclet, Invoking a Custom Doclet, , gjdoc Tool\n+@section Invoking the Standard Doclet\n+@cindex Gjdoc command options\n+@cindex command options\n+@cindex options, Gjdoc command\n+\n+Running the Gjdoc Standard Doclet @samp{HtmlDoclet} is the default\n+mode of operation for Gjdoc.  This section lists the command line\n+options you can specify in this mode.  It doesn't distinguish between\n+general Gjdoc options and options specific to the Standard Doclet.\n+\n+If you want to learn which options are accepted when Gjdoc is used as\n+a doclet driver, @xref{Invoking a Custom Doclet}.\n+\n+@menu\n+* Source Set Options::      Select the set of source codes to run Gjdoc on.\n+* Source Format Options::   Specify the format of the source codes to document.\n+\n+* Output Control Options::  Specify the target directory and locale, and more.\n+* Generation Options::       Select which pieces of information to generate.\n+* Decoration Options::      Add or modify some titles, headers and footers or\n+                              override/amend static resources like stylesheets.\n+* Taglet Options::          Define your own javadoc @@tags\n+\n+* Virtual Machine Options::\n+* Doclet Options::\n+\n+@end menu\n+\n+@c man begin OPTIONS gjdoc\n+\n+@node Option Summary by Type, Gjdoc Option Summary, Invoking a Custom Doclet, gjdoc Tool\n+@section Option Summary by Type\n+\n+Here is a summary of all the options of both Gjdoc and the Standard\n+Doclet, grouped by type.  Explanations are in the following sections.\n+\n+@table @emph\n+@item Source Set Options\n+@xref{Source Set Options,,Options For Specifying the Source Files To Operate on}.\n+@gccoptlist{-sourcepath @var{pathlist}  -subpackages @var{pkglist}  -exclude @var{pkglist}}\n+\n+@item Source Format Options\n+@xref{Source Format Options,,Options For Specifying the Source Format}.\n+@gccoptlist{-source @var{release}  -encoding @var{encoding}  -breakiterator}\n+\n+@item Interlinking Options\n+@xref{Interlinking Options,,Options For Specifying the Source Files To Operate on}.\n+@gccoptlist{-link @var{url}  -linkoffline @var{url} @var{file}  -noqualifier @var{pkg:pkg:...}}\n+\n+@item Generation Options\n+@xref{Generation Options,,Options Controlling What is Included in the Output}.\n+@gccoptlist{-author  -licensetext  -use  -version  -splitindex  -noindex\n+ -nodeprecated  -nodeprecatedlist  -nohelp  -nonavbar\n+ -nosince  -notree  -public  -protected  -package  -private\n+ -docfilessubdirs  -excludedocfilessubdir @var{dirname}\n+ -linksource}\n+\n+@item Output Options\n+@xref{Generation Options,,Options Controlling the Output}.\n+@gccoptlist{-d  -locale @var{name}  -charset @var{charset}  -docencoding @var{charset}\n+ -validhtml  -baseurl @var{url}}\n+\n+@item Decoration Options\n+@gccoptlist{-windowtitle @var{text}  -doctitle @var{text}  -title @var{text}  \n+ -header @var{text}  -footer @var{text}  -bottom @var{text}\n+ -helpfile @var{file}  -stylesheetfile @var{file}  -addstylesheet @var{file}\n+ -group @var{groupheading} @var{pkgpattern:pkgpattern:@dots{}}}\n+\n+@item Taglet Options\n+@xref{Taglet Options,,Options For Specifying user-defined Taglets}.\n+@gccoptlist{-tagletpath  -taglet @var{classname}  -tag @var{tagspec}}\n+\n+@item Doclet Options\n+@xref{Doclet Options,,Options For Specifying the Doclet to use}.\n+@gccoptlist{-docletpath  -doclet @var{classname}}\n+\n+@item Verbosity Options\n+@xref{Verbosity Options,,Options Controlling Gjdoc Behavior}.\n+@gccoptlist{-quiet  -verbose}\n+\n+@item Virtual Machine Options\n+@xref{Virtual Machine Options,,Options Controlling Gjdoc Behavior}.\n+@gccoptlist{-classpath}  @gccoptlist{-bootclasspath}  @gccoptlist{-J}@var{vmopt}\n+\n+@end table\n+\n+@menu\n+* Virtual Machine Options::     Controlling the kind of output:\n+                        an executable, object files, assembler files,\n+                        or preprocessed source.\n+@end menu\n+\n+@node Source Set Options, Source Format Options, Gjdoc Option Summary, gjdoc Tool\n+@section Selecting which Source Files to Process\n+\n+@table @gcctabopt\n+@item -s @var{pathlist}\n+@item -sourcepath @var{pathlist}\n+Look for source files in the specified directory or directories.\n+\n+@var{pathlist} should be one or more directory paths separated by your\n+platform's path separator (usually @samp{:} or @samp{;}).\n+\n+If this option is not given, @command{gjdoc} will look for source\n+files in the current directory.\n+\n+The directories specified should be root directories in terms of the\n+Java package system.  For example, if you want to generate\n+documentation for classes in package @samp{foo.bar}, you must specify\n+the directory containing the top-level @samp{@file{foo}}\n+sub-directory, not the directory @samp{@file{foo/bar/}} in which the\n+Java source files reside.\n+\n+The short-hand alias @option{-s} is specific to @command{gjdoc} and\n+not compatible to Sun @command{javadoc}.\n+\n+@item -all\n+@emph{[EXPERIMENTAL]}\n+Process all valid Java source files found in the directories listed in\n+the source path and their sub-directories.\n+\n+This is an option specific to @command{gjdoc} and not compatible to\n+Sun @command{javadoc}.\n+\n+@item -subpackages @var{pkg:pkg:@dots{}}\n+Process the classes in the given Java packages and all sub-packages,\n+recursively.  Note that multiple package names must be separated with\n+colons instead of whitespace.\n+\n+@item -exclude @var{pkg:pkg:@dots{}}\n+Do not process classes in the given Java packages and all\n+sub-packages, recursively.  This option can be used in conjunction\n+with @option{-all} or @option{-subpackages} in order to exclude\n+individual packages or package sub-trees from the output.\n+\n+@item @var{packages}@dots{}\n+Process all classes in the given Java packages.\n+\n+@item @var{sourcefiles}@dots{}\n+Process the classes in the given Java source files.\n+@end table\n+\n+@node Source Format Options, Interlinking Options, Source Set Options, gjdoc Tool\n+@section Specifying the Format of Input Files\n+\n+@table @gcctabopt\n+@item -source @var{release}\n+Assume that the source files are targeted at the given release of the\n+Java platform.\n+\n+@var{release} should be the version number of a Java platform release\n+in the format MAJOR.MINOR, for example @samp{1.4}.\n+\n+This option is currently ignored except that an error is raised if a\n+release number other than @samp{1.2}, @samp{1.3} or @samp{1.4} is\n+specified.\n+\n+@item -encoding @var{charset}\n+Assume that the source files are encoded using @var{charset}.\n+\n+Examples for @var{charset} are @samp{US-ASCII}, @samp{ISO-8859-1} or\n+@samp{UTF-8}.\n+\n+The semantics of @var{charset} are identical to those of @samp{java.nio.charset.Charset.forName(String)}.\n+\n+@item -breakiterator\n+Use the locale's java.text.BreakIterator instead of the internal\n+first sentence detector.\n+\n+By default, @command{gjdoc} uses an internal algorithm to determine\n+where a sentence ends. When this option is given, it will instead use\n+the @samp{java.text.BreakIterator} instance for the locale given with\n+@option{-locale} (or the default locale).\n+\n+This option should be specified when applying @command{gjdoc} to\n+source code commented in a non-latin language for which the default\n+first sentence detector does not work. For all other cases, the\n+default (do not use BreakIterator) produces better results at the time\n+of this writing.\n+@end table\n+\n+@node Interlinking Options, Output Control Options, Source Format Options, gjdoc Tool\n+@section Interlinking with other Documentation Sets\n+\n+@table @gcctabopt\n+@item -link @var{url}\n+\n+Create hyperlinks to another documentation set.\n+\n+By default, @command{gjdoc} will only create hyperlinks to classes in\n+the source set.  Use this option to additionally create hyperlinks to\n+classes covered by the specified documentation set.\n+\n+@var{url} should be the root URL of the other documentation set. For\n+example, to add hyperlinks to GNU Classpath, specify the following:\n+\n+@smallexample\n+-link http://developer.classpath.org/doc/\n+@end smallexample\n+\n+The @option{-link} option can be specified multiple times.\n+\n+Note that specifying the @option{-link} option will cause an HTTP\n+access every time gjdoc is invoked. You can use @option{-linkoffline}\n+instead to avoid this access.\n+\n+@item -linkoffline @var{url} @var{file}\n+\n+Create hyperlinks to another documentation set which is also present\n+on the local file system.\n+\n+This option works exactly like @option{-link}, except that it accesses\n+the local file system instead of the network for determining which\n+classes are covered by the linked documentation set.\n+\n+When using @option{-linkoffline} the remote documentation set is not\n+accessed at all, which can significantly speed up generation time\n+depending on your network connection.  The generated hyperlinks to the\n+documentation set however refer to the remote set, not to the local\n+one, so that you can distribute the documentation without any further\n+dependencies.\n+\n+The @option{-linkoffline} option can be specified multiple times.\n+\n+@item -noqualifier @var{pkg:pkg:@dots{}}\n+\n+Do not qualify names of classes in the given packages with their\n+package name.\n+\n+By default, a class name is displayed unqualified only if the class is\n+part of the source set or a linked documentation set, and qualified\n+with the name of its containing package if it is not. You can use this\n+option to force unqualified names for classes even if they are not\n+part of the documentation set.\n+\n+For example, usually a reference to the String class is represented\n+fully-qualified as @samp{java.lang.String} (unless you link to the\n+appropriate documentation set using @option{-link}) because it isn't\n+part of the documentation set.  You can specify @samp{-noqualifier\n+java.lang} to render the same references just as @samp{String}.\n+\n+Note that for all unqualified class names, a tooltip is provided when\n+you place your mouse pointer over it in the HTML documentation.\n+\n+@item -noqualifier @samp{all}\n+Omit package name qualifier from all class names.\n+\n+Specify this option to omit package name qualifiers altogether,\n+\n+@end table\n+\n+@node Generation Options, Decoration Options, Output Control Options, gjdoc Tool\n+@section Selecting which Information to Generate\n+\n+@table @gcctabopt\n+@item -public\n+Only include public members of public classes in the output.  By\n+default, protected class members are included as well.\n+\n+@item -protected\n+\n+Include public or protected members of public classes in the output.\n+This is the default.\n+\n+@item -package\n+\n+Include public, protected and package-private members of public and\n+package-private classes.\n+\n+@item -private\n+\n+Include all classes and class members regardless of their access\n+level.\n+\n+@item -splitindex\n+Generate one index page per letter instead of a single, monolithic\n+index page.\n+\n+By default, the index created by the Standard Doclet contains all\n+entries on a single page.  This is fine for small documentation sets,\n+but for large sets you should specify this option.\n+\n+@item -nosince\n+Ignore @samp{@@since} tags in javadoc comments.\n+\n+By default, the generated output contains sections listing the version\n+of your API since which the package, class or class member in question\n+exists when this tag is encountered.  Specify this option to omit this\n+information.\n+\n+@item -notree\n+Do not generate any tree pages.\n+\n+By default, the generated output includes one inheritance tree per\n+package, and - if the documentation set consists of multiple packages\n+- a page with the full inheritance tree.  Specify this option to omit\n+generation of these pages.\n+\n+@item -noindex\n+Do not output the alphabetical index.\n+\n+By default, gjdoc generates an alphabetical index of all program\n+elements in the documentation set (packages, classes, inner classes,\n+constructors, methods, and fields).  Specify this option to omit this\n+information.\n+\n+@item -nohelp\n+Do not generate the help page.\n+\n+This option is currently ignored as the Standard Doclet doesn't\n+provide a help page.\n+\n+@item -nodeprecated\n+Do not output inline information about deprecated packages, classes or\n+class members.\n+\n+By default, the Standard Doclet adds a highlighted paragraph with\n+deprecation information to the description of each deprecated program\n+element.  Specify this option to omit this information.\n+\n+@item -nodeprecatedlist\n+Do not output the summary page for deprecated API elements.\n+\n+By default, the Standard Doclet generates a page listing all\n+deprecated API elements along with a deprecation description which\n+usually includes the reason for deprecation and possible\n+alternatives.  Specify this option to omit this information.\n+\n+@item -nonavbar\n+Do not output the navigation bar, header, and footer.\n+\n+By default, each output page is equipped with a top navigation bar\n+(which may include a user-specified header) and a bottom navigation\n+bar (which may include a user-specified footer).  Specify this option\n+to omit this decoration.\n+\n+@item -nocomment\n+\n+Omit all documentation text from the generated files and output only\n+declarations and program element relationships.\n+\n+This option is here for compatibility with @command{javadoc}.  If you\n+plan on extracting information about your project via @command{gjdoc},\n+you should consider using a different Doclet for your purposes\n+instead, for example XmlDoclet.  You could also use the Doclet API\n+directly by implementing a new Doclet.\n+\n+@item -linksource\n+\n+Generate a page with syntax-highlighted source code for each class.\n+By default, this page is not generated.\n+\n+The source code can be accessed by clicking on the button labelled\n+\"Source\" in the navigation bar, or by clicking on the name of a\n+constructor, field, method, or inner class in the detail section of a\n+class documentation page.\n+\n+@item -use\n+\n+Generate a page with cross-reference information. By default, this\n+page is not generated.\n+\n+The cross-reference information can be accessed by clicking on the\n+button labelled `Use' in the navigation bar.\n+\n+The `Use' page lists all classes/interfaces in the documentation set\n+that extend/implement the class (type) in question; fields of the\n+type; methods or constructors accepting a parameter of the type;\n+methods returning the type; and methods or constructors throwing the\n+type.\n+\n+@item -author\n+Include author information in the output.\n+\n+When specified, author information as specified using the\n+@samp{@@author} tag in javadoc comments is incorporated into the\n+output. By default, @samp{@@author} tags are ignored.\n+\n+@item -version\n+Include version information in the output.\n+\n+When specified, version information as specified using the\n+@samp{@@version} tag in javadoc comments is incorporated into the\n+output. By default, @samp{@@version} tags are ignored.\n+\n+@item -licensetext\n+\n+Assume that the first comment in each source file contains the license\n+text, and add license information to the footer of each generated\n+class page.\n+\n+This is an option specific to @command{gjdoc} and not compatible to\n+Sun @command{javadoc}.\n+\n+This option is intended for use with free and open source projects\n+where source code is typically prefixed with a boilerplate license\n+comment, when there are legal reasons for including the license in the\n+documentation.\n+\n+@item -docfilessubdirs\n+\n+Recursively copy all files in the @file{doc-files} sub-directory of each\n+package directory.\n+\n+Usually, only the files in the @file{doc-files} sub-directory are copied\n+without descending recursively.\n+\n+@xref{Adding Custom Resources}.\n+\n+@item -excludedocfilessubdir @var{name}:@var{name}:@dots{}\n+\n+Do not copy some directories directly under the @file{doc-files}\n+sub-directories when descending recursively.\n+\n+The argument to this option should be a colon-separated list of\n+directory names.\n+\n+This option only makes sense if @option{-docfilessubdirs} is also\n+specified.  In this case, any sub-directory located directly beneath a\n+@file{doc-files} directory is omitted if listed.\n+\n+@end table\n+\n+@node Taglet Options, Virtual Machine Options, Decoration Options, gjdoc Tool\n+@section Custom Documentation Tags\n+\n+@table @gcctabopt\n+@item -tagletpath @var{pathlist}\n+Search @var{pathlist} when loading subsequent Taglet classes specified\n+using @option{-taglet}.\n+\n+@var{pathlist} should be one or more paths to a directory or jar file,\n+separated by your platform's path separator (usually @samp{:} or\n+@samp{;}).\n+\n+@item -taglet @var{classname}\n+Register a Taglet.\n+\n+@var{classname} should be the fully-qualified name of a Java class\n+implementing @samp{com.sun.tools.doclets.Taglet}.\n+\n+The Taglet classes will be loaded from the classpath specified using\n+@option{-tagletpath}, from the classpath specified using\n+@option{-classpath} and from the default classpath.\n+\n+See the documentation of @samp{com.sun.tools.doclets.Taglet} for\n+further information.\n+\n+Note that for simple tags, there is also @option{-tag}.\n+\n+@item -tag @var{tagspec}\n+Register a generic Taglet.\n+\n+The format of @var{tagspec} must be @samp{<tagname>:<flags>:\"<taghead>\"}.\n+\n+@var{tagname} is the tag name to match, without the leading @@ sign. \n+\n+@var{flags} is one or more of the following characters, where each\n+character specifies a source code context in which the tag is to be\n+recognized.\n+\n+@table @gcctabopt\n+@item a  \n+all contexts\n+@item c  \n+constructors\n+@item f  \n+fields\n+@item m  \n+methods\n+@item o  \n+overview\n+@item p  \n+packages\n+@item t  \n+types (classes, interfaces, exceptions, errors)\n+@item X  \n+special character which temporarily disables the\n+Taglet altogether.\n+@end table\n+\n+@var{taghead} is the string to display in the header of the section\n+devoted to the tag in question.\n+\n+For example, to define a tag matching @samp{@@cvsid} which is to be\n+accepted in overview, package and type pages and which is labelled\n+with the header @samp{CVS ID}, you would specify:\n+\n+@smallexample\n+-tag cvsid:tpo:\"CVS ID\"\n+@end smallexample\n+\n+Let's say that a class javadoc comment contains\n+\n+@smallexample\n+@@cvsid $Id: cp-tools.texinfo,v 1.7 2008/08/13 13:32:05 jsumali Exp $\n+@end smallexample\n+\n+Then the HTML output will contain something like\n+\n+@smallexample\n+CVS ID:\n+  $Id: cp-tools.texinfo,v 1.7 2008/08/13 13:32:05 jsumali Exp $\n+@end smallexample\n+@end table\n+\n+@node Doclet Options, Other Doclets, Verbosity Options, gjdoc Tool\n+@section Running Other Doclets\n+\n+@table @gcctabopt\n+\n+@item -docletpath @var{pathlist}\n+Search @var{pathlist} when loading classes for the Doclet specified\n+using @option{-doclet}.\n+\n+@var{pathlist} should be one or more paths to a directory or jar file,\n+separated by your platform's path separator (usually @samp{:} or\n+@samp{;}).\n+\n+@item -doclet @var{className}\n+Run the specified doclet instead of the standard HtmlDoclet.\n+\n+@var{className} should be the fully-qualified name of a class which\n+has a public default constructor and contain a method with the\n+following signature:\n+\n+@smallexample\n+   import com.sun.javadoc.RootDoc;\n+   public static boolean start(RootDoc rootDoc) \n+@end smallexample\n+\n+The Doclet classes will be loaded from the classpath specified using\n+@option{-docletpath}, from the classpath specified using\n+@option{-classpath} and from the default classpath.\n+\n+The @samp{start} method should process the information exposed by the\n+Doclet API via @samp{rootDoc} and return @samp{true} on success,\n+@samp{false} on failure.\n+\n+If you are using a third-party doclet, refer to its documentation for\n+further instructions.  Note that support for third-party doclets is\n+experimental.  Please report any problems you encounter, or provide\n+feedback when successfully running third-party applets.\n+\n+This option can be specified multiple times, in which case all doclets\n+are executed with the same information tree exposed via the Doclet API\n+for each Doclet run.\n+\n+@end table\n+\n+@node Decoration Options, Taglet Options, Generation Options, gjdoc Tool\n+@section Adding Information to the Output\n+\n+@table @gcctabopt\n+@item -windowtitle @var{text}\n+Use @var{text} as the browser window title prefix.\n+\n+When specified, the browser window title for each page will be\n+prefixed with @var{text} instead of the default string @samp{Generated\n+API Documentation}.\n+\n+@var{text} should be plain text (it should not contain HTML tags).\n+\n+@item -doctitle @var{text}\n+Set the header text of the overview page to @var{text}.\n+\n+@var{text} should be a short plain text string.\n+\n+When generating documentation for a single package, specifying this\n+option forces generation of the overview page.\n+\n+@item -header @var{htmltext}\n+\n+Add @var{htmltext} to the right upper corner of every generated page.\n+@var{htmltext} is usually set to the name of the project being\n+documented.\n+\n+@item -footer @var{htmltext}\n+\n+Add @var{htmltext} to the right bottom corner of every generated page.\n+@var{htmltext} is often set to the same value as for @option{-header}.\n+\n+@item -bottom @var{htmltext}\n+\n+Add @var{htmltext} to the very bottom of every generated page,\n+spanning the whole width of the page.  When specified, @var{htmltext}\n+usually consists of a copyright notice and/or links to other project\n+pages.\n+\n+@item -addstylesheet @var{file}\n+\n+Augment the default CSS style sheets with the user-specified\n+stylesheet @var{file}.\n+\n+The given stylesheet is simply loaded by each HTML page in addition to\n+the default ones, as the last stylesheet.\n+\n+Note that the CSS cascading rules apply.  That is, your style\n+properties will only be assigned if they have a higher cascading order\n+than @command{gjdoc}'s default style.  One simple way to make sure\n+that this is the case is to declare your overrides @samp{!important}.\n+\n+See @w{@uref{http://www.w3.org/TR/REC-CSS2/cascade.html#cascading-order}}.\n+\n+@item -group @var{heading} @var{pkgwildcard}:@var{pkgwildcard}:@dots{}\n+\n+Arrange the given packages in a separate group on the overview page.\n+\n+The first argument should be a short plain text which is used as the\n+title of the package group.  The second argument should be a\n+colon-separated list of package wildcards.  The group will consist of\n+all packages in the documentation set whose name matches any of the\n+given wildcards.\n+\n+There is only one wildcard character, @samp{*}, which matches both\n+letters in package name components and the @samp{.} separating package\n+name components.  For example, @samp{j*regex} would match package\n+@samp{java.util.regex}.  A more useful example would be\n+@samp{javax.swing*} to match @samp{javax.swing} and all of its\n+sub-packages.\n+\n+This option can be given multiple times.  \n+\n+FIXME: Information about group nesting here.\n+\n+@smallexample\n+gjdoc -group \"Core Classes\" 'java*' \\\n+      -group \"Swing\" 'javax.swing*' \\\n+      -group \"XML APIs\" 'javax.xml*' \\\n+      -group \"Other Extensions\" javax* \\\n+      @dots{}\n+@end smallexample\n+\n+@item -overview @var{file}\n+\n+Add the XHTML body fragment from @var{file} to the overview page.\n+\n+@var{file} should contain an XHTML fragment with the HTML @samp{body}\n+tag as the root node.  @xref{XHTML Fragments}.\n+\n+This option can be used to supply a description of the documentation\n+set as a whole.\n+\n+When specified, the first sentence of the fragment will be put above\n+the tables listing the documented packages, along with a link to the\n+full copy of the fragment which is put below the tables.\n+@xref{First Sentence Detector}.\n+\n+When generating documentation for a single package, specifying this\n+option forces generation of the overview page.\n+\n+@item -stylesheetfile @var{file}\n+\n+Use the CSS stylesheet in @var{file} instead of the default CSS\n+stylesheets.\n+\n+If you only want to override parts of the default stylesheets, use\n+@option{-addstylesheet} instead.\n+\n+@item -title @var{text}\n+\n+@emph{Deprecated.} Use @option{-doctitle} @var{text} instead.\n+\n+@item -helpfile @var{file}\n+\n+This option is currently ignored.\n+\n+When implemented, it will use the XHTML fragment in @var{file} for the\n+help page contents instead of the default help text.\n+\n+@end table\n+\n+@node Output Control Options, Generation Options, Interlinking Options, gjdoc Tool\n+@section Controlling the Output.\n+\n+@table @gcctabopt\n+@item -d @var{directory}\n+Place all output files into @var{directory} (and\n+sub-directories). @var{directory} will be created if it does not\n+exist, including all non-existing parent directories and all required\n+sub-directories.\n+\n+If not specified, output will be placed into the current directory.\n+\n+@item -locale @var{name}\n+\n+Use locale @var{name} instead of the default locale for all purposes.\n+\n+@var{name} should be a locale specifier in the form @samp{ll_CC[_VAR]}\n+where @samp{ll} is a lowercase two-letter ISO-639 language code,\n+@samp{CC} is an optional uppercase two-letter ISO-3166 country code,\n+and @samp{VAR} is an optional variant code.  For example, @samp{en}\n+specifies English, @samp{en_US} specifies US English, and\n+@samp{en_US_WIN} specifies a deviant variant of the US English locale.\n+\n+Note that the semantics of this option correspond exactly to those of\n+the constructors of class @samp{java.util.Locale}.\n+\n+This option currently only determines which Collator is being used for\n+sorting output elements.  This means that the locale will only have an\n+effect when you are using non-ASCII characters in identifiers.\n+\n+@item -charset @var{charset}\n+\n+@emph{Deprecated.} Override the specified encoding in output XHTML\n+files with the one given by @samp{charset}.\n+\n+If this option is not given, the encoding specification in output\n+XHTML is chosen to match the encoding used when writing the file (the\n+encoding given with @option{-docencoding}, or your platform's default\n+encoding).\n+\n+The semantics for @var{charset} are specified here:\n+@w{@uref{http://www.w3.org/TR/2000/REC-xml-20001006#NT-EncName}}.  For\n+all practical purposes, they are identical to those of the other\n+options accepting charset parameters.\n+\n+This option is here for compatibility with @command{javadoc} and\n+should be avoided.\n+\n+@item -docencoding @var{charset}\n+\n+Use the given charset encoding when writing output files instead of\n+your platform's default encoding.\n+\n+Examples for @var{charset} are @samp{US-ASCII}, @samp{ISO-8859-1} or\n+@samp{UTF-8}.\n+\n+The semantics of this option correspond exactly to those of the\n+constructors of class @samp{java.util.Locale}.\n+\n+@item -validhtml\n+\n+Force generation of valid XHTML code.  This breaks compatibility to\n+the traditional Javadoc tool to some extent.\n+\n+If this option is specified, anchor names will be mangled so that they\n+are valid according to the XHTML 1.1 specification.  However, a\n+documentation set generated with this option cannot be linked to\n+properly using the traditional Javadoc tool.  It can be linked to just\n+fine using Gjdoc, though.\n+\n+Without this option, anchor names for executable class members use the\n+traditional format, for example: ``foo(String,int[])''.  This is\n+compatible to the traditional Javadoc tool, but according to both the\n+HTML 4.0 and XHTML 1.0 and 1.1 specifications, this format includes\n+illegal characters.  Parentheses, square brackets, and the comma are\n+not allowed in anchor names.\n+\n+@item -baseurl @var{url}\n+\n+Hardwire a page URL relative to @var{url} into each generated page.\n+\n+If you are generating documentation which will exclusively be\n+available at a certain URL, you should use this option to specify this\n+URL.\n+\n+This can help avoid certain redirect attacks used by spammers, and it\n+can be helpful for certain web clients.\n+\n+@end table\n+\n+@node Verbosity Options, Doclet Options, Virtual Machine Options, gjdoc Tool\n+@section Verbosity Options\n+\n+@table @gcctabopt\n+@item -quiet\n+Suppress all output except for warnings and error messages.\n+\n+@item -verbose\n+Be very verbose about what @command{gjdoc} is doing.\n+\n+This option is currently ignored.\n+\n+@end table\n+\n+@node Virtual Machine Options, Verbosity Options, Taglet Options, gjdoc Tool\n+@section Virtual Machine Options\n+\n+Sun's @command{javadoc} tool seems to be based on @command{javac} and\n+as such it seems to operate on the VM level.  @command{gjdoc}, in\n+contrast, is a pure Java application.\n+\n+Therefore, @command{gjdoc} can only fake, or simulate, the following\n+VM-level options.\n+\n+@table @gcctabopt\n+\n+@item -classpath @var{pathlist}\n+Set the Virtual Machine @samp{classpath} to @var{pathlist}.\n+\n+In most cases you should use @option{-docletpath} or\n+@option{-tagletpath} instead of this option.\n+\n+@var{pathlist} should be one or more paths to a directory or jar file,\n+separated by your platform's path separator (usually @samp{:} or\n+@samp{;}).\n+\n+If this option is not intercepted at the wrapper level,\n+@command{gjdoc} currently fakes it by calling\n+@samp{System.setProperty(\"java.class.path\", @var{pathlist});} and\n+outputs a warning.\n+\n+@item -bootclasspath @var{pathlist}\n+Set the Virtual Machine @samp{bootclasspath} to @var{pathlist}.\n+\n+If this option is not intercepted at the wrapper level,\n+@command{gjdoc} outputs a warning.\n+\n+@item -J@var{vmopt}\n+\n+Pass an arbitrary parameter to the Virtual Machine @command{gjdoc}\n+runs on.\n+\n+If this option is not intercepted at the wrapper level,\n+@command{gjdoc} tries to emulate the option and outputs a warning.\n+\n+Currently, only the VM option @option{-D} for setting system\n+properties is emulated.\n+\n+@end table\n+\n+@c man end\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Invoking a Custom Doclet, Option Summary by Type, Invoking the Standard Doclet, gjdoc Tool\n+@section Invoking a Custom Doclet\n+\n+For invoking one of the other doclets shipping with @command{gjdoc} or\n+a third-party doclet, the canonical usage is:\n+\n+@smallexample\n+gjdoc -s src/java/ -all \\\n+  -docletpath /path/to/doclet.jar -doclet foo.BarDoclet \\\n+  (more Gjdoc core options and Doclet-specific options here)\n+@end smallexample\n+\n+@samp{/path/to/doclet.jar} is a placeholder for a class path\n+specifying where the Doclet classes and dependencies can be found and\n+@samp{foo.BarDoclet} is the fully-qualified name of the Doclet's main\n+class.\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Gjdoc Option Summary, Source Set Options, Option Summary by Type, gjdoc Tool\n+@section Gjdoc Option Summary\n+@cindex Gjdoc Options\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Other Doclets, Gjdoc Concepts, Doclet Options, gjdoc Tool\n+@chapter Generating Other Output Types\n+\n+@menu\n+* Built-in Doclets::\n+* Third-party Doclets::\n+@end menu\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Built-in Doclets, Third-party Doclets, , Other Doclets\n+@section Using the Built-in Doclets\n+@cindex Built-in Doclets\n+\n+@menu\n+* Using XmlDoclet::\n+* Using TexiDoclet::\n+* Using IspellDoclet::\n+* Using DebugDoclet::\n+@end menu\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Using TexiDoclet, Using XmlDoclet, , Built-in Doclets\n+@subsection TexiDoclet: Generating Info, PDF, and other formats\n+@cindex TexiDoclet\n+\n+Missing.\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Using XmlDoclet, Using IspellDoclet, Using TexiDoclet, Built-in Doclets\n+@subsection XmlDoclet: Generating XML Documentation\n+@cindex HtmlDoclet\n+\n+Missing.\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Using IspellDoclet, Using DebugDoclet, Using XmlDoclet, Built-in Doclets\n+@subsection IspellDoclet: Spell-checking Source Code\n+@cindex IspellDoclet\n+\n+Missing.\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Using DebugDoclet, , Using IspellDoclet, Built-in Doclets\n+@subsection DebugDoclet: Inspecting the Doclet API\n+@cindex HtmlDoclet\n+\n+Missing.\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Third-party Doclets, , Built-in Doclets, Other Doclets\n+@section Using Third-Party Doclets\n+@cindex Third-party Doclets\n+\n+@menu\n+* DocBook Doclet::\n+* PDFDoclet::\n+* JUnitDoclet::\n+@end menu\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node DocBook Doclet,PDFDoclet, ,Third-party Doclets\n+@subsection DocBook Doclet\n+@cindex DocBook Doclet\n+\n+Missing.\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node PDFDoclet, JUnitDoclet, DocBook Doclet, Third-party Doclets\n+@subsection PDFDoclet\n+@cindex PDFDoclet\n+\n+Missing.\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node JUnitDoclet, , PDFDoclet, Third-party Doclets\n+@subsection JUnitDoclet\n+@cindex JUnitDoclet\n+\n+Missing.\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Gjdoc Concepts, , Other Doclets, gjdoc Tool\n+@chapter Advanced Concepts\n+\n+@menu\n+* Writing Doclets::\n+* Taglets::\n+* XHTML Fragments::\n+* First Sentence Detector::\n+* Adding Custom Resources::\n+@end menu\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Taglets, Writing Doclets, , Gjdoc Concepts\n+@section Adding Custom Tags to the Documentation\n+@cindex Taglet\n+\n+Missing.\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Writing Doclets, XHTML Fragments, Taglets, Gjdoc Concepts\n+@section Writing Doclets\n+@cindex Taglet\n+\n+If the various Doclets already available don't suit your needs, you\n+can write a custom Doclet yourself.  \n+\n+@menu\n+* Doclet Invocation Interface::\n+* Using AbstractDoclet::\n+* GNU Doclet SPI::\n+@end menu\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Doclet Invocation Interface, Using AbstractDoclet, , Writing Doclets\n+@subsection Implementing the Doclet Invocation Interface\n+\n+A Doclet is a class that contains a method with the following\n+signature:\n+\n+@smallexample\n+public static boolean start(RootDoc rootDoc);\n+@end smallexample\n+\n+@var{rootDoc} is the root of an object hierarchy containing the\n+information @command{gjdoc} extracted from the source files.  See the\n+Doclet API for more details.\n+\n+@samp{start} should process all the information and return\n+@samp{true} on success, @samp{false} on failure.\n+\n+For printing status information, the Doclet should use methods\n+@samp{printNotice}, @samp{printWarning} and @samp{printError} instead\n+of @samp{System.err}.  The Doclet can opt to use @samp{System.out} for\n+redirectable output.\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Using AbstractDoclet, GNU Doclet SPI, Doclet Invocation Interface, Writing Doclets\n+@subsection Deriving Your Doclet from AbstractDoclet\n+@cindex AbstractDoclet\n+\n+You may want your Doclet to provide functionality similar to\n+HtmlDoclet.  For example, you may want it to support Taglets, generate\n+Index, Tree, and Uses pages, or show other cross-reference information\n+like @samp{Overrides} and @samp{All Implementing Classes}.\n+\n+This information is not directly provided by the Doclet API, so your\n+Doclet would normally have to assemble it itself.  For example, it\n+would have to add the names of all program elements to a list and sort\n+this list in order to create the Index page.\n+\n+If you want to provide this information or part of it, you should\n+consider deriving your class from\n+@samp{gnu.classpath.tools.doclets.AbstractDoclet}.  This class\n+provides the following benefits:\n+\n+@itemize @bullet\n+\n+@item \n+Handles options @option{-tag}, @option{-taglet}, @option{-tagletpath}\n+(Taglets)\n+\n+@item \n+Provides standard taglets for @@version, @@author, @@since, @@serial,\n+@@deprecated, @@see, @@param, @@return and handles all related options\n+(@option{-version}, @option{-author}, @option{-nosince},\n+@option{-nodeprecated})\n+\n+@item \n+Handles option @option{-d} (destination directory)\n+\n+@item \n+Handles option @option{-noqualifier} (classes to omit qualifier for)\n+\n+@item \n+Handles options @option{-docfilessubdirs} and\n+@option{-excludedocfilessubdir} (resource copying)\n+\n+@item \n+Can generate a full index or an index split by first letter\n+\n+@item \n+Can generate a full tree and package trees\n+\n+@item \n+Can generate cross-reference information\n+\n+@item \n+Can aggregate interface information (all superinterfaces, all\n+subinterfaces, all implementing classes)\n+\n+@item \n+Provides convenient access to constructors, fields, methods, and inner\n+classes sorted by name/signature instead of the default sort order.\n+\n+@item \n+Provides various other convenience methods\n+\n+@end itemize\n+\n+If you derive from @samp{AbstractDoclet}, there are a number of things\n+you need to take care of:\n+\n+@itemize @bullet\n+\n+@item \n+\n+@end itemize\n+\n+you should not implement the\n+@samp{start(RootDoc)} method as it is already defined by\n+@samp{AbstractDoclet} so that it can care about parsing the options.\n+\n+Instead, you implement method @samp{run()}, @samp{getOptions()} and\n+the other abstract methods to define your Doclet's behavior.\n+\n+Note that all information provided by @samp{AbstractDoclet} is\n+evaluated lazily.  That is, if your Doclet doesn't need to create an\n+Index page, then @samp{AbstractDoclet} will not spend resources on\n+creating the corresponding information.\n+\n+See the API documentation for\n+@samp{gnu.classpath.tools.doclets.AbstractDoclet} for more details.\n+\n+You should be aware that if you base your Doclet on\n+@samp{AbstractDoclet} then you have to bundle this and all related\n+classes with your Doclet, with all implications such as possible\n+licensing issues.  Otherwise, your Doclet will only be runnable on\n+@samp{gjdoc} and not on other documentation systems.  Also note that\n+@samp{AbstractDoclet} has not been extensively tested in environments\n+other than @samp{gjdoc}.\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node GNU Doclet SPI, , Using AbstractDoclet, Writing Doclets\n+@subsection Preparing for the GNU Doclet Service Provider Interface\n+@cindex GNU Doclet SPI, Service Provider, SPI\n+\n+In addition to the standard Doclet invocation interface described\n+above, @command{gjdoc} also offers a Service Provider Interface\n+conforming to the Java standard.  Adding support for this interface to\n+your Doclet simplifies usage for @command{gjdoc} users because it\n+makes your Doclet ``discoverable''.\n+\n+In order to provide the alternate interface, you have to add a class\n+implementing @samp{gnu.classpath.tools.gjdoc.spi.DocletSpi} to your\n+Doclet classes, and bundle all Doclet classes in a Jar file along with\n+a file named\n+@samp{META_INF/services/gnu.classpath.tools.gjdoc.spi.DocletSpi} which\n+contains the name of your class implementing DocletSpi on a single\n+line.\n+\n+Note that if your Doclet depends on third-party classes bundled in\n+separate Jar files, you can link in these classes using the\n+@samp{Class-path:} Manifest attribute of your Doclet Jar.\n+\n+Your Doclet can then be invoked in one of the following ways:\n+@smallexample\n+gjdoc -docletjar /path/to/doclet.jar\n+gjdoc -docletpath /path/to/doclet.jar -docletname @var{docletname}\n+gjdoc -docletname @var{docletname}\n+@end smallexample\n+\n+Here, @var{docletname} is the name of your doclet as returned by\n+@samp{DocletSpi.getDocletName()}.\n+\n+The last example will only work if your Doclet Jar is in\n+@command{gjdoc}'s @file{doclets} directory or if it is on the\n+classpath.\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node XHTML Fragments, First Sentence Detector, Writing Doclets, Gjdoc Concepts\n+@section Well-formed Documentation Fragments\n+@cindex XHTML Fragments\n+\n+For many Doclets it is advantagous if the HTML code in the comments\n+and HTML code passed via the command line is well-formed.  For\n+example, HtmlDoclet outputs XHTML code, and XmlDoclet XML code, both\n+of which results in invalid files if the user-specified HTML isn't\n+wellformed.\n+\n+Unfortunately, comments were never required to contain well-formed\n+HTML code, which means that every Doclet must deal with non-wellformed\n+code as well.\n+\n+The @command{gjdoc} built-in Doclets deal with this problem by\n+``fixing'' the HTML code - making sure that all tags are closed,\n+attribute values are provided and quoted, tags are properly nested,\n+etc.\n+\n+This approach works OK in most instances, but since it uses some crude\n+heuristics it can sometimes produce undesirable result.\n+\n+Therefore, in order to make sure that your comments are always\n+properly formatted, make sure they are well-formed as described in\n+@w{@uref{http://www.w3.org/TR/xhtml1/#h-4.1, XHTML 1.0: Documents must\n+be well-formed}}.\n+\n+In addition, you should use meaningful tags instead of text formatting\n+tags to make your output look better in other output formats derived\n+from your HTML code.  For example, you should use the <em> tag instead\n+of <b> if you want to emphasize text.\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node First Sentence Detector, Adding Custom Resources, XHTML Fragments, Gjdoc Concepts\n+@section How Gjdoc Determines where the First Sentence Ends\n+@cindex First Sentence Detector\n+\n+For a package, class or member summary, @command{gjdoc} only shows the\n+first sentence of the documentation comment in question.  Because\n+@command{gjdoc} is not human, it is not always obvious to\n+@command{gjdoc} where the first sentence ends.\n+\n+You might be tempted to say that the first sentence ends at the first\n+occurrence of a punctuation character like @samp{.} or\n+@samp{!}. However, consider examples like this:\n+@smallexample\n+This work, by Thomas J. Shahan et al., is about the middle ages.\n+@end smallexample\n+\n+As you can see, it is not trivial to determine the end of the\n+sentence.\n+\n+@command{gjdoc} gives you the choice between two approaches.  By\n+default it uses built-in heuristics which should be compatible to\n+Sun's @command{javadoc} tool.  This approach works quiet well in most\n+cases, at least for english comments.\n+\n+Alternatively, you can specify option @option{-breakiterator} in which\n+case @command{gjdoc} will use\n+@samp{java.text.BreakIterator.getSentenceInstance(@var{locale}).next()}\n+to find the end of sentence, where @var{locale} is the locale\n+specified by option @samp{-locale} or the default locale if none\n+specified.\n+\n+@emph{NOT YET IMPLEMENTED:}\n+\n+@command{gjdoc} also allows you to explicitly delineate the first\n+sentence by putting it in a @samp{<span>} tag with the CSS class\n+@samp{first-sentence}.  For example:\n+@smallexample\n+/**\n+ *  <span class=\"first-sentence\">This. is. the. first. \n+ *  sentence.</span> This is the second sentence.\n+ */\n+@end smallexample\n+\n+Note that this will only work with @command{gjdoc}, but shouldn't hurt\n+when using another documentation system since the @samp{<span>} tag\n+usually doesn't show up in the output.\n+\n+@comment ----------------------------------------------------------------------\n+\n+@node Adding Custom Resources, , First Sentence Detector, Gjdoc Concepts\n+@section Adding Images and Other Resources\n+@cindex First Sentence Detector\n+\n+Sometimes you want to decorate your documentation with secondary\n+resources such as images, SVG graphics, applets, and so on.  To do so,\n+simply put the required files in a subdirectory 'doc-files' in the\n+package directory corresponding to the documentation entry you want to\n+decorate, and refer to it with the URL\n+@samp{doc-files/@var{filename}}.\n+\n+For example, if you want to add an image to the description of class\n+@samp{baz.FooBar}, create a directory @file{doc-files} in the\n+directory @file{baz} containing @file{FooBar.java} and put your file,\n+say @file{diagram.png}, into that directory.  Then, add the HTML code\n+like this to a comment in @file{FooBar.java}:\n+@smallexample\n+<img src=\"doc-files/diagram.png\" width=\"200\" height=\"150\"\n+  alt=\"Foo Diagram\"/>\n+@end smallexample\n+\n+This works because the @file{doc-files} subdirectories will be copied\n+to the target documentation directory every time you generate the\n+documentation.  \n+\n+Note however that by default, the @file{doc-files} directory will not\n+be copied deeply.  In other words, if you create subdirectories under\n+@file{doc-files} they will not be copied and any resources located in\n+these subdirectories will not be accessible in your generated\n+documentation.  You can specify option @option{-docfilessubdirs} to\n+remove this limitation.\n+\n+Sometimes you want to use option @option{-docfilessubdirs}, but there\n+are certain directories which you don't want to be copied, for example\n+because they contain source files for the resources in\n+@file{doc-files}.  For cases like this, use\n+@option{-excludedocfilessubdir} to specify directories to be omitted.\n+\n+@comment ----------------------------------------------------------------------\n+\n @node I18N Issues, , Other Tools, Top\n @comment node-name, next, previous, up\n @chapter I18N Issues"}, {"sha": "ff47801247c9f2b45677eaaad073456b1a9467de", "filename": "libjava/classpath/examples/Makefile.am", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexamples%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexamples%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2FMakefile.am?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -1,7 +1,11 @@\n ## Input file for automake to generate the Makefile.in used by configure\n-GLIBJ_CLASSPATH='$(top_builddir)/lib/glibj.zip'\n+GLIBJ_CLASSPATH='$(top_builddir)/lib/glibj.zip:$(top_builddir)/lib'\n \n+if GCJ_JAVAC\n+JCOMPILER = $(JAVAC) $(JAVACFLAGS) -fsource=1.5 -ftarget=1.5 --encoding=UTF-8 --bootclasspath=$(GLIBJ_CLASSPATH) --classpath='$(top_builddir)/tools/tools.zip'\n+else\n JCOMPILER = $(JAVAC) $(JAVACFLAGS) -source 1.5 -target 1.5 -encoding UTF-8 -bootclasspath $(GLIBJ_CLASSPATH) -classpath '$(top_builddir)/tools/tools.zip'\n+endif\n \n # All our example java source files\n EXAMPLE_JAVA_FILES = $(srcdir)/gnu/classpath/examples/*/*.java $(srcdir)/gnu/classpath/examples/*/*/*.java $(srcdir)/gnu/classpath/examples/*/*/*/*.java\n@@ -84,15 +88,21 @@ dist-hook:\n # To generate the example zip just depend on the sources and ignore the\n # class files. Always regenerate all .class files and remove them immediatly.\n # And copy the png icons we use to the classes dir so they get also included.\n+\n+if WITH_JAR\n+CREATE_EXAMPLE_ZIP=$(JAR) cf ../$(EXAMPLE_ZIP) .\n+else\n+CREATE_EXAMPLE_ZIP=$(ZIP) -r ../$(EXAMPLE_ZIP) .\n+endif\n+\n $(EXAMPLE_ZIP): $(EXAMPLE_JAVA_FILES)\n-\tmkdir -p classes/gnu/classpath/examples/icons\n+\t@mkdir_p@ classes/gnu/classpath/examples/icons\n \tcp $(EXAMPLE_ICONS) classes/gnu/classpath/examples/icons\n-\tmkdir -p classes/gnu/classpath/examples/swing\n+\t@mkdir_p@ classes/gnu/classpath/examples/swing\n \tcp $(EXAMPLE_HTML) classes/gnu/classpath/examples/swing\n \t$(JCOMPILER) -d classes $(EXAMPLE_JAVA_FILES) \n \t(cd classes; \\\n-\tif test \"$(ZIP)\" != \"\"; then $(ZIP) -r ../$(EXAMPLE_ZIP) .; fi; \\\n-\tif test \"$(FASTJAR)\" != \"\"; then $(FASTJAR) cf ../$(EXAMPLE_ZIP) .; fi; \\\n+\t$(CREATE_EXAMPLE_ZIP); \\\n \tcd ..)\n \trm -rf classes\n "}, {"sha": "3adbdaa84aa8c01ac81c0e608330921e913c1b57", "filename": "libjava/classpath/examples/Makefile.in", "status": "modified", "additions": 35, "deletions": 11, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexamples%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexamples%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2FMakefile.in?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -52,6 +52,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../ltsugar.m4 \\\n \t$(top_srcdir)/../../ltversion.m4 \\\n \t$(top_srcdir)/../../lt~obsolete.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_antlr.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_java.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_java_works.m4 \\\n \t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n \t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n@@ -83,6 +86,8 @@ ACLOCAL = @ACLOCAL@\n AMDEP_FALSE = @AMDEP_FALSE@\n AMDEP_TRUE = @AMDEP_TRUE@\n AMTAR = @AMTAR@\n+ANTLR = @ANTLR@\n+ANTLR_JAR = @ANTLR_JAR@\n AR = @AR@\n AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n@@ -114,6 +119,12 @@ CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n CREATE_GCONF_PEER_LIBRARIES_FALSE = @CREATE_GCONF_PEER_LIBRARIES_FALSE@\n CREATE_GCONF_PEER_LIBRARIES_TRUE = @CREATE_GCONF_PEER_LIBRARIES_TRUE@\n+CREATE_GJDOC_FALSE = @CREATE_GJDOC_FALSE@\n+CREATE_GJDOC_PARSER_FALSE = @CREATE_GJDOC_PARSER_FALSE@\n+CREATE_GJDOC_PARSER_TRUE = @CREATE_GJDOC_PARSER_TRUE@\n+CREATE_GJDOC_TRUE = @CREATE_GJDOC_TRUE@\n+CREATE_GMPBI_LIBRARY_FALSE = @CREATE_GMPBI_LIBRARY_FALSE@\n+CREATE_GMPBI_LIBRARY_TRUE = @CREATE_GMPBI_LIBRARY_TRUE@\n CREATE_GSTREAMER_PEER_LIBRARIES_FALSE = @CREATE_GSTREAMER_PEER_LIBRARIES_FALSE@\n CREATE_GSTREAMER_PEER_LIBRARIES_TRUE = @CREATE_GSTREAMER_PEER_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n@@ -152,11 +163,12 @@ ERROR_CFLAGS = @ERROR_CFLAGS@\n EXAMPLESDIR = @EXAMPLESDIR@\n EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n-FASTJAR = @FASTJAR@\n FGREP = @FGREP@\n FIND = @FIND@\n FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n+GCJ_JAVAC_FALSE = @GCJ_JAVAC_FALSE@\n+GCJ_JAVAC_TRUE = @GCJ_JAVAC_TRUE@\n GCONF_CFLAGS = @GCONF_CFLAGS@\n GCONF_LIBS = @GCONF_LIBS@\n GDK_CFLAGS = @GDK_CFLAGS@\n@@ -166,6 +178,8 @@ GENINSRC_TRUE = @GENINSRC_TRUE@\n GJDOC = @GJDOC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n+GMP_CFLAGS = @GMP_CFLAGS@\n+GMP_LIBS = @GMP_LIBS@\n GREP = @GREP@\n GSTREAMER_BASE_CFLAGS = @GSTREAMER_BASE_CFLAGS@\n GSTREAMER_BASE_LIBS = @GSTREAMER_BASE_LIBS@\n@@ -187,7 +201,10 @@ INSTALL_GLIBJ_ZIP_TRUE = @INSTALL_GLIBJ_ZIP_TRUE@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+JAR = @JAR@\n+JAVA = @JAVA@\n JAVAC = @JAVAC@\n+JAVAC_IS_GCJ = @JAVAC_IS_GCJ@\n JAVAC_MEM_OPT = @JAVAC_MEM_OPT@\n JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n JAVA_MAINTAINER_MODE_FALSE = @JAVA_MAINTAINER_MODE_FALSE@\n@@ -253,8 +270,10 @@ USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n USE_PREBUILT_GLIBJ_ZIP_TRUE = @USE_PREBUILT_GLIBJ_ZIP_TRUE@\n VERSION = @VERSION@\n-VM_BINARY = @VM_BINARY@\n+WANT_NATIVE_BIG_INTEGER = @WANT_NATIVE_BIG_INTEGER@\n WARNING_CFLAGS = @WARNING_CFLAGS@\n+WITH_JAR_FALSE = @WITH_JAR_FALSE@\n+WITH_JAR_TRUE = @WITH_JAR_TRUE@\n XML_CFLAGS = @XML_CFLAGS@\n XML_LIBS = @XML_LIBS@\n XSLT_CFLAGS = @XSLT_CFLAGS@\n@@ -265,6 +284,7 @@ X_EXTRA_LIBS = @X_EXTRA_LIBS@\n X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZIP = @ZIP@\n+ac_ct_ANTLR = @ac_ct_ANTLR@\n ac_ct_AR = @ac_ct_AR@\n ac_ct_CC = @ac_ct_CC@\n ac_ct_CXX = @ac_ct_CXX@\n@@ -324,9 +344,11 @@ target_cpu = @target_cpu@\n target_os = @target_os@\n target_vendor = @target_vendor@\n toolexeclibdir = @toolexeclibdir@\n+uudecode = @uudecode@\n vm_classes = @vm_classes@\n-GLIBJ_CLASSPATH = '$(top_builddir)/lib/glibj.zip'\n-JCOMPILER = $(JAVAC) $(JAVACFLAGS) -source 1.5 -target 1.5 -encoding UTF-8 -bootclasspath $(GLIBJ_CLASSPATH) -classpath '$(top_builddir)/tools/tools.zip'\n+GLIBJ_CLASSPATH = '$(top_builddir)/lib/glibj.zip:$(top_builddir)/lib'\n+@GCJ_JAVAC_FALSE@JCOMPILER = $(JAVAC) $(JAVACFLAGS) -source 1.5 -target 1.5 -encoding UTF-8 -bootclasspath $(GLIBJ_CLASSPATH) -classpath '$(top_builddir)/tools/tools.zip'\n+@GCJ_JAVAC_TRUE@JCOMPILER = $(JAVAC) $(JAVACFLAGS) -fsource=1.5 -ftarget=1.5 --encoding=UTF-8 --bootclasspath=$(GLIBJ_CLASSPATH) --classpath='$(top_builddir)/tools/tools.zip'\n \n # All our example java source files\n EXAMPLE_JAVA_FILES = $(srcdir)/gnu/classpath/examples/*/*.java $(srcdir)/gnu/classpath/examples/*/*/*.java $(srcdir)/gnu/classpath/examples/*/*/*/*.java\n@@ -362,6 +384,12 @@ exampledir = $(pkgdatadir)/examples\n \n # Make sure everything is included in the distribution.\n EXTRA_DIST = README Makefile.jawt.in Makefile.java2d.in\n+@WITH_JAR_FALSE@CREATE_EXAMPLE_ZIP = $(ZIP) -r ../$(EXAMPLE_ZIP) .\n+\n+# To generate the example zip just depend on the sources and ignore the\n+# class files. Always regenerate all .class files and remove them immediatly.\n+# And copy the png icons we use to the classes dir so they get also included.\n+@WITH_JAR_TRUE@CREATE_EXAMPLE_ZIP = $(JAR) cf ../$(EXAMPLE_ZIP) .\n all: $(BUILT_SOURCES)\n \t$(MAKE) $(AM_MAKEFLAGS) all-am\n \n@@ -599,18 +627,14 @@ dist-hook:\n \t  cp -p $$file $(distdir)/$$f; \\\n \tdone\n \n-# To generate the example zip just depend on the sources and ignore the\n-# class files. Always regenerate all .class files and remove them immediatly.\n-# And copy the png icons we use to the classes dir so they get also included.\n $(EXAMPLE_ZIP): $(EXAMPLE_JAVA_FILES)\n-\tmkdir -p classes/gnu/classpath/examples/icons\n+\t@mkdir_p@ classes/gnu/classpath/examples/icons\n \tcp $(EXAMPLE_ICONS) classes/gnu/classpath/examples/icons\n-\tmkdir -p classes/gnu/classpath/examples/swing\n+\t@mkdir_p@ classes/gnu/classpath/examples/swing\n \tcp $(EXAMPLE_HTML) classes/gnu/classpath/examples/swing\n \t$(JCOMPILER) -d classes $(EXAMPLE_JAVA_FILES) \n \t(cd classes; \\\n-\tif test \"$(ZIP)\" != \"\"; then $(ZIP) -r ../$(EXAMPLE_ZIP) .; fi; \\\n-\tif test \"$(FASTJAR)\" != \"\"; then $(FASTJAR) cf ../$(EXAMPLE_ZIP) .; fi; \\\n+\t$(CREATE_EXAMPLE_ZIP); \\\n \tcd ..)\n \trm -rf classes\n "}, {"sha": "9af20d227abc83b51df1c363a7a214e8986df575", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/DemoServant.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FDemoServant.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FDemoServant.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FDemoServant.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -145,7 +145,7 @@ public void passTree(TreeNodeHolder tree)\n   {\n     System.out.println(\"SERVER: ***** Transferring tree\");\n \n-    StringBuffer b = new StringBuffer();\n+    StringBuilder b = new StringBuilder();\n \n     // This both creates the tree string representation\n     // and changes the TreeNode names.\n@@ -214,7 +214,7 @@ public void throwException(int parameter)\n    * @param b the buffer to collect the string representation.\n    * @param n the rott tree TreeNode.\n    */\n-  private void getImage(StringBuffer b, TreeNode n)\n+  private void getImage(StringBuilder b, TreeNode n)\n   {\n     b.append(n.name);\n     n.name = n.name + \"++\";"}, {"sha": "843530de55bb3287ed785c695c207dc4409d1e75", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/SimpleCommunication/communication/DirectTest.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FDirectTest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FDirectTest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2FSimpleCommunication%2Fcommunication%2FDirectTest.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -269,7 +269,7 @@ public void testTree()\n     object.passTree(nh);\n \n     // Convert the returned tree to some strig representation.\n-    StringBuffer img = new StringBuffer();\n+    StringBuilder img = new StringBuilder();\n     getImage(img, nh.value);\n \n     System.out.println(\"Returned tree: \" + img.toString());\n@@ -314,7 +314,7 @@ public void testWideNarrowStrings()\n    * @param b the string buffer to accumulate the representation.\n    * @param n the tree (root TreeNode).\n    */\n-  private void getImage(StringBuffer b, TreeNode n)\n+  private void getImage(StringBuilder b, TreeNode n)\n   {\n     b.append(n.name);\n     b.append(\": (\");"}, {"sha": "73a8eecab939b99b01266ec713e2a940a9a1d0ec", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/swing/x5/IorReader.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2Fswing%2Fx5%2FIorReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2Fswing%2Fx5%2FIorReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2Fswing%2Fx5%2FIorReader.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -79,7 +79,7 @@ public static String readUrl(String url)\n       {\n         InputStreamReader r = new InputStreamReader(u.openStream());\n \n-        StringBuffer b = new StringBuffer();\n+        StringBuilder b = new StringBuilder();\n         int c;\n \n         while ((c = r.read()) > 0)"}, {"sha": "7717834604394a1941f80170fd60b6957ad79a5d", "filename": "libjava/classpath/examples/gnu/classpath/examples/CORBA/swing/x5/X5Server.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2Fswing%2Fx5%2FX5Server.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2Fswing%2Fx5%2FX5Server.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2FCORBA%2Fswing%2Fx5%2FX5Server.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -147,7 +147,7 @@ public static void main(String[] args)\n \n             int length = GameManagerImpl.ior.length();\n \n-            StringBuffer b = new StringBuffer();\n+            StringBuilder b = new StringBuilder();\n             b.append(\"HTTP/1.0 200 OK\\r\\n\");\n             b.append(\"Content-Length: \" + length + \"\\r\\n\");\n             b.append(\"Connection: close\\r\\n\");"}, {"sha": "3d77b127a04465708b5b5827ad6434dcf30c23b6", "filename": "libjava/classpath/examples/gnu/classpath/examples/html/Demo.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fhtml%2FDemo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fhtml%2FDemo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexamples%2Fgnu%2Fclasspath%2Fexamples%2Fhtml%2FDemo.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -94,7 +94,7 @@ static void print(PrintStream stream, Node node, int ident)\n     if (node == null)\n       return;\n \n-    StringBuffer tab = new StringBuffer();\n+    StringBuilder tab = new StringBuilder();\n     stream.println();\n     for (int i = 0; i < ident; i++)\n       {"}, {"sha": "0f122f76b5c82fdbe0f4987f00d3f47c2a4a0ec0", "filename": "libjava/classpath/external/Makefile.in", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexternal%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexternal%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FMakefile.in?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -50,6 +50,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../ltsugar.m4 \\\n \t$(top_srcdir)/../../ltversion.m4 \\\n \t$(top_srcdir)/../../lt~obsolete.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_antlr.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_java.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_java_works.m4 \\\n \t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n \t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n@@ -81,6 +84,8 @@ ACLOCAL = @ACLOCAL@\n AMDEP_FALSE = @AMDEP_FALSE@\n AMDEP_TRUE = @AMDEP_TRUE@\n AMTAR = @AMTAR@\n+ANTLR = @ANTLR@\n+ANTLR_JAR = @ANTLR_JAR@\n AR = @AR@\n AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n@@ -112,6 +117,12 @@ CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n CREATE_GCONF_PEER_LIBRARIES_FALSE = @CREATE_GCONF_PEER_LIBRARIES_FALSE@\n CREATE_GCONF_PEER_LIBRARIES_TRUE = @CREATE_GCONF_PEER_LIBRARIES_TRUE@\n+CREATE_GJDOC_FALSE = @CREATE_GJDOC_FALSE@\n+CREATE_GJDOC_PARSER_FALSE = @CREATE_GJDOC_PARSER_FALSE@\n+CREATE_GJDOC_PARSER_TRUE = @CREATE_GJDOC_PARSER_TRUE@\n+CREATE_GJDOC_TRUE = @CREATE_GJDOC_TRUE@\n+CREATE_GMPBI_LIBRARY_FALSE = @CREATE_GMPBI_LIBRARY_FALSE@\n+CREATE_GMPBI_LIBRARY_TRUE = @CREATE_GMPBI_LIBRARY_TRUE@\n CREATE_GSTREAMER_PEER_LIBRARIES_FALSE = @CREATE_GSTREAMER_PEER_LIBRARIES_FALSE@\n CREATE_GSTREAMER_PEER_LIBRARIES_TRUE = @CREATE_GSTREAMER_PEER_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n@@ -150,11 +161,12 @@ ERROR_CFLAGS = @ERROR_CFLAGS@\n EXAMPLESDIR = @EXAMPLESDIR@\n EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n-FASTJAR = @FASTJAR@\n FGREP = @FGREP@\n FIND = @FIND@\n FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n+GCJ_JAVAC_FALSE = @GCJ_JAVAC_FALSE@\n+GCJ_JAVAC_TRUE = @GCJ_JAVAC_TRUE@\n GCONF_CFLAGS = @GCONF_CFLAGS@\n GCONF_LIBS = @GCONF_LIBS@\n GDK_CFLAGS = @GDK_CFLAGS@\n@@ -164,6 +176,8 @@ GENINSRC_TRUE = @GENINSRC_TRUE@\n GJDOC = @GJDOC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n+GMP_CFLAGS = @GMP_CFLAGS@\n+GMP_LIBS = @GMP_LIBS@\n GREP = @GREP@\n GSTREAMER_BASE_CFLAGS = @GSTREAMER_BASE_CFLAGS@\n GSTREAMER_BASE_LIBS = @GSTREAMER_BASE_LIBS@\n@@ -185,7 +199,10 @@ INSTALL_GLIBJ_ZIP_TRUE = @INSTALL_GLIBJ_ZIP_TRUE@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+JAR = @JAR@\n+JAVA = @JAVA@\n JAVAC = @JAVAC@\n+JAVAC_IS_GCJ = @JAVAC_IS_GCJ@\n JAVAC_MEM_OPT = @JAVAC_MEM_OPT@\n JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n JAVA_MAINTAINER_MODE_FALSE = @JAVA_MAINTAINER_MODE_FALSE@\n@@ -251,8 +268,10 @@ USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n USE_PREBUILT_GLIBJ_ZIP_TRUE = @USE_PREBUILT_GLIBJ_ZIP_TRUE@\n VERSION = @VERSION@\n-VM_BINARY = @VM_BINARY@\n+WANT_NATIVE_BIG_INTEGER = @WANT_NATIVE_BIG_INTEGER@\n WARNING_CFLAGS = @WARNING_CFLAGS@\n+WITH_JAR_FALSE = @WITH_JAR_FALSE@\n+WITH_JAR_TRUE = @WITH_JAR_TRUE@\n XML_CFLAGS = @XML_CFLAGS@\n XML_LIBS = @XML_LIBS@\n XSLT_CFLAGS = @XSLT_CFLAGS@\n@@ -263,6 +282,7 @@ X_EXTRA_LIBS = @X_EXTRA_LIBS@\n X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZIP = @ZIP@\n+ac_ct_ANTLR = @ac_ct_ANTLR@\n ac_ct_AR = @ac_ct_AR@\n ac_ct_CC = @ac_ct_CC@\n ac_ct_CXX = @ac_ct_CXX@\n@@ -322,6 +342,7 @@ target_cpu = @target_cpu@\n target_os = @target_os@\n target_vendor = @target_vendor@\n toolexeclibdir = @toolexeclibdir@\n+uudecode = @uudecode@\n vm_classes = @vm_classes@\n SUBDIRS = sax w3c_dom relaxngDatatype jsr166\n EXTRA_DIST = README"}, {"sha": "4be9f2e2e49b0e2632f4c9a9118399d4cabc9510", "filename": "libjava/classpath/external/jsr166/Makefile.in", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fjsr166%2FMakefile.in?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -50,6 +50,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../ltsugar.m4 \\\n \t$(top_srcdir)/../../ltversion.m4 \\\n \t$(top_srcdir)/../../lt~obsolete.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_antlr.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_java.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_java_works.m4 \\\n \t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n \t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n@@ -72,6 +75,8 @@ ACLOCAL = @ACLOCAL@\n AMDEP_FALSE = @AMDEP_FALSE@\n AMDEP_TRUE = @AMDEP_TRUE@\n AMTAR = @AMTAR@\n+ANTLR = @ANTLR@\n+ANTLR_JAR = @ANTLR_JAR@\n AR = @AR@\n AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n@@ -103,6 +108,12 @@ CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n CREATE_GCONF_PEER_LIBRARIES_FALSE = @CREATE_GCONF_PEER_LIBRARIES_FALSE@\n CREATE_GCONF_PEER_LIBRARIES_TRUE = @CREATE_GCONF_PEER_LIBRARIES_TRUE@\n+CREATE_GJDOC_FALSE = @CREATE_GJDOC_FALSE@\n+CREATE_GJDOC_PARSER_FALSE = @CREATE_GJDOC_PARSER_FALSE@\n+CREATE_GJDOC_PARSER_TRUE = @CREATE_GJDOC_PARSER_TRUE@\n+CREATE_GJDOC_TRUE = @CREATE_GJDOC_TRUE@\n+CREATE_GMPBI_LIBRARY_FALSE = @CREATE_GMPBI_LIBRARY_FALSE@\n+CREATE_GMPBI_LIBRARY_TRUE = @CREATE_GMPBI_LIBRARY_TRUE@\n CREATE_GSTREAMER_PEER_LIBRARIES_FALSE = @CREATE_GSTREAMER_PEER_LIBRARIES_FALSE@\n CREATE_GSTREAMER_PEER_LIBRARIES_TRUE = @CREATE_GSTREAMER_PEER_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n@@ -141,11 +152,12 @@ ERROR_CFLAGS = @ERROR_CFLAGS@\n EXAMPLESDIR = @EXAMPLESDIR@\n EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n-FASTJAR = @FASTJAR@\n FGREP = @FGREP@\n FIND = @FIND@\n FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n+GCJ_JAVAC_FALSE = @GCJ_JAVAC_FALSE@\n+GCJ_JAVAC_TRUE = @GCJ_JAVAC_TRUE@\n GCONF_CFLAGS = @GCONF_CFLAGS@\n GCONF_LIBS = @GCONF_LIBS@\n GDK_CFLAGS = @GDK_CFLAGS@\n@@ -155,6 +167,8 @@ GENINSRC_TRUE = @GENINSRC_TRUE@\n GJDOC = @GJDOC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n+GMP_CFLAGS = @GMP_CFLAGS@\n+GMP_LIBS = @GMP_LIBS@\n GREP = @GREP@\n GSTREAMER_BASE_CFLAGS = @GSTREAMER_BASE_CFLAGS@\n GSTREAMER_BASE_LIBS = @GSTREAMER_BASE_LIBS@\n@@ -176,7 +190,10 @@ INSTALL_GLIBJ_ZIP_TRUE = @INSTALL_GLIBJ_ZIP_TRUE@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+JAR = @JAR@\n+JAVA = @JAVA@\n JAVAC = @JAVAC@\n+JAVAC_IS_GCJ = @JAVAC_IS_GCJ@\n JAVAC_MEM_OPT = @JAVAC_MEM_OPT@\n JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n JAVA_MAINTAINER_MODE_FALSE = @JAVA_MAINTAINER_MODE_FALSE@\n@@ -242,8 +259,10 @@ USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n USE_PREBUILT_GLIBJ_ZIP_TRUE = @USE_PREBUILT_GLIBJ_ZIP_TRUE@\n VERSION = @VERSION@\n-VM_BINARY = @VM_BINARY@\n+WANT_NATIVE_BIG_INTEGER = @WANT_NATIVE_BIG_INTEGER@\n WARNING_CFLAGS = @WARNING_CFLAGS@\n+WITH_JAR_FALSE = @WITH_JAR_FALSE@\n+WITH_JAR_TRUE = @WITH_JAR_TRUE@\n XML_CFLAGS = @XML_CFLAGS@\n XML_LIBS = @XML_LIBS@\n XSLT_CFLAGS = @XSLT_CFLAGS@\n@@ -254,6 +273,7 @@ X_EXTRA_LIBS = @X_EXTRA_LIBS@\n X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZIP = @ZIP@\n+ac_ct_ANTLR = @ac_ct_ANTLR@\n ac_ct_AR = @ac_ct_AR@\n ac_ct_CC = @ac_ct_CC@\n ac_ct_CXX = @ac_ct_CXX@\n@@ -313,6 +333,7 @@ target_cpu = @target_cpu@\n target_os = @target_os@\n target_vendor = @target_vendor@\n toolexeclibdir = @toolexeclibdir@\n+uudecode = @uudecode@\n vm_classes = @vm_classes@\n EXTRA_DIST = IMPORTING \\\n readme \\"}, {"sha": "5d59fdabe288d811cf9f80a6d2a030144bf64a37", "filename": "libjava/classpath/external/relaxngDatatype/Makefile.in", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2FrelaxngDatatype%2FMakefile.in?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -50,6 +50,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../ltsugar.m4 \\\n \t$(top_srcdir)/../../ltversion.m4 \\\n \t$(top_srcdir)/../../lt~obsolete.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_antlr.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_java.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_java_works.m4 \\\n \t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n \t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n@@ -72,6 +75,8 @@ ACLOCAL = @ACLOCAL@\n AMDEP_FALSE = @AMDEP_FALSE@\n AMDEP_TRUE = @AMDEP_TRUE@\n AMTAR = @AMTAR@\n+ANTLR = @ANTLR@\n+ANTLR_JAR = @ANTLR_JAR@\n AR = @AR@\n AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n@@ -103,6 +108,12 @@ CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n CREATE_GCONF_PEER_LIBRARIES_FALSE = @CREATE_GCONF_PEER_LIBRARIES_FALSE@\n CREATE_GCONF_PEER_LIBRARIES_TRUE = @CREATE_GCONF_PEER_LIBRARIES_TRUE@\n+CREATE_GJDOC_FALSE = @CREATE_GJDOC_FALSE@\n+CREATE_GJDOC_PARSER_FALSE = @CREATE_GJDOC_PARSER_FALSE@\n+CREATE_GJDOC_PARSER_TRUE = @CREATE_GJDOC_PARSER_TRUE@\n+CREATE_GJDOC_TRUE = @CREATE_GJDOC_TRUE@\n+CREATE_GMPBI_LIBRARY_FALSE = @CREATE_GMPBI_LIBRARY_FALSE@\n+CREATE_GMPBI_LIBRARY_TRUE = @CREATE_GMPBI_LIBRARY_TRUE@\n CREATE_GSTREAMER_PEER_LIBRARIES_FALSE = @CREATE_GSTREAMER_PEER_LIBRARIES_FALSE@\n CREATE_GSTREAMER_PEER_LIBRARIES_TRUE = @CREATE_GSTREAMER_PEER_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n@@ -141,11 +152,12 @@ ERROR_CFLAGS = @ERROR_CFLAGS@\n EXAMPLESDIR = @EXAMPLESDIR@\n EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n-FASTJAR = @FASTJAR@\n FGREP = @FGREP@\n FIND = @FIND@\n FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n+GCJ_JAVAC_FALSE = @GCJ_JAVAC_FALSE@\n+GCJ_JAVAC_TRUE = @GCJ_JAVAC_TRUE@\n GCONF_CFLAGS = @GCONF_CFLAGS@\n GCONF_LIBS = @GCONF_LIBS@\n GDK_CFLAGS = @GDK_CFLAGS@\n@@ -155,6 +167,8 @@ GENINSRC_TRUE = @GENINSRC_TRUE@\n GJDOC = @GJDOC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n+GMP_CFLAGS = @GMP_CFLAGS@\n+GMP_LIBS = @GMP_LIBS@\n GREP = @GREP@\n GSTREAMER_BASE_CFLAGS = @GSTREAMER_BASE_CFLAGS@\n GSTREAMER_BASE_LIBS = @GSTREAMER_BASE_LIBS@\n@@ -176,7 +190,10 @@ INSTALL_GLIBJ_ZIP_TRUE = @INSTALL_GLIBJ_ZIP_TRUE@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+JAR = @JAR@\n+JAVA = @JAVA@\n JAVAC = @JAVAC@\n+JAVAC_IS_GCJ = @JAVAC_IS_GCJ@\n JAVAC_MEM_OPT = @JAVAC_MEM_OPT@\n JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n JAVA_MAINTAINER_MODE_FALSE = @JAVA_MAINTAINER_MODE_FALSE@\n@@ -242,8 +259,10 @@ USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n USE_PREBUILT_GLIBJ_ZIP_TRUE = @USE_PREBUILT_GLIBJ_ZIP_TRUE@\n VERSION = @VERSION@\n-VM_BINARY = @VM_BINARY@\n+WANT_NATIVE_BIG_INTEGER = @WANT_NATIVE_BIG_INTEGER@\n WARNING_CFLAGS = @WARNING_CFLAGS@\n+WITH_JAR_FALSE = @WITH_JAR_FALSE@\n+WITH_JAR_TRUE = @WITH_JAR_TRUE@\n XML_CFLAGS = @XML_CFLAGS@\n XML_LIBS = @XML_LIBS@\n XSLT_CFLAGS = @XSLT_CFLAGS@\n@@ -254,6 +273,7 @@ X_EXTRA_LIBS = @X_EXTRA_LIBS@\n X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZIP = @ZIP@\n+ac_ct_ANTLR = @ac_ct_ANTLR@\n ac_ct_AR = @ac_ct_AR@\n ac_ct_CC = @ac_ct_CC@\n ac_ct_CXX = @ac_ct_CXX@\n@@ -313,6 +333,7 @@ target_cpu = @target_cpu@\n target_os = @target_os@\n target_vendor = @target_vendor@\n toolexeclibdir = @toolexeclibdir@\n+uudecode = @uudecode@\n vm_classes = @vm_classes@\n EXTRA_DIST = README.txt \\\n copying.txt \\"}, {"sha": "1f20b35bb2fadd06ea92e2391217dd77eae84407", "filename": "libjava/classpath/external/sax/Makefile.in", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fsax%2FMakefile.in?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -50,6 +50,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../ltsugar.m4 \\\n \t$(top_srcdir)/../../ltversion.m4 \\\n \t$(top_srcdir)/../../lt~obsolete.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_antlr.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_java.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_java_works.m4 \\\n \t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n \t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n@@ -72,6 +75,8 @@ ACLOCAL = @ACLOCAL@\n AMDEP_FALSE = @AMDEP_FALSE@\n AMDEP_TRUE = @AMDEP_TRUE@\n AMTAR = @AMTAR@\n+ANTLR = @ANTLR@\n+ANTLR_JAR = @ANTLR_JAR@\n AR = @AR@\n AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n@@ -103,6 +108,12 @@ CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n CREATE_GCONF_PEER_LIBRARIES_FALSE = @CREATE_GCONF_PEER_LIBRARIES_FALSE@\n CREATE_GCONF_PEER_LIBRARIES_TRUE = @CREATE_GCONF_PEER_LIBRARIES_TRUE@\n+CREATE_GJDOC_FALSE = @CREATE_GJDOC_FALSE@\n+CREATE_GJDOC_PARSER_FALSE = @CREATE_GJDOC_PARSER_FALSE@\n+CREATE_GJDOC_PARSER_TRUE = @CREATE_GJDOC_PARSER_TRUE@\n+CREATE_GJDOC_TRUE = @CREATE_GJDOC_TRUE@\n+CREATE_GMPBI_LIBRARY_FALSE = @CREATE_GMPBI_LIBRARY_FALSE@\n+CREATE_GMPBI_LIBRARY_TRUE = @CREATE_GMPBI_LIBRARY_TRUE@\n CREATE_GSTREAMER_PEER_LIBRARIES_FALSE = @CREATE_GSTREAMER_PEER_LIBRARIES_FALSE@\n CREATE_GSTREAMER_PEER_LIBRARIES_TRUE = @CREATE_GSTREAMER_PEER_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n@@ -141,11 +152,12 @@ ERROR_CFLAGS = @ERROR_CFLAGS@\n EXAMPLESDIR = @EXAMPLESDIR@\n EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n-FASTJAR = @FASTJAR@\n FGREP = @FGREP@\n FIND = @FIND@\n FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n+GCJ_JAVAC_FALSE = @GCJ_JAVAC_FALSE@\n+GCJ_JAVAC_TRUE = @GCJ_JAVAC_TRUE@\n GCONF_CFLAGS = @GCONF_CFLAGS@\n GCONF_LIBS = @GCONF_LIBS@\n GDK_CFLAGS = @GDK_CFLAGS@\n@@ -155,6 +167,8 @@ GENINSRC_TRUE = @GENINSRC_TRUE@\n GJDOC = @GJDOC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n+GMP_CFLAGS = @GMP_CFLAGS@\n+GMP_LIBS = @GMP_LIBS@\n GREP = @GREP@\n GSTREAMER_BASE_CFLAGS = @GSTREAMER_BASE_CFLAGS@\n GSTREAMER_BASE_LIBS = @GSTREAMER_BASE_LIBS@\n@@ -176,7 +190,10 @@ INSTALL_GLIBJ_ZIP_TRUE = @INSTALL_GLIBJ_ZIP_TRUE@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+JAR = @JAR@\n+JAVA = @JAVA@\n JAVAC = @JAVAC@\n+JAVAC_IS_GCJ = @JAVAC_IS_GCJ@\n JAVAC_MEM_OPT = @JAVAC_MEM_OPT@\n JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n JAVA_MAINTAINER_MODE_FALSE = @JAVA_MAINTAINER_MODE_FALSE@\n@@ -242,8 +259,10 @@ USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n USE_PREBUILT_GLIBJ_ZIP_TRUE = @USE_PREBUILT_GLIBJ_ZIP_TRUE@\n VERSION = @VERSION@\n-VM_BINARY = @VM_BINARY@\n+WANT_NATIVE_BIG_INTEGER = @WANT_NATIVE_BIG_INTEGER@\n WARNING_CFLAGS = @WARNING_CFLAGS@\n+WITH_JAR_FALSE = @WITH_JAR_FALSE@\n+WITH_JAR_TRUE = @WITH_JAR_TRUE@\n XML_CFLAGS = @XML_CFLAGS@\n XML_LIBS = @XML_LIBS@\n XSLT_CFLAGS = @XSLT_CFLAGS@\n@@ -254,6 +273,7 @@ X_EXTRA_LIBS = @X_EXTRA_LIBS@\n X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZIP = @ZIP@\n+ac_ct_ANTLR = @ac_ct_ANTLR@\n ac_ct_AR = @ac_ct_AR@\n ac_ct_CC = @ac_ct_CC@\n ac_ct_CXX = @ac_ct_CXX@\n@@ -313,6 +333,7 @@ target_cpu = @target_cpu@\n target_os = @target_os@\n target_vendor = @target_vendor@\n toolexeclibdir = @toolexeclibdir@\n+uudecode = @uudecode@\n vm_classes = @vm_classes@\n EXTRA_DIST = README \\\n org/xml/sax/ext/Attributes2.java \\"}, {"sha": "2079c48ac295a63d90c04d5d983aa6dee8bf09de", "filename": "libjava/classpath/external/w3c_dom/Makefile.in", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fexternal%2Fw3c_dom%2FMakefile.in?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -50,6 +50,9 @@ am__aclocal_m4_deps = $(top_srcdir)/../../config/depstand.m4 \\\n \t$(top_srcdir)/../../ltsugar.m4 \\\n \t$(top_srcdir)/../../ltversion.m4 \\\n \t$(top_srcdir)/../../lt~obsolete.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_antlr.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_java.m4 \\\n+\t$(top_srcdir)/m4/ac_prog_java_works.m4 \\\n \t$(top_srcdir)/m4/ac_prog_javac.m4 \\\n \t$(top_srcdir)/m4/ac_prog_javac_works.m4 \\\n \t$(top_srcdir)/m4/acattribute.m4 $(top_srcdir)/m4/accross.m4 \\\n@@ -72,6 +75,8 @@ ACLOCAL = @ACLOCAL@\n AMDEP_FALSE = @AMDEP_FALSE@\n AMDEP_TRUE = @AMDEP_TRUE@\n AMTAR = @AMTAR@\n+ANTLR = @ANTLR@\n+ANTLR_JAR = @ANTLR_JAR@\n AR = @AR@\n AUTOCONF = @AUTOCONF@\n AUTOHEADER = @AUTOHEADER@\n@@ -103,6 +108,12 @@ CREATE_DSSI_LIBRARIES_FALSE = @CREATE_DSSI_LIBRARIES_FALSE@\n CREATE_DSSI_LIBRARIES_TRUE = @CREATE_DSSI_LIBRARIES_TRUE@\n CREATE_GCONF_PEER_LIBRARIES_FALSE = @CREATE_GCONF_PEER_LIBRARIES_FALSE@\n CREATE_GCONF_PEER_LIBRARIES_TRUE = @CREATE_GCONF_PEER_LIBRARIES_TRUE@\n+CREATE_GJDOC_FALSE = @CREATE_GJDOC_FALSE@\n+CREATE_GJDOC_PARSER_FALSE = @CREATE_GJDOC_PARSER_FALSE@\n+CREATE_GJDOC_PARSER_TRUE = @CREATE_GJDOC_PARSER_TRUE@\n+CREATE_GJDOC_TRUE = @CREATE_GJDOC_TRUE@\n+CREATE_GMPBI_LIBRARY_FALSE = @CREATE_GMPBI_LIBRARY_FALSE@\n+CREATE_GMPBI_LIBRARY_TRUE = @CREATE_GMPBI_LIBRARY_TRUE@\n CREATE_GSTREAMER_PEER_LIBRARIES_FALSE = @CREATE_GSTREAMER_PEER_LIBRARIES_FALSE@\n CREATE_GSTREAMER_PEER_LIBRARIES_TRUE = @CREATE_GSTREAMER_PEER_LIBRARIES_TRUE@\n CREATE_GTK_PEER_LIBRARIES_FALSE = @CREATE_GTK_PEER_LIBRARIES_FALSE@\n@@ -141,11 +152,12 @@ ERROR_CFLAGS = @ERROR_CFLAGS@\n EXAMPLESDIR = @EXAMPLESDIR@\n EXEEXT = @EXEEXT@\n EXTRA_CFLAGS = @EXTRA_CFLAGS@\n-FASTJAR = @FASTJAR@\n FGREP = @FGREP@\n FIND = @FIND@\n FREETYPE2_CFLAGS = @FREETYPE2_CFLAGS@\n FREETYPE2_LIBS = @FREETYPE2_LIBS@\n+GCJ_JAVAC_FALSE = @GCJ_JAVAC_FALSE@\n+GCJ_JAVAC_TRUE = @GCJ_JAVAC_TRUE@\n GCONF_CFLAGS = @GCONF_CFLAGS@\n GCONF_LIBS = @GCONF_LIBS@\n GDK_CFLAGS = @GDK_CFLAGS@\n@@ -155,6 +167,8 @@ GENINSRC_TRUE = @GENINSRC_TRUE@\n GJDOC = @GJDOC@\n GLIB_CFLAGS = @GLIB_CFLAGS@\n GLIB_LIBS = @GLIB_LIBS@\n+GMP_CFLAGS = @GMP_CFLAGS@\n+GMP_LIBS = @GMP_LIBS@\n GREP = @GREP@\n GSTREAMER_BASE_CFLAGS = @GSTREAMER_BASE_CFLAGS@\n GSTREAMER_BASE_LIBS = @GSTREAMER_BASE_LIBS@\n@@ -176,7 +190,10 @@ INSTALL_GLIBJ_ZIP_TRUE = @INSTALL_GLIBJ_ZIP_TRUE@\n INSTALL_PROGRAM = @INSTALL_PROGRAM@\n INSTALL_SCRIPT = @INSTALL_SCRIPT@\n INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@\n+JAR = @JAR@\n+JAVA = @JAVA@\n JAVAC = @JAVAC@\n+JAVAC_IS_GCJ = @JAVAC_IS_GCJ@\n JAVAC_MEM_OPT = @JAVAC_MEM_OPT@\n JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION = @JAVA_LANG_SYSTEM_EXPLICIT_INITIALIZATION@\n JAVA_MAINTAINER_MODE_FALSE = @JAVA_MAINTAINER_MODE_FALSE@\n@@ -242,8 +259,10 @@ USE_ESCHER_TRUE = @USE_ESCHER_TRUE@\n USE_PREBUILT_GLIBJ_ZIP_FALSE = @USE_PREBUILT_GLIBJ_ZIP_FALSE@\n USE_PREBUILT_GLIBJ_ZIP_TRUE = @USE_PREBUILT_GLIBJ_ZIP_TRUE@\n VERSION = @VERSION@\n-VM_BINARY = @VM_BINARY@\n+WANT_NATIVE_BIG_INTEGER = @WANT_NATIVE_BIG_INTEGER@\n WARNING_CFLAGS = @WARNING_CFLAGS@\n+WITH_JAR_FALSE = @WITH_JAR_FALSE@\n+WITH_JAR_TRUE = @WITH_JAR_TRUE@\n XML_CFLAGS = @XML_CFLAGS@\n XML_LIBS = @XML_LIBS@\n XSLT_CFLAGS = @XSLT_CFLAGS@\n@@ -254,6 +273,7 @@ X_EXTRA_LIBS = @X_EXTRA_LIBS@\n X_LIBS = @X_LIBS@\n X_PRE_LIBS = @X_PRE_LIBS@\n ZIP = @ZIP@\n+ac_ct_ANTLR = @ac_ct_ANTLR@\n ac_ct_AR = @ac_ct_AR@\n ac_ct_CC = @ac_ct_CC@\n ac_ct_CXX = @ac_ct_CXX@\n@@ -313,6 +333,7 @@ target_cpu = @target_cpu@\n target_os = @target_os@\n target_vendor = @target_vendor@\n toolexeclibdir = @toolexeclibdir@\n+uudecode = @uudecode@\n vm_classes = @vm_classes@\n EXTRA_DIST = README \\\n org/w3c/dom/Attr.java \\"}, {"sha": "33b74bb778083c1ca32f5261c49ac72ba03c6190", "filename": "libjava/classpath/gnu/CORBA/BigDecimalHelper.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FBigDecimalHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FBigDecimalHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FBigDecimalHelper.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.CORBA;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.ByteArrayInputStream;\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n@@ -135,7 +137,7 @@ public static BigDecimal read(java.io.InputStream in, int scale)\n   public static void write(java.io.OutputStream out, BigDecimal x)\n                     throws IOException, BadKind\n   {\n-    StringBuffer v = new StringBuffer(x.unscaledValue().toString());\n+    CPStringBuilder v = new CPStringBuilder(x.unscaledValue().toString());\n \n     boolean negative = v.charAt(0) == '-';\n \n@@ -165,7 +167,7 @@ public static void write(java.io.OutputStream out, BigDecimal x)\n    */\n   private static BigDecimal createFixed(int scale, byte[] d)\n   {\n-    StringBuffer s = new StringBuffer(2 * d.length);\n+    CPStringBuilder s = new CPStringBuilder(2 * d.length);\n \n     int last = d.length - 1;\n "}, {"sha": "93d18fb11400daf4d95bf10fb347aa4f7734d77c", "filename": "libjava/classpath/gnu/CORBA/CDR/LittleEndianInputStream.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FLittleEndianInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FLittleEndianInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FLittleEndianInputStream.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.CORBA.CDR;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.EOFException;\n import java.io.FilterInputStream;\n import java.io.IOException;\n@@ -360,7 +362,7 @@ public int readInt()\n   public String readLine()\n                   throws IOException\n   {\n-    StringBuffer strb = new StringBuffer();\n+    CPStringBuilder strb = new CPStringBuilder();\n \n     while (true)\n       {\n@@ -629,4 +631,4 @@ public String readUTF()\n   {\n     throw new InternalError();\n   }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "86f842c34bb85fd8bf7cbb841b644695ab5cf8ab", "filename": "libjava/classpath/gnu/CORBA/CDR/Vio.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FVio.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FVio.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FVio.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -41,6 +41,8 @@\n import gnu.CORBA.Minor;\n import gnu.CORBA.ObjectCreator;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.omg.CORBA.CustomMarshal;\n import org.omg.CORBA.DataInputStream;\n import org.omg.CORBA.DataOutputStream;\n@@ -754,7 +756,7 @@ static String list(String[] s)\n       return \"null\";\n     else\n       {\n-        StringBuffer b = new StringBuffer(\"{\");\n+        CPStringBuilder b = new CPStringBuilder(\"{\");\n         for (int i = 0; i < s.length; i++)\n           {\n             b.append(s[i]);\n@@ -1469,4 +1471,4 @@ public static Object instantiateAnyWay(Class clazz)\n     return VMVio.allocateObject(clazz, constructor.getDeclaringClass(),\n       constructor);\n   }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "4af8c68515a4c1f5b0588207c4f1c1ae79e203ff", "filename": "libjava/classpath/gnu/CORBA/CDR/gnuRuntime.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FgnuRuntime.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FgnuRuntime.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FCDR%2FgnuRuntime.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -40,6 +40,8 @@\n \n import gnu.CORBA.Minor;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.omg.CORBA.LocalObject;\n import org.omg.CORBA.MARSHAL;\n \n@@ -318,7 +320,7 @@ public void addCodeBase(String base)\n    */\n   public String dump()\n   {\n-    StringBuffer b = new StringBuffer(\" Stream content: \\n\");\n+    CPStringBuilder b = new CPStringBuilder(\" Stream content: \\n\");\n \n     // Sort by position.\n     TreeSet t = new TreeSet(positions.keySet());"}, {"sha": "f63cbea170822e4dcf9d62942f438e292d1706f3", "filename": "libjava/classpath/gnu/CORBA/GIOP/MessageHeader.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FMessageHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FMessageHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FMessageHeader.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -47,6 +47,8 @@\n import gnu.CORBA.CDR.AbstractDataInput;\n import gnu.CORBA.CDR.AbstractDataOutput;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.omg.CORBA.MARSHAL;\n import org.omg.CORBA.portable.IDLEntity;\n \n@@ -286,7 +288,7 @@ public void read(java.io.InputStream istream)\n         int minor;\n         if (! Arrays.equals(xMagic, MAGIC))\n           {\n-            StringBuffer b = new StringBuffer();\n+            CPStringBuilder b = new CPStringBuilder();\n             if (r == - 1)\n               {\n                 b.append(\"Immediate EOF\");\n@@ -460,4 +462,4 @@ public byte[] readMessage(InputStream source, Socket service, int to_read,\n         throw m;\n       }\n   }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "45997ab3deb4feec9586893e82ae27c949dbe222", "filename": "libjava/classpath/gnu/CORBA/GIOP/RequestHeader.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FRequestHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FRequestHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2FRequestHeader.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -41,6 +41,8 @@\n import gnu.CORBA.CDR.AbstractCdrInput;\n import gnu.CORBA.CDR.AbstractCdrOutput;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.omg.CORBA.portable.IDLEntity;\n \n /**\n@@ -123,7 +125,7 @@ public static synchronized int getNextId()\n    */\n   public String bytes(byte[] array)\n   {\n-    StringBuffer b = new StringBuffer();\n+    CPStringBuilder b = new CPStringBuilder();\n     for (int i = 0; i < array.length; i++)\n       {\n         b.append(Integer.toHexString(array[i] & 0xFF));"}, {"sha": "dcb00c0ebc4159bf739047ee74014b4c30ec7789", "filename": "libjava/classpath/gnu/CORBA/GIOP/v1_0/ReplyHeader.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_0%2FReplyHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_0%2FReplyHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_0%2FReplyHeader.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -43,6 +43,8 @@\n import gnu.CORBA.GIOP.ServiceContext;\n import gnu.CORBA.GIOP.CodeSetServiceContext;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n /**\n  * The header of the standard reply.\n  *\n@@ -80,7 +82,7 @@ public String getStatusString()\n    */\n   public String contexts()\n   {\n-    StringBuffer b = new StringBuffer();\n+    CPStringBuilder b = new CPStringBuilder();\n     for (int i = 0; i < service_context.length; i++)\n       {\n         b.append(service_context [ i ].toString());"}, {"sha": "d2bea9d88044406699b2a9e7962da172683083bb", "filename": "libjava/classpath/gnu/CORBA/GIOP/v1_0/RequestHeader.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_0%2FRequestHeader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_0%2FRequestHeader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FGIOP%2Fv1_0%2FRequestHeader.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -43,6 +43,8 @@\n import gnu.CORBA.GIOP.ServiceContext;\n import gnu.CORBA.GIOP.CodeSetServiceContext;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.omg.CORBA.portable.IDLEntity;\n \n /**\n@@ -81,7 +83,7 @@ public boolean isResponseExpected()\n \n   public String bytes(byte[] array)\n   {\n-    StringBuffer b = new StringBuffer();\n+    CPStringBuilder b = new CPStringBuilder();\n     for (int i = 0; i < array.length; i++)\n       {\n         b.append(Integer.toHexString(array [ i ] & 0xFF));\n@@ -95,7 +97,7 @@ public String bytes(byte[] array)\n    */\n   public String contexts()\n   {\n-    StringBuffer b = new StringBuffer();\n+    CPStringBuilder b = new CPStringBuilder();\n     for (int i = 0; i < service_context.length; i++)\n       {\n         b.append(service_context [ i ].toString());"}, {"sha": "7f63471eef0912d2e9770fb18bb206a2bab403b5", "filename": "libjava/classpath/gnu/CORBA/IOR.java", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIOR.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIOR.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FIOR.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -45,6 +45,8 @@\n import gnu.CORBA.GIOP.CharSets_OSF;\n import gnu.CORBA.GIOP.CodeSetServiceContext;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.omg.CORBA.BAD_PARAM;\n import org.omg.CORBA.CompletionStatus;\n import org.omg.CORBA.MARSHAL;\n@@ -126,7 +128,7 @@ public void read(org.omg.CORBA.portable.InputStream in)\n        */\n       public String toString()\n       {\n-        StringBuffer b = new StringBuffer();\n+        CPStringBuilder b = new CPStringBuilder();\n         b.append(\"native \" + name(native_set));\n         if (conversion != null && conversion.length > 0)\n           {\n@@ -146,7 +148,7 @@ public String toString()\n        */\n       public String toStringFormatted()\n       {\n-        StringBuffer b = new StringBuffer();\n+        CPStringBuilder b = new CPStringBuilder();\n         b.append(\"\\n  Native set \" + name(native_set));\n         if (conversion != null && conversion.length > 0)\n           {\n@@ -282,7 +284,7 @@ public void write(AbstractCdrOutput profile)\n      */\n     public String toString()\n     {\n-      StringBuffer b = new StringBuffer();\n+      CPStringBuilder b = new CPStringBuilder();\n       b.append(host);\n       b.append(\":\");\n       b.append(port);\n@@ -591,7 +593,7 @@ public void _write_no_endian(AbstractCdrOutput out)\n    */\n   public String toString()\n   {\n-    StringBuffer b = new StringBuffer();\n+    CPStringBuilder b = new CPStringBuilder();\n     b.append(Id);\n     b.append(\" at \");\n     b.append(Internet);\n@@ -618,7 +620,7 @@ public String toString()\n    */\n   public String toStringFormatted()\n   {\n-    StringBuffer b = new StringBuffer();\n+    CPStringBuilder b = new CPStringBuilder();\n     b.append(\"\\nObject Id:\\n  \");\n     b.append(Id);\n     b.append(\"\\nObject is accessible at:\\n  \");\n@@ -656,7 +658,7 @@ public String toStringifiedReference()\n \n     _write(out);\n \n-    StringBuffer b = new StringBuffer(\"IOR:\");\n+    CPStringBuilder b = new CPStringBuilder(\"IOR:\");\n \n     byte[] binary = out.buffer.toByteArray();\n     String s;\n@@ -819,4 +821,4 @@ public int hashCode()\n       }\n     return (int) adler.getValue();\n   }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "5d4b729a569dd81b9b62055da5ebf5f0a21e5cd5", "filename": "libjava/classpath/gnu/CORBA/NamingService/NameParser.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameParser.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -44,6 +44,8 @@\n import gnu.CORBA.Unexpected;\n import gnu.CORBA.Version;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.omg.CORBA.BAD_PARAM;\n import org.omg.CORBA.DATA_CONVERSION;\n import org.omg.CORBA.ORB;\n@@ -301,7 +303,7 @@ else if (t[p].equalsIgnoreCase(pxIOR))\n             ior.Internet.version = new Version(major, minor);\n \n             // Then host data goes till '/' or ':'.\n-            StringBuffer bhost = new StringBuffer(corbaloc.length());\n+            CPStringBuilder bhost = new CPStringBuilder(corbaloc.length());\n             while (!t[p].equals(\":\") && !t[p].equals(\"/\") && !t[p].equals(\",\"))\n               bhost.append(t[p++]);\n \n@@ -394,7 +396,7 @@ String readUrl(String url)\n       {\n         InputStreamReader r = new InputStreamReader(u.openStream());\n \n-        StringBuffer b = new StringBuffer();\n+        CPStringBuilder b = new CPStringBuilder();\n         int c;\n \n         while ((c = r.read()) > 0)\n@@ -465,7 +467,7 @@ private String readKey(String delimiter)\n               + \"' found\");\n         }\n \n-    StringBuffer bKey = new StringBuffer();\n+    CPStringBuilder bKey = new CPStringBuilder();\n     p++;\n \n     while (p < t.length && !t[p].equals(\"#\"))"}, {"sha": "132c5dd8f04e4b6d5390d0ed1a006ae4939818d5", "filename": "libjava/classpath/gnu/CORBA/NamingService/NameTransformer.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameTransformer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameTransformer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FNamingService%2FNameTransformer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.CORBA.NamingService;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.omg.CORBA.IntHolder;\n import org.omg.CosNaming.NameComponent;\n import org.omg.CosNaming.NamingContextPackage.InvalidName;\n@@ -125,7 +127,7 @@ public String toString(NameComponent[] a_name)\n   {\n     NameValidator.check(a_name);\n \n-    StringBuffer b = new StringBuffer();\n+    CPStringBuilder b = new CPStringBuilder();\n \n     NameComponent n;\n \n@@ -152,7 +154,7 @@ public String toString(NameComponent[] a_name)\n    * @param b a buffer to append the contents to.\n    * @param s a string to append.\n    */\n-  private void appEscaping(StringBuffer b, String s)\n+  private void appEscaping(CPStringBuilder b, String s)\n   {\n     char c;\n     for (int i = 0; i < s.length(); i++)\n@@ -271,7 +273,7 @@ else if (t [ p.value ].equals(\"/\"))\n    */\n   private String readPart(IntHolder p, String[] t)\n   {\n-    StringBuffer part = new StringBuffer();\n+    CPStringBuilder part = new CPStringBuilder();\n \n     while (t [ p.value ] != null && !t [ p.value ].equals(\".\") &&\n            !t [ p.value ].equals(\"/\")"}, {"sha": "25344cb2ec0226b99c3ab8e419383de19e659289", "filename": "libjava/classpath/gnu/CORBA/OrbFunctional.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbFunctional.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbFunctional.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FOrbFunctional.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -1194,7 +1194,7 @@ protected void set_parameters(Applet app, Properties props)\n    */\n   protected void set_parameters(String[] para, Properties props)\n   {\n-    if (para.length > 1)\n+    if ((para != null) && para.length > 1)\n       {\n         for (int i = 0; i < para.length - 1; i++)\n           {"}, {"sha": "32fc5bfd221594bd7a5748b1011d0c83100ca124", "filename": "libjava/classpath/gnu/CORBA/Poa/gnuPOA.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuPOA.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuPOA.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuPOA.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.CORBA.Poa;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.util.ArrayList;\n import java.util.Arrays;\n import java.util.HashSet;\n@@ -1604,7 +1606,7 @@ protected void connect_to_orb(byte[] an_Object_Id, org.omg.CORBA.Object object)\n    */\n   public String toString()\n   {\n-    StringBuffer b = new StringBuffer(name);\n+    CPStringBuilder b = new CPStringBuilder(name);\n \n     if (children.size() != 0)\n       {"}, {"sha": "7e9b4f2f599323db1012a43440ac048578ccd813", "filename": "libjava/classpath/gnu/CORBA/Poa/gnuServantObject.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuServantObject.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuServantObject.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2FCORBA%2FPoa%2FgnuServantObject.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -51,6 +51,8 @@\n import gnu.CORBA.ResponseHandlerImpl;\n import gnu.CORBA.StreamHolder;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.omg.CORBA.Any;\n import org.omg.CORBA.BAD_OPERATION;\n import org.omg.CORBA.BAD_PARAM;\n@@ -357,7 +359,7 @@ public String[] _ids()\n    */\n   public String toString()\n   {\n-    StringBuffer b = new StringBuffer(\"Servant object (\");\n+    CPStringBuilder b = new CPStringBuilder(\"Servant object (\");\n     for (int i = 0; i < Id.length; i++)\n       {\n         b.append(Integer.toHexString(Id [ i ] & 0xFF));\n@@ -820,4 +822,4 @@ else if (other instanceof IorObject)\n       }\n     return super._is_equivalent(other);\n   }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "4a9b65f5666775ca771cdce35211dd03c6a9c000", "filename": "libjava/classpath/gnu/classpath/Configuration.java.in", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FConfiguration.java.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FConfiguration.java.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2FConfiguration.java.in?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -101,4 +101,14 @@ public interface Configuration\n    * com.sun.tools.javac implementation in tools.zip.\n    */\n   String ECJ_JAR = \"@ECJ_JAR@\";\n+\n+  /**\n+   * Set to <code>true</code> if the config script found that (a) an\n+   * implementation of java.math.BigInteger, based on the GNU MP library, is\n+   * desired in preference to a pure Java one, and (b) the GNU MP library was\n+   * found on the platform where the JVM is to run. Otherwise, this field is\n+   * set to <code>false</code>.\n+   */\n+  boolean WANT_NATIVE_BIG_INTEGER = @WANT_NATIVE_BIG_INTEGER@;\n+\n }"}, {"sha": "b6e0cfeb8b3b15c53fb064a6d5e252536fd9c0d5", "filename": "libjava/classpath/gnu/classpath/jdwp/processor/VirtualMachineCommandSet.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FVirtualMachineCommandSet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FVirtualMachineCommandSet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Fprocessor%2FVirtualMachineCommandSet.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -264,7 +264,7 @@ private void executeTopLevelThreadGroups(ByteBuffer bb, DataOutputStream os)\n     ThreadGroup root = getRootThreadGroup(jdwpGroup);\n \n     os.writeInt(1); // Just one top level group allowed?\n-    idMan.getObjectId(root);\n+    idMan.getObjectId(root).write(os);\n   }\n \n   private void executeDispose(ByteBuffer bb, DataOutputStream os)"}, {"sha": "e7453bf0174b8eb7caeb246da784aa1e4228faf4", "filename": "libjava/classpath/gnu/classpath/jdwp/util/Signature.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Futil%2FSignature.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Futil%2FSignature.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fclasspath%2Fjdwp%2Futil%2FSignature.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -39,6 +39,8 @@\n \n package gnu.classpath.jdwp.util;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.lang.reflect.Field;\n import java.lang.reflect.Method;\n \n@@ -59,7 +61,7 @@\n    */\n   public static String computeClassSignature (Class theClass)\n   {\n-    StringBuffer sb = new StringBuffer ();\n+    CPStringBuilder sb = new CPStringBuilder ();\n     _addToSignature (sb, theClass);\n     return sb.toString ();\n   }\n@@ -93,7 +95,7 @@ public static String computeMethodSignature (Method method)\n   private static String _computeSignature (Class returnType,\n \t\t\t\t\t   Class[] paramTypes)\n   {\n-    StringBuffer sb = new StringBuffer (\"(\");\n+    CPStringBuilder sb = new CPStringBuilder (\"(\");\n     if (paramTypes != null)\n       {\n \tfor (int i = 0; i < paramTypes.length; ++i)\n@@ -104,7 +106,7 @@ private static String _computeSignature (Class returnType,\n     return sb.toString();\n   }\n \n-  private static void _addToSignature (StringBuffer sb, Class k)\n+  private static void _addToSignature (CPStringBuilder sb, Class k)\n   {\n     // For some reason there's no easy way to get the signature of a\n     // class."}, {"sha": "e8124528e6afbfd3c16ef0c2127822d891086dac", "filename": "libjava/classpath/gnu/java/awt/font/OpenTypeFontPeer.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2FOpenTypeFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2FOpenTypeFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2FOpenTypeFontPeer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,10 @@\n \n package gnu.java.awt.font;\n \n+\n+import gnu.java.awt.peer.ClasspathFontPeer;\n+import gnu.java.lang.CPStringBuilder;\n+\n import java.awt.Font;\n import java.awt.FontMetrics;\n import java.awt.font.FontRenderContext;\n@@ -61,8 +65,6 @@\n import java.util.Properties;\n import java.util.Set;\n \n-import gnu.java.awt.peer.ClasspathFontPeer;\n-\n public class OpenTypeFontPeer\n   extends ClasspathFontPeer\n {\n@@ -422,7 +424,7 @@ public static String encodeFont(String name, Map atts)\n    */\n   static String encodeFont(String name, int style)\n   {\n-    StringBuilder key = new StringBuilder();\n+    CPStringBuilder key = new CPStringBuilder();\n     key.append(validName(name));\n     key.append('/');\n     switch (style)"}, {"sha": "6420fa1cb147083dedd6c01934a940f67e32b5dc", "filename": "libjava/classpath/gnu/java/awt/font/autofit/Edge.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FEdge.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FEdge.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FEdge.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.awt.font.autofit;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n class Edge\n {\n   int fpos;\n@@ -54,7 +56,7 @@\n \n   public String toString()\n   {\n-    StringBuilder s = new StringBuilder();\n+    CPStringBuilder s = new CPStringBuilder();\n     s.append(\"[Edge] id\");\n     s.append(hashCode());\n     s.append(\", fpos: \");"}, {"sha": "2cf68b75c5a4c9696554bad6498ed23b97a84f05", "filename": "libjava/classpath/gnu/java/awt/font/autofit/LatinBlue.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FLatinBlue.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FLatinBlue.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FLatinBlue.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.awt.font.autofit;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n public class LatinBlue\n {\n   static final int FLAG_BLUE_ACTIVE = 1 << 0;\n@@ -48,7 +50,7 @@\n   int flags;\n   public String toString()\n   {\n-    StringBuilder s = new StringBuilder();\n+    CPStringBuilder s = new CPStringBuilder();\n     s.append(\"[BlueZone]\");\n     s.append(\" ref: \");\n     s.append(ref.org);"}, {"sha": "9f9da6792556af367d5032c48ccddcabac55ead0", "filename": "libjava/classpath/gnu/java/awt/font/autofit/Segment.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FSegment.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FSegment.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FSegment.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -40,6 +40,8 @@\n \n import gnu.java.awt.font.opentype.truetype.Point;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n class Segment\n {\n \n@@ -65,7 +67,7 @@\n \n   public String toString()\n   {\n-    StringBuilder s = new StringBuilder();\n+    CPStringBuilder s = new CPStringBuilder();\n     s.append(\"[Segment] id: \");\n     s.append(hashCode());\n     s.append(\", len:\");"}, {"sha": "079f7b396c84f59baaabb69995e03427a80d6ac3", "filename": "libjava/classpath/gnu/java/awt/font/autofit/Width.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FWidth.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FWidth.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fautofit%2FWidth.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.awt.font.autofit;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n public class Width\n {\n   int org;\n@@ -50,7 +52,7 @@\n \n   public String toString()\n   {\n-    StringBuilder s = new StringBuilder();\n+    CPStringBuilder s = new CPStringBuilder();\n     s.append(\"[Width] org: \");\n     s.append(org);\n     s.append(\", cur: \");"}, {"sha": "c2b009de3e683c24446d8d8f38e01d1dfaaafb3e", "filename": "libjava/classpath/gnu/java/awt/font/opentype/GlyphNamer.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2FGlyphNamer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2FGlyphNamer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2FGlyphNamer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.java.awt.font.opentype;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.nio.ByteBuffer;\n import java.nio.IntBuffer;\n import java.nio.CharBuffer;\n@@ -1077,7 +1079,7 @@ private static String getGlyphName(char[] chars)\n         return name;\n     }\n     \n-    StringBuffer buf = new StringBuffer(numChars * 8);\n+    CPStringBuilder buf = new CPStringBuilder(numChars * 8);\n     for (int i = 0; i < numChars; i++)\n     {\n       if (i > 0)"}, {"sha": "87dfebd412b3cf41e9d320a6a8b43704a798a955", "filename": "libjava/classpath/gnu/java/awt/font/opentype/truetype/Fixed.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2Ftruetype%2FFixed.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2Ftruetype%2FFixed.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2Ftruetype%2FFixed.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,7 @@\n \n package gnu.java.awt.font.opentype.truetype;\n \n+import gnu.java.lang.CPStringBuilder;\n \n /**\n  * A utility class for fixed-point arithmetics, where numbers are\n@@ -164,7 +165,7 @@ public static String toString(int f)\n \n   public static String toString(int x, int y)\n   {\n-    StringBuffer sbuf = new StringBuffer(40);\n+    CPStringBuilder sbuf = new CPStringBuilder(40);\n     sbuf.append('(');\n     sbuf.append(((float) x) / 64);\n     sbuf.append(\", \");"}, {"sha": "31c12037c27974d6fed5827cdd8c604acd306b26", "filename": "libjava/classpath/gnu/java/awt/font/opentype/truetype/Point.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2Ftruetype%2FPoint.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2Ftruetype%2FPoint.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2Ftruetype%2FPoint.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.awt.font.opentype.truetype;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n /**\n  * Encapsulates information regarding one point on a glyph outline.\n  */\n@@ -234,7 +236,7 @@ public void setV(int v)\n \n   public String toString()\n   {\n-    StringBuilder s = new StringBuilder();\n+    CPStringBuilder s = new CPStringBuilder();\n     s.append(\"[Point] origX: \");\n     s.append(origX);\n     s.append(\", origY: \");"}, {"sha": "c88d4c6491c85ae53ec566232389c1b663e93cc6", "filename": "libjava/classpath/gnu/java/awt/font/opentype/truetype/VirtualMachine.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2Ftruetype%2FVirtualMachine.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2Ftruetype%2FVirtualMachine.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Ffont%2Fopentype%2Ftruetype%2FVirtualMachine.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.java.awt.font.opentype.truetype;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.awt.FontFormatException;\n import java.awt.geom.AffineTransform;\n import java.nio.ByteBuffer;\n@@ -514,7 +516,7 @@ && executeInstruction(instructions))\n    */\n   private void dumpInstruction(ByteBuffer inst)\n   {\n-    StringBuffer sbuf = new StringBuffer(40);\n+    CPStringBuilder sbuf = new CPStringBuilder(40);\n     int pc = inst.position();\n     int bcode = inst.get(pc) & 0xff;\n     int count;"}, {"sha": "8504659388ca687febf793170634f722c2d6c0be", "filename": "libjava/classpath/gnu/java/awt/java2d/AbstractGraphics2D.java", "status": "modified", "additions": 137, "deletions": 32, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FAbstractGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FAbstractGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FAbstractGraphics2D.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -46,6 +46,7 @@\n import java.awt.Color;\n import java.awt.Composite;\n import java.awt.CompositeContext;\n+import java.awt.Dimension;\n import java.awt.Font;\n import java.awt.FontMetrics;\n import java.awt.Graphics;\n@@ -75,9 +76,12 @@\n import java.awt.image.BufferedImageOp;\n import java.awt.image.ColorModel;\n import java.awt.image.DataBuffer;\n+import java.awt.image.FilteredImageSource;\n import java.awt.image.ImageObserver;\n+import java.awt.image.ImageProducer;\n import java.awt.image.Raster;\n import java.awt.image.RenderedImage;\n+import java.awt.image.ReplicateScaleFilter;\n import java.awt.image.SampleModel;\n import java.awt.image.WritableRaster;\n import java.awt.image.renderable.RenderableImage;\n@@ -86,6 +90,7 @@\n import java.util.HashMap;\n import java.util.LinkedList;\n import java.util.Map;\n+import java.util.WeakHashMap;\n \n /**\n  * This is a 100% Java implementation of the Java2D rendering pipeline. It is\n@@ -154,7 +159,14 @@\n   extends Graphics2D\n   implements Cloneable, Pixelizer\n {\n-\n+  /**\n+   * Caches scaled versions of an image.\n+   *\n+   * @see #drawImage(Image, int, int, int, int, ImageObserver)\n+   */\n+  protected static final WeakHashMap<Image, HashMap<Dimension,Image>> imageCache =\n+    new WeakHashMap<Image, HashMap<Dimension, Image>>();\n+  \n   /**\n    * Wether we use anti aliasing for rendering text by default or not.\n    */\n@@ -210,13 +222,19 @@\n   /**\n    * The paint context during rendering.\n    */\n-  private PaintContext paintContext;\n+  private PaintContext paintContext = null;\n \n   /**\n    * The background.\n    */\n-  private Color background;\n+  private Color background = Color.WHITE;\n \n+  /**\n+   * Foreground color, as set by setColor.\n+   */\n+  private Color foreground = Color.BLACK;\n+  private boolean isForegroundColorNull = true;\n+  \n   /**\n    * The current font.\n    */\n@@ -266,15 +284,19 @@\n \n   private static final BasicStroke STANDARD_STROKE = new BasicStroke();\n \n-  private static final HashMap STANDARD_HINTS;\n-  static {\n-    HashMap hints = new HashMap();\n-  hints.put(RenderingHints.KEY_TEXT_ANTIALIASING,\n-            RenderingHints.VALUE_TEXT_ANTIALIAS_DEFAULT);\n-  hints.put(RenderingHints.KEY_ANTIALIASING,\n-            RenderingHints.VALUE_ANTIALIAS_DEFAULT);\n-  STANDARD_HINTS = hints;\n-  }\n+  private static final HashMap<Key, Object> STANDARD_HINTS;\n+  static\n+    {\n+    \n+      HashMap<Key, Object> hints = new HashMap<Key, Object>();\n+      hints.put(RenderingHints.KEY_TEXT_ANTIALIASING,\n+                RenderingHints.VALUE_TEXT_ANTIALIAS_DEFAULT);\n+      hints.put(RenderingHints.KEY_ANTIALIASING,\n+                RenderingHints.VALUE_ANTIALIAS_DEFAULT);\n+    \n+      STANDARD_HINTS = hints;\n+    }\n+  \n   /**\n    * Creates a new AbstractGraphics2D instance.\n    */\n@@ -626,14 +648,29 @@ public void setPaint(Paint p)\n     if (p != null)\n       {\n         paint = p;\n-\n+        \n         if (! (paint instanceof Color))\n-          isOptimized = false;\n+          {\n+            isOptimized = false;\n+          }\n         else\n           {\n+            this.foreground = (Color) paint;\n+            isForegroundColorNull = false;\n             updateOptimization();\n           }\n       }\n+    else\n+      {\n+        this.foreground = Color.BLACK;\n+        isForegroundColorNull = true;\n+      }\n+    \n+    // free resources if needed, then put the paint context to null\n+    if (this.paintContext != null)\n+      this.paintContext.dispose();\n+    \n+    this.paintContext = null;\n   }\n \n   /**\n@@ -1058,10 +1095,10 @@ else if (clip != null)\n    */\n   public Color getColor()\n   {\n-    Color c = null;\n-    if (paint instanceof Color)\n-      c = (Color) paint;\n-    return c;\n+    if (isForegroundColorNull)\n+      return null;\n+    \n+    return this.foreground;\n   }\n \n   /**\n@@ -1070,8 +1107,8 @@ public Color getColor()\n    * @param color the foreground to set\n    */\n   public void setColor(Color color)\n-  {\n-    setPaint(color);\n+  { \n+    this.setPaint(color);\n   }\n \n   public void setPaintMode()\n@@ -1468,11 +1505,19 @@ public boolean drawImage(Image image, int x, int y, int width, int height,\n                            ImageObserver observer)\n   {\n     AffineTransform t = new AffineTransform();\n-    t.translate(x, y);\n-    double scaleX = (double) width / (double) image.getWidth(observer);\n-    double scaleY =  (double) height / (double) image.getHeight(observer);\n-    t.scale(scaleX, scaleY);\n-    return drawImage(image, t, observer);\n+    int imWidth = image.getWidth(observer);\n+    int imHeight = image.getHeight(observer);\n+    if (imWidth == width && imHeight == height)\n+      {\n+        // No need to scale, fall back to non-scaling loops.\n+        return drawImage(image, x, y, observer);\n+      }\n+    else\n+      {\n+        Image scaled = prepareImage(image, width, height);\n+        // Ideally, this should notify the observer about the scaling progress.\n+        return drawImage(scaled, x, y, observer);\n+      }\n   }\n \n   /**\n@@ -1639,10 +1684,7 @@ protected void fillShape(Shape s, boolean isFont)\n    *\n    * @return the bounds of the target\n    */\n-  protected Rectangle getDeviceBounds()\n-  {\n-    return destinationRaster.getBounds();\n-  }\n+  protected abstract Rectangle getDeviceBounds();\n \n   /**\n    * Draws a line in optimization mode. The implementation should respect the\n@@ -1763,7 +1805,8 @@ private void copyAreaImpl(int x, int y, int w, int h, int dx, int dy)\n    */\n   public void renderScanline(int y, ScanlineCoverage c)\n   {\n-    PaintContext pCtx = paintContext;\n+    PaintContext pCtx = getPaintContext();\n+    \n     int x0 = c.getMinX();\n     int x1 = c.getMaxX();\n     Raster paintRaster = pCtx.getRaster(x0, y, x1 - x0, 1);\n@@ -1797,9 +1840,11 @@ public void renderScanline(int y, ScanlineCoverage c)\n     CompositeContext cCtx = composite.createContext(paintColorModel,\n                                                     getColorModel(),\n                                                     renderingHints);\n-    WritableRaster targetChild = destinationRaster.createWritableTranslatedChild(-x0,- y);\n+    WritableRaster raster = getDestinationRaster();\n+    WritableRaster targetChild = raster.createWritableTranslatedChild(-x0, -y);\n+    \n     cCtx.compose(paintRaster, targetChild, targetChild);\n-    updateRaster(destinationRaster, x0, y, x1 - x0, 1);\n+    updateRaster(raster, x0, y, x1 - x0, 1);\n     cCtx.dispose();\n   }\n \n@@ -1986,4 +2031,64 @@ private void freeScanlineConverter(ScanlineConverter sc)\n       }\n   }\n \n+  private PaintContext getPaintContext()\n+  {\n+    if (this.paintContext == null)\n+      {\n+        this.paintContext =\n+          this.foreground.createContext(getColorModel(),\n+                                        getDeviceBounds(),\n+                                        getClipBounds(),\n+                                        getTransform(),\n+                                        getRenderingHints());\n+      }\n+   \n+    return this.paintContext;\n+  }\n+\n+  /**\n+   * Scales an image to the specified width and height. This should also\n+   * be used to implement\n+   * {@link Toolkit#prepareImage(Image, int, int, ImageObserver)}.\n+   * This uses {@link Toolkit#createImage(ImageProducer)} to create the actual\n+   * image.\n+   *\n+   * @param image the image to prepare\n+   * @param w the width\n+   * @param h the height\n+   *\n+   * @return the scaled image\n+   */\n+  public static Image prepareImage(Image image, int w, int h)\n+  {\n+    // Try to find cached scaled image.\n+    HashMap<Dimension,Image> scaledTable = imageCache.get(image);\n+    Dimension size = new Dimension(w, h);\n+    Image scaled = null;\n+    if (scaledTable != null)\n+      {\n+        scaled = scaledTable.get(size);\n+      }\n+    if (scaled == null)\n+      {\n+        // No cached scaled image. Start scaling image now.\n+        ImageProducer source = image.getSource();\n+        ReplicateScaleFilter scaler = new ReplicateScaleFilter(w, h);\n+        FilteredImageSource filteredSource =\n+          new FilteredImageSource(source, scaler);\n+        // Ideally, this should asynchronously scale the image.\n+        Image scaledImage =\n+          Toolkit.getDefaultToolkit().createImage(filteredSource);\n+        scaled = scaledImage;\n+        // Put scaled image in cache.\n+        if (scaledTable == null)\n+          {\n+            scaledTable = new HashMap<Dimension,Image>();\n+            imageCache.put(image, scaledTable);\n+          }\n+        scaledTable.put(size, scaledImage);\n+      }\n+    return scaled;\n+  }\n+\n }"}, {"sha": "efe1966e37880d2f8c022dadb74e5c5418d2f308", "filename": "libjava/classpath/gnu/java/awt/java2d/ActiveEdges.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FActiveEdges.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FActiveEdges.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FActiveEdges.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.awt.java2d;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n /**\n  * A collection of active edges for scanline conversion.\n  */\n@@ -183,7 +185,7 @@ void remove(int y)\n \n   public String toString()\n   {\n-    StringBuilder s = new StringBuilder();\n+    CPStringBuilder s = new CPStringBuilder();\n     s.append(\"[ActiveEdges] \");\n     for (int i = 0; i < numActiveEdges; i++)\n       {"}, {"sha": "04eb55eb8d8482f1a7e7d159d53363044a015291", "filename": "libjava/classpath/gnu/java/awt/java2d/RasterGraphics.java", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FRasterGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FRasterGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FRasterGraphics.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -39,6 +39,7 @@\n package gnu.java.awt.java2d;\n \n import java.awt.GraphicsConfiguration;\n+import java.awt.Rectangle;\n import java.awt.image.ColorModel;\n import java.awt.image.WritableRaster;\n \n@@ -71,6 +72,15 @@ public RasterGraphics(WritableRaster r, ColorModel cm)\n     init();\n   }\n \n+  @Override\n+  public void renderScanline(int y, ScanlineCoverage c)\n+  {\n+    if (y >= getDeviceBounds().width)\n+      return;\n+    \n+    super.renderScanline(y, c);\n+  }\n+  \n   /**\n    * Returns the color model of this Graphics object.\n    *\n@@ -100,4 +110,9 @@ public GraphicsConfiguration getDeviceConfiguration()\n     return null;\n   }\n \n+  @Override\n+  protected Rectangle getDeviceBounds()\n+  {\n+    return this.raster.getBounds();\n+  }\n }"}, {"sha": "b00a15c16ac7127ce6eecad037cc04179538244b", "filename": "libjava/classpath/gnu/java/awt/java2d/ScanlineConverter.java", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FScanlineConverter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FScanlineConverter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fjava2d%2FScanlineConverter.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -206,6 +206,7 @@ public void renderShape(Pixelizer p, Shape shape, Shape clip,\n         // Ok, now we can perform the actual scanlining.\n         int realY = Fixed.intValue(FIXED_DIGITS, y + resolution);\n         boolean push = lastRealY != realY;\n+        \n         doScanline(p, y, push, haveClip);\n \n         // Remove obsolete active edges."}, {"sha": "cc41f749dc07c763ac046ee54803b648f6a0d7e7", "filename": "libjava/classpath/gnu/java/awt/peer/GnomeDesktopPeer.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FGnomeDesktopPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FGnomeDesktopPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FGnomeDesktopPeer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.java.awt.peer;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.IOException;\n import java.io.InputStream;\n import java.net.URI;\n@@ -124,7 +126,7 @@ public void mail() throws IOException\n   protected String execQuery(String command) throws IOException\n   {\n     InputStream in = null;\n-    StringBuilder output = new StringBuilder();\n+    CPStringBuilder output = new CPStringBuilder();\n \n     try\n       {"}, {"sha": "8bc3e65b24e3bbf8ea8da7c97dc017afeb77ece6", "filename": "libjava/classpath/gnu/java/awt/peer/KDEDesktopPeer.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FKDEDesktopPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FKDEDesktopPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2FKDEDesktopPeer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.java.awt.peer;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.IOException;\n import java.io.InputStream;\n \n@@ -104,7 +106,7 @@ public void mail() throws IOException\n   protected String execQuery(String command) throws IOException\n   {\n     InputStream in = null;\n-    StringBuilder output = new StringBuilder();\n+    CPStringBuilder output = new CPStringBuilder();\n \n     try\n       {"}, {"sha": "826cfbeceadbac51ccc99d71d1b05bd08e7eee3e", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GdkFontPeer.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGdkFontPeer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -45,6 +45,8 @@\n import gnu.java.awt.peer.ClasspathFontPeer;\n import gnu.java.awt.font.opentype.NameDecoder;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.awt.Font;\n import java.awt.FontMetrics;\n import java.awt.Toolkit;\n@@ -211,15 +213,15 @@ protected void finalize ()\n \n   private String buildString(CharacterIterator iter)\n   {\n-    StringBuffer sb = new StringBuffer();\n+    CPStringBuilder sb = new CPStringBuilder();\n     for(char c = iter.first(); c != CharacterIterator.DONE; c = iter.next()) \n       sb.append(c);\n     return sb.toString();\n   }\n \n   private String buildString(CharacterIterator iter, int begin, int limit)\n   {\n-    StringBuffer sb = new StringBuffer();\n+    CPStringBuilder sb = new CPStringBuilder();\n     int i = 0;\n     for(char c = iter.first(); c != CharacterIterator.DONE; c = iter.next(), i++) \n       {"}, {"sha": "e248b6daf10b8764b428f9529fb5e63267e918f5", "filename": "libjava/classpath/gnu/java/awt/peer/gtk/GtkClipboard.java", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkClipboard.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkClipboard.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fgtk%2FGtkClipboard.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,10 +38,25 @@\n \n package gnu.java.awt.peer.gtk;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.awt.Image;\n-import java.awt.datatransfer.*;\n \n-import java.io.*;\n+import java.awt.datatransfer.Clipboard;\n+import java.awt.datatransfer.ClipboardOwner;\n+import java.awt.datatransfer.DataFlavor;\n+import java.awt.datatransfer.StringSelection;\n+import java.awt.datatransfer.Transferable;\n+import java.awt.datatransfer.UnsupportedFlavorException;\n+\n+import java.io.ByteArrayOutputStream;\n+import java.io.File;\n+import java.io.InputStream;\n+import java.io.IOException;\n+import java.io.ObjectOutputStream;\n+import java.io.Reader;\n+import java.io.Serializable;\n+import java.io.UnsupportedEncodingException;\n \n import java.util.List;\n import java.util.Iterator;\n@@ -247,7 +262,7 @@ private String provideText()\n         Reader r = plainText.getReaderForText(contents);\n         if (r != null)\n           {\n-            StringBuffer sb = new StringBuffer();\n+            CPStringBuilder sb = new CPStringBuilder();\n             char[] cs = new char[1024];\n             int l = r.read(cs);\n             while (l != -1)"}, {"sha": "dde5b9195373f68bcb1466f6a28c31ec3e1d03a8", "filename": "libjava/classpath/gnu/java/awt/peer/x/GLGraphics.java", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FGLGraphics.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FGLGraphics.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FGLGraphics.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -39,7 +39,9 @@\n \n import java.awt.Color;\n import java.awt.GraphicsConfiguration;\n+import java.awt.Rectangle;\n import java.awt.image.ColorModel;\n+import java.util.Map;\n \n import gnu.java.awt.java2d.AbstractGraphics2D;\n import gnu.x11.extension.glx.GL;\n@@ -70,7 +72,8 @@ public class GLGraphics extends AbstractGraphics2D\n   public void setBackground(Color b)\n   {\n     super.setBackground(b);\n-    gl.clear_color(b.getRed() / 255.F, b.getGreen() / 255.F,\n+    \n+    gl.clearColor(b.getRed() / 255.F, b.getGreen() / 255.F,\n                    b.getBlue() / 255.F, b.getAlpha() / 255.F);\n   }\n \n@@ -120,4 +123,12 @@ public GraphicsConfiguration getDeviceConfiguration()\n     throw new UnsupportedOperationException(\"Not yet implemented\");\n   }\n \n+  @Override\n+  protected Rectangle getDeviceBounds()\n+  {\n+    // FIXME: not sure it's correct\n+    return new Rectangle(0, 0,\n+                         gl.display.default_screen.width, \n+                         gl.display.default_screen.height);\n+  }\n }"}, {"sha": "379839196b2f79898c267deb2b467a524e3d265e", "filename": "libjava/classpath/gnu/java/awt/peer/x/XEventPump.java", "status": "modified", "additions": 247, "deletions": 99, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXEventPump.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXEventPump.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXEventPump.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,9 @@\n \n package gnu.java.awt.peer.x;\n \n+import java.awt.AWTEvent;\n+import java.awt.Component;\n+import java.awt.Container;\n import java.awt.Graphics;\n import java.awt.Insets;\n import java.awt.Rectangle;\n@@ -47,18 +50,26 @@\n import java.awt.event.KeyEvent;\n import java.awt.event.MouseEvent;\n import java.awt.event.PaintEvent;\n+import java.awt.event.WindowEvent;\n import java.util.HashMap;\n \n+import gnu.java.awt.ComponentReshapeEvent;\n+import gnu.x11.Atom;\n import gnu.x11.Display;\n import gnu.x11.event.ButtonPress;\n import gnu.x11.event.ButtonRelease;\n+import gnu.x11.event.ClientMessage;\n import gnu.x11.event.ConfigureNotify;\n+import gnu.x11.event.DestroyNotify;\n import gnu.x11.event.Event;\n import gnu.x11.event.Expose;\n import gnu.x11.event.Input;\n import gnu.x11.event.KeyPress;\n import gnu.x11.event.KeyRelease;\n import gnu.x11.event.MotionNotify;\n+import gnu.x11.event.PropertyNotify;\n+import gnu.x11.event.ResizeRequest;\n+import gnu.x11.event.UnmapNotify;\n \n /**\n  * Fetches events from X, translates them to AWT events and pumps them up\n@@ -148,122 +159,217 @@ void unregisterWindow(gnu.x11.Window xWindow)\n     windows.remove(new Integer(xWindow.id));\n   }\n \n-  private void handleEvent(Event xEvent)\n+  private void handleButtonPress(ButtonPress event)\n+  {\n+    Integer key = new Integer(event.getEventWindowID());\n+    Window awtWindow = (Window) windows.get(key);\n+\n+    // Create and post the mouse event.\n+    int button = event.detail();\n+\n+    // AWT cannot handle more than 3 buttons and expects 0 instead.\n+    if (button >= gnu.x11.Input.BUTTON3)\n+      button = 0;\n+    drag = button;\n+\n+    Component target =\n+      findMouseEventTarget(awtWindow, event.getEventX(), event.getEventY());\n+    if(target == null)\n+      {\n+        target = awtWindow;\n+      }\n+    \n+    MouseEvent mp = new MouseEvent(target, MouseEvent.MOUSE_PRESSED,\n+                                   System.currentTimeMillis(),\n+                                   KeyboardMapping.mapModifiers(event.getState())\n+                                     | buttonToModifier(button),\n+                                   event.getEventX(), event.getEventY(),\n+                                   1, false, button);\n+    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(mp);\n+  }\n+  \n+  private void handleButtonRelease(ButtonRelease event)\n   {\n+    Integer key = new Integer(event.getEventWindowID());\n+    Window awtWindow = (Window) windows.get(key);\n \n-    Integer key = null;\n-    Window awtWindow = null;\n+    int button = event.detail();\n+    \n+    // AWT cannot handle more than 3 buttons and expects 0 instead.\n+    if (button >= gnu.x11.Input.BUTTON3)\n+      button = 0;\n+    drag = -1;\n+    \n+    Component target =\n+      findMouseEventTarget(awtWindow, event.getEventX(), event.getEventY());\n+    if(target == null)\n+      {\n+        target = awtWindow;\n+      }\n+    \n+    MouseEvent mr = new MouseEvent(target, MouseEvent.MOUSE_RELEASED,\n+                                   System.currentTimeMillis(),\n+                                   KeyboardMapping.mapModifiers(event.getState())\n+                                     | buttonToModifier(button),\n+                                   event.getEventX(), event.getEventY(),\n+                                   1, false, button);\n+    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(mr);\n+  }\n+  \n+  \n+  private void handleMotionNotify(MotionNotify event)\n+  {\n+    Integer key = new Integer(event.getEventWindowID());\n+    Window awtWindow = (Window) windows.get(key);\n+\n+    int button = event.detail();\n+    \n+    // AWT cannot handle more than 3 buttons and expects 0 instead.\n+    if (button >= gnu.x11.Input.BUTTON3)\n+      button = 0;\n+\n+    MouseEvent mm = null;\n+    if (drag == -1)\n+      {\n+        mm = new MouseEvent(awtWindow, MouseEvent.MOUSE_MOVED,\n+                            System.currentTimeMillis(),\n+                            KeyboardMapping.mapModifiers(event.getState())\n+                              | buttonToModifier(button),\n+                            event.getEventX(), event.getEventY(),\n+                            1, false);\n \n+      }\n+    else\n+      {\n+        mm = new MouseEvent(awtWindow, MouseEvent.MOUSE_DRAGGED,\n+                            System.currentTimeMillis(),\n+                            KeyboardMapping.mapModifiers(event.getState())\n+                              | buttonToModifier(drag),\n+                            event.getEventX(), event.getEventY(),\n+                            1, false);\n+      }\n+    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(mm);\n+  }\n+   \n+  // FIME: refactor and make faster, maybe caching the event and handle\n+  // and/or check timing (timing is generated for PropertyChange)?\n+  private void handleExpose(Expose event)\n+  {\n+    Integer key = new Integer(event.window_id);\n+    Window awtWindow = (Window) windows.get(key);\n+    \n+    if (XToolkit.DEBUG)\n+      System.err.println(\"expose request for window id: \" + key);\n+    \n+    Rectangle r = new Rectangle(event.x(), event.y(), event.width(),\n+                                event.height());\n+    // We need to clear the background of the exposed rectangle.\n+    assert awtWindow != null : \"awtWindow == null for window ID: \" + key;\n+     \n+    Graphics g = awtWindow.getGraphics();\n+    g.clearRect(r.x, r.y, r.width, r.height);\n+    g.dispose();\n+    \n+    XWindowPeer xwindow = (XWindowPeer) awtWindow.getPeer();\n+    Insets i = xwindow.insets();\n+    if (event.width() != awtWindow.getWidth() - i.left - i.right\n+        || event.height() != awtWindow.getHeight() - i.top - i.bottom)\n+      {\n+        int w = event.width();\n+        int h = event.height();\n+        int x = xwindow.xwindow.x;\n+        int y = xwindow.xwindow.y;\n+        \n+        if (XToolkit.DEBUG)\n+          System.err.println(\"Setting size on AWT window: \" + w\n+                           + \", \" + h + \", \" + awtWindow.getWidth()\n+                           + \", \" + awtWindow.getHeight());\n+        \n+        // new width and height\n+        xwindow.xwindow.width = w;\n+        xwindow.xwindow.height = h;\n+        \n+        // reshape the window\n+        ComponentReshapeEvent cre =\n+          new ComponentReshapeEvent(awtWindow, x, y, w, h);\n+        awtWindow.dispatchEvent(cre);\n+      }\n+  \n+    ComponentEvent ce =\n+      new ComponentEvent(awtWindow, ComponentEvent.COMPONENT_RESIZED);\n+    awtWindow.dispatchEvent(ce);\n+    \n+    PaintEvent pev = new PaintEvent(awtWindow, PaintEvent.UPDATE, r);\n+    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(pev);\n+  }\n+    \n+  private void handleDestroyNotify(DestroyNotify destroyNotify)\n+  {\n+    if (XToolkit.DEBUG)\n+      System.err.println(\"DestroyNotify event: \" + destroyNotify);\n+    \n+    Integer key = new Integer(destroyNotify.event_window_id);\n+    Window awtWindow = (Window) windows.get(key);\n+    \n+    AWTEvent event = new WindowEvent(awtWindow, WindowEvent.WINDOW_CLOSED);\n+    Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(event);\n+  }\n+  \n+  private void handleClientMessage(ClientMessage clientMessage)\n+  {\n+    if (XToolkit.DEBUG)\n+      System.err.println(\"ClientMessage event: \" + clientMessage);\n+    \n+    if (clientMessage.delete_window())\n+      {\n+        if (XToolkit.DEBUG)\n+          System.err.println(\"ClientMessage is a delete_window event\");\n+        \n+        Integer key = new Integer(clientMessage.window_id);\n+        Window awtWindow = (Window) windows.get(key);\n+        \n+        AWTEvent event = new WindowEvent(awtWindow, WindowEvent.WINDOW_CLOSING);\n+        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(event);\n+      }\n+  }\n+  \n+  private void handleEvent(Event xEvent)\n+  {\n     if (XToolkit.DEBUG)\n       System.err.println(\"fetched event: \" + xEvent);\n-    switch (xEvent.code())\n+    \n+    switch (xEvent.code() & 0x7f)\n     {\n     case ButtonPress.CODE:\n-      ButtonPress bp = (ButtonPress) xEvent;\n-      key= new Integer(bp.event_window_id);\n-      awtWindow = (Window) windows.get(key);\n-      // Create and post the mouse event.\n-      int button = bp.detail();\n-\n-      // AWT cannot handle more than 3 buttons and expects 0 instead.\n-      if (button >= gnu.x11.Input.BUTTON3)\n-        button = 0;\n-      drag = button;\n-\n-      MouseEvent mp = new MouseEvent(awtWindow, MouseEvent.MOUSE_PRESSED,\n-                                     System.currentTimeMillis(),\n-                                     KeyboardMapping.mapModifiers(bp.state()) | buttonToModifier(button),\n-                                     bp.event_x(), bp.event_y(),\n-                                     1, false, button);\n-      Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(mp);\n+      this.handleButtonPress((ButtonPress) xEvent);\n       break;\n     case ButtonRelease.CODE:\n-      ButtonRelease br = (ButtonRelease) xEvent;\n-      key= new Integer(br.event_window_id);\n-      awtWindow = (Window) windows.get(key);\n-\n-      button = br.detail();\n-      // AWT cannot handle more than 3 buttons and expects 0 instead.\n-      if (button >= gnu.x11.Input.BUTTON3)\n-        button = 0;\n-      drag = -1;\n-      MouseEvent mr = new MouseEvent(awtWindow, MouseEvent.MOUSE_RELEASED,\n-                                     System.currentTimeMillis(),\n-                                     KeyboardMapping.mapModifiers(br.state()) | buttonToModifier(button),\n-                                     br.event_x(), br.event_y(),\n-                                     1, false, button);\n-      Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(mr);\n+      this.handleButtonRelease((ButtonRelease) xEvent); \n       break;\n     case MotionNotify.CODE:\n-      MotionNotify mn = (MotionNotify) xEvent;\n-      key= new Integer(mn.event_window_id);\n-      awtWindow = (Window) windows.get(key);\n-\n-      MouseEvent mm;\n-      if (drag == -1)\n-        {\n-          mm = new MouseEvent(awtWindow, MouseEvent.MOUSE_MOVED,\n-                              System.currentTimeMillis(), 0,\n-                              mn.event_x(), mn.event_y(),\n-                              1, false);\n-        }\n-      else\n-        {\n-          mm = new MouseEvent(awtWindow, MouseEvent.MOUSE_DRAGGED,\n-                              System.currentTimeMillis(), 0,\n-                              mn.event_x(), mn.event_y(),\n-                              1, false);\n-        }\n-      Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(mm);\n-      break;\n-    case ConfigureNotify.CODE:\n-      key= new Integer(((ConfigureNotify) xEvent).event_window_id);\n-      awtWindow = (Window) windows.get(key);\n-      ConfigureNotify c = (ConfigureNotify) xEvent;\n-      if (XToolkit.DEBUG)\n-        System.err.println(\"resize request for window id: \" + key);\n-\n-      // Detect and report size changes.\n-      XWindowPeer xwindow = (XWindowPeer) awtWindow.getPeer();\n-      Insets i = xwindow.insets();\n-      if (c.width() != awtWindow.getWidth() - i.left - i.right\n-          || c.height() != awtWindow.getHeight() - i.top - i.bottom)\n-        {\n-          if (XToolkit.DEBUG)\n-            System.err.println(\"Setting size on AWT window: \" + c.width()\n-                             + \", \" + c.height() + \", \" + awtWindow.getWidth()\n-                             + \", \" + awtWindow.getHeight());\n-          xwindow.callback = true;\n-          xwindow.xwindow.width = c.width();\n-          xwindow.xwindow.height = c.height();\n-          awtWindow.setSize(c.width() + i.left + i.right,\n-                            c.height() + i.top + i.bottom);\n-          xwindow.callback = false;\n-        }\n+      this.handleMotionNotify((MotionNotify) xEvent); \n       break;\n     case Expose.CODE:\n-      key= new Integer(((Expose) xEvent).window_id);\n-      awtWindow = (Window) windows.get(key);\n-      Expose exp = (Expose) xEvent;\n-      if (XToolkit.DEBUG)\n-        System.err.println(\"expose request for window id: \" + key);\n-      Rectangle r = new Rectangle(exp.x(), exp.y(), exp.width(),\n-                                  exp.height());\n-      //System.err.println(\"expose paint: \" + r);\n-      // We need to clear the background of the exposed rectangle.\n-      assert awtWindow != null : \"awtWindow == null for window ID: \" + key;\n-      Graphics g = awtWindow.getGraphics();\n-      g.clearRect(r.x, r.y, r.width, r.height);\n-      g.dispose();\n-      PaintEvent pev = new PaintEvent(awtWindow, PaintEvent.PAINT, r);\n-      Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(pev);\n+      this.handleExpose((Expose) xEvent);\n       break;\n     case KeyPress.CODE:\n     case KeyRelease.CODE:\n-      key = new Integer(((Input) xEvent).event_window_id);\n-      awtWindow = (Window) windows.get(key);\n+      Integer key = new Integer(((Input) xEvent).getEventWindowID());\n+      Window awtWindow = (Window) windows.get(key);\n       handleKeyEvent(xEvent, awtWindow);\n       break;\n+    case DestroyNotify.CODE:\n+      this.handleDestroyNotify((DestroyNotify) xEvent);\n+      break;\n+    case ClientMessage.CODE:\n+      this.handleClientMessage((ClientMessage) xEvent);\n+      break;\n+    case PropertyNotify.CODE:\n+      key = new Integer (((PropertyNotify) xEvent).getWindowID());\n+      awtWindow = (Window) windows.get(key);\n+      AWTEvent event = new WindowEvent(awtWindow, WindowEvent.WINDOW_STATE_CHANGED);\n+      Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(event);\n+      break;\n     default:\n       if (XToolkit.DEBUG)\n         System.err.println(\"Unhandled X event: \" + xEvent);\n@@ -280,7 +386,7 @@ private void handleKeyEvent(Event xEvent, Window awtWindow)\n   {\n     Input keyEvent = (Input) xEvent;\n     int xKeyCode = keyEvent.detail();\n-    int xMods = keyEvent.state();\n+    int xMods = keyEvent.getState();\n     int keyCode = KeyboardMapping.mapToKeyCode(xEvent.display.input, xKeyCode,\n                                                xMods);\n     char keyChar = KeyboardMapping.mapToKeyChar(xEvent.display.input, xKeyCode,\n@@ -334,5 +440,47 @@ static int buttonToModifier(int button)\n \n     return 0;        \n   }\n+  \n+  /**\n+   * Finds the heavyweight mouse event target.\n+   *\n+   * @param src the original source of the event\n+   *\n+   * @param pt the event coordinates\n+   *\n+   * @return the real mouse event target\n+   */\n+  private Component findMouseEventTarget(Component src, int x, int y)\n+  {\n+    Component found = null;\n+    if (src instanceof Container)\n+      {\n+        Container cont = (Container) src;\n+        int numChildren = cont.getComponentCount();\n+        for (int i = 0; i < numChildren && found == null; i++)\n+          {\n+            Component child = cont.getComponent(i);\n+            if (child != null && child.isVisible()\n+                && child.contains(x - child.getX(), y - child.getY()))\n+              {\n+                if (child instanceof Container)\n+                  {\n+                    Component deeper = findMouseEventTarget(child,\n+                                                            x - child.getX(),\n+                                                            y - child.getY());\n+                    if (deeper != null)\n+                      found = deeper;\n+                  }\n+                else if (! child.isLightweight())\n+                  found = child;\n+              }\n+          }\n+      }\n+\n+    // Consider the source itself.\n+    if (found == null && src.contains(x, y) && ! src.isLightweight())\n+      found = src;\n \n+    return found;\n+  }\n }"}, {"sha": "4372c965ffe743ae549cbfbafe6ae5b789ee45a2", "filename": "libjava/classpath/gnu/java/awt/peer/x/XFontPeer.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFontPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFontPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFontPeer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.awt.peer.x;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.awt.AWTError;\n import java.awt.Font;\n import java.awt.FontMetrics;\n@@ -675,7 +677,7 @@ static String encodeFont(String name, Map atts)\n    */\n   static String encodeFont(String name, int style, int size)\n   {\n-    StringBuilder key = new StringBuilder();\n+    CPStringBuilder key = new CPStringBuilder();\n     key.append(validName(name));\n     key.append('.');\n     switch (style)"}, {"sha": "a355c68b383137e328d649617f20371fbc3ca45c", "filename": "libjava/classpath/gnu/java/awt/peer/x/XFramePeer.java", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFramePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFramePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXFramePeer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -93,8 +93,7 @@ public void setTitle(String title)\n \n   public int getState()\n   {\n-    // TODO: Implement this.\n-    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+    return 0;\n   }\n \n   public void setState(int state)"}, {"sha": "0339a424dacd43ac53b2bbb4e5c57be0117bec6a", "filename": "libjava/classpath/gnu/java/awt/peer/x/XGraphics2D.java", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphics2D.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphics2D.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphics2D.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -313,7 +313,7 @@ public void setPaint(Paint p)\n       {\n         // TODO: Optimize for different standard bit-depths.\n         Color c = (Color) p;\n-        XToolkit tk = (XToolkit) Toolkit.getDefaultToolkit();\n+       /* XToolkit tk = (XToolkit) Toolkit.getDefaultToolkit();\n         HashMap colorMap = tk.colorMap;\n         gnu.x11.Color col = (gnu.x11.Color) colorMap.get(c);\n         if (col == null)\n@@ -323,8 +323,10 @@ public void setPaint(Paint p)\n                                    c.getGreen() * 256,\n                                    c.getBlue() * 256);\n             colorMap.put(c, col);\n-          }\n-        xgc.set_foreground(col);\n+          }*/\n+        //xgc.set_foreground(col);\n+        \n+        xgc.set_foreground(c.getRGB());\n         foreground = c;\n       }\n   }\n@@ -392,9 +394,23 @@ else if (transparency == Transparency.OPAQUE || RENDER_OPAQUE)\n                 xdrawable.put_image(xgc, zpixmap, x, y);\n                 imageCache.put(image, zpixmap);\n               } else {\n-                ZPixmap zpixmap = (ZPixmap) xdrawable.image(x, y, w, h,\n-                                                            0xffffffff,\n-                                           gnu.x11.image.Image.Format.ZPIXMAP);\n+                \n+                // TODO optimize reusing the rectangles\n+                Rectangle source =\n+                  new Rectangle(0, 0, xdrawable.width, xdrawable.height);\n+                Rectangle target = new Rectangle(x, y, w, h);\n+                \n+                Rectangle destination = source.intersection(target); \n+                \n+                x = destination.x;\n+                y = destination.y;\n+                w = destination.width;\n+                h = destination.height;\n+                \n+                ZPixmap zpixmap =\n+                  (ZPixmap) xdrawable.image(x, y, w, h,\n+                                            0xffffffff,\n+                                            gnu.x11.image.Image.Format.ZPIXMAP);\n                 for (int yy = 0; yy < h; yy++)\n                   {\n                     for (int xx = 0; xx < w; xx++)"}, {"sha": "becb92a7d72c6a1421b235bb823df2f83e4d62d6", "filename": "libjava/classpath/gnu/java/awt/peer/x/XGraphicsConfiguration.java", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsConfiguration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsConfiguration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsConfiguration.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -146,8 +146,7 @@ public ColorModel getColorModel(int transparency)\n \n   public AffineTransform getDefaultTransform()\n   {\n-    // TODO: Implement this.\n-    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+    return new AffineTransform();\n   }\n \n   public AffineTransform getNormalizingTransform()\n@@ -158,8 +157,10 @@ public AffineTransform getNormalizingTransform()\n \n   public Rectangle getBounds()\n   {\n-    // TODO: Implement this.\n-    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+    Display d = device.getDisplay();\n+    Screen screen = d.default_screen;\n+    \n+    return new Rectangle(0, 0, screen.width, screen.height); \n   }\n \n   /**"}, {"sha": "ca37f3adbbd1bb4d288f421ef5d07ad6b1650962", "filename": "libjava/classpath/gnu/java/awt/peer/x/XGraphicsDevice.java", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsDevice.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsDevice.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXGraphicsDevice.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -39,6 +39,7 @@\n \n import gnu.classpath.SystemProperties;\n import gnu.x11.Display;\n+import gnu.x11.EscherServerConnectionException;\n \n import java.awt.GraphicsConfiguration;\n import java.awt.GraphicsDevice;\n@@ -127,18 +128,34 @@ Display getDisplay()\n             Socket socket = createLocalSocket();\n             if (socket != null)\n               {\n-                display = new Display(socket, \"localhost\",\n-                                      displayName.display_no,\n-                                      displayName.screen_no);\n+                try\n+                  {\n+                    display = new Display(socket, \"localhost\",\n+                                          displayName.display_no,\n+                                          displayName.screen_no);\n+                  }\n+                catch (EscherServerConnectionException e)\n+                  {\n+                    throw new RuntimeException(e.getCause()); \n+                  }\n               }\n           }\n \n         // The following happens when we are configured to use plain sockets,\n         // when the connection is probably remote or when we couldn't load\n         // the LocalSocket class stuff.\n         if (display == null)\n-          display = new Display(displayName);\n-\n+          {\n+            try\n+              {\n+                display = new Display(displayName);\n+              }\n+            catch (EscherServerConnectionException e)\n+              {\n+                throw new RuntimeException(e.getCause());\n+              }\n+          }\n+        \n         eventPump = new XEventPump(display);\n       }\n     return display;"}, {"sha": "fa94d00c131c569f5c5fe2208173f718eba46e63", "filename": "libjava/classpath/gnu/java/awt/peer/x/XImage.java", "status": "modified", "additions": 69, "deletions": 2, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXImage.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXImage.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXImage.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -39,13 +39,19 @@\n package gnu.java.awt.peer.x;\n \n import gnu.x11.Pixmap;\n+import gnu.x11.image.ZPixmap;\n \n import java.awt.Graphics;\n import java.awt.GraphicsEnvironment;\n import java.awt.Image;\n+\n+import java.awt.image.ColorModel;\n+import java.awt.image.ImageConsumer;\n import java.awt.image.ImageObserver;\n import java.awt.image.ImageProducer;\n+\n import java.util.Hashtable;\n+import java.util.Vector;\n \n public class XImage\n   extends Image\n@@ -75,8 +81,7 @@ public int getHeight(ImageObserver observer)\n \n   public ImageProducer getSource()\n   {\n-    // TODO: Implement this.\n-    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+    return new XImageProducer(); \n   }\n \n   /**\n@@ -108,4 +113,66 @@ protected void finalize()\n   {\n     pixmap.free();\n   }\n+  \n+  protected class XImageProducer implements ImageProducer\n+  {\n+    private Vector<ImageConsumer> consumers = new Vector<ImageConsumer>();\n+    \n+    public void addConsumer(ImageConsumer ic)\n+    {\n+      if (ic != null && !isConsumer(ic))\n+        this.consumers.add(ic);\n+    }\n+\n+    public boolean isConsumer(ImageConsumer ic)\n+    {\n+      return this.consumers.contains(ic);\n+    }\n+\n+    public void removeConsumer(ImageConsumer ic)\n+    {\n+      if (ic != null)\n+        this.consumers.remove(ic);\n+    }\n+\n+    public void requestTopDownLeftRightResend(ImageConsumer ic)\n+    {\n+      /* just ignore the call */\n+    }\n+\n+    public void startProduction(ImageConsumer ic)\n+    {\n+      this.addConsumer(ic);\n+\n+      for (ImageConsumer consumer : this.consumers)\n+        {\n+          int width = XImage.this.getWidth(null);\n+          int height = XImage.this.getHeight(null);\n+          \n+          XGraphics2D graphics = (XGraphics2D) getGraphics();\n+          ColorModel model = graphics.getColorModel();\n+          graphics.dispose();\n+          \n+          ZPixmap zpixmap = (ZPixmap)\n+            XImage.this.pixmap.image(0, 0, width, height,\n+                                     0xffffffff,\n+                                     gnu.x11.image.Image.Format.ZPIXMAP);\n+          \n+          int size = zpixmap.get_data_length();\n+          System.out.println(\"size: \" + size + \", w = \" + width + \", h = \" + height);\n+          \n+          int [] pixel = new int[size];\n+          for (int i = 0; i < size; i++)\n+            pixel[i] = zpixmap.get_data_element(i);\n+\n+          consumer.setHints(ImageConsumer.SINGLEPASS);\n+          \n+          consumer.setDimensions(width, height);\n+          consumer.setPixels(0, 0, width, height, model, pixel, 0, width);\n+          consumer.imageComplete(ImageConsumer.STATICIMAGEDONE);\n+        }\n+      \n+      System.out.println(\"done!\");\n+    }\n+  }\n }"}, {"sha": "af12574a15027c24653ae4923a4050f5df975229", "filename": "libjava/classpath/gnu/java/awt/peer/x/XToolkit.java", "status": "modified", "additions": 38, "deletions": 12, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXToolkit.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXToolkit.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXToolkit.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -54,6 +54,7 @@\n import java.awt.GraphicsConfiguration;\n import java.awt.GraphicsDevice;\n import java.awt.GraphicsEnvironment;\n+import java.awt.HeadlessException;\n import java.awt.Image;\n import java.awt.Label;\n import java.awt.List;\n@@ -120,11 +121,16 @@\n import gnu.java.awt.EmbeddedWindow;\n import gnu.java.awt.font.OpenTypeFontPeer;\n import gnu.java.awt.image.ImageConverter;\n+import gnu.java.awt.java2d.AbstractGraphics2D;\n import gnu.java.awt.peer.ClasspathFontPeer;\n import gnu.java.awt.peer.EmbeddedWindowPeer;\n+import gnu.java.awt.peer.swing.SwingButtonPeer;\n import gnu.java.awt.peer.swing.SwingCanvasPeer;\n+import gnu.java.awt.peer.swing.SwingCheckboxPeer;\n import gnu.java.awt.peer.swing.SwingLabelPeer;\n import gnu.java.awt.peer.swing.SwingPanelPeer;\n+import gnu.java.awt.peer.swing.SwingTextAreaPeer;\n+import gnu.java.awt.peer.swing.SwingTextFieldPeer;\n \n public class XToolkit\n   extends ClasspathToolkit\n@@ -232,18 +238,24 @@ public EmbeddedWindowPeer createEmbeddedWindow(EmbeddedWindow w)\n \n   protected ButtonPeer createButton(Button target)\n   {\n-    // TODO: Implement this.\n-    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+    checkHeadLess(\"No ButtonPeer can be created in an headless\" +\n+    \t\t      \"graphics environment.\");\n+    \n+    return new SwingButtonPeer(target);\n   }\n \n   protected TextFieldPeer createTextField(TextField target)\n   {\n-    // TODO: Implement this.\n-    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+    checkHeadLess(\"No TextFieldPeer can be created in an headless \" +\n+    \t\t      \"graphics environment.\");\n+    \n+    return new SwingTextFieldPeer(target);\n   }\n \n   protected LabelPeer createLabel(Label target)\n   {\n+    checkHeadLess(\"No LabelPeer can be created in an headless graphics \" +\n+    \t\t      \"environment.\");\n     return new SwingLabelPeer(target);\n   }\n \n@@ -255,8 +267,10 @@ protected ListPeer createList(List target)\n \n   protected CheckboxPeer createCheckbox(Checkbox target)\n   {\n-    // TODO: Implement this.\n-    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+    checkHeadLess(\"No CheckboxPeer can be created in an headless graphics \" +\n+                  \"environment.\");\n+    \n+    return new SwingCheckboxPeer(target);\n   }\n \n   protected ScrollbarPeer createScrollbar(Scrollbar target)\n@@ -273,8 +287,10 @@ protected ScrollPanePeer createScrollPane(ScrollPane target)\n \n   protected TextAreaPeer createTextArea(TextArea target)\n   {\n-    // TODO: Implement this.\n-    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+    checkHeadLess(\"No TextAreaPeer can be created in an headless graphics \" +\n+    \t\t      \"environment.\");\n+    \n+    return new SwingTextAreaPeer(target);\n   }\n \n   protected ChoicePeer createChoice(Choice target)\n@@ -514,14 +530,14 @@ private Image createErrorImage()\n \n   public boolean prepareImage(Image image, int width, int height, ImageObserver observer)\n   {\n-    // Images are loaded synchronously, so we don't bother and return true.\n-    return true;\n+    Image scaled = AbstractGraphics2D.prepareImage(image, width, height);\n+    return checkImage(image, width, height, observer) == ImageObserver.ALLBITS;\n   }\n \n   public int checkImage(Image image, int width, int height, ImageObserver observer)\n   {\n-    // TODO: Implement this.\n-    throw new UnsupportedOperationException(\"Not yet implemented.\");\n+    // Images are loaded synchronously, so we don't bother and return true.\n+    return ImageObserver.ALLBITS;\n   }\n \n   public Image createImage(ImageProducer producer)\n@@ -638,4 +654,14 @@ public boolean isModalityTypeSupported(ModalityType modalityType)\n     return false;\n   }\n \n+  private void checkHeadLess(String message) throws HeadlessException\n+  {\n+    if(GraphicsEnvironment.isHeadless())\n+      {\n+        if(message == null)\n+          message = \"This method cannot be called in headless mode.\";\n+      \n+        throw new HeadlessException(message);\n+      }\n+  }\n }"}, {"sha": "930247da5c2f6067d3301877c7de6baa20ac71f7", "filename": "libjava/classpath/gnu/java/awt/peer/x/XWindowPeer.java", "status": "modified", "additions": 17, "deletions": 20, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXWindowPeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXWindowPeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fawt%2Fpeer%2Fx%2FXWindowPeer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -71,21 +71,16 @@\n   private static int standardSelect = Event.BUTTON_PRESS_MASK\n                                       | Event.BUTTON_RELEASE_MASK\n                                       | Event.POINTER_MOTION_MASK\n-                                      //| Event.RESIZE_REDIRECT_MASK\n+                                     // | Event.RESIZE_REDIRECT_MASK //\n                                       | Event.EXPOSURE_MASK\n-                                      //| Event.PROPERTY_CHANGE_MASK\n-                                      | Event.STRUCTURE_NOTIFY_MASK\n+                                      | Event.PROPERTY_CHANGE_MASK\n+                                      //| Event.STRUCTURE_NOTIFY_MASK\n+                                      //| Event.SUBSTRUCTURE_NOTIFY_MASK\n                                       | Event.KEY_PRESS_MASK\n                                       | Event.KEY_RELEASE_MASK\n+                                      //| Event.VISIBILITY_CHANGE_MASK //\n                                       ;\n-\n-  /**\n-   * Indicates if we are in callback mode, that is when a property (like size)\n-   * is changed in reponse to a request from the X server and doesn't need\n-   * to be propagated back to the X server.\n-   */\n-  boolean callback = false;\n-\n+  \n   /**\n    * The X window.\n    */\n@@ -110,8 +105,10 @@\n     int h = Math.max(window.getHeight(), 1);\n     xwindow = new Window(dev.getDisplay().default_root, x, y, w, h, 0, atts);\n     xwindow.select_input(standardSelect);\n+    \n     dev.getEventPump().registerWindow(xwindow, window);\n-\n+    xwindow.set_wm_delete_window();\n+    \n     boolean undecorated;\n     if (awtComponent instanceof Frame)\n       {\n@@ -269,14 +266,9 @@ public void hide()\n    */\n   public void reshape(int x, int y, int width, int height)\n   {\n-    // Need to substract insets because AWT size is including insets,\n-    // and X size is excluding insets.\n-    if (! callback)\n-      {\n-        Insets i = insets;\n-        xwindow.move_resize(x - i.left, y - i.right, width - i.left - i.right,\n-                            height - i.top - i.bottom);\n-      }\n+    Insets i = insets;\n+    xwindow.move_resize(x - i.left, y - i.right, width - i.left - i.right,\n+                        height - i.top - i.bottom);\n   }\n \n   public Insets insets()\n@@ -303,4 +295,9 @@ protected void finalize()\n     XGraphicsDevice dev = XToolkit.getDefaultDevice();\n     dev.getEventPump().unregisterWindow(xwindow);\n   }\n+  \n+  public Window getXwindow()\n+  {\n+    return xwindow;\n+  }\n }"}, {"sha": "27e7d2cc7f918c4f156af0f2a18a817b60c7ce2c", "filename": "libjava/classpath/gnu/java/lang/CPStringBuilder.java", "status": "added", "additions": 1161, "deletions": 0, "changes": 1161, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2FCPStringBuilder.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2FCPStringBuilder.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2FCPStringBuilder.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -0,0 +1,1161 @@\n+/* ClasspathStringBuffer.java -- Growable strings without locking or copying\n+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2008\n+   Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.java.lang;\n+\n+import gnu.classpath.SystemProperties;\n+\n+import java.io.Serializable;\n+\n+/**\n+ * This class is based on java.lang.AbstractStringBuffer but\n+ * without the copying of the string by toString.\n+ * If you modify this, please consider also modifying that code.\n+ * This code is not thread-safe; limit its use to internal use within\n+ * methods.\n+ */\n+public final class CPStringBuilder\n+  implements Serializable, CharSequence, Appendable\n+{\n+\n+  /**\n+   * Index of next available character (and thus the size of the current\n+   * string contents).  Note that this has permissions set this way so that\n+   * String can get the value.\n+   *\n+   * @serial the number of characters in the buffer\n+   */\n+  private int count;\n+\n+  /**\n+   * The buffer.  Note that this has permissions set this way so that String\n+   * can get the value.\n+   *\n+   * @serial the buffer\n+   */\n+  private char[] value;\n+\n+  /**\n+   * A flag to denote whether the string being created has been\n+   * allocated to a {@link String} object.  On construction,\n+   * the character array, {@link #value} is referenced only\n+   * by this class.  Once {@link #toString()},\n+   * {@link #substring(int)} or {@link #substring(int,int)}\n+   * are called, the array is also referenced by a {@link String}\n+   * object and this flag is set.  Subsequent modifications to\n+   * this buffer cause a new array to be allocated and the flag\n+   * to be reset.\n+   */\n+  private boolean allocated = false;\n+\n+  /**\n+   * The default capacity of a buffer.\n+   * This can be configured using gnu.classpath.cpstringbuilder.capacity\n+   */\n+  private static final int DEFAULT_CAPACITY;\n+\n+  static\n+  {\n+    String cap =\n+      SystemProperties.getProperty(\"gnu.classpath.cpstringbuilder.capacity\");\n+    if (cap == null)\n+      DEFAULT_CAPACITY = 32;\n+    else\n+      DEFAULT_CAPACITY = Integer.parseInt(cap);\n+  }\n+\n+  /**\n+   * Create a new CPStringBuilder with the default capacity.\n+   */\n+  public CPStringBuilder()\n+  {\n+    this(DEFAULT_CAPACITY);\n+  }\n+\n+  /**\n+   * Create an empty <code>CPStringBuilder</code> with the specified initial\n+   * capacity.\n+   *\n+   * @param capacity the initial capacity\n+   * @throws NegativeArraySizeException if capacity is negative\n+   */\n+  public CPStringBuilder(int capacity)\n+  {\n+    value = new char[capacity];\n+  }\n+\n+  /**\n+   * Create a new <code>CPStringBuilder</code> with the characters in the\n+   * specified <code>String</code>. Initial capacity will be the size of the\n+   * String plus the default capacity.\n+   *\n+   * @param str the <code>String</code> to convert\n+   * @throws NullPointerException if str is null\n+   */\n+  public CPStringBuilder(String str)\n+  {\n+    count = str.length();\n+    value = new char[count + DEFAULT_CAPACITY];\n+    str.getChars(0, count, value, 0);\n+  }\n+\n+  /**\n+   * Create a new <code>CPStringBuilder</code> with the characters in the\n+   * specified <code>StringBuffer</code>. Initial capacity will be the size of the\n+   * String plus the default capacity.\n+   *\n+   * @param str the <code>String</code> to convert\n+   * @throws NullPointerException if str is null\n+   */\n+  public CPStringBuilder(StringBuffer str)\n+  {\n+    count = str.length();\n+    value = new char[count + DEFAULT_CAPACITY];\n+    str.getChars(0, count, value, 0);\n+  }\n+\n+  /**\n+   * Create a new <code>CPStringBuilder</code> with the characters in the\n+   * specified <code>StringBuilder</code>. Initial capacity will be the size of the\n+   * String plus the default capacity.\n+   *\n+   * @param str the <code>String</code> to convert\n+   * @throws NullPointerException if str is null\n+   */\n+  public CPStringBuilder(StringBuilder str)\n+  {\n+    count = str.length();\n+    value = new char[count + DEFAULT_CAPACITY];\n+    str.getChars(0, count, value, 0);\n+  }\n+\n+  /**\n+   * Create a new <code>CPStringBuilder</code> with the characters in the\n+   * specified <code>CharSequence</code>. Initial capacity will be the\n+   * length of the sequence plus the default capacity; if the sequence\n+   * reports a length less than or equal to 0, then the initial capacity\n+   * will be the default.\n+   *\n+   * @param seq the initializing <code>CharSequence</code>\n+   * @throws NullPointerException if str is null\n+   * @since 1.5\n+   */\n+  public CPStringBuilder(CharSequence seq)\n+  {\n+    int len = seq.length();\n+    count = len <= 0 ? 0 : len;\n+    value = new char[count + DEFAULT_CAPACITY];\n+    for (int i = 0; i < len; ++i)\n+      value[i] = seq.charAt(i);\n+  }\n+\n+  /**\n+   * Set the length of this StringBuffer. If the new length is greater than\n+   * the current length, all the new characters are set to '\\0'. If the new\n+   * length is less than the current length, the first <code>newLength</code>\n+   * characters of the old array will be preserved, and the remaining\n+   * characters are truncated.\n+   *\n+   * @param newLength the new length\n+   * @throws IndexOutOfBoundsException if the new length is negative\n+   *         (while unspecified, this is a StringIndexOutOfBoundsException)\n+   * @see #length()\n+   */\n+  public void setLength(int newLength)\n+  {\n+    if (newLength < 0)\n+      throw new StringIndexOutOfBoundsException(newLength);\n+\n+    int valueLength = value.length;\n+\n+    /* Always call ensureCapacity in order to preserve\n+       copy-on-write semantics, except when the position\n+       is simply being reset\n+    */\n+    if (newLength > 0)\n+      ensureCapacity(newLength);\n+\n+    if (newLength < valueLength)\n+      {\n+        /* If the StringBuffer's value just grew, then we know that\n+           value is newly allocated and the region between count and\n+           newLength is filled with '\\0'.  */\n+\tcount = newLength;\n+      }\n+    else\n+      {\n+\t/* The StringBuffer's value doesn't need to grow.  However,\n+\t   we should clear out any cruft that may exist.  */\n+\twhile (count < newLength)\n+          value[count++] = '\\0';\n+      }\n+  }\n+\n+  /**\n+   * Get the character at the specified index.\n+   *\n+   * @param index the index of the character to get, starting at 0\n+   * @return the character at the specified index\n+   * @throws IndexOutOfBoundsException if index is negative or &gt;= length()\n+   *         (while unspecified, this is a StringIndexOutOfBoundsException)\n+   */\n+  public char charAt(int index)\n+  {\n+    if (index < 0 || index >= count)\n+      throw new StringIndexOutOfBoundsException(index);\n+    return value[index];\n+  }\n+\n+  /**\n+   * Get the code point at the specified index.  This is like #charAt(int),\n+   * but if the character is the start of a surrogate pair, and the\n+   * following character completes the pair, then the corresponding\n+   * supplementary code point is returned.\n+   * @param index the index of the codepoint to get, starting at 0\n+   * @return the codepoint at the specified index\n+   * @throws IndexOutOfBoundsException if index is negative or &gt;= length()\n+   * @since 1.5\n+   */\n+  public int codePointAt(int index)\n+  {\n+    return Character.codePointAt(value, index, count);\n+  }\n+\n+  /**\n+   * Get the code point before the specified index.  This is like\n+   * #codePointAt(int), but checks the characters at <code>index-1</code> and\n+   * <code>index-2</code> to see if they form a supplementary code point.\n+   * @param index the index just past the codepoint to get, starting at 0\n+   * @return the codepoint at the specified index\n+   * @throws IndexOutOfBoundsException if index is negative or &gt;= length()\n+   * @since 1.5\n+   */\n+  public int codePointBefore(int index)\n+  {\n+    // Character.codePointBefore() doesn't perform this check.  We\n+    // could use the CharSequence overload, but this is just as easy.\n+    if (index >= count)\n+      throw new IndexOutOfBoundsException();\n+    return Character.codePointBefore(value, index, 1);\n+  }\n+\n+  /**\n+   * Get the specified array of characters. <code>srcOffset - srcEnd</code>\n+   * characters will be copied into the array you pass in.\n+   *\n+   * @param srcOffset the index to start copying from (inclusive)\n+   * @param srcEnd the index to stop copying from (exclusive)\n+   * @param dst the array to copy into\n+   * @param dstOffset the index to start copying into\n+   * @throws NullPointerException if dst is null\n+   * @throws IndexOutOfBoundsException if any source or target indices are\n+   *         out of range (while unspecified, source problems cause a\n+   *         StringIndexOutOfBoundsException, and dest problems cause an\n+   *         ArrayIndexOutOfBoundsException)\n+   * @see System#arraycopy(Object, int, Object, int, int)\n+   */\n+  public void getChars(int srcOffset, int srcEnd,\n+\t\t       char[] dst, int dstOffset)\n+  {\n+    if (srcOffset < 0 || srcEnd > count || srcEnd < srcOffset)\n+      throw new StringIndexOutOfBoundsException();\n+    System.arraycopy(value, srcOffset, dst, dstOffset, srcEnd - srcOffset);\n+  }\n+\n+  /**\n+   * Set the character at the specified index.\n+   *\n+   * @param index the index of the character to set starting at 0\n+   * @param ch the value to set that character to\n+   * @throws IndexOutOfBoundsException if index is negative or &gt;= length()\n+   *         (while unspecified, this is a StringIndexOutOfBoundsException)\n+   */\n+  public void setCharAt(int index, char ch)\n+  {\n+    if (index < 0 || index >= count)\n+      throw new StringIndexOutOfBoundsException(index);\n+    // Call ensureCapacity to enforce copy-on-write.\n+    ensureCapacity(count);\n+    value[index] = ch;\n+  }\n+\n+  /**\n+   * Append the <code>String</code> value of the argument to this\n+   * <code>StringBuffer</code>. Uses <code>String.valueOf()</code> to convert\n+   * to <code>String</code>.\n+   *\n+   * @param obj the <code>Object</code> to convert and append\n+   * @return this <code>StringBuffer</code>\n+   * @see String#valueOf(Object)\n+   * @see #append(String)\n+   */\n+  public CPStringBuilder append(Object obj)\n+  {\n+    return append(String.valueOf(obj));\n+  }\n+\n+  /**\n+   * Append the <code>String</code> to this <code>StringBuffer</code>. If\n+   * str is null, the String \"null\" is appended.\n+   *\n+   * @param str the <code>String</code> to append\n+   * @return this <code>StringBuffer</code>\n+   */\n+  public CPStringBuilder append(String str)\n+  {\n+    if (str == null)\n+      str = \"null\";\n+    int len = str.length();\n+    ensureCapacity(count + len);\n+    str.getChars(0, len, value, count);\n+    count += len;\n+    return this;\n+  }\n+\n+  /**\n+   * Append the <code>StringBuilder</code> value of the argument to this\n+   * <code>StringBuilder</code>. This behaves the same as\n+   * <code>append((Object) stringBuffer)</code>, except it is more efficient.\n+   *\n+   * @param stringBuffer the <code>StringBuilder</code> to convert and append\n+   * @return this <code>StringBuilder</code>\n+   * @see #append(Object)\n+   */\n+  public CPStringBuilder append(StringBuffer stringBuffer)\n+  {\n+    if (stringBuffer == null)\n+      return append(\"null\");\n+    synchronized (stringBuffer)\n+      {\n+\tint len = stringBuffer.length();\n+\tensureCapacity(count + len);\n+\tstringBuffer.getChars(0, len, value, count);\n+\tcount += len;\n+      }\n+    return this;\n+  }\n+\n+  /**\n+   * Append the <code>char</code> array to this <code>StringBuffer</code>.\n+   * This is similar (but more efficient) than\n+   * <code>append(new String(data))</code>, except in the case of null.\n+   *\n+   * @param data the <code>char[]</code> to append\n+   * @return this <code>StringBuffer</code>\n+   * @throws NullPointerException if <code>str</code> is <code>null</code>\n+   * @see #append(char[], int, int)\n+   */\n+  public CPStringBuilder append(char[] data)\n+  {\n+    return append(data, 0, data.length);\n+  }\n+\n+  /**\n+   * Append part of the <code>char</code> array to this\n+   * <code>StringBuffer</code>. This is similar (but more efficient) than\n+   * <code>append(new String(data, offset, count))</code>, except in the case\n+   * of null.\n+   *\n+   * @param data the <code>char[]</code> to append\n+   * @param offset the start location in <code>str</code>\n+   * @param count the number of characters to get from <code>str</code>\n+   * @return this <code>StringBuffer</code>\n+   * @throws NullPointerException if <code>str</code> is <code>null</code>\n+   * @throws IndexOutOfBoundsException if offset or count is out of range\n+   *         (while unspecified, this is a StringIndexOutOfBoundsException)\n+   */\n+  public CPStringBuilder append(char[] data, int offset, int count)\n+  {\n+    if (offset < 0 || count < 0 || offset > data.length - count)\n+      throw new StringIndexOutOfBoundsException();\n+    ensureCapacity(this.count + count);\n+    System.arraycopy(data, offset, value, this.count, count);\n+    this.count += count;\n+    return this;\n+  }\n+\n+  /**\n+   * Append the <code>String</code> value of the argument to this\n+   * <code>StringBuffer</code>. Uses <code>String.valueOf()</code> to convert\n+   * to <code>String</code>.\n+   *\n+   * @param bool the <code>boolean</code> to convert and append\n+   * @return this <code>StringBuffer</code>\n+   * @see String#valueOf(boolean)\n+   */\n+  public CPStringBuilder append(boolean bool)\n+  {\n+    return append(bool ? \"true\" : \"false\");\n+  }\n+\n+  /**\n+   * Append the <code>char</code> to this <code>StringBuffer</code>.\n+   *\n+   * @param ch the <code>char</code> to append\n+   * @return this <code>StringBuffer</code>\n+   */\n+  public CPStringBuilder append(char ch)\n+  {\n+    ensureCapacity(count + 1);\n+    value[count++] = ch;\n+    return this;\n+  }\n+\n+  /**\n+   * Append the characters in the <code>CharSequence</code> to this\n+   * buffer.\n+   *\n+   * @param seq the <code>CharSequence</code> providing the characters\n+   * @return this <code>StringBuffer</code>\n+   * @since 1.5\n+   */\n+  public CPStringBuilder append(CharSequence seq)\n+  {\n+    return append(seq, 0, seq.length());\n+  }\n+\n+  /**\n+   * Append some characters from the <code>CharSequence</code> to this\n+   * buffer.  If the argument is null, the four characters \"null\" are\n+   * appended.\n+   *\n+   * @param seq the <code>CharSequence</code> providing the characters\n+   * @param start the starting index\n+   * @param end one past the final index\n+   * @return this <code>StringBuffer</code>\n+   * @since 1.5\n+   */\n+  public CPStringBuilder append(CharSequence seq, int start, int end)\n+  {\n+    if (seq == null)\n+      return append(\"null\");\n+    if (end - start > 0)\n+      {\n+\tensureCapacity(count + end - start);\n+\tfor (; start < end; ++start)\n+\t  value[count++] = seq.charAt(start);\n+      }\n+    return this;\n+  }\n+\n+  /**\n+   * Append the <code>String</code> value of the argument to this\n+   * <code>StringBuffer</code>. Uses <code>String.valueOf()</code> to convert\n+   * to <code>String</code>.\n+   *\n+   * @param inum the <code>int</code> to convert and append\n+   * @return this <code>StringBuffer</code>\n+   * @see String#valueOf(int)\n+   */\n+  // This is native in libgcj, for efficiency.\n+  public CPStringBuilder append(int inum)\n+  {\n+    return append(String.valueOf(inum));\n+  }\n+\n+  /**\n+   * Append the <code>String</code> value of the argument to this\n+   * <code>StringBuffer</code>. Uses <code>String.valueOf()</code> to convert\n+   * to <code>String</code>.\n+   *\n+   * @param lnum the <code>long</code> to convert and append\n+   * @return this <code>StringBuffer</code>\n+   * @see String#valueOf(long)\n+   */\n+  public CPStringBuilder append(long lnum)\n+  {\n+    return append(Long.toString(lnum, 10));\n+  }\n+\n+  /**\n+   * Append the <code>String</code> value of the argument to this\n+   * <code>StringBuffer</code>. Uses <code>String.valueOf()</code> to convert\n+   * to <code>String</code>.\n+   *\n+   * @param fnum the <code>float</code> to convert and append\n+   * @return this <code>StringBuffer</code>\n+   * @see String#valueOf(float)\n+   */\n+  public CPStringBuilder append(float fnum)\n+  {\n+    return append(Float.toString(fnum));\n+  }\n+\n+  /**\n+   * Append the <code>String</code> value of the argument to this\n+   * <code>StringBuffer</code>. Uses <code>String.valueOf()</code> to convert\n+   * to <code>String</code>.\n+   *\n+   * @param dnum the <code>double</code> to convert and append\n+   * @return this <code>StringBuffer</code>\n+   * @see String#valueOf(double)\n+   */\n+  public CPStringBuilder append(double dnum)\n+  {\n+    return append(Double.toString(dnum));\n+  }\n+\n+  /**\n+   * Append the code point to this <code>StringBuffer</code>.\n+   * This is like #append(char), but will append two characters\n+   * if a supplementary code point is given.\n+   *\n+   * @param code the code point to append\n+   * @return this <code>StringBuffer</code>\n+   * @see Character#toChars(int, char[], int)\n+   * @since 1.5\n+   */\n+  public CPStringBuilder appendCodePoint(int code)\n+  {\n+    int len = Character.charCount(code);\n+    ensureCapacity(count + len);\n+    Character.toChars(code, value, count);\n+    count += len;\n+    return this;\n+  }\n+\n+  /**\n+   * Delete characters from this <code>StringBuffer</code>.\n+   * <code>delete(10, 12)</code> will delete 10 and 11, but not 12. It is\n+   * harmless for end to be larger than length().\n+   *\n+   * @param start the first character to delete\n+   * @param end the index after the last character to delete\n+   * @return this <code>StringBuffer</code>\n+   * @throws StringIndexOutOfBoundsException if start or end are out of bounds\n+   * @since 1.2\n+   */\n+  public CPStringBuilder delete(int start, int end)\n+  {\n+    if (start < 0 || start > count || start > end)\n+      throw new StringIndexOutOfBoundsException(start);\n+    if (end > count)\n+      end = count;\n+    ensureCapacity(count);\n+    if (count - end != 0)\n+      System.arraycopy(value, end, value, start, count - end);\n+    count -= end - start;\n+    return this;\n+  }\n+\n+  /**\n+   * Delete a character from this <code>StringBuffer</code>.\n+   *\n+   * @param index the index of the character to delete\n+   * @return this <code>StringBuffer</code>\n+   * @throws StringIndexOutOfBoundsException if index is out of bounds\n+   * @since 1.2\n+   */\n+  public CPStringBuilder deleteCharAt(int index)\n+  {\n+    return delete(index, index + 1);\n+  }\n+\n+  /**\n+   * Replace characters between index <code>start</code> (inclusive) and\n+   * <code>end</code> (exclusive) with <code>str</code>. If <code>end</code>\n+   * is larger than the size of this StringBuffer, all characters after\n+   * <code>start</code> are replaced.\n+   *\n+   * @param start the beginning index of characters to delete (inclusive)\n+   * @param end the ending index of characters to delete (exclusive)\n+   * @param str the new <code>String</code> to insert\n+   * @return this <code>StringBuffer</code>\n+   * @throws StringIndexOutOfBoundsException if start or end are out of bounds\n+   * @throws NullPointerException if str is null\n+   * @since 1.2\n+   */\n+  public CPStringBuilder replace(int start, int end, String str)\n+  {\n+    if (start < 0 || start > count || start > end)\n+      throw new StringIndexOutOfBoundsException(start);\n+\n+    int len = str.length();\n+    // Calculate the difference in 'count' after the replace.\n+    int delta = len - (end > count ? count : end) + start;\n+    ensureCapacity(count + delta);\n+\n+    if (delta != 0 && end < count)\n+      System.arraycopy(value, end, value, end + delta, count - end);\n+\n+    str.getChars(0, len, value, start);\n+    count += delta;\n+    return this;\n+  }\n+\n+  /**\n+   * Insert a subarray of the <code>char[]</code> argument into this\n+   * <code>StringBuffer</code>.\n+   *\n+   * @param offset the place to insert in this buffer\n+   * @param str the <code>char[]</code> to insert\n+   * @param str_offset the index in <code>str</code> to start inserting from\n+   * @param len the number of characters to insert\n+   * @return this <code>StringBuffer</code>\n+   * @throws NullPointerException if <code>str</code> is <code>null</code>\n+   * @throws StringIndexOutOfBoundsException if any index is out of bounds\n+   * @since 1.2\n+   */\n+  public CPStringBuilder insert(int offset, char[] str, int str_offset, int len)\n+  {\n+    if (offset < 0 || offset > count || len < 0\n+        || str_offset < 0 || str_offset > str.length - len)\n+      throw new StringIndexOutOfBoundsException();\n+    ensureCapacity(count + len);\n+    System.arraycopy(value, offset, value, offset + len, count - offset);\n+    System.arraycopy(str, str_offset, value, offset, len);\n+    count += len;\n+    return this;\n+  }\n+\n+  /**\n+   * Insert the <code>String</code> value of the argument into this\n+   * <code>StringBuffer</code>. Uses <code>String.valueOf()</code> to convert\n+   * to <code>String</code>.\n+   *\n+   * @param offset the place to insert in this buffer\n+   * @param obj the <code>Object</code> to convert and insert\n+   * @return this <code>StringBuffer</code>\n+   * @exception StringIndexOutOfBoundsException if offset is out of bounds\n+   * @see String#valueOf(Object)\n+   */\n+  public CPStringBuilder insert(int offset, Object obj)\n+  {\n+    return insert(offset, obj == null ? \"null\" : obj.toString());\n+  }\n+\n+  /**\n+   * Insert the <code>String</code> argument into this\n+   * <code>StringBuffer</code>. If str is null, the String \"null\" is used\n+   * instead.\n+   *\n+   * @param offset the place to insert in this buffer\n+   * @param str the <code>String</code> to insert\n+   * @return this <code>StringBuffer</code>\n+   * @throws StringIndexOutOfBoundsException if offset is out of bounds\n+   */\n+  public CPStringBuilder insert(int offset, String str)\n+  {\n+    if (offset < 0 || offset > count)\n+      throw new StringIndexOutOfBoundsException(offset);\n+    if (str == null)\n+      str = \"null\";\n+    int len = str.length();\n+    ensureCapacity(count + len);\n+    System.arraycopy(value, offset, value, offset + len, count - offset);\n+    str.getChars(0, len, value, offset);\n+    count += len;\n+    return this;\n+  }\n+\n+  /**\n+   * Insert the <code>CharSequence</code> argument into this\n+   * <code>StringBuffer</code>.  If the sequence is null, the String\n+   * \"null\" is used instead.\n+   *\n+   * @param offset the place to insert in this buffer\n+   * @param sequence the <code>CharSequence</code> to insert\n+   * @return this <code>StringBuffer</code>\n+   * @throws IndexOutOfBoundsException if offset is out of bounds\n+   * @since 1.5\n+   */\n+  public CPStringBuilder insert(int offset, CharSequence sequence)\n+  {\n+    if (sequence == null)\n+      sequence = \"null\";\n+    return insert(offset, sequence, 0, sequence.length());\n+  }\n+\n+  /**\n+   * Insert a subsequence of the <code>CharSequence</code> argument into this\n+   * <code>StringBuffer</code>.  If the sequence is null, the String\n+   * \"null\" is used instead.\n+   *\n+   * @param offset the place to insert in this buffer\n+   * @param sequence the <code>CharSequence</code> to insert\n+   * @param start the starting index of the subsequence\n+   * @param end one past the ending index of the subsequence\n+   * @return this <code>StringBuffer</code>\n+   * @throws IndexOutOfBoundsException if offset, start,\n+   * or end are out of bounds\n+   * @since 1.5\n+   */\n+  public CPStringBuilder insert(int offset, CharSequence sequence, int start, int end)\n+  {\n+    if (sequence == null)\n+      sequence = \"null\";\n+    if (start < 0 || end < 0 || start > end || end > sequence.length())\n+      throw new IndexOutOfBoundsException();\n+    int len = end - start;\n+    ensureCapacity(count + len);\n+    System.arraycopy(value, offset, value, offset + len, count - offset);\n+    for (int i = start; i < end; ++i)\n+      value[offset++] = sequence.charAt(i);\n+    count += len;\n+    return this;\n+  }\n+\n+  /**\n+   * Insert the <code>char[]</code> argument into this\n+   * <code>StringBuffer</code>.\n+   *\n+   * @param offset the place to insert in this buffer\n+   * @param data the <code>char[]</code> to insert\n+   * @return this <code>StringBuffer</code>\n+   * @throws NullPointerException if <code>data</code> is <code>null</code>\n+   * @throws StringIndexOutOfBoundsException if offset is out of bounds\n+   * @see #insert(int, char[], int, int)\n+   */\n+  public CPStringBuilder insert(int offset, char[] data)\n+  {\n+    return insert(offset, data, 0, data.length);\n+  }\n+\n+  /**\n+   * Insert the <code>String</code> value of the argument into this\n+   * <code>StringBuffer</code>. Uses <code>String.valueOf()</code> to convert\n+   * to <code>String</code>.\n+   *\n+   * @param offset the place to insert in this buffer\n+   * @param bool the <code>boolean</code> to convert and insert\n+   * @return this <code>StringBuffer</code>\n+   * @throws StringIndexOutOfBoundsException if offset is out of bounds\n+   * @see String#valueOf(boolean)\n+   */\n+  public CPStringBuilder insert(int offset, boolean bool)\n+  {\n+    return insert(offset, bool ? \"true\" : \"false\");\n+  }\n+\n+  /**\n+   * Insert the <code>char</code> argument into this <code>StringBuffer</code>.\n+   *\n+   * @param offset the place to insert in this buffer\n+   * @param ch the <code>char</code> to insert\n+   * @return this <code>StringBuffer</code>\n+   * @throws StringIndexOutOfBoundsException if offset is out of bounds\n+   */\n+  public CPStringBuilder insert(int offset, char ch)\n+  {\n+    if (offset < 0 || offset > count)\n+      throw new StringIndexOutOfBoundsException(offset);\n+    ensureCapacity(count + 1);\n+    System.arraycopy(value, offset, value, offset + 1, count - offset);\n+    value[offset] = ch;\n+    count++;\n+    return this;\n+  }\n+\n+  /**\n+   * Insert the <code>String</code> value of the argument into this\n+   * <code>StringBuffer</code>. Uses <code>String.valueOf()</code> to convert\n+   * to <code>String</code>.\n+   *\n+   * @param offset the place to insert in this buffer\n+   * @param inum the <code>int</code> to convert and insert\n+   * @return this <code>StringBuffer</code>\n+   * @throws StringIndexOutOfBoundsException if offset is out of bounds\n+   * @see String#valueOf(int)\n+   */\n+  public CPStringBuilder insert(int offset, int inum)\n+  {\n+    return insert(offset, String.valueOf(inum));\n+  }\n+\n+  /**\n+   * Insert the <code>String</code> value of the argument into this\n+   * <code>StringBuffer</code>. Uses <code>String.valueOf()</code> to convert\n+   * to <code>String</code>.\n+   *\n+   * @param offset the place to insert in this buffer\n+   * @param lnum the <code>long</code> to convert and insert\n+   * @return this <code>StringBuffer</code>\n+   * @throws StringIndexOutOfBoundsException if offset is out of bounds\n+   * @see String#valueOf(long)\n+   */\n+  public CPStringBuilder insert(int offset, long lnum)\n+  {\n+    return insert(offset, Long.toString(lnum, 10));\n+  }\n+\n+  /**\n+   * Insert the <code>String</code> value of the argument into this\n+   * <code>StringBuffer</code>. Uses <code>String.valueOf()</code> to convert\n+   * to <code>String</code>.\n+   *\n+   * @param offset the place to insert in this buffer\n+   * @param fnum the <code>float</code> to convert and insert\n+   * @return this <code>StringBuffer</code>\n+   * @throws StringIndexOutOfBoundsException if offset is out of bounds\n+   * @see String#valueOf(float)\n+   */\n+  public CPStringBuilder insert(int offset, float fnum)\n+  {\n+    return insert(offset, Float.toString(fnum));\n+  }\n+\n+  /**\n+   * Insert the <code>String</code> value of the argument into this\n+   * <code>StringBuffer</code>. Uses <code>String.valueOf()</code> to convert\n+   * to <code>String</code>.\n+   *\n+   * @param offset the place to insert in this buffer\n+   * @param dnum the <code>double</code> to convert and insert\n+   * @return this <code>StringBuffer</code>\n+   * @throws StringIndexOutOfBoundsException if offset is out of bounds\n+   * @see String#valueOf(double)\n+   */\n+  public CPStringBuilder insert(int offset, double dnum)\n+  {\n+    return insert(offset, Double.toString(dnum));\n+  }\n+\n+  /**\n+   * Finds the first instance of a substring in this StringBuilder.\n+   *\n+   * @param str String to find\n+   * @return location (base 0) of the String, or -1 if not found\n+   * @throws NullPointerException if str is null\n+   * @see #indexOf(String, int)\n+   */\n+  public int indexOf(String str)\n+  {\n+    return indexOf(str, 0);\n+  }\n+\n+  /**\n+   * Finds the first instance of a String in this StringBuffer, starting at\n+   * a given index.  If starting index is less than 0, the search starts at\n+   * the beginning of this String.  If the starting index is greater than the\n+   * length of this String, or the substring is not found, -1 is returned.\n+   *\n+   * @param str String to find\n+   * @param fromIndex index to start the search\n+   * @return location (base 0) of the String, or -1 if not found\n+   * @throws NullPointerException if str is null\n+   * @since 1.4\n+   */\n+  public int indexOf(String str, int fromIndex)\n+  {\n+    if (fromIndex < 0)\n+      fromIndex = 0;\n+    int olength = str.length();\n+    int limit = count - olength;\n+    String s = VMCPStringBuilder.toString(value, 0, count);\n+    for (; fromIndex <= limit; ++fromIndex)\n+      if (s.regionMatches(fromIndex, str, 0, olength))\n+        return fromIndex;\n+    return -1;\n+  }\n+\n+  /**\n+   * Finds the last instance of a substring in this StringBuffer.\n+   *\n+   * @param str String to find\n+   * @return location (base 0) of the String, or -1 if not found\n+   * @throws NullPointerException if str is null\n+   * @see #lastIndexOf(String, int)\n+   * @since 1.4\n+   */\n+  public int lastIndexOf(String str)\n+  {\n+    return lastIndexOf(str, count - str.length());\n+  }\n+\n+  /**\n+   * Finds the last instance of a String in this StringBuffer, starting at a\n+   * given index.  If starting index is greater than the maximum valid index,\n+   * then the search begins at the end of this String.  If the starting index\n+   * is less than zero, or the substring is not found, -1 is returned.\n+   *\n+   * @param str String to find\n+   * @param fromIndex index to start the search\n+   * @return location (base 0) of the String, or -1 if not found\n+   * @throws NullPointerException if str is null\n+   * @since 1.4\n+   */\n+  public int lastIndexOf(String str, int fromIndex)\n+  {\n+    fromIndex = Math.min(fromIndex, count - str.length());\n+    String s = VMCPStringBuilder.toString(value, 0, count);\n+    int olength = str.length();\n+    for ( ; fromIndex >= 0; fromIndex--)\n+      if (s.regionMatches(fromIndex, str, 0, olength))\n+        return fromIndex;\n+    return -1;\n+  }\n+\n+  /**\n+   * Reverse the characters in this StringBuffer. The same sequence of\n+   * characters exists, but in the reverse index ordering.\n+   *\n+   * @return this <code>StringBuffer</code>\n+   */\n+  public CPStringBuilder reverse()\n+  {\n+    // Call ensureCapacity to enforce copy-on-write.\n+    ensureCapacity(count);\n+    for (int i = count >> 1, j = count - i; --i >= 0; ++j)\n+      {\n+        char c = value[i];\n+        value[i] = value[j];\n+        value[j] = c;\n+      }\n+    return this;\n+  }\n+\n+  /**\n+   * This may reduce the amount of memory used by the StringBuffer,\n+   * by resizing the internal array to remove unused space.  However,\n+   * this method is not required to resize, so this behavior cannot\n+   * be relied upon.\n+   * @since 1.5\n+   */\n+  public void trimToSize()\n+  {\n+    int wouldSave = value.length - count;\n+    // Some random heuristics: if we save less than 20 characters, who\n+    // cares.\n+    if (wouldSave < 20)\n+      return;\n+    // If we save more than 200 characters, shrink.\n+    // If we save more than 1/4 of the buffer, shrink.\n+    if (wouldSave > 200 || wouldSave * 4 > value.length)\n+      allocateArray(count);\n+  }\n+\n+  /**\n+   * Return the number of code points between two indices in the\n+   * <code>StringBuffer</code>.  An unpaired surrogate counts as a\n+   * code point for this purpose.  Characters outside the indicated\n+   * range are not examined, even if the range ends in the middle of a\n+   * surrogate pair.\n+   *\n+   * @param start the starting index\n+   * @param end one past the ending index\n+   * @return the number of code points\n+   * @since 1.5\n+   */\n+  public int codePointCount(int start, int end)\n+  {\n+    if (start < 0 || end >= count || start > end)\n+      throw new StringIndexOutOfBoundsException();\n+\n+    int count = 0;\n+    while (start < end)\n+      {\n+\tchar base = value[start];\n+\tif (base < Character.MIN_HIGH_SURROGATE\n+\t    || base > Character.MAX_HIGH_SURROGATE\n+\t    || start == end\n+\t    || start == count\n+\t    || value[start + 1] < Character.MIN_LOW_SURROGATE\n+\t    || value[start + 1] > Character.MAX_LOW_SURROGATE)\n+\t  {\n+\t    // Nothing.\n+\t  }\n+\telse\n+\t  {\n+\t    // Surrogate pair.\n+\t    ++start;\n+\t  }\n+\t++start;\n+\t++count;\n+      }\n+    return count;\n+  }\n+\n+  /**\n+   * Starting at the given index, this counts forward by the indicated\n+   * number of code points, and then returns the resulting index.  An\n+   * unpaired surrogate counts as a single code point for this\n+   * purpose.\n+   *\n+   * @param start the starting index\n+   * @param codePoints the number of code points\n+   * @return the resulting index\n+   * @since 1.5\n+   */\n+  public int offsetByCodePoints(int start, int codePoints)\n+  {\n+    while (codePoints > 0)\n+      {\n+\tchar base = value[start];\n+\tif (base < Character.MIN_HIGH_SURROGATE\n+\t    || base > Character.MAX_HIGH_SURROGATE\n+\t    || start == count\n+\t    || value[start + 1] < Character.MIN_LOW_SURROGATE\n+\t    || value[start + 1] > Character.MAX_LOW_SURROGATE)\n+\t  {\n+\t    // Nothing.\n+\t  }\n+\telse\n+\t  {\n+\t    // Surrogate pair.\n+\t    ++start;\n+\t  }\n+\t++start;\n+\t--codePoints;\n+      }\n+    return start;\n+  }\n+\n+  /**\n+   * Increase the capacity of this <code>StringBuilder</code>. This will\n+   * ensure that an expensive growing operation will not occur until either\n+   * <code>minimumCapacity</code> is reached or the array has been allocated.\n+   * The buffer is grown to either <code>minimumCapacity * 2</code>, if\n+   * the array has been allocated or the larger of <code>minimumCapacity</code> and \n+   * <code>capacity() * 2 + 2</code>, if it is not already large enough.\n+   *\n+   * @param minimumCapacity the new capacity\n+   * @see #length()\n+   */\n+  public void ensureCapacity(int minimumCapacity)\n+  {\n+    if (allocated || minimumCapacity > value.length)\n+      {\n+\tif (minimumCapacity > value.length)\n+\t  {\n+\t    int max = value.length * 2 + 2;\n+\t    minimumCapacity = (minimumCapacity < max ? max : minimumCapacity);\n+\t  }\n+\telse\n+\t  minimumCapacity *= 2;\n+\tallocateArray(minimumCapacity);\n+      }\n+  }\n+\n+  /**\n+   * Allocates a new character array.  This method is triggered when\n+   * a write is attempted after the array has been passed to a\n+   * {@link String} object, so that the builder does not modify\n+   * the immutable {@link String}.\n+   *\n+   * @param capacity the size of the new array.\n+   */\n+  private void allocateArray(int capacity)\n+  {\n+    char[] nb = new char[capacity];\n+    System.arraycopy(value, 0, nb, 0, count);\n+    value = nb;\n+    allocated = false;\n+  }\n+    \n+  /**\n+   * Get the length of the <code>String</code> this <code>StringBuilder</code>\n+   * would create. Not to be confused with the <em>capacity</em> of the\n+   * <code>StringBuilder</code>.\n+   *\n+   * @return the length of this <code>StringBuilder</code>\n+   * @see #capacity()\n+   * @see #setLength(int)\n+   */\n+  public int length()\n+  {\n+    return count;\n+  }\n+\n+  /**\n+   * Creates a substring of this StringBuilder, starting at a specified index\n+   * and ending at one character before a specified index. This is implemented\n+   * the same as <code>substring(beginIndex, endIndex)</code>, to satisfy\n+   * the CharSequence interface.\n+   *\n+   * @param beginIndex index to start at (inclusive, base 0)\n+   * @param endIndex index to end at (exclusive)\n+   * @return new String which is a substring of this StringBuilder\n+   * @throws IndexOutOfBoundsException if beginIndex or endIndex is out of\n+   *         bounds\n+   * @see #substring(int, int)\n+   */\n+  public CharSequence subSequence(int beginIndex, int endIndex)\n+  {\n+    return substring(beginIndex, endIndex);\n+  }\n+\n+  /**\n+   * Creates a substring of this CPStringBuilder, starting at a specified index\n+   * and ending at the end of this StringBuilder.\n+   *\n+   * @param beginIndex index to start substring (base 0)\n+   * @return new String which is a substring of this StringBuilder\n+   * @throws StringIndexOutOfBoundsException if beginIndex is out of bounds\n+   * @see #substring(int, int)\n+   */\n+  public String substring(int beginIndex)\n+  {\n+    return substring(beginIndex, count);\n+  }\n+\n+  /**\n+   * Creates a substring of this CPStringBuilder, starting at a specified index\n+   * and ending at one character before a specified index.\n+   *\n+   * @param beginIndex index to start at (inclusive, base 0)\n+   * @param endIndex index to end at (exclusive)\n+   * @return new String which is a substring of this StringBuilder\n+   * @throws StringIndexOutOfBoundsException if beginIndex or endIndex is out\n+   *         of bounds\n+   */\n+  public String substring(int beginIndex, int endIndex)\n+  {\n+    if (beginIndex < 0 || endIndex > count || endIndex < beginIndex)\n+      throw new StringIndexOutOfBoundsException();\n+    int len = endIndex - beginIndex;\n+    if (len == 0)\n+      return \"\";\n+    allocated = true;\n+    return VMCPStringBuilder.toString(value, beginIndex, len);\n+  }\n+\n+  /**\n+   * Convert this <code>CPStringBuilder</code> to a <code>String</code>. The\n+   * String is composed of the characters currently in this StringBuilder. Note\n+   * that the result is not a copy, so we flag this here and make sure to\n+   * allocate a new array on the next write attempt (see {@link #ensureCapacity(int)}).\n+   *\n+   * @return the characters in this StringBuilder\n+   */\n+  public String toString()\n+  {\n+    allocated = true;\n+    return VMCPStringBuilder.toString(value, 0, count);\n+  }\n+\n+}"}, {"sha": "e190889dede28573623f68da09269ac1c13fee38", "filename": "libjava/classpath/gnu/java/lang/ClassHelper.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2FClassHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2FClassHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2FClassHelper.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -102,7 +102,7 @@ public static String getUserName(Class klass)\n     String name = klass.getName();\n     if (arrayCount == 0)\n       return name;\n-    StringBuilder b = new StringBuilder(name.length() + 2 * arrayCount);\n+    CPStringBuilder b = new CPStringBuilder(name.length() + 2 * arrayCount);\n     b.append(name);\n     for (int i = 0; i < arrayCount; ++i)\n       b.append(\"[]\");"}, {"sha": "e413c76c78e23d1a1d0906aacc284c0949560137", "filename": "libjava/classpath/gnu/java/lang/reflect/GenericSignatureParser.java", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Freflect%2FGenericSignatureParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Freflect%2FGenericSignatureParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Freflect%2FGenericSignatureParser.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,7 +38,19 @@\n \n package gnu.java.lang.reflect;\n \n-import java.lang.reflect.*;\n+import gnu.java.lang.CPStringBuilder;\n+\n+import java.lang.reflect.Constructor;\n+import java.lang.reflect.GenericArrayType;\n+import java.lang.reflect.GenericDeclaration;\n+import java.lang.reflect.GenericSignatureFormatError;\n+import java.lang.reflect.MalformedParameterizedTypeException;\n+import java.lang.reflect.Method;\n+import java.lang.reflect.ParameterizedType;\n+import java.lang.reflect.Type;\n+import java.lang.reflect.TypeVariable;\n+import java.lang.reflect.WildcardType;\n+\n import java.util.ArrayList;\n import java.util.Arrays;\n \n@@ -184,7 +196,7 @@ public int hashCode()\n \n     public String toString()\n     {\n-        StringBuilder sb = new StringBuilder();\n+        CPStringBuilder sb = new CPStringBuilder();\n         if (owner != null)\n         {\n             sb.append(owner);"}, {"sha": "612058dbfe84bf17e23fc291e10a90b1540fcbce", "filename": "libjava/classpath/gnu/java/lang/reflect/TypeSignature.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Freflect%2FTypeSignature.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Freflect%2FTypeSignature.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Flang%2Freflect%2FTypeSignature.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.lang.reflect;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.lang.reflect.Constructor;\n import java.lang.reflect.Field;\n import java.lang.reflect.Member;\n@@ -239,7 +241,7 @@ public static Class getClassForEncoding(String type_code)\n   public static String getEncodingOfMethod(Method m)\n   {\n     Class[] paramTypes = m.getParameterTypes();\n-    StringBuilder buf = new StringBuilder(\"(\");\n+    CPStringBuilder buf = new CPStringBuilder(\"(\");\n     for (int i = 0; i < paramTypes.length; i++)\n       buf.append(getEncodingOfClass(paramTypes[i].getName(), true));\n     buf.append(')').append(getEncodingOfClass(m.getReturnType().getName(),\n@@ -261,7 +263,7 @@ public static String getEncodingOfMethod(Method m)\n   public static String getEncodingOfConstructor(Constructor c)\n   {\n     Class[] paramTypes = c.getParameterTypes();\n-    StringBuilder buf = new StringBuilder(\"(\");\n+    CPStringBuilder buf = new CPStringBuilder(\"(\");\n     for (int i = 0; i < paramTypes.length; i++)\n       buf.append(getEncodingOfClass(paramTypes[i].getName(), true));\n     buf.append(\")V\");"}, {"sha": "6fb49363dddb65b8ccfa2f732f59609780c77a30", "filename": "libjava/classpath/gnu/java/math/GMP.java", "status": "added", "additions": 474, "deletions": 0, "changes": 474, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fmath%2FGMP.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fmath%2FGMP.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fmath%2FGMP.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -0,0 +1,474 @@\n+/* gnu.java.math.GMP -- Arbitary precision integers using GMP\n+   Copyright (C) 2006 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+ \n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+\n+package gnu.java.math;\n+\n+import gnu.classpath.Pointer;\n+\n+/**\n+ * Implement BigInteger using GMP\n+ */\n+public final class GMP\n+{\n+  private Pointer native_ptr;\n+  private int refCount = 1;\n+  \n+  public GMP()\n+  {\n+    super();\n+    \n+    natInitialize();\n+  }\n+\n+  private synchronized void acquireRef()\n+  {\n+    refCount++;\n+  }\n+  \n+  private synchronized void releaseRef()\n+  {\n+    refCount--;\n+    if (refCount == 0)\n+      {\n+\tnatFinalize();\n+\tnative_ptr = null;\n+      }\n+  }\n+  \n+  protected void finalize()\n+  {\n+    releaseRef();\n+  }\n+  \n+  \n+  public void fromByteArray(byte[] v)\n+  {\n+    acquireRef();\n+    natFromByteArray(v);\n+    releaseRef();\n+  }\n+  \n+  public void fromBI(GMP x)\n+  {\n+    acquireRef();\n+    x.acquireRef();\n+    natFromBI(x.native_ptr);\n+    x.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void fromLong(long n)\n+  {\n+    acquireRef();\n+    natFromLong(n);\n+    releaseRef();\n+  }\n+  \n+  public int fromString(String s, int rdx)\n+  {\n+    acquireRef();\n+    int result = natFromString(s, rdx);\n+    releaseRef();\n+    return result;\n+  }\n+  \n+  public void fromSignedMagnitude(byte[] m, boolean isNegative)\n+  {\n+    acquireRef();\n+    natFromSignedMagnitude(m, isNegative);\n+    releaseRef();\n+  }\n+  \n+  public String toString(int b)\n+  {\n+    acquireRef();\n+    String result = natToString(b);\n+    releaseRef();\n+    return result;\n+  }\n+  \n+  public void toByteArray(byte[] r)\n+  {\n+    acquireRef();\n+    natToByteArray(r);\n+    releaseRef();\n+  }\n+  \n+  public double doubleValue()\n+  {\n+    acquireRef();\n+    double result = natDoubleValue();\n+    releaseRef();\n+    return result;\n+  }\n+  \n+  public int absIntValue()\n+  {\n+    acquireRef();\n+    int result = natAbsIntValue();\n+    releaseRef();\n+    return result;\n+  }\n+  \n+  public int compare(GMP x)\n+  {\n+    acquireRef();\n+    x.acquireRef();\n+    int result = natCompare(x.native_ptr);\n+    x.releaseRef();\n+    releaseRef();\n+    return result;\n+  }\n+  \n+  public void add(GMP x, GMP r)\n+  {\n+    acquireRef();\n+    x.acquireRef();\n+    r.acquireRef();\n+    natAdd(x.native_ptr, r.native_ptr);\n+    r.releaseRef();\n+    x.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void subtract(GMP x, GMP r)\n+  {\n+    acquireRef();\n+    x.acquireRef();\n+    r.acquireRef();\n+    natSubtract(x.native_ptr, r.native_ptr);\n+    r.releaseRef();\n+    x.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void multiply(GMP x, GMP r)\n+  {\n+    acquireRef();\n+    x.acquireRef();\n+    r.acquireRef();\n+    natMultiply(x.native_ptr, r.native_ptr);\n+    r.releaseRef();\n+    x.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void quotient(GMP x, GMP r)\n+  {\n+    acquireRef();\n+    x.acquireRef();\n+    r.acquireRef();\n+    natQuotient(x.native_ptr, r.native_ptr);\n+    r.releaseRef();\n+    x.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void remainder(GMP x, GMP r)\n+  {\n+    acquireRef();\n+    x.acquireRef();\n+    r.acquireRef();\n+    natRemainder(x.native_ptr, r.native_ptr);\n+    r.releaseRef();\n+    x.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void quotientAndRemainder(GMP x, GMP q, GMP r)\n+  {\n+    acquireRef();\n+    x.acquireRef();\n+    q.acquireRef();\n+    r.acquireRef();\n+    natQuotientAndRemainder(x.native_ptr, q.native_ptr, r.native_ptr);\n+    r.releaseRef();\n+    q.releaseRef();\n+    x.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void modulo(GMP x, GMP r)\n+  {\n+    acquireRef();\n+    x.acquireRef();\n+    r.acquireRef();\n+    natModulo(x.native_ptr, r.native_ptr);\n+    r.releaseRef();\n+    x.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void pow(int n, GMP r)\n+  {\n+    acquireRef();\n+    r.acquireRef();\n+    natPow(n, r.native_ptr);\n+    r.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void modPow(GMP e, GMP m, GMP r)\n+  {\n+    acquireRef();\n+    e.acquireRef();\n+    m.acquireRef();\n+    r.acquireRef();\n+    natModPow(e.native_ptr, m.native_ptr, r.native_ptr);\n+    r.releaseRef();\n+    m.releaseRef();\n+    e.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void modInverse(GMP m, GMP r)\n+  {\n+    acquireRef();\n+    m.acquireRef();\n+    r.acquireRef();\n+    natModInverse(m.native_ptr, r.native_ptr);\n+    r.releaseRef();\n+    m.releaseRef();\n+    releaseRef();\n+  }\n+\n+  public void gcd(GMP x, GMP r)\n+  {\n+    acquireRef();\n+    x.acquireRef();\n+    r.acquireRef();\n+    natGCD(x.native_ptr, r.native_ptr);\n+    r.releaseRef();\n+    x.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void shiftLeft(int n, GMP r)\n+  {\n+    acquireRef();\n+    r.acquireRef();\n+    natShiftLeft(n, r.native_ptr);\n+    r.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void shiftRight(int n, GMP r)\n+  {\n+    acquireRef();\n+    r.acquireRef();\n+    natShiftRight(n, r.native_ptr);\n+    r.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void abs(GMP r)\n+  {\n+    acquireRef();\n+    r.acquireRef();\n+    natAbs(r.native_ptr);\n+    r.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void negate(GMP r)\n+  {\n+    acquireRef();\n+    r.acquireRef();\n+    natNegate(r.native_ptr);\n+    r.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public int bitLength()\n+  {\n+    acquireRef();\n+    int result = natBitLength();\n+    releaseRef();\n+    return result;\n+  }\n+  \n+  public int bitCount()\n+  {\n+    acquireRef();\n+    int result = natSetBitCount();\n+    releaseRef();\n+    return result;\n+  }\n+  \n+  public void and(GMP x, GMP r)\n+  {\n+    acquireRef();\n+    x.acquireRef();\n+    r.acquireRef();\n+    natAnd(x.native_ptr, r.native_ptr);\n+    r.releaseRef();\n+    x.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void or(GMP x, GMP r)\n+  {\n+    acquireRef();\n+    x.acquireRef();\n+    r.acquireRef();\n+    natOr(x.native_ptr, r.native_ptr);\n+    r.releaseRef();\n+    x.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void xor(GMP x, GMP r)\n+  {\n+    acquireRef();\n+    x.acquireRef();\n+    r.acquireRef();\n+    natXor(x.native_ptr, r.native_ptr);\n+    r.releaseRef();\n+    x.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void andNot(GMP x, GMP r)\n+  {\n+    acquireRef();\n+    x.acquireRef();\n+    r.acquireRef();\n+    natAndNot(x.native_ptr, r.native_ptr);\n+    r.releaseRef();\n+    x.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void not(GMP r)\n+  {\n+    acquireRef();\n+    r.acquireRef();\n+    natNot(r.native_ptr);\n+    r.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public void flipBit(int n, GMP r)\n+  {\n+    acquireRef();\n+    r.acquireRef();\n+    natFlipBit(n, r.native_ptr);\n+    r.releaseRef();\n+    releaseRef();\n+  }\n+\n+  public int testBit(int n)\n+  {\n+    acquireRef();\n+    int result = natTestBit(n);\n+    releaseRef();\n+    return result;\n+  }\n+  \n+  public void setBit(int n, boolean setIt, GMP r)\n+  {\n+    acquireRef();\n+    r.acquireRef();\n+    natSetBit(n, setIt, r.native_ptr);\n+    r.releaseRef();\n+    releaseRef();\n+  }\n+  \n+  public int testPrimality(int certainty)\n+  {\n+    acquireRef();\n+    int result = natTestPrimality(certainty);\n+    releaseRef();\n+    return result;\n+  }\n+  \n+  public int lowestSetBit()\n+  {\n+    acquireRef();\n+    int result = natLowestSetBit();\n+    releaseRef();\n+    return result;\n+  }\n+  \n+  // Native methods .........................................................\n+  \n+  public static native void natInitializeLibrary();\n+  \n+  private native void natInitialize();\n+  private native void natFinalize();\n+  \n+  private native void natFromLong(long n);\n+  private native void natFromBI(Pointer x);\n+  private native void natFromByteArray(byte[] v);\n+  private native int natFromString(String s, int rdx);\n+  private native void natFromSignedMagnitude(byte[] m, boolean isNegative);\n+  \n+  private native String natToString(int base);\n+  private native void natToByteArray(byte[] r);\n+  private native int natAbsIntValue();\n+  private native double natDoubleValue();\n+  \n+  private native int natCompare(Pointer y);\n+  private native void natAdd(Pointer x, Pointer r);\n+  private native void natSubtract(Pointer x, Pointer r);\n+  private native void natMultiply(Pointer x, Pointer r);\n+  private native void natQuotient(Pointer x, Pointer r);\n+  private native void natRemainder(Pointer x, Pointer r);\n+  private native void natQuotientAndRemainder(Pointer x, Pointer q, Pointer r);\n+  private native void natModulo(Pointer m, Pointer r);\n+  private native void natPow(int n, Pointer r);\n+  private native void natModPow(Pointer e, Pointer m, Pointer r);\n+  private native void natModInverse(Pointer x, Pointer r);\n+  private native void natGCD(Pointer x, Pointer r);\n+  private native int natTestPrimality(int c);\n+  private native void natShiftLeft(int n, Pointer r);\n+  private native void natShiftRight(int n, Pointer r);\n+  private native int natLowestSetBit();\n+  private native void natAbs(Pointer r);\n+  private native void natNegate(Pointer r);\n+  private native int natBitLength();\n+  private native int natSetBitCount();\n+  private native void natXor(Pointer x, Pointer r);\n+  private native void natOr(Pointer x, Pointer r);\n+  private native void natAnd(Pointer x, Pointer r);\n+  private native void natAndNot(Pointer x, Pointer r);\n+  private native void natFlipBit(int n, Pointer r);\n+  private native int natTestBit(int n);\n+  private native void natSetBit(int n, boolean setIt, Pointer r);\n+  private native void natNot(Pointer r);\n+}"}, {"sha": "98e8a868d60c0201739a48cf878790bdd54fbe5b", "filename": "libjava/classpath/gnu/java/net/protocol/ftp/FTPConnection.java", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fftp%2FFTPConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fftp%2FFTPConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fftp%2FFTPConnection.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.net.protocol.ftp;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.net.CRLFInputStream;\n import gnu.java.net.CRLFOutputStream;\n import gnu.java.net.EmptyX509TrustManager;\n@@ -621,7 +623,7 @@ protected void initialiseDTP()\n           }\n         \n         // Send PORT command\n-        StringBuffer buf = new StringBuffer(PORT);\n+        CPStringBuilder buf = new CPStringBuilder(PORT);\n         buf.append(' ');\n         // Construct the address/port string form\n         byte[] address = localhost.getAddress();\n@@ -686,7 +688,7 @@ public int getRepresentationType()\n   public void setRepresentationType(int type)\n     throws IOException\n   {\n-    StringBuffer buf = new StringBuffer(TYPE);\n+    CPStringBuilder buf = new CPStringBuilder(TYPE);\n     buf.append(' ');\n     switch (type)\n       {\n@@ -732,7 +734,7 @@ public int getFileStructure()\n   public void setFileStructure(int structure)\n     throws IOException\n   {\n-    StringBuffer buf = new StringBuffer(STRU);\n+    CPStringBuilder buf = new CPStringBuilder(STRU);\n     buf.append(' ');\n     switch (structure)\n       {\n@@ -776,7 +778,7 @@ public int getTransferMode()\n   public void setTransferMode(int mode)\n     throws IOException\n   {\n-    StringBuffer buf = new StringBuffer(MODE);\n+    CPStringBuilder buf = new CPStringBuilder(MODE);\n     buf.append(' ');\n     switch (mode)\n       {\n@@ -1286,7 +1288,7 @@ protected FTPResponse readResponse()\n       }\n     else if (c == '-')\n       {\n-        StringBuffer buf = new StringBuffer(line.substring(4));\n+        CPStringBuilder buf = new CPStringBuilder(line.substring(4));\n         buf.append('\\n');\n         while(true)\n           {"}, {"sha": "8a30e51db57334da5be8e3f9a1476e9cf4809d2c", "filename": "libjava/classpath/gnu/java/net/protocol/http/ChunkedInputStream.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FChunkedInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FChunkedInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FChunkedInputStream.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.net.protocol.http;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.IOException;\n import java.io.InputStream;\n import java.net.ProtocolException;\n@@ -113,7 +115,7 @@ public synchronized int read(byte[] buffer, int offset, int length)\n         // Read chunk header\n         int c, last = 0;\n         boolean seenSemi = false;\n-        StringBuilder buf = new StringBuilder();\n+        CPStringBuilder buf = new CPStringBuilder();\n         do\n           {\n             c = in.read();"}, {"sha": "4482a121e5906db52340898bb39ea65af23d9899", "filename": "libjava/classpath/gnu/java/net/protocol/http/Cookie.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FCookie.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FCookie.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FCookie.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.net.protocol.http;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.util.Date;\n \n /**\n@@ -139,7 +141,7 @@ public String toString()\n   \n   public String toString(boolean showPath, boolean showDomain)\n   {\n-    StringBuilder buf = new StringBuilder();\n+    CPStringBuilder buf = new CPStringBuilder();\n     buf.append(name);\n     buf.append('=');\n     buf.append(value);"}, {"sha": "44b1a608ac7d1c3b5145e456859f8ebae80c9d74", "filename": "libjava/classpath/gnu/java/net/protocol/http/HTTPConnection.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPConnection.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPConnection.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHTTPConnection.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -39,6 +39,8 @@\n package gnu.java.net.protocol.http;\n \n import gnu.classpath.SystemProperties;\n+\n+import gnu.java.lang.CPStringBuilder;\n import gnu.java.net.EmptyX509TrustManager;\n \n import java.io.BufferedInputStream;\n@@ -668,7 +670,7 @@ public Request newRequest(String method, String path)\n         Cookie[] cookies = cookieManager.getCookies(hostname, secure, path);\n         if (cookies != null && cookies.length > 0)\n           {\n-            StringBuilder buf = new StringBuilder();\n+            CPStringBuilder buf = new CPStringBuilder();\n             buf.append(\"$Version=1\");\n             for (int i = 0; i < cookies.length; i++)\n               {\n@@ -827,7 +829,7 @@ protected synchronized void closeConnection()\n    */\n   protected String getURI()\n   {\n-    StringBuilder buf = new StringBuilder();\n+    CPStringBuilder buf = new CPStringBuilder();\n     buf.append(secure ? \"https://\" : \"http://\");\n     buf.append(hostname);\n     if (secure)"}, {"sha": "690a0c65bd045a756b65c93fed426cfe013cb4ba", "filename": "libjava/classpath/gnu/java/net/protocol/http/Headers.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHeaders.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHeaders.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FHeaders.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.net.protocol.http;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.net.LineInputStream;\n \n import java.io.IOException;\n@@ -280,7 +282,7 @@ public void parse(InputStream in)\n       (LineInputStream) in : new LineInputStream(in);\n     \n     String name = null;\n-    StringBuilder value = new StringBuilder();\n+    CPStringBuilder value = new CPStringBuilder();\n     while (true)\n       {\n         String line = lin.readLine();"}, {"sha": "568f830fd47960f5950c39fdfb2e7cbbf5327aee", "filename": "libjava/classpath/gnu/java/net/protocol/http/LimitedLengthInputStream.java", "status": "modified", "additions": 15, "deletions": 19, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FLimitedLengthInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FLimitedLengthInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FLimitedLengthInputStream.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -1,13 +1,13 @@\n /* LimitedLengthInputStream.java --\n-   Copyright (C) 2005 Free Software Foundation, Inc.\n+   Copyright (C) 2005, 2008 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n GNU Classpath is free software; you can redistribute it and/or modify\n it under the terms of the GNU General Public License as published by\n the Free Software Foundation; either version 2, or (at your option)\n any later version.\n- \n+\n GNU Classpath is distributed in the hope that it will be useful, but\n WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n@@ -57,20 +57,17 @@\n   private boolean eof;\n   private InputStream in;\n   private boolean doClose;\n-  \n-  \n+\n   private void handleClose()\n     throws IOException\n   {\n     eof = true;\n+\n     if (doClose)\n-      {\n-        in.close();\n-      }\n+      in.close();\n     else\n-      {\n-        connection.release();\n-      }\n+      connection.release();\n+\n     in = null;\n     connection = null;\n   }\n@@ -85,7 +82,7 @@ private void handleClose()\n    * @param restrictLen if true the number of bytes that can be read\n    * from this stream will be limited to maxLen, otherwise the number\n    * of bytes is not restricted.\n-   * \n+   *\n    * @param con the HTTPConnection associated with this stream\n    *\n    * @param doClose if true con will be closed when finished reading,\n@@ -98,7 +95,6 @@ private void handleClose()\n                            HTTPConnection con,\n                            boolean doClose)\n     throws IOException\n-\n   {\n     this.in = in;\n     this.remainingLen = maxLen;\n@@ -122,7 +118,7 @@ public synchronized int read()\n       return -1; // EOF\n \n     int r;\n-    \n+\n     if (restrictLen)\n       {\n         r = in.read();\n@@ -138,7 +134,7 @@ public synchronized int read()\n         if (r == -1)\n           handleClose();\n       }\n-    \n+\n     return r;\n   }\n \n@@ -156,12 +152,12 @@ public synchronized int read(byte[] buffer, int offset, int length)\n \n     if (restrictLen && length > remainingLen)\n       length = (int) remainingLen;\n-      \n+\n     int r = in.read(buffer, offset, length);\n-    \n+\n     if (-1 == r)\n       handleClose();\n-    \n+\n     if (restrictLen && r > 0)\n       {\n         remainingLen -= r;\n@@ -182,7 +178,7 @@ public synchronized long skip(long n)\n       n = remainingLen;\n \n     long r = in.skip(n);\n-    \n+\n     if (restrictLen)\n       {\n         remainingLen -= r;\n@@ -214,7 +210,7 @@ public synchronized void close()\n     // it away.\n \n     doClose = true;\n-    \n+\n     handleClose();\n   }\n }"}, {"sha": "88e2fd077f2e0e6312d709ae6b00a41e464c8f59", "filename": "libjava/classpath/gnu/java/net/protocol/http/Request.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FRequest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FRequest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fhttp%2FRequest.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,7 @@\n \n package gnu.java.net.protocol.http;\n \n+import gnu.java.lang.CPStringBuilder;\n import gnu.java.net.LineInputStream;\n import gnu.java.util.Base64;\n \n@@ -628,7 +629,7 @@ Properties parseAuthParams(String text)\n   {\n     int len = text.length();\n     String key = null;\n-    StringBuilder buf = new StringBuilder();\n+    CPStringBuilder buf = new CPStringBuilder();\n     Properties ret = new Properties();\n     boolean inQuote = false;\n     for (int i = 0; i < len; i++)\n@@ -681,7 +682,7 @@ String getNonceCount(String nonce)\n   {\n     int nc = connection.getNonceCount(nonce);\n     String hex = Integer.toHexString(nc);\n-    StringBuilder buf = new StringBuilder();\n+    CPStringBuilder buf = new CPStringBuilder();\n     for (int i = 8 - hex.length(); i > 0; i--)\n       {\n         buf.append('0');\n@@ -752,7 +753,7 @@ void handleSetCookie(String text)\n \n     int len = text.length();\n     String attr = null;\n-    StringBuilder buf = new StringBuilder();\n+    CPStringBuilder buf = new CPStringBuilder();\n     boolean inQuote = false;\n     for (int i = 0; i <= len; i++)\n       {"}, {"sha": "66f0fb6d983a92d0972e0e5ce00302f3d69ee646", "filename": "libjava/classpath/gnu/java/net/protocol/jar/Handler.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnet%2Fprotocol%2Fjar%2FHandler.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.net.protocol.jar;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.net.URLParseError;\n \n import java.io.IOException;\n@@ -180,7 +182,7 @@ else if (token.equals(\"..\"))\n \t  tokens.add(token);\n       }\n \n-    StringBuffer path = new StringBuffer(url_string.length());\n+    CPStringBuilder path = new CPStringBuilder(url_string.length());\n     path.append(url_string.substring(0, jar_stop + 1));\n \n     Iterator<String> it = tokens.iterator();\n@@ -205,7 +207,7 @@ protected String toExternalForm (URL url)\n     //  Do the concatenation manually to avoid resize StringBuffer's \n     //  internal buffer.  The length of ref is not taken into consideration\n     //  as it's a rare path.\n-    StringBuffer sb = new StringBuffer (file.length() + 5);\n+    CPStringBuilder sb = new CPStringBuilder (file.length() + 5);\n     sb.append (\"jar:\");\n     sb.append (file);\n     if (ref != null)"}, {"sha": "a1eb5e2067b4cc51558d58f2833922c578517f6b", "filename": "libjava/classpath/gnu/java/nio/charset/ByteDecodeLoopHelper.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FByteDecodeLoopHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FByteDecodeLoopHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FByteDecodeLoopHelper.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -119,6 +119,8 @@ private CoderResult arrayDecodeLoop(ByteBuffer in, CharBuffer out)\n     int inRemaining = in.remaining();\n     int outRemaining = out.remaining();\n     CoderResult result;\n+\n+\tbailOut:\n     if (inRemaining <= outRemaining)\n       {\n         for (int i = 0; i < inRemaining; i++)\n@@ -129,7 +131,7 @@ private CoderResult arrayDecodeLoop(ByteBuffer in, CharBuffer out)\n               {\n                 inPos--;\n                 result = CoderResult.unmappableForLength(1);\n-                break;\n+\t\t\t\tbreak bailOut;\n               }\n             char c = mapToChar(b);\n             outArray[outPos] = c;\n@@ -147,7 +149,7 @@ private CoderResult arrayDecodeLoop(ByteBuffer in, CharBuffer out)\n               {\n                 inPos--;\n                 result = CoderResult.unmappableForLength(1);\n-                break;\n+\t\t\t\tbreak bailOut;\n               }\n             char c = mapToChar(b);\n             outArray[outPos] = c;"}, {"sha": "b1a4f10da922805926b4ad57ac5028d6c84fd24c", "filename": "libjava/classpath/gnu/java/nio/charset/ByteEncodeLoopHelper.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FByteEncodeLoopHelper.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FByteEncodeLoopHelper.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fnio%2Fcharset%2FByteEncodeLoopHelper.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -120,6 +120,8 @@ private CoderResult arrayEncodeLoop(CharBuffer in, ByteBuffer out)\n     int inRemaining = in.remaining();\n     int outRemaining = out.remaining();\n     CoderResult result;\n+\n+\tbailOut:\n     if (inRemaining <= outRemaining)\n       {\n         for (int i = 0; i < inRemaining; i++)\n@@ -130,7 +132,7 @@ private CoderResult arrayEncodeLoop(CharBuffer in, ByteBuffer out)\n               {\n                 inPos--;\n                 result = CoderResult.unmappableForLength(1);\n-                break;\n+                break bailOut;\n               }\n             byte b = mapToByte(inChar);\n             outArray[outPos] = b;\n@@ -148,7 +150,7 @@ private CoderResult arrayEncodeLoop(CharBuffer in, ByteBuffer out)\n               {\n                 inPos--;\n                 result = CoderResult.unmappableForLength(1);\n-                break;\n+                break bailOut;\n               }\n             byte b = mapToByte(inChar);\n             outArray[outPos] = b;"}, {"sha": "9c3edef76d8fa20dfb7bbc06db31def67e6d941a", "filename": "libjava/classpath/gnu/java/rmi/server/RMIClassLoaderImpl.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIClassLoaderImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIClassLoaderImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIClassLoaderImpl.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.rmi.server;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.lang.reflect.Proxy;\n import java.net.MalformedURLException;\n import java.net.URL;\n@@ -69,7 +71,7 @@ public static String urlToAnnotation (URL[] urls)\n       if (urls.length == 0)\n         return null;\n \n-      StringBuffer annotation = new StringBuffer (64 * urls.length);\n+      CPStringBuilder annotation = new CPStringBuilder (64 * urls.length);\n \n       for (int i = 0; i < urls.length; i++)\n       {\n@@ -337,7 +339,7 @@ public String getClassAnnotation(Class cl)\n         if (urls.length == 0)\n           return null;\n         \n-        StringBuffer annotation = new StringBuffer (64 * urls.length);\n+        CPStringBuilder annotation = new CPStringBuilder (64 * urls.length);\n         \n         for (int i = 0; i < urls.length; i++)\n           {"}, {"sha": "c3665a4e73b62c2083d5e640b0e79629a2eef213", "filename": "libjava/classpath/gnu/java/rmi/server/RMIHashes.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIHashes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIHashes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Frmi%2Fserver%2FRMIHashes.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.rmi.server;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.lang.reflect.TypeSignature;\n \n import java.io.ByteArrayOutputStream;\n@@ -61,7 +63,7 @@ public static long getMethodHash(Method meth)\n         ByteArrayOutputStream digest_out = new ByteArrayOutputStream();\n         DataOutputStream data_out = new DataOutputStream (digest_out);\n         \n-        StringBuffer sbuf = new StringBuffer();\n+        CPStringBuilder sbuf = new CPStringBuilder();\n         sbuf.append(meth.getName());\n         sbuf.append('(');\n         Class params[] = meth.getParameterTypes();"}, {"sha": "6c39d46acc63d889ff0261cbfcf45c396ebf1966", "filename": "libjava/classpath/gnu/java/security/Engine.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FEngine.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FEngine.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FEngine.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.java.security;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.lang.reflect.Constructor;\n import java.lang.reflect.InvocationTargetException;\n \n@@ -150,7 +152,7 @@ public static Object getInstance(String service, String algorithm,\n     String alias;\n     int count = 0;\n     boolean algorithmFound = false;\n-    StringBuilder sb = new StringBuilder();\n+    CPStringBuilder sb = new CPStringBuilder();\n     while (enumer.hasMoreElements())\n       {\n         key = (String) enumer.nextElement();"}, {"sha": "a3d70e220199c0363b57549dd190e0e2a9e7b6d9", "filename": "libjava/classpath/gnu/java/security/OID.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FOID.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FOID.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FOID.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.security;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.der.DEREncodingException;\n \n import java.io.ByteArrayOutputStream;\n@@ -359,7 +361,7 @@ public String toString()\n       return strRep;\n     else\n       {\n-        StringBuffer buf = new StringBuffer();\n+        CPStringBuilder buf = new CPStringBuilder();\n         for (int i = 0; i < components.length; i++)\n           {\n             buf.append((long) components[i] & 0xFFFFFFFFL);"}, {"sha": "e9c811644df8710090256d6bdf868b57fc983feb", "filename": "libjava/classpath/gnu/java/security/PolicyFile.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FPolicyFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FPolicyFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2FPolicyFile.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -39,6 +39,8 @@\n \n import gnu.classpath.debug.Component;\n import gnu.classpath.debug.SystemLogger;\n+\n+import gnu.java.lang.CPStringBuilder;\n import gnu.java.security.action.GetPropertyAction;\n \n import java.io.File;\n@@ -150,7 +152,7 @@ public final class PolicyFile extends Policy\n \n   protected static final Logger logger = SystemLogger.SYSTEM;\n   // Added to cut redundant AccessController.doPrivileged calls\n-  private static GetPropertyAction prop = new GetPropertyAction(\"file.seperator\");\n+  private static GetPropertyAction prop = new GetPropertyAction(\"file.separator\");\n   private static final String fs = (String) AccessController.doPrivileged(prop);\n   \n   private static final String DEFAULT_POLICY =\n@@ -629,8 +631,8 @@ else if (in.sval.equalsIgnoreCase(\"permission\"))\n    */\n   private static String expand(final String s)\n   {\n-    final StringBuffer result = new StringBuffer();\n-    final StringBuffer prop = new StringBuffer();\n+    final CPStringBuilder result = new CPStringBuilder();\n+    final CPStringBuilder prop = new CPStringBuilder();\n     int state = 0;\n     for (int i = 0; i < s.length(); i++)\n       {"}, {"sha": "ac10be22e6b3bf4e1ae16114cb227fd0b797a6a7", "filename": "libjava/classpath/gnu/java/security/der/BitString.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fder%2FBitString.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fder%2FBitString.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fder%2FBitString.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.security.der;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.math.BigInteger;\n import java.util.Arrays;\n \n@@ -314,7 +316,7 @@ public boolean equals(Object o)\n \n   public String toString()\n   {\n-    StringBuffer sb = new StringBuffer();\n+    CPStringBuilder sb = new CPStringBuilder();\n     for (int i = 0, j = 7, k = 0; i < size(); i++)\n       {\n         sb.append((bytes[k] & 1 << j) != 0 ? \"1\" : \"0\");"}, {"sha": "cd552c8beddc00a47358f2ac9025af4067903415", "filename": "libjava/classpath/gnu/java/security/der/DERReader.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fder%2FDERReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fder%2FDERReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fder%2FDERReader.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.security.der;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.OID;\n \n import java.io.BufferedInputStream;\n@@ -286,7 +288,7 @@ private static String makeString(int tag, byte[] value)\n \n   private static String fromIso88591(byte[] bytes)\n   {\n-    StringBuffer str = new StringBuffer(bytes.length);\n+    CPStringBuilder str = new CPStringBuilder(bytes.length);\n     for (int i = 0; i < bytes.length; i++)\n       str.append((char) (bytes[i] & 0xFF));\n     return str.toString();\n@@ -296,7 +298,7 @@ private static String fromUtf16Be(byte[] bytes) throws IOException\n   {\n     if ((bytes.length & 0x01) != 0)\n       throw new IOException(\"UTF-16 bytes are odd in length\");\n-    StringBuffer str = new StringBuffer(bytes.length / 2);\n+    CPStringBuilder str = new CPStringBuilder(bytes.length / 2);\n     for (int i = 0; i < bytes.length; i += 2)\n       {\n         char c = (char) ((bytes[i] << 8) & 0xFF);\n@@ -308,7 +310,7 @@ private static String fromUtf16Be(byte[] bytes) throws IOException\n \n   private static String fromUtf8(byte[] bytes) throws IOException\n   {\n-    StringBuffer str = new StringBuffer((int)(bytes.length / 1.5));\n+    CPStringBuilder str = new CPStringBuilder((int)(bytes.length / 1.5));\n     for (int i = 0; i < bytes.length; )\n       {\n         char c = 0;"}, {"sha": "aebe1acb699bf45f3e5b4f3f6c92927921e1ad13", "filename": "libjava/classpath/gnu/java/security/hash/Whirlpool.java", "status": "modified", "additions": 11, "deletions": 9, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FWhirlpool.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FWhirlpool.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fhash%2FWhirlpool.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.security.hash;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.Configuration;\n import gnu.java.security.Registry;\n import gnu.java.security.util.Util;\n@@ -177,10 +179,10 @@\n         {\n           log.fine(\"Static data\");\n           log.fine(\"T0[]:\");\n-          StringBuilder sb;\n+          CPStringBuilder sb;\n           for (i = 0; i < 64; i++)\n             {\n-              sb = new StringBuilder();\n+              sb = new CPStringBuilder();\n               for (j = 0; j < 4; j++)\n                 sb.append(\"0x\").append(Util.toString(T0[i * 4 + j])).append(\", \");\n \n@@ -189,7 +191,7 @@\n           log.fine(\"T1[]:\");\n           for (i = 0; i < 64; i++)\n             {\n-              sb = new StringBuilder();\n+              sb = new CPStringBuilder();\n               for (j = 0; j < 4; j++)\n                 sb.append(\"0x\").append(Util.toString(T1[i * 4 + j])).append(\", \");\n \n@@ -198,7 +200,7 @@\n           log.fine(\"T2[]:\");\n           for (i = 0; i < 64; i++)\n             {\n-              sb = new StringBuilder();\n+              sb = new CPStringBuilder();\n               for (j = 0; j < 4; j++)\n                 sb.append(\"0x\").append(Util.toString(T2[i * 4 + j])).append(\", \");\n \n@@ -207,7 +209,7 @@\n           log.fine(\"T3[]:\");\n           for (i = 0; i < 64; i++)\n             {\n-              sb = new StringBuilder();\n+              sb = new CPStringBuilder();\n               for (j = 0; j < 4; j++)\n                 sb.append(\"0x\").append(Util.toString(T3[i * 4 + j])).append(\", \");\n \n@@ -216,7 +218,7 @@\n           log.fine(\"\\nT4[]:\");\n           for (i = 0; i < 64; i++)\n             {\n-              sb = new StringBuilder();\n+              sb = new CPStringBuilder();\n               for (j = 0; j < 4; j++)\n                 sb.append(\"0x\").append(Util.toString(T4[i * 4 + j])).append(\", \");\n \n@@ -225,7 +227,7 @@\n           log.fine(\"T5[]:\");\n           for (i = 0; i < 64; i++)\n             {\n-              sb = new StringBuilder();\n+              sb = new CPStringBuilder();\n               for (j = 0; j < 4; j++)\n                 sb.append(\"0x\").append(Util.toString(T5[i * 4 + j])).append(\", \");\n \n@@ -234,7 +236,7 @@\n           log.fine(\"T6[]:\");\n           for (i = 0; i < 64; i++)\n             {\n-              sb = new StringBuilder();\n+              sb = new CPStringBuilder();\n               for (j = 0; j < 4; j++)\n                 sb.append(\"0x\").append(Util.toString(T5[i * 4 + j])).append(\", \");\n \n@@ -243,7 +245,7 @@\n           log.fine(\"T7[]:\");\n           for (i = 0; i < 64; i++)\n             {\n-              sb = new StringBuilder();\n+              sb = new CPStringBuilder();\n               for (j = 0; j < 4; j++)\n                 sb.append(\"0x\").append(Util.toString(T5[i * 4 + j])).append(\", \");\n "}, {"sha": "8a1cb4ca50204eb18c925189ca2580fa6c1c7c6d", "filename": "libjava/classpath/gnu/java/security/jce/sig/DSSParameters.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSParameters.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSParameters.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fjce%2Fsig%2FDSSParameters.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.security.jce.sig;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.Registry;\n import gnu.java.security.der.DER;\n import gnu.java.security.der.DERReader;\n@@ -195,7 +197,7 @@ protected byte[] engineGetEncoded(String format) throws IOException\n \n   protected String engineToString()\n   {\n-    StringBuffer sb = new StringBuffer(\"p=\");\n+    CPStringBuilder sb = new CPStringBuilder(\"p=\");\n     if (p == null)\n       sb.append(\"???\");\n     else"}, {"sha": "d4cf36513ebf219f58ff6b96ffc7d759c78c8171", "filename": "libjava/classpath/gnu/java/security/key/dss/DSSKey.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSKey.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.security.key.dss;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.Registry;\n import gnu.java.security.action.GetPropertyAction;\n import gnu.java.security.util.FormatUtil;\n@@ -181,7 +183,7 @@ public String toString()\n     if (str == null)\n       {\n         String ls = (String) AccessController.doPrivileged(new GetPropertyAction(\"line.separator\"));\n-        StringBuilder sb = new StringBuilder(ls)\n+        CPStringBuilder sb = new CPStringBuilder(ls)\n             .append(\"defaultFormat=\").append(defaultFormat).append(\",\")\n             .append(ls);\n         if (hasInheritedParameters())"}, {"sha": "633fcf7ce08dc4ad564ccde9a8cb29a14e9a2afd", "filename": "libjava/classpath/gnu/java/security/key/dss/DSSPrivateKey.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSPrivateKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSPrivateKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSPrivateKey.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.security.key.dss;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.Configuration;\n import gnu.java.security.Registry;\n import gnu.java.security.action.GetPropertyAction;\n@@ -191,7 +193,7 @@ public String toString()\n       {\n         String ls = (String) AccessController.doPrivileged\n             (new GetPropertyAction(\"line.separator\"));\n-        str = new StringBuilder(this.getClass().getName()).append(\"(\")\n+        str = new CPStringBuilder(this.getClass().getName()).append(\"(\")\n             .append(super.toString()).append(\",\").append(ls)\n             .append(\"x=0x\").append(Configuration.DEBUG ? x.toString(16)\n                                                        : \"**...*\").append(ls)"}, {"sha": "e5c534671763050b135862ab583f2d78fae79839", "filename": "libjava/classpath/gnu/java/security/key/dss/DSSPublicKey.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSPublicKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSPublicKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Fdss%2FDSSPublicKey.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.security.key.dss;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.Registry;\n import gnu.java.security.action.GetPropertyAction;\n import gnu.java.security.key.IKeyPairCodec;\n@@ -190,7 +192,7 @@ public String toString()\n       {\n         String ls = (String) AccessController.doPrivileged\n             (new GetPropertyAction(\"line.separator\"));\n-        str = new StringBuilder(this.getClass().getName()).append(\"(\")\n+        str = new CPStringBuilder(this.getClass().getName()).append(\"(\")\n             .append(super.toString()).append(\",\").append(ls)\n             .append(\"y=0x\").append(y.toString(16)).append(ls)\n             .append(\")\")"}, {"sha": "0419ac96ee41d790566a493f454e7945bc7a4ddd", "filename": "libjava/classpath/gnu/java/security/key/rsa/GnuRSAKey.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAKey.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.security.key.rsa;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.Registry;\n import gnu.java.security.action.GetPropertyAction;\n import gnu.java.security.util.FormatUtil;\n@@ -163,7 +165,7 @@ public String toString()\n       {\n         String ls = (String) AccessController.doPrivileged\n             (new GetPropertyAction(\"line.separator\"));\n-        str = new StringBuilder(ls)\n+        str = new CPStringBuilder(ls)\n             .append(\"defaultFormat=\").append(defaultFormat).append(\",\").append(ls)\n             .append(\"n=0x\").append(n.toString(16)).append(\",\").append(ls)\n             .append(\"e=0x\").append(e.toString(16))"}, {"sha": "e554f2f3f02e59a7d5824f29995806de4cb0b4fb", "filename": "libjava/classpath/gnu/java/security/key/rsa/GnuRSAPrivateKey.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAPrivateKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAPrivateKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAPrivateKey.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.security.key.rsa;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.Configuration;\n import gnu.java.security.action.GetPropertyAction;\n import gnu.java.security.Registry;\n@@ -289,7 +291,7 @@ public String toString()\n       {\n         String ls = (String) AccessController.doPrivileged\n             (new GetPropertyAction(\"line.separator\"));\n-        str = new StringBuilder(this.getClass().getName()).append(\"(\")\n+        str = new CPStringBuilder(this.getClass().getName()).append(\"(\")\n             .append(super.toString()).append(\",\").append(ls)\n             .append(\"d=0x\").append(Configuration.DEBUG ? d.toString(16)\n                                                        : \"**...*\").append(ls)"}, {"sha": "3217130c25893b1b8d6ba8724ca8595951dc860a", "filename": "libjava/classpath/gnu/java/security/key/rsa/GnuRSAPublicKey.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAPublicKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAPublicKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fkey%2Frsa%2FGnuRSAPublicKey.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.security.key.rsa;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.Registry;\n import gnu.java.security.action.GetPropertyAction;\n import gnu.java.security.key.IKeyPairCodec;\n@@ -178,7 +180,7 @@ public String toString()\n       {\n         String ls = (String) AccessController.doPrivileged\n             (new GetPropertyAction(\"line.separator\"));\n-        str = new StringBuilder(this.getClass().getName()).append(\"(\")\n+        str = new CPStringBuilder(this.getClass().getName()).append(\"(\")\n             .append(super.toString()).append(\",\").append(ls)\n             .append(\")\")\n             .toString();"}, {"sha": "644033156721cb2eafecc1324f689cedc8f8a9a8", "filename": "libjava/classpath/gnu/java/security/provider/X509CertificateFactory.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FX509CertificateFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FX509CertificateFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fprovider%2FX509CertificateFactory.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -39,6 +39,7 @@\n package gnu.java.security.provider;\n \n import gnu.java.io.Base64InputStream;\n+import gnu.java.lang.CPStringBuilder;\n import gnu.java.security.x509.X509CRL;\n import gnu.java.security.x509.X509CertPath;\n import gnu.java.security.x509.X509Certificate;\n@@ -193,7 +194,7 @@ private X509Certificate generateCert(InputStream inStream)\n     if (i != 0x30)\n       {\n         inStream.reset();\n-        StringBuffer line = new StringBuffer(80);\n+        CPStringBuilder line = new CPStringBuilder(80);\n         do\n           {\n             line.setLength(0);\n@@ -252,7 +253,7 @@ private X509CRL generateCRL(InputStream inStream) throws IOException,\n     if (i != 0x30)\n       {\n         inStream.reset();\n-        StringBuffer line = new StringBuffer(80);\n+        CPStringBuilder line = new CPStringBuilder(80);\n         do\n           {\n             line.setLength(0);"}, {"sha": "514492043972ab98f8b89339eff6bc0ec34baa4d", "filename": "libjava/classpath/gnu/java/security/util/ByteArray.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FByteArray.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FByteArray.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FByteArray.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.security.util;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.PrintWriter;\n import java.io.StringWriter;\n \n@@ -86,7 +88,7 @@ public String toString ()\n \n   public static String toHexString (byte[] buf, int off, int len, char sep)\n   {\n-    StringBuffer str = new StringBuffer();\n+    CPStringBuilder str = new CPStringBuilder();\n     for (int i = 0; i < len; i++)\n       {\n \tstr.append (Character.forDigit (buf[i+off] >>> 4 & 0x0F, 16));\n@@ -100,7 +102,7 @@ public static String toHexString (byte[] buf, int off, int len, char sep)\n   public static String formatInt (int value, int radix, int len)\n   {\n     String s = Integer.toString (value, radix);\n-    StringBuffer buf = new StringBuffer ();\n+    CPStringBuilder buf = new CPStringBuilder ();\n     for (int j = 0; j < len - s.length(); j++)\n       buf.append (\"0\");\n     buf.append (s);"}, {"sha": "50d4466d539deb45e7c0e959f2d10ecc966b3e50", "filename": "libjava/classpath/gnu/java/security/util/Util.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FUtil.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FUtil.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Futil%2FUtil.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.security.util;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.math.BigInteger;\n \n /**\n@@ -296,7 +298,7 @@ public static String toUnicodeString(byte[] ba)\n    */\n   public static final String toUnicodeString(byte[] ba, int offset, int length)\n   {\n-    StringBuffer sb = new StringBuffer();\n+    CPStringBuilder sb = new CPStringBuilder();\n     int i = 0;\n     int j = 0;\n     int k;\n@@ -328,7 +330,7 @@ public static final String toUnicodeString(byte[] ba, int offset, int length)\n    */\n   public static String toUnicodeString(int[] ia)\n   {\n-    StringBuffer sb = new StringBuffer();\n+    CPStringBuilder sb = new CPStringBuilder();\n     int i = 0;\n     int j = 0;\n     int k;\n@@ -385,7 +387,7 @@ public static String dumpString(byte[] data, int offset, int length, String m)\n   {\n     if (data == null)\n       return m + \"null\\n\";\n-    StringBuffer sb = new StringBuffer(length * 3);\n+    CPStringBuilder sb = new CPStringBuilder(length * 3);\n     if (length > 32)\n       sb.append(m).append(\"Hexadecimal dump of \")\n           .append(length).append(\" bytes...\\n\");\n@@ -466,7 +468,7 @@ public static final String toBase64(byte[] buffer)\n         b2 = buffer[1];\n         break;\n       }\n-    StringBuffer sb = new StringBuffer();\n+    CPStringBuilder sb = new CPStringBuilder();\n     int c;\n     boolean notleading = false;\n     do"}, {"sha": "60d35574d014ef5b55746254c91c2b23b2c710e1", "filename": "libjava/classpath/gnu/java/security/x509/PolicyNodeImpl.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2FPolicyNodeImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2FPolicyNodeImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2FPolicyNodeImpl.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.security.x509;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.security.cert.PolicyNode;\n import java.security.cert.PolicyQualifierInfo;\n \n@@ -186,7 +188,7 @@ public void setReadOnly()\n \n   public String toString()\n   {\n-    StringBuffer buf = new StringBuffer();\n+    CPStringBuilder buf = new CPStringBuilder();\n     for (int i = 0; i < depth; i++)\n       buf.append(\"  \");\n     buf.append(\"(\");"}, {"sha": "7b6c89f6aac71cae1e721d791d95eb6f97a78131", "filename": "libjava/classpath/gnu/java/security/x509/Util.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2FUtil.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2FUtil.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2FUtil.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.security.x509;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n /**\n  * A collection of useful class methods.\n  *\n@@ -65,7 +67,7 @@\n    */\n   public static String toHexString(byte[] buf, int off, int len)\n   {\n-    StringBuffer str = new StringBuffer();\n+    CPStringBuilder str = new CPStringBuilder();\n     for (int i = 0; i < len; i++)\n       {\n         str.append(HEX.charAt(buf[i+off] >>> 4 & 0x0F));\n@@ -94,7 +96,7 @@ public static String toHexString(byte[] buf)\n    */\n   public static String toHexString(byte[] buf, int off, int len, char sep)\n   {\n-    StringBuffer str = new StringBuffer();\n+    CPStringBuilder str = new CPStringBuilder();\n     for (int i = 0; i < len; i++)\n       {\n         str.append(HEX.charAt(buf[i+off] >>> 4 & 0x0F));\n@@ -130,7 +132,7 @@ public static String toHexString(byte[] buf, char sep)\n   public static String hexDump(byte[] buf, int off, int len, String prefix)\n   {\n     String nl = System.getProperty(\"line.separator\");\n-    StringBuffer str = new StringBuffer();\n+    CPStringBuilder str = new CPStringBuilder();\n     int i = 0;\n     while (i < len)\n       {\n@@ -174,7 +176,7 @@ public static String hexDump(byte[] buf, String prefix)\n   public static String formatInt(int i, int radix, int len)\n   {\n     String s = Integer.toString(i, radix);\n-    StringBuffer buf = new StringBuffer();\n+    CPStringBuilder buf = new CPStringBuilder();\n     for (int j = 0; j < len - s.length(); j++)\n       buf.append(\"0\");\n     buf.append(s);"}, {"sha": "e2e05c57e4bdf3f9459abffae28d3b21082bdac9", "filename": "libjava/classpath/gnu/java/security/x509/X500DistinguishedName.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2FX500DistinguishedName.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2FX500DistinguishedName.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Fsecurity%2Fx509%2FX500DistinguishedName.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.java.security.x509;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.OID;\n import gnu.java.security.der.DER;\n import gnu.java.security.der.DERReader;\n@@ -285,7 +287,7 @@ public String toString()\n   {\n     if (fixed && stringRep != null)\n       return stringRep;\n-    StringBuffer str = new StringBuffer();\n+    CPStringBuilder str = new CPStringBuilder();\n     for (Iterator it = components.iterator(); it.hasNext(); )\n       {\n         Map m = (Map) it.next();\n@@ -377,7 +379,7 @@ private void parseString(String str) throws IOException\n \n   private String readAttributeType(Reader in) throws IOException\n   {\n-    StringBuffer buf = new StringBuffer();\n+    CPStringBuilder buf = new CPStringBuilder();\n     int ch;\n     while ((ch = in.read()) != '=')\n       {\n@@ -399,7 +401,7 @@ private String readAttributeType(Reader in) throws IOException\n \n   private String readAttributeValue(Reader in) throws IOException\n   {\n-    StringBuffer buf = new StringBuffer();\n+    CPStringBuilder buf = new CPStringBuilder();\n     int ch = in.read();\n     if (ch == '#')\n       {\n@@ -537,7 +539,7 @@ private void parseDer(DERReader der) throws IOException\n \n   private static String compressWS(String str)\n   {\n-    StringBuffer buf = new StringBuffer();\n+    CPStringBuilder buf = new CPStringBuilder();\n     char lastChar = 0;\n     for (int i = 0; i < str.length(); i++)\n       {"}, {"sha": "c2aae96092a4ed0fef6b289585bbabc64ac8e108", "filename": "libjava/classpath/gnu/java/text/AttributedFormatBuffer.java", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FAttributedFormatBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FAttributedFormatBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FAttributedFormatBuffer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -36,21 +36,25 @@\n exception statement from your version. */\n package gnu.java.text;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.text.AttributedCharacterIterator;\n import java.util.ArrayList;\n import java.util.HashMap;\n \n /**\n  * This class is an implementation of a FormatBuffer with attributes.\n- * \n+ * Note that this class is not thread-safe; external synchronisation\n+ * should be used if an instance is to be accessed from multiple threads.\n+ *\n  * @author Guilhem Lavaux <guilhem@kaffe.org>\n  * @date April 10, 2004\n  */\n public class AttributedFormatBuffer implements FormatBuffer\n {\n-  private StringBuffer buffer;\n-  private ArrayList ranges;\n-  private ArrayList attributes;\n+  private final CPStringBuilder buffer;\n+  private final ArrayList ranges;\n+  private final ArrayList attributes;\n   private int[] a_ranges;\n   private HashMap[] a_attributes; \n   private int startingRange;\n@@ -60,9 +64,9 @@ public class AttributedFormatBuffer implements FormatBuffer\n    * This constructor accepts a StringBuffer. If the buffer contains\n    * already some characters they will not be attributed. \n    */\n-  public AttributedFormatBuffer(StringBuffer buffer)\n+  public AttributedFormatBuffer(CPStringBuilder buffer)\n   {\n-    this.buffer = buffer;\n+    this.buffer = new CPStringBuilder(buffer);\n     this.ranges = new ArrayList();\n     this.attributes = new ArrayList();\n     this.defaultAttr = null;\n@@ -77,7 +81,7 @@ public AttributedFormatBuffer(StringBuffer buffer)\n \n   public AttributedFormatBuffer(int prebuffer)\n   {\n-    this(new StringBuffer(prebuffer));\n+    this(new CPStringBuilder(prebuffer));\n   }\n \n   public AttributedFormatBuffer()\n@@ -214,12 +218,12 @@ public void sync()\n   }\n \n   /**\n-   * This method returns the internal StringBuffer describing\n+   * This method returns the internal CPStringBuilder describing\n    * the attributed string.\n    *\n-   * @return An instance of StringBuffer which contains the string.\n+   * @return An instance of CPStringBuilder which contains the string.\n    */\n-  public StringBuffer getBuffer()\n+  public CPStringBuilder getBuffer()\n   {\n     return buffer;\n   }"}, {"sha": "fc8d08ee6f8cd43f10318d576f0b84e0b35433cb", "filename": "libjava/classpath/gnu/java/text/StringFormatBuffer.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FStringFormatBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FStringFormatBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Ftext%2FStringFormatBuffer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -47,7 +47,7 @@\n  */\n public class StringFormatBuffer implements FormatBuffer\n {\n-  private StringBuffer buffer;\n+  private final StringBuffer buffer;\n   private AttributedCharacterIterator.Attribute defaultAttr;\n \n   public StringFormatBuffer(int prebuffer)"}, {"sha": "4401a151a3612257d25641dbbabf943ccf72712e", "filename": "libjava/classpath/gnu/java/util/Base64.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2FBase64.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2FBase64.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2FBase64.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -83,6 +83,8 @@ Portions Copyright (c) 1995 by International Business Machines, Inc.\n \n package gnu.java.util;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.ByteArrayOutputStream;\n import java.io.IOException;\n \n@@ -143,7 +145,7 @@ public static String encode(byte[] buf, int offset, int length, int tw)\n     int srcLength = buf.length - offset;\n     byte[] input = new byte[3];\n     int[] output = new int[4];\n-    StringBuffer out = new StringBuffer();\n+    CPStringBuilder out = new CPStringBuilder();\n     int i = offset;\n     int chars = 0;\n "}, {"sha": "ca2c56d733579e9276963a3d56eee3f15d4aba31", "filename": "libjava/classpath/gnu/java/util/EmptyEnumeration.java", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2FEmptyEnumeration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2FEmptyEnumeration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2FEmptyEnumeration.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -51,25 +51,19 @@\n  *\n  * @author Mark Wielaard (mark@klomp.org)\n  */\n-public final class EmptyEnumeration implements Enumeration, Serializable\n+public final class EmptyEnumeration<T> implements Enumeration<T>, Serializable\n {\n   /** The only instance of this class */\n-  private static final EmptyEnumeration instance = new EmptyEnumeration();\n+  private static final EmptyEnumeration<Object> instance = \n+    new EmptyEnumeration<Object>();\n \n   /**\n-   * Private constructor that creates a new empty Enumeration.\n-   */\n-  private EmptyEnumeration()\n-  {\n-  }\n-\n-  /**\n-   * Returns the only instance of this class.\n+   * Returns an instance of this class for Object.\n    * It can be shared by multiple objects and threads.\n    *\n    * @return the common empty enumeration\n    */\n-  public static EmptyEnumeration getInstance()\n+  public static EmptyEnumeration<Object> getInstance()\n   {\n     return instance;\n   }\n@@ -89,7 +83,7 @@ public boolean hasMoreElements()\n    *\n    * @throws NoSuchElementException this is empty\n    */\n-  public Object nextElement()\n+  public T nextElement()\n   {\n     throw new NoSuchElementException();\n   }"}, {"sha": "c26fe63c9b6849a39ef8c99fa9277f4e59b9ba16", "filename": "libjava/classpath/gnu/java/util/prefs/GConfBasedPreferences.java", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FGConfBasedPreferences.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FGConfBasedPreferences.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FGConfBasedPreferences.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -165,11 +165,7 @@ protected AbstractPreferences childSpi(String name)\n     \n     GConfBasedPreferences preferenceNode\n       = new GConfBasedPreferences(this, name, this.isUser);\n-    \n-    // register the node for to GConf so that it can listen\n-    // events outside the scope of the application\n-    backend.startWatchingNode(this.node);\n-    \n+        \n     return preferenceNode;\n   }\n "}, {"sha": "d3c095351476670c6c970187e9431699144d3506", "filename": "libjava/classpath/gnu/java/util/prefs/NodeWriter.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FNodeWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FNodeWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2FNodeWriter.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.java.util.prefs;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.BufferedWriter;\n import java.io.IOException;\n import java.io.OutputStream;\n@@ -273,7 +275,7 @@ private void writeMap(Preferences node, int indent)\n                                     throws BackingStoreException, IOException\n     {\n         // construct String used for indentation\n-        StringBuffer indentBuffer = new StringBuffer(2*indent);\n+        CPStringBuilder indentBuffer = new CPStringBuilder(2*indent);\n         for (int i=0; i < indent; i++)\n             indentBuffer.append(\"  \");\n         String indentString = indentBuffer.toString();"}, {"sha": "3c02919598956fa1c1317bc045f1dcafd518c7d5", "filename": "libjava/classpath/gnu/java/util/prefs/gconf/GConfNativePeer.java", "status": "modified", "additions": 25, "deletions": 74, "changes": 99, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2Fgconf%2FGConfNativePeer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2Fgconf%2FGConfNativePeer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fprefs%2Fgconf%2FGConfNativePeer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -48,20 +48,12 @@\n  */\n public final class GConfNativePeer\n {\n-  /**\n-   * Object to achieve locks for methods that need to be synchronized.\n-   */\n-  private static final Object[] semaphore = new Object[0];\n-\n   /**\n    * Creates a new instance of GConfNativePeer\n    */\n   public GConfNativePeer()\n   {\n-    synchronized (semaphore)\n-      {\n-        init_class();\n-      }\n+    init_class();\n   }\n \n   /**\n@@ -72,31 +64,7 @@ public GConfNativePeer()\n    */\n   public boolean nodeExist(String node)\n   {\n-    return gconf_client_dir_exists(node);\n-  }\n-\n-  /**\n-   * Add the node <code>node</code> to the list of nodes the GConf will watch.\n-   * An event is raised everytime this node is changed. You can add a node\n-   * multiple times.\n-   * \n-   * @param node the node to track.\n-   */\n-  public void startWatchingNode(String node)\n-  {\n-    gconf_client_add_dir(node);\n-  }\n-\n-  /**\n-   * Remove the node <code>node</code> to the list of nodes the GConf is\n-   * watching. Note that if a node has been added multiple times, you must\n-   * remove it the same number of times before the remove takes effect.\n-   * \n-   * @param node the node you don't want to track anymore.\n-   */\n-  public void stopWatchingNode(String node)\n-  {\n-    gconf_client_remove_dir(node);\n+    return gconf_dir_exists(node);\n   }\n \n   /**\n@@ -111,7 +79,7 @@ public void stopWatchingNode(String node)\n    */\n   public boolean setString(String key, String value)\n   {\n-    return gconf_client_set_string(key, value);\n+    return gconf_set_string(key, value);\n   }\n \n   /**\n@@ -124,7 +92,7 @@ public boolean setString(String key, String value)\n    */\n   public boolean unset(String key)\n   {\n-    return gconf_client_unset(key);\n+    return gconf_unset(key);\n   }\n \n   /**\n@@ -135,7 +103,7 @@ public boolean unset(String key)\n    */\n   public String getKey(String key)\n   {\n-    return gconf_client_get_string(key);\n+    return gconf_get_string(key);\n   }\n \n   /**\n@@ -149,7 +117,7 @@ public String getKey(String key)\n    */\n   public List<String> getKeys(String node) throws BackingStoreException\n   {\n-    return gconf_client_all_keys(node);\n+    return gconf_all_keys(node);\n   }\n \n   /**\n@@ -161,7 +129,7 @@ public List<String> getKeys(String node) throws BackingStoreException\n    */\n   public List<String> getChildrenNodes(String node) throws BackingStoreException\n   {\n-    return gconf_client_all_nodes(node);\n+    return gconf_all_nodes(node);\n   }\n \n   /**\n@@ -185,17 +153,14 @@ public static String unescapeString(String escaped)\n    */\n   public void suggestSync() throws BackingStoreException\n   {\n-    gconf_client_suggest_sync();\n+    gconf_suggest_sync();\n   }\n   \n   protected void finalize() throws Throwable\n   {\n     try\n       {\n-        synchronized (semaphore)\n-          {\n-            finalize_class();\n-          }\n+        finalize_class();\n       }\n     finally\n       {\n@@ -215,18 +180,18 @@ protected void finalize() throws Throwable\n    * Initialize the GConf native peer and enable the object cache.\n    * It is meant to be used by the static initializer.\n    */\n-  native static final private void init_id_cache();\n+  native synchronized static final private void init_id_cache();\n   \n   /**\n    * Initialize the GConf native peer. This is meant to be used by the\n    * class constructor.\n    */\n-  native static final private void init_class();\n+  native synchronized static final private void init_class();\n \n   /**\n    * Class finalizer.\n    */\n-  native static final private void finalize_class();\n+  native synchronized static final private void finalize_class();\n \n   /**\n    * Queries the GConf database to see if the given node exists, returning\n@@ -235,23 +200,8 @@ protected void finalize() throws Throwable\n    * @param node the node to query for existence.\n    * @return true if the node exist, false otherwise.\n    */\n-  native static final protected boolean gconf_client_dir_exists(String node);\n-\n-  /**\n-   * Adds the given node to the list of nodes that GConf watches for\n-   * changes.\n-   * \n-   * @param node the node to watch for changes.\n-   */\n-  native static final protected void gconf_client_add_dir(String node);\n-\n-  /**\n-   * Removes the given node from the list of nodes that GConf watches for\n-   * changes.\n-   * \n-   * @param node the node to remove from from the list of watched nodes.\n-   */\n-  native static final protected void gconf_client_remove_dir(String node);\n+  native synchronized\n+  static final protected boolean gconf_dir_exists(String node);\n \n   /**\n    * Sets the given key/value pair into the GConf database.\n@@ -261,8 +211,8 @@ protected void finalize() throws Throwable\n    * @param value the value to associate to the given key.\n    * @return true if the change has effect, false otherwise.\n    */\n-  native static final protected boolean gconf_client_set_string(String key,\n-                                                                String value);\n+  native synchronized\n+  static final protected boolean gconf_set_string(String key, String value);\n \n   /**\n    * Returns the key associated to the given key. Null is returned if the\n@@ -271,21 +221,22 @@ native static final protected boolean gconf_client_set_string(String key,\n    * @param key the key to return the value of.\n    * @return The value associated to the given key, or null.\n    */\n-  native static final protected String gconf_client_get_string(String key);\n+  native synchronized\n+  static final protected String gconf_get_string(String key);\n \n   /**\n    * Usets the given key, removing the key from the database.\n    * \n    * @param key the key to remove.\n    * @return true if the operation success, false otherwise.\n    */\n-  native static final protected boolean gconf_client_unset(String key);\n+  native synchronized static final protected boolean gconf_unset(String key);\n \n   /**\n    * Suggest to the GConf native peer a sync with the database.\n    *\n    */\n-  native static final protected void gconf_client_suggest_sync()\n+  native synchronized static final protected void gconf_suggest_sync()\n     throws BackingStoreException;\n   \n   /**\n@@ -295,7 +246,7 @@ native static final protected void gconf_client_suggest_sync()\n    * @return A list of nodes under the given source node.\n    */\n   native\n-  static final protected List<String> gconf_client_all_nodes(String node)\n+  static synchronized final protected List<String> gconf_all_nodes(String node)\n     throws BackingStoreException;\n   \n   /**\n@@ -304,8 +255,8 @@ static final protected List<String> gconf_client_all_nodes(String node)\n    * @param node the source node.\n    * @return A list of all keys stored in the given node.\n    */\n-  native\n-  static final protected List<String> gconf_client_all_keys(String node)\n+  native synchronized \n+  static final protected List<String> gconf_all_keys(String node)\n     throws BackingStoreException;\n \n   /**\n@@ -314,7 +265,7 @@ static final protected List<String> gconf_client_all_keys(String node)\n    * @param plain the String to escape.\n    * @return An escaped String for use with GConf.\n    */\n-  native\n+  native synchronized \n   static final protected String gconf_escape_key(String plain);\n   \n   /**\n@@ -324,7 +275,7 @@ static final protected List<String> gconf_client_all_keys(String node)\n    * @param escaped key as returned by gconf_escape_key \n    * @return An unescaped key.\n    */\n-  native\n+  native synchronized \n   static final protected String gconf_unescape_key(String escaped);\n   \n   static"}, {"sha": "68472615e6ad6a3741a3958dff6535d07b78c638", "filename": "libjava/classpath/gnu/java/util/regex/BacktrackStack.java", "status": "modified", "additions": 70, "deletions": 58, "changes": 128, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FBacktrackStack.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FBacktrackStack.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FBacktrackStack.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -44,69 +44,81 @@\n  *\n  * @author Ito Kazumitsu</A>\n  */\n-final class BacktrackStack {\n+final class BacktrackStack\n+{\n \n     /** A set of data to be used for backtracking. */\n-    static class Backtrack {\n-        /** REToken to which to go back */\n-        REToken token;\n+  static class Backtrack\n+  {\n+\t/** REToken to which to go back */\n+    REToken token;\n \t/** CharIndexed on which matches are being searched for. */\n-\tCharIndexed input;\n+    CharIndexed input;\n \t/** REMatch to be used by the REToken token. */\n-\tREMatch match;\n+    REMatch match;\n \t/** Some parameter used by the token's backtrack method. */\n-\tObject param;\n-        Backtrack(REToken token, CharIndexed input, REMatch match, Object param) {\n-\t    this.token = token;\n-\t    this.input = input;\n-\t    //  REMatch may change before backtracking is needed. So we\n-\t    //  keep a clone of it.\n-\t    this.match = (REMatch) match.clone();\n-\t    this.param = param;\n-\t}\n-    }\n-\n-    Backtrack[] stack;\n-    private int size;\n-    private int capacity;\n-    private static final int INITIAL_CAPACITY = 32;\n-    private static final int CAPACITY_INCREMENT = 16;\n-\n-    BacktrackStack() {\n-        stack = new Backtrack[INITIAL_CAPACITY];\n-\tsize = 0;\n-\tcapacity = INITIAL_CAPACITY;\n-    }\n-\n-    boolean empty() {\n-\treturn size == 0;\n-    }\n-\n-    Backtrack peek() {\n-\treturn stack[size - 1];\n-    }\n-\n-    Backtrack pop() {\n-\tBacktrack bt = stack[--size];\n-\tstack[size] = null;\n-\treturn bt;\n-    }\n-\n-    void clear() {\n-\tfor (int i = 0; i < size; i++) {\n-\t    stack[i] = null;\n-\t}\n-\tsize = 0;\n-    }\n-\n-    void push(Backtrack bt) {\n-        if (size >= capacity) {\n-\t    capacity +=  CAPACITY_INCREMENT;\n-\t    Backtrack[] newStack = new Backtrack[capacity];\n-\t    System.arraycopy(stack, 0, newStack, 0, size);\n-\t    stack = newStack;\n-\t}\n-\tstack[size++] = bt;\n+    Object param;\n+      Backtrack (REToken token, CharIndexed input, REMatch match,\n+\t\t Object param)\n+    {\n+      this.token = token;\n+      this.input = input;\n+      //  REMatch may change before backtracking is needed. So we\n+      //  keep a clone of it.\n+      this.match = (REMatch) match.clone ();\n+      this.param = param;\n     }\n+  }\n+\n+  Backtrack[] stack;\n+  private int size;\n+  private int capacity;\n+  private static final int INITIAL_CAPACITY = 32;\n+  private static final int CAPACITY_INCREMENT = 16;\n+\n+  BacktrackStack ()\n+  {\n+    stack = new Backtrack[INITIAL_CAPACITY];\n+    size = 0;\n+    capacity = INITIAL_CAPACITY;\n+  }\n+\n+  boolean empty ()\n+  {\n+    return size == 0;\n+  }\n+\n+  Backtrack peek ()\n+  {\n+    return stack[size - 1];\n+  }\n+\n+  Backtrack pop ()\n+  {\n+    Backtrack bt = stack[--size];\n+    stack[size] = null;\n+    return bt;\n+  }\n+\n+  void clear ()\n+  {\n+    for (int i = 0; i < size; i++)\n+      {\n+\tstack[i] = null;\n+      }\n+    size = 0;\n+  }\n+\n+  void push (Backtrack bt)\n+  {\n+    if (size >= capacity)\n+      {\n+\tcapacity += CAPACITY_INCREMENT;\n+\tBacktrack[]newStack = new Backtrack[capacity];\n+\tSystem.arraycopy (stack, 0, newStack, 0, size);\n+\tstack = newStack;\n+      }\n+    stack[size++] = bt;\n+  }\n \n }"}, {"sha": "070547d7feb34f84b23fa599ad20f3e5a6a2c327", "filename": "libjava/classpath/gnu/java/util/regex/CharIndexed.java", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FCharIndexed.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FCharIndexed.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FCharIndexed.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -48,13 +48,14 @@\n  *\n  * @author <A HREF=\"mailto:wes@cacas.org\">Wes Biggs</A>\n  */\n-public interface CharIndexed {\n+public interface CharIndexed\n+{\n     /**\n      * Defines a constant (0xFFFF was somewhat arbitrarily chosen)\n      * that can be returned by the charAt() function indicating that\n      * the specified index is out of range.\n      */\n-    char OUT_OF_BOUNDS = '\\uFFFF';\n+  char OUT_OF_BOUNDS = '\\uFFFF';\n \n     /**\n      * Returns the character at the given offset past the current cursor\n@@ -68,66 +69,66 @@ public interface CharIndexed {\n      * @return the character at the specified index, or the OUT_OF_BOUNDS\n      *   character defined by this interface.\n      */\n-    char charAt(int index);\n+  char charAt (int index);\n \n     /**\n      * Shifts the input buffer by a given number of positions.  Returns\n      * true if the new cursor position is valid.\n      */\n-    boolean move(int index);\n+  boolean move (int index);\n \n     /**\n      * Shifts the input buffer by a given number of positions.  Returns\n      * true if the new cursor position is valid or cursor position is at\n      * the end of input.\n      */\n-    boolean move1(int index); // I cannot think of a better name for this.\n+  boolean move1 (int index);\t// I cannot think of a better name for this.\n \n     /**\n      * Returns true if the most recent move() operation placed the cursor\n      * position at a valid position in the input.\n      */\n-    boolean isValid();\n+  boolean isValid ();\n \n     /**\n      * Returns another CharIndexed containing length characters to the left\n      * of the given index. The given length is an expected maximum and\n      * the returned CharIndexed may not necessarily contain so many characters.\n      */\n-    CharIndexed lookBehind(int index, int length);\n+  CharIndexed lookBehind (int index, int length);\n \n     /**\n      * Returns the effective length of this CharIndexed\n      */\n-    int length();\n+  int length ();\n \n     /**\n      * Sets the REMatch last found on this input.\n      */\n-    void setLastMatch(REMatch match);\n+  void setLastMatch (REMatch match);\n \n     /**\n      * Returns the REMatch last found on this input.\n      */\n-    REMatch getLastMatch();\n+  REMatch getLastMatch ();\n \n     /**\n      * Sets the information used for hitEnd().\n      */\n-    void setHitEnd(REMatch match);\n+  void setHitEnd (REMatch match);\n \n     /**\n      * Returns whether the matcher has hit the end of input.\n      */\n-    boolean hitEnd();\n+  boolean hitEnd ();\n \n     /**\n      * Returns the anchor.\n      */\n-    int getAnchor();\n+  int getAnchor ();\n \n     /**\n      * Sets the anchor.\n      */\n-    void setAnchor(int anchor);\n+  void setAnchor (int anchor);\n }"}, {"sha": "565773837e8c8ef1eb4e23e82accc8b020e3125d", "filename": "libjava/classpath/gnu/java/util/regex/CharIndexedCharArray.java", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FCharIndexedCharArray.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FCharIndexedCharArray.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FCharIndexedCharArray.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,9 +38,11 @@\n package gnu.java.util.regex;\n import java.nio.CharBuffer;\n \n-class CharIndexedCharArray extends CharIndexedCharSequence {\n-    \n-    CharIndexedCharArray(char[] str, int index) {\n-\tsuper(CharBuffer.wrap(str), index);\n-    }\n+class CharIndexedCharArray extends CharIndexedCharSequence\n+{\n+\n+  CharIndexedCharArray (char[]str, int index)\n+  {\n+    super (CharBuffer.wrap (str), index);\n+  }\n }"}, {"sha": "bc3cbbd1d724665e1d6a5fa1cf7e0157a39d0ac5", "filename": "libjava/classpath/gnu/java/util/regex/CharIndexedCharSequence.java", "status": "modified", "additions": 77, "deletions": 53, "changes": 130, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FCharIndexedCharSequence.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FCharIndexedCharSequence.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FCharIndexedCharSequence.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,58 +38,82 @@\n package gnu.java.util.regex;\n import java.io.Serializable;\n \n-class CharIndexedCharSequence implements CharIndexed, Serializable {\n-    private CharSequence s;\n-    private int anchor;\n-    private int len;\n-    \n-    CharIndexedCharSequence(CharSequence s, int index) {\n-\tthis.s = s;\n-\tlen = s.length();\n-\tanchor = index;\n-    }\n-\n-    public char charAt(int index) {\n-\tint pos = anchor + index;\n-\treturn ((pos < len) && (pos >= 0)) ? s.charAt(pos) : OUT_OF_BOUNDS;\n-    }\n-    \n-    public boolean isValid() {\n-\treturn (anchor < len);\n-    }\n-    \n-    public boolean move(int index) {\n-\treturn ((anchor += index) < len);\n-    }\n-\n-    public boolean move1(int index) {\n-\treturn ((anchor += index) <= len);\n-    }\n-\n-    public CharIndexed lookBehind(int index, int length) {\n-\tif (length > (anchor + index)) length = anchor + index;\n-\treturn new CharIndexedCharSequence(s, anchor + index - length);\n-    }\n-\n-    public int length() {\n-\treturn len - anchor;\n-    }\n-\n-    private REMatch lastMatch;\n-    public void setLastMatch(REMatch match) {\n-\tlastMatch = (REMatch)match.clone();\n-\tlastMatch.anchor = anchor;\n-    }\n-    public REMatch getLastMatch() { return lastMatch; }\n-\n-    private int rightmostTriedPosition = 0;\n-    public void setHitEnd(REMatch match) {\n-        int pos = anchor + match.index;\n-        if (pos > rightmostTriedPosition) rightmostTriedPosition = pos;\n-    }\n-    public boolean hitEnd() { return rightmostTriedPosition >= len; }\n-\n-    public int getAnchor() { return anchor; }\n-    public void setAnchor(int anchor) { this.anchor = anchor; }\n+class CharIndexedCharSequence implements CharIndexed, Serializable\n+{\n+  private CharSequence s;\n+  private int anchor;\n+  private int len;\n+\n+    CharIndexedCharSequence (CharSequence s, int index)\n+  {\n+    this.s = s;\n+    len = s.length ();\n+    anchor = index;\n+  }\n+\n+  public char charAt (int index)\n+  {\n+    int pos = anchor + index;\n+    return ((pos < len) && (pos >= 0)) ? s.charAt (pos) : OUT_OF_BOUNDS;\n+  }\n+\n+  public boolean isValid ()\n+  {\n+    return (anchor < len);\n+  }\n+\n+  public boolean move (int index)\n+  {\n+    return ((anchor += index) < len);\n+  }\n+\n+  public boolean move1 (int index)\n+  {\n+    return ((anchor += index) <= len);\n+  }\n+\n+  public CharIndexed lookBehind (int index, int length)\n+  {\n+    if (length > (anchor + index))\n+      length = anchor + index;\n+    return new CharIndexedCharSequence (s, anchor + index - length);\n+  }\n+\n+  public int length ()\n+  {\n+    return len - anchor;\n+  }\n+\n+  private REMatch lastMatch;\n+  public void setLastMatch (REMatch match)\n+  {\n+    lastMatch = (REMatch) match.clone ();\n+    lastMatch.anchor = anchor;\n+  }\n+  public REMatch getLastMatch ()\n+  {\n+    return lastMatch;\n+  }\n+\n+  private int rightmostTriedPosition = 0;\n+  public void setHitEnd (REMatch match)\n+  {\n+    int pos = anchor + match.index;\n+    if (pos > rightmostTriedPosition)\n+      rightmostTriedPosition = pos;\n+  }\n+  public boolean hitEnd ()\n+  {\n+    return rightmostTriedPosition >= len;\n+  }\n+\n+  public int getAnchor ()\n+  {\n+    return anchor;\n+  }\n+  public void setAnchor (int anchor)\n+  {\n+    this.anchor = anchor;\n+  }\n \n }"}, {"sha": "e42710b5de1447ddfb3ab85b53ceeda8cf95bf5b", "filename": "libjava/classpath/gnu/java/util/regex/CharIndexedInputStream.java", "status": "modified", "additions": 202, "deletions": 144, "changes": 346, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FCharIndexedInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FCharIndexedInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FCharIndexedInputStream.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -42,154 +42,212 @@\n \n // TODO: move(x) shouldn't rely on calling next() x times\n \n-class CharIndexedInputStream implements CharIndexed {\n-    private static final int BUFFER_INCREMENT = 1024;\n-    private static final int UNKNOWN = Integer.MAX_VALUE; // value for end\n-    \n-    private BufferedInputStream br;\n-\n-    // so that we don't try to reset() right away\n-    private int index = -1;\n-\n-    private int bufsize = BUFFER_INCREMENT;\n-\n-    private int end = UNKNOWN;\n-\n-    private char cached = OUT_OF_BOUNDS;\n-\n-    // Big enough for a \\r\\n pair\n-    // lookBehind[0] = most recent\n-    // lookBehind[1] = second most recent\n-    private char[] lookBehind = new char[] { OUT_OF_BOUNDS, OUT_OF_BOUNDS }; \n-    \n-    CharIndexedInputStream(InputStream str, int index) {\n-\tif (str instanceof BufferedInputStream) br = (BufferedInputStream) str;\n-\telse br = new BufferedInputStream(str,BUFFER_INCREMENT);\n-\tnext();\n-\tif (index > 0) move(index);\n-    }\n-    \n-    private boolean next() {\n-\tif (end == 1) return false;\n-\tend--; // closer to end\n-\n-\ttry {\n-\t    if (index != -1) {\n-\t\tbr.reset();\n-\t    }\n-\t    int i = br.read();\n-\t    br.mark(bufsize);\n-\t    if (i == -1) {\n-\t\tend = 1;\n-\t\tcached = OUT_OF_BOUNDS;\n-\t\treturn false;\n-\t    }\n-\t    cached = (char) i;\n-\t    index = 1;\n-\t} catch (IOException e) { \n-\t    e.printStackTrace();\n-\t    cached = OUT_OF_BOUNDS;\n-\t    return false; \n+class CharIndexedInputStream implements CharIndexed\n+{\n+  private static final int BUFFER_INCREMENT = 1024;\n+  private static final int UNKNOWN = Integer.MAX_VALUE;\t// value for end\n+\n+  private BufferedInputStream br;\n+\n+  // so that we don't try to reset() right away\n+  private int index = -1;\n+\n+  private int bufsize = BUFFER_INCREMENT;\n+\n+  private int end = UNKNOWN;\n+\n+  private char cached = OUT_OF_BOUNDS;\n+\n+  // Big enough for a \\r\\n pair\n+  // lookBehind[0] = most recent\n+  // lookBehind[1] = second most recent\n+  private char[] lookBehind = new char[]{ OUT_OF_BOUNDS, OUT_OF_BOUNDS };\n+\n+    CharIndexedInputStream (InputStream str, int index)\n+  {\n+    if (str instanceof BufferedInputStream)\n+      br = (BufferedInputStream) str;\n+    else\n+      br = new BufferedInputStream (str, BUFFER_INCREMENT);\n+    next ();\n+    if (index > 0)\n+      move (index);\n+  }\n+\n+  private boolean next ()\n+  {\n+    if (end == 1)\n+      return false;\n+    end--;\t\t\t// closer to end\n+\n+    try\n+    {\n+      if (index != -1)\n+\t{\n+\t  br.reset ();\n \t}\n-\treturn true;\n-    }\n-    \n-    public char charAt(int index) {\n-\tif (index == 0) {\n-\t    return cached;\n-\t} else if (index >= end) {\n-\t    return OUT_OF_BOUNDS;\n-\t} else if (index == -1) {\n-\t    return lookBehind[0];\n-\t} else if (index == -2) {\n-\t    return lookBehind[1];\n-\t} else if (index < -2) {\n-\t    return OUT_OF_BOUNDS;\n-\t} else if (index >= bufsize) {\n-\t    // Allocate more space in the buffer.\n-\t    try {\n-\t\twhile (bufsize <= index) bufsize += BUFFER_INCREMENT;\n-\t\tbr.reset();\n-\t\tbr.mark(bufsize);\n-\t\tbr.skip(index-1);\n-\t    } catch (IOException e) { }\n-\t} else if (this.index != index) {\n-\t    try {\n-\t\tbr.reset();\n-\t\tbr.skip(index-1);\n-\t    } catch (IOException e) { }\n+      int i = br.read ();\n+      br.mark (bufsize);\n+      if (i == -1)\n+\t{\n+\t  end = 1;\n+\t  cached = OUT_OF_BOUNDS;\n+\t  return false;\n \t}\n-\tchar ch = OUT_OF_BOUNDS;\n-\t\n-\ttry {\n-\t    int i = br.read();\n-\t    this.index = index+1; // this.index is index of next pos relative to charAt(0)\n-\t    if (i == -1) {\n-\t\t// set flag that next should fail next time?\n-\t\tend = index;\n-\t\treturn ch;\n-\t    }\n-\t    ch = (char) i;\n-\t} catch (IOException ie) { }\n-\t\n-\treturn ch;\n-    }\n-    \n-    public boolean move(int index) {\n-\t// move read position [index] clicks from 'charAt(0)'\n-\tboolean retval = true;\n-\twhile (retval && (index-- > 0)) retval = next();\n-\treturn retval;\n-    }\n-    \n-    public boolean isValid() {\n-\treturn (cached != OUT_OF_BOUNDS);\n-    }\n-\n-    public CharIndexed lookBehind(int index, int length) {\n-\tthrow new UnsupportedOperationException(\n-\t    \"difficult to look behind for an input stream\");\n-    }\n-\n-    public int length() {\n-\tthrow new UnsupportedOperationException(\n-\t    \"difficult to tell the length for an input stream\");\n-    }\n-\n-    public void setLastMatch(REMatch match) {\n-\tthrow new UnsupportedOperationException(\n-\t    \"difficult to support setLastMatch for an input stream\");\n-    }\n-\n-    public REMatch getLastMatch() {\n-\tthrow new UnsupportedOperationException(\n-\t    \"difficult to support getLastMatch for an input stream\");\n-    }\n-\n-    public void setHitEnd(REMatch match) {\n-\tthrow new UnsupportedOperationException(\n-\t    \"difficult to support setHitEnd for an input stream\");\n-    }\n-\n-    public boolean hitEnd() {\n-\tthrow new UnsupportedOperationException(\n-\t    \"difficult to support hitEnd for an input stream\");\n+      cached = (char) i;\n+      index = 1;\n+    } catch (IOException e)\n+    {\n+      e.printStackTrace ();\n+      cached = OUT_OF_BOUNDS;\n+      return false;\n     }\n-\n-    public int getAnchor() {\n-\tthrow new UnsupportedOperationException(\n-\t    \"difficult to support getAnchor for an input stream\");\n-    }\n-\n-    public void setAnchor(int anchor) {\n-\tthrow new UnsupportedOperationException(\n-\t    \"difficult to support setAnchor for an input stream\");\n+    return true;\n+  }\n+\n+  public char charAt (int index)\n+  {\n+    if (index == 0)\n+      {\n+\treturn cached;\n+      }\n+    else if (index >= end)\n+      {\n+\treturn OUT_OF_BOUNDS;\n+      }\n+    else if (index == -1)\n+      {\n+\treturn lookBehind[0];\n+      }\n+    else if (index == -2)\n+      {\n+\treturn lookBehind[1];\n+      }\n+    else if (index < -2)\n+      {\n+\treturn OUT_OF_BOUNDS;\n+      }\n+    else if (index >= bufsize)\n+      {\n+\t// Allocate more space in the buffer.\n+\ttry\n+\t{\n+\t  while (bufsize <= index)\n+\t    bufsize += BUFFER_INCREMENT;\n+\t  br.reset ();\n+\t  br.mark (bufsize);\n+\t  br.skip (index - 1);\n+\t}\n+\tcatch (IOException e)\n+\t{\n+\t}\n+      }\n+    else if (this.index != index)\n+      {\n+\ttry\n+\t{\n+\t  br.reset ();\n+\t  br.skip (index - 1);\n+\t}\n+\tcatch (IOException e)\n+\t{\n+\t}\n+      }\n+    char ch = OUT_OF_BOUNDS;\n+\n+    try\n+    {\n+      int i = br.read ();\n+      this.index = index + 1;\t// this.index is index of next pos relative to charAt(0)\n+      if (i == -1)\n+\t{\n+\t  // set flag that next should fail next time?\n+\t  end = index;\n+\t  return ch;\n+\t}\n+      ch = (char) i;\n+    } catch (IOException ie)\n+    {\n     }\n \n-    public boolean move1(int index) {\n-\tthrow new UnsupportedOperationException(\n-\t    \"difficult to support move1 for an input stream\");\n-    }\n+    return ch;\n+  }\n+\n+  public boolean move (int index)\n+  {\n+    // move read position [index] clicks from 'charAt(0)'\n+    boolean retval = true;\n+    while (retval && (index-- > 0))\n+      retval = next ();\n+    return retval;\n+  }\n+\n+  public boolean isValid ()\n+  {\n+    return (cached != OUT_OF_BOUNDS);\n+  }\n+\n+  public CharIndexed lookBehind (int index, int length)\n+  {\n+    throw new\n+      UnsupportedOperationException\n+      (\"difficult to look behind for an input stream\");\n+  }\n+\n+  public int length ()\n+  {\n+    throw new\n+      UnsupportedOperationException\n+      (\"difficult to tell the length for an input stream\");\n+  }\n+\n+  public void setLastMatch (REMatch match)\n+  {\n+    throw new\n+      UnsupportedOperationException\n+      (\"difficult to support setLastMatch for an input stream\");\n+  }\n+\n+  public REMatch getLastMatch ()\n+  {\n+    throw new\n+      UnsupportedOperationException\n+      (\"difficult to support getLastMatch for an input stream\");\n+  }\n+\n+  public void setHitEnd (REMatch match)\n+  {\n+    throw new\n+      UnsupportedOperationException\n+      (\"difficult to support setHitEnd for an input stream\");\n+  }\n+\n+  public boolean hitEnd ()\n+  {\n+    throw new\n+      UnsupportedOperationException\n+      (\"difficult to support hitEnd for an input stream\");\n+  }\n+\n+  public int getAnchor ()\n+  {\n+    throw new\n+      UnsupportedOperationException\n+      (\"difficult to support getAnchor for an input stream\");\n+  }\n+\n+  public void setAnchor (int anchor)\n+  {\n+    throw new\n+      UnsupportedOperationException\n+      (\"difficult to support setAnchor for an input stream\");\n+  }\n+\n+  public boolean move1 (int index)\n+  {\n+    throw new\n+      UnsupportedOperationException\n+      (\"difficult to support move1 for an input stream\");\n+  }\n \n }\n-"}, {"sha": "7a56f487eba76f216aa151a29a6fe98f1599d50b", "filename": "libjava/classpath/gnu/java/util/regex/CharIndexedString.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FCharIndexedString.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FCharIndexedString.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FCharIndexedString.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,8 +37,10 @@\n \n package gnu.java.util.regex;\n \n-class CharIndexedString extends CharIndexedCharSequence {\n-    CharIndexedString(String str, int index) {\n-\tsuper(str, index);\n-    }\n+class CharIndexedString extends CharIndexedCharSequence\n+{\n+  CharIndexedString (String str, int index)\n+  {\n+    super (str, index);\n+  }\n }"}, {"sha": "d6484f89b7c6ba539d6296d645eb194e7e45abcb", "filename": "libjava/classpath/gnu/java/util/regex/CharIndexedStringBuffer.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FCharIndexedStringBuffer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FCharIndexedStringBuffer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FCharIndexedStringBuffer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,9 +37,11 @@\n \n package gnu.java.util.regex;\n \n-class CharIndexedStringBuffer extends CharIndexedCharSequence {\n+class CharIndexedStringBuffer extends CharIndexedCharSequence\n+{\n \n-    CharIndexedStringBuffer(StringBuffer str, int index) {\n-\tsuper(str, index);\n-    }\n+  CharIndexedStringBuffer (StringBuffer str, int index)\n+  {\n+    super (str, index);\n+  }\n }"}, {"sha": "d064f7a3579e006cdaa745e96fbdda82df4daa3e", "filename": "libjava/classpath/gnu/java/util/regex/RE.java", "status": "modified", "additions": 1844, "deletions": 1322, "changes": 3166, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRE.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRE.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRE.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "5681ceeea6abba261f1df53330cc8ca5da25b324", "filename": "libjava/classpath/gnu/java/util/regex/REException.java", "status": "modified", "additions": 38, "deletions": 28, "changes": 66, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREException.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.java.util.regex;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.text.MessageFormat;\n \n /**\n@@ -53,7 +55,8 @@\n  * @author <A HREF=\"mailto:wes@cacas.org\">Wes Biggs</A>\n  */\n \n-public class REException extends Exception {\n+public class REException extends Exception\n+{\n   private int type;\n   private int pos;\n \n@@ -64,91 +67,93 @@ public class REException extends Exception {\n    * Invalid use of repetition operators such  as  using\n    * `*' as the first character.\n    */\n-  public static final int REG_BADRPT  =  1;\n+  public static final int REG_BADRPT = 1;\n \n   /**\n    * Error flag.\n    * Invalid use of back reference operator.\n    */\n-  public static final int REG_BADBR   =  2;\n+  public static final int REG_BADBR = 2;\n \n   /**\n    * Error flag.\n    * Un-matched brace interval operators.\n    */\n-  public static final int REG_EBRACE  =  3;\n+  public static final int REG_EBRACE = 3;\n \n   /**\n    * Error flag.\n    * Un-matched bracket list operators.\n    */\n-  public static final int REG_EBRACK  =  4;\n+  public static final int REG_EBRACK = 4;\n \n   /**\n    * Error flag.\n    * Invalid  use  of the range operator, eg. the ending\n    * point of the range occurs  prior  to  the  starting\n    * point.\n    */\n-  public static final int REG_ERANGE  =  5;\n+  public static final int REG_ERANGE = 5;\n \n   /**\n    * Error flag.\n    * Unknown character class name. <B>Not implemented</B>.\n    */\n-  public static final int REG_ECTYPE  =  6;\n+  public static final int REG_ECTYPE = 6;\n \n   /**\n    * Error flag.\n    * Un-matched parenthesis group operators.\n    */\n-  public static final int REG_EPAREN  =  7;\n+  public static final int REG_EPAREN = 7;\n \n   /**\n    * Error flag.\n    * Invalid back reference to a subexpression.\n    */\n-  public static final int REG_ESUBREG =  8;\n+  public static final int REG_ESUBREG = 8;\n \n   /**\n    * Error flag.\n    * Non specific error. <B>Not implemented</B>.\n    */\n-  public static final int REG_EEND    =  9;\n+  public static final int REG_EEND = 9;\n \n   /**\n    * Error flag.\n    * Invalid escape sequence. <B>Not implemented</B>.\n    */\n-  public static final int REG_ESCAPE  = 10;\n+  public static final int REG_ESCAPE = 10;\n \n   /**\n    * Error flag.\n    * Invalid  use  of pattern operators such as group or list.\n    */\n-  public static final int REG_BADPAT  = 11;\n+  public static final int REG_BADPAT = 11;\n \n   /**\n    * Error flag.\n    * Compiled  regular  expression  requires  a  pattern\n    * buffer larger than 64Kb. <B>Not implemented</B>.\n    */\n-  public static final int REG_ESIZE   = 12;\n+  public static final int REG_ESIZE = 12;\n \n   /**\n    * Error flag.\n    * The regex routines ran out of memory. <B>Not implemented</B>.\n    */\n-  public static final int REG_ESPACE  = 13;\n+  public static final int REG_ESPACE = 13;\n \n-  REException(String msg, int type, int position) { \n-    super(msg); \n+    REException (String msg, int type, int position)\n+  {\n+    super (msg);\n     this.type = type;\n     this.pos = position;\n   }\n \n-  REException(String msg, Throwable cause, int type, int position) { \n-    super(msg, cause); \n+  REException (String msg, Throwable cause, int type, int position)\n+  {\n+    super (msg, cause);\n     this.type = type;\n     this.pos = position;\n   }\n@@ -157,7 +162,8 @@ public class REException extends Exception {\n    * Returns the type of the exception, one of the constants listed above.\n    */\n \n-  public int getType() {\n+  public int getType ()\n+  {\n     return type;\n   }\n \n@@ -167,7 +173,8 @@ public int getType() {\n    * where the error was detected, not necessarily the starting index of\n    * a bad subexpression.\n    */\n-  public int getPosition() {\n+  public int getPosition ()\n+  {\n     return pos;\n   }\n \n@@ -176,13 +183,16 @@ public int getPosition() {\n    * as well as its index position in the string or character array\n    * being compiled.\n    */\n-  public String getMessage() {\n-    Object[] args = {new Integer(pos)};\n-    StringBuffer sb = new StringBuffer();\n-    String prefix = RE.getLocalizedMessage(\"error.prefix\");\n-    sb.append(MessageFormat.format(prefix, args));\n-    sb.append('\\n');\n-    sb.append(super.getMessage());\n-    return sb.toString();\n+  public String getMessage ()\n+  {\n+    Object[]args =\n+    {\n+    new Integer (pos)};\n+    CPStringBuilder sb = new CPStringBuilder ();\n+    String prefix = RE.getLocalizedMessage (\"error.prefix\");\n+    sb.append (MessageFormat.format (prefix, args));\n+    sb.append ('\\n');\n+    sb.append (super.getMessage ());\n+    return sb.toString ();\n   }\n }"}, {"sha": "c7acb714a275c1d529942c62edccf2de7052d145", "filename": "libjava/classpath/gnu/java/util/regex/REFilterInputStream.java", "status": "modified", "additions": 55, "deletions": 42, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREFilterInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREFilterInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREFilterInputStream.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -51,14 +51,15 @@\n  *             class instead.\n  */\n \n-public class REFilterInputStream extends FilterInputStream {\n+public class REFilterInputStream extends FilterInputStream\n+{\n \n-    private RE expr;\n-    private String replace;\n-    private String buffer;\n-    private int bufpos;\n-    private int offset;\n-    private CharIndexedInputStream stream;\n+  private RE expr;\n+  private String replace;\n+  private String buffer;\n+  private int bufpos;\n+  private int offset;\n+  private CharIndexedInputStream stream;\n \n   /**\n    * Creates an REFilterInputStream.  When reading from this stream,\n@@ -71,9 +72,10 @@ public class REFilterInputStream extends FilterInputStream {\n    * @param expr The regular expression to search for.\n    * @param replace The text pattern to replace matches with.  \n    */\n-  public REFilterInputStream(InputStream stream, RE expr, String replace) {\n-    super(stream);\n-    this.stream = new CharIndexedInputStream(stream,0);\n+  public REFilterInputStream (InputStream stream, RE expr, String replace)\n+  {\n+    super (stream);\n+    this.stream = new CharIndexedInputStream (stream, 0);\n     this.expr = expr;\n     this.replace = replace;\n   }\n@@ -82,32 +84,38 @@ public REFilterInputStream(InputStream stream, RE expr, String replace) {\n    * Reads the next byte from the stream per the general contract of\n    * InputStream.read().  Returns -1 on error or end of stream.\n    */\n-  public int read() {\n+  public int read ()\n+  {\n     // If we have buffered replace data, use it.\n-    if ((buffer != null) && (bufpos < buffer.length())) {\n-      return (int) buffer.charAt(bufpos++);\n-    }\n+    if ((buffer != null) && (bufpos < buffer.length ()))\n+      {\n+\treturn (int) buffer.charAt (bufpos++);\n+      }\n \n     // check if input is at a valid position\n-    if (!stream.isValid()) return -1;\n-\n-    REMatch mymatch = new REMatch(expr.getNumSubs(),offset,0);\n-    if (expr.match(stream, mymatch)) {\n-      mymatch.end[0] = mymatch.index;\n-      mymatch.finish(stream);\n-      stream.move(mymatch.toString().length());\n-      offset += mymatch.toString().length();\n-      buffer = mymatch.substituteInto(replace);\n-      bufpos = 1;\n-\n-      // This is prone to infinite loops if replace string turns out empty.\n-      if (buffer.length() > 0) {\n-\t  return buffer.charAt(0);\n+    if (!stream.isValid ())\n+      return -1;\n+\n+    REMatch mymatch = new REMatch (expr.getNumSubs (), offset, 0);\n+    if (expr.match (stream, mymatch))\n+      {\n+\tmymatch.end[0] = mymatch.index;\n+\tmymatch.finish (stream);\n+\tstream.move (mymatch.toString ().length ());\n+\toffset += mymatch.toString ().length ();\n+\tbuffer = mymatch.substituteInto (replace);\n+\tbufpos = 1;\n+\n+\t// This is prone to infinite loops if replace string turns out empty.\n+\tif (buffer.length () > 0)\n+\t  {\n+\t    return buffer.charAt (0);\n+\t  }\n       }\n-    }\n-    char ch = stream.charAt(0);\n-    if (ch == CharIndexed.OUT_OF_BOUNDS) return -1;\n-    stream.move(1);\n+    char ch = stream.charAt (0);\n+    if (ch == CharIndexed.OUT_OF_BOUNDS)\n+      return -1;\n+    stream.move (1);\n     offset++;\n     return ch;\n   }\n@@ -116,25 +124,30 @@ public int read() {\n    * Returns false.  REFilterInputStream does not support mark() and\n    * reset() methods. \n    */\n-  public boolean markSupported() {\n+  public boolean markSupported ()\n+  {\n     return false;\n   }\n \n   /** Reads from the stream into the provided array. */\n-  public int read(byte[] b, int off, int len) {\n+  public int read (byte[]b, int off, int len)\n+  {\n     int i;\n     int ok = 0;\n-    while (len-- > 0) {\n-      i = read();\n-      if (i == -1) return (ok == 0) ? -1 : ok;\n-      b[off++] = (byte) i;\n-      ok++;\n-    }\n+    while (len-- > 0)\n+      {\n+\ti = read ();\n+\tif (i == -1)\n+\t  return (ok == 0) ? -1 : ok;\n+\tb[off++] = (byte) i;\n+\tok++;\n+      }\n     return ok;\n   }\n \n   /** Reads from the stream into the provided array. */\n-  public int read(byte[] b) {\n-    return read(b,0,b.length);\n+  public int read (byte[]b)\n+  {\n+    return read (b, 0, b.length);\n   }\n }"}, {"sha": "d29972e1dd821d659db164a9771fb7f371bd13ac", "filename": "libjava/classpath/gnu/java/util/regex/REMatch.java", "status": "modified", "additions": 210, "deletions": 172, "changes": 382, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREMatch.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREMatch.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREMatch.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,9 @@\n \n \n package gnu.java.util.regex;\n+\n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.Serializable;\n \n /**\n@@ -47,100 +50,112 @@\n  *\n  * @author <A HREF=\"mailto:wes@cacas.org\">Wes Biggs</A>\n  */\n-public final class REMatch implements Serializable, Cloneable {\n-    private String matchedText;\n-    private CharIndexed matchedCharIndexed;\n-\n-    // These variables are package scope for fast access within the engine\n-    int eflags; // execution flags this match was made using\n-\n-    // Offset in source text where match was tried.  This is zero-based;\n-    // the actual position in the source text is given by (offset + anchor).\n-    int offset;\n-\n-    // Anchor position refers to the index into the source input\n-    // at which the matching operation began.\n-    // This is also useful for the ANCHORINDEX option.\n-    int anchor;\n-\n-    // Package scope; used by RE.\n-    int index; // used while matching to mark current match position in input\n-    // start1[i] is set when the i-th subexp starts. And start1[i] is copied\n-    // to start[i] when the i-th subexp ends.  So start[i] keeps the previously\n-    // assigned value while the i-th subexp is being processed. This makes\n-    // backreference to the i-th subexp within the i-th subexp possible.\n-    int[] start; // start positions (relative to offset) for each (sub)exp.\n-    int[] start1; // start positions (relative to offset) for each (sub)exp.\n-    int[] end;   // end positions for the same\n-    // start[i] == -1 or end[i] == -1 means that the start/end position is void.\n-    // start[i] == p or end[i] == p where p < 0 and p != -1 means that\n-    // the actual start/end position is (p+1). Start/end positions may\n-    // become negative when the subexpression is in a RETokenLookBehind.\n-    boolean empty; // empty string matched. This flag is used only within\n-\t\t   // RETokenRepeated.\n-\n-    BacktrackStack backtrackStack;\n-\n-    public Object clone() {\n-\ttry {\n-\t    REMatch copy = (REMatch) super.clone();\n-\n-\t    copy.start = (int[]) start.clone();\n-\t    copy.start1 = (int[]) start1.clone();\n-\t    copy.end = (int[]) end.clone();\n-\n-\t    return copy;\n-\t} catch (CloneNotSupportedException e) {\n-\t    throw new Error(); // doesn't happen\n-\t}\n-    }\n+public final class REMatch implements Serializable, Cloneable\n+{\n+  private String matchedText;\n+  private CharIndexed matchedCharIndexed;\n \n-    void assignFrom(REMatch other) {\n-\tstart = other.start;\n-\tstart1 = other.start1;\n-\tend = other.end;\n-\tindex = other.index;\n-\tbacktrackStack = other.backtrackStack;\n-    }\n+  // These variables are package scope for fast access within the engine\n+  int eflags;\t\t\t// execution flags this match was made using\n \n-    REMatch(int subs, int anchor, int eflags) {\n-\tstart = new int[subs+1];\n-\tstart1 = new int[subs+1];\n-\tend = new int[subs+1];\n-\tthis.anchor = anchor;\n-\tthis.eflags = eflags;\n-\tclear(anchor);\n-    }\n+  // Offset in source text where match was tried.  This is zero-based;\n+  // the actual position in the source text is given by (offset + anchor).\n+  int offset;\n \n-    void finish(CharIndexed text) {\n-\tstart[0] = 0;\n-\tStringBuffer sb = new StringBuffer();\n-\tint i;\n-\tfor (i = 0; i < end[0]; i++)\n-\t    sb.append(text.charAt(i));\n-\tmatchedText = sb.toString();\n-\tmatchedCharIndexed = text;\n-\tfor (i = 0; i < start.length; i++) {\n-\t    // If any subexpressions didn't terminate, they don't count\n-\t    // TODO check if this code ever gets hit\n-\t    if ((start[i] == -1) ^ (end[i] == -1)) {\n-\t\tstart[i] = -1;\n-\t\tend[i] = -1;\n-\t    }\n-\t}\n-\tbacktrackStack = null;\n+  // Anchor position refers to the index into the source input\n+  // at which the matching operation began.\n+  // This is also useful for the ANCHORINDEX option.\n+  int anchor;\n+\n+  // Package scope; used by RE.\n+  int index;\t\t\t// used while matching to mark current match position in input\n+  // start1[i] is set when the i-th subexp starts. And start1[i] is copied\n+  // to start[i] when the i-th subexp ends.  So start[i] keeps the previously\n+  // assigned value while the i-th subexp is being processed. This makes\n+  // backreference to the i-th subexp within the i-th subexp possible.\n+  int[] start;\t\t\t// start positions (relative to offset) for each (sub)exp.\n+  int[] start1;\t\t\t// start positions (relative to offset) for each (sub)exp.\n+  int[] end;\t\t\t// end positions for the same\n+  // start[i] == -1 or end[i] == -1 means that the start/end position is void.\n+  // start[i] == p or end[i] == p where p < 0 and p != -1 means that\n+  // the actual start/end position is (p+1). Start/end positions may\n+  // become negative when the subexpression is in a RETokenLookBehind.\n+  boolean empty;\t\t// empty string matched. This flag is used only within\n+  // RETokenRepeated.\n+\n+  BacktrackStack backtrackStack;\n+\n+  public Object clone ()\n+  {\n+    try\n+    {\n+      REMatch copy = (REMatch) super.clone ();\n+\n+        copy.start = (int[]) start.clone ();\n+        copy.start1 = (int[]) start1.clone ();\n+        copy.end = (int[]) end.clone ();\n+\n+        return copy;\n     }\n-    \n-    /** Clears the current match and moves the offset to the new index. */\n-    void clear(int index) {\n-\toffset = index;\n-\tthis.index = 0;\n-\tfor (int i = 0; i < start.length; i++) {\n-\t    start[i] = start1[i] = end[i] = -1;\n-\t}\n-\tbacktrackStack = null;\n+    catch (CloneNotSupportedException e)\n+    {\n+      throw new Error ();\t// doesn't happen\n     }\n-    \n+  }\n+\n+  void assignFrom (REMatch other)\n+  {\n+    start = other.start;\n+    start1 = other.start1;\n+    end = other.end;\n+    index = other.index;\n+    backtrackStack = other.backtrackStack;\n+  }\n+\n+  REMatch (int subs, int anchor, int eflags)\n+  {\n+    start = new int[subs + 1];\n+    start1 = new int[subs + 1];\n+    end = new int[subs + 1];\n+    this.anchor = anchor;\n+    this.eflags = eflags;\n+    clear (anchor);\n+  }\n+\n+  void finish (CharIndexed text)\n+  {\n+    start[0] = 0;\n+    CPStringBuilder sb = new CPStringBuilder ();\n+    int i;\n+    for (i = 0; i < end[0]; i++)\n+      sb.append (text.charAt (i));\n+    matchedText = sb.toString ();\n+    matchedCharIndexed = text;\n+    for (i = 0; i < start.length; i++)\n+      {\n+\t// If any subexpressions didn't terminate, they don't count\n+\t// TODO check if this code ever gets hit\n+\tif ((start[i] == -1) ^ (end[i] == -1))\n+\t  {\n+\t    start[i] = -1;\n+\t    end[i] = -1;\n+\t  }\n+      }\n+    backtrackStack = null;\n+  }\n+\n+    /** Clears the current match and moves the offset to the new index. */\n+  void clear (int index)\n+  {\n+    offset = index;\n+    this.index = 0;\n+    for (int i = 0; i < start.length; i++)\n+      {\n+\tstart[i] = start1[i] = end[i] = -1;\n+      }\n+    backtrackStack = null;\n+  }\n+\n     /**\n      * Returns the string matching the pattern.  This makes it convenient\n      * to write code like the following:\n@@ -150,18 +165,20 @@ void clear(int index) {\n      * if (myMatch != null) System.out.println(\"Regexp found: \"+myMatch);\n      * </code>\n      */\n-    public String toString() {\n-\treturn matchedText;\n-    }\n-    \n+  public String toString ()\n+  {\n+    return matchedText;\n+  }\n+\n     /**\n      * Returns the index within the input text where the match in its entirety\n      * began.\n      */\n-    public int getStartIndex() {\n-\treturn offset + start[0];\n-    }\n-    \n+  public int getStartIndex ()\n+  {\n+    return offset + start[0];\n+  }\n+\n     /**\n      * Returns the index within the input string where the match in\n      * its entirety ends.  The return value is the next position after\n@@ -179,10 +196,11 @@ public int getStartIndex() {\n      * But you can save yourself that work, since the <code>toString()</code>\n      * method (above) does exactly that for you.  \n      */\n-    public int getEndIndex() {\n-\treturn offset + end[0];\n-    }\n-  \n+  public int getEndIndex ()\n+  {\n+    return offset + end[0];\n+  }\n+\n     /**\n      * Returns the string matching the given subexpression.  The subexpressions\n      * are indexed starting with one, not zero.  That is, the subexpression\n@@ -191,25 +209,30 @@ public int getEndIndex() {\n      *\n      * @param sub Index of the subexpression.\n      */\n-    public String toString(int sub) {\n-\tif ((sub >= start.length) || sub < 0)\n-\t    throw new IndexOutOfBoundsException(\"No group \" + sub);\n-\tif (start[sub] == -1) return null;\n-\tif (start[sub] >= 0 && end[sub] <= matchedText.length())\n-\t    return (matchedText.substring(start[sub],end[sub]));\n-\telse {\n+  public String toString (int sub)\n+  {\n+    if ((sub >= start.length) || sub < 0)\n+      throw new IndexOutOfBoundsException (\"No group \" + sub);\n+    if (start[sub] == -1)\n+      return null;\n+    if (start[sub] >= 0 && end[sub] <= matchedText.length ())\n+      return (matchedText.substring (start[sub], end[sub]));\n+    else\n+      {\n \t// This case occurs with RETokenLookAhead or RETokenLookBehind.\n-\t    StringBuffer sb = new StringBuffer();\n-\t    int s = start[sub];\n-\t    int e = end[sub];\n-\t    if (s < 0) s += 1;\n-\t    if (e < 0) e += 1;\n-\t    for (int i = start[0] + s; i < start[0] + e; i++)\n-\t        sb.append(matchedCharIndexed.charAt(i));\n-\t    return sb.toString();\n-\t}\n-    }\n-    \n+\tCPStringBuilder sb = new CPStringBuilder ();\n+\tint s = start[sub];\n+\tint e = end[sub];\n+\tif (s < 0)\n+\t  s += 1;\n+\tif (e < 0)\n+\t  e += 1;\n+\tfor (int i = start[0] + s; i < start[0] + e; i++)\n+\t  sb.append (matchedCharIndexed.charAt (i));\n+\treturn sb.toString ();\n+      }\n+  }\n+\n     /** \n      * Returns the index within the input string used to generate this match\n      * where subexpression number <i>sub</i> begins, or <code>-1</code> if\n@@ -218,13 +241,14 @@ public String toString(int sub) {\n      * @param sub Subexpression index\n      * @deprecated Use getStartIndex(int) instead.\n      */\n-    public int getSubStartIndex(int sub) {\n-\tif (sub >= start.length) return -1;\n-\tint x = start[sub];\n-\treturn (x == -1) ? x :\n-\t       (x >= 0) ? offset + x : offset + x + 1;\n-    }\n-    \n+  public int getSubStartIndex (int sub)\n+  {\n+    if (sub >= start.length)\n+      return -1;\n+    int x = start[sub];\n+    return (x == -1) ? x : (x >= 0) ? offset + x : offset + x + 1;\n+  }\n+\n     /** \n      * Returns the index within the input string used to generate this match\n      * where subexpression number <i>sub</i> begins, or <code>-1</code> if\n@@ -233,13 +257,14 @@ public int getSubStartIndex(int sub) {\n      * @param sub Subexpression index\n      * @since gnu.regexp 1.1.0\n      */\n-    public int getStartIndex(int sub) {\n-\tif (sub >= start.length) return -1;\n-\tint x = start[sub];\n-\treturn (x == -1) ? x :\n-\t       (x >= 0) ? offset + x : offset + x + 1;\n-    }\n-  \n+  public int getStartIndex (int sub)\n+  {\n+    if (sub >= start.length)\n+      return -1;\n+    int x = start[sub];\n+    return (x == -1) ? x : (x >= 0) ? offset + x : offset + x + 1;\n+  }\n+\n     /** \n      * Returns the index within the input string used to generate this match\n      * where subexpression number <i>sub</i> ends, or <code>-1</code> if\n@@ -248,27 +273,29 @@ public int getStartIndex(int sub) {\n      * @param sub Subexpression index\n      * @deprecated Use getEndIndex(int) instead\n      */\n-    public int getSubEndIndex(int sub) {\n-\tif (sub >= start.length) return -1;\n-\tint x = end[sub];\n-\treturn (x == -1) ? x :\n-\t       (x >= 0) ? offset + x : offset + x + 1;\n-    }\n-    \n+  public int getSubEndIndex (int sub)\n+  {\n+    if (sub >= start.length)\n+      return -1;\n+    int x = end[sub];\n+    return (x == -1) ? x : (x >= 0) ? offset + x : offset + x + 1;\n+  }\n+\n     /** \n      * Returns the index within the input string used to generate this match\n      * where subexpression number <i>sub</i> ends, or <code>-1</code> if\n      * the subexpression does not exist.  The initial position is zero.\n      *\n      * @param sub Subexpression index\n      */\n-    public int getEndIndex(int sub) {\n-\tif (sub >= start.length) return -1;\n-\tint x = end[sub];\n-\treturn (x == -1) ? x :\n-\t       (x >= 0) ? offset + x : offset + x + 1;\n-    }\n-    \n+  public int getEndIndex (int sub)\n+  {\n+    if (sub >= start.length)\n+      return -1;\n+    int x = end[sub];\n+    return (x == -1) ? x : (x >= 0) ? offset + x : offset + x + 1;\n+  }\n+\n     /**\n      * Substitute the results of this match to create a new string.\n      * This is patterned after PERL, so the tokens to watch out for are\n@@ -280,31 +307,42 @@ public int getEndIndex(int sub) {\n      *\n      * @param input A string consisting of literals and <code>$<i>n</i></code> tokens.\n      */\n-    public String substituteInto(String input) {\n-\t// a la Perl, $0 is whole thing, $1 - $9 are subexpressions\n-\tStringBuffer output = new StringBuffer();\n-\tint pos;\n-\tfor (pos = 0; pos < input.length()-1; pos++) {\n-\t    if ((input.charAt(pos) == '$') && (Character.isDigit(input.charAt(pos+1)))) {\n-\t\tint val = Character.digit(input.charAt(++pos),10);\n-\t\tint pos1 = pos + 1;\n-\t\twhile (pos1 < input.length() &&\n-\t\t       Character.isDigit(input.charAt(pos1))) {\n-\t\t    int val1 = val*10 + Character.digit(input.charAt(pos1),10);\n-\t\t    if (val1 >= start.length) break;\n-\t\t    pos1++;\n-\t\t    val = val1;\n-\t\t}\n-\t\tpos = pos1 - 1;\n-\n-\t\tif (val < start.length) {\n-\t\t    output.append(toString(val));\n-\t\t} \n-\t    } else output.append(input.charAt(pos));\n-\t}\n-\tif (pos < input.length()) output.append(input.charAt(pos));\n-\treturn output.toString();\n-    }\n+  public String substituteInto (String input)\n+  {\n+    // a la Perl, $0 is whole thing, $1 - $9 are subexpressions\n+    CPStringBuilder output = new CPStringBuilder ();\n+    int pos;\n+    for (pos = 0; pos < input.length () - 1; pos++)\n+      {\n+\tif ((input.charAt (pos) == '$')\n+\t    && (Character.isDigit (input.charAt (pos + 1))))\n+\t  {\n+\t    int val = Character.digit (input.charAt (++pos), 10);\n+\t    int pos1 = pos + 1;\n+\t    while (pos1 < input.length () &&\n+\t\t   Character.isDigit (input.charAt (pos1)))\n+\t      {\n+\t\tint val1 =\n+\t\t  val * 10 + Character.digit (input.charAt (pos1), 10);\n+\t\tif (val1 >= start.length)\n+\t\t  break;\n+\t\tpos1++;\n+\t\tval = val1;\n+\t      }\n+\t    pos = pos1 - 1;\n+\n+\t    if (val < start.length)\n+\t      {\n+\t\toutput.append (toString (val));\n+\t      }\n+\t  }\n+\telse\n+\t  output.append (input.charAt (pos));\n+      }\n+    if (pos < input.length ())\n+      output.append (input.charAt (pos));\n+    return output.toString ();\n+  }\n \n /*  The following are used for debugging purpose\n     public static String d(REMatch m) {"}, {"sha": "f0c78be925c14df0354f8b4d9952da1b23888cdb", "filename": "libjava/classpath/gnu/java/util/regex/REMatchEnumeration.java", "status": "modified", "additions": 41, "deletions": 35, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREMatchEnumeration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREMatchEnumeration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREMatchEnumeration.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -36,6 +36,9 @@\n exception statement from your version. */\n \n package gnu.java.util.regex;\n+\n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.Serializable;\n import java.util.Enumeration;\n import java.util.NoSuchElementException;\n@@ -66,20 +69,23 @@\n  * \n  * @author <A HREF=\"mailto:wes@cacas.org\">Wes Biggs</A> \n  */\n-public class REMatchEnumeration implements Enumeration, Serializable {\n+public class REMatchEnumeration\n+  implements Enumeration < REMatch >, Serializable\n+{\n   private static final int YES = 1;\n   private static final int MAYBE = 0;\n   private static final int NO = -1;\n-  \n+\n   private int more;\n   private REMatch match;\n-  private RE expr;\n-  private CharIndexed input;\n-  private int eflags;\n-    private int index;\n+  private final RE expr;\n+  private final CharIndexed input;\n+  private final int eflags;\n+  private int index;\n \n   // Package scope constructor is used by RE.getMatchEnumeration()\n-  REMatchEnumeration(RE expr, CharIndexed input, int index, int eflags) {\n+    REMatchEnumeration (RE expr, CharIndexed input, int index, int eflags)\n+  {\n     more = MAYBE;\n     this.expr = expr;\n     this.input = input;\n@@ -88,48 +94,48 @@ public class REMatchEnumeration implements Enumeration, Serializable {\n   }\n \n   /** Returns true if there are more matches in the input text. */\n-  public boolean hasMoreElements() {\n-    return hasMoreMatches(null);\n+  public boolean hasMoreElements ()\n+  {\n+    return hasMoreMatches (null);\n   }\n \n   /** Returns true if there are more matches in the input text. */\n-  public boolean hasMoreMatches() {\n-    return hasMoreMatches(null);\n+  public boolean hasMoreMatches ()\n+  {\n+    return hasMoreMatches (null);\n   }\n \n   /** Returns true if there are more matches in the input text.\n    * Saves the text leading up to the match (or to the end of the input)\n    * in the specified buffer.\n    */\n-  public boolean hasMoreMatches(StringBuffer buffer) {\n-    if (more == MAYBE) {\n-\tmatch = expr.getMatchImpl(input,index,eflags,buffer);\n-\tif (match != null) {\n-\t    input.move((match.end[0] > 0) ? match.end[0] : 1);\n-\t    \n-\t    index = (match.end[0] > 0) ? match.end[0] + match.offset : index + 1;\n+  public boolean hasMoreMatches (CPStringBuilder buffer)\n+  {\n+    if (more == MAYBE)\n+      {\n+\tmatch = expr.getMatchImpl (input, index, eflags, buffer);\n+\tif (match != null)\n+\t  {\n+\t    input.move ((match.end[0] > 0) ? match.end[0] : 1);\n+\n+\t    index =\n+\t      (match.end[0] > 0) ? match.end[0] + match.offset : index + 1;\n \t    more = YES;\n-\t} else more = NO;\n-    }\n+\t  }\n+\telse\n+\t  more = NO;\n+      }\n     return (more == YES);\n   }\n \n   /** Returns the next match in the input text. */\n-  public Object nextElement() throws NoSuchElementException {\n-    return nextMatch();\n-  }\n-\n-  /** \n-   * Returns the next match in the input text. This method is provided\n-   * for convenience to avoid having to explicitly cast the return value\n-   * to class REMatch.\n-   */\n-  public REMatch nextMatch() throws NoSuchElementException {\n-    if (hasMoreElements()) {\n-\tmore = (input.isValid()) ? MAYBE : NO;\n+  public REMatch nextElement () throws NoSuchElementException\n+  {\n+    if (hasMoreElements ())\n+      {\n+\tmore = (input.isValid ())? MAYBE : NO;\n \treturn match;\n-    }\n-    throw new NoSuchElementException();\n+      }\n+    throw new NoSuchElementException ();\n   }\n }\n-"}, {"sha": "38d70564d4aa79e6799eb2de5876e002b711d8c2", "filename": "libjava/classpath/gnu/java/util/regex/RESyntax.java", "status": "modified", "additions": 171, "deletions": 198, "changes": 369, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRESyntax.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRESyntax.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRESyntax.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -51,102 +51,104 @@\n  * @author <A HREF=\"mailto:wes@cacas.org\">Wes Biggs</A>\n  */\n \n-public final class RESyntax implements Serializable {\n-    static final String DEFAULT_LINE_SEPARATOR = System.getProperty(\"line.separator\");\n+public final class RESyntax implements Serializable\n+{\n+  static final String DEFAULT_LINE_SEPARATOR =\n+    System.getProperty (\"line.separator\");\n \n-    private BitSet bits;\n+  private BitSet bits;\n \n-    // true for the constant defined syntaxes\n-    private boolean isFinal = false;\n+  // true for the constant defined syntaxes\n+  private boolean isFinal = false;\n \n-    private String lineSeparator = DEFAULT_LINE_SEPARATOR;\n+  private String lineSeparator = DEFAULT_LINE_SEPARATOR;\n \n   // Values for constants are bit indexes\n \n   /**\n    * Syntax bit. Backslash is an escape character in lists.\n    */\n-  public static final int RE_BACKSLASH_ESCAPE_IN_LISTS =  0;\n+  public static final int RE_BACKSLASH_ESCAPE_IN_LISTS = 0;\n \n   /**\n    * Syntax bit. Use \\? instead of ? and \\+ instead of +.\n    */\n-  public static final int RE_BK_PLUS_QM                =  1;\n+  public static final int RE_BK_PLUS_QM = 1;\n \n   /**\n    * Syntax bit. POSIX character classes ([:...:]) in lists are allowed.\n    */\n-  public static final int RE_CHAR_CLASSES              =  2;\n+  public static final int RE_CHAR_CLASSES = 2;\n \n   /**\n    * Syntax bit. ^ and $ are special everywhere.\n    * <B>Not implemented.</B>\n    */\n-  public static final int RE_CONTEXT_INDEP_ANCHORS     =  3; \n+  public static final int RE_CONTEXT_INDEP_ANCHORS = 3;\n \n   /**\n    * Syntax bit. Repetition operators are only special in valid positions.\n    * <B>Not implemented.</B>\n    */\n-  public static final int RE_CONTEXT_INDEP_OPS         =  4; \n+  public static final int RE_CONTEXT_INDEP_OPS = 4;\n \n   /**\n    * Syntax bit. Repetition and alternation operators are invalid\n    * at start and end of pattern and other places. \n    * <B>Not implemented</B>.\n    */\n-  public static final int RE_CONTEXT_INVALID_OPS       =  5; \n+  public static final int RE_CONTEXT_INVALID_OPS = 5;\n \n   /**\n    * Syntax bit. Match-any-character operator (.) matches a newline.\n    */\n-  public static final int RE_DOT_NEWLINE               =  6;\n+  public static final int RE_DOT_NEWLINE = 6;\n \n   /**\n    * Syntax bit. Match-any-character operator (.) does not match a null.\n    */\n-  public static final int RE_DOT_NOT_NULL              =  7;\n+  public static final int RE_DOT_NOT_NULL = 7;\n \n   /**\n    * Syntax bit. Intervals ({x}, {x,}, {x,y}) are allowed.\n    */\n-  public static final int RE_INTERVALS                 =  8;\n+  public static final int RE_INTERVALS = 8;\n \n   /**\n    * Syntax bit. No alternation (|), match one-or-more (+), or \n    * match zero-or-one (?) operators.\n    */\n-  public static final int RE_LIMITED_OPS               =  9;\n+  public static final int RE_LIMITED_OPS = 9;\n \n   /**\n    * Syntax bit. Newline is an alternation operator.\n    */\n-  public static final int RE_NEWLINE_ALT               = 10; // impl.\n+  public static final int RE_NEWLINE_ALT = 10;\t// impl.\n \n   /**\n    * Syntax bit. Intervals use { } instead of \\{ \\}\n    */\n-  public static final int RE_NO_BK_BRACES              = 11; \n+  public static final int RE_NO_BK_BRACES = 11;\n \n   /**\n    * Syntax bit. Grouping uses ( ) instead of \\( \\).\n    */\n-  public static final int RE_NO_BK_PARENS              = 12;\n+  public static final int RE_NO_BK_PARENS = 12;\n \n   /**\n    * Syntax bit. Backreferences not allowed.\n    */\n-  public static final int RE_NO_BK_REFS                = 13;\n+  public static final int RE_NO_BK_REFS = 13;\n \n   /**\n    * Syntax bit. Alternation uses | instead of \\|\n    */\n-  public static final int RE_NO_BK_VBAR                = 14;\n+  public static final int RE_NO_BK_VBAR = 14;\n \n   /**\n    * Syntax bit. <B>Not implemented</B>.\n    */\n-  public static final int RE_NO_EMPTY_RANGES           = 15;\n+  public static final int RE_NO_EMPTY_RANGES = 15;\n \n   /**\n    * Syntax bit. An unmatched right parenthesis (')' or '\\)', depending\n@@ -157,80 +159,80 @@ public final class RESyntax implements Serializable {\n   /**\n    * Syntax bit. <B>Not implemented.</B>\n    */\n-  public static final int RE_HAT_LISTS_NOT_NEWLINE     = 17;\n+  public static final int RE_HAT_LISTS_NOT_NEWLINE = 17;\n \n   /**\n    * Syntax bit.  Stingy matching is allowed (+?, *?, ??, {x,y}?).\n    */\n-  public static final int RE_STINGY_OPS                = 18;\n+  public static final int RE_STINGY_OPS = 18;\n \n   /**\n    * Syntax bit. Allow character class escapes (\\d, \\D, \\s, \\S, \\w, \\W).\n    */\n-  public static final int RE_CHAR_CLASS_ESCAPES        = 19;\n+  public static final int RE_CHAR_CLASS_ESCAPES = 19;\n \n   /**\n    * Syntax bit. Allow use of (?:xxx) grouping (subexpression is not saved).\n    */\n-  public static final int RE_PURE_GROUPING             = 20;\n+  public static final int RE_PURE_GROUPING = 20;\n \n   /**\n    * Syntax bit. Allow use of (?=xxx) and (?!xxx) apply the subexpression\n    * to the text following the current position without consuming that text.\n    */\n-  public static final int RE_LOOKAHEAD                 = 21;\n+  public static final int RE_LOOKAHEAD = 21;\n \n   /**\n    * Syntax bit. Allow beginning- and end-of-string anchors (\\A, \\Z).\n    */\n-  public static final int RE_STRING_ANCHORS            = 22;\n+  public static final int RE_STRING_ANCHORS = 22;\n \n   /**\n    * Syntax bit. Allow embedded comments, (?#comment), as in Perl5.\n    */\n-  public static final int RE_COMMENTS                  = 23;\n+  public static final int RE_COMMENTS = 23;\n \n   /**\n    * Syntax bit. Allow character class escapes within lists, as in Perl5.\n    */\n-  public static final int RE_CHAR_CLASS_ESC_IN_LISTS   = 24;\n+  public static final int RE_CHAR_CLASS_ESC_IN_LISTS = 24;\n \n   /**\n    * Syntax bit.  Possessive matching is allowed (++, *+, ?+, {x,y}+).\n    */\n-  public static final int RE_POSSESSIVE_OPS            = 25;\n+  public static final int RE_POSSESSIVE_OPS = 25;\n \n   /**\n    * Syntax bit.  Allow embedded flags, (?is-x), as in Perl5.\n    */\n-  public static final int RE_EMBEDDED_FLAGS            = 26;\n+  public static final int RE_EMBEDDED_FLAGS = 26;\n \n   /**\n    * Syntax bit.  Allow octal char (\\0377), as in Perl5.\n    */\n-  public static final int RE_OCTAL_CHAR                = 27;\n+  public static final int RE_OCTAL_CHAR = 27;\n \n   /**\n    * Syntax bit.  Allow hex char (\\x1b), as in Perl5.\n    */\n-  public static final int RE_HEX_CHAR                  = 28;\n+  public static final int RE_HEX_CHAR = 28;\n \n   /**\n    * Syntax bit.  Allow Unicode char (\\u1234), as in Java 1.4.\n    */\n-  public static final int RE_UNICODE_CHAR              = 29;\n+  public static final int RE_UNICODE_CHAR = 29;\n \n   /**\n    * Syntax bit.  Allow named property (\\p{P}, \\P{p}), as in Perl5.\n    */\n-  public static final int RE_NAMED_PROPERTY            = 30;\n+  public static final int RE_NAMED_PROPERTY = 30;\n \n   /**\n    * Syntax bit.  Allow nested characterclass ([a-z&&[^p-r]]), as in Java 1.4.\n    */\n-  public static final int RE_NESTED_CHARCLASS          = 31;\n+  public static final int RE_NESTED_CHARCLASS = 31;\n \n-  private static final int BIT_TOTAL                   = 32;\n+  private static final int BIT_TOTAL = 32;\n \n   /**\n    * Predefined syntax.\n@@ -315,13 +317,13 @@ public final class RESyntax implements Serializable {\n    * Emulates regular expression support in Larry Wall's perl, version 4,\n    * using single line mode (/s modifier).\n    */\n-  public static final RESyntax RE_SYNTAX_PERL4_S; // single line mode (/s)\n+  public static final RESyntax RE_SYNTAX_PERL4_S;\t// single line mode (/s)\n \n   /**\n    * Predefined syntax.\n    * Emulates regular expression support in Larry Wall's perl, version 5.\n    */\n-  public static final RESyntax RE_SYNTAX_PERL5;  \n+  public static final RESyntax RE_SYNTAX_PERL5;\n \n   /**\n    * Predefined syntax.\n@@ -335,145 +337,109 @@ public final class RESyntax implements Serializable {\n      * Emulates regular expression support in Java 1.4's java.util.regex\n      * package.\n      */\n-    public static final RESyntax RE_SYNTAX_JAVA_1_4;\n-\n-  static {\n-      // Define syntaxes\n-      \n-      RE_SYNTAX_EMACS = new RESyntax().makeFinal();\n-      \n-      RESyntax RE_SYNTAX_POSIX_COMMON = new RESyntax()\n-\t  .set(RE_CHAR_CLASSES)\n-\t  .set(RE_DOT_NEWLINE)\n-\t  .set(RE_DOT_NOT_NULL)\n-\t  .set(RE_INTERVALS)\n-\t  .set(RE_NO_EMPTY_RANGES)\n-\t  .makeFinal();\n-      \n-      RE_SYNTAX_POSIX_BASIC = new RESyntax(RE_SYNTAX_POSIX_COMMON)\n-\t  .set(RE_BK_PLUS_QM)\n-\t  .makeFinal();\n-      \n-      RE_SYNTAX_POSIX_EXTENDED = new RESyntax(RE_SYNTAX_POSIX_COMMON)\n-\t  .set(RE_CONTEXT_INDEP_ANCHORS)\n-\t  .set(RE_CONTEXT_INDEP_OPS)\n-\t  .set(RE_NO_BK_BRACES)\n-\t  .set(RE_NO_BK_PARENS)\n-\t  .set(RE_NO_BK_VBAR)\n-\t  .set(RE_UNMATCHED_RIGHT_PAREN_ORD)\n-\t  .makeFinal();\n-\n-      RE_SYNTAX_AWK = new RESyntax()\n-\t  .set(RE_BACKSLASH_ESCAPE_IN_LISTS)\n-\t  .set(RE_DOT_NOT_NULL)\n-\t  .set(RE_NO_BK_PARENS)\n-\t  .set(RE_NO_BK_REFS)\n-\t  .set(RE_NO_BK_VBAR)\n-\t  .set(RE_NO_EMPTY_RANGES)\n-\t  .set(RE_UNMATCHED_RIGHT_PAREN_ORD)\n-\t  .makeFinal();\n-      \n-      RE_SYNTAX_POSIX_AWK = new RESyntax(RE_SYNTAX_POSIX_EXTENDED)\n-\t  .set(RE_BACKSLASH_ESCAPE_IN_LISTS)\n-\t  .makeFinal();\n-      \n-      RE_SYNTAX_GREP = new RESyntax()\n-\t  .set(RE_BK_PLUS_QM)\n-\t  .set(RE_CHAR_CLASSES)\n-\t  .set(RE_HAT_LISTS_NOT_NEWLINE)\n-\t  .set(RE_INTERVALS)\n-\t  .set(RE_NEWLINE_ALT)\n-\t  .makeFinal();\n-      \n-      RE_SYNTAX_EGREP = new RESyntax()\n-\t  .set(RE_CHAR_CLASSES)\n-\t  .set(RE_CONTEXT_INDEP_ANCHORS)\n-\t  .set(RE_CONTEXT_INDEP_OPS)\n-\t  .set(RE_HAT_LISTS_NOT_NEWLINE)\n-\t  .set(RE_NEWLINE_ALT)\n-\t  .set(RE_NO_BK_PARENS)\n-\t  .set(RE_NO_BK_VBAR)\n-\t  .makeFinal();\n-    \n-      RE_SYNTAX_POSIX_EGREP = new RESyntax(RE_SYNTAX_EGREP)\n-\t  .set(RE_INTERVALS)\n-\t  .set(RE_NO_BK_BRACES)\n-\t  .makeFinal();\n-    \n-      /* P1003.2/D11.2, section 4.20.7.1, lines 5078ff.  */\n-    \n-      RE_SYNTAX_ED = new RESyntax(RE_SYNTAX_POSIX_BASIC)\n-\t  .makeFinal();\n-    \n-      RE_SYNTAX_SED = new RESyntax(RE_SYNTAX_POSIX_BASIC)\n-\t  .makeFinal();\n-      \n-      RE_SYNTAX_POSIX_MINIMAL_BASIC = new RESyntax(RE_SYNTAX_POSIX_COMMON)\n-\t  .set(RE_LIMITED_OPS)\n-\t  .makeFinal();\n-      \n-      /* Differs from RE_SYNTAX_POSIX_EXTENDED in that RE_CONTEXT_INVALID_OPS\n-\t replaces RE_CONTEXT_INDEP_OPS and RE_NO_BK_REFS is added. */\n-      \n-      RE_SYNTAX_POSIX_MINIMAL_EXTENDED = new RESyntax(RE_SYNTAX_POSIX_COMMON)\n-\t  .set(RE_CONTEXT_INDEP_ANCHORS)\n-\t  .set(RE_CONTEXT_INVALID_OPS)\n-\t  .set(RE_NO_BK_BRACES)\n-\t  .set(RE_NO_BK_PARENS)\n-\t  .set(RE_NO_BK_REFS)\n-\t  .set(RE_NO_BK_VBAR)\n-\t  .set(RE_UNMATCHED_RIGHT_PAREN_ORD)\n-\t  .makeFinal();\n-      \n-      /* There is no official Perl spec, but here's a \"best guess\" */\n-      \n-      RE_SYNTAX_PERL4 = new RESyntax()\n-\t  .set(RE_BACKSLASH_ESCAPE_IN_LISTS)\n-\t  .set(RE_CONTEXT_INDEP_ANCHORS)\n-\t  .set(RE_CONTEXT_INDEP_OPS)          // except for '{', apparently\n-\t  .set(RE_INTERVALS)\n-\t  .set(RE_NO_BK_BRACES)\n-\t  .set(RE_NO_BK_PARENS)\n-\t  .set(RE_NO_BK_VBAR)\n-\t  .set(RE_NO_EMPTY_RANGES)\n-\t  .set(RE_CHAR_CLASS_ESCAPES)    // \\d,\\D,\\w,\\W,\\s,\\S\n-\t  .makeFinal();\n-      \n-      RE_SYNTAX_PERL4_S = new RESyntax(RE_SYNTAX_PERL4)\n-\t  .set(RE_DOT_NEWLINE)\n-\t  .makeFinal();\n-      \n-      RE_SYNTAX_PERL5 = new RESyntax(RE_SYNTAX_PERL4)\n-\t  .set(RE_PURE_GROUPING)          // (?:)\n-\t  .set(RE_STINGY_OPS)             // *?,??,+?,{}?\n-\t  .set(RE_LOOKAHEAD)              // (?=)(?!)\n-\t  .set(RE_STRING_ANCHORS)         // \\A,\\Z\n-\t  .set(RE_CHAR_CLASS_ESC_IN_LISTS)// \\d,\\D,\\w,\\W,\\s,\\S within []\n-\t  .set(RE_COMMENTS)              // (?#)\n-\t  .set(RE_EMBEDDED_FLAGS)         // (?imsx-imsx)\n-\t  .set(RE_OCTAL_CHAR)             // \\0377\n-\t  .set(RE_HEX_CHAR)               // \\x1b\n-\t  .set(RE_NAMED_PROPERTY)         // \\p{prop}, \\P{prop}\n-\t  .makeFinal();\n-      \n-      RE_SYNTAX_PERL5_S = new RESyntax(RE_SYNTAX_PERL5)\n-\t  .set(RE_DOT_NEWLINE)\n-\t  .makeFinal();\n-\n-      RE_SYNTAX_JAVA_1_4 = new RESyntax(RE_SYNTAX_PERL5)\n-\t  // XXX\n-\t  .set(RE_POSSESSIVE_OPS)         // *+,?+,++,{}+\n-\t  .set(RE_UNICODE_CHAR)           // \\u1234\n-\t  .set(RE_NESTED_CHARCLASS)       // [a-z&&[^p-r]]\n-\t  .makeFinal();\n+  public static final RESyntax RE_SYNTAX_JAVA_1_4;\n+\n+  static\n+  {\n+    // Define syntaxes\n+\n+    RE_SYNTAX_EMACS = new RESyntax ().makeFinal ();\n+\n+    RESyntax RE_SYNTAX_POSIX_COMMON =\n+      new RESyntax ().set (RE_CHAR_CLASSES).set (RE_DOT_NEWLINE).\n+      set (RE_DOT_NOT_NULL).set (RE_INTERVALS).set (RE_NO_EMPTY_RANGES).\n+      makeFinal ();\n+\n+      RE_SYNTAX_POSIX_BASIC =\n+      new RESyntax (RE_SYNTAX_POSIX_COMMON).set (RE_BK_PLUS_QM).makeFinal ();\n+\n+      RE_SYNTAX_POSIX_EXTENDED =\n+      new RESyntax (RE_SYNTAX_POSIX_COMMON).set (RE_CONTEXT_INDEP_ANCHORS).\n+      set (RE_CONTEXT_INDEP_OPS).set (RE_NO_BK_BRACES).set (RE_NO_BK_PARENS).\n+      set (RE_NO_BK_VBAR).set (RE_UNMATCHED_RIGHT_PAREN_ORD).makeFinal ();\n+\n+      RE_SYNTAX_AWK =\n+      new RESyntax ().set (RE_BACKSLASH_ESCAPE_IN_LISTS).\n+      set (RE_DOT_NOT_NULL).set (RE_NO_BK_PARENS).set (RE_NO_BK_REFS).\n+      set (RE_NO_BK_VBAR).set (RE_NO_EMPTY_RANGES).\n+      set (RE_UNMATCHED_RIGHT_PAREN_ORD).makeFinal ();\n+\n+      RE_SYNTAX_POSIX_AWK =\n+      new RESyntax (RE_SYNTAX_POSIX_EXTENDED).\n+      set (RE_BACKSLASH_ESCAPE_IN_LISTS).makeFinal ();\n+\n+      RE_SYNTAX_GREP =\n+      new RESyntax ().set (RE_BK_PLUS_QM).set (RE_CHAR_CLASSES).\n+      set (RE_HAT_LISTS_NOT_NEWLINE).set (RE_INTERVALS).set (RE_NEWLINE_ALT).\n+      makeFinal ();\n+\n+      RE_SYNTAX_EGREP =\n+      new RESyntax ().set (RE_CHAR_CLASSES).set (RE_CONTEXT_INDEP_ANCHORS).\n+      set (RE_CONTEXT_INDEP_OPS).set (RE_HAT_LISTS_NOT_NEWLINE).\n+      set (RE_NEWLINE_ALT).set (RE_NO_BK_PARENS).set (RE_NO_BK_VBAR).\n+      makeFinal ();\n+\n+      RE_SYNTAX_POSIX_EGREP =\n+      new RESyntax (RE_SYNTAX_EGREP).set (RE_INTERVALS).set (RE_NO_BK_BRACES).\n+      makeFinal ();\n+\n+    /* P1003.2/D11.2, section 4.20.7.1, lines 5078ff.  */\n+\n+      RE_SYNTAX_ED = new RESyntax (RE_SYNTAX_POSIX_BASIC).makeFinal ();\n+\n+      RE_SYNTAX_SED = new RESyntax (RE_SYNTAX_POSIX_BASIC).makeFinal ();\n+\n+      RE_SYNTAX_POSIX_MINIMAL_BASIC =\n+      new RESyntax (RE_SYNTAX_POSIX_COMMON).set (RE_LIMITED_OPS).makeFinal ();\n+\n+    /* Differs from RE_SYNTAX_POSIX_EXTENDED in that RE_CONTEXT_INVALID_OPS\n+       replaces RE_CONTEXT_INDEP_OPS and RE_NO_BK_REFS is added. */\n+\n+      RE_SYNTAX_POSIX_MINIMAL_EXTENDED =\n+      new RESyntax (RE_SYNTAX_POSIX_COMMON).set (RE_CONTEXT_INDEP_ANCHORS).\n+      set (RE_CONTEXT_INVALID_OPS).set (RE_NO_BK_BRACES).\n+      set (RE_NO_BK_PARENS).set (RE_NO_BK_REFS).set (RE_NO_BK_VBAR).\n+      set (RE_UNMATCHED_RIGHT_PAREN_ORD).makeFinal ();\n+\n+    /* There is no official Perl spec, but here's a \"best guess\" */\n+\n+      RE_SYNTAX_PERL4 = new RESyntax ().set (RE_BACKSLASH_ESCAPE_IN_LISTS).set (RE_CONTEXT_INDEP_ANCHORS).set (RE_CONTEXT_INDEP_OPS)\t// except for '{', apparently\n+      .set (RE_INTERVALS).set (RE_NO_BK_BRACES).set (RE_NO_BK_PARENS).set (RE_NO_BK_VBAR).set (RE_NO_EMPTY_RANGES).set (RE_CHAR_CLASS_ESCAPES)\t// \\d,\\D,\\w,\\W,\\s,\\S\n+      .makeFinal ();\n+\n+      RE_SYNTAX_PERL4_S =\n+      new RESyntax (RE_SYNTAX_PERL4).set (RE_DOT_NEWLINE).makeFinal ();\n+\n+      RE_SYNTAX_PERL5 = new RESyntax (RE_SYNTAX_PERL4).set (RE_PURE_GROUPING)\t// (?:)\n+      .set (RE_STINGY_OPS)\t// *?,??,+?,{}?\n+      .set (RE_LOOKAHEAD)\t// (?=)(?!)\n+      .set (RE_STRING_ANCHORS)\t// \\A,\\Z\n+      .set (RE_CHAR_CLASS_ESC_IN_LISTS)\t// \\d,\\D,\\w,\\W,\\s,\\S within []\n+      .set (RE_COMMENTS)\t// (?#)\n+      .set (RE_EMBEDDED_FLAGS)\t// (?imsx-imsx)\n+      .set (RE_OCTAL_CHAR)\t// \\0377\n+      .set (RE_HEX_CHAR)\t// \\x1b\n+      .set (RE_NAMED_PROPERTY)\t// \\p{prop}, \\P{prop}\n+      .makeFinal ();\n+\n+      RE_SYNTAX_PERL5_S =\n+      new RESyntax (RE_SYNTAX_PERL5).set (RE_DOT_NEWLINE).makeFinal ();\n+\n+      RE_SYNTAX_JAVA_1_4 = new RESyntax (RE_SYNTAX_PERL5)\n+      // XXX\n+      .set (RE_POSSESSIVE_OPS)\t// *+,?+,++,{}+\n+      .set (RE_UNICODE_CHAR)\t// \\u1234\n+      .set (RE_NESTED_CHARCLASS)\t// [a-z&&[^p-r]]\n+      .makeFinal ();\n   }\n \n   /**\n    * Construct a new syntax object with all bits turned off.\n    * This is equivalent to RE_SYNTAX_EMACS.\n    */\n-  public RESyntax() {\n-    bits = new BitSet(BIT_TOTAL);\n+  public RESyntax ()\n+  {\n+    bits = new BitSet (BIT_TOTAL);\n   }\n \n     /**\n@@ -484,24 +450,27 @@ public RESyntax() {\n      *\n      * @return this object for convenient chaining\n      */\n-    public RESyntax makeFinal() {\n-\tisFinal = true;\n-\treturn this;\n-    }\n+  public RESyntax makeFinal ()\n+  {\n+    isFinal = true;\n+    return this;\n+  }\n \n   /**\n    * Construct a new syntax object with all bits set the same \n    * as the other syntax.\n    */\n-  public RESyntax(RESyntax other) {\n-    bits = (BitSet) other.bits.clone();\n+  public RESyntax (RESyntax other)\n+  {\n+    bits = (BitSet) other.bits.clone ();\n   }\n \n   /**\n    * Check if a given bit is set in this syntax.\n    */\n-  public boolean get(int index) {\n-    return bits.get(index);\n+  public boolean get (int index)\n+  {\n+    return bits.get (index);\n   }\n \n   /**\n@@ -510,10 +479,11 @@ public boolean get(int index) {\n    * @param index the constant (RESyntax.RE_xxx) bit to set.\n    * @return a reference to this object for easy chaining.\n    */\n-  public RESyntax set(int index) {\n+  public RESyntax set (int index)\n+  {\n     if (isFinal)\n-      throw new IllegalAccessError(RE.getLocalizedMessage(\"syntax.final\"));\n-    bits.set(index);\n+      throw new IllegalAccessError (RE.getLocalizedMessage (\"syntax.final\"));\n+    bits.set (index);\n     return this;\n   }\n \n@@ -523,11 +493,12 @@ public RESyntax set(int index) {\n    * @param index the constant (RESyntax.RE_xxx) bit to clear.\n    * @return a reference to this object for easy chaining.\n    */\n-  public RESyntax clear(int index) {\n-      if (isFinal)\n-        throw new IllegalAccessError(RE.getLocalizedMessage(\"syntax.final\"));\n-      bits.clear(index);\n-      return this;\n+  public RESyntax clear (int index)\n+  {\n+    if (isFinal)\n+      throw new IllegalAccessError (RE.getLocalizedMessage (\"syntax.final\"));\n+    bits.clear (index);\n+    return this;\n   }\n \n     /**\n@@ -547,18 +518,20 @@ public RESyntax clear(int index) {\n      *\n      * @return this object for convenient chaining \n      */\n-    public RESyntax setLineSeparator(String aSeparator) {\n-\tif (isFinal)\n-          throw new IllegalAccessError(RE.getLocalizedMessage(\"syntax.final\"));\n-\tlineSeparator = aSeparator;\n-\treturn this;\n-    }\n+  public RESyntax setLineSeparator (String aSeparator)\n+  {\n+    if (isFinal)\n+      throw new IllegalAccessError (RE.getLocalizedMessage (\"syntax.final\"));\n+    lineSeparator = aSeparator;\n+    return this;\n+  }\n \n     /**\n      * Returns the currently active line separator string.  The default\n      * is the platform-dependent system property \"line.separator\".\n      */\n-    public String getLineSeparator() {\n-\treturn lineSeparator;\n-    }\n+  public String getLineSeparator ()\n+  {\n+    return lineSeparator;\n+  }\n }"}, {"sha": "681ac517f04a22693ee6c6f39be6e8798e2f34eb", "filename": "libjava/classpath/gnu/java/util/regex/REToken.java", "status": "modified", "additions": 118, "deletions": 78, "changes": 196, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREToken.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREToken.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FREToken.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -36,65 +36,84 @@\n exception statement from your version. */\n \n package gnu.java.util.regex;\n+\n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.Serializable;\n \n-abstract class REToken implements Serializable, Cloneable {\n+abstract class REToken implements Serializable, Cloneable\n+{\n \n   protected REToken next = null;\n   protected REToken uncle = null;\n   protected int subIndex;\n   protected boolean unicodeAware = true;\n \n-  public Object clone() {\n-    try {\n-      REToken copy = (REToken) super.clone();\n-      return copy;\n-    } catch (CloneNotSupportedException e) {\n-      throw new Error(); // doesn't happen\n+  public Object clone ()\n+  {\n+    try\n+    {\n+      REToken copy = (REToken) super.clone ();\n+        return copy;\n+    }\n+    catch (CloneNotSupportedException e)\n+    {\n+      throw new Error ();\t// doesn't happen\n     }\n   }\n \n-  protected REToken(int subIndex) {\n-      this.subIndex = subIndex;\n+  protected REToken (int subIndex)\n+  {\n+    this.subIndex = subIndex;\n   }\n \n-  int getMinimumLength() {\n+  int getMinimumLength ()\n+  {\n     return 0;\n   }\n \n-  int getMaximumLength() {\n+  int getMaximumLength ()\n+  {\n     return Integer.MAX_VALUE;\n   }\n \n-  void setUncle(REToken anUncle) {\n+  void setUncle (REToken anUncle)\n+  {\n     uncle = anUncle;\n   }\n \n     /** Returns true if the match succeeded, false if it failed. */\n-    boolean match(CharIndexed input, REMatch mymatch) {\n-\treturn match(input, mymatch, false);\n-    }\n-    boolean matchFake(CharIndexed input, REMatch mymatch) {\n-\treturn match(input, mymatch, true);\n-    }\n+  boolean match (CharIndexed input, REMatch mymatch)\n+  {\n+    return match (input, mymatch, false);\n+  }\n+  boolean matchFake (CharIndexed input, REMatch mymatch)\n+  {\n+    return match (input, mymatch, true);\n+  }\n \n-    private boolean match(CharIndexed input, REMatch mymatch, boolean fake) {\n-\tif (!fake) {\n-\t    setHitEnd(input, mymatch);\n-\t}\n-\tREMatch m = matchThis(input, mymatch);\n-\tif (m == null) return false;\n-\tif (next(input, m)) {\n-\t    mymatch.assignFrom(m);\n-\t    return true;\n-\t}\n-\treturn false;\n-    }\n+  private boolean match (CharIndexed input, REMatch mymatch, boolean fake)\n+  {\n+    if (!fake)\n+      {\n+\tsetHitEnd (input, mymatch);\n+      }\n+    REMatch m = matchThis (input, mymatch);\n+    if (m == null)\n+      return false;\n+    if (next (input, m))\n+      {\n+\tmymatch.assignFrom (m);\n+\treturn true;\n+      }\n+    return false;\n+  }\n \n     /** Sets whether the matching occurs at the end of input */\n-    void setHitEnd(CharIndexed input, REMatch mymatch) {\n-        input.setHitEnd(mymatch);\n-    }\n+  void setHitEnd (CharIndexed input, REMatch mymatch)\n+  {\n+    input.setHitEnd (mymatch);\n+  }\n \n     /** Returns true if the match succeeded, false if it failed.\n       * The matching is done against this REToken only. Chained\n@@ -106,22 +125,27 @@ void setHitEnd(CharIndexed input, REMatch mymatch) {\n       * subclasses of REToken, which needs a special match method,\n       * do not have to implement this method.\n       */\n-    REMatch matchThis(CharIndexed input, REMatch mymatch) {\n-\tthrow new UnsupportedOperationException(\n-\t    \"This REToken does not have a matchThis method\");\n-    }\n-  \n+  REMatch matchThis (CharIndexed input, REMatch mymatch)\n+  {\n+    throw new\n+      UnsupportedOperationException\n+      (\"This REToken does not have a matchThis method\");\n+  }\n+\n     /** Returns true if the rest of the tokens match, false if they fail. */\n-    protected boolean next(CharIndexed input, REMatch mymatch) {\n-\tREToken nextToken = getNext();\n-\tif (nextToken == null) return true;\n-\treturn nextToken.match(input, mymatch);\n-    }\n+  protected boolean next (CharIndexed input, REMatch mymatch)\n+  {\n+    REToken nextToken = getNext ();\n+    if (nextToken == null)\n+      return true;\n+    return nextToken.match (input, mymatch);\n+  }\n \n     /** Returns the next REToken chained to this REToken. */\n-    REToken getNext() {\n-\treturn (next != null ? next : uncle);\n-    }\n+  REToken getNext ()\n+  {\n+    return (next != null ? next : uncle);\n+  }\n \n     /** Finds a match at the position specified by the given REMatch.\n       * If necessary, adds a BacktrackStack.Backtrack object to backtrackStack\n@@ -132,45 +156,55 @@ REToken getNext() {\n       * @param mymatch Position at which a match should be found\n       * @return REMatch object if a match was found, null otherwise.\n       */\n-    REMatch findMatch(CharIndexed input, REMatch mymatch) {\n-        boolean b = match(input, mymatch);\n-\tif (b) return mymatch;\n-\treturn null;\n-    }\n+  REMatch findMatch (CharIndexed input, REMatch mymatch)\n+  {\n+    boolean b = match (input, mymatch);\n+    if (b)\n+      return mymatch;\n+    return null;\n+  }\n \n-    boolean returnsFixedLengthMatches() {\n-\treturn false;\n-    }\n+  boolean returnsFixedLengthMatches ()\n+  {\n+    return false;\n+  }\n \n-    int findFixedLengthMatches(CharIndexed input, REMatch mymatch, int max) {\n-\tthrow new UnsupportedOperationException(\n-\t    \"This token does not support findFixedLengthMatches\");\n-    }\n+  int findFixedLengthMatches (CharIndexed input, REMatch mymatch, int max)\n+  {\n+    throw new\n+      UnsupportedOperationException\n+      (\"This token does not support findFixedLengthMatches\");\n+  }\n \n     /**\n       * Backtrack to another possibility.\n       * Ordinary REToken cannot do anything if this method is called.\n       */\n-    REMatch backtrack(CharIndexed input, REMatch mymatch, Object param) {\n-\tthrow new IllegalStateException(\"This token cannot be backtracked to\");\n-    }\n+  REMatch backtrack (CharIndexed input, REMatch mymatch, Object param)\n+  {\n+    throw new IllegalStateException (\"This token cannot be backtracked to\");\n+  }\n \n-  boolean chain(REToken token) {\n-      next = token;\n-      return true; // Token was accepted\n+  boolean chain (REToken token)\n+  {\n+    next = token;\n+    return true;\t\t// Token was accepted\n   }\n \n-  abstract void dump(StringBuffer os);\n+  abstract void dump (CPStringBuilder os);\n \n-  void dumpAll(StringBuffer os) {\n-    dump(os);\n-    if (next != null) next.dumpAll(os);\n+  void dumpAll (CPStringBuilder os)\n+  {\n+    dump (os);\n+    if (next != null)\n+      next.dumpAll (os);\n   }\n \n-  public String toString() {\n-    StringBuffer os = new StringBuffer();\n-    dump(os);\n-    return os.toString();\n+  public String toString ()\n+  {\n+    CPStringBuilder os = new CPStringBuilder ();\n+    dump (os);\n+    return os.toString ();\n   }\n \n   /**\n@@ -181,9 +215,12 @@ public String toString() {\n     * @return the lowercase equivalent of the character, if any;\n     * otherwise, the character itself.\n     */\n-  public static char toLowerCase(char ch, boolean unicodeAware) {\n-    if (unicodeAware) return Character.toLowerCase(ch);\n-    if (ch >= 'A' && ch <= 'Z') return (char)(ch + 'a' - 'A');\n+  public static char toLowerCase (char ch, boolean unicodeAware)\n+  {\n+    if (unicodeAware)\n+      return Character.toLowerCase (ch);\n+    if (ch >= 'A' && ch <= 'Z')\n+      return (char) (ch + 'a' - 'A');\n     return ch;\n   }\n \n@@ -195,9 +232,12 @@ public static char toLowerCase(char ch, boolean unicodeAware) {\n     * @return the uppercase equivalent of the character, if any;\n     * otherwise, the character itself.\n     */\n-  public static char toUpperCase(char ch, boolean unicodeAware) {\n-    if (unicodeAware) return Character.toUpperCase(ch);\n-    if (ch >= 'a' && ch <= 'z') return (char)(ch + 'A' - 'a');\n+  public static char toUpperCase (char ch, boolean unicodeAware)\n+  {\n+    if (unicodeAware)\n+      return Character.toUpperCase (ch);\n+    if (ch >= 'a' && ch <= 'z')\n+      return (char) (ch + 'A' - 'a');\n     return ch;\n   }\n "}, {"sha": "c002d0504233b9b3a48c4b8cebb2f47ce0607ac4", "filename": "libjava/classpath/gnu/java/util/regex/RETokenAny.java", "status": "modified", "additions": 50, "deletions": 34, "changes": 84, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenAny.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenAny.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenAny.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,62 +38,78 @@\n \n package gnu.java.util.regex;\n \n-final class RETokenAny extends REToken {\n+import gnu.java.lang.CPStringBuilder;\n+\n+final class RETokenAny extends REToken\n+{\n   /** True if '.' can match a newline (RE_DOT_NEWLINE) */\n-  private boolean newline; \n+  private boolean newline;\n \n   /** True if '.' can't match a null (RE_DOT_NOT_NULL) */\n-  private boolean matchNull;    \n-  \n-  RETokenAny(int subIndex, boolean newline, boolean matchNull) { \n-    super(subIndex);\n+  private boolean matchNull;\n+\n+    RETokenAny (int subIndex, boolean newline, boolean matchNull)\n+  {\n+    super (subIndex);\n     this.newline = newline;\n     this.matchNull = matchNull;\n   }\n \n-  int getMinimumLength() {\n+  int getMinimumLength ()\n+  {\n     return 1;\n   }\n \n-  int getMaximumLength() {\n+  int getMaximumLength ()\n+  {\n     return 1;\n   }\n \n-    REMatch matchThis(CharIndexed input, REMatch mymatch) {\n-      char ch = input.charAt(mymatch.index);\n-      boolean retval = matchOneChar(ch);\n-      if (retval) {\n-        ++mymatch.index;\n-        return mymatch;\n+  REMatch matchThis (CharIndexed input, REMatch mymatch)\n+  {\n+    char ch = input.charAt (mymatch.index);\n+    boolean retval = matchOneChar (ch);\n+    if (retval)\n+      {\n+\t++mymatch.index;\n+\treturn mymatch;\n       }\n-      return null;\n-    }\n-\n-    boolean matchOneChar(char ch) {\n-      if ((ch == CharIndexed.OUT_OF_BOUNDS)\n-\t  || (!newline && (ch == '\\n'))\n-\t  || (matchNull && (ch == 0))) {\n-\t  return false;\n+    return null;\n+  }\n+\n+  boolean matchOneChar (char ch)\n+  {\n+    if ((ch == CharIndexed.OUT_OF_BOUNDS)\n+\t|| (!newline && (ch == '\\n')) || (matchNull && (ch == 0)))\n+      {\n+\treturn false;\n       }\n-      return true;\n+    return true;\n   }\n \n-  boolean returnsFixedLengthMatches() { return true; }\n+  boolean returnsFixedLengthMatches ()\n+  {\n+    return true;\n+  }\n \n-  int findFixedLengthMatches(CharIndexed input, REMatch mymatch, int max) {\n+  int findFixedLengthMatches (CharIndexed input, REMatch mymatch, int max)\n+  {\n     int index = mymatch.index;\n     int numRepeats = 0;\n-    while (true) {\n-\tif (numRepeats >= max) break;\n-        char ch = input.charAt(index++);\n-\tif (! matchOneChar(ch)) break;\n-        numRepeats++;\n-    }\n+    while (true)\n+      {\n+\tif (numRepeats >= max)\n+\t  break;\n+\tchar ch = input.charAt (index++);\n+\tif (!matchOneChar (ch))\n+\t  break;\n+\tnumRepeats++;\n+      }\n     return numRepeats;\n   }\n \n-  void dump(StringBuffer os) {\n-    os.append('.');\n+  void dump (CPStringBuilder os)\n+  {\n+    os.append ('.');\n   }\n }\n-"}, {"sha": "8f146222d9500f565ec607e0c6d357a2ceef6949", "filename": "libjava/classpath/gnu/java/util/regex/RETokenBackRef.java", "status": "modified", "additions": 50, "deletions": 36, "changes": 86, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenBackRef.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenBackRef.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenBackRef.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,49 +38,63 @@\n \n package gnu.java.util.regex;\n \n-final class RETokenBackRef extends REToken {\n+import gnu.java.lang.CPStringBuilder;\n+\n+final class RETokenBackRef extends REToken\n+{\n   private int num;\n   private boolean insens;\n-  \n-  RETokenBackRef(int subIndex, int num, boolean insens) {\n-    super(subIndex);\n+\n+    RETokenBackRef (int subIndex, int num, boolean insens)\n+  {\n+    super (subIndex);\n     this.num = num;\n     this.insens = insens;\n   }\n \n   // should implement getMinimumLength() -- any ideas?\n \n-    REMatch matchThis(CharIndexed input, REMatch mymatch) {\n-\tif (num >= mymatch.start.length) return null;\n-\tif (num >= mymatch.end.length) return null;\n-\tint b,e;\n-\tb = mymatch.start[num];\n-\te = mymatch.end[num];\n-\tif ((b==-1)||(e==-1)) return null; // this shouldn't happen, but...\n-\tif (b < 0) b += 1;\n-\tif (e < 0) e += 1;\n-\tfor (int i=b; i<e; i++) {\n-\t    char c1 = input.charAt(mymatch.index+i-b);\n-\t    char c2 = input.charAt(i);\n-\t    if (c1 != c2) {\n-\t\tif (insens) {\n-\t\t    if (c1 != toLowerCase(c2, unicodeAware) &&\n-\t\t\tc1 != toUpperCase(c2, unicodeAware)) {\n-\t\t\treturn null;\n-\t\t    }\n-\t\t}\n-\t\telse {\n+  REMatch matchThis (CharIndexed input, REMatch mymatch)\n+  {\n+    if (num >= mymatch.start.length)\n+      return null;\n+    if (num >= mymatch.end.length)\n+      return null;\n+    int b, e;\n+    b = mymatch.start[num];\n+    e = mymatch.end[num];\n+    if ((b == -1) || (e == -1))\n+      return null;\t\t// this shouldn't happen, but...\n+    if (b < 0)\n+      b += 1;\n+    if (e < 0)\n+      e += 1;\n+    for (int i = b; i < e; i++)\n+      {\n+\tchar c1 = input.charAt (mymatch.index + i - b);\n+\tchar c2 = input.charAt (i);\n+\tif (c1 != c2)\n+\t  {\n+\t    if (insens)\n+\t      {\n+\t\tif (c1 != toLowerCase (c2, unicodeAware) &&\n+\t\t    c1 != toUpperCase (c2, unicodeAware))\n+\t\t  {\n \t\t    return null;\n-\t\t}\n-\t    }\n-\t}\n-\tmymatch.index += e-b;\n-\treturn mymatch;\n-    }\n-    \n-    void dump(StringBuffer os) {\n-\tos.append('\\\\').append(num);\n-    }\n-}\n-\n+\t\t  }\n+\t      }\n+\t    else\n+\t      {\n+\t\treturn null;\n+\t      }\n+\t  }\n+      }\n+    mymatch.index += e - b;\n+    return mymatch;\n+  }\n \n+  void dump (CPStringBuilder os)\n+  {\n+    os.append ('\\\\').append (num);\n+  }\n+}"}, {"sha": "babcf3e4e939d6efce4e4f38bf78a49963fb244d", "filename": "libjava/classpath/gnu/java/util/regex/RETokenChar.java", "status": "modified", "additions": 105, "deletions": 78, "changes": 183, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenChar.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenChar.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenChar.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,98 +38,125 @@\n \n package gnu.java.util.regex;\n \n-final class RETokenChar extends REToken {\n+import gnu.java.lang.CPStringBuilder;\n+\n+final class RETokenChar extends REToken\n+{\n   private char[] ch;\n   private boolean insens;\n \n-  RETokenChar(int subIndex, char c, boolean ins) {\n-    super(subIndex);\n+    RETokenChar (int subIndex, char c, boolean ins)\n+  {\n+    super (subIndex);\n     insens = ins;\n-    ch = new char [1];\n-    ch[0] = c;\n+    ch = new char[1];\n+      ch[0] = c;\n   }\n \n-  int getMinimumLength() {\n+  int getMinimumLength ()\n+  {\n     return ch.length;\n   }\n-  \n-  int getMaximumLength() {\n+\n+  int getMaximumLength ()\n+  {\n     return ch.length;\n   }\n-  \n-    REMatch matchThis(CharIndexed input, REMatch mymatch) {\n-\tif (matchOneString(input, mymatch.index)) {\n-\t    mymatch.index += matchedLength;\n-\t    return mymatch;\n-\t}\n-\t// java.util.regex.Matcher#hitEnd() requires that the length of\n-\t// partial match be counted.\n+\n+  REMatch matchThis (CharIndexed input, REMatch mymatch)\n+  {\n+    if (matchOneString (input, mymatch.index))\n+      {\n \tmymatch.index += matchedLength;\n-\tinput.setHitEnd(mymatch);\n-\treturn null;\n-    }\n-\n-    private int matchedLength;\n-    private boolean matchOneString(CharIndexed input, int index) {\n-        matchedLength = 0;\n-\tint z = ch.length;\n-\tchar c;\n-\tfor (int i=0; i<z; i++) {\n-\t    c = input.charAt(index+i);\n-\t    if (! charEquals(c, ch[i])) {\n-\t\treturn false;\n-\t    }\n-\t    ++matchedLength;\n-\t}\n-\treturn true;\n-    }\n-\n-    private boolean charEquals(char c1, char c2) {\n-\tif (c1 == c2) return true;\n-\tif (! insens) return false;\n-\tif (toLowerCase(c1, unicodeAware) == c2) return true;\n-\tif (toUpperCase(c1, unicodeAware) == c2) return true;\n-\treturn false;\n-    }\n-\n-    boolean returnsFixedLengthMatches() { return true; }\n-\n-    int findFixedLengthMatches(CharIndexed input, REMatch mymatch, int max) {\n-        int index = mymatch.index;\n-\tint numRepeats = 0;\n-\tint z = ch.length;\n-\twhile (true) {\n-\t    if (numRepeats >= max) break;\n-\t    if (matchOneString(input, index)) {\n-\t        index += z;\n-\t        numRepeats++;\n-\t    }\n-\t    else break;\n-\t}\n-\treturn numRepeats;\n-    }\n+\treturn mymatch;\n+      }\n+    // java.util.regex.Matcher#hitEnd() requires that the length of\n+    // partial match be counted.\n+    mymatch.index += matchedLength;\n+    input.setHitEnd (mymatch);\n+    return null;\n+  }\n \n-  // Overrides REToken.chain() to optimize for strings\n-  boolean chain(REToken next) {\n-    if (next instanceof RETokenChar && ((RETokenChar)next).insens == insens) {\n-      RETokenChar cnext = (RETokenChar) next;\n-      int newsize = ch.length + cnext.ch.length;\n-      \n-      char[] chTemp = new char [newsize];\n-      \n-      System.arraycopy(ch,0,chTemp,0,ch.length);\n-      System.arraycopy(cnext.ch,0,chTemp,ch.length,cnext.ch.length);\n-      \n-      ch = chTemp;\n-      if (cnext.next == null)\n-        return false;\n-      return chain(cnext.next);\n-    } else return super.chain(next);\n+  private int matchedLength;\n+  private boolean matchOneString (CharIndexed input, int index)\n+  {\n+    matchedLength = 0;\n+    int z = ch.length;\n+    char c;\n+    for (int i = 0; i < z; i++)\n+      {\n+\tc = input.charAt (index + i);\n+\tif (!charEquals (c, ch[i]))\n+\t  {\n+\t    return false;\n+\t  }\n+\t++matchedLength;\n+      }\n+    return true;\n   }\n \n-  void dump(StringBuffer os) {\n-    os.append(ch);\n+  private boolean charEquals (char c1, char c2)\n+  {\n+    if (c1 == c2)\n+      return true;\n+    if (!insens)\n+      return false;\n+    if (toLowerCase (c1, unicodeAware) == c2)\n+      return true;\n+    if (toUpperCase (c1, unicodeAware) == c2)\n+      return true;\n+    return false;\n+  }\n+\n+  boolean returnsFixedLengthMatches ()\n+  {\n+    return true;\n   }\n-}\n \n+  int findFixedLengthMatches (CharIndexed input, REMatch mymatch, int max)\n+  {\n+    int index = mymatch.index;\n+    int numRepeats = 0;\n+    int z = ch.length;\n+    while (true)\n+      {\n+\tif (numRepeats >= max)\n+\t  break;\n+\tif (matchOneString (input, index))\n+\t  {\n+\t    index += z;\n+\t    numRepeats++;\n+\t  }\n+\telse\n+\t  break;\n+      }\n+    return numRepeats;\n+  }\n \n+  // Overrides REToken.chain() to optimize for strings\n+  boolean chain (REToken next)\n+  {\n+    if (next instanceof RETokenChar && ((RETokenChar) next).insens == insens)\n+      {\n+\tRETokenChar cnext = (RETokenChar) next;\n+\tint newsize = ch.length + cnext.ch.length;\n+\n+\tchar[] chTemp = new char[newsize];\n+\n+\tSystem.arraycopy (ch, 0, chTemp, 0, ch.length);\n+\tSystem.arraycopy (cnext.ch, 0, chTemp, ch.length, cnext.ch.length);\n+\n+\tch = chTemp;\n+\tif (cnext.next == null)\n+\t  return false;\n+\treturn chain (cnext.next);\n+      }\n+    else\n+      return super.chain (next);\n+  }\n+\n+  void dump (CPStringBuilder os)\n+  {\n+    os.append (ch);\n+  }\n+}"}, {"sha": "33e0febb7b270f2496bfe9c0cfbb54580e134274", "filename": "libjava/classpath/gnu/java/util/regex/RETokenEnd.java", "status": "modified", "additions": 76, "deletions": 49, "changes": 125, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenEnd.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenEnd.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenEnd.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,7 +38,10 @@\n \n package gnu.java.util.regex;\n \n-final class RETokenEnd extends REToken {\n+import gnu.java.lang.CPStringBuilder;\n+\n+final class RETokenEnd extends REToken\n+{\n     /**\n      * Indicates whether this token should match on a line break.\n      */\n@@ -51,74 +54,98 @@ final class RETokenEnd extends REToken {\n    */\n   private boolean fake = false;\n \n-  RETokenEnd(int subIndex,String newline) { \n-    super(subIndex);\n+    RETokenEnd (int subIndex, String newline)\n+  {\n+    super (subIndex);\n     this.newline = newline;\n     this.check_java_line_terminators = false;\n   }\n \n-  RETokenEnd(int subIndex, String newline, boolean b) { \n-    super(subIndex);\n+  RETokenEnd (int subIndex, String newline, boolean b)\n+  {\n+    super (subIndex);\n     this.newline = newline;\n     this.check_java_line_terminators = b;\n   }\n \n-  void setFake(boolean fake) {\n+  void setFake (boolean fake)\n+  {\n     this.fake = fake;\n   }\n \n-  int getMaximumLength() {\n+  int getMaximumLength ()\n+  {\n     return 0;\n   }\n \n-  boolean match(CharIndexed input, REMatch mymatch) {\n-    if (!fake) return super.match(input, mymatch);\n-    return super.matchFake(input, mymatch);\n+  boolean match (CharIndexed input, REMatch mymatch)\n+  {\n+    if (!fake)\n+      return super.match (input, mymatch);\n+    return super.matchFake (input, mymatch);\n   }\n \n-    REMatch matchThis(CharIndexed input, REMatch mymatch) {\n-\tchar ch = input.charAt(mymatch.index);\n-\tif (ch == CharIndexed.OUT_OF_BOUNDS)\n-\t    return ((mymatch.eflags & RE.REG_NOTEOL)>0) ? \n-\t\tnull : mymatch;\n-        if (check_java_line_terminators) {\n-\t    if (ch == '\\n') {\n-                char ch1 = input.charAt(mymatch.index - 1);\n-\t\tif (ch1 == '\\r') return null;\n-\t\treturn mymatch;\n-\t    }\n-\t    if (ch == '\\r') return mymatch;\n-\t    if (ch == '\\u0085') return mymatch; // A next-line character\n-\t    if (ch == '\\u2028') return mymatch; // A line-separator character\n-\t    if (ch == '\\u2029') return mymatch; // A paragraph-separator character\n-\t    return null;\n-\t}\n-\tif (newline != null) {\n-\t    char z;\n-\t    int i = 0; // position in newline\n-\t    do {\n-\t\tz = newline.charAt(i);\n-\t\tif (ch != z) return null;\n-\t\t++i;\n-\t\tch = input.charAt(mymatch.index + i);\n-\t    } while (i < newline.length());\n-\t    \n+  REMatch matchThis (CharIndexed input, REMatch mymatch)\n+  {\n+    char ch = input.charAt (mymatch.index);\n+    if (ch == CharIndexed.OUT_OF_BOUNDS)\n+      return ((mymatch.eflags & RE.REG_NOTEOL) > 0) ? null : mymatch;\n+    if (check_java_line_terminators)\n+      {\n+\tif (ch == '\\n')\n+\t  {\n+\t    char ch1 = input.charAt (mymatch.index - 1);\n+\t    if (ch1 == '\\r')\n+\t      return null;\n \t    return mymatch;\n-\t}\n+\t  }\n+\tif (ch == '\\r')\n+\t  return mymatch;\n+\tif (ch == '\\u0085')\n+\t  return mymatch;\t// A next-line character\n+\tif (ch == '\\u2028')\n+\t  return mymatch;\t// A line-separator character\n+\tif (ch == '\\u2029')\n+\t  return mymatch;\t// A paragraph-separator character\n \treturn null;\n-    }\n+      }\n+    if (newline != null)\n+      {\n+\tchar z;\n+\tint i = 0;\t\t// position in newline\n+\tdo\n+\t  {\n+\t    z = newline.charAt (i);\n+\t    if (ch != z)\n+\t      return null;\n+\t    ++i;\n+\t    ch = input.charAt (mymatch.index + i);\n+\t  }\n+\twhile (i < newline.length ());\n+\n+\treturn mymatch;\n+      }\n+    return null;\n+  }\n \n-    boolean returnsFixedLengthMatches() { return true; }\n+  boolean returnsFixedLengthMatches ()\n+  {\n+    return true;\n+  }\n \n-    int findFixedLengthMatches(CharIndexed input, REMatch mymatch, int max) {\n-        REMatch m = (REMatch) mymatch.clone();\n-\tREToken tk = (REToken) this.clone();\n-\ttk.chain(null);\n-\tif (tk.match(input, m)) return max;\n-\telse return 0;\n-    }\n+  int findFixedLengthMatches (CharIndexed input, REMatch mymatch, int max)\n+  {\n+    REMatch m = (REMatch) mymatch.clone ();\n+    REToken tk = (REToken) this.clone ();\n+    tk.chain (null);\n+    if (tk.match (input, m))\n+      return max;\n+    else\n+      return 0;\n+  }\n \n-  void dump(StringBuffer os) {\n-    os.append('$');\n+  void dump (CPStringBuilder os)\n+  {\n+    os.append ('$');\n   }\n }"}, {"sha": "e4ad61941684c6e91523738efcca0257cdf176ff", "filename": "libjava/classpath/gnu/java/util/regex/RETokenEndOfPreviousMatch.java", "status": "modified", "additions": 44, "deletions": 28, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenEndOfPreviousMatch.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenEndOfPreviousMatch.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenEndOfPreviousMatch.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,36 +37,52 @@\n \n package gnu.java.util.regex;\n \n-class RETokenEndOfPreviousMatch extends RETokenStart {\n+import gnu.java.lang.CPStringBuilder;\n \n-    RETokenEndOfPreviousMatch(int subIndex) {\n-\tsuper(subIndex, null);\n-    }\n+class RETokenEndOfPreviousMatch extends RETokenStart\n+{\n \n-    int getMaximumLength() {\n-        return 0;\n-    }\n-    \n-    REMatch matchThis(CharIndexed input, REMatch mymatch) {\n-\tREMatch lastMatch = input.getLastMatch();\n-\tif (lastMatch == null) return super.matchThis(input, mymatch);\n-\tif (input.getAnchor()+mymatch.index ==\n-\t\tlastMatch.anchor+lastMatch.index) {\n-\t    return mymatch;\n-\t}\n-\telse {\n-\t    return null;\n-\t}\n-    }\n+  RETokenEndOfPreviousMatch (int subIndex)\n+  {\n+    super (subIndex, null);\n+  }\n \n-    boolean returnsFixedLengthmatches() { return true; }\n+  int getMaximumLength ()\n+  {\n+    return 0;\n+  }\n \n-    int findFixedLengthMatches(CharIndexed input, REMatch mymatch, int max) {\n-        if (matchThis(input, mymatch) != null) return max;\n-\telse return 0;\n-    }\n-    \n-    void dump(StringBuffer os) {\n-\tos.append(\"\\\\G\");\n-    }\n+  REMatch matchThis (CharIndexed input, REMatch mymatch)\n+  {\n+    REMatch lastMatch = input.getLastMatch ();\n+    if (lastMatch == null)\n+      return super.matchThis (input, mymatch);\n+    if (input.getAnchor () + mymatch.index ==\n+\tlastMatch.anchor + lastMatch.index)\n+      {\n+\treturn mymatch;\n+      }\n+    else\n+      {\n+\treturn null;\n+      }\n+  }\n+\n+  boolean returnsFixedLengthmatches ()\n+  {\n+    return true;\n+  }\n+\n+  int findFixedLengthMatches (CharIndexed input, REMatch mymatch, int max)\n+  {\n+    if (matchThis (input, mymatch) != null)\n+      return max;\n+    else\n+      return 0;\n+  }\n+\n+  void dump (CPStringBuilder os)\n+  {\n+    os.append (\"\\\\G\");\n+  }\n }"}, {"sha": "0848207f491bb27b19d534092633b81c7149260e", "filename": "libjava/classpath/gnu/java/util/regex/RETokenEndSub.java", "status": "modified", "additions": 35, "deletions": 26, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenEndSub.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenEndSub.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenEndSub.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,34 +37,43 @@\n \n package gnu.java.util.regex;\n \n-final class RETokenEndSub extends REToken {\n-    RETokenEndSub(int subIndex) {\n-\tsuper(subIndex);\n-    }\n+import gnu.java.lang.CPStringBuilder;\n \n-    int getMaximumLength() {\n-      return 0;\n-    }\n-    \n-    REMatch matchThis(CharIndexed input, REMatch mymatch) {\n-\tmymatch.start[subIndex] = mymatch.start1[subIndex];\n-\tmymatch.end[subIndex] = mymatch.index;\n-\treturn mymatch;\n-    }\n+final class RETokenEndSub extends REToken\n+{\n+  RETokenEndSub (int subIndex)\n+  {\n+    super (subIndex);\n+  }\n \n-    REMatch findMatch(CharIndexed input, REMatch mymatch) {\n-\tmymatch.start[subIndex] = mymatch.start1[subIndex];\n-\tmymatch.end[subIndex] = mymatch.index;\n-\treturn super.findMatch(input, mymatch);\n-    }\n+  int getMaximumLength ()\n+  {\n+    return 0;\n+  }\n \n-    void setHitEnd(CharIndexed input, REMatch mymatch) {\n-\t// Do nothing\n-    }\n+  REMatch matchThis (CharIndexed input, REMatch mymatch)\n+  {\n+    mymatch.start[subIndex] = mymatch.start1[subIndex];\n+    mymatch.end[subIndex] = mymatch.index;\n+    return mymatch;\n+  }\n \n-    void dump(StringBuffer os) {\n-\t// handled by RE\n-\t// But add something for debugging.\n-\tos.append(\"(?#RETokenEndSub subIndex=\" + subIndex + \")\");\n-    }\n+  REMatch findMatch (CharIndexed input, REMatch mymatch)\n+  {\n+    mymatch.start[subIndex] = mymatch.start1[subIndex];\n+    mymatch.end[subIndex] = mymatch.index;\n+    return super.findMatch (input, mymatch);\n+  }\n+\n+  void setHitEnd (CharIndexed input, REMatch mymatch)\n+  {\n+    // Do nothing\n+  }\n+\n+  void dump (CPStringBuilder os)\n+  {\n+    // handled by RE\n+    // But add something for debugging.\n+    os.append (\"(?#RETokenEndSub subIndex=\" + subIndex + \")\");\n+  }\n }"}, {"sha": "8ad728df837fa787e9635d1bf6b885b19fdf1559", "filename": "libjava/classpath/gnu/java/util/regex/RETokenIndependent.java", "status": "modified", "additions": 26, "deletions": 19, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenIndependent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenIndependent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenIndependent.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,42 +37,49 @@\n \n package gnu.java.util.regex;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n /**\n  * @author Ito Kazumitsu\n  */\n final class RETokenIndependent extends REToken\n {\n   REToken re;\n \n-  RETokenIndependent(REToken re) throws REException {\n-    super(0);\n+    RETokenIndependent (REToken re) throws REException\n+  {\n+    super (0);\n     this.re = re;\n   }\n \n-  int getMinimumLength() {\n-    return re.getMinimumLength();\n+  int getMinimumLength ()\n+  {\n+    return re.getMinimumLength ();\n   }\n \n-  int getMaximumLength() {\n-    return re.getMaximumLength();\n+  int getMaximumLength ()\n+  {\n+    return re.getMaximumLength ();\n   }\n \n-  REMatch matchThis(CharIndexed input, REMatch mymatch)\n+  REMatch matchThis (CharIndexed input, REMatch mymatch)\n   {\n-    boolean b = re.match(input, mymatch);\n-    if (b) {\n-      // Once we have found a match, we do not see other possible matches.\n-      if (mymatch.backtrackStack != null) mymatch.backtrackStack.clear();\n-      return mymatch;\n+    boolean b = re.match (input, mymatch);\n+    if (b)\n+      {\n+\t// Once we have found a match, we do not see other possible matches.\n+\tif (mymatch.backtrackStack != null)\n+\t  mymatch.backtrackStack.clear ();\n+\treturn mymatch;\n \n-    }\n+      }\n     return null;\n   }\n \n-    void dump(StringBuffer os) {\n-\tos.append(\"(?>\");\n-\tre.dumpAll(os);\n-\tos.append(')');\n-    }\n+  void dump (CPStringBuilder os)\n+  {\n+    os.append (\"(?>\");\n+    re.dumpAll (os);\n+    os.append (')');\n+  }\n }\n-"}, {"sha": "1dc6019380f0f6c9cda292a70d840b2f2a0e04ad", "filename": "libjava/classpath/gnu/java/util/regex/RETokenLookAhead.java", "status": "modified", "additions": 29, "deletions": 21, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenLookAhead.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenLookAhead.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenLookAhead.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.java.util.regex;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n /**\n  * @since gnu.regexp 1.1.3\n  * @author Shashank Bapat\n@@ -46,35 +48,41 @@ final class RETokenLookAhead extends REToken\n   REToken re;\n   boolean negative;\n \n-  RETokenLookAhead(REToken re, boolean negative) throws REException {\n-    super(0);\n+    RETokenLookAhead (REToken re, boolean negative) throws REException\n+  {\n+    super (0);\n     this.re = re;\n     this.negative = negative;\n   }\n \n-  int getMaximumLength() {\n+  int getMaximumLength ()\n+  {\n     return 0;\n   }\n \n-  REMatch matchThis(CharIndexed input, REMatch mymatch)\n+  REMatch matchThis (CharIndexed input, REMatch mymatch)\n   {\n-    REMatch trymatch = (REMatch)mymatch.clone();\n-    if (re.match(input, trymatch)) {\n-      if (negative) return null;\n-      trymatch.index = mymatch.index;\n-      return trymatch;\n-    }\n-    else {\n-      if (negative) return mymatch;\n-      return null;\n-    }\n+    REMatch trymatch = (REMatch) mymatch.clone ();\n+    if (re.match (input, trymatch))\n+      {\n+\tif (negative)\n+\t  return null;\n+\ttrymatch.index = mymatch.index;\n+\treturn trymatch;\n+      }\n+    else\n+      {\n+\tif (negative)\n+\t  return mymatch;\n+\treturn null;\n+      }\n   }\n \n-    void dump(StringBuffer os) {\n-\tos.append(\"(?\");\n-\tos.append(negative ? '!' : '=');\n-\tre.dumpAll(os);\n-\tos.append(')');\n-    }\n+  void dump (CPStringBuilder os)\n+  {\n+    os.append (\"(?\");\n+    os.append (negative ? '!' : '=');\n+    re.dumpAll (os);\n+    os.append (')');\n+  }\n }\n-"}, {"sha": "f61c93c0abbb341657844da377c26094a4136620", "filename": "libjava/classpath/gnu/java/util/regex/RETokenLookBehind.java", "status": "modified", "additions": 66, "deletions": 48, "changes": 114, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenLookBehind.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenLookBehind.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenLookBehind.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.java.util.regex;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n /**\n  * @author Ito Kazumitsu\n  */\n@@ -45,74 +47,90 @@ final class RETokenLookBehind extends REToken\n   REToken re;\n   boolean negative;\n \n-  RETokenLookBehind(REToken re, boolean negative) throws REException {\n-    super(0);\n+    RETokenLookBehind (REToken re, boolean negative) throws REException\n+  {\n+    super (0);\n     this.re = re;\n     this.negative = negative;\n   }\n \n-  int getMaximumLength() {\n+  int getMaximumLength ()\n+  {\n     return 0;\n   }\n \n-  REMatch matchThis(CharIndexed input, REMatch mymatch)\n+  REMatch matchThis (CharIndexed input, REMatch mymatch)\n   {\n-    int max = re.getMaximumLength();\n-    CharIndexed behind = input.lookBehind(mymatch.index, max);\n-    REMatch trymatch = (REMatch)mymatch.clone();\n-    REMatch trymatch1 = (REMatch)mymatch.clone();\n-    REMatch newMatch = null;\n-    int diff = behind.length() - input.length();\n+    int max = re.getMaximumLength ();\n+    CharIndexed behind = input.lookBehind (mymatch.index, max);\n+    REMatch trymatch = (REMatch) mymatch.clone ();\n+    int diff = behind.length () - input.length ();\n     int curIndex = trymatch.index + diff;\n     trymatch.index = 0;\n     trymatch.offset = 0;\n-    RETokenMatchHereOnly stopper = new RETokenMatchHereOnly(curIndex);\n-    REToken re1 = (REToken) re.clone();\n-    re1.chain(stopper);\n-    if (re1.match(behind, trymatch)) {\n-      if (negative) return null;\n-      for (int i = 0; i < trymatch.start.length; i++) {\n-\t  if (trymatch.start[i] != -1 && trymatch.end[i] != -1) {\n-\t      trymatch.start[i] -= diff;\n-\t      if (trymatch.start[i] < 0) trymatch.start[i] -= 1;\n-\t      trymatch.end[i] -= diff;\n-\t      if (trymatch.end[i] < 0) trymatch.end[i] -= 1;\n+    RETokenMatchHereOnly stopper = new RETokenMatchHereOnly (curIndex);\n+    REToken re1 = (REToken) re.clone ();\n+    re1.chain (stopper);\n+    if (re1.match (behind, trymatch))\n+      {\n+\tif (negative)\n+\t  return null;\n+\tfor (int i = 0; i < trymatch.start.length; i++)\n+\t  {\n+\t    if (trymatch.start[i] != -1 && trymatch.end[i] != -1)\n+\t      {\n+\t\ttrymatch.start[i] -= diff;\n+\t\tif (trymatch.start[i] < 0)\n+\t\t  trymatch.start[i] -= 1;\n+\t\ttrymatch.end[i] -= diff;\n+\t\tif (trymatch.end[i] < 0)\n+\t\t  trymatch.end[i] -= 1;\n+\t      }\n \t  }\n+\ttrymatch.index = mymatch.index;\n+\ttrymatch.offset = mymatch.offset;\n+\treturn trymatch;\n+      }\n+    else\n+      {\n+\tif (negative)\n+\t  return mymatch;\n+\treturn null;\n       }\n-      trymatch.index = mymatch.index;\n-      trymatch.offset = mymatch.offset;\n-      return trymatch;\n-    }\n-    else {\n-      if (negative) return mymatch;\n-      return null;\n-    }\n   }\n \n-    void dump(StringBuffer os) {\n-\tos.append(\"(?<\");\n-\tos.append(negative ? '!' : '=');\n-\tre.dumpAll(os);\n-\tos.append(')');\n-    }\n-\n-    private static class RETokenMatchHereOnly extends REToken {\n+  void dump (CPStringBuilder os)\n+  {\n+    os.append (\"(?<\");\n+    os.append (negative ? '!' : '=');\n+    re.dumpAll (os);\n+    os.append (')');\n+  }\n \n-        int getMaximumLength() { return 0; }\n+  private static class RETokenMatchHereOnly extends REToken\n+  {\n \n-\tprivate int index;\n+    int getMaximumLength ()\n+    {\n+      return 0;\n+    }\n \n-\tRETokenMatchHereOnly(int index) {\n-\t    super(0);\n-\t    this.index = index;\n-\t}\n+    private int index;\n \n-\tREMatch matchThis(CharIndexed input, REMatch mymatch) {\n-\t    return (index == mymatch.index ? mymatch : null);\n-\t}\n+    RETokenMatchHereOnly (int index)\n+    {\n+      super (0);\n+      this.index = index;\n+    }\n \n-        void dump(StringBuffer os) {}\n+    REMatch matchThis (CharIndexed input, REMatch mymatch)\n+    {\n+      return (index == mymatch.index ? mymatch : null);\n+    }\n \n+    void dump (CPStringBuilder os)\n+    {\n     }\n-}\n \n+  }\n+}"}, {"sha": "1683cb1bf6796172904a809c515248f29149fcd2", "filename": "libjava/classpath/gnu/java/util/regex/RETokenNamedProperty.java", "status": "modified", "additions": 278, "deletions": 241, "changes": 519, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenNamedProperty.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenNamedProperty.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenNamedProperty.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,303 +38,341 @@\n \n package gnu.java.util.regex;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n \n-final class RETokenNamedProperty extends REToken {\n+final class RETokenNamedProperty extends REToken\n+{\n   String name;\n   boolean insens;\n   boolean negate;\n   Handler handler;\n \n   // Grouped properties\n-  static final byte[] LETTER = new byte[]\n-  { Character.LOWERCASE_LETTER,\n+  static final byte[] LETTER = new byte[]{ Character.LOWERCASE_LETTER,\n     Character.UPPERCASE_LETTER,\n     Character.TITLECASE_LETTER,\n     Character.MODIFIER_LETTER,\n-    Character.OTHER_LETTER };\n-  \n-  static final byte[] MARK = new byte[]\n-  { Character.NON_SPACING_MARK,\n+    Character.OTHER_LETTER\n+  };\n+\n+  static final byte[] MARK = new byte[]{ Character.NON_SPACING_MARK,\n     Character.COMBINING_SPACING_MARK,\n-    Character.ENCLOSING_MARK };\n-  \n-  static final byte[] SEPARATOR = new byte[]\n-  { Character.SPACE_SEPARATOR,\n+    Character.ENCLOSING_MARK\n+  };\n+\n+  static final byte[] SEPARATOR = new byte[]{ Character.SPACE_SEPARATOR,\n     Character.LINE_SEPARATOR,\n-    Character.PARAGRAPH_SEPARATOR };\n-  \n-  static final byte[] SYMBOL = new byte[]\n-  { Character.MATH_SYMBOL,\n+    Character.PARAGRAPH_SEPARATOR\n+  };\n+\n+  static final byte[] SYMBOL = new byte[]{ Character.MATH_SYMBOL,\n     Character.CURRENCY_SYMBOL,\n     Character.MODIFIER_SYMBOL,\n-    Character.OTHER_SYMBOL };\n-  \n-  static final byte[] NUMBER = new byte[]\n-  { Character.DECIMAL_DIGIT_NUMBER,\n+    Character.OTHER_SYMBOL\n+  };\n+\n+  static final byte[] NUMBER = new byte[]{ Character.DECIMAL_DIGIT_NUMBER,\n     Character.LETTER_NUMBER,\n-    Character.OTHER_NUMBER };\n-  \n-  static final byte[] PUNCTUATION = new byte[]\n-  { Character.DASH_PUNCTUATION,\n+    Character.OTHER_NUMBER\n+  };\n+\n+  static final byte[] PUNCTUATION = new byte[]{ Character.DASH_PUNCTUATION,\n     Character.START_PUNCTUATION,\n     Character.END_PUNCTUATION,\n     Character.CONNECTOR_PUNCTUATION,\n     Character.OTHER_PUNCTUATION,\n     Character.INITIAL_QUOTE_PUNCTUATION,\n-    Character.FINAL_QUOTE_PUNCTUATION};\n-  \n-  static final byte[] OTHER = new byte[]\n-  { Character.CONTROL,\n+    Character.FINAL_QUOTE_PUNCTUATION\n+  };\n+\n+  static final byte[] OTHER = new byte[]{ Character.CONTROL,\n     Character.FORMAT,\n     Character.PRIVATE_USE,\n     Character.SURROGATE,\n-    Character.UNASSIGNED };\n+    Character.UNASSIGNED\n+  };\n \n-  RETokenNamedProperty(int subIndex, String name, boolean insens, boolean negate) throws REException {\n-    super(subIndex);\n+  RETokenNamedProperty (int subIndex, String name, boolean insens,\n+\t\t\tboolean negate) throws REException\n+  {\n+    super (subIndex);\n     this.name = name;\n     this.insens = insens;\n     this.negate = negate;\n-    handler = getHandler(name); \n+    handler = getHandler (name);\n   }\n \n-    int getMinimumLength() {\n-\treturn 1;\n-    }\n+  int getMinimumLength ()\n+  {\n+    return 1;\n+  }\n \n-    int getMaximumLength() {\n-\treturn 1;\n-    }\n+  int getMaximumLength ()\n+  {\n+    return 1;\n+  }\n \n-    REMatch matchThis(CharIndexed input, REMatch mymatch) {\n-      char ch = input.charAt(mymatch.index);\n-      boolean retval = matchOneChar(ch);\n-      if (retval) {\n+  REMatch matchThis (CharIndexed input, REMatch mymatch)\n+  {\n+    char ch = input.charAt (mymatch.index);\n+    boolean retval = matchOneChar (ch);\n+    if (retval)\n+      {\n \t++mymatch.index;\n \treturn mymatch;\n       }\n-      return null;\n+    return null;\n   }\n \n-  private boolean matchOneChar(char ch) {\n+  private boolean matchOneChar (char ch)\n+  {\n     if (ch == CharIndexed.OUT_OF_BOUNDS)\n       return false;\n-    \n-    boolean retval = handler.includes(ch);\n-    if (insens) {\n-        retval = retval ||\n-                 handler.includes(toUpperCase(ch, unicodeAware)) ||\n-                 handler.includes(toLowerCase(ch, unicodeAware));\n-    }\n \n-    if (negate) retval = !retval;\n+    boolean retval = handler.includes (ch);\n+    if (insens)\n+      {\n+\tretval = retval ||\n+\t  handler.includes (toUpperCase (ch, unicodeAware)) ||\n+\t  handler.includes (toLowerCase (ch, unicodeAware));\n+      }\n+\n+    if (negate)\n+      retval = !retval;\n     return retval;\n   }\n \n-  boolean returnsFixedLengthMatches() { return true; }\n+  boolean returnsFixedLengthMatches ()\n+  {\n+    return true;\n+  }\n \n-  int findFixedLengthMatches(CharIndexed input, REMatch mymatch, int max) {\n+  int findFixedLengthMatches (CharIndexed input, REMatch mymatch, int max)\n+  {\n     int index = mymatch.index;\n     int numRepeats = 0;\n-    while (true) {\n-\tif (numRepeats >= max) break;\n-\tchar ch = input.charAt(index++);\n-\tif (! matchOneChar(ch)) break;\n+    while (true)\n+      {\n+\tif (numRepeats >= max)\n+\t  break;\n+\tchar ch = input.charAt (index++);\n+\tif (!matchOneChar (ch))\n+\t  break;\n \tnumRepeats++;\n-    }\n+      }\n     return numRepeats;\n   }\n \n-  void dump(StringBuffer os) {\n-    os.append(\"\\\\\")\n-      .append(negate ? \"P\" : \"p\")\n-      .append(\"{\" + name + \"}\");\n+  void dump (CPStringBuilder os)\n+  {\n+    os.append (\"\\\\\").append (negate ? \"P\" : \"p\").append (\"{\" + name + \"}\");\n   }\n \n-  private abstract static class Handler {\n-      public abstract boolean includes(char c);\n+  private abstract static class Handler\n+  {\n+    public abstract boolean includes (char c);\n   }\n \n-  private Handler getHandler(String name) throws REException {\n-      if (name.equals(\"Lower\") ||\n-          name.equals(\"Upper\") ||\n-          // name.equals(\"ASCII\") ||\n-          name.equals(\"Alpha\") ||\n-          name.equals(\"Digit\") ||\n-          name.equals(\"Alnum\") ||\n-          name.equals(\"Punct\") ||\n-          name.equals(\"Graph\") ||\n-          name.equals(\"Print\") ||\n-          name.equals(\"Blank\") ||\n-          name.equals(\"Cntrl\") ||\n-          name.equals(\"XDigit\") ||\n-          name.equals(\"Space\") ) {\n-         return new POSIXHandler(name);\n+  private Handler getHandler (String name) throws REException\n+  {\n+    if (name.equals (\"Lower\") || name.equals (\"Upper\") ||\n+\t// name.equals(\"ASCII\") ||\n+\tname.equals (\"Alpha\") ||\n+\tname.equals (\"Digit\") ||\n+\tname.equals (\"Alnum\") ||\n+\tname.equals (\"Punct\") ||\n+\tname.equals (\"Graph\") ||\n+\tname.equals (\"Print\") ||\n+\tname.equals (\"Blank\") ||\n+\tname.equals (\"Cntrl\") ||\n+\tname.equals (\"XDigit\") || name.equals (\"Space\"))\n+      {\n+\treturn new POSIXHandler (name);\n       }\n-      if (name.startsWith(\"In\")) {\n-\t  try {\n-\t      name = name.substring(2);\n-\t      Character.UnicodeBlock block = Character.UnicodeBlock.forName(name);\n-\t      return new UnicodeBlockHandler(block);\n-\t  }\n-\t  catch (IllegalArgumentException e) {\n-              throw new REException(\"Invalid Unicode block name: \" + name, REException.REG_ESCAPE, 0);\n-\t  }\n+    if (name.startsWith (\"In\"))\n+      {\n+\ttry\n+\t{\n+\t  name = name.substring (2);\n+\t  Character.UnicodeBlock block =\n+\t    Character.UnicodeBlock.forName (name);\n+\t  return new UnicodeBlockHandler (block);\n+\t}\n+\tcatch (IllegalArgumentException e)\n+\t{\n+\t  throw new REException (\"Invalid Unicode block name: \" + name,\n+\t\t\t\t REException.REG_ESCAPE, 0);\n+\t}\n       }\n-      if (name.startsWith(\"Is\")) {\n-          name = name.substring(2);\n+    if (name.startsWith (\"Is\"))\n+      {\n+\tname = name.substring (2);\n       }\n \n-      // \"grouped properties\"\n-      if (name.equals(\"L\"))\n-\t  return new UnicodeCategoriesHandler(LETTER);\n-      if (name.equals(\"M\"))\n-\t  return new UnicodeCategoriesHandler(MARK);\n-      if (name.equals(\"Z\"))\n-\t  return new UnicodeCategoriesHandler(SEPARATOR);\n-      if (name.equals(\"S\"))\n-\t  return new UnicodeCategoriesHandler(SYMBOL);\n-      if (name.equals(\"N\"))\n-\t  return new UnicodeCategoriesHandler(NUMBER);\n-      if (name.equals(\"P\"))\n-\t  return new UnicodeCategoriesHandler(PUNCTUATION);\n-      if (name.equals(\"C\"))\n-\t  return new UnicodeCategoriesHandler(OTHER);\n-\n-      if (name.equals(\"Mc\"))\n-          return new UnicodeCategoryHandler(Character.COMBINING_SPACING_MARK);\n-      if (name.equals(\"Pc\"))\n-          return new UnicodeCategoryHandler(Character.CONNECTOR_PUNCTUATION);\n-      if (name.equals(\"Cc\"))\n-          return new UnicodeCategoryHandler(Character.CONTROL);\n-      if (name.equals(\"Sc\"))\n-          return new UnicodeCategoryHandler(Character.CURRENCY_SYMBOL);\n-      if (name.equals(\"Pd\"))\n-          return new UnicodeCategoryHandler(Character.DASH_PUNCTUATION);\n-      if (name.equals(\"Nd\"))\n-          return new UnicodeCategoryHandler(Character.DECIMAL_DIGIT_NUMBER);\n-      if (name.equals(\"Me\"))\n-          return new UnicodeCategoryHandler(Character.ENCLOSING_MARK);\n-      if (name.equals(\"Pe\"))\n-          return new UnicodeCategoryHandler(Character.END_PUNCTUATION);\n-      if (name.equals(\"Pf\"))\n-          return new UnicodeCategoryHandler(Character.FINAL_QUOTE_PUNCTUATION);\n-      if (name.equals(\"Cf\"))\n-          return new UnicodeCategoryHandler(Character.FORMAT);\n-      if (name.equals(\"Pi\"))\n-          return new UnicodeCategoryHandler(Character.INITIAL_QUOTE_PUNCTUATION);\n-      if (name.equals(\"Nl\"))\n-          return new UnicodeCategoryHandler(Character.LETTER_NUMBER);\n-      if (name.equals(\"Zl\"))\n-          return new UnicodeCategoryHandler(Character.LINE_SEPARATOR);\n-      if (name.equals(\"Ll\"))\n-          return new UnicodeCategoryHandler(Character.LOWERCASE_LETTER);\n-      if (name.equals(\"Sm\"))\n-          return new UnicodeCategoryHandler(Character.MATH_SYMBOL);\n-      if (name.equals(\"Lm\"))\n-          return new UnicodeCategoryHandler(Character.MODIFIER_LETTER);\n-      if (name.equals(\"Sk\"))\n-          return new UnicodeCategoryHandler(Character.MODIFIER_SYMBOL);\n-      if (name.equals(\"Mn\"))\n-          return new UnicodeCategoryHandler(Character.NON_SPACING_MARK);\n-      if (name.equals(\"Lo\"))\n-          return new UnicodeCategoryHandler(Character.OTHER_LETTER);\n-      if (name.equals(\"No\"))\n-          return new UnicodeCategoryHandler(Character.OTHER_NUMBER);\n-      if (name.equals(\"Po\"))\n-          return new UnicodeCategoryHandler(Character.OTHER_PUNCTUATION);\n-      if (name.equals(\"So\"))\n-          return new UnicodeCategoryHandler(Character.OTHER_SYMBOL);\n-      if (name.equals(\"Zp\"))\n-          return new UnicodeCategoryHandler(Character.PARAGRAPH_SEPARATOR);\n-      if (name.equals(\"Co\"))\n-          return new UnicodeCategoryHandler(Character.PRIVATE_USE);\n-      if (name.equals(\"Zs\"))\n-          return new UnicodeCategoryHandler(Character.SPACE_SEPARATOR);\n-      if (name.equals(\"Ps\"))\n-          return new UnicodeCategoryHandler(Character.START_PUNCTUATION);\n-      if (name.equals(\"Cs\"))\n-          return new UnicodeCategoryHandler(Character.SURROGATE);\n-      if (name.equals(\"Lt\"))\n-          return new UnicodeCategoryHandler(Character.TITLECASE_LETTER);\n-      if (name.equals(\"Cn\"))\n-          return new UnicodeCategoryHandler(Character.UNASSIGNED);\n-      if (name.equals(\"Lu\"))\n-          return new UnicodeCategoryHandler(Character.UPPERCASE_LETTER);\n-      if (name.equals(\"all\"))\n-\treturn new Handler() \n-\t  {\n-\t    public boolean includes(char c)\n-\t    {\n-\t      return true;\n-\t    }\n-\t  };\n-      if (name.startsWith(\"java\"))\n+    // \"grouped properties\"\n+    if (name.equals (\"L\"))\n+      return new UnicodeCategoriesHandler (LETTER);\n+    if (name.equals (\"M\"))\n+      return new UnicodeCategoriesHandler (MARK);\n+    if (name.equals (\"Z\"))\n+      return new UnicodeCategoriesHandler (SEPARATOR);\n+    if (name.equals (\"S\"))\n+      return new UnicodeCategoriesHandler (SYMBOL);\n+    if (name.equals (\"N\"))\n+      return new UnicodeCategoriesHandler (NUMBER);\n+    if (name.equals (\"P\"))\n+      return new UnicodeCategoriesHandler (PUNCTUATION);\n+    if (name.equals (\"C\"))\n+      return new UnicodeCategoriesHandler (OTHER);\n+\n+    if (name.equals (\"Mc\"))\n+      return new UnicodeCategoryHandler (Character.COMBINING_SPACING_MARK);\n+    if (name.equals (\"Pc\"))\n+      return new UnicodeCategoryHandler (Character.CONNECTOR_PUNCTUATION);\n+    if (name.equals (\"Cc\"))\n+      return new UnicodeCategoryHandler (Character.CONTROL);\n+    if (name.equals (\"Sc\"))\n+      return new UnicodeCategoryHandler (Character.CURRENCY_SYMBOL);\n+    if (name.equals (\"Pd\"))\n+      return new UnicodeCategoryHandler (Character.DASH_PUNCTUATION);\n+    if (name.equals (\"Nd\"))\n+      return new UnicodeCategoryHandler (Character.DECIMAL_DIGIT_NUMBER);\n+    if (name.equals (\"Me\"))\n+      return new UnicodeCategoryHandler (Character.ENCLOSING_MARK);\n+    if (name.equals (\"Pe\"))\n+      return new UnicodeCategoryHandler (Character.END_PUNCTUATION);\n+    if (name.equals (\"Pf\"))\n+      return new UnicodeCategoryHandler (Character.FINAL_QUOTE_PUNCTUATION);\n+    if (name.equals (\"Cf\"))\n+      return new UnicodeCategoryHandler (Character.FORMAT);\n+    if (name.equals (\"Pi\"))\n+      return new UnicodeCategoryHandler (Character.INITIAL_QUOTE_PUNCTUATION);\n+    if (name.equals (\"Nl\"))\n+      return new UnicodeCategoryHandler (Character.LETTER_NUMBER);\n+    if (name.equals (\"Zl\"))\n+      return new UnicodeCategoryHandler (Character.LINE_SEPARATOR);\n+    if (name.equals (\"Ll\"))\n+      return new UnicodeCategoryHandler (Character.LOWERCASE_LETTER);\n+    if (name.equals (\"Sm\"))\n+      return new UnicodeCategoryHandler (Character.MATH_SYMBOL);\n+    if (name.equals (\"Lm\"))\n+      return new UnicodeCategoryHandler (Character.MODIFIER_LETTER);\n+    if (name.equals (\"Sk\"))\n+      return new UnicodeCategoryHandler (Character.MODIFIER_SYMBOL);\n+    if (name.equals (\"Mn\"))\n+      return new UnicodeCategoryHandler (Character.NON_SPACING_MARK);\n+    if (name.equals (\"Lo\"))\n+      return new UnicodeCategoryHandler (Character.OTHER_LETTER);\n+    if (name.equals (\"No\"))\n+      return new UnicodeCategoryHandler (Character.OTHER_NUMBER);\n+    if (name.equals (\"Po\"))\n+      return new UnicodeCategoryHandler (Character.OTHER_PUNCTUATION);\n+    if (name.equals (\"So\"))\n+      return new UnicodeCategoryHandler (Character.OTHER_SYMBOL);\n+    if (name.equals (\"Zp\"))\n+      return new UnicodeCategoryHandler (Character.PARAGRAPH_SEPARATOR);\n+    if (name.equals (\"Co\"))\n+      return new UnicodeCategoryHandler (Character.PRIVATE_USE);\n+    if (name.equals (\"Zs\"))\n+      return new UnicodeCategoryHandler (Character.SPACE_SEPARATOR);\n+    if (name.equals (\"Ps\"))\n+      return new UnicodeCategoryHandler (Character.START_PUNCTUATION);\n+    if (name.equals (\"Cs\"))\n+      return new UnicodeCategoryHandler (Character.SURROGATE);\n+    if (name.equals (\"Lt\"))\n+      return new UnicodeCategoryHandler (Character.TITLECASE_LETTER);\n+    if (name.equals (\"Cn\"))\n+      return new UnicodeCategoryHandler (Character.UNASSIGNED);\n+    if (name.equals (\"Lu\"))\n+      return new UnicodeCategoryHandler (Character.UPPERCASE_LETTER);\n+    if (name.equals (\"all\"))\n+      return new Handler ()\n+      {\n+\tpublic boolean includes (char c)\n+\t{\n+\t  return true;\n+\t}\n+      };\n+    if (name.startsWith (\"java\"))\n+      {\n+\ttry\n \t{\n-\t  try\n-\t    {\n-\t      Method m = Character.class.getMethod(\"is\" + name.substring(4),\n-\t\t\t\t\t\t   Character.TYPE);\n-\t      return new JavaCategoryHandler(m);\n-\t    }\n-\t  catch (NoSuchMethodException e)\n-\t    {\n-\t      throw new REException(\"Unsupported Java handler: \" + name, e,\n-\t\t\t\t    REException.REG_ESCAPE, 0);\n-\t    }\n+\t  Method m = Character.class.getMethod (\"is\" + name.substring (4),\n+\t\t\t\t\t\tCharacter.TYPE);\n+\t  return new JavaCategoryHandler (m);\n \t}\n-      throw new REException(\"unsupported name \" + name, REException.REG_ESCAPE, 0);\n+\tcatch (NoSuchMethodException e)\n+\t{\n+\t  throw new REException (\"Unsupported Java handler: \" + name, e,\n+\t\t\t\t REException.REG_ESCAPE, 0);\n+\t}\n+      }\n+    throw new REException (\"unsupported name \" + name, REException.REG_ESCAPE,\n+\t\t\t   0);\n   }\n \n-  private static class POSIXHandler extends Handler {\n-      private RETokenPOSIX retoken;\n-      public POSIXHandler(String name) {\n-            int posixId = RETokenPOSIX.intValue(name.toLowerCase());\n-            if (posixId != -1)\n-              retoken = new RETokenPOSIX(0,posixId,false,false);\n-\t    else\n-              throw new RuntimeException(\"Unknown posix ID: \" + name);\n-      }\n-      public boolean includes(char c) {\n-          return retoken.matchOneChar(c);\n-      }\n+  private static class POSIXHandler extends Handler\n+  {\n+    private RETokenPOSIX retoken;\n+    public POSIXHandler (String name)\n+    {\n+      int posixId = RETokenPOSIX.intValue (name.toLowerCase ());\n+      if (posixId != -1)\n+\t  retoken = new RETokenPOSIX (0, posixId, false, false);\n+      else\n+\t  throw new RuntimeException (\"Unknown posix ID: \" + name);\n+    }\n+    public boolean includes (char c)\n+    {\n+      return retoken.matchOneChar (c);\n+    }\n   }\n \n-  private static class UnicodeCategoryHandler extends Handler {\n-      public UnicodeCategoryHandler(byte category) {\n-          this.category = (int)category;\n-      }\n-      private int category;\n-      public boolean includes(char c) {\n-          return Character.getType(c) == category;\n-      }\n+  private static class UnicodeCategoryHandler extends Handler\n+  {\n+    public UnicodeCategoryHandler (byte category)\n+    {\n+      this.category = (int) category;\n+    }\n+    private int category;\n+    public boolean includes (char c)\n+    {\n+      return Character.getType (c) == category;\n+    }\n   }\n \n-  private static class UnicodeCategoriesHandler extends Handler {\n-      public UnicodeCategoriesHandler(byte[] categories) {\n-          this.categories = categories;\n-      }\n-      private byte[] categories;\n-      public boolean includes(char c) {\n-\t  int category = Character.getType(c);\n-          for (int i = 0; i < categories.length; i++)\n-              if (category == categories[i])\n-\t          return true;\n-\t  return false;\n-      }\n+  private static class UnicodeCategoriesHandler extends Handler\n+  {\n+    public UnicodeCategoriesHandler (byte[]categories)\n+    {\n+      this.categories = categories;\n+    }\n+    private byte[] categories;\n+    public boolean includes (char c)\n+    {\n+      int category = Character.getType (c);\n+      for (int i = 0; i < categories.length; i++)\n+\tif (category == categories[i])\n+\t  return true;\n+      return false;\n+    }\n   }\n \n-  private static class UnicodeBlockHandler extends Handler {\n-      public UnicodeBlockHandler(Character.UnicodeBlock block) {\n-\t  this.block = block;\n-      }\n-      private Character.UnicodeBlock block;\n-      public boolean includes(char c) {\n-\t  Character.UnicodeBlock cblock = Character.UnicodeBlock.of(c);\n-\t  return (cblock != null && cblock.equals(block));\n-      }\n+  private static class UnicodeBlockHandler extends Handler\n+  {\n+    public UnicodeBlockHandler (Character.UnicodeBlock block)\n+    {\n+      this.block = block;\n+    }\n+    private Character.UnicodeBlock block;\n+    public boolean includes (char c)\n+    {\n+      Character.UnicodeBlock cblock = Character.UnicodeBlock.of (c);\n+      return (cblock != null && cblock.equals (block));\n+    }\n   }\n \n   /**\n@@ -343,30 +381,29 @@ public boolean includes(char c) {\n    *\n    * @author Andrew John Hughes (gnu_andrew@member.fsf.org)\n    */\n-  private static class JavaCategoryHandler \n-    extends Handler \n+  private static class JavaCategoryHandler extends Handler\n   {\n     private Method method;\n \n-    public JavaCategoryHandler(Method m) \n+    public JavaCategoryHandler (Method m)\n     {\n       this.method = m;\n     }\n \n-    public boolean includes(char c) \n+    public boolean includes (char c)\n     {\n       try\n-\t{\n-\t  return (Boolean) method.invoke(null, c);\n-\t}\n+      {\n+\treturn (Boolean) method.invoke (null, c);\n+      }\n       catch (IllegalAccessException e)\n-\t{\n-\t  throw new InternalError(\"Unable to access method \" + method);\n-\t}\n+      {\n+\tthrow new InternalError (\"Unable to access method \" + method);\n+      }\n       catch (InvocationTargetException e)\n-\t{\n-\t  throw new InternalError(\"Error invoking \" + method);\n-\t}\n+      {\n+\tthrow new InternalError (\"Error invoking \" + method);\n+      }\n     }\n   }\n "}, {"sha": "fcae3c2d1d9b558faf8150b4c9617ccfbdc28cdf", "filename": "libjava/classpath/gnu/java/util/regex/RETokenOneOf.java", "status": "modified", "additions": 211, "deletions": 160, "changes": 371, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenOneOf.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenOneOf.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenOneOf.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -36,23 +36,29 @@\n exception statement from your version. */\n \n package gnu.java.util.regex;\n-import java.util.Vector;\n-import java.util.Stack;\n \n-final class RETokenOneOf extends REToken {\n-  private Vector options;\n+import gnu.java.lang.CPStringBuilder;\n+\n+import java.util.ArrayDeque;\n+import java.util.ArrayList;\n+import java.util.Deque;\n+import java.util.List;\n+\n+final class RETokenOneOf extends REToken\n+{\n+  private final List < REToken > options;\n   private boolean negative;\n   // True if this RETokenOneOf is supposed to match only one character,\n   // which is typically the case of a character class expression.\n   private boolean matchesOneChar;\n \n-  private Vector addition;\n-  // This Vector addition is used to store nested character classes.\n+  private final List < Object > addition;\n+  // This ArrayList addition is used to store nested character classes.\n   // For example, if the original expression is\n   //    [2-7a-c[f-k][m-z]&&[^p-v][st]]\n-  // the basic part /2-7a-c/ is stored in the Vector options, and\n+  // the basic part /2-7a-c/ is stored in the ArrayList options, and\n   // the additional part /[f-k][m-z]&&[^p-v][st]/ is stored in the\n-  // Vector addition in the following order (Reverse Polish Notation):\n+  // ArrayList addition in the following order (Reverse Polish Notation):\n   //           -- The matching result of the basic part is assumed here. \n   //    [f-k]  -- REToken\n   //    \"|\"    -- or\n@@ -65,217 +71,262 @@ final class RETokenOneOf extends REToken {\n   //    \"|\"    -- or\n   //    \"&\"    -- and\n   //\n-  // As it is clear from the explanation above, the Vector addition is\n+  // As it is clear from the explanation above, the ArrayList addition is\n   // effective only when this REToken originates from a character class\n   // expression.\n \n   // This constructor is used for convenience when we know the set beforehand,\n   // e.g. \\d --> new RETokenOneOf(\"0123456789\",false, ..)\n   //      \\D --> new RETokenOneOf(\"0123456789\",true, ..)\n \n-  RETokenOneOf(int subIndex, String optionsStr, boolean negative, boolean insens) {\n-    super(subIndex);\n-    options = new Vector();\n+    RETokenOneOf (int subIndex, String optionsStr, boolean negative,\n+\t\t  boolean insens)\n+  {\n+    super (subIndex);\n+    options = new ArrayList < REToken > ();\n     this.negative = negative;\n-    for (int i = 0; i < optionsStr.length(); i++)\n-      options.addElement(new RETokenChar(subIndex,optionsStr.charAt(i),insens));\n+    for (int i = 0; i < optionsStr.length (); i++)\n+      options.add (new RETokenChar (subIndex, optionsStr.charAt (i), insens));\n     matchesOneChar = true;\n+    addition = null;\n   }\n \n-  RETokenOneOf(int subIndex, Vector options, boolean negative) {\n-    super(subIndex);\n-    this.options = options;\n-    this.negative = negative;\n-    matchesOneChar = negative;\n+  RETokenOneOf (int subIndex, List < REToken > options, boolean negative)\n+  {\n+    this (subIndex, options, null, negative);\n   }\n \n-  RETokenOneOf(int subIndex, Vector options, Vector addition, boolean negative) {\n-    super(subIndex);\n+  RETokenOneOf (int subIndex, List < REToken > options,\n+\t\tList < Object > addition, boolean negative)\n+  {\n+    super (subIndex);\n     this.options = options;\n     this.addition = addition;\n     this.negative = negative;\n     matchesOneChar = (negative || addition != null);\n   }\n \n-  int getMinimumLength() {\n-    if (matchesOneChar) return 1;\n+  int getMinimumLength ()\n+  {\n+    if (matchesOneChar)\n+      return 1;\n     int min = Integer.MAX_VALUE;\n     int x;\n-    for (int i=0; i < options.size(); i++) {\n-      if ((x = ((REToken) options.elementAt(i)).getMinimumLength()) < min)\n-\tmin = x;\n-    }\n+  for (REToken t:options)\n+      {\n+\tif ((x = t.getMinimumLength ()) < min)\n+\t  min = x;\n+      }\n     return min;\n   }\n \n-  int getMaximumLength() {\n-    if (matchesOneChar) return 1;\n+  int getMaximumLength ()\n+  {\n+    if (matchesOneChar)\n+      return 1;\n     int max = 0;\n     int x;\n-    for (int i=0; i < options.size(); i++) {\n-      if ((x = ((REToken) options.elementAt(i)).getMaximumLength()) > max)\n-\tmax = x;\n-    }\n+  for (REToken t:options)\n+      {\n+\tif ((x = t.getMaximumLength ()) > max)\n+\t  max = x;\n+      }\n     return max;\n   }\n \n-    boolean match(CharIndexed input, REMatch mymatch) {\n-      setHitEnd(input, mymatch);\n-      if (matchesOneChar) return matchOneChar(input, mymatch);\n-      else return matchOneRE(input, mymatch);\n-    }\n+  boolean match (CharIndexed input, REMatch mymatch)\n+  {\n+    setHitEnd (input, mymatch);\n+    if (matchesOneChar)\n+      return matchOneChar (input, mymatch);\n+    else\n+      return matchOneRE (input, mymatch);\n+  }\n \n-    boolean matchOneChar(CharIndexed input, REMatch mymatch) {\n-      REMatch tryMatch;\n-      boolean tryOnly;\n-      if (addition == null) {\n-\t  tryMatch = mymatch;\n-\t  tryOnly = false;\n+  boolean matchOneChar (CharIndexed input, REMatch mymatch)\n+  {\n+    REMatch tryMatch;\n+    boolean tryOnly;\n+    if (addition == null)\n+      {\n+\ttryMatch = mymatch;\n+\ttryOnly = false;\n       }\n-      else {\n-\t  tryMatch = (REMatch) mymatch.clone();\n-\t  tryOnly = true;\n+    else\n+      {\n+\ttryMatch = (REMatch) mymatch.clone ();\n+\ttryOnly = true;\n       }\n-      boolean b = negative ?\n-        matchN(input, tryMatch, tryOnly) :\n-        matchP(input, tryMatch, tryOnly);\n-      if (addition == null) return b;\n+    boolean b = negative ?\n+      matchN (input, tryMatch, tryOnly) : matchP (input, tryMatch, tryOnly);\n+    if (addition == null)\n+      return b;\n \n-      Stack stack = new Stack();\n-      stack.push(new Boolean(b));\n-      for (int i=0; i < addition.size(); i++) {\n-\tObject obj = addition.elementAt(i);\n-\tif (obj instanceof REToken) {\n-\t  b = ((REToken)obj).match(input, (REMatch)mymatch.clone());\n-\t  stack.push(new Boolean(b));\n-\t}\n-\telse if (obj instanceof Boolean) {\n-\t  stack.push(obj);\n-\t}\n-\telse if (obj.equals(\"|\")) {\n-\t  b = ((Boolean)stack.pop()).booleanValue();\n-\t  b = ((Boolean)stack.pop()).booleanValue() || b;\n-\t  stack.push(new Boolean(b));\n-\t}\n-\telse if (obj.equals(\"&\")) {\n-\t  b = ((Boolean)stack.pop()).booleanValue();\n-\t  b = ((Boolean)stack.pop()).booleanValue() && b;\n-\t  stack.push(new Boolean(b));\n-\t}\n-\telse {\n-\t  throw new RuntimeException(\"Invalid object found\");\n-\t}\n+    final Deque < Boolean > stack = new ArrayDeque < Boolean > ();\n+    stack.push (new Boolean (b));\n+  for (Object obj:addition)\n+      {\n+\tif (obj instanceof REToken)\n+\t  {\n+\t    b = ((REToken) obj).match (input, (REMatch) mymatch.clone ());\n+\t    stack.push (new Boolean (b));\n+\t  }\n+\telse if (obj instanceof Boolean)\n+\t  {\n+\t    stack.push ((Boolean) obj);\n+\t  }\n+\telse if (obj.equals (\"|\"))\n+\t  {\n+\t    b = stack.pop ();\n+\t    b = stack.pop () || b;\n+\t    stack.push (new Boolean (b));\n+\t  }\n+\telse if (obj.equals (\"&\"))\n+\t  {\n+\t    b = stack.pop ();\n+\t    b = stack.pop () && b;\n+\t    stack.push (new Boolean (b));\n+\t  }\n+\telse\n+\t  {\n+\t    throw new RuntimeException (\"Invalid object found\");\n+\t  }\n       }\n-      b = ((Boolean)stack.pop()).booleanValue();\n-      if (b) {\n-        ++mymatch.index;\n-        return next(input, mymatch);\n+    if (stack.pop ())\n+      {\n+\t++mymatch.index;\n+\treturn next (input, mymatch);\n       }\n-      return false;\n-    }\n+    return false;\n+  }\n \n-    private boolean matchN(CharIndexed input, REMatch mymatch, boolean tryOnly) {\n-      if (input.charAt(mymatch.index) == CharIndexed.OUT_OF_BOUNDS) \n-        return false;\n+  private boolean matchN (CharIndexed input, REMatch mymatch, boolean tryOnly)\n+  {\n+    if (input.charAt (mymatch.index) == CharIndexed.OUT_OF_BOUNDS)\n+      return false;\n \n-      REMatch newMatch = null;\n-      REMatch last = null;\n-      REToken tk;\n-      for (int i=0; i < options.size(); i++) {\n-\ttk = (REToken) options.elementAt(i);\n-\tREMatch tryMatch = (REMatch) mymatch.clone();\n-\tif (tk.match(input, tryMatch)) { // match was successful\n+  for (REToken tk:options)\n+      {\n+\tREMatch tryMatch = (REMatch) mymatch.clone ();\n+\tif (tk.match (input, tryMatch))\n+\t  {\t\t\t// match was successful\n \t    return false;\n-\t} // is a match\n-      } // try next option\n+\t  }\t\t\t// is a match\n+      }\t\t\t\t// try next option\n \n-      if (tryOnly) return true;\n-      ++mymatch.index;\n-      return next(input, mymatch);\n-    }\n+    if (tryOnly)\n+      return true;\n+    ++mymatch.index;\n+    return next (input, mymatch);\n+  }\n \n-    private boolean matchP(CharIndexed input, REMatch mymatch, boolean tryOnly) {\n-      REToken tk;\n-      for (int i=0; i < options.size(); i++) {\n-\ttk = (REToken) options.elementAt(i);\n-\tREMatch tryMatch = (REMatch) mymatch.clone();\n-\tif (tk.match(input, tryMatch)) { // match was successful\n-\t  if (tryOnly) return true;\n-\t  if (next(input, tryMatch)) {\n-\t      mymatch.assignFrom(tryMatch);\n+  private boolean matchP (CharIndexed input, REMatch mymatch, boolean tryOnly)\n+  {\n+  for (REToken tk:options)\n+      {\n+\tREMatch tryMatch = (REMatch) mymatch.clone ();\n+\tif (tk.match (input, tryMatch))\n+\t  {\t\t\t// match was successful\n+\t    if (tryOnly)\n \t      return true;\n+\t    if (next (input, tryMatch))\n+\t      {\n+\t\tmymatch.assignFrom (tryMatch);\n+\t\treturn true;\n+\t      }\n \t  }\n-\t}\n       }\n-      return false;\n-    }\n+    return false;\n+  }\n \n-  private boolean matchOneRE(CharIndexed input, REMatch mymatch) {\n-      REMatch newMatch = findMatch(input, mymatch);\n-      if (newMatch != null) {\n-\t  mymatch.assignFrom(newMatch);\n-\t  return true;\n+  private boolean matchOneRE (CharIndexed input, REMatch mymatch)\n+  {\n+    REMatch newMatch = findMatch (input, mymatch);\n+    if (newMatch != null)\n+      {\n+\tmymatch.assignFrom (newMatch);\n+\treturn true;\n       }\n-      return false;\t\n+    return false;\n   }\n \n-  REMatch findMatch(CharIndexed input, REMatch mymatch) {\n-      if (matchesOneChar) return super.findMatch(input, mymatch);\n-      return findMatch(input, mymatch, 0);\n+  REMatch findMatch (CharIndexed input, REMatch mymatch)\n+  {\n+    if (matchesOneChar)\n+      return super.findMatch (input, mymatch);\n+    return findMatch (input, mymatch, 0);\n   }\n \n-  REMatch backtrack(CharIndexed input, REMatch mymatch, Object param) {\n-      return findMatch(input, mymatch, ((Integer)param).intValue());\n+  REMatch backtrack (CharIndexed input, REMatch mymatch, Object param)\n+  {\n+    return findMatch (input, mymatch, ((Integer) param).intValue ());\n   }\n \n-  private REMatch findMatch(CharIndexed input, REMatch mymatch, int optionIndex) {\n-      for (int i = optionIndex; i < options.size(); i++) {\n-          REToken tk = (REToken) options.elementAt(i);\n-\t  tk = (REToken) tk.clone();\n-\t  tk.chain(getNext());\n-          REMatch tryMatch = (REMatch) mymatch.clone();\n-          if (tryMatch.backtrackStack == null) {\n-            tryMatch.backtrackStack = new BacktrackStack();\n+  private REMatch findMatch (CharIndexed input, REMatch mymatch,\n+\t\t\t     int optionIndex)\n+  {\n+    for (int i = optionIndex; i < options.size (); i++)\n+      {\n+\tREToken tk = options.get (i);\n+\ttk = (REToken) tk.clone ();\n+\ttk.chain (getNext ());\n+\tREMatch tryMatch = (REMatch) mymatch.clone ();\n+\tif (tryMatch.backtrackStack == null)\n+\t  {\n+\t    tryMatch.backtrackStack = new BacktrackStack ();\n \t  }\n-\t  boolean stackPushed = false;\n-\t  if (i + 1 < options.size()) {\n-            tryMatch.backtrackStack.push(new BacktrackStack.Backtrack(\n-              this, input, mymatch, new Integer(i + 1)));\n+\tboolean stackPushed = false;\n+\tif (i + 1 < options.size ())\n+\t  {\n+\t    tryMatch.backtrackStack.push (new BacktrackStack.\n+\t\t\t\t\t  Backtrack (this, input, mymatch,\n+\t\t\t\t\t\t     i + 1));\n \t    stackPushed = true;\n-          }\n-\t  boolean b = tk.match(input, tryMatch);\n-\t  if (b) {\n-\t     return tryMatch;\n \t  }\n-\t  if (stackPushed) tryMatch.backtrackStack.pop();\n+\tif (tk.match (input, tryMatch))\n+\t  {\n+\t    return tryMatch;\n+\t  }\n+\tif (stackPushed)\n+\t  tryMatch.backtrackStack.pop ();\n       }\n-      return null; \n+    return null;\n   }\n \n-  boolean returnsFixedLengthMatches() { return matchesOneChar; }\n+  boolean returnsFixedLengthMatches ()\n+  {\n+    return matchesOneChar;\n+  }\n \n-  int findFixedLengthMatches(CharIndexed input, REMatch mymatch, int max) {\n-      if (!matchesOneChar)\n-          return super.findFixedLengthMatches(input, mymatch, max);\n-      int numRepeats = 0;\n-      REMatch m = (REMatch) mymatch.clone();\n-      REToken tk = (REToken) this.clone();\n-      tk.chain(null);\n-      while (true) {\n-\t  if (numRepeats >= max) break;\n-          m = tk.findMatch(input, m);\n-          if (m == null) break;\n-          numRepeats++;\n+  int findFixedLengthMatches (CharIndexed input, REMatch mymatch, int max)\n+  {\n+    if (!matchesOneChar)\n+      return super.findFixedLengthMatches (input, mymatch, max);\n+    int numRepeats = 0;\n+    REMatch m = (REMatch) mymatch.clone ();\n+    REToken tk = (REToken) this.clone ();\n+    tk.chain (null);\n+    while (true)\n+      {\n+\tif (numRepeats >= max)\n+\t  break;\n+\tm = tk.findMatch (input, m);\n+\tif (m == null)\n+\t  break;\n+\tnumRepeats++;\n       }\n-      return numRepeats;\n+    return numRepeats;\n   }\n \n-  void dump(StringBuffer os) {\n-    os.append(negative ? \"[^\" : \"(?:\");\n-    for (int i = 0; i < options.size(); i++) {\n-      if (!negative && (i > 0)) os.append('|');\n-      ((REToken) options.elementAt(i)).dumpAll(os);\n-    }\n-    os.append(negative ? ']' : ')');\n-  }  \n+  void dump (CPStringBuilder os)\n+  {\n+    os.append (negative ? \"[^\" : \"(?:\");\n+    for (int i = 0; i < options.size (); i++)\n+      {\n+\tif (!negative && (i > 0))\n+\t  os.append ('|');\n+\toptions.get (i).dumpAll (os);\n+      }\n+    os.append (negative ? ']' : ')');\n+  }\n }"}, {"sha": "2c809570bbfea0f796c2b7af11ac089453a69cbd", "filename": "libjava/classpath/gnu/java/util/regex/RETokenPOSIX.java", "status": "modified", "additions": 101, "deletions": 73, "changes": 174, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenPOSIX.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenPOSIX.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenPOSIX.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,130 +38,158 @@\n \n package gnu.java.util.regex;\n \n-final class RETokenPOSIX extends REToken {\n+import gnu.java.lang.CPStringBuilder;\n+\n+final class RETokenPOSIX extends REToken\n+{\n   int type;\n   boolean insens;\n   boolean negated;\n \n-  static final int  ALNUM = 0;\n-  static final int  ALPHA = 1;\n-  static final int  BLANK = 2;\n-  static final int  CNTRL = 3;\n-  static final int  DIGIT = 4;\n-  static final int  GRAPH = 5;\n-  static final int  LOWER = 6;\n-  static final int  PRINT = 7;\n-  static final int  PUNCT = 8;\n-  static final int  SPACE = 9;\n-  static final int  UPPER = 10;\n+  static final int ALNUM = 0;\n+  static final int ALPHA = 1;\n+  static final int BLANK = 2;\n+  static final int CNTRL = 3;\n+  static final int DIGIT = 4;\n+  static final int GRAPH = 5;\n+  static final int LOWER = 6;\n+  static final int PRINT = 7;\n+  static final int PUNCT = 8;\n+  static final int SPACE = 9;\n+  static final int UPPER = 10;\n   static final int XDIGIT = 11;\n \n   // Array indices correspond to constants defined above.\n-  static final String[] s_nameTable =  {\n+  static final String[] s_nameTable = {\n     \"alnum\", \"alpha\", \"blank\", \"cntrl\", \"digit\", \"graph\", \"lower\",\n-    \"print\", \"punct\", \"space\", \"upper\", \"xdigit\" \n+    \"print\", \"punct\", \"space\", \"upper\", \"xdigit\"\n   };\n \n   // The RE constructor uses this to look up the constant for a string\n-  static int intValue(String key) {\n-    for (int i = 0; i < s_nameTable.length; i++) {\n-      if (s_nameTable[i].equals(key)) return i;\n-    }\n+  static int intValue (String key)\n+  {\n+    for (int i = 0; i < s_nameTable.length; i++)\n+      {\n+\tif (s_nameTable[i].equals (key))\n+\t  return i;\n+      }\n     return -1;\n   }\n \n-  RETokenPOSIX(int subIndex, int type, boolean insens, boolean negated) {\n-    super(subIndex);\n+  RETokenPOSIX (int subIndex, int type, boolean insens, boolean negated)\n+  {\n+    super (subIndex);\n     this.type = type;\n     this.insens = insens;\n     this.negated = negated;\n   }\n \n-    int getMinimumLength() {\n-\treturn 1;\n-    }\n+  int getMinimumLength ()\n+  {\n+    return 1;\n+  }\n \n-    int getMaximumLength() {\n-\treturn 1;\n-    }\n+  int getMaximumLength ()\n+  {\n+    return 1;\n+  }\n \n-    REMatch matchThis(CharIndexed input, REMatch mymatch) {\n-      char ch = input.charAt(mymatch.index);\n-      boolean retval = matchOneChar(ch);\n-      if (retval) {\n+  REMatch matchThis (CharIndexed input, REMatch mymatch)\n+  {\n+    char ch = input.charAt (mymatch.index);\n+    boolean retval = matchOneChar (ch);\n+    if (retval)\n+      {\n \t++mymatch.index;\n \treturn mymatch;\n       }\n-      return null;\n-    }\n+    return null;\n+  }\n \n-    boolean matchOneChar(char ch) {\n+  boolean matchOneChar (char ch)\n+  {\n     if (ch == CharIndexed.OUT_OF_BOUNDS)\n       return false;\n-    \n+\n     boolean retval = false;\n-    switch (type) {\n-    case ALNUM:\n+    switch (type)\n+      {\n+      case ALNUM:\n \t// Note that there is some debate over whether '_' should be included\n-\tretval = Character.isLetterOrDigit(ch) || (ch == '_');\n+\tretval = Character.isLetterOrDigit (ch) || (ch == '_');\n \tbreak;\n-    case ALPHA:\n-\tretval = Character.isLetter(ch);\n+      case ALPHA:\n+\tretval = Character.isLetter (ch);\n \tbreak;\n-    case BLANK:\n+      case BLANK:\n \tretval = ((ch == ' ') || (ch == '\\t'));\n \tbreak;\n-    case CNTRL:\n-\tretval = Character.isISOControl(ch);\n+      case CNTRL:\n+\tretval = Character.isISOControl (ch);\n \tbreak;\n-    case DIGIT:\n-\tretval = Character.isDigit(ch);\n+      case DIGIT:\n+\tretval = Character.isDigit (ch);\n \tbreak;\n-    case GRAPH:\n-\tretval = (!(Character.isWhitespace(ch) || Character.isISOControl(ch)));\n+      case GRAPH:\n+\tretval =\n+\t  (!(Character.isWhitespace (ch) || Character.isISOControl (ch)));\n \tbreak;\n-    case LOWER:\n-\tretval = ((insens && Character.isLetter(ch)) || Character.isLowerCase(ch));\n+      case LOWER:\n+\tretval = ((insens && Character.isLetter (ch))\n+\t\t  || Character.isLowerCase (ch));\n \tbreak;\n-    case PRINT:\n-\tretval = (!(Character.isWhitespace(ch) || Character.isISOControl(ch)))\n-\t    || (ch == ' ');\n+      case PRINT:\n+\tretval =\n+\t  (!(Character.isWhitespace (ch) || Character.isISOControl (ch)))\n+\t  || (ch == ' ');\n \tbreak;\n-    case PUNCT:\n+      case PUNCT:\n \t// This feels sloppy, especially for non-U.S. locales.\n-\tretval = (\"`~!@#$%^&*()-_=+[]{}\\\\|;:'\\\"/?,.<>\".indexOf(ch)!=-1);\n+\tretval = (\"`~!@#$%^&*()-_=+[]{}\\\\|;:'\\\"/?,.<>\".indexOf (ch) != -1);\n \tbreak;\n-    case SPACE:\n-\tretval = Character.isWhitespace(ch);\n+      case SPACE:\n+\tretval = Character.isWhitespace (ch);\n \tbreak;\n-    case UPPER:\n-\tretval = ((insens && Character.isLetter(ch)) || Character.isUpperCase(ch));\n+      case UPPER:\n+\tretval = ((insens && Character.isLetter (ch))\n+\t\t  || Character.isUpperCase (ch));\n \tbreak;\n-    case XDIGIT:\n-\tretval = (Character.isDigit(ch) || (\"abcdefABCDEF\".indexOf(ch)!=-1));\n+      case XDIGIT:\n+\tretval = (Character.isDigit (ch)\n+\t\t  || (\"abcdefABCDEF\".indexOf (ch) != -1));\n \tbreak;\n-    }\n+      }\n \n-    if (negated) retval = !retval;\n+    if (negated)\n+      retval = !retval;\n     return retval;\n   }\n \n-  boolean returnsFixedLengthMatches() { return true; }\n+  boolean returnsFixedLengthMatches ()\n+  {\n+    return true;\n+  }\n \n-  int findFixedLengthMatches(CharIndexed input, REMatch mymatch, int max) {\n-      int index = mymatch.index;\n-      int numRepeats = 0;\n-      while (true) {\n-\tif (numRepeats >= max) break;\n-\tchar ch = input.charAt(index++);\n-\tif (! matchOneChar(ch)) break;\n+  int findFixedLengthMatches (CharIndexed input, REMatch mymatch, int max)\n+  {\n+    int index = mymatch.index;\n+    int numRepeats = 0;\n+    while (true)\n+      {\n+\tif (numRepeats >= max)\n+\t  break;\n+\tchar ch = input.charAt (index++);\n+\tif (!matchOneChar (ch))\n+\t  break;\n \tnumRepeats++;\n       }\n-      return numRepeats;\n+    return numRepeats;\n   }\n \n-  void dump(StringBuffer os) {\n-    if (negated) os.append('^');\n-    os.append(\"[:\" + s_nameTable[type] + \":]\");\n+  void dump (CPStringBuilder os)\n+  {\n+    if (negated)\n+      os.append ('^');\n+    os.append (\"[:\" + s_nameTable[type] + \":]\");\n   }\n }"}, {"sha": "2597d4d07cb58905a37fd2c52f2f61c7356a2267", "filename": "libjava/classpath/gnu/java/util/regex/RETokenRange.java", "status": "modified", "additions": 62, "deletions": 43, "changes": 105, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenRange.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenRange.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenRange.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,64 +37,83 @@\n \n package gnu.java.util.regex;\n \n-final class RETokenRange extends REToken {\n+import gnu.java.lang.CPStringBuilder;\n+\n+final class RETokenRange extends REToken\n+{\n   private char lo, hi;\n   private boolean insens;\n \n-  RETokenRange(int subIndex, char lo, char hi, boolean ins) {\n-    super(subIndex);\n+    RETokenRange (int subIndex, char lo, char hi, boolean ins)\n+  {\n+    super (subIndex);\n     insens = ins;\n     this.lo = lo;\n     this.hi = hi;\n   }\n \n-  int getMinimumLength() {\n+  int getMinimumLength ()\n+  {\n     return 1;\n   }\n \n-  int getMaximumLength() {\n+  int getMaximumLength ()\n+  {\n     return 1;\n   }\n \n-    REMatch matchThis(CharIndexed input, REMatch mymatch) {\n-\tchar c = input.charAt(mymatch.index);\n-\tif (matchOneChar(c)) {\n-\t    ++mymatch.index;\n-\t    return mymatch;\n-\t}\n-\treturn null;\n-    }\n-\n-    boolean matchOneChar(char c) {\n-\tif (c == CharIndexed.OUT_OF_BOUNDS) return false;\n-\tboolean matches = (c >= lo) && (c <= hi);\n-\tif (! matches && insens) {\n-\t  char c1 = toLowerCase(c, unicodeAware);\n-\t  matches = (c1 >= lo) && (c1 <= hi);\n-\t  if (!matches) {\n-\t    c1 = toUpperCase(c, unicodeAware);\n+  REMatch matchThis (CharIndexed input, REMatch mymatch)\n+  {\n+    char c = input.charAt (mymatch.index);\n+    if (matchOneChar (c))\n+      {\n+\t++mymatch.index;\n+\treturn mymatch;\n+      }\n+    return null;\n+  }\n+\n+  boolean matchOneChar (char c)\n+  {\n+    if (c == CharIndexed.OUT_OF_BOUNDS)\n+      return false;\n+    boolean matches = (c >= lo) && (c <= hi);\n+    if (!matches && insens)\n+      {\n+\tchar c1 = toLowerCase (c, unicodeAware);\n+\tmatches = (c1 >= lo) && (c1 <= hi);\n+\tif (!matches)\n+\t  {\n+\t    c1 = toUpperCase (c, unicodeAware);\n \t    matches = (c1 >= lo) && (c1 <= hi);\n \t  }\n-\t}\n-\treturn matches;\n-    }\n-\n-    boolean returnsFixedLengthMatches() { return true; }\n-\n-    int findFixedLengthMatches(CharIndexed input, REMatch mymatch, int max) {\n-        int index = mymatch.index;\n-\tint numRepeats = 0;\n-\twhile (true) {\n-\t    if (numRepeats >= max) break;\n-\t    char ch = input.charAt(index++);\n-\t    if (! matchOneChar(ch)) break;\n-\t    numRepeats++;\n-\t}\n-        return numRepeats;\n-    }\n-    \n-  void dump(StringBuffer os) {\n-    os.append(lo).append('-').append(hi);\n+      }\n+    return matches;\n+  }\n+\n+  boolean returnsFixedLengthMatches ()\n+  {\n+    return true;\n+  }\n+\n+  int findFixedLengthMatches (CharIndexed input, REMatch mymatch, int max)\n+  {\n+    int index = mymatch.index;\n+    int numRepeats = 0;\n+    while (true)\n+      {\n+\tif (numRepeats >= max)\n+\t  break;\n+\tchar ch = input.charAt (index++);\n+\tif (!matchOneChar (ch))\n+\t  break;\n+\tnumRepeats++;\n+      }\n+    return numRepeats;\n   }\n-}\n \n+  void dump (CPStringBuilder os)\n+  {\n+    os.append (lo).append ('-').append (hi);\n+  }\n+}"}, {"sha": "0ba880d3987f61c533ba44f5e7a5c3f00c0d3055", "filename": "libjava/classpath/gnu/java/util/regex/RETokenRepeated.java", "status": "modified", "additions": 542, "deletions": 433, "changes": 975, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenRepeated.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenRepeated.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenRepeated.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,493 +38,602 @@\n \n package gnu.java.util.regex;\n \n-import java.util.ArrayList;\n-\n-final class RETokenRepeated extends REToken {\n-    private REToken token;\n-    private int min,max;\n-    private boolean stingy;\n-    private boolean possessive;\n-    private int tokenFixedLength;\n-    \n-    RETokenRepeated(int subIndex, REToken token, int min, int max) {\n-\tsuper(subIndex);\n-\tthis.token = token;\n-\tthis.min = min;\n-\tthis.max = max;\n-\tif (token.returnsFixedLengthMatches()) {\n-\t    tokenFixedLength = token.getMaximumLength();\n-\t}\n-\telse {\n-\t    tokenFixedLength = -1;\n-\t}\n-    }\n+import gnu.java.lang.CPStringBuilder;\n+\n+import java.util.ArrayDeque;\n+import java.util.Deque;\n+\n+final class RETokenRepeated extends REToken\n+{\n+  private REToken token;\n+  private int min, max;\n+  private boolean stingy;\n+  private boolean possessive;\n+  private int tokenFixedLength;\n+\n+    RETokenRepeated (int subIndex, REToken token, int min, int max)\n+  {\n+    super (subIndex);\n+    this.token = token;\n+    this.min = min;\n+    this.max = max;\n+    if (token.returnsFixedLengthMatches ())\n+      {\n+\ttokenFixedLength = token.getMaximumLength ();\n+      }\n+    else\n+      {\n+\ttokenFixedLength = -1;\n+      }\n+  }\n \n     /** Sets the minimal matching mode to true. */\n-    void makeStingy() {\n-\tstingy = true;\n-    }\n-    \n+  void makeStingy ()\n+  {\n+    stingy = true;\n+  }\n+\n     /** Queries if this token has minimal matching enabled. */\n-    boolean isStingy() {\n-\treturn stingy;\n-    }\n+  boolean isStingy ()\n+  {\n+    return stingy;\n+  }\n \n     /** Sets possessive matching mode to true. */\n-    void makePossessive() {\n-        possessive = true;\n-    }\n+  void makePossessive ()\n+  {\n+    possessive = true;\n+  }\n \n     /** Queries if this token has possessive matching enabled. */\n-    boolean isPossessive() {\n-        return possessive;\n-    }\n-    \n+  boolean isPossessive ()\n+  {\n+    return possessive;\n+  }\n+\n     /**\n      * The minimum length of a repeated token is the minimum length\n      * of the token multiplied by the minimum number of times it must\n      * match.\n      */\n-    int getMinimumLength() {\n-\treturn (min * token.getMinimumLength());\n+  int getMinimumLength ()\n+  {\n+    return (min * token.getMinimumLength ());\n+  }\n+\n+  int getMaximumLength ()\n+  {\n+    if (max == Integer.MAX_VALUE)\n+      return Integer.MAX_VALUE;\n+    int tmax = token.getMaximumLength ();\n+    if (tmax == Integer.MAX_VALUE)\n+      return tmax;\n+    return (max * tmax);\n+  }\n+\n+  // The comment \"MUST make a clone\" below means that some tests\n+  // failed without doing clone(),\n+\n+  private static class DoablesFinder\n+  {\n+    private REToken tk;\n+    private CharIndexed input;\n+    private REMatch rematch;\n+    private boolean findFirst;\n+\n+    private DoablesFinder (REToken tk, CharIndexed input, REMatch mymatch)\n+    {\n+      this.tk = tk;\n+      this.input = input;\n+      this.rematch = (REMatch) mymatch.clone ();\t// MUST make a clone\n+      this.rematch.backtrackStack = new BacktrackStack ();\n+      findFirst = true;\n     }\n \n-    int getMaximumLength() {\n-        if (max == Integer.MAX_VALUE) return Integer.MAX_VALUE;\n-\tint tmax = token.getMaximumLength();\n-\tif (tmax == Integer.MAX_VALUE) return tmax;\n-\treturn (max * tmax);\n-    }\n-\n-    // The comment \"MUST make a clone\" below means that some tests\n-    // failed without doing clone(),\n-\n-    private static class DoablesFinder {\n-\tprivate REToken tk;\n-\tprivate CharIndexed input;\n-\tprivate REMatch rematch;\n-\tprivate boolean findFirst;\n-\n-        private DoablesFinder(REToken tk, CharIndexed input, REMatch mymatch) {\n-\t    this.tk = tk;\n-\t    this.input = input;\n-\t    this.rematch = (REMatch) mymatch.clone(); // MUST make a clone\n-\t    this.rematch.backtrackStack = new BacktrackStack();\n-\t    findFirst = true;\n+    private REMatch find ()\n+    {\n+      int origin = rematch.index;\n+      REMatch rem;\n+      if (findFirst)\n+\t{\n+\t  rem = tk.findMatch (input, rematch);\n+\t  findFirst = false;\n \t}\n-\n-\tprivate REMatch find() {\n-\t    int origin = rematch.index;\n-\t    REMatch rem;\n-\t    if (findFirst) {\n-\t\trem = tk.findMatch(input, rematch);\n-\t\tfindFirst = false;\n-\t    }\n-\t    else {\n-\t        while (true) {\n-\t\t    if (rematch.backtrackStack.empty()) {\n-\t\t\trem = null;\n-\t\t\tbreak;\n-\t\t    }\n-\t\t    BacktrackStack.Backtrack bt = rematch.backtrackStack.pop();\n-\t\t    rem = bt.token.backtrack(bt.input, bt.match, bt.param);\n-\t\t    if (rem != null) break;\n+      else\n+\t{\n+\t  while (true)\n+\t    {\n+\t      if (rematch.backtrackStack.empty ())\n+\t\t{\n+\t\t  rem = null;\n+\t\t  break;\n \t\t}\n+\t      BacktrackStack.Backtrack bt = rematch.backtrackStack.pop ();\n+\t      rem = bt.token.backtrack (bt.input, bt.match, bt.param);\n+\t      if (rem != null)\n+\t\tbreak;\n \t    }\n-\t    if (rem == null) return null;\n-\t    if (rem.index == origin) rem.empty = true;\n-\t    rematch = rem;\n-\t    return (REMatch) rem.clone(); // MUST make a clone.\n-\t}\n-\n-\tboolean noMore() {\n-\t    return rematch.backtrackStack.empty();\n-\t}\n-    }\n-\n-    REMatch findMatch(CharIndexed input, REMatch mymatch) {\n-        if (tokenFixedLength >= 0) return findMatchFixedLength(input, mymatch);\n-\tBacktrackStack stack = new BacktrackStack();\n-\tstack.push(new StackedInfo(input, 0, mymatch, null, null));\n-\treturn findMatch(stack);\n-    }\n-\n-    REMatch backtrack(CharIndexed input, REMatch mymatch, Object param) {\n-        if (tokenFixedLength >= 0) return backtrackFixedLength(input, mymatch, param);\n-\treturn findMatch((BacktrackStack)param);\n-    }\n-\n-    private static class StackedInfo extends BacktrackStack.Backtrack {\n-        int numRepeats;\n-\tint[] visited;\n-        DoablesFinder finder;\n-        StackedInfo(CharIndexed input, int numRepeats, REMatch match,\n-\t        int[] visited, DoablesFinder finder) {\n-\t    super(null, input, match, null);\n-            this.numRepeats = numRepeats;\n-\t    this.visited = visited;\n-            this.finder = finder;\n \t}\n+      if (rem == null)\n+\treturn null;\n+      if (rem.index == origin)\n+\trem.empty = true;\n+      rematch = rem;\n+      return (REMatch) rem.clone ();\t// MUST make a clone.\n     }\n \n-    private static class FindMatchControlStack extends ArrayList {\n-\tprivate void push(FindMatchControl control) {\n-\t    add(control);\n-\t}\n-\tprivate FindMatchControl pop() {\n-\t    return (FindMatchControl)remove(size()-1);\n-\t}\n-\tprivate boolean empty() {\n-\t    return isEmpty();\n-\t}\n+    boolean noMore ()\n+    {\n+      return rematch.backtrackStack.empty ();\n     }\n-\n-    private static class FindMatchControl {\n-\tDoablesFinder finder;\n-\tFindMatchControl(DoablesFinder finder) {\n-\t    this.finder = finder;\n-\t}\n+  }\n+\n+  REMatch findMatch (CharIndexed input, REMatch mymatch)\n+  {\n+    if (tokenFixedLength >= 0)\n+      return findMatchFixedLength (input, mymatch);\n+    BacktrackStack stack = new BacktrackStack ();\n+    stack.push (new StackedInfo (input, 0, mymatch, null, null));\n+    return findMatch (stack);\n+  }\n+\n+  REMatch backtrack (CharIndexed input, REMatch mymatch, Object param)\n+  {\n+    if (tokenFixedLength >= 0)\n+      return backtrackFixedLength (input, mymatch, param);\n+    return findMatch ((BacktrackStack) param);\n+  }\n+\n+  private static class StackedInfo extends BacktrackStack.Backtrack\n+  {\n+    int numRepeats;\n+    int[] visited;\n+    DoablesFinder finder;\n+      StackedInfo (CharIndexed input, int numRepeats, REMatch match,\n+\t\t   int[]visited, DoablesFinder finder)\n+    {\n+      super (null, input, match, null);\n+      this.numRepeats = numRepeats;\n+      this.visited = visited;\n+      this.finder = finder;\n     }\n-\n-    private REMatch findMatch(BacktrackStack stack) {\n-\treturn findMatch(stack, new FindMatchControlStack());\n+  }\n+\n+  private static class FindMatchControl\n+  {\n+    DoablesFinder finder;\n+      FindMatchControl (DoablesFinder finder)\n+    {\n+      this.finder = finder;\n     }\n-\n-    private REMatch findMatch(BacktrackStack stack,\n-\t\tFindMatchControlStack controlStack) {\n-\tREMatch result = null;\n-\tStackedInfo si = null;\n-\tCharIndexed input = null;\n-        int numRepeats = 0;\n-        REMatch mymatch = null;\n-\tint[] visited = null;\n-        DoablesFinder finder = null;\n-\n-        // Avoid using recursive calls because a match can be very long.\n-\n-\t// This is the first entry point of this method.\n-\t// If you want to call this method recursively and you need the\n-\t// result returned, save necessary information in a FindMatchControl\n-\t// object and push it to controlStack, then continue from this point.\n-\t// You can check the result after exiting MAIN_LOOP.\n-\tMAIN_LOOP0:\n-\twhile (true) {\n+  }\n+\n+  private REMatch findMatch (BacktrackStack stack)\n+  {\n+    return findMatch (stack, new ArrayDeque < FindMatchControl > ());\n+  }\n+\n+  private REMatch findMatch (BacktrackStack stack,\n+\t\t\t     Deque < FindMatchControl > controlStack)\n+  {\n+    REMatch result = null;\n+    StackedInfo si = null;\n+    CharIndexed input = null;\n+    int numRepeats = 0;\n+    REMatch mymatch = null;\n+    int[] visited = null;\n+    DoablesFinder finder = null;\n+\n+    // Avoid using recursive calls because a match can be very long.\n+\n+    // This is the first entry point of this method.\n+    // If you want to call this method recursively and you need the\n+    // result returned, save necessary information in a FindMatchControl\n+    // object and push it to controlStack, then continue from this point.\n+    // You can check the result after exiting MAIN_LOOP.\n+  MAIN_LOOP0:\n+    while (true)\n+      {\n \n \t// This is the second entry point of this method.\n \t// If you want to call this method recursively but you do not need the\n \t// result returned, just continue from this point.\n-\tMAIN_LOOP:\n-\twhile (true) {\n-\n-\tif (stack.empty()) break MAIN_LOOP;\n-\tsi = (StackedInfo)(stack.peek());\n-\tinput = si.input;\n-        numRepeats = si.numRepeats;\n-        mymatch = si.match;\n-\tvisited = si.visited;\n-        finder = si.finder;\n-\n-\tif (mymatch.backtrackStack == null)\n-\t  mymatch.backtrackStack = new BacktrackStack();\n-\t\n-\tif (numRepeats >= max) {\n-\t    stack.pop();\n-\t    REMatch m1 = matchRest(input, mymatch);\n-\t    if (m1 != null) {\n-\t\tif (! stack.empty()) {\n-\t            m1.backtrackStack.push(new BacktrackStack.Backtrack(\n-\t\t        this, input, mymatch, stack));\n-\t\t}\n-\t\tresult = m1;\n+      MAIN_LOOP:\n+\twhile (true)\n+\t  {\n+\n+\t    if (stack.empty ())\n+\t      break MAIN_LOOP;\n+\t    si = (StackedInfo) (stack.peek ());\n+\t    input = si.input;\n+\t    numRepeats = si.numRepeats;\n+\t    mymatch = si.match;\n+\t    visited = si.visited;\n+\t    finder = si.finder;\n+\n+\t    if (mymatch.backtrackStack == null)\n+\t      mymatch.backtrackStack = new BacktrackStack ();\n+\n+\t    if (numRepeats >= max)\n+\t      {\n+\t\tstack.pop ();\n+\t\tREMatch m1 = matchRest (input, mymatch);\n+\t\tif (m1 != null)\n+\t\t  {\n+\t\t    if (!stack.empty ())\n+\t\t      {\n+\t\t\tm1.backtrackStack.push (new BacktrackStack.\n+\t\t\t\t\t\tBacktrack (this, input,\n+\t\t\t\t\t\t\t   mymatch, stack));\n+\t\t      }\n+\t\t    result = m1;\n+\t\t    break MAIN_LOOP;\n+\t\t  }\n+\t\tif (stingy)\n+\t\t  {\n+\t\t    continue MAIN_LOOP;\n+\t\t  }\n \t\tbreak MAIN_LOOP;\n-\t    }\n-\t    if (stingy) {\n-\t\tcontinue MAIN_LOOP;\n-\t    }\n-\t    break MAIN_LOOP;\n-\t}\n-\n-        if (finder == null) {\n-\t    finder = new DoablesFinder(token, input, mymatch);\n-\t    si.finder = finder;\n-\t}\n-\n-        if (numRepeats < min) {\n-\t    while (true) {\n-\t        REMatch doable = finder.find();\n-\t        if (doable == null) {\n-\t\t    if (stack.empty()) return null;\n-\t\t    stack.pop();\n+\t      }\n+\n+\t    if (finder == null)\n+\t      {\n+\t\tfinder = new DoablesFinder (token, input, mymatch);\n+\t\tsi.finder = finder;\n+\t      }\n+\n+\t    if (numRepeats < min)\n+\t      {\n+\t\twhile (true)\n+\t\t  {\n+\t\t    REMatch doable = finder.find ();\n+\t\t    if (doable == null)\n+\t\t      {\n+\t\t\tif (stack.empty ())\n+\t\t\t  return null;\n+\t\t\tstack.pop ();\n+\t\t\tcontinue MAIN_LOOP;\n+\t\t      }\n+\t\t    if (finder.noMore ())\n+\t\t      stack.pop ();\n+\t\t    int newNumRepeats = (doable.empty ? min : numRepeats + 1);\n+\t\t    stack.\n+\t\t      push (new\n+\t\t\t    StackedInfo (input, newNumRepeats, doable,\n+\t\t\t\t\t visited, null));\n \t\t    continue MAIN_LOOP;\n-\t\t}\n-\t\tif (finder.noMore()) stack.pop();\n-\t\tint newNumRepeats = (doable.empty ? min : numRepeats + 1);\n-\t\tstack.push(new StackedInfo(\n-\t\t    input, newNumRepeats, doable, visited, null));\n-\t\tcontinue MAIN_LOOP;\n-\t    }\n-\t}\n-\n-\tif (visited == null) visited = initVisited();\n-\n-\tif (stingy) {\n-\t    REMatch nextMatch = finder.find();\n-\t    if (nextMatch != null && !nextMatch.empty) {\n-\t        stack.push(new StackedInfo(\n-\t            input, numRepeats + 1, nextMatch, visited, null));\n-\t    }\n-\t    else {\n-\t\tstack.pop();\n-\t    }  \t\n-\t    REMatch m1 = matchRest(input, mymatch);\n-\t    if (m1 != null) {\n-\t\tif (!stack.empty()) {\n-\t            m1.backtrackStack.push(new BacktrackStack.Backtrack(\n-\t\t        this, input, mymatch, stack));\n-\t\t}\n+\t\t  }\n+\t      }\n+\n+\t    if (visited == null)\n+\t      visited = initVisited ();\n+\n+\t    if (stingy)\n+\t      {\n+\t\tREMatch nextMatch = finder.find ();\n+\t\tif (nextMatch != null && !nextMatch.empty)\n+\t\t  {\n+\t\t    stack.\n+\t\t      push (new\n+\t\t\t    StackedInfo (input, numRepeats + 1, nextMatch,\n+\t\t\t\t\t visited, null));\n+\t\t  }\n+\t\telse\n+\t\t  {\n+\t\t    stack.pop ();\n+\t\t  }\n+\t\tREMatch m1 = matchRest (input, mymatch);\n+\t\tif (m1 != null)\n+\t\t  {\n+\t\t    if (!stack.empty ())\n+\t\t      {\n+\t\t\tm1.backtrackStack.push (new BacktrackStack.\n+\t\t\t\t\t\tBacktrack (this, input,\n+\t\t\t\t\t\t\t   mymatch, stack));\n+\t\t      }\n+\t\t    result = m1;\n+\t\t    break MAIN_LOOP;\n+\t\t  }\n+\t\telse\n+\t\t  {\n+\t\t    continue MAIN_LOOP;\n+\t\t  }\n+\t      }\n+\n+\t    visited = addVisited (mymatch.index, visited);\n+\n+\t    TryAnotherResult taresult =\n+\t      tryAnother (stack, input, mymatch, numRepeats, finder, visited);\n+\t    visited = taresult.visited;\n+\t    switch (taresult.status)\n+\t      {\n+\t      case TryAnotherResult.TRY_FURTHER:\n+\t\tcontrolStack.push (new FindMatchControl (finder));\n+\t\tcontinue MAIN_LOOP0;\n+\t      case TryAnotherResult.RESULT_FOUND:\n+\t\tresult = taresult.result;\n+\t\tbreak MAIN_LOOP;\n+\t      }\n+\n+\t    if (!stack.empty ())\n+\t      {\n+\t\tstack.pop ();\n+\t      }\n+\t    if (possessive)\n+\t      {\n+\t\tstack.clear ();\n+\t      }\n+\t    REMatch m1 = matchRest (input, mymatch);\n+\t    if (m1 != null)\n+\t      {\n+\t\tif (!stack.empty ())\n+\t\t  {\n+\t\t    m1.backtrackStack.push (new BacktrackStack.\n+\t\t\t\t\t    Backtrack (this, input, mymatch,\n+\t\t\t\t\t\t       stack));\n+\t\t  }\n \t\tresult = m1;\n \t\tbreak MAIN_LOOP;\n-\t    }\n-\t    else {\n-\t\tcontinue MAIN_LOOP;\n-\t    }\n-\t}\n-\n-\tvisited = addVisited(mymatch.index, visited);\n-\n-\tTryAnotherResult taresult = tryAnother(stack, input, mymatch, numRepeats, finder, visited);\n-\tvisited = taresult.visited;\n-\tswitch (taresult.status) {\n-\t    case TryAnotherResult.TRY_FURTHER:\n-\t        controlStack.push(new FindMatchControl(\n-\t\t    finder));\n-\t        continue MAIN_LOOP0;\n-\t    case TryAnotherResult.RESULT_FOUND:\n-\t        result = taresult.result;\n-\t        break MAIN_LOOP;\n-\t}\n-\n-\tif (!stack.empty()) {\n-\t    stack.pop();\n-        }\n-\tif (possessive) {\n-\t    stack.clear();\n-\t}\n-\tREMatch m1 = matchRest(input, mymatch);\n-\tif (m1 != null) {\n-\t    if (! stack.empty()) {\n-\t        m1.backtrackStack.push(new BacktrackStack.Backtrack(\n-\t            this, input, mymatch, stack));\n-\t    }\n-\t    result = m1;\n-\t    break MAIN_LOOP;\n-\t}\n+\t      }\n \n-\t} // MAIN_LOOP\n+\t  }\t\t\t// MAIN_LOOP\n \n-\tif (controlStack.empty()) return result;\n-\tFindMatchControl control = controlStack.pop();\n-\tif (possessive) {\n+\tif (controlStack.isEmpty ())\n+\t  return result;\n+\tFindMatchControl control = controlStack.pop ();\n+\tif (possessive)\n+\t  {\n \t    return result;\n-\t}\n-\tif (result != null) {\n-\t    result.backtrackStack.push(new BacktrackStack.Backtrack(\n-                this, input, mymatch, stack));\n+\t  }\n+\tif (result != null)\n+\t  {\n+\t    result.backtrackStack.push (new BacktrackStack.\n+\t\t\t\t\tBacktrack (this, input, mymatch,\n+\t\t\t\t\t\t   stack));\n \t    return result;\n-\t}\n+\t  }\n \n \tfinder = control.finder;\n \n-\tTryAnotherResult taresult = tryAnother(stack, input, mymatch, numRepeats, finder, visited);\n+\tTryAnotherResult taresult =\n+\t  tryAnother (stack, input, mymatch, numRepeats, finder, visited);\n \tvisited = taresult.visited;\n-\tswitch (taresult.status) {\n-\t    case TryAnotherResult.TRY_FURTHER:\n-\t        controlStack.push(new FindMatchControl(\n-\t\t    finder));\n-\t        continue MAIN_LOOP0;\n-\t    case TryAnotherResult.RESULT_FOUND:\n-\t        return taresult.result;\n-\t}\n+\tswitch (taresult.status)\n+\t  {\n+\t  case TryAnotherResult.TRY_FURTHER:\n+\t    controlStack.push (new FindMatchControl (finder));\n+\t    continue MAIN_LOOP0;\n+\t  case TryAnotherResult.RESULT_FOUND:\n+\t    return taresult.result;\n+\t  }\n \tcontinue MAIN_LOOP0;\n \n-\t} // MAIN_LOOP0\n-    }\n+      }\t\t\t\t// MAIN_LOOP0\n+  }\n \n-    private static class TryAnotherResult {\n-\tREMatch result;\n-        int status;\n-        static final int RESULT_FOUND = 1;\n-\tstatic final int TRY_FURTHER = 2;\n-\tstatic final int NOTHING_FOUND = 3; \n-\tint[] visited;\n-    }\n+  private static class TryAnotherResult\n+  {\n+    REMatch result;\n+    int status;\n+    static final int RESULT_FOUND = 1;\n+    static final int TRY_FURTHER = 2;\n+    static final int NOTHING_FOUND = 3;\n+    int[] visited;\n+  }\n \n-    private TryAnotherResult tryAnother(BacktrackStack stack,\n-\t\tCharIndexed input, REMatch mymatch, int numRepeats,\n-\t\tDoablesFinder finder, int[] visited) {\n+  private TryAnotherResult tryAnother (BacktrackStack stack,\n+\t\t\t\t       CharIndexed input, REMatch mymatch,\n+\t\t\t\t       int numRepeats, DoablesFinder finder,\n+\t\t\t\t       int[]visited)\n+  {\n \n-\tTryAnotherResult taresult = new TryAnotherResult();\n-\ttaresult.visited = visited;\n+    TryAnotherResult taresult = new TryAnotherResult ();\n+    taresult.visited = visited;\n \n-\tDO_THIS:\n-\t{\n+  DO_THIS:\n+    {\n \n-\t    boolean emptyMatchFound = false;\n+      boolean emptyMatchFound = false;\n \n-\t    DO_ONE_DOABLE:\n-\t    while (true) {\n+    DO_ONE_DOABLE:\n+      while (true)\n+\t{\n \n-\t    REMatch doable = finder.find();\n-\t    if (doable == null) {\n-\t\tbreak DO_THIS;\n+\t  REMatch doable = finder.find ();\n+\t  if (doable == null)\n+\t    {\n+\t      break DO_THIS;\n \t    }\n-\t    if (doable.empty) emptyMatchFound = true;\n-\n-\t    if (!emptyMatchFound) {\n-\t\tint n = doable.index;\n-\t\tif (visitedContains(n, visited)) {\n-\t\t    continue DO_ONE_DOABLE;\n+\t  if (doable.empty)\n+\t    emptyMatchFound = true;\n+\n+\t  if (!emptyMatchFound)\n+\t    {\n+\t      int n = doable.index;\n+\t      if (visitedContains (n, visited))\n+\t\t{\n+\t\t  continue DO_ONE_DOABLE;\n \t\t}\n-\t\tvisited = addVisited(n, visited);\n-\t        stack.push(new StackedInfo(\n-\t            input, numRepeats + 1, doable, visited, null));\n-\t\ttaresult.visited = visited;\n-\t\ttaresult.status = TryAnotherResult.TRY_FURTHER;\n-\t\treturn taresult;\n+\t      visited = addVisited (n, visited);\n+\t      stack.\n+\t\tpush (new\n+\t\t      StackedInfo (input, numRepeats + 1, doable, visited,\n+\t\t\t\t   null));\n+\t      taresult.visited = visited;\n+\t      taresult.status = TryAnotherResult.TRY_FURTHER;\n+\t      return taresult;\n \t    }\n-\t    else {\n-\t        REMatch m1 = matchRest(input, doable);\n-\t\tif (possessive) {\n-\t\t    taresult.result = m1;\n-\t\t    taresult.status = TryAnotherResult.RESULT_FOUND;\n-\t\t    return taresult;\n+\t  else\n+\t    {\n+\t      REMatch m1 = matchRest (input, doable);\n+\t      if (possessive)\n+\t\t{\n+\t\t  taresult.result = m1;\n+\t\t  taresult.status = TryAnotherResult.RESULT_FOUND;\n+\t\t  return taresult;\n \t\t}\n-\t        if (m1 != null) {\n-\t\t    if (! stack.empty()) {\n-\t\t        m1.backtrackStack.push(new BacktrackStack.Backtrack(\n-                            this, input, mymatch, stack));\n+\t      if (m1 != null)\n+\t\t{\n+\t\t  if (!stack.empty ())\n+\t\t    {\n+\t\t      m1.backtrackStack.push (new BacktrackStack.\n+\t\t\t\t\t      Backtrack (this, input, mymatch,\n+\t\t\t\t\t\t\t stack));\n \t\t    }\n-\t\t    taresult.result = m1;\n-\t\t    taresult.status = TryAnotherResult.RESULT_FOUND;\n-\t\t    return taresult;\n+\t\t  taresult.result = m1;\n+\t\t  taresult.status = TryAnotherResult.RESULT_FOUND;\n+\t\t  return taresult;\n \t\t}\n \t    }\n \n-\t    } // DO_ONE_DOABLE\n-\n-\t} // DO_THIS\n-\n-\ttaresult.status = TryAnotherResult.NOTHING_FOUND;\n-\treturn taresult;\n-\n-    }\n-\n-    boolean match(CharIndexed input, REMatch mymatch) {\n-\tsetHitEnd(input, mymatch);\n-\tREMatch m1 = findMatch(input, mymatch);\n-\tif (m1 != null) {\n-\t    mymatch.assignFrom(m1);\n-\t    return true;\n-\t}\n-\treturn false;\n-    }    \n-\n-    // Array visited is an array of character positions we have already\n-    // visited. visited[0] is used to store the effective length of the\n-    // array.\n-    private static int[] initVisited() {\n-\tint[] visited = new int[32];\n-\tvisited[0] = 0;\n-\treturn visited;\n-    }\n-\n-    private static boolean visitedContains(int n, int[] visited) {\n-\t// Experience tells that for a small array like this,\n-\t// simple linear search is faster than binary search.\n-\tfor (int i = 1; i < visited[0]; i++) {\n-\t    if (n == visited[i]) return true;\n-\t}\n-\treturn false;\n-    }\n-\n-    private static int[] addVisited(int n, int[] visited) {\n-\tif (visitedContains(n, visited)) return visited;\n-\tif (visited[0] >= visited.length - 1) {\n-\t    int[] newvisited = new int[visited.length + 32];\n-\t    System.arraycopy(visited, 0, newvisited, 0, visited.length);\n-\t    visited = newvisited;\n-\t}\n-\tvisited[0]++;\n-\tvisited[visited[0]] = n;\n-\treturn visited;\n-    }\n-\n-    private REMatch matchRest(CharIndexed input, final REMatch newMatch) {\n-\tif (next(input, newMatch)) {\n-\t    return newMatch;\n-\t}\n-\treturn null;\n-    }\n-\n-    private REMatch findMatchFixedLength(CharIndexed input, REMatch mymatch) {\n-\tif (mymatch.backtrackStack == null)\n-\t  mymatch.backtrackStack = new BacktrackStack();\n-        int numRepeats = token.findFixedLengthMatches(input, (REMatch)mymatch.clone(), max);\n-\tif (numRepeats == Integer.MAX_VALUE) numRepeats = min;\n-\tint count = numRepeats - min + 1;\n-        if (count <= 0) return null;\n-\tint index = 0;\n-\tif (!stingy) index = mymatch.index + (tokenFixedLength * numRepeats);\n-\telse index = mymatch.index + (tokenFixedLength * min);\n-\treturn findMatchFixedLength(input, mymatch, index, count);\n-    }\n-\n-    private REMatch backtrackFixedLength(CharIndexed input, REMatch mymatch,\n-    \t    Object param) {\n-\tint[] params = (int[])param;\n-        int index = params[0];\n-\tint count = params[1];\n-\treturn findMatchFixedLength(input, mymatch, index, count);\n-    }        \n-\n-    private REMatch findMatchFixedLength(CharIndexed input, REMatch mymatch,\n-    \t    \t    int index, int count) {\n-        REMatch tryMatch = (REMatch) mymatch.clone();\n-\twhile (true) {\n-\t    tryMatch.index = index;\n-\t    REMatch m = matchRest(input, tryMatch);\n-\t    count--;\n-\t    if (stingy) index += tokenFixedLength;\n-\t    else index -= tokenFixedLength;\n-\t    if (possessive) return m;\n-\t    if (m != null) {\n-\t\tif (count > 0) {\n-\t            m.backtrackStack.push(new BacktrackStack.Backtrack(\n-\t\t        this, input, mymatch,\n-\t\t\tnew int[] {index, count}));\n-\t        }\n-\t\treturn m;\n-\t    }\n-\t    if (count <= 0) return null;\n-\t}\n-    }\t\t    \n-\n-    void dump(StringBuffer os) {\n-\tos.append(\"(?:\");\n-\ttoken.dumpAll(os);\n-\tos.append(')');\n-\tif ((max == Integer.MAX_VALUE) && (min <= 1))\n-\t    os.append( (min == 0) ? '*' : '+' );\n-\telse if ((min == 0) && (max == 1))\n-\t    os.append('?');\n-\telse {\n-\t    os.append('{').append(min);\n-\t    if (max > min) {\n-\t\tos.append(',');\n-\t\tif (max != Integer.MAX_VALUE) os.append(max);\n-\t    }\n-\t    os.append('}');\n-\t}\n-\tif (stingy) os.append('?');\n-    }\n+\t}\t\t\t// DO_ONE_DOABLE\n+\n+    }\t\t\t\t// DO_THIS\n+\n+    taresult.status = TryAnotherResult.NOTHING_FOUND;\n+    return taresult;\n+\n+  }\n+\n+  boolean match (CharIndexed input, REMatch mymatch)\n+  {\n+    setHitEnd (input, mymatch);\n+    REMatch m1 = findMatch (input, mymatch);\n+    if (m1 != null)\n+      {\n+\tmymatch.assignFrom (m1);\n+\treturn true;\n+      }\n+    return false;\n+  }\n+\n+  // Array visited is an array of character positions we have already\n+  // visited. visited[0] is used to store the effective length of the\n+  // array.\n+  private static int[] initVisited ()\n+  {\n+    int[] visited = new int[32];\n+    visited[0] = 0;\n+    return visited;\n+  }\n+\n+  private static boolean visitedContains (int n, int[]visited)\n+  {\n+    // Experience tells that for a small array like this,\n+    // simple linear search is faster than binary search.\n+    for (int i = 1; i < visited[0]; i++)\n+      {\n+\tif (n == visited[i])\n+\t  return true;\n+      }\n+    return false;\n+  }\n+\n+  private static int[] addVisited (int n, int[]visited)\n+  {\n+    if (visitedContains (n, visited))\n+      return visited;\n+    if (visited[0] >= visited.length - 1)\n+      {\n+\tint[] newvisited = new int[visited.length + 32];\n+\tSystem.arraycopy (visited, 0, newvisited, 0, visited.length);\n+\tvisited = newvisited;\n+      }\n+    visited[0]++;\n+    visited[visited[0]] = n;\n+    return visited;\n+  }\n+\n+  private REMatch matchRest (CharIndexed input, final REMatch newMatch)\n+  {\n+    if (next (input, newMatch))\n+      {\n+\treturn newMatch;\n+      }\n+    return null;\n+  }\n+\n+  private REMatch findMatchFixedLength (CharIndexed input, REMatch mymatch)\n+  {\n+    if (mymatch.backtrackStack == null)\n+      mymatch.backtrackStack = new BacktrackStack ();\n+    int numRepeats =\n+      token.findFixedLengthMatches (input, (REMatch) mymatch.clone (), max);\n+    if (numRepeats == Integer.MAX_VALUE)\n+      numRepeats = min;\n+    int count = numRepeats - min + 1;\n+    if (count <= 0)\n+      return null;\n+    int index = 0;\n+    if (!stingy)\n+      index = mymatch.index + (tokenFixedLength * numRepeats);\n+    else\n+      index = mymatch.index + (tokenFixedLength * min);\n+    return findMatchFixedLength (input, mymatch, index, count);\n+  }\n+\n+  private REMatch backtrackFixedLength (CharIndexed input, REMatch mymatch,\n+\t\t\t\t\tObject param)\n+  {\n+    int[] params = (int[]) param;\n+    int index = params[0];\n+    int count = params[1];\n+    return findMatchFixedLength (input, mymatch, index, count);\n+  }\n+\n+  private REMatch findMatchFixedLength (CharIndexed input, REMatch mymatch,\n+\t\t\t\t\tint index, int count)\n+  {\n+    REMatch tryMatch = (REMatch) mymatch.clone ();\n+    while (true)\n+      {\n+\ttryMatch.index = index;\n+\tREMatch m = matchRest (input, tryMatch);\n+\tcount--;\n+\tif (stingy)\n+\t  index += tokenFixedLength;\n+\telse\n+\t  index -= tokenFixedLength;\n+\tif (possessive)\n+\t  return m;\n+\tif (m != null)\n+\t  {\n+\t    if (count > 0)\n+\t      {\n+\t\tm.backtrackStack.push (new BacktrackStack.\n+\t\t\t\t       Backtrack (this, input, mymatch,\n+\t\t\t\t\t\t  new int[]\n+\t\t\t\t\t\t  {\n+\t\t\t\t\t\t  index, count}));\n+\t      }\n+\t    return m;\n+\t  }\n+\tif (count <= 0)\n+\t  return null;\n+      }\n+  }\n+\n+  void dump (CPStringBuilder os)\n+  {\n+    os.append (\"(?:\");\n+    token.dumpAll (os);\n+    os.append (')');\n+    if ((max == Integer.MAX_VALUE) && (min <= 1))\n+      os.append ((min == 0) ? '*' : '+');\n+    else if ((min == 0) && (max == 1))\n+      os.append ('?');\n+    else\n+      {\n+\tos.append ('{').append (min);\n+\tif (max > min)\n+\t  {\n+\t    os.append (',');\n+\t    if (max != Integer.MAX_VALUE)\n+\t      os.append (max);\n+\t  }\n+\tos.append ('}');\n+      }\n+    if (stingy)\n+      os.append ('?');\n+  }\n }"}, {"sha": "6a8d247c9d01f40b17912eacf58f655185726baa", "filename": "libjava/classpath/gnu/java/util/regex/RETokenStart.java", "status": "modified", "additions": 113, "deletions": 81, "changes": 194, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenStart.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenStart.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenStart.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,85 +37,117 @@\n \n package gnu.java.util.regex;\n \n-class RETokenStart extends REToken {\n-    private String newline; // matches after a newline\n-    private boolean check_java_line_terminators;\n-    \n-    RETokenStart(int subIndex, String newline) {\n-\tsuper(subIndex);\n-\tthis.newline = newline;\n-\tthis.check_java_line_terminators = false;\n-    }\n-\n-    RETokenStart(int subIndex, String newline, boolean b) {\n-    \tsuper(subIndex);\n-        this.newline = newline;\n-        this.check_java_line_terminators = b;\n-    }\n-\n-    int getMaximumLength() {\n-        return 0;\n-    }\n-    \n-    REMatch matchThis(CharIndexed input, REMatch mymatch) {\n-\t// charAt(index-n) may be unknown on a Reader/InputStream. FIXME\n-\t// Match after a newline if in multiline mode\n-\t\n-\tif (check_java_line_terminators) {\n-\t    char ch = input.charAt(mymatch.index - 1);\n-\t    if (ch != CharIndexed.OUT_OF_BOUNDS) {\n-\t\tif (ch == '\\n') return mymatch;\n-\t\tif (ch == '\\r') {\n-\t\t    char ch1 = input.charAt(mymatch.index);\n-\t\t    if (ch1 != '\\n') return mymatch;\n-\t\t    return null;\n-\t\t}\n-\t\tif (ch == '\\u0085') return mymatch; // A next-line character\n-\t\tif (ch == '\\u2028') return mymatch; // A line-separator character\n-\t\tif (ch == '\\u2029') return mymatch; // A paragraph-separator character\n-\t    }\n-\t}\n-\n-\tif (newline != null) {\n-\t    int len = newline.length();\n-\t    if (mymatch.offset >= len) {\n-\t\tboolean found = true;\n-\t\tchar z;\n-\t\tint i = 0; // position in REToken.newline\n-\t\tchar ch = input.charAt(mymatch.index - len);\n-\t\tdo {\n-\t\t    z = newline.charAt(i);\n-\t\t    if (ch != z) {\n-\t\t\tfound = false;\n-\t\t\tbreak;\n-\t\t    }\n-\t\t    ++i;\n-\t\t    ch = input.charAt(mymatch.index - len + i);\n-\t\t} while (i < len);\n-\t    \n-\t\tif (found) return mymatch;\n-\t    }\n-\t}\n-\t\n-\t// Don't match at all if REG_NOTBOL is set.\n-\tif ((mymatch.eflags & RE.REG_NOTBOL) > 0) return null;\n-\t\n-\tif ((mymatch.eflags & RE.REG_ANCHORINDEX) > 0)\n-\t    return (mymatch.anchor == mymatch.offset) ? \n-\t\tmymatch : null;\n-\telse\n-\t    return ((mymatch.index == 0) && (mymatch.offset == 0)) ?\n-\t\tmymatch : null;\n-    }\n-\n-    boolean returnsFixedLengthmatches() { return true; }\n-\n-    int findFixedLengthMatches(CharIndexed input, REMatch mymatch, int max) {\n-        if (matchThis(input, mymatch) != null) return max;\n-\telse return 0;\n-    }\n-    \n-    void dump(StringBuffer os) {\n-\tos.append('^');\n-    }\n+import gnu.java.lang.CPStringBuilder;\n+\n+class RETokenStart extends REToken\n+{\n+  private String newline;\t// matches after a newline\n+  private boolean check_java_line_terminators;\n+\n+  RETokenStart (int subIndex, String newline)\n+  {\n+    super (subIndex);\n+    this.newline = newline;\n+    this.check_java_line_terminators = false;\n+  }\n+\n+  RETokenStart (int subIndex, String newline, boolean b)\n+  {\n+    super (subIndex);\n+    this.newline = newline;\n+    this.check_java_line_terminators = b;\n+  }\n+\n+  @Override \n+    int getMaximumLength ()\n+  {\n+    return 0;\n+  }\n+\n+  @Override \n+    REMatch matchThis (CharIndexed input, REMatch mymatch)\n+  {\n+    // charAt(index-n) may be unknown on a Reader/InputStream. FIXME\n+    // Match after a newline if in multiline mode\n+\n+    if (check_java_line_terminators)\n+      {\n+\tchar ch = input.charAt (mymatch.index - 1);\n+\tif (ch != CharIndexed.OUT_OF_BOUNDS)\n+\t  {\n+\t    if (ch == '\\n')\n+\t      return mymatch;\n+\t    if (ch == '\\r')\n+\t      {\n+\t\tchar ch1 = input.charAt (mymatch.index);\n+\t\tif (ch1 != '\\n')\n+\t\t  return mymatch;\n+\t\treturn null;\n+\t      }\n+\t    if (ch == '\\u0085')\n+\t      return mymatch;\t// A next-line character\n+\t    if (ch == '\\u2028')\n+\t      return mymatch;\t// A line-separator character\n+\t    if (ch == '\\u2029')\n+\t      return mymatch;\t// A paragraph-separator character\n+\t  }\n+      }\n+\n+    if (newline != null)\n+      {\n+\tint len = newline.length ();\n+\tif (mymatch.offset >= len)\n+\t  {\n+\t    boolean found = true;\n+\t    char z;\n+\t    int i = 0;\t\t// position in REToken.newline\n+\t    char ch = input.charAt (mymatch.index - len);\n+\t    do\n+\t      {\n+\t\tz = newline.charAt (i);\n+\t\tif (ch != z)\n+\t\t  {\n+\t\t    found = false;\n+\t\t    break;\n+\t\t  }\n+\t\t++i;\n+\t\tch = input.charAt (mymatch.index - len + i);\n+\t      }\n+\t    while (i < len);\n+\n+\t    if (found)\n+\t      return mymatch;\n+\t  }\n+      }\n+\n+    // Don't match at all if REG_NOTBOL is set.\n+    if ((mymatch.eflags & RE.REG_NOTBOL) > 0)\n+      return null;\n+\n+    if ((mymatch.eflags & RE.REG_ANCHORINDEX) > 0)\n+      return (mymatch.anchor == mymatch.offset) ? mymatch : null;\n+    else\n+      return ((mymatch.index == 0) && (mymatch.offset == 0)) ? mymatch : null;\n+  }\n+\n+  @Override \n+    boolean returnsFixedLengthMatches ()\n+  {\n+    return true;\n+  }\n+\n+  @Override\n+    int findFixedLengthMatches (CharIndexed input, REMatch mymatch, int max)\n+  {\n+    if (matchThis (input, mymatch) != null)\n+      return max;\n+    else\n+      return 0;\n+  }\n+\n+  @Override\n+    void dump (CPStringBuilder os)\n+  {\n+    os.append ('^');\n+  }\n }"}, {"sha": "9f758b6358884426619884ce1690cf877a4f3c67", "filename": "libjava/classpath/gnu/java/util/regex/RETokenWordBoundary.java", "status": "modified", "additions": 97, "deletions": 72, "changes": 169, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenWordBoundary.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenWordBoundary.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FRETokenWordBoundary.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,79 +38,104 @@\n \n package gnu.java.util.regex;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n /**\n  * Represents a combination lookahead/lookbehind for POSIX [:alnum:].\n  */\n-final class RETokenWordBoundary extends REToken {\n-    private boolean negated;\n-    private int where;\n-    static final int BEGIN = 1;\n-    static final int END = 2;\n-\n-    RETokenWordBoundary(int subIndex, int where, boolean negated) {\n-\tsuper(subIndex);\n-\tthis.where = where;\n-\tthis.negated = negated;\n-    }\n-\n-    int getMaximumLength() {\n-        return 0;\n-    }\n-\n-    \n-    REMatch matchThis(CharIndexed input, REMatch mymatch) {\n-\t// Word boundary means input[index-1] was a word character\n-\t// and input[index] is not, or input[index] is a word character\n-\t// and input[index-1] was not\n-\t//  In the string \"one two three\", these positions match:\n-\t//  |o|n|e| |t|w|o| |t|h|r|e|e|\n-\t//  ^     ^ ^     ^ ^         ^\n-\tboolean after = false;  // is current character a letter or digit?\n-\tboolean before = false; // is previous character a letter or digit?\n-\tchar ch;\n-\n-\t// TODO: Also check REG_ANCHORINDEX vs. anchor\n-\tif (((mymatch.eflags & RE.REG_ANCHORINDEX) != RE.REG_ANCHORINDEX) \n-\t    || (mymatch.offset + mymatch.index > mymatch.anchor)) {\n-\t    if ((ch = input.charAt(mymatch.index - 1)) != CharIndexed.OUT_OF_BOUNDS) {\n-\t\tbefore = Character.isLetterOrDigit(ch) || (ch == '_');\n-\t    }\n-\t}\n-\n-\tif ((ch = input.charAt(mymatch.index)) != CharIndexed.OUT_OF_BOUNDS) {\n-\t    after = Character.isLetterOrDigit(ch) || (ch == '_');\n-\t}\n-\n-\t// if (before) and (!after), we're at end (\\>)\n-\t// if (after) and (!before), we're at beginning (\\<)\n-\tboolean doNext = false;\n-\n-\tif ((where & BEGIN) == BEGIN) {\n-\t    doNext = after && !before;\n-\t}\n-\tif ((where & END) == END) {\n-\t    doNext ^= before && !after;\n-\t}\n-\n-\tif (negated) doNext = !doNext;\n-\n-\treturn (doNext ? mymatch : null);\n-    }\n-\n-    boolean returnsFixedLengthMatches() { return true; }\n-\n-    int findFixedLengthMatches(CharIndexed input, REMatch mymatch, int max) {\n-        if(matchThis(input, mymatch) != null) return max;\n-\telse return 0;\n-    }\n-    \n-    void dump(StringBuffer os) {\n-\tif (where == (BEGIN | END)) {\n-\t    os.append( negated ? \"\\\\B\" : \"\\\\b\" );\n-\t} else if (where == BEGIN) {\n-\t    os.append(\"\\\\<\");\n-\t} else {\n-\t    os.append(\"\\\\>\");\n-\t}\n-    }\n+final class RETokenWordBoundary extends REToken\n+{\n+  private boolean negated;\n+  private int where;\n+  static final int BEGIN = 1;\n+  static final int END = 2;\n+\n+    RETokenWordBoundary (int subIndex, int where, boolean negated)\n+  {\n+    super (subIndex);\n+    this.where = where;\n+    this.negated = negated;\n+  }\n+\n+  int getMaximumLength ()\n+  {\n+    return 0;\n+  }\n+\n+\n+  REMatch matchThis (CharIndexed input, REMatch mymatch)\n+  {\n+    // Word boundary means input[index-1] was a word character\n+    // and input[index] is not, or input[index] is a word character\n+    // and input[index-1] was not\n+    //  In the string \"one two three\", these positions match:\n+    //  |o|n|e| |t|w|o| |t|h|r|e|e|\n+    //  ^     ^ ^     ^ ^         ^\n+    boolean after = false;\t// is current character a letter or digit?\n+    boolean before = false;\t// is previous character a letter or digit?\n+    char ch;\n+\n+    // TODO: Also check REG_ANCHORINDEX vs. anchor\n+    if (((mymatch.eflags & RE.REG_ANCHORINDEX) != RE.REG_ANCHORINDEX)\n+\t|| (mymatch.offset + mymatch.index > mymatch.anchor))\n+      {\n+\tif ((ch =\n+\t     input.charAt (mymatch.index - 1)) != CharIndexed.OUT_OF_BOUNDS)\n+\t  {\n+\t    before = Character.isLetterOrDigit (ch) || (ch == '_');\n+\t  }\n+      }\n+\n+    if ((ch = input.charAt (mymatch.index)) != CharIndexed.OUT_OF_BOUNDS)\n+      {\n+\tafter = Character.isLetterOrDigit (ch) || (ch == '_');\n+      }\n+\n+    // if (before) and (!after), we're at end (\\>)\n+    // if (after) and (!before), we're at beginning (\\<)\n+    boolean doNext = false;\n+\n+    if ((where & BEGIN) == BEGIN)\n+      {\n+\tdoNext = after && !before;\n+      }\n+    if ((where & END) == END)\n+      {\n+\tdoNext ^= before && !after;\n+      }\n+\n+    if (negated)\n+      doNext = !doNext;\n+\n+    return (doNext ? mymatch : null);\n+  }\n+\n+  boolean returnsFixedLengthMatches ()\n+  {\n+    return true;\n+  }\n+\n+  int findFixedLengthMatches (CharIndexed input, REMatch mymatch, int max)\n+  {\n+    if (matchThis (input, mymatch) != null)\n+      return max;\n+    else\n+      return 0;\n+  }\n+\n+  void dump (CPStringBuilder os)\n+  {\n+    if (where == (BEGIN | END))\n+      {\n+\tos.append (negated ? \"\\\\B\" : \"\\\\b\");\n+      }\n+    else if (where == BEGIN)\n+      {\n+\tos.append (\"\\\\<\");\n+      }\n+    else\n+      {\n+\tos.append (\"\\\\>\");\n+      }\n+  }\n }"}, {"sha": "5f8c749023262799e5f9347da31ce63cd85f026f", "filename": "libjava/classpath/gnu/java/util/regex/UncheckedRE.java", "status": "modified", "additions": 18, "deletions": 13, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FUncheckedRE.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FUncheckedRE.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjava%2Futil%2Fregex%2FUncheckedRE.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -55,7 +55,8 @@\n  * @since gnu.regexp 1.1.4\n  */\n \n-public final class UncheckedRE extends RE {\n+public final class UncheckedRE extends RE\n+{\n   /**\n    * Constructs a regular expression pattern buffer without any compilation\n    * flags set, and using the default syntax (RESyntax.RE_SYNTAX_PERL5).\n@@ -66,8 +67,9 @@ public final class UncheckedRE extends RE {\n    * @exception RuntimeException The input pattern could not be parsed.\n    * @exception NullPointerException The pattern was null.\n    */\n-  public UncheckedRE(Object pattern) {\n-      this(pattern,0,RESyntax.RE_SYNTAX_PERL5);\n+  public UncheckedRE (Object pattern)\n+  {\n+    this (pattern, 0, RESyntax.RE_SYNTAX_PERL5);\n   }\n \n   /**\n@@ -81,8 +83,9 @@ public UncheckedRE(Object pattern) {\n    * @exception RuntimeException The input pattern could not be parsed.\n    * @exception NullPointerException The pattern was null.\n    */\n-  public UncheckedRE(Object pattern, int cflags) {\n-      this(pattern,cflags,RESyntax.RE_SYNTAX_PERL5);\n+  public UncheckedRE (Object pattern, int cflags)\n+  {\n+    this (pattern, cflags, RESyntax.RE_SYNTAX_PERL5);\n   }\n \n   /**\n@@ -97,13 +100,15 @@ public UncheckedRE(Object pattern, int cflags) {\n    * @exception RuntimeException The input pattern could not be parsed.\n    * @exception NullPointerException The pattern was null.\n    */\n-  public UncheckedRE(Object pattern, int cflags, RESyntax syntax) {\n-      try {\n-\t  initialize(pattern,cflags,syntax,0,0);\n-      } catch (REException e) { \n-\t  throw new RuntimeException(e.getMessage());\n-      }\n+  public UncheckedRE (Object pattern, int cflags, RESyntax syntax)\n+  {\n+    try\n+    {\n+      initialize (pattern, cflags, syntax, 0, 0);\n+    } \n+    catch (REException e)\n+    {\n+      throw new RuntimeException (e.getMessage ());\n+    }\n   }\n }\n-\n-"}, {"sha": "829f40cbf84d631ffc7937b76f86e87e7e6887b3", "filename": "libjava/classpath/gnu/javax/activation/viewers/ImageViewer.java", "status": "added", "additions": 138, "deletions": 0, "changes": 138, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Factivation%2Fviewers%2FImageViewer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Factivation%2Fviewers%2FImageViewer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Factivation%2Fviewers%2FImageViewer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -0,0 +1,138 @@\n+/* ImageViewer.java -- Simple image display component.\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.javax.activation.viewers;\n+\n+import java.awt.Component;\n+import java.awt.Dimension;\n+import java.awt.Image;\n+import java.awt.Graphics;\n+import java.awt.MediaTracker;\n+import java.awt.Toolkit;\n+import java.io.ByteArrayOutputStream;\n+import java.io.InputStream;\n+import java.io.IOException;\n+\n+import javax.activation.CommandObject;\n+import javax.activation.DataHandler;\n+\n+/**\n+ * Simple image display component.\n+ *\n+ * @author <a href='mailto:dog@gnu.org'>Chris Burdess</a>\n+ * @version 1.0.2\n+ */\n+public class ImageViewer extends Component\n+  implements CommandObject\n+{\n+\n+  private Image image;\n+\n+  /**\n+   * Returns the preferred size for this component (the image size).\n+   */\n+  public Dimension getPreferredSize()\n+    {\n+      Dimension ps = new Dimension(0, 0);\n+      if (image != null)\n+        {\n+          ps.width = image.getWidth(this);\n+          ps.height = image.getHeight(this);\n+        }\n+      return ps;\n+    }\n+\n+  public void setCommandContext(String verb, DataHandler dh)\n+    throws IOException\n+  {\n+    // Read image into a byte array\n+    InputStream in = dh.getInputStream();\n+    ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n+    byte[] buf = new byte[4096];\n+    for (int len = in.read(buf); len != -1; len = in.read(buf))\n+      bytes.write(buf, 0, len);\n+    in.close();\n+    // Create and prepare the image\n+    Toolkit toolkit = getToolkit();\n+    Image img = toolkit.createImage(bytes.toByteArray());\n+    try\n+      {\n+        MediaTracker tracker = new MediaTracker(this);\n+        tracker.addImage(img, 0);\n+        tracker.waitForID(0);\n+      }\n+    catch (InterruptedException e)\n+      {\n+      }\n+    toolkit.prepareImage(img, -1, -1, this);\n+  }\n+\n+  /**\n+   * Image bits arrive.\n+   */\n+  public boolean imageUpdate(Image image, int flags, int x, int y,\n+                             int width, int height)\n+  {\n+    if ((flags & ALLBITS) != 0)\n+      {\n+        this.image = image;\n+        invalidate();\n+        repaint();\n+        return false;\n+      }\n+    return ((flags & ERROR) == 0);\n+  }\n+\n+  /**\n+   * Scale the image into this component's bounds.\n+   */\n+  public void paint(Graphics g)\n+  {\n+    if (image != null)\n+      {\n+        Dimension is = new Dimension(image.getWidth(this),\n+                                     image.getHeight(this));\n+        if (is.width > -1 && is.height > -1)\n+          {\n+            Dimension cs = getSize();\n+            g.drawImage(image, 0, 0, cs.width, cs.height, \n+                        0, 0, is.width, is.height, this);\n+          }\n+      }\n+  }\n+\n+}"}, {"sha": "1995ae122829384f0aab2a9f3ea504bbc1b0a27e", "filename": "libjava/classpath/gnu/javax/activation/viewers/TextEditor.java", "status": "added", "additions": 119, "deletions": 0, "changes": 119, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Factivation%2Fviewers%2FTextEditor.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Factivation%2Fviewers%2FTextEditor.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Factivation%2Fviewers%2FTextEditor.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -0,0 +1,119 @@\n+/* TextEditor.java -- Simple text editor component.\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.javax.activation.viewers;\n+\n+import java.awt.Dimension;\n+import java.awt.TextArea;\n+import java.awt.event.ActionEvent;\n+import java.awt.event.ActionListener;\n+import java.io.ByteArrayOutputStream;\n+import java.io.InputStream;\n+import java.io.IOException;\n+import java.io.OutputStream;\n+import javax.activation.CommandObject;\n+import javax.activation.DataHandler;\n+\n+/**\n+ * Simple text editor component.\n+ *\n+ * @author <a href='mailto:dog@gnu.org'>Chris Burdess</a>\n+ * @version 1.0.2\n+ */\n+public class TextEditor extends TextArea\n+    implements CommandObject, ActionListener\n+{\n+\n+    private transient DataHandler dh;\n+\n+    public TextEditor()\n+    {\n+        super(\"\", 24, 80, 1);\n+    }\n+\n+    public Dimension getPreferredSize()\n+    {\n+        return getMinimumSize(24, 80);\n+    }\n+\n+    public void setCommandContext(String verb, DataHandler dh)\n+        throws IOException\n+    {\n+        this.dh = dh;\n+        InputStream in = dh.getInputStream();\n+        ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n+        byte[] buf = new byte[4096];\n+        for (int len = in.read(buf); len != -1; len = in.read(buf))\n+            bytes.write(buf, 0, len);\n+        in.close();\n+        setText(bytes.toString());\n+    }\n+\n+    public void actionPerformed(ActionEvent event)\n+    {\n+        if (\"save\".equals(event.getActionCommand()) && dh != null)\n+        {\n+            OutputStream out = null;\n+            try\n+            {\n+                out = dh.getOutputStream();\n+                if (out != null)\n+                    out.write(getText().getBytes());\n+            }\n+            catch (IOException e)\n+            {\n+                e.printStackTrace(System.err);\n+            }\n+            finally\n+            {\n+                if (out != null)\n+                {\n+                    try\n+                    {\n+                        \n+                        out.close();\n+                    }\n+                    catch (IOException e)\n+                    {\n+                        e.printStackTrace(System.err);\n+                    }\n+                }\n+            }\n+        }\n+    }\n+    \n+}"}, {"sha": "2b4aa90c58fae915b2fa6d643a4ff24b193328ff", "filename": "libjava/classpath/gnu/javax/activation/viewers/TextViewer.java", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Factivation%2Fviewers%2FTextViewer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Factivation%2Fviewers%2FTextViewer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Factivation%2Fviewers%2FTextViewer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -0,0 +1,81 @@\n+/* TextViewer.java -- Simple text viewer component.\n+   Copyright (C) 2004 Free Software Foundation, Inc.\n+\n+This file is part of GNU Classpath.\n+\n+GNU Classpath is free software; you can redistribute it and/or modify\n+it under the terms of the GNU General Public License as published by\n+the Free Software Foundation; either version 2, or (at your option)\n+any later version.\n+\n+GNU Classpath is distributed in the hope that it will be useful, but\n+WITHOUT ANY WARRANTY; without even the implied warranty of\n+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n+General Public License for more details.\n+\n+You should have received a copy of the GNU General Public License\n+along with GNU Classpath; see the file COPYING.  If not, write to the\n+Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA\n+02110-1301 USA.\n+\n+Linking this library statically or dynamically with other modules is\n+making a combined work based on this library.  Thus, the terms and\n+conditions of the GNU General Public License cover the whole\n+combination.\n+\n+As a special exception, the copyright holders of this library give you\n+permission to link this library with independent modules to produce an\n+executable, regardless of the license terms of these independent\n+modules, and to copy and distribute the resulting executable under\n+terms of your choice, provided that you also meet, for each linked\n+independent module, the terms and conditions of the license of that\n+module.  An independent module is a module which is not derived from\n+or based on this library.  If you modify this library, you may extend\n+this exception to your version of the library, but you are not\n+obligated to do so.  If you do not wish to do so, delete this\n+exception statement from your version. */\n+\n+package gnu.javax.activation.viewers;\n+\n+import java.awt.Dimension;\n+import java.awt.TextArea;\n+import java.io.ByteArrayOutputStream;\n+import java.io.InputStream;\n+import java.io.IOException;\n+import javax.activation.CommandObject;\n+import javax.activation.DataHandler;\n+\n+/**\n+ * Simple text display component.\n+ *\n+ * @author <a href='mailto:dog@gnu.org'>Chris Burdess</a>\n+ * @version 1.0.2\n+ */\n+public class TextViewer extends TextArea\n+    implements CommandObject\n+{\n+\n+    public TextViewer()\n+    {\n+        super(\"\", 24, 80, 1);\n+        setEditable(false);\n+    }\n+\n+    public Dimension getPreferredSize()\n+    {\n+        return getMinimumSize(24, 80);\n+    }\n+\n+    public void setCommandContext(String verb, DataHandler dh)\n+        throws IOException\n+    {\n+        InputStream in = dh.getInputStream();\n+        ByteArrayOutputStream bytes = new ByteArrayOutputStream();\n+        byte[] buf = new byte[4096];\n+        for (int len = in.read(buf); len != -1; len = in.read(buf))\n+            bytes.write(buf, 0, len);\n+        in.close();\n+        setText(bytes.toString());\n+    }\n+    \n+}"}, {"sha": "4e93322efb946737445b8f4635d6ae9f8d2f2b8f", "filename": "libjava/classpath/gnu/javax/crypto/assembly/TransformerException.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FTransformerException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FTransformerException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fassembly%2FTransformerException.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.crypto.assembly;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.PrintStream;\n import java.io.PrintWriter;\n \n@@ -129,7 +131,7 @@ public void printStackTrace(PrintWriter pw)\n    */\n   public String toString()\n   {\n-    StringBuffer sb = new StringBuffer(this.getClass().getName())\n+    CPStringBuilder sb = new CPStringBuilder(this.getClass().getName())\n         .append(\": \").append(super.toString());\n     if (_exception != null)\n       sb.append(\"; caused by: \").append(_exception.toString());"}, {"sha": "bae142a638db44ed40d9650078ea3d107825bf58", "filename": "libjava/classpath/gnu/javax/crypto/cipher/BaseCipher.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FBaseCipher.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FBaseCipher.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fcipher%2FBaseCipher.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.crypto.cipher;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.Configuration;\n \n import java.security.InvalidKeyException;\n@@ -88,7 +90,7 @@ protected BaseCipher(String name, int defaultBlockSize, int defaultKeySize)\n \n   public String name()\n   {\n-    StringBuffer sb = new StringBuffer(name).append('-');\n+    CPStringBuilder sb = new CPStringBuilder(name).append('-');\n     if (currentKey == null)\n       sb.append(String.valueOf(8 * defaultBlockSize));\n     else"}, {"sha": "a917e2230880f969e1b3b8516b147cb0968c6e9e", "filename": "libjava/classpath/gnu/javax/crypto/jce/sig/DHParameters.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fjce%2Fsig%2FDHParameters.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fjce%2Fsig%2FDHParameters.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fjce%2Fsig%2FDHParameters.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.crypto.jce.sig;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.Registry;\n import gnu.java.security.der.DER;\n import gnu.java.security.der.DERReader;\n@@ -195,7 +197,7 @@ protected byte[] engineGetEncoded(String format) throws IOException\n \n   protected String engineToString()\n   {\n-    StringBuffer sb = new StringBuffer(\"p=\");\n+    CPStringBuilder sb = new CPStringBuilder(\"p=\");\n     if (p == null)\n       sb.append(\"???\");\n     else"}, {"sha": "405f011adde6ccf02f6402d9699d569e523dcdbf", "filename": "libjava/classpath/gnu/javax/crypto/key/KeyAgreementException.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fkey%2FKeyAgreementException.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fkey%2FKeyAgreementException.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fkey%2FKeyAgreementException.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.crypto.key;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.PrintStream;\n import java.io.PrintWriter;\n import java.io.Serializable;\n@@ -157,7 +159,7 @@ public void printStackTrace(PrintWriter pw)\n    */\n   public String toString()\n   {\n-    StringBuffer sb = new StringBuffer(this.getClass().getName()).append(\": \")\n+    CPStringBuilder sb = new CPStringBuilder(this.getClass().getName()).append(\": \")\n         .append(super.toString());\n     if (cause != null)\n       sb.append(\"; caused by: \").append(cause.toString());"}, {"sha": "02e43229044f492d9512490361aedb1d1e821841", "filename": "libjava/classpath/gnu/javax/crypto/mode/BaseMode.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fmode%2FBaseMode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fmode%2FBaseMode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fmode%2FBaseMode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.crypto.mode;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.javax.crypto.cipher.IBlockCipher;\n \n import java.security.InvalidKeyException;\n@@ -110,7 +112,7 @@ public void update(byte[] in, int inOffset, byte[] out, int outOffset)\n \n   public String name()\n   {\n-    return new StringBuffer(name).append('(').append(cipher.name()).append(')')\n+    return new CPStringBuilder(name).append('(').append(cipher.name()).append(')')\n         .toString();\n   }\n "}, {"sha": "adc2c9bbc027d499600622648b38722dbf0ce971", "filename": "libjava/classpath/gnu/javax/crypto/pad/BasePad.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fpad%2FBasePad.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fpad%2FBasePad.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fpad%2FBasePad.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.crypto.pad;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.Configuration;\n \n import java.util.Map;\n@@ -67,7 +69,7 @@ protected BasePad(final String name)\n \n   public String name()\n   {\n-    final StringBuffer sb = new StringBuffer(name);\n+    final CPStringBuilder sb = new CPStringBuilder(name);\n     if (blockSize != -1)\n       sb.append('-').append(String.valueOf(8 * blockSize));\n     return sb.toString();"}, {"sha": "a6a06b6b849d7a940893f8acfa0e9ef6cc1bd156", "filename": "libjava/classpath/gnu/javax/crypto/sasl/crammd5/CramMD5Util.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fcrammd5%2FCramMD5Util.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fcrammd5%2FCramMD5Util.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fcrammd5%2FCramMD5Util.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.crypto.sasl.crammd5;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.Registry;\n import gnu.java.security.util.Util;\n import gnu.javax.crypto.mac.HMacFactory;\n@@ -83,7 +85,7 @@ static byte[] createMsgID() throws SaslException\n     final byte[] result;\n     try\n       {\n-        result = new StringBuffer(\"<\")\n+        result = new CPStringBuilder(\"<\")\n             .append(encoded.substring(0,encoded.length()))\n             .append(\".\").append(String.valueOf(System.currentTimeMillis()))\n             .append(\"@\").append(hostname).append(\">\")"}, {"sha": "4900842a7371f24cc7c5f12e3f799046bbd42fdf", "filename": "libjava/classpath/gnu/javax/crypto/sasl/crammd5/PasswordFile.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fcrammd5%2FPasswordFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fcrammd5%2FPasswordFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fcrammd5%2FPasswordFile.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.crypto.sasl.crammd5;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.javax.crypto.sasl.NoSuchUserException;\n import gnu.javax.crypto.sasl.UserAlreadyExistsException;\n \n@@ -201,13 +203,13 @@ private synchronized void savePasswd() throws IOException\n             pw = new PrintWriter(fos);\n             String key;\n             String[] fields;\n-            StringBuffer sb;\n+            CPStringBuilder sb;\n             int i;\n             for (Iterator it = entries.keySet().iterator(); it.hasNext();)\n               {\n                 key = (String) it.next();\n                 fields = (String[]) entries.get(key);\n-                sb = new StringBuffer(fields[0]);\n+                sb = new CPStringBuilder(fields[0]);\n                 for (i = 1; i < fields.length; i++)\n                   sb.append(\":\").append(fields[i]);\n                 pw.println(sb.toString());"}, {"sha": "4888214d8215cee1436c1beac2a023c4e44d7f6c", "filename": "libjava/classpath/gnu/javax/crypto/sasl/plain/PasswordFile.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fplain%2FPasswordFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fplain%2FPasswordFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fplain%2FPasswordFile.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.crypto.sasl.plain;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.action.GetPropertyAction;\n import gnu.javax.crypto.sasl.NoSuchUserException;\n import gnu.javax.crypto.sasl.UserAlreadyExistsException;\n@@ -205,13 +207,13 @@ private synchronized void savePasswd() throws IOException\n             pw = new PrintWriter(fos);\n             String key;\n             String[] fields;\n-            StringBuffer sb;\n+            CPStringBuilder sb;\n             Enumeration keys = entries.keys();\n             while (keys.hasMoreElements())\n               {\n                 key = (String) keys.nextElement();\n                 fields = (String[]) entries.get(key);\n-                sb = new StringBuffer(fields[0]);\n+                sb = new CPStringBuilder(fields[0]);\n                 for (int i = 1; i < fields.length; i++)\n                   sb.append(\":\" + fields[i]);\n                 pw.println(sb.toString());"}, {"sha": "87fffa01ee1cb81f964c5068df651434b20b0ff2", "filename": "libjava/classpath/gnu/javax/crypto/sasl/plain/PlainClient.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fplain%2FPlainClient.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fplain%2FPlainClient.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fplain%2FPlainClient.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.crypto.sasl.plain;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.Registry;\n import gnu.javax.crypto.sasl.ClientMechanism;\n \n@@ -128,7 +130,7 @@ public byte[] evaluateChallenge(final byte[] challenge) throws SaslException\n           }\n         if (password == null)\n           throw new SaslException(\"null password supplied\");\n-        final StringBuffer sb = new StringBuffer();\n+        final CPStringBuilder sb = new CPStringBuilder();\n         if (authorizationID != null)\n           sb.append(authorizationID);\n         sb.append('\\0');"}, {"sha": "7946e84fbcc3a7c36bd037a95d9c454e52bd58d3", "filename": "libjava/classpath/gnu/javax/crypto/sasl/srp/PasswordFile.java", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fsrp%2FPasswordFile.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fsrp%2FPasswordFile.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fsrp%2FPasswordFile.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.crypto.sasl.srp;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.Registry;\n import gnu.java.security.util.Util;\n import gnu.javax.crypto.key.srp6.SRPAlgorithm;\n@@ -445,12 +447,12 @@ private void writeConf(final PrintWriter pw)\n   {\n     String ndx;\n     String[] mpi;\n-    StringBuffer sb;\n+    CPStringBuilder sb;\n     for (Iterator it = configurations.keySet().iterator(); it.hasNext();)\n       {\n         ndx = (String) it.next();\n         mpi = (String[]) configurations.get(ndx);\n-        sb = new StringBuffer(ndx)\n+        sb = new CPStringBuilder(ndx)\n             .append(\":\").append(mpi[0])\n             .append(\":\").append(mpi[1]);\n         pw.println(sb.toString());\n@@ -591,7 +593,7 @@ private void writePasswd(final PrintWriter pw1, final PrintWriter pw2)\n   {\n     String user, digestID;\n     HashMap fields, verifiers;\n-    StringBuffer sb1, sb2;\n+    CPStringBuilder sb1, sb2;\n     Iterator j;\n     final Iterator i = entries.keySet().iterator();\n     while (i.hasNext())\n@@ -601,7 +603,7 @@ private void writePasswd(final PrintWriter pw1, final PrintWriter pw2)\n         if (! user.equals(fields.get(USER_FIELD)))\n           throw new IOException(\"Inconsistent SRP password data\");\n         verifiers = (HashMap) fields.get(VERIFIERS_FIELD);\n-        sb1 = new StringBuffer(user)\n+        sb1 = new CPStringBuilder(user)\n             .append(\":\").append((String) verifiers.get(\"0\"))\n             .append(\":\").append((String) fields.get(SALT_FIELD))\n             .append(\":\").append((String) fields.get(CONFIG_FIELD));\n@@ -614,7 +616,7 @@ private void writePasswd(final PrintWriter pw1, final PrintWriter pw2)\n             if (! \"0\".equals(digestID))\n               {\n                 // #0 is the default digest, already present in tpasswd!\n-                sb2 = new StringBuffer(digestID)\n+                sb2 = new CPStringBuilder(digestID)\n                     .append(\":\").append(user)\n                     .append(\":\").append((String) verifiers.get(digestID));\n                 pw2.println(sb2.toString());"}, {"sha": "3406c14cec452628e70e6de1a46d19111e74674d", "filename": "libjava/classpath/gnu/javax/crypto/sasl/srp/SRPClient.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fsrp%2FSRPClient.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fsrp%2FSRPClient.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fsrp%2FSRPClient.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.crypto.sasl.srp;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.Configuration;\n import gnu.java.security.Registry;\n import gnu.java.security.hash.MD5;\n@@ -863,7 +865,7 @@ else if (SRPRegistry.OPTION_CONFIDENTIALITY.equals(mandatory))\n     // For now we just select the defaults. Later we need to add support for\n     // properties (perhaps in a file) where a user can specify the list of\n     // algorithms they would prefer to use.\n-    final StringBuffer sb = new StringBuffer();\n+    final CPStringBuilder sb = new CPStringBuilder();\n     sb.append(SRPRegistry.OPTION_SRP_DIGEST)\n       .append(\"=\").append(mdName).append(\",\");\n     if (replayDetection)"}, {"sha": "3f000deefbf84b69b12c3b84aaabc5881db414b3", "filename": "libjava/classpath/gnu/javax/crypto/sasl/srp/SRPServer.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fsrp%2FSRPServer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fsrp%2FSRPServer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fsrp%2FSRPServer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.crypto.sasl.srp;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.Configuration;\n import gnu.java.security.Registry;\n import gnu.java.security.util.PRNG;\n@@ -612,7 +614,7 @@ private String createL()\n     s = (String) properties.get(SRPRegistry.SRP_REPLAY_DETECTION);\n     final boolean replayDetection = (s == null ? SRPRegistry.DEFAULT_REPLAY_DETECTION\n                                                : Boolean.valueOf(s).booleanValue());\n-    final StringBuffer sb = new StringBuffer();\n+    final CPStringBuilder sb = new CPStringBuilder();\n     sb.append(SRPRegistry.OPTION_SRP_DIGEST).append(\"=\")\n       .append(srp.getAlgorithm()).append(\",\");\n "}, {"sha": "9fa83295a0f684738b2c7d600a2cc0458b83de29", "filename": "libjava/classpath/gnu/javax/crypto/sasl/srp/ServerStore.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fsrp%2FServerStore.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fsrp%2FServerStore.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fcrypto%2Fsasl%2Fsrp%2FServerStore.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.crypto.sasl.srp;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.util.HashMap;\n \n /**\n@@ -84,7 +86,7 @@ static synchronized final ServerStore instance()\n   static synchronized final byte[] getNewSessionID()\n   {\n     final String sid = String.valueOf(++counter);\n-    return new StringBuffer(\"SID-\")\n+    return new CPStringBuilder(\"SID-\")\n         .append(\"0000000000\".substring(0, 10 - sid.length())).append(sid)\n         .toString().getBytes();\n   }"}, {"sha": "be42ffae1ee016b7afdb8f8b67322dfc03779ea4", "filename": "libjava/classpath/gnu/javax/imageio/bmp/BMPImageWriter.java", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPImageWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPImageWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPImageWriter.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -178,7 +178,6 @@ public void write(IIOMetadata streamMetadata, IIOImage image,\n       encoder.encode(out, streamMetadata, image, param);\n     else\n       throw new BMPException(\"Encoder has not been initialized.\");\n-    out.close();\n   }\n   \n   /**"}, {"sha": "32f9f59d1acc1b23a7c8232fb295d1e4e91a93e4", "filename": "libjava/classpath/gnu/javax/imageio/bmp/BMPImageWriterSpi.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPImageWriterSpi.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPImageWriterSpi.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fimageio%2Fbmp%2FBMPImageWriterSpi.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -51,7 +51,7 @@\n   static final String vendorName = \"GNU\";\n   static final String version = \"0.1\";\n   static final String writerClassName = \"gnu.javax.imageio.bmp.BMPImageWriter\";\n-  static final String[] names = { \"Microsoft Windows BMP\" };\n+  static final String[] names = { \"bmp\", \"BMP\", \"Microsoft Windows BMP\" };\n   static final String[] suffixes = { \".bmp\", \".bm\" };\n   static final String[] MIMETypes = { \"image/bmp\", \"image/x-windows-bmp\" };\n   static final String[] readerSpiNames = { \"gnu.javax.imageio.bmp.BMPImageReaderSpi\" };"}, {"sha": "e35c3b11745d90439e83783a4ec88b1748dd312d", "filename": "libjava/classpath/gnu/javax/management/Server.java", "status": "modified", "additions": 60, "deletions": 63, "changes": 123, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fmanagement%2FServer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fmanagement%2FServer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fmanagement%2FServer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -48,12 +48,13 @@\n import java.lang.reflect.InvocationTargetException;\n import java.lang.reflect.Method;\n \n-import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Iterator;\n import java.util.Map;\n import java.util.Set;\n+\n import java.util.concurrent.atomic.AtomicLong;\n+import java.util.concurrent.ConcurrentHashMap;\n \n import javax.management.Attribute;\n import javax.management.AttributeList;\n@@ -113,19 +114,20 @@\n   /**\n    * The registered beans, represented as a map of\n    * {@link javax.management.ObjectName}s to\n-   * {@link java.lang.Object}s.\n+   * {@link gnu.javax.management.Server.ServerInfo}s.\n    */\n-  private final Map beans = new HashMap();\n+  private final ConcurrentHashMap<ObjectName,ServerInfo> beans =\n+    new ConcurrentHashMap<ObjectName,ServerInfo>();\n \n   /**\n    * The default domain.\n    */\n-  private String defaultDomain;\n+  private final String defaultDomain;\n \n   /**\n    * The outer server.\n    */\n-  private MBeanServer outer;\n+  private final MBeanServer outer;\n \n   /**\n    * The class loader repository.\n@@ -134,9 +136,15 @@\n \n   /**\n    * The map of listener delegates to the true\n-   * listener.\n+   * listener.  We wrap this in an inner class\n+   * to delay initialisation until a listener\n+   * is actually added.\n    */\n-  private Map listeners;\n+  private static class LazyListenersHolder\n+  {\n+    private static final Map<NotificationListener,NotificationListener> listeners =\n+      new ConcurrentHashMap<NotificationListener,NotificationListener>();\n+  }\n \n   /**\n    * An MBean that emits notifications when an MBean is registered and\n@@ -145,7 +153,10 @@\n    */\n   private final MBeanServerDelegate delegate;\n \n-  static private final AtomicLong sequenceNumber = new AtomicLong(1);\n+  /**\n+   * Provides sequencing for notifications about registrations.\n+   */\n+  private static final AtomicLong sequenceNumber = new AtomicLong(1);\n \n   /**\n    * Initialise the delegate name.\n@@ -274,7 +285,7 @@ private void checkSecurity(ObjectName name, String member,\n   private Object getBean(ObjectName name)\n     throws InstanceNotFoundException\n   {\n-    ServerInfo bean = (ServerInfo) beans.get(name);\n+    ServerInfo bean = beans.get(name);\n     if (bean == null)\n       throw new InstanceNotFoundException(\"The bean, \" + name +\n \t\t\t\t\t  \", was not found.\");\n@@ -319,12 +330,10 @@ public void addNotificationListener(ObjectName name, NotificationListener listen\n     if (bean instanceof NotificationBroadcaster)\n       {\n \tNotificationBroadcaster bbean = (NotificationBroadcaster) bean;\n-\tif (listeners == null)\n-\t  listeners = new HashMap();\n \tNotificationListener indirection = new ServerNotificationListener(bean, name,\n \t\t\t\t\t\t\t\t\t  listener);\n \tbbean.addNotificationListener(indirection, filter, passback);\n-\tlisteners.put(listener, indirection);\n+\tLazyListenersHolder.listeners.put(listener, indirection);\n       }\n   }\n \n@@ -671,7 +680,7 @@ public ObjectInputStream deserialize(String name, byte[] data)\n   {\n     try\n       {\n-\tClass c = getClassLoaderRepository().loadClass(name);\n+\tClass<?> c = getClassLoaderRepository().loadClass(name);\n \treturn new ServerInputStream(new ByteArrayInputStream(data),\n \t\t\t\t\t   c.getClassLoader());\n       }\n@@ -717,7 +726,7 @@ public ObjectInputStream deserialize(String name, ObjectName loader, byte[] data\n   {\n     try\n       {\n-\tClass c = getClassLoader(loader).loadClass(name);\n+\tClass<?> c = getClassLoader(loader).loadClass(name);\n \treturn new ServerInputStream(new ByteArrayInputStream(data),\n \t\t\t\t\t   c.getClassLoader());\n       }\n@@ -951,7 +960,6 @@ public String getDefaultDomain()\n     return defaultDomain;\n   }\n \n-\n   /**\n    * Returns an array containing all the domains used by beans registered\n    * with this server.  The ordering of the array is undefined.\n@@ -975,11 +983,11 @@ public String getDefaultDomain()\n   public String[] getDomains()\n   {\n     checkSecurity(null, null, \"getDomains\");\n-    Set domains = new HashSet();\n-    Iterator iterator = beans.keySet().iterator();\n+    Set<String> domains = new HashSet<String>();\n+    Iterator<ObjectName> iterator = beans.keySet().iterator();\n     while (iterator.hasNext())\n       {\n-\tString d  = ((ObjectName) iterator.next()).getDomain();\n+\tString d = iterator.next().getDomain();\n \ttry\n \t  {\n \t    checkSecurity(new ObjectName(d + \":x=x\"), null, \"getDomains\");\n@@ -990,7 +998,7 @@ public String[] getDomains()\n \t    /* Ignored */\n \t  }\n       }\n-    return (String[]) domains.toArray(new String[domains.size()]);\n+    return domains.toArray(new String[domains.size()]);\n   }\n \n   /**\n@@ -1077,7 +1085,7 @@ public MBeanInfo getMBeanInfo(ObjectName name)\n   public ObjectInstance getObjectInstance(ObjectName name)\n     throws InstanceNotFoundException\n   {\n-    ServerInfo bean = (ServerInfo) beans.get(name);\n+    ServerInfo bean = beans.get(name);\n     if (bean == null)\n       throw new InstanceNotFoundException(\"The bean, \" + name +\n \t\t\t\t\t  \", was not found.\");\n@@ -1158,7 +1166,7 @@ public Object instantiate(String name, Object[] params, String[] sig)\n \t  new IllegalArgumentException(\"The name was null.\");\n \tthrow new RuntimeOperationsException(e);\n       }\n-    Class[] sigTypes = new Class[sig.length];\n+    Class<?>[] sigTypes = new Class[sig.length];\n     for (int a = 0; a < sigTypes.length; ++a)\n       {\n \ttry \n@@ -1174,7 +1182,7 @@ public Object instantiate(String name, Object[] params, String[] sig)\n       }\n     try\n       {\n-\tConstructor cons =\n+\tConstructor<?> cons =\n \t  repository.loadClass(name).getConstructor(sigTypes);\n \treturn cons.newInstance(params);\n       }\n@@ -1288,7 +1296,7 @@ public Object instantiate(String name, ObjectName loaderName,\n \tthrow new RuntimeOperationsException(e);\n       }\n     ClassLoader loader = getClassLoader(loaderName);\n-    Class[] sigTypes = new Class[sig.length];\n+    Class<?>[] sigTypes = new Class[sig.length];\n     for (int a = 0; a < sig.length; ++a)\n       {\n \ttry \n@@ -1304,7 +1312,7 @@ public Object instantiate(String name, ObjectName loaderName,\n       }\n     try\n       {\n-\tConstructor cons =\n+\tConstructor<?> cons =\n \t  Class.forName(name, true, loader).getConstructor(sigTypes);\n \treturn cons.newInstance(params);\n       }\n@@ -1433,10 +1441,10 @@ public boolean isInstanceOf(ObjectName name, String className)\n \t}\n     if (info.getClassName().equals(className))\n       return true;\n-    Class bclass = bean.getClass();\n+    Class<?> bclass = bean.getClass();\n     try\n       {\n-\tClass oclass = Class.forName(className);\n+\tClass<?> oclass = Class.forName(className);\n \treturn (bclass.getClassLoader().equals(oclass.getClassLoader()) &&\n \t\toclass.isAssignableFrom(bclass));  \n       }\n@@ -1502,21 +1510,19 @@ public boolean isRegistered(ObjectName name)\n    *                           arise from the execution of the query, in which\n    *                           case that particular bean will again be excluded.\n    */\n-  public Set queryMBeans(ObjectName name, QueryExp query)\n+  public Set<ObjectInstance> queryMBeans(ObjectName name, QueryExp query)\n   {\n     checkSecurity(name, null, \"queryMBeans\");\n-    Set results = new HashSet();\n-    Iterator iterator = beans.entrySet().iterator();\n-    while (iterator.hasNext())\n+    Set<ObjectInstance> results = new HashSet<ObjectInstance>();\n+    for (Map.Entry<ObjectName,ServerInfo> entry : beans.entrySet())\n       {\n-\tMap.Entry entry = (Map.Entry) iterator.next();\n-\tObjectName nextName = (ObjectName) entry.getKey();\n+\tObjectName nextName = entry.getKey();\n \tcheckSecurity(name, nextName.toString(), \"queryMBeans\");\n \ttry\n \t  {\n \t    if ((name == null || name.apply(nextName)) &&\n \t\t(query == null || query.apply(nextName)))\n-\t      results.add(((ServerInfo) entry.getValue()).getInstance());\n+\t      results.add(entry.getValue().getInstance());\n \t  }\n \tcatch (BadStringOperationException e)\n \t  {\n@@ -1575,15 +1581,12 @@ public Set queryMBeans(ObjectName name, QueryExp query)\n    *                           Note that these permissions are implied if the\n    *                           <code>queryMBeans</code> permissions are available.\n    */\n-  public Set queryNames(ObjectName name, QueryExp query)\n+  public Set<ObjectName> queryNames(ObjectName name, QueryExp query)\n   {\n     checkSecurity(name, null, \"queryNames\");\n-    Set results = new HashSet();\n-    Iterator iterator = beans.entrySet().iterator();\n-    while (iterator.hasNext())\n+    Set<ObjectName> results = new HashSet<ObjectName>();\n+    for (ObjectName nextName : beans.keySet())\n       {\n-\tMap.Entry entry = (Map.Entry) iterator.next();\n-\tObjectName nextName = (ObjectName) entry.getKey();\n \tcheckSecurity(name, nextName.toString(), \"queryNames\");\n \ttry\n \t  {\n@@ -1656,7 +1659,7 @@ public ObjectInstance registerMBean(Object obj, ObjectName name)\n \t   NotCompliantMBeanException\n   {  \n     SecurityManager sm = System.getSecurityManager();\n-    Class cl = obj.getClass();\n+    Class<?> cl = obj.getClass();\n     String className = cl.getName();\n     if (sm != null)\n       {\n@@ -1712,14 +1715,13 @@ public ObjectInstance registerMBean(Object obj, ObjectName name)\n \t    throw new MBeanRegistrationException(e, \"Pre-registration failed.\");\n \t  }\n       }\n-    if (beans.containsKey(name))\n+    ObjectInstance obji = new ObjectInstance(name, className);\n+    if (beans.putIfAbsent(name, new ServerInfo(obji, obj)) != null)\n       {\n \tif (register != null)\n \t  register.postRegister(Boolean.FALSE);\n \tthrow new InstanceAlreadyExistsException(name + \"is already registered.\");\n       }\n-    ObjectInstance obji = new ObjectInstance(name, className);\n-    beans.put(name, new ServerInfo(obji, obj));\n     if (register != null)\n       register.postRegister(Boolean.TRUE);\n     notify(name, MBeanServerNotification.REGISTRATION_NOTIFICATION);\n@@ -1758,15 +1760,8 @@ public void removeNotificationListener(ObjectName name,\n     if (bean instanceof NotificationBroadcaster)\n       {\n \tNotificationBroadcaster bbean = (NotificationBroadcaster) bean;\n-\tNotificationListener indirection = (NotificationListener)\n-\t  listeners.get(listener);\n-\tif (indirection == null)\n-\t  bbean.removeNotificationListener(listener);\n-\telse\n-\t  {\n-\t    bbean.removeNotificationListener(indirection);\n-\t    listeners.remove(listener);\n-\t  }\n+\tbbean.removeNotificationListener(listener);\n+\tLazyListenersHolder.listeners.remove(listener);\n       }\n   }\n \n@@ -1809,15 +1804,8 @@ public void removeNotificationListener(ObjectName name,\n     if (bean instanceof NotificationEmitter)\n       {\n \tNotificationEmitter bbean = (NotificationEmitter) bean;\n-\tNotificationListener indirection = (NotificationListener)\n-\t  listeners.get(listener);\n-\tif (indirection == null)\n-\t  bbean.removeNotificationListener(listener, filter, passback);\n-\telse\n-\t  {\n-\t    bbean.removeNotificationListener(indirection, filter, passback);\n-\t    listeners.remove(listener);\n-\t  }\n+\tbbean.removeNotificationListener(listener, filter, passback);\n+\tLazyListenersHolder.listeners.remove(listener);\n       }\n   }\n \n@@ -2011,7 +1999,7 @@ public AttributeList setAttributes(ObjectName name, AttributeList attributes)\n     Object abean = getBean(name);\n     checkSecurity(name, null, \"setAttribute\");\n     AttributeList list = new AttributeList(attributes.size());\n-    Iterator it = attributes.iterator();\n+    Iterator<Object> it = attributes.iterator();\n     while (it.hasNext())\n       {\n \ttry\n@@ -2113,6 +2101,15 @@ public void unregisterMBean(ObjectName name)\n       register.postDeregister();\n   }\n \n+  /**\n+   * Notifies the delegate of beans being registered\n+   * and unregistered.\n+   *\n+   * @param name the bean being registered.\n+   * @param type the type of notification;\n+   * {@code REGISTRATION_NOTIFICATION} or\n+   * {@code UNREGISTRATION_NOTIFICATION}.\n+   */\n    private void notify(ObjectName name, String type)\n    {\n       delegate.sendNotification\n@@ -2136,7 +2133,7 @@ public ServerInputStream(InputStream is, ClassLoader cl)\n       this.cl = cl;\n     }\n \n-    protected Class resolveClass(ObjectStreamClass osc)\n+    protected Class<?> resolveClass(ObjectStreamClass osc)\n       throws ClassNotFoundException, IOException\n     {\n       try"}, {"sha": "a15994429a38786e6703b1d0cef7824183655cb5", "filename": "libjava/classpath/gnu/javax/management/Translator.java", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fmanagement%2FTranslator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fmanagement%2FTranslator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fmanagement%2FTranslator.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -143,14 +143,14 @@ public static final Object fromJava(Object jtype, Type type)\n \t      throw new IllegalArgumentException(jtype + \" has a \" +\n \t\t\t\t\t\t \"non-comparable element \" +\n \t\t\t\t\t\t \"type, \" + elemClass);\n-\t    if (((SortedSet) jtype).comparator() != null)\n+\t    if (((SortedSet<?>) jtype).comparator() != null)\n \t      throw new IllegalArgumentException(jtype + \" does not \" +\n \t\t\t\t\t\t \"use natural ordering.\");\n \t  }\n-\tCollection<Object> elems = (Collection<Object>) jtype;\n+\tCollection<?> elems = (Collection<?>) jtype;\n \tint numElems = elems.size();\n \tObject[] celems = new Object[numElems];\n-\tIterator<Object> i = elems.iterator();\n+\tIterator<?> i = elems.iterator();\n \tfor (int a = 0; a < numElems; ++a)\n \t  {\n \t    Object elem = i.next();\n@@ -159,7 +159,7 @@ public static final Object fromJava(Object jtype, Type type)\n \treturn makeArraySpecific(celems);\n       }\n     if (jtype instanceof Enum)\n-      return ((Enum) jtype).name();\n+      return ((Enum<?>) jtype).name();\n     if (jtype instanceof Map || jtype instanceof SortedMap)\n       {\n \tint lparam = tName.indexOf(\"<\");\n@@ -177,21 +177,21 @@ public static final Object fromJava(Object jtype, Type type)\n \t      throw new IllegalArgumentException(jtype + \" has a \" +\n \t\t\t\t\t\t \"non-comparable element \" +\n \t\t\t\t\t\t \"type, \" + keyClass);\n-\t    if (((SortedMap) jtype).comparator() != null)\n+\t    if (((SortedMap<?,?>) jtype).comparator() != null)\n \t      throw new IllegalArgumentException(jtype + \" does not \" +\n \t\t\t\t\t\t \"use natural ordering.\");\n \t    typeName = \"java.util.SortedMap\" + tName.substring(lparam);\n \t  }\n-\tOpenType k = translate(key).getOpenType();\n-\tOpenType v = translate(value).getOpenType(); \n+\tOpenType<?> k = translate(key).getOpenType();\n+\tOpenType<?> v = translate(value).getOpenType(); \n \tCompositeType rowType = new CompositeType(typeName, typeName,\n \t\t\t\t\t\t  new String[] { \"key\", \"value\" },\n \t\t\t\t\t\t  new String[] { \"Map key\", \"Map value\"},\n \t\t\t\t\t\t  new OpenType[] {k,v});\n \tTabularType tabType = new TabularType(typeName, typeName, rowType,\n \t\t\t\t\t      new String[]{\"key\"});\n \tTabularData data = new TabularDataSupport(tabType);\n-\tfor (Map.Entry entry : (Set<Map.Entry>) ((Map) jtype).entrySet())\n+\tfor (Map.Entry<?,?> entry : ((Map<?,?>) jtype).entrySet())\n \t  {\n \t    try \n \t      {\n@@ -258,23 +258,23 @@ public static final Object toJava(Object otype, Method method)\n     if (returnType.isEnum())\n       {\n \tString ename = (String) otype;\n-\tEnum[] constants = (Enum[]) returnType.getEnumConstants();\n-\tfor (Enum c : constants)\n+\tEnum<?>[] constants = (Enum[]) returnType.getEnumConstants();\n+\tfor (Enum<?> c : constants)\n \t  if (c.name().equals(ename))\n \t    return c;\n       }\n     if (List.class.isAssignableFrom(returnType))\n       {\n \tObject[] elems = (Object[]) otype;\n-\tList l = new ArrayList(elems.length);\n+\tList<Object> l = new ArrayList<Object>(elems.length);\n \tfor (Object elem : elems)\n \t  l.add(elem);\n \treturn l;\n       }\n     if (Map.class.isAssignableFrom(returnType))\n       {\n \tTabularData data = (TabularData) otype;\n-\tMap m = new HashMap(data.size());\n+\tMap<Object,Object> m = new HashMap<Object,Object>(data.size());\n \tfor (Object val : data.values())\n \t  {\n \t    CompositeData vals = (CompositeData) val;\n@@ -401,8 +401,8 @@ public static final OpenMBeanParameterInfo translate(String type)\n \tint comma = type.indexOf(\",\", lparam);\n \tint rparam = type.indexOf(\">\", comma);\n \tString key = type.substring(lparam + 1, comma).trim();\n-\tOpenType k = translate(key).getOpenType();\n-\tOpenType v = translate(type.substring(comma + 1, rparam).trim()).getOpenType(); \n+\tOpenType<?> k = translate(key).getOpenType();\n+\tOpenType<?> v = translate(type.substring(comma + 1, rparam).trim()).getOpenType(); \n  \tCompositeType ctype = new CompositeType(Map.class.getName(), Map.class.getName(),\n \t\t\t\t\t\tnew String[] { \"key\", \"value\" },\n \t\t\t\t\t\tnew String[] { \"Map key\", \"Map value\"},\n@@ -417,13 +417,13 @@ public static final OpenMBeanParameterInfo translate(String type)\n       {\n \tint lparam = type.indexOf(\"<\");\n \tint rparam = type.indexOf(\">\");\n-       \tOpenType e = translate(type.substring(lparam + 1, rparam).trim()).getOpenType();\n+       \tOpenType<?> e = translate(type.substring(lparam + 1, rparam).trim()).getOpenType();\n \treturn new OpenMBeanParameterInfoSupport(\"TransParam\",\n \t\t\t\t\t\t \"Translated parameter\",\n-\t\t\t\t\t\t new ArrayType(1, e)\n+\t\t\t\t\t\t new ArrayType<OpenType<?>>(1, e)\n \t\t\t\t\t\t );\n       }\t\n-    Class c;\n+    Class<?> c;\n     try\n       {\n \tc = Class.forName(type);\n@@ -450,15 +450,15 @@ public static final OpenMBeanParameterInfo translate(String type)\n \tint depth;\n \tfor (depth = 0; c.getName().charAt(depth) == '['; ++depth)\n           ;\n-\tOpenType ot = getTypeFromClass(c.getComponentType());\n+\tOpenType<?> ot = getTypeFromClass(c.getComponentType());\n \treturn new OpenMBeanParameterInfoSupport(\"TransParam\",\n \t\t\t\t\t\t \"Translated parameter\",\n-\t\t\t\t\t\t new ArrayType(depth, ot)\n+\t\t\t\t\t\t new ArrayType<OpenType<?>>(depth, ot)\n \t\t\t\t\t\t );\n       }\n     Method[] methods = c.getDeclaredMethods();\n     List<String> names = new ArrayList<String>();\n-    List<OpenType> types = new ArrayList<OpenType>();\n+    List<OpenType<?>> types = new ArrayList<OpenType<?>>();\n     for (int a = 0; a < methods.length; ++a)\n       {\n \tString name = methods[a].getName();\n@@ -495,7 +495,7 @@ else if (name.startsWith(\"is\"))\n    * @return the appropriate instance.\n    * @throws OpenDataException if the type is not open.\n    */\n-  private static final OpenType getTypeFromClass(Class c)\n+  private static final OpenType<?> getTypeFromClass(Class<?> c)\n     throws OpenDataException\n   {\n     return Translator.translate(c.getName()).getOpenType();"}, {"sha": "95ebb8a0689406dc851d2e43013da6a282a7c2a3", "filename": "libjava/classpath/gnu/javax/naming/giop/CorbalocParser.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2Fgiop%2FCorbalocParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2Fgiop%2FCorbalocParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2Fgiop%2FCorbalocParser.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -43,6 +43,8 @@\n import gnu.CORBA.Version;\n import gnu.CORBA.NamingService.NameTransformer;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.File;\n import java.io.FileReader;\n import java.io.IOException;\n@@ -288,7 +290,7 @@ else if (corbaloc.startsWith(pxFTP))\n             ior.Internet.version = new Version(major, minor);\n \n             // Then host data goes till '/' or ':'.\n-            StringBuffer bhost = new StringBuffer(corbaloc.length());\n+            CPStringBuilder bhost = new CPStringBuilder(corbaloc.length());\n             while (!t[p].equals(\":\") && !t[p].equals(\"/\") && !t[p].equals(\",\"))\n               bhost.append(t[p++]);\n \n@@ -381,7 +383,7 @@ String readUrl(String url)\n       {\n         InputStreamReader r = new InputStreamReader(u.openStream());\n \n-        StringBuffer b = new StringBuffer();\n+        CPStringBuilder b = new CPStringBuilder();\n         int c;\n \n         while ((c = r.read()) > 0)\n@@ -418,7 +420,7 @@ private String readKey(String delimiter)\n               + \"' found\");\n         }\n \n-    StringBuffer bKey = new StringBuffer();\n+    CPStringBuilder bKey = new CPStringBuilder();\n     p++;\n \n     while (p < t.length && !t[p].equals(\"#\"))"}, {"sha": "6c221548f475abfc52b499d404b307c85d42281a", "filename": "libjava/classpath/gnu/javax/naming/giop/GiopNamingServiceFactory.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2Fgiop%2FGiopNamingServiceFactory.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2Fgiop%2FGiopNamingServiceFactory.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2Fgiop%2FGiopNamingServiceFactory.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -40,6 +40,8 @@\n \n import gnu.CORBA.OrbFunctional;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.util.Enumeration;\n import java.util.Hashtable;\n import java.util.Iterator;\n@@ -161,7 +163,7 @@ public String getOrbSignature(Map props)\n   {\n      TreeMap map = new TreeMap();\n      map.putAll(props);\n-     StringBuffer b = new StringBuffer(50*props.size());\n+     CPStringBuilder b = new CPStringBuilder(50*props.size());\n      \n      Iterator iter = map.entrySet().iterator();\n      Map.Entry m;"}, {"sha": "68ba49b3fed34308cc39dcad573ad0bf869c7450", "filename": "libjava/classpath/gnu/javax/naming/giop/ListBindingsEnumeration.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2Fgiop%2FListBindingsEnumeration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2Fgiop%2FListBindingsEnumeration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2Fgiop%2FListBindingsEnumeration.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.naming.giop;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import javax.naming.NamingEnumeration;\n \n import org.omg.CosNaming.Binding;\n@@ -92,7 +94,7 @@ public ListBindingsEnumeration(BindingListHolder bh,\n    */\n   public Object convert(Binding binding)\n   {\n-    StringBuffer name = new StringBuffer();\n+    CPStringBuilder name = new CPStringBuilder();\n \n     for (int i = 0; i < binding.binding_name.length; i++)\n       {"}, {"sha": "3fca1e0abc8803bb90b794e401917b001853d328", "filename": "libjava/classpath/gnu/javax/naming/giop/ListEnumeration.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2Fgiop%2FListEnumeration.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2Fgiop%2FListEnumeration.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2Fgiop%2FListEnumeration.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -29,7 +29,7 @@\n modules, and to copy and distribute the resulting executable under\n terms of your choice, provided that you also meet, for each linked\n independent module, the terms and conditions of the license of that\n-module.  An independent module is a module which is not derived from\n+odule.  An independent module is a module which is not derived from\n or based on this library.  If you modify this library, you may extend\n this exception to your version of the library, but you are not\n obligated to do so.  If you do not wish to do so, delete this\n@@ -38,6 +38,8 @@\n \n package gnu.javax.naming.giop;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import javax.naming.NameClassPair;\n import javax.naming.NamingEnumeration;\n \n@@ -85,7 +87,7 @@ public ListEnumeration(BindingListHolder bh,\n    */\n   public Object convert(Binding binding)\n   {\n-    StringBuffer name = new StringBuffer();\n+    CPStringBuilder name = new CPStringBuilder();\n \n     for (int i = 0; i < binding.binding_name.length; i++)\n       {"}, {"sha": "b423c721bc07055b12f527a9511d6c547117f5f8", "filename": "libjava/classpath/gnu/javax/naming/ictxImpl/trans/GnuName.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2FictxImpl%2Ftrans%2FGnuName.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2FictxImpl%2Ftrans%2FGnuName.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnaming%2FictxImpl%2Ftrans%2FGnuName.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.javax.naming.ictxImpl.trans;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.util.Enumeration;\n import java.util.NoSuchElementException;\n \n@@ -455,7 +457,7 @@ public int hashCode()\n    */\n   public String toString()\n   {\n-    StringBuffer b = new StringBuffer();\n+    CPStringBuilder b = new CPStringBuilder();\n     for (int i = 0; i < length; i++)\n       {\n         b.append(get(i));"}, {"sha": "7fff253dd4fb24bc53d852472b72cede57280f92", "filename": "libjava/classpath/gnu/javax/net/ssl/PrivateCredentials.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2FPrivateCredentials.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2FPrivateCredentials.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2FPrivateCredentials.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.net.ssl;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.EOFException;\n import java.io.InputStream;\n import java.io.IOException;\n@@ -137,7 +139,7 @@ else if (line.startsWith(BEGIN_RSA))\n     boolean encrypted = false;\n     String cipher = null;\n     String salt = null;\n-    StringBuffer base64 = new StringBuffer();\n+    CPStringBuilder base64 = new CPStringBuilder();\n     while (true)\n       {\n         line = readLine(privateKey);\n@@ -235,7 +237,7 @@ public boolean isDestroyed()\n   private String readLine(InputStream in) throws IOException\n   {\n     boolean eol_is_cr = System.getProperty(\"line.separator\").equals(\"\\r\");\n-    StringBuffer str = new StringBuffer();\n+    CPStringBuilder str = new CPStringBuilder();\n     while (true)\n       {\n         int i = in.read();"}, {"sha": "09b50eef069c57f8e05c9a36a6850a758002eedc", "filename": "libjava/classpath/gnu/javax/net/ssl/Session.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2FSession.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2FSession.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2FSession.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.net.ssl;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.Serializable;\n \n import java.security.Principal;\n@@ -349,7 +351,7 @@ public int compareTo(Object other)\n \n     public String toString()\n     {\n-      StringBuffer str = new StringBuffer (3 * id.length + 1);\n+      CPStringBuilder str = new CPStringBuilder (3 * id.length + 1);\n       for (int i = 0; i < id.length; i++)\n         {\n           int x = id[i] & 0xFF;\n@@ -361,4 +363,4 @@ public String toString()\n       return str.toString ();\n     }\n   }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "81dfce591e5c4af8c98e9fc937cc0ff3c5e19547", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/HelloRequest.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FHelloRequest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FHelloRequest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FHelloRequest.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.net.ssl.provider;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n /**\n  * The handshake body for a HelloRequest handshake message.\n  *\n@@ -51,7 +53,7 @@ public HelloRequest ()\n \n   public String toString (final String prefix)\n   {\n-    StringBuffer str = new StringBuffer ();\n+    CPStringBuilder str = new CPStringBuilder ();\n     if (prefix != null)\n       str.append (prefix);\n     str.append (\"HelloRequest { };\");"}, {"sha": "57f637c184945d8e24f9fce145c473cc0f76148c", "filename": "libjava/classpath/gnu/javax/net/ssl/provider/Util.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FUtil.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FUtil.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fnet%2Fssl%2Fprovider%2FUtil.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.net.ssl.provider;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.PrintWriter;\n import java.io.StringWriter;\n \n@@ -128,7 +130,7 @@ public static byte[] toByteArray(String hex)\n    */\n   public static String toHexString(byte[] buf, int off, int len)\n   {\n-    StringBuffer str = new StringBuffer();\n+    CPStringBuilder str = new CPStringBuilder();\n     for (int i = 0; i < len; i++)\n       {\n         str.append(HEX.charAt(buf[i+off] >>> 4 & 0x0F));\n@@ -157,7 +159,7 @@ public static String toHexString(byte[] buf)\n    */\n   public static String toHexString(byte[] buf, int off, int len, char sep)\n   {\n-    StringBuffer str = new StringBuffer();\n+    CPStringBuilder str = new CPStringBuilder();\n     for (int i = 0; i < len; i++)\n       {\n         str.append(HEX.charAt(buf[i+off] >>> 4 & 0x0F));\n@@ -194,7 +196,7 @@ public static String toHexString(byte[] buf, char sep)\n   public static String hexDump(byte[] buf, int off, int len, String prefix)\n   {\n     String nl = getProperty(\"line.separator\");\n-    StringBuffer str = new StringBuffer();\n+    CPStringBuilder str = new CPStringBuilder();\n     int i = 0;\n     while (i < len)\n       {\n@@ -294,7 +296,7 @@ public static String hexDump(byte[] buf)\n   public static String formatInt(int i, int radix, int len)\n   {\n     String s = Integer.toString(i, radix);\n-    StringBuffer buf = new StringBuffer();\n+    CPStringBuilder buf = new CPStringBuilder();\n     for (int j = 0; j < len - s.length(); j++)\n       buf.append(\"0\");\n     buf.append(s);"}, {"sha": "3de88715a6807ac3096d5a27e0750480bef1e755", "filename": "libjava/classpath/gnu/javax/print/ipp/IppRequest.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fprint%2Fipp%2FIppRequest.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fprint%2Fipp%2FIppRequest.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fprint%2Fipp%2FIppRequest.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -469,7 +469,7 @@ else if (jobUri != null && jobId != null)\n         }\n       else\n         {\n-          new IppException(\"Unknown target operation attribute combination.\");\n+          throw new IppException(\"Unknown target operation attribute combination.\");\n         }      \n       \n       writeAttributes(attributes);"}, {"sha": "814fe2d0a742a7ea710a74ca22c326476209ee3e", "filename": "libjava/classpath/gnu/javax/print/ipp/attribute/RequestedAttributes.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fprint%2Fipp%2Fattribute%2FRequestedAttributes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fprint%2Fipp%2Fattribute%2FRequestedAttributes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fprint%2Fipp%2Fattribute%2FRequestedAttributes.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.print.ipp.attribute;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.util.ArrayList;\n import java.util.List;\n \n@@ -117,7 +119,7 @@ public String getName()\n    */\n   public String toString()\n   {\n-    StringBuffer b = new StringBuffer();\n+    CPStringBuilder b = new CPStringBuilder();\n     \n     if (attributes.size() > 0)\n       b.append(attributes.get(0));"}, {"sha": "5fa78b1e9156045b47d3d4d4aa6b830d5331a90a", "filename": "libjava/classpath/gnu/javax/rmi/CORBA/RmiUtilities.java", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FRmiUtilities.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FRmiUtilities.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Frmi%2FCORBA%2FRmiUtilities.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -46,6 +46,8 @@\n import gnu.CORBA.CDR.gnuValueStream;\n import gnu.CORBA.CDR.HeadlessInput;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.omg.CORBA.MARSHAL;\n import org.omg.CORBA.StringValueHelper;\n import org.omg.CORBA.WStringValueHelper;\n@@ -393,7 +395,7 @@ public int compare(Object a, Object b)\n    */\n   public static String toHex(long l)\n   {\n-    StringBuffer b = new StringBuffer();\n+    CPStringBuilder b = new CPStringBuilder();\n     b.append(Long.toHexString(l).toUpperCase());\n     while (b.length() < 16)\n       b.insert(0, '0');\n@@ -425,7 +427,7 @@ static String getDescriptor(Class type)\n       return \"V\";\n     else if (type.isArray())\n       {\n-        StringBuffer l = new StringBuffer(\"[\");\n+        CPStringBuilder l = new CPStringBuilder(\"[\");\n         Class component = type.getComponentType();\n \n         while (component.isArray())\n@@ -700,13 +702,14 @@ public Serializable readValue(InputStream in, int offset, Class clz,\n     if (in instanceof HeadlessInput)\n       ((HeadlessInput) in).subsequentCalls = true;\n \n-    gnuRuntime g;\n+    gnuRuntime g = null;\n     Serializable object = null;\n \n     try\n       {\n         g = (gnuRuntime) sender;\n-        object = g.target;\n+        if (sender != null)\n+          object = g.target;\n       }\n     catch (ClassCastException e)\n       {"}, {"sha": "d75ce4104fa31655445651edd8472a237bafe739", "filename": "libjava/classpath/gnu/javax/security/auth/callback/AWTCallbackHandler.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsecurity%2Fauth%2Fcallback%2FAWTCallbackHandler.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsecurity%2Fauth%2Fcallback%2FAWTCallbackHandler.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsecurity%2Fauth%2Fcallback%2FAWTCallbackHandler.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.security.auth.callback;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.awt.BorderLayout;\n import java.awt.Button;\n import java.awt.Dialog;\n@@ -238,8 +240,8 @@ protected synchronized void handleLanguage(LanguageCallback c)\n     int defind = 0;\n     for (int i = 0; i < locales.length; i++)\n       {\n-        StringBuffer lang =\n-          new StringBuffer(locales[i].getDisplayLanguage(locales[i]));\n+        CPStringBuilder lang =\n+          new CPStringBuilder(locales[i].getDisplayLanguage(locales[i]));\n         String country = locales[i].getDisplayCountry(locales[i]);\n         String variant = locales[i].getDisplayVariant(locales[i]);\n         if (country.length() > 0 && variant.length() > 0)"}, {"sha": "0235c6971c3f8a83c2410f1c6db54430aefd9a71", "filename": "libjava/classpath/gnu/javax/security/auth/login/ConfigFileTokenizer.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsecurity%2Fauth%2Flogin%2FConfigFileTokenizer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsecurity%2Fauth%2Flogin%2FConfigFileTokenizer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsecurity%2Fauth%2Flogin%2FConfigFileTokenizer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.security.auth.login;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.java.security.Configuration;\n \n import java.io.BufferedReader;\n@@ -92,7 +94,7 @@\n \n   private BufferedReader br;\n   boolean initialised;\n-  private StringBuffer sb;\n+  private CPStringBuilder sb;\n   private int sbNdx;\n \n   // Constructor(s)\n@@ -185,7 +187,7 @@ public void pushBack()\n \n   private void init() throws IOException\n   {\n-    sb = new StringBuffer();\n+    sb = new CPStringBuilder();\n     String line;\n     while ((line = br.readLine()) != null)\n       {"}, {"sha": "0514c937a9f2ad072ee203dcc16a48d05b3852ce", "filename": "libjava/classpath/gnu/javax/sound/sampled/gstreamer/io/GstAudioFileReader.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Fio%2FGstAudioFileReader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Fio%2FGstAudioFileReader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fsound%2Fsampled%2Fgstreamer%2Fio%2FGstAudioFileReader.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.javax.sound.sampled.gstreamer.io;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.javax.sound.sampled.gstreamer.GStreamerMixer;\n \n import java.io.BufferedInputStream;\n@@ -65,7 +67,7 @@\n   public AudioFileFormat getAudioFileFormat(File file)\n       throws UnsupportedAudioFileException, IOException\n   {\n-    StringBuffer name = new StringBuffer(file.getName());\n+    CPStringBuilder name = new CPStringBuilder(file.getName());\n     String _name = name.substring(name.lastIndexOf(\".\") + 1);\n     \n     return getAudioFileFormat("}, {"sha": "7f16f1f2dbad3443e71314f2744c4d1c1f15d976", "filename": "libjava/classpath/gnu/javax/swing/text/html/parser/htmlValidator.java", "status": "modified", "additions": 19, "deletions": 17, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2FhtmlValidator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2FhtmlValidator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2FhtmlValidator.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.swing.text.html.parser;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.javax.swing.text.html.parser.models.node;\n import gnu.javax.swing.text.html.parser.models.transformer;\n \n@@ -499,11 +501,11 @@ private void validateAttribute(TagElement tag, htmlAttributeSet parameters,\n     dtdAttribute = tag.getElement().getAttribute(foundAttribute.toString());\n     if (dtdAttribute == null)\n       {\n-        StringBuffer valid =\n-          new StringBuffer(\"The tag <\" + tag.getHTMLTag() +\n-                           \"> cannot contain the attribute '\" + foundAttribute +\n-                           \"'. The valid attributes for this tag are: \"\n-                          );\n+        CPStringBuilder valid =\n+          new CPStringBuilder(\"The tag <\" + tag.getHTMLTag() +\n+\t\t\t      \"> cannot contain the attribute '\" + foundAttribute +\n+\t\t\t      \"'. The valid attributes for this tag are: \"\n+\t\t\t      );\n \n         AttributeList a = tag.getElement().getAttributes();\n \n@@ -545,22 +547,22 @@ private void validateAttributeWithValueList(TagElement tag,\n         !dtdAttribute.values.contains(value.toUpperCase())\n        )\n       {\n-        StringBuffer valid;\n+        CPStringBuilder valid;\n         if (dtdAttribute.values.size() == 1)\n           valid =\n-            new StringBuffer(\"The attribute '\" + foundAttribute +\n-                             \"' of the tag <\" + tag.getHTMLTag() +\n-                             \"> cannot have the value '\" + value +\n-                             \"'. The only valid value is \"\n-                            );\n+            new CPStringBuilder(\"The attribute '\" + foundAttribute +\n+\t\t\t\t\"' of the tag <\" + tag.getHTMLTag() +\n+\t\t\t\t\"> cannot have the value '\" + value +\n+\t\t\t\t\"'. The only valid value is \"\n+\t\t\t\t);\n         else\n           valid =\n-            new StringBuffer(\"The attribute '\" + foundAttribute +\n-                             \"' of the tag <\" + tag.getHTMLTag() +\n-                             \"> cannot have the value '\" + value + \"'. The \" +\n-                             dtdAttribute.values.size() +\n-                             \" valid values are: \"\n-                            );\n+            new CPStringBuilder(\"The attribute '\" + foundAttribute +\n+\t\t\t\t\"' of the tag <\" + tag.getHTMLTag() +\n+\t\t\t\t\"> cannot have the value '\" + value + \"'. The \" +\n+\t\t\t\tdtdAttribute.values.size() +\n+\t\t\t\t\" valid values are: \"\n+\t\t\t\t);\n \n         Enumeration vv = dtdAttribute.values.elements();\n         while (vv.hasMoreElements())"}, {"sha": "c303ae8571da1b58764bba07bdcd10b4f337785e", "filename": "libjava/classpath/gnu/javax/swing/text/html/parser/models/list.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fmodels%2Flist.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fmodels%2Flist.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fmodels%2Flist.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.swing.text.html.parser.models;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.Serializable;\n \n /**\n@@ -296,7 +298,7 @@ public Object show(Object x)\n    */\n   public String toString()\n   {\n-    StringBuffer b = new StringBuffer();\n+    CPStringBuilder b = new CPStringBuilder();\n     b.append(\" ( \");\n     for (int i = 0; i < nodes.length; i++)\n       {"}, {"sha": "f45a13b3e864129aeea4e20530ab319d6af902ed", "filename": "libjava/classpath/gnu/javax/swing/text/html/parser/models/node.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fmodels%2Fnode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fmodels%2Fnode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fmodels%2Fnode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.swing.text.html.parser.models;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.Serializable;\n \n /**\n@@ -239,7 +241,7 @@ public boolean silenceAllowed()\n    */\n   public String toString()\n   {\n-    StringBuffer b = new StringBuffer();\n+    CPStringBuilder b = new CPStringBuilder();\n \n     b.append(token);\n     if (unary != 0)"}, {"sha": "b087c3c003ced5e62bc972084a91496cbc1ac2f7", "filename": "libjava/classpath/gnu/javax/swing/text/html/parser/support/Parser.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fsupport%2FParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fsupport%2FParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fjavax%2Fswing%2Ftext%2Fhtml%2Fparser%2Fsupport%2FParser.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -38,6 +38,8 @@\n \n package gnu.javax.swing.text.html.parser.support;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import gnu.javax.swing.text.html.parser.htmlAttributeSet;\n import gnu.javax.swing.text.html.parser.htmlValidator;\n import gnu.javax.swing.text.html.parser.support.low.Constants;\n@@ -132,12 +134,12 @@ public int compare(Object a, Object b)\n   /**\n   * The buffer to collect the incremental output like text or coment.\n   */\n-  private StringBuffer buffer = new StringBuffer();\n+  private final StringBuffer buffer = new StringBuffer();\n \n   /**\n    * The buffer to store the document title.\n    */\n-  private StringBuffer title = new StringBuffer();\n+  private final StringBuffer title = new StringBuffer();\n \n   /**\n    * The current token.\n@@ -994,7 +996,7 @@ else if (next.kind == SLASH || next.kind == OTHER)\n                 // character, not as a token. The character may be part of\n                 // the unquoted URL.\n                   {\n-                    StringBuffer image = new StringBuffer(value.getImage());\n+                    CPStringBuilder image = new CPStringBuilder(value.getImage());\n                     while (next.kind == NUMTOKEN || next.kind == SLASH\n                            || next.kind == OTHER)\n                       {\n@@ -1025,7 +1027,7 @@ else if (next.kind == NUMTOKEN || next.kind == SLASH)\n                 // character, not as a token. The slash may be part of\n                 // the unquoted URL.\n                   {\n-                    StringBuffer image = new StringBuffer(value.getImage());\n+                    CPStringBuilder image = new CPStringBuilder(value.getImage());\n                     while (next.kind == NUMTOKEN || next.kind == SLASH)\n                       {\n                         image.append(getNextToken().getImage());"}, {"sha": "6a8da837154dbfdfeb23a2906077ece70c7ad8fa", "filename": "libjava/classpath/gnu/xml/dom/DomAttr.java", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomAttr.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomAttr.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomAttr.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.xml.dom;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.w3c.dom.Attr;\n import org.w3c.dom.DOMException;\n import org.w3c.dom.Element;\n@@ -106,7 +108,37 @@ protected DomAttr(DomDocument owner, String namespaceURI, String name)\n     // and character data change events and when they happen,\n     // report self-mutation\n   }\n-  \n+\n+  /**\n+   * Constructs an Attr node associated with the specified document.\n+   * The \"specified\" flag is initialized to true, since this DOM has\n+   * no current \"back door\" mechanisms to manage default values so\n+   * that every value must effectively be \"specified\".\n+   *\n+   * <p>This constructor should only be invoked by a Document as part of\n+   * its createAttribute functionality, or through a subclass which is\n+   * similarly used in a \"Sub-DOM\" style layer.\n+   * <p>\n+   * With this constructor, the prefix and local part are given explicitly\n+   * rather than being computed.  This allows them to be explicitly set to\n+   * {@code null} as required by {@link Document#createAttribute(String)}.   \n+   * </p>\n+   *\n+   * @param owner The document with which this node is associated\n+   * @param namespaceURI Combined with the local part of the name,\n+   *\tthis is used to uniquely identify a type of attribute\n+   * @param name Name of this attribute, which may include a prefix\n+   * @param prefix the namespace prefix of the name.  May be {@code null}.\n+   * @param localName the local part of the name.  May be {@code null}.\n+   */\n+  protected DomAttr(DomDocument owner, String namespaceURI, String name,\n+\t\t    String prefix, String localName)\n+  {\n+    super(ATTRIBUTE_NODE, owner, namespaceURI, name, prefix, localName);\n+    specified = true;\n+    length = 1;\n+  }\n+\n   /**\n    * <b>DOM L1</b>\n    * Returns the attribute name (same as getNodeName)\n@@ -147,7 +179,7 @@ public String getNodeValue()\n         return (value == null) ? \"\" : value;\n       }\n     // Otherwise collect child node-values\n-    StringBuffer buf = new StringBuffer();\n+    CPStringBuilder buf = new CPStringBuilder();\n     for (DomNode ctx = first; ctx != null; ctx = ctx.next)\n       {\n         switch (ctx.nodeType)"}, {"sha": "b32c6b82dfc8cb1fbe7ec5b2b9a576637a9cda82", "filename": "libjava/classpath/gnu/xml/dom/DomDocument.java", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomDocument.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomDocument.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomDocument.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -597,6 +597,8 @@ static void checkChar(char[] buf, int off, int len, boolean xml11)\n   /**\n    * <b>DOM L1</b>\n    * Returns a newly created element with the specified name.\n+   * The node name of the created element will be equal to {@code name}.\n+   * The namespace, prefix and local name will all be {@code null}.\n    */\n   public Element createElement(String name)\n   {\n@@ -612,8 +614,7 @@ public Element createElement(String name)\n       }\n     else\n       {\n-        DomElement domElement = new DomElement(this, null, name);\n-        domElement.localName = null;\n+        DomElement domElement = new DomElement(this, null, name, null, null);\n         element = domElement;\n       }\n     if (defaultAttributes)\n@@ -813,8 +814,7 @@ else if (XMLConstants.XMLNS_ATTRIBUTE.equals(name) ||\n       }\n     else\n       {\n-        DomAttr ret = new DomAttr(this, null, name);\n-        ret.localName = null;\n+        DomAttr ret = new DomAttr(this, null, name, null, null);\n         return ret;\n       }\n   }"}, {"sha": "462cb9178a6e402f4b5bdbfe9f5b473c51ff0188", "filename": "libjava/classpath/gnu/xml/dom/DomElement.java", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomElement.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomElement.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomElement.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -89,6 +89,32 @@ protected DomElement(DomDocument owner, String namespaceURI, String name)\n     super(ELEMENT_NODE, owner, namespaceURI, name);\n   }\n \n+  /**\n+   * <p>\n+   * Constructs an Element node associated with the specified document.\n+   * This constructor should only be invoked by a Document as part\n+   * of its createElement functionality, or through a subclass which is\n+   * similarly used in a \"Sub-DOM\" style layer.\n+   * </p>\n+   * <p>\n+   * With this constructor, the prefix and local part are given explicitly\n+   * rather than being computed.  This allows them to be explicitly set to\n+   * {@code null} as required by {@link Document#createElement(String)}.   \n+   * </p>\n+   *\n+   * @param owner The document with which this node is associated\n+   * @param namespaceURI Combined with the local part of the name,\n+   *\tthis is used to uniquely identify a type of element\n+   * @param name Name of this element, which may include a prefix\n+   * @param prefix the namespace prefix of the name.  May be {@code null}.\n+   * @param localName the local part of the name.  May be {@code null}.\n+   */\n+  protected DomElement(DomDocument owner, String namespaceURI, String name,\n+\t\t       String prefix, String localName)\n+  {\n+    super(ELEMENT_NODE, owner, namespaceURI, name, prefix, localName);\n+  }\n+\n   /**\n    * <b>DOM L1</b>\n    * Returns the element's attributes"}, {"sha": "9190ed8eb0e8f991dc13019baa2aaddf47e00f8c", "filename": "libjava/classpath/gnu/xml/dom/DomEvent.java", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomEvent.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,8 +37,15 @@\n \n package gnu.xml.dom;\n \n-import org.w3c.dom.*;\n-import org.w3c.dom.events.*;\n+import gnu.java.lang.CPStringBuilder;\n+\n+import org.w3c.dom.Node;\n+\n+import org.w3c.dom.events.Event;\n+import org.w3c.dom.events.EventTarget;\n+import org.w3c.dom.events.MutationEvent;\n+import org.w3c.dom.events.UIEvent;\n+\n import org.w3c.dom.views.AbstractView;\t\t// used by UIEvent\n \n /**\n@@ -180,7 +187,7 @@ public DomEvent(String type)\n    */\n   public String toString()\n   {\n-    StringBuffer buf = new StringBuffer(\"[Event \");\n+    CPStringBuilder buf = new CPStringBuilder(\"[Event \");\n     buf.append(type);\n     switch (eventPhase)\n       {"}, {"sha": "78e1ab85c85dfe00e93f0bc0166a43184df5f2b7", "filename": "libjava/classpath/gnu/xml/dom/DomNode.java", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.xml.dom;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.util.HashMap;\n import java.util.HashSet;\n import java.util.Iterator;\n@@ -1939,7 +1941,7 @@ final String getTextContent(boolean topLevel)\n       case ENTITY_NODE:\n       case ENTITY_REFERENCE_NODE:\n       case DOCUMENT_FRAGMENT_NODE:\n-        StringBuffer buffer = new StringBuffer();\n+        CPStringBuilder buffer = new CPStringBuilder();\n         for (DomNode ctx = first; ctx != null; ctx = ctx.next)\n           {\n             String textContent = ctx.getTextContent(false);\n@@ -2124,7 +2126,7 @@ public String toString()\n   {\n     String nodeName = getNodeName();\n     String nodeValue = getNodeValue();\n-    StringBuffer buf = new StringBuffer(getClass().getName());\n+    CPStringBuilder buf = new CPStringBuilder(getClass().getName());\n     buf.append('[');\n     if (nodeName != null)\n       {\n@@ -2146,7 +2148,7 @@ public String toString()\n   \n   String encode(String value)\n   {\n-    StringBuffer buf = null;\n+    CPStringBuilder buf = null;\n     int len = value.length();\n     for (int i = 0; i < len; i++)\n       {\n@@ -2155,15 +2157,15 @@ String encode(String value)\n           {\n             if (buf == null)\n               {\n-                buf = new StringBuffer(value.substring(0, i));\n+                buf = new CPStringBuilder(value.substring(0, i));\n               }\n             buf.append(\"\\\\n\");\n           }\n         else if (c == '\\r')\n           {\n             if (buf == null)\n               {\n-                buf = new StringBuffer(value.substring(0, i));\n+                buf = new CPStringBuilder(value.substring(0, i));\n               }\n             buf.append(\"\\\\r\");\n           }"}, {"sha": "d3361515b707130cffc1e889ce51de39df7a3899", "filename": "libjava/classpath/gnu/xml/dom/DomNsNode.java", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomNsNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomNsNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomNsNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -54,7 +54,7 @@\n   private String name;\n   private String namespace;\n   private String prefix;\n-  String localName;\n+  private String localName;\n   \n   /**\n    * Constructs a node associated with the specified document, and\n@@ -75,6 +75,33 @@\n     setNamespaceURI(namespaceURI);\n   }\n \n+  /**\n+   * Constructs a node associated with the specified document, and\n+   * with the specified namespace information.  The prefix and local part\n+   * are given explicitly rather than being computed.  This allows them\n+   * to be explicitly set to {@code null} as required by\n+   * {@link Document#createElement(String)}.\n+   *\n+   * @param owner The document with which this entity is associated\n+   * @param namespaceURI Combined with the local part of the name,\n+   *\tthis identifies a type of element or attribute; may be null.\n+   *  If this is the empty string, it is reassigned as null so that\n+   *  applications only need to test that case.\n+   * @param name Name of this node, which may include a prefix\n+   * @param prefix the namespace prefix of the name.  May be {@code null}.\n+   * @param localName the local part of the name.  May be {@code null}.\n+   */\n+  // package private\n+  DomNsNode(short nodeType, DomDocument owner, String namespaceURI, String name,\n+\t    String prefix, String localName)\n+  {\n+    super(nodeType, owner);\n+    this.name = name.intern();\n+    this.prefix = prefix == null ? null : prefix.intern();\n+    this.localName = localName == null ? null : localName.intern();\n+    setNamespaceURI(namespaceURI);\n+  }\n+\n   /**\n    * <b>DOM L1</b>\n    * Returns the node's name, including any namespace prefix."}, {"sha": "167eba3c1d22a1ea499876be0e4bd4003bfc0fff", "filename": "libjava/classpath/gnu/xml/dom/DomText.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomText.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomText.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2FDomText.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.xml.dom;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.w3c.dom.DOMException;\n import org.w3c.dom.Text;\n \n@@ -172,7 +174,7 @@ public String getWholeText()\n       {\n         ref = ctx;\n       }\n-    StringBuffer buf = new StringBuffer(ref.getNodeValue());\n+    CPStringBuilder buf = new CPStringBuilder(ref.getNodeValue());\n     for (ctx = ref.next; ctx != null &&\n          (ctx.nodeType == TEXT_NODE || ctx.nodeType == CDATA_SECTION_NODE);\n          ctx = ctx.next)"}, {"sha": "68705fdee92d8250153800015e62896085171633", "filename": "libjava/classpath/gnu/xml/dom/ls/DomLSInput.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fls%2FDomLSInput.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fls%2FDomLSInput.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fls%2FDomLSInput.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.xml.dom.ls;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.InputStream;\n import java.io.InputStreamReader;\n import java.io.IOException;\n@@ -82,7 +84,7 @@ public void setByteStream(InputStream byteStream)\n \n   public String getStringData()\n   {\n-    StringBuffer acc = new StringBuffer();\n+    CPStringBuilder acc = new CPStringBuilder();\n     Reader reader = getCharacterStream();\n     try\n       {"}, {"sha": "f4f555e8c39c675de49dc6d614d0ae692207e0c2", "filename": "libjava/classpath/gnu/xml/dom/ls/DomLSParser.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fls%2FDomLSParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fls%2FDomLSParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fls%2FDomLSParser.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -253,7 +253,7 @@ private Document doParse(LSInput input)\n     eventSink = (filter == null) ? new SAXEventSink() :\n       new FilteredSAXEventSink(filter);\n     // configure sink\n-    eventSink.namespaceAware = namespaceAware;\n+    eventSink.setNamespaceAware(namespaceAware);\n     eventSink.ignoreWhitespace = ignoreWhitespace;\n     eventSink.expandEntityReferences = expandEntityReferences;\n     eventSink.ignoreComments = ignoreComments;"}, {"sha": "1f8de046d42f77cd5ad021a8adf42d8f4eec6378", "filename": "libjava/classpath/gnu/xml/dom/ls/SAXEventSink.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fls%2FSAXEventSink.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fls%2FSAXEventSink.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fdom%2Fls%2FSAXEventSink.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -89,7 +89,7 @@\n     PREDEFINED_ENTITIES.add(\"apos\");\n   }\n \n-  boolean namespaceAware;\n+  private boolean namespaceAware;\n   boolean ignoreWhitespace;\n   boolean expandEntityReferences;\n   boolean ignoreComments;\n@@ -128,6 +128,11 @@ public void setDocumentLocator(Locator locator)\n     this.locator = locator;\n   }\n \n+  public void setNamespaceAware(boolean namespaceAware)\n+  {\n+    this.namespaceAware = namespaceAware;\n+  }\n+\n   public void startDocument()\n     throws SAXException\n   {"}, {"sha": "144aaf828620a746beaf17a806cc3b9b7daed366", "filename": "libjava/classpath/gnu/xml/libxmlj/dom/GnomeAttr.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeAttr.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeAttr.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeAttr.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.xml.libxmlj.dom;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.w3c.dom.Attr;\n import org.w3c.dom.DOMException;\n import org.w3c.dom.Element;\n@@ -103,7 +105,7 @@ public boolean isId()\n \n   public String toString()\n   {\n-    StringBuffer buffer = new StringBuffer(getClass().getName());\n+    CPStringBuilder buffer = new CPStringBuilder(getClass().getName());\n     buffer.append(\"[name=\");\n     buffer.append(getName());\n     buffer.append(\",value=\");"}, {"sha": "aa98652ba83f74cf4d8199e0539fdb4867e1b48d", "filename": "libjava/classpath/gnu/xml/libxmlj/dom/GnomeCharacterData.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeCharacterData.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeCharacterData.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeCharacterData.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.xml.libxmlj.dom;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.w3c.dom.CharacterData;\n import org.w3c.dom.DOMException;\n \n@@ -107,7 +109,7 @@ public void replaceData(int offset, int count, String arg)\n \n   public String toString()\n   {\n-    StringBuffer buffer = new StringBuffer(getClass().getName());\n+    CPStringBuilder buffer = new CPStringBuilder(getClass().getName());\n     buffer.append(\"[data=\");\n     buffer.append(getData());\n     buffer.append(\"]\");"}, {"sha": "a5333550e16f1f8efd91227a604b08d11ee6a66d", "filename": "libjava/classpath/gnu/xml/libxmlj/dom/GnomeDocument.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeDocument.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeDocument.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeDocument.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,9 @@\n \n package gnu.xml.libxmlj.dom;\n \n+import gnu.java.lang.CPStringBuilder;\n+import gnu.xml.dom.DomNodeIterator;\n+\n import java.util.Iterator;\n \n import org.w3c.dom.Attr;\n@@ -66,8 +69,6 @@\n import org.w3c.dom.xpath.XPathExpression;\n import org.w3c.dom.xpath.XPathNSResolver;\n \n-import gnu.xml.dom.DomNodeIterator;\n-\n /**\n  * A DOM document node implemented in libxml2.\n  *\n@@ -549,7 +550,7 @@ public TreeWalker createTreeWalker(Node root,\n   \n   public String toString()\n   {\n-    StringBuffer buffer = new StringBuffer(getClass().getName());\n+    CPStringBuilder buffer = new CPStringBuilder(getClass().getName());\n     buffer.append(\"[version=\");\n     buffer.append(getXmlVersion());\n     buffer.append(\",standalone=\");"}, {"sha": "eb3a65f1d49638aabca36c3d0dcf8cd4c2ddf68b", "filename": "libjava/classpath/gnu/xml/libxmlj/dom/GnomeDocumentType.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeDocumentType.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeDocumentType.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeDocumentType.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.xml.libxmlj.dom;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.w3c.dom.DocumentType;\n import org.w3c.dom.NamedNodeMap;\n \n@@ -79,7 +81,7 @@ public NamedNodeMap getNotations ()\n   public String toString ()\n   {\n     String publicId = getPublicId ();\n-    StringBuffer buffer = new StringBuffer (getClass ().getName ());\n+    CPStringBuilder buffer = new CPStringBuilder (getClass ().getName ());\n     buffer.append (\"[\");\n     if (publicId != null)\n       {"}, {"sha": "e87e3adfe1c1b6b85e87dac61902c26426afe6bd", "filename": "libjava/classpath/gnu/xml/libxmlj/dom/GnomeElement.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeElement.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeElement.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeElement.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.xml.libxmlj.dom;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.util.HashSet;\n import java.util.Set;\n \n@@ -172,7 +174,7 @@ public void setIdAttributeNS(String namespaceURI, String localName,\n \n   public String toString()\n   {\n-    StringBuffer buffer = new StringBuffer(getClass().getName());\n+    CPStringBuilder buffer = new CPStringBuilder(getClass().getName());\n     buffer.append(\"[tagName=\");\n     buffer.append(getTagName());\n     buffer.append(\"]\");"}, {"sha": "8d61a26c1ad46b1834f5395651c92cc1a584fbf8", "filename": "libjava/classpath/gnu/xml/libxmlj/dom/GnomeEntity.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeEntity.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeEntity.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeEntity.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.xml.libxmlj.dom;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.w3c.dom.Entity;\n \n /**\n@@ -83,7 +85,7 @@ public String getXmlVersion ()\n   public String toString ()\n   {\n     String publicId = getPublicId ();\n-    StringBuffer buffer = new StringBuffer (getClass ().getName ());\n+    CPStringBuilder buffer = new CPStringBuilder (getClass ().getName ());\n     buffer.append (\"[\");\n     if (publicId != null)\n       {"}, {"sha": "6f574ec29ddaaaabb5734e9d768bfc622643dd00", "filename": "libjava/classpath/gnu/xml/libxmlj/dom/GnomeNode.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.xml.libxmlj.dom;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.Map;\n@@ -368,7 +370,7 @@ public String getTextContent()\n       case ENTITY_NODE:\n       case ENTITY_REFERENCE_NODE:\n       case DOCUMENT_FRAGMENT_NODE:\n-        StringBuffer buffer = new StringBuffer();\n+        CPStringBuilder buffer = new CPStringBuilder();\n         NodeList children = getChildNodes();\n         int len = children.getLength();\n         for (int i = 0; i < len; i++)\n@@ -489,7 +491,7 @@ void notifyUserDataHandlers(short op, Node src, Node dst)\n \n   public String toString()\n   {\n-    StringBuffer buffer = new StringBuffer(getClass().getName());\n+    CPStringBuilder buffer = new CPStringBuilder(getClass().getName());\n     buffer.append(\"[nodeName=\");\n     buffer.append(getNodeName());\n     buffer.append(\"]\");"}, {"sha": "7f6fdf44896ca20c621a83109947e28f90a4884a", "filename": "libjava/classpath/gnu/xml/libxmlj/dom/GnomeNotation.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeNotation.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeNotation.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeNotation.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.xml.libxmlj.dom;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.w3c.dom.Notation;\n \n /**\n@@ -61,7 +63,7 @@\n   public String toString ()\n   {\n     String publicId = getPublicId ();\n-    StringBuffer buffer = new StringBuffer (getClass ().getName ());\n+    CPStringBuilder buffer = new CPStringBuilder (getClass ().getName ());\n     buffer.append (\"[\");\n     if (publicId != null)\n       {"}, {"sha": "d2ecd1890042c03bf6e5f1bff7a5d25468b0a248", "filename": "libjava/classpath/gnu/xml/libxmlj/dom/GnomeProcessingInstruction.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeProcessingInstruction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeProcessingInstruction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeProcessingInstruction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.xml.libxmlj.dom;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.w3c.dom.DOMException;\n import org.w3c.dom.ProcessingInstruction;\n \n@@ -67,7 +69,7 @@ public native void setData (String data)\n \n   public String toString ()\n   {\n-    StringBuffer buffer = new StringBuffer (getClass ().getName ());\n+    CPStringBuilder buffer = new CPStringBuilder (getClass ().getName ());\n     buffer.append (\"[data=\");\n     buffer.append (getData ());\n     buffer.append (\"]\");"}, {"sha": "8b8e5e0c1a4452f71ad57425c6503170da426bd5", "filename": "libjava/classpath/gnu/xml/libxmlj/dom/GnomeText.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeText.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeText.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeText.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.xml.libxmlj.dom;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.w3c.dom.DOMException;\n import org.w3c.dom.Node;\n import org.w3c.dom.Text;\n@@ -84,7 +86,7 @@ public String getWholeText ()\n         first = node;\n         node = node.getPreviousSibling ();\n       }\n-    StringBuffer buf = new StringBuffer (first.getNodeValue ());\n+    CPStringBuilder buf = new CPStringBuilder (first.getNodeValue ());\n     node = first.getNextSibling ();\n     while (node != null && node instanceof Text)\n       {"}, {"sha": "850b5fae08f5b9f9fbe5187c23447472d67536b1", "filename": "libjava/classpath/gnu/xml/libxmlj/dom/GnomeXPathResult.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeXPathResult.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeXPathResult.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Flibxmlj%2Fdom%2FGnomeXPathResult.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.xml.libxmlj.dom;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import org.w3c.dom.DOMException;\n import org.w3c.dom.Node;\n import org.w3c.dom.xpath.XPathException;\n@@ -112,7 +114,7 @@ public String toString ()\n         case 1:\n           return getSingleNodeValue ().toString ();\n         default:\n-          StringBuffer buffer = new StringBuffer ();\n+          CPStringBuilder buffer = new CPStringBuilder ();\n           for (int i = 0; i < len; i++)\n             {\n               if (i > 0)"}, {"sha": "8d73b1774274d5db4b0a7c77995f617fddf76833", "filename": "libjava/classpath/gnu/xml/stream/XMLEventImpl.java", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLEventImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLEventImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLEventImpl.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -37,6 +37,8 @@\n \n package gnu.xml.stream;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.Writer;\n import javax.xml.namespace.QName;\n import javax.xml.stream.Location;\n@@ -141,47 +143,47 @@ public abstract void writeAsEncodedUnicode(Writer writer)\n   protected String encode(String text, boolean inAttr)\n   {\n     int len = text.length();\n-    StringBuffer buf = null;\n+    CPStringBuilder buf = null;\n     for (int i = 0; i < len; i++)\n       {\n         char c = text.charAt(i);\n         if (c == '<')\n           {\n             if (buf == null)\n               {\n-                buf = new StringBuffer(text.substring(0, i));\n+                buf = new CPStringBuilder(text.substring(0, i));\n               }\n             buf.append(\"&lt;\");\n           }\n         else if (c == '>')\n           {\n             if (buf == null)\n               {\n-                buf = new StringBuffer(text.substring(0, i));\n+                buf = new CPStringBuilder(text.substring(0, i));\n               }\n             buf.append(\"&gt;\");\n           }\n         else if (c == '&')\n           {\n             if (buf == null)\n               {\n-                buf = new StringBuffer(text.substring(0, i));\n+                buf = new CPStringBuilder(text.substring(0, i));\n               }\n             buf.append(\"&amp;\");\n           }\n         else if (c == '\\'' && inAttr)\n           {\n             if (buf == null)\n               {\n-                buf = new StringBuffer(text.substring(0, i));\n+                buf = new CPStringBuilder(text.substring(0, i));\n               }\n             buf.append(\"&apos;\");\n           }\n         else if (c == '\"' && inAttr)\n           {\n             if (buf == null)\n               {\n-                buf = new StringBuffer(text.substring(0, i));\n+                buf = new CPStringBuilder(text.substring(0, i));\n               }\n             buf.append(\"&quot;\");\n           }"}, {"sha": "27aaa734dd6090dc2225af9a09ea1a84a9f1b2ba", "filename": "libjava/classpath/gnu/xml/stream/XMLParser.java", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fstream%2FXMLParser.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133", "patch": "@@ -53,6 +53,8 @@\n \n package gnu.xml.stream;\n \n+import gnu.java.lang.CPStringBuilder;\n+\n import java.io.BufferedInputStream;\n import java.io.EOFException;\n import java.io.File;\n@@ -691,7 +693,7 @@ public String getElementText()\n   {\n     if (event != XMLStreamConstants.START_ELEMENT)\n       throw new XMLStreamException(\"current event must be START_ELEMENT\");\n-    StringBuffer elementText = new StringBuffer();\n+    CPStringBuilder elementText = new CPStringBuilder();\n     int depth = stack.size();\n     while (event != XMLStreamConstants.END_ELEMENT || stack.size() > depth)\n       {\n@@ -2011,7 +2013,7 @@ else if (tryRead(\"ANY\"))\n     else\n       {\n         ContentModel model;\n-        StringBuffer acc = new StringBuffer();\n+        CPStringBuilder acc = new CPStringBuilder();\n         require('(');\n         acc.append('(');\n         skipWhitespace();\n@@ -2058,7 +2060,7 @@ else if (tryRead(\"ANY\"))\n   /**\n    * Parses an element content model.\n    */\n-  private ElementContentModel readElements(StringBuffer acc)\n+  private ElementContentModel readElements(CPStringBuilder acc)\n     throws IOException, XMLStreamException\n   {\n     int separator;\n@@ -2159,7 +2161,7 @@ else if (c != separator)\n   /**\n    * Parse a cp production.\n    */\n-  private ContentParticle readContentParticle(StringBuffer acc)\n+  private ContentParticle readContentParticle(CPStringBuilder acc)\n     throws IOException, XMLStreamException\n   {\n     ContentParticle cp = new ContentParticle();\n@@ -2228,7 +2230,7 @@ private void readAttDef(String elementName)\n   {\n     String name = readNmtoken(true);\n     requireWhitespace();\n-    StringBuffer acc = new StringBuffer();\n+    CPStringBuilder acc = new CPStringBuilder();\n     HashSet values = new HashSet();\n     String type = readAttType(acc, values);\n     if (validating)\n@@ -2277,7 +2279,7 @@ else if (\"NOTATION\".equals(type))\n   /**\n    * Parse an attribute type.\n    */\n-  private String readAttType(StringBuffer acc, HashSet values)\n+  private String readAttType(CPStringBuilder acc, HashSet values)\n     throws IOException, XMLStreamException\n   {\n     if (tryRead('('))\n@@ -2313,7 +2315,7 @@ else if (\"CDATA\".equals(typeString) ||\n   /**\n    * Parse an enumeration.\n    */\n-  private void readEnumeration(boolean isNames, StringBuffer acc,\n+  private void readEnumeration(boolean isNames, CPStringBuilder acc,\n                                HashSet values)\n     throws IOException, XMLStreamException\n   {\n@@ -2344,7 +2346,7 @@ private void readEnumeration(boolean isNames, StringBuffer acc,\n   /**\n    * Parse a notation type for an attribute.\n    */\n-  private void readNotationType(StringBuffer acc, HashSet values)\n+  private void readNotationType(CPStringBuilder acc, HashSet values)\n     throws IOException, XMLStreamException\n   {\n     requireWhitespace();\n@@ -3518,7 +3520,7 @@ private void expandPEReference()\n   private char[] readCharacterRef(int base)\n     throws IOException, XMLStreamException\n   {\n-    StringBuffer b = new StringBuffer();\n+    CPStringBuilder b = new CPStringBuilder();\n     for (int c = readCh(); c != 0x3b && c != -1; c = readCh())\n       b.append(Character.toChars(c));\n     try\n@@ -4246,7 +4248,7 @@ private void validateElementContent(ElementContentModel model,\n     throws XMLStreamException\n   {\n     // Use regular expression\n-    StringBuffer buf = new StringBuffer();\n+    CPStringBuilder buf = new CPStringBuilder();\n     for (Iterator i = children.iterator(); i.hasNext(); )\n       {\n         buf.append((String) i.next());\n@@ -4266,7 +4268,7 @@ private String createRegularExpression(ElementContentModel model)\n   {\n     if (model.regex == null)\n       {\n-        StringBuffer buf = new StringBuffer();\n+        CPStringBuilder buf = new CPStringBuilder();\n         buf.append('(');\n         for (Iterator i = model.contentParticles.iterator(); i.hasNext(); )\n           {\n@@ -4476,7 +4478,7 @@ else if (\"-n\".equals(args[pos]))\n    */\n   private static String encodeText(String text)\n   {\n-    StringBuffer b = new StringBuffer();\n+    CPStringBuilder b = new CPStringBuilder();\n     int len = text.length();\n     for (int i = 0; i < len; i++)\n       {\n@@ -4584,7 +4586,7 @@ public boolean equals(Object other)\n \n     public String toString()\n     {\n-      StringBuffer buf = new StringBuffer(getClass().getName());\n+      CPStringBuilder buf = new CPStringBuilder(getClass().getName());\n       buf.append('[');\n       buf.append(\"name=\");\n       buf.append(name);"}, {"sha": "fb953e4f66b44fbe68486a61464724a3b031db37", "filename": "libjava/classpath/gnu/xml/transform/AbstractNumberNode.java", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FAbstractNumberNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FAbstractNumberNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FAbstractNumberNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "0daaa7aeccdb700e821fa14ae72061c70d710d44", "filename": "libjava/classpath/gnu/xml/transform/ApplyTemplatesNode.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FApplyTemplatesNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FApplyTemplatesNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FApplyTemplatesNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "bbc4e08059e6d66f5eb79307f337749da3bef98a", "filename": "libjava/classpath/gnu/xml/transform/AttributeNode.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FAttributeNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FAttributeNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FAttributeNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "009321315bbe0f816809d0fb0615cc29113c9016", "filename": "libjava/classpath/gnu/xml/transform/Bindings.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FBindings.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FBindings.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FBindings.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "fe0eea74effe0852963eb925e37c4861b77a976e", "filename": "libjava/classpath/gnu/xml/transform/CallTemplateNode.java", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FCallTemplateNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FCallTemplateNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FCallTemplateNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "fe2dc0c2f3ae21c1e4d3d5056a006f9ed99d71a4", "filename": "libjava/classpath/gnu/xml/transform/ChooseNode.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FChooseNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FChooseNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FChooseNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "bae628d9632ab3903eb4d53fbc2ba7074cbf79ef", "filename": "libjava/classpath/gnu/xml/transform/CopyNode.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FCopyNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FCopyNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FCopyNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "4ce84329fc056b5f3ccbc24e8a8ff1a767ed4bf3", "filename": "libjava/classpath/gnu/xml/transform/CopyOfNode.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FCopyOfNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FCopyOfNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FCopyOfNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "c5a4dd20da415278a3b5be7df282d4e0a8d1c867", "filename": "libjava/classpath/gnu/xml/transform/ElementNode.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FElementNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FElementNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FElementNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "8908114ccf4a6a7667f87f99791b16a98455eafd", "filename": "libjava/classpath/gnu/xml/transform/ForEachNode.java", "status": "modified", "additions": 30, "deletions": 28, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FForEachNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FForEachNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FForEachNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "eeb294138bae3d7df94371bfe9d883f03b69b2c5", "filename": "libjava/classpath/gnu/xml/transform/IfNode.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FIfNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FIfNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FIfNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "a7eeeeef6ee2f437b15de1e8ccd11dc30a98909f", "filename": "libjava/classpath/gnu/xml/transform/MessageNode.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FMessageNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FMessageNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FMessageNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "431fbd3b1eac533eee9a01e71ebf872d55af816e", "filename": "libjava/classpath/gnu/xml/transform/ParameterNode.java", "status": "modified", "additions": 20, "deletions": 24, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FParameterNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FParameterNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FParameterNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "655f51f013074368e6a06ad98c21ac092dadcbf5", "filename": "libjava/classpath/gnu/xml/transform/ProcessingInstructionNode.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FProcessingInstructionNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FProcessingInstructionNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FProcessingInstructionNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "72934a5b750e538a9e50a9426e9f65c839496390", "filename": "libjava/classpath/gnu/xml/transform/SortKey.java", "status": "modified", "additions": 61, "deletions": 1, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FSortKey.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FSortKey.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FSortKey.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "28996721884f69a51e734569034d12b1a696ebab", "filename": "libjava/classpath/gnu/xml/transform/StreamSerializer.java", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FStreamSerializer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FStreamSerializer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FStreamSerializer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "30bd953495be797ba2366ac95058b6a4ab806d0f", "filename": "libjava/classpath/gnu/xml/transform/Stylesheet.java", "status": "modified", "additions": 65, "deletions": 64, "changes": 129, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FStylesheet.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FStylesheet.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FStylesheet.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "7ddef0ae50ecc711b53860570a0fb1e4f59e04b3", "filename": "libjava/classpath/gnu/xml/transform/Template.java", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FTemplate.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FTemplate.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FTemplate.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "ad80c59f9223627da658fab58506a99b85cd5511", "filename": "libjava/classpath/gnu/xml/transform/TemplateNode.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FTemplateNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FTemplateNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FTemplateNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "e5395f6fb22ee11bcb395e3ead16019f802a702d", "filename": "libjava/classpath/gnu/xml/transform/TemplatesImpl.java", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FTemplatesImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FTemplatesImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FTemplatesImpl.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "93d1d541775dcc94412eb09357d0b8b45951c5a5", "filename": "libjava/classpath/gnu/xml/transform/TextNode.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FTextNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FTextNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FTextNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "a975c691f299ad0cef370ff741cbaaee2215a7e9", "filename": "libjava/classpath/gnu/xml/transform/TransformerImpl.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FTransformerImpl.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FTransformerImpl.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FTransformerImpl.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "9ac5cdc0413e161a06431cbe228d5f68b5263abf", "filename": "libjava/classpath/gnu/xml/transform/TransformerOutputProperties.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FTransformerOutputProperties.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FTransformerOutputProperties.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FTransformerOutputProperties.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "7ba0eae21a4d6e4ce95b4c793126c1062e354a08", "filename": "libjava/classpath/gnu/xml/transform/UnparsedEntityUriFunction.java", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FUnparsedEntityUriFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FUnparsedEntityUriFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FUnparsedEntityUriFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "156affa77be4b17015df782f41b345b2e3c3e9ce", "filename": "libjava/classpath/gnu/xml/transform/ValueOfNode.java", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FValueOfNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FValueOfNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FValueOfNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "fc9d5b187ef2486ee32e978aa3fb8fe4797bfae0", "filename": "libjava/classpath/gnu/xml/transform/WhenNode.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FWhenNode.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FWhenNode.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FWhenNode.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "88243693d7f000a7d9ede1e4389e11010e1469a0", "filename": "libjava/classpath/gnu/xml/transform/XSLComparator.java", "status": "modified", "additions": 51, "deletions": 57, "changes": 108, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FXSLComparator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FXSLComparator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FXSLComparator.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "c1379211ae57994651084b3441fe6ed02d930713", "filename": "libjava/classpath/gnu/xml/transform/XSLURIResolver.java", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FXSLURIResolver.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FXSLURIResolver.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Ftransform%2FXSLURIResolver.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "a8f50969168b3adb424899ee95284c83663eee5c", "filename": "libjava/classpath/gnu/xml/util/DoParse.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Futil%2FDoParse.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Futil%2FDoParse.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Futil%2FDoParse.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "93127f442113fd656a189a42c10099c96d991300", "filename": "libjava/classpath/gnu/xml/util/XCat.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Futil%2FXCat.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Futil%2FXCat.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Futil%2FXCat.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "274594720195c3e74a7aef299d1b87e6db8e4209", "filename": "libjava/classpath/gnu/xml/util/XMLWriter.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Futil%2FXMLWriter.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Futil%2FXMLWriter.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Futil%2FXMLWriter.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "d16106e00441366bc959f41ef6174cb53be58e1c", "filename": "libjava/classpath/gnu/xml/validation/datatype/EntitiesType.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FEntitiesType.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FEntitiesType.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FEntitiesType.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "d49964561a62638e1ee320042f0cfa9df8f24f72", "filename": "libjava/classpath/gnu/xml/validation/datatype/NMTokensType.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FNMTokensType.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FNMTokensType.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fvalidation%2Fdatatype%2FNMTokensType.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "61098d6e4f227f5758933272967a6d79cefbebc4", "filename": "libjava/classpath/gnu/xml/xpath/ArithmeticExpr.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FArithmeticExpr.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FArithmeticExpr.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FArithmeticExpr.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "f661b2ac285a24110be061fff8078aa3f43fb001", "filename": "libjava/classpath/gnu/xml/xpath/BooleanFunction.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FBooleanFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FBooleanFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FBooleanFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "153988422486f760a15a3ba32d0596ec4afebfc4", "filename": "libjava/classpath/gnu/xml/xpath/CeilingFunction.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FCeilingFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FCeilingFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FCeilingFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "a61a45477b1d77001edd4c0a55e7863c66a7fa35", "filename": "libjava/classpath/gnu/xml/xpath/ConcatFunction.java", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FConcatFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FConcatFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FConcatFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "620606b3f20f2c54ca12b4dcdc4312918c051223", "filename": "libjava/classpath/gnu/xml/xpath/ContainsFunction.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FContainsFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FContainsFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FContainsFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "f29d833106ddd7eeb6aa6d399dcaad3efb3f8523", "filename": "libjava/classpath/gnu/xml/xpath/CountFunction.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FCountFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FCountFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FCountFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "605749d09d76cfc738717b1d9a8a7f75d708e106", "filename": "libjava/classpath/gnu/xml/xpath/DocumentOrderComparator.java", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FDocumentOrderComparator.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FDocumentOrderComparator.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FDocumentOrderComparator.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "3b6fd568a86d01a7af52e26900f4bd7b0b04568f", "filename": "libjava/classpath/gnu/xml/xpath/EqualityExpr.java", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FEqualityExpr.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FEqualityExpr.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FEqualityExpr.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "87ce3dfb63c61b88fd72e26d7da810eafff19c2c", "filename": "libjava/classpath/gnu/xml/xpath/Expr.java", "status": "modified", "additions": 47, "deletions": 28, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FExpr.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FExpr.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FExpr.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "bbf56c9117850a98bdfad9272e236e3800ee6cef", "filename": "libjava/classpath/gnu/xml/xpath/FloorFunction.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FFloorFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FFloorFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FFloorFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "12e2e1141fde810c0d6054ef0f103a5fa8b5e607", "filename": "libjava/classpath/gnu/xml/xpath/Function.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "e811f53a2abd5d9ed79314797b424824cb5a9147", "filename": "libjava/classpath/gnu/xml/xpath/FunctionCall.java", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FFunctionCall.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FFunctionCall.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FFunctionCall.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "b3d2208c8e427e351e5fbb0917cdee9f2a983138", "filename": "libjava/classpath/gnu/xml/xpath/IdFunction.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FIdFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FIdFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FIdFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "33cf8b0a2ab29beb37de72b42324e45937064d66", "filename": "libjava/classpath/gnu/xml/xpath/LangFunction.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FLangFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FLangFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FLangFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "dbad9d3b42acd6f7ab7682a2f9a68f68b799a8f0", "filename": "libjava/classpath/gnu/xml/xpath/LocalNameFunction.java", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FLocalNameFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FLocalNameFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FLocalNameFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "239a53453beb562a29f6e3ddc87b710b2beaea03", "filename": "libjava/classpath/gnu/xml/xpath/NameFunction.java", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FNameFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FNameFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FNameFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "56da90f8c0a42af0aa202a3b1f96f3e0fa2e829d", "filename": "libjava/classpath/gnu/xml/xpath/NamespaceUriFunction.java", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FNamespaceUriFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FNamespaceUriFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FNamespaceUriFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "30069acdc43e4e378f10bd0dc908aec9325a4b5c", "filename": "libjava/classpath/gnu/xml/xpath/NormalizeSpaceFunction.java", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FNormalizeSpaceFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FNormalizeSpaceFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FNormalizeSpaceFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "188b3dbc40ed40081871020b4ecd67bbfad13277", "filename": "libjava/classpath/gnu/xml/xpath/NotFunction.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FNotFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FNotFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FNotFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "8804a788670f1a9d90f68fc34cfd4e6cdd4d3e5e", "filename": "libjava/classpath/gnu/xml/xpath/NumberFunction.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FNumberFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FNumberFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FNumberFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "adadd6745c40684f6b1d8e33790d3c64f1cb8832", "filename": "libjava/classpath/gnu/xml/xpath/ParenthesizedExpr.java", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FParenthesizedExpr.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FParenthesizedExpr.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FParenthesizedExpr.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "809f965ccefb3f0f32a7a903dd776182ede3bd45", "filename": "libjava/classpath/gnu/xml/xpath/Path.java", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FPath.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FPath.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FPath.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "cbcb24999bc346a11e5311021b9c181962d33d13", "filename": "libjava/classpath/gnu/xml/xpath/Root.java", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FRoot.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FRoot.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FRoot.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "2d1bd54472272b903034ad51d851afd9ec13ba2a", "filename": "libjava/classpath/gnu/xml/xpath/RoundFunction.java", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FRoundFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FRoundFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FRoundFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "429b3f7e20b01e8e0350ab057e6fe6935246c978", "filename": "libjava/classpath/gnu/xml/xpath/Selector.java", "status": "modified", "additions": 26, "deletions": 22, "changes": 48, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FSelector.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FSelector.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FSelector.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "2dc2c409d8df7afd709df35d0b0428da8ca23677", "filename": "libjava/classpath/gnu/xml/xpath/StartsWithFunction.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FStartsWithFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FStartsWithFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FStartsWithFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "427fbe20138dcf997f532072101bb940f559b4d6", "filename": "libjava/classpath/gnu/xml/xpath/Steps.java", "status": "modified", "additions": 34, "deletions": 27, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FSteps.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FSteps.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FSteps.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "b8cba3798de0356f055099306e58fc4fb42ceedb", "filename": "libjava/classpath/gnu/xml/xpath/StringFunction.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FStringFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FStringFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FStringFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "561537e99ba3fbd069770c343bfc4e650b7453a3", "filename": "libjava/classpath/gnu/xml/xpath/StringLengthFunction.java", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FStringLengthFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FStringLengthFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FStringLengthFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "ad75f2e3c67729c8112134c16d025ea9edcbf09a", "filename": "libjava/classpath/gnu/xml/xpath/SubstringAfterFunction.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FSubstringAfterFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FSubstringAfterFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FSubstringAfterFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "1bf165777d03ac737c807baaea687527edd7273c", "filename": "libjava/classpath/gnu/xml/xpath/SubstringBeforeFunction.java", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FSubstringBeforeFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FSubstringBeforeFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FSubstringBeforeFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "33bcade0c2d86412e75b970f98fa66abfc6b13c7", "filename": "libjava/classpath/gnu/xml/xpath/SubstringFunction.java", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FSubstringFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FSubstringFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FSubstringFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "73db2a91dc6dd2abb5b66ba7eb6b466a342520e9", "filename": "libjava/classpath/gnu/xml/xpath/SumFunction.java", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FSumFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FSumFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FSumFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "8b4b8b2338c190fa152cc4cc81e8e393c6f59260", "filename": "libjava/classpath/gnu/xml/xpath/TranslateFunction.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FTranslateFunction.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FTranslateFunction.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FTranslateFunction.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "03ae5c06d703ee92e7819fe17aedc58d3d6e555e", "filename": "libjava/classpath/gnu/xml/xpath/UnionExpr.java", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FUnionExpr.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FUnionExpr.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FUnionExpr.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "9ef6f160ff8229b71f934e34342c9e50fe557e6a", "filename": "libjava/classpath/gnu/xml/xpath/VariableReference.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FVariableReference.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FVariableReference.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FVariableReference.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "e8c8e94da799064be36a7a41a006316267e58642", "filename": "libjava/classpath/gnu/xml/xpath/XPathParser.java", "status": "modified", "additions": 50, "deletions": 38, "changes": 88, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FXPathParser.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FXPathParser.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FXPathParser.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "a6d3fd130b0b9a159018942d9cb0807570b7fe53", "filename": "libjava/classpath/gnu/xml/xpath/XPathParser.y", "status": "modified", "additions": 36, "deletions": 26, "changes": 62, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FXPathParser.y", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FXPathParser.y", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FXPathParser.y?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "bf4516afae7aca50356b4a3f2ea0979e69d01acf", "filename": "libjava/classpath/gnu/xml/xpath/XPathTokenizer.java", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FXPathTokenizer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FXPathTokenizer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fgnu%2Fxml%2Fxpath%2FXPathTokenizer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "ab59f0f42b0551cfbab29c0048aae15756c7bb18", "filename": "libjava/classpath/include/Makefile.am", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2FMakefile.am?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "7caa9c8d3c257844e245eb6336d44f43c8c1b95e", "filename": "libjava/classpath/include/Makefile.in", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2FMakefile.in?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "0af9aba1328b0556a24c922b8322ef2d1b508772", "filename": "libjava/classpath/include/config.h.in", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Finclude%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Finclude%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fconfig.h.in?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "dc79c69d28f446403bf13fae4c511acdf408224d", "filename": "libjava/classpath/include/gnu_java_math_GMP.h", "status": "added", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Finclude%2Fgnu_java_math_GMP.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Finclude%2Fgnu_java_math_GMP.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fgnu_java_math_GMP.h?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "1ff36721a992389c562b7d4c4d1903d8dff8ea90", "filename": "libjava/classpath/include/gnu_java_util_prefs_gconf_GConfNativePeer.h", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Finclude%2Fgnu_java_util_prefs_gconf_GConfNativePeer.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Finclude%2Fgnu_java_util_prefs_gconf_GConfNativePeer.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fgnu_java_util_prefs_gconf_GConfNativePeer.h?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "722c315820b8f45b7b0c988e76d921329cd32b42", "filename": "libjava/classpath/include/java_io_VMFile.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Finclude%2Fjava_io_VMFile.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Finclude%2Fjava_io_VMFile.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fjava_io_VMFile.h?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "3d37e4be47ef15707d8f950932f309a1d16ddb75", "filename": "libjava/classpath/include/java_net_VMNetworkInterface.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Finclude%2Fjava_net_VMNetworkInterface.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Finclude%2Fjava_net_VMNetworkInterface.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fjava_net_VMNetworkInterface.h?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "1c4e69716fdf42add629ee7f0d0e75b1a7b0efb5", "filename": "libjava/classpath/include/jni.h", "status": "modified", "additions": 240, "deletions": 241, "changes": 481, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Finclude%2Fjni.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Finclude%2Fjni.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Finclude%2Fjni.h?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "a668fdae696d0811f2a1c0a5b5cca85ed9fa6c91", "filename": "libjava/classpath/java/awt/AlphaComposite.java", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fjava%2Fawt%2FAlphaComposite.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fjava%2Fawt%2FAlphaComposite.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FAlphaComposite.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "44676ba9dd3971cbc085627c42c398b61475e65b", "filename": "libjava/classpath/java/awt/Component.java", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fjava%2Fawt%2FComponent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fjava%2Fawt%2FComponent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FComponent.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "2634735118adfc5ca65f3dc1d253aecd2fab5c4d", "filename": "libjava/classpath/java/awt/Container.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fjava%2Fawt%2FContainer.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fjava%2Fawt%2FContainer.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FContainer.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "9ffc048782c42ea27d0ddc6cbbd9b14705da3771", "filename": "libjava/classpath/java/awt/JobAttributes.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fjava%2Fawt%2FJobAttributes.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fjava%2Fawt%2FJobAttributes.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FJobAttributes.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "8a853e15346422f874a3aeedbfc35d143a7ccde5", "filename": "libjava/classpath/java/awt/MouseInfo.java", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fjava%2Fawt%2FMouseInfo.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fjava%2Fawt%2FMouseInfo.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2FMouseInfo.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "8d2dcc01d1e9af81ad9d5913d31f1cf86d662cc4", "filename": "libjava/classpath/java/awt/datatransfer/MimeType.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fjava%2Fawt%2Fdatatransfer%2FMimeType.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fjava%2Fawt%2Fdatatransfer%2FMimeType.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fdatatransfer%2FMimeType.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "937d2cf5363b256ae29dfda7fc058b546f6a2737", "filename": "libjava/classpath/java/awt/event/ActionEvent.java", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fjava%2Fawt%2Fevent%2FActionEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fjava%2Fawt%2Fevent%2FActionEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fevent%2FActionEvent.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "156a3e2ad45c04f252ffd53eb7f0b2923f342e2c", "filename": "libjava/classpath/java/awt/event/ComponentEvent.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fjava%2Fawt%2Fevent%2FComponentEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fjava%2Fawt%2Fevent%2FComponentEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fevent%2FComponentEvent.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}, {"sha": "3237978f9559b078b1ec239115a69a20b9a2d451", "filename": "libjava/classpath/java/awt/event/HierarchyEvent.java", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fjava%2Fawt%2Fevent%2FHierarchyEvent.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd6d4007aa4f72b51756e4a571abf876fa3e3133/libjava%2Fclasspath%2Fjava%2Fawt%2Fevent%2FHierarchyEvent.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fclasspath%2Fjava%2Fawt%2Fevent%2FHierarchyEvent.java?ref=cd6d4007aa4f72b51756e4a571abf876fa3e3133"}]}