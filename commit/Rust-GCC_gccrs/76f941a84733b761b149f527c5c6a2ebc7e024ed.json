{"sha": "76f941a84733b761b149f527c5c6a2ebc7e024ed", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzZmOTQxYTg0NzMzYjc2MWIxNDlmNTI3YzVjNmEyZWJjN2UwMjRlZA==", "commit": {"author": {"name": "J. David Anglin", "email": "dave@hiauly1.hia.nrc.ca", "date": "2000-08-29T19:10:05Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "2000-08-29T19:10:05Z"}, "message": "* vax.md (sltu, sgeu): Delete sltu and sgeu insn patterns.\n\nFrom-SVN: r36044", "tree": {"sha": "43ee651def39140047801c7bcd44bbb6a4df5645", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43ee651def39140047801c7bcd44bbb6a4df5645"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/76f941a84733b761b149f527c5c6a2ebc7e024ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f941a84733b761b149f527c5c6a2ebc7e024ed", "html_url": "https://github.com/Rust-GCC/gccrs/commit/76f941a84733b761b149f527c5c6a2ebc7e024ed", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/76f941a84733b761b149f527c5c6a2ebc7e024ed/comments", "author": null, "committer": null, "parents": [{"sha": "2c8f0515bbed378f1e87e1b52e2913d058cbed16", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2c8f0515bbed378f1e87e1b52e2913d058cbed16", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2c8f0515bbed378f1e87e1b52e2913d058cbed16"}], "stats": {"total": 34, "additions": 10, "deletions": 24}, "files": [{"sha": "0a91a6cf2f1e7d9c472ec6f909b44f06a56e1fc0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f941a84733b761b149f527c5c6a2ebc7e024ed/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f941a84733b761b149f527c5c6a2ebc7e024ed/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=76f941a84733b761b149f527c5c6a2ebc7e024ed", "patch": "@@ -1,3 +1,7 @@\n+2000-08-29  J. David Anglin  <dave@hiauly1.hia.nrc.ca>\n+\n+\t* vax.md (sltu, sgeu): Delete sltu and sgeu insn patterns.\n+\n 2000-08-29  Zack Weinberg  <zack@wolery.cumb.org>\n \n \t* cpperror.c (print_file_and_line): If line is (unsigned int)-1,"}, {"sha": "a6d0e6c85ab81fbf8329ac22cac3f130a63525dc", "filename": "gcc/config/vax/vax.md", "status": "modified", "additions": 6, "deletions": 24, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/76f941a84733b761b149f527c5c6a2ebc7e024ed/gcc%2Fconfig%2Fvax%2Fvax.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/76f941a84733b761b149f527c5c6a2ebc7e024ed/gcc%2Fconfig%2Fvax%2Fvax.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvax%2Fvax.md?ref=76f941a84733b761b149f527c5c6a2ebc7e024ed", "patch": "@@ -122,31 +122,13 @@\n   \"\"\n   \"bitb %0,%1\")\n \n-;; The vax has no sltu or sgeu patterns, but does have two-operand\n-;; add/subtract with carry.  This is still better than the alternative.\n-;; Since the cc0-using insn cannot be separated from the cc0-setting insn,\n-;; and the two are created independently, we can't just use a define_expand\n-;; to try to optimize this.  (The \"movl\" and \"clrl\" insns alter the cc0\n-;; flags, but leave the carry flag alone, but that can't easily be expressed.)\n-;;\n-;; Several two-operator combinations could be added to make slightly more\n-;; optimal code, but they'd have to cover all combinations of plus and minus\n-;; using match_dup.  If you want to do this, I'd suggest changing the \"sgeu\"\n-;; pattern to something like (minus (const_int 1) (ltu ...)), so fewer\n-;; patterns need to be recognized.\n-;; -- Ken Raeburn (Raeburn@Watch.COM) 24 August 1991.\n-\n-(define_insn \"sltu\"\n-  [(set (match_operand:SI 0 \"general_operand\" \"=ro\")\n-\t(ltu (cc0) (const_int 0)))]\n-  \"\"\n-  \"clrl %0\\;adwc $0,%0\")\n+;; The vax has no sCOND insns.  It does have add/subtract with carry\n+;; which could be used to implement the sltu and sgeu patterns.  However,\n+;; to do this properly requires a complete rewrite of the compare insns\n+;; to keep them together with the sltu/sgeu insns until after the\n+;; reload pass is complete.  The previous implementation didn't do this\n+;; and has been deleted.\n \n-(define_insn \"sgeu\"\n-  [(set (match_operand:SI 0 \"general_operand\" \"=ro\")\n-\t(geu (cc0) (const_int 0)))]\n-  \"\"\n-  \"movl $1,%0\\;sbwc $0,%0\")\n \f\n (define_insn \"movdf\"\n   [(set (match_operand:DF 0 \"general_operand\" \"=g,g\")"}]}