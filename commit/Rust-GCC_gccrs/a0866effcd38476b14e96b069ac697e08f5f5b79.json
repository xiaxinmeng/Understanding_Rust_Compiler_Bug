{"sha": "a0866effcd38476b14e96b069ac697e08f5f5b79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTA4NjZlZmZjZDM4NDc2YjE0ZTk2YjA2OWFjNjk3ZTA4ZjVmNWI3OQ==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2016-01-05T16:06:06Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2016-01-05T16:06:06Z"}, "message": "[combine][v2] Canonicalise (r + r) to (r << 1) to aid recognition\n\n\tPR rtl-optimization/68651\n\t* combine.c (combine_simplify_rtx): Canonicalize x + x into\n\tx << 1.\n\n\t* gcc.target/aarch64/pr68651_1.c: New test.\n\nFrom-SVN: r232077", "tree": {"sha": "2b0e98778dcdae9cd360e0673ccdbcb12c249605", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2b0e98778dcdae9cd360e0673ccdbcb12c249605"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0866effcd38476b14e96b069ac697e08f5f5b79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0866effcd38476b14e96b069ac697e08f5f5b79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0866effcd38476b14e96b069ac697e08f5f5b79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0866effcd38476b14e96b069ac697e08f5f5b79/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c589e975638b217501e4e868e7d706bb318e18e9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c589e975638b217501e4e868e7d706bb318e18e9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c589e975638b217501e4e868e7d706bb318e18e9"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "98d6fefe93d2d434e80a3308015568dc73f833f2", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0866effcd38476b14e96b069ac697e08f5f5b79/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0866effcd38476b14e96b069ac697e08f5f5b79/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0866effcd38476b14e96b069ac697e08f5f5b79", "patch": "@@ -1,3 +1,9 @@\n+2016-01-05  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR rtl-optimization/68651\n+\t* combine.c (combine_simplify_rtx): Canonicalize x + x into\n+\tx << 1.\n+\n 2016-01-05  Nathan Sidwell  <nathan@acm.org>\n \n \t* alias.c (compare_base_decls): Use symtab_node::get."}, {"sha": "d088031b853f8b7f407325a071ef02afa18f8751", "filename": "gcc/combine.c", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0866effcd38476b14e96b069ac697e08f5f5b79/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0866effcd38476b14e96b069ac697e08f5f5b79/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=a0866effcd38476b14e96b069ac697e08f5f5b79", "patch": "@@ -5895,6 +5895,13 @@ combine_simplify_rtx (rtx x, machine_mode op0_mode, int in_dest,\n \t\t\t  || XEXP (temp, 1) != XEXP (x, 0)))))\n \t    return temp;\n \t}\n+\n+      /* Canonicalize x + x into x << 1.  */\n+      if (GET_MODE_CLASS (mode) == MODE_INT\n+\t  && rtx_equal_p (XEXP (x, 0), XEXP (x, 1))\n+\t  && !side_effects_p (XEXP (x, 0)))\n+\treturn simplify_gen_binary (ASHIFT, mode, XEXP (x, 0), const1_rtx);\n+\n       break;\n \n     case MINUS:"}, {"sha": "4ab864ef371f7b73b7d08eed2b07b261a8c25ead", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0866effcd38476b14e96b069ac697e08f5f5b79/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0866effcd38476b14e96b069ac697e08f5f5b79/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a0866effcd38476b14e96b069ac697e08f5f5b79", "patch": "@@ -1,3 +1,8 @@\n+2016-01-05  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\tPR rtl-optimization/68651\n+\t* gcc.target/aarch64/pr68651_1.c: New test.\n+\n 2016-01-05  David Malcolm  <dmalcolm@redhat.com>\n \n \tPR c/69122"}, {"sha": "ef9456f538776e7db01ecf5473425aed9efd9de2", "filename": "gcc/testsuite/gcc.target/aarch64/pr68651_1.c", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0866effcd38476b14e96b069ac697e08f5f5b79/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr68651_1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0866effcd38476b14e96b069ac697e08f5f5b79/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr68651_1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpr68651_1.c?ref=a0866effcd38476b14e96b069ac697e08f5f5b79", "patch": "@@ -0,0 +1,16 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -mcpu=cortex-a53\" } */\n+\n+int\n+foo (int x)\n+{\n+  return (x * 2) & 65535;\n+}\n+/* { dg-final { scan-assembler \"ubfiz\\tw\\[0-9\\]*, w\\[0-9\\]*.*\\n\" } } */\n+\n+int\n+bar (int x, int y)\n+{\n+  return (x * 2) | y;\n+}\n+/* { dg-final { scan-assembler \"orr\\tw\\[0-9\\]*, w\\[0-9\\]*, w\\[0-9\\]*, lsl 1.*\\n\" } } */"}]}