{"sha": "08e72a192902ca20803e5b423bfb6cfdc983642e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDhlNzJhMTkyOTAyY2EyMDgwM2U1YjQyM2JmYjZjZmRjOTgzNjQyZQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2000-08-09T05:52:17Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2000-08-09T05:52:17Z"}, "message": "pt.c (tsubst_aggr_type): Bail if creating the argvec fails.\n\n        * pt.c (tsubst_aggr_type): Bail if creating the argvec fails.\n        (tsubst_template_arg_vector): Likewise.\n\n        * decl2.c (build_anon_union_vars): Choose the largest field; don't\n        assume that one will be as large as the union.\n\nFrom-SVN: r35581", "tree": {"sha": "01a455aef1e2f902417b766e340519db5cd654a3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01a455aef1e2f902417b766e340519db5cd654a3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/08e72a192902ca20803e5b423bfb6cfdc983642e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08e72a192902ca20803e5b423bfb6cfdc983642e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/08e72a192902ca20803e5b423bfb6cfdc983642e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/08e72a192902ca20803e5b423bfb6cfdc983642e/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8e32b501b82f3ea5e8615d41ef18267308c654cf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8e32b501b82f3ea5e8615d41ef18267308c654cf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8e32b501b82f3ea5e8615d41ef18267308c654cf"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "b7b7df82013d3f435cb0eb59008db3cad5739bc1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e72a192902ca20803e5b423bfb6cfdc983642e/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e72a192902ca20803e5b423bfb6cfdc983642e/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=08e72a192902ca20803e5b423bfb6cfdc983642e", "patch": "@@ -1,3 +1,11 @@\n+2000-08-08  Jason Merrill  <jason@redhat.com>\n+\n+\t* pt.c (tsubst_aggr_type): Bail if creating the argvec fails.\n+\t(tsubst_template_arg_vector): Likewise.\n+\n+\t* decl2.c (build_anon_union_vars): Choose the largest field; don't\n+\tassume that one will be as large as the union.\n+\n 2000-08-07  Kazu Hirata  <kazu@hxi.com>\n \n \t* cp-tree.h (CLASSTYPE_HAS_PRIMARY_BASE_P): Fix a comment typo."}, {"sha": "cf1feb606e9febadbc576e26f682b8659a93cee8", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e72a192902ca20803e5b423bfb6cfdc983642e/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e72a192902ca20803e5b423bfb6cfdc983642e/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=08e72a192902ca20803e5b423bfb6cfdc983642e", "patch": "@@ -2190,12 +2190,17 @@ build_anon_union_vars (anon_decl, elems, static_p, external_p)\n \t  DECL_INITIAL (decl) = NULL_TREE;\n \t}\n \n-      /* Only write out one anon union element--choose the one that\n-\t can hold them all.  */\n+      /* Only write out one anon union element--choose the largest\n+\t one.  We used to try to find one the same size as the union,\n+\t but that fails if the ABI forces us to align the union more\n+\t strictly.  */\n       if (main_decl == NULL_TREE\n-\t  && simple_cst_equal (DECL_SIZE (decl),\n-\t\t\t       DECL_SIZE (anon_decl)) == 1)\n-\tmain_decl = decl;\n+\t  || tree_int_cst_lt (DECL_SIZE (main_decl), DECL_SIZE (decl)))\n+\t{\n+\t  if (main_decl)\n+\t    TREE_ASM_WRITTEN (main_decl) = 1;\n+\t  main_decl = decl;\n+\t}\n       else \n \t/* ??? This causes there to be no debug info written out\n \t   about this decl.  */"}, {"sha": "3d0a1b301276aa981e00abc208ebd8fdf9856260", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/08e72a192902ca20803e5b423bfb6cfdc983642e/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/08e72a192902ca20803e5b423bfb6cfdc983642e/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=08e72a192902ca20803e5b423bfb6cfdc983642e", "patch": "@@ -5261,6 +5261,9 @@ tsubst_template_arg_vector (t, args, complain)\n \t  (tsubst_expr (TREE_VEC_ELT (t, i), args, complain,\n \t\t\tNULL_TREE));\n       \n+      if (elts[i] == error_mark_node)\n+\treturn error_mark_node;\n+\n       if (elts[i] != TREE_VEC_ELT (t, i))\n \tneed_new = 1;\n     }\n@@ -5380,6 +5383,8 @@ tsubst_aggr_type (t, args, complain, in_decl, entering_scope)\n \t     S we only want {double}.  */\n \t  argvec = tsubst_template_arg_vector (TYPE_TI_ARGS (t), args,\n \t\t\t\t\t       complain);\n+\t  if (argvec == error_mark_node)\n+\t    return error_mark_node;\n \n   \t  r = lookup_template_class (t, argvec, in_decl, context,\n \t\t\t\t     entering_scope);"}]}