{"sha": "17541d72a769ffafcfa9bd84efb74c08a075ff7b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTc1NDFkNzJhNzY5ZmZhZmNmYTliZDg0ZWZiNzRjMDhhMDc1ZmY3Yg==", "commit": {"author": {"name": "Kenneth Zadeck", "email": "zadeck@naturalbridge.com", "date": "2007-11-08T16:45:53Z"}, "committer": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2007-11-08T16:45:53Z"}, "message": "[multiple changes]\n\n2007-11-07  Kenneth Zadeck <zadeck@naturalbridge.com>\n\n\tPR middle-end/33826\n\t* ipa-pure-const (static_execute): Added code to keep recursive\n\tfunctions from being marked as pure or const.\n\t* ipa-utils (searchc): Fixed comment.\n2007-11-08  Kenneth Zadeck <zadeck@naturalbridge.com>\n\n\tPR middle-end/33826\n\t* gcc.dg/pr33826.c: New.\n\t* gcc.dg/tree-ssa/20030714-1.c: Removed two tests that depend on \n\trecursive functions being marked pure or const.\n\nFrom-SVN: r130006", "tree": {"sha": "960a5c735afa3e5775ec4339f6094009bf8c1714", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/960a5c735afa3e5775ec4339f6094009bf8c1714"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17541d72a769ffafcfa9bd84efb74c08a075ff7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17541d72a769ffafcfa9bd84efb74c08a075ff7b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17541d72a769ffafcfa9bd84efb74c08a075ff7b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17541d72a769ffafcfa9bd84efb74c08a075ff7b/comments", "author": {"login": "zadeck", "id": 42682403, "node_id": "MDQ6VXNlcjQyNjgyNDAz", "avatar_url": "https://avatars.githubusercontent.com/u/42682403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zadeck", "html_url": "https://github.com/zadeck", "followers_url": "https://api.github.com/users/zadeck/followers", "following_url": "https://api.github.com/users/zadeck/following{/other_user}", "gists_url": "https://api.github.com/users/zadeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/zadeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zadeck/subscriptions", "organizations_url": "https://api.github.com/users/zadeck/orgs", "repos_url": "https://api.github.com/users/zadeck/repos", "events_url": "https://api.github.com/users/zadeck/events{/privacy}", "received_events_url": "https://api.github.com/users/zadeck/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6230c17e9c05a397f99726b789e4f9efcf9e21e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6230c17e9c05a397f99726b789e4f9efcf9e21e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6230c17e9c05a397f99726b789e4f9efcf9e21e"}], "stats": {"total": 93, "additions": 85, "deletions": 8}, "files": [{"sha": "d68ef6b15f2fdd2f4dd7654fe3cd7eb418f95604", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17541d72a769ffafcfa9bd84efb74c08a075ff7b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17541d72a769ffafcfa9bd84efb74c08a075ff7b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=17541d72a769ffafcfa9bd84efb74c08a075ff7b", "patch": "@@ -1,3 +1,10 @@\n+2007-11-07  Kenneth Zadeck <zadeck@naturalbridge.com>\n+\n+\tPR middle-end/33826\n+\t* ipa-pure-const (static_execute): Added code to keep recursive\n+\tfunctions from being marked as pure or const.\n+\t* ipa-utils (searchc): Fixed comment.\n+\t\t\n 2007-11-08  Tom Tromey  <tromey@redhat.com>\n \n \t* common.opt (fshow-column): Default to 0."}, {"sha": "eb4262a0047bcbe9b81c356c574795c3176a2e61", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17541d72a769ffafcfa9bd84efb74c08a075ff7b/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17541d72a769ffafcfa9bd84efb74c08a075ff7b/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=17541d72a769ffafcfa9bd84efb74c08a075ff7b", "patch": "@@ -644,6 +644,7 @@ static_execute (void)\n   for (i = 0; i < order_pos; i++ )\n     {\n       enum pure_const_state_e pure_const_state = IPA_CONST;\n+      int count = 0;\n       node = order[i];\n \n       /* Find the worst state for any node in the cycle.  */\n@@ -660,11 +661,40 @@ static_execute (void)\n \t  if (!w_l->state_set_in_source)\n \t    {\n \t      struct cgraph_edge *e;\n+\t      count++;\n+\n+\t      /* FIXME!!!  Because of pr33826, we cannot have either\n+\t\t immediate or transitive recursive functions marked as\n+\t\t pure or const because dce can delete a function that\n+\t\t is in reality an infinite loop.  A better solution\n+\t\t than just outlawing them is to add another bit the\n+\t\t functions to distinguish recursive from non recursive\n+\t\t pure and const function.  This would allow the\n+\t\t recursive ones to be cse'd but not dce'd.  In this\n+\t\t same vein, we could allow functions with loops to\n+\t\t also be cse'd but not dce'd.\n+\n+\t\t Unfortunately we are late in stage 3, and the fix\n+\t\t described above is is not appropriate.  */\n+\t      if (count > 1)\n+\t\t{\n+\t\t  pure_const_state = IPA_NEITHER;\n+\t\t  break;\n+\t\t}\n+\t\t    \n \t      for (e = w->callees; e; e = e->next_callee) \n \t\t{\n \t\t  struct cgraph_node *y = e->callee;\n \t\t  /* Only look at the master nodes and skip external nodes.  */\n \t\t  y = cgraph_master_clone (y);\n+\n+\t\t  /* Check for immediate recursive functions.  See the\n+\t\t     FIXME above.  */\n+\t\t  if (w == y)\n+\t\t    {\n+\t\t      pure_const_state = IPA_NEITHER;\n+\t\t      break;\n+\t\t    }\n \t\t  if (y)\n \t\t    {\n \t\t      funct_state y_l = get_function_state (y);"}, {"sha": "2a9562935c3f52aa6ddaf769f380bf1597bcff3e", "filename": "gcc/ipa-utils.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17541d72a769ffafcfa9bd84efb74c08a075ff7b/gcc%2Fipa-utils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17541d72a769ffafcfa9bd84efb74c08a075ff7b/gcc%2Fipa-utils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-utils.c?ref=17541d72a769ffafcfa9bd84efb74c08a075ff7b", "patch": "@@ -76,7 +76,7 @@ struct searchc_env {\n    has been customized for cgraph_nodes.  The env parameter is because\n    it is recursive and there are no nested functions here.  This\n    function should only be called from itself or\n-   cgraph_reduced_inorder.  ENV is a stack env and would be\n+   ipa_utils_reduced_inorder.  ENV is a stack env and would be\n    unnecessary if C had nested functions.  V is the node to start\n    searching from.  */\n "}, {"sha": "386301cfb86af44f4123d865f7f3dda75c3d10fb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17541d72a769ffafcfa9bd84efb74c08a075ff7b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17541d72a769ffafcfa9bd84efb74c08a075ff7b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=17541d72a769ffafcfa9bd84efb74c08a075ff7b", "patch": "@@ -1,3 +1,10 @@\n+2007-11-08  Kenneth Zadeck <zadeck@naturalbridge.com>\n+\n+\tPR middle-end/33826\n+\t* gcc.dg/pr33826.c: New.\n+\t* gcc.dg/tree-ssa/20030714-1.c: Removed two tests that depend on \n+\trecursive functions being marked pure or const.\n+\t\n 2007-11-08  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/33917"}, {"sha": "a0cfd459d6dd8014ac5ee7c81ecb0a5385773d36", "filename": "gcc/testsuite/gcc.dg/pr33826.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17541d72a769ffafcfa9bd84efb74c08a075ff7b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33826.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17541d72a769ffafcfa9bd84efb74c08a075ff7b/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33826.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr33826.c?ref=17541d72a769ffafcfa9bd84efb74c08a075ff7b", "patch": "@@ -0,0 +1,40 @@\n+/* Regression test for PR middle-end/33826 */\n+/* Verify that recursive functions cannot be pure or const.  */\n+\n+/* { dg-do compile } */\n+/* { dg-options \"-O1 -fdump-ipa-pure-const\" } */\n+\n+int recurese1 (int i)\n+{\n+  return recurse1 (i+1);\n+}\n+\n+int recurse2a (int i)\n+{\n+  return recurse2b (i+1);\n+}\n+\n+int recurse2b (int i)\n+{\n+  return recurse2a (i+1);\n+}\n+\n+int norecurse1a (int i)\n+{\n+  return norecurse1b (i+1);\n+}\n+\n+int norecurse1b (int i)\n+{\n+  return i+1;\n+}\n+\n+/* { dg-final { scan-ipa-dump \"found to be const: norecurse1a\" \"pure-const\" } } */\n+/* { dg-final { scan-ipa-dump \"found to be const: norecurse1b\" \"pure-const\" } } */\n+/* { dg-final { scan-ipa-dump-not \"found to be pure: recurse1\" \"pure-const\" } } */\n+/* { dg-final { scan-ipa-dump-not \"found to be pure: recurse2a\" \"pure-const\" } } */\n+/* { dg-final { scan-ipa-dump-not \"found to be pure: recurse2b\" \"pure-const\" } } */\n+/* { dg-final { scan-ipa-dump-not \"found to be const: recurse1\" \"pure-const\" } } */\n+/* { dg-final { scan-ipa-dump-not \"found to be const: recurse2a\" \"pure-const\" } } */\n+/* { dg-final { scan-ipa-dump-not \"found to be const: recurse2b\" \"pure-const\" } } */\n+/* { dg-final { cleanup-ipa-dump \"pure-const\" } } */"}, {"sha": "a48cfdb75961c8f2d37536c52452b248bba95b09", "filename": "gcc/testsuite/gcc.dg/tree-ssa/20030714-1.c", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17541d72a769ffafcfa9bd84efb74c08a075ff7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030714-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17541d72a769ffafcfa9bd84efb74c08a075ff7b/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030714-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftree-ssa%2F20030714-1.c?ref=17541d72a769ffafcfa9bd84efb74c08a075ff7b", "patch": "@@ -34,13 +34,6 @@ find_base_value (src)\n }\n \n \n-/* There should be four IF conditionals.  */\n-/* { dg-final { scan-tree-dump-times \"if \" 4 \"dom3\"} } */\n-\n /* There should be no casts to short unsigned int.  */\n /* { dg-final { scan-tree-dump-times \"\\\\(short unsigned int\\\\)\" 0 \"dom3\"} } */\n \n-/* There should be two loads of ->code.  */\n-/* { dg-final { scan-tree-dump-times \"->code\" 2 \"dom3\"} } */\n-\n-/* { dg-final { cleanup-tree-dump \"dom3\" } } */"}]}