{"sha": "637dec4188ed71b4d2e0bf04acb97b4ca19980af", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjM3ZGVjNDE4OGVkNzFiNGQyZTBiZjA0YWNiOTdiNGNhMTk5ODBhZg==", "commit": {"author": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-05-07T17:42:26Z"}, "committer": {"name": "Jeff Law", "email": "law@gcc.gnu.org", "date": "1996-05-07T17:42:26Z"}, "message": "h8300.h (READONLY_DATA_SECTION): Define.\n\n        * h8300/h8300.h (READONLY_DATA_SECTION): Define.\n        (EXTRA_SECTIONS): Add in_readonly_data.\n        (READONLY_DATA_SECTION_ASM_OP): Define.\n        (EXTRA_SECTION_FUNCTINOS): Add readonly_data.\n\nFrom-SVN: r11951", "tree": {"sha": "8f6ad209bbe87403c1a3652e54dec532f749e9a4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8f6ad209bbe87403c1a3652e54dec532f749e9a4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/637dec4188ed71b4d2e0bf04acb97b4ca19980af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/637dec4188ed71b4d2e0bf04acb97b4ca19980af", "html_url": "https://github.com/Rust-GCC/gccrs/commit/637dec4188ed71b4d2e0bf04acb97b4ca19980af", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/637dec4188ed71b4d2e0bf04acb97b4ca19980af/comments", "author": null, "committer": null, "parents": [{"sha": "d51602543daf0e69f1bff13cccedab38d14e4c87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d51602543daf0e69f1bff13cccedab38d14e4c87", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d51602543daf0e69f1bff13cccedab38d14e4c87"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "6109a85e215f7d3c05774ff94aab3bc91512899c", "filename": "gcc/config/h8300/h8300.h", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/637dec4188ed71b4d2e0bf04acb97b4ca19980af/gcc%2Fconfig%2Fh8300%2Fh8300.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/637dec4188ed71b4d2e0bf04acb97b4ca19980af/gcc%2Fconfig%2Fh8300%2Fh8300.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.h?ref=637dec4188ed71b4d2e0bf04acb97b4ca19980af", "patch": "@@ -1014,16 +1014,24 @@ h8300_valid_machine_decl_attribute (DECL, ATTRIBUTES, IDENTIFIER, ARGS)\n /* The assembler op to get a word, 2 bytes for the H8/300, 4 for H8/300H.  */\n #define ASM_WORD_OP\t(TARGET_H8300 ? \".word\" : \".long\")\n \n-/* Output before read-only data.  */\n+/* We define a readonly data section solely to remove readonly data\n+   from the instruction stream.  This can improve relaxing in two significant\n+   ways.  First it's more likely that references to readonly data\n+   can be done with a 16bit absolute address since they'll be in low\n+   memory.  Second, it's more likely that jsr instructions can be\n+   turned into bsr instructions since read-only data is not in the\n+   instruction stream.  */\n+#define READONLY_DATA_SECTION readonly_data\n \n #define TEXT_SECTION_ASM_OP \"\\t.section .text\"\n #define DATA_SECTION_ASM_OP \"\\t.section .data\"\n #define BSS_SECTION_ASM_OP \"\\t.section .bss\"\n #define INIT_SECTION_ASM_OP \"\\t.section .init\"\n #define CTORS_SECTION_ASM_OP \"\\t.section .ctors\"\n #define DTORS_SECTION_ASM_OP \"\\t.section .dtors\"\n+#define READONLY_DATA_SECTION_ASM_OP \"\\t.section .rodata\"\n \n-#define EXTRA_SECTIONS in_ctors, in_dtors\n+#define EXTRA_SECTIONS in_ctors, in_dtors, in_readonly_data\n \n #define EXTRA_SECTION_FUNCTIONS\t\t\t\t\t\\\n \t\t\t\t\t\t\t\t\\\n@@ -1046,6 +1054,18 @@ dtors_section() \t\t\t\t\t\t\\\n       in_section = in_dtors;\t\t\t\t\t\\\n     }\t\t\t\t\t\t\t\t\\\n }\t\t\t\t\t\t\t\t\\\n+\t\t\t\t\t\t\t\t\\\n+void\t\t\t\t\t\t\t\t\\\n+readonly_data() \t\t\t\t\t\t\\\n+{\t\t\t\t\t\t\t\t\\\n+  if (in_section != in_readonly_data)\t\t\t\t\\\n+    {\t\t\t\t\t\t\t\t\\\n+      fprintf (asm_out_file, \"%s\\n\", READONLY_DATA_SECTION_ASM_OP);\\\n+      in_section = in_readonly_data;\t\t\t\t\\\n+    }\t\t\t\t\t\t\t\t\\\n+}\n+\n+\n \n #define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)\t\\\n   do { ctors_section();\t\t\t\t\\"}]}