{"sha": "43fa306f1d723d9d6c0884e38b102b954d3a4c30", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDNmYTMwNmYxZDcyM2Q5ZDZjMDg4NGUzOGIxMDJiOTU0ZDNhNGMzMA==", "commit": {"author": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2021-06-07T16:20:56Z"}, "committer": {"name": "Bill Schmidt", "email": "wschmidt@linux.ibm.com", "date": "2021-07-16T16:52:31Z"}, "message": "rs6000: Add file support and functions for diagnostic support\n\n2021-06-07  Bill Schmidt  <wschmidt@linux.ibm.com>\n\ngcc/\n\t* config/rs6000/rs6000-gen-builtins.c (bif_file): New variable.\n\t(ovld_file): Likewise.\n\t(header_file): Likewise.\n\t(init_file): Likewise.\n\t(defines_file): Likewise.\n\t(pgm_path): Likewise.\n\t(bif_path): Likewise.\n\t(ovld_path): Likewise.\n\t(header_path): Likewise.\n\t(init_path): Likewise.\n\t(defines_path): Likewise.\n\t(LINELEN): New macro.\n\t(linebuf): New variable.\n\t(line): Likewise.\n\t(pos): Likewise.\n\t(diag): Likewise.\n\t(bif_diag): New function.\n\t(ovld_diag): Likewise.", "tree": {"sha": "6c7d3c9e402473cbe9bba5585d9425523fd4e9fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6c7d3c9e402473cbe9bba5585d9425523fd4e9fc"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/43fa306f1d723d9d6c0884e38b102b954d3a4c30", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43fa306f1d723d9d6c0884e38b102b954d3a4c30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43fa306f1d723d9d6c0884e38b102b954d3a4c30", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43fa306f1d723d9d6c0884e38b102b954d3a4c30/comments", "author": null, "committer": null, "parents": [{"sha": "4a720a9547320699aceda7d2e0b08de5ab40132f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4a720a9547320699aceda7d2e0b08de5ab40132f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4a720a9547320699aceda7d2e0b08de5ab40132f"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "3c53c3401b2f76d4850beca83c4d62de385f3057", "filename": "gcc/config/rs6000/rs6000-gen-builtins.c", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/43fa306f1d723d9d6c0884e38b102b954d3a4c30/gcc%2Fconfig%2Frs6000%2Frs6000-gen-builtins.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/43fa306f1d723d9d6c0884e38b102b954d3a4c30/gcc%2Fconfig%2Frs6000%2Frs6000-gen-builtins.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000-gen-builtins.c?ref=43fa306f1d723d9d6c0884e38b102b954d3a4c30", "patch": "@@ -163,3 +163,50 @@ along with GCC; see the file COPYING3.  If not see\n #include <string.h>\n #include <assert.h>\n #include <unistd.h>\n+\n+/* Input and output file descriptors and pathnames.  */\n+static FILE *bif_file;\n+static FILE *ovld_file;\n+static FILE *header_file;\n+static FILE *init_file;\n+static FILE *defines_file;\n+\n+static const char *pgm_path;\n+static const char *bif_path;\n+static const char *ovld_path;\n+static const char *header_path;\n+static const char *init_path;\n+static const char *defines_path;\n+\n+/* Position information.  Note that \"pos\" is zero-indexed, but users\n+   expect one-indexed column information, so representations of \"pos\"\n+   as columns in diagnostic messages must be adjusted.  */\n+#define LINELEN 1024\n+static char linebuf[LINELEN];\n+static int line;\n+static int pos;\n+\n+/* Pointer to a diagnostic function.  */\n+static void (*diag) (const char *, ...)\n+  __attribute__ ((format (printf, 1, 2)));\n+\n+/* Custom diagnostics.  */\n+static void __attribute__ ((format (printf, 1, 2)))\n+bif_diag (const char * fmt, ...)\n+{\n+  va_list args;\n+  fprintf (stderr, \"%s:%d: \", bif_path, line);\n+  va_start (args, fmt);\n+  vfprintf (stderr, fmt, args);\n+  va_end (args);\n+}\n+\n+static void __attribute__ ((format (printf, 1, 2)))\n+ovld_diag (const char * fmt, ...)\n+{\n+  va_list args;\n+  fprintf (stderr, \"%s:%d: \", ovld_path, line);\n+  va_start (args, fmt);\n+  vfprintf (stderr, fmt, args);\n+  va_end (args);\n+}"}]}