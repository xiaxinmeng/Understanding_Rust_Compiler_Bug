{"sha": "7378039064d2ab688efa47055134a3dc327afc85", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzM3ODAzOTA2NGQyYWI2ODhlZmE0NzA1NTEzNGEzZGMzMjdhZmM4NQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-01-21T10:11:44Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-01-21T10:11:44Z"}, "message": "[ARM/AArch64][testsuite] Add vqdmlal and vqdmlsl tests.\n\n2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vqdmlXl.inc: New file.\n\t* gcc.target/aarch64/advsimd-intrinsics/vqdmlal.c: New file.\n\t* gcc.target/aarch64/advsimd-intrinsics/vqdmlsl.c: New file.\n\nFrom-SVN: r219930", "tree": {"sha": "4bbe7edb22af7204771b613bb004107ee0389afa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4bbe7edb22af7204771b613bb004107ee0389afa"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7378039064d2ab688efa47055134a3dc327afc85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7378039064d2ab688efa47055134a3dc327afc85", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7378039064d2ab688efa47055134a3dc327afc85", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7378039064d2ab688efa47055134a3dc327afc85/comments", "author": null, "committer": null, "parents": [{"sha": "cf836bd3d6131ab09f30a04cfb2920d70af55a54", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cf836bd3d6131ab09f30a04cfb2920d70af55a54", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cf836bd3d6131ab09f30a04cfb2920d70af55a54"}], "stats": {"total": 125, "additions": 125, "deletions": 0}, "files": [{"sha": "6414a125e62c9a9b25007895337f3c81406a6e0c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7378039064d2ab688efa47055134a3dc327afc85/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7378039064d2ab688efa47055134a3dc327afc85/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7378039064d2ab688efa47055134a3dc327afc85", "patch": "@@ -1,3 +1,9 @@\n+2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqdmlXl.inc: New file.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqdmlal.c: New file.\n+\t* gcc.target/aarch64/advsimd-intrinsics/vqdmlsl.c: New file.\n+\n 2015-01-20  Jeff Law  <law@redhat.com>\n \n \tPR target/59946"}, {"sha": "cd61fd457073efe53e33a4c52d8ae6ec3fb15f0c", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vqdmlXl.inc", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7378039064d2ab688efa47055134a3dc327afc85/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvqdmlXl.inc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7378039064d2ab688efa47055134a3dc327afc85/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvqdmlXl.inc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2FvqdmlXl.inc?ref=7378039064d2ab688efa47055134a3dc327afc85", "patch": "@@ -0,0 +1,63 @@\n+#define FNNAME1(NAME) exec_ ## NAME\n+#define FNNAME(NAME) FNNAME1(NAME)\n+\n+void FNNAME (INSN_NAME) (void)\n+{\n+  /* vector_res = OP(vector, vector3, vector4),\n+     then store the result.  */\n+#define TEST_VQDMLXL1(INSN, T1, T2, W, W2, N, EXPECTED_CUMULATIVE_SAT, CMT) \\\n+  Set_Neon_Cumulative_Sat(0, VECT_VAR(vector_res, T1, W, N));\t\t\\\n+  VECT_VAR(vector_res, T1, W, N) =\t\t\t\t\t\\\n+    INSN##_##T2##W2(VECT_VAR(vector, T1, W, N),\t\t\t\t\\\n+\t\t    VECT_VAR(vector3, T1, W2, N),\t\t\t\\\n+\t\t    VECT_VAR(vector4, T1, W2, N));\t\t\t\\\n+    vst1q_##T2##W(VECT_VAR(result, T1, W, N),\t\t\t\t\\\n+\t\t  VECT_VAR(vector_res, T1, W, N));\t\t\t\\\n+    CHECK_CUMULATIVE_SAT(TEST_MSG, T1, W, N, EXPECTED_CUMULATIVE_SAT, CMT)\n+\n+#define TEST_VQDMLXL(INSN, T1, T2, W, W2, N, EXPECTED_CUMULATIVE_SAT, CMT) \\\n+  TEST_VQDMLXL1(INSN, T1, T2, W, W2, N, EXPECTED_CUMULATIVE_SAT, CMT)\n+\n+  DECL_VARIABLE(vector, int, 32, 4);\n+  DECL_VARIABLE(vector3, int, 16, 4);\n+  DECL_VARIABLE(vector4, int, 16, 4);\n+  DECL_VARIABLE(vector_res, int, 32, 4);\n+  DECL_VARIABLE(vector, int, 64, 2);\n+  DECL_VARIABLE(vector3, int, 32, 2);\n+  DECL_VARIABLE(vector4, int, 32, 2);\n+  DECL_VARIABLE(vector_res, int, 64, 2);\n+\n+  clean_results ();\n+\n+  VLOAD(vector, buffer, q, int, s, 32, 4);\n+  VLOAD(vector, buffer, q, int, s, 64, 2);\n+\n+  VDUP(vector3, , int, s, 16, 4, 0x55);\n+  VDUP(vector4, , int, s, 16, 4, 0xBB);\n+  VDUP(vector3, , int, s, 32, 2, 0x55);\n+  VDUP(vector4, , int, s, 32, 2, 0xBB);\n+\n+  TEST_VQDMLXL(INSN_NAME, int, s, 32, 16, 4, expected_cumulative_sat, \"\");\n+  TEST_VQDMLXL(INSN_NAME, int, s, 64, 32, 2, expected_cumulative_sat, \"\");\n+\n+  CHECK(TEST_MSG, int, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, int, 64, 2, PRIx64, expected, \"\");\n+\n+  VDUP(vector3, , int, s, 16, 4, 0x8000);\n+  VDUP(vector4, , int, s, 16, 4, 0x8000);\n+  VDUP(vector3, , int, s, 32, 2, 0x80000000);\n+  VDUP(vector4, , int, s, 32, 2, 0x80000000);\n+\n+#define TEST_MSG2 \"with saturation\"\n+  TEST_VQDMLXL(INSN_NAME, int, s, 32, 16, 4, expected_cumulative_sat2, TEST_MSG2);\n+  TEST_VQDMLXL(INSN_NAME, int, s, 64, 32, 2, expected_cumulative_sat2, TEST_MSG2);\n+\n+  CHECK(TEST_MSG, int, 32, 4, PRIx32, expected2, TEST_MSG2);\n+  CHECK(TEST_MSG, int, 64, 2, PRIx64, expected2, TEST_MSG2);\n+}\n+\n+int main (void)\n+{\n+  FNNAME (INSN_NAME) ();\n+  return 0;\n+}"}, {"sha": "c53a90a1a897de9e4a3e5df9f7c00839771f9ea8", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vqdmlal.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7378039064d2ab688efa47055134a3dc327afc85/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvqdmlal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7378039064d2ab688efa47055134a3dc327afc85/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvqdmlal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvqdmlal.c?ref=7378039064d2ab688efa47055134a3dc327afc85", "patch": "@@ -0,0 +1,27 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+#define INSN_NAME vqdmlal\n+#define TEST_MSG \"VQDMLAL\"\n+\n+/* Expected values of cumulative_saturation flag.  */\n+int VECT_VAR(expected_cumulative_sat,int,32,4) = 0;\n+int VECT_VAR(expected_cumulative_sat,int,64,2) = 0;\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0x7c1e, 0x7c1f, 0x7c20, 0x7c21 };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0x7c1e, 0x7c1f };\n+\n+/* Expected values of cumulative_saturation flag when saturation\n+   occurs.  */\n+int VECT_VAR(expected_cumulative_sat2,int,32,4) = 1;\n+int VECT_VAR(expected_cumulative_sat2,int,64,2) = 1;\n+\n+/* Expected results when saturation occurs.  */\n+VECT_VAR_DECL(expected2,int,32,4) [] = { 0x7fffffef, 0x7ffffff0,\n+\t\t\t\t\t 0x7ffffff1, 0x7ffffff2 };\n+VECT_VAR_DECL(expected2,int,64,2) [] = { 0x7fffffffffffffef,\n+\t\t\t\t\t 0x7ffffffffffffff0 };\n+\n+#include \"vqdmlXl.inc\""}, {"sha": "56e0b61d4a30b66c4184f35017e89fa3251ff6d1", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vqdmlsl.c", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7378039064d2ab688efa47055134a3dc327afc85/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvqdmlsl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7378039064d2ab688efa47055134a3dc327afc85/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvqdmlsl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvqdmlsl.c?ref=7378039064d2ab688efa47055134a3dc327afc85", "patch": "@@ -0,0 +1,29 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+#define INSN_NAME vqdmlsl\n+#define TEST_MSG \"VQDMLSL\"\n+\n+/* Expected values of cumulative_saturation flag.  */\n+int VECT_VAR(expected_cumulative_sat,int,32,4) = 0;\n+int VECT_VAR(expected_cumulative_sat,int,64,2) = 0;\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0xffff83c2, 0xffff83c3,\n+\t\t\t\t\t0xffff83c4, 0xffff83c5 };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0xffffffffffff83c2,\n+\t\t\t\t\t0xffffffffffff83c3 };\n+\n+/* Expected values of cumulative_saturation flag when saturation\n+   occurs.  */\n+int VECT_VAR(expected_cumulative_sat2,int,32,4) = 1;\n+int VECT_VAR(expected_cumulative_sat2,int,64,2) = 1;\n+\n+/* Expected results when saturation occurs.  */\n+VECT_VAR_DECL(expected2,int,32,4) [] = { 0x80000000, 0x80000000,\n+\t\t\t\t\t 0x80000000, 0x80000000 };\n+VECT_VAR_DECL(expected2,int,64,2) [] = { 0x8000000000000000,\n+\t\t\t\t\t 0x8000000000000000 };\n+\n+#include \"vqdmlXl.inc\""}]}