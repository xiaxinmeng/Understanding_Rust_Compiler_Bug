{"sha": "f780d21b21452c0c33c5de633163cb3204a3a1f8", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Zjc4MGQyMWIyMTQ1MmMwYzMzYzVkZTYzMzE2M2NiMzIwNGEzYTFmOA==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-24T19:40:47Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-05-24T19:40:47Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r1074", "tree": {"sha": "50ce9f96633cfd3a88384524fdffe912a13bd35a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/50ce9f96633cfd3a88384524fdffe912a13bd35a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f780d21b21452c0c33c5de633163cb3204a3a1f8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f780d21b21452c0c33c5de633163cb3204a3a1f8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f780d21b21452c0c33c5de633163cb3204a3a1f8", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f780d21b21452c0c33c5de633163cb3204a3a1f8/comments", "author": null, "committer": null, "parents": [{"sha": "c1c35f175d810f2a5869e81b50e1521545d345c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c1c35f175d810f2a5869e81b50e1521545d345c2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c1c35f175d810f2a5869e81b50e1521545d345c2"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "aee83ea922edb9884dea449ead915cb7e4283043", "filename": "gcc/Makefile.in", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f780d21b21452c0c33c5de633163cb3204a3a1f8/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f780d21b21452c0c33c5de633163cb3204a3a1f8/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=f780d21b21452c0c33c5de633163cb3204a3a1f8", "patch": "@@ -184,6 +184,10 @@ EXTRA_PARTS =\n # compiler proper (cc1, cc1obj, cc1plus).\n EXTRA_OBJS =\n \n+# List of additional header files to install.\n+# Often this is edited directly by `configure'.\n+EXTRA_HEADERS =\n+\n # Set this to `ld' to enable use of collect2.\n # USE_COLLECT2 =\n # It is convenient for configure to add the assignment at the beginning,\n@@ -386,7 +390,7 @@ LIB2FUNCS = _muldi3 _divdi3 _moddi3 _udivdi3 _umoddi3 _negdi2 \\\n # Header files that are made available under the same name\n # to programs compiled with gcc.\n USER_H = assert.h va-hp800.h va-i860.h va-mips.h va-pyr.h va-sparc.h \\\n-    va-spur.h va-m88k.h va-i960.h proto.h\n+    va-spur.h va-m88k.h va-i960.h proto.h $(EXTRA_HEADERS)\n \n # All the header files that are installed for users from GCC itself.\n INSTALLED_H = float.h stddef.h stdarg.h varargs.h $(USER_H) limits.h\n@@ -1172,16 +1176,20 @@ test-protoize-simple: ./protoize ./unprotoize $(GCC_PASSES)\n \f\n # Remake the info files.\n \n-doc: $(srcdir)/cpp.info $(srcdir)/gcc.info\n+doc: $(srcdir)/cpp.info $(srcdir)/gcc.info $(srcdir)/INSTALL\n \n-$(srcdir)/cpp.info: $(srcdir)/cpp.texi\n+$(srcdir)/cpp.info: cpp.texi\n \tmakeinfo `echo $(srcdir)/cpp.texi | sed 's,^\\./,,'`\n \n-#$(srcdir)/gplus.info: $(srcdir)/gplus.texi\n+#$(srcdir)/gplus.info: gplus.texi\n #\tmakeinfo `echo $(srcdir)/gplus.texi | sed 's,^\\./,,'`\n \n-$(srcdir)/gcc.info: $(srcdir)/gcc.texi\n+$(srcdir)/gcc.info: gcc.texi extend.texi install.texi invoke.texi \\\n+\t\tmd.texi rtl.texi tm.texi \n \tmakeinfo `echo $(srcdir)/gcc.texi | sed 's,^\\./,,'`\n+\n+$(srcdir)/INSTALL: install1.texi install.texi\n+\tmakeinfo --no-header `echo $(srcdir)/install1.texi | sed 's,^\\./,,'`\n \f\n # Deletion of files made during compilation.\n # There are four levels of this:\n@@ -1243,7 +1251,7 @@ distclean: clean\n extraclean: distclean\n \t-rm -rf =* #* *~* config/=* config/#* config/*~*\n \t-rm -f *.dvi *.oaux patch* config/patch* *.orig *.rej *.d *.Z *.tar\n-\t-rm -f *.s *.s[0-9] *.i\n+\t-rm -f *.s *.s[0-9] *.i install1.texi\n \n # Get rid of every file that's generated from some other file.\n # Most of these files ARE PRESENT in the GCC distribution.\n@@ -1335,6 +1343,7 @@ install-dir:\n \t-if [ -d $(libdir)/gcc-lib/include ] ; then true ; else mkdir $(libdir)/gcc-lib/include ; fi\n \t-if [ -d $(libdir)/gcc-lib/$(target) ] ; then true ; else mkdir $(libdir)/gcc-lib/$(target) ; fi\n \t-if [ -d $(libdir)/gcc-lib/$(target)/$(version) ] ; then true ; else mkdir $(libdir)/gcc-lib/$(target)/$(version) ; fi\n+\t-if [ -d $(libdir)/gcc-lib/$(target)/$(version)/include ] ; then true ; else mkdir $(libdir)/gcc-lib/$(target)/$(version)/include ; fi\n \t-if [ -d $(bindir) ] ; then true ; else mkdir $(bindir) ; fi\n # We don't use mkdir -p to create the parents of mandir,\n # because some systems don't support it.\n@@ -1425,13 +1434,13 @@ install-libgcc: libgcc.a\n install-headers: install-common-headers install-float-h install-limits-h\n \n # Install float.h for native compiler.\n-install-float-h: float.h\n+install-float-h: float.h install-dir\n \t-rm -f $(libsubdir)/include/float.h\n \t$(INSTALL_DATA) float.h $(libsubdir)/include/float.h\n \tchmod a-x $(libsubdir)/include/float.h\n \n # Install limits.h, optionally inheriting from the standard system version.\n-install-limits-h: limits.h limitx.h\n+install-limits-h: limits.h limitx.h install-dir\n \t-rm -f $(libsubdir)/include/limits.h tmp-limits.h\n \tif [ -f /usr/include/limits.h ] ; then \\\n \t  cat $(srcdir)/limitx.h $(srcdir)/limits.h > tmp-limits.h; \\\n@@ -1547,6 +1556,10 @@ gcc.xtar.Z: gcc.xtar\n \n #gcc-$(version).tar:\n gcc.xtar: doc\n+\tif grep -s \"for version ${version}\" gcc.texi; \\\n+\tthen true; \\\n+\telse echo \"You must update the version number in `gcc.texi'\"; \\\n+\tfi\n \t-rm -rf gcc-$(version) tmp\t\n # Put all the files in a temporary subdirectory\n # which has the name that we want to have in the tar file."}]}