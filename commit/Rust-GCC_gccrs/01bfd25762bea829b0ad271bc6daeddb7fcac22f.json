{"sha": "01bfd25762bea829b0ad271bc6daeddb7fcac22f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDFiZmQyNTc2MmJlYTgyOWIwYWQyNzFiYzZkYWVkZGI3ZmNhYzIyZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@acm.org", "date": "2017-01-11T20:37:16Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2017-01-11T20:37:16Z"}, "message": "re PR c++/77812 (incorrectly rejects valid C++ code that uses enum in template instantiation)\n\n\tcp/\n\tPR c++/77812\n\t* name-lookup.c (set_namespace_binding_1): An overload of 1 decl\n\tis a new overload.\n\n\ttestsuite/\n\tPR c++/77812\n\t* g++.dg/pr77812.C: New.\n\nFrom-SVN: r244335", "tree": {"sha": "30420695cc5deaa81bb08362b482ff776c078de4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30420695cc5deaa81bb08362b482ff776c078de4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/01bfd25762bea829b0ad271bc6daeddb7fcac22f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01bfd25762bea829b0ad271bc6daeddb7fcac22f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01bfd25762bea829b0ad271bc6daeddb7fcac22f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01bfd25762bea829b0ad271bc6daeddb7fcac22f/comments", "author": {"login": "urnathan", "id": 13103001, "node_id": "MDQ6VXNlcjEzMTAzMDAx", "avatar_url": "https://avatars.githubusercontent.com/u/13103001?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urnathan", "html_url": "https://github.com/urnathan", "followers_url": "https://api.github.com/users/urnathan/followers", "following_url": "https://api.github.com/users/urnathan/following{/other_user}", "gists_url": "https://api.github.com/users/urnathan/gists{/gist_id}", "starred_url": "https://api.github.com/users/urnathan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urnathan/subscriptions", "organizations_url": "https://api.github.com/users/urnathan/orgs", "repos_url": "https://api.github.com/users/urnathan/repos", "events_url": "https://api.github.com/users/urnathan/events{/privacy}", "received_events_url": "https://api.github.com/users/urnathan/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5b33cc835cfb82fee4508129bf849f40733e752f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b33cc835cfb82fee4508129bf849f40733e752f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b33cc835cfb82fee4508129bf849f40733e752f"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "b318ab9839aa9ff551c01ac2502014e6e2305d82", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01bfd25762bea829b0ad271bc6daeddb7fcac22f/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01bfd25762bea829b0ad271bc6daeddb7fcac22f/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=01bfd25762bea829b0ad271bc6daeddb7fcac22f", "patch": "@@ -1,3 +1,9 @@\n+2017-01-11  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/77812\n+\t* name-lookup.c (set_namespace_binding_1): An overload of 1 decl\n+\tis a new overload.\n+\n 2017-01-11  Nathan Sidwell  <nathan@acm.org>\n \n \t* name-lookup.c (push_overloaded_decl_1): Refactor OVERLOAD creation."}, {"sha": "3c7559f33db06d599590df3c545adbbcf0da3f62", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01bfd25762bea829b0ad271bc6daeddb7fcac22f/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01bfd25762bea829b0ad271bc6daeddb7fcac22f/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=01bfd25762bea829b0ad271bc6daeddb7fcac22f", "patch": "@@ -3496,7 +3496,12 @@ set_namespace_binding_1 (tree name, tree scope, tree val)\n   if (scope == NULL_TREE)\n     scope = global_namespace;\n   b = binding_for_name (NAMESPACE_LEVEL (scope), name);\n-  if (!b->value || TREE_CODE (val) == OVERLOAD || val == error_mark_node)\n+  if (!b->value\n+      /* For templates and using we create a single element OVERLOAD.\n+\t Look for the chain to know whether this is really augmenting\n+\t an existing overload.  */\n+      || (TREE_CODE (val) == OVERLOAD && OVL_CHAIN (val))\n+      || val == error_mark_node)\n     b->value = val;\n   else\n     supplement_binding (b, val);"}, {"sha": "4f281cbfde62dba6c8a4abb9ba28d919c8f30d60", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01bfd25762bea829b0ad271bc6daeddb7fcac22f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01bfd25762bea829b0ad271bc6daeddb7fcac22f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=01bfd25762bea829b0ad271bc6daeddb7fcac22f", "patch": "@@ -1,3 +1,8 @@\n+2017-01-11  Nathan Sidwell  <nathan@acm.org>\n+\n+\tPR c++/77812\n+\t* g++.dg/pr77812.C: New.\n+\n 2017-01-11  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR c++/71537"}, {"sha": "94f17402a4e1a61cb63e87cb39c68e04d4f4a1d2", "filename": "gcc/testsuite/g++.dg/pr77812.C", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/01bfd25762bea829b0ad271bc6daeddb7fcac22f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr77812.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/01bfd25762bea829b0ad271bc6daeddb7fcac22f/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr77812.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr77812.C?ref=01bfd25762bea829b0ad271bc6daeddb7fcac22f", "patch": "@@ -0,0 +1,18 @@\n+// PR77812\n+// struct-stat hack failure when first overload is a template\n+\n+enum f {};\n+\n+template <typename>\n+void f ()\n+{\n+}\n+enum f F;\n+\n+struct g {};\n+\n+template <typename>\n+void g ()\n+{\n+}\n+struct g G;"}]}