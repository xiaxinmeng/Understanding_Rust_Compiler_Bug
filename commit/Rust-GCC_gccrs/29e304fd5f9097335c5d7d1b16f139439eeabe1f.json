{"sha": "29e304fd5f9097335c5d7d1b16f139439eeabe1f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjllMzA0ZmQ1ZjkwOTczMzVjNWQ3ZDFiMTZmMTM5NDM5ZWVhYmUxZg==", "commit": {"author": {"name": "Vitor Guidi", "email": "vitor.guidi@usp.br", "date": "2020-06-03T23:01:21Z"}, "committer": {"name": "Jeff Law", "email": "law@redhat.com", "date": "2020-06-03T23:01:21Z"}, "message": "optimize tanh(x) / sinh (x) to 1/ cosh (x)\n\ngcc/\n\t* match.pd (tanh/sinh -> 1/cosh): New simplification.\n\ngcc/testsuite\n\n\t* gcc.dg/tanhbysinh.c: New testcase.", "tree": {"sha": "b600d7d8c33f52e02cc021659ed599916f173660", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b600d7d8c33f52e02cc021659ed599916f173660"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/29e304fd5f9097335c5d7d1b16f139439eeabe1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e304fd5f9097335c5d7d1b16f139439eeabe1f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/29e304fd5f9097335c5d7d1b16f139439eeabe1f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/29e304fd5f9097335c5d7d1b16f139439eeabe1f/comments", "author": {"login": "vitorguidi", "id": 5733577, "node_id": "MDQ6VXNlcjU3MzM1Nzc=", "avatar_url": "https://avatars.githubusercontent.com/u/5733577?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vitorguidi", "html_url": "https://github.com/vitorguidi", "followers_url": "https://api.github.com/users/vitorguidi/followers", "following_url": "https://api.github.com/users/vitorguidi/following{/other_user}", "gists_url": "https://api.github.com/users/vitorguidi/gists{/gist_id}", "starred_url": "https://api.github.com/users/vitorguidi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vitorguidi/subscriptions", "organizations_url": "https://api.github.com/users/vitorguidi/orgs", "repos_url": "https://api.github.com/users/vitorguidi/repos", "events_url": "https://api.github.com/users/vitorguidi/events{/privacy}", "received_events_url": "https://api.github.com/users/vitorguidi/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "817738fdf1ea368e47da4822dfe9ee1a7deb477b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/817738fdf1ea368e47da4822dfe9ee1a7deb477b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/817738fdf1ea368e47da4822dfe9ee1a7deb477b"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "2b8c37e690e88b88408a4655262ef1a38e2ee53f", "filename": "gcc/match.pd", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e304fd5f9097335c5d7d1b16f139439eeabe1f/gcc%2Fmatch.pd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e304fd5f9097335c5d7d1b16f139439eeabe1f/gcc%2Fmatch.pd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmatch.pd?ref=29e304fd5f9097335c5d7d1b16f139439eeabe1f", "patch": "@@ -5229,6 +5229,11 @@ DEFINE_INT_AND_FLOAT_ROUND_FN (RINT)\n   (rdiv (SINH:s @0) (COSH:s @0))\n    (TANH @0))\n \n+ /* Simplify tanh (x) / sinh (x) -> 1.0 / cosh (x). */\n+ (simplify\n+   (rdiv (TANH:s @0) (SINH:s @0))\n+   (rdiv {build_one_cst (type);} (COSH @0)))\n+\n  /* Simplify cos(x) / sin(x) -> 1 / tan(x). */\n  (simplify\n   (rdiv (COS:s @0) (SIN:s @0))"}, {"sha": "fde72c2f93b49794cb92a080049bd933a4f653b4", "filename": "gcc/testsuite/gcc.dg/tanhbysinh.c", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/29e304fd5f9097335c5d7d1b16f139439eeabe1f/gcc%2Ftestsuite%2Fgcc.dg%2Ftanhbysinh.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/29e304fd5f9097335c5d7d1b16f139439eeabe1f/gcc%2Ftestsuite%2Fgcc.dg%2Ftanhbysinh.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftanhbysinh.c?ref=29e304fd5f9097335c5d7d1b16f139439eeabe1f", "patch": "@@ -0,0 +1,40 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-Ofast -fdump-tree-optimized\" } */\n+\n+extern float sinhf (float);\n+extern float tanhf (float);\n+extern double sinh (double);\n+extern double tanh (double);\n+extern long double sinhl (long double);\n+extern long double tanhl (long double);\n+\n+double __attribute__ ((noinline))\n+tanhbysinh_ (double x)\n+{\n+    return tanh (x) / sinh (x);\n+}\n+\n+float __attribute__ ((noinline))\n+tanhbysinhf_ (float x)\n+{\n+    return tanhf (x) / sinhf (x);\n+}\n+\n+long double __attribute__ ((noinline))\n+tanhbysinhl_ (long double x)\n+{\n+    return tanhl (x) / sinhl (x);\n+}\n+\n+\n+/* There must be no calls to sinh or atanh */\n+/* There must be calls to cosh */\n+/* {dg-final { scan-tree-dump-not \"sinh \" \"optimized\" } } */\n+/* {dg-final { scan-tree-dump-not \"tanh \" \"optimized\" }} */\n+/* {dg-final { scan-tree-dump-not \"sinhf \" \"optimized\" } } */\n+/* {dg-final { scan-tree-dump-not \"tanhf \" \"optimized\" }} */\n+/* {dg-final { scan-tree-dump-not \"sinhl \" \"optimized\" } } */\n+/* {dg-final { scan-tree-dump-not \"tanhl \" \"optimized\" }} */\n+/* { dg-final { scan-tree-dump \"cosh \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"coshf \" \"optimized\" } } */\n+/* { dg-final { scan-tree-dump \"coshl \" \"optimized\" } } */\n\\ No newline at end of file"}]}