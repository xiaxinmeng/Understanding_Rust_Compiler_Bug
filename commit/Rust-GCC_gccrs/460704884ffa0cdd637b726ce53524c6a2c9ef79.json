{"sha": "460704884ffa0cdd637b726ce53524c6a2c9ef79", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDYwNzA0ODg0ZmZhMGNkZDYzN2I3MjZjZTUzNTI0YzZhMmM5ZWY3OQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-05-26T12:29:13Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-05-26T12:29:13Z"}, "message": "configure.ac: When bootstrapping with GCC, add -std=c++98 to CXX.\n\n\t* configure.ac: When bootstrapping with GCC, add -std=c++98 to CXX.\n\t* configure: Regenerate.\n\nFrom-SVN: r223692", "tree": {"sha": "b2c58825207b709d6973d425a1a3e7f6d2d2c825", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b2c58825207b709d6973d425a1a3e7f6d2d2c825"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/460704884ffa0cdd637b726ce53524c6a2c9ef79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/460704884ffa0cdd637b726ce53524c6a2c9ef79", "html_url": "https://github.com/Rust-GCC/gccrs/commit/460704884ffa0cdd637b726ce53524c6a2c9ef79", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/460704884ffa0cdd637b726ce53524c6a2c9ef79/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "13ccfea8fa39f448f5630274b868b3b8a3a448c1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13ccfea8fa39f448f5630274b868b3b8a3a448c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13ccfea8fa39f448f5630274b868b3b8a3a448c1"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "1a06c97419d889c1b468bf5a383988a21432767a", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/460704884ffa0cdd637b726ce53524c6a2c9ef79/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/460704884ffa0cdd637b726ce53524c6a2c9ef79/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=460704884ffa0cdd637b726ce53524c6a2c9ef79", "patch": "@@ -1,3 +1,8 @@\n+2015-05-26  Jason Merrill  <jason@redhat.com>\n+\n+\t* configure.ac: When bootstrapping with GCC, add -std=c++98 to CXX.\n+\t* configure: Regenerate.\n+\n 2015-05-16  James Bowman  <james.bowman@ftdichip.com>\n \n \t* configure.ac: FT32 target added."}, {"sha": "633afa405a410635d4327c89d948793323bd6a4b", "filename": "configure", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/460704884ffa0cdd637b726ce53524c6a2c9ef79/configure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/460704884ffa0cdd637b726ce53524c6a2c9ef79/configure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure?ref=460704884ffa0cdd637b726ce53524c6a2c9ef79", "patch": "@@ -5407,6 +5407,12 @@ $as_echo \"$as_me: WARNING: trying to bootstrap a cross compiler\" >&2;}\n     ;;\n esac\n \n+# When bootstrapping with GCC, build stage 1 in C++98 mode to ensure that a\n+# C++98 compiler can still start the bootstrap.\n+if test \"$enable_bootstrap:$GXX\" = \"yes:yes\"; then\n+  CXX=\"$CXX -std=c++98\"\n+fi\n+\n # Used for setting $lt_cv_objdir\n { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for objdir\" >&5\n $as_echo_n \"checking for objdir... \" >&6; }"}, {"sha": "431cb170e163329f82a3c8e55a9752396d149e67", "filename": "configure.ac", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/460704884ffa0cdd637b726ce53524c6a2c9ef79/configure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/460704884ffa0cdd637b726ce53524c6a2c9ef79/configure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/configure.ac?ref=460704884ffa0cdd637b726ce53524c6a2c9ef79", "patch": "@@ -1442,6 +1442,12 @@ case \"$have_compiler:$host:$target:$enable_bootstrap\" in\n     ;;\n esac\n \n+# When bootstrapping with GCC, build stage 1 in C++98 mode to ensure that a\n+# C++98 compiler can still start the bootstrap.\n+if test \"$enable_bootstrap:$GXX\" = \"yes:yes\"; then\n+  CXX=\"$CXX -std=c++98\"\n+fi\n+\n # Used for setting $lt_cv_objdir\n _LT_CHECK_OBJDIR\n "}]}