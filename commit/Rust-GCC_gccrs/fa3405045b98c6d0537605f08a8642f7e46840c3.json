{"sha": "fa3405045b98c6d0537605f08a8642f7e46840c3", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmEzNDA1MDQ1Yjk4YzZkMDUzNzYwNWYwOGE4NjQyZjdlNDY4NDBjMw==", "commit": {"author": {"name": "Stan Shebs", "email": "shebs@apple.com", "date": "2001-05-02T21:51:54Z"}, "committer": {"name": "Stan Shebs", "email": "shebs@gcc.gnu.org", "date": "2001-05-02T21:51:54Z"}, "message": "objc-act.c (STRING_OBJECT_CLASS_NAME): Default to NSConstantString for NeXT-style runtimes.\n\n        * objc/objc-act.c (STRING_OBJECT_CLASS_NAME): Default to\n        NSConstantString for NeXT-style runtimes.\n        (STRING_OBJECT_GLOBAL_NAME): New macro.\n        (enum objc_tree_index): Add values OCTI_CNST_STR_GLOB_ID and\n        OCTI_STRING_CLASS_DECL.\n        (constant_string_global_id): New macro.\n        (string_class_decl): Ditto.\n        (setup_string_decl): New function.\n        (build_objc_string_object): Use it to build a NeXT runtime\n        compatible string initializer.\n\nFrom-SVN: r41776", "tree": {"sha": "9aee520c00a22ccb73b7a416682acfa048a92540", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9aee520c00a22ccb73b7a416682acfa048a92540"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fa3405045b98c6d0537605f08a8642f7e46840c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa3405045b98c6d0537605f08a8642f7e46840c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fa3405045b98c6d0537605f08a8642f7e46840c3", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fa3405045b98c6d0537605f08a8642f7e46840c3/comments", "author": null, "committer": null, "parents": [{"sha": "de26cf808faf3bb1518d2756df69e299258febca", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/de26cf808faf3bb1518d2756df69e299258febca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/de26cf808faf3bb1518d2756df69e299258febca"}], "stats": {"total": 65, "additions": 64, "deletions": 1}, "files": [{"sha": "a2dee76ffda399e2aeb81b856d19b1533649e1a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa3405045b98c6d0537605f08a8642f7e46840c3/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa3405045b98c6d0537605f08a8642f7e46840c3/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fa3405045b98c6d0537605f08a8642f7e46840c3", "patch": "@@ -1,3 +1,16 @@\n+2001-05-02  Stan Shebs  <shebs@apple.com>\n+\n+\t* objc/objc-act.c (STRING_OBJECT_CLASS_NAME): Default to\n+\tNSConstantString for NeXT-style runtimes.\n+\t(STRING_OBJECT_GLOBAL_NAME): New macro.\n+\t(enum objc_tree_index): Add values OCTI_CNST_STR_GLOB_ID and\n+\tOCTI_STRING_CLASS_DECL.\n+\t(constant_string_global_id): New macro.\n+\t(string_class_decl): Ditto.\n+\t(setup_string_decl): New function.\n+\t(build_objc_string_object): Use it to build a NeXT runtime\n+\tcompatible string initializer.\n+\n 2001-05-02  Jakub Jelinek  <jakub@redhat.com>\n \n \t* tradcpp.c (do_define): Make sure we don't walk past limit."}, {"sha": "5936e2ea7f3d222f9151b7f5051648f0d35d68a3", "filename": "gcc/objc/objc-act.c", "status": "modified", "additions": 51, "deletions": 1, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fa3405045b98c6d0537605f08a8642f7e46840c3/gcc%2Fobjc%2Fobjc-act.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fa3405045b98c6d0537605f08a8642f7e46840c3/gcc%2Fobjc%2Fobjc-act.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-act.c?ref=fa3405045b98c6d0537605f08a8642f7e46840c3", "patch": "@@ -289,6 +289,7 @@ static tree lookup_method_in_protocol_list\tPARAMS ((tree, tree, int));\n static tree lookup_protocol_in_reflist\t\tPARAMS ((tree, tree));\n static tree create_builtin_decl\t\t\tPARAMS ((enum tree_code,\n \t\t\t\t\t\t       tree, const char *));\n+static void setup_string_decl\t\t\tPARAMS ((void));\n static tree my_build_string\t\t\tPARAMS ((int, const char *));\n static void build_objc_symtab_template\t\tPARAMS ((void));\n static tree init_def_list\t\t\tPARAMS ((tree));\n@@ -375,7 +376,15 @@ static void ggc_mark_hash_table\t\t\tPARAMS ((void *));\n #define UTAG_METHOD_PROTOTYPE\t\"_objc_method_prototype\"\n #define UTAG_METHOD_PROTOTYPE_LIST \"_objc__method_prototype_list\"\n \n+#ifdef NEXT_OBJC_RUNTIME\n+#define STRING_OBJECT_CLASS_NAME \"NSConstantString\"\n+#else\n #define STRING_OBJECT_CLASS_NAME \"NXConstantString\"\n+#endif\n+/* Note that the string object global name is only needed for the\n+   NeXT runtime.  */\n+#define STRING_OBJECT_GLOBAL_NAME \"_NSConstantStringClassReference\"\n+\n #define PROTOCOL_OBJECT_CLASS_NAME \"Protocol\"\n \n static const char *constant_string_class_name = NULL;\n@@ -455,6 +464,8 @@ enum objc_tree_index\n     OCTI_ID_ID,\n     OCTI_CNST_STR_ID,\n     OCTI_CNST_STR_TYPE,\n+    OCTI_CNST_STR_GLOB_ID,\n+    OCTI_STRING_CLASS_DECL,\n     OCTI_SUPER_DECL,\n     OCTI_METH_CTX,\n \n@@ -576,6 +587,8 @@ static int cat_count = 0;\t/* `@category' */\n #define objc_id_id\t\tobjc_global_trees[OCTI_ID_ID]\n #define constant_string_id\tobjc_global_trees[OCTI_CNST_STR_ID]\n #define constant_string_type\tobjc_global_trees[OCTI_CNST_STR_TYPE]\n+#define constant_string_global_id  objc_global_trees[OCTI_CNST_STR_GLOB_ID]\n+#define string_class_decl\tobjc_global_trees[OCTI_STRING_CLASS_DECL]\n #define UOBJC_SUPER_decl\tobjc_global_trees[OCTI_SUPER_DECL]\n \n #define method_context\t\tobjc_global_trees[OCTI_METH_CTX]\n@@ -1243,6 +1256,24 @@ create_builtin_decl (code, type, name)\n   return decl;\n }\n \n+/* Find the decl for the constant string class.  */\n+\n+static void\n+setup_string_decl ()\n+{\n+  if (!string_class_decl)\n+    {\n+      if (!constant_string_global_id)\n+\t{\n+\t  constant_string_global_id =\n+\t    get_identifier (STRING_OBJECT_GLOBAL_NAME);\n+\t  if (constant_string_global_id == NULL_TREE)\n+\t    return;\n+        }\n+      string_class_decl = lookup_name (constant_string_global_id);\n+    }\n+}\n+\n /* Purpose: \"play\" parser, creating/installing representations\n    of the declarations that are required by Objective-C.\n \n@@ -1432,7 +1463,26 @@ build_objc_string_object (strings)\n \n   /* & ((NXConstantString) {0, string, length})  */\n \n-  initlist = build_tree_list (NULL_TREE, build_int_2 (0, 0));\n+  if (flag_next_runtime)\n+    {\n+      /* For the NeXT runtime, we can generate a literal reference\n+\t to the string class, don't need to run a constructor.  */\n+      setup_string_decl ();\n+      if (string_class_decl == NULL_TREE)\n+\t{\n+\t  error (\"Cannot find reference tag for class `%s'\",\n+\t\t IDENTIFIER_POINTER (constant_string_id));\n+\t  return error_mark_node;\n+\t}\n+      initlist = build_tree_list\n+\t(NULL_TREE,\n+\t copy_node (build_unary_op (ADDR_EXPR, string_class_decl, 0)));\n+    }\n+  else\n+    {\n+      initlist = build_tree_list (NULL_TREE, build_int_2 (0, 0));\n+    }\n+\n   initlist\n     = tree_cons (NULL_TREE, copy_node (build_unary_op (ADDR_EXPR, string, 1)),\n \t\t initlist);"}]}