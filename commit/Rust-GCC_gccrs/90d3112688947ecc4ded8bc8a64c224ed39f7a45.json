{"sha": "90d3112688947ecc4ded8bc8a64c224ed39f7a45", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTBkMzExMjY4ODk0N2VjYzRkZWQ4YmM4YTY0YzIyNGVkMzlmN2E0NQ==", "commit": {"author": {"name": "Tobias Burnus", "email": "burnus@net-b.de", "date": "2007-09-21T10:44:20Z"}, "committer": {"name": "Tobias Burnus", "email": "burnus@gcc.gnu.org", "date": "2007-09-21T10:44:20Z"}, "message": "re PR fortran/33455 (MERGE intrinsic: Check for same string lengths)\n\n2007-09-21  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/33455\n        * check.c (check_same_strlen): New function.\n        (gfc_check_merge): Use it.\n\n2007-09-21  Tobias Burnus  <burnus@net-b.de>\n\n        PR fortran/33455\n        * gfortran.dg/merge_char_3.f90: New.\n\nFrom-SVN: r128647", "tree": {"sha": "7f81f43011fdc3e72495a6e8b725ca246d9917d3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7f81f43011fdc3e72495a6e8b725ca246d9917d3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/90d3112688947ecc4ded8bc8a64c224ed39f7a45", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d3112688947ecc4ded8bc8a64c224ed39f7a45", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90d3112688947ecc4ded8bc8a64c224ed39f7a45", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90d3112688947ecc4ded8bc8a64c224ed39f7a45/comments", "author": {"login": "tob2", "id": 264461, "node_id": "MDQ6VXNlcjI2NDQ2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/264461?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tob2", "html_url": "https://github.com/tob2", "followers_url": "https://api.github.com/users/tob2/followers", "following_url": "https://api.github.com/users/tob2/following{/other_user}", "gists_url": "https://api.github.com/users/tob2/gists{/gist_id}", "starred_url": "https://api.github.com/users/tob2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tob2/subscriptions", "organizations_url": "https://api.github.com/users/tob2/orgs", "repos_url": "https://api.github.com/users/tob2/repos", "events_url": "https://api.github.com/users/tob2/events{/privacy}", "received_events_url": "https://api.github.com/users/tob2/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "92ebaacd31b79e0be6eea759c2f66bbb020b3235", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/92ebaacd31b79e0be6eea759c2f66bbb020b3235", "html_url": "https://github.com/Rust-GCC/gccrs/commit/92ebaacd31b79e0be6eea759c2f66bbb020b3235"}], "stats": {"total": 61, "additions": 61, "deletions": 0}, "files": [{"sha": "6f6a805d8326f55866bebd0bc96d9ee2096946f8", "filename": "gcc/fortran/check.c", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d3112688947ecc4ded8bc8a64c224ed39f7a45/gcc%2Ffortran%2Fcheck.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d3112688947ecc4ded8bc8a64c224ed39f7a45/gcc%2Ffortran%2Fcheck.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffortran%2Fcheck.c?ref=90d3112688947ecc4ded8bc8a64c224ed39f7a45", "patch": "@@ -400,6 +400,42 @@ identical_dimen_shape (gfc_expr *a, int ai, gfc_expr *b, int bi)\n }\n \n \n+/* Check whether two character expressions have the same length;\n+   returns SUCCESS if they have or if the length cannot be determined.  */\n+\n+static try\n+check_same_strlen (const gfc_expr *a, const gfc_expr *b, const char *name)\n+{\n+   long len_a, len_b;\n+   len_a = len_b = -1;\n+\n+   if (a->ts.cl && a->ts.cl->length\n+       && a->ts.cl->length->expr_type == EXPR_CONSTANT)\n+     len_a = mpz_get_si (a->ts.cl->length->value.integer);\n+   else if (a->expr_type == EXPR_CONSTANT\n+\t    && (a->ts.cl == NULL || a->ts.cl->length == NULL))\n+     len_a = a->value.character.length;\n+   else\n+     return SUCCESS;\n+\n+   if (b->ts.cl && b->ts.cl->length\n+       && b->ts.cl->length->expr_type == EXPR_CONSTANT)\n+     len_b = mpz_get_si (b->ts.cl->length->value.integer);\n+   else if (b->expr_type == EXPR_CONSTANT\n+\t    && (b->ts.cl == NULL || b->ts.cl->length == NULL))\n+     len_b = b->value.character.length;\n+   else\n+     return SUCCESS;\n+\n+   if (len_a == len_b)\n+     return SUCCESS;\n+\n+   gfc_error (\"Unequal character lengths (%ld and %ld) in %s intrinsic \"\n+\t      \"at %L\", len_a, len_b, name, &a->where);\n+   return FAILURE;\n+}\n+\n+\n /***** Check functions *****/\n \n /* Check subroutine suitable for intrinsics taking a real argument and\n@@ -1823,9 +1859,13 @@ gfc_check_merge (gfc_expr *tsource, gfc_expr *fsource, gfc_expr *mask)\n   if (type_check (mask, 2, BT_LOGICAL) == FAILURE)\n     return FAILURE;\n \n+  if (tsource->ts.type == BT_CHARACTER)\n+    return check_same_strlen (tsource, fsource, \"MERGE\");\n+\n   return SUCCESS;\n }\n \n+\n try\n gfc_check_move_alloc (gfc_expr *from, gfc_expr *to)\n {"}, {"sha": "a033d187048767d48afdeacf2c34e64f8c571736", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d3112688947ecc4ded8bc8a64c224ed39f7a45/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d3112688947ecc4ded8bc8a64c224ed39f7a45/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=90d3112688947ecc4ded8bc8a64c224ed39f7a45", "patch": "@@ -1,3 +1,8 @@\n+2007-09-21  Tobias Burnus  <burnus@net-b.de>\n+\n+\tPR fortran/33455\n+\t* gfortran.dg/merge_char_3.f90: New.\n+\n 2007-09-21  Tobias Burnus  <burnus@net-b.de>\n \n \tPR fortran/33037"}, {"sha": "31ace4b8e16f1e0f192488cae3b0058f799522be", "filename": "gcc/testsuite/gfortran.dg/merge_char_2.f90", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/90d3112688947ecc4ded8bc8a64c224ed39f7a45/gcc%2Ftestsuite%2Fgfortran.dg%2Fmerge_char_2.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/90d3112688947ecc4ded8bc8a64c224ed39f7a45/gcc%2Ftestsuite%2Fgfortran.dg%2Fmerge_char_2.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fmerge_char_2.f90?ref=90d3112688947ecc4ded8bc8a64c224ed39f7a45", "patch": "@@ -0,0 +1,16 @@\n+! { dg-do compile }\n+!\n+! See PR fortran/31610\n+!\n+implicit none\n+character(len=2) :: a\n+character(len=3) :: b\n+print *, merge(a,a,.true.)\n+print *, merge(a,'aa',.true.)\n+print *, merge('aa',a,.true.)\n+print *, merge('aa','bb',.true.)\n+print *, merge(a,   b,    .true.)  ! { dg-error \"Unequal character lengths\" }\n+print *, merge(a,   'bbb',.true.)  ! { dg-error \"Unequal character lengths\" }\n+print *, merge('aa',b,    .true.)  ! { dg-error \"Unequal character lengths\" }\n+print *, merge('aa','bbb',.true.)  ! { dg-error \"Unequal character lengths\" }\n+end"}]}