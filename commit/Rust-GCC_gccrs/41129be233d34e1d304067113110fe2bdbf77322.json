{"sha": "41129be233d34e1d304067113110fe2bdbf77322", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDExMjliZTIzM2QzNGUxZDMwNDA2NzExMzExMGZlMmJkYmY3NzMyMg==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2008-03-20T04:31:53Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2008-03-20T04:31:53Z"}, "message": "regmove.c (try_auto_increment): Fix spelling error in comment.\n\n\t* regmove.c (try_auto_increment): Fix spelling error in comment.\n\t* final.c (final_scan_insn): Likewise.\n\nFrom-SVN: r133362", "tree": {"sha": "740ac7dda0a533f54d526d77963b33987382e233", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/740ac7dda0a533f54d526d77963b33987382e233"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/41129be233d34e1d304067113110fe2bdbf77322", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41129be233d34e1d304067113110fe2bdbf77322", "html_url": "https://github.com/Rust-GCC/gccrs/commit/41129be233d34e1d304067113110fe2bdbf77322", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/41129be233d34e1d304067113110fe2bdbf77322/comments", "author": null, "committer": null, "parents": [{"sha": "2e7a391e0f0cbf6277093c489166aa155feb2454", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2e7a391e0f0cbf6277093c489166aa155feb2454", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2e7a391e0f0cbf6277093c489166aa155feb2454"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "c298a20b3dab5c1b0bf4d9584dff4f40941977cd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41129be233d34e1d304067113110fe2bdbf77322/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41129be233d34e1d304067113110fe2bdbf77322/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=41129be233d34e1d304067113110fe2bdbf77322", "patch": "@@ -1,3 +1,8 @@\n+2008-03-20  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* regmove.c (try_auto_increment): Fix spelling error in comment.\n+\t* final.c (final_scan_insn): Likewise.\n+\n 2008-03-20  Uros Bizjak  <ubizjak@gmail.com>\n \n \tPR target/14552"}, {"sha": "2968174a4308461147097af8c9ee3c73b3d5abd8", "filename": "gcc/final.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41129be233d34e1d304067113110fe2bdbf77322/gcc%2Ffinal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41129be233d34e1d304067113110fe2bdbf77322/gcc%2Ffinal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffinal.c?ref=41129be233d34e1d304067113110fe2bdbf77322", "patch": "@@ -2221,7 +2221,7 @@ final_scan_insn (rtx insn, FILE *file, int optimize ATTRIBUTE_UNUSED,\n \n \t    /* Get out the operand values.  */\n \t    string = decode_asm_operands (body, ops, NULL, NULL, NULL, &loc);\n-\t    /* Inhibit dieing on what would otherwise be compiler bugs.  */\n+\t    /* Inhibit dying on what would otherwise be compiler bugs.  */\n \t    insn_noperands = noperands;\n \t    this_is_asm_operands = insn;\n \t    expanded = expand_location (loc);"}, {"sha": "81891b9661eb6da5edcf2b3e37353c7d54260749", "filename": "gcc/regmove.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/41129be233d34e1d304067113110fe2bdbf77322/gcc%2Fregmove.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/41129be233d34e1d304067113110fe2bdbf77322/gcc%2Fregmove.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fregmove.c?ref=41129be233d34e1d304067113110fe2bdbf77322", "patch": "@@ -193,7 +193,7 @@ try_auto_increment (rtx insn, rtx inc_insn, rtx inc_insn_set, rtx reg,\n \t\t  /* If there is a REG_DEAD note on this insn, we must\n \t\t     change this not to REG_UNUSED meaning that the register\n \t\t     is set, but the value is dead.  Failure to do so will\n-\t\t     result in a sched1 dieing -- when it recomputes lifetime\n+\t\t     result in sched1 dying -- when it recomputes lifetime\n \t\t     information, the number of REG_DEAD notes will have\n \t\t     changed.  */\n \t\t  rtx note = find_reg_note (insn, REG_DEAD, reg);"}]}