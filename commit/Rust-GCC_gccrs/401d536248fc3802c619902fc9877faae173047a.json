{"sha": "401d536248fc3802c619902fc9877faae173047a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDAxZDUzNjI0OGZjMzgwMmM2MTk5MDJmYzk4NzdmYWFlMTczMDQ3YQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2002-11-16T00:41:32Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2002-11-16T00:41:32Z"}, "message": "For PR libgcj/8593:\n\n\t* java/util/zip/GZIPInputStream.java (read): Check file size.\n\tLook in inflater for remaining input bytes.\n\t(read4): Added buf and offset arguments.\n\nFrom-SVN: r59145", "tree": {"sha": "6889fc71c9afc4e5f5cf4829fb7d77efdbbfd18b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/6889fc71c9afc4e5f5cf4829fb7d77efdbbfd18b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/401d536248fc3802c619902fc9877faae173047a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/401d536248fc3802c619902fc9877faae173047a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/401d536248fc3802c619902fc9877faae173047a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/401d536248fc3802c619902fc9877faae173047a/comments", "author": null, "committer": null, "parents": [{"sha": "6368a493210d49dc5be62ad0da59112d23dfd3ee", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6368a493210d49dc5be62ad0da59112d23dfd3ee", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6368a493210d49dc5be62ad0da59112d23dfd3ee"}], "stats": {"total": 43, "additions": 28, "deletions": 15}, "files": [{"sha": "73a0726eb2ed32911e6cefb43b5806b02a203564", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/401d536248fc3802c619902fc9877faae173047a/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/401d536248fc3802c619902fc9877faae173047a/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=401d536248fc3802c619902fc9877faae173047a", "patch": "@@ -1,3 +1,10 @@\n+2002-11-15  Tom Tromey  <tromey@redhat.com>\n+\n+\tFor PR libgcj/8593:\n+\t* java/util/zip/GZIPInputStream.java (read): Check file size.\n+\tLook in inflater for remaining input bytes.\n+\t(read4): Added buf and offset arguments.\n+\n 2002-11-12  Eric Blake  <ebb9@email.byu.edu>\n \n \t* java/applet/AppletContext.java: Fix typo and remove redundant"}, {"sha": "68fda79dc88b1fde2a1f0b24cb106769c74ce55f", "filename": "libjava/java/util/zip/GZIPInputStream.java", "status": "modified", "additions": 21, "deletions": 15, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/401d536248fc3802c619902fc9877faae173047a/libjava%2Fjava%2Futil%2Fzip%2FGZIPInputStream.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/401d536248fc3802c619902fc9877faae173047a/libjava%2Fjava%2Futil%2Fzip%2FGZIPInputStream.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Futil%2Fzip%2FGZIPInputStream.java?ref=401d536248fc3802c619902fc9877faae173047a", "patch": "@@ -1,5 +1,5 @@\n /* GZIPInputStream.java - Input filter for reading gzip file\n-   Copyright (C) 1999, 2000 Free Software Foundation, Inc.\n+   Copyright (C) 1999, 2000, 2002 Free Software Foundation, Inc.\n \n This file is part of GNU Classpath.\n \n@@ -141,28 +141,34 @@ public int read (byte[] buf, int off, int len) throws IOException\n     if (r == -1)\n       {\n \teos = true;\n-\tint header_crc = read4 ();\n+\n+\tbyte[] tmp = new byte[8];\n+\t// First copy remaining bytes from inflater input buffer.\n+\tint avail = inf.getRemaining ();\n+\tSystem.arraycopy (this.buf, this.len - avail, tmp, 0, avail);\n+\n+\t// Now read remaining bytes from wrapped input stream.\n+\tfor (int i = avail; i < 8; ++i)\n+\t  {\n+\t    tmp[i] = (byte) eof_read ();\n+\t  }\n+\n+\tint header_crc = read4 (tmp, 0);\n \tif (crc.getValue() != header_crc)\n-\t  throw new ZipException (\"corrupted gzip file\");\n-\t// Read final `ISIZE' field.\n-\t// FIXME: should we check this length?\n-\tread4 ();\n+\t  throw new ZipException (\"corrupted gzip file - crc mismatch\");\n+\tint isize = read4 (tmp, 4);\n+\tif (inf.getTotalOut() != isize)\n+\t  throw new ZipException (\"corrupted gzip file - size mismatch\");\n \treturn -1;\n       }\n     crc.update(buf, off, r);\n     return r;\n   }\n \n-  private final int read4 () throws IOException\n+  private final int read4 (byte[] buf, int offset) throws IOException\n   {\n-    int byte0 = in.read();\n-    int byte1 = in.read();\n-    int byte2 = in.read();\n-    int byte3 = in.read();\n-    if (byte3 < 0)\n-      throw new ZipException (\".zip archive ended prematurely\");\n-    return ((byte3 & 0xFF) << 24) + ((byte2 & 0xFF) << 16)\n-      + ((byte1 & 0xFF) << 8) + (byte0 & 0xFF);\n+    return (((buf[offset + 3] & 0xFF) << 24) + ((buf[offset + 2] & 0xFF) << 16)\n+\t    + ((buf[offset + 1] & 0xFF) << 8) + (buf[offset] & 0xFF));\n   }\n \n   // Checksum used by this input stream."}]}