{"sha": "2dbe67bbfacc20d0eccfadc629aef282c23ddfb2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmRiZTY3YmJmYWNjMjBkMGVjY2ZhZGM2MjlhZWYyODJjMjNkZGZiMg==", "commit": {"author": {"name": "Douglas B Rupp", "email": "rupp@gnat.com", "date": "2002-02-13T15:37:41Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2002-02-13T15:37:41Z"}, "message": "mkconfig.sh: Avoid using a subshell redirect.\n\n\t* mkconfig.sh: Avoid using a subshell redirect.\n\t($output.T): Change to $(output)T.\n\t(ENABLE_NLS): Remove unneeded undef.\n\nFrom-SVN: r49734", "tree": {"sha": "81e94b1b13ec2b26efc9bead758f7c00e592ba49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/81e94b1b13ec2b26efc9bead758f7c00e592ba49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2dbe67bbfacc20d0eccfadc629aef282c23ddfb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dbe67bbfacc20d0eccfadc629aef282c23ddfb2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2dbe67bbfacc20d0eccfadc629aef282c23ddfb2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2dbe67bbfacc20d0eccfadc629aef282c23ddfb2/comments", "author": null, "committer": null, "parents": [{"sha": "ea5b9a1fd2637d42794a3d0442d418251cd88d33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ea5b9a1fd2637d42794a3d0442d418251cd88d33", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ea5b9a1fd2637d42794a3d0442d418251cd88d33"}], "stats": {"total": 78, "additions": 37, "deletions": 41}, "files": [{"sha": "22d0ee1ceb9b830c2299a69d67000d49f0d6b086", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dbe67bbfacc20d0eccfadc629aef282c23ddfb2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dbe67bbfacc20d0eccfadc629aef282c23ddfb2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2dbe67bbfacc20d0eccfadc629aef282c23ddfb2", "patch": "@@ -1,5 +1,9 @@\n 2002-02-13  Douglas B Rupp  <rupp@gnat.com>\n \n+\t* mkconfig.sh: Avoid using a subshell redirect.\n+\t($output.T): Change to $(output)T.\n+\t(ENABLE_NLS): Remove unneeded undef.\n+\n \t* config/alpha/vms.h (MD_EXEC_PREFIX, MD_STARTFILE_PREFIX): Define.\n \t* config/alpha/x-vms (libsubdir): Define.\n "}, {"sha": "f0d97ec8c628898d477f9353eb7d0e0ec3a59385", "filename": "gcc/mkconfig.sh", "status": "modified", "additions": 33, "deletions": 41, "changes": 74, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2dbe67bbfacc20d0eccfadc629aef282c23ddfb2/gcc%2Fmkconfig.sh", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2dbe67bbfacc20d0eccfadc629aef282c23ddfb2/gcc%2Fmkconfig.sh", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fmkconfig.sh?ref=2dbe67bbfacc20d0eccfadc629aef282c23ddfb2", "patch": "@@ -11,24 +11,20 @@ if [ -z \"$1\" ]; then\n fi\n \n output=$1\n-rm -f $output.T\n-\n-# We used to exec > $output.T but apparently this has bugs.\n-# Use a redirected subshell instead.\n-(\n+rm -f ${output}T\n \n # Define TARGET_CPU_DEFAULT if the system wants one.\n # This substitutes for lots of *.h files.\n if [ \"$TARGET_CPU_DEFAULT\" != \"\" ]; then\n-    echo \"#define TARGET_CPU_DEFAULT ($TARGET_CPU_DEFAULT)\"\n+    echo \"#define TARGET_CPU_DEFAULT ($TARGET_CPU_DEFAULT)\" >> ${output}T\n fi\n \n # The first entry in HEADERS may be auto-host.h or auto-build.h;\n # it wants to be included even when not -DIN_GCC.\n if [ -n \"$HEADERS\" ]; then\n     set $HEADERS; first=$1\n     case $first in auto-* )\n-\techo \"#include \\\"$first\\\"\"\n+\techo \"#include \\\"$first\\\"\" >> ${output}T\n \tshift\n \tHEADERS=$*\n \t;;\n@@ -41,33 +37,35 @@ fi\n # rather than system.h allows the typedefs to be used anywhere in GCC.\n case $output in \n     *config.h | *hconfig.h | *tconfig.h)\n-        echo \"#ifdef IN_GCC\"\n-        echo \"/* Provide three core typedefs used by everything, if we are compiling\"\n-        echo \"   GCC.  These used to be found in rtl.h and tree.h, but this is no\"\n-        echo \"   longer practical.  Providing these here rather that system.h allows\"\n-        echo \"   the typedefs to be used everywhere within GCC. */\"\n-        echo \"struct rtx_def;\"\n-        echo \"typedef struct rtx_def *rtx;\"\n-        echo \"struct rtvec_def;\"\n-        echo \"typedef struct rtvec_def *rtvec;\"\n-        echo \"union tree_node;\"\n-        echo \"typedef union tree_node *tree;\"\n-        echo \"#endif\"\n+        cat >> ${output}T <<EOF\n+#ifdef IN_GCC\n+/* Provide three core typedefs used by everything, if we are compiling\n+   GCC.  These used to be found in rtl.h and tree.h, but this is no\n+   longer practical.  Providing these here rather that system.h allows\n+   the typedefs to be used everywhere within GCC. */\n+struct rtx_def;\n+typedef struct rtx_def *rtx;\n+struct rtvec_def;\n+typedef struct rtvec_def *rtvec;\n+union tree_node;\n+typedef union tree_node *tree;\n+#endif\n+EOF\n         ;;\n esac\n \n if [ -n \"$HEADERS\" ]; then\n-    echo '#ifdef IN_GCC'\n+    echo '#ifdef IN_GCC' >> ${output}T\n     for file in $HEADERS; do\n-\techo \"# include \\\"$file\\\"\"\n+\techo \"# include \\\"$file\\\"\" >> ${output}T\n     done\n-    echo '#endif'\n+    echo '#endif' >> ${output}T\n fi\n \n for def in $DEFINES; do\n-    echo \"#ifndef $def\" | sed 's/=.*//'\n-    echo \"# define $def\" | sed 's/=/ /'\n-    echo \"#endif\"\n+    echo \"#ifndef $def\" | sed 's/=.*//' >> ${output}T\n+    echo \"# define $def\" | sed 's/=/ /' >> ${output}T\n+    echo \"#endif\" >> ${output}T\n done\n \n # If this is tm_p.h, include tm-preds.h unconditionally.\n@@ -76,32 +74,26 @@ done\n # but only if GENERATOR_FILE is not defined.\n case $output in\n     *tm_p.h)\n-\techo \"#include \\\"tm-preds.h\\\"\"\n+\techo \"#include \\\"tm-preds.h\\\"\" >> ${output}T\n     ;;\n     *tconfig.h | *hconfig.h)\n     ;;\n     *)\n-\techo \"#ifndef GENERATOR_FILE\"\n-\techo \"# include \\\"insn-constants.h\\\"\"\n-\techo \"# include \\\"insn-flags.h\\\"\"\n-\techo \"#endif\"\n+        cat >> ${output}T <<EOF\n+#ifndef GENERATOR_FILE\n+# include \"insn-constants.h\"\n+# include \"insn-flags.h\"\n+#endif\n+EOF\n     ;;\n esac\n \n-# Prevent obstack.c from thinking it can do i18n of its error message\n-# when it's being linked against a build-side program.\n-echo '#ifdef GENERATOR_FILE'\n-echo '# undef ENABLE_NLS'\n-echo '#endif'\n-\n-) > $output.T\n-\n # Avoid changing the actual file if possible.\n-if [ -f $output ] && cmp $output.T $output >/dev/null 2>&1; then\n+if [ -f $output ] && cmp ${output}T $output >/dev/null 2>&1; then\n     echo $output is unchanged >&2\n-    rm -f $output.T\n+    rm -f ${output}T\n else\n-    mv -f $output.T $output\n+    mv -f ${output}T $output\n fi\n \n # Touch a stamp file for Make's benefit."}]}