{"sha": "91f6762edfb311fc80e8c6953f02095dcbbfe888", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTFmNjc2MmVkZmIzMTFmYzgwZThjNjk1M2YwMjA5NWRjYmJmZTg4OA==", "commit": {"author": {"name": "Krister Walfridsson", "email": "cato@df.lth.se", "date": "2007-07-15T21:13:05Z"}, "committer": {"name": "Krister Walfridsson", "email": "kristerw@gcc.gnu.org", "date": "2007-07-15T21:13:05Z"}, "message": "natGCInfo.cc: Use HAVE_STRERROR_R.\n\n2007-07-14  Krister Walfridsson  <cato@df.lth.se>\n\n\t* gnu/gcj/util/natGCInfo.cc: Use HAVE_STRERROR_R.\n\t* configure.ac: Remove check for strerror, add check for strerror_r.\n\t* configure: Regenerate.\n\t* include/config.h.in: Regenerate.\n\nFrom-SVN: r126660", "tree": {"sha": "4c910b3e0c78f4cb073f597ecddbeaf9b8d5b551", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/4c910b3e0c78f4cb073f597ecddbeaf9b8d5b551"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/91f6762edfb311fc80e8c6953f02095dcbbfe888", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f6762edfb311fc80e8c6953f02095dcbbfe888", "html_url": "https://github.com/Rust-GCC/gccrs/commit/91f6762edfb311fc80e8c6953f02095dcbbfe888", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/91f6762edfb311fc80e8c6953f02095dcbbfe888/comments", "author": null, "committer": null, "parents": [{"sha": "945e62ddd5b70ef9dc2f5def07171dbde555f337", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/945e62ddd5b70ef9dc2f5def07171dbde555f337", "html_url": "https://github.com/Rust-GCC/gccrs/commit/945e62ddd5b70ef9dc2f5def07171dbde555f337"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "25af45a4dc29bc19e3866ebe25041af1b64c1a8f", "filename": "libjava/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f6762edfb311fc80e8c6953f02095dcbbfe888/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f6762edfb311fc80e8c6953f02095dcbbfe888/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=91f6762edfb311fc80e8c6953f02095dcbbfe888", "patch": "@@ -3,6 +3,13 @@\n \t* configure.host: \n \tarm*-linux-gnu -> arm*-linux*.\n \n+2007-07-14  Krister Walfridsson  <cato@df.lth.se>\n+\n+\t* gnu/gcj/util/natGCInfo.cc: Use HAVE_STRERROR_R.\n+\t* configure.ac: Remove check for strerror, add check for strerror_r.\n+\t* configure: Regenerate.\n+\t* include/config.h.in: Regenerate.\n+\n 2007-07-13  Andrew Haley  <aph@redhat.com>\n \n \t* libgcj.ver: Add __gcj_personality_sj0."}, {"sha": "370534beada850084938797389bc71a22a6d70c7", "filename": "libjava/configure", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f6762edfb311fc80e8c6953f02095dcbbfe888/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f6762edfb311fc80e8c6953f02095dcbbfe888/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=91f6762edfb311fc80e8c6953f02095dcbbfe888", "patch": "@@ -20682,11 +20682,6 @@ cat >>confdefs.h <<\\_ACEOF\n _ACEOF\n \n \n-cat >>confdefs.h <<\\_ACEOF\n-#define HAVE_STRERROR 1\n-_ACEOF\n-\n-\n cat >>confdefs.h <<\\_ACEOF\n #define HAVE_TIME 1\n _ACEOF\n@@ -20752,7 +20747,7 @@ else\n \n \n \n-for ac_func in strerror select fstat open fsync sleep opendir \\\n+for ac_func in strerror_r select fstat open fsync sleep opendir \\\n                    localtime_r readdir_r getpwuid_r getcwd \\\n \t\t   access stat lstat mkdir rename rmdir unlink utime chmod readlink \\\n \t\t   nl_langinfo setlocale \\"}, {"sha": "9a9d1fde1798b55a904f0f2ac11784649992f9a7", "filename": "libjava/configure.ac", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f6762edfb311fc80e8c6953f02095dcbbfe888/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f6762edfb311fc80e8c6953f02095dcbbfe888/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=91f6762edfb311fc80e8c6953f02095dcbbfe888", "patch": "@@ -985,7 +985,6 @@ if test \"x${with_newlib}\" = \"xyes\"; then\n    # we'll have.\n    AC_DEFINE(HAVE_MEMMOVE, 1, [Define if you have memmove.])\n    AC_DEFINE(HAVE_MEMCPY, 1, [Define if you have memcpy.])\n-   AC_DEFINE(HAVE_STRERROR, 1, [Define if you have strerror.])\n    AC_DEFINE(HAVE_TIME, 1, [Define if you have time.])\n    AC_DEFINE(HAVE_GMTIME_R, 1, [Define if you have the 'gmtime_r' function])\n    AC_DEFINE(HAVE_LOCALTIME_R, 1, [Define if you have the 'localtime_r' function.])\n@@ -997,7 +996,7 @@ if test \"x${with_newlib}\" = \"xyes\"; then\n    AC_DEFINE(NO_GETUID, 1, [Define if getuid() and friends are missing.])\n    PLATFORMNET=NoNet\n else\n-   AC_CHECK_FUNCS([strerror select fstat open fsync sleep opendir \\\n+   AC_CHECK_FUNCS([strerror_r select fstat open fsync sleep opendir \\\n                    localtime_r readdir_r getpwuid_r getcwd \\\n \t\t   access stat lstat mkdir rename rmdir unlink utime chmod readlink \\\n \t\t   nl_langinfo setlocale \\"}, {"sha": "a9240961f8b01d7d7502212d5f6298b509c7b3e4", "filename": "libjava/gnu/gcj/util/natGCInfo.cc", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f6762edfb311fc80e8c6953f02095dcbbfe888/libjava%2Fgnu%2Fgcj%2Futil%2FnatGCInfo.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f6762edfb311fc80e8c6953f02095dcbbfe888/libjava%2Fgnu%2Fgcj%2Futil%2FnatGCInfo.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Futil%2FnatGCInfo.cc?ref=91f6762edfb311fc80e8c6953f02095dcbbfe888", "patch": "@@ -245,8 +245,12 @@ GC_enumerator::print_address_map()\n   fm = fopen(\"/proc/self/maps\", \"r\");\n   if (fm == NULL)\n     {\n+#ifdef HAVE_STRERROR_R\n       if (0 == strerror_r (errno, buffer, sizeof buffer))\n         fputs (buffer, fp);\n+#else\n+      fputs (strerror (errno), fp);\n+#endif\n     }\n   else\n     {"}, {"sha": "b47f248686ea8da30f6cb8c641e1ab79d6488fa0", "filename": "libjava/include/config.h.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/91f6762edfb311fc80e8c6953f02095dcbbfe888/libjava%2Finclude%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/91f6762edfb311fc80e8c6953f02095dcbbfe888/libjava%2Finclude%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2Fconfig.h.in?ref=91f6762edfb311fc80e8c6953f02095dcbbfe888", "patch": "@@ -250,8 +250,8 @@\n /* Define to 1 if you have the <stdlib.h> header file. */\n #undef HAVE_STDLIB_H\n \n-/* Define to 1 if you have the `strerror' function. */\n-#undef HAVE_STRERROR\n+/* Define to 1 if you have the `strerror_r' function. */\n+#undef HAVE_STRERROR_R\n \n /* Define to 1 if you have the <strings.h> header file. */\n #undef HAVE_STRINGS_H"}]}