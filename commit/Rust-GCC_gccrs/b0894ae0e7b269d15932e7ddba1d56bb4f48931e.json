{"sha": "b0894ae0e7b269d15932e7ddba1d56bb4f48931e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA4OTRhZTBlN2IyNjlkMTU5MzJlN2RkYmExZDU2YmI0ZjQ4OTMxZQ==", "commit": {"author": {"name": "Pat Haugen", "email": "pthaugen@linux.ibm.com", "date": "2020-09-10T14:46:46Z"}, "committer": {"name": "Pat Haugen", "email": "pthaugen@linux.ibm.com", "date": "2020-09-10T15:00:35Z"}, "message": "Fix instruction types.\n\nI noticed that some of the VSR<->GPR move instructions are not typed correctly. This patch fixes those instructions so that the scheduler treats them with the correct latency.\n\n2020-09-10  Pat Haugen  <pthaugen@linux.ibm.com>\n\ngcc/\n\t* config/rs6000/rs6000.md\n\t(lfiwzx, floatunssi<mode>2_lfiwzx, p8_mtvsrwz, p8_mtvsrd_sf): Fix insn\n\ttype.\n\t* config/rs6000/vsx.md\n\t(vsx_concat_<mode>, vsx_splat_<mode>_reg, vsx_splat_v4sf): Likewise.", "tree": {"sha": "5efa2ad2c34daf518a38f06f17ac5c0132c3f6b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5efa2ad2c34daf518a38f06f17ac5c0132c3f6b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0894ae0e7b269d15932e7ddba1d56bb4f48931e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0894ae0e7b269d15932e7ddba1d56bb4f48931e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0894ae0e7b269d15932e7ddba1d56bb4f48931e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0894ae0e7b269d15932e7ddba1d56bb4f48931e/comments", "author": null, "committer": null, "parents": [{"sha": "30b41cfbb2dade63e52465234a725d1d02fe70aa", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/30b41cfbb2dade63e52465234a725d1d02fe70aa", "html_url": "https://github.com/Rust-GCC/gccrs/commit/30b41cfbb2dade63e52465234a725d1d02fe70aa"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "f902c864c2626021dd9aa8c7ef4432db74cd8c38", "filename": "gcc/config/rs6000/rs6000.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0894ae0e7b269d15932e7ddba1d56bb4f48931e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0894ae0e7b269d15932e7ddba1d56bb4f48931e/gcc%2Fconfig%2Frs6000%2Frs6000.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.md?ref=b0894ae0e7b269d15932e7ddba1d56bb4f48931e", "patch": "@@ -5483,7 +5483,7 @@\n    lxsiwzx %x0,%y1\n    mtvsrwz %x0,%1\n    xxextractuw %x0,%x1,4\"\n-  [(set_attr \"type\" \"fpload,fpload,mftgpr,vecexts\")\n+  [(set_attr \"type\" \"fpload,fpload,mffgpr,vecexts\")\n    (set_attr \"isa\" \"*,p8v,p8v,p9v\")])\n \n (define_insn_and_split \"floatunssi<mode>2_lfiwzx\"\n@@ -7634,7 +7634,7 @@\n \t     *,          12,        *,         *\")\n    (set_attr \"type\"\n \t    \"load,       fpload,    fpload,    fpload,    store,     fpstore,\n-\t     fpstore,    vecfloat,  mffgpr,    *\")\n+\t     fpstore,    vecfloat,  mftgpr,    *\")\n    (set_attr \"isa\"\n \t    \"*,          *,         p9v,       p8v,       *,         *,\n \t     p8v,        p8v,       p8v,       *\")])\n@@ -8711,7 +8711,7 @@\n \t\t   UNSPEC_P8V_MTVSRWZ))]\n   \"!TARGET_POWERPC64 && TARGET_DIRECT_MOVE\"\n   \"mtvsrwz %x0,%1\"\n-  [(set_attr \"type\" \"mftgpr\")])\n+  [(set_attr \"type\" \"mffgpr\")])\n \n (define_insn_and_split \"reload_fpr_from_gpr<mode>\"\n   [(set (match_operand:FMOVE64X 0 \"register_operand\" \"=d\")\n@@ -8810,7 +8810,7 @@\n \t\t   UNSPEC_P8V_MTVSRD))]\n   \"TARGET_POWERPC64 && TARGET_DIRECT_MOVE\"\n   \"mtvsrd %x0,%1\"\n-  [(set_attr \"type\" \"mftgpr\")])\n+  [(set_attr \"type\" \"mffgpr\")])\n \n (define_insn_and_split \"reload_vsx_from_gprsf\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=wa\")"}, {"sha": "3a5cf896da83ccbee7eda96e4438de23cc5273f8", "filename": "gcc/config/rs6000/vsx.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0894ae0e7b269d15932e7ddba1d56bb4f48931e/gcc%2Fconfig%2Frs6000%2Fvsx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0894ae0e7b269d15932e7ddba1d56bb4f48931e/gcc%2Fconfig%2Frs6000%2Fvsx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Fvsx.md?ref=b0894ae0e7b269d15932e7ddba1d56bb4f48931e", "patch": "@@ -2885,7 +2885,7 @@\n   else\n     gcc_unreachable ();\n }\n-  [(set_attr \"type\" \"vecperm\")])\n+  [(set_attr \"type\" \"vecperm,vecmove\")])\n \n ;; Combiner patterns to allow creating XXPERMDI's to access either double\n ;; word element in a vector register.\n@@ -4440,7 +4440,7 @@\n   \"@\n    xxpermdi %x0,%x1,%x1,0\n    mtvsrdd %x0,%1,%1\"\n-  [(set_attr \"type\" \"vecperm\")])\n+  [(set_attr \"type\" \"vecperm,vecmove\")])\n \n (define_insn \"vsx_splat_<mode>_mem\"\n   [(set (match_operand:VSX_D 0 \"vsx_register_operand\" \"=wa\")\n@@ -4493,7 +4493,7 @@\n \t(unspec:V4SF [(match_dup 0)\n \t\t      (const_int 0)] UNSPEC_VSX_XXSPLTW))]\n   \"\"\n-  [(set_attr \"type\" \"vecload,vecperm,mftgpr\")\n+  [(set_attr \"type\" \"vecload,vecperm,vecperm\")\n    (set_attr \"length\" \"*,8,*\")\n    (set_attr \"isa\" \"*,p8v,*\")])\n "}]}