{"sha": "0a484e3e5e33fe59d8b9de3cdcb1b4247d50063a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGE0ODRlM2U1ZTMzZmU1OWQ4YjlkZTNjZGNiMWI0MjQ3ZDUwMDYzYQ==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2006-01-26T07:57:44Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2006-01-26T07:57:44Z"}, "message": "arm.md (smaxsi3, sminsi3): Convert to define_expand.\n\n\t* arm.md (smaxsi3, sminsi3): Convert to define_expand.\n\t(smax_insn, smin_insn, smax_0, smin_0): New.\n\nFrom-SVN: r110249", "tree": {"sha": "0722361d716ca826e90c9ac9712546fa3bffb813", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0722361d716ca826e90c9ac9712546fa3bffb813"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0a484e3e5e33fe59d8b9de3cdcb1b4247d50063a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a484e3e5e33fe59d8b9de3cdcb1b4247d50063a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a484e3e5e33fe59d8b9de3cdcb1b4247d50063a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a484e3e5e33fe59d8b9de3cdcb1b4247d50063a/comments", "author": null, "committer": null, "parents": [{"sha": "efe5e271097ac8d761b396ab8f36628044c8381c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/efe5e271097ac8d761b396ab8f36628044c8381c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/efe5e271097ac8d761b396ab8f36628044c8381c"}], "stats": {"total": 81, "additions": 69, "deletions": 12}, "files": [{"sha": "c83587caac18bcc8768989320e53a4cd59a952d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a484e3e5e33fe59d8b9de3cdcb1b4247d50063a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a484e3e5e33fe59d8b9de3cdcb1b4247d50063a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0a484e3e5e33fe59d8b9de3cdcb1b4247d50063a", "patch": "@@ -1,3 +1,8 @@\n+2006-01-26  Richard Earnshaw  <richard.earnshaw@arm.com>\n+\n+\t* arm.md (smaxsi3, sminsi3): Convert to define_expand.\n+\t(smax_insn, smin_insn, smax_0, smin_0): New.\n+\n 2006-01-26  Hans-Peter Nilsson  <hp@axis.com>\n \n \tPR target/25947"}, {"sha": "2442ed3f3dbcaccc7af32a9d3290f86db3aeb770", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 64, "deletions": 12, "changes": 76, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0a484e3e5e33fe59d8b9de3cdcb1b4247d50063a/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0a484e3e5e33fe59d8b9de3cdcb1b4247d50063a/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=0a484e3e5e33fe59d8b9de3cdcb1b4247d50063a", "patch": "@@ -2473,32 +2473,84 @@\n \n ;; Minimum and maximum insns\n \n-(define_insn \"smaxsi3\"\n-  [(set (match_operand:SI          0 \"s_register_operand\" \"=r,r,r\")\n-\t(smax:SI (match_operand:SI 1 \"s_register_operand\"  \"0,r,?r\")\n-\t\t (match_operand:SI 2 \"arm_rhs_operand\"    \"rI,0,rI\")))\n+(define_expand \"smaxsi3\"\n+  [(parallel [\n+    (set (match_operand:SI 0 \"s_register_operand\" \"\")\n+\t (smax:SI (match_operand:SI 1 \"s_register_operand\" \"\")\n+\t\t  (match_operand:SI 2 \"arm_rhs_operand\" \"\")))\n+    (clobber (reg:CC CC_REGNUM))])]\n+  \"TARGET_ARM\"\n+  \"\n+  if (operands[2] == const0_rtx)\n+    {\n+      /* No need for a clobber of the condition code register here.  */\n+      emit_insn (gen_rtx_SET (VOIDmode, operands[0],\n+\t\t\t      gen_rtx_SMAX (SImode, operands[1],\n+\t\t\t\t\t    operands[2])));\n+      DONE;\n+    }\n+\")\n+\n+(define_insn \"*smax_0\"\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+\t(smax:SI (match_operand:SI 1 \"s_register_operand\" \"r\")\n+\t\t (const_int 0)))]\n+  \"TARGET_ARM\"\n+  \"bic%?\\\\t%0, %1, %1, asr #31\"\n+  [(set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*smax_insn\"\n+  [(set (match_operand:SI          0 \"s_register_operand\" \"=r,r\")\n+\t(smax:SI (match_operand:SI 1 \"s_register_operand\"  \"%0,?r\")\n+\t\t (match_operand:SI 2 \"arm_rhs_operand\"    \"rI,rI\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"@\n    cmp\\\\t%1, %2\\;movlt\\\\t%0, %2\n-   cmp\\\\t%1, %2\\;movge\\\\t%0, %1\n    cmp\\\\t%1, %2\\;movge\\\\t%0, %1\\;movlt\\\\t%0, %2\"\n   [(set_attr \"conds\" \"clob\")\n-   (set_attr \"length\" \"8,8,12\")]\n+   (set_attr \"length\" \"8,12\")]\n )\n \n-(define_insn \"sminsi3\"\n-  [(set (match_operand:SI 0 \"s_register_operand\" \"=r,r,r\")\n-\t(smin:SI (match_operand:SI 1 \"s_register_operand\" \"0,r,?r\")\n-\t\t (match_operand:SI 2 \"arm_rhs_operand\" \"rI,0,rI\")))\n+(define_expand \"sminsi3\"\n+  [(parallel [\n+    (set (match_operand:SI 0 \"s_register_operand\" \"\")\n+\t (smin:SI (match_operand:SI 1 \"s_register_operand\" \"\")\n+\t\t  (match_operand:SI 2 \"arm_rhs_operand\" \"\")))\n+    (clobber (reg:CC CC_REGNUM))])]\n+  \"TARGET_ARM\"\n+  \"\n+  if (operands[2] == const0_rtx)\n+    {\n+      /* No need for a clobber of the condition code register here.  */\n+      emit_insn (gen_rtx_SET (VOIDmode, operands[0],\n+\t\t\t      gen_rtx_SMIN (SImode, operands[1],\n+\t\t\t\t\t    operands[2])));\n+      DONE;\n+    }\n+\")\n+\n+(define_insn \"*smin_0\"\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=r\")\n+\t(smin:SI (match_operand:SI 1 \"s_register_operand\" \"r\")\n+\t\t (const_int 0)))]\n+  \"TARGET_ARM\"\n+  \"and%?\\\\t%0, %1, %1, asr #31\"\n+  [(set_attr \"predicable\" \"yes\")]\n+)\n+\n+(define_insn \"*smin_insn\"\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=r,r\")\n+\t(smin:SI (match_operand:SI 1 \"s_register_operand\" \"%0,?r\")\n+\t\t (match_operand:SI 2 \"arm_rhs_operand\" \"rI,rI\")))\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_ARM\"\n   \"@\n    cmp\\\\t%1, %2\\;movge\\\\t%0, %2\n-   cmp\\\\t%1, %2\\;movlt\\\\t%0, %1\n    cmp\\\\t%1, %2\\;movlt\\\\t%0, %1\\;movge\\\\t%0, %2\"\n   [(set_attr \"conds\" \"clob\")\n-   (set_attr \"length\" \"8,8,12\")]\n+   (set_attr \"length\" \"8,12\")]\n )\n \n (define_insn \"umaxsi3\""}]}