{"sha": "b754d32d3053a4ba2a82361ac0f2739797a811f1", "node_id": "C_kwDOANBUbNoAKGI3NTRkMzJkMzA1M2E0YmEyYTgyMzYxYWMwZjI3Mzk3OTdhODExZjE", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-09-29T10:32:53Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2022-09-29T10:32:53Z"}, "message": "aarch64: Fix transitive closure of features\n\naarch64-option-extensions.def requires us to maintain the transitive\nclosure of options by hand.  This patch fixes a few cases where a\nflag was missed.\n\n+noaes and +nosha2 now disable +crypto, which IMO makes more\nsense and is consistent with the Clang behaviour.\n\ngcc/\n\t* config/aarch64/aarch64-option-extensions.def (dotprod): Depend\n\ton fp as well as simd.\n\t(sha3): Likewise.\n\t(aes): Likewise.  Make +noaes disable crypto.\n\t(sha2): Likewise +nosha2.  Also make +nosha2 disable sha3 and\n\tsve2-sha3.\n\t(sve2-sha3): Depend on sha2 as well as sha3.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/options_set_6.c: Expect +crypto+nosha2 to\n\tdisable crypto but keep aes.\n\t* gcc.target/aarch64/pragma_cpp_predefs_4.c: New test.", "tree": {"sha": "b48d251bb8b49fe58e6dc6b89e233fd082070e82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b48d251bb8b49fe58e6dc6b89e233fd082070e82"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b754d32d3053a4ba2a82361ac0f2739797a811f1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b754d32d3053a4ba2a82361ac0f2739797a811f1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b754d32d3053a4ba2a82361ac0f2739797a811f1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b754d32d3053a4ba2a82361ac0f2739797a811f1/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f244d848cffeda68f0eb4c5bb9c7e629bf2e957", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0f244d848cffeda68f0eb4c5bb9c7e629bf2e957", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0f244d848cffeda68f0eb4c5bb9c7e629bf2e957"}], "stats": {"total": 68, "additions": 58, "deletions": 10}, "files": [{"sha": "b98008127387b45e1603df9fcde60bdc52165782", "filename": "gcc/config/aarch64/aarch64-option-extensions.def", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b754d32d3053a4ba2a82361ac0f2739797a811f1/gcc%2Fconfig%2Faarch64%2Faarch64-option-extensions.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b754d32d3053a4ba2a82361ac0f2739797a811f1/gcc%2Fconfig%2Faarch64%2Faarch64-option-extensions.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-option-extensions.def?ref=b754d32d3053a4ba2a82361ac0f2739797a811f1", "patch": "@@ -113,28 +113,29 @@ AARCH64_OPT_EXTENSION(\"rdma\", AARCH64_FL_RDMA, \\\n \n /* Enabling \"dotprod\" also enables \"simd\".\n    Disabling \"dotprod\" only disables \"dotprod\".  */\n-AARCH64_OPT_EXTENSION(\"dotprod\", AARCH64_FL_DOTPROD, AARCH64_FL_SIMD, 0, \\\n+AARCH64_OPT_EXTENSION(\"dotprod\", AARCH64_FL_DOTPROD, AARCH64_FL_FPSIMD, 0, \\\n \t\t      false, \"asimddp\")\n \n /* Enabling \"aes\" also enables \"simd\".\n    Disabling \"aes\" disables \"aes\" and \"sve2-aes'.  */\n-AARCH64_OPT_EXTENSION(\"aes\", AARCH64_FL_AES, AARCH64_FL_SIMD, \\\n-\t\t      AARCH64_FL_SVE2_AES, false, \"aes\")\n+AARCH64_OPT_EXTENSION(\"aes\", AARCH64_FL_AES, AARCH64_FL_FPSIMD, \\\n+\t\t      AARCH64_FL_SVE2_AES | AARCH64_FL_CRYPTO, false, \"aes\")\n \n /* Enabling \"sha2\" also enables \"simd\".\n    Disabling \"sha2\" just disables \"sha2\".  */\n-AARCH64_OPT_EXTENSION(\"sha2\", AARCH64_FL_SHA2, AARCH64_FL_SIMD, 0, false, \\\n-\t\t      \"sha1 sha2\")\n+AARCH64_OPT_EXTENSION(\"sha2\", AARCH64_FL_SHA2, AARCH64_FL_FPSIMD, \\\n+\t\t      AARCH64_FL_CRYPTO | AARCH64_FL_SHA3 | \\\n+\t\t      AARCH64_FL_SVE2_SHA3, false, \"sha1 sha2\")\n \n /* Enabling \"sha3\" enables \"simd\" and \"sha2\".\n    Disabling \"sha3\" disables \"sha3\" and \"sve2-sha3\".  */\n-AARCH64_OPT_EXTENSION(\"sha3\", AARCH64_FL_SHA3, AARCH64_FL_SIMD | \\\n+AARCH64_OPT_EXTENSION(\"sha3\", AARCH64_FL_SHA3, AARCH64_FL_FPSIMD | \\\n \t\t      AARCH64_FL_SHA2, AARCH64_FL_SVE2_SHA3, false, \\\n \t\t      \"sha3 sha512\")\n \n /* Enabling \"sm4\" also enables \"simd\".\n    Disabling \"sm4\" disables \"sm4\" and \"sve2-sm4\".  */\n-AARCH64_OPT_EXTENSION(\"sm4\", AARCH64_FL_SM4, AARCH64_FL_SIMD, \\\n+AARCH64_OPT_EXTENSION(\"sm4\", AARCH64_FL_SM4, AARCH64_FL_FPSIMD, \\\n \t\t      AARCH64_FL_SVE2_SM4, false, \"sm3 sm4\")\n \n /* Enabling \"fp16fml\" also enables \"fp\" and \"fp16\".\n@@ -192,6 +193,7 @@ AARCH64_OPT_EXTENSION(\"sve2-aes\", AARCH64_FL_SVE2_AES, AARCH64_FL_AES | \\\n /* Enabling \"sve2-sha3\" also enables \"sha3\", \"simd\", \"fp16\", \"fp\", \"sve\", and\n    \"sve2\". Disabling \"sve2-sha3\" just disables \"sve2-sha3\".  */\n AARCH64_OPT_EXTENSION(\"sve2-sha3\", AARCH64_FL_SVE2_SHA3, AARCH64_FL_SHA3 | \\\n+\t\t      AARCH64_FL_SHA2 | \\\n \t\t      AARCH64_FL_SIMD | AARCH64_FL_F16 | AARCH64_FL_FP | \\\n \t\t      AARCH64_FL_SVE | AARCH64_FL_SVE2, 0, false, \"svesha3\")\n "}, {"sha": "2a1d7fe5b8eaabad485cb4afd7501ea00af81abc", "filename": "gcc/testsuite/gcc.target/aarch64/options_set_6.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b754d32d3053a4ba2a82361ac0f2739797a811f1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Foptions_set_6.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b754d32d3053a4ba2a82361ac0f2739797a811f1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Foptions_set_6.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Foptions_set_6.c?ref=b754d32d3053a4ba2a82361ac0f2739797a811f1", "patch": "@@ -6,7 +6,6 @@ int main ()\n   return 0;\n }\n \n-/* { dg-final { scan-assembler-times {\\.arch armv8\\.2\\-a\\+crypto\\+crc} 1 } } */\n+/* { dg-final { scan-assembler-times {\\.arch armv8\\.2\\-a\\+crc\\+aes} 1 } } */\n \n-/* Group as a whole was requested to be turned on, crypto itself is a bit and so\n-   just turning off one feature can't turn it off.   */\n+/* +crypto turns on +aes and +sha2, but +nosha2 disables +crypto.   */"}, {"sha": "0e6461fa4396bc19c6a5ed693e5994b475d78f9b", "filename": "gcc/testsuite/gcc.target/aarch64/pragma_cpp_predefs_4.c", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b754d32d3053a4ba2a82361ac0f2739797a811f1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpragma_cpp_predefs_4.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b754d32d3053a4ba2a82361ac0f2739797a811f1/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpragma_cpp_predefs_4.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fpragma_cpp_predefs_4.c?ref=b754d32d3053a4ba2a82361ac0f2739797a811f1", "patch": "@@ -0,0 +1,47 @@\n+#pragma GCC target \"+nothing+dotprod\"\n+#ifndef __ARM_FEATURE_FMA\n+#error Foo\n+#endif\n+\n+#pragma GCC target \"+nothing+aes\"\n+#ifndef __ARM_FEATURE_FMA\n+#error Foo\n+#endif\n+\n+#pragma GCC target \"+nothing+sha2\"\n+#ifndef __ARM_FEATURE_FMA\n+#error Foo\n+#endif\n+\n+#pragma GCC target \"+nothing+sha3\"\n+#ifndef __ARM_FEATURE_FMA\n+#error Foo\n+#endif\n+\n+#pragma GCC target \"+nothing+sm4\"\n+#ifndef __ARM_FEATURE_FMA\n+#error Foo\n+#endif\n+\n+#pragma GCC target \"+crypto+noaes\"\n+#ifdef __ARM_FEATURE_CRYPTO\n+#error Foo\n+#endif\n+\n+#pragma GCC target \"+crypto+nosha2\"\n+#ifdef __ARM_FEATURE_CRYPTO\n+#error Foo\n+#endif\n+\n+#pragma GCC target \"+nothing+sve2-sha3\"\n+#ifndef __ARM_FEATURE_SHA2\n+#error Foo\n+#endif\n+\n+#pragma GCC target \"+sve2-sha3+nosha2\"\n+#ifdef __ARM_FEATURE_SHA3\n+#error Foo\n+#endif\n+#ifdef __ARM_FEATURE_SVE2_SHA3\n+#error Foo\n+#endif"}]}