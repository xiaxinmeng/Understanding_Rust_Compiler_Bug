{"sha": "11f3ac4911c6440c33b1c7feb2e9b3dd544330c1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTFmM2FjNDkxMWM2NDQwYzMzYjFjN2ZlYjJlOWIzZGQ1NDQzMzBjMQ==", "commit": {"author": {"name": "Trevor Saunders", "email": "tsaunders@mozilla.com", "date": "2015-02-10T14:49:07Z"}, "committer": {"name": "Trevor Saunders", "email": "tbsaunde@gcc.gnu.org", "date": "2015-02-10T14:49:07Z"}, "message": "cap frequency in make_forwarder_block\n\nIn the testcase the block with problematic frequency has to incoming\nedges.  Each edge has probability 1.  The first edge's source bb has\nfrequency 873/10000, and the second has a frequency of 9409/10000.  So\nat least one of those is slightly high probably from some sort of rounding\nissue related to fixed point, but in any case make_forwarder_block\nshould not create basic blocks with frequency greater than BB_FREQ_MAX.\n\ngcc/\n\n\tPR tree-optimization/64326\n\t* cfghooks.c (make_forwarder_block): Cap frequency of created\n\tbasic block.\n\nFrom-SVN: r220585", "tree": {"sha": "c648c0344bfd851dbc0fa243f942821d987a4db9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c648c0344bfd851dbc0fa243f942821d987a4db9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/11f3ac4911c6440c33b1c7feb2e9b3dd544330c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11f3ac4911c6440c33b1c7feb2e9b3dd544330c1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/11f3ac4911c6440c33b1c7feb2e9b3dd544330c1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/11f3ac4911c6440c33b1c7feb2e9b3dd544330c1/comments", "author": null, "committer": null, "parents": [{"sha": "e4c2ac365c3249b178997941c70ba410c5721a78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e4c2ac365c3249b178997941c70ba410c5721a78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e4c2ac365c3249b178997941c70ba410c5721a78"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "50fa380fe06e56361a753980fd8a16e68a383132", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11f3ac4911c6440c33b1c7feb2e9b3dd544330c1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11f3ac4911c6440c33b1c7feb2e9b3dd544330c1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=11f3ac4911c6440c33b1c7feb2e9b3dd544330c1", "patch": "@@ -1,3 +1,8 @@\n+2015-02-10  Trevor Saunders  <tsaunders@mozilla.com>\n+\n+\tPR tree-optimization/64326\n+\t* cfghooks.c (make_forwarder_block): Cap frequency of created block.\n+\n 2015-02-10  Rainer Emrich  <rainer@emrich-ebersheim.de>\n \n \tPR gcov-profile/61889"}, {"sha": "abeab8cf1a5d529c8057eff659a1bb49e2249af2", "filename": "gcc/cfghooks.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11f3ac4911c6440c33b1c7feb2e9b3dd544330c1/gcc%2Fcfghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11f3ac4911c6440c33b1c7feb2e9b3dd544330c1/gcc%2Fcfghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcfghooks.c?ref=11f3ac4911c6440c33b1c7feb2e9b3dd544330c1", "patch": "@@ -863,6 +863,9 @@ make_forwarder_block (basic_block bb, bool (*redirect_edge_p) (edge),\n       if (redirect_edge_p (e))\n \t{\n \t  dummy->frequency += EDGE_FREQUENCY (e);\n+\t  if (dummy->frequency > BB_FREQ_MAX)\n+\t    dummy->frequency = BB_FREQ_MAX;\n+\n \t  dummy->count += e->count;\n \t  fallthru->count += e->count;\n \t  ei_next (&ei);"}, {"sha": "88ebf35d5c51da2f322aa382cab7142c1578209a", "filename": "gcc/testsuite/gcc.dg/torture/pr64326.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/11f3ac4911c6440c33b1c7feb2e9b3dd544330c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr64326.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/11f3ac4911c6440c33b1c7feb2e9b3dd544330c1/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr64326.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr64326.c?ref=11f3ac4911c6440c33b1c7feb2e9b3dd544330c1", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do compile } */\n+\n+int a, b, c, d, e, f[5][2];\n+char g;\n+\n+int\n+fn1 ()\n+{\n+\t  return d && c ? 0 : 1;\n+}\n+\n+int\n+fn2 ()\n+{\n+\t  int h;\n+\t    for (;;)\n+\t\t        for (; e;)\n+\t\t\t\t      {\n+\t\t\t\t\t              int i, j;\n+\t\t\t\t\t\t              h = a ? 1 : b;\n+\t\t\t\t\t\t\t              if (h || fn1 () ^ g - 682)\n+\t\t\t\t\t\t\t\t\t                {\n+\t\t\t\t\t\t\t\t\t\t\t\t            for (i = 0; i < 5; i++)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t                  for (j = 0; j < 2; j++)\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                  f[i][j] = 0;\n+\t\t\t\t\t\t\t\t\t\t\t\t\t                return 0;\n+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t          }\n+\t\t\t\t\t\t\t\t            }\n+}\n+"}]}