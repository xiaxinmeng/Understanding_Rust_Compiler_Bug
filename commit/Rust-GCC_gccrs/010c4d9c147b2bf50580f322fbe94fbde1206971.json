{"sha": "010c4d9c147b2bf50580f322fbe94fbde1206971", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDEwYzRkOWMxNDdiMmJmNTA1ODBmMzIyZmJlOTRmYmRlMTIwNjk3MQ==", "commit": {"author": {"name": "Roger Sayle", "email": "roger@eyesopen.com", "date": "2005-01-05T17:27:26Z"}, "committer": {"name": "Roger Sayle", "email": "sayle@gcc.gnu.org", "date": "2005-01-05T17:27:26Z"}, "message": "re PR middle-end/19100 (Wrong code for ?-operator with casted ?-operator predicat)\n\n\n\tPR middle-end/19100\n\t* c-common.c: Include real.h.\n\t(c_common_truthvalue_conversion): Avoid destructively modifying expr.\n\tCorrectly handle TREE_CONSTANT_OVERFLOW for INTEGER_CST.\n\tCorrectly handle TREE_CONSTANT_OVERFLOW and NaNs for REAL_CST.\n\t* Makefile.in (c-common.o): Update dependencies.\n\n\t* gcc.dg/conv-3.c: New test case.\n\nFrom-SVN: r92957", "tree": {"sha": "bd79071ad9a1a01c8b6a9cba6c42a4fdc67ba610", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bd79071ad9a1a01c8b6a9cba6c42a4fdc67ba610"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/010c4d9c147b2bf50580f322fbe94fbde1206971", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/010c4d9c147b2bf50580f322fbe94fbde1206971", "html_url": "https://github.com/Rust-GCC/gccrs/commit/010c4d9c147b2bf50580f322fbe94fbde1206971", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/010c4d9c147b2bf50580f322fbe94fbde1206971/comments", "author": null, "committer": null, "parents": [{"sha": "9368fb8fbc1591c6cc5b20414bff2c1b4f36d05c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9368fb8fbc1591c6cc5b20414bff2c1b4f36d05c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9368fb8fbc1591c6cc5b20414bff2c1b4f36d05c"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "7589a23c83c8a7a1123a27cfef8f19bdf728a96b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/010c4d9c147b2bf50580f322fbe94fbde1206971/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/010c4d9c147b2bf50580f322fbe94fbde1206971/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=010c4d9c147b2bf50580f322fbe94fbde1206971", "patch": "@@ -1,3 +1,12 @@\n+2005-01-05  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/19100\n+\t* c-common.c: Include real.h.\n+\t(c_common_truthvalue_conversion): Avoid destructively modifying expr.\n+\tCorrectly handle TREE_CONSTANT_OVERFLOW for INTEGER_CST.\n+\tCorrectly handle TREE_CONSTANT_OVERFLOW and NaNs for REAL_CST.\n+\t* Makefile.in (c-common.o): Update dependencies.\n+\n 2005-01-05  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* c-parse.in (asm_string): Add trailing semicolon."}, {"sha": "bb81a6f281baf0b20e022c63ed2818c7961287a7", "filename": "gcc/c-common.c", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/010c4d9c147b2bf50580f322fbe94fbde1206971/gcc%2Fc-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/010c4d9c147b2bf50580f322fbe94fbde1206971/gcc%2Fc-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-common.c?ref=010c4d9c147b2bf50580f322fbe94fbde1206971", "patch": "@@ -46,6 +46,7 @@ Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n #include \"hashtab.h\"\n #include \"tree-mudflap.h\"\n #include \"opts.h\"\n+#include \"real.h\"\n \n cpp_reader *parse_in;\t\t/* Declared in c-pragma.h.  */\n \n@@ -2326,17 +2327,24 @@ c_common_truthvalue_conversion (tree expr)\n     case TRUTH_OR_EXPR:\n     case TRUTH_XOR_EXPR:\n     case TRUTH_NOT_EXPR:\n-      TREE_TYPE (expr) = truthvalue_type_node;\n+      if (TREE_TYPE (expr) != truthvalue_type_node)\n+\treturn build2 (TREE_CODE (expr), truthvalue_type_node,\n+\t\t       TREE_OPERAND (expr, 0), TREE_OPERAND (expr, 1));\n       return expr;\n \n     case ERROR_MARK:\n       return expr;\n \n     case INTEGER_CST:\n-      return integer_zerop (expr) ? truthvalue_false_node : truthvalue_true_node;\n+      /* Avoid integer_zerop to ignore TREE_CONSTANT_OVERFLOW.  */\n+      return (TREE_INT_CST_LOW (expr) != 0 || TREE_INT_CST_HIGH (expr) != 0)\n+\t     ? truthvalue_true_node\n+\t     : truthvalue_false_node;\n \n     case REAL_CST:\n-      return real_zerop (expr) ? truthvalue_false_node : truthvalue_true_node;\n+      return real_compare (NE_EXPR, &TREE_REAL_CST (expr), &dconst0)\n+\t     ? truthvalue_true_node\n+\t     : truthvalue_false_node;\n \n     case ADDR_EXPR:\n       {"}, {"sha": "e2ef31bb0bb0a028a4a07030e6bc60f3ee047cc3", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/010c4d9c147b2bf50580f322fbe94fbde1206971/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/010c4d9c147b2bf50580f322fbe94fbde1206971/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=010c4d9c147b2bf50580f322fbe94fbde1206971", "patch": "@@ -1,3 +1,8 @@\n+2005-01-05  Roger Sayle  <roger@eyesopen.com>\n+\n+\tPR middle-end/19100\n+\t* gcc.dg/conv-3.c: New test case.\n+\n 2005-01-05  Joseph S. Myers  <joseph@codesourcery.com>\n \n \t* gcc.dg/asm-wide-1.c: New test."}, {"sha": "3b4f4309d9df1cbe89f17f1468fd60cc71e0d3ee", "filename": "gcc/testsuite/gcc.dg/conv-3.c", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/010c4d9c147b2bf50580f322fbe94fbde1206971/gcc%2Ftestsuite%2Fgcc.dg%2Fconv-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/010c4d9c147b2bf50580f322fbe94fbde1206971/gcc%2Ftestsuite%2Fgcc.dg%2Fconv-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fconv-3.c?ref=010c4d9c147b2bf50580f322fbe94fbde1206971", "patch": "@@ -0,0 +1,18 @@\n+/* PR middle-end/19100 */\n+/* { dg-do run } */\n+/* { dg-options \"-O2\" } */\n+\n+void abort (void);\n+\n+int test (int v)\n+{\n+  return ((signed char) (v ? 0x100 : 0)) ? 17 : 18;\n+}\n+\n+int main()\n+{\n+  if (test (2) != 18)\n+    abort ();\n+  return 0;\n+}\n+"}]}