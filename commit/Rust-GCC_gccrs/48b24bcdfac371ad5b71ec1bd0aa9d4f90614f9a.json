{"sha": "48b24bcdfac371ad5b71ec1bd0aa9d4f90614f9a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDhiMjRiY2RmYWMzNzFhZDViNzFlYzFiZDBhYTlkNGY5MDYxNGY5YQ==", "commit": {"author": {"name": "Andrew MacLeod", "email": "amacleod@cygnus.com", "date": "1998-06-23T10:51:47Z"}, "committer": {"name": "Andrew Macleod", "email": "amacleod@gcc.gnu.org", "date": "1998-06-23T10:51:47Z"}, "message": "libgcc2.c (__get_eh_table_version, [...]): New functions to return exception descriptor information.\n\nTue Jun 23 13:38:18 EDT 1998  Andrew MacLeod  <amacleod@cygnus.com>\n\t* libgcc2.c (__get_eh_table_version, __get_eh_table_language): New\n\tfunctions to return exception descriptor information.\n\t(find_exception_handler): Pass match_info field to runtime matcher,\n\tnot a descriptor table entry.\n\t* exception.cc (__cplus_type_matcher): Get a match_info pointer\n\tinstead of an exception table entry as a parameter.\n\nFrom-SVN: r20673", "tree": {"sha": "af21d0438b598699c10f5dc4ab0887e3c57866b6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/af21d0438b598699c10f5dc4ab0887e3c57866b6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/48b24bcdfac371ad5b71ec1bd0aa9d4f90614f9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48b24bcdfac371ad5b71ec1bd0aa9d4f90614f9a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/48b24bcdfac371ad5b71ec1bd0aa9d4f90614f9a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/48b24bcdfac371ad5b71ec1bd0aa9d4f90614f9a/comments", "author": null, "committer": null, "parents": [{"sha": "daf21dfd8018376476559ef65a4ffdf203839cc1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/daf21dfd8018376476559ef65a4ffdf203839cc1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/daf21dfd8018376476559ef65a4ffdf203839cc1"}], "stats": {"total": 39, "additions": 34, "deletions": 5}, "files": [{"sha": "56642f343ad15b10bcf6ca8bae53e8b05f7ff405", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48b24bcdfac371ad5b71ec1bd0aa9d4f90614f9a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48b24bcdfac371ad5b71ec1bd0aa9d4f90614f9a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=48b24bcdfac371ad5b71ec1bd0aa9d4f90614f9a", "patch": "@@ -1,9 +1,16 @@\n+Tue Jun 23 13:38:18 EDT 1998  Andrew MacLeod  <amacleod@cygnus.com>\n+\n+\t* libgcc2.c (__get_eh_table_version, __get_eh_table_language): New\n+\tfunctions to return exception descriptor information.\n+\t(find_exception_handler): Pass match_info field to runtime matcher,\n+\tnot a descriptor table entry.\n+\n Tue Jun 23 09:30:58 1998  Dave Love  <d.love@dl.ac.uk>\n \n \t* cpp.texi, gcc.texi: Add @dircategory, @direntry meant to\n \taccompany previous Makefile.in (install-info) change.\n \n-Tue Jun 23 10:06:07 EDT 1998  Andrew MacLeod  (amacleod@cygnus.com)\n+Tue Jun 23 10:06:07 EDT 1998  Andrew MacLeod  <amacleod@cygnus.com>\n \n \t* eh-common.h (struct __eh_info): Remove coerced value field.\n \t* libgcc2.c (find_exception_handler): Don't set coerced_value field."}, {"sha": "dfb496d830792d32e9c7432b23d7a59aa7ea107b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48b24bcdfac371ad5b71ec1bd0aa9d4f90614f9a/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48b24bcdfac371ad5b71ec1bd0aa9d4f90614f9a/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=48b24bcdfac371ad5b71ec1bd0aa9d4f90614f9a", "patch": "@@ -1,4 +1,9 @@\n-1998-06-23  Andrew MacLeod  (amacleod@cygnus.com)\n+1998-06-23  Andrew MacLeod  <amacleod@cygnus.com>\n+\n+\t* exception.cc (__cplus_type_matcher): Get a match_info pointer\n+\tinstead of an exception table entry as a parameter.\n+\n+1998-06-23  Andrew MacLeod  <amacleod@cygnus.com>\n \n \t* parse.y (function_try_block): Don't call start_catch_handler.\n \t* except.c (call_eh_info): Remove coerced field from declaration."}, {"sha": "bb36a66962170ba8113ad59ff36809785462c916", "filename": "gcc/cp/exception.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48b24bcdfac371ad5b71ec1bd0aa9d4f90614f9a/gcc%2Fcp%2Fexception.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48b24bcdfac371ad5b71ec1bd0aa9d4f90614f9a/gcc%2Fcp%2Fexception.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fexception.cc?ref=48b24bcdfac371ad5b71ec1bd0aa9d4f90614f9a", "patch": "@@ -152,7 +152,7 @@ __eh_free (void *p)\n typedef void * (* rtimetype) (void);\n \n extern \"C\" void *\n-__cplus_type_matcher (cp_eh_info *info, exception_table *matching_info, \n+__cplus_type_matcher (cp_eh_info *info, rtimetype match_info, \n                                  exception_descriptor *exception_table)\n {\n   void *ret;\n@@ -162,7 +162,7 @@ __cplus_type_matcher (cp_eh_info *info, exception_table *matching_info,\n \n   /* we don't worry about version info yet, there is only one version! */\n   \n-  void *match_type = ((rtimetype) (matching_info->match_info)) ();\n+  void *match_type = match_info ();\n   ret = __throw_type_match_rtti (match_type, info->type, info->original_value);\n   /* change value of exception */\n   if (ret)"}, {"sha": "30fa61a03e8b445850bbe565e3da22c6e44463fa", "filename": "gcc/libgcc2.c", "status": "modified", "additions": 18, "deletions": 1, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/48b24bcdfac371ad5b71ec1bd0aa9d4f90614f9a/gcc%2Flibgcc2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/48b24bcdfac371ad5b71ec1bd0aa9d4f90614f9a/gcc%2Flibgcc2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flibgcc2.c?ref=48b24bcdfac371ad5b71ec1bd0aa9d4f90614f9a", "patch": "@@ -3358,6 +3358,23 @@ EH_TABLE_LOOKUP\n \n #ifdef DWARF2_UNWIND_INFO\n \n+\n+/* Return the table version of an exception descriptor */\n+\n+short \n+__get_eh_table_version (exception_descriptor *table) \n+{\n+  return table->lang.version;\n+}\n+\n+/* Return the originating table language of an exception descriptor */\n+\n+short \n+__get_eh_table_language (exception_descriptor *table)\n+{\n+  return table->lang.language;\n+}\n+\n /* This routine takes a PC and a pointer to the exception region TABLE for\n    its translation unit, and returns the address of the exception handler\n    associated with the closest exception table handler entry associated\n@@ -3424,7 +3441,7 @@ find_exception_handler (void *pc, exception_descriptor *table, void *eh_info)\n                   /* match info but no matcher is NOT a match */\n                   if (matcher) \n                     {\n-                      ret = (*matcher)(eh_info, &tab[pos], table);\n+                      ret = (*matcher)(eh_info, tab[pos].match_info, table);\n                       if (ret)\n                         return tab[pos].exception_handler;\n                     }"}]}