{"sha": "d22f3eabf11d403a4885b986b33006d21dc431ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIyZjNlYWJmMTFkNDAzYTQ4ODViOTg2YjMzMDA2ZDIxZGM0MzFiYQ==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2020-06-30T07:49:34Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-10-16T07:31:36Z"}, "message": "[Ada] Ada2020: AI12-0129 Make protected objects more protecting\n\ngcc/ada/\n\n\t* aspects.ads, snames.ads-tmpl: Add support for\n\tExclusive_Functions aspect.\n\t* sem_ch13.adb (Analyze_Aspect_Specifications): Ditto.\n\t* exp_ch9.adb (Build_Protected_Subprogram_Body): Take aspect\n\tExclusive_Functions into account.", "tree": {"sha": "d88bdfa29e5e7f8223efc2615cff48838b9a77d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d88bdfa29e5e7f8223efc2615cff48838b9a77d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d22f3eabf11d403a4885b986b33006d21dc431ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d22f3eabf11d403a4885b986b33006d21dc431ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d22f3eabf11d403a4885b986b33006d21dc431ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d22f3eabf11d403a4885b986b33006d21dc431ba/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a900519495945ba8d61b8f0527c5fa918e71693c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a900519495945ba8d61b8f0527c5fa918e71693c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a900519495945ba8d61b8f0527c5fa918e71693c"}], "stats": {"total": 38, "additions": 34, "deletions": 4}, "files": [{"sha": "72812ff26146c6a959cfff212fad9c4190e96f15", "filename": "gcc/ada/aspects.ads", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d22f3eabf11d403a4885b986b33006d21dc431ba/gcc%2Fada%2Faspects.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d22f3eabf11d403a4885b986b33006d21dc431ba/gcc%2Fada%2Faspects.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Faspects.ads?ref=d22f3eabf11d403a4885b986b33006d21dc431ba", "patch": "@@ -190,6 +190,7 @@ package Aspects is\n       Aspect_Disable_Controlled,            -- GNAT\n       Aspect_Discard_Names,\n       Aspect_CUDA_Global,                   -- GNAT\n+      Aspect_Exclusive_Functions,\n       Aspect_Export,\n       Aspect_Favor_Top_Level,               -- GNAT\n       Aspect_Independent,\n@@ -472,6 +473,7 @@ package Aspects is\n       Aspect_Dynamic_Predicate            => False,\n       Aspect_Effective_Reads              => False,\n       Aspect_Effective_Writes             => False,\n+      Aspect_Exclusive_Functions          => False,\n       Aspect_Extensions_Visible           => False,\n       Aspect_External_Name                => False,\n       Aspect_External_Tag                 => False,\n@@ -619,6 +621,7 @@ package Aspects is\n       Aspect_Effective_Reads              => Name_Effective_Reads,\n       Aspect_Effective_Writes             => Name_Effective_Writes,\n       Aspect_Elaborate_Body               => Name_Elaborate_Body,\n+      Aspect_Exclusive_Functions          => Name_Exclusive_Functions,\n       Aspect_Export                       => Name_Export,\n       Aspect_Extensions_Visible           => Name_Extensions_Visible,\n       Aspect_External_Name                => Name_External_Name,\n@@ -851,6 +854,7 @@ package Aspects is\n       Aspect_Dispatching_Domain           => Always_Delay,\n       Aspect_Dynamic_Predicate            => Always_Delay,\n       Aspect_Elaborate_Body               => Always_Delay,\n+      Aspect_Exclusive_Functions          => Always_Delay,\n       Aspect_External_Name                => Always_Delay,\n       Aspect_External_Tag                 => Always_Delay,\n       Aspect_Favor_Top_Level              => Always_Delay,"}, {"sha": "26e7321ef88b6093f1c1ec81ca960bfbc320dc9f", "filename": "gcc/ada/exp_ch9.adb", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d22f3eabf11d403a4885b986b33006d21dc431ba/gcc%2Fada%2Fexp_ch9.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d22f3eabf11d403a4885b986b33006d21dc431ba/gcc%2Fada%2Fexp_ch9.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch9.adb?ref=d22f3eabf11d403a4885b986b33006d21dc431ba", "patch": "@@ -24,6 +24,7 @@\n ------------------------------------------------------------------------------\n \n with Atree;    use Atree;\n+with Aspects;  use Aspects;\n with Checks;   use Checks;\n with Einfo;    use Einfo;\n with Elists;   use Elists;\n@@ -4089,8 +4090,17 @@ package body Exp_Ch9 is\n                     Parameter_Associations => Uactuals));\n          end if;\n \n-         Lock_Kind := RE_Lock_Read_Only;\n-\n+         if Has_Aspect (Pid, Aspect_Exclusive_Functions)\n+           and then\n+             (No (Find_Value_Of_Aspect (Pid, Aspect_Exclusive_Functions))\n+               or else\n+                 Is_True (Static_Boolean (Find_Value_Of_Aspect\n+                   (Pid, Aspect_Exclusive_Functions))))\n+         then\n+            Lock_Kind := RE_Lock;\n+         else\n+            Lock_Kind := RE_Lock_Read_Only;\n+         end if;\n       else\n          Unprot_Call :=\n            Make_Procedure_Call_Statement (Loc,"}, {"sha": "e2b8bf8e9b5103154831e9b7d3a92c605a08e7ad", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d22f3eabf11d403a4885b986b33006d21dc431ba/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d22f3eabf11d403a4885b986b33006d21dc431ba/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=d22f3eabf11d403a4885b986b33006d21dc431ba", "patch": "@@ -4397,14 +4397,16 @@ package body Sem_Ch13 is\n                      if Ekind (E) /= E_Protected_Type then\n                         Error_Msg_Name_1 := Nam;\n                         Error_Msg_N\n-                          (\"aspect % only applies to a protected object\",\n+                          (\"aspect % only applies to a protected type \" &\n+                           \"or object\",\n                            Aspect);\n \n                      else\n                         --  Set the Uses_Lock_Free flag to True if there is no\n                         --  expression or if the expression is True. The\n                         --  evaluation of this aspect should be delayed to the\n-                        --  freeze point (why???)\n+                        --  freeze point if we wanted to handle the corner case\n+                        --  of \"true\" or \"false\" being redefined.\n \n                         if No (Expr)\n                           or else Is_True (Static_Boolean (Expr))\n@@ -4426,6 +4428,19 @@ package body Sem_Ch13 is\n                      Analyze_Aspect_Disable_Controlled;\n                      goto Continue;\n \n+                  --  Ada 202x (AI12-0129): Exclusive_Functions\n+\n+                  elsif A_Id = Aspect_Exclusive_Functions then\n+                     if Ekind (E) /= E_Protected_Type then\n+                        Error_Msg_Name_1 := Nam;\n+                        Error_Msg_N\n+                          (\"aspect % only applies to a protected type \" &\n+                           \"or object\",\n+                           Aspect);\n+                     end if;\n+\n+                     goto Continue;\n+\n                   --  Ada 202x (AI12-0075): static expression functions\n \n                   elsif A_Id = Aspect_Static then"}, {"sha": "65cc9d5a3eb8c09c2809b1c22f114dda58b18233", "filename": "gcc/ada/snames.ads-tmpl", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d22f3eabf11d403a4885b986b33006d21dc431ba/gcc%2Fada%2Fsnames.ads-tmpl", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d22f3eabf11d403a4885b986b33006d21dc431ba/gcc%2Fada%2Fsnames.ads-tmpl", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsnames.ads-tmpl?ref=d22f3eabf11d403a4885b986b33006d21dc431ba", "patch": "@@ -148,6 +148,7 @@ package Snames is\n    Name_Dimension_System               : constant Name_Id := N + $;\n    Name_Disable_Controlled             : constant Name_Id := N + $;\n    Name_Dynamic_Predicate              : constant Name_Id := N + $;\n+   Name_Exclusive_Functions            : constant Name_Id := N + $;\n    Name_Integer_Literal                : constant Name_Id := N + $;\n    Name_Real_Literal                   : constant Name_Id := N + $;\n    Name_Relaxed_Initialization         : constant Name_Id := N + $;"}]}