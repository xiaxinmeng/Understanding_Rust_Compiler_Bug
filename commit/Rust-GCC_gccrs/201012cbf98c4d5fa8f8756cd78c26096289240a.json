{"sha": "201012cbf98c4d5fa8f8756cd78c26096289240a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAxMDEyY2JmOThjNGQ1ZmE4Zjg3NTZjZDc4YzI2MDk2Mjg5MjQwYQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-11T10:44:14Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1995-05-11T10:44:14Z"}, "message": "(do_jump, case EX_EXPR, NE_EXPR): Fix typo for complex.\n\nFrom-SVN: r9616", "tree": {"sha": "5b967e726df0e74a871fde142e4e03fff8de7440", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5b967e726df0e74a871fde142e4e03fff8de7440"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/201012cbf98c4d5fa8f8756cd78c26096289240a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/201012cbf98c4d5fa8f8756cd78c26096289240a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/201012cbf98c4d5fa8f8756cd78c26096289240a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/201012cbf98c4d5fa8f8756cd78c26096289240a/comments", "author": null, "committer": null, "parents": [{"sha": "640f9b45a6c87884692810216aff364e691ac5df", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/640f9b45a6c87884692810216aff364e691ac5df", "html_url": "https://github.com/Rust-GCC/gccrs/commit/640f9b45a6c87884692810216aff364e691ac5df"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "bcb612ed8e4153bf8344959d3e1f9d363da2c3d1", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/201012cbf98c4d5fa8f8756cd78c26096289240a/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/201012cbf98c4d5fa8f8756cd78c26096289240a/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=201012cbf98c4d5fa8f8756cd78c26096289240a", "patch": "@@ -9103,7 +9103,7 @@ do_jump (exp, if_false_label, if_true_label)\n \tif (integer_zerop (TREE_OPERAND (exp, 1)))\n \t  do_jump (TREE_OPERAND (exp, 0), if_true_label, if_false_label);\n \telse if (GET_MODE_CLASS (TYPE_MODE (inner_type)) == MODE_COMPLEX_FLOAT\n-\t\t || GET_MODE_CLASS (TYPE_MODE (inner_type) == MODE_COMPLEX_INT))\n+\t\t || GET_MODE_CLASS (TYPE_MODE (inner_type)) == MODE_COMPLEX_INT)\n \t  do_jump\n \t    (fold\n \t     (build (TRUTH_ANDIF_EXPR, TREE_TYPE (exp),\n@@ -9137,7 +9137,7 @@ do_jump (exp, if_false_label, if_true_label)\n \tif (integer_zerop (TREE_OPERAND (exp, 1)))\n \t  do_jump (TREE_OPERAND (exp, 0), if_false_label, if_true_label);\n \telse if (GET_MODE_CLASS (TYPE_MODE (inner_type)) == MODE_COMPLEX_FLOAT\n-\t\t || GET_MODE_CLASS (TYPE_MODE (inner_type) == MODE_COMPLEX_INT))\n+\t\t || GET_MODE_CLASS (TYPE_MODE (inner_type)) == MODE_COMPLEX_INT)\n \t  do_jump\n \t    (fold\n \t     (build (TRUTH_ORIF_EXPR, TREE_TYPE (exp),"}]}