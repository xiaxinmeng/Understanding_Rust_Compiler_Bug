{"sha": "e34994fcff3c514e35f0b47b0ad93e71b98ae583", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTM0OTk0ZmNmZjNjNTE0ZTM1ZjBiNDdiMGFkOTNlNzFiOThhZTU4Mw==", "commit": {"author": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2014-03-18T01:20:02Z"}, "committer": {"name": "Jerry DeLisle", "email": "jvdelisle@gcc.gnu.org", "date": "2014-03-18T01:20:02Z"}, "message": "re PR libfortran/46800 (Handle CTRL-D correctly with STDIN)\n\n2014-03-17  Jerry DeLisle  <jvdelisle@gcc.gnu>\n\n\tPR libfortran/46800\n\t* io/list_read.c (list_formatted_read_scalar): Do not use\n\teat_separator. Explicitly set the comma and end-of-line flags.\n\tCheck for END condition from finish_separator.\n\nFrom-SVN: r208629", "tree": {"sha": "a6a707090c6c402e96bc2a3a2e63924cea43d80b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6a707090c6c402e96bc2a3a2e63924cea43d80b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e34994fcff3c514e35f0b47b0ad93e71b98ae583", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e34994fcff3c514e35f0b47b0ad93e71b98ae583", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e34994fcff3c514e35f0b47b0ad93e71b98ae583", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e34994fcff3c514e35f0b47b0ad93e71b98ae583/comments", "author": null, "committer": null, "parents": [{"sha": "d65e2594fbfacec1fb0ba72d5ed93ec01dfda494", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d65e2594fbfacec1fb0ba72d5ed93ec01dfda494", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d65e2594fbfacec1fb0ba72d5ed93ec01dfda494"}], "stats": {"total": 37, "additions": 29, "deletions": 8}, "files": [{"sha": "69d56275059dee1eb8d4c4cb642f187f89261ca8", "filename": "libgfortran/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34994fcff3c514e35f0b47b0ad93e71b98ae583/libgfortran%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34994fcff3c514e35f0b47b0ad93e71b98ae583/libgfortran%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2FChangeLog?ref=e34994fcff3c514e35f0b47b0ad93e71b98ae583", "patch": "@@ -1,3 +1,10 @@\n+2014-03-17  Jerry DeLisle  <jvdelisle@gcc.gnu>\n+\n+\tPR libfortran/58324\n+\t* io/list_read.c (list_formatted_read_scalar): Do not use\n+\teat_separator. Explicitly set the comma and end-of-line flags.\n+\tCheck for END condition from finish_separator.\n+\n 2014-03-15  Jerry DeLisle  <jvdelisle@gcc.gnu>\n \n \tPR libfortran/58324"}, {"sha": "625ba0c8594351525c9591c72e5f50f33ca2f8f0", "filename": "libgfortran/io/list_read.c", "status": "modified", "additions": 22, "deletions": 8, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e34994fcff3c514e35f0b47b0ad93e71b98ae583/libgfortran%2Fio%2Flist_read.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e34994fcff3c514e35f0b47b0ad93e71b98ae583/libgfortran%2Fio%2Flist_read.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgfortran%2Fio%2Flist_read.c?ref=e34994fcff3c514e35f0b47b0ad93e71b98ae583", "patch": "@@ -1923,17 +1923,31 @@ list_formatted_read_scalar (st_parameter_dt *dtp, bt type, void *p,\n \t}\n       if (is_separator (c))\n \t{\n-\t  /* Found a null value.  */\n-\t  eat_separator (dtp);\n+\t  /* Found a null value. Do not use eat_separator here otherwise\n+\t     we will do an extra read from stdin.  */\n \t  dtp->u.p.repeat_count = 0;\n \n-\t  /* eat_separator sets this flag if the separator was a comma.  */\n-\t  if (dtp->u.p.comma_flag)\n-\t    goto cleanup;\n+\t  /* Set comma_flag.  */\n+\t  if ((c == ';' \n+\t      && dtp->u.p.current_unit->decimal_status == DECIMAL_COMMA)\n+\t      ||\n+\t      (c == ','\n+\t      && dtp->u.p.current_unit->decimal_status == DECIMAL_POINT))\n+\t    {\n+\t      dtp->u.p.comma_flag = 1;\n+\t      goto cleanup;\n+\t    }\n \n-\t  /* eat_separator sets this flag if the separator was a \\n or \\r.  */\n-\t  if (dtp->u.p.at_eol)\n-\t    finish_separator (dtp);\n+\t  /* Set end-of-line flag.  */\n+\t  if (c == '\\n' || c == '\\r')\n+\t    {\n+\t      dtp->u.p.at_eol = 1;\n+\t      if (finish_separator (dtp) == LIBERROR_END)\n+\t\t{\n+\t\t  err = LIBERROR_END;\n+\t\t  goto cleanup;\n+\t\t}\n+\t    }\n \t  else\n \t    goto cleanup;\n \t}"}]}