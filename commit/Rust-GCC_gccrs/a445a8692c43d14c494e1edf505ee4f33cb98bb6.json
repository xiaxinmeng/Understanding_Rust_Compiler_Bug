{"sha": "a445a8692c43d14c494e1edf505ee4f33cb98bb6", "node_id": "C_kwDOANBUbNoAKGE0NDVhODY5MmM0M2QxNGM0OTRlMWVkZjUwNWVlNGYzM2NiOThiYjY", "commit": {"author": {"name": "Steve Baird", "email": "baird@adacore.com", "date": "2022-01-14T22:10:25Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2022-05-10T08:19:21Z"}, "message": "[Ada] Failure compiling \"for ... of\" loop over a slice\n\nIn some cases involving a \"for ... of\" loop (not to be confused with the\nmore common \"for ... in\" loop) iterating over a slice, compilation would\nfail with an internal compiler error.\n\ngcc/ada/\n\n\t* sem_util.adb (Get_Actual_Subtype): If a new subtype is built,\n\tdo not freeze it if Expander_Active is False. The idea here is\n\tto avoid generating an unwanted Freeze_Node for a subtype that\n\thas been conjured up solely for purposes of preanalysis.", "tree": {"sha": "fe3033771bba214d53211df1687fdc2a57388706", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe3033771bba214d53211df1687fdc2a57388706"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a445a8692c43d14c494e1edf505ee4f33cb98bb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a445a8692c43d14c494e1edf505ee4f33cb98bb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a445a8692c43d14c494e1edf505ee4f33cb98bb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a445a8692c43d14c494e1edf505ee4f33cb98bb6/comments", "author": {"login": "swbaird", "id": 50751052, "node_id": "MDQ6VXNlcjUwNzUxMDUy", "avatar_url": "https://avatars.githubusercontent.com/u/50751052?v=4", "gravatar_id": "", "url": "https://api.github.com/users/swbaird", "html_url": "https://github.com/swbaird", "followers_url": "https://api.github.com/users/swbaird/followers", "following_url": "https://api.github.com/users/swbaird/following{/other_user}", "gists_url": "https://api.github.com/users/swbaird/gists{/gist_id}", "starred_url": "https://api.github.com/users/swbaird/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/swbaird/subscriptions", "organizations_url": "https://api.github.com/users/swbaird/orgs", "repos_url": "https://api.github.com/users/swbaird/repos", "events_url": "https://api.github.com/users/swbaird/events{/privacy}", "received_events_url": "https://api.github.com/users/swbaird/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d9e2004fe4e15b133bd8472c4bf46cbff809583", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d9e2004fe4e15b133bd8472c4bf46cbff809583", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d9e2004fe4e15b133bd8472c4bf46cbff809583"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "c58b63db924c009c4e9181b4604f6ce37ce1c687", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a445a8692c43d14c494e1edf505ee4f33cb98bb6/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a445a8692c43d14c494e1edf505ee4f33cb98bb6/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=a445a8692c43d14c494e1edf505ee4f33cb98bb6", "patch": "@@ -10724,14 +10724,24 @@ package body Sem_Util is\n                Set_Is_Itype (Atyp);\n                Analyze (Decl, Suppress => All_Checks);\n                Set_Associated_Node_For_Itype (Atyp, N);\n-               Set_Has_Delayed_Freeze (Atyp, False);\n-\n-               --  We need to freeze the actual subtype immediately. This is\n-               --  needed, because otherwise this Itype will not get frozen\n-               --  at all, and it is always safe to freeze on creation because\n-               --  any associated types must be frozen at this point.\n-\n-               Freeze_Itype (Atyp, N);\n+               if Expander_Active then\n+                  Set_Has_Delayed_Freeze (Atyp, False);\n+\n+                  --  We need to freeze the actual subtype immediately. This is\n+                  --  needed because otherwise this Itype will not get frozen\n+                  --  at all; it is always safe to freeze on creation because\n+                  --  any associated types must be frozen at this point.\n+\n+                  --  On the other hand, if we are performing preanalysis on\n+                  --  a conjured-up copy of a name (see calls to\n+                  --  Preanalyze_Range in sem_ch5.adb) then we don't want\n+                  --  to freeze Atyp, now or ever. In this case, the tree\n+                  --  we eventually pass to the back end should contain no\n+                  --  references to Atyp (and a freeze node would contain\n+                  --  such a reference). That's why Expander_Active is tested.\n+\n+                  Freeze_Itype (Atyp, N);\n+               end if;\n                return Atyp;\n \n             --  Otherwise we did not build a declaration, so return original"}]}