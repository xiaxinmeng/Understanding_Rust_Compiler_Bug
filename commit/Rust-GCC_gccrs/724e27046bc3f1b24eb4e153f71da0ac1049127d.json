{"sha": "724e27046bc3f1b24eb4e153f71da0ac1049127d", "node_id": "C_kwDOANBUbNoAKDcyNGUyNzA0NmJjM2YxYjI0ZWI0ZTE1M2Y3MWRhMGFjMTA0OTEyN2Q", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-10-18T07:27:10Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2021-10-18T08:16:46Z"}, "message": "Remove unused but set variables.\n\nReported by clang13 -Wunused-but-set-variable:\n\ngcc/ChangeLog:\n\n\t* dbgcnt.c (dbg_cnt_process_opt): Remove unused but set variable.\n\t* gcov.c (get_cycles_count): Likewise.\n\t* lto-compress.c (lto_compression_zlib): Likewise.\n\t(lto_uncompression_zlib): Likewise.\n\t* targhooks.c (default_pch_valid_p): Likewise.\n\nlibcpp/ChangeLog:\n\n\t* charset.c (convert_oct): Remove unused but set variable.", "tree": {"sha": "de011394e2bdcb5bdb7c31cbd644f6097411c541", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/de011394e2bdcb5bdb7c31cbd644f6097411c541"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/724e27046bc3f1b24eb4e153f71da0ac1049127d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/724e27046bc3f1b24eb4e153f71da0ac1049127d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/724e27046bc3f1b24eb4e153f71da0ac1049127d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/724e27046bc3f1b24eb4e153f71da0ac1049127d/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "017665f63047ce47b087b0b283548a60e5abf3d2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/017665f63047ce47b087b0b283548a60e5abf3d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/017665f63047ce47b087b0b283548a60e5abf3d2"}], "stats": {"total": 16, "additions": 2, "deletions": 14}, "files": [{"sha": "458341a53a0fb753edab8ae94a5faead7430e820", "filename": "gcc/dbgcnt.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724e27046bc3f1b24eb4e153f71da0ac1049127d/gcc%2Fdbgcnt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724e27046bc3f1b24eb4e153f71da0ac1049127d/gcc%2Fdbgcnt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdbgcnt.c?ref=724e27046bc3f1b24eb4e153f71da0ac1049127d", "patch": "@@ -208,7 +208,6 @@ void\n dbg_cnt_process_opt (const char *arg)\n {\n   char *str = xstrdup (arg);\n-  unsigned int start = 0;\n \n   auto_vec<char *> tokens;\n   for (char *next = strtok (str, \",\"); next != NULL; next = strtok (NULL, \",\"))\n@@ -227,7 +226,6 @@ dbg_cnt_process_opt (const char *arg)\n \t  if (!dbg_cnt_process_single_pair (name, ranges[j]))\n \t    break;\n \t}\n-      start += strlen (tokens[i]) + 1;\n     }\n }\n "}, {"sha": "3672ae7a6f8e09fb65dafada68faae9969c865b4", "filename": "gcc/gcov.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724e27046bc3f1b24eb4e153f71da0ac1049127d/gcc%2Fgcov.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724e27046bc3f1b24eb4e153f71da0ac1049127d/gcc%2Fgcov.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcov.c?ref=724e27046bc3f1b24eb4e153f71da0ac1049127d", "patch": "@@ -843,16 +843,14 @@ get_cycles_count (line_info &linfo)\n      Therefore, operating on a permuted order (i.e., non-sorted) only\n      has the effect of permuting the output cycles.  */\n \n-  bool loop_found = false;\n   gcov_type count = 0;\n   for (vector<block_info *>::iterator it = linfo.blocks.begin ();\n        it != linfo.blocks.end (); it++)\n     {\n       arc_vector_t path;\n       block_vector_t blocked;\n       vector<block_vector_t > block_lists;\n-      loop_found |= circuit (*it, path, *it, blocked, block_lists, linfo,\n-\t\t\t     count);\n+      circuit (*it, path, *it, blocked, block_lists, linfo, count);\n     }\n \n   return count;"}, {"sha": "c40a13c8446b29c6bc8654ed9b2c26b86559a62f", "filename": "gcc/lto-compress.c", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724e27046bc3f1b24eb4e153f71da0ac1049127d/gcc%2Flto-compress.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724e27046bc3f1b24eb4e153f71da0ac1049127d/gcc%2Flto-compress.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flto-compress.c?ref=724e27046bc3f1b24eb4e153f71da0ac1049127d", "patch": "@@ -250,7 +250,6 @@ lto_compression_zlib (struct lto_compression_stream *stream)\n   const size_t outbuf_length = Z_BUFFER_LENGTH;\n   unsigned char *outbuf = (unsigned char *) xmalloc (outbuf_length);\n   z_stream out_stream;\n-  size_t compressed_bytes = 0;\n   int status;\n \n   gcc_assert (stream->is_compression);\n@@ -282,7 +281,6 @@ lto_compression_zlib (struct lto_compression_stream *stream)\n \n       stream->callback ((const char *) outbuf, out_bytes, stream->opaque);\n       lto_stats.num_compressed_il_bytes += out_bytes;\n-      compressed_bytes += out_bytes;\n \n       cursor += in_bytes;\n       remaining -= in_bytes;\n@@ -342,7 +340,6 @@ lto_uncompression_zlib (struct lto_compression_stream *stream)\n   size_t remaining = stream->bytes;\n   const size_t outbuf_length = Z_BUFFER_LENGTH;\n   unsigned char *outbuf = (unsigned char *) xmalloc (outbuf_length);\n-  size_t uncompressed_bytes = 0;\n \n   gcc_assert (!stream->is_compression);\n   timevar_push (TV_IPA_LTO_DECOMPRESS);\n@@ -378,7 +375,6 @@ lto_uncompression_zlib (struct lto_compression_stream *stream)\n \n \t  stream->callback ((const char *) outbuf, out_bytes, stream->opaque);\n \t  lto_stats.num_uncompressed_il_bytes += out_bytes;\n-\t  uncompressed_bytes += out_bytes;\n \n \t  cursor += in_bytes;\n \t  remaining -= in_bytes;"}, {"sha": "812bbe3f16e49f7a8e3f4095aaf098ddc4aed2e4", "filename": "gcc/targhooks.c", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724e27046bc3f1b24eb4e153f71da0ac1049127d/gcc%2Ftarghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724e27046bc3f1b24eb4e153f71da0ac1049127d/gcc%2Ftarghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftarghooks.c?ref=724e27046bc3f1b24eb4e153f71da0ac1049127d", "patch": "@@ -2200,7 +2200,7 @@ pch_option_mismatch (const char *option)\n /* Default version of pch_valid_p.  */\n \n const char *\n-default_pch_valid_p (const void *data_p, size_t len)\n+default_pch_valid_p (const void *data_p, size_t len ATTRIBUTE_UNUSED)\n {\n   struct cl_option_state state;\n   const char *data = (const char *)data_p;\n@@ -2221,7 +2221,6 @@ default_pch_valid_p (const void *data_p, size_t len)\n \n       memcpy (&tf, data, sizeof (target_flags));\n       data += sizeof (target_flags);\n-      len -= sizeof (target_flags);\n       r = targetm.check_pch_target_flags (tf);\n       if (r != NULL)\n \treturn r;\n@@ -2233,7 +2232,6 @@ default_pch_valid_p (const void *data_p, size_t len)\n \tif (memcmp (data, state.data, state.size) != 0)\n \t  return pch_option_mismatch (cl_options[i].opt_text);\n \tdata += state.size;\n-\tlen -= state.size;\n       }\n \n   return NULL;"}, {"sha": "e4e45f6d39d4e7632da308d36c03ad9dd9b525c1", "filename": "libcpp/charset.c", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/724e27046bc3f1b24eb4e153f71da0ac1049127d/libcpp%2Fcharset.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/724e27046bc3f1b24eb4e153f71da0ac1049127d/libcpp%2Fcharset.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fcharset.c?ref=724e27046bc3f1b24eb4e153f71da0ac1049127d", "patch": "@@ -1464,7 +1464,6 @@ convert_oct (cpp_reader *pfile, const uchar *from, const uchar *limit,\n   cppchar_t c, n = 0;\n   size_t width = cvt.width;\n   size_t mask = width_to_mask (width);\n-  bool overflow = false;\n \n   /* loc_reader and ranges must either be both NULL, or both be non-NULL.  */\n   gcc_assert ((loc_reader != NULL) == (ranges != NULL));\n@@ -1477,7 +1476,6 @@ convert_oct (cpp_reader *pfile, const uchar *from, const uchar *limit,\n       from++;\n       if (loc_reader)\n \tchar_range.m_finish = loc_reader->get_next ().m_finish;\n-      overflow |= n ^ (n << 3 >> 3);\n       n = (n << 3) + c - '0';\n     }\n "}]}