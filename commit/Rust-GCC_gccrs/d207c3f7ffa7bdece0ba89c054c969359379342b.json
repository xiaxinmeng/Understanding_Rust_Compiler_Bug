{"sha": "d207c3f7ffa7bdece0ba89c054c969359379342b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDIwN2MzZjdmZmE3YmRlY2UwYmE4OWMwNTRjOTY5MzU5Mzc5MzQyYg==", "commit": {"author": {"name": "Benjamin Kosnik", "email": "bkoz@cygnus.com", "date": "2000-05-08T17:23:37Z"}, "committer": {"name": "Benjamin Kosnik", "email": "bkoz@gcc.gnu.org", "date": "2000-05-08T17:23:37Z"}, "message": "fstream.tcc (filebuf::_M_init_filebuf): Don't set _M_buf_size based on macro, instead use _M_buf_size_opt.\n\n\n2000-05-08  Benjamin Kosnik  <bkoz@cygnus.com>\n\n\t* bits/fstream.tcc (filebuf::_M_init_filebuf): Don't set\n\t_M_buf_size based on macro, instead use _M_buf_size_opt.\n\t* bits/std_streambuf.h (basic_streambuf): Add _M_buf_size_opt.\n\t(basic_streambuf()): Set _M_buf_size_opt.\n\t* testsuite/27_io/filebuf.cc (filebuf): Use _M_buf_size_opt\n\tinstead of _M_buf_size.\n\nFrom-SVN: r33768", "tree": {"sha": "d0e99546b6d3242ff5c9694fee016dca82f57482", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0e99546b6d3242ff5c9694fee016dca82f57482"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d207c3f7ffa7bdece0ba89c054c969359379342b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d207c3f7ffa7bdece0ba89c054c969359379342b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d207c3f7ffa7bdece0ba89c054c969359379342b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d207c3f7ffa7bdece0ba89c054c969359379342b/comments", "author": null, "committer": null, "parents": [{"sha": "c0916fa0b554070641233dfe8f91978d16c15f5c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c0916fa0b554070641233dfe8f91978d16c15f5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c0916fa0b554070641233dfe8f91978d16c15f5c"}], "stats": {"total": 35, "additions": 25, "deletions": 10}, "files": [{"sha": "2b5b3233e6e272caa8330bd496483b446af2d909", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d207c3f7ffa7bdece0ba89c054c969359379342b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d207c3f7ffa7bdece0ba89c054c969359379342b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=d207c3f7ffa7bdece0ba89c054c969359379342b", "patch": "@@ -1,3 +1,12 @@\n+2000-05-08  Benjamin Kosnik  <bkoz@cygnus.com>\n+\n+\t* bits/fstream.tcc (filebuf::_M_init_filebuf): Don't set\n+\t_M_buf_size based on macro, instead use _M_buf_size_opt.\n+\t* bits/std_streambuf.h (basic_streambuf): Add _M_buf_size_opt.\n+\t(basic_streambuf()): Set _M_buf_size_opt.\n+\t* testsuite/27_io/filebuf.cc (filebuf): Use _M_buf_size_opt\n+\tinstead of _M_buf_size.\n+\n 2000-05-03  Phil Edwards  <pme@sourceware.cygnus.com>\n             Felix Natter <fnatter@gmx.net>\n "}, {"sha": "44cfb19019921d8a71d46caaf17161e894a84769", "filename": "libstdc++-v3/bits/fstream.tcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d207c3f7ffa7bdece0ba89c054c969359379342b/libstdc%2B%2B-v3%2Fbits%2Ffstream.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d207c3f7ffa7bdece0ba89c054c969359379342b/libstdc%2B%2B-v3%2Fbits%2Ffstream.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Ffstream.tcc?ref=d207c3f7ffa7bdece0ba89c054c969359379342b", "patch": "@@ -1,6 +1,6 @@\n // File based streams -*- C++ -*-\n \n-// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -42,7 +42,7 @@ namespace std\n     _M_init_filebuf(void)\n     {\n       _M_buf_unified = true; // Tie input to output for basic_filebuf.\n-      _M_buf_size = static_cast<int_type>(BUFSIZ * sizeof(char_type)); \n+      _M_buf_size = _M_buf_size_opt;\n       try {\n \t_M_file = new __file_type(&_M_lock);\n       }"}, {"sha": "84699bfb0ab4f1072441f54edf5b4b6ba2c8c648", "filename": "libstdc++-v3/bits/std_streambuf.h", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d207c3f7ffa7bdece0ba89c054c969359379342b/libstdc%2B%2B-v3%2Fbits%2Fstd_streambuf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d207c3f7ffa7bdece0ba89c054c969359379342b/libstdc%2B%2B-v3%2Fbits%2Fstd_streambuf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fbits%2Fstd_streambuf.h?ref=d207c3f7ffa7bdece0ba89c054c969359379342b", "patch": "@@ -1,6 +1,6 @@\n // Stream buffer classes -*- C++ -*-\n \n-// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -84,9 +84,12 @@ namespace std {\n       // leave it NULL.\n       char_type*\t\t_M_buf; \t\n \n-      // Size of internal buffer, in bytes.\n+      // Actual size of internal buffer, in bytes.\n       int_type\t\t\t_M_buf_size;\n \n+      // Optimal or preferred size of internal buffer, in bytes.\n+      int_type\t\t\t_M_buf_size_opt;\n+\n       // True iff _M_in_* and _M_out_* buffers should always point to\n       // the same place.  True for fstreams, false for sstreams.\n       bool \t\t\t_M_buf_unified;\t\n@@ -284,10 +287,13 @@ namespace std {\n \n     protected:\n       basic_streambuf()\n-      : _M_buf(NULL), _M_buf_size(0), _M_buf_unified(false),\n-\t_M_in_cur(0), _M_in_beg(0), _M_in_end(0), _M_out_cur(0), _M_out_beg(0),\n-\t_M_out_end(0), _M_mode(ios_base::openmode(0)), \n-\t_M_locale_buf(locale()), _M_locale_set(false) \n+      : _M_buf(NULL), _M_buf_size(0), \n+\t_M_buf_size_opt(static_cast<int_type>(BUFSIZ * sizeof(char_type))),\n+\t_M_buf_unified(false), _M_in_cur(0), _M_in_beg(0), _M_in_end(0), \n+\t_M_out_cur(0), _M_out_beg(0), _M_out_end(0), \n+\t_M_mode(ios_base::openmode(0)), _M_locale_buf(locale()), \n+\t_M_locale_set(false) \n+\n       { _M_fctype_buf =  &use_facet<__ctype_type>(this->getloc()); }\n \n       // Get area:"}, {"sha": "586388e8e10b50afeb1c316d0afdcaf14a03c3b2", "filename": "libstdc++-v3/testsuite/27_io/filebuf.cc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d207c3f7ffa7bdece0ba89c054c969359379342b/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d207c3f7ffa7bdece0ba89c054c969359379342b/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F27_io%2Ffilebuf.cc?ref=d207c3f7ffa7bdece0ba89c054c969359379342b", "patch": "@@ -1,6 +1,6 @@\n // 990117 bkoz test functionality of basic_filebuf for char_type == char\n \n-// Copyright (C) 1997-1999 Free Software Foundation, Inc.\n+// Copyright (C) 1997-1999, 2000 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -37,7 +37,7 @@ class derived_filebuf: public std::filebuf\n {\n  public:\n   void\n-  set_size(int_type __size) { _M_buf_size = __size; }\n+  set_size(int_type __size) { _M_buf_size_opt = __size; }\n };\n \n derived_filebuf fb_01; // in "}]}