{"sha": "19831e2b8b1c4dbf238c9b122d2022ff67046732", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk4MzFlMmI4YjFjNGRiZjIzOGM5YjEyMmQyMDIyZmY2NzA0NjczMg==", "commit": {"author": {"name": "Ollie Wild", "email": "aaw@google.com", "date": "2007-08-10T18:12:12Z"}, "committer": {"name": "Ollie Wild", "email": "aaw@gcc.gnu.org", "date": "2007-08-10T18:12:12Z"}, "message": "name-lookup.c (do_nonmember_using_decl): Print an error for ambiguous type lookups.\n\n\tgcc/cp/\n\t* name-lookup.c (do_nonmember_using_decl): Print an error for ambiguous\n\ttype lookups.\n\t(ambiguous_decl): Construct tree of ambiguous types.  Remove extaneous\n\tfunction parameter.\n\t(unqualified_namespace_lookup): Fix ambiguous_decl call.\n\t(lookup_using_namespace): Fix ambiguous_decl call.\n\t(qualified_lookup_using_namespace): Fix ambiguous_decl call.\n\n\tgcc/testsuite/\n\t* g++.dg/lookup/using18.C: New test.\n\nFrom-SVN: r127347", "tree": {"sha": "d22743d3e641704b4a17c35b436280d174a920e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d22743d3e641704b4a17c35b436280d174a920e4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/19831e2b8b1c4dbf238c9b122d2022ff67046732", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19831e2b8b1c4dbf238c9b122d2022ff67046732", "html_url": "https://github.com/Rust-GCC/gccrs/commit/19831e2b8b1c4dbf238c9b122d2022ff67046732", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/19831e2b8b1c4dbf238c9b122d2022ff67046732/comments", "author": {"login": "olliewild", "id": 11523068, "node_id": "MDQ6VXNlcjExNTIzMDY4", "avatar_url": "https://avatars.githubusercontent.com/u/11523068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olliewild", "html_url": "https://github.com/olliewild", "followers_url": "https://api.github.com/users/olliewild/followers", "following_url": "https://api.github.com/users/olliewild/following{/other_user}", "gists_url": "https://api.github.com/users/olliewild/gists{/gist_id}", "starred_url": "https://api.github.com/users/olliewild/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olliewild/subscriptions", "organizations_url": "https://api.github.com/users/olliewild/orgs", "repos_url": "https://api.github.com/users/olliewild/repos", "events_url": "https://api.github.com/users/olliewild/events{/privacy}", "received_events_url": "https://api.github.com/users/olliewild/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "68a57691dc5d712bff5c70691dd90c0c670022d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/68a57691dc5d712bff5c70691dd90c0c670022d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/68a57691dc5d712bff5c70691dd90c0c670022d0"}], "stats": {"total": 70, "additions": 54, "deletions": 16}, "files": [{"sha": "1855f5a481a4ebf7aca156c8799c4a50c66574e3", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19831e2b8b1c4dbf238c9b122d2022ff67046732/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19831e2b8b1c4dbf238c9b122d2022ff67046732/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=19831e2b8b1c4dbf238c9b122d2022ff67046732", "patch": "@@ -1,3 +1,13 @@\n+2007-08-10  Ollie Wild  <aaw@google.com>\n+\n+\t* name-lookup.c (do_nonmember_using_decl): Print an error for ambiguous\n+\ttype lookups.\n+\t(ambiguous_decl): Construct tree of ambiguous types.  Remove extaneous\n+\tfunction parameter.\n+\t(unqualified_namespace_lookup): Fix ambiguous_decl call.\n+\t(lookup_using_namespace): Fix ambiguous_decl call.\n+\t(qualified_lookup_using_namespace): Fix ambiguous_decl call.\n+\n 2007-08-10  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* call.c (name_as_c_string): Use CONST_CAST."}, {"sha": "48b387a747f9761b8a352facb47f67f25325cd0d", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 20, "deletions": 16, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19831e2b8b1c4dbf238c9b122d2022ff67046732/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19831e2b8b1c4dbf238c9b122d2022ff67046732/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=19831e2b8b1c4dbf238c9b122d2022ff67046732", "patch": "@@ -2190,12 +2190,20 @@ do_nonmember_using_decl (tree scope, tree name, tree oldval, tree oldtype,\n \terror (\"%qD is already declared in this scope\", name);\n     }\n \n-  *newtype = decls.type;\n-  if (oldtype && *newtype && !same_type_p (oldtype, *newtype))\n+  if (decls.type && TREE_CODE (decls.type) == TREE_LIST)\n     {\n-      error (\"using declaration %qD introduced ambiguous type %qT\",\n-\t     name, oldtype);\n-      return;\n+      error (\"reference to %qD is ambiguous\", name);\n+      print_candidates (decls.type);\n+    }\n+  else\n+    {\n+      *newtype = decls.type;\n+      if (oldtype && *newtype && !same_type_p (oldtype, *newtype))\n+\t{\n+\t  error (\"using declaration %qD introduced ambiguous type %qT\",\n+\t\t name, oldtype);\n+\t  return;\n+\t}\n     }\n }\n \n@@ -3491,8 +3499,7 @@ merge_functions (tree s1, tree s2)\n    XXX I don't want to repeat the entire duplicate_decls here */\n \n static void\n-ambiguous_decl (tree name, struct scope_binding *old, cxx_binding *new,\n-\t\tint flags)\n+ambiguous_decl (struct scope_binding *old, cxx_binding *new, int flags)\n {\n   tree val, type;\n   gcc_assert (old != NULL);\n@@ -3564,12 +3571,9 @@ ambiguous_decl (tree name, struct scope_binding *old, cxx_binding *new,\n     old->type = type;\n   else if (type && old->type != type)\n     {\n-      if (flags & LOOKUP_COMPLAIN)\n-\t{\n-\t  error (\"%qD denotes an ambiguous type\",name);\n-\t  error (\"%J  first type here\", TYPE_MAIN_DECL (old->type));\n-\t  error (\"%J  other type here\", TYPE_MAIN_DECL (type));\n-\t}\n+      old->type = tree_cons (NULL_TREE, old->type,\n+\t\t\t     build_tree_list (NULL_TREE, type));\n+      TREE_TYPE (old->type) = error_mark_node;\n     }\n }\n \n@@ -3680,7 +3684,7 @@ unqualified_namespace_lookup (tree name, int flags)\n \t cxx_scope_find_binding_for_name (NAMESPACE_LEVEL (scope), name);\n \n       if (b)\n-\tambiguous_decl (name, &binding, b, flags);\n+\tambiguous_decl (&binding, b, flags);\n \n       /* Add all _DECLs seen through local using-directives.  */\n       for (level = current_binding_level;\n@@ -3768,7 +3772,7 @@ lookup_using_namespace (tree name, struct scope_binding *val,\n \t  cxx_scope_find_binding_for_name (NAMESPACE_LEVEL (used), name);\n \t/* Resolve ambiguities.  */\n \tif (val1)\n-\t  ambiguous_decl (name, val, val1, flags);\n+\t  ambiguous_decl (val, val1, flags);\n       }\n   POP_TIMEVAR_AND_RETURN (TV_NAME_LOOKUP, val->value != error_mark_node);\n }\n@@ -3797,7 +3801,7 @@ qualified_lookup_using_namespace (tree name, tree scope,\n \tcxx_scope_find_binding_for_name (NAMESPACE_LEVEL (scope), name);\n       seen = tree_cons (scope, NULL_TREE, seen);\n       if (binding)\n-\tambiguous_decl (name, result, binding, flags);\n+\tambiguous_decl (result, binding, flags);\n \n       /* Consider strong using directives always, and non-strong ones\n \t if we haven't found a binding yet.  ??? Shouldn't we consider"}, {"sha": "0712f7085be72c862a1d17273740b9ef71bf5975", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19831e2b8b1c4dbf238c9b122d2022ff67046732/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19831e2b8b1c4dbf238c9b122d2022ff67046732/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=19831e2b8b1c4dbf238c9b122d2022ff67046732", "patch": "@@ -1,3 +1,7 @@\n+2007-08-10  Ollie Wild  <aaw@google.com>\n+\n+\t* g++.dg/lookup/using18.C: New test.\n+\n 2007-08-10  Paolo Carlini  <pcarlini@suse.de>\n \n \tPR c++/17763"}, {"sha": "37557148ea6c44aa8a1e49b4f28b28087d89341d", "filename": "gcc/testsuite/g++.dg/lookup/using18.C", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/19831e2b8b1c4dbf238c9b122d2022ff67046732/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/19831e2b8b1c4dbf238c9b122d2022ff67046732/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Flookup%2Fusing18.C?ref=19831e2b8b1c4dbf238c9b122d2022ff67046732", "patch": "@@ -0,0 +1,20 @@\n+// Copyright (C) 2007 Free Software Foundation\n+// Contributed by Ollie Wild <aaw@google.com>\n+// { dg-do compile }\n+\n+namespace N1 {\n+  void f ();\n+  struct f; // { dg-error \"\" \"candidate\" }\n+}\n+\n+namespace N2 {\n+  void f (int);\n+  struct f; // { dg-error \"\" \"candidate\" }\n+}\n+\n+namespace M {\n+  using namespace N1;\n+  using namespace N2;\n+}\n+\n+using M::f; // { dg-error \"ambiguous\" }"}]}