{"sha": "9efd72d28956eb79c7fca38e3c959733a3bb25bb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWVmZDcyZDI4OTU2ZWI3OWM3ZmNhMzhlM2M5NTk3MzNhM2JiMjViYg==", "commit": {"author": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-03-05T01:20:40Z"}, "committer": {"name": "Marek Polacek", "email": "polacek@redhat.com", "date": "2021-03-25T18:46:29Z"}, "message": "c++: -Wconversion vs value-dependent expressions [PR99331]\n\nThis PR complains that we issue a -Wconversion warning in\n\n  template <int N> struct X {};\n  template <class T> X<sizeof(T)> foo();\n\nsaying \"conversion from 'long unsigned int' to 'int' may change value\".\nWhile it's not technically wrong, I suspect -Wconversion warnings aren't\nall that useful for value-dependent expressions.  So this patch disables\nthem.  This is a regression that started with r241425:\n\n@@ -7278,7 +7306,7 @@ convert_template_argument (tree parm,\n          val = error_mark_node;\n        }\n    }\n-      else if (!dependent_template_arg_p (orig_arg)\n+      else if (!type_dependent_expression_p (orig_arg)\n           && !uses_template_parms (t))\n    /* We used to call digest_init here.  However, digest_init\n       will report errors, which we don't want when complain\n\nHere orig_arg is SIZEOF_EXPR<T>; dependent_template_arg_p (orig_arg) was\ntrue, but type_dependent_expression_p (orig_arg) is false so we warn in\nconvert_nontype_argument.\n\ngcc/cp/ChangeLog:\n\n\tPR c++/99331\n\t* call.c (build_converted_constant_expr_internal): Don't emit\n\t-Wconversion warnings.\n\ngcc/testsuite/ChangeLog:\n\n\tPR c++/99331\n\t* g++.dg/warn/Wconversion5.C: New test.", "tree": {"sha": "9b0f68d043434302324aec5adc59913ada762393", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9b0f68d043434302324aec5adc59913ada762393"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9efd72d28956eb79c7fca38e3c959733a3bb25bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9efd72d28956eb79c7fca38e3c959733a3bb25bb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9efd72d28956eb79c7fca38e3c959733a3bb25bb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9efd72d28956eb79c7fca38e3c959733a3bb25bb/comments", "author": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mpolacek", "id": 10496300, "node_id": "MDQ6VXNlcjEwNDk2MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/10496300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mpolacek", "html_url": "https://github.com/mpolacek", "followers_url": "https://api.github.com/users/mpolacek/followers", "following_url": "https://api.github.com/users/mpolacek/following{/other_user}", "gists_url": "https://api.github.com/users/mpolacek/gists{/gist_id}", "starred_url": "https://api.github.com/users/mpolacek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mpolacek/subscriptions", "organizations_url": "https://api.github.com/users/mpolacek/orgs", "repos_url": "https://api.github.com/users/mpolacek/repos", "events_url": "https://api.github.com/users/mpolacek/events{/privacy}", "received_events_url": "https://api.github.com/users/mpolacek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15d649f79d6b6dc336f6a32eec242b652a262a82", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/15d649f79d6b6dc336f6a32eec242b652a262a82", "html_url": "https://github.com/Rust-GCC/gccrs/commit/15d649f79d6b6dc336f6a32eec242b652a262a82"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "e757e1893c77baf6345da2a0c388b53d15c40ced", "filename": "gcc/cp/call.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9efd72d28956eb79c7fca38e3c959733a3bb25bb/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9efd72d28956eb79c7fca38e3c959733a3bb25bb/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=9efd72d28956eb79c7fca38e3c959733a3bb25bb", "patch": "@@ -4484,6 +4484,9 @@ build_converted_constant_expr_internal (tree type, tree expr,\n \t  && processing_template_decl)\n \tconv = next_conversion (conv);\n \n+      /* Issuing conversion warnings for value-dependent expressions is\n+\t likely too noisy.  */\n+      warning_sentinel w (warn_conversion);\n       conv->check_narrowing = true;\n       conv->check_narrowing_const_only = true;\n       expr = convert_like (conv, expr, complain);"}, {"sha": "f5ae6312bc59b934b617b9d044bec6ef5344beea", "filename": "gcc/testsuite/g++.dg/warn/Wconversion5.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9efd72d28956eb79c7fca38e3c959733a3bb25bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWconversion5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9efd72d28956eb79c7fca38e3c959733a3bb25bb/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWconversion5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fwarn%2FWconversion5.C?ref=9efd72d28956eb79c7fca38e3c959733a3bb25bb", "patch": "@@ -0,0 +1,19 @@\n+// PR c++/99331\n+// { dg-do compile { target c++11 } }\n+// { dg-options \"-Wconversion\" }\n+// Don't issue -Wconversion warnings for value-dependent expressions.\n+\n+template <int> struct X {};\n+template <signed char> struct Y {};\n+template <typename T> X<sizeof(T)> foo();\n+template <typename T> X<alignof(T)> foo2();\n+template<int I> Y<I> foo3();\n+template<int> Y<1024> foo4(); // { dg-error \"narrowing conversion\" }\n+template<int> Y<1u> foo5();\n+template<int> X<__INT_MAX__ + 1U> foo6(); // { dg-error \"narrowing conversion\" }\n+\n+template <typename T>\n+struct S {\n+  using t = X<sizeof(T)>;\n+  using u = X<alignof(T)>;\n+};"}]}