{"sha": "699ed0ce1fc3e4a843fc18769af68b1340d23df1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njk5ZWQwY2UxZmMzZTRhODQzZmMxODc2OWFmNjhiMTM0MGQyM2RmMQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-10-21T07:10:36Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-10-21T07:10:36Z"}, "message": "cp-tree.def (EMPTY_CLASS_EXPR): New tree node.\n\n\t* cp-tree.def (EMPTY_CLASS_EXPR): New tree node.\n\t* call.c (build_call): Use EMPTY_CLASS_EXPR instead of RTL_EXPR.\n\t* expr.c (cplus_expand_expr): Expand it.\n\t* ir.texi: Document EMPTY_CLASS_EXPR.\n\nFrom-SVN: r30116", "tree": {"sha": "80fdf4e389ef86cb22b9b7328436d61ac9cbbb87", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/80fdf4e389ef86cb22b9b7328436d61ac9cbbb87"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/699ed0ce1fc3e4a843fc18769af68b1340d23df1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/699ed0ce1fc3e4a843fc18769af68b1340d23df1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/699ed0ce1fc3e4a843fc18769af68b1340d23df1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/699ed0ce1fc3e4a843fc18769af68b1340d23df1/comments", "author": null, "committer": null, "parents": [{"sha": "e54635a2f345d548f9c488b41e296708f1b76068", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e54635a2f345d548f9c488b41e296708f1b76068", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e54635a2f345d548f9c488b41e296708f1b76068"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "2c146e34a2deb720a9e67baf4c6d23faee37f360", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/699ed0ce1fc3e4a843fc18769af68b1340d23df1/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/699ed0ce1fc3e4a843fc18769af68b1340d23df1/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=699ed0ce1fc3e4a843fc18769af68b1340d23df1", "patch": "@@ -1,3 +1,10 @@\n+1999-10-21  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* cp-tree.def (EMPTY_CLASS_EXPR): New tree node.\n+\t* call.c (build_call): Use EMPTY_CLASS_EXPR instead of RTL_EXPR.\n+\t* expr.c (cplus_expand_expr): Expand it.\n+\t* ir.texi: Document EMPTY_CLASS_EXPR.\n+\t\n 1999-10-20  Mark Mitchell  <mark@codesourcery.com>\n \n \t* cp-tree.h (DECL_NAMESPACE_SCOPE_P): Don't treat template"}, {"sha": "b83efd531e5757f83089b3238e362edb6f63918a", "filename": "gcc/cp/call.c", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/699ed0ce1fc3e4a843fc18769af68b1340d23df1/gcc%2Fcp%2Fcall.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/699ed0ce1fc3e4a843fc18769af68b1340d23df1/gcc%2Fcp%2Fcall.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcall.c?ref=699ed0ce1fc3e4a843fc18769af68b1340d23df1", "patch": "@@ -395,10 +395,7 @@ build_call (function, result_type, parms)\n       if (is_empty_class (TREE_TYPE (TREE_VALUE (tmp)))\n \t  && ! TREE_ADDRESSABLE (TREE_TYPE (TREE_VALUE (tmp))))\n \t{\n-\t  tree t = make_node (RTL_EXPR);\n-\t  TREE_TYPE (t) = TREE_TYPE (TREE_VALUE (tmp));\n-\t  RTL_EXPR_RTL (t) = const0_rtx;\n-\t  RTL_EXPR_SEQUENCE (t) = NULL_RTX;\n+\t  tree t = build (EMPTY_CLASS_EXPR, TREE_TYPE (TREE_VALUE (tmp)));\n \t  TREE_VALUE (tmp) = build (COMPOUND_EXPR, TREE_TYPE (t),\n \t\t\t\t    TREE_VALUE (tmp), t);\n \t}"}, {"sha": "d8eb62f65a545443a7c0b37a0febbea829b04e16", "filename": "gcc/cp/cp-tree.def", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/699ed0ce1fc3e4a843fc18769af68b1340d23df1/gcc%2Fcp%2Fcp-tree.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/699ed0ce1fc3e4a843fc18769af68b1340d23df1/gcc%2Fcp%2Fcp-tree.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.def?ref=699ed0ce1fc3e4a843fc18769af68b1340d23df1", "patch": "@@ -70,6 +70,10 @@ DEFTREECODE (AGGR_INIT_EXPR, \"aggr_init_expr\", 'e', 3)\n    else it is NULL_TREE.  */\n DEFTREECODE (THROW_EXPR, \"throw_expr\", 'e', 1)\n \n+/* An empty class object.  The TREE_TYPE gives the class type.  We use\n+   these to avoid actually creating instances of the empty classes.  */\n+DEFTREECODE (EMPTY_CLASS_EXPR, \"empty_class_expr\", 'e', 0)\n+\n /* Template definition.  The following fields have the specified uses,\n    although there are other macros in cp-tree.h that should be used for\n    accessing this data."}, {"sha": "22984131c5648e68e4d0848029b94789daaa9f53", "filename": "gcc/cp/ir.texi", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/699ed0ce1fc3e4a843fc18769af68b1340d23df1/gcc%2Fcp%2Fir.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/699ed0ce1fc3e4a843fc18769af68b1340d23df1/gcc%2Fcp%2Fir.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fir.texi?ref=699ed0ce1fc3e4a843fc18769af68b1340d23df1", "patch": "@@ -682,9 +682,10 @@ there is no @code{FIELD_DECL} for the ``base-class portion'' of an\n object.\n \n The @code{TYPE_VFIELD} is a compiler-generated field used to point to\n-virtual function tables.  It does not appear on the @code{TYPE_FIELDS}\n-list.  However, back-ends should handle the @code{TYPE_VFIELD} just like\n-all the entries on the @code{TYPE_FIELDS} list.\n+virtual function tables.  It may or may not appear on the\n+@code{TYPE_FIELDS} list.  However, back-ends should handle the\n+@code{TYPE_VFIELD} just like all the entries on the @code{TYPE_FIELDS}\n+list.\n \n The function members are available on the @code{TYPE_METHODS} list.\n Again, subsequent members are found by following the @code{TREE_CHAIN}\n@@ -1078,6 +1079,7 @@ the function.\n @tindex DO_STMT\n @findex DO_BODY\n @findex DO_COND\n+@tindex EMPTY_CLASS_EXPR\n @tindex EXPR_STMT\n @findex EXPR_STMT_EXPR\n @tindex FOR_STMT\n@@ -1286,6 +1288,12 @@ Used to represent a @code{do} loop.  The body of the loop is given by\n @code{DO_COND}.  The condition for a @code{do}-statement is always an\n expression.\n \n+@item EMPTY_CLASS_EXPR\n+\n+Used to represent a temporary object of a class with no data whose\n+address is never taken.  (All such objects are interchangeable.)  The\n+@code{TREE_TYPE} represents the type of the object.\n+\n @item EXPR_STMT\n \n Used to represent an expression statement.  Use @code{EXPR_STMT_EXPR} to"}]}