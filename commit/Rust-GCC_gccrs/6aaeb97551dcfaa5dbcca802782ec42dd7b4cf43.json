{"sha": "6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmFhZWI5NzU1MWRjZmFhNWRiY2NhODAyNzgyZWM0MmRkN2I0Y2Y0Mw==", "commit": {"author": {"name": "Anthony Green", "email": "green@redhat.com", "date": "2000-08-26T19:25:13Z"}, "committer": {"name": "Anthony Green", "email": "green@gcc.gnu.org", "date": "2000-08-26T19:25:13Z"}, "message": "Makefile.in: Rebuilt.\n\n2000-08-26  Anthony Green  <green@redhat.com>\n\n        * Makefile.in: Rebuilt.\n        * Makefile.am (java/lang/ClassLoader.h): Make _Jv_RunMain a\n        friend.\n\n        * prims.cc: Include ClassLoader.h.\n        (_Jv_RunMain): When executing jar files, classpath must be the jar\n        file only.  Lose our reference to the system ClassLoader in order\n        to get a new one with the correct classpath.\n        * java/lang/natSystem.cc (init_properties): When executing a jar\n        file, only use the jar file for java.class.path.\n\n        * gnu/gcj/runtime/VMClassLoader.java: Use the canonical file name\n        for bytecode archives.\n\n        * gnu/gcj/runtime/FirstThread.java: Handle case where manifest\n        exists, but not Main-Class.\n\nFrom-SVN: r35999", "tree": {"sha": "ec60dfe7b11606b3c5c1d32bb2b29e9dd37d5be1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ec60dfe7b11606b3c5c1d32bb2b29e9dd37d5be1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/comments", "author": {"login": "atgreen", "id": 89993, "node_id": "MDQ6VXNlcjg5OTkz", "avatar_url": "https://avatars.githubusercontent.com/u/89993?v=4", "gravatar_id": "", "url": "https://api.github.com/users/atgreen", "html_url": "https://github.com/atgreen", "followers_url": "https://api.github.com/users/atgreen/followers", "following_url": "https://api.github.com/users/atgreen/following{/other_user}", "gists_url": "https://api.github.com/users/atgreen/gists{/gist_id}", "starred_url": "https://api.github.com/users/atgreen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/atgreen/subscriptions", "organizations_url": "https://api.github.com/users/atgreen/orgs", "repos_url": "https://api.github.com/users/atgreen/repos", "events_url": "https://api.github.com/users/atgreen/events{/privacy}", "received_events_url": "https://api.github.com/users/atgreen/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "14fdf4b67e8843c870c88baac0c4974b2e67bb32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14fdf4b67e8843c870c88baac0c4974b2e67bb32", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14fdf4b67e8843c870c88baac0c4974b2e67bb32"}], "stats": {"total": 174, "additions": 98, "deletions": 76}, "files": [{"sha": "8356ea3eb0a0f01b6e222c0afcc0f30b0fc414b5", "filename": "libjava/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43", "patch": "@@ -1,3 +1,22 @@\n+2000-08-26  Anthony Green  <green@redhat.com>\n+\n+\t* Makefile.in: Rebuilt.\n+\t* Makefile.am (java/lang/ClassLoader.h): Make _Jv_RunMain a\n+\tfriend.\n+\n+\t* prims.cc: Include ClassLoader.h.\n+\t(_Jv_RunMain): When executing jar files, classpath must be the jar\n+\tfile only.  Lose our reference to the system ClassLoader in order\n+\tto get a new one with the correct classpath.\n+\t* java/lang/natSystem.cc (init_properties): When executing a jar\n+\tfile, only use the jar file for java.class.path.\n+\n+\t* gnu/gcj/runtime/VMClassLoader.java: Use the canonical file name\n+\tfor bytecode archives.\n+\n+\t* gnu/gcj/runtime/FirstThread.java: Handle case where manifest\n+\texists, but not Main-Class.\n+\n 2000-08-23  Mark Wielaard  <mark@klomp.org>\n \n \t* java/util/zip/InflaterInputStream.java (read(byte[],int,int)):"}, {"sha": "7413f2696c27ba17ea68847a58234321ed4f669b", "filename": "libjava/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43", "patch": "@@ -225,6 +225,7 @@ $(nat_headers): libgcj.zip\n java/lang/ClassLoader.h: java/lang/ClassLoader.class libgcj.zip\n \t$(GCJH) -classpath $(top_builddir) \\\n \t\t-friend 'jclass _Jv_FindClass (_Jv_Utf8Const *name, java::lang::ClassLoader *loader);' \\\n+\t\t-friend 'void _Jv_RunMain (const char *name, int argc, const char **argv, bool is_jar);' \\\n \t\t$(basename $<)\n \n ## Our internal main program needs to be able to create a FirstThread."}, {"sha": "3ed381f0a0bcb492ec1935923dc55f40d1d3192c", "filename": "libjava/Makefile.in", "status": "modified", "additions": 23, "deletions": 42, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43", "patch": "@@ -115,48 +115,31 @@ here = @here@\n libgcj_basedir = @libgcj_basedir@\n \n AUTOMAKE_OPTIONS = foreign no-installinfo\n-@TESTSUBDIR_TRUE@SUBDIRS = \\\n-@TESTSUBDIR_TRUE@$(DIRLTDL) testsuite gcj include\n-@TESTSUBDIR_FALSE@SUBDIRS = \\\n-@TESTSUBDIR_FALSE@$(DIRLTDL) gcj include\n-@USE_LIBDIR_TRUE@toolexeclibdir = \\\n-@USE_LIBDIR_TRUE@$(libdir)$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexeclibdir = \\\n-@USE_LIBDIR_FALSE@$(toolexecdir)/lib$(MULTISUBDIR)\n-@USE_LIBDIR_FALSE@toolexecdir = \\\n-@USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n+@TESTSUBDIR_TRUE@SUBDIRS = @TESTSUBDIR_TRUE@$(DIRLTDL) testsuite gcj include\n+@TESTSUBDIR_FALSE@SUBDIRS = @TESTSUBDIR_FALSE@$(DIRLTDL) gcj include\n+@USE_LIBDIR_TRUE@toolexeclibdir = @USE_LIBDIR_TRUE@$(libdir)$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexeclibdir = @USE_LIBDIR_FALSE@$(toolexecdir)/lib$(MULTISUBDIR)\n+@USE_LIBDIR_FALSE@toolexecdir = @USE_LIBDIR_FALSE@$(exec_prefix)/$(target_alias)\n \n toolexeclib_LTLIBRARIES = libgcj.la\n toolexeclib_DATA = libgcj.spec\n data_DATA = libgcj.zip\n \n-@NEEDS_DATA_START_TRUE@toolexeclib_LIBRARIES = \\\n-@NEEDS_DATA_START_TRUE@libgcjdata.a\n-@NEEDS_DATA_START_TRUE@libgcjdata_a_SOURCES = \\\n-@NEEDS_DATA_START_TRUE@libgcjdata.c\n+@NEEDS_DATA_START_TRUE@toolexeclib_LIBRARIES = @NEEDS_DATA_START_TRUE@libgcjdata.a\n+@NEEDS_DATA_START_TRUE@libgcjdata_a_SOURCES = @NEEDS_DATA_START_TRUE@libgcjdata.c\n \n-@NATIVE_TRUE@bin_PROGRAMS = \\\n-@NATIVE_TRUE@jv-convert gij\n+@NATIVE_TRUE@bin_PROGRAMS = @NATIVE_TRUE@jv-convert gij\n \n bin_SCRIPTS = addr2name.awk\n-@CANADIAN_TRUE@@NULL_TARGET_TRUE@GCJ = \\\n-@CANADIAN_TRUE@@NULL_TARGET_TRUE@gcj\n-@CANADIAN_TRUE@@NULL_TARGET_FALSE@GCJ = \\\n-@CANADIAN_TRUE@@NULL_TARGET_FALSE@$(target_alias)-gcj\n-@CANADIAN_FALSE@GCJ = \\\n-@CANADIAN_FALSE@$(expanded)/gcj$(EXEEXT) -B$(expanded)/\n-@CANADIAN_TRUE@@NULL_TARGET_TRUE@ZIP = \\\n-@CANADIAN_TRUE@@NULL_TARGET_TRUE@$(MULTIBUILDTOP)../$(COMPPATH)/zip/zip$(EXEEXT)\n-@CANADIAN_TRUE@@NULL_TARGET_FALSE@ZIP = \\\n-@CANADIAN_TRUE@@NULL_TARGET_FALSE@zip\n-@CANADIAN_FALSE@ZIP = \\\n-@CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/zip/zip$(EXEEXT)\n-@CANADIAN_TRUE@GCJH = \\\n-@CANADIAN_TRUE@gcjh\n-@CANADIAN_FALSE@GCJH = \\\n-@CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh$(EXEEXT)\n-@CANADIAN_FALSE@expanded = \\\n-@CANADIAN_FALSE@`cd $(MULTIBUILDTOP)../$(COMPPATH)/gcc && pwd`\n+@CANADIAN_TRUE@@NULL_TARGET_TRUE@GCJ = @CANADIAN_TRUE@@NULL_TARGET_TRUE@gcj\n+@CANADIAN_TRUE@@NULL_TARGET_FALSE@GCJ = @CANADIAN_TRUE@@NULL_TARGET_FALSE@$(target_alias)-gcj\n+@CANADIAN_FALSE@GCJ = @CANADIAN_FALSE@$(expanded)/gcj$(EXEEXT) -B$(expanded)/\n+@CANADIAN_TRUE@@NULL_TARGET_TRUE@ZIP = @CANADIAN_TRUE@@NULL_TARGET_TRUE@$(MULTIBUILDTOP)../$(COMPPATH)/zip/zip$(EXEEXT)\n+@CANADIAN_TRUE@@NULL_TARGET_FALSE@ZIP = @CANADIAN_TRUE@@NULL_TARGET_FALSE@zip\n+@CANADIAN_FALSE@ZIP = @CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/zip/zip$(EXEEXT)\n+@CANADIAN_TRUE@GCJH = @CANADIAN_TRUE@gcjh\n+@CANADIAN_FALSE@GCJH = @CANADIAN_FALSE@$(MULTIBUILDTOP)../$(COMPPATH)/gcc/gcjh$(EXEEXT)\n+@CANADIAN_FALSE@expanded = @CANADIAN_FALSE@`cd $(MULTIBUILDTOP)../$(COMPPATH)/gcc && pwd`\n \n GCJCOMPILE = CLASSPATH=$(here) $(LIBTOOL) --mode=compile $(GCJ) -fassume-compiled -L$(here) $(JC1FLAGS) -c\n GCJLINK = $(LIBTOOL) --mode=link $(GCJ) -L$(here) $(JC1FLAGS) $(LDFLAGS) -o $@\n@@ -170,10 +153,8 @@ WARNINGS = -W -Wall\n AM_CXXFLAGS = -fno-rtti -fvtable-thunks -fasynchronous-exceptions \\\n \t@LIBGCJ_CXXFLAGS@ @EXCEPTIONSPEC@ $(WARNINGS) -D_GNU_SOURCE\n \n-@USING_GCC_TRUE@AM_CFLAGS = \\\n-@USING_GCC_TRUE@@LIBGCJ_CFLAGS@ $(WARNINGS)\n-@USING_GCC_FALSE@AM_CFLAGS = \\\n-@USING_GCC_FALSE@@LIBGCJ_CFLAGS@\n+@USING_GCC_TRUE@AM_CFLAGS = @USING_GCC_TRUE@@LIBGCJ_CFLAGS@ $(WARNINGS)\n+@USING_GCC_FALSE@AM_CFLAGS = @USING_GCC_FALSE@@LIBGCJ_CFLAGS@\n \n JCFLAGS = -g\n JC1FLAGS = -g @LIBGCJ_JAVAFLAGS@\n@@ -225,8 +206,7 @@ extra_headers = java/lang/Object.h java/lang/Class.h\n \n NM = nm\n \n-@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS = \\\n-@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@gen-from-JIS\n+@NATIVE_TRUE@@MAINTAINER_MODE_TRUE@noinst_PROGRAMS = @NATIVE_TRUE@@MAINTAINER_MODE_TRUE@gen-from-JIS\n \n CONVERT_DIR = gnu/gcj/convert\n \n@@ -1045,7 +1025,7 @@ libgcj-test.spec.in libgcj.spec.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = tar\n+TAR = gtar\n GZIP_ENV = --best\n DIST_SUBDIRS =  @DIRLTDL@ testsuite gcj include @DIRLTDL@ gcj include\n DEP_FILES =  .deps/$(srcdir)/$(CONVERT_DIR)/gen-from-JIS.P \\\n@@ -1854,7 +1834,7 @@ distdir: $(DISTFILES)\n \t@for file in $(DISTFILES); do \\\n \t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n-\t    cp -pr $$/$$file $(distdir)/$$file; \\\n+\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n \t  else \\\n \t    test -f $(distdir)/$$file \\\n \t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\\n@@ -2088,6 +2068,7 @@ $(nat_headers): libgcj.zip\n java/lang/ClassLoader.h: java/lang/ClassLoader.class libgcj.zip\n \t$(GCJH) -classpath $(top_builddir) \\\n \t\t-friend 'jclass _Jv_FindClass (_Jv_Utf8Const *name, java::lang::ClassLoader *loader);' \\\n+\t\t-friend 'void _Jv_RunMain (const char *name, int argc, const char **argv, bool is_jar);' \\\n \t\t$(basename $<)\n \n gnu/gcj/runtime/FirstThread.h: gnu/gcj/runtime/FirstThread.class libgcj.zip"}, {"sha": "bd13f3d9e6693e72902dcbc2a568df3c8dfc8852", "filename": "libjava/gcj/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2Fgcj%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2Fgcj%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgcj%2FMakefile.in?ref=6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43", "patch": "@@ -129,7 +129,7 @@ DIST_COMMON =  Makefile.am Makefile.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = tar\n+TAR = gtar\n GZIP_ENV = --best\n all: all-redirect\n .SUFFIXES:\n@@ -198,7 +198,7 @@ distdir: $(DISTFILES)\n \t@for file in $(DISTFILES); do \\\n \t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n-\t    cp -pr $$/$$file $(distdir)/$$file; \\\n+\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n \t  else \\\n \t    test -f $(distdir)/$$file \\\n \t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\"}, {"sha": "8cf477fad5524d37a64540e51d6a12999244de79", "filename": "libjava/gnu/gcj/runtime/FirstThread.java", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2Fgnu%2Fgcj%2Fruntime%2FFirstThread.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2Fgnu%2Fgcj%2Fruntime%2FFirstThread.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FFirstThread.java?ref=6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43", "patch": "@@ -55,11 +55,15 @@ public static void main (String[] args)\n \n       jarMainClassName = a.getValue(Attributes.Name.MAIN_CLASS);\n \n-    } catch (Exception e) {\n-\n-      System.err.println (\"Failed to load Main-Class manifest attribute from\\n\" + args[0]);\n+      if (jarMainClassName != null)\n+\treturn;\n \n+    } catch (Exception e) {\n+      // empty\n     }\n+\n+    System.err.println (\"Failed to load Main-Class manifest attribute from\\n\"\n+\t\t\t+ args[0]);\n   }\n \n   // If interpreter is invoked with -jar, the main class name is recorded"}, {"sha": "77051d253b752ab811a0b27e9c15318ad4e3078b", "filename": "libjava/gnu/gcj/runtime/VMClassLoader.java", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fgnu%2Fgcj%2Fruntime%2FVMClassLoader.java?ref=6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43", "patch": "@@ -34,7 +34,16 @@ private static URL[] init()\n \ttry\n \t  {\n \t    if (e.endsWith(\".jar\") || e.endsWith (\".zip\"))\n-\t      p.addElement(new URL(\"jar\", \"\", -1, \"file:///\"+e+\"!/\"));\n+\t      {\n+\t\tFile archive = new File (e);\n+\t\ttry {\n+\t\t  p.addElement(new URL(\"jar\", \"\", -1, \"file://\"\n+\t\t\t\t       + archive.getCanonicalPath ()\n+\t\t\t\t       + \"!/\"));\n+\t\t} catch (IOException ex) {\n+\t\t  // empty\n+\t\t}\n+\t      }\n \t    else if (e.endsWith (\"/\"))\n \t      p.addElement (new URL(\"file\", \"\", -1, e));\n \t    else if (new File (e).isDirectory ())"}, {"sha": "dc184e5a1522a34ca740321abdda3cd6de0f82c4", "filename": "libjava/include/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Finclude%2FMakefile.in?ref=6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43", "patch": "@@ -128,7 +128,7 @@ DIST_COMMON =  ./stamp-h.in Makefile.am Makefile.in config.h.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = tar\n+TAR = gtar\n GZIP_ENV = --best\n all: all-redirect\n .SUFFIXES:\n@@ -225,7 +225,7 @@ distdir: $(DISTFILES)\n \t@for file in $(DISTFILES); do \\\n \t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n-\t    cp -pr $$/$$file $(distdir)/$$file; \\\n+\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n \t  else \\\n \t    test -f $(distdir)/$$file \\\n \t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\"}, {"sha": "2672895c6a4e9b48bef9c662f54c0bae4ffca132", "filename": "libjava/java/lang/natSystem.cc", "status": "modified", "additions": 21, "deletions": 24, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2Fjava%2Flang%2FnatSystem.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2Fjava%2Flang%2FnatSystem.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fjava%2Flang%2FnatSystem.cc?ref=6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43", "patch": "@@ -348,34 +348,31 @@ java::lang::System::init_properties (void)\n \t}\n     }\n \n-  // FIXME: find libgcj.zip and append its path?\n-  char *classpath = ::getenv(\"CLASSPATH\");\n-  jstring cp = properties->getProperty (JvNewStringLatin1(\"java.class.path\"));\n-  java::lang::StringBuffer *sb = new java::lang::StringBuffer ();\n-\n   if (_Jv_Jar_Class_Path)\n+    properties->put(JvNewStringLatin1 (\"java.class.path\"),\n+\t\t    JvNewStringLatin1 (_Jv_Jar_Class_Path));\n+  else\n     {\n-      sb->append (JvNewStringLatin1 (_Jv_Jar_Class_Path));\n-#ifdef WIN32\n-      sb->append ((jchar) ';');\n-#else\n-      sb->append ((jchar) ':');\n-#endif;\n-    }\n-  if (classpath)\n-    {\n-      sb->append (JvNewStringLatin1 (classpath));\n+      // FIXME: find libgcj.zip and append its path?\n+      char *classpath = ::getenv(\"CLASSPATH\");\n+      jstring cp = properties->getProperty (JvNewStringLatin1(\"java.class.path\"));\n+      java::lang::StringBuffer *sb = new java::lang::StringBuffer ();\n+      \n+      if (classpath)\n+\t{\n+\t  sb->append (JvNewStringLatin1 (classpath));\n #ifdef WIN32\n-      sb->append ((jchar) ';');\n+\t  sb->append ((jchar) ';');\n #else\n-      sb->append ((jchar) ':');\n+\t  sb->append ((jchar) ':');\n #endif;\n+\t}\n+      if (cp != NULL)\n+\tsb->append (cp);\n+      else\n+\tsb->append ((jchar) '.');\n+      \n+      properties->put(JvNewStringLatin1 (\"java.class.path\"),\n+\t\t      sb->toString ());\n     }\n-  if (cp != NULL)\n-    sb->append (cp);\n-  else\n-    sb->append ((jchar) '.');\n-\n-  properties->put(JvNewStringLatin1 (\"java.class.path\"),\n-\t\t  sb->toString ());\n }"}, {"sha": "7766f66cec7fbb401e7afb6d31409db58b118482", "filename": "libjava/prims.cc", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2Fprims.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2Fprims.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fprims.cc?ref=6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43", "patch": "@@ -47,6 +47,7 @@ details.  */\n #endif // DISABLE_GETENV_PROPERTIES\n \n #include <java/lang/Class.h>\n+#include <java/lang/ClassLoader.h>\n #include <java/lang/Runtime.h>\n #include <java/lang/String.h>\n #include <java/lang/Thread.h>\n@@ -906,6 +907,9 @@ _Jv_RunMain (const char *name, int argc, const char **argv, bool is_jar)\n \n   if (is_jar)\n     {\n+      // name specifies a jar file.  We must now extract the\n+      // Main-Class attribute from the jar's manifest file.  This is\n+      // done by gnu.gcj.runtime.FirstThread.main.\n       _Jv_Jar_Class_Path = strdup (name);\n       arg_vec = JvConvertArgv (1, &_Jv_Jar_Class_Path);\n \n@@ -915,7 +919,14 @@ _Jv_RunMain (const char *name, int argc, const char **argv, bool is_jar)\n       main_thread->start();\n       _Jv_ThreadWait ();\n       \n+      // FirstThread.main extracts the main class name and stores it\n+      // here.\n       class_name = gnu::gcj::runtime::FirstThread::jarMainClassName;\n+\n+      // We need a new ClassLoader because the classpath must be the\n+      // jar file only.  The easiest way to do this is to lose our\n+      // reference to the previous classloader.\n+      java::lang::ClassLoader::system = NULL;\n     }\n   else\n     class_name = JvNewStringLatin1 (name);"}, {"sha": "da2b002c8234dd55e9c0f5348de5a8c05f0cda70", "filename": "libjava/testsuite/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2Ftestsuite%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43/libjava%2Ftestsuite%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Ftestsuite%2FMakefile.in?ref=6aaeb97551dcfaa5dbcca802782ec42dd7b4cf43", "patch": "@@ -137,7 +137,7 @@ DIST_COMMON =  ChangeLog Makefile.am Makefile.in\n \n DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)\n \n-TAR = tar\n+TAR = gtar\n GZIP_ENV = --best\n all: all-redirect\n .SUFFIXES:\n@@ -165,7 +165,7 @@ distdir: $(DISTFILES)\n \t@for file in $(DISTFILES); do \\\n \t  d=$(srcdir); \\\n \t  if test -d $$d/$$file; then \\\n-\t    cp -pr $$/$$file $(distdir)/$$file; \\\n+\t    cp -pr $$d/$$file $(distdir)/$$file; \\\n \t  else \\\n \t    test -f $(distdir)/$$file \\\n \t    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \\"}]}