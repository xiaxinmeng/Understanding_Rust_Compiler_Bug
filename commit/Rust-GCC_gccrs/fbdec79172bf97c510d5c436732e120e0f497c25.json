{"sha": "fbdec79172bf97c510d5c436732e120e0f497c25", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmJkZWM3OTE3MmJmOTdjNTEwZDVjNDM2NzMyZTEyMGUwZjQ5N2MyNQ==", "commit": {"author": {"name": "Balaji V. Iyer", "email": "balaji.v.iyer@intel.com", "date": "2013-10-30T22:51:29Z"}, "committer": {"name": "Balaji V. Iyer", "email": "bviyer@gcc.gnu.org", "date": "2013-10-30T22:51:29Z"}, "message": "Fix for bug Bootstrap/58918.\n\n+2013-10-30  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n+\n+       * configure: Reconfigured.\n+       * configure.ac: Add AC_FUNC_ALLOCA.\n+       * runtime/sysdep-unix.c: Added check for alloca.h before\n+       including it.\n+       * config/x86/cilk-abi-vla.c: Likewise.\n+       * runtime/cilk_fiber-unix.cpp: Likewise.\n+\n\nFrom-SVN: r204232", "tree": {"sha": "5bc13973eb8a17b5f36bfb2e0458f2b38047ee49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5bc13973eb8a17b5f36bfb2e0458f2b38047ee49"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fbdec79172bf97c510d5c436732e120e0f497c25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbdec79172bf97c510d5c436732e120e0f497c25", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fbdec79172bf97c510d5c436732e120e0f497c25", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fbdec79172bf97c510d5c436732e120e0f497c25/comments", "author": null, "committer": null, "parents": [{"sha": "2283f03ac9efe157a3910a2a8fec518ddec834e4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2283f03ac9efe157a3910a2a8fec518ddec834e4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2283f03ac9efe157a3910a2a8fec518ddec834e4"}], "stats": {"total": 3859, "additions": 2054, "deletions": 1805}, "files": [{"sha": "d619e4dc13e5723da6dbfca0be82c38a8b668bf4", "filename": "libcilkrts/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdec79172bf97c510d5c436732e120e0f497c25/libcilkrts%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdec79172bf97c510d5c436732e120e0f497c25/libcilkrts%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2FChangeLog?ref=fbdec79172bf97c510d5c436732e120e0f497c25", "patch": "@@ -1,3 +1,12 @@\n+2013-10-30  Balaji V. Iyer  <balaji.v.iyer@intel.com>\n+\n+\t* configure: Reconfigured.\n+\t* configure.ac: Add AC_FUNC_ALLOCA.\n+\t* runtime/sysdep-unix.c: Added check for alloca.h before \n+\tincluding it.\n+\t* config/x86/cilk-abi-vla.c: Likewise.\n+\t* runtime/cilk_fiber-unix.cpp: Likewise.\n+\n 2013-10-29  Tobias Burnus  <burnus@net-b.de>\n \n \t* configure.ac: Add AM_MAINTAINER_MODE."}, {"sha": "35e270518211b3732b866421dc3a7533af3af690", "filename": "libcilkrts/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdec79172bf97c510d5c436732e120e0f497c25/libcilkrts%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdec79172bf97c510d5c436732e120e0f497c25/libcilkrts%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2FMakefile.in?ref=fbdec79172bf97c510d5c436732e120e0f497c25", "patch": "@@ -206,6 +206,7 @@ HEADERS = $(cilkinclude_HEADERS)\n ETAGS = etags\n CTAGS = ctags\n ACLOCAL = @ACLOCAL@\n+ALLOCA = @ALLOCA@\n AMTAR = @AMTAR@\n AR = @AR@\n AUTOCONF = @AUTOCONF@"}, {"sha": "58eff9939278c544b7373abe19d8db8b7560fe4f", "filename": "libcilkrts/configure", "status": "modified", "additions": 1991, "deletions": 1800, "changes": 3791, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdec79172bf97c510d5c436732e120e0f497c25/libcilkrts%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdec79172bf97c510d5c436732e120e0f497c25/libcilkrts%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Fconfigure?ref=fbdec79172bf97c510d5c436732e120e0f497c25"}, {"sha": "f84cc2ae9cefa2bc78fa14ea00b4c889e5137690", "filename": "libcilkrts/configure.ac", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdec79172bf97c510d5c436732e120e0f497c25/libcilkrts%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdec79172bf97c510d5c436732e120e0f497c25/libcilkrts%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Fconfigure.ac?ref=fbdec79172bf97c510d5c436732e120e0f497c25", "patch": "@@ -49,6 +49,7 @@ AC_PROG_CC\n # AC_CONFIG_MACRO_DIR([..])\n AC_CONFIG_FILES([Makefile])\n AM_ENABLE_MULTILIB(, ..)\n+AC_FUNC_ALLOCA\n \n # Get target configury.\n . ${srcdir}/configure.tgt"}, {"sha": "4895c9c5d712ab7f60966c6d7076327269c552fd", "filename": "libcilkrts/runtime/cilk_fiber-unix.cpp", "status": "modified", "additions": 17, "deletions": 2, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdec79172bf97c510d5c436732e120e0f497c25/libcilkrts%2Fruntime%2Fcilk_fiber-unix.cpp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdec79172bf97c510d5c436732e120e0f497c25/libcilkrts%2Fruntime%2Fcilk_fiber-unix.cpp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Fruntime%2Fcilk_fiber-unix.cpp?ref=fbdec79172bf97c510d5c436732e120e0f497c25", "patch": "@@ -44,7 +44,20 @@\n #include <cstdio>\n #include <cstdlib>\n \n-#include <alloca.h>\n+#if defined HAVE_ALLOCA_H\n+# include <alloca.h>\n+#elif defined __GNUC__\n+# define alloca __builtin_alloca\n+#elif defined _AIX\n+# define alloca __alloca\n+#else\n+# include <stddef.h>\n+# ifdef  __cplusplus\n+extern \"C\"\n+# endif\n+void *alloca (size_t);\n+#endif\n+\n #include <errno.h>\n #include <sys/mman.h>\n #include <unistd.h>\n@@ -150,7 +163,8 @@ NORETURN cilk_fiber_sysdep::jump_to_resume_other_sysdep(cilk_fiber_sysdep* other\n     __cilkrts_bug(\"Should not get here\");\n }\n \n-\n+#pragma GCC push_options\n+#pragma GCC optimize (\"-O0\")\n NORETURN cilk_fiber_sysdep::run()\n {\n     // Only fibers created from a pool have a proc method to run and execute. \n@@ -214,6 +228,7 @@ NORETURN cilk_fiber_sysdep::run()\n     // User proc should never return.\n     __cilkrts_bug(\"Should not get here\");\n }\n+#pragma GCC pop_options\n \n void cilk_fiber_sysdep::make_stack(size_t stack_size)\n {"}, {"sha": "38c2630a1e6035d512252dede22e3beff621f522", "filename": "libcilkrts/runtime/config/x86/cilk-abi-vla.c", "status": "modified", "additions": 21, "deletions": 2, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdec79172bf97c510d5c436732e120e0f497c25/libcilkrts%2Fruntime%2Fconfig%2Fx86%2Fcilk-abi-vla.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdec79172bf97c510d5c436732e120e0f497c25/libcilkrts%2Fruntime%2Fconfig%2Fx86%2Fcilk-abi-vla.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Fruntime%2Fconfig%2Fx86%2Fcilk-abi-vla.c?ref=fbdec79172bf97c510d5c436732e120e0f497c25", "patch": "@@ -58,15 +58,34 @@\n #include <assert.h>\n #include <stdlib.h>\n #include <stdint.h>\n-#ifdef _WIN32\n+\n+// Getting a definition for alloca appears to be a pain in the butt.  Here's\n+// a variant on what's recommended in the autoconf doc\n+#if defined _MSC_VER\n+# include <malloc.h>\n # define alloca _alloca\n+#elif defined HAVE_ALLOCA_H\n+# include <alloca.h>\n+#elif defined __GNUC__\n+# define alloca __builtin_alloca\n+#elif defined _AIX\n+# define alloca __alloca\n+#else\n+# include <stddef.h>\n+# ifdef  __cplusplus\n+extern \"C\"\n+# endif\n+void *alloca (size_t);\n+#endif\n+\n+#ifdef _WIN32\n # define INLINE static __inline\n # pragma warning(disable:1025)  // Don't whine about zero extending result of unary operation\n #else\n-# include <alloca.h>\n # define INLINE static inline\n #endif\n \n+\n #include \"internal/abi.h\"\n #include \"cilk-abi-vla-internal.h\"\n "}, {"sha": "1f82b6288a12a8a755025197728c16a87e3d36f0", "filename": "libcilkrts/runtime/sysdep-unix.c", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fbdec79172bf97c510d5c436732e120e0f497c25/libcilkrts%2Fruntime%2Fsysdep-unix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fbdec79172bf97c510d5c436732e120e0f497c25/libcilkrts%2Fruntime%2Fsysdep-unix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcilkrts%2Fruntime%2Fsysdep-unix.c?ref=fbdec79172bf97c510d5c436732e120e0f497c25", "patch": "@@ -80,7 +80,20 @@\n #include <string.h>\n #include <pthread.h>\n #include <unistd.h>\n-#include <alloca.h>\n+\n+#if defined HAVE_ALLOCA_H\n+# include <alloca.h>\n+#elif defined __GNUC__\n+# define alloca __builtin_alloca\n+#elif defined _AIX\n+# define alloca __alloca\n+#else\n+# include <stddef.h>\n+# ifdef  __cplusplus\n+extern \"C\"\n+# endif\n+void *alloca (size_t);\n+#endif\n \n #ifdef __APPLE__\n //#   include <scheduler.h>  // Angle brackets include Apple's scheduler.h, not ours."}]}