{"sha": "ecb3e9a46e306b4c3328627dddd3d2079dfe7d18", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZWNiM2U5YTQ2ZTMwNmI0YzMzMjg2MjdkZGRkM2QyMDc5ZGZlN2QxOA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2019-04-11T08:52:22Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2019-04-11T08:52:22Z"}, "message": "Clarify documentation for -flive-patching\n\n\t* doc/invoke.texi (Optimize Options): Clarify -flive-patching docs.\n\nFrom-SVN: r270276", "tree": {"sha": "e5f806ef56dec7e11070399e244a5ab5a92c4da3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e5f806ef56dec7e11070399e244a5ab5a92c4da3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ecb3e9a46e306b4c3328627dddd3d2079dfe7d18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecb3e9a46e306b4c3328627dddd3d2079dfe7d18", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ecb3e9a46e306b4c3328627dddd3d2079dfe7d18", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ecb3e9a46e306b4c3328627dddd3d2079dfe7d18/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bab738598b67b501fd1411ef43f9c9f36f13297", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3bab738598b67b501fd1411ef43f9c9f36f13297", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3bab738598b67b501fd1411ef43f9c9f36f13297"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "019fb3242f4aba62689057801a8f48abfadfb84d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecb3e9a46e306b4c3328627dddd3d2079dfe7d18/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecb3e9a46e306b4c3328627dddd3d2079dfe7d18/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ecb3e9a46e306b4c3328627dddd3d2079dfe7d18", "patch": "@@ -1,3 +1,7 @@\n+2019-04-11  Jonathan Wakely  <jwakely@redhat.com>\n+\n+\t* doc/invoke.texi (Optimize Options): Clarify -flive-patching docs.\n+\n 2019-04-11  Richard Biener  <rguenther@suse.de>\n \n \tPR tree-optimization/90020"}, {"sha": "3a88d8db15731072753a76658d12b864011a4097", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ecb3e9a46e306b4c3328627dddd3d2079dfe7d18/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ecb3e9a46e306b4c3328627dddd3d2079dfe7d18/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=ecb3e9a46e306b4c3328627dddd3d2079dfe7d18", "patch": "@@ -9367,24 +9367,24 @@ This flag is enabled by default at @option{-O2} and @option{-Os}.\n \n @item -flive-patching=@var{level}\n @opindex flive-patching\n-Control GCC's optimizations to provide a safe compilation for live-patching.\n+Control GCC's optimizations to produce output suitable for live-patching.\n \n If the compiler's optimization uses a function's body or information extracted\n from its body to optimize/change another function, the latter is called an\n impacted function of the former.  If a function is patched, its impacted\n functions should be patched too.\n \n-The impacted functions are decided by the compiler's interprocedural\n-optimizations.  For example, inlining a function into its caller, cloning\n-a function and changing its caller to call this new clone, or extracting\n-a function's pureness/constness information to optimize its direct or\n-indirect callers, etc.\n+The impacted functions are determined by the compiler's interprocedural\n+optimizations.  For example, a caller is impacted when inlining a function\n+into its caller,\n+cloning a function and changing its caller to call this new clone,\n+or extracting a function's pureness/constness information to optimize\n+its direct or indirect callers, etc.\n \n Usually, the more IPA optimizations enabled, the larger the number of\n impacted functions for each function.  In order to control the number of\n-impacted functions and computed the list of impacted function easily,\n-we provide control to partially enable IPA optimizations on two different\n-levels.\n+impacted functions and more easily compute the list of impacted function,\n+IPA optimizations can be partially enabled at two different levels.\n \n The @var{level} argument should be one of the following:\n \n@@ -9395,7 +9395,7 @@ The @var{level} argument should be one of the following:\n Only enable inlining and cloning optimizations, which includes inlining,\n cloning, interprocedural scalar replacement of aggregates and partial inlining.\n As a result, when patching a function, all its callers and its clones'\n-callers need to be patched as well.\n+callers are impacted, therefore need to be patched as well.\n \n @option{-flive-patching=inline-clone} disables the following optimization flags:\n @gccoptlist{-fwhole-program  -fipa-pta  -fipa-reference  -fipa-ra @gol\n@@ -9406,22 +9406,23 @@ callers need to be patched as well.\n @item inline-only-static\n \n Only enable inlining of static functions.\n-As a result, when patching a static function, all its callers need to be\n-patches as well.\n+As a result, when patching a static function, all its callers are impacted\n+and so need to be patched as well.\n \n-In addition to all the flags that -flive-patching=inline-clone disables,\n+In addition to all the flags that @option{-flive-patching=inline-clone}\n+disables,\n @option{-flive-patching=inline-only-static} disables the following additional\n optimization flags:\n @gccoptlist{-fipa-cp-clone  -fipa-sra  -fpartial-inlining  -fipa-cp}\n \n @end table\n \n-When -flive-patching specified without any value, the default value\n-is \"inline-clone\".\n+When @option{-flive-patching} is specified without any value, the default value\n+is @var{inline-clone}.\n \n This flag is disabled by default.\n \n-Note that -flive-patching is not supported with link-time optimizer.\n+Note that @option{-flive-patching} is not supported with link-time optimization\n (@option{-flto}).\n \n @item -fisolate-erroneous-paths-dereference"}]}