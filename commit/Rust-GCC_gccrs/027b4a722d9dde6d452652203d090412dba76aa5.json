{"sha": "027b4a722d9dde6d452652203d090412dba76aa5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDI3YjRhNzIyZDlkZGU2ZDQ1MjY1MjIwM2QwOTA0MTJkYmE3NmFhNQ==", "commit": {"author": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-09-09T14:12:07Z"}, "committer": {"name": "Michael Meissner", "email": "meissner@gcc.gnu.org", "date": "1992-09-09T14:12:07Z"}, "message": "Fix va_arg for structures larger than 8 bytes.\n\nFrom-SVN: r2089", "tree": {"sha": "a6b12791e30d25cf2ac67ab1db6ebed3b9c4f578", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a6b12791e30d25cf2ac67ab1db6ebed3b9c4f578"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/027b4a722d9dde6d452652203d090412dba76aa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/027b4a722d9dde6d452652203d090412dba76aa5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/027b4a722d9dde6d452652203d090412dba76aa5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/027b4a722d9dde6d452652203d090412dba76aa5/comments", "author": null, "committer": null, "parents": [{"sha": "f167e25de439ff2a737c9d35736760be9a8d15f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f167e25de439ff2a737c9d35736760be9a8d15f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f167e25de439ff2a737c9d35736760be9a8d15f2"}], "stats": {"total": 24, "additions": 13, "deletions": 11}, "files": [{"sha": "4222f8bf203262d52b881097ec04e185ca91f4f9", "filename": "gcc/ginclude/va-mips.h", "status": "modified", "additions": 13, "deletions": 11, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/027b4a722d9dde6d452652203d090412dba76aa5/gcc%2Fginclude%2Fva-mips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/027b4a722d9dde6d452652203d090412dba76aa5/gcc%2Fginclude%2Fva-mips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fginclude%2Fva-mips.h?ref=027b4a722d9dde6d452652203d090412dba76aa5", "patch": "@@ -29,29 +29,31 @@ typedef char * __gnuc_va_list;\n #define __va_ellipsis\n #endif\n \n-#define __va_rounded_size(TYPE)  \\\n-  (((sizeof (TYPE) + sizeof (int) - 1) / sizeof (int)) * sizeof (int))\n+#define __va_rounded_size(__TYPE)  \\\n+  (((sizeof (__TYPE) + sizeof (int) - 1) / sizeof (int)) * sizeof (int))\n \n #ifdef _STDARG_H\n-#define va_start(AP, LASTARG) \t\t\t\t\t\t\\\n- (AP = ((char *) &(LASTARG) + __va_rounded_size (LASTARG)))\n+#define va_start(__AP, __LASTARG) \t\t\t\t\t\t\\\n+ (__AP = ((char *) &(__LASTARG) + __va_rounded_size (__LASTARG)))\n+\n #else\n #define va_alist  __builtin_va_alist\n #define va_dcl    int __builtin_va_alist; __va_ellipsis\n-#define va_start(AP)  AP = (char *) &__builtin_va_alist\n+#define va_start(__AP)  __AP = (char *) &__builtin_va_alist\n #endif\n \n void va_end (__gnuc_va_list);\t\t/* Defined in libgcc.a */\n-#define va_end(AP)\n+#define va_end(__AP)\n \n #ifdef lint\t/* complains about constant in conditional context */\n-#define va_arg(list, mode) ((mode *)(list += sizeof(mode)))[-1]\n+#define va_arg(list, mode) ((mode *)(list += __va_rounded_size(mode)))[-1]\n \n #else\t\t/* !lint */\n-#define va_arg(AP, mode)\t\t\t\t\t\t\\\n-  ((mode *)(AP = (char *) (__alignof(mode) > 4\t\t\t\t\\\n-\t\t\t\t? ((int)AP + 2*8 - 1) & -8\t\t\\\n-\t\t\t\t: ((int)AP + 2*4 - 1) & -4)))[-1]\n+#define va_arg(__AP, __type)\t\t\t\t\t\t\\\n+  ((__type *)(__AP = (char *) ((__alignof(__type) > 4\t\t\t\\\n+\t\t\t\t? ((int)__AP + 8 - 1) & -8\t\t\\\n+\t\t\t\t: ((int)__AP + 4 - 1) & -4) \t\t\\\n+\t\t\t   + __va_rounded_size(__type))))[-1]\n #endif\t\t/* lint */\n \n #endif /* defined (_STDARG_H) || defined (_VARARGS_H) */"}]}