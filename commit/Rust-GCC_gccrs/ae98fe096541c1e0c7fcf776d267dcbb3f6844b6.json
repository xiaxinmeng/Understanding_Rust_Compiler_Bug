{"sha": "ae98fe096541c1e0c7fcf776d267dcbb3f6844b6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWU5OGZlMDk2NTQxYzFlMGM3ZmNmNzc2ZDI2N2RjYmIzZjY4NDRiNg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-30T01:12:29Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1993-05-30T01:12:29Z"}, "message": "(movdf for const_double): Handle loading a CONST_DOUBLE into general registers.\n\n(movdf for const_double): Handle loading\na CONST_DOUBLE into general registers.\n(movsf for const_double): Likewise.\n\nFrom-SVN: r4594", "tree": {"sha": "230ff9411285ef37b7ff7408d8aeb61ae81343f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/230ff9411285ef37b7ff7408d8aeb61ae81343f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae98fe096541c1e0c7fcf776d267dcbb3f6844b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae98fe096541c1e0c7fcf776d267dcbb3f6844b6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae98fe096541c1e0c7fcf776d267dcbb3f6844b6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae98fe096541c1e0c7fcf776d267dcbb3f6844b6/comments", "author": null, "committer": null, "parents": [{"sha": "7677ffa441be09b532d01eb5b0ee6cc5c2322375", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7677ffa441be09b532d01eb5b0ee6cc5c2322375", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7677ffa441be09b532d01eb5b0ee6cc5c2322375"}], "stats": {"total": 42, "additions": 34, "deletions": 8}, "files": [{"sha": "6bce6d79da5677a1b70c77eb25204faaa0c7e337", "filename": "gcc/config/pa/pa.md", "status": "modified", "additions": 34, "deletions": 8, "changes": 42, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae98fe096541c1e0c7fcf776d267dcbb3f6844b6/gcc%2Fconfig%2Fpa%2Fpa.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae98fe096541c1e0c7fcf776d267dcbb3f6844b6/gcc%2Fconfig%2Fpa%2Fpa.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fpa%2Fpa.md?ref=ae98fe096541c1e0c7fcf776d267dcbb3f6844b6", "patch": "@@ -1348,16 +1348,23 @@\n ;; Floating point move insns\n \n ;; This pattern forces (set (reg:DF ...) (const_double ...))\n-;; to be reloaded by putting the constant into memory.\n-;; It must come before the more general movdf pattern.\n-(define_insn \"\"\n-  [(set (match_operand:DF 0 \"general_operand\" \"=fx\")\n-\t(match_operand:DF 1 \"\" \"m\"))]\n+;; to be reloaded by putting the constant into memory when\n+;; reg is a floating point register.\n+;;\n+;; For integer registers we use ldil;ldo to set the appropriate\n+;; value.\n+;; \n+;; This must come before the movdf pattern, and it must be present\n+;; to handle obscure reloading cases.\n+(define_insn \"\"\n+  [(set (match_operand:DF 0 \"general_operand\" \"=?r,fx\")\n+\t(match_operand:DF 1 \"\" \"?E,m\"))]\n   \"GET_CODE (operands[1]) == CONST_DOUBLE\n    && operands[1] != CONST0_RTX (DFmode)\"\n-  \"fldds%F1 %1,%0\"\n-  [(set_attr \"type\" \"fpload\")\n-   (set_attr \"length\" \"1\")])\n+  \"* return (which_alternative == 0 ? output_move_double (operands)\n+\t\t\t\t    : \\\" fldds%F1 %1,%0\\\");\"\n+  [(set_attr \"type\" \"move,fpload\")\n+   (set_attr \"length\" \"4,1\")])\n \n (define_expand \"movdf\"\n   [(set (match_operand:DF 0 \"general_operand\" \"\")\n@@ -1522,6 +1529,25 @@\n   ;; is not an \"arith_operand\".\n   [(set_attr \"length\" \"1,2\")])\n \n+;; This pattern forces (set (reg:SF ...) (const_double ...))\n+;; to be reloaded by putting the constant into memory when\n+;; reg is a floating point register.\n+;;\n+;; For integer registers we use ldil;ldo to set the appropriate\n+;; value.\n+;; \n+;; This must come before the movsf pattern, and it must be present\n+;; to handle obscure reloading cases.\n+(define_insn \"\"\n+  [(set (match_operand:SF 0 \"general_operand\" \"=?r,fx\")\n+\t(match_operand:SF 1 \"\" \"?E,m\"))]\n+  \"GET_CODE (operands[1]) == CONST_DOUBLE\n+   && operands[1] != CONST0_RTX (SFmode)\"\n+  \"* return (which_alternative == 0 ? singlemove_string (operands)\n+\t\t\t\t    : \\\" fldws%F1 %1,%0\\\");\"\n+  [(set_attr \"type\" \"move,fpload\")\n+   (set_attr \"length\" \"2,1\")])\n+\n (define_expand \"movsf\"\n   [(set (match_operand:SF 0 \"general_operand\" \"\")\n \t(match_operand:SF 1 \"general_operand\" \"\"))]"}]}