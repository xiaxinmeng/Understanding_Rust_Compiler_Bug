{"sha": "e5440bc08e07fd491dcccd47e1b86a5985ee117c", "node_id": "C_kwDOANBUbNoAKGU1NDQwYmMwOGUwN2ZkNDkxZGNjY2Q0N2UxYjg2YTU5ODVlZTExN2M", "commit": {"author": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2021-11-30T17:45:11Z"}, "committer": {"name": "Martin Jambor", "email": "mjambor@suse.cz", "date": "2021-11-30T17:45:21Z"}, "message": "ipa-sra: Check also ECF_LOOPING_CONST_OR_PURE when evaluating calls\n\nin PR 103267 Honza found out that IPA-SRA does not look at\nECF_LOOPING_CONST_OR_PURE when evaluating if a call can have side\neffects.  Fixed with this patch.  The testcase infinitely loops in a\nconst function, so it would not make a good addition to the testsuite.\n\ngcc/ChangeLog:\n\n2021-11-29  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/103267\n\t* ipa-sra.c (scan_function): Also check ECF_LOOPING_CONST_OR_PURE flag.", "tree": {"sha": "2348faca18b82a098b00c49fa19a75f1572cbd6e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2348faca18b82a098b00c49fa19a75f1572cbd6e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5440bc08e07fd491dcccd47e1b86a5985ee117c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE5elVTFt/d09Vsoczv2PBvD+kNUAFAmGmYzEACgkQv2PBvD+k\nNUAb+w/+Nh5GDxNhrZNefFrQihJNk/Ioz4ZiOGxPbpq8N4mdPnX298YyFhEc9+Va\nZjCDwq655Q9DaFiK2FSRryzHvCLuS05lGgOs9ch0mrMOW8tDc6D0ZPoFbW3WVzzA\n86XGH5FFiPtPMxzQK3gDryinh5hWBRdNJhqdyyKN8GKLysGQO2TmXlcJV3NrTwu7\n3MApm7E6BIpduwDgkgcQXVH2Q67zak/Q09vpkb/3HOzFGu9vasu7o3PNyEAlQeGg\nK7MD/uthoBpryEedAG7VOLM9VP4rWudwXsWjXIGnV60fPsHVBGmdXizxP5Bnk7gA\n102V/UGdSsjGLNubw2UCKHbZqKIKQN94Q9V+Ff/EZo/Njuyy8R5HsQQawb+CSzhg\nsV43S7mWPXqZ+pyh3Bp/Zya0qmpJz73npi53965AW4vtrms3elNgh2yZbEjmy+pZ\nb857qyhxKCUhPv4PZl9+r5FOVt5Cixovj13/xCw/daMRnCzk0A7IgAc9NeACQr0B\nQ4MCJoRLgD4P4fFNdTjTQj/TmoDR+z4RFXGgrEPFt3fCnkxayp3NsLadnOXe9jOR\nO75QD35+Sq7RgeaqpT2URJZ3+Py8G7v5cAWrvG06vLlh9M1gb8dPN+6s08OptUrY\nQe2aLtRzrp1O7SRtCn1x/2DJl0vayWlvlXolYng0IhDJFplObq0=\n=VEk6\n-----END PGP SIGNATURE-----", "payload": "tree 2348faca18b82a098b00c49fa19a75f1572cbd6e\nparent 7057b8f8c2fbb7a2112705c2962d92b8ccef7c30\nauthor Martin Jambor <mjambor@suse.cz> 1638294311 +0100\ncommitter Martin Jambor <mjambor@suse.cz> 1638294321 +0100\n\nipa-sra: Check also ECF_LOOPING_CONST_OR_PURE when evaluating calls\n\nin PR 103267 Honza found out that IPA-SRA does not look at\nECF_LOOPING_CONST_OR_PURE when evaluating if a call can have side\neffects.  Fixed with this patch.  The testcase infinitely loops in a\nconst function, so it would not make a good addition to the testsuite.\n\ngcc/ChangeLog:\n\n2021-11-29  Martin Jambor  <mjambor@suse.cz>\n\n\tPR ipa/103267\n\t* ipa-sra.c (scan_function): Also check ECF_LOOPING_CONST_OR_PURE flag.\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5440bc08e07fd491dcccd47e1b86a5985ee117c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5440bc08e07fd491dcccd47e1b86a5985ee117c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5440bc08e07fd491dcccd47e1b86a5985ee117c/comments", "author": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jamborm", "id": 2180070, "node_id": "MDQ6VXNlcjIxODAwNzA=", "avatar_url": "https://avatars.githubusercontent.com/u/2180070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jamborm", "html_url": "https://github.com/jamborm", "followers_url": "https://api.github.com/users/jamborm/followers", "following_url": "https://api.github.com/users/jamborm/following{/other_user}", "gists_url": "https://api.github.com/users/jamborm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jamborm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jamborm/subscriptions", "organizations_url": "https://api.github.com/users/jamborm/orgs", "repos_url": "https://api.github.com/users/jamborm/repos", "events_url": "https://api.github.com/users/jamborm/events{/privacy}", "received_events_url": "https://api.github.com/users/jamborm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7057b8f8c2fbb7a2112705c2962d92b8ccef7c30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7057b8f8c2fbb7a2112705c2962d92b8ccef7c30", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7057b8f8c2fbb7a2112705c2962d92b8ccef7c30"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "12ccd04955200a3de8d84de13bc1d5890df9fc59", "filename": "gcc/ipa-sra.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5440bc08e07fd491dcccd47e1b86a5985ee117c/gcc%2Fipa-sra.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5440bc08e07fd491dcccd47e1b86a5985ee117c/gcc%2Fipa-sra.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-sra.c?ref=e5440bc08e07fd491dcccd47e1b86a5985ee117c", "patch": "@@ -1925,7 +1925,8 @@ scan_function (cgraph_node *node, struct function *fun)\n \t\tif (lhs)\n \t\t  scan_expr_access (lhs, stmt, ISRA_CTX_STORE, bb);\n \t\tint flags = gimple_call_flags (stmt);\n-\t\tif ((flags & (ECF_CONST | ECF_PURE)) == 0)\n+\t\tif (((flags & (ECF_CONST | ECF_PURE)) == 0)\n+\t\t    || (flags & ECF_LOOPING_CONST_OR_PURE))\n \t\t  bitmap_set_bit (final_bbs, bb->index);\n \t      }\n \t      break;"}]}