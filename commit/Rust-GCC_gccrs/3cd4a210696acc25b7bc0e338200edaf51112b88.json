{"sha": "3cd4a210696acc25b7bc0e338200edaf51112b88", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2NkNGEyMTA2OTZhY2MyNWI3YmMwZTMzODIwMGVkYWY1MTExMmI4OA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-10T12:43:38Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2013-10-10T12:43:38Z"}, "message": "[multiple changes]\n\n2013-10-10  Robert Dewar  <dewar@adacore.com>\n\n\t* lib-writ.adb (Write_Unit_Information): Fatal error if linker\n\toptions are detected in a predefined generic unit.\n\n2013-10-10  Thomas Quinot  <quinot@adacore.com>\n\n\t* s-oscons-tmplt.c (CLOCK_REALTIME): Always define, possibly using\n\ta dummy placeholder value.\n\t(NEED_PTHREAD_CONDATTR_SETCLOCK): Remove, not needed anymore.\n\t* thread.c: Adjust #if test accordingly.\n\n2013-10-10  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* exp_ch6.adb (Consequence_Error): Generate an\n\timplicit if statement.\n\t(Expand_Contract_Cases): Generate an implicit if statement.\n\t(Process_Contract_Cases): Do not expand Contract_Cases when no code\n\tis being generated.\n\n2013-10-10  Robert Dewar  <dewar@adacore.com>\n\n\t* sem_attr.adb (Address_Checks): New procedure.\n\n2013-10-10  Ed Schonberg  <schonberg@adacore.com>\n\n\t* sinfo.ads, sinfo.adb: New Node Freeze_Generic_Entity, to trigger\n\tsemantic actions at the proper point for entities that previously\n\thad no explicit freeze point.\n\t* freeze.adb (Freeze_Generic_Entities): generate new nodes to\n\tindicate the point at which semantic checks can be performed on\n\tentities declared in generic packages.\n\t* sem_ch13.ads, sem_ch13.adb: New procedure\n\tAnalyze_Freeze_Generic_Entity.\n\t* exp_util.adb (Insert_Actions): Treat new node like Freeze_Entity.\n\t* sem.adb (Analyze): Call Analyze_Freeze_Generic_Entity.\n\t* sprint.adb (Sprint_Node): display Analyze_Freeze_Generic_Entity.\n\t* gcc-interface/trans.c: Ignore Analyze_Freeze_Generic_Entity.\n\t* gcc-interface/Make-lang.in: Update dependencies.\n\nFrom-SVN: r203367", "tree": {"sha": "99e0d694578fa01b6d7d3d62fac6366d9edd538f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/99e0d694578fa01b6d7d3d62fac6366d9edd538f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3cd4a210696acc25b7bc0e338200edaf51112b88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cd4a210696acc25b7bc0e338200edaf51112b88", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3cd4a210696acc25b7bc0e338200edaf51112b88", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3cd4a210696acc25b7bc0e338200edaf51112b88/comments", "author": null, "committer": null, "parents": [{"sha": "882eadaf20ec8237cf91cd46fea4d856dda0b3c6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/882eadaf20ec8237cf91cd46fea4d856dda0b3c6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/882eadaf20ec8237cf91cd46fea4d856dda0b3c6"}], "stats": {"total": 605, "additions": 399, "deletions": 206}, "files": [{"sha": "5377a517ff649d051c95d4802a0874f48a7e6812", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=3cd4a210696acc25b7bc0e338200edaf51112b88", "patch": "@@ -1,3 +1,43 @@\n+2013-10-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* lib-writ.adb (Write_Unit_Information): Fatal error if linker\n+\toptions are detected in a predefined generic unit.\n+\n+2013-10-10  Thomas Quinot  <quinot@adacore.com>\n+\n+\t* s-oscons-tmplt.c (CLOCK_REALTIME): Always define, possibly using\n+\ta dummy placeholder value.\n+\t(NEED_PTHREAD_CONDATTR_SETCLOCK): Remove, not needed anymore.\n+\t* thread.c: Adjust #if test accordingly.\n+\n+2013-10-10  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* exp_ch6.adb (Consequence_Error): Generate an\n+\timplicit if statement.\n+\t(Expand_Contract_Cases): Generate an implicit if statement.\n+\t(Process_Contract_Cases): Do not expand Contract_Cases when no code\n+\tis being generated.\n+\n+2013-10-10  Robert Dewar  <dewar@adacore.com>\n+\n+\t* sem_attr.adb (Address_Checks): New procedure.\n+\n+2013-10-10  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* sinfo.ads, sinfo.adb: New Node Freeze_Generic_Entity, to trigger\n+\tsemantic actions at the proper point for entities that previously\n+\thad no explicit freeze point.\n+\t* freeze.adb (Freeze_Generic_Entities): generate new nodes to\n+\tindicate the point at which semantic checks can be performed on\n+\tentities declared in generic packages.\n+\t* sem_ch13.ads, sem_ch13.adb: New procedure\n+\tAnalyze_Freeze_Generic_Entity.\n+\t* exp_util.adb (Insert_Actions): Treat new node like Freeze_Entity.\n+\t* sem.adb (Analyze): Call Analyze_Freeze_Generic_Entity.\n+\t* sprint.adb (Sprint_Node): display Analyze_Freeze_Generic_Entity.\n+\t* gcc-interface/trans.c: Ignore Analyze_Freeze_Generic_Entity.\n+\t* gcc-interface/Make-lang.in: Update dependencies.\n+\n 2013-10-10  Robert Dewar  <dewar@adacore.com>\n \n \t* sem_aggr.adb (Resolve_Array_Aggregate): Identify duplicated"}, {"sha": "151d649c8c931927f77a1a2765355fbfc85c0ee9", "filename": "gcc/ada/exp_ch6.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fexp_ch6.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fexp_ch6.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_ch6.adb?ref=3cd4a210696acc25b7bc0e338200edaf51112b88", "patch": "@@ -4311,7 +4311,7 @@ package body Exp_Ch6 is\n \n          if No (Checks) then\n             Checks :=\n-              Make_If_Statement (Loc,\n+              Make_Implicit_If_Statement (CCs,\n                 Condition       => Cond,\n                 Then_Statements => New_List (Error));\n \n@@ -4481,7 +4481,7 @@ package body Exp_Ch6 is\n             --    end if;\n \n             Append_To (Decls,\n-              Make_If_Statement (Loc,\n+              Make_Implicit_If_Statement (CCs,\n                 Condition       => Relocate_Node (Case_Guard),\n                 Then_Statements => New_List (\n                   Set (Flag),\n@@ -4536,7 +4536,7 @@ package body Exp_Ch6 is\n       end if;\n \n       CG_Checks :=\n-        Make_If_Statement (Loc,\n+        Make_Implicit_If_Statement (CCs,\n           Condition       =>\n             Make_Op_Eq (Loc,\n               Left_Opnd  => New_Reference_To (Count, Loc),\n@@ -9419,7 +9419,7 @@ package body Exp_Ch6 is\n          --  generated.\n \n          if not Expander_Active then\n-            null;\n+            return;\n          end if;\n \n          Prag := Contract_Test_Cases (Contract (Subp_Id));"}, {"sha": "e067028a2a0bd4488e9c1da6638538be452a0fec", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=3cd4a210696acc25b7bc0e338200edaf51112b88", "patch": "@@ -3516,7 +3516,8 @@ package body Exp_Util is\n \n                --  Freeze entity behaves like a declaration or statement\n \n-               N_Freeze_Entity\n+               N_Freeze_Entity                          |\n+               N_Freeze_Generic_Entity\n             =>\n                --  Do not insert here if the item is not a list member (this\n                --  happens for example with a triggering statement, and the"}, {"sha": "68f400dbeb6ac4375218cb12e7f32c60dec0f0f9", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 42, "deletions": 2, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=3cd4a210696acc25b7bc0e338200edaf51112b88", "patch": "@@ -1698,6 +1698,10 @@ package body Freeze is\n       --  integer literal without an explicit corresponding size clause. The\n       --  caller has checked that Utype is a modular integer type.\n \n+      function Freeze_Generic_Entities (Pack : Entity_Id) return List_Id;\n+      --  Create Freeze_Generic_Entity nodes for types declared in a generic\n+      --  package. Recurse on inner generic packages.\n+\n       procedure Freeze_Record_Type (Rec : Entity_Id);\n       --  Freeze each component, handle some representation clauses, and freeze\n       --  primitive operations if this is a tagged type.\n@@ -1944,6 +1948,34 @@ package body Freeze is\n          end if;\n       end Check_Suspicious_Modulus;\n \n+      -----------------------------\n+      -- Freeze_Generic_Entities --\n+      -----------------------------\n+\n+      function Freeze_Generic_Entities (Pack : Entity_Id) return List_Id is\n+         E : Entity_Id;\n+         F : Node_Id;\n+         Flist : List_Id;\n+\n+      begin\n+         Flist := New_List;\n+         E := First_Entity (Pack);\n+         while Present (E) loop\n+            if Is_Type (E) and then not Is_Generic_Type (E) then\n+               F := Make_Freeze_Generic_Entity (Sloc (Pack));\n+               Set_Entity (F, E);\n+               Append_To (Flist, F);\n+\n+            elsif Ekind (E) = E_Generic_Package then\n+               Append_List_To (Flist, Freeze_Generic_Entities (E));\n+            end if;\n+\n+            Next_Entity (E);\n+         end loop;\n+\n+         return Flist;\n+      end Freeze_Generic_Entities;\n+\n       ------------------------\n       -- Freeze_Record_Type --\n       ------------------------\n@@ -2830,6 +2862,9 @@ package body Freeze is\n                return No_List;\n             end if;\n          end;\n+\n+      elsif Ekind (E) = E_Generic_Package then\n+         return Freeze_Generic_Entities (E);\n       end if;\n \n       --  Add checks to detect proper initialization of scalars that may appear\n@@ -3501,7 +3536,9 @@ package body Freeze is\n \n          if Present (Scope (E))\n            and then Is_Generic_Unit (Scope (E))\n-           and then not Has_Predicates (E)\n+           and then\n+             (not Has_Predicates (E)\n+               and then not Has_Delayed_Freeze (E))\n          then\n             Check_Compile_Time_Size (E);\n             return No_List;\n@@ -4244,7 +4281,9 @@ package body Freeze is\n          --  for the case of a private type with record extension (we will do\n          --  that later when the full type is frozen).\n \n-         elsif Ekind_In (E, E_Record_Type, E_Record_Subtype) then\n+         elsif Ekind_In (E, E_Record_Type, E_Record_Subtype)\n+           and then not Is_Generic_Unit (Scope (E))\n+         then\n             Freeze_Record_Type (E);\n \n          --  For a concurrent type, freeze corresponding record type. This\n@@ -4548,6 +4587,7 @@ package body Freeze is\n             if Is_Pure_Unit_Access_Type (E)\n               and then (Ada_Version < Ada_2005\n                          or else not No_Pool_Assigned (E))\n+              and then not Is_Generic_Unit (Scope (E))\n             then\n                Error_Msg_N (\"named access type not allowed in pure unit\", E);\n "}, {"sha": "835eda6270c26147854fc19a027d32abe8f3104c", "filename": "gcc/ada/gcc-interface/Make-lang.in", "status": "modified", "additions": 48, "deletions": 46, "changes": 94, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fgcc-interface%2FMake-lang.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMake-lang.in?ref=3cd4a210696acc25b7bc0e338200edaf51112b88", "patch": "@@ -1412,7 +1412,7 @@ ada/errout.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n \n ada/erroutc.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n-   ada/atree.adb ada/casing.ads ada/debug.ads ada/einfo.ads \\\n+   ada/atree.adb ada/casing.ads ada/csets.ads ada/debug.ads ada/einfo.ads \\\n    ada/err_vars.ads ada/erroutc.ads ada/erroutc.adb ada/gnat.ads \\\n    ada/g-byorma.ads ada/hostparm.ads ada/interfac.ads ada/namet.ads \\\n    ada/namet.adb ada/nlists.ads ada/opt.ads ada/output.ads ada/output.adb \\\n@@ -1747,10 +1747,11 @@ ada/exp_ch6.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/exp_util.ads ada/exp_util.adb ada/exp_vfpt.ads ada/expander.ads \\\n    ada/fname.ads ada/fname-uf.ads ada/freeze.ads ada/get_targ.ads \\\n    ada/gnat.ads ada/g-hesorg.ads ada/g-htable.ads ada/hostparm.ads \\\n-   ada/inline.ads ada/itypes.ads ada/layout.ads ada/lib.ads ada/lib.adb \\\n-   ada/lib-list.adb ada/lib-load.ads ada/lib-sort.adb ada/lib-util.ads \\\n-   ada/lib-xref.ads ada/namet.ads ada/namet-sp.ads ada/nlists.ads \\\n-   ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads \\\n+   ada/inline.ads ada/interfac.ads ada/itypes.ads ada/layout.ads \\\n+   ada/lib.ads ada/lib.adb ada/lib-list.adb ada/lib-load.ads \\\n+   ada/lib-sort.adb ada/lib-util.ads ada/lib-xref.ads ada/namet.ads \\\n+   ada/namet.adb ada/namet-sp.ads ada/nlists.ads ada/nlists.adb \\\n+   ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads \\\n    ada/put_spark_xrefs.ads ada/restrict.ads ada/restrict.adb \\\n    ada/rident.ads ada/rtsfind.ads ada/rtsfind.adb ada/scans.ads \\\n    ada/scil_ll.ads ada/sem.ads ada/sem.adb ada/sem_attr.ads \\\n@@ -3404,24 +3405,24 @@ ada/sem_ch13.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/nlists.adb ada/nmake.ads ada/nmake.adb ada/opt.ads ada/output.ads \\\n    ada/put_spark_xrefs.ads ada/restrict.ads ada/rident.ads ada/rtsfind.ads \\\n    ada/rtsfind.adb ada/scans.ads ada/sem.ads ada/sem_attr.ads \\\n-   ada/sem_aux.ads ada/sem_aux.adb ada/sem_cat.ads ada/sem_ch13.ads \\\n-   ada/sem_ch13.adb ada/sem_ch3.ads ada/sem_ch6.ads ada/sem_ch7.ads \\\n-   ada/sem_ch8.ads ada/sem_ch9.ads ada/sem_dim.ads ada/sem_disp.ads \\\n-   ada/sem_dist.ads ada/sem_eval.ads ada/sem_eval.adb ada/sem_prag.ads \\\n-   ada/sem_res.ads ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb \\\n-   ada/sem_warn.ads ada/set_targ.ads ada/sinfo.ads ada/sinfo.adb \\\n-   ada/sinput.ads ada/snames.ads ada/stand.ads ada/stringt.ads \\\n-   ada/style.ads ada/styleg.ads ada/styleg.adb ada/stylesw.ads \\\n-   ada/system.ads ada/s-assert.ads ada/s-exctab.ads ada/s-exctab.adb \\\n-   ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads ada/s-os_lib.ads \\\n-   ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads ada/s-soflin.ads \\\n-   ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads ada/s-stoele.adb \\\n-   ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads ada/s-wchcon.ads \\\n-   ada/table.ads ada/table.adb ada/targparm.ads ada/tbuild.ads \\\n-   ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads ada/types.ads \\\n-   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n-   ada/unchdeal.ads ada/urealp.ads ada/urealp.adb ada/validsw.ads \\\n-   ada/warnsw.ads ada/widechar.ads \n+   ada/sem_aux.ads ada/sem_aux.adb ada/sem_case.ads ada/sem_case.adb \\\n+   ada/sem_cat.ads ada/sem_ch13.ads ada/sem_ch13.adb ada/sem_ch3.ads \\\n+   ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads ada/sem_ch9.ads \\\n+   ada/sem_dim.ads ada/sem_disp.ads ada/sem_dist.ads ada/sem_eval.ads \\\n+   ada/sem_eval.adb ada/sem_prag.ads ada/sem_res.ads ada/sem_type.ads \\\n+   ada/sem_util.ads ada/sem_util.adb ada/sem_warn.ads ada/set_targ.ads \\\n+   ada/sinfo.ads ada/sinfo.adb ada/sinput.ads ada/snames.ads ada/stand.ads \\\n+   ada/stringt.ads ada/style.ads ada/styleg.ads ada/styleg.adb \\\n+   ada/stylesw.ads ada/system.ads ada/s-assert.ads ada/s-exctab.ads \\\n+   ada/s-exctab.adb ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n+   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n+   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n+   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n+   ada/s-wchcon.ads ada/table.ads ada/table.adb ada/targparm.ads \\\n+   ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads ada/ttypes.ads \\\n+   ada/types.ads ada/uintp.ads ada/uintp.adb ada/uname.ads \\\n+   ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads ada/urealp.adb \\\n+   ada/validsw.ads ada/warnsw.ads ada/widechar.ads \n \n ada/sem_ch2.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\\n@@ -3909,29 +3910,30 @@ ada/sem_prag.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/restrict.ads ada/restrict.adb ada/rident.ads ada/rtsfind.ads \\\n    ada/scans.ads ada/scn.ads ada/scng.ads ada/scng.adb ada/sem.ads \\\n    ada/sem.adb ada/sem_aggr.ads ada/sem_attr.ads ada/sem_aux.ads \\\n-   ada/sem_aux.adb ada/sem_cat.ads ada/sem_ch10.ads ada/sem_ch11.ads \\\n-   ada/sem_ch12.ads ada/sem_ch13.ads ada/sem_ch13.adb ada/sem_ch2.ads \\\n-   ada/sem_ch3.ads ada/sem_ch4.ads ada/sem_ch5.ads ada/sem_ch6.ads \\\n-   ada/sem_ch7.ads ada/sem_ch8.ads ada/sem_ch9.ads ada/sem_dim.ads \\\n-   ada/sem_disp.ads ada/sem_dist.ads ada/sem_elab.ads ada/sem_elim.ads \\\n-   ada/sem_eval.ads ada/sem_eval.adb ada/sem_intr.ads ada/sem_mech.ads \\\n-   ada/sem_prag.ads ada/sem_prag.adb ada/sem_res.ads ada/sem_res.adb \\\n-   ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb ada/sem_vfpt.ads \\\n-   ada/sem_warn.ads ada/sem_warn.adb ada/set_targ.ads ada/sinfo.ads \\\n-   ada/sinfo.adb ada/sinfo-cn.ads ada/sinput.ads ada/sinput.adb \\\n-   ada/snames.ads ada/snames.adb ada/sprint.ads ada/stand.ads \\\n-   ada/stringt.ads ada/stringt.adb ada/style.ads ada/styleg.ads \\\n-   ada/styleg.adb ada/stylesw.ads ada/system.ads ada/s-assert.ads \\\n-   ada/s-casuti.ads ada/s-carun8.ads ada/s-crc32.ads ada/s-exctab.ads \\\n-   ada/s-exctab.adb ada/s-htable.ads ada/s-imenne.ads ada/s-memory.ads \\\n-   ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads ada/s-secsta.ads \\\n-   ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads ada/s-stoele.ads \\\n-   ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads ada/s-unstyp.ads \\\n-   ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads ada/table.adb \\\n-   ada/targparm.ads ada/tbuild.ads ada/tbuild.adb ada/tree_io.ads \\\n-   ada/ttypes.ads ada/types.ads ada/types.adb ada/uintp.ads ada/uintp.adb \\\n-   ada/uname.ads ada/unchconv.ads ada/unchdeal.ads ada/urealp.ads \\\n-   ada/urealp.adb ada/validsw.ads ada/warnsw.ads ada/widechar.ads \n+   ada/sem_aux.adb ada/sem_case.ads ada/sem_cat.ads ada/sem_ch10.ads \\\n+   ada/sem_ch11.ads ada/sem_ch12.ads ada/sem_ch13.ads ada/sem_ch13.adb \\\n+   ada/sem_ch2.ads ada/sem_ch3.ads ada/sem_ch4.ads ada/sem_ch5.ads \\\n+   ada/sem_ch6.ads ada/sem_ch7.ads ada/sem_ch8.ads ada/sem_ch9.ads \\\n+   ada/sem_dim.ads ada/sem_disp.ads ada/sem_dist.ads ada/sem_elab.ads \\\n+   ada/sem_elim.ads ada/sem_eval.ads ada/sem_eval.adb ada/sem_intr.ads \\\n+   ada/sem_mech.ads ada/sem_prag.ads ada/sem_prag.adb ada/sem_res.ads \\\n+   ada/sem_res.adb ada/sem_type.ads ada/sem_util.ads ada/sem_util.adb \\\n+   ada/sem_vfpt.ads ada/sem_warn.ads ada/sem_warn.adb ada/set_targ.ads \\\n+   ada/sinfo.ads ada/sinfo.adb ada/sinfo-cn.ads ada/sinput.ads \\\n+   ada/sinput.adb ada/snames.ads ada/snames.adb ada/sprint.ads \\\n+   ada/stand.ads ada/stringt.ads ada/stringt.adb ada/style.ads \\\n+   ada/styleg.ads ada/styleg.adb ada/stylesw.ads ada/system.ads \\\n+   ada/s-assert.ads ada/s-casuti.ads ada/s-carun8.ads ada/s-crc32.ads \\\n+   ada/s-exctab.ads ada/s-exctab.adb ada/s-htable.ads ada/s-imenne.ads \\\n+   ada/s-memory.ads ada/s-os_lib.ads ada/s-parame.ads ada/s-rident.ads \\\n+   ada/s-secsta.ads ada/s-soflin.ads ada/s-stache.ads ada/s-stalib.ads \\\n+   ada/s-stoele.ads ada/s-stoele.adb ada/s-string.ads ada/s-traent.ads \\\n+   ada/s-unstyp.ads ada/s-utf_32.ads ada/s-wchcon.ads ada/table.ads \\\n+   ada/table.adb ada/targparm.ads ada/tbuild.ads ada/tbuild.adb \\\n+   ada/tree_io.ads ada/ttypes.ads ada/types.ads ada/types.adb \\\n+   ada/uintp.ads ada/uintp.adb ada/uname.ads ada/unchconv.ads \\\n+   ada/unchdeal.ads ada/urealp.ads ada/urealp.adb ada/validsw.ads \\\n+   ada/warnsw.ads ada/widechar.ads \n \n ada/sem_res.o : ada/ada.ads ada/a-except.ads ada/a-unccon.ads \\\n    ada/a-uncdea.ads ada/alloc.ads ada/aspects.ads ada/atree.ads \\"}, {"sha": "f97112ce3999e607fcc05c9b0a58f6a0bea84f51", "filename": "gcc/ada/gcc-interface/trans.c", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fgcc-interface%2Ftrans.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2Ftrans.c?ref=3cd4a210696acc25b7bc0e338200edaf51112b88", "patch": "@@ -6988,6 +6988,10 @@ gnat_to_gnu (Node_Id gnat_node)\n       gnu_result = end_stmt_group ();\n       break;\n \n+    case N_Freeze_Generic_Entity:\n+      gnu_result = alloc_stmt_list ();\n+      break;\n+\n     case N_Itype_Reference:\n       if (!present_gnu_tree (Itype (gnat_node)))\n \tprocess_type (Itype (gnat_node));"}, {"sha": "afc83d98b909b1e4b5ba36585e72890b734f9ec3", "filename": "gcc/ada/lib-writ.adb", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Flib-writ.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Flib-writ.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flib-writ.adb?ref=3cd4a210696acc25b7bc0e338200edaf51112b88", "patch": "@@ -38,6 +38,7 @@ with Gnatvsn;  use Gnatvsn;\n with Opt;      use Opt;\n with Osint;    use Osint;\n with Osint.C;  use Osint.C;\n+with Output;   use Output;\n with Par;\n with Par_SCO;  use Par_SCO;\n with Restrict; use Restrict;\n@@ -615,9 +616,27 @@ package body Lib.Writ is\n \n          Write_With_Lines;\n \n-         --  Output linker option lines\n+         --  Generate the linker option lines\n \n          for J in 1 .. Linker_Option_Lines.Last loop\n+\n+            --  Pragma Linker_Options is not allowed in predefined generic\n+            --  units. This is because they won't be read, due to the fact that\n+            --  with lines for generic units lack the file name and lib name\n+            --  parameters (see Lib_Writ spec for an explanation).\n+\n+            if Is_Generic_Unit (Cunit_Entity (Main_Unit))\n+              and then\n+                Is_Predefined_File_Name (Unit_File_Name (Current_Sem_Unit))\n+            then\n+               Set_Standard_Error;\n+               Write_Line\n+                 (\"linker options not allowed in predefined generic unit\");\n+               raise Unrecoverable_Error;\n+            end if;\n+\n+            --  Output one linker option line\n+\n             declare\n                S : Linker_Option_Entry renames Linker_Option_Lines.Table (J);\n             begin"}, {"sha": "6f018f8ea7a6ed50608fbaa9e8067b70d6c33be6", "filename": "gcc/ada/s-oscons-tmplt.c", "status": "modified", "additions": 8, "deletions": 15, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fs-oscons-tmplt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fs-oscons-tmplt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-oscons-tmplt.c?ref=3cd4a210696acc25b7bc0e338200edaf51112b88", "patch": "@@ -1389,8 +1389,8 @@ CST(Inet_Pton_Linkname, \"\")\n \n /* Note: On HP-UX, CLOCK_REALTIME is an enum, not a macro. */\n \n-#if !(defined (__hpux__) || defined (CLOCK_REALTIME))\n-# define CLOCK_REALTIME -1\n+#if !(defined(CLOCK_REALTIME) || defined (__hpux__))\n+# define CLOCK_REALTIME (-1)\n #endif\n CND(CLOCK_REALTIME, \"System realtime clock\")\n \n@@ -1407,41 +1407,32 @@ CND(CLOCK_FASTEST, \"Fastest clock\")\n #endif\n CND(CLOCK_THREAD_CPUTIME_ID, \"Thread CPU clock\")\n \n-#if defined(__APPLE__)\n-/* There's no clock_gettime or clock_id's on Darwin, generate a dummy value */\n-# define CLOCK_RT_Ada \"-1\"\n \n-#elif defined(__FreeBSD__) || defined(_AIX)\n+#if defined(__FreeBSD__) || defined(_AIX)\n /** On these platforms use system provided monotonic clock instead of\n- ** the default CLOCK_REALTIME. We then need to set up cond var attributes\n- ** appropriately (see thread.c).\n+ ** the default CLOCK_REALTIME. Note: We then need to set up cond var\n+ ** attributes appropriately (see thread.c).\n  **/\n # define CLOCK_RT_Ada \"CLOCK_MONOTONIC\"\n-# define NEED_PTHREAD_CONDATTR_SETCLOCK 1\n \n-#elif defined(HAVE_CLOCK_REALTIME)\n+#else\n /* By default use CLOCK_REALTIME */\n # define CLOCK_RT_Ada \"CLOCK_REALTIME\"\n #endif\n \n #ifdef CLOCK_RT_Ada\n CNS(CLOCK_RT_Ada, \"\")\n #endif\n-#ifdef NEED_PTHREAD_CONDATTR_SETCLOCK\n-CND(NEED_PTHREAD_CONDATTR_SETCLOCK, \"\")\n-#endif\n \n #if defined (__APPLE__) || defined (__linux__) || defined (DUMMY)\n /*\n \n    --  Sizes of pthread data types\n-\n */\n \n #if defined (__APPLE__) || defined (DUMMY)\n /*\n    --  (on Darwin, these are just placeholders)\n-\n */\n #define PTHREAD_SIZE            __PTHREAD_SIZE__\n #define PTHREAD_ATTR_SIZE       __PTHREAD_ATTR_SIZE__\n@@ -1463,7 +1454,9 @@ CND(NEED_PTHREAD_CONDATTR_SETCLOCK, \"\")\n #define PTHREAD_RWLOCK_SIZE     (sizeof (pthread_rwlock_t))\n #define PTHREAD_ONCE_SIZE       (sizeof (pthread_once_t))\n #endif\n+/*\n \n+*/\n CND(PTHREAD_SIZE,            \"pthread_t\")\n CND(PTHREAD_ATTR_SIZE,       \"pthread_attr_t\")\n CND(PTHREAD_MUTEXATTR_SIZE,  \"pthread_mutexattr_t\")"}, {"sha": "6094b14f438f571b868a6ca29fac8798e5e9e931", "filename": "gcc/ada/sem.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fsem.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fsem.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem.adb?ref=3cd4a210696acc25b7bc0e338200edaf51112b88", "patch": "@@ -242,6 +242,9 @@ package body Sem is\n          when N_Freeze_Entity =>\n             Analyze_Freeze_Entity (N);\n \n+         when N_Freeze_Generic_Entity =>\n+            Analyze_Freeze_Generic_Entity (N);\n+\n          when N_Full_Type_Declaration =>\n             Analyze_Full_Type_Declaration (N);\n "}, {"sha": "dec94a3967b4d043211f30fdb1f7f4989c10feb1", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 166, "deletions": 131, "changes": 297, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=3cd4a210696acc25b7bc0e338200edaf51112b88", "patch": "@@ -212,6 +212,12 @@ package body Sem_Attr is\n       -- Local Subprograms --\n       -----------------------\n \n+      procedure Address_Checks;\n+      --  Semantic checks for valid use of Address attribute. This was made\n+      --  a separate routine with the idea of using it for unrestricted access\n+      --  which seems like it should follow the same rules, but that turned\n+      --  out to be impractical. So now this is only used for Address.\n+\n       procedure Analyze_Access_Attribute;\n       --  Used for Access, Unchecked_Access, Unrestricted_Access attributes.\n       --  Internally, Id distinguishes which of the three cases is involved.\n@@ -395,6 +401,150 @@ package body Sem_Attr is\n       --  non-scalar arguments or returns a non-scalar result. Verifies that\n       --  such a call does not appear in a preelaborable context.\n \n+      --------------------\n+      -- Address_Checks --\n+      --------------------\n+\n+      procedure Address_Checks is\n+      begin\n+         --  An Address attribute created by expansion is legal even when it\n+         --  applies to other entity-denoting expressions.\n+\n+         if not Comes_From_Source (N) then\n+            return;\n+\n+         --  Address attribute on a protected object self reference is legal\n+\n+         elsif Is_Protected_Self_Reference (P) then\n+            return;\n+\n+         --  Address applied to an entity\n+\n+         elsif Is_Entity_Name (P) then\n+            declare\n+               Ent : constant Entity_Id := Entity (P);\n+\n+            begin\n+               if Is_Subprogram (Ent) then\n+                  Set_Address_Taken (Ent);\n+                  Kill_Current_Values (Ent);\n+\n+                  --  An Address attribute is accepted when generated by the\n+                  --  compiler for dispatching operation, and an error is\n+                  --  issued once the subprogram is frozen (to avoid confusing\n+                  --  errors about implicit uses of Address in the dispatch\n+                  --  table initialization).\n+\n+                  if Has_Pragma_Inline_Always (Entity (P))\n+                    and then Comes_From_Source (P)\n+                  then\n+                     Error_Attr_P\n+                       (\"prefix of % attribute cannot be Inline_Always \"\n+                        & \"subprogram\");\n+\n+                  --  It is illegal to apply 'Address to an intrinsic\n+                  --  subprogram. This is now formalized in AI05-0095.\n+                  --  In an instance, an attempt to obtain 'Address of an\n+                  --  intrinsic subprogram (e.g the renaming of a predefined\n+                  --  operator that is an actual) raises Program_Error.\n+\n+                  elsif Convention (Ent) = Convention_Intrinsic then\n+                     if In_Instance then\n+                        Rewrite (N,\n+                          Make_Raise_Program_Error (Loc,\n+                            Reason => PE_Address_Of_Intrinsic));\n+\n+                     else\n+                        Error_Msg_N\n+                         (\"cannot take % of intrinsic subprogram\", N);\n+                     end if;\n+\n+                  --  Issue an error if prefix denotes an eliminated subprogram\n+\n+                  else\n+                     Check_For_Eliminated_Subprogram (P, Ent);\n+                  end if;\n+\n+               --  Object or label reference\n+\n+               elsif Is_Object (Ent) or else Ekind (Ent) = E_Label then\n+                  Set_Address_Taken (Ent);\n+\n+                  --  Deal with No_Implicit_Aliasing restriction\n+\n+                  if Restriction_Check_Required (No_Implicit_Aliasing) then\n+                     if not Is_Aliased_View (P) then\n+                        Check_Restriction (No_Implicit_Aliasing, P);\n+                     else\n+                        Check_No_Implicit_Aliasing (P);\n+                     end if;\n+                  end if;\n+\n+                  --  If we have an address of an object, and the attribute\n+                  --  comes from source, then set the object as potentially\n+                  --  source modified. We do this because the resulting address\n+                  --  can potentially be used to modify the variable and we\n+                  --  might not detect this, leading to some junk warnings.\n+\n+                  Set_Never_Set_In_Source (Ent, False);\n+\n+               --  Allow Address to be applied to task or protected type,\n+               --  returning null address (what is that about???)\n+\n+               elsif (Is_Concurrent_Type (Etype (Ent))\n+                       and then Etype (Ent) = Base_Type (Ent))\n+                 or else Ekind (Ent) = E_Package\n+                 or else Is_Generic_Unit (Ent)\n+               then\n+                  Rewrite (N,\n+                    New_Occurrence_Of (RTE (RE_Null_Address), Sloc (N)));\n+\n+               --  Anything else is illegal\n+\n+               else\n+                  Error_Attr (\"invalid prefix for % attribute\", P);\n+               end if;\n+            end;\n+\n+         --  Allow Address if the prefix is a reference to the AST_Entry\n+         --  attribute. If expansion is active, the attribute will be\n+         --  replaced by a function call, and address will work fine and\n+         --  get the proper value, but if expansion is not active, then\n+         --  the check here allows proper semantic analysis of the reference.\n+\n+         elsif Nkind (P) = N_Attribute_Reference\n+           and then Attribute_Name (P) = Name_AST_Entry\n+         then\n+            Rewrite (N,\n+                     New_Occurrence_Of (RTE (RE_Null_Address), Sloc (N)));\n+\n+         --  Object is OK\n+\n+         elsif Is_Object_Reference (P) then\n+            return;\n+\n+         --  Subprogram called using dot notation\n+\n+         elsif Nkind (P) = N_Selected_Component\n+           and then Is_Subprogram (Entity (Selector_Name (P)))\n+         then\n+            return;\n+\n+         --  What exactly are we allowing here ??? and is this properly\n+         --  documented in the sinfo documentation for this node ???\n+\n+         elsif Relaxed_RM_Semantics\n+           and then Nkind (P) = N_Attribute_Reference\n+         then\n+            return;\n+\n+         --  All other non-entity name cases are illegal\n+\n+         else\n+            Error_Attr (\"invalid prefix for % attribute\", P);\n+         end if;\n+      end Address_Checks;\n+\n       ------------------------------\n       -- Analyze_Access_Attribute --\n       ------------------------------\n@@ -2310,136 +2460,7 @@ package body Sem_Attr is\n \n       when Attribute_Address =>\n          Check_E0;\n-\n-         --  Check for some junk cases, where we have to allow the address\n-         --  attribute but it does not make much sense, so at least for now\n-         --  just replace with Null_Address.\n-\n-         --  We also do this if the prefix is a reference to the AST_Entry\n-         --  attribute. If expansion is active, the attribute will be\n-         --  replaced by a function call, and address will work fine and\n-         --  get the proper value, but if expansion is not active, then\n-         --  the check here allows proper semantic analysis of the reference.\n-\n-         --  An Address attribute created by expansion is legal even when it\n-         --  applies to other entity-denoting expressions.\n-\n-         if Is_Protected_Self_Reference (P) then\n-\n-            --  Address attribute on a protected object self reference is legal\n-\n-            null;\n-\n-         elsif Is_Entity_Name (P) then\n-            declare\n-               Ent : constant Entity_Id := Entity (P);\n-\n-            begin\n-               if Is_Subprogram (Ent) then\n-                  Set_Address_Taken (Ent);\n-                  Kill_Current_Values (Ent);\n-\n-                  --  An Address attribute is accepted when generated by the\n-                  --  compiler for dispatching operation, and an error is\n-                  --  issued once the subprogram is frozen (to avoid confusing\n-                  --  errors about implicit uses of Address in the dispatch\n-                  --  table initialization).\n-\n-                  if Has_Pragma_Inline_Always (Entity (P))\n-                    and then Comes_From_Source (P)\n-                  then\n-                     Error_Attr_P\n-                       (\"prefix of % attribute cannot be Inline_Always\" &\n-                        \" subprogram\");\n-\n-                  --  It is illegal to apply 'Address to an intrinsic\n-                  --  subprogram. This is now formalized in AI05-0095.\n-                  --  In an instance, an attempt to obtain 'Address of an\n-                  --  intrinsic subprogram (e.g the renaming of a predefined\n-                  --  operator that is an actual) raises Program_Error.\n-\n-                  elsif Convention (Ent) = Convention_Intrinsic then\n-                     if In_Instance then\n-                        Rewrite (N,\n-                          Make_Raise_Program_Error (Loc,\n-                            Reason => PE_Address_Of_Intrinsic));\n-\n-                     else\n-                        Error_Msg_N\n-                         (\"cannot take Address of intrinsic subprogram\", N);\n-                     end if;\n-\n-                  --  Issue an error if prefix denotes an eliminated subprogram\n-\n-                  else\n-                     Check_For_Eliminated_Subprogram (P, Ent);\n-                  end if;\n-\n-               elsif Is_Object (Ent)\n-                 or else Ekind (Ent) = E_Label\n-               then\n-                  Set_Address_Taken (Ent);\n-\n-                  --  Deal with No_Implicit_Aliasing restriction\n-\n-                  if Restriction_Check_Required (No_Implicit_Aliasing) then\n-                     if not Is_Aliased_View (P) then\n-                        Check_Restriction (No_Implicit_Aliasing, P);\n-                     else\n-                        Check_No_Implicit_Aliasing (P);\n-                     end if;\n-                  end if;\n-\n-                  --  If we have an address of an object, and the attribute\n-                  --  comes from source, then set the object as potentially\n-                  --  source modified. We do this because the resulting address\n-                  --  can potentially be used to modify the variable and we\n-                  --  might not detect this, leading to some junk warnings.\n-\n-                  Set_Never_Set_In_Source (Ent, False);\n-\n-               elsif (Is_Concurrent_Type (Etype (Ent))\n-                       and then Etype (Ent) = Base_Type (Ent))\n-                 or else Ekind (Ent) = E_Package\n-                 or else Is_Generic_Unit (Ent)\n-               then\n-                  Rewrite (N,\n-                    New_Occurrence_Of (RTE (RE_Null_Address), Sloc (N)));\n-\n-               else\n-                  Error_Attr (\"invalid prefix for % attribute\", P);\n-               end if;\n-            end;\n-\n-         elsif Nkind (P) = N_Attribute_Reference\n-           and then Attribute_Name (P) = Name_AST_Entry\n-         then\n-            Rewrite (N,\n-              New_Occurrence_Of (RTE (RE_Null_Address), Sloc (N)));\n-\n-         elsif Is_Object_Reference (P) then\n-            null;\n-\n-         elsif Nkind (P) = N_Selected_Component\n-           and then Is_Subprogram (Entity (Selector_Name (P)))\n-         then\n-            null;\n-\n-         --  What exactly are we allowing here ??? and is this properly\n-         --  documented in the sinfo documentation for this node ???\n-\n-         elsif not Comes_From_Source (N) then\n-            null;\n-\n-         elsif Relaxed_RM_Semantics\n-           and then Nkind (P) = N_Attribute_Reference\n-         then\n-            null;\n-\n-         else\n-            Error_Attr (\"invalid prefix for % attribute\", P);\n-         end if;\n-\n+         Address_Checks;\n          Set_Etype (N, RTE (RE_Address));\n \n       ------------------\n@@ -5799,7 +5820,9 @@ package body Sem_Attr is\n       -------------------------\n \n       --  This is a GNAT specific attribute which is like Access except that\n-      --  all scope checks and checks for aliased views are omitted.\n+      --  all scope checks and checks for aliased views are omitted. It is\n+      --  documented as being equivalent to the use of the Address attribute\n+      --  followed by an unchecked conversion to the target access type.\n \n       when Attribute_Unrestricted_Access =>\n \n@@ -5820,6 +5843,18 @@ package body Sem_Attr is\n             Set_Address_Taken (Entity (P));\n          end if;\n \n+         --  It might seem reasonable to call Address_Checks here to apply the\n+         --  same set of semantic checks that we enforce for 'Address (after\n+         --  all we document Unrestricted_Access as being equivalent to the\n+         --  use of Address followed by an Unchecked_Conversion). However, if\n+         --  we do enable these checks, we get multiple failures in both the\n+         --  compiler run-time and in our regression test suite, so we leave\n+         --  out these checks for now. To be investigated further some time???\n+\n+         --  Address_Checks;\n+\n+         --  Now complete analysis using common access processing\n+\n          Analyze_Access_Attribute;\n \n       ------------"}, {"sha": "0f6ea38bd2d938f3a6d03b1042d90bc50be22d85", "filename": "gcc/ada/sem_ch13.adb", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fsem_ch13.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fsem_ch13.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.adb?ref=3cd4a210696acc25b7bc0e338200edaf51112b88", "patch": "@@ -5421,6 +5421,16 @@ package body Sem_Ch13 is\n       end if;\n    end Analyze_Freeze_Entity;\n \n+   -----------------------------------\n+   -- Analyze_Freeze_Generic_Entity --\n+   -----------------------------------\n+\n+   procedure Analyze_Freeze_Generic_Entity (N : Node_Id) is\n+   begin\n+      --  Semantic checks here\n+      null;\n+   end Analyze_Freeze_Generic_Entity;\n+\n    ------------------------------------------\n    -- Analyze_Record_Representation_Clause --\n    ------------------------------------------"}, {"sha": "37bf09132abdd6ebe97e20e446840c3634faf5a0", "filename": "gcc/ada/sem_ch13.ads", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fsem_ch13.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fsem_ch13.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch13.ads?ref=3cd4a210696acc25b7bc0e338200edaf51112b88", "patch": "@@ -33,6 +33,7 @@ package Sem_Ch13 is\n    procedure Analyze_Enumeration_Representation_Clause  (N : Node_Id);\n    procedure Analyze_Free_Statement                     (N : Node_Id);\n    procedure Analyze_Freeze_Entity                      (N : Node_Id);\n+   procedure Analyze_Freeze_Generic_Entity              (N : Node_Id);\n    procedure Analyze_Record_Representation_Clause       (N : Node_Id);\n    procedure Analyze_Code_Statement                     (N : Node_Id);\n "}, {"sha": "ba583398e084ff9bd493e3d38cec053f6286e73c", "filename": "gcc/ada/sinfo.adb", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fsinfo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fsinfo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.adb?ref=3cd4a210696acc25b7bc0e338200edaf51112b88", "patch": "@@ -1104,7 +1104,8 @@ package body Sinfo is\n         or else NT (N).Nkind in N_Has_Entity\n         or else NT (N).Nkind = N_Aspect_Specification\n         or else NT (N).Nkind = N_Attribute_Definition_Clause\n-        or else NT (N).Nkind = N_Freeze_Entity);\n+        or else NT (N).Nkind = N_Freeze_Entity\n+        or else NT (N).Nkind = N_Freeze_Generic_Entity);\n       return Node4 (N);\n    end Entity;\n \n@@ -4251,7 +4252,8 @@ package body Sinfo is\n         or else NT (N).Nkind in N_Has_Entity\n         or else NT (N).Nkind = N_Aspect_Specification\n         or else NT (N).Nkind = N_Attribute_Definition_Clause\n-        or else NT (N).Nkind = N_Freeze_Entity);\n+        or else NT (N).Nkind = N_Freeze_Entity\n+        or else NT (N).Nkind = N_Freeze_Generic_Entity);\n       Set_Node4 (N, Val); -- semantic field, no parent set\n    end Set_Entity;\n "}, {"sha": "0ee2c561d04643fc4c00e377d99f99714d7457be", "filename": "gcc/ada/sinfo.ads", "status": "modified", "additions": 31, "deletions": 2, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fsinfo.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fsinfo.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsinfo.ads?ref=3cd4a210696acc25b7bc0e338200edaf51112b88", "patch": "@@ -7319,6 +7319,27 @@ package Sinfo is\n       --  Note: in the case where a debug source file is generated, the Sloc\n       --  for this node points to the FREEZE keyword in the Sprint file output.\n \n+      ---------------------------\n+      -- Freeze_Generic_Entity --\n+      ---------------------------\n+\n+      --  The freeze point of an entity indicates the point at which the\n+      --  information needed to generate code for the entity is complete.\n+      --  The freeze node for an entity triggers expander activities, such as\n+      --  build initialization procedures, and backend activities, such as\n+      --  completing the elaboration of packages.\n+\n+      --  For entities declared within a generic unit, for which no code is\n+      --  generated, the freeze point is not equally meaningful. However, in\n+      --  Ada 2012 several semantic checks on declarations must be delayed to\n+      --  the freeze point, and we need to include such a mark in the tree to\n+      --  trigger these checks. The Freeze_Generic_Entity node plays no other\n+      --  role, and is ignored by the expander and the back-end.\n+\n+      --  N_Freeze_Generic_Entity\n+      --  Sloc points near freeze point\n+      --  Entity (Node4-Sem)\n+\n       --------------------------------\n       -- Implicit Label Declaration --\n       --------------------------------\n@@ -8085,6 +8106,7 @@ package Sinfo is\n       N_Formal_Incomplete_Type_Definition,\n       N_Formal_Signed_Integer_Type_Definition,\n       N_Freeze_Entity,\n+      N_Freeze_Generic_Entity,\n       N_Generic_Association,\n       N_Handled_Sequence_Of_Statements,\n       N_Index_Or_Discriminant_Constraint,\n@@ -8179,8 +8201,8 @@ package Sinfo is\n      N_Expanded_Name ..\n      N_Attribute_Reference;\n    --  Nodes that have Entity fields\n-   --  Warning: DOES NOT INCLUDE N_Freeze_Entity, N_Aspect_Specification,\n-   --  or N_Attribute_Definition_Clause.\n+   --  Warning: DOES NOT INCLUDE N_Freeze_Entity, N_Freeze_Generic_Entity,\n+   --  N_Aspect_Specification, or N_Attribute_Definition_Clause.\n \n    subtype N_Has_Etype is Node_Kind range\n      N_Error ..\n@@ -11890,6 +11912,13 @@ package Sinfo is\n         4 => False,   --  Entity (Node4-Sem)\n         5 => False),  --  First_Subtype_Link (Node5-Sem)\n \n+     N_Freeze_Generic_Entity =>\n+       (1 => False,   --  unused\n+        2 => False,   --  unused\n+        3 => False,   --  unused\n+        4 => False,   --  Entity (Node4-Sem)\n+        5 => False),  --  unused\n+\n      N_Implicit_Label_Declaration =>\n        (1 => True,    --  Defining_Identifier (Node1)\n         2 => False,   --  Label_Construct (Node2-Sem)"}, {"sha": "43ed21a2862c4e900c1880f9de9db3f67315fa51", "filename": "gcc/ada/sprint.adb", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fsprint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fsprint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsprint.adb?ref=3cd4a210696acc25b7bc0e338200edaf51112b88", "patch": "@@ -800,6 +800,7 @@ package body Sprint is\n             --  do not duplicate the output at this point.\n \n             if Nkind (Node) = N_Freeze_Entity\n+              or else Nkind (Node) = N_Freeze_Generic_Entity\n               or else Nkind (Node) = N_Implicit_Label_Declaration\n             then\n                Sprint_Node_Actual (Node);\n@@ -1862,6 +1863,16 @@ package body Sprint is\n                Write_Rewrite_Str (\">>>\");\n             end if;\n \n+         when N_Freeze_Generic_Entity =>\n+            if Dump_Original_Only then\n+               null;\n+\n+            else\n+               Write_Indent;\n+               Write_Str_With_Col_Check_Sloc (\"freeze_generic \");\n+               Write_Id (Entity (Node));\n+            end if;\n+\n          when N_Full_Type_Declaration =>\n             Write_Indent_Str_Sloc (\"type \");\n             Sprint_Node (Defining_Identifier (Node));"}, {"sha": "237cfaf79e461d21dd5c18adbf9479459be60fd0", "filename": "gcc/ada/thread.c", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fthread.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3cd4a210696acc25b7bc0e338200edaf51112b88/gcc%2Fada%2Fthread.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fthread.c?ref=3cd4a210696acc25b7bc0e338200edaf51112b88", "patch": "@@ -6,7 +6,7 @@\n  *                                                                          *\n  *                          C Implementation File                           *\n  *                                                                          *\n- *             Copyright (C) 2011, Free Software Foundation, Inc.           *\n+ *          Copyright (C) 2011-2013, Free Software Foundation, Inc.         *\n  *                                                                          *\n  * GNAT is free software;  you can  redistribute it  and/or modify it under *\n  * terms of the  GNU General Public License as published  by the Free Soft- *\n@@ -33,7 +33,10 @@\n \n #include \"s-oscons.h\"\n \n-#ifdef NEED_PTHREAD_CONDATTR_SETCLOCK\n+/* If the clock we used for tasking (CLOCK_RT_Ada) is not the default\n+ * CLOCK_REALTIME, we need to set cond var attributes accordingly.\n+ */\n+#if CLOCK_RT_Ada != CLOCK_REALTIME\n # include <pthread.h>\n # include <time.h>\n "}]}