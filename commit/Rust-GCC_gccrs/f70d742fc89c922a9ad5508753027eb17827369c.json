{"sha": "f70d742fc89c922a9ad5508753027eb17827369c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjcwZDc0MmZjODljOTIyYTlhZDU1MDg3NTMwMjdlYjE3ODI3MzY5Yw==", "commit": {"author": {"name": "Frank Ch. Eigler", "email": "fche@redhat.com", "date": "2006-11-10T18:42:28Z"}, "committer": {"name": "Frank Ch. Eigler", "email": "fche@gcc.gnu.org", "date": "2006-11-10T18:42:28Z"}, "message": "re PR libmudflap/28578 (A most simple multithreaded program (practically any multithreaded one) causes mudflap violation)\n\n2006-11-10  Frank Ch. Eigler  <fche@redhat.com>\n\n\tPR libmudflap/28578\n\t* mf-hooks1.c (__mf_0fn_malloc): Make the bootstrap buffers\n\tstatic but not function scope static.\n\t(free): Skip deallocation attempts for objects placed into\n\tbootstrap buffers.\n\t* testsuite/libmudflap.cth/pass59-frag.c: New test.\n\n\nM    libmudflap/mf-hooks1.c\nM    libmudflap/ChangeLog\nA    libmudflap/testsuite/libmudflap.cth/pass59-frag.c\n\nFrom-SVN: r118662", "tree": {"sha": "f1e9d593de06af753a78e3763ac0ae92abff57ec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1e9d593de06af753a78e3763ac0ae92abff57ec"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f70d742fc89c922a9ad5508753027eb17827369c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f70d742fc89c922a9ad5508753027eb17827369c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f70d742fc89c922a9ad5508753027eb17827369c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f70d742fc89c922a9ad5508753027eb17827369c/comments", "author": {"login": "fche", "id": 588885, "node_id": "MDQ6VXNlcjU4ODg4NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/588885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fche", "html_url": "https://github.com/fche", "followers_url": "https://api.github.com/users/fche/followers", "following_url": "https://api.github.com/users/fche/following{/other_user}", "gists_url": "https://api.github.com/users/fche/gists{/gist_id}", "starred_url": "https://api.github.com/users/fche/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fche/subscriptions", "organizations_url": "https://api.github.com/users/fche/orgs", "repos_url": "https://api.github.com/users/fche/repos", "events_url": "https://api.github.com/users/fche/events{/privacy}", "received_events_url": "https://api.github.com/users/fche/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a6b03a63d60ea2c720d2351812dee479b9137183", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a6b03a63d60ea2c720d2351812dee479b9137183", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a6b03a63d60ea2c720d2351812dee479b9137183"}], "stats": {"total": 76, "additions": 70, "deletions": 6}, "files": [{"sha": "5b9da8b73479e559cb5200f387c54e8c817ae325", "filename": "libmudflap/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f70d742fc89c922a9ad5508753027eb17827369c/libmudflap%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f70d742fc89c922a9ad5508753027eb17827369c/libmudflap%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2FChangeLog?ref=f70d742fc89c922a9ad5508753027eb17827369c", "patch": "@@ -1,3 +1,12 @@\n+2006-11-10  Frank Ch. Eigler  <fche@redhat.com>\n+\n+\tPR libmudflap/28578\n+\t* mf-hooks1.c (__mf_0fn_malloc): Make the bootstrap buffers\n+\tstatic but not function scope static.\n+\t(free): Skip deallocation attempts for objects placed into\n+\tbootstrap buffers.\n+\t* testsuite/libmudflap.cth/pass59-frag.c: New test.\n+\n 2006-11-06  Frank Ch. Eigler  <fche@redhat.com>\n \n \tFrom Herman ten Brugge <hermantenbrugge@home.nl>:"}, {"sha": "acdbc447a5d752e71a6188349d276b56c8a0c4d3", "filename": "libmudflap/mf-hooks1.c", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f70d742fc89c922a9ad5508753027eb17827369c/libmudflap%2Fmf-hooks1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f70d742fc89c922a9ad5508753027eb17827369c/libmudflap%2Fmf-hooks1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Fmf-hooks1.c?ref=f70d742fc89c922a9ad5508753027eb17827369c", "patch": "@@ -75,21 +75,24 @@ Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA\n \n \n #if PIC\n+\n+enum { BS = 4096, NB=10 };\n+static char __mf_0fn_bufs[NB][BS];\n+static unsigned __mf_0fn_bufs_used[NB];\n+\n+\n /* A special bootstrap variant. */\n void *\n __mf_0fn_malloc (size_t c)\n {\n-  enum foo { BS = 4096, NB=10 };\n-  static char bufs[NB][BS];\n-  static unsigned bufs_used[NB];\n   unsigned i;\n \n   for (i=0; i<NB; i++)\n     {\n-      if (! bufs_used[i] && c < BS)\n+      if (! __mf_0fn_bufs_used[i] && c < BS)\n \t{\n-\t  bufs_used[i] = 1;\n-\t  return & bufs[i][0];\n+\t  __mf_0fn_bufs_used[i] = 1;\n+\t  return & __mf_0fn_bufs[i][0];\n \t}\n     }\n   return NULL;\n@@ -246,6 +249,19 @@ WRAPPER(void, free, void *buf)\n   if (UNLIKELY(buf == NULL))\n     return;\n \n+#if PIC\n+  /* Check whether the given buffer might have come from a\n+     __mf_0fn_malloc/calloc call that for whatever reason was not\n+     redirected back to __mf_0fn_free.  If so, we just ignore the\n+     call. */\n+  if (UNLIKELY((uintptr_t) buf >= (uintptr_t) __mf_0fn_bufs &&\n+               (uintptr_t) buf < ((uintptr_t) __mf_0fn_bufs + sizeof(__mf_0fn_bufs))))\n+  {\n+    VERBOSE_TRACE (\"skipping free of boot (0fn) alloc buffer %p\\n\", buf);\n+    return;\n+  }\n+#endif\n+\n   LOCKTH ();\n   if (UNLIKELY(!freeq_initialized))\n     {"}, {"sha": "bf6c293136d572ad5affa221d05309a703267411", "filename": "libmudflap/testsuite/libmudflap.cth/pass59-frag.c", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f70d742fc89c922a9ad5508753027eb17827369c/libmudflap%2Ftestsuite%2Flibmudflap.cth%2Fpass59-frag.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f70d742fc89c922a9ad5508753027eb17827369c/libmudflap%2Ftestsuite%2Flibmudflap.cth%2Fpass59-frag.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libmudflap%2Ftestsuite%2Flibmudflap.cth%2Fpass59-frag.c?ref=f70d742fc89c922a9ad5508753027eb17827369c", "patch": "@@ -0,0 +1,39 @@\n+#include <stdio.h>\n+#include <pthread.h>\n+\n+/* PR 28578 */\n+\n+void* test_thread(void* arg)\n+{\n+  printf(\"Hello from thread!\\n\");\n+  pthread_exit(NULL);\n+  return 0;\n+}\n+\n+int main()\n+{\n+  pthread_t thread;\n+  int arg = 0;\n+  pthread_create(&thread, NULL, test_thread, (void*)arg);\n+  pthread_join(thread, NULL);\n+  pthread_exit(NULL);\n+  return 0;\n+}\n+\n+/* { dg-output \"Hello from thread!\\n\" } */\n+\n+#if 0\n+\n+/* Even this test case replicates the problem.  However, when built in\n+   static mode, it blows up during __mf_init (?!?!?!) with a\n+   pthread_mutex_lock deadlock error. */\n+\n+#include <stdio.h>\n+#include <pthread.h>\n+\n+int main ()\n+{\n+      pthread_exit(NULL);\n+      return 0;\n+}\n+#endif"}]}