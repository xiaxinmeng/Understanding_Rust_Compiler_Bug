{"sha": "b8471b656db9a17acf5270717310d8696b8fa127", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yjg0NzFiNjU2ZGI5YTE3YWNmNTI3MDcxNzMxMGQ4Njk2YjhmYTEyNw==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-21T18:29:03Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1994-12-21T18:29:03Z"}, "message": "(rest_of_compilation): Adjust tests for when to inline and when to\ndefer.\n\nFrom-SVN: r8680", "tree": {"sha": "ca066131a4d4aaa35d89c9241e4f5bac64a4cf85", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ca066131a4d4aaa35d89c9241e4f5bac64a4cf85"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b8471b656db9a17acf5270717310d8696b8fa127", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8471b656db9a17acf5270717310d8696b8fa127", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b8471b656db9a17acf5270717310d8696b8fa127", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b8471b656db9a17acf5270717310d8696b8fa127/comments", "author": null, "committer": null, "parents": [{"sha": "b6ec8c5f7538fb75c01dc5e126bf69118e88ec91", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b6ec8c5f7538fb75c01dc5e126bf69118e88ec91", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b6ec8c5f7538fb75c01dc5e126bf69118e88ec91"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "de32442f8f01db43e97584adfd57c63c5d402c95", "filename": "gcc/toplev.c", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b8471b656db9a17acf5270717310d8696b8fa127/gcc%2Ftoplev.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b8471b656db9a17acf5270717310d8696b8fa127/gcc%2Ftoplev.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftoplev.c?ref=b8471b656db9a17acf5270717310d8696b8fa127", "patch": "@@ -2778,14 +2778,13 @@ rest_of_compilation (decl)\n \t compile it by itself, defer decision till end of compilation.\n \t finish_compilation will call rest_of_compilation again\n \t for those functions that need to be output.  Also defer those\n-\t functions that were marked inline but weren't inlined; they\n-\t may never be used.  */\n-\n-      if ((specd || DECL_INLINE (decl))\n-\t  && ((! TREE_PUBLIC (decl) && ! TREE_ADDRESSABLE (decl)\n-\t       && ! flag_keep_inline_functions)\n-\t      || DECL_DEFER_OUTPUT (decl)\n-\t      || DECL_EXTERNAL (decl)))\n+\t functions that we are supposed to defer.  */\n+\n+      if (DECL_DEFER_OUTPUT (decl)\n+\t  || (DECL_INLINE (decl)\n+\t      && ((! TREE_PUBLIC (decl) && ! TREE_ADDRESSABLE (decl)\n+\t\t   && ! flag_keep_inline_functions)\n+\t\t  || DECL_EXTERNAL (decl))))\n \t{\n #ifdef DWARF_DEBUGGING_INFO\n \t  /* Generate the DWARF info for the \"abstract\" instance\n@@ -2822,10 +2821,12 @@ rest_of_compilation (decl)\n \t  saved_arguments = DECL_ARGUMENTS (decl);\n \t  TIMEVAR (integration_time, save_for_inline_copying (decl));\n \t}\n-    }\n \n-  if (DECL_DEFER_OUTPUT (decl))\n-    goto exit_rest_of_compilation;\n+      /* If specified extern inline but we aren't inlining it, we are\n+\t done.  */\n+      if (specd && DECL_EXTERNAL (decl))\n+\tgoto exit_rest_of_compilation;\n+    }\n \n   TREE_ASM_WRITTEN (decl) = 1;\n "}]}