{"sha": "678ff8235a39ac14d9bead05d90ed094c8fbdd3d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Njc4ZmY4MjM1YTM5YWMxNGQ5YmVhZDA1ZDkwZWQwOTRjOGZiZGQzZA==", "commit": {"author": {"name": "Joel Brobecker", "email": "brobecker@adacore.com", "date": "2009-11-24T22:40:46Z"}, "committer": {"name": "Joel Brobecker", "email": "brobecke@gcc.gnu.org", "date": "2009-11-24T22:40:46Z"}, "message": "* zlib.m4: New file.\n\nFrom-SVN: r154521", "tree": {"sha": "f9d45de04b3aa4f3056f35ae1bd9dc644b1a1f7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f9d45de04b3aa4f3056f35ae1bd9dc644b1a1f7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/678ff8235a39ac14d9bead05d90ed094c8fbdd3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/678ff8235a39ac14d9bead05d90ed094c8fbdd3d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/678ff8235a39ac14d9bead05d90ed094c8fbdd3d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/678ff8235a39ac14d9bead05d90ed094c8fbdd3d/comments", "author": {"login": "brobecke", "id": 11981700, "node_id": "MDQ6VXNlcjExOTgxNzAw", "avatar_url": "https://avatars.githubusercontent.com/u/11981700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brobecke", "html_url": "https://github.com/brobecke", "followers_url": "https://api.github.com/users/brobecke/followers", "following_url": "https://api.github.com/users/brobecke/following{/other_user}", "gists_url": "https://api.github.com/users/brobecke/gists{/gist_id}", "starred_url": "https://api.github.com/users/brobecke/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brobecke/subscriptions", "organizations_url": "https://api.github.com/users/brobecke/orgs", "repos_url": "https://api.github.com/users/brobecke/repos", "events_url": "https://api.github.com/users/brobecke/events{/privacy}", "received_events_url": "https://api.github.com/users/brobecke/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "108e24453b3463097c8f0a25dd2d21219944b0fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/108e24453b3463097c8f0a25dd2d21219944b0fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/108e24453b3463097c8f0a25dd2d21219944b0fe"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "aa716ea437d456f45a8f710bbf30ed5648eab6c2", "filename": "config/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/678ff8235a39ac14d9bead05d90ed094c8fbdd3d/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/678ff8235a39ac14d9bead05d90ed094c8fbdd3d/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=678ff8235a39ac14d9bead05d90ed094c8fbdd3d", "patch": "@@ -1,3 +1,7 @@\n+2009-11-24  Joel Brobecker  <brobecker@adacore.com>\n+\n+\t* zlib.m4: New file.\n+\n 2009-11-09  Jan Kratochvil  <jan.kratochvil@redhat.com>\n \n \t* largefile.m4 (ACX_LARGEFILE): Call AC_PLUGINS."}, {"sha": "b0174994ec16782d27a8aa65c47d5c0f2cfbf71a", "filename": "config/zlib.m4", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/678ff8235a39ac14d9bead05d90ed094c8fbdd3d/config%2Fzlib.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/678ff8235a39ac14d9bead05d90ed094c8fbdd3d/config%2Fzlib.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fzlib.m4?ref=678ff8235a39ac14d9bead05d90ed094c8fbdd3d", "patch": "@@ -0,0 +1,18 @@\n+dnl A function to check for zlib availability.  zlib is used by default\n+dnl unless the user configured with --disable-nls.\n+\n+AC_DEFUN([AM_ZLIB],\n+[\n+  # See if the user specified whether he wants zlib support or not.\n+  AC_ARG_WITH(zlib,\n+    [  --with-zlib             include zlib support (auto/yes/no) [default=auto]],\n+    [], [with_zlib=auto])\n+\n+  if test \"$with_zlib\" != \"no\"; then\n+    AC_SEARCH_LIBS(zlibVersion, z, [AC_CHECK_HEADERS(zlib.h)])\n+    if test \"$with_zlib\" = \"yes\" -a \"$ac_cv_header_zlib_h\" != \"yes\"; then\n+      AC_MSG_ERROR([zlib (libz) library was explicitly requested but not found])\n+    fi\n+  fi\n+])\n+"}]}