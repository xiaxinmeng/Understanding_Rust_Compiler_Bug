{"sha": "c11c795e4bc96a818cb72fab599cdde1810e26ae", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzExYzc5NWU0YmM5NmE4MThjYjcyZmFiNTk5Y2RkZTE4MTBlMjZhZQ==", "commit": {"author": {"name": "Tom Tromey", "email": "tromey@redhat.com", "date": "2013-09-25T16:10:35Z"}, "committer": {"name": "Tom Tromey", "email": "tromey@gcc.gnu.org", "date": "2013-09-25T16:10:35Z"}, "message": "Makefile.in (OUTPUT_OPTION): Define as \"-o $@\".\n\n\t* Makefile.in (OUTPUT_OPTION): Define as \"-o $@\".\n\t* configure.ac: Don't invoke AM_PROG_CC_C_O.\n\t(NO_MINUS_C_MINUS_O, OUTPUT_OPTION): Don't subst.\n\t* configure, config.in: Rebuild.\ngcc/ada\n\t* gcc-interface/Makefile.in (OUTPUT_OPTION): Define as \"-o $@\".\n\nFrom-SVN: r202896", "tree": {"sha": "27e3854605955818b8f1b558056611f92e1f80f9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/27e3854605955818b8f1b558056611f92e1f80f9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c11c795e4bc96a818cb72fab599cdde1810e26ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c11c795e4bc96a818cb72fab599cdde1810e26ae", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c11c795e4bc96a818cb72fab599cdde1810e26ae", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c11c795e4bc96a818cb72fab599cdde1810e26ae/comments", "author": null, "committer": null, "parents": [{"sha": "043378c30822859ee836d316215d6e71e5d3fb2f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/043378c30822859ee836d316215d6e71e5d3fb2f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/043378c30822859ee836d316215d6e71e5d3fb2f"}], "stats": {"total": 182, "additions": 19, "deletions": 163}, "files": [{"sha": "47fc4d70aa756288cff3a07f65f4a8877f359cbb", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c11c795e4bc96a818cb72fab599cdde1810e26ae/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c11c795e4bc96a818cb72fab599cdde1810e26ae/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c11c795e4bc96a818cb72fab599cdde1810e26ae", "patch": "@@ -1,3 +1,10 @@\n+2013-09-25  Tom Tromey  <tromey@redhat.com>\n+\n+\t* Makefile.in (OUTPUT_OPTION): Define as \"-o $@\".\n+\t* configure.ac: Don't invoke AM_PROG_CC_C_O.\n+\t(NO_MINUS_C_MINUS_O, OUTPUT_OPTION): Don't subst.\n+\t* configure, config.in: Rebuild.\n+\n 2013-09-25  Tom Tromey  <tromey@redhat.com>\n \n \t* Makefile.in (CCDEPMODE, DEPDIR, depcomp, COMPILE.base)"}, {"sha": "154fe241750469d11a9dee4e41223ff2cccc9cab", "filename": "gcc/Makefile.in", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c11c795e4bc96a818cb72fab599cdde1810e26ae/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c11c795e4bc96a818cb72fab599cdde1810e26ae/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=c11c795e4bc96a818cb72fab599cdde1810e26ae", "patch": "@@ -313,9 +313,10 @@ CCDEPMODE = @CCDEPMODE@\n DEPDIR = @DEPDIR@\n depcomp = $(SHELL) $(srcdir)/../depcomp\n \n-# Some compilers can't handle cc -c blah.c -o foo/blah.o.\n-# In stage2 and beyond, we force this to \"-o $@\" since we know we're using gcc.\n-OUTPUT_OPTION = @OUTPUT_OPTION@\n+# In the past we used AC_PROG_CC_C_O and set this properly, but\n+# it was discovered that this hadn't worked in a long time, so now\n+# we just hard-code.\n+OUTPUT_OPTION = -o $@\n \n # This is where we get zlib from.  zlibdir is -L../zlib and zlibinc is\n # -I../zlib, unless we were configured with --with-system-zlib, in which"}, {"sha": "61d8a4cfa36924be9901abb10db6bf42a3d3c69a", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c11c795e4bc96a818cb72fab599cdde1810e26ae/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c11c795e4bc96a818cb72fab599cdde1810e26ae/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c11c795e4bc96a818cb72fab599cdde1810e26ae", "patch": "@@ -1,3 +1,7 @@\n+2013-09-25  Tom Tromey  <tromey@redhat.com>\n+\n+\t* gcc-interface/Makefile.in (OUTPUT_OPTION): Define as \"-o $@\".\n+\n 2013-09-18  Eric Botcazou  <ebotcazou@adacore.com>\n \n \tPR ada/58264"}, {"sha": "2c51a0026a89b9a026e66e8a6113c62cc881191b", "filename": "gcc/ada/gcc-interface/Makefile.in", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c11c795e4bc96a818cb72fab599cdde1810e26ae/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c11c795e4bc96a818cb72fab599cdde1810e26ae/gcc%2Fada%2Fgcc-interface%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fgcc-interface%2FMakefile.in?ref=c11c795e4bc96a818cb72fab599cdde1810e26ae", "patch": "@@ -1,5 +1,5 @@\n # Makefile for GNU Ada Compiler (GNAT).\n-#   Copyright (C) 1994-2012 Free Software Foundation, Inc.\n+#   Copyright (C) 1994-2013 Free Software Foundation, Inc.\n \n #This file is part of GCC.\n \n@@ -122,7 +122,7 @@ THREAD_KIND = native\n THREADSLIB =\n GMEM_LIB =\n MISCLIB =\n-OUTPUT_OPTION = @OUTPUT_OPTION@\n+OUTPUT_OPTION = -o $@\n \n objext = .o\n exeext ="}, {"sha": "7bb5be8fdf141f13e32ea57e038679da11f13cd0", "filename": "gcc/config.in", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c11c795e4bc96a818cb72fab599cdde1810e26ae/gcc%2Fconfig.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c11c795e4bc96a818cb72fab599cdde1810e26ae/gcc%2Fconfig.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.in?ref=c11c795e4bc96a818cb72fab599cdde1810e26ae", "patch": "@@ -1717,12 +1717,6 @@\n #endif\n \n \n-/* Define to 1 if your C compiler doesn't accept -c and -o together. */\n-#ifndef USED_FOR_TARGET\n-#undef NO_MINUS_C_MINUS_O\n-#endif\n-\n-\n /* Define to the address where bug reports for this package should be sent. */\n #ifndef USED_FOR_TARGET\n #undef PACKAGE_BUGREPORT"}, {"sha": "2ac03470bda00a928c501733c82ce215e395a6c8", "filename": "gcc/configure", "status": "modified", "additions": 2, "deletions": 142, "changes": 144, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c11c795e4bc96a818cb72fab599cdde1810e26ae/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c11c795e4bc96a818cb72fab599cdde1810e26ae/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=c11c795e4bc96a818cb72fab599cdde1810e26ae", "patch": "@@ -790,8 +790,6 @@ EGREP\n GREP\n CPP\n PICFLAG_FOR_TARGET\n-OUTPUT_OPTION\n-NO_MINUS_C_MINUS_O\n GNATMAKE\n GNATBIND\n ac_ct_CXX\n@@ -4257,135 +4255,6 @@ ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\n ac_compiler_gnu=$ac_cv_c_compiler_gnu\n \n-if test \"x$CC\" != xcc; then\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC and cc understand -c and -o together\" >&5\n-$as_echo_n \"checking whether $CC and cc understand -c and -o together... \" >&6; }\n-else\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether cc understands -c and -o together\" >&5\n-$as_echo_n \"checking whether cc understands -c and -o together... \" >&6; }\n-fi\n-set dummy $CC; ac_cc=`$as_echo \"$2\" |\n-\t\t      sed 's/[^a-zA-Z0-9_]/_/g;s/^[0-9]/_/'`\n-if { as_var=ac_cv_prog_cc_${ac_cc}_c_o; eval \"test \\\"\\${$as_var+set}\\\" = set\"; }; then :\n-  $as_echo_n \"(cached) \" >&6\n-else\n-  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n-/* end confdefs.h.  */\n-\n-int\n-main ()\n-{\n-\n-  ;\n-  return 0;\n-}\n-_ACEOF\n-# Make sure it works both with $CC and with simple cc.\n-# We do the test twice because some compilers refuse to overwrite an\n-# existing .o file with -o, though they will create one.\n-ac_try='$CC -c conftest.$ac_ext -o conftest2.$ac_objext >&5'\n-rm -f conftest2.*\n-if { { case \"(($ac_try\" in\n-  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n-  *) ac_try_echo=$ac_try;;\n-esac\n-eval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n-$as_echo \"$ac_try_echo\"; } >&5\n-  (eval \"$ac_try\") 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; } &&\n-   test -f conftest2.$ac_objext && { { case \"(($ac_try\" in\n-  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n-  *) ac_try_echo=$ac_try;;\n-esac\n-eval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n-$as_echo \"$ac_try_echo\"; } >&5\n-  (eval \"$ac_try\") 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; };\n-then\n-  eval ac_cv_prog_cc_${ac_cc}_c_o=yes\n-  if test \"x$CC\" != xcc; then\n-    # Test first that cc exists at all.\n-    if { ac_try='cc -c conftest.$ac_ext >&5'\n-  { { case \"(($ac_try\" in\n-  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n-  *) ac_try_echo=$ac_try;;\n-esac\n-eval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n-$as_echo \"$ac_try_echo\"; } >&5\n-  (eval \"$ac_try\") 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; }; }; then\n-      ac_try='cc -c conftest.$ac_ext -o conftest2.$ac_objext >&5'\n-      rm -f conftest2.*\n-      if { { case \"(($ac_try\" in\n-  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n-  *) ac_try_echo=$ac_try;;\n-esac\n-eval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n-$as_echo \"$ac_try_echo\"; } >&5\n-  (eval \"$ac_try\") 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; } &&\n-\t test -f conftest2.$ac_objext && { { case \"(($ac_try\" in\n-  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n-  *) ac_try_echo=$ac_try;;\n-esac\n-eval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n-$as_echo \"$ac_try_echo\"; } >&5\n-  (eval \"$ac_try\") 2>&5\n-  ac_status=$?\n-  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n-  test $ac_status = 0; };\n-      then\n-\t# cc works too.\n-\t:\n-      else\n-\t# cc exists but doesn't like -o.\n-\teval ac_cv_prog_cc_${ac_cc}_c_o=no\n-      fi\n-    fi\n-  fi\n-else\n-  eval ac_cv_prog_cc_${ac_cc}_c_o=no\n-fi\n-rm -f core conftest*\n-\n-fi\n-if eval test \\$ac_cv_prog_cc_${ac_cc}_c_o = yes; then\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n-$as_echo \"yes\" >&6; }\n-else\n-  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n-$as_echo \"no\" >&6; }\n-\n-$as_echo \"#define NO_MINUS_C_MINUS_O 1\" >>confdefs.h\n-\n-fi\n-\n-# expand $ac_aux_dir to an absolute path\n-am_aux_dir=`cd $ac_aux_dir && pwd`\n-\n-# FIXME: we rely on the cache variable name because\n-# there is no other way.\n-set dummy $CC\n-am_cc=`echo $2 | sed 's/[^a-zA-Z0-9_]/_/g;s/^[0-9]/_/'`\n-eval am_t=\\$ac_cv_prog_cc_${am_cc}_c_o\n-if test \"$am_t\" != yes; then\n-   # Losing compiler, so override with the script.\n-   # FIXME: It is wrong to rewrite CC.\n-   # But if we don't then we get into trouble of one sort or another.\n-   # A longer-term fix would be to have automake use am__CC in this case,\n-   # and then we could set am__CC=\"\\$(top_srcdir)/compile \\$(CC)\"\n-   CC=\"$am_aux_dir/compile $CC\"\n-fi\n-\n-\n ac_ext=cpp\n ac_cpp='$CXXCPP $CPPFLAGS'\n ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n@@ -4863,15 +4732,6 @@ else\n fi\n \n \n-# autoconf is lame and doesn't give us any substitution variable for this.\n-if eval \"test \\\"`echo '$ac_cv_prog_cc_'${ac_cc}_c_o`\\\" = no\"; then\n-  NO_MINUS_C_MINUS_O=yes\n-else\n-  OUTPUT_OPTION='-o $@'\n-fi\n-\n-\n-\n # Remove the -O2: for historical reasons, unless bootstrapping we prefer\n # optimizations to be activated explicitly by the toplevel.\n case \"$CC\" in\n@@ -18033,7 +17893,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18036 \"configure\"\n+#line 17896 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -18139,7 +17999,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 18142 \"configure\"\n+#line 18002 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H"}, {"sha": "f216962e18f8f855ec20e35bacaee822ed60c543", "filename": "gcc/configure.ac", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c11c795e4bc96a818cb72fab599cdde1810e26ae/gcc%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c11c795e4bc96a818cb72fab599cdde1810e26ae/gcc%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.ac?ref=c11c795e4bc96a818cb72fab599cdde1810e26ae", "patch": "@@ -278,19 +278,9 @@ rm -f a.out a.exe b.out\n \n # Find the native compiler\n AC_PROG_CC\n-AM_PROG_CC_C_O\n AC_PROG_CXX\n ACX_PROG_GNAT([-I\"$srcdir\"/ada])\n \n-# autoconf is lame and doesn't give us any substitution variable for this.\n-if eval \"test \\\"`echo '$ac_cv_prog_cc_'${ac_cc}_c_o`\\\" = no\"; then\n-  NO_MINUS_C_MINUS_O=yes\n-else\n-  OUTPUT_OPTION='-o $@'\n-fi\n-AC_SUBST(NO_MINUS_C_MINUS_O)\n-AC_SUBST(OUTPUT_OPTION)\n-\n # Remove the -O2: for historical reasons, unless bootstrapping we prefer\n # optimizations to be activated explicitly by the toplevel.\n case \"$CC\" in"}]}