{"sha": "8cfaeac7d84fd27a864c313ce59cac0a75714fd2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OGNmYWVhYzdkODRmZDI3YTg2NGMzMTNjZTU5Y2FjMGE3NTcxNGZkMg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2013-12-09T15:13:07Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2013-12-09T15:13:07Z"}, "message": "re PR middle-end/38474 (compile time explosion in dataflow_set_preserve_mem_locs at -O3)\n\n2013-12-09  Richard Biener  <rguenther@suse.de>\n\n\tPR middle-end/38474\n\t* tree-ssa-structalias.c (set_union_with_increment): Remove\n\tunreachable code.\n\t(do_complex_constraint): Call set_union_with_increment with\n\tthe solution delta, not the full solution.\n\t(make_transitive_closure_constraints): Merge the two\n\tconstraints.\n\nFrom-SVN: r205808", "tree": {"sha": "463703e3c7e180ad116654082296677f1d21149c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/463703e3c7e180ad116654082296677f1d21149c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8cfaeac7d84fd27a864c313ce59cac0a75714fd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cfaeac7d84fd27a864c313ce59cac0a75714fd2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8cfaeac7d84fd27a864c313ce59cac0a75714fd2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8cfaeac7d84fd27a864c313ce59cac0a75714fd2/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d5f7d53546f2b649f60481771bfd889e77b53e78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5f7d53546f2b649f60481771bfd889e77b53e78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5f7d53546f2b649f60481771bfd889e77b53e78"}], "stats": {"total": 30, "additions": 13, "deletions": 17}, "files": [{"sha": "715b3a279e9c5578fa5a3d238bc7fe19928a886d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cfaeac7d84fd27a864c313ce59cac0a75714fd2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cfaeac7d84fd27a864c313ce59cac0a75714fd2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8cfaeac7d84fd27a864c313ce59cac0a75714fd2", "patch": "@@ -1,3 +1,13 @@\n+2013-12-09  Richard Biener  <rguenther@suse.de>\n+\n+\tPR middle-end/38474\n+\t* tree-ssa-structalias.c (set_union_with_increment): Remove\n+\tunreachable code.\n+\t(do_complex_constraint): Call set_union_with_increment with\n+\tthe solution delta, not the full solution.\n+\t(make_transitive_closure_constraints): Merge the two\n+\tconstraints.\n+\n 2013-12-09  Richard Earnshaw  <rearnsha@arm.com>\n \n \t* arm.c (mem_ok_for_ldrd_strd): Rename first argument as MEM.  Do"}, {"sha": "26ee85a385e6fce12c7bf434d1e7a08310ce3aef", "filename": "gcc/tree-ssa-structalias.c", "status": "modified", "additions": 3, "deletions": 17, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8cfaeac7d84fd27a864c313ce59cac0a75714fd2/gcc%2Ftree-ssa-structalias.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8cfaeac7d84fd27a864c313ce59cac0a75714fd2/gcc%2Ftree-ssa-structalias.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-structalias.c?ref=8cfaeac7d84fd27a864c313ce59cac0a75714fd2", "patch": "@@ -962,10 +962,6 @@ set_union_with_increment  (bitmap to, bitmap from, HOST_WIDE_INT inc)\n   if (bitmap_bit_p (from, anything_id))\n     return bitmap_set_bit (to, anything_id);\n \n-  /* For zero offset simply union the solution into the destination.  */\n-  if (inc == 0)\n-    return bitmap_ior_into (to, from);\n-\n   /* If the offset is unknown we have to expand the solution to\n      all subfields.  */\n   if (inc == UNKNOWN_OFFSET)\n@@ -1788,14 +1784,13 @@ do_complex_constraint (constraint_graph_t graph, constraint_t c, bitmap delta)\n   else\n     {\n       bitmap tmp;\n-      bitmap solution;\n       bool flag = false;\n \n-      gcc_checking_assert (c->rhs.type == SCALAR && c->lhs.type == SCALAR);\n-      solution = get_varinfo (c->rhs.var)->solution;\n+      gcc_checking_assert (c->rhs.type == SCALAR && c->lhs.type == SCALAR\n+\t\t\t   && c->rhs.offset != 0 && c->lhs.offset == 0);\n       tmp = get_varinfo (c->lhs.var)->solution;\n \n-      flag = set_union_with_increment (tmp, solution, c->rhs.offset);\n+      flag = set_union_with_increment (tmp, delta, c->rhs.offset);\n \n       if (flag)\n \tbitmap_set_bit (changed, c->lhs.var);\n@@ -3712,15 +3707,6 @@ make_transitive_closure_constraints (varinfo_t vi)\n   lhs.offset = 0;\n   rhs.type = DEREF;\n   rhs.var = vi->id;\n-  rhs.offset = 0;\n-  process_constraint (new_constraint (lhs, rhs));\n-\n-  /* VAR = VAR + UNKNOWN;  */\n-  lhs.type = SCALAR;\n-  lhs.var = vi->id;\n-  lhs.offset = 0;\n-  rhs.type = SCALAR;\n-  rhs.var = vi->id;\n   rhs.offset = UNKNOWN_OFFSET;\n   process_constraint (new_constraint (lhs, rhs));\n }"}]}