{"sha": "3d33d151c1d174f6d8e51894f6193e13bbe6984e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QzM2QxNTFjMWQxNzRmNmQ4ZTUxODk0ZjYxOTNlMTNiYmU2OTg0ZQ==", "commit": {"author": {"name": "Anatoly Sokolov", "email": "aesok@post.ru", "date": "2011-10-24T14:45:51Z"}, "committer": {"name": "Georg-Johann Lay", "email": "gjl@gcc.gnu.org", "date": "2011-10-24T14:45:51Z"}, "message": "re PR target/49824 ([avr] Missing documentation for OS_task and OS_main attributes)\n\n\tPR target/49824\n\t* doc/extend.texi (Declaring Attributes of Functions):\n\tDocument OS_main and OS_task attributes.\n\t(Specifying Attributes of Variables): Move up\n\tsubsection \"AVR Variable Attributes\" as of alphabetical order.\n\n\nCo-Authored-By: Georg-Johann Lay <avr@gjlay.de>\n\nFrom-SVN: r180385", "tree": {"sha": "47b48b1eff41897ee24185bfceae10577dc0cd69", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/47b48b1eff41897ee24185bfceae10577dc0cd69"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d33d151c1d174f6d8e51894f6193e13bbe6984e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d33d151c1d174f6d8e51894f6193e13bbe6984e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d33d151c1d174f6d8e51894f6193e13bbe6984e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d33d151c1d174f6d8e51894f6193e13bbe6984e/comments", "author": null, "committer": {"login": "sprintersb", "id": 8905355, "node_id": "MDQ6VXNlcjg5MDUzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/8905355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sprintersb", "html_url": "https://github.com/sprintersb", "followers_url": "https://api.github.com/users/sprintersb/followers", "following_url": "https://api.github.com/users/sprintersb/following{/other_user}", "gists_url": "https://api.github.com/users/sprintersb/gists{/gist_id}", "starred_url": "https://api.github.com/users/sprintersb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sprintersb/subscriptions", "organizations_url": "https://api.github.com/users/sprintersb/orgs", "repos_url": "https://api.github.com/users/sprintersb/repos", "events_url": "https://api.github.com/users/sprintersb/events{/privacy}", "received_events_url": "https://api.github.com/users/sprintersb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b7b1813daa8b65c1528025e3fd9e459690b72c4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7b7b1813daa8b65c1528025e3fd9e459690b72c4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7b7b1813daa8b65c1528025e3fd9e459690b72c4"}], "stats": {"total": 59, "additions": 49, "deletions": 10}, "files": [{"sha": "ea07d8fa757d5edea99d948abbdd539f6a80ab14", "filename": "gcc/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d33d151c1d174f6d8e51894f6193e13bbe6984e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d33d151c1d174f6d8e51894f6193e13bbe6984e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3d33d151c1d174f6d8e51894f6193e13bbe6984e", "patch": "@@ -1,3 +1,12 @@\n+2011-10-24  Anatoly Sokolov  <aesok@post.ru>\n+\t    Georg-Johann Lay  <avr@gjlay.de>\n+\n+\tPR target/49824\n+\t* doc/extend.texi (Declaring Attributes of Functions):\n+\tDocument OS_main and OS_task attributes.\n+\t(Specifying Attributes of Variables): Move up\n+\tsubsection \"AVR Variable Attributes\" as of alphabetical order.\n+\n 2011-10-24  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-vect-stmts.c (vect_get_vec_def_for_operand): Convert constants"}, {"sha": "7c7738824233f3ec1927333ce014674201caaa15", "filename": "gcc/doc/extend.texi", "status": "modified", "additions": 40, "deletions": 10, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d33d151c1d174f6d8e51894f6193e13bbe6984e/gcc%2Fdoc%2Fextend.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d33d151c1d174f6d8e51894f6193e13bbe6984e/gcc%2Fdoc%2Fextend.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Fextend.texi?ref=3d33d151c1d174f6d8e51894f6193e13bbe6984e", "patch": "@@ -3029,6 +3029,33 @@ compiled with more aggressive optimization options that produce faster\n and larger code, while other functions can be called with less\n aggressive options.\n \n+@item OS_main/OS_task\n+@cindex @code{OS_main} AVR function attribute\n+@cindex @code{OS_task} AVR function attribute\n+On AVR, functions with the @code{OS_main} or @code{OS_task} attribute\n+do not save/restore any call-saved register in their prologue/epilogue.\n+\n+The @code{OS_main} attribute can be used when there @emph{is\n+guarantee} that interrupts are disabled at the time when the function\n+is entered.  This will save resources when the stack pointer has to be\n+changed to set up a frame for local variables.\n+\n+The @code{OS_task} attribute can be used when there is @emph{no\n+guarantee} that interrupts are disabled at that time when the function\n+is entered like for, e@.g@. task functions in a multi-threading operating\n+system. In that case, changing the stack pointer register will be\n+guarded by save/clear/restore of the global interrupt enable flag.\n+\n+The differences to the @code{naked} function attrubute are:\n+@itemize @bullet\n+@item @code{naked} functions do not have a return instruction whereas \n+@code{OS_main} and @code{OS_task} functions will have a @code{RET} or\n+@code{RETI} return instruction.\n+@item @code{naked} functions do not set up a frame for local variables\n+or a frame pointer whereas @code{OS_main} and @code{OS_task} do this\n+as needed.\n+@end itemize\n+\n @item pcs\n @cindex @code{pcs} function attribute\n \n@@ -4525,6 +4552,19 @@ The @code{dllexport} attribute is described in @ref{Function Attributes}.\n \n @end table\n \n+@subsection AVR Variable Attributes\n+\n+@table @code\n+@item progmem\n+@cindex @code{progmem} AVR variable attribute\n+The @code{progmem} attribute is used on the AVR to place data in the program\n+memory address space (flash). This is accomplished by putting\n+respective variables into a section whose name starts with @code{.progmem}.\n+\n+AVR is a Harvard architecture processor and data and reas only data\n+normally resides in the data memory address space (RAM).\n+@end table\n+\n @subsection Blackfin Variable Attributes\n \n Three attributes are currently defined for the Blackfin.\n@@ -4794,16 +4834,6 @@ placed in either the @code{.bss_below100} section or the\n \n @end table\n \n-@subsection AVR Variable Attributes\n-\n-@table @code\n-@item progmem\n-@cindex @code{progmem} variable attribute\n-The @code{progmem} attribute is used on the AVR to place data in the Program\n-Memory address space. The AVR is a Harvard Architecture processor and data\n-normally resides in the Data Memory address space.\n-@end table\n-\n @node Type Attributes\n @section Specifying Attributes of Types\n @cindex attribute of types"}]}