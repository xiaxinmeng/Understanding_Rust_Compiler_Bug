{"sha": "38e4a361e79a459947540920db645f3d7fa7221a", "node_id": "C_kwDOANBUbNoAKDM4ZTRhMzYxZTc5YTQ1OTk0NzU0MDkyMGRiNjQ1ZjNkN2ZhNzIyMWE", "commit": {"author": {"name": "Alexandre Oliva", "email": "oliva@adacore.com", "date": "2021-11-20T05:51:27Z"}, "committer": {"name": "Alexandre Oliva", "email": "oliva@gnu.org", "date": "2021-11-20T05:51:27Z"}, "message": "harden conds: detach without decls\n\nWhen we create copies of SSA_NAMEs to hold \"detached\" copies of the\nvalues for the hardening tests, we end up with assignments to\nSSA_NAMEs that refer to the same decls.  That would be generally\ndesirable, since it enables the variable to be recognized in dumps,\nand makes coalescing more likely if the original variable dies at that\npoint.  When the decl is a DECL_BY_REFERENCE, the SSA_NAME holds the\naddress of a parm or result, and it's read-only, so we shouldn't\ncreate assignments to it.  Gimple checkers flag at least the case of\nresults.\n\nThis patch arranges for us to avoid referencing the same decls, which\ncures the problem, but retaining the visible association between the\nSSA_NAMEs, by using the same identifier for the copy.\n\n\nfor  gcc/ChangeLog\n\n\tPR tree-optimization/102988\n\t* gimple-harden-conditionals.cc (detach_value): Copy SSA_NAME\n\twithout decl sharing.\n\nfor  gcc/testsuite/ChangeLog\n\n\tPR tree-optimization/102988\n\t* g++.dg/pr102988.C: New.", "tree": {"sha": "ff6568f59c755e0c03c9c90c1b6f9b9d02c15430", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff6568f59c755e0c03c9c90c1b6f9b9d02c15430"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38e4a361e79a459947540920db645f3d7fa7221a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38e4a361e79a459947540920db645f3d7fa7221a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38e4a361e79a459947540920db645f3d7fa7221a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38e4a361e79a459947540920db645f3d7fa7221a/comments", "author": null, "committer": null, "parents": [{"sha": "cfe8dbd9c08a5bce497646467c9d30942ec3efe0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfe8dbd9c08a5bce497646467c9d30942ec3efe0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfe8dbd9c08a5bce497646467c9d30942ec3efe0"}], "stats": {"total": 26, "additions": 25, "deletions": 1}, "files": [{"sha": "cfa2361d65be007c11c705b2c3c0abf8cdbecaee", "filename": "gcc/gimple-harden-conditionals.cc", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38e4a361e79a459947540920db645f3d7fa7221a/gcc%2Fgimple-harden-conditionals.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38e4a361e79a459947540920db645f3d7fa7221a/gcc%2Fgimple-harden-conditionals.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgimple-harden-conditionals.cc?ref=38e4a361e79a459947540920db645f3d7fa7221a", "patch": "@@ -123,7 +123,14 @@ detach_value (location_t loc, gimple_stmt_iterator *gsip, tree val)\n       return val;\n     }\n \n-  tree ret = copy_ssa_name (val);\n+  /* Create a SSA \"copy\" of VAL.  This could be an anonymous\n+     temporary, but it's nice to have it named after the corresponding\n+     variable.  Alas, when VAL is a DECL_BY_REFERENCE RESULT_DECL,\n+     setting (a copy of) it would be flagged by checking, so we don't\n+     use copy_ssa_name: we create an anonymous SSA name, and then give\n+     it the same identifier (rather than decl) as VAL.  */\n+  tree ret = make_ssa_name (TREE_TYPE (val));\n+  SET_SSA_NAME_VAR_OR_IDENTIFIER (ret, SSA_NAME_IDENTIFIER (val));\n \n   /* Output asm (\"\" : \"=g\" (ret) : \"0\" (val));  */\n   vec<tree, va_gc> *inputs = NULL;"}, {"sha": "05a1a8f67ed9b05db75e201548282e5f2a016e00", "filename": "gcc/testsuite/g++.dg/pr102988.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38e4a361e79a459947540920db645f3d7fa7221a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr102988.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38e4a361e79a459947540920db645f3d7fa7221a/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr102988.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fpr102988.C?ref=38e4a361e79a459947540920db645f3d7fa7221a", "patch": "@@ -0,0 +1,17 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O -fharden-conditional-branches -fchecking=1\" } */\n+\n+/* DECL_BY_REFERENCE RESULT_DECL is read-only, we can't create a copy\n+   of its (address) default def and set it.  */\n+\n+void ll();\n+struct k {\n+  ~k();\n+};\n+k ice(k *a)\n+{\n+  k v;\n+  if (&v!= a)\n+    ll();\n+  return v;\n+}"}]}