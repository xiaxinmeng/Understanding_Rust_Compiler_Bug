{"sha": "d5861a7ae04bbac479f33f6d0b6114847810255a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDU4NjFhN2FlMDRiYmFjNDc5ZjMzZjZkMGI2MTE0ODQ3ODEwMjU1YQ==", "commit": {"author": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2004-08-05T17:05:48Z"}, "committer": {"name": "David Edelsohn", "email": "dje@gcc.gnu.org", "date": "2004-08-05T17:05:48Z"}, "message": "rs6000.c (rs6000_rtx_costs): Fix mask_operand and mask64_operand thinkos.\n\n\t* config/rs6000/rs6000.c (rs6000_rtx_costs): Fix mask_operand\n\tand mask64_operand thinkos.  Handle ZERO_EXTRACT.  Handle\n\tSIGN_EXTEND / ZERO_EXTEND of MEM.  Handle rlwinm patterns.\n\nFrom-SVN: r85604", "tree": {"sha": "3f3235bad81654e7df13d846b5f0cef1cbba1920", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3f3235bad81654e7df13d846b5f0cef1cbba1920"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d5861a7ae04bbac479f33f6d0b6114847810255a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5861a7ae04bbac479f33f6d0b6114847810255a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d5861a7ae04bbac479f33f6d0b6114847810255a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d5861a7ae04bbac479f33f6d0b6114847810255a/comments", "author": null, "committer": null, "parents": [{"sha": "0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0a2b72a6ec53c08ec143fedd2811efe4d23dcc1c"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "1794b807633e4da5d592ee8bf8da804039f3f791", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5861a7ae04bbac479f33f6d0b6114847810255a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5861a7ae04bbac479f33f6d0b6114847810255a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=d5861a7ae04bbac479f33f6d0b6114847810255a", "patch": "@@ -1,3 +1,9 @@\n+2004-08-05  David Edelsohn  <edelsohn@gnu.org>\n+\n+\t* config/rs6000/rs6000.c (rs6000_rtx_costs): Fix mask_operand\n+\tand mask64_operand thinkos.  Handle ZERO_EXTRACT.  Handle\n+\tSIGN_EXTEND / ZERO_EXTEND of MEM.  Handle rlwinm patterns.\n+\n 2004-08-05  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* config/linux.h, config/i386/linux.h, config/sparc/linux.h:\n@@ -286,7 +292,7 @@\n \t* config/i386/xmmintrin.h: Include <mm_malloc.h>.\n \n 2004-08-03  H.J. Lu  <hongjiu.lu@intel.com>\n-\t    Tanguy Fautr\u00c3  <tfautre@pandora.be>\n+\t    Tanguy Fautr\ufffd  <tfautre@pandora.be>\n \n \t* config/i386/pmm_malloc.h: New file.\n "}, {"sha": "338ed8250315af323ef8ad980e19c08e80ddecd8", "filename": "gcc/config/rs6000/rs6000.c", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d5861a7ae04bbac479f33f6d0b6114847810255a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d5861a7ae04bbac479f33f6d0b6114847810255a/gcc%2Fconfig%2Frs6000%2Frs6000.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frs6000%2Frs6000.c?ref=d5861a7ae04bbac479f33f6d0b6114847810255a", "patch": "@@ -16533,12 +16533,13 @@ rs6000_rtx_costs (rtx x, int code, int outer_code ATTRIBUTE_UNUSED,\n \t  || (outer_code == AND\n \t      && (CONST_OK_FOR_LETTER_P (INTVAL (x), 'K')\n \t\t  || CONST_OK_FOR_LETTER_P (INTVAL (x), 'L')\n-\t\t  || CONST_OK_FOR_LETTER_P (INTVAL (x), 'T')))\n+\t\t  || mask_operand (x, VOIDmode)))\n \t  || outer_code == ASHIFT\n \t  || outer_code == ASHIFTRT\n \t  || outer_code == LSHIFTRT\n \t  || outer_code == ROTATE\n \t  || outer_code == ROTATERT\n+\t  || outer_code == ZERO_EXTRACT\n \t  || (outer_code == MULT\n \t      && CONST_OK_FOR_LETTER_P (INTVAL (x), 'I'))\n \t  || (outer_code == COMPARE\n@@ -16568,7 +16569,7 @@ rs6000_rtx_costs (rtx x, int code, int outer_code ATTRIBUTE_UNUSED,\n \t  && ((outer_code == AND\n \t       && (CONST_OK_FOR_LETTER_P (INTVAL (x), 'K')\n \t\t   || CONST_OK_FOR_LETTER_P (INTVAL (x), 'L')\n-\t\t   || CONST_OK_FOR_LETTER_P (INTVAL (x), 'S')))\n+\t\t   || mask64_operand (x, DImode)))\n \t      || ((outer_code == IOR || outer_code == XOR)\n \t\t  && CONST_DOUBLE_HIGH (x) == 0\n \t\t  && (CONST_DOUBLE_LOW (x)\n@@ -16728,13 +16729,16 @@ rs6000_rtx_costs (rtx x, int code, int outer_code ATTRIBUTE_UNUSED,\n     case AND:\n     case IOR:\n     case XOR:\n+    case ZERO_EXTRACT:\n+      *total = COSTS_N_INSNS (1);\n+      return false;\n+\n     case ASHIFT:\n     case ASHIFTRT:\n     case LSHIFTRT:\n     case ROTATE:\n     case ROTATERT:\n-    case SIGN_EXTEND:\n-    case ZERO_EXTEND:\n+      /* Handle mul_highpart.  */\n       if (outer_code == TRUNCATE\n \t  && GET_CODE (XEXP (x, 0)) == MULT)\n \t{\n@@ -16744,7 +16748,18 @@ rs6000_rtx_costs (rtx x, int code, int outer_code ATTRIBUTE_UNUSED,\n \t    *total = rs6000_cost->mulsi;\n \t  return true;\n \t}\n-      *total = COSTS_N_INSNS (1);\n+      else if (outer_code == AND)\n+\t*total = 0;\n+      else\n+\t*total = COSTS_N_INSNS (1);\n+      return false;\n+\n+    case SIGN_EXTEND:\n+    case ZERO_EXTEND:\n+      if (GET_CODE (XEXP (x, 0)) == MEM)\n+\t*total = 0;\n+      else\n+\t*total = COSTS_N_INSNS (1);\n       return false;\n \n     case COMPARE:"}]}