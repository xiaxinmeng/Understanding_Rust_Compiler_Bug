{"sha": "c492dc9a666e438ca8bbd2052482e8c30d8b5019", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzQ5MmRjOWE2NjZlNDM4Y2E4YmJkMjA1MjQ4MmU4YzMwZDhiNTAxOQ==", "commit": {"author": {"name": "Dorit Nuzman", "email": "dorit@il.ibm.com", "date": "2007-03-17T14:43:30Z"}, "committer": {"name": "Dorit Nuzman", "email": "dorit@gcc.gnu.org", "date": "2007-03-17T14:43:30Z"}, "message": "re PR tree-optimization/31041 (verify_stmts failed: invalid operand to binary operator with -O2 -ftree-vectorize)\n\n        PR tree-optimization/31041\n        * tree-vect-transform.c (get_initial_def_for_induction): Call\n        force_gimple_operand.\n\nFrom-SVN: r123023", "tree": {"sha": "ccf362c05136dde7e56af2263a798328ffa1b61a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ccf362c05136dde7e56af2263a798328ffa1b61a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c492dc9a666e438ca8bbd2052482e8c30d8b5019", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c492dc9a666e438ca8bbd2052482e8c30d8b5019", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c492dc9a666e438ca8bbd2052482e8c30d8b5019", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c492dc9a666e438ca8bbd2052482e8c30d8b5019/comments", "author": null, "committer": null, "parents": [{"sha": "44d974b5d205b10a3f4636de4fa9c4a2198b3a10", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44d974b5d205b10a3f4636de4fa9c4a2198b3a10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44d974b5d205b10a3f4636de4fa9c4a2198b3a10"}], "stats": {"total": 54, "additions": 50, "deletions": 4}, "files": [{"sha": "e7c89c0f4bdaf5e9793c2fa718e3af30723de120", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c492dc9a666e438ca8bbd2052482e8c30d8b5019/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c492dc9a666e438ca8bbd2052482e8c30d8b5019/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c492dc9a666e438ca8bbd2052482e8c30d8b5019", "patch": "@@ -1,3 +1,9 @@\n+2007-03-17  Dorit Nuzman  <dorit@il.ibm.com>\n+\n+\tPR tree-optimization/31041\n+\t* tree-vect-transform.c (get_initial_def_for_induction): Call\n+\tforce_gimple_operand.\n+\t\n 2007-03-17  Olga Golovanevsky  <olga@il.ibm.com>\n   \n   \t* ipa-type-escape.c (look_for_casts) : Revert code to use"}, {"sha": "478aa77606dd6e4159ccff98faa5cab1b3534a74", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c492dc9a666e438ca8bbd2052482e8c30d8b5019/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c492dc9a666e438ca8bbd2052482e8c30d8b5019/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c492dc9a666e438ca8bbd2052482e8c30d8b5019", "patch": "@@ -1,3 +1,8 @@\n+2007-03-17  Dorit Nuzman  <dorit@il.ibm.com>\n+\n+\tPR tree-optimization/31041\n+\t* gcc.dg/vect/pr31041.c: New test.\n+\n 2007-03-16  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n \n \t* g++.dg/warn/Wconversion-integer.C: New"}, {"sha": "e2b0b636e4235e0babc723917dca695831e4343d", "filename": "gcc/testsuite/gcc.dg/vect/pr31041.c", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c492dc9a666e438ca8bbd2052482e8c30d8b5019/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr31041.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c492dc9a666e438ca8bbd2052482e8c30d8b5019/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr31041.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fvect%2Fpr31041.c?ref=c492dc9a666e438ca8bbd2052482e8c30d8b5019", "patch": "@@ -0,0 +1,27 @@\n+/* { dg-do compile } */\n+/* { dg-require-effective-target vect_int } */\n+\n+#include <stdarg.h>\n+#include \"tree-vect.h\"\n+\n+typedef int int32_t;\n+struct UNewTrie\n+{\n+  int32_t index[(0x110000 >> 1)];\n+};\n+typedef struct UNewTrie UNewTrie;\n+utrie_open_3_4 ()\n+{\n+  UNewTrie *trie;\n+  int32_t i, j;\n+    {\n+      i = 0;\n+      do\n+        {\n+          trie->index[i++] = j;\n+          j += 1;\n+        }\n+      while (i < 5);\n+    }\n+}\n+/* { dg-final { cleanup-tree-dump \"vect\" } } */"}, {"sha": "bddea1e5dc26cc7d6556c38684f96d275ff90798", "filename": "gcc/tree-vect-transform.c", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c492dc9a666e438ca8bbd2052482e8c30d8b5019/gcc%2Ftree-vect-transform.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c492dc9a666e438ca8bbd2052482e8c30d8b5019/gcc%2Ftree-vect-transform.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-transform.c?ref=c492dc9a666e438ca8bbd2052482e8c30d8b5019", "patch": "@@ -548,6 +548,7 @@ get_initial_def_for_induction (tree stmt, tree iv_phi)\n   int ncopies = vf / nunits;\n   tree expr;\n   stmt_vec_info phi_info = vinfo_for_stmt (iv_phi);\n+  tree stmts;\n \n   gcc_assert (phi_info);\n \n@@ -575,16 +576,23 @@ get_initial_def_for_induction (tree stmt, tree iv_phi)\n   gcc_assert (ok);\n \n   /* Create the vector that holds the initial_value of the induction.  */\n-  new_name = init_expr;\n+  new_var = vect_get_new_vect_var (scalar_type, vect_scalar_var, \"var_\");\n+  add_referenced_var (new_var);\n+\n+  new_name = force_gimple_operand (init_expr, &stmts, false, new_var);\n+  if (stmts)\n+    {\n+      new_bb = bsi_insert_on_edge_immediate (pe, stmts);\n+      gcc_assert (!new_bb);\n+    }\n+\n   t = NULL_TREE;\n-  t = tree_cons (NULL_TREE, init_expr, t);\n+  t = tree_cons (NULL_TREE, new_name, t);\n   for (i = 1; i < nunits; i++)\n     {\n       tree tmp;\n \n       /* Create: new_name = new_name + step_expr  */\n-      new_var = vect_get_new_vect_var (scalar_type, vect_scalar_var, \"var_\");\n-      add_referenced_var (new_var);\n       tmp = fold_build2 (PLUS_EXPR, scalar_type, new_name, step_expr);\n       init_stmt = build_gimple_modify_stmt (new_var, tmp);\n       new_name = make_ssa_name (new_var, init_stmt);"}]}