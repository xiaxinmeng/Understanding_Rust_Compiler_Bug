{"sha": "328f2d79e5f2e0624f0deea5676807c17f3ec16f", "node_id": "C_kwDOANBUbNoAKDMyOGYyZDc5ZTVmMmUwNjI0ZjBkZWVhNTY3NjgwN2MxN2YzZWMxNmY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-11-09T21:06:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-09T21:06:28Z"}, "message": "Merge #802\n\n802: More help on running clang-format locally r=philberty a=dkm\n\nAdd note on using git-clang-format and clang-format-diff.py.\r\n\r\nRemove the `clang-format` from the required items of PR as it's not enforced\r\nanymore. It's now handled by regular code review.\r\n\r\nRefs #242\r\n\r\nSigned-off-by: Marc Poulhi\u00e8s <dkm@kataplop.net>\n\nCo-authored-by: Marc Poulhi\u00e8s <dkm@kataplop.net>", "tree": {"sha": "9869f87f5770e06dcc86eac2f515b42c11bd3da0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9869f87f5770e06dcc86eac2f515b42c11bd3da0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/328f2d79e5f2e0624f0deea5676807c17f3ec16f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhiuLUCRBK7hj4Ov3rIwAA0WMIAFENJKH45OcYQi94KAX0sD/d\nLBhPEt4jZk5s0iFa93gNnkyd6pUpBxmUCZoPEI9i2CZ6bBeD9h2XUGSWrLTifOW0\nuXMy777HrEGetQiKH1iHasQATEecvr7XkCqJ3lk3n/V482YSwsXn2zqV6cbh2J5h\nfii1BAS8NDU+N3Nm5eTYHf30SG0YNQbQFAv2tAnns9yYTIep04Gxrjc6DGxHiDft\nrkDwBXHz6p8oF9ilEMhIF0UNMJeP0BJVWhU6wOMy1qZAwj26Z+JisYsmWHHQV0ka\n3ICIb/nVVtA3N480+xxsyFshDwwFZjGI5FMGuzOjv0xi+LgIYSWFaRojoN7ZsCA=\n=bk5w\n-----END PGP SIGNATURE-----\n", "payload": "tree 9869f87f5770e06dcc86eac2f515b42c11bd3da0\nparent 07fee63db7b06207917849410e12de750bdb646f\nparent 2b84783712b683fd61ee14e495b31efad1a268bc\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1636491988 +0000\ncommitter GitHub <noreply@github.com> 1636491988 +0000\n\nMerge #802\n\n802: More help on running clang-format locally r=philberty a=dkm\n\nAdd note on using git-clang-format and clang-format-diff.py.\r\n\r\nRemove the `clang-format` from the required items of PR as it's not enforced\r\nanymore. It's now handled by regular code review.\r\n\r\nRefs #242\r\n\r\nSigned-off-by: Marc Poulhi\u00e8s <dkm@kataplop.net>\n\nCo-authored-by: Marc Poulhi\u00e8s <dkm@kataplop.net>\n"}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/328f2d79e5f2e0624f0deea5676807c17f3ec16f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/328f2d79e5f2e0624f0deea5676807c17f3ec16f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/328f2d79e5f2e0624f0deea5676807c17f3ec16f/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07fee63db7b06207917849410e12de750bdb646f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07fee63db7b06207917849410e12de750bdb646f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07fee63db7b06207917849410e12de750bdb646f"}, {"sha": "2b84783712b683fd61ee14e495b31efad1a268bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2b84783712b683fd61ee14e495b31efad1a268bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2b84783712b683fd61ee14e495b31efad1a268bc"}], "stats": {"total": 78, "additions": 71, "deletions": 7}, "files": [{"sha": "c0d75d7e9e4af1f70985df941ef44fd934345d03", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 71, "deletions": 7, "changes": 78, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/328f2d79e5f2e0624f0deea5676807c17f3ec16f/CONTRIBUTING.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/328f2d79e5f2e0624f0deea5676807c17f3ec16f/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/CONTRIBUTING.md?ref=328f2d79e5f2e0624f0deea5676807c17f3ec16f", "patch": "@@ -40,17 +40,81 @@ These will be imported into a GitHub PR to follow the normal review process, and\n \n * Where possible please add test cases to `gcc/testsuite/rust/` for all PRs. Some issues may not be testable via dejagnu/automation such as debug dump changes.\n \n-* PRs won't be merged until `clang-format` and the build and tests pass.\n+* Follow the [GCC coding style](https://gcc.gnu.org/codingconventions.html) (see `clang-format` below).\n \n-** Running `clang-format` locally\n+* PRs won't be merged until the build and tests pass.\n \n-... corresponding to what the _Clang Format Lint_ (`.github/workflows/clang-format.yml`) is doing, with `clang-format-10` being available locally, and avoiding the Docker overhead.\n+* Please take the time to create good git commit messages. See the existing format of them in the git log or refer to something like: https://chris.beams.io/posts/git-commit/\n+\n+#### Running `clang-format` locally\n \n-    $ wget 'https://github.com/DoozyX/clang-format-lint-action/raw/v0.11/run-clang-format.py'\n-    $ cp contrib/clang-format .clang-format\n-    $ python3 run-clang-format.py --clang-format-executable clang-format-10 --recursive --extensions h,cc gcc/rust/\n+* on all files using python scripts\n+... corresponding to what the _Clang Format Lint_ (`.github/workflows/clang-format.yml`) is doing, with `clang-format-10` being available locally, and avoiding the Docker overhead.\n \n-* Please take the time to create good git commit messages see the existing format of them in the git log or refer to something like: https://chris.beams.io/posts/git-commit/\n+```shell\n+$ wget 'https://github.com/DoozyX/clang-format-lint-action/raw/v0.11/run-clang-format.py'\n+$ cp contrib/clang-format .clang-format\n+$ python3 run-clang-format.py --clang-format-executable clang-format-10 --recursive --extensions h,cc gcc/rust/\n+```\n+\n+* on a given patch using python scripts\n+See the [clang-format documentation](https://clang.llvm.org/docs/ClangFormat.html#script-for-patch-reformatting) :\n+\n+    $ git diff -U0 --no-color HEAD^ | clang-format-diff.py -i -p1\n+\n+* using `git` interface\n+\n+At least on Debian and its derivative, each `clang-format` packages also comes\n+with `git-clang-format` command that can be used easily. It applies on staged\n+changes, and any modification can be seen as unstaged changes:\n+\n+```diff\n+$ git diff --cached\n+diff --git a/gcc/rust/rust-abi.h b/gcc/rust/rust-abi.h\n+index bd3043295ce..9559374ce60 100644\n+--- a/gcc/rust/rust-abi.h\n++++ b/gcc/rust/rust-abi.h\n+@@ -22,10 +22,10 @@ namespace Rust {\n+ enum ABI\n+ {\n+   UNKNOWN,\n+-  RUST,\n++     RUST,\n+   INTRINSIC,\n+   C,\n+-  CDECL,\n++     CDECL,\n+   STDCALL,\n+   FASTCALL,\n+ };\n+ \n+gccrs/gcc/rust on \ue0a0 dkm/clang_format [$!+?]\n+\u276f git clang-format\n+changed files:\n+    gcc/rust/rust-abi.h\n+ \n+gccrs/gcc/rust on \ue0a0 dkm/clang_format [$!+?]\n+$ git diff rust-abi.h\n+diff --git a/gcc/rust/rust-abi.h b/gcc/rust/rust-abi.h\n+index 9559374ce60..bd3043295ce 100644\n+--- a/gcc/rust/rust-abi.h\n++++ b/gcc/rust/rust-abi.h\n+@@ -22,10 +22,10 @@ namespace Rust {\n+ enum ABI\n+ {\n+   UNKNOWN,\n+-     RUST,\n++  RUST,\n+   INTRINSIC,\n+   C,\n+-     CDECL,\n++  CDECL,\n+   STDCALL,\n+   FASTCALL,\n+ };\n+```\n+\n+Also note that you can use a given version of `clang-format` by using `git clang-format-10` if you have installed that particular version.\n \n Thanks! :heart: :heart: :heart:\n "}]}