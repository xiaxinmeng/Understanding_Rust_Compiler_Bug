{"sha": "38ce4489635f2d65de965af3ec5d5c4adf7762d9", "node_id": "C_kwDOANBUbNoAKDM4Y2U0NDg5NjM1ZjJkNjVkZTk2NWFmM2VjNWQ1YzRhZGY3NzYyZDk", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-03-17T13:33:07Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2022-03-17T17:51:53Z"}, "message": "libstdc++: Rewrite __moneypunct_cache::_M_cache [PR104966]\n\nGCC thinks the following can lead to a buffer overflow when __ns.size()\nequals zero:\n\n\t  const basic_string<_CharT>& __ns = __mp.negative_sign();\n\t  _M_negative_sign_size = __ns.size();\n\t  __negative_sign = new _CharT[_M_negative_sign_size];\n\t  __ns.copy(__negative_sign, _M_negative_sign_size);\n\nThis happens because operator new might be replaced with something that\nwrites to this->_M_negative_sign_size and so the basic_string::copy call\ncould use a non-zero size to write to a zero-length buffer.\n\nThe solution suggested by Richi is to cache the size in a local variable\nso that the compiler knows it won't be changed between the allocation\nand the copy.\n\nThis commit goes further and rewrites the whole function to use RAII and\ndelay all modifications of *this until after all allocations have\nsucceeded. The RAII helper type caches the size and copies the string\nand owns the memory until told to release it.\n\nlibstdc++-v3/ChangeLog:\n\n\tPR middle-end/104966\n\t* include/bits/locale_facets_nonio.tcc\n\t(__moneypunct_cache::_M_cache): Replace try-catch with RAII and\n\tmake all string copies before any stores to *this.", "tree": {"sha": "e38771420137523877f2ba635ff114e7faa913fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e38771420137523877f2ba635ff114e7faa913fe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/38ce4489635f2d65de965af3ec5d5c4adf7762d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38ce4489635f2d65de965af3ec5d5c4adf7762d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38ce4489635f2d65de965af3ec5d5c4adf7762d9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38ce4489635f2d65de965af3ec5d5c4adf7762d9/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d47c0512a265d4bb3ab9e56259fd1e4f4d42c75", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d47c0512a265d4bb3ab9e56259fd1e4f4d42c75", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d47c0512a265d4bb3ab9e56259fd1e4f4d42c75"}], "stats": {"total": 102, "additions": 51, "deletions": 51}, "files": [{"sha": "8c37a706db88e99416300a3cf95bf06ecc3f8fd6", "filename": "libstdc++-v3/include/bits/locale_facets_nonio.tcc", "status": "modified", "additions": 51, "deletions": 51, "changes": 102, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/38ce4489635f2d65de965af3ec5d5c4adf7762d9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.tcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/38ce4489635f2d65de965af3ec5d5c4adf7762d9/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.tcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Flocale_facets_nonio.tcc?ref=38ce4489635f2d65de965af3ec5d5c4adf7762d9", "patch": "@@ -71,61 +71,61 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n       const moneypunct<_CharT, _Intl>& __mp =\n \tuse_facet<moneypunct<_CharT, _Intl> >(__loc);\n \n+      struct _Scoped_str\n+      {\n+\tsize_t _M_len;\n+\t_CharT* _M_str;\n+\n+\texplicit\n+\t_Scoped_str(const basic_string<_CharT>& __str)\n+\t: _M_len(__str.size()), _M_str(new _CharT[_M_len])\n+\t{ __str.copy(_M_str, _M_len); }\n+\n+\t~_Scoped_str() { delete[] _M_str; }\n+\n+\tvoid\n+\t_M_release(const _CharT*& __p, size_t& __n)\n+\t{\n+\t  __p = _M_str;\n+\t  __n = _M_len;\n+\t  _M_str = 0;\n+\t}\n+      };\n+\n+      _Scoped_str __curr_symbol(__mp.curr_symbol());\n+      _Scoped_str __positive_sign(__mp.positive_sign());\n+      _Scoped_str __negative_sign(__mp.negative_sign());\n+\n+      const string& __g = __mp.grouping();\n+      const size_t __g_size = __g.size();\n+      char* const __grouping = new char[__g_size];\n+      __g.copy(__grouping, __g_size);\n+\n+      // All allocations succeeded without throwing, OK to modify *this now.\n+\n+      _M_grouping = __grouping;\n+      _M_grouping_size = __g_size;\n+      _M_use_grouping = (__g_size\n+\t\t\t && static_cast<signed char>(__grouping[0]) > 0\n+\t\t\t && (__grouping[0]\n+\t\t\t     != __gnu_cxx::__numeric_traits<char>::__max));\n+\n       _M_decimal_point = __mp.decimal_point();\n       _M_thousands_sep = __mp.thousands_sep();\n+\n+      __curr_symbol._M_release(_M_curr_symbol, _M_curr_symbol_size);\n+      __positive_sign._M_release(_M_positive_sign, _M_positive_sign_size);\n+      __negative_sign._M_release(_M_negative_sign, _M_negative_sign_size);\n+\n       _M_frac_digits = __mp.frac_digits();\n+      _M_pos_format = __mp.pos_format();\n+      _M_neg_format = __mp.neg_format();\n \n-      char* __grouping = 0;\n-      _CharT* __curr_symbol = 0;\n-      _CharT* __positive_sign = 0;\n-      _CharT* __negative_sign = 0;     \n-      __try\n-\t{\n-\t  const string& __g = __mp.grouping();\n-\t  _M_grouping_size = __g.size();\n-\t  __grouping = new char[_M_grouping_size];\n-\t  __g.copy(__grouping, _M_grouping_size);\n-\t  _M_use_grouping = (_M_grouping_size\n-\t\t\t     && static_cast<signed char>(__grouping[0]) > 0\n-\t\t\t     && (__grouping[0]\n-\t\t\t\t != __gnu_cxx::__numeric_traits<char>::__max));\n-\n-\t  const basic_string<_CharT>& __cs = __mp.curr_symbol();\n-\t  _M_curr_symbol_size = __cs.size();\n-\t  __curr_symbol = new _CharT[_M_curr_symbol_size];\n-\t  __cs.copy(__curr_symbol, _M_curr_symbol_size);\n-\n-\t  const basic_string<_CharT>& __ps = __mp.positive_sign();\n-\t  _M_positive_sign_size = __ps.size();\n-\t  __positive_sign = new _CharT[_M_positive_sign_size];\n-\t  __ps.copy(__positive_sign, _M_positive_sign_size);\n-\n-\t  const basic_string<_CharT>& __ns = __mp.negative_sign();\n-\t  _M_negative_sign_size = __ns.size();\n-\t  __negative_sign = new _CharT[_M_negative_sign_size];\n-\t  __ns.copy(__negative_sign, _M_negative_sign_size);\n-\n-\t  _M_pos_format = __mp.pos_format();\n-\t  _M_neg_format = __mp.neg_format();\n-\n-\t  const ctype<_CharT>& __ct = use_facet<ctype<_CharT> >(__loc);\n-\t  __ct.widen(money_base::_S_atoms,\n-\t\t     money_base::_S_atoms + money_base::_S_end, _M_atoms);\n-\n-\t  _M_grouping = __grouping;\n-\t  _M_curr_symbol = __curr_symbol;\n-\t  _M_positive_sign = __positive_sign;\n-\t  _M_negative_sign = __negative_sign;\n-\t  _M_allocated = true;\n-\t}\n-      __catch(...)\n-\t{\n-\t  delete [] __grouping;\n-\t  delete [] __curr_symbol;\n-\t  delete [] __positive_sign;\n-\t  delete [] __negative_sign;\n-\t  __throw_exception_again;\n-\t}\n+      const ctype<_CharT>& __ct = use_facet<ctype<_CharT> >(__loc);\n+      __ct.widen(money_base::_S_atoms,\n+\t\t money_base::_S_atoms + money_base::_S_end, _M_atoms);\n+\n+      _M_allocated = true;\n     }\n \n _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11"}]}