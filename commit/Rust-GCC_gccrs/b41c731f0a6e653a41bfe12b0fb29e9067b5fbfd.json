{"sha": "b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQxYzczMWYwYTZlNjUzYTQxYmZlMTJiMGZiMjllOTA2N2I1ZmJmZA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T08:19:33Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-04-25T08:19:33Z"}, "message": "[multiple changes]\n\n2017-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n\n\t* sem_ch3.adb, exp_util.adb, sem_prag.adb, freeze.adb, sem_util.adb:\n\tMinor reformatting.\n\n2017-04-25  Ed Schonberg  <schonberg@adacore.com>\n\n\t* scng.adb (Scan): Handle '@' appropriately.\n\t* sem_ch5.adb: Code cleanup.\n\nFrom-SVN: r247142", "tree": {"sha": "fe30f7e59237aa4b314e0028da2376615a1758b0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fe30f7e59237aa4b314e0028da2376615a1758b0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd/comments", "author": null, "committer": null, "parents": [{"sha": "b5360737281eab7c537753a74eef87a8312ef1dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b5360737281eab7c537753a74eef87a8312ef1dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b5360737281eab7c537753a74eef87a8312ef1dc"}], "stats": {"total": 134, "additions": 78, "deletions": 56}, "files": [{"sha": "353a2569b212e20f0313f92aed0c8e554bbb976e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd", "patch": "@@ -1,3 +1,13 @@\n+2017-04-25  Hristian Kirtchev  <kirtchev@adacore.com>\n+\n+\t* sem_ch3.adb, exp_util.adb, sem_prag.adb, freeze.adb, sem_util.adb:\n+\tMinor reformatting.\n+\n+2017-04-25  Ed Schonberg  <schonberg@adacore.com>\n+\n+\t* scng.adb (Scan): Handle '@' appropriately.\n+\t* sem_ch5.adb: Code cleanup.\n+\n 2017-04-25  Ed Schonberg  <schonberg@adacore.com>\n \n \t* freeze.adb (Check_Expression_Function): Do not check for the"}, {"sha": "cc3be9256c14aec8f915a488c8dea33ed3492231", "filename": "gcc/ada/exp_util.adb", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd/gcc%2Fada%2Fexp_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd/gcc%2Fada%2Fexp_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_util.adb?ref=b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd", "patch": "@@ -1057,7 +1057,6 @@ package body Exp_Util is\n       Adjust_Sloc   : Boolean;\n       Needs_Wrapper : out Boolean)\n    is\n-\n       function Replace_Entity (N : Node_Id) return Traverse_Result;\n       --  Replace reference to formal of inherited operation or to primitive\n       --  operation of root type, with corresponding entity for derived type,\n@@ -1102,8 +1101,8 @@ package body Exp_Util is\n             if Present (New_E) then\n                Rewrite (N, New_Occurrence_Of (New_E, Sloc (N)));\n \n-               --  If the entity is an overridden primitive, we must build\n-               --  a wrapper for the current inherited operation.\n+               --  If the entity is an overridden primitive, we must build a\n+               --  wrapper for the current inherited operation.\n \n                if Is_Subprogram (New_E) then\n                   Needs_Wrapper := True;"}, {"sha": "431fb2921398f61987bd19d17b4fa23a2249639d", "filename": "gcc/ada/freeze.adb", "status": "modified", "additions": 32, "deletions": 29, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd/gcc%2Fada%2Ffreeze.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd/gcc%2Fada%2Ffreeze.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ffreeze.adb?ref=b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd", "patch": "@@ -1404,12 +1404,12 @@ package body Freeze is\n       A_Post        : Node_Id;\n       A_Pre         : Node_Id;\n       Decls         : List_Id;\n+      Needs_Wrapper : Boolean;\n+      New_Prag      : Node_Id;\n       Op_Node       : Elmt_Id;\n       Par_Prim      : Entity_Id;\n       Par_Type      : Entity_Id;\n-      New_Prag      : Node_Id;\n       Prim          : Entity_Id;\n-      Needs_Wrapper : Boolean;\n \n    begin\n       Op_Node := First_Elmt (Prim_Ops);\n@@ -1452,8 +1452,6 @@ package body Freeze is\n       --  require a wrapper to handle inherited conditions that call other\n       --  primitives, so that LSP can be verified/enforced.\n \n-      --  Wrapper construction TBD.\n-\n       Op_Node := First_Elmt (Prim_Ops);\n       while Present (Op_Node) loop\n          Decls := Empty_List;\n@@ -1511,34 +1509,34 @@ package body Freeze is\n             --  controlling actuals are conversions to the corresponding type\n             --  in the parent primitive:\n \n-            --  procedure New_Prim (F1 : T1.; ...) is\n-            --     pragma Check (Precondition,  Expr);\n-            --  begin\n-            --     Par_Prim (Par_Type (F1) ..);\n-            --  end;\n-            --\n-            --  If the primitive is a function the statement is a call.\n+            --    procedure New_Prim (F1 : T1.; ...) is\n+            --       pragma Check (Precondition,  Expr);\n+            --    begin\n+            --       Par_Prim (Par_Type (F1) ..);\n+            --    end;\n+\n+            --  If the primitive is a function the statement is a call\n \n             declare\n                Loc        : constant Source_Ptr := Sloc (R);\n-               Formal     : Entity_Id;\n                Actuals    : List_Id;\n+               Call       : Node_Id;\n+               Formal     : Entity_Id;\n                New_F_Spec : Node_Id;\n                New_Formal : Entity_Id;\n                New_Proc   : Node_Id;\n                New_Spec   : Node_Id;\n-               Call       : Node_Id;\n \n             begin\n-               Actuals  := Empty_List;\n-               New_Spec := Build_Overriding_Spec (Par_Prim, R);\n+               Actuals    := Empty_List;\n+               New_Spec   := Build_Overriding_Spec (Par_Prim, R);\n                Formal     := First_Formal (Par_Prim);\n                New_F_Spec := First (Parameter_Specifications (New_Spec));\n \n                while Present (Formal) loop\n                   New_Formal := Defining_Identifier (New_F_Spec);\n \n-                  --  If controlling argument, add conversion.\n+                  --  If controlling argument, add conversion\n \n                   if Etype (Formal) = Par_Type then\n                      Append_To (Actuals,\n@@ -1555,24 +1553,29 @@ package body Freeze is\n                end loop;\n \n                if Ekind (Par_Prim) = E_Procedure then\n-                  Call := Make_Procedure_Call_Statement (Loc,\n-                    Parameter_Associations => Actuals,\n-                    Name => New_Occurrence_Of (Par_Prim, Loc));\n+                  Call :=\n+                    Make_Procedure_Call_Statement (Loc,\n+                      Name                   =>\n+                        New_Occurrence_Of (Par_Prim, Loc),\n+                      Parameter_Associations => Actuals);\n                else\n-                  Call := Make_Simple_Return_Statement (Loc,\n+                  Call :=\n+                    Make_Simple_Return_Statement (Loc,\n                      Expression =>\n                        Make_Function_Call (Loc,\n-                         Parameter_Associations => Actuals,\n-                      Name => New_Occurrence_Of (Par_Prim, Loc)));\n+                         Name                   =>\n+                           New_Occurrence_Of (Par_Prim, Loc),\n+                         Parameter_Associations => Actuals));\n                end if;\n \n-               New_Proc := Make_Subprogram_Body (Loc,\n-                Specification              => New_Spec,\n-                Declarations               => Decls,\n-                Handled_Statement_Sequence =>\n-                  Make_Handled_Sequence_Of_Statements (Loc,\n-                    Statements => New_List (Call),\n-                    End_Label  => Make_Identifier (Loc, Chars (Prim))));\n+               New_Proc :=\n+                 Make_Subprogram_Body (Loc,\n+                   Specification              => New_Spec,\n+                   Declarations               => Decls,\n+                   Handled_Statement_Sequence =>\n+                     Make_Handled_Sequence_Of_Statements (Loc,\n+                       Statements => New_List (Call),\n+                       End_Label  => Make_Identifier (Loc, Chars (Prim))));\n \n                Insert_After (Parent (R), New_Proc);\n                Analyze (New_Proc);"}, {"sha": "137a2c00d837ae731e0ce37248b433f21531ccf3", "filename": "gcc/ada/scng.adb", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd/gcc%2Fada%2Fscng.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd/gcc%2Fada%2Fscng.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fscng.adb?ref=b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd", "patch": "@@ -2052,13 +2052,16 @@ package body Scng is\n             --  T'Digits'Img. Strings literals are included for things like\n             --  \"abs\"'Address. Other literals are included to give better error\n             --  behavior for illegal cases like 123'Img.\n+            --  In Ada2020 a target name (i.e. @) is a valid prefix of an\n+            --  attribute, and functions like a name.\n \n             if Prev_Token = Tok_Identifier\n                or else Prev_Token = Tok_Right_Paren\n                or else Prev_Token = Tok_All\n                or else Prev_Token = Tok_Delta\n                or else Prev_Token = Tok_Digits\n                or else Prev_Token = Tok_Project\n+               or else Prev_Token = Tok_At_Sign\n                or else Prev_Token in Token_Class_Literal\n             then\n                Token := Tok_Apostrophe;"}, {"sha": "cc06b92ed330e40e2f6d7b6a3b05580567871650", "filename": "gcc/ada/sem_ch3.adb", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd/gcc%2Fada%2Fsem_ch3.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd/gcc%2Fada%2Fsem_ch3.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch3.adb?ref=b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd", "patch": "@@ -17660,8 +17660,9 @@ package body Sem_Ch3 is\n          end if;\n \n          while Present (Disc) loop\n-            --  If no further associations return the discriminant, value\n-            --  will be found on the second pass.\n+\n+            --  If no further associations return the discriminant, value will\n+            --  be found on the second pass.\n \n             if No (Assoc) then\n                return Result;"}, {"sha": "c5f4732d3161ba59ad812f7c578d0a6f2be55637", "filename": "gcc/ada/sem_ch5.adb", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd/gcc%2Fada%2Fsem_ch5.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd/gcc%2Fada%2Fsem_ch5.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch5.adb?ref=b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd", "patch": "@@ -570,15 +570,6 @@ package body Sem_Ch5 is\n \n       Resolve (Rhs, T1);\n \n-      --  If the right-hand side contains target names, expansion has been\n-      --  disabled to prevent expansion that might move target names out of\n-      --  the context of the assignment statement. Restore the expander mode\n-      --  now so that assignment statement can be properly expanded.\n-\n-      if Nkind (N) = N_Assignment_Statement and then Has_Target_Names (N) then\n-         Expander_Mode_Restore;\n-      end if;\n-\n       --  This is the point at which we check for an unset reference\n \n       Check_Unset_Reference (Rhs);\n@@ -939,6 +930,15 @@ package body Sem_Ch5 is\n    <<Leave>>\n       Current_LHS := Empty;\n       Restore_Ghost_Mode (Mode);\n+\n+      --  If the right-hand side contains target names, expansion has been\n+      --  disabled to prevent expansion that might move target names out of\n+      --  the context of the assignment statement. Restore the expander mode\n+      --  now so that assignment statement can be properly expanded.\n+\n+      if Nkind (N) = N_Assignment_Statement and then Has_Target_Names (N) then\n+         Expander_Mode_Restore;\n+      end if;\n    end Analyze_Assignment;\n \n    -----------------------------"}, {"sha": "21c5e07afcafdeb95d10667d27a729acc89890e0", "filename": "gcc/ada/sem_prag.adb", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd/gcc%2Fada%2Fsem_prag.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd/gcc%2Fada%2Fsem_prag.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_prag.adb?ref=b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd", "patch": "@@ -27026,9 +27026,6 @@ package body Sem_Prag is\n       Inher_Id       : Entity_Id := Empty;\n       Keep_Pragma_Id : Boolean := False) return Node_Id\n    is\n-      Needs_Wrapper : Boolean;\n-      pragma Unreferenced (Needs_Wrapper);\n-\n       function Suppress_Reference (N : Node_Id) return Traverse_Result;\n       --  Detect whether node N references a formal parameter subject to\n       --  pragma Unreferenced. If this is the case, set Comes_From_Source\n@@ -27065,11 +27062,14 @@ package body Sem_Prag is\n \n       --  Local variables\n \n-      Loc          : constant Source_Ptr := Sloc (Prag);\n-      Prag_Nam     : constant Name_Id    := Pragma_Name (Prag);\n-      Check_Prag   : Node_Id;\n-      Msg_Arg      : Node_Id;\n-      Nam          : Name_Id;\n+      Loc        : constant Source_Ptr := Sloc (Prag);\n+      Prag_Nam   : constant Name_Id    := Pragma_Name (Prag);\n+      Check_Prag : Node_Id;\n+      Msg_Arg    : Node_Id;\n+      Nam        : Name_Id;\n+\n+      Needs_Wrapper : Boolean;\n+      pragma Unreferenced (Needs_Wrapper);\n \n    --  Start of processing for Build_Pragma_Check_Equivalent\n \n@@ -27097,8 +27097,11 @@ package body Sem_Prag is\n          --  Build the inherited class-wide condition\n \n          Build_Class_Wide_Expression\n-           (Check_Prag, Subp_Id, Inher_Id, Adjust_Sloc => True,\n-             Needs_Wrapper =>  Needs_Wrapper);\n+           (Prag          => Check_Prag,\n+            Subp          => Subp_Id,\n+            Par_Subp      => Inher_Id,\n+            Adjust_Sloc   => True,\n+            Needs_Wrapper => Needs_Wrapper);\n \n       --  If not an inherited condition simply copy the original pragma\n "}, {"sha": "5ab9b963787dd9a44b207f27bdb1732368b4c9b2", "filename": "gcc/ada/sem_util.adb", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd/gcc%2Fada%2Fsem_util.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd/gcc%2Fada%2Fsem_util.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_util.adb?ref=b41c731f0a6e653a41bfe12b0fb29e9067b5fbfd", "patch": "@@ -1596,18 +1596,21 @@ package body Sem_Util is\n       Formal_Spec : Node_Id;\n       Formal_Type : Node_Id;\n       New_Spec    : Node_Id;\n+\n    begin\n       New_Spec := Copy_Subprogram_Spec (Spec);\n+\n       Formal_Spec := First (Parameter_Specifications (New_Spec));\n       while Present (Formal_Spec) loop\n          Formal_Type := Parameter_Type (Formal_Spec);\n+\n          if Is_Entity_Name (Formal_Type)\n            and then Entity (Formal_Type) = Par_Typ\n          then\n             Rewrite (Formal_Type, New_Occurrence_Of (Typ, Loc));\n          end if;\n \n-         --  Nothing needs to be done for access parameters.\n+         --  Nothing needs to be done for access parameters\n \n          Next (Formal_Spec);\n       end loop;\n@@ -13588,8 +13591,8 @@ package body Sem_Util is\n             --  names.\n \n             when N_Explicit_Dereference =>\n-               return not Nkind_In\n-                 (Original_Node (N), N_If_Expression, N_Case_Expression);\n+               return not Nkind_In (Original_Node (N), N_Case_Expression,\n+                                                       N_If_Expression);\n \n             --  A view conversion of a tagged object is an object reference\n "}]}