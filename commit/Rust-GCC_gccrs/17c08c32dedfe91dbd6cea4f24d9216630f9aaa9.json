{"sha": "17c08c32dedfe91dbd6cea4f24d9216630f9aaa9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTdjMDhjMzJkZWRmZTkxZGJkNmNlYTRmMjRkOTIxNjYzMGY5YWFhOQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "pcarlini@suse.de", "date": "2004-09-24T15:26:35Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2004-09-24T15:26:35Z"}, "message": "localename.cc (locale::locale(const char*)): Minor tweaks: rename a variable, move an assignment.\n\n2004-09-24  Paolo Carlini  <pcarlini@suse.de>\n\n\t* src/localename.cc (locale::locale(const char*)): Minor tweaks:\n\trename a variable, move an assignment.\n\t(locale::_Impl::_Impl(const char*, size_t)): Likewise, minor tweak.\n\nFrom-SVN: r88043", "tree": {"sha": "d173e6471b9315c71d80c18d7db60b62fafabed0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d173e6471b9315c71d80c18d7db60b62fafabed0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/17c08c32dedfe91dbd6cea4f24d9216630f9aaa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17c08c32dedfe91dbd6cea4f24d9216630f9aaa9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/17c08c32dedfe91dbd6cea4f24d9216630f9aaa9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/17c08c32dedfe91dbd6cea4f24d9216630f9aaa9/comments", "author": null, "committer": null, "parents": [{"sha": "43c2a69adf87b340b098de12592efc647e0a88b1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43c2a69adf87b340b098de12592efc647e0a88b1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43c2a69adf87b340b098de12592efc647e0a88b1"}], "stats": {"total": 42, "additions": 22, "deletions": 20}, "files": [{"sha": "560c5327ac41d3b322fafe01628729243b22ef85", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17c08c32dedfe91dbd6cea4f24d9216630f9aaa9/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17c08c32dedfe91dbd6cea4f24d9216630f9aaa9/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=17c08c32dedfe91dbd6cea4f24d9216630f9aaa9", "patch": "@@ -1,3 +1,9 @@\n+2004-09-24  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* src/localename.cc (locale::locale(const char*)): Minor tweaks:\n+\trename a variable, move an assignment.\n+\t(locale::_Impl::_Impl(const char*, size_t)): Likewise, minor tweak.\n+\n 2004-09-24  Paul Brook  <paul@codesourcery.com>\n \n \t* testsuite/27_io/basic_filebuf/sgetn/char/1-in.cc: XFAIL more arm"}, {"sha": "f6f961fbca014213ea7abb8adcd1c47279b246f2", "filename": "libstdc++-v3/src/localename.cc", "status": "modified", "additions": 16, "deletions": 20, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/17c08c32dedfe91dbd6cea4f24d9216630f9aaa9/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/17c08c32dedfe91dbd6cea4f24d9216630f9aaa9/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2Flocalename.cc?ref=17c08c32dedfe91dbd6cea4f24d9216630f9aaa9", "patch": "@@ -59,19 +59,19 @@ namespace std\n \t    else\n \t      {\n \t\t// LANG may set a default different from \"C\".\n-\t\tstring __res;\n-\t\tchar* __env = std::getenv(\"LANG\");\n+\t\tstring __lang;\n+\t\t__env = std::getenv(\"LANG\");\n \t\tif (!__env || std::strcmp(__env, \"\") == 0 \n \t\t    || std::strcmp(__env, \"C\") == 0 \n \t\t    || std::strcmp(__env, \"POSIX\") == 0)\n-\t\t  __res = \"C\";\n+\t\t  __lang = \"C\";\n \t\telse \n-\t\t  __res = __env;\n+\t\t  __lang = __env;\n \t\t\n \t\t// Scan the categories looking for the first one\n \t\t// different from LANG.\n \t\tsize_t __i = 0;\n-\t\tif (__res == \"C\")\n+\t\tif (__lang == \"C\")\n \t\t  for (; __i < _S_categories_size; ++__i)\n \t\t    {\n \t\t      __env = std::getenv(_S_categories[__i]);\n@@ -85,7 +85,7 @@ namespace std\n \t\t    {\n \t\t      __env = std::getenv(_S_categories[__i]);\n \t\t      if (__env && std::strcmp(__env, \"\") != 0\n-\t\t\t  && __res != __env)\n+\t\t\t  && __lang != __env)\n \t\t\tbreak;\n \t\t    }\n \t\n@@ -99,33 +99,29 @@ namespace std\n \t\t      {\n \t\t\t__str += _S_categories[__j];\n \t\t\t__str += '=';\n-\t\t\t__str += __res;\n+\t\t\t__str += __lang;\n \t\t\t__str += ';';\n \t\t      }\n \t\t    __str += _S_categories[__i];\n \t\t    __str += '=';\n \t\t    __str += __env;\n \t\t    __str += ';';\n-\t\t    __i++;\n+\t\t    ++__i;\n \t\t    for (; __i < _S_categories_size; ++__i)\n \t\t      {\n \t\t\t__env = std::getenv(_S_categories[__i]);\n+\t\t\t__str += _S_categories[__i];\n \t\t\tif (!__env || std::strcmp(__env, \"\") == 0)\n \t\t\t  {\n-\t\t\t    __str += _S_categories[__i];\n \t\t\t    __str += '=';\n-\t\t\t    __str += __res;\n+\t\t\t    __str += __lang;\n \t\t\t    __str += ';';\n \t\t\t  }\n \t\t\telse if (std::strcmp(__env, \"C\") == 0\n \t\t\t\t || std::strcmp(__env, \"POSIX\") == 0)\n-\t\t\t  {\n-\t\t\t    __str += _S_categories[__i];\n-\t\t\t    __str += \"=C;\";\n-\t\t\t  }\n+\t\t\t  __str += \"=C;\";\n \t\t\telse\n \t\t\t  {\n-\t\t\t    __str += _S_categories[__i];\n \t\t\t    __str += '=';\n \t\t\t    __str += __env;\n \t\t\t    __str += ';';\n@@ -136,10 +132,10 @@ namespace std\n \t\t  }\n \t\t// ... otherwise either an additional instance of\n \t\t// the \"C\" locale or LANG.\n-\t\telse if (__res == \"C\")\n+\t\telse if (__lang == \"C\")\n \t\t  (_M_impl = _S_classic)->_M_add_reference();\n \t\telse\n-\t\t  _M_impl = new _Impl(__res.c_str(), 1);\n+\t\t  _M_impl = new _Impl(__lang.c_str(), 1);\n \t      }\n \t  }\n       }\n@@ -179,9 +175,9 @@ namespace std\n \n   // Construct named _Impl.\n   locale::_Impl::\n-  _Impl(const char* __s, size_t __refs) \n+  _Impl(const char* __s, size_t __refs)\n   : _M_refcount(__refs), _M_facets(0), _M_facets_size(_GLIBCXX_NUM_FACETS),\n-  _M_caches(0), _M_names(0)\n+    _M_caches(0), _M_names(0)\n   {\n     // Initialize the underlying locale model, which also checks to\n     // see if the given name is valid.\n@@ -202,7 +198,7 @@ namespace std\n \n \t// Name the categories.\n \tconst size_t __len = std::strlen(__s);\n-\tif (!std::strchr(__s, ';'))\n+\tif (!std::memchr(__s, ';', __len))\n \t  {\n \t    _M_names[0] = new char[__len + 1];\n \t    std::memcpy(_M_names[0], __s, __len + 1);\t    "}]}