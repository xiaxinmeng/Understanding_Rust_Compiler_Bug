{"sha": "2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmQyNDlmNTJiNTNjOWM0YjBkNmZkYmQxNDkwZjM4NzFkMWRmNWQ0MA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-05-02T09:04:23Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2017-05-02T09:04:23Z"}, "message": "[multiple changes]\n\n2017-05-02  Arnaud Charlet  <charlet@adacore.com>\n\n\t* sem_case.adb: Remove extra spaces in parameter declarations.\n\n2017-05-02  Justin Squirek  <squirek@adacore.com>\n\n\t* usage.adb: Replace space with hyphen (\"run time\" -> \"run-time\")\n\tin usage line for new -gnatwE switch.\n\n2017-05-02  Claire Dross  <dross@adacore.com>\n\n\t* a-cofuve.ads (Remove): Remove unnecessary\n\tconditions in precondition.\n\n2017-05-02  Vasiliy Fofanov  <fofanov@adacore.com>\n\n\t* a-stream.ads, exp_imgv.adb, sem_ch10.adb,\n\tsem_attr.adb, s-finmas.ads, osint.adb: Minor typo fix.\n\nFrom-SVN: r247479", "tree": {"sha": "ac087a6c77059478d2f36b7210079c65546654f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac087a6c77059478d2f36b7210079c65546654f5"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/comments", "author": null, "committer": null, "parents": [{"sha": "b55993b3534aaa8ddc062e1b7373b21eb57f6c2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b55993b3534aaa8ddc062e1b7373b21eb57f6c2c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b55993b3534aaa8ddc062e1b7373b21eb57f6c2c"}], "stats": {"total": 72, "additions": 44, "deletions": 28}, "files": [{"sha": "f91a3ebd45b8e2ae85add0cd52fedc7b4d9fd14d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40", "patch": "@@ -1,3 +1,22 @@\n+2017-05-02  Arnaud Charlet  <charlet@adacore.com>\n+\n+\t* sem_case.adb: Remove extra spaces in parameter declarations.\n+\n+2017-05-02  Justin Squirek  <squirek@adacore.com>\n+\n+\t* usage.adb: Replace space with hyphen (\"run time\" -> \"run-time\")\n+\tin usage line for new -gnatwE switch.\n+\n+2017-05-02  Claire Dross  <dross@adacore.com>\n+\n+\t* a-cofuve.ads (Remove): Remove unnecessary\n+\tconditions in precondition.\n+\n+2017-05-02  Vasiliy Fofanov  <fofanov@adacore.com>\n+\n+\t* a-stream.ads, exp_imgv.adb, sem_ch10.adb,\n+\tsem_attr.adb, s-finmas.ads, osint.adb: Minor typo fix.\n+\n 2017-05-02  Justin Squirek  <squirek@adacore.com>\n \n \t* sem_ch4.adb (Analyze_Case_Expression): Add check for valid"}, {"sha": "b48330c1251094c54fbfac66b6eb4b47e92a0f4f", "filename": "gcc/ada/a-cofuve.ads", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fa-cofuve.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fa-cofuve.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-cofuve.ads?ref=2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40", "patch": "@@ -319,10 +319,7 @@ package Ada.Containers.Functional_Vectors with SPARK_Mode is\n \n    with\n      Global => null,\n-     Pre    =>\n-       Length (Container) < Count_Type'Last\n-         and Last (Container) < Index_Type'Last\n-         and Position in Index_Type'First .. Last (Container),\n+     Pre    => Position in Index_Type'First .. Last (Container),\n      Post   =>\n        Length (Remove'Result) = Length (Container) - 1\n          and then Range_Equal"}, {"sha": "f3aa0082337df9cb201a1286e2ec838914914c74", "filename": "gcc/ada/a-stream.ads", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fa-stream.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fa-stream.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fa-stream.ads?ref=2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 1992-2014, Free Software Foundation, Inc.         --\n+--          Copyright (C) 1992-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- This specification is derived from the Ada Reference Manual for use with --\n -- GNAT. The copyright notice above, and the license provisions that follow --\n@@ -42,7 +42,7 @@ package Ada.Streams is\n    type Stream_Element is mod 2 ** Standard'Storage_Unit;\n \n    type Stream_Element_Offset is new Long_Long_Integer;\n-   --  Stream_Element_Offset needs 64 bits to accomodate large stream files.\n+   --  Stream_Element_Offset needs 64 bits to accommodate large stream files.\n    --  However, rather than make this explicitly 64-bits we derive from\n    --  Long_Long_Integer. In normal usage this will have the same effect.\n    --  But in the case of CodePeer with a target configuration file with a"}, {"sha": "762ccda92858002b9d832c80a8199687b519a97a", "filename": "gcc/ada/errout.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Ferrout.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Ferrout.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Ferrout.adb?ref=2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40", "patch": "@@ -3103,7 +3103,7 @@ package body Errout is\n                --  as errors.\n \n                if Is_Warning_Msg\n-                 and then Warning_Mode = Treat_Run_Time_As_Error\n+                 and then Warning_Mode = Treat_Run_Time_Warnings_As_Errors\n                then\n                   Is_Warning_Msg := False;\n                end if;"}, {"sha": "28de1f4794568b0d17a6d7dfdcc8fe5d02d12f80", "filename": "gcc/ada/exp_imgv.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fexp_imgv.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fexp_imgv.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fexp_imgv.adb?ref=2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 B o d y                                  --\n --                                                                          --\n---          Copyright (C) 2001-2016, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2001-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -1165,7 +1165,7 @@ package body Exp_Imgv is\n          pragma Assert (Is_Enumeration_Type (Rtyp));\n \n          --  Whenever pragma Discard_Names is in effect, the value we need\n-         --  is the value needed to accomodate the largest integer pos value\n+         --  is the value needed to accommodate the largest integer pos value\n          --  in the range of the subtype + 1 for the space at the start. We\n          --  build:\n "}, {"sha": "2dbfef059182de5b0e1a321887e669f54d1d8356", "filename": "gcc/ada/opt.ads", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fopt.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fopt.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fopt.ads?ref=2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40", "patch": "@@ -1861,17 +1861,17 @@ package Opt is\n    --  Modified by use of -gnatw.w/.W.\n \n    type Warning_Mode_Type is\n-     (Suppress, Normal, Treat_As_Error, Treat_Run_Time_As_Error);\n+     (Suppress, Normal, Treat_As_Error, Treat_Run_Time_Warnings_As_Errors);\n    Warning_Mode : Warning_Mode_Type := Normal;\n    --  GNAT, GNATBIND\n    --  Controls treatment of warning messages. If set to Suppress, warning\n    --  messages are not generated at all. In Normal mode, they are generated\n    --  but do not count as errors. In Treat_As_Error mode, warning messages are\n-   --  generated and are treated as errors. In Treat_Run_Time_As_Error, warning\n-   --  messages regarding errors raised at run time are treated as errors. Note\n-   --  that Warning_Mode = Suppress causes pragma Warnings to be ignored\n-   --  (except for legality checks), unless we are in GNATprove_Mode, which\n-   --  requires pragma Warnings to be stored for the formal verification\n+   --  generated and treated as errors. In Treat_Run_Time_Warnings_As_Errors,\n+   --  warning messages regarding errors raised at run time are treated as\n+   --  errors. Note that Warning_Mode = Suppress causes pragma Warnings to be\n+   --  ignored (except for legality checks), unless we are in GNATprove_Mode,\n+   --  which requires pragma Warnings to be stored for the formal verification\n    --  backend.\n \n    Warnings_As_Errors_Count : Natural;"}, {"sha": "105e866c3734d4906e3d71d7d9846697d185a24a", "filename": "gcc/ada/osint.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fosint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fosint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fosint.adb?ref=2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40", "patch": "@@ -2312,7 +2312,7 @@ package body Osint is\n \n       --  Read the file. Note that the loop is probably not necessary since the\n       --  whole file is read at once but the loop is harmless and that way we\n-      --  are sure to accomodate systems where this is not the case.\n+      --  are sure to accommodate systems where this is not the case.\n \n       Curr := 1;\n       Actual_Len := Len;"}, {"sha": "28f862f9b198248ee7e2ace50eb0ff69060f70ac", "filename": "gcc/ada/s-finmas.ads", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fs-finmas.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fs-finmas.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fs-finmas.ads?ref=2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40", "patch": "@@ -6,7 +6,7 @@\n --                                                                          --\n --                                 S p e c                                  --\n --                                                                          --\n---          Copyright (C) 2011-2015, Free Software Foundation, Inc.         --\n+--          Copyright (C) 2011-2017, Free Software Foundation, Inc.         --\n --                                                                          --\n -- GNAT is free software;  you can  redistribute it  and/or modify it under --\n -- terms of the  GNU General Public License as published  by the Free Soft- --\n@@ -62,7 +62,7 @@ package System.Finalization_Masters is\n    --  Finalization master type structure. A unique master is associated with\n    --  each access-to-controlled or access-to-class-wide type. Masters also act\n    --  as components of subpools. By default, a master contains objects of the\n-   --  same designated type but it may also accomodate heterogeneous objects.\n+   --  same designated type but it may also accommodate heterogeneous objects.\n \n    type Finalization_Master is\n      new Ada.Finalization.Limited_Controlled with private;\n@@ -156,7 +156,7 @@ private\n    --  Finalization master type structure. A unique master is associated with\n    --  each access-to-controlled or access-to-class-wide type. Masters also act\n    --  as components of subpools. By default, a master contains objects of the\n-   --  same designated type but it may also accomodate heterogeneous objects.\n+   --  same designated type but it may also accommodate heterogeneous objects.\n \n    type Finalization_Master is\n      new Ada.Finalization.Limited_Controlled with"}, {"sha": "5cbc08c7789e63d0c6fb0f6951aa8faf78b291b8", "filename": "gcc/ada/sem_attr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fsem_attr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fsem_attr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_attr.adb?ref=2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40", "patch": "@@ -6173,7 +6173,7 @@ package body Sem_Attr is\n             elsif Val < 0 then\n                Set_Etype (E1, Universal_Integer);\n \n-            --  Otherwise set type to Unsigned_64 to accomodate max values\n+            --  Otherwise set type to Unsigned_64 to accommodate max values\n \n             else\n                Set_Etype (E1, Standard_Unsigned_64);\n@@ -10056,7 +10056,7 @@ package body Sem_Attr is\n \n                      --  If range is null, result is zero, that has already\n                      --  been dealt with, so what we need is the power of ten\n-                     --  that accomodates the Pos of the largest value, which\n+                     --  that accommodates the Pos of the largest value, which\n                      --  is the high bound of the range + one for the space.\n \n                      W := 1;"}, {"sha": "6f66d6f61c8a5dab5d774b5870b3aba4a0d6e7ba", "filename": "gcc/ada/sem_case.adb", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fsem_case.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fsem_case.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_case.adb?ref=2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40", "patch": "@@ -92,9 +92,9 @@ package body Sem_Case is\n    --  ID of an appropriate string to be used in error message output.\n \n    procedure Expand_Others_Choice\n-     (Case_Table     : Choice_Table_Type;\n-      Others_Choice  : Node_Id;\n-      Choice_Type    : Entity_Id);\n+     (Case_Table    : Choice_Table_Type;\n+      Others_Choice : Node_Id;\n+      Choice_Type   : Entity_Id);\n    --  The case table is the table generated by a call to Check_Choices\n    --  (with just 1 .. Last_Choice entries present). Others_Choice is a\n    --  pointer to the N_Others_Choice node (this routine is only called if"}, {"sha": "358b20a83bfded9777ee8999c01783593cf2c00c", "filename": "gcc/ada/sem_ch10.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fsem_ch10.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fsem_ch10.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsem_ch10.adb?ref=2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40", "patch": "@@ -6145,7 +6145,7 @@ package body Sem_Ch10 is\n       Last_Public_Shadow := Last_Shadow;\n \n       --  Ada 2005 (AI-262): Build the limited view of the private declarations\n-      --  to accomodate limited private with clauses.\n+      --  to accommodate limited private with clauses.\n \n       Process_Declarations_And_States\n         (Pack  => Pack,"}, {"sha": "52a72e4de403176c8221c3f12a2d096e91f186f1", "filename": "gcc/ada/switch-b.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fswitch-b.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fswitch-b.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fswitch-b.adb?ref=2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40", "patch": "@@ -491,7 +491,7 @@ package body Switch.B is\n                   Warning_Mode := Treat_As_Error;\n \n                when 'E' =>\n-                  Warning_Mode := Treat_Run_Time_As_Error;\n+                  Warning_Mode := Treat_Run_Time_Warnings_As_Errors;\n \n                when 's' =>\n                   Warning_Mode := Suppress;"}, {"sha": "7ffb424f1d234b2daeb0bc65c415ec0b1f697fca", "filename": "gcc/ada/usage.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fusage.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fusage.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fusage.adb?ref=2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40", "patch": "@@ -488,7 +488,7 @@ begin\n    Write_Line (\"        e    treat all warnings (but not info) as errors\");\n    Write_Line (\"        .e   turn on every optional info/warning \" &\n                                                   \"(no exceptions)\");\n-   Write_Line (\"        E    treat all run time warnings as errors\");\n+   Write_Line (\"        E    treat all run-time warnings as errors\");\n    Write_Line (\"        f+   turn on warnings for unreferenced formal\");\n    Write_Line (\"        F*   turn off warnings for unreferenced formal\");\n    Write_Line (\"        .f   turn on warnings for suspicious Subp'Access\");"}, {"sha": "2fd133000e6ed11bbe99811367c30dd3ea016353", "filename": "gcc/ada/warnsw.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fwarnsw.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40/gcc%2Fada%2Fwarnsw.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fwarnsw.adb?ref=2d249f52b53c9c4b0d6fdbd1490f3871d1df5d40", "patch": "@@ -533,7 +533,7 @@ package body Warnsw is\n             Warning_Mode                        := Treat_As_Error;\n \n          when 'E' =>\n-            Warning_Mode                        := Treat_Run_Time_As_Error;\n+            Warning_Mode := Treat_Run_Time_Warnings_As_Errors;\n \n          when 'f' =>\n             Check_Unreferenced_Formals          := True;"}]}