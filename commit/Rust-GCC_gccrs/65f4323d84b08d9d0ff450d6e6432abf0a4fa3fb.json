{"sha": "65f4323d84b08d9d0ff450d6e6432abf0a4fa3fb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjVmNDMyM2Q4NGIwOGQ5ZDBmZjQ1MGQ2ZTY0MzJhYmYwYTRmYTNmYg==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-11-04T22:07:39Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-11-04T22:07:39Z"}, "message": "tree-cfg.c (find_taken_edge): Reject VAL begin NULL.\n\n\t* tree-cfg.c (find_taken_edge): Reject VAL begin NULL.\n\t* tree-ssa-ccp.c (visit_cond_stmt): Don't call find_taken_edge\n\twith VAL being NULL.\n\nFrom-SVN: r90083", "tree": {"sha": "30f1b96da58dd9b0620f5c8de78c367da5fc1076", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/30f1b96da58dd9b0620f5c8de78c367da5fc1076"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/65f4323d84b08d9d0ff450d6e6432abf0a4fa3fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65f4323d84b08d9d0ff450d6e6432abf0a4fa3fb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65f4323d84b08d9d0ff450d6e6432abf0a4fa3fb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65f4323d84b08d9d0ff450d6e6432abf0a4fa3fb/comments", "author": null, "committer": null, "parents": [{"sha": "d48b4987af16e1aa3fce96eccb867ed31b1c74dc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d48b4987af16e1aa3fce96eccb867ed31b1c74dc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d48b4987af16e1aa3fce96eccb867ed31b1c74dc"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "b110b8ef50b875b96b08241a280d83b696b9c7d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f4323d84b08d9d0ff450d6e6432abf0a4fa3fb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f4323d84b08d9d0ff450d6e6432abf0a4fa3fb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=65f4323d84b08d9d0ff450d6e6432abf0a4fa3fb", "patch": "@@ -1,3 +1,9 @@\n+2004-11-04  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* tree-cfg.c (find_taken_edge): Reject VAL begin NULL.\n+\t* tree-ssa-ccp.c (visit_cond_stmt): Don't call find_taken_edge\n+\twith VAL being NULL.\n+\n 2004-11-04  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* cfghooks.c (delete_basic_block): Remove code to truncate"}, {"sha": "67b96a5737dee4798676a2ddfad88f8921fc82f0", "filename": "gcc/tree-cfg.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f4323d84b08d9d0ff450d6e6432abf0a4fa3fb/gcc%2Ftree-cfg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f4323d84b08d9d0ff450d6e6432abf0a4fa3fb/gcc%2Ftree-cfg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-cfg.c?ref=65f4323d84b08d9d0ff450d6e6432abf0a4fa3fb", "patch": "@@ -1954,15 +1954,16 @@ find_taken_edge (basic_block bb, tree val)\n \n   gcc_assert (stmt);\n   gcc_assert (is_ctrl_stmt (stmt));\n+  gcc_assert (val);\n \n   /* If VAL is a predicate of the form N RELOP N, where N is an\n      SSA_NAME, we can usually determine its truth value.  */\n-  if (val && COMPARISON_CLASS_P (val))\n+  if (COMPARISON_CLASS_P (val))\n     val = fold (val);\n \n   /* If VAL is not a constant, we can't determine which edge might\n      be taken.  */\n-  if (val == NULL || !really_constant_p (val))\n+  if (!really_constant_p (val))\n     return NULL;\n \n   if (TREE_CODE (stmt) == COND_EXPR)"}, {"sha": "42094805b41bb2b9639a30726e2690ff5b143a9e", "filename": "gcc/tree-ssa-ccp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/65f4323d84b08d9d0ff450d6e6432abf0a4fa3fb/gcc%2Ftree-ssa-ccp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/65f4323d84b08d9d0ff450d6e6432abf0a4fa3fb/gcc%2Ftree-ssa-ccp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ccp.c?ref=65f4323d84b08d9d0ff450d6e6432abf0a4fa3fb", "patch": "@@ -1123,7 +1123,7 @@ visit_cond_stmt (tree stmt, edge *taken_edge_p)\n      to the worklist.  If no single edge can be determined statically,\n      return SSA_PROP_VARYING to feed all the outgoing edges to the\n      propagation engine.  */\n-  *taken_edge_p = find_taken_edge (block, val.const_val);\n+  *taken_edge_p = val.const_val ? find_taken_edge (block, val.const_val) : 0;\n   if (*taken_edge_p)\n     return SSA_PROP_INTERESTING;\n   else"}]}