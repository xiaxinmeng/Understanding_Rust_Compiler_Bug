{"sha": "7ad97d17775832ca57166a8bf302f48ea07a785e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2FkOTdkMTc3NzU4MzJjYTU3MTY2YThiZjMwMmY0OGVhMDdhNzg1ZQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-01-31T11:51:59Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-01-31T11:51:59Z"}, "message": "re PR tree-optimization/89135 (internal compiler error: in gimple_split_edge, at tree-cfg.c:2747)\n\n2019-01-31  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/89135\n\t* tree-ssa-phiprop.c (pass_phiprop::execute): Skip blocks\n\twith abnormal preds.\n\n\t* gcc.dg/torture/pr89135.c: New testcase.\n\nFrom-SVN: r268417", "tree": {"sha": "b4e466ff078eb3df28bace6c0e7956581aba85db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b4e466ff078eb3df28bace6c0e7956581aba85db"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7ad97d17775832ca57166a8bf302f48ea07a785e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ad97d17775832ca57166a8bf302f48ea07a785e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7ad97d17775832ca57166a8bf302f48ea07a785e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7ad97d17775832ca57166a8bf302f48ea07a785e/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6206a883fe7a741dbb9e09d88255a170a75950f5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6206a883fe7a741dbb9e09d88255a170a75950f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6206a883fe7a741dbb9e09d88255a170a75950f5"}], "stats": {"total": 54, "additions": 52, "deletions": 2}, "files": [{"sha": "d0ce1170b1729bef995f7edc5ec9f2ac944b7112", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ad97d17775832ca57166a8bf302f48ea07a785e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ad97d17775832ca57166a8bf302f48ea07a785e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7ad97d17775832ca57166a8bf302f48ea07a785e", "patch": "@@ -1,3 +1,9 @@\n+2019-01-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/89135\n+\t* tree-ssa-phiprop.c (pass_phiprop::execute): Skip blocks\n+\twith abnormal preds.\n+\n 2019-01-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/89124"}, {"sha": "5197926d3d0f66d6ffba1bd9bf0ef03c19095b15", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ad97d17775832ca57166a8bf302f48ea07a785e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ad97d17775832ca57166a8bf302f48ea07a785e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=7ad97d17775832ca57166a8bf302f48ea07a785e", "patch": "@@ -1,3 +1,8 @@\n+2019-01-31  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/89135\n+\t* gcc.dg/torture/pr89135.c: New testcase.\n+\n 2019-01-31  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR sanitizer/89124"}, {"sha": "8a93e8983df11b8d6ba896b4b1c5e9b408149485", "filename": "gcc/testsuite/gcc.dg/torture/pr89135.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ad97d17775832ca57166a8bf302f48ea07a785e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr89135.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ad97d17775832ca57166a8bf302f48ea07a785e/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr89135.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr89135.c?ref=7ad97d17775832ca57166a8bf302f48ea07a785e", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do compile } */\n+\n+typedef __INTPTR_TYPE__ intptr_t;\n+intptr_t a, b, c, d;\n+int foo (void) { return 0; }\n+int baz (void);\n+\n+void\n+bar (void)\n+{\n+  intptr_t g = (intptr_t) &&h;\n+  void *i = &&j, *k = &&l;\n+j:\n+  if (baz ())\n+    {\n+      intptr_t **n = (intptr_t **) &a;\n+l:\n+      b = 0;\n+      for (; b >= 0;)\n+\tgoto *k;\n+h:\n+      **n = 0;\n+      for (;;)\n+\t{\n+\t  intptr_t *o = &c;\n+\t  g = foo ();\n+\t  *o = g;\n+\t  if (c)\n+\t    goto *d;\n+\t}\n+    }\n+  goto *i;\n+}"}, {"sha": "d710582a915e417e6d6ee698076942dae3babca6", "filename": "gcc/tree-ssa-phiprop.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7ad97d17775832ca57166a8bf302f48ea07a785e/gcc%2Ftree-ssa-phiprop.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7ad97d17775832ca57166a8bf302f48ea07a785e/gcc%2Ftree-ssa-phiprop.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-phiprop.c?ref=7ad97d17775832ca57166a8bf302f48ea07a785e", "patch": "@@ -495,8 +495,14 @@ pass_phiprop::execute (function *fun)\n   bbs = get_all_dominated_blocks (CDI_DOMINATORS,\n \t\t\t\t  single_succ (ENTRY_BLOCK_PTR_FOR_FN (fun)));\n   FOR_EACH_VEC_ELT (bbs, i, bb)\n-    for (gsi = gsi_start_phis (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n-      did_something |= propagate_with_phi (bb, gsi.phi (), phivn, n);\n+    {\n+      /* Since we're going to move dereferences across predecessor\n+         edges avoid blocks with abnormal predecessors.  */\n+      if (bb_has_abnormal_pred (bb))\n+\tcontinue;\n+      for (gsi = gsi_start_phis (bb); !gsi_end_p (gsi); gsi_next (&gsi))\n+\tdid_something |= propagate_with_phi (bb, gsi.phi (), phivn, n);\n+    }\n \n   if (did_something)\n     gsi_commit_edge_inserts ();"}]}