{"sha": "cd7c9015a6306338ea15c1f8a94b8e1be87ae0d5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2Q3YzkwMTVhNjMwNjMzOGVhMTVjMWY4YTk0YjhlMWJlODdhZTBkNQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2001-10-30T00:19:58Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-10-30T00:19:58Z"}, "message": "reload1.c (eliminate_regs): Test for reg_renumber being allocated before referencing it.\n\n\t* reload1.c (eliminate_regs): Test for reg_renumber being allocated\n\tbefore referencing it.\n\nFrom-SVN: r46623", "tree": {"sha": "ee0f3b7f02f54b596230f73fb1f309766c065aa0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee0f3b7f02f54b596230f73fb1f309766c065aa0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cd7c9015a6306338ea15c1f8a94b8e1be87ae0d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd7c9015a6306338ea15c1f8a94b8e1be87ae0d5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd7c9015a6306338ea15c1f8a94b8e1be87ae0d5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd7c9015a6306338ea15c1f8a94b8e1be87ae0d5/comments", "author": null, "committer": null, "parents": [{"sha": "f3597919c54311f783cb87bf51aecd61f47f8b9c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f3597919c54311f783cb87bf51aecd61f47f8b9c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f3597919c54311f783cb87bf51aecd61f47f8b9c"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "f717f53193ab70bfacc322684fd8fdf7762d01e8", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd7c9015a6306338ea15c1f8a94b8e1be87ae0d5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd7c9015a6306338ea15c1f8a94b8e1be87ae0d5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=cd7c9015a6306338ea15c1f8a94b8e1be87ae0d5", "patch": "@@ -1,3 +1,8 @@\n+Mon Oct 29 19:22:07 2001  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* reload1.c (eliminate_regs): Test for reg_renumber being allocated\n+\tbefore referencing it.\n+\n 2001-10-26  DJ Delorie  <dj@redhat.com>\n \n \t* config/rs6000/sysv4.h (LINK_SPEC): Allow -msdata=none to"}, {"sha": "c5158c7d81bd8f33e2faed26914076cb6475a60a", "filename": "gcc/reload1.c", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cd7c9015a6306338ea15c1f8a94b8e1be87ae0d5/gcc%2Freload1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cd7c9015a6306338ea15c1f8a94b8e1be87ae0d5/gcc%2Freload1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Freload1.c?ref=cd7c9015a6306338ea15c1f8a94b8e1be87ae0d5", "patch": "@@ -2298,8 +2298,8 @@ eliminate_regs (x, mem_mode, insn)\n \t      return plus_constant (ep->to_rtx, ep->previous_offset);\n \n \t}\n-      else if (reg_renumber[regno] < 0 && reg_equiv_constant\n-\t       && reg_equiv_constant[regno]\n+      else if (reg_renumber && reg_renumber[regno] < 0\n+\t       && reg_equiv_constant && reg_equiv_constant[regno]\n \t       && ! CONSTANT_P (reg_equiv_constant[regno]))\n \treturn eliminate_regs (copy_rtx (reg_equiv_constant[regno]),\n \t\t\t       mem_mode, insn);\n@@ -2365,7 +2365,7 @@ eliminate_regs (x, mem_mode, insn)\n \trtx new0 = eliminate_regs (XEXP (x, 0), mem_mode, insn);\n \trtx new1 = eliminate_regs (XEXP (x, 1), mem_mode, insn);\n \n-\tif (new0 != XEXP (x, 0) || new1 != XEXP (x, 1))\n+\tif (reg_renumber && (new0 != XEXP (x, 0) || new1 != XEXP (x, 1)))\n \t  {\n \t    /* If one side is a PLUS and the other side is a pseudo that\n \t       didn't get a hard register but has a reg_equiv_constant,\n@@ -2473,7 +2473,8 @@ eliminate_regs (x, mem_mode, insn)\n \t{\n \t  new = eliminate_regs (XEXP (x, 1), mem_mode, insn);\n \t  if (new != XEXP (x, 1))\n-\t    return gen_rtx_fmt_ee (GET_CODE (x), GET_MODE (x), XEXP (x, 0), new);\n+\t    return\n+\t      gen_rtx_fmt_ee (GET_CODE (x), GET_MODE (x), XEXP (x, 0), new);\n \t}\n       return x;\n "}]}