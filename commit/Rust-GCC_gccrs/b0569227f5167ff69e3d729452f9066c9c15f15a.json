{"sha": "b0569227f5167ff69e3d729452f9066c9c15f15a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjA1NjkyMjdmNTE2N2ZmNjllM2Q3Mjk0NTJmOTA2NmM5YzE1ZjE1YQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2007-07-04T11:44:58Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2007-07-04T11:44:58Z"}, "message": "re PR tree-optimization/32482 (ICE verify_ssa failed)\n\n2007-07-04  Richard Guenther  <rguenther@suse.de>\n\n\tPR tree-optimization/32482\n\t* tree-ssa-ifcombine.c (recognize_single_bit_test): Use the\n\toriginal ssa name if we didn't find a shift expression.\n\tFix shift constant for bit zero test.\n\n\t* gcc.c-torture/compile/pr32482.c: New testcase.\n\nFrom-SVN: r126314", "tree": {"sha": "c56451a80746f69f5417de37ab545e4e904fa2a8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c56451a80746f69f5417de37ab545e4e904fa2a8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b0569227f5167ff69e3d729452f9066c9c15f15a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0569227f5167ff69e3d729452f9066c9c15f15a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b0569227f5167ff69e3d729452f9066c9c15f15a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b0569227f5167ff69e3d729452f9066c9c15f15a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6162fe83e1bc772487edef25d5a8ecf853cd3457", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6162fe83e1bc772487edef25d5a8ecf853cd3457", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6162fe83e1bc772487edef25d5a8ecf853cd3457"}], "stats": {"total": 48, "additions": 44, "deletions": 4}, "files": [{"sha": "a2949209d0499465db7727828bc3aae780b892d6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0569227f5167ff69e3d729452f9066c9c15f15a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0569227f5167ff69e3d729452f9066c9c15f15a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b0569227f5167ff69e3d729452f9066c9c15f15a", "patch": "@@ -1,3 +1,10 @@\n+2007-07-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/32482\n+\t* tree-ssa-ifcombine.c (recognize_single_bit_test): Use the\n+\toriginal ssa name if we didn't find a shift expression.\n+\tFix shift constant for bit zero test.\n+\n 2007-07-04  Richard Sandiford  <richard@codesourcery.com>\n \n \t* config/sh/lib1funcs.asm (ic_invalidate): Align constant pool."}, {"sha": "a0c07456ac69e339cd624d60e4b876d3dc2e0908", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0569227f5167ff69e3d729452f9066c9c15f15a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0569227f5167ff69e3d729452f9066c9c15f15a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b0569227f5167ff69e3d729452f9066c9c15f15a", "patch": "@@ -1,3 +1,8 @@\n+2007-07-04  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR tree-optimization/32482\n+\t* gcc.c-torture/compile/pr32482.c: New testcase.\n+\n 2007-07-04  Richard Sandiford  <richard@codesourcery.com>\n \n \t* gcc.c-torture/execute/ieee/compare-fp-4.x: Add an XFAIL for ARM"}, {"sha": "9f0e3bfeb9cba71d1fe028d46a0a8d07b5ba8c08", "filename": "gcc/testsuite/gcc.c-torture/compile/pr32482.c", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0569227f5167ff69e3d729452f9066c9c15f15a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr32482.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0569227f5167ff69e3d729452f9066c9c15f15a/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr32482.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2Fpr32482.c?ref=b0569227f5167ff69e3d729452f9066c9c15f15a", "patch": "@@ -0,0 +1,23 @@\n+typedef struct { unsigned long bits[((((1 << 0))+32 -1)/32)]; } nodemask_t;\n+static inline __attribute__((always_inline))\n+int bitmap_empty(const unsigned long *src, int nbits)\n+{\n+  return ! (*src & ( ((nbits) % 32) ? (1UL<<((nbits) % 32))-1 : ~0UL ));\n+}\n+static inline __attribute__((always_inline))\n+int __nodes_empty(const nodemask_t *srcp, int nbits)\n+{\n+ return bitmap_empty(srcp->bits, nbits);\n+}\n+extern nodemask_t node_online_map;\n+void drain_array(void);\n+void drain_cpu_caches(void)\n+{\n+ int node;\n+ if (!__nodes_empty(&(node_online_map), (1 << 0)))\n+     for (((node)) = 0; ((node)) < 1; ((node))++)\n+     {\n+     }\n+ if (!__nodes_empty(&(node_online_map), (1 << 0)))\n+     drain_array();\n+}"}, {"sha": "94038573165aa626444c4ec1c8291f1efbfdb865", "filename": "gcc/tree-ssa-ifcombine.c", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b0569227f5167ff69e3d729452f9066c9c15f15a/gcc%2Ftree-ssa-ifcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b0569227f5167ff69e3d729452f9066c9c15f15a/gcc%2Ftree-ssa-ifcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-ifcombine.c?ref=b0569227f5167ff69e3d729452f9066c9c15f15a", "patch": "@@ -167,17 +167,22 @@ recognize_single_bit_test (tree cond_expr, tree *name, tree *bit)\n       && integer_onep (TREE_OPERAND (t, 1))\n       && TREE_CODE (TREE_OPERAND (t, 0)) == SSA_NAME)\n     {\n-      t = TREE_OPERAND (t, 0);\n+      tree orig_name = TREE_OPERAND (t, 0);\n+\n+      /* Look through copies and conversions to eventually\n+\t find the stmt that computes the shift.  */\n+      t = orig_name;\n       do {\n \tt = SSA_NAME_DEF_STMT (t);\n \tif (TREE_CODE (t) != GIMPLE_MODIFY_STMT)\n-\t  return false;\n+\t  break;\n \tt = GIMPLE_STMT_OPERAND (t, 1);\n \tif (TREE_CODE (t) == NOP_EXPR\n \t    || TREE_CODE (t) == CONVERT_EXPR)\n \t  t = TREE_OPERAND (t, 0);\n       } while (TREE_CODE (t) == SSA_NAME);\n \n+      /* If we found such, decompose it.  */\n       if (TREE_CODE (t) == RSHIFT_EXPR)\n \t{\n \t  /* op0 & (1 << op1) */\n@@ -187,8 +192,8 @@ recognize_single_bit_test (tree cond_expr, tree *name, tree *bit)\n       else\n \t{\n \t  /* t & 1 */\n-\t  *bit = integer_one_node;\n-\t  *name = t;\n+\t  *bit = integer_zero_node;\n+\t  *name = orig_name;\n \t}\n \n       return true;"}]}