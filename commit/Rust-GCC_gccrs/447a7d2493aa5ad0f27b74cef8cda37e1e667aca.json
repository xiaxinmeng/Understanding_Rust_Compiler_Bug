{"sha": "447a7d2493aa5ad0f27b74cef8cda37e1e667aca", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ3YTdkMjQ5M2FhNWFkMGYyN2I3NGNlZjhjZGEzN2UxZTY2N2FjYQ==", "commit": {"author": {"name": "Joern Rennecke", "email": "joern.rennecke@embecosm.com", "date": "2012-11-29T01:46:47Z"}, "committer": {"name": "Joern Rennecke", "email": "amylaar@gcc.gnu.org", "date": "2012-11-29T01:46:47Z"}, "message": "predicates.md (addsub_operator): New predicate.\n\n        * config/epiphany/predicates.md (addsub_operator): New predicate.\n        * config/epiphany/epiphany-sched.md (sched_use_fpu): New attribute.\n        * config/epiphany/epiphany.md (isub_i+1): New peephole2.\n        * config/epiphany/epiphany.h (get_attr_sched_use_fpu): Declare.\n\nFrom-SVN: r193915", "tree": {"sha": "871ea82376a663fa1dd3614ba691ab134cfc88d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/871ea82376a663fa1dd3614ba691ab134cfc88d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/447a7d2493aa5ad0f27b74cef8cda37e1e667aca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/447a7d2493aa5ad0f27b74cef8cda37e1e667aca", "html_url": "https://github.com/Rust-GCC/gccrs/commit/447a7d2493aa5ad0f27b74cef8cda37e1e667aca", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/447a7d2493aa5ad0f27b74cef8cda37e1e667aca/comments", "author": {"login": "amylaar", "id": 1663475, "node_id": "MDQ6VXNlcjE2NjM0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/1663475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amylaar", "html_url": "https://github.com/amylaar", "followers_url": "https://api.github.com/users/amylaar/followers", "following_url": "https://api.github.com/users/amylaar/following{/other_user}", "gists_url": "https://api.github.com/users/amylaar/gists{/gist_id}", "starred_url": "https://api.github.com/users/amylaar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amylaar/subscriptions", "organizations_url": "https://api.github.com/users/amylaar/orgs", "repos_url": "https://api.github.com/users/amylaar/repos", "events_url": "https://api.github.com/users/amylaar/events{/privacy}", "received_events_url": "https://api.github.com/users/amylaar/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "e7287433d85b975baea75bbad5d1482cfd8fb3b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e7287433d85b975baea75bbad5d1482cfd8fb3b3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e7287433d85b975baea75bbad5d1482cfd8fb3b3"}], "stats": {"total": 47, "additions": 47, "deletions": 0}, "files": [{"sha": "b85c7cf1bf9e79bb3a8a17a132709c45bf2149fd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/447a7d2493aa5ad0f27b74cef8cda37e1e667aca/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/447a7d2493aa5ad0f27b74cef8cda37e1e667aca/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=447a7d2493aa5ad0f27b74cef8cda37e1e667aca", "patch": "@@ -1,3 +1,10 @@\n+2012-11-29  Joern Rennecke  <joern.rennecke@embecosm.com>\n+\n+\t* config/epiphany/predicates.md (addsub_operator): New predicate.\n+\t* config/epiphany/epiphany-sched.md (sched_use_fpu): New attribute.\n+\t* config/epiphany/epiphany.md (isub_i+1): New peephole2.\n+\t* config/epiphany/epiphany.h (get_attr_sched_use_fpu): Declare.\n+\n 2012-11-28  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR debug/36728"}, {"sha": "5e1519f993454ab22aa0872fa3aa55d758fc204f", "filename": "gcc/config/epiphany/epiphany-sched.md", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/447a7d2493aa5ad0f27b74cef8cda37e1e667aca/gcc%2Fconfig%2Fepiphany%2Fepiphany-sched.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/447a7d2493aa5ad0f27b74cef8cda37e1e667aca/gcc%2Fconfig%2Fepiphany%2Fepiphany-sched.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany-sched.md?ref=447a7d2493aa5ad0f27b74cef8cda37e1e667aca", "patch": "@@ -136,3 +136,10 @@\n   (and (eq_attr \"pipe_model\" \"epiphany\")\n        (eq_attr \"type\" \"v2fp\"))\n   \"issue,issue+F0,F0\")\n+\n+; A boolean attribute for use by peephole2 patterns that try to figure out\n+; if we overcommitted the FPU.\n+; This is notionally a numeric attribute to avoid dependency problems.\n+(define_attr \"sched_use_fpu\" \"\"\n+  (cond [(eq_attr \"type\" \"fp,fp_int,v2fp\") (const_int 1)]\n+\t(const_int 0)))"}, {"sha": "d411b295c91d69151b572e45b968128e0d027a97", "filename": "gcc/config/epiphany/epiphany.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/447a7d2493aa5ad0f27b74cef8cda37e1e667aca/gcc%2Fconfig%2Fepiphany%2Fepiphany.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/447a7d2493aa5ad0f27b74cef8cda37e1e667aca/gcc%2Fconfig%2Fepiphany%2Fepiphany.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany.h?ref=447a7d2493aa5ad0f27b74cef8cda37e1e667aca", "patch": "@@ -926,4 +926,8 @@ extern struct rtl_opt_pass pass_resolve_sw_modes;\n #define ASM_DECLARE_FUNCTION_NAME(FILE, NAME, DECL) \\\n   epiphany_start_function ((FILE), (NAME), (DECL))\n \n+/* PR other/55523: gencondmd file includes / dependencies are messed up,\n+   it uses peephole2 predicates without having all the necessary headers.  */\n+extern int get_attr_sched_use_fpu (rtx);\n+\n #endif /* !GCC_EPIPHANY_H */"}, {"sha": "21e619c2deaf7946f6ef59a962d6eefadb0bec4c", "filename": "gcc/config/epiphany/epiphany.md", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/447a7d2493aa5ad0f27b74cef8cda37e1e667aca/gcc%2Fconfig%2Fepiphany%2Fepiphany.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/447a7d2493aa5ad0f27b74cef8cda37e1e667aca/gcc%2Fconfig%2Fepiphany%2Fepiphany.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fepiphany.md?ref=447a7d2493aa5ad0f27b74cef8cda37e1e667aca", "patch": "@@ -1014,6 +1014,32 @@\n   \"isub %0, %1, %2\"\n   [(set_attr \"type\" \"fp_int\")])\n \n+; Try to figure out if we over-committed the FPU, and if so, move\n+; some insns back over to the integer pipe.\n+\n+; The peephole optimizer 'consumes' the insns that are explicitly\n+; mentioned.  We do not want the preceding insn reconsidered, but\n+; we do want that for the following one, so that if we have a run\n+; of five fpu users, two of them get changed.  Therefore, we\n+; use next_active_insn to look at the 'following' insn.  That should\n+; exist, because peephole2 runs after reload, and there has to be\n+; a return after an fp_int insn.\n+(define_peephole2\n+  [(match_parallel 5 \"float_operation\" [(match_operand 6 \"\" \"\")])\n+   (match_parallel 3 \"float_operation\"\n+     [(set (match_operand:SI 0 \"gpr_operand\" \"\")\n+\t   (match_operator:SI 4 \"addsub_operator\"\n+\t     [(match_operand:SI 1 \"gpr_operand\" \"\")\n+\t      (match_operand:SI 2 \"gpr_operand\" \"\")]))\n+      (clobber (reg:CC_FP CCFP_REGNUM))])]\n+  \"get_attr_sched_use_fpu (peep2_next_insn (0))\n+   && peep2_regno_dead_p (2, CC_REGNUM)\n+   && get_attr_sched_use_fpu (next_active_insn (peep2_next_insn (1)))\"\n+  [(match_dup 5)\n+   (parallel [(set (match_dup 0) (match_dup 4))\n+\t      (clobber (reg:CC CC_REGNUM))])]\n+)\n+\n (define_expand \"mulsi3\"\n   [(parallel\n      [(set (match_operand:SI 0 \"gpr_operand\" \"\")"}, {"sha": "cb4b5743a41654f1882cbcf1bad3f3ca335e6fbe", "filename": "gcc/config/epiphany/predicates.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/447a7d2493aa5ad0f27b74cef8cda37e1e667aca/gcc%2Fconfig%2Fepiphany%2Fpredicates.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/447a7d2493aa5ad0f27b74cef8cda37e1e667aca/gcc%2Fconfig%2Fepiphany%2Fpredicates.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fepiphany%2Fpredicates.md?ref=447a7d2493aa5ad0f27b74cef8cda37e1e667aca", "patch": "@@ -256,6 +256,9 @@\n     }\n })\n \n+(define_predicate \"addsub_operator\"\n+  (match_code \"plus, minus\"))\n+\n (define_predicate \"cc_operand\"\n   (and (match_code \"reg\")\n        (match_test \"REGNO (op) == CC_REGNUM || REGNO (op) == CCFP_REGNUM\")))"}]}