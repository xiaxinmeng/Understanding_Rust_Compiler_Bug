{"sha": "931fae8133c14bf6240ca3439cb6ba2af120ebfb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTMxZmFlODEzM2MxNGJmNjI0MGNhMzQzOWNiNmJhMmFmMTIwZWJmYg==", "commit": {"author": {"name": "Jerome Lambourg", "email": "lambourg@adacore.com", "date": "2017-06-27T09:15:55Z"}, "committer": {"name": "Olivier Hainque", "email": "hainque@gcc.gnu.org", "date": "2017-06-27T09:15:55Z"}, "message": "vxworks.h (VXWORKS_LIB_SPEC): Incorporate ...\n\n2017-06-27  Jerome Lambourg  <lambourg@adacore.com>\n            Olivier Hainque  <hainque@adacore.com>\n\n\t* config/vxworks.h (VXWORKS_LIB_SPEC): Incorporate ...\n\t(TLS_SYM): New local macro, forcing reference to __tls__ on\n\tlink command lines for VxWorks 7 RTPs, triggering initialization\n\tof tlsLib.\n\t(VXWORKS_HAVE_TLS): New macro. State whether the target VxWorks\n\tOS features TLS support, true for RTPs on VxWorks 7.\n\t* config/vxworks.c (vxworks_override_options): Setup emutls\n\taccordingly.\n\n\nCo-Authored-By: Olivier Hainque <hainque@adacore.com>\n\nFrom-SVN: r249684", "tree": {"sha": "64f59637399617b7040bd846cc419f0e8ddafcb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/64f59637399617b7040bd846cc419f0e8ddafcb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/931fae8133c14bf6240ca3439cb6ba2af120ebfb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/931fae8133c14bf6240ca3439cb6ba2af120ebfb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/931fae8133c14bf6240ca3439cb6ba2af120ebfb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/931fae8133c14bf6240ca3439cb6ba2af120ebfb/comments", "author": {"login": "lambourg", "id": 480233, "node_id": "MDQ6VXNlcjQ4MDIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/480233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lambourg", "html_url": "https://github.com/lambourg", "followers_url": "https://api.github.com/users/lambourg/followers", "following_url": "https://api.github.com/users/lambourg/following{/other_user}", "gists_url": "https://api.github.com/users/lambourg/gists{/gist_id}", "starred_url": "https://api.github.com/users/lambourg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lambourg/subscriptions", "organizations_url": "https://api.github.com/users/lambourg/orgs", "repos_url": "https://api.github.com/users/lambourg/repos", "events_url": "https://api.github.com/users/lambourg/events{/privacy}", "received_events_url": "https://api.github.com/users/lambourg/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f6b3ca5a1a04285c61283122e96c84563691d161", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f6b3ca5a1a04285c61283122e96c84563691d161", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f6b3ca5a1a04285c61283122e96c84563691d161"}], "stats": {"total": 53, "additions": 39, "deletions": 14}, "files": [{"sha": "2da6160a0b59f59b9e758cf3cb2685375a3d1aa1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/931fae8133c14bf6240ca3439cb6ba2af120ebfb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/931fae8133c14bf6240ca3439cb6ba2af120ebfb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=931fae8133c14bf6240ca3439cb6ba2af120ebfb", "patch": "@@ -1,3 +1,15 @@\n+2017-06-27  Jerome Lambourg  <lambourg@adacore.com>\n+            Olivier Hainque  <hainque@adacore.com>\n+\n+\t* config/vxworks.h (VXWORKS_LIB_SPEC): Incorporate ...\n+\t(TLS_SYM): New local macro, forcing reference to __tls__ on\n+\tlink command lines for VxWorks 7 RTPs, triggering initialization\n+\tof tlsLib.\n+\t(VXWORKS_HAVE_TLS): New macro. State whether the target VxWorks\n+\tOS features TLS support, true for RTPs on VxWorks 7.\n+\t* config/vxworks.c (vxworks_override_options): Setup emutls\n+\taccordingly.\n+\n 2017-06-27  Jakub Jelinek  <jakub@redhat.com>\n \n \t* predict.c (test_prediction_value_range): Use -1U instead of -1"}, {"sha": "944cc1d239b6ad9e9305351cdb172a1100626bf0", "filename": "gcc/config/vxworks.c", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/931fae8133c14bf6240ca3439cb6ba2af120ebfb/gcc%2Fconfig%2Fvxworks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/931fae8133c14bf6240ca3439cb6ba2af120ebfb/gcc%2Fconfig%2Fvxworks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.c?ref=931fae8133c14bf6240ca3439cb6ba2af120ebfb", "patch": "@@ -125,20 +125,24 @@ vxworks_emutls_var_init (tree var, tree decl, tree tmpl_addr)\n void\n vxworks_override_options (void)\n {\n-  /* We don't support __thread via target hooks.  */\n-  targetm.have_tls = false;\n-\n-  targetm.emutls.get_address = \"__builtin___tls_lookup\";\n-  targetm.emutls.register_common = NULL;\n-  targetm.emutls.var_section = \".tls_vars\";\n-  targetm.emutls.tmpl_section = \".tls_data\";\n-  targetm.emutls.var_prefix = \"__tls__\";\n-  targetm.emutls.tmpl_prefix = \"\";\n-  targetm.emutls.var_fields = vxworks_emutls_var_fields;\n-  targetm.emutls.var_init = vxworks_emutls_var_init;\n-  targetm.emutls.var_align_fixed = true;\n-  targetm.emutls.debug_form_tls_address = true;\n-  \n+  /* Setup the tls emulation bits if the OS misses proper\n+     tls support.  */\n+  targetm.have_tls = VXWORKS_HAVE_TLS;\n+\n+  if (!VXWORKS_HAVE_TLS)\n+    {\n+      targetm.emutls.get_address = \"__builtin___tls_lookup\";\n+      targetm.emutls.register_common = NULL;\n+      targetm.emutls.var_section = \".tls_vars\";\n+      targetm.emutls.tmpl_section = \".tls_data\";\n+      targetm.emutls.var_prefix = \"__tls__\";\n+      targetm.emutls.tmpl_prefix = \"\";\n+      targetm.emutls.var_fields = vxworks_emutls_var_fields;\n+      targetm.emutls.var_init = vxworks_emutls_var_init;\n+      targetm.emutls.var_align_fixed = true;\n+      targetm.emutls.debug_form_tls_address = true;\n+    }\n+\n   /* We can use .ctors/.dtors sections only in RTP mode.  */\n   targetm.have_ctors_dtors = TARGET_VXWORKS_RTP;\n "}, {"sha": "e78ea280050d16844149a10e6576d56c7dbfbc50", "filename": "gcc/config/vxworks.h", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/931fae8133c14bf6240ca3439cb6ba2af120ebfb/gcc%2Fconfig%2Fvxworks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/931fae8133c14bf6240ca3439cb6ba2af120ebfb/gcc%2Fconfig%2Fvxworks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fvxworks.h?ref=931fae8133c14bf6240ca3439cb6ba2af120ebfb", "patch": "@@ -81,16 +81,22 @@ along with GCC; see the file COPYING3.  If not see\n    and its structure is fixed and does not depend on the arch.  We can thus\n    tell gcc where to look for when linking with RTP libraries.  */\n \n+/* On Vx7 RTP, we need to drag the __tls__ symbol to trigger initialization of\n+   tlsLib, responsible for TLS support by the OS.  */\n+\n #if TARGET_VXWORKS7\n #define VXWORKS_LIBS_DIR_RTP \"-L%:getenv(VSB_DIR /usr/lib/common)\"\n+#define TLS_SYM \"-u __tls__\"\n #else\n #define VXWORKS_LIBS_DIR_RTP \"\"\n+#define TLS_SYM \"\"\n #endif\n \n #undef VXWORKS_LIB_SPEC\n #define\tVXWORKS_LIB_SPEC\t\t\t\t\t\t\\\n \"%{mrtp:%{shared:-u \" USER_LABEL_PREFIX \"__init -u \" USER_LABEL_PREFIX \"__fini} \\\n \t%{!shared:%{non-static:-u \" USER_LABEL_PREFIX \"_STI__6__rtld -ldl} \\\n+\t\t  \" TLS_SYM \" \\\n \t\t  --start-group \" VXWORKS_LIBS_RTP \" --end-group} \\\n         \" VXWORKS_LIBS_DIR_RTP \"}\"\n \n@@ -126,6 +132,9 @@ along with GCC; see the file COPYING3.  If not see\n #define VXWORKS_ENDFILE_SPEC \"\"\n \n /* Do VxWorks-specific parts of TARGET_OPTION_OVERRIDE.  */\n+\n+#define VXWORKS_HAVE_TLS (TARGET_VXWORKS7 && TARGET_VXWORKS_RTP)\n+\n #undef VXWORKS_OVERRIDE_OPTIONS\n #define VXWORKS_OVERRIDE_OPTIONS vxworks_override_options ()\n extern void vxworks_override_options (void);"}]}