{"sha": "d2ca2ea6e8f35b33135a049e22ae3f022947f489", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZDJjYTJlYTZlOGYzNWIzMzEzNWEwNDllMjJhZTNmMDIyOTQ3ZjQ4OQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-22T14:36:08Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1996-09-22T14:36:08Z"}, "message": "(_objc_malloc): New function pointer.\n\n(_objc_atomic_malloc, _objc_valloc): Likewise.\n(_objc_realloc, _objc_calloc, _objc_free): Likewise\n\nFrom-SVN: r12764", "tree": {"sha": "ef8914bc3a3a9060cb3a83c4fd78b66eefacdd04", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef8914bc3a3a9060cb3a83c4fd78b66eefacdd04"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/d2ca2ea6e8f35b33135a049e22ae3f022947f489", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2ca2ea6e8f35b33135a049e22ae3f022947f489", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d2ca2ea6e8f35b33135a049e22ae3f022947f489", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d2ca2ea6e8f35b33135a049e22ae3f022947f489/comments", "author": null, "committer": null, "parents": [{"sha": "79236a0da5f94524f06a7175027c2dee82681384", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79236a0da5f94524f06a7175027c2dee82681384", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79236a0da5f94524f06a7175027c2dee82681384"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "ff452a48c7c3e692901016c1e47af8875ca63e32", "filename": "gcc/objc/objc-api.h", "status": "modified", "additions": 44, "deletions": 2, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/d2ca2ea6e8f35b33135a049e22ae3f022947f489/gcc%2Fobjc%2Fobjc-api.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/d2ca2ea6e8f35b33135a049e22ae3f022947f489/gcc%2Fobjc%2Fobjc-api.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fobjc%2Fobjc-api.h?ref=d2ca2ea6e8f35b33135a049e22ae3f022947f489", "patch": "@@ -310,12 +310,54 @@ extern Class (*_objc_lookup_class)(const char *name);\n */\n extern void (*_objc_load_callback)(Class class, Category* category);\n \n+/*\n+** Hook functions for allocating, copying and disposing of instances\n+*/\n extern id (*_objc_object_alloc)(Class class);\n-\n extern id (*_objc_object_copy)(id object);\n-\n extern id (*_objc_object_dispose)(id object);\n \n+/*\n+** Standard functions for memory allocation and disposal.\n+** Users should use these functions in their ObjC programs so\n+** that they work properly with garbage collectors as well as\n+** can take advantage of the exception/error handling available.\n+*/\n+void *\n+objc_malloc(size_t size);\n+\n+void *\n+objc_atomic_malloc(size_t size);\n+\n+void *\n+objc_valloc(size_t size);\n+\n+void *\n+objc_realloc(void *mem, size_t size);\n+\n+void *\n+objc_calloc(size_t nelem, size_t size);\n+\n+void\n+objc_free(void *mem);\n+\n+/*\n+** Hook functions for memory allocation and disposal.\n+** This makes it easy to substitute garbage collection systems\n+** such as Boehm's GC by assigning these function pointers\n+** to the GC's allocation routines.  By default these point\n+** to the ANSI standard malloc, realloc, free, etc.\n+**\n+** Users should call the normal objc routines above for\n+** memory allocation and disposal within their programs.\n+*/\n+extern void *(*_objc_malloc)(size_t);\n+extern void *(*_objc_atomic_malloc)(size_t);\n+extern void *(*_objc_valloc)(size_t);\n+extern void *(*_objc_realloc)(void *, size_t);\n+extern void *(*_objc_calloc)(size_t, size_t);\n+extern void (*_objc_free)(void *);\n+\n Method_t class_get_class_method(MetaClass class, SEL aSel);\n \n Method_t class_get_instance_method(Class class, SEL aSel);"}]}