{"sha": "fe3ddee943061bd1f93c42f5c37fbc2c2155a15e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmUzZGRlZTk0MzA2MWJkMWY5M2M0MmY1YzM3ZmJjMmMyMTU1YTE1ZQ==", "commit": {"author": {"name": "Claudiu Zissulescu", "email": "claziss@synopsys.com", "date": "2019-04-24T10:15:47Z"}, "committer": {"name": "Claudiu Zissulescu", "email": "claziss@gcc.gnu.org", "date": "2019-04-24T10:15:47Z"}, "message": "[ARC][COMMITTED] Fix typos.\n\ngcc/\nxxxx-xx-xx  Claudiu Zissulescu  <claziss@synopsys.com>\n\n\t* config/arc/arc-options.def: Fix typos and spelling mistakes.\n\t* config/arc/arc.c (arc_init): Cleanup warning message.\n\t(arc_override_options): Likewise.\n\nFrom-SVN: r270540", "tree": {"sha": "9ad3501f1ca2dfed65de3ee77fb22cc7ea176177", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9ad3501f1ca2dfed65de3ee77fb22cc7ea176177"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fe3ddee943061bd1f93c42f5c37fbc2c2155a15e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe3ddee943061bd1f93c42f5c37fbc2c2155a15e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fe3ddee943061bd1f93c42f5c37fbc2c2155a15e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fe3ddee943061bd1f93c42f5c37fbc2c2155a15e/comments", "author": {"login": "claziss", "id": 2761368, "node_id": "MDQ6VXNlcjI3NjEzNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/2761368?v=4", "gravatar_id": "", "url": "https://api.github.com/users/claziss", "html_url": "https://github.com/claziss", "followers_url": "https://api.github.com/users/claziss/followers", "following_url": "https://api.github.com/users/claziss/following{/other_user}", "gists_url": "https://api.github.com/users/claziss/gists{/gist_id}", "starred_url": "https://api.github.com/users/claziss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/claziss/subscriptions", "organizations_url": "https://api.github.com/users/claziss/orgs", "repos_url": "https://api.github.com/users/claziss/repos", "events_url": "https://api.github.com/users/claziss/events{/privacy}", "received_events_url": "https://api.github.com/users/claziss/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "be39d6f0379ab74356cf406974055c3a1e68d127", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/be39d6f0379ab74356cf406974055c3a1e68d127", "html_url": "https://github.com/Rust-GCC/gccrs/commit/be39d6f0379ab74356cf406974055c3a1e68d127"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "1c70df7ce9605767df5418777d32297fe9061486", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3ddee943061bd1f93c42f5c37fbc2c2155a15e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3ddee943061bd1f93c42f5c37fbc2c2155a15e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=fe3ddee943061bd1f93c42f5c37fbc2c2155a15e", "patch": "@@ -1,3 +1,9 @@\n+2019-04-24  Claudiu Zissulescu  <claziss@sysnopsys.com>\n+\n+\t* config/arc/arc-options.def: Fix typos and spelling mistakes.\n+\t* config/arc/arc.c (arc_init): Cleanup warning message.\n+\t(arc_override_options): Likewise.\n+\n 2019-04-24  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR target/90187"}, {"sha": "4b2dcb16e6cda07af081576781a1e83755fdaf72", "filename": "gcc/config/arc/arc-options.def", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3ddee943061bd1f93c42f5c37fbc2c2155a15e/gcc%2Fconfig%2Farc%2Farc-options.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3ddee943061bd1f93c42f5c37fbc2c2155a15e/gcc%2Fconfig%2Farc%2Farc-options.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc-options.def?ref=fe3ddee943061bd1f93c42f5c37fbc2c2155a15e", "patch": "@@ -68,9 +68,9 @@ ARC_OPT (FL_SWAP,     (1ULL << 7), MASK_SWAP_SET,\t   \"swap\")\n ARC_OPT (FL_MUL64,    (1ULL << 8), MASK_MUL64_SET,\t   \"mul64\")\n ARC_OPT (FL_MUL32x16, (1ULL << 9), MASK_MULMAC_32BY16_SET, \"mul32x16\")\n \n-ARC_OPT (FL_EA,\t      (1ULL << 11), MASK_EA_SET,\t   \"extended arithmetics\")\n-ARC_OPT (FL_SPFP,     (1ULL << 12), MASK_SPFP_COMPACT_SET, \"single precission FPX\")\n-ARC_OPT (FL_DPFP,     (1ULL << 13), MASK_DPFP_COMPACT_SET, \"double precission FPX\")\n+ARC_OPT (FL_EA,\t      (1ULL << 11), MASK_EA_SET,\t   \"extended arithmetic\")\n+ARC_OPT (FL_SPFP,     (1ULL << 12), MASK_SPFP_COMPACT_SET, \"single precision FPX\")\n+ARC_OPT (FL_DPFP,     (1ULL << 13), MASK_DPFP_COMPACT_SET, \"double precision FPX\")\n ARC_OPT (FL_ARGONAUT, (1ULL << 14), MASK_ARGONAUT_SET,\t   \"argonaut\")\n ARC_OPT (FL_SIMD,     (1ULL << 15), MASK_SIMD_SET,\t   \"simd\")\n \n@@ -101,9 +101,9 @@ ARC_OPTX (FL_FPU_FPUD_FMA,  (1ULL << 36), arc_fpu_build, FPU_FPUD_FMA,\t\"mfpu\", \"\n ARC_OPTX (FL_FPU_FPUD_ALL,  (1ULL << 37), arc_fpu_build, FPU_FPUD_ALL,\t\"mfpu\", \"fpud_all\")\n ARC_OPTX (FL_FPX_QUARK,\t    (1ULL << 38), arc_fpu_build, FPX_QK,\t\"quarkse fp\", \"N.A.\")\n \n-ARC_OPT (FL_FPUS,  (0xFULL << 26), 0, \"single precission floating point\")\n-ARC_OPT (FL_FPUDA, (0xFFULL << 26), 0, \"double precission fp assist\")\n-ARC_OPT (FL_FPUD,  (0xF0FULL << 26), 0, \"double precission floating point\")\n+ARC_OPT (FL_FPUS,  (0xFULL << 26), 0, \"single precision floating point\")\n+ARC_OPT (FL_FPUDA, (0xFFULL << 26), 0, \"double precision fp assist\")\n+ARC_OPT (FL_FPUD,  (0xF0FULL << 26), 0, \"double precision floating point\")\n ARC_OPT (FL_QUARK, (1ULL << 38), 0, \"Quark SE fp extension\")\n \n /* Local Variables: */"}, {"sha": "2f5753b02faba6833a09e33203d58f754d83698e", "filename": "gcc/config/arc/arc.c", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fe3ddee943061bd1f93c42f5c37fbc2c2155a15e/gcc%2Fconfig%2Farc%2Farc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fe3ddee943061bd1f93c42f5c37fbc2c2155a15e/gcc%2Fconfig%2Farc%2Farc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farc%2Farc.c?ref=fe3ddee943061bd1f93c42f5c37fbc2c2155a15e", "patch": "@@ -955,8 +955,7 @@ arc_init (void)\n   /* Warn for unimplemented PIC in pre-ARC700 cores, and disable flag_pic.  */\n   if (flag_pic && TARGET_ARC600_FAMILY)\n     {\n-      warning (0,\n-\t       \"PIC is not supported for %s.  Generating non-PIC code only\",\n+      warning (0, \"PIC is not supported for %qs\",\n \t       arc_cpu_string);\n       flag_pic = 0;\n     }\n@@ -1218,30 +1217,33 @@ arc_override_options (void)\n      option is not allowed.  Extra, check options against default\n      architecture/cpu flags and throw an warning if we find a\n      mismatch.  */\n+  /* TRANSLATORS: the DOC/DOC0/DOC1 are strings which shouldn't be\n+     translated.  They are like keywords which one can relate with the\n+     architectural choices taken for an ARC CPU implementation.  */\n #define ARC_OPTX(NAME, CODE, VAR, VAL, DOC0, DOC1)\t\t\\\n   do {\t\t\t\t\t\t\t\t\\\n     if ((!(arc_selected_cpu->arch_info->flags & CODE))\t\t\\\n \t&& (VAR == VAL))\t\t\t\t\t\\\n-      error (\"option %s=%s is not available for %s CPU\",\t\\\n+      error (\"option %<%s=%s%> is not available for %qs CPU\",\t\\\n \t     DOC0, DOC1, arc_selected_cpu->name);\t\t\\\n     if ((arc_selected_cpu->arch_info->dflags & CODE)\t\t\\\n \t&& (VAR != DEFAULT_##VAR)\t\t\t\t\\\n \t&& (VAR != VAL))\t\t\t\t\t\\\n-      warning (0, \"option %s is ignored, the default value %s\"\t\\\n-\t       \" is considered for %s CPU\", DOC0, DOC1,\t\t\\\n+      warning (0, \"option %qs is ignored, the default value %qs\"\t\\\n+\t       \" is considered for %qs CPU\", DOC0, DOC1,\t\t\\\n \t       arc_selected_cpu->name);\t\t\t\t\\\n  } while (0);\n #define ARC_OPT(NAME, CODE, MASK, DOC)\t\t\t\t\\\n   do {\t\t\t\t\t\t\t\t\\\n     if ((!(arc_selected_cpu->arch_info->flags & CODE))\t\t\\\n \t&& (target_flags & MASK))\t\t\t\t\\\n-      error (\"option %s is not available for %s CPU\",\t\t\\\n+      error (\"option %qs is not available for %qs CPU\",\t\t\\\n \t     DOC, arc_selected_cpu->name);\t\t\t\\\n     if ((arc_selected_cpu->arch_info->dflags & CODE)\t\t\\\n \t&& (target_flags_explicit & MASK)\t\t\t\\\n \t&& (!(target_flags & MASK)))\t\t\t\t\\\n-      warning (0, \"unset option %s is ignored, it is always\"\t\\\n-\t       \" enabled for %s CPU\", DOC,\t\t\t\\\n+      warning (0, \"unset option %qs is ignored, it is always\"\t\\\n+\t       \" enabled for %qs CPU\", DOC,\t\t\t\\\n \t       arc_selected_cpu->name);\t\t\t\t\\\n   } while (0);\n "}]}