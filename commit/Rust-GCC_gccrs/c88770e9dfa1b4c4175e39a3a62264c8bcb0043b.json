{"sha": "c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Yzg4NzcwZTlkZmExYjRjNDE3NWUzOWEzYTYyMjY0YzhiY2IwMDQzYg==", "commit": {"author": {"name": "Neil Booth", "email": "neil@daikokuya.demon.co.uk", "date": "2002-03-25T19:11:13Z"}, "committer": {"name": "Neil Booth", "email": "neil@gcc.gnu.org", "date": "2002-03-25T19:11:13Z"}, "message": "c-decl.c (maybe_build_cleanup): Remove.\n\n\t* c-decl.c (maybe_build_cleanup): Remove.\n\t* expr.c (expand_expr): Use langhook.\n\t* langhooks-def.h (lhd_return_null_tree,\n\tLANG_HOOKS_MAYBE_BUILD_CLEANUP): New.\n\t(LANGHOOKS_INITIALIZER): Update.\n\t* langhooks.c (lhd_return_null_tree): New.\n\t* langhooks.h (struct lang_hooks): New hook.\n\t* tree-inline.c (initialize_inlined_parameters): Use langhook.\n\t* tree.h (maybe_build_cleanup): Remove.\nada:\n\t* misc.c (maybe_build_cleanup): Remove.\ncp:\n\t* cp-tree.h (cxx_maybe_build_cleanup): New.\n\t* decl.c (destroy_local_var, hack_incomplete_structures): Update.\n\t(maybe_build_cleanup): Rename cxx_maybe_build_cleanup.\n\t* tree.c (build_target_expr): Update.\nf:\n\t* com.c (maybe_build_cleanup): Remove.\njava:\n\t* decl.c (maybe_build_cleanup): Remove.\n\nFrom-SVN: r51324", "tree": {"sha": "3fdcb23609c1c0e4600afc58d41d0dd3ea750b9b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3fdcb23609c1c0e4600afc58d41d0dd3ea750b9b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/comments", "author": null, "committer": null, "parents": [{"sha": "2188d04d141f87189c987a31a62758f57cb64af8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2188d04d141f87189c987a31a62758f57cb64af8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2188d04d141f87189c987a31a62758f57cb64af8"}], "stats": {"total": 112, "additions": 55, "deletions": 57}, "files": [{"sha": "ee9a97fcf076841c67a6278f7cc7600dcebc6c73", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "patch": "@@ -1,3 +1,15 @@\n+2002-03-25  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* c-decl.c (maybe_build_cleanup): Remove.\n+\t* expr.c (expand_expr): Use langhook.\n+\t* langhooks-def.h (lhd_return_null_tree,\n+\tLANG_HOOKS_MAYBE_BUILD_CLEANUP): New.\n+\t(LANGHOOKS_INITIALIZER): Update.\n+\t* langhooks.c (lhd_return_null_tree): New.\n+\t* langhooks.h (struct lang_hooks): New hook.\n+\t* tree-inline.c (initialize_inlined_parameters): Use langhook.\n+\t* tree.h (maybe_build_cleanup): Remove.\n+\n 2002-03-25  Jakub Jelinek  <jakub@redhat.com>\n \n \t* regrename.c (build_def_use): Move recog_memoized"}, {"sha": "ecba441a129ea25f4a07c74c36c596746039e68d", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "patch": "@@ -1,3 +1,7 @@\n+2002-03-25  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* misc.c (maybe_build_cleanup): Remove.\n+\n 2002-03-24  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* gigi.h (yyparse): Remove."}, {"sha": "b32ba1fad97a71b8db3dfb0874c988adc718c241", "filename": "gcc/ada/misc.c", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fada%2Fmisc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fada%2Fmisc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fmisc.c?ref=c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "patch": "@@ -406,18 +406,6 @@ gnat_init_gcc_eh ()\n #endif\n }\n \n-\n-/* If DECL has a cleanup, build and return that cleanup here.\n-   This is a callback called by expand_expr.  */\n-\n-tree\n-maybe_build_cleanup (decl)\n-     tree decl ATTRIBUTE_UNUSED;\n-{\n-  /* There are no cleanups in C.  */\n-  return NULL_TREE;\n-}\n-\n /* Hooks for print-tree.c:  */\n \n static void"}, {"sha": "6008b936e4a001b091d7415a097898db627c2c14", "filename": "gcc/c-decl.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fc-decl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fc-decl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-decl.c?ref=c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "patch": "@@ -3657,17 +3657,6 @@ finish_decl (decl, init, asmspec_tree)\n     get_pending_sizes ();\n }\n \n-/* If DECL has a cleanup, build and return that cleanup here.\n-   This is a callback called by expand_expr.  */\n-\n-tree\n-maybe_build_cleanup (decl)\n-     tree decl ATTRIBUTE_UNUSED;\n-{\n-  /* There are no cleanups in C.  */\n-  return NULL_TREE;\n-}\n-\n /* Given a parsed parameter declaration,\n    decode it into a PARM_DECL and push that on the current binding level.\n    Also, for the sake of forward parm decls,"}, {"sha": "8c662709d56166455e841b8c8b44431b1c71cfaf", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "patch": "@@ -1,3 +1,10 @@\n+2002-03-25  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* cp-tree.h (cxx_maybe_build_cleanup): New.\n+\t* decl.c (destroy_local_var, hack_incomplete_structures): Update.\n+\t(maybe_build_cleanup): Rename cxx_maybe_build_cleanup.\n+\t* tree.c (build_target_expr): Update.\n+\n 2002-03-24  Neil Booth  <neil@daikokuya.demon.co.uk>\n \n \t* decl2.c (cxx_decode_option): Handle -E."}, {"sha": "3a7ccc4c54b84257c5842e6d81b153398484b059", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "patch": "@@ -4241,6 +4241,7 @@ extern void end_input\t\t\t\tPARAMS ((void));\n /* in tree.c */\n extern tree stabilize_expr\t\tPARAMS ((tree, tree *));\n extern tree cxx_unsave_expr_now\t\tPARAMS ((tree));\n+extern tree cxx_maybe_build_cleanup\t\tPARAMS ((tree));\n extern void init_tree\t\t\t        PARAMS ((void));\n extern int pod_type_p\t\t\t\tPARAMS ((tree));\n extern tree canonical_type_variant              PARAMS ((tree));"}, {"sha": "c739c9e30c443393c9742a36714efc00a8bb115c", "filename": "gcc/cp/decl.c", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fcp%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fcp%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl.c?ref=c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "patch": "@@ -8034,7 +8034,7 @@ destroy_local_var (decl)\n     return;\n \n   /* Compute the cleanup.  */\n-  cleanup = maybe_build_cleanup (decl);\n+  cleanup = cxx_maybe_build_cleanup (decl);\n \n   /* Record the cleanup required for this declaration.  */\n   if (DECL_SIZE (decl) && cleanup)\n@@ -14451,7 +14451,7 @@ hack_incomplete_structures (type)\n \t\t{\n \t\t  tree cleanup;\n \t\t  expand_decl (decl);\n-\t\t  cleanup = maybe_build_cleanup (decl);\n+\t\t  cleanup = cxx_maybe_build_cleanup (decl);\n \t\t  expand_decl_init (decl);\n \t\t  if (! expand_decl_cleanup (decl, cleanup))\n \t\t    error (\"parser lost in parsing declaration of `%D'\",\n@@ -14479,7 +14479,7 @@ hack_incomplete_structures (type)\n    here.  */\n \n tree\n-maybe_build_cleanup (decl)\n+cxx_maybe_build_cleanup (decl)\n      tree decl;\n {\n   tree type = TREE_TYPE (decl);"}, {"sha": "2cc78a75aaf1d31845dc83296fffa9aa76929d0a", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "patch": "@@ -234,7 +234,7 @@ build_target_expr (decl, value)\n   tree t;\n \n   t = build (TARGET_EXPR, TREE_TYPE (decl), decl, value, \n-\t     maybe_build_cleanup (decl), NULL_TREE);\n+\t     cxx_maybe_build_cleanup (decl), NULL_TREE);\n   /* We always set TREE_SIDE_EFFECTS so that expand_expr does not\n      ignore the TARGET_EXPR.  If there really turn out to be no\n      side-effects, then the optimizer should be able to get rid of"}, {"sha": "bc8b6a94a765c7d8b2ea064fc62c39f7a68d9454", "filename": "gcc/expr.c", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fexpr.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fexpr.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpr.c?ref=c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "patch": "@@ -8379,7 +8379,8 @@ expand_expr (exp, target, tmode, modifier)\n \t\t   built here.  */\n \n \t\tif (TREE_OPERAND (exp, 2) == 0)\n-\t\t  TREE_OPERAND (exp, 2) = maybe_build_cleanup (slot);\n+\t\t  TREE_OPERAND (exp, 2)\n+\t\t    = (*lang_hooks.maybe_build_cleanup) (slot);\n \t\tcleanups = TREE_OPERAND (exp, 2);\n \t      }\n \t  }"}, {"sha": "b2000193f72bc9a7662965fa3182d7527fe7f234", "filename": "gcc/f/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Ff%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Ff%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2FChangeLog?ref=c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "patch": "@@ -1,3 +1,7 @@\n+Mon Mar 25 19:27:11 2002  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* com.c (maybe_build_cleanup): Remove.\n+\n 2002-03-23  Toon Moene  <toon@moene.indiv.nluug.nl>\n \n \t* com.c (ffecom_check_size_overflow_): Add a test"}, {"sha": "084519b32e60c5a2427ed5b0d4c16b61b71a36a2", "filename": "gcc/f/com.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Ff%2Fcom.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Ff%2Fcom.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ff%2Fcom.c?ref=c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "patch": "@@ -14381,17 +14381,6 @@ mark_addressable (exp)\n       }\n }\n \n-/* If DECL has a cleanup, build and return that cleanup here.\n-   This is a callback called by expand_expr.  */\n-\n-tree\n-maybe_build_cleanup (decl)\n-     tree decl UNUSED;\n-{\n-  /* There are no cleanups in Fortran.  */\n-  return NULL_TREE;\n-}\n-\n /* Exit a binding level.\n    Pop the level off, and restore the state of the identifier-decl mappings\n    that were in effect when this level was entered."}, {"sha": "64e8479f880785aff80634d8556754d1708cbf89", "filename": "gcc/java/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2FChangeLog?ref=c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "patch": "@@ -1,3 +1,7 @@\n+2002-03-25  Neil Booth  <neil@daikokuya.demon.co.uk>\n+\n+\t* decl.c (maybe_build_cleanup): Remove.\n+\n 2002-03-22  Tom Tromey  <tromey@redhat.com>\n \n \tAndrew Haley  <aph@cambridge.redhat.com>"}, {"sha": "a84269d09f96e372f5bebdb99e3dba5d07fb6fec", "filename": "gcc/java/decl.c", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fjava%2Fdecl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Fjava%2Fdecl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fjava%2Fdecl.c?ref=c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "patch": "@@ -1565,17 +1565,6 @@ java_dup_lang_specific_decl (node)\n   DECL_LANG_SPECIFIC (node) = x;\n }\n \n-/* If DECL has a cleanup, build and return that cleanup here.\n-   This is a callback called by expand_expr.  */\n-\n-tree\n-maybe_build_cleanup (decl)\n-  tree decl ATTRIBUTE_UNUSED;\n-{\n-  /* There are no cleanups in Java (I think).  */\n-  return NULL_TREE;\n-}\n-\n void\n give_name_to_locals (jcf)\n      JCF *jcf;"}, {"sha": "fa840a6c5916081984519756288a25346a239e1f", "filename": "gcc/langhooks-def.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Flanghooks-def.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Flanghooks-def.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks-def.h?ref=c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "patch": "@@ -42,6 +42,7 @@ extern void lhd_do_nothing_t PARAMS ((tree));\n extern int lhd_decode_option PARAMS ((int, char **));\n extern HOST_WIDE_INT lhd_get_alias_set PARAMS ((tree));\n extern tree lhd_return_tree PARAMS ((tree));\n+extern tree lhd_return_null_tree PARAMS ((tree));\n extern int lhd_safe_from_p PARAMS ((rtx, tree));\n extern int lhd_staticp PARAMS ((tree));\n extern void lhd_clear_binding_stack PARAMS ((void));\n@@ -81,6 +82,7 @@ tree lhd_tree_inlining_convert_parm_for_inlining PARAMS ((tree, tree, tree));\n #define LANG_HOOKS_STATICP\t\tlhd_staticp\n #define LANG_HOOKS_DUP_LANG_SPECIFIC_DECL lhd_do_nothing_t\n #define LANG_HOOKS_UNSAVE_EXPR_NOW\tlhd_unsave_expr_now\n+#define LANG_HOOKS_MAYBE_BUILD_CLEANUP\tlhd_return_null_tree\n #define LANG_HOOKS_HONOR_READONLY\tfalse\n #define LANG_HOOKS_PRINT_STATISTICS\tlhd_do_nothing\n #define LANG_HOOKS_PRINT_XNODE\t\tlhd_print_tree_nothing\n@@ -175,6 +177,7 @@ int lhd_tree_dump_type_quals\t\t\tPARAMS ((tree));\n   LANG_HOOKS_STATICP, \\\n   LANG_HOOKS_DUP_LANG_SPECIFIC_DECL, \\\n   LANG_HOOKS_UNSAVE_EXPR_NOW, \\\n+  LANG_HOOKS_MAYBE_BUILD_CLEANUP, \\\n   LANG_HOOKS_HONOR_READONLY, \\\n   LANG_HOOKS_PRINT_STATISTICS, \\\n   LANG_HOOKS_PRINT_XNODE, \\"}, {"sha": "4bbcd5e148f9a8d89f4d3a947ea05bc29934f852", "filename": "gcc/langhooks.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Flanghooks.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Flanghooks.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.c?ref=c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "patch": "@@ -56,6 +56,15 @@ lhd_return_tree (t)\n   return t;\n }\n \n+/* Do nothing (return NULL_TREE).  */\n+\n+tree\n+lhd_return_null_tree (t)\n+     tree t ATTRIBUTE_UNUSED;\n+{\n+  return NULL_TREE;\n+}\n+\n /* Do nothing; the default hook to decode an option.  */\n \n int"}, {"sha": "d13d518e48b10ce99913cac6be686c07057003dc", "filename": "gcc/langhooks.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Flanghooks.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Flanghooks.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Flanghooks.h?ref=c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "patch": "@@ -180,6 +180,10 @@ struct lang_hooks\n      things are cleared out.  */\n   tree (*unsave_expr_now) PARAMS ((tree));\n \n+  /* Called by expand_expr to build and return the cleanup-expression\n+     for the passed TARGET_EXPR.  Return NULL if there is none.  */\n+  tree (*maybe_build_cleanup) PARAMS ((tree));\n+\n   /* Nonzero if TYPE_READONLY and TREE_READONLY should always be honored.  */\n   bool honor_readonly;\n "}, {"sha": "b255ee043381d93d4040c38775371573535ed71f", "filename": "gcc/tree-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Ftree-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Ftree-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-inline.c?ref=c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "patch": "@@ -562,7 +562,7 @@ initialize_inlined_parameters (id, args, fn)\n \t}\n \n       /* See if we need to clean up the declaration.  */\n-      cleanup = maybe_build_cleanup (var);\n+      cleanup = (*lang_hooks.maybe_build_cleanup) (var);\n       if (cleanup) \n \t{\n \t  tree cleanup_stmt;"}, {"sha": "3018f2a44907fc945a42212075bbab58b15c7a1d", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c88770e9dfa1b4c4175e39a3a62264c8bcb0043b/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=c88770e9dfa1b4c4175e39a3a62264c8bcb0043b", "patch": "@@ -2641,12 +2641,6 @@ extern tree unsigned_type\t\tPARAMS ((tree));\n \n extern tree signed_type\t\t\tPARAMS ((tree));\n \n-/* This function must be defined in the language-specific files.\n-   expand_expr calls it to build the cleanup-expression for a TARGET_EXPR.\n-   This is defined in a language-specific file.  */\n-\n-extern tree maybe_build_cleanup\t\tPARAMS ((tree));\n-\n /* Given an expression EXP that may be a COMPONENT_REF or an ARRAY_REF,\n    look for nested component-refs or array-refs at constant positions\n    and find the ultimate containing object, which is returned.  */"}]}