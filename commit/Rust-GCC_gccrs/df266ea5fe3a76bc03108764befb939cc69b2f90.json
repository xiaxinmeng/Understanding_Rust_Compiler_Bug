{"sha": "df266ea5fe3a76bc03108764befb939cc69b2f90", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGYyNjZlYTVmZTNhNzZiYzAzMTA4NzY0YmVmYjkzOWNjNjliMmY5MA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2012-12-11T18:16:50Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2012-12-11T18:16:50Z"}, "message": "re PR c++/54416 (ICE (segv) in codegen)\n\n\tPR c++/54416\n\t* pt.c (maybe_process_partial_specialization): Don't accept\n\tdefinition of a specialization without the appropriate header.\n\nFrom-SVN: r194408", "tree": {"sha": "71a6dc59ed886455276ee5e3753a8735a3efe6b3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71a6dc59ed886455276ee5e3753a8735a3efe6b3"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/df266ea5fe3a76bc03108764befb939cc69b2f90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df266ea5fe3a76bc03108764befb939cc69b2f90", "html_url": "https://github.com/Rust-GCC/gccrs/commit/df266ea5fe3a76bc03108764befb939cc69b2f90", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/df266ea5fe3a76bc03108764befb939cc69b2f90/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "befd067c5ab038183979ee93a7010b5dcc9f1e2e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/befd067c5ab038183979ee93a7010b5dcc9f1e2e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/befd067c5ab038183979ee93a7010b5dcc9f1e2e"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "2c3efe82556ad80c8141ccfff7805ce919f8fbdd", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df266ea5fe3a76bc03108764befb939cc69b2f90/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df266ea5fe3a76bc03108764befb939cc69b2f90/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=df266ea5fe3a76bc03108764befb939cc69b2f90", "patch": "@@ -1,5 +1,9 @@\n 2012-12-11  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/54416\n+\t* pt.c (maybe_process_partial_specialization): Don't accept\n+\tdefinition of a specialization without the appropriate header.\n+\n \t* pt.c (maybe_process_partial_specialization): Handle aliases first.\n \n 2012-12-11  Jakub Jelinek  <jakub@redhat.com>"}, {"sha": "91450d8540702fa7118c09d33737d6e9f1da3dea", "filename": "gcc/cp/pt.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df266ea5fe3a76bc03108764befb939cc69b2f90/gcc%2Fcp%2Fpt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df266ea5fe3a76bc03108764befb939cc69b2f90/gcc%2Fcp%2Fpt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fpt.c?ref=df266ea5fe3a76bc03108764befb939cc69b2f90", "patch": "@@ -850,7 +850,13 @@ maybe_process_partial_specialization (tree type)\n \t}\n       else if (CLASSTYPE_TEMPLATE_INSTANTIATION (type))\n \terror (\"specialization of %qT after instantiation\", type);\n-\n+      else if (errorcount && !processing_specialization\n+\t        && CLASSTYPE_TEMPLATE_SPECIALIZATION (type)\n+\t       && !uses_template_parms (CLASSTYPE_TI_ARGS (type)))\n+\t/* Trying to define a specialization either without a template<> header\n+\t   or in an inappropriate place.  We've already given an error, so just\n+\t   bail now so we don't actually define the specialization.  */\n+\treturn error_mark_node;\n     }\n   else if (CLASS_TYPE_P (type)\n \t   && !CLASSTYPE_USE_TEMPLATE (type)"}, {"sha": "8cfff6a367d245dfb02befccd078f875111237c8", "filename": "gcc/testsuite/g++.dg/template/crash105.C", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df266ea5fe3a76bc03108764befb939cc69b2f90/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash105.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df266ea5fe3a76bc03108764befb939cc69b2f90/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash105.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Fcrash105.C?ref=df266ea5fe3a76bc03108764befb939cc69b2f90", "patch": "@@ -10,5 +10,8 @@ template < typename > struct S < int >\n void\n f ()\n {\n-  S < int >::f (); // { dg-error \"cannot call\" }\n+  S < int >::f ();\n }\n+\n+// Don't be picky about error-recovery.\n+// { dg-prune-output \".\" }"}, {"sha": "483f7b54c35d19c27b9f3236ce0ad7aa1b190bf5", "filename": "gcc/testsuite/g++.dg/template/error48.C", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/df266ea5fe3a76bc03108764befb939cc69b2f90/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror48.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/df266ea5fe3a76bc03108764befb939cc69b2f90/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror48.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Ftemplate%2Ferror48.C?ref=df266ea5fe3a76bc03108764befb939cc69b2f90", "patch": "@@ -0,0 +1,15 @@\n+// PR c++/54416\n+\n+template < typename T > struct foo;\n+template <> struct foo < int >;\n+template < typename T > struct bar\n+{\n+  template <> struct foo < int > // { dg-error \"non-namespace scope\" }\n+  {\n+    void baz ();\n+  };\n+};\n+void foo < int >::baz () { }\n+\n+// Don't be picky about error-recovery.\n+// { dg-prune-output \".\" }"}]}