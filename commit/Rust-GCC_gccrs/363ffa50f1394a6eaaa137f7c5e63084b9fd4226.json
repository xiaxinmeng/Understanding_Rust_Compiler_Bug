{"sha": "363ffa50f1394a6eaaa137f7c5e63084b9fd4226", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MzYzZmZhNTBmMTM5NGE2ZWFhYTEzN2Y3YzVlNjMwODRiOWZkNDIyNg==", "commit": {"author": {"name": "Jiong Wang", "email": "jiong.wang@arm.com", "date": "2014-07-24T14:32:54Z"}, "committer": {"name": "Marcus Shawcroft", "email": "mshawcroft@gcc.gnu.org", "date": "2014-07-24T14:32:54Z"}, "message": "[AArch64] Extend frame state to track WB candidates.\n\nFrom-SVN: r212996", "tree": {"sha": "782410cc95e4e2adb2f82a4eb489ea33471016d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/782410cc95e4e2adb2f82a4eb489ea33471016d9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/363ffa50f1394a6eaaa137f7c5e63084b9fd4226", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/363ffa50f1394a6eaaa137f7c5e63084b9fd4226", "html_url": "https://github.com/Rust-GCC/gccrs/commit/363ffa50f1394a6eaaa137f7c5e63084b9fd4226", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/363ffa50f1394a6eaaa137f7c5e63084b9fd4226/comments", "author": null, "committer": null, "parents": [{"sha": "51705ec128f47bf0bc7615aa5b72445c45fd1657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/51705ec128f47bf0bc7615aa5b72445c45fd1657", "html_url": "https://github.com/Rust-GCC/gccrs/commit/51705ec128f47bf0bc7615aa5b72445c45fd1657"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "71ae61cacca5b939b47f01c53fad511bcf41bfe4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363ffa50f1394a6eaaa137f7c5e63084b9fd4226/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363ffa50f1394a6eaaa137f7c5e63084b9fd4226/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=363ffa50f1394a6eaaa137f7c5e63084b9fd4226", "patch": "@@ -1,3 +1,9 @@\n+2014-07-24  Jiong Wang  <jiong.wang@arm.com>\n+\n+\t* config/aarch64/aarch64.h (frame): New fields \"wb_candidate1\" and\n+\t\"wb_candidate2\".\n+\t* config/aarch64/aarch64.c (aarch64_layout_frame): Initialize above.\n+\n 2014-07-24  Roman Gareev  <gareevroman@gmail.com>\n \n \t* graphite-isl-ast-to-gimple.c:"}, {"sha": "37fae938b3714b014df3d1e2138b50aa5b58c383", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363ffa50f1394a6eaaa137f7c5e63084b9fd4226/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363ffa50f1394a6eaaa137f7c5e63084b9fd4226/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=363ffa50f1394a6eaaa137f7c5e63084b9fd4226", "patch": "@@ -1818,6 +1818,9 @@ aarch64_layout_frame (void)\n #define SLOT_NOT_REQUIRED (-2)\n #define SLOT_REQUIRED     (-1)\n \n+  cfun->machine->frame.wb_candidate1 = FIRST_PSEUDO_REGISTER;\n+  cfun->machine->frame.wb_candidate2 = FIRST_PSEUDO_REGISTER;\n+\n   /* First mark all the registers that really need to be saved...  */\n   for (regno = R0_REGNUM; regno <= R30_REGNUM; regno++)\n     cfun->machine->frame.reg_offset[regno] = SLOT_NOT_REQUIRED;\n@@ -1846,7 +1849,9 @@ aarch64_layout_frame (void)\n     {\n       /* FP and LR are placed in the linkage record.  */\n       cfun->machine->frame.reg_offset[R29_REGNUM] = 0;\n+      cfun->machine->frame.wb_candidate1 = R29_REGNUM;\n       cfun->machine->frame.reg_offset[R30_REGNUM] = UNITS_PER_WORD;\n+      cfun->machine->frame.wb_candidate2 = R30_REGNUM;\n       cfun->machine->frame.hardfp_offset = 2 * UNITS_PER_WORD;\n       offset += 2 * UNITS_PER_WORD;\n     }\n@@ -1856,13 +1861,22 @@ aarch64_layout_frame (void)\n     if (cfun->machine->frame.reg_offset[regno] == SLOT_REQUIRED)\n       {\n \tcfun->machine->frame.reg_offset[regno] = offset;\n+\tif (cfun->machine->frame.wb_candidate1 == FIRST_PSEUDO_REGISTER)\n+\t  cfun->machine->frame.wb_candidate1 = regno;\n+\telse if (cfun->machine->frame.wb_candidate2 == FIRST_PSEUDO_REGISTER)\n+\t  cfun->machine->frame.wb_candidate2 = regno;\n \toffset += UNITS_PER_WORD;\n       }\n \n   for (regno = V0_REGNUM; regno <= V31_REGNUM; regno++)\n     if (cfun->machine->frame.reg_offset[regno] == SLOT_REQUIRED)\n       {\n \tcfun->machine->frame.reg_offset[regno] = offset;\n+\tif (cfun->machine->frame.wb_candidate1 == FIRST_PSEUDO_REGISTER)\n+\t  cfun->machine->frame.wb_candidate1 = regno;\n+\telse if (cfun->machine->frame.wb_candidate2 == FIRST_PSEUDO_REGISTER\n+\t\t && cfun->machine->frame.wb_candidate1 >= V0_REGNUM)\n+\t  cfun->machine->frame.wb_candidate2 = regno;\n \toffset += UNITS_PER_WORD;\n       }\n "}, {"sha": "db950da8f5ec7f8447943533966fd90eeb133276", "filename": "gcc/config/aarch64/aarch64.h", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/363ffa50f1394a6eaaa137f7c5e63084b9fd4226/gcc%2Fconfig%2Faarch64%2Faarch64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/363ffa50f1394a6eaaa137f7c5e63084b9fd4226/gcc%2Fconfig%2Faarch64%2Faarch64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.h?ref=363ffa50f1394a6eaaa137f7c5e63084b9fd4226", "patch": "@@ -542,6 +542,9 @@ struct GTY (()) aarch64_frame\n    * frame (incomming SP) to the stack_pointer.  This value is always\n    * a multiple of STACK_BOUNDARY.  */\n \n+  unsigned wb_candidate1;\n+  unsigned wb_candidate2;\n+\n   HOST_WIDE_INT frame_size;\n \n   bool laid_out;"}]}