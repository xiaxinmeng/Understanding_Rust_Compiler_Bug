{"sha": "018a4785065ba0b5164d5aae330613e42c5653ac", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MDE4YTQ3ODUwNjViYTBiNTE2NGQ1YWFlMzMwNjEzZTQyYzU2NTNhYw==", "commit": {"author": {"name": "Zack Weinberg", "email": "zack@codesourcery.com", "date": "2004-09-24T21:39:06Z"}, "committer": {"name": "Zack Weinberg", "email": "zack@gcc.gnu.org", "date": "2004-09-24T21:39:06Z"}, "message": "warnings.m4: New file.\n\nconfig:\n\t* warnings.m4: New file.\nlibcpp:\n\t* configure.ac: Move AC_PROG_MAKE_SET, AC_PROG_INSTALL to\n\tprograms cluster. Use ACX_PROG_CC_WARNING_OPTS,\n\tACX_PROG_CC_WARNING_ALMOST_PEDANTIC, ACX_PROG_CC_WARNINGS_ARE_ERRORS.\n\t* aclocal.m4, configure: Regenerate.\n\t* init.c: Include localedir.h.\n\t* Makefile.in (WARN_CFLAGS, ALL_CFLAGS): New variables.\n\t(DEFS): Delete.\n\t(.c.o): Use $(ALL_CFLAGS).\n\t(localedir.h, localedir.hs): New rules.\n\t(clean): Use rm -rf to remove directories.\n\t(distclean): Also delete localedir.h and localedir.hs.\n\t(init.o): Update dependencies.\n\nFrom-SVN: r88074", "tree": {"sha": "1e2296a88dcd34dc7b721373b3b5ad6c97217196", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/1e2296a88dcd34dc7b721373b3b5ad6c97217196"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/018a4785065ba0b5164d5aae330613e42c5653ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/018a4785065ba0b5164d5aae330613e42c5653ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/018a4785065ba0b5164d5aae330613e42c5653ac", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/018a4785065ba0b5164d5aae330613e42c5653ac/comments", "author": null, "committer": null, "parents": [{"sha": "dd3017e4e5c8d9d102fb11330cba5fe87e0eda65", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd3017e4e5c8d9d102fb11330cba5fe87e0eda65", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd3017e4e5c8d9d102fb11330cba5fe87e0eda65"}], "stats": {"total": 319, "additions": 306, "deletions": 13}, "files": [{"sha": "5e417bdd259a6ec5f5c23eb4d67264ee01fb297f", "filename": "config/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018a4785065ba0b5164d5aae330613e42c5653ac/config%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018a4785065ba0b5164d5aae330613e42c5653ac/config%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2FChangeLog?ref=018a4785065ba0b5164d5aae330613e42c5653ac", "patch": "@@ -1,3 +1,7 @@\n+2004-09-24  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* warnings.m4: New file.\n+\n 2004-09-23  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR bootstrap/17369"}, {"sha": "5501be9204695461bc366638d4fa94fbaad79cc6", "filename": "config/warnings.m4", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018a4785065ba0b5164d5aae330613e42c5653ac/config%2Fwarnings.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018a4785065ba0b5164d5aae330613e42c5653ac/config%2Fwarnings.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/config%2Fwarnings.m4?ref=018a4785065ba0b5164d5aae330613e42c5653ac", "patch": "@@ -0,0 +1,97 @@\n+# Autoconf include file defining macros related to compile-time warnings.\n+\n+# Copyright 2004 Free Software Foundation, Inc.\n+\n+#This file is part of GCC.\n+\n+#GCC is free software; you can redistribute it and/or modify it under\n+#the terms of the GNU General Public License as published by the Free\n+#Software Foundation; either version 2, or (at your option) any later\n+#version.\n+\n+#GCC is distributed in the hope that it will be useful, but WITHOUT\n+#ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n+#FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License\n+#for more details.\n+\n+#You should have received a copy of the GNU General Public License\n+#along with GCC; see the file COPYING.  If not, write to the Free\n+#Software Foundation, 59 Temple Place - Suite 330, Boston, MA\n+#02111-1307, USA.\n+\n+# ACX_PROG_CC_WARNING_OPTS([-Wfoo -Wbar -Wbaz])\n+#   Sets @WARN_CFLAGS@ to the subset of the given options which the\n+#   compiler accepts.\n+AC_DEFUN([ACX_PROG_CC_WARNING_OPTS],\n+[AC_REQUIRE([AC_PROG_CC])dnl\n+AC_SUBST([WARN_CFLAGS])dnl\n+WARN_CFLAGS=\n+save_CFLAGS=\"$CFLAGS\"\n+for option in $1; do\n+  AS_VAR_PUSHDEF([acx_Woption], [acx_cv_prog_cc_warning_$option])\n+  AC_CACHE_CHECK([whether $CC supports $option], acx_Woption,\n+    [CFLAGS=\"$option\"\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],[])],\n+      [AS_VAR_SET(acx_Woption, yes)],\n+      [AS_VAR_SET(acx_Woption, no)])\n+  ])\n+  AS_IF([test AS_VAR_GET(acx_Woption) = yes],\n+        [WARN_CFLAGS=\"$WARN_CFLAGS${WARN_CFLAGS:+ }$option\"])\n+  AS_VAR_POPDEF([acx_Woption])dnl\n+done\n+CFLAGS=\"$save_CFLAGS\"\n+])# ACX_PROG_CC_WARNING_OPTS\n+\n+# ACX_PROG_CC_WARNING_ALMOST_PEDANTIC([-Wno-long-long ...])\n+#   Sets WARN_PEDANTIC to \"-pedantic\" + the argument, if the compiler\n+#   accepts all of those options simultaneously, otherwise to nothing.\n+AC_DEFUN([ACX_PROG_CC_WARNING_ALMOST_PEDANTIC],\n+[AC_REQUIRE([AC_PROG_CC])dnl\n+AC_SUBST([WARN_PEDANTIC])dnl\n+AS_VAR_PUSHDEF([acx_Pedantic], [acx_cv_prog_cc_pedantic_$1])dnl\n+WARN_PEDANTIC=\n+AC_CACHE_CHECK([whether $CC supports -pedantic $1], acx_Pedantic,\n+[save_CFLAGS=\"$CFLAGS\"\n+CFLAGS=\"-pedantic $1\"\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([],[])],\n+   [AS_VAR_SET(acx_Pedantic, yes)],\n+   [AS_VAR_SET(acx_Pedantic, no)])\n+CFLAGS=\"$save_CFLAGS\"])\n+AS_IF([test AS_VAR_GET(acx_Pedantic) = yes],\n+      [WARN_PEDANTIC=\"-pedantic $1\"])\n+AS_VAR_POPDEF([acx_Pedantic])dnl\n+])# ACX_PROG_CC_WARNING_ALMOST_PEDANTIC\n+\n+# ACX_PROG_CC_WARNINGS_ARE_ERRORS([x.y.z])\n+#   sets WERROR to \"-Werror\" if the compiler is GCC >=x.y.z, or if\n+#   --enable-werror-always was given on the command line, otherwise\n+#   to nothing.\n+#   If the argument is the word \"manual\" instead of a version number,\n+#   then WERROR will be set to -Werror only if --enable-werror-always\n+#   appeared on the configure command line.\n+AC_DEFUN([ACX_PROG_CC_WARNINGS_ARE_ERRORS],\n+[AC_REQUIRE([AC_PROG_CC])dnl\n+AC_SUBST([WERROR])dnl\n+WERROR=\n+AC_ARG_ENABLE(werror-always, \n+    AS_HELP_STRING([--enable-werror-always],\n+\t\t   [enable -Werror despite compiler version]),\n+[], [enable_werror_always=no])\n+AS_IF([test $enable_werror_always = yes],\n+      [WERROR=-Werror],\n+ m4_if($1, [manual],,\n+ [AS_VAR_PUSHDEF([acx_GCCvers], [acx_cv_prog_cc_gcc_$1_or_newer])dnl\n+  AC_CACHE_CHECK([whether $CC is GCC >=$1], acx_GCCvers,\n+    [set fnord `echo $1 | tr '.' ' '`\n+     shift\n+     AC_PREPROC_IFELSE(\n+[#if __GNUC__ * 10000 + __GNUC_MINOR__ * 100 + __GNUC_PATCHLEVEL__ \\\n+  < [$]1 * 10000 + [$]2 * 100 + [$]3\n+#error insufficient\n+#endif],\n+   [AS_VAR_SET(acx_GCCvers, yes)],\n+   [AS_VAR_SET(acx_GCCvers, no)])])\n+ AS_IF([test AS_VAR_GET(acx_GCCvers) = yes],\n+       [WERROR=-WerrorB])\n+  AS_VAR_POPDEF([acx_GCCvers])]))\n+])# ACX_PROG_CC_WARNINGS_ARE_ERRORS"}, {"sha": "839b559fad654249b7d43c3677a5ab27d03e59a3", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018a4785065ba0b5164d5aae330613e42c5653ac/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018a4785065ba0b5164d5aae330613e42c5653ac/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=018a4785065ba0b5164d5aae330613e42c5653ac", "patch": "@@ -1,3 +1,18 @@\n+2004-09-24  Zack Weinberg  <zack@codesourcery.com>\n+\n+\t* configure.ac: Move AC_PROG_MAKE_SET, AC_PROG_INSTALL to\n+\tprograms cluster. Use ACX_PROG_CC_WARNING_OPTS,\n+\tACX_PROG_CC_WARNING_ALMOST_PEDANTIC, ACX_PROG_CC_WARNINGS_ARE_ERRORS.\n+\t* aclocal.m4, configure: Regenerate.\n+\t* init.c: Include localedir.h.\n+\t* Makefile.in (WARN_CFLAGS, ALL_CFLAGS): New variables.\n+\t(DEFS): Delete.\n+\t(.c.o): Use $(ALL_CFLAGS).\n+\t(localedir.h, localedir.hs): New rules.\n+\t(clean): Use rm -rf to remove directories.\n+\t(distclean): Also delete localedir.h and localedir.hs.\n+\t(init.o): Update dependencies.\n+\n 2004-09-22  Kelley Cook  <kcook@gcc.gnu.org>\n \n \t* Makefile.in (aclocal.m4): Update dependencies."}, {"sha": "9c89a25c15291bb750532a00ef1c469ce7fa5086", "filename": "libcpp/Makefile.in", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018a4785065ba0b5164d5aae330613e42c5653ac/libcpp%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018a4785065ba0b5164d5aae330613e42c5653ac/libcpp%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FMakefile.in?ref=018a4785065ba0b5164d5aae330613e42c5653ac", "patch": "@@ -34,6 +34,7 @@ AUTOHEADER = @AUTOHEADER@\n CATALOGS = @CATALOGS@\n CC = @CC@\n CFLAGS = @CFLAGS@\n+WARN_CFLAGS = @WARN_CFLAGS@ @WARN_PEDANTIC@ @WERROR@\n CPP = @CPP@\n CPPFLAGS = @CPPFLAGS@\n EXEEXT = @EXEEXT@\n@@ -59,10 +60,11 @@ prefix = @prefix@\n \n MSGMERGE = msgmerge\n mkinstalldirs = $(SHELL) $(srcdir)/../mkinstalldirs\n-DEFS = -DLOCALEDIR=\"\\\"$(localedir)\\\"\"\n INCLUDES = -I$(srcdir) -I. -I$(srcdir)/../include @INCINTL@ \\\n \t-I$(srcdir)/include\n \n+ALL_CFLAGS = $(CFLAGS) $(WARN_CFLAGS) $(INCLUDES) $(CPPFLAGS)\n+\n libcpp_a_OBJS = charset.o directives.o errors.o expr.o files.o \\\n \tidentifiers.o init.o lex.o line-map.o macro.o mkdeps.o \\\n \tpch.o symtab.o traditional.o\n@@ -116,7 +118,15 @@ stamp-h1: $(srcdir)/config.in config.status\n $(srcdir)/config.in: @MAINT@ $(srcdir)/configure\n \tcd $(srcdir) && $(AUTOHEADER)\n \t-rm -f stamp-h1\n-\t\n+\n+# It is not possible to get LOCALEDIR defined in config.h because\n+# the value it needs to be defined to is only determined in the\n+# Makefile.  Hence we do this instead.\n+localedir.h: localedir.hs; @true\n+localedir.hs: Makefile\n+\techo \"#define LOCALEDIR \\\"$(localedir)\\\"\" > localedir.new\n+\t$(srcdir)/../move-if-change localedir.new localedir.h\n+\techo timestamp > localedir.hs\n \n # Installation rules and other phony targets\n \n@@ -150,11 +160,12 @@ mostlyclean:\n \t-rm -f *.o\n \n clean: mostlyclean\n-\t-rm -f makedepend$(EXEEXT) libcpp.a $(srcdir)/autom4te.cache\n+\t-rm -rf makedepend$(EXEEXT) libcpp.a $(srcdir)/autom4te.cache\n \n distclean: clean\n \t-rm -f config.h stamp-h1 config.status config.cache config.log \\\n-\t  configure.lineno configure.status.lineno Makefile\n+\t  configure.lineno configure.status.lineno Makefile localedir.h \\\n+\t  localedir.hs\n \n maintainer-clean: distclean\n \t@echo \"This command is intended for maintainers to use\"\n@@ -178,7 +189,7 @@ update-po: $(CATALOGS:.gmo=.pox)\n # Implicit rules and I18N\n \n .c.o:\n-\t$(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) -c $<\n+\t$(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(ALL_CFLAGS) -c $<\n \n # N.B. We do not attempt to copy these into $(srcdir).\n .po.gmo:\n@@ -230,9 +241,8 @@ expr.o: $(srcdir)/expr.c $(COMMON_DEPS)\n \n files.o: $(srcdir)/files.c $(COMMON_DEPS) $(libcpp_incdir)/mkdeps.h \\\n    $(top_incdir)/hashtab.h $(top_incdir)/md5.h\n-  \n identifiers.o: $(srcdir)/identifiers.c $(COMMON_DEPS)\n-init.o: $(srcdir)/init.c $(COMMON_DEPS) $(libcpp_incdir)/mkdeps.h\n+init.o: $(srcdir)/init.c $(COMMON_DEPS) $(libcpp_incdir)/mkdeps.h localedir.h\n lex.o: $(srcdir)/lex.c $(COMMON_DEPS)\n line-map.o: $(srcdir)/line-map.c $(COMMON_DEPS)\n macro.o: $(srcdir)/macro.c $(COMMON_DEPS)"}, {"sha": "3640760e76a9510c2f1b0b899cf51b7a963c4d33", "filename": "libcpp/aclocal.m4", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018a4785065ba0b5164d5aae330613e42c5653ac/libcpp%2Faclocal.m4", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018a4785065ba0b5164d5aae330613e42c5653ac/libcpp%2Faclocal.m4", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Faclocal.m4?ref=018a4785065ba0b5164d5aae330613e42c5653ac", "patch": "@@ -18,3 +18,4 @@ m4_include([../config/iconv.m4])\n m4_include([../config/lib-ld.m4])\n m4_include([../config/lib-link.m4])\n m4_include([../config/lib-prefix.m4])\n+m4_include([../config/warnings.m4])"}, {"sha": "7a1bc914a5ed4d3754257f65915a0327ab8dc1db", "filename": "libcpp/configure", "status": "modified", "additions": 158, "deletions": 4, "changes": 162, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018a4785065ba0b5164d5aae330613e42c5653ac/libcpp%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018a4785065ba0b5164d5aae330613e42c5653ac/libcpp%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure?ref=018a4785065ba0b5164d5aae330613e42c5653ac", "patch": "@@ -311,7 +311,7 @@ ac_includes_default=\"\\\n # include <unistd.h>\n #endif\"\n \n-ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os SET_MAKE INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT RANLIB ac_ct_RANLIB ACLOCAL AUTOCONF AUTOHEADER CPP EGREP LIBOBJS ALLOCA USE_NLS LIBINTL LIBINTL_DEP INCINTL XGETTEXT GMSGFMT POSUB CATALOGS LIBICONV LTLIBICONV PACKAGE USED_CATALOGS MAINT LTLIBOBJS'\n+ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS build build_cpu build_vendor build_os host host_cpu host_vendor host_os target target_cpu target_vendor target_os SET_MAKE INSTALL_PROGRAM INSTALL_SCRIPT INSTALL_DATA CC CFLAGS LDFLAGS CPPFLAGS ac_ct_CC EXEEXT OBJEXT RANLIB ac_ct_RANLIB ACLOCAL AUTOCONF AUTOHEADER WARN_CFLAGS WARN_PEDANTIC WERROR CPP EGREP LIBOBJS ALLOCA USE_NLS LIBINTL LIBINTL_DEP INCINTL XGETTEXT GMSGFMT POSUB CATALOGS LIBICONV LTLIBICONV PACKAGE USED_CATALOGS MAINT LTLIBOBJS'\n ac_subst_files=''\n \n # Initialize some variables set by options.\n@@ -849,6 +849,7 @@ if test -n \"$ac_init_help\"; then\n Optional Features:\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n+  --enable-werror-always  enable -Werror despite compiler version\n   --disable-rpath         do not hardcode runtime library paths\n   --enable-maintainer-mode enable rules only needed by maintainers\n   --enable-checking      enable expensive run-time checks\n@@ -1437,6 +1438,8 @@ test -n \"$target_alias\" &&\n   test \"$program_prefix$program_suffix$program_transform_name\" = \\\n     NONENONEs,x,x, &&\n   program_prefix=${target_alias}-\n+\n+# Checks for programs.\n echo \"$as_me:$LINENO: checking whether ${MAKE-make} sets \\$(MAKE)\" >&5\n echo $ECHO_N \"checking whether ${MAKE-make} sets \\$(MAKE)... $ECHO_C\" >&6\n set dummy ${MAKE-make}; ac_make=`echo \"$2\" | sed 'y,:./+-,___p_,'`\n@@ -1545,8 +1548,6 @@ test -z \"$INSTALL_SCRIPT\" && INSTALL_SCRIPT='${INSTALL}'\n \n test -z \"$INSTALL_DATA\" && INSTALL_DATA='${INSTALL} -m 644'\n \n-\n-# Checks for programs.\n ac_ext=c\n ac_cpp='$CPP $CPPFLAGS'\n ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\n@@ -2683,8 +2684,158 @@ done\n test -n \"$AUTOHEADER\" || AUTOHEADER=\"$MISSING autoheader\"\n \n \n-# Checks for header files.\n+# Figure out what compiler warnings we can enable.\n+# See config/warnings.m4 for details.\n+\n+\n+WARN_CFLAGS=\n+save_CFLAGS=\"$CFLAGS\"\n+for option in -W -Wall -Wwrite-strings -Wstrict-prototypes \\\n+\t\t\t  -Wmissing-prototypes -Wold-style-definition; do\n+  as_acx_Woption=`echo \"acx_cv_prog_cc_warning_$option\" | $as_tr_sh`\n+\n+  echo \"$as_me:$LINENO: checking whether $CC supports $option\" >&5\n+echo $ECHO_N \"checking whether $CC supports $option... $ECHO_C\" >&6\n+if eval \"test \\\"\\${$as_acx_Woption+set}\\\" = set\"; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  CFLAGS=\"$option\"\n+    cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  eval \"$as_acx_Woption=yes\"\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+eval \"$as_acx_Woption=no\"\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+\n+fi\n+echo \"$as_me:$LINENO: result: `eval echo '${'$as_acx_Woption'}'`\" >&5\n+echo \"${ECHO_T}`eval echo '${'$as_acx_Woption'}'`\" >&6\n+  if test `eval echo '${'$as_acx_Woption'}'` = yes; then\n+  WARN_CFLAGS=\"$WARN_CFLAGS${WARN_CFLAGS:+ }$option\"\n+fi\n+\n+  done\n+CFLAGS=\"$save_CFLAGS\"\n \n+WARN_PEDANTIC=\n+echo \"$as_me:$LINENO: checking whether $CC supports -pedantic -Wno-long-long\" >&5\n+echo $ECHO_N \"checking whether $CC supports -pedantic -Wno-long-long... $ECHO_C\" >&6\n+if test \"${acx_cv_prog_cc_pedantic__Wno_long_long+set}\" = set; then\n+  echo $ECHO_N \"(cached) $ECHO_C\" >&6\n+else\n+  save_CFLAGS=\"$CFLAGS\"\n+CFLAGS=\"-pedantic -Wno-long-long\"\n+cat >conftest.$ac_ext <<_ACEOF\n+/* confdefs.h.  */\n+_ACEOF\n+cat confdefs.h >>conftest.$ac_ext\n+cat >>conftest.$ac_ext <<_ACEOF\n+/* end confdefs.h.  */\n+\n+int\n+main ()\n+{\n+\n+  ;\n+  return 0;\n+}\n+_ACEOF\n+rm -f conftest.$ac_objext\n+if { (eval echo \"$as_me:$LINENO: \\\"$ac_compile\\\"\") >&5\n+  (eval $ac_compile) 2>conftest.er1\n+  ac_status=$?\n+  grep -v '^ *+' conftest.er1 >conftest.err\n+  rm -f conftest.er1\n+  cat conftest.err >&5\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); } &&\n+\t { ac_try='test -z \"$ac_c_werror_flag\"\n+\t\t\t || test ! -s conftest.err'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; } &&\n+\t { ac_try='test -s conftest.$ac_objext'\n+  { (eval echo \"$as_me:$LINENO: \\\"$ac_try\\\"\") >&5\n+  (eval $ac_try) 2>&5\n+  ac_status=$?\n+  echo \"$as_me:$LINENO: \\$? = $ac_status\" >&5\n+  (exit $ac_status); }; }; then\n+  acx_cv_prog_cc_pedantic__Wno_long_long=yes\n+else\n+  echo \"$as_me: failed program was:\" >&5\n+sed 's/^/| /' conftest.$ac_ext >&5\n+\n+acx_cv_prog_cc_pedantic__Wno_long_long=no\n+fi\n+rm -f conftest.err conftest.$ac_objext conftest.$ac_ext\n+CFLAGS=\"$save_CFLAGS\"\n+fi\n+echo \"$as_me:$LINENO: result: $acx_cv_prog_cc_pedantic__Wno_long_long\" >&5\n+echo \"${ECHO_T}$acx_cv_prog_cc_pedantic__Wno_long_long\" >&6\n+if test $acx_cv_prog_cc_pedantic__Wno_long_long = yes; then\n+  WARN_PEDANTIC=\"-pedantic -Wno-long-long\"\n+fi\n+\n+\n+\n+# Only enable with --enable-werror-always until existing warnings are\n+# corrected.\n+WERROR=\n+# Check whether --enable-werror-always or --disable-werror-always was given.\n+if test \"${enable_werror_always+set}\" = set; then\n+  enableval=\"$enable_werror_always\"\n+\n+else\n+  enable_werror_always=no\n+fi;\n+if test $enable_werror_always = yes; then\n+  WERROR=-Werror\n+fi\n+\n+\n+\n+# Checks for header files.\n echo \"$as_me:$LINENO: checking whether time.h and sys/time.h may both be included\" >&5\n echo $ECHO_N \"checking whether time.h and sys/time.h may both be included... $ECHO_C\" >&6\n if test \"${ac_cv_header_time+set}\" = set; then\n@@ -7564,6 +7715,9 @@ s,@ac_ct_RANLIB@,$ac_ct_RANLIB,;t t\n s,@ACLOCAL@,$ACLOCAL,;t t\n s,@AUTOCONF@,$AUTOCONF,;t t\n s,@AUTOHEADER@,$AUTOHEADER,;t t\n+s,@WARN_CFLAGS@,$WARN_CFLAGS,;t t\n+s,@WARN_PEDANTIC@,$WARN_PEDANTIC,;t t\n+s,@WERROR@,$WERROR,;t t\n s,@CPP@,$CPP,;t t\n s,@EGREP@,$EGREP,;t t\n s,@LIBOBJS@,$LIBOBJS,;t t"}, {"sha": "0bcf1711b03a867d1a4513edefc24bad778551a2", "filename": "libcpp/configure.ac", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018a4785065ba0b5164d5aae330613e42c5653ac/libcpp%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018a4785065ba0b5164d5aae330613e42c5653ac/libcpp%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Fconfigure.ac?ref=018a4785065ba0b5164d5aae330613e42c5653ac", "patch": "@@ -6,10 +6,10 @@ AC_INIT(cpplib, [ ], gcc-bugs@gcc.gnu.org, cpplib)\n AC_CONFIG_SRCDIR(ucnid.h)\n AC_CONFIG_MACRO_DIR(../config)\n AC_CANONICAL_SYSTEM\n-AC_PROG_MAKE_SET\n-AC_PROG_INSTALL\n \n # Checks for programs.\n+AC_PROG_MAKE_SET\n+AC_PROG_INSTALL\n AC_PROG_CC\n AC_PROG_RANLIB\n \n@@ -18,6 +18,17 @@ AC_CHECK_PROGS([ACLOCAL], [aclocal], [$MISSING aclocal])\n AC_CHECK_PROGS([AUTOCONF], [autoconf], [$MISSING autoconf])\n AC_CHECK_PROGS([AUTOHEADER], [autoheader], [$MISSING autoheader])\n \n+# Figure out what compiler warnings we can enable.\n+# See config/warnings.m4 for details.\n+\n+ACX_PROG_CC_WARNING_OPTS([-W -Wall -Wwrite-strings -Wstrict-prototypes \\\n+\t\t\t  -Wmissing-prototypes -Wold-style-definition])\n+ACX_PROG_CC_WARNING_ALMOST_PEDANTIC([-Wno-long-long])\n+\n+# Only enable with --enable-werror-always until existing warnings are\n+# corrected.\n+ACX_PROG_CC_WARNINGS_ARE_ERRORS([manual])\n+\n # Checks for header files.\n AC_HEADER_TIME\n ACX_HEADER_STRING"}, {"sha": "b2be19a7136f1c58976e341af4f7916b7e213c30", "filename": "libcpp/init.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/018a4785065ba0b5164d5aae330613e42c5653ac/libcpp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/018a4785065ba0b5164d5aae330613e42c5653ac/libcpp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finit.c?ref=018a4785065ba0b5164d5aae330613e42c5653ac", "patch": "@@ -24,6 +24,7 @@ Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.  */\n #include \"cpplib.h\"\n #include \"internal.h\"\n #include \"mkdeps.h\"\n+#include \"localedir.h\"\n \n static void init_library (void);\n static void mark_named_operators (cpp_reader *);"}]}