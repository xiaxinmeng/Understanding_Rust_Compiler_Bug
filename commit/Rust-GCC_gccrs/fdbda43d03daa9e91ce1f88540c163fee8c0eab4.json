{"sha": "fdbda43d03daa9e91ce1f88540c163fee8c0eab4", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZmRiZGE0M2QwM2RhYTllOTFjZTFmODg1NDBjMTYzZmVlOGMwZWFiNA==", "commit": {"author": {"name": "Chris Manghane", "email": "cmang@google.com", "date": "2016-09-23T17:55:53Z"}, "committer": {"name": "Ian Lance Taylor", "email": "ian@gcc.gnu.org", "date": "2016-09-23T17:55:53Z"}, "message": "re PR go/77701 (suspicious code in go/go-gcc.cc)\n\n\tPR go/77701\n\t* go-gcc.cc (Gcc_backend::Gcc_backend): Fix calls to integer_type\n\tto pass arguments in the correct order.\n\nFrom-SVN: r240451", "tree": {"sha": "78d05adfb0bfdec749bff8c96f435ba61e130657", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/78d05adfb0bfdec749bff8c96f435ba61e130657"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/fdbda43d03daa9e91ce1f88540c163fee8c0eab4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdbda43d03daa9e91ce1f88540c163fee8c0eab4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdbda43d03daa9e91ce1f88540c163fee8c0eab4", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdbda43d03daa9e91ce1f88540c163fee8c0eab4/comments", "author": null, "committer": null, "parents": [{"sha": "e0535922dc32f753491e2f257e275006df251f49", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0535922dc32f753491e2f257e275006df251f49", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0535922dc32f753491e2f257e275006df251f49"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "25e52745bf77ddb871725e22aecefe426574b44a", "filename": "gcc/go/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdbda43d03daa9e91ce1f88540c163fee8c0eab4/gcc%2Fgo%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdbda43d03daa9e91ce1f88540c163fee8c0eab4/gcc%2Fgo%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2FChangeLog?ref=fdbda43d03daa9e91ce1f88540c163fee8c0eab4", "patch": "@@ -1,3 +1,9 @@\n+2016-09-23  Chris Manghane  <cmang@google.com>\n+\n+\tPR go/77701\n+\t* go-gcc.cc (Gcc_backend::Gcc_backend): Fix calls to integer_type\n+\tto pass arguments in the correct order.\n+\n 2016-09-22  Ian Lance Taylor  <iant@golang.org>\n \n \t* go-gcc.cc (Gcc_backend::Gcc_backend): Declare"}, {"sha": "57c2bee7a5890e8f625af7fbde99805f3b6b8b3c", "filename": "gcc/go/go-gcc.cc", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/fdbda43d03daa9e91ce1f88540c163fee8c0eab4/gcc%2Fgo%2Fgo-gcc.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/fdbda43d03daa9e91ce1f88540c163fee8c0eab4/gcc%2Fgo%2Fgo-gcc.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgo%2Fgo-gcc.cc?ref=fdbda43d03daa9e91ce1f88540c163fee8c0eab4", "patch": "@@ -651,25 +651,25 @@ Gcc_backend::Gcc_backend()\n {\n   /* We need to define the fetch_and_add functions, since we use them\n      for ++ and --.  */\n-  tree t = this->integer_type(BITS_PER_UNIT, 1)->get_tree();\n+  tree t = this->integer_type(true, BITS_PER_UNIT)->get_tree();\n   tree p = build_pointer_type(build_qualified_type(t, TYPE_QUAL_VOLATILE));\n   this->define_builtin(BUILT_IN_SYNC_ADD_AND_FETCH_1, \"__sync_fetch_and_add_1\",\n \t\t       NULL, build_function_type_list(t, p, t, NULL_TREE),\n \t\t       false, false);\n \n-  t = this->integer_type(BITS_PER_UNIT * 2, 1)->get_tree();\n+  t = this->integer_type(true, BITS_PER_UNIT * 2)->get_tree();\n   p = build_pointer_type(build_qualified_type(t, TYPE_QUAL_VOLATILE));\n   this->define_builtin(BUILT_IN_SYNC_ADD_AND_FETCH_2, \"__sync_fetch_and_add_2\",\n \t\t       NULL, build_function_type_list(t, p, t, NULL_TREE),\n \t\t       false, false);\n \n-  t = this->integer_type(BITS_PER_UNIT * 4, 1)->get_tree();\n+  t = this->integer_type(true, BITS_PER_UNIT * 4)->get_tree();\n   p = build_pointer_type(build_qualified_type(t, TYPE_QUAL_VOLATILE));\n   this->define_builtin(BUILT_IN_SYNC_ADD_AND_FETCH_4, \"__sync_fetch_and_add_4\",\n \t\t       NULL, build_function_type_list(t, p, t, NULL_TREE),\n \t\t       false, false);\n \n-  t = this->integer_type(BITS_PER_UNIT * 8, 1)->get_tree();\n+  t = this->integer_type(true, BITS_PER_UNIT * 8)->get_tree();\n   p = build_pointer_type(build_qualified_type(t, TYPE_QUAL_VOLATILE));\n   this->define_builtin(BUILT_IN_SYNC_ADD_AND_FETCH_8, \"__sync_fetch_and_add_8\",\n \t\t       NULL, build_function_type_list(t, p, t, NULL_TREE),"}]}