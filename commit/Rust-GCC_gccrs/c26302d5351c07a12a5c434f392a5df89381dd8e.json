{"sha": "c26302d5351c07a12a5c434f392a5df89381dd8e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzI2MzAyZDUzNTFjMDdhMTJhNWM0MzRmMzkyYTVkZjg5MzgxZGQ4ZQ==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2013-07-10T16:49:24Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2013-07-10T16:49:24Z"}, "message": "c-ppoutput.c (scan_translation_unit): Call account_for_newlines for all CPP_TOKEN_FLD_STR tokens, not just CPP_COMMENT.\n\n\t* c-ppoutput.c (scan_translation_unit): Call account_for_newlines\n\tfor all CPP_TOKEN_FLD_STR tokens, not just CPP_COMMENT.\n\n\t* include/cpplib.h (cpp_token_val_index): Change parameter type to\n\tconst cpp_token *.\n\t* lex.c (cpp_token_val_index): Likewise.\n\n\t* c-c++-common/raw-string-18.c: New test.\n\t* c-c++-common/raw-string-19.c: New test.\n\nFrom-SVN: r200878", "tree": {"sha": "fb33b01daeb32c3b1c99c9c4f1501ea19669801f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fb33b01daeb32c3b1c99c9c4f1501ea19669801f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c26302d5351c07a12a5c434f392a5df89381dd8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c26302d5351c07a12a5c434f392a5df89381dd8e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c26302d5351c07a12a5c434f392a5df89381dd8e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c26302d5351c07a12a5c434f392a5df89381dd8e/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "dfeadaa00be8251addff242849f6165ea9ee480c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dfeadaa00be8251addff242849f6165ea9ee480c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dfeadaa00be8251addff242849f6165ea9ee480c"}], "stats": {"total": 65, "additions": 62, "deletions": 3}, "files": [{"sha": "1211fcc6727bcadc9313c99566daa23d90571afa", "filename": "gcc/c-family/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c26302d5351c07a12a5c434f392a5df89381dd8e/gcc%2Fc-family%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c26302d5351c07a12a5c434f392a5df89381dd8e/gcc%2Fc-family%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2FChangeLog?ref=c26302d5351c07a12a5c434f392a5df89381dd8e", "patch": "@@ -1,3 +1,8 @@\n+2013-07-10  Jakub Jelinek  <jakub@redhat.com>\n+\n+\t* c-ppoutput.c (scan_translation_unit): Call account_for_newlines\n+\tfor all CPP_TOKEN_FLD_STR tokens, not just CPP_COMMENT.\n+\n 2013-07-10  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/57869"}, {"sha": "03b881705209bec90035155e8a9e38b2730759e9", "filename": "gcc/c-family/c-ppoutput.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c26302d5351c07a12a5c434f392a5df89381dd8e/gcc%2Fc-family%2Fc-ppoutput.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c26302d5351c07a12a5c434f392a5df89381dd8e/gcc%2Fc-family%2Fc-ppoutput.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-family%2Fc-ppoutput.c?ref=c26302d5351c07a12a5c434f392a5df89381dd8e", "patch": "@@ -251,7 +251,11 @@ scan_translation_unit (cpp_reader *pfile)\n \t  cpp_output_token (token, print.outf);\n \t}\n \n-      if (token->type == CPP_COMMENT)\n+      /* CPP_COMMENT tokens and raw-string literal tokens can\n+\t have embedded new-line characters.  Rather than enumerating\n+\t all the possible token types just check if token uses\n+\t val.str union member.  */\n+      if (cpp_token_val_index (token) == CPP_TOKEN_FLD_STR)\n \taccount_for_newlines (token->val.str.text, token->val.str.len);\n     }\n }"}, {"sha": "c32ac8452b2d6fd9277a55beb2adf81e2fe552a6", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c26302d5351c07a12a5c434f392a5df89381dd8e/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c26302d5351c07a12a5c434f392a5df89381dd8e/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=c26302d5351c07a12a5c434f392a5df89381dd8e", "patch": "@@ -8,6 +8,9 @@\n \n 2013-07-10  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* c-c++-common/raw-string-18.c: New test.\n+\t* c-c++-common/raw-string-19.c: New test.\n+\n \tPR preprocessor/57757\n \t* g++.dg/cpp/paste1.C: New test.\n \t* g++.dg/cpp/paste2.C: New test."}, {"sha": "8d4381d13102dce9bff3ada4cca8ceaf091edcc1", "filename": "gcc/testsuite/c-c++-common/raw-string-18.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c26302d5351c07a12a5c434f392a5df89381dd8e/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fraw-string-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c26302d5351c07a12a5c434f392a5df89381dd8e/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fraw-string-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fraw-string-18.c?ref=c26302d5351c07a12a5c434f392a5df89381dd8e", "patch": "@@ -0,0 +1,21 @@\n+/* PR preprocessor/57824 */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99 -fdump-tree-optimized-lineno\" { target c } } */\n+/* { dg-options \"-std=c++11 -fdump-tree-optimized-lineno\" { target c++ } } */\n+\n+const char x[] = R\"(\n+abc\n+def\n+ghi\n+)\";\n+\n+int\n+main ()\n+{\n+  extern void foo (); foo ();\n+  return 0;\n+}\n+\n+/* Verify call to foo is on line 15.  */\n+/* { dg-final { scan-tree-dump \": 15\\[]:]\\[^\\n\\r]*foo\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */"}, {"sha": "08121a89f843e183ef56bcbd7cfdc5a90b8454e7", "filename": "gcc/testsuite/c-c++-common/raw-string-19.c", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c26302d5351c07a12a5c434f392a5df89381dd8e/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fraw-string-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c26302d5351c07a12a5c434f392a5df89381dd8e/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fraw-string-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fc-c%2B%2B-common%2Fraw-string-19.c?ref=c26302d5351c07a12a5c434f392a5df89381dd8e", "patch": "@@ -0,0 +1,22 @@\n+/* PR preprocessor/57824 */\n+/* { dg-do compile } */\n+/* { dg-options \"-std=gnu99 -fdump-tree-optimized-lineno -save-temps\" { target c } } */\n+/* { dg-options \"-std=c++11 -fdump-tree-optimized-lineno -save-temps\" { target c++ } } */\n+\n+const char x[] = R\"(\n+abc\n+def\n+ghi\n+)\";\n+\n+int\n+main ()\n+{\n+  extern void foo (); foo ();\n+  return 0;\n+}\n+\n+/* Verify call to foo is on line 15.  */\n+/* { dg-final { scan-tree-dump \": 15\\[]:]\\[^\\n\\r]*foo\" \"optimized\" } } */\n+/* { dg-final { cleanup-tree-dump \"optimized\" } } */\n+/* { dg-final { cleanup-saved-temps } } */"}, {"sha": "195d728440ccedcb25040de09e2e9d070442eaae", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c26302d5351c07a12a5c434f392a5df89381dd8e/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c26302d5351c07a12a5c434f392a5df89381dd8e/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=c26302d5351c07a12a5c434f392a5df89381dd8e", "patch": "@@ -1,5 +1,9 @@\n 2013-07-10  Jakub Jelinek  <jakub@redhat.com>\n \n+\t* include/cpplib.h (cpp_token_val_index): Change parameter type to\n+\tconst cpp_token *.\n+\t* lex.c (cpp_token_val_index): Likewise.\n+\n \tPR preprocessor/57757\n \t* lex.c (cpp_avoid_paste): Avoid pasting CPP_{,W,UTF8}STRING\n \tor CPP_STRING{16,32} with CPP_NAME or SPELL_LITERAL token that"}, {"sha": "6c4225c8be7d4b42fa969d64ebebbbd3cb4487a0", "filename": "libcpp/include/cpplib.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c26302d5351c07a12a5c434f392a5df89381dd8e/libcpp%2Finclude%2Fcpplib.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c26302d5351c07a12a5c434f392a5df89381dd8e/libcpp%2Finclude%2Fcpplib.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Finclude%2Fcpplib.h?ref=c26302d5351c07a12a5c434f392a5df89381dd8e", "patch": "@@ -248,7 +248,7 @@ struct GTY(()) cpp_token {\n };\n \n /* Say which field is in use.  */\n-extern enum cpp_token_fld_kind cpp_token_val_index (cpp_token *tok);\n+extern enum cpp_token_fld_kind cpp_token_val_index (const cpp_token *tok);\n \n /* A type wide enough to hold any multibyte source character.\n    cpplib's character constant interpreter requires an unsigned type."}, {"sha": "84e2af695d12a9ee537e3bea6a19f3b07c82e696", "filename": "libcpp/lex.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c26302d5351c07a12a5c434f392a5df89381dd8e/libcpp%2Flex.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c26302d5351c07a12a5c434f392a5df89381dd8e/libcpp%2Flex.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2Flex.c?ref=c26302d5351c07a12a5c434f392a5df89381dd8e", "patch": "@@ -3029,7 +3029,7 @@ _cpp_aligned_alloc (cpp_reader *pfile, size_t len)\n /* Say which field of TOK is in use.  */\n \n enum cpp_token_fld_kind\n-cpp_token_val_index (cpp_token *tok)\n+cpp_token_val_index (const cpp_token *tok)\n {\n   switch (TOKEN_SPELL (tok))\n     {"}]}