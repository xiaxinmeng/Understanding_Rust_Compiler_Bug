{"sha": "cfcbb5c7417d35b01be76d12078dac06c5aa2494", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2ZjYmI1Yzc0MTdkMzViMDFiZTc2ZDEyMDc4ZGFjMDZjNWFhMjQ5NA==", "commit": {"author": {"name": "Arnaud Charlet", "email": "charlet@adacore.com", "date": "2021-01-21T09:28:16Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2021-05-06T07:51:40Z"}, "message": "[Ada] AI12-0411: Add \"bool\" to Interfaces.C\n\ngcc/ada/\n\n\t* libgnat/i-c.ads (bool): New type.\n\t* libgnat/i-cexten.ads, libgnat/i-cexten__128.ads (bool): Now\n\ta subtype of Interfaces.C.bool.\n\t* libgnarl/s-interr__vxworks.adb (Interrupt_Manager): Qualify\n\tFalse.\n\t* libgnarl/s-interr.adb, libgnarl/s-interr__hwint.adb,\n\tlibgnarl/s-tasini.adb, libgnarl/s-tasren.adb,\n\tlibgnarl/s-tassta.adb, libgnarl/s-tpobmu.adb,\n\tlibgnarl/s-tpobop.adb, libgnarl/s-tpopmo.adb: Replace\n\tAssert (False) by Assert (Standard.False).", "tree": {"sha": "7275827cb5d1ec81e35c481c0ea85a2fc76cf2ea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7275827cb5d1ec81e35c481c0ea85a2fc76cf2ea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/cfcbb5c7417d35b01be76d12078dac06c5aa2494", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfcbb5c7417d35b01be76d12078dac06c5aa2494", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfcbb5c7417d35b01be76d12078dac06c5aa2494", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfcbb5c7417d35b01be76d12078dac06c5aa2494/comments", "author": {"login": "ArnaudCharlet", "id": 30291825, "node_id": "MDQ6VXNlcjMwMjkxODI1", "avatar_url": "https://avatars.githubusercontent.com/u/30291825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ArnaudCharlet", "html_url": "https://github.com/ArnaudCharlet", "followers_url": "https://api.github.com/users/ArnaudCharlet/followers", "following_url": "https://api.github.com/users/ArnaudCharlet/following{/other_user}", "gists_url": "https://api.github.com/users/ArnaudCharlet/gists{/gist_id}", "starred_url": "https://api.github.com/users/ArnaudCharlet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ArnaudCharlet/subscriptions", "organizations_url": "https://api.github.com/users/ArnaudCharlet/orgs", "repos_url": "https://api.github.com/users/ArnaudCharlet/repos", "events_url": "https://api.github.com/users/ArnaudCharlet/events{/privacy}", "received_events_url": "https://api.github.com/users/ArnaudCharlet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "364ffbe34869595a975bc2e812ded6cbdd325ff7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/364ffbe34869595a975bc2e812ded6cbdd325ff7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/364ffbe34869595a975bc2e812ded6cbdd325ff7"}], "stats": {"total": 45, "additions": 24, "deletions": 21}, "files": [{"sha": "7d36b9f224e35844609a301d5205419bf5d289c7", "filename": "gcc/ada/libgnarl/s-interr.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnarl%2Fs-interr.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnarl%2Fs-interr.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-interr.adb?ref=cfcbb5c7417d35b01be76d12078dac06c5aa2494", "patch": "@@ -783,7 +783,7 @@ package body System.Interrupts is\n                   null;\n \n                when others =>\n-                  pragma Assert (False);\n+                  pragma Assert (Standard.False);\n                   null;\n             end case;\n \n@@ -1228,7 +1228,7 @@ package body System.Interrupts is\n             when X : others =>\n                System.IO.Put_Line (\"Exception in Interrupt_Manager\");\n                System.IO.Put_Line (Ada.Exceptions.Exception_Information (X));\n-               pragma Assert (False);\n+               pragma Assert (Standard.False);\n          end;\n       end loop;\n    end Interrupt_Manager;"}, {"sha": "be6b55908c83c046c845f2ed8281b7e77617f1c6", "filename": "gcc/ada/libgnarl/s-interr__hwint.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnarl%2Fs-interr__hwint.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnarl%2Fs-interr__hwint.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-interr__hwint.adb?ref=cfcbb5c7417d35b01be76d12078dac06c5aa2494", "patch": "@@ -1023,7 +1023,7 @@ package body System.Interrupts is\n                null;\n \n             when others =>\n-               pragma Assert (False);\n+               pragma Assert (Standard.False);\n                null;\n          end;\n       end loop;"}, {"sha": "d496b74ce006345260e7e7e1bc1aa1370339347e", "filename": "gcc/ada/libgnarl/s-interr__vxworks.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnarl%2Fs-interr__vxworks.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnarl%2Fs-interr__vxworks.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-interr__vxworks.adb?ref=cfcbb5c7417d35b01be76d12078dac06c5aa2494", "patch": "@@ -1040,7 +1040,7 @@ package body System.Interrupts is\n                null;\n \n             when others =>\n-               pragma Assert (False);\n+               pragma Assert (Standard.False);\n                null;\n          end;\n       end loop;"}, {"sha": "9acfa4927d6be75caf2a49e895ce938c2fee6f46", "filename": "gcc/ada/libgnarl/s-tasini.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnarl%2Fs-tasini.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnarl%2Fs-tasini.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tasini.adb?ref=cfcbb5c7417d35b01be76d12078dac06c5aa2494", "patch": "@@ -420,7 +420,7 @@ package body System.Tasking.Initialization is\n             when Terminated\n                | Unactivated\n             =>\n-               pragma Assert (False);\n+               pragma Assert (Standard.False);\n                null;\n \n             when Activating\n@@ -535,7 +535,7 @@ package body System.Tasking.Initialization is\n          C := C.Common.All_Tasks_Link;\n       end loop;\n \n-      pragma Assert (False);\n+      pragma Assert (Standard.False);\n    end Remove_From_All_Tasks_List;\n \n    ---------------"}, {"sha": "9498ca0db5c9092d6d003e5bd01ae5643d16bad1", "filename": "gcc/ada/libgnarl/s-tasren.adb", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnarl%2Fs-tasren.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnarl%2Fs-tasren.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tasren.adb?ref=cfcbb5c7417d35b01be76d12078dac06c5aa2494", "patch": "@@ -165,7 +165,7 @@ package body System.Tasking.Rendezvous is\n \n          --  Should never get here ???\n \n-         pragma Assert (False);\n+         pragma Assert (Standard.False);\n          raise Standard'Abort_Signal;\n       end if;\n \n@@ -236,7 +236,7 @@ package body System.Tasking.Rendezvous is\n \n          --  Should never get here ???\n \n-         pragma Assert (False);\n+         pragma Assert (Standard.False);\n          raise Standard'Abort_Signal;\n       end if;\n \n@@ -646,7 +646,7 @@ package body System.Tasking.Rendezvous is\n \n          --  Should never get here ???\n \n-         pragma Assert (False);\n+         pragma Assert (Standard.False);\n          raise Standard'Abort_Signal;\n       end if;\n \n@@ -1251,7 +1251,7 @@ package body System.Tasking.Rendezvous is\n \n          --  Should never get here ???\n \n-         pragma Assert (False);\n+         pragma Assert (Standard.False);\n          raise Standard'Abort_Signal;\n       end if;\n \n@@ -1400,7 +1400,7 @@ package body System.Tasking.Rendezvous is\n \n             --  Should never get here\n \n-            pragma Assert (False);\n+            pragma Assert (Standard.False);\n             null;\n       end case;\n "}, {"sha": "f18c76f59e2b26cdd04c2fc8922a90373b51f892", "filename": "gcc/ada/libgnarl/s-tassta.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnarl%2Fs-tassta.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnarl%2Fs-tassta.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tassta.adb?ref=cfcbb5c7417d35b01be76d12078dac06c5aa2494", "patch": "@@ -578,7 +578,7 @@ package body System.Tasking.Stages is\n \n          --  ??? Should never get here\n \n-         pragma Assert (False);\n+         pragma Assert (Standard.False);\n          raise Standard'Abort_Signal;\n       end if;\n "}, {"sha": "2c60dba564485614179e0785359ff6e27fc75f6f", "filename": "gcc/ada/libgnarl/s-tpobmu.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnarl%2Fs-tpobmu.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnarl%2Fs-tpobmu.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tpobmu.adb?ref=cfcbb5c7417d35b01be76d12078dac06c5aa2494", "patch": "@@ -38,7 +38,7 @@ package body System.Tasking.Protected_Objects.Multiprocessors is\n    procedure Served (Entry_Call : Entry_Call_Link) is\n       pragma Unreferenced (Entry_Call);\n    begin\n-      pragma Assert (False, \"Invalid operation\");\n+      pragma Assert (Standard.False, \"Invalid operation\");\n    end Served;\n \n    -------------------------\n@@ -47,7 +47,7 @@ package body System.Tasking.Protected_Objects.Multiprocessors is\n \n    procedure Wakeup_Served_Entry is\n    begin\n-      pragma Assert (False, \"Invalid operation\");\n+      pragma Assert (Standard.False, \"Invalid operation\");\n    end Wakeup_Served_Entry;\n \n end System.Tasking.Protected_Objects.Multiprocessors;"}, {"sha": "5739eaa030b8967853762d657a53fe35dc312e4f", "filename": "gcc/ada/libgnarl/s-tpobop.adb", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnarl%2Fs-tpobop.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnarl%2Fs-tpobop.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tpobop.adb?ref=cfcbb5c7417d35b01be76d12078dac06c5aa2494", "patch": "@@ -601,7 +601,7 @@ package body System.Tasking.Protected_Objects.Operations is\n             when Asynchronous_Call\n                | Timed_Call\n             =>\n-               pragma Assert (False);\n+               pragma Assert (Standard.False);\n                null;\n          end case;\n       end if;"}, {"sha": "393c2a68b475d06728ee741cd3336a0bb135960a", "filename": "gcc/ada/libgnarl/s-tpopmo.adb", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnarl%2Fs-tpopmo.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnarl%2Fs-tpopmo.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnarl%2Fs-tpopmo.adb?ref=cfcbb5c7417d35b01be76d12078dac06c5aa2494", "patch": "@@ -208,7 +208,7 @@ package body Monotonic is\n                      exit Inner;\n \n                   when others =>\n-                     pragma Assert (False);\n+                     pragma Assert (Standard.False);\n \n                end case;\n \n@@ -292,7 +292,7 @@ package body Monotonic is\n                   when 0 | EINTR => null;\n \n                   when others =>\n-                     pragma Assert (False);\n+                     pragma Assert (Standard.False);\n \n                end case;\n "}, {"sha": "5c36245c8f4e413adb1d67c59f80db4c21aadad9", "filename": "gcc/ada/libgnat/i-c.ads", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnat%2Fi-c.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnat%2Fi-c.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fi-c.ads?ref=cfcbb5c7417d35b01be76d12078dac06c5aa2494", "patch": "@@ -61,6 +61,11 @@ package Interfaces.C is\n \n    type size_t is mod 2 ** System.Parameters.ptr_bits;\n \n+   --  Boolean type\n+\n+   type bool is new Boolean;\n+   pragma Convention (C, bool);\n+\n    --  Floating-Point\n \n    type C_float     is new Float;"}, {"sha": "42eb578a38ed933f799eae0693d70d3b864e7994", "filename": "gcc/ada/libgnat/i-cexten.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnat%2Fi-cexten.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnat%2Fi-cexten.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fi-cexten.ads?ref=cfcbb5c7417d35b01be76d12078dac06c5aa2494", "patch": "@@ -56,8 +56,7 @@ package Interfaces.C.Extensions is\n \n    --  C bool\n \n-   type bool is new Boolean;\n-   pragma Convention (C, bool);\n+   subtype bool is Interfaces.C.bool;\n \n    --  64-bit integer types\n "}, {"sha": "70727b71c675a8182e098741511114ded16d5341", "filename": "gcc/ada/libgnat/i-cexten__128.ads", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnat%2Fi-cexten__128.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/cfcbb5c7417d35b01be76d12078dac06c5aa2494/gcc%2Fada%2Flibgnat%2Fi-cexten__128.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fi-cexten__128.ads?ref=cfcbb5c7417d35b01be76d12078dac06c5aa2494", "patch": "@@ -56,8 +56,7 @@ package Interfaces.C.Extensions is\n \n    --  C bool\n \n-   type bool is new Boolean;\n-   pragma Convention (C, bool);\n+   subtype bool is Interfaces.C.bool;\n \n    --  64-bit integer types\n "}]}