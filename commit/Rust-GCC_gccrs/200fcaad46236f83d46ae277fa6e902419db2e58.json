{"sha": "200fcaad46236f83d46ae277fa6e902419db2e58", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjAwZmNhYWQ0NjIzNmY4M2Q0NmFlMjc3ZmE2ZTkwMjQxOWRiMmU1OA==", "commit": {"author": {"name": "Thomas Young", "email": "wenzhang5800@gmail.com", "date": "2021-07-11T02:25:18Z"}, "committer": {"name": "Thomas Young", "email": "wenzhang5800@gmail.com", "date": "2021-07-11T06:21:05Z"}, "message": "add some comments about FindEntryPoints and MarkLive in dead code scan pass", "tree": {"sha": "0ba44f96515f1e8e181d2596c830da49fcab87b9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0ba44f96515f1e8e181d2596c830da49fcab87b9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/200fcaad46236f83d46ae277fa6e902419db2e58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/200fcaad46236f83d46ae277fa6e902419db2e58", "html_url": "https://github.com/Rust-GCC/gccrs/commit/200fcaad46236f83d46ae277fa6e902419db2e58", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/200fcaad46236f83d46ae277fa6e902419db2e58/comments", "author": {"login": "thomasyonug", "id": 17464490, "node_id": "MDQ6VXNlcjE3NDY0NDkw", "avatar_url": "https://avatars.githubusercontent.com/u/17464490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasyonug", "html_url": "https://github.com/thomasyonug", "followers_url": "https://api.github.com/users/thomasyonug/followers", "following_url": "https://api.github.com/users/thomasyonug/following{/other_user}", "gists_url": "https://api.github.com/users/thomasyonug/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasyonug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasyonug/subscriptions", "organizations_url": "https://api.github.com/users/thomasyonug/orgs", "repos_url": "https://api.github.com/users/thomasyonug/repos", "events_url": "https://api.github.com/users/thomasyonug/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasyonug/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomasyonug", "id": 17464490, "node_id": "MDQ6VXNlcjE3NDY0NDkw", "avatar_url": "https://avatars.githubusercontent.com/u/17464490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomasyonug", "html_url": "https://github.com/thomasyonug", "followers_url": "https://api.github.com/users/thomasyonug/followers", "following_url": "https://api.github.com/users/thomasyonug/following{/other_user}", "gists_url": "https://api.github.com/users/thomasyonug/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomasyonug/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomasyonug/subscriptions", "organizations_url": "https://api.github.com/users/thomasyonug/orgs", "repos_url": "https://api.github.com/users/thomasyonug/repos", "events_url": "https://api.github.com/users/thomasyonug/events{/privacy}", "received_events_url": "https://api.github.com/users/thomasyonug/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4560f469ee33536cec6af0f8e5816ff97de60de0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4560f469ee33536cec6af0f8e5816ff97de60de0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4560f469ee33536cec6af0f8e5816ff97de60de0"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "d436f1a2b138534626fe6f30d93e62ecf215fa35", "filename": "gcc/rust/lint/rust-lint-marklive.cc", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/200fcaad46236f83d46ae277fa6e902419db2e58/gcc%2Frust%2Flint%2Frust-lint-marklive.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/200fcaad46236f83d46ae277fa6e902419db2e58/gcc%2Frust%2Flint%2Frust-lint-marklive.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frust%2Flint%2Frust-lint-marklive.cc?ref=200fcaad46236f83d46ae277fa6e902419db2e58", "patch": "@@ -16,13 +16,23 @@\n // along with GCC; see the file COPYING3.  If not see\n // <http://www.gnu.org/licenses/>.\n \n+// The idea is that all reachable symbols are live, codes called\n+// from live codes are live, and everything else is dead.\n+\n #include \"rust-lint-marklive.h\"\n #include \"rust-hir-full.h\"\n #include \"rust-name-resolver.h\"\n \n namespace Rust {\n namespace Analysis {\n \n+// This class trys to find the live symbols which can be used as\n+// seeds in MarkLive\n+//\n+// 1. TODO: explicit live\n+//    - Attribute like #[allow(dead_code)]\n+//    - Attribute like #[lang=\"..\"], it's not a intra-crate item.\n+// 2. TODO: foreign item\n class FindEntryPoint : public MarkLiveBase\n {\n   using Rust::Analysis::MarkLiveBase::visit;\n@@ -62,6 +72,11 @@ MarkLive::Analysis (HIR::Crate &crate)\n   return marklive.liveSymbols;\n }\n \n+// pop a live symbol from worklist every iteration,\n+// if it's a function then walk the function body, and\n+// 1. save all the live symbols in worklist which is\n+//    visited first time\n+// 2. save all the live symbols in liveSymbols\n void\n MarkLive::go (HIR::Crate &crate)\n {"}]}