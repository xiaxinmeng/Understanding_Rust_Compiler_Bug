{"sha": "5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWJjMjc3MDI2YmE4NTQ2ZWYzZjI3OWQ1ZTZmM2RkODg3OWMxYjBmNQ==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm28@cam.ac.uk", "date": "2001-12-20T23:35:42Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2001-12-20T23:35:42Z"}, "message": "configure.in (all_headers, [...]): Remove.\n\n\t* configure.in (all_headers, all_lib2funcs): Remove.\n\t* configure: Regenerate.\n\t* Makefile.in (LANG_EXTRA_HEADERS): Remove.\n\t(USER_H): Don't include $(LANG_EXTRA_HEADERS).\n\t* config/alpha/t-interix (USER_H): Don't include\n\t$(LANG_EXTRA_HEADERS).\n\t* config/i386/t-interix: Likewise.\n\t* config/t-openbsd: Likewise.\n\nFrom-SVN: r48222", "tree": {"sha": "d1d2d0dcf1bf75ae553ff08b24487c69eee7c478", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d1d2d0dcf1bf75ae553ff08b24487c69eee7c478"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7899e8b9f5e3306eeaeec3d9a911719d83eb9c0e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7899e8b9f5e3306eeaeec3d9a911719d83eb9c0e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7899e8b9f5e3306eeaeec3d9a911719d83eb9c0e"}], "stats": {"total": 42, "additions": 16, "deletions": 26}, "files": [{"sha": "faecc94756019fc66a23d6a53d41167f9785c032", "filename": "gcc/ChangeLog", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5", "patch": "@@ -1,3 +1,14 @@\n+2001-12-20  Joseph S. Myers  <jsm28@cam.ac.uk>\n+\n+\t* configure.in (all_headers, all_lib2funcs): Remove.\n+\t* configure: Regenerate.\n+\t* Makefile.in (LANG_EXTRA_HEADERS): Remove.\n+\t(USER_H): Don't include $(LANG_EXTRA_HEADERS).\n+\t* config/alpha/t-interix (USER_H): Don't include\n+\t$(LANG_EXTRA_HEADERS).\n+\t* config/i386/t-interix: Likewise.\n+\t* config/t-openbsd: Likewise.\n+\n 2001-12-20  Andreas Jaeger  <aj@suse.de>\n \n \t* libgcc2.c (__bb_exit_func): Remove unused variable."}, {"sha": "04bcf4e018dc29cdd4411dadd3cd12d35755fa7c", "filename": "gcc/Makefile.in", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5/gcc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5/gcc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FMakefile.in?ref=5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5", "patch": "@@ -157,7 +157,7 @@ INSTALL_HEADERS_DIR = @build_install_headers_dir@\n USER_H = $(srcdir)/ginclude/stdarg.h $(srcdir)/ginclude/stddef.h \\\n     $(srcdir)/ginclude/varargs.h $(srcdir)/ginclude/proto.h \\\n     $(srcdir)/ginclude/stdbool.h $(srcdir)/ginclude/iso646.h \\\n-    $(EXTRA_HEADERS) $(LANG_EXTRA_HEADERS)\n+    $(EXTRA_HEADERS)\n \n # The GCC to use for compiling libgcc.a, enquire, and crt*.o.\n # Usually the one we just built.\n@@ -639,7 +639,6 @@ INCLUDES = -I. -I$(@D) -I$(srcdir) -I$(srcdir)/$(@D) \\\n # These next lines are overridden by configure.\n LANG_MAKEFILES = @all_lang_makefiles@\n LANG_STAGESTUFF = @all_stagestuff@\n-LANG_EXTRA_HEADERS = @all_headers@\n \n # Flags to pass to recursive makes.\n # CC is set by configure.  Hosts without symlinks need special handling"}, {"sha": "3d570c65ba0cbe16dd296abcc6bf7ae837cf7f33", "filename": "gcc/config/alpha/t-interix", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5/gcc%2Fconfig%2Falpha%2Ft-interix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5/gcc%2Fconfig%2Falpha%2Ft-interix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Falpha%2Ft-interix?ref=5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5", "patch": "@@ -1,8 +1,7 @@\n # t-interix\n \n # System headers will track gcc's needs.\n-# Even LANG_EXTRA_HEADERS may be temporary.\n-USER_H=$(LANG_EXTRA_HEADERS)\n+USER_H=\n \n LIB1ASMSRC = alpha/lib1funcs.asm\n LIB1ASMFUNCS = _divqu _divq _divlu _divl _remqu _remq _remlu _reml"}, {"sha": "3f78f78dc0fc9e297f27de815150019c0424f2a3", "filename": "gcc/config/i386/t-interix", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5/gcc%2Fconfig%2Fi386%2Ft-interix", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5/gcc%2Fconfig%2Fi386%2Ft-interix", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Ft-interix?ref=5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5", "patch": "@@ -5,5 +5,4 @@ interix.o: $(srcdir)/config/i386/interix.c\n \t$(CC) -c $(ALL_CFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) $(srcdir)/config/i386/interix.c\n \n # System headers will track gcc's needs.\n-# Even LANG_EXTRA_HEADERS may be temporary.\n-USER_H=$(LANG_EXTRA_HEADERS)\n+USER_H="}, {"sha": "0578cbd6225119ce75007c3a11bfede86de12de9", "filename": "gcc/config/t-openbsd", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5/gcc%2Fconfig%2Ft-openbsd", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5/gcc%2Fconfig%2Ft-openbsd", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Ft-openbsd?ref=5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5", "patch": "@@ -1,5 +1,5 @@\n # Don't run fixproto\n STMP_FIXPROTO =\n \n-# We don't need GCC's own include files but we do need lang specific ones.\n-USER_H = ${LANG_EXTRA_HEADERS}\n+# We don't need GCC's own include files.\n+USER_H ="}, {"sha": "385810cf63a0f9743babc6bf48bba849a490f372", "filename": "gcc/configure", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5/gcc%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5/gcc%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure?ref=5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5", "patch": "@@ -7890,8 +7890,6 @@ all_stagestuff=\n all_outputs='Makefile intl/Makefile fixinc/Makefile gccbug mklibgcc'\n # List of language makefile fragments.\n all_lang_makefiles=\n-all_headers=\n-all_lib2funcs=\n \n # Add the language fragments.\n # Languages are added via two mechanisms.  Some information must be\n@@ -7911,9 +7909,7 @@ do\n \t\tboot_language=\n \t\tcompilers=\n \t\tstagestuff=\n-\t\theaders=\n \t\toutputs=\n-\t\tlib2funcs=\n \t\t. ${srcdir}/$s/config-lang.in\n \t\tif test \"x$language\" = x\n \t\tthen\n@@ -7931,9 +7927,7 @@ do\n \t\tfi\n \t\tall_compilers=\"$all_compilers $compilers\"\n \t\tall_stagestuff=\"$all_stagestuff $stagestuff\"\n-\t\tall_headers=\"$all_headers $headers\"\n \t\tall_outputs=\"$all_outputs $outputs\"\n-\t\tall_lib2funcs=\"$all_lib2funcs $lib2funcs\"\n \tfi\n done\n \n@@ -8126,8 +8120,6 @@ ${CONFIG_SHELL-/bin/sh} $srcdir/configure.frag $srcdir \"$subdirs\" \"$dep_host_xma\n \n \n \n-\n-\n \n \n \n@@ -8393,10 +8385,8 @@ s%@objdir@%$objdir%g\n s%@subdirs@%$subdirs%g\n s%@all_boot_languages@%$all_boot_languages%g\n s%@all_compilers@%$all_compilers%g\n-s%@all_headers@%$all_headers%g\n s%@all_lang_makefiles@%$all_lang_makefiles%g\n s%@all_languages@%$all_languages%g\n-s%@all_lib2funcs@%$all_lib2funcs%g\n s%@all_stagestuff@%$all_stagestuff%g\n s%@build_exeext@%$build_exeext%g\n s%@build_install_headers_dir@%$build_install_headers_dir%g"}, {"sha": "8cbc7666f80212022e0a6dbbd31c4a1774a9f23f", "filename": "gcc/configure.in", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5/gcc%2Fconfigure.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5/gcc%2Fconfigure.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfigure.in?ref=5bc277026ba8546ef3f279d5e6f3dd8879c1b0f5", "patch": "@@ -2146,8 +2146,6 @@ all_stagestuff=\n all_outputs='Makefile intl/Makefile fixinc/Makefile gccbug mklibgcc'\n # List of language makefile fragments.\n all_lang_makefiles=\n-all_headers=\n-all_lib2funcs=\n \n # Add the language fragments.\n # Languages are added via two mechanisms.  Some information must be\n@@ -2167,9 +2165,7 @@ do\n \t\tboot_language=\n \t\tcompilers=\n \t\tstagestuff=\n-\t\theaders=\n \t\toutputs=\n-\t\tlib2funcs=\n \t\t. ${srcdir}/$s/config-lang.in\n \t\tif test \"x$language\" = x\n \t\tthen\n@@ -2187,9 +2183,7 @@ do\n \t\tfi\n \t\tall_compilers=\"$all_compilers $compilers\"\n \t\tall_stagestuff=\"$all_stagestuff $stagestuff\"\n-\t\tall_headers=\"$all_headers $headers\"\n \t\tall_outputs=\"$all_outputs $outputs\"\n-\t\tall_lib2funcs=\"$all_lib2funcs $lib2funcs\"\n \tfi\n done\n \n@@ -2322,10 +2316,8 @@ ${CONFIG_SHELL-/bin/sh} $srcdir/configure.frag $srcdir \"$subdirs\" \"$dep_host_xma\n AC_SUBST(subdirs)\n AC_SUBST(all_boot_languages)\n AC_SUBST(all_compilers)\n-AC_SUBST(all_headers)\n AC_SUBST(all_lang_makefiles)\n AC_SUBST(all_languages)\n-AC_SUBST(all_lib2funcs)\n AC_SUBST(all_stagestuff)\n AC_SUBST(build_exeext)\n AC_SUBST(build_install_headers_dir)"}]}