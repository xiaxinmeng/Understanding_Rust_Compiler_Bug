{"sha": "998979e6dc20eb1b72f6f9a1a818ae28d07d8721", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk4OTc5ZTZkYzIwZWIxYjcyZjZmOWExYTgxOGFlMjhkMDdkODcyMQ==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "2001-11-30T03:14:56Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "2001-11-30T03:14:56Z"}, "message": "re PR c++/3048 (Lookup problem (gcc 2.95 regression))\n\n2001-11-29  Mark Mitchell  <mark@codesourcery.com>\n\n\tPR c++/3048\n\t* cp-tree.h (ovl_member): Remove.\n\t* decl2.c (merge_functions): Handle extern \"C\" functions\n\tspecially.\n\t* tree.c (ovl_member): Remove.\n\nFrom-SVN: r47474", "tree": {"sha": "00ba049e16648fa9a3aa0326b1882987e7088f80", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/00ba049e16648fa9a3aa0326b1882987e7088f80"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/998979e6dc20eb1b72f6f9a1a818ae28d07d8721", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/998979e6dc20eb1b72f6f9a1a818ae28d07d8721", "html_url": "https://github.com/Rust-GCC/gccrs/commit/998979e6dc20eb1b72f6f9a1a818ae28d07d8721", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/998979e6dc20eb1b72f6f9a1a818ae28d07d8721/comments", "author": null, "committer": null, "parents": [{"sha": "fc6e87b33f1c961ded126986990048eb7120557a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fc6e87b33f1c961ded126986990048eb7120557a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fc6e87b33f1c961ded126986990048eb7120557a"}], "stats": {"total": 68, "additions": 47, "deletions": 21}, "files": [{"sha": "be2515372f897ae7effde8ebf96d9896e34685f1", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/998979e6dc20eb1b72f6f9a1a818ae28d07d8721/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/998979e6dc20eb1b72f6f9a1a818ae28d07d8721/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=998979e6dc20eb1b72f6f9a1a818ae28d07d8721", "patch": "@@ -1,3 +1,11 @@\n+2001-11-29  Mark Mitchell  <mark@codesourcery.com>\n+\n+\tPR c++/3048\n+\t* cp-tree.h (ovl_member): Remove.\n+\t* decl2.c (merge_functions): Handle extern \"C\" functions \n+\tspecially.\n+\t* tree.c (ovl_member): Remove.\n+\n 2001-11-29  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/4842"}, {"sha": "4b6dd33ff79fdd2c3dce7586b102964488f792cb", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/998979e6dc20eb1b72f6f9a1a818ae28d07d8721/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/998979e6dc20eb1b72f6f9a1a818ae28d07d8721/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=998979e6dc20eb1b72f6f9a1a818ae28d07d8721", "patch": "@@ -4194,7 +4194,6 @@ extern int is_overloaded_fn\t\t\tPARAMS ((tree));\n extern tree get_first_fn\t\t\tPARAMS ((tree));\n extern int bound_pmf_p\t\t\t\tPARAMS ((tree));\n extern tree ovl_cons                            PARAMS ((tree, tree));\n-extern int ovl_member                           PARAMS ((tree, tree));\n extern tree build_overload                      PARAMS ((tree, tree));\n extern tree function_arg_chain\t\t\tPARAMS ((tree));\n extern int promotes_to_aggr_type\t\tPARAMS ((tree, enum tree_code));"}, {"sha": "737d2959c2153834230269396bd00cb7322b2f4c", "filename": "gcc/cp/decl2.c", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/998979e6dc20eb1b72f6f9a1a818ae28d07d8721/gcc%2Fcp%2Fdecl2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/998979e6dc20eb1b72f6f9a1a818ae28d07d8721/gcc%2Fcp%2Fdecl2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fdecl2.c?ref=998979e6dc20eb1b72f6f9a1a818ae28d07d8721", "patch": "@@ -4146,9 +4146,26 @@ merge_functions (s1, s2)\n {\n   for (; s2; s2 = OVL_NEXT (s2))\n     {\n-      tree fn = OVL_CURRENT (s2);\n-      if (! ovl_member (fn, s1))\n-\ts1 = build_overload (fn, s1);\n+      tree fn2 = OVL_CURRENT (s2);\n+      tree fns1;\n+\n+      for (fns1 = s1; fns1; fns1 = OVL_NEXT (fns1))\n+\t{\n+\t  tree fn1 = OVL_CURRENT (fns1);\n+\n+\t  /* If the function from S2 is already in S1, there is no\n+\t     need to add it again.  For `extern \"C\"' functions, we\n+\t     might have two FUNCTION_DECLs for the same function, in\n+\t     different namespaces; again, we only need one of them.  */\n+\t  if (fn1 == fn2 \n+\t      || (DECL_EXTERN_C_P (fn1) && DECL_EXTERN_C_P (fn2)\n+\t\t  && DECL_NAME (fn1) == DECL_NAME (fn2)))\n+\t    break;\n+\t}\n+      \n+      /* If we exhausted all of the functions in S1, FN2 is new.  */\n+      if (!fns1)\n+\ts1 = build_overload (fn2, s1);\n     }\n   return s1;\n }"}, {"sha": "600c6e3746d3c3cede8e1df26790724d3fdac440", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/998979e6dc20eb1b72f6f9a1a818ae28d07d8721/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/998979e6dc20eb1b72f6f9a1a818ae28d07d8721/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=998979e6dc20eb1b72f6f9a1a818ae28d07d8721", "patch": "@@ -981,23 +981,6 @@ build_overload (decl, chain)\n   return ovl_cons (decl, chain);\n }\n \n-/* True if fn is in ovl. */\n-\n-int\n-ovl_member (fn, ovl)\n-     tree fn;\n-     tree ovl;\n-{\n-  if (ovl == NULL_TREE)\n-    return 0;\n-  if (TREE_CODE (ovl) != OVERLOAD)\n-    return ovl == fn;\n-  for (; ovl; ovl = OVL_CHAIN (ovl))\n-    if (OVL_FUNCTION (ovl) == fn)\n-      return 1;\n-  return 0;\n-}\n-\n int\n is_aggr_type_2 (t1, t2)\n      tree t1, t2;"}, {"sha": "aadbc5a46fe1649e908f46a771024b26d344abc6", "filename": "gcc/testsuite/g++.old-deja/g++.other/externC5.C", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/998979e6dc20eb1b72f6f9a1a818ae28d07d8721/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2FexternC5.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/998979e6dc20eb1b72f6f9a1a818ae28d07d8721/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2FexternC5.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.old-deja%2Fg%2B%2B.other%2FexternC5.C?ref=998979e6dc20eb1b72f6f9a1a818ae28d07d8721", "patch": "@@ -0,0 +1,19 @@\n+// Build don't link:\n+// Origin: schmid@snake.iap.physik.tu-darmstadt.de\n+\n+extern \"C\" int rand (void) throw ();\n+\n+namespace std\n+{ \n+extern \"C\" int rand(void) throw(); \n+template <class T> void f(T a) {}\n+}\n+\n+using namespace std;\n+\n+int main()\n+{\n+  f(rand);\n+  f(std::rand);\n+  f(::rand);\n+}"}]}