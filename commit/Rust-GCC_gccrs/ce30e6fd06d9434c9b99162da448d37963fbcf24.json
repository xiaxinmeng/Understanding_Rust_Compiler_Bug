{"sha": "ce30e6fd06d9434c9b99162da448d37963fbcf24", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2UzMGU2ZmQwNmQ5NDM0YzliOTkxNjJkYTQ0OGQzNzk2M2ZiY2YyNA==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2010-03-22T20:38:35Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2010-03-22T20:38:35Z"}, "message": "c-pretty-print.c (pp_c_specifier_qualifier_list): Use () rather than [], and move before the element type.\n\n\t* c-pretty-print.c (pp_c_specifier_qualifier_list) [VECTOR_TYPE]:\n\tUse () rather than [], and move before the element type.\n\t* cp-demangle.c (d_print_mod): Use () rather than [] for vectors.\n\nFrom-SVN: r157650", "tree": {"sha": "8fa114698e3515724c7230f5173bd35d599308b7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8fa114698e3515724c7230f5173bd35d599308b7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ce30e6fd06d9434c9b99162da448d37963fbcf24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce30e6fd06d9434c9b99162da448d37963fbcf24", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ce30e6fd06d9434c9b99162da448d37963fbcf24", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ce30e6fd06d9434c9b99162da448d37963fbcf24/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3a1ef68af0f80dc73971e7395f91644316ebd8c3", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3a1ef68af0f80dc73971e7395f91644316ebd8c3", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3a1ef68af0f80dc73971e7395f91644316ebd8c3"}], "stats": {"total": 39, "additions": 28, "deletions": 11}, "files": [{"sha": "f8515cdc5547d234b332eb6be51f273d66f5b865", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce30e6fd06d9434c9b99162da448d37963fbcf24/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce30e6fd06d9434c9b99162da448d37963fbcf24/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ce30e6fd06d9434c9b99162da448d37963fbcf24", "patch": "@@ -1,3 +1,8 @@\n+2010-03-22  Jason Merrill  <jason@redhat.com>\n+\n+\t* c-pretty-print.c (pp_c_specifier_qualifier_list) [VECTOR_TYPE]:\n+\tUse () rather than [], and move before the element type.\n+\n 2010-03-22  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>\n \n \t* doc/configfiles.texi (Configuration Files): Removed"}, {"sha": "e1aabca1b24b40f96cd9769c09b38c069981ab9a", "filename": "gcc/c-pretty-print.c", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce30e6fd06d9434c9b99162da448d37963fbcf24/gcc%2Fc-pretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce30e6fd06d9434c9b99162da448d37963fbcf24/gcc%2Fc-pretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-pretty-print.c?ref=ce30e6fd06d9434c9b99162da448d37963fbcf24", "patch": "@@ -454,16 +454,17 @@ pp_c_specifier_qualifier_list (c_pretty_printer *pp, tree t)\n \n     case VECTOR_TYPE:\n     case COMPLEX_TYPE:\n-      pp_c_specifier_qualifier_list (pp, TREE_TYPE (t));\n       if (code == COMPLEX_TYPE)\n \tpp_c_ws_string (pp, flag_isoc99 ? \"_Complex\" : \"__complex__\");\n       else if (code == VECTOR_TYPE)\n \t{\n \t  pp_c_ws_string (pp, \"__vector\");\n-\t  pp_c_left_bracket (pp);\n+\t  pp_c_left_paren (pp);\n \t  pp_wide_integer (pp, TYPE_VECTOR_SUBPARTS (t));\n-\t  pp_c_right_bracket (pp);\n+\t  pp_c_right_paren (pp);\n+\t  pp_c_whitespace (pp);\n \t}\n+      pp_c_specifier_qualifier_list (pp, TREE_TYPE (t));\n       break;\n \n     default:"}, {"sha": "25cc5b9ca3944388f39b64e3d0054204a283f5fb", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce30e6fd06d9434c9b99162da448d37963fbcf24/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce30e6fd06d9434c9b99162da448d37963fbcf24/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=ce30e6fd06d9434c9b99162da448d37963fbcf24", "patch": "@@ -1,3 +1,10 @@\n+2010-03-22  Jason Merrill  <jason@redhat.com>\n+\n+\t* gcc.dg/pr36997.c: Adjust error message.\n+\t* g++.dg/ext/vector9.C: Likewise.\n+\t* g++.dg/conversion/simd3.C: Likewise.\n+\t* g++.dg/other/error23.C: Likewise.\n+\n 2010-03-22  Michael Matz  <matz@suse.de>\n \n \tPR middle-end/43475"}, {"sha": "8d9626449b7c099ac138fd453364af3963337c08", "filename": "gcc/testsuite/g++.dg/conversion/simd3.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce30e6fd06d9434c9b99162da448d37963fbcf24/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fsimd3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce30e6fd06d9434c9b99162da448d37963fbcf24/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fsimd3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fconversion%2Fsimd3.C?ref=ce30e6fd06d9434c9b99162da448d37963fbcf24", "patch": "@@ -10,6 +10,6 @@ unsigned int __attribute__((vector_size(16))) e;\n void foo()\n {\n \tb + d; /* { dg-error \"invalid operands to binary\" } */\n-\td += e; /* { dg-message \"use -flax-vector-conversions to permit conversions between vectors with differing element types or numbers of subparts.*cannot convert 'unsigned int __vector.4.' to 'int __vector.4.' in assignment\" } */\n+\td += e; /* { dg-message \"use -flax-vector-conversions to permit conversions between vectors with differing element types or numbers of subparts.*cannot convert '__vector.4. unsigned int' to '__vector.4. int' in assignment\" } */\n \td2 += d;\n }"}, {"sha": "32e13b494f04f69689859799e6b0685db84c152f", "filename": "gcc/testsuite/g++.dg/ext/vector9.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce30e6fd06d9434c9b99162da448d37963fbcf24/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector9.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce30e6fd06d9434c9b99162da448d37963fbcf24/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector9.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fext%2Fvector9.C?ref=ce30e6fd06d9434c9b99162da448d37963fbcf24", "patch": "@@ -6,5 +6,5 @@ typedef int   v4i __attribute__((vector_size(8)));\n void foo()\n {\n   v4f v;\n-  !(v4i)v; // { dg-error \"int __vector.2|argument\" }\n+  !(v4i)v; // { dg-error \"__vector.2. int|argument\" }\n }"}, {"sha": "0ff1915cf2ce170b7f4efa1161ce3d973a411c23", "filename": "gcc/testsuite/g++.dg/other/error23.C", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce30e6fd06d9434c9b99162da448d37963fbcf24/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror23.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce30e6fd06d9434c9b99162da448d37963fbcf24/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror23.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fother%2Ferror23.C?ref=ce30e6fd06d9434c9b99162da448d37963fbcf24", "patch": "@@ -2,4 +2,4 @@\n // { dg-do compile }\n \n int v __attribute ((vector_size (8)));\n-bool b = !(v - v);\t// { dg-error \"could not convert .\\\\(int __vector.2.\\\\)\\\\{0, 0\\\\}. to .bool.|in argument to unary\" }\n+bool b = !(v - v);\t// { dg-error \"could not convert .\\\\(__vector.2. int\\\\)\\\\{0, 0\\\\}. to .bool.|in argument to unary\" }"}, {"sha": "13461b8a1347b8df0ee3380e211c854f4105efb2", "filename": "gcc/testsuite/gcc.dg/pr36997.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce30e6fd06d9434c9b99162da448d37963fbcf24/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36997.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce30e6fd06d9434c9b99162da448d37963fbcf24/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36997.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpr36997.c?ref=ce30e6fd06d9434c9b99162da448d37963fbcf24", "patch": "@@ -5,5 +5,5 @@ typedef int __m64 __attribute__ ((__vector_size__ (8), __may_alias__));\n __m64 _mm_add_si64 (__m64 __m1, __m64 __m2)\n {\n     return (__m64) __builtin_ia32_paddq ((long long)__m1, (long long)__m2); /* { dg-error \"incompatible type\" } */\n-    /* { dg-message \"note: expected 'long long int __vector.1.' but argument is of type 'long long int'\" \"\" { target *-*-* } 7 } */\n+    /* { dg-message \"note: expected '__vector.1. long long int' but argument is of type 'long long int'\" \"\" { target *-*-* } 7 } */\n }"}, {"sha": "176dd4daf7bce42314da9bc219bc4cde8923a997", "filename": "libiberty/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce30e6fd06d9434c9b99162da448d37963fbcf24/libiberty%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce30e6fd06d9434c9b99162da448d37963fbcf24/libiberty%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2FChangeLog?ref=ce30e6fd06d9434c9b99162da448d37963fbcf24", "patch": "@@ -1,3 +1,7 @@\n+2010-03-22  Jason Merrill  <jason@redhat.com>\n+\n+\t* cp-demangle.c (d_print_mod): Use () rather than [] for vectors.\n+\n 2010-03-01  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* Makefile.in (all): Do not use exec."}, {"sha": "98c64db552f8642eb328798d78125e2e62455237", "filename": "libiberty/cp-demangle.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce30e6fd06d9434c9b99162da448d37963fbcf24/libiberty%2Fcp-demangle.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce30e6fd06d9434c9b99162da448d37963fbcf24/libiberty%2Fcp-demangle.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Fcp-demangle.c?ref=ce30e6fd06d9434c9b99162da448d37963fbcf24", "patch": "@@ -4506,9 +4506,9 @@ d_print_mod (struct d_print_info *dpi,\n       d_print_comp (dpi, d_left (mod));\n       return;\n     case DEMANGLE_COMPONENT_VECTOR_TYPE:\n-      d_append_string (dpi, \" vector[\");\n+      d_append_string (dpi, \" __vector(\");\n       d_print_comp (dpi, d_left (mod));\n-      d_append_char (dpi, ']');\n+      d_append_char (dpi, ')');\n       return;\n \n     default:"}, {"sha": "672f35216fe4953cbc8d3ae0f4869b8e9c35eceb", "filename": "libiberty/testsuite/demangle-expected", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ce30e6fd06d9434c9b99162da448d37963fbcf24/libiberty%2Ftestsuite%2Fdemangle-expected", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ce30e6fd06d9434c9b99162da448d37963fbcf24/libiberty%2Ftestsuite%2Fdemangle-expected", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libiberty%2Ftestsuite%2Fdemangle-expected?ref=ce30e6fd06d9434c9b99162da448d37963fbcf24", "patch": "@@ -3928,10 +3928,10 @@ _Z1fN1SUt_E\n f(S::{unnamed type#1})\n --format=gnu-v3\n _Z1fDv32_f\n-f(float vector[32])\n+f(float __vector(32))\n --format=gnu-v3\n _Z1fIfLi4EEvDv_T0__T_\n-void f<float, 4>(float vector[4])\n+void f<float, 4>(float __vector(4))\n --format=gnu-v3\n _Z1fI1AEDTclonplfp_fp_EET_\n decltype ((operator+)({parm#1}, {parm#1})) f<A>(A)"}]}