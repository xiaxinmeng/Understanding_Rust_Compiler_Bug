{"sha": "aa29dfeb7034a6a7330a55cb5ef387318f06afa7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWEyOWRmZWI3MDM0YTZhNzMzMGE1NWNiNWVmMzg3MzE4ZjA2YWZhNw==", "commit": {"author": {"name": "Erik Christiansen", "email": "erik@dd.nec.com.au", "date": "2005-08-17T22:19:19Z"}, "committer": {"name": "Jim Wilson", "email": "wilson@gcc.gnu.org", "date": "2005-08-17T22:19:19Z"}, "message": "Eliminate linker error with v850e code using interrupt_handler attribute.\n\n* config/v850/lib1funcs.asm (callt_save_interrupt): Fix comment typos.\nMove call_table_data to end.  Delete spurious .text.\n(callt_save_all_interrupt): Fix comment typo.\n\nFrom-SVN: r103231", "tree": {"sha": "cb7fa0085e9c3b363179e758766c73273fd1ce7b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/cb7fa0085e9c3b363179e758766c73273fd1ce7b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/aa29dfeb7034a6a7330a55cb5ef387318f06afa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa29dfeb7034a6a7330a55cb5ef387318f06afa7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa29dfeb7034a6a7330a55cb5ef387318f06afa7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa29dfeb7034a6a7330a55cb5ef387318f06afa7/comments", "author": null, "committer": null, "parents": [{"sha": "90e0c734fa7ee61bacefcbdccfa0c22dad59c579", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/90e0c734fa7ee61bacefcbdccfa0c22dad59c579", "html_url": "https://github.com/Rust-GCC/gccrs/commit/90e0c734fa7ee61bacefcbdccfa0c22dad59c579"}], "stats": {"total": 29, "additions": 15, "deletions": 14}, "files": [{"sha": "b2785edd6f3e49dd39ebc479f80f313af8767a2d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa29dfeb7034a6a7330a55cb5ef387318f06afa7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa29dfeb7034a6a7330a55cb5ef387318f06afa7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=aa29dfeb7034a6a7330a55cb5ef387318f06afa7", "patch": "@@ -1,3 +1,9 @@\n+2005-08-17  Erik Christiansen  <erik@dd.nec.com.au>\n+\t\n+\t* config/v850/lib1funcs.asm (callt_save_interrupt): Fix comment typos.\n+\tMove call_table_data to end.  Delete spurious .text.\n+\t(callt_save_all_interrupt): Fix comment typo.\n+\n 2005-08-17  James E Wilson  <wilson@specifix.com>\n \t    Kevin Winchester  <winchester@amirix.com>\n "}, {"sha": "8d226580dc08453a584762b2088505571fd64172", "filename": "gcc/config/v850/lib1funcs.asm", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/aa29dfeb7034a6a7330a55cb5ef387318f06afa7/gcc%2Fconfig%2Fv850%2Flib1funcs.asm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/aa29dfeb7034a6a7330a55cb5ef387318f06afa7/gcc%2Fconfig%2Fv850%2Flib1funcs.asm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fv850%2Flib1funcs.asm?ref=aa29dfeb7034a6a7330a55cb5ef387318f06afa7", "patch": "@@ -1428,7 +1428,7 @@ __callt_save_r6_r9:\t.short ctoff(.L_save_r6_r9)\n \n \t\n #ifdef\tL_callt_save_interrupt\n-\t/* Put this functions into the call table area */\n+\t/* Put these functions into the call table area.  */\n \t.call_table_text\n \t\n \t/* Save registers r1, ep, gp, r10 on stack and load up with expected values.  */\n@@ -1440,23 +1440,14 @@ __callt_save_r6_r9:\t.short ctoff(.L_save_r6_r9)\n         st.w    ep,  0[sp]\n         st.w    gp,  4[sp]\n         st.w    r1,  8[sp]\n-        /* R10 has alread been saved bofore callt ctoff(_save_interrupt).  */\n+        /* R10 has already been saved before callt ctoff(_save_interrupt).  */\n         /* st.w    r10, 12[sp]  */\n \tmov\thilo(__ep),ep\n \tmov\thilo(__gp),gp\n \tctret\n \n-        /* Place the offsets of the start of the routine into the call table.  */\n-        .call_table_data\n-        .global __callt_save_interrupt\n-        .type   __callt_save_interrupt,@function\n-__callt_save_interrupt: .short ctoff(.L_save_interrupt)\n-\n-        .call_table_text\n-\n \t/* Restore saved registers, deallocate stack and return from the interrupt.  */\n-        /* Called via:  callt ctoff(__callt_restore_itnerrupt).  */\n-\t.text\n+        /* Called via:  callt ctoff(__callt_restore_interrupt).  */\n \t.align\t2\n \t.globl\t__return_interrupt\n \t.type\t__return_interrupt,@function\n@@ -1472,17 +1463,21 @@ __callt_save_interrupt: .short ctoff(.L_save_interrupt)\n         addi    24, sp, sp\n         reti\n \n-\t/* Place the offsets of the start of the routine into the call table.  */\n+\t/* Place the offsets of the start of these routines into the call table.  */\n \t.call_table_data\n \n+        .global __callt_save_interrupt\n+        .type   __callt_save_interrupt,@function\n+__callt_save_interrupt:         .short ctoff(.L_save_interrupt)\n+\n         .global __callt_return_interrupt\n         .type   __callt_return_interrupt,@function\n __callt_return_interrupt:       .short ctoff(.L_return_interrupt)\n \t\n #endif /* L_callt_save_interrupt */\n \n #ifdef L_callt_save_all_interrupt\n-\t/* Put this functions into the call table area.  */\n+\t/* Put these functions into the call table area.  */\n \t.call_table_text\n \t\n \t/* Save all registers except for those saved in __save_interrupt.  */"}]}