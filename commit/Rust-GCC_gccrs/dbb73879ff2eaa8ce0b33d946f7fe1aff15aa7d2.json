{"sha": "dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGJiNzM4NzlmZjJlYWE4Y2UwYjMzZDk0NmY3ZmUxYWZmMTVhYTdkMg==", "commit": {"author": {"name": "Terry Guo", "email": "terry.guo@arm.com", "date": "2014-06-19T07:50:48Z"}, "committer": {"name": "Xuepeng Guo", "email": "xguo@gcc.gnu.org", "date": "2014-06-19T07:50:48Z"}, "message": "thumb1.md (define_split): Split 64bit constant in earlier stage.\n\ngcc/ChangeLog:\n\n2014-06-19  Terry Guo  <terry.guo@arm.com>\n\n\t* config/arm/thumb1.md (define_split): Split 64bit constant in earlier\n\tstage.\n\ngcc/testsuite/ChangeLog:\n\n2014-06-19  Terry Guo  <terry.guo@arm.com>\n\n\t* gcc.target/arm/thumb1-load-64bit-constant-1.c: New test.\n\t* gcc.target/arm/thumb1-load-64bit-constant-2.c: Ditto.\n\t* gcc.target/arm/thumb1-load-64bit-constant-3.c: Ditto.\n\nFrom-SVN: r211817", "tree": {"sha": "69310b30b895b6340f9a6fc2e96e38adba1dbfe6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/69310b30b895b6340f9a6fc2e96e38adba1dbfe6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2/comments", "author": null, "committer": null, "parents": [{"sha": "7f6c4159bf807be2450ea3952ecb6ed7ea8e33d0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f6c4159bf807be2450ea3952ecb6ed7ea8e33d0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f6c4159bf807be2450ea3952ecb6ed7ea8e33d0"}], "stats": {"total": 72, "additions": 72, "deletions": 0}, "files": [{"sha": "2d22cde514dbd7e737670c140b5f60bb2903e41b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2", "patch": "@@ -1,3 +1,8 @@\n+2014-06-19  Terry Guo  <terry.guo@arm.com>\n+\n+\t* config/arm/thumb1.md (define_split): Split 64bit constant in earlier\n+\tstage.\n+\n 2014-06-18  Segher Boessenkool  <segher@kernel.crashing.org>\n \n \t* config/rs6000/rs6000.h (FIXED_REGISTERS): Update comment."}, {"sha": "c044fd584c970f3bcba790014c8ab8f428efa1bc", "filename": "gcc/config/arm/thumb1.md", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2/gcc%2Fconfig%2Farm%2Fthumb1.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2/gcc%2Fconfig%2Farm%2Fthumb1.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fthumb1.md?ref=dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2", "patch": "@@ -633,6 +633,25 @@\n    (set_attr \"pool_range\" \"*,*,*,*,*,*,1018,*,*\")\n    (set_attr \"conds\" \"set,clob,*,*,nocond,nocond,nocond,nocond,nocond\")])\n \n+; Split the load of 64-bit constant into two loads for high and low 32-bit parts respectively\n+; to see if we can load them in fewer instructions or fewer cycles.\n+; For the small 64-bit integer constants that satisfy constraint J, the instruction pattern\n+; thumb1_movdi_insn has a better way to handle them.\n+(define_split\n+  [(set (match_operand:ANY64 0 \"arm_general_register_operand\" \"\")\n+       (match_operand:ANY64 1 \"const_double_operand\" \"\"))]\n+  \"TARGET_THUMB1 && reload_completed && !satisfies_constraint_J (operands[1])\"\n+  [(set (match_dup 0) (match_dup 1))\n+   (set (match_dup 2) (match_dup 3))]\n+  \"\n+  operands[2] = gen_highpart (SImode, operands[0]);\n+  operands[3] = gen_highpart_mode (SImode, GET_MODE (operands[0]),\n+                                  operands[1]);\n+  operands[0] = gen_lowpart (SImode, operands[0]);\n+  operands[1] = gen_lowpart (SImode, operands[1]);\n+  \"\n+)\n+\n (define_split\n   [(set (match_operand:SI 0 \"register_operand\" \"\")\n \t(match_operand:SI 1 \"const_int_operand\" \"\"))]"}, {"sha": "5138e5a9641d0b4c537ece2db95556744e0520e1", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2", "patch": "@@ -1,3 +1,9 @@\n+2014-06-19  Terry Guo  <terry.guo@arm.com>\n+\n+\t* gcc.target/arm/thumb1-load-64bit-constant-1.c: New test.\n+\t* gcc.target/arm/thumb1-load-64bit-constant-2.c: Ditto.\n+\t* gcc.target/arm/thumb1-load-64bit-constant-3.c: Ditto.\n+\n 2014-06-19  Tobias Burnus  <burnus@net-b.de>\n \n \t* gfortran.dg/coarray/collectives_2.f90: Extend"}, {"sha": "9537aafa1ba25b2539ade584d8e7aa9885bbc6ac", "filename": "gcc/testsuite/gcc.target/arm/thumb1-load-64bit-constant-1.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-load-64bit-constant-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-load-64bit-constant-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-load-64bit-constant-1.c?ref=dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-require-effective-target arm_thumb1_ok } */\n+/* { dg-do compile } */\n+/* { dg-options \"-Os\" } */\n+/* { dg-skip-if \"\" { ! { arm_thumb1 } } } */\n+\n+extern long long madd (long long a, long long b);\n+\n+long long\n+foo ()\n+{\n+  return madd (0x0000000100000001LL, 0x0000011100000001LL);\n+}\n+\n+/* { dg-final { scan-assembler-not \"ldr\" } } */"}, {"sha": "836682b475dd3420a9793fcc2ecf0d2f4b0a2ad5", "filename": "gcc/testsuite/gcc.target/arm/thumb1-load-64bit-constant-2.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-load-64bit-constant-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-load-64bit-constant-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-load-64bit-constant-2.c?ref=dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-require-effective-target arm_thumb1_ok } */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+/* { dg-skip-if \"\" { ! { arm_thumb1 } } } */\n+\n+extern long long madd (long long a);\n+\n+long long\n+foo ()\n+{\n+  return madd (0x0000000100000001LL);\n+}\n+\n+/* { dg-final { scan-assembler-not \"ldr\" } } */"}, {"sha": "cf4d0be8b60a7fd5324fca7147570d9cec98bbbf", "filename": "gcc/testsuite/gcc.target/arm/thumb1-load-64bit-constant-3.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-load-64bit-constant-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-load-64bit-constant-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fthumb1-load-64bit-constant-3.c?ref=dbb73879ff2eaa8ce0b33d946f7fe1aff15aa7d2", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-require-effective-target arm_thumb1_ok } */\n+/* { dg-do compile } */\n+/* { dg-options \"-Os\" } */\n+/* { dg-skip-if \"\" { ! { arm_thumb1 } } } */\n+\n+long long\n+foo (int len)\n+{\n+  return (long long) (((long long) 1 << len) - 1);\n+}\n+\n+/* { dg-final { scan-assembler-not \"ldr\" } } */\n+/* { dg-final { scan-assembler-times \"neg\" 1 } } */\n+"}]}