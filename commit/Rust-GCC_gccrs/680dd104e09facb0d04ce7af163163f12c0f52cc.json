{"sha": "680dd104e09facb0d04ce7af163163f12c0f52cc", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjgwZGQxMDRlMDlmYWNiMGQwNGNlN2FmMTYzMTYzZjEyYzBmNTJjYw==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2002-10-22T21:58:03Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2002-10-22T21:58:03Z"}, "message": "i386.md: FIx typo.\n\n\n\t* i386.md: FIx typo.\n\t(sse2_cvtsi2sd, sse2_pslrdq): Fix template.\n\t(sse2_umulv2siv2di3): Fix predicate.\n\t(sse2_psadbw, ashrv8hi3, ashrv4si3, lshrv8hi3 lshrv4si3,\n\tlshrv2di3, ashlv8hi3, ashlv4si3, ashlv2di3): Likewise.\n\t* xmmintrin.h (_mm_mul_epu16): Rename to...\n\t(_mm_mul_epu32): This one.\n\t(_mm_cvtsi32_si128, _mm_cvtsi128_si32): New.\n\n\t(contains_128bit_aligned_vector_p): Undo accidental checkin.\n\nFrom-SVN: r58421", "tree": {"sha": "86008d0353f2d6be5cb3cdd476cf9197ec8bfcfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/86008d0353f2d6be5cb3cdd476cf9197ec8bfcfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/680dd104e09facb0d04ce7af163163f12c0f52cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/680dd104e09facb0d04ce7af163163f12c0f52cc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/680dd104e09facb0d04ce7af163163f12c0f52cc", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/680dd104e09facb0d04ce7af163163f12c0f52cc/comments", "author": null, "committer": null, "parents": [{"sha": "3aabf9a58b73f3d9e71b1e9c0da546a06fa8761e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3aabf9a58b73f3d9e71b1e9c0da546a06fa8761e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3aabf9a58b73f3d9e71b1e9c0da546a06fa8761e"}], "stats": {"total": 62, "additions": 44, "deletions": 18}, "files": [{"sha": "d930f45fb46513850f9e59fff48b569f0d4ff27b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/680dd104e09facb0d04ce7af163163f12c0f52cc/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/680dd104e09facb0d04ce7af163163f12c0f52cc/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=680dd104e09facb0d04ce7af163163f12c0f52cc", "patch": "@@ -1,3 +1,16 @@\n+Tue Oct 22 23:51:34 CEST 2002  Jan Hubicka  <jh@suse.cz>\n+\n+\t* i386.md: FIx typo.\n+\t(sse2_cvtsi2sd, sse2_pslrdq): Fix template.\n+\t(sse2_umulv2siv2di3): Fix predicate.\n+\t(sse2_psadbw, ashrv8hi3, ashrv4si3, lshrv8hi3 lshrv4si3,\n+\tlshrv2di3, ashlv8hi3, ashlv4si3, ashlv2di3): Likewise.\n+\t* xmmintrin.h (_mm_mul_epu16): Rename to...\n+\t(_mm_mul_epu32): This one.\n+\t(_mm_cvtsi32_si128, _mm_cvtsi128_si32): New.\n+\n+\t(contains_128bit_aligned_vector_p): Undo accidental checkin.\n+\n 2002-10-22  Eric Christopher  <echristo@redhat.com>\n \n \t* config/sparc/sparc.h: Add #error."}, {"sha": "63e7f9570bec5b708552799104a2a383ee7cf132", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/680dd104e09facb0d04ce7af163163f12c0f52cc/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/680dd104e09facb0d04ce7af163163f12c0f52cc/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=680dd104e09facb0d04ce7af163163f12c0f52cc", "patch": "@@ -797,7 +797,6 @@ const struct attribute_spec ix86_attribute_table[];\n static tree ix86_handle_cdecl_attribute PARAMS ((tree *, tree, tree, int, bool *));\n static tree ix86_handle_regparm_attribute PARAMS ((tree *, tree, tree, int, bool *));\n static int ix86_value_regno PARAMS ((enum machine_mode));\n-static bool contains_128bit_aligned_vector_p PARAMS ((tree));\n \n #if defined (DO_GLOBAL_CTORS_BODY) && defined (HAS_INIT_SECTION)\n static void ix86_svr3_asm_out_constructor PARAMS ((rtx, int));"}, {"sha": "b2aa4efb46ac25fc439575c0844606bb67ff3647", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/680dd104e09facb0d04ce7af163163f12c0f52cc/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/680dd104e09facb0d04ce7af163163f12c0f52cc/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=680dd104e09facb0d04ce7af163163f12c0f52cc", "patch": "@@ -16862,7 +16862,7 @@\n    && ix86_match_ccmode (insn, CCNOmode)\n    && (GET_MODE (operands[0]) == HImode\n        || (GET_MODE (operands[0]) == QImode \n-\t   /* Ensure that the operand will remain sign extended immedaite.  */\n+\t   /* Ensure that the operand will remain sign extended immediate.  */\n \t   && INTVAL (operands[2]) >= 0\n \t   && (TARGET_PROMOTE_QImode || optimize_size)))\"\n   [(parallel [(set (reg:CCNO 17)\n@@ -20685,7 +20685,7 @@\n \t\t\t    (match_operand:SI 2 \"nonimmediate_operand\" \"rm\")))\n \t\t\t(const_int 2)))]\n   \"TARGET_SSE2\"\n-  \"cvtsd2si\\t{%2, %0|%0, %2}\"\n+  \"cvtsi2sd\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"ssecvt\")\n    (set_attr \"mode\" \"DF\")])\n \n@@ -20935,14 +20935,14 @@\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"sse2_umulv2siv2di3\"\n-  [(set (match_operand:V2DI 0 \"register_operand\" \"=y\")\n+  [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n         (mult:V2DI (zero_extend:V2DI\n \t\t     (vec_select:V2SI\n \t\t       (match_operand:V4SI 1 \"register_operand\" \"0\")\n \t\t       (parallel [(const_int 0) (const_int 2)])))\n \t\t   (zero_extend:V2DI\n \t\t     (vec_select:V2SI\n-\t\t       (match_operand:V4SI 2 \"nonimmediate_operand\" \"ym\")\n+\t\t       (match_operand:V4SI 2 \"nonimmediate_operand\" \"xm\")\n \t\t       (parallel [(const_int 0) (const_int 2)])))))]\n   \"TARGET_SSE2\"\n   \"pmuludq\\t{%2, %0|%0, %2}\"\n@@ -20996,7 +20996,7 @@\n         (ashiftrt:V16QI\n \t (plus:V16QI (plus:V16QI\n \t\t     (match_operand:V16QI 1 \"register_operand\" \"0\")\n-\t\t     (match_operand:V16QI 2 \"nonimmediate_operand\" \"ym\"))\n+\t\t     (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm\"))\n \t\t     (const_vector:V16QI [(const_int 1) (const_int 1)\n \t\t\t\t\t  (const_int 1) (const_int 1)\n \t\t\t\t\t  (const_int 1) (const_int 1)\n@@ -21016,7 +21016,7 @@\n         (ashiftrt:V8HI\n \t (plus:V8HI (plus:V8HI\n \t\t     (match_operand:V8HI 1 \"register_operand\" \"0\")\n-\t\t     (match_operand:V8HI 2 \"nonimmediate_operand\" \"ym\"))\n+\t\t     (match_operand:V8HI 2 \"nonimmediate_operand\" \"xm\"))\n \t\t    (const_vector:V8HI [(const_int 1) (const_int 1)\n \t\t\t\t        (const_int 1) (const_int 1)\n \t\t\t\t        (const_int 1) (const_int 1)\n@@ -21031,7 +21031,7 @@\n (define_insn \"sse2_psadbw\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n         (unspec:V2DI [(match_operand:V16QI 1 \"register_operand\" \"0\")\n-\t\t      (match_operand:V16QI 2 \"nonimmediate_operand\" \"ym\")]\n+\t\t      (match_operand:V16QI 2 \"nonimmediate_operand\" \"xm\")]\n \t\t     UNSPEC_PSADBW))]\n   \"TARGET_SSE2\"\n   \"psadbw\\t{%2, %0|%0, %2}\"\n@@ -21194,7 +21194,7 @@\n (define_insn \"ashrv8hi3\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n         (ashiftrt:V8HI (match_operand:V8HI 1 \"register_operand\" \"0\")\n-\t\t       (match_operand:SI 2 \"nonmemory_operand\" \"ri\")))]\n+\t\t       (match_operand:SI 2 \"nonmemory_operand\" \"xi\")))]\n   \"TARGET_SSE2\"\n   \"psraw\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseishft\")\n@@ -21203,7 +21203,7 @@\n (define_insn \"ashrv4si3\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n         (ashiftrt:V4SI (match_operand:V4SI 1 \"register_operand\" \"0\")\n-\t\t       (match_operand:SI 2 \"nonmemory_operand\" \"ri\")))]\n+\t\t       (match_operand:SI 2 \"nonmemory_operand\" \"xi\")))]\n   \"TARGET_SSE2\"\n   \"psrad\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseishft\")\n@@ -21212,7 +21212,7 @@\n (define_insn \"lshrv8hi3\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n         (lshiftrt:V8HI (match_operand:V8HI 1 \"register_operand\" \"0\")\n-\t\t       (match_operand:SI 2 \"nonmemory_operand\" \"ri\")))]\n+\t\t       (match_operand:SI 2 \"nonmemory_operand\" \"xi\")))]\n   \"TARGET_SSE2\"\n   \"psrlw\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseishft\")\n@@ -21221,7 +21221,7 @@\n (define_insn \"lshrv4si3\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n         (lshiftrt:V4SI (match_operand:V4SI 1 \"register_operand\" \"0\")\n-\t\t       (match_operand:SI 2 \"nonmemory_operand\" \"ri\")))]\n+\t\t       (match_operand:SI 2 \"nonmemory_operand\" \"xi\")))]\n   \"TARGET_SSE2\"\n   \"psrld\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseishft\")\n@@ -21230,7 +21230,7 @@\n (define_insn \"lshrv2di3\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n         (lshiftrt:V2DI (match_operand:V2DI 1 \"register_operand\" \"0\")\n-\t\t       (match_operand:SI 2 \"nonmemory_operand\" \"ri\")))]\n+\t\t       (match_operand:SI 2 \"nonmemory_operand\" \"xi\")))]\n   \"TARGET_SSE2\"\n   \"psrlq\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseishft\")\n@@ -21239,7 +21239,7 @@\n (define_insn \"ashlv8hi3\"\n   [(set (match_operand:V8HI 0 \"register_operand\" \"=x\")\n         (ashift:V8HI (match_operand:V8HI 1 \"register_operand\" \"0\")\n-\t\t     (match_operand:SI 2 \"nonmemory_operand\" \"ri\")))]\n+\t\t     (match_operand:SI 2 \"nonmemory_operand\" \"xi\")))]\n   \"TARGET_SSE2\"\n   \"psllw\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseishft\")\n@@ -21248,7 +21248,7 @@\n (define_insn \"ashlv4si3\"\n   [(set (match_operand:V4SI 0 \"register_operand\" \"=x\")\n         (ashift:V4SI (match_operand:V4SI 1 \"register_operand\" \"0\")\n-\t\t     (match_operand:SI 2 \"nonmemory_operand\" \"ri\")))]\n+\t\t     (match_operand:SI 2 \"nonmemory_operand\" \"xi\")))]\n   \"TARGET_SSE2\"\n   \"pslld\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseishft\")\n@@ -21257,7 +21257,7 @@\n (define_insn \"ashlv2di3\"\n   [(set (match_operand:V2DI 0 \"register_operand\" \"=x\")\n         (ashift:V2DI (match_operand:V2DI 1 \"register_operand\" \"0\")\n-\t\t     (match_operand:SI 2 \"nonmemory_operand\" \"ri\")))]\n+\t\t     (match_operand:SI 2 \"nonmemory_operand\" \"xi\")))]\n   \"TARGET_SSE2\"\n   \"psllq\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseishft\")\n@@ -21357,7 +21357,7 @@\n \t\t       (mult:SI (match_operand:SI 2 \"immediate_operand\" \"i\")\n \t\t\t\t(const_int 8)))] UNSPEC_NOP))]\n   \"TARGET_SSE2\"\n-  \"pslrdq\\t{%2, %0|%0, %2}\"\n+  \"psrldq\\t{%2, %0|%0, %2}\"\n   [(set_attr \"type\" \"sseishft\")\n    (set_attr \"mode\" \"TI\")])\n "}, {"sha": "f0f6ee3ee11f4e3954fb05d67ed9dd58e2975ed3", "filename": "gcc/config/i386/xmmintrin.h", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/680dd104e09facb0d04ce7af163163f12c0f52cc/gcc%2Fconfig%2Fi386%2Fxmmintrin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/680dd104e09facb0d04ce7af163163f12c0f52cc/gcc%2Fconfig%2Fi386%2Fxmmintrin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fxmmintrin.h?ref=680dd104e09facb0d04ce7af163163f12c0f52cc", "patch": "@@ -2148,7 +2148,7 @@ _mm_mul_pu16 (__m64 __A, __m64 __B)\n }\n \n static __inline __m128i\n-_mm_mul_epu16 (__m128i __A, __m128i __B)\n+_mm_mul_epu32 (__m128i __A, __m128i __B)\n {\n   return (__m128i)__builtin_ia32_pmuludq128 ((__v4si)__A, (__v4si)__B);\n }\n@@ -2435,6 +2435,20 @@ _mm_mfence (void)\n   __builtin_ia32_mfence ();\n }\n \n+static __inline __m128i\n+_mm_cvtsi32_si128 (int __A)\n+{\n+  return (__m128i) __builtin_ia32_loadd (&__A);\n+}\n+\n+static __inline int\n+_mm_cvtsi128_si32 (__m128i __A)\n+{\n+  int __tmp;\n+  __builtin_ia32_stored (&__tmp, (__v4si)__A);\n+  return __tmp;\n+}\n+\n #endif /* __SSE2__  */\n \n #endif /* __SSE__ */"}]}