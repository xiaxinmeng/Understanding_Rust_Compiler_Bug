{"sha": "798bdf70eee560a3ca67a44dbb64397ee709b438", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk4YmRmNzBlZWU1NjBhM2NhNjdhNDRkYmI2NDM5N2VlNzA5YjQzOA==", "commit": {"author": {"name": "Bruce Korb", "email": "bkorb@gnu.org", "date": "2001-03-16T00:58:40Z"}, "committer": {"name": "Bruce Korb", "email": "korbb@gcc.gnu.org", "date": "2001-03-16T00:58:40Z"}, "message": "more rigorous SIGCHLD guarding\n\nFrom-SVN: r40522", "tree": {"sha": "e6a1cdc10e704951d9a367c7c321e213df085ee0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6a1cdc10e704951d9a367c7c321e213df085ee0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/798bdf70eee560a3ca67a44dbb64397ee709b438", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/798bdf70eee560a3ca67a44dbb64397ee709b438", "html_url": "https://github.com/Rust-GCC/gccrs/commit/798bdf70eee560a3ca67a44dbb64397ee709b438", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/798bdf70eee560a3ca67a44dbb64397ee709b438/comments", "author": {"login": "brkorb", "id": 1242936, "node_id": "MDQ6VXNlcjEyNDI5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1242936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brkorb", "html_url": "https://github.com/brkorb", "followers_url": "https://api.github.com/users/brkorb/followers", "following_url": "https://api.github.com/users/brkorb/following{/other_user}", "gists_url": "https://api.github.com/users/brkorb/gists{/gist_id}", "starred_url": "https://api.github.com/users/brkorb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brkorb/subscriptions", "organizations_url": "https://api.github.com/users/brkorb/orgs", "repos_url": "https://api.github.com/users/brkorb/repos", "events_url": "https://api.github.com/users/brkorb/events{/privacy}", "received_events_url": "https://api.github.com/users/brkorb/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "243baa2871d2f28673f3b17282d0efb278b9684d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/243baa2871d2f28673f3b17282d0efb278b9684d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/243baa2871d2f28673f3b17282d0efb278b9684d"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "c13da94446bdf1c3bbcc6245e3c69a3ae3b3000f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/798bdf70eee560a3ca67a44dbb64397ee709b438/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/798bdf70eee560a3ca67a44dbb64397ee709b438/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=798bdf70eee560a3ca67a44dbb64397ee709b438", "patch": "@@ -1,3 +1,10 @@\n+2001-03-15  Bruce Korb  <bkorb@gnu.org>\n+\n+\t* gcc.c(main): make more rigorous\n+\t* collect2.c(main): guard against ignoring SIGCHLD\n+\t* protoize.c(main): ditto\n+\t* gcc/fixinc/fixincl.c(initialize): ditto\n+\n 2001-03-15  Mark Mitchell  <mark@codesourcery.com>\n \n \t* sdbout.c (sdbout_symbol): Use DECL_RTL_SET_P, SET_DECL_RTL."}, {"sha": "729d62d52ed4de57a0eea9bc0d9cf0d6a030d586", "filename": "gcc/collect2.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/798bdf70eee560a3ca67a44dbb64397ee709b438/gcc%2Fcollect2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/798bdf70eee560a3ca67a44dbb64397ee709b438/gcc%2Fcollect2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcollect2.c?ref=798bdf70eee560a3ca67a44dbb64397ee709b438", "patch": "@@ -29,6 +29,9 @@ Boston, MA 02111-1307, USA.  */\n #include \"config.h\"\n #include \"system.h\"\n #include <signal.h>\n+#if ! defined( SIGCHLD ) && defined( SIGCLD )\n+#  define SIGCHLD SIGCLD\n+#endif\n \n #ifdef vfork /* Autoconf may define this to fork for us. */\n # define VFORK_STRING \"fork\"\n@@ -869,6 +872,12 @@ main (argc, argv)\n   COLLECT2_HOST_INITIALIZATION;\n #endif\n \n+#ifdef SIGCHLD\n+  /* We *MUST* set SIGCHLD to SIG_DFL so that the wait4() call will\n+     receive the signal.  A different setting is inheritable */\n+  signal (SIGCHLD, SIG_DFL);\n+#endif\n+\n /* LC_CTYPE determines the character set used by the terminal so it has be set\n    to output messages correctly.  */\n "}, {"sha": "5f1e363c652adf30fe948d957902581900e52f0a", "filename": "gcc/fixinc/fixincl.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/798bdf70eee560a3ca67a44dbb64397ee709b438/gcc%2Ffixinc%2Ffixincl.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/798bdf70eee560a3ca67a44dbb64397ee709b438/gcc%2Ffixinc%2Ffixincl.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffixinc%2Ffixincl.c?ref=798bdf70eee560a3ca67a44dbb64397ee709b438", "patch": "@@ -29,6 +29,9 @@ Boston, MA 02111-1307, USA.  */\n #endif\n \n #include <signal.h>\n+#if ! defined( SIGCHLD ) && defined( SIGCLD )\n+#  define SIGCHLD SIGCLD\n+#endif\n #ifndef SEPARATE_FIX_PROC\n #include \"server.h\"\n #endif\n@@ -249,6 +252,12 @@ ENV_TABLE\n       exit (EXIT_FAILURE);\n     }\n \n+#ifdef SIGCHLD\n+  /* We *MUST* set SIGCHLD to SIG_DFL so that the wait4() call will\n+     receive the signal.  A different setting is inheritable */\n+  signal (SIGCHLD, SIG_DFL);\n+#endif\n+\n #define _ENV_(v,m,n,t)   { tSCC var[] = n;  \\\n   v = getenv (var); if (m && (v == NULL)) { \\\n   fprintf (stderr, var_not_found, var);     \\"}, {"sha": "967bbba1e7ae135e958dbf3200494c383f4117a3", "filename": "gcc/gcc.c", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/798bdf70eee560a3ca67a44dbb64397ee709b438/gcc%2Fgcc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/798bdf70eee560a3ca67a44dbb64397ee709b438/gcc%2Fgcc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgcc.c?ref=798bdf70eee560a3ca67a44dbb64397ee709b438", "patch": "@@ -73,6 +73,9 @@ compilation is specified by a string called a \"spec\".  */\n #include \"config.h\"\n #include \"system.h\"\n #include <signal.h>\n+#if ! defined( SIGCHLD ) && defined( SIGCLD )\n+#  define SIGCHLD SIGCLD\n+#endif\n #include \"obstack.h\"\n #include \"intl.h\"\n #include \"prefix.h\"\n@@ -5517,9 +5520,11 @@ main (argc, argv)\n   if (signal (SIGPIPE, SIG_IGN) != SIG_IGN)\n     signal (SIGPIPE, fatal_error);\n #endif\n+#ifdef SIGCHLD\n   /* We *MUST* set SIGCHLD to SIG_DFL so that the wait4() call will\n      receive the signal.  A different setting is inheritable */\n   signal (SIGCHLD, SIG_DFL);\n+#endif\n \n   argbuf_length = 10;\n   argbuf = (const char **) xmalloc (argbuf_length * sizeof (const char *));"}, {"sha": "aa03edf233fa0662a3d1ae37736fee602fa75fa0", "filename": "gcc/protoize.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/798bdf70eee560a3ca67a44dbb64397ee709b438/gcc%2Fprotoize.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/798bdf70eee560a3ca67a44dbb64397ee709b438/gcc%2Fprotoize.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprotoize.c?ref=798bdf70eee560a3ca67a44dbb64397ee709b438", "patch": "@@ -25,6 +25,9 @@ Boston, MA 02111-1307, USA.  */\n \n #include <setjmp.h>\n #include <signal.h>\n+#if ! defined( SIGCHLD ) && defined( SIGCLD )\n+#  define SIGCHLD SIGCLD\n+#endif\n #ifdef HAVE_UNISTD_H\n #include <unistd.h>\n #endif\n@@ -4583,6 +4586,12 @@ main (argc, argv)\n #endif\n   pname = pname ? pname+1 : argv[0];\n \n+#ifdef SIGCHLD\n+  /* We *MUST* set SIGCHLD to SIG_DFL so that the wait4() call will\n+     receive the signal.  A different setting is inheritable */\n+  signal (SIGCHLD, SIG_DFL);\n+#endif\n+\n /* LC_CTYPE determines the character set used by the terminal so it has be set\n    to output messages correctly.  */\n "}]}