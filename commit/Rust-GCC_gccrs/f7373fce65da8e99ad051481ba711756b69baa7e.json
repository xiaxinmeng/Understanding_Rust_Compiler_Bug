{"sha": "f7373fce65da8e99ad051481ba711756b69baa7e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjczNzNmY2U2NWRhOGU5OWFkMDUxNDgxYmE3MTE3NTZiNjliYWE3ZQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2018-01-04T13:46:22Z"}, "committer": {"name": "Jonathan Wakely", "email": "redi@gcc.gnu.org", "date": "2018-01-04T13:46:22Z"}, "message": "Avoid redundant calls to filesystem::status_known\n\n\t* include/bits/fs_ops.h (exists(const path&, error_code&))): Only\n\tcheck status_known once.\n\t* include/experimental/bits/fs_ops.h: Likewise.\n\nFrom-SVN: r256243", "tree": {"sha": "b3e7b090c35ae6ab20e8375e6a1ff25bf899bb32", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b3e7b090c35ae6ab20e8375e6a1ff25bf899bb32"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7373fce65da8e99ad051481ba711756b69baa7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7373fce65da8e99ad051481ba711756b69baa7e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7373fce65da8e99ad051481ba711756b69baa7e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7373fce65da8e99ad051481ba711756b69baa7e/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c54af0682ce0881ecde74a3b7502287a53ced378", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c54af0682ce0881ecde74a3b7502287a53ced378", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c54af0682ce0881ecde74a3b7502287a53ced378"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "83361d45188c397bb12dded20cbf8db886ed185f", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7373fce65da8e99ad051481ba711756b69baa7e/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7373fce65da8e99ad051481ba711756b69baa7e/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=f7373fce65da8e99ad051481ba711756b69baa7e", "patch": "@@ -1,5 +1,9 @@\n 2018-01-04  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/bits/fs_ops.h (exists(const path&, error_code&))): Only\n+\tcheck status_known once.\n+\t* include/experimental/bits/fs_ops.h: Likewise.\n+\n \tPR libstdc++/83607\n \t* include/std/functional (__is_byte_like): New trait.\n \t(__is_std_equal_to): Remove."}, {"sha": "e61a1236becc1942373d3213810d07bf9dcea0ba", "filename": "libstdc++-v3/include/bits/fs_ops.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7373fce65da8e99ad051481ba711756b69baa7e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_ops.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7373fce65da8e99ad051481ba711756b69baa7e/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_ops.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Ffs_ops.h?ref=f7373fce65da8e99ad051481ba711756b69baa7e", "patch": "@@ -125,8 +125,11 @@ namespace filesystem\n   {\n     auto __s = status(__p, __ec);\n     if (status_known(__s))\n-      __ec.clear();\n-    return exists(__s);\n+      {\n+\t__ec.clear();\n+\treturn __s.type() != file_type::not_found;\n+      }\n+    return false;\n   }\n \n   uintmax_t file_size(const path& __p);"}, {"sha": "45192b1b34a8123a6d7599679029f9784630422e", "filename": "libstdc++-v3/include/experimental/bits/fs_ops.h", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7373fce65da8e99ad051481ba711756b69baa7e/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_ops.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7373fce65da8e99ad051481ba711756b69baa7e/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_ops.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fexperimental%2Fbits%2Ffs_ops.h?ref=f7373fce65da8e99ad051481ba711756b69baa7e", "patch": "@@ -131,8 +131,11 @@ inline namespace v1\n   {\n     auto __s = status(__p, __ec);\n     if (status_known(__s))\n-      __ec.clear();\n-    return exists(__s);\n+      {\n+\t__ec.clear();\n+\treturn __s.type() != file_type::not_found;\n+      }\n+    return false;\n   }\n \n   uintmax_t file_size(const path& __p);"}]}