{"sha": "a04fb4ed9e495ed444fd9086178c9d8e87b06ccd", "node_id": "C_kwDOANBUbNoAKGEwNGZiNGVkOWU0OTVlZDQ0NGZkOTA4NjE3OGM5ZDhlODdiMDZjY2Q", "commit": {"author": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-02-22T07:43:44Z"}, "committer": {"name": "Thomas Schwinge", "email": "thomas@codesourcery.com", "date": "2023-02-22T07:49:44Z"}, "message": "Merge upstream (dummy), 2023-02-21 \"Rust front-end update\"\n\nIn #1908 'Merge upstream, last commit before 2023-02-21 \"Rust front-end update\"'\nwe merged commit ecc863e85efe259c799515de0c38c2297b0e3bd7 from upstream GCC\nmaster branch.\n\nThis one now merges the 2023-02-21 \"Rust front-end update\", commits\necc863e85efe259c799515de0c38c2297b0e3bd7..ecb409b23b86363fa085ec32e89e1aeda002cb70:\n\n      - 7e7a95880443 gccrs: Fix missing dead code analysis ICE on local enum definition\n      - 708085446189 gccrs: visibility: Rename get_public_vis_type -> get_vis_type\n      - 1e8eb1022009 gccrs: dump: Emit visibility when dumping items\n      - 543ba35905b9 gccrs: Add catch for recusive type queries\n      - d072b4a5164e gccrs: testing: try loop in const function\n      - 980bd25e2560 gccrs: ast: dump assignment and compound assignment expr\n      - aeed747093c2 gccrs: ast: dump If expressions\n      - 00e0684a78a3 gccrs: builtins: Move implementation into source file\n      - 79434fabf762 gccrs: Track DefId on ADT variants\n      - 31b77593edbf gccrs: Ensure uniqueness on Path probe's\n      - a5d3586a9b15 gccrs: Support looking up super traits for trait items\n      - 8d02ef57a691 gccrs: ast: dump: add emit_generic_params helper\n      - 4c807ef70db1 gccrs: ast: dump: add format_{tuple,struct}_field helpers\n      - 0a762d204980 gccrs: ast: dump structs, enums and unions\n      - ab6d8ad3f595 gccrs: intrinsics: Add data prefetching intrinsics\n      - 570415e75c42 gccrs: fix ICE on missing closing paren\n      - a08f265625e5 gccrs: mappings: Add MacroInvocation -> MacroRulesDef mappings\n      - 295cd2650888 gccrs: rust-ast-resolve-item: Add note about resolving glob uses\n      - 2f1035fc91ce gccrs: ast: Add accept_vis() method to `GenericArg`\n      - 522197469179 gccrs: early-name-resolver: Add simple macro name resolution\n      - 13556413e384 gccrs: Support type resolution on super traits on dyn objects\n      - f49e25282413 gccrs: Add mappings for fn_once lang item\n      - 2d7661e76e12 gccrs: Add ABI mappings for rust-call to map to ABI::RUST\n      - 59bee4d4663e gccrs: Method resolution must support multiple candidates\n      - b1510ce0fc77 gccrs: ast: dump: fix extra newline in block without tail\n      - 0a9114c151b8 gccrs: ast: dump: minor fixups to IfExpr formatting\n      - c091fd5f4a2d gccrs: ast: dump: ComparisonExpr and LazyBooleanExpr\n      - f26e9ca3e9aa gccrs: ast: dump: ArrayExpr\n      - d1db46191ea5 gccrs: ast: dump: various simple Exprs\n      - 173f98ae49d8 gccrs: ast: dump: RangeExprs\n      - 74065c000e33 gccrs: Refactor TraitResolver to not require a visitor\n      - acbaadfa46d0 gccrs: ast: dump TypeAlias\n      - 8f0b1526e04c gccrs: Support outer attribute handling on trait items just like normal items\n      - 421494b5929f gccrs: dump: Emit visibility when dumping items\n      - 31150a6366db gccrs: dump: Dump items within modules\n      - 2f16df1b4433 gccrs: dump: Fix module dumping\n      - e535b7b3e385 gccrs: ast: Module: unloaded module and inner attributes\n      - ec28fdb6aad3 gccrs: dump: Dump macro rules definition\n      - 643ec1c253d9 gccrs: Add check for recursive trait cycles\n      - e2647e5e5ad1 gccrs: ast: Refactor ASTFragment -> Fragment class\n      - 68e743090df6 gccrs: rust: Replace uses of ASTFragment -> Fragment\n      - b326cced19e5 gccrs: ast: Improve Fragment API\n      - ed75e142a708 gccrs: Add missing fn_once_output langitem\n      - 870dd9d5d3c5 gccrs: Refactor expression hir lowering into cc file\n      - 9e19f329e523 gccrs: Formatting cleanup in HIR lowering pattern\n      - 977e0e5227d4 gccrs: Add name resolution for closures\n      - 4d021d9e019d gccrs: Refactor method call type checking\n      - 898240946ca2 gccrs: Add closures to lints and error checking\n      - 740a1997228d gccrs: Initial Type resolution for closures\n      - 699e7e862763 gccrs: Closure support at CallExpr\n      - 12e94515f894 gccrs: Add missing name resolution to Function type-path segments\n      - 875f722de5ea gccrs: Add missing hir lowering to function type-path segments\n      - 51d180fcd7e6 gccrs: Add missing type resolution for function type segments\n      - 21d19d2cf606 gccrs: Support Closure calls as generic trait bounds\n      - a8531cd9a82a gccrs: Implement the inline visitor\n      - 6ef1089ec27e gccrs: rust: Allow gccrs to build on x86_64-apple-darwin with clang/libc++\n      - 4d39d3912ffe gccrs: builtins: Rename all bang macro handlers\n      - 782e070374ac gccrs: intrinsics: Add `sorry_handler` intrinsic handler\n      - 514284ecd97f gccrs: constexpr: Add `rust_sorry_at` in places relying on init values\n      - a7c8f7ee3433 gccrs: intrinsics: Add early implementation for atomic_store_{seqcst, relaxed, release}\n      - 1c586a1d1c12 gccrs: intrinsics: Add unchecked operation intrinsics\n      - cb2cf21cf336 gccrs: intrinsics: Use lambdas for wrapping_<op> intrinsics\n      - f4c818c623c0 gccrs: intrinsics: Cleanup error handling around atomic_store_*\n      - 5b5a0ca77179 gccrs: intrinsics: Implement atomic_load intrinsics\n      - aedd97a537cb gccrs: ast: visitor pattern -> overload syntax compatibility layer\n      - 3b5fb3f89b0f gccrs: ast: transform helper methods to visits and add methods to simplify repeated patterns\n      - a56faba96369 gccrs: ast: refer correctly to arguments in docs-strings\n      - 04a16c58e343 gccrs: ast: Dump unit struct\n      - 2fc013036041 gccrs: add lang item \"phantom_data\"\n      - b84222899cac gccrs: add Location to AST::Visibility\n      - 85f69a9b6abd gccrs: typecheck: Fix overzealous `delete` call\n      - 907d11194ed9 gccrs: ast: add visit overload for references\n      - bd2240d30f80 gccrs: ast: Dump where clause and recursively needed nodes\n      - 59fb0747cc2c gccrs: ast: Dump slice type\n      - 140a2aed7e1c gccrs: ast: Dump array type\n      - 971d16cbfade gccrs: ast: Dump raw pointer type\n      - c4c859bff8d0 gccrs: ast: Dump never type\n      - 91409d27d5c5 gccrs: ast: Dump tuple type\n      - ee0166fa1b88 gccrs: ast: Dump inferred type\n      - ae1f6b3a96dd gccrs: ast: Dump bare function type\n      - ca06115eac10 gccrs: ast: Dump impl trait type one bound\n      - 638f65b20832 gccrs: ast: Dump impl trait type\n      - 7ed4a0ebc1d1 gccrs: ast: Dump trait object type\n      - e311e9b7c591 gccrs: ast: Dump parenthesised type\n      - 0bb33cb5741e gccrs: ast: Dump trait object type one bound\n      - 1acb7e02ed82 gccrs: ast: Dump type param type\n      - b8863414eda2 gccrs: ast: Dump generic parameters\n      - ce13edd879da gccrs: ast: Remove unused include in rust-ast-dump.cc\n      - 0e44abb1b509 gccrs: ast: Dump remove /* stmp */ comment to not clutter the dump\n      - 567494f7030b gccrs: ast: Dump no comma after self in fn params if it is the last one\n      - 78c70a50f744 gccrs: Remove default location. Add visibility location to create_* functions\n      - 0ef795c3278e gccrs: Improve lexer dump\n      - 01af669357c4 gccrs: Get rid of make builtin macro\n      - 32a4659c5e40 gccrs: Refactor name resolver to take a Rib::ItemType\n      - f7c258b29118 gccrs: Add closure binding's tracking to name resolution\n      - eb1202224f8e gccrs: Add capture tracking to the type info for closures\n      - 92389b46a96c gccrs: Add initial support for argument capture of closures\n      - e7a69d4533ad gccrs: Fix undefined behaviour issues on macos\n      - 03df9a040c97 gccrs: Skip this debug test case which is failing on the latest mac-os devtools and its only for debug info\n      - 9f455ed820cc gccrs: Cleanup unused parameters to fix the bootstrap build\n      - b9203d82ad27 gccrs: Repair 'gcc/rust/lang.opt' comment\n      - 064bbd0fe104 gccrs: const evaluator: Remove get_nth_callarg\n      - ecb409b23b86 gccrs: add math intrinsics\n\n..., and:\n\n      - e28c5b33b987 Update copyright years.\n\nThis merge is done with 'git merge --strategy=ours', so effectively doesn't\nmerge any changes.  Rationale: those commits are taken from GCC/Rust master\nbranch, and any remaining changes we'd either like to persist, or assess\nindividually, later.", "tree": {"sha": "d0ae875bfcf0f4f788311002eb4b9df32fafbb1e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d0ae875bfcf0f4f788311002eb4b9df32fafbb1e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a04fb4ed9e495ed444fd9086178c9d8e87b06ccd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a04fb4ed9e495ed444fd9086178c9d8e87b06ccd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a04fb4ed9e495ed444fd9086178c9d8e87b06ccd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a04fb4ed9e495ed444fd9086178c9d8e87b06ccd/comments", "author": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tschwinge", "id": 21753, "node_id": "MDQ6VXNlcjIxNzUz", "avatar_url": "https://avatars.githubusercontent.com/u/21753?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tschwinge", "html_url": "https://github.com/tschwinge", "followers_url": "https://api.github.com/users/tschwinge/followers", "following_url": "https://api.github.com/users/tschwinge/following{/other_user}", "gists_url": "https://api.github.com/users/tschwinge/gists{/gist_id}", "starred_url": "https://api.github.com/users/tschwinge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tschwinge/subscriptions", "organizations_url": "https://api.github.com/users/tschwinge/orgs", "repos_url": "https://api.github.com/users/tschwinge/repos", "events_url": "https://api.github.com/users/tschwinge/events{/privacy}", "received_events_url": "https://api.github.com/users/tschwinge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "429e258dbe70b8277f3cef26392503c21a68f374", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/429e258dbe70b8277f3cef26392503c21a68f374", "html_url": "https://github.com/Rust-GCC/gccrs/commit/429e258dbe70b8277f3cef26392503c21a68f374"}, {"sha": "e28c5b33b987374f753b32306b0d3ecf610b64f2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e28c5b33b987374f753b32306b0d3ecf610b64f2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e28c5b33b987374f753b32306b0d3ecf610b64f2"}], "stats": {"total": 0, "additions": 0, "deletions": 0}, "files": []}