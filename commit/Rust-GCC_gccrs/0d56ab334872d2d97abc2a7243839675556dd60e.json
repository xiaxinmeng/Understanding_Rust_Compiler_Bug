{"sha": "0d56ab334872d2d97abc2a7243839675556dd60e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MGQ1NmFiMzM0ODcyZDJkOTdhYmMyYTcyNDM4Mzk2NzU1NTZkZDYwZQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-02-18T14:31:50Z"}, "committer": {"name": "Andrew Pinski", "email": "pinskia@gcc.gnu.org", "date": "2005-02-18T14:31:50Z"}, "message": "re PR middle-end/20030 (Broken arguments access)\n\n2005-02-18  Andrew Pinski  <pinskia@physics.uc.edu>\n\n        PR middle-end/20030\n        * fold-const.c (fold_indirect_ref_1): Use the correct index for zero access,\n        the lower bound of the array type if it exists.\n\nFrom-SVN: r95226", "tree": {"sha": "a156c2a6ddb21fc39e98b05a696c4458d18b216e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a156c2a6ddb21fc39e98b05a696c4458d18b216e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/0d56ab334872d2d97abc2a7243839675556dd60e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d56ab334872d2d97abc2a7243839675556dd60e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d56ab334872d2d97abc2a7243839675556dd60e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d56ab334872d2d97abc2a7243839675556dd60e/comments", "author": null, "committer": null, "parents": [{"sha": "2aabee29e107c927902a9a62b2328f88db17d993", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2aabee29e107c927902a9a62b2328f88db17d993", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2aabee29e107c927902a9a62b2328f88db17d993"}], "stats": {"total": 21, "additions": 19, "deletions": 2}, "files": [{"sha": "97c9e90017c501cb17b421e7618a0a89a03f2083", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d56ab334872d2d97abc2a7243839675556dd60e/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d56ab334872d2d97abc2a7243839675556dd60e/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=0d56ab334872d2d97abc2a7243839675556dd60e", "patch": "@@ -1,3 +1,9 @@\n+2005-02-18  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR middle-end/20030\n+\t* fold-const.c (fold_indirect_ref_1): Use the correct index for zero access,\n+\tthe lower bound of the array type if it exists.\n+\n 2005-02-18  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR c++/20008"}, {"sha": "a04c06177241698207aa1f25b15ae4e19c068681", "filename": "gcc/fold-const.c", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/0d56ab334872d2d97abc2a7243839675556dd60e/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/0d56ab334872d2d97abc2a7243839675556dd60e/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=0d56ab334872d2d97abc2a7243839675556dd60e", "patch": "@@ -11258,15 +11258,26 @@ fold_indirect_ref_1 (tree t)\n       /* *(foo *)&fooarray => fooarray[0] */\n       else if (TREE_CODE (optype) == ARRAY_TYPE\n \t       && lang_hooks.types_compatible_p (type, TREE_TYPE (optype)))\n-\treturn build4 (ARRAY_REF, type, op, size_zero_node, NULL_TREE, NULL_TREE);\n+\t{\n+\t  tree type_domain = TYPE_DOMAIN (optype);\n+\t  tree min_val = size_zero_node;\n+\t  if (type_domain && TYPE_MIN_VALUE (type_domain))\n+\t    min_val = TYPE_MIN_VALUE (type_domain);\n+\t  return build4 (ARRAY_REF, type, op, min_val, NULL_TREE, NULL_TREE);\n+\t}\n     }\n \n   /* *(foo *)fooarrptr => (*fooarrptr)[0] */\n   if (TREE_CODE (TREE_TYPE (subtype)) == ARRAY_TYPE\n       && lang_hooks.types_compatible_p (type, TREE_TYPE (TREE_TYPE (subtype))))\n     {\n+      tree type_domain;\n+      tree min_val = size_zero_node;\n       sub = build_fold_indirect_ref (sub);\n-      return build4 (ARRAY_REF, type, sub, size_zero_node, NULL_TREE, NULL_TREE);\n+      type_domain = TYPE_DOMAIN (TREE_TYPE (sub));\n+      if (type_domain && TYPE_MIN_VALUE (type_domain))\n+\tmin_val = TYPE_MIN_VALUE (type_domain);\n+      return build4 (ARRAY_REF, type, sub, min_val, NULL_TREE, NULL_TREE);\n     }\n \n   return NULL_TREE;"}]}