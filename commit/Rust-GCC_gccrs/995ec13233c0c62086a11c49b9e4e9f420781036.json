{"sha": "995ec13233c0c62086a11c49b9e4e9f420781036", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTk1ZWMxMzIzM2MwYzYyMDg2YTExYzQ5YjllNGU5ZjQyMDc4MTAzNg==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2012-03-14T14:55:11Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2012-03-14T14:55:11Z"}, "message": "re PR middle-end/52584 (Fails to constant fold vector upper/lower half BIT_FIELD_REFs)\n\n2012-03-14  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/52584\n\t* tree-vect-generic.c (type_for_widest_vector_mode): Take\n\telement type instead of mode, use build_vector_type_for_mode\n\tinstead of the langhook, build a vector of proper signedness.\n\t(expand_vector_operations_1): Adjust.\n\nFrom-SVN: r185385", "tree": {"sha": "a764a3f47d0f537ceba2eb92b3b53366dcabc11a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a764a3f47d0f537ceba2eb92b3b53366dcabc11a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/995ec13233c0c62086a11c49b9e4e9f420781036", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/995ec13233c0c62086a11c49b9e4e9f420781036", "html_url": "https://github.com/Rust-GCC/gccrs/commit/995ec13233c0c62086a11c49b9e4e9f420781036", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/995ec13233c0c62086a11c49b9e4e9f420781036/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0ec2c2a9437e1d9de4d6866bb7976b7bbc8e68fe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0ec2c2a9437e1d9de4d6866bb7976b7bbc8e68fe", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0ec2c2a9437e1d9de4d6866bb7976b7bbc8e68fe"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "68bb5b1c2259a2bb8ecd0cc70cd90886e7ce4efd", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/995ec13233c0c62086a11c49b9e4e9f420781036/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/995ec13233c0c62086a11c49b9e4e9f420781036/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=995ec13233c0c62086a11c49b9e4e9f420781036", "patch": "@@ -1,3 +1,11 @@\n+2012-03-14  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/52584\n+\t* tree-vect-generic.c (type_for_widest_vector_mode): Take\n+\telement type instead of mode, use build_vector_type_for_mode\n+\tinstead of the langhook, build a vector of proper signedness.\n+\t(expand_vector_operations_1): Adjust.\n+\n 2012-03-14  Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/52582"}, {"sha": "83f177044fa10e611f8384ea4a626ceb0b4e49f7", "filename": "gcc/tree-vect-generic.c", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/995ec13233c0c62086a11c49b9e4e9f420781036/gcc%2Ftree-vect-generic.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/995ec13233c0c62086a11c49b9e4e9f420781036/gcc%2Ftree-vect-generic.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-generic.c?ref=995ec13233c0c62086a11c49b9e4e9f420781036", "patch": "@@ -471,13 +471,13 @@ expand_vector_operation (gimple_stmt_iterator *gsi, tree type, tree compute_type\n \t\t\t\t    gimple_assign_rhs2 (assign), code);\n }\n \f\n-/* Return a type for the widest vector mode whose components are of mode\n-   INNER_MODE, or NULL_TREE if none is found.\n-   SATP is true for saturating fixed-point types.  */\n+/* Return a type for the widest vector mode whose components are of type\n+   TYPE, or NULL_TREE if none is found.  */\n \n static tree\n-type_for_widest_vector_mode (enum machine_mode inner_mode, optab op, int satp)\n+type_for_widest_vector_mode (tree type, optab op)\n {\n+  enum machine_mode inner_mode = TYPE_MODE (type);\n   enum machine_mode best_mode = VOIDmode, mode;\n   int best_nunits = 0;\n \n@@ -503,13 +503,7 @@ type_for_widest_vector_mode (enum machine_mode inner_mode, optab op, int satp)\n   if (best_mode == VOIDmode)\n     return NULL_TREE;\n   else\n-    {\n-      /* For fixed-point modes, we need to pass satp as the 2nd parameter.  */\n-      if (ALL_FIXED_POINT_MODE_P (best_mode))\n-\treturn lang_hooks.types.type_for_mode (best_mode, satp);\n-\n-      return lang_hooks.types.type_for_mode (best_mode, 1);\n-    }\n+    return build_vector_type_for_mode (type, best_mode);\n }\n \n \n@@ -856,8 +850,7 @@ expand_vector_operations_1 (gimple_stmt_iterator *gsi)\n   if (!VECTOR_MODE_P (TYPE_MODE (type)) && op)\n     {\n       tree vector_compute_type\n-        = type_for_widest_vector_mode (TYPE_MODE (TREE_TYPE (type)), op,\n-\t\t\t\t       TYPE_SATURATING (TREE_TYPE (type)));\n+        = type_for_widest_vector_mode (TREE_TYPE (type), op);\n       if (vector_compute_type != NULL_TREE\n \t  && (TYPE_VECTOR_SUBPARTS (vector_compute_type)\n \t      < TYPE_VECTOR_SUBPARTS (compute_type))"}]}