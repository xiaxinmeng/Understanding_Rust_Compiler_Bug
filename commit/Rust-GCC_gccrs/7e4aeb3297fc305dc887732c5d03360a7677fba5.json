{"sha": "7e4aeb3297fc305dc887732c5d03360a7677fba5", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2U0YWViMzI5N2ZjMzA1ZGM4ODc3MzJjNWQwMzM2MGE3Njc3ZmJhNQ==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2007-09-11T15:07:59Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2007-09-11T15:07:59Z"}, "message": "re PR middle-end/27945 (Packed struct of variable length has wrong size)\n\n        PR middle-end/27945\n        * stor-layout.c (layout_decl): Do pack variable size fields.\n\nFrom-SVN: r128380", "tree": {"sha": "48637fd65b23c6ae1ebddac14a1328f463c9565c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/48637fd65b23c6ae1ebddac14a1328f463c9565c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7e4aeb3297fc305dc887732c5d03360a7677fba5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e4aeb3297fc305dc887732c5d03360a7677fba5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7e4aeb3297fc305dc887732c5d03360a7677fba5", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7e4aeb3297fc305dc887732c5d03360a7677fba5/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "257fafe0c91f84ad5dca36dcdf28980d512f1fec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/257fafe0c91f84ad5dca36dcdf28980d512f1fec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/257fafe0c91f84ad5dca36dcdf28980d512f1fec"}], "stats": {"total": 50, "additions": 39, "deletions": 11}, "files": [{"sha": "ac74a0e54c6e019368c4acb9bc9c04e516b2516e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e4aeb3297fc305dc887732c5d03360a7677fba5/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e4aeb3297fc305dc887732c5d03360a7677fba5/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=7e4aeb3297fc305dc887732c5d03360a7677fba5", "patch": "@@ -1,3 +1,8 @@\n+2007-09-11  Jason Merrill  <jason@redhat.com>\n+\n+\tPR middle-end/27945\n+\t* stor-layout.c (layout_decl): Do pack variable size fields.\t\n+\n 2007-09-11  Maxim Kuvyrkov  <maxim@codesourcery.com>\n \n \t* config/m68k/predicates.md (movsi_const0_operand,"}, {"sha": "f149e68d537753bc1fba24205ef63a17c04aaf96", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e4aeb3297fc305dc887732c5d03360a7677fba5/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e4aeb3297fc305dc887732c5d03360a7677fba5/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=7e4aeb3297fc305dc887732c5d03360a7677fba5", "patch": "@@ -414,18 +414,11 @@ layout_decl (tree decl, unsigned int known_align)\n       else\n \tdo_type_align (type, decl);\n \n-      /* If the field is of variable size, we can't misalign it since we\n-\t have no way to make a temporary to align the result.  But this\n-\t isn't an issue if the decl is not addressable.  Likewise if it\n-\t is of unknown size.\n-\n-\t Note that do_type_align may set DECL_USER_ALIGN, so we need to\n-\t check old_user_align instead.  */\n+      /* If the field is packed and not explicitly aligned, give it the\n+\t minimum alignment.  Note that do_type_align may set\n+\t DECL_USER_ALIGN, so we need to check old_user_align instead.  */\n       if (packed_p\n-\t  && !old_user_align\n-\t  && (DECL_NONADDRESSABLE_P (decl)\n-\t      || DECL_SIZE_UNIT (decl) == 0\n-\t      || TREE_CODE (DECL_SIZE_UNIT (decl)) == INTEGER_CST))\n+\t  && !old_user_align)\n \tDECL_ALIGN (decl) = MIN (DECL_ALIGN (decl), BITS_PER_UNIT);\n \n       if (! packed_p && ! DECL_USER_ALIGN (decl))"}, {"sha": "d5fef5c4ccfb2726c8d0440ac31ab51aeb35ca90", "filename": "gcc/testsuite/gcc.dg/packed-vla.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7e4aeb3297fc305dc887732c5d03360a7677fba5/gcc%2Ftestsuite%2Fgcc.dg%2Fpacked-vla.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7e4aeb3297fc305dc887732c5d03360a7677fba5/gcc%2Ftestsuite%2Fgcc.dg%2Fpacked-vla.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fpacked-vla.c?ref=7e4aeb3297fc305dc887732c5d03360a7677fba5", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do run } */\n+/* { dg-options \"\" } */\n+\n+extern int printf (const char *, ...);\n+extern void abort ();\n+\n+int func(int levels) \n+{\n+  struct bar {\n+    unsigned char\ta;\n+    int\t\t\tb[levels];\n+  } __attribute__ ((__packed__)) bar;\n+\n+  struct foo {\n+    unsigned char\ta;\n+    int\t\t\tb[4];\n+  } __attribute__ ((__packed__)) foo;\n+\n+  printf(\"foo %d\\n\", sizeof(foo));\n+  printf(\"bar %d\\n\", sizeof(bar));\n+\n+  if (sizeof (foo) != sizeof (bar))\n+    abort ();\n+}\n+\n+int main()\n+{\n+  func(4);\n+  return 0;\n+}"}]}