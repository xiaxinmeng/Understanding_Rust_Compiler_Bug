{"sha": "dd98f85c9a6430e028f6e9dc91a1531fb04c843c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZGQ5OGY4NWM5YTY0MzBlMDI4ZjZlOWRjOTFhMTUzMWZiMDRjODQzYw==", "commit": {"author": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1996-10-23T18:49:54Z"}, "committer": {"name": "Jason Merrill", "email": "merrill@gnu.org", "date": "1996-10-23T18:49:54Z"}, "message": "return\n\nFrom-SVN: r13009", "tree": {"sha": "14cc37d51abddf00ce10b86b01746c2aa892132b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/14cc37d51abddf00ce10b86b01746c2aa892132b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/dd98f85c9a6430e028f6e9dc91a1531fb04c843c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd98f85c9a6430e028f6e9dc91a1531fb04c843c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/dd98f85c9a6430e028f6e9dc91a1531fb04c843c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/dd98f85c9a6430e028f6e9dc91a1531fb04c843c/comments", "author": null, "committer": null, "parents": [{"sha": "bbae0daaaa1a1d0a17cdf4262d47b26538cc9ac1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbae0daaaa1a1d0a17cdf4262d47b26538cc9ac1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbae0daaaa1a1d0a17cdf4262d47b26538cc9ac1"}], "stats": {"total": 11, "additions": 8, "deletions": 3}, "files": [{"sha": "0d4f1db2d24379be681c738dfbdd8214ae1c6439", "filename": "gcc/stmt.c", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/dd98f85c9a6430e028f6e9dc91a1531fb04c843c/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/dd98f85c9a6430e028f6e9dc91a1531fb04c843c/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=dd98f85c9a6430e028f6e9dc91a1531fb04c843c", "patch": "@@ -2717,14 +2717,14 @@ expand_return (retval)\n       tree expr;\n \n       do_jump (TREE_OPERAND (retval_rhs, 0), label, NULL_RTX);\n-      expr = build (MODIFY_EXPR, TREE_TYPE (current_function_decl),\n+      expr = build (MODIFY_EXPR, TREE_TYPE (TREE_TYPE (current_function_decl)),\n \t\t    DECL_RESULT (current_function_decl),\n \t\t    TREE_OPERAND (retval_rhs, 1));\n       TREE_SIDE_EFFECTS (expr) = 1;\n       expand_return (expr);\n       emit_label (label);\n \n-      expr = build (MODIFY_EXPR, TREE_TYPE (current_function_decl),\n+      expr = build (MODIFY_EXPR, TREE_TYPE (TREE_TYPE (current_function_decl)),\n \t\t    DECL_RESULT (current_function_decl),\n \t\t    TREE_OPERAND (retval_rhs, 2));\n       TREE_SIDE_EFFECTS (expr) = 1;\n@@ -2913,6 +2913,7 @@ expand_return (retval)\n       result_reg = gen_reg_rtx (result_reg_mode);\n \n       /* Now that the value is in pseudos, copy it to the result reg(s).  */\n+      expand_cleanups_to (NULL_TREE);\n       emit_queue ();\n       free_temp_slots ();\n       for (i = 0; i < n_regs; i++)\n@@ -2930,7 +2931,10 @@ expand_return (retval)\n       && GET_CODE (DECL_RTL (DECL_RESULT (current_function_decl))) == REG)\n     {\n       /* Calculate the return value into a pseudo reg.  */\n-      val = expand_expr (retval_rhs, NULL_RTX, VOIDmode, 0);\n+      val = gen_reg_rtx (DECL_MODE (DECL_RESULT (current_function_decl)));\n+      val = expand_expr (retval_rhs, val, GET_MODE (val), 0);\n+      val = force_not_mem (val);\n+      expand_cleanups_to (NULL_TREE);\n       emit_queue ();\n       /* All temporaries have now been used.  */\n       free_temp_slots ();\n@@ -2942,6 +2946,7 @@ expand_return (retval)\n       /* No cleanups or no hard reg used;\n \t calculate value into hard return reg.  */\n       expand_expr (retval, const0_rtx, VOIDmode, 0);\n+      expand_cleanups_to (NULL_TREE);\n       emit_queue ();\n       free_temp_slots ();\n       expand_value_return (DECL_RTL (DECL_RESULT (current_function_decl)));"}]}