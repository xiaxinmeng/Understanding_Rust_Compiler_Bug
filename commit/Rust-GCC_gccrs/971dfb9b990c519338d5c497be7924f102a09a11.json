{"sha": "971dfb9b990c519338d5c497be7924f102a09a11", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcxZGZiOWI5OTBjNTE5MzM4ZDVjNDk3YmU3OTI0ZjEwMmEwOWExMQ==", "commit": {"author": {"name": "DJ Delorie", "email": "dj@redhat.com", "date": "2006-01-20T21:55:41Z"}, "committer": {"name": "DJ Delorie", "email": "dj@gcc.gnu.org", "date": "2006-01-20T21:55:41Z"}, "message": "varasm.c (initialize_constant_valid_p): Allow pointers initialized from integer constants of lesser precision.\n\n* varasm.c (initialize_constant_valid_p): Allow pointers\ninitialized from integer constants of lesser precision.\n(output_constant): Allow non-int-sized pointer modes to be\ninitialized from integer constants.\n\nFrom-SVN: r110041", "tree": {"sha": "e6b2cd9444ff052613192a8e567a152fa895fa8e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6b2cd9444ff052613192a8e567a152fa895fa8e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/971dfb9b990c519338d5c497be7924f102a09a11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/971dfb9b990c519338d5c497be7924f102a09a11", "html_url": "https://github.com/Rust-GCC/gccrs/commit/971dfb9b990c519338d5c497be7924f102a09a11", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/971dfb9b990c519338d5c497be7924f102a09a11/comments", "author": null, "committer": null, "parents": [{"sha": "b615db81a92dd122cf4cc948cc07f9f6f095388d", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b615db81a92dd122cf4cc948cc07f9f6f095388d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b615db81a92dd122cf4cc948cc07f9f6f095388d"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "d5f45629c569060fbbcecb954cd0689edeea744a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/971dfb9b990c519338d5c497be7924f102a09a11/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/971dfb9b990c519338d5c497be7924f102a09a11/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=971dfb9b990c519338d5c497be7924f102a09a11", "patch": "@@ -1,3 +1,10 @@\n+2006-01-20  DJ Delorie  <dj@redhat.com>\n+\n+\t* varasm.c (initialize_constant_valid_p): Allow pointers\n+\tinitialized from integer constants of lesser precision.\n+\t(output_constant): Allow non-int-sized pointer modes to be\n+\tinitialized from integer constants.\n+\n 2006-01-20  Joseph S. Myers  <joseph@codesourcery.com>\n \n \tPR libstdc++/25524"}, {"sha": "5e42b07d888ad449e5d4ff8218d2d269c00cc5df", "filename": "gcc/varasm.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/971dfb9b990c519338d5c497be7924f102a09a11/gcc%2Fvarasm.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/971dfb9b990c519338d5c497be7924f102a09a11/gcc%2Fvarasm.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fvarasm.c?ref=971dfb9b990c519338d5c497be7924f102a09a11", "patch": "@@ -3553,6 +3553,9 @@ initializer_constant_valid_p (tree value, tree endtype)\n \t     || TREE_CODE (dest_type) == OFFSET_TYPE)\n \t    && INTEGRAL_TYPE_P (src_type))\n \t  {\n+\t    if (TREE_CODE (src) == INTEGER_CST\n+\t\t&& TYPE_PRECISION (dest_type) >= TYPE_PRECISION (src_type))\n+\t      return null_pointer_node;\n \t    if (integer_zerop (src))\n \t      return null_pointer_node;\n \t    else if (TYPE_PRECISION (dest_type) <= TYPE_PRECISION (src_type))\n@@ -3732,6 +3735,11 @@ output_constant (tree exp, unsigned HOST_WIDE_INT size, unsigned int align)\n \t way.  */\n       if (TREE_CODE (exp) == ADDR_EXPR)\n \texp = build1 (ADDR_EXPR, saved_type, TREE_OPERAND (exp, 0));\n+      /* Likewise for constant ints.  */\n+      else if (TREE_CODE (exp) == INTEGER_CST)\n+\texp = build_int_cst_wide (saved_type, TREE_INT_CST_LOW (exp),\n+\t\t\t\t  TREE_INT_CST_HIGH (exp));\n+      \n     }\n \n   /* Eliminate any conversions since we'll be outputting the underlying"}]}