{"sha": "7f5e1dee7c70db3fd4e4dab5f205a30b8373a8de", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6N2Y1ZTFkZWU3YzcwZGIzZmQ0ZTRkYWI1ZjIwNWEzMGI4MzczYThkZQ==", "commit": {"author": {"name": "Javier Miranda", "email": "miranda@adacore.com", "date": "2016-04-20T09:15:47Z"}, "committer": {"name": "Arnaud Charlet", "email": "charlet@gcc.gnu.org", "date": "2016-04-20T09:15:47Z"}, "message": "contracts.adb (Build_Postconditions_Procedure): Code cleanup.\n\n2016-04-20  Javier Miranda  <miranda@adacore.com>\n\n\t* contracts.adb (Build_Postconditions_Procedure): Code cleanup.\n\t* ghost.adb (Os_OK_Ghost_Context.Is_OK_Declaration): Handle the\n\tdeclaration of the internally built _postcondition procedure.\n\nFrom-SVN: r235245", "tree": {"sha": "13abec83bd6ebb1c7de7d19b0380d048682512f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/13abec83bd6ebb1c7de7d19b0380d048682512f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/7f5e1dee7c70db3fd4e4dab5f205a30b8373a8de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5e1dee7c70db3fd4e4dab5f205a30b8373a8de", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7f5e1dee7c70db3fd4e4dab5f205a30b8373a8de", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7f5e1dee7c70db3fd4e4dab5f205a30b8373a8de/comments", "author": {"login": "miranda-adacore", "id": 54413934, "node_id": "MDQ6VXNlcjU0NDEzOTM0", "avatar_url": "https://avatars.githubusercontent.com/u/54413934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/miranda-adacore", "html_url": "https://github.com/miranda-adacore", "followers_url": "https://api.github.com/users/miranda-adacore/followers", "following_url": "https://api.github.com/users/miranda-adacore/following{/other_user}", "gists_url": "https://api.github.com/users/miranda-adacore/gists{/gist_id}", "starred_url": "https://api.github.com/users/miranda-adacore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/miranda-adacore/subscriptions", "organizations_url": "https://api.github.com/users/miranda-adacore/orgs", "repos_url": "https://api.github.com/users/miranda-adacore/repos", "events_url": "https://api.github.com/users/miranda-adacore/events{/privacy}", "received_events_url": "https://api.github.com/users/miranda-adacore/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "31ae1b4629ed84e4dd0ba7ac4f94181ab197041f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31ae1b4629ed84e4dd0ba7ac4f94181ab197041f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31ae1b4629ed84e4dd0ba7ac4f94181ab197041f"}], "stats": {"total": 102, "additions": 57, "deletions": 45}, "files": [{"sha": "db327f32d25e2d9b6d2480cd926f42ea9a812c1e", "filename": "gcc/ada/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e1dee7c70db3fd4e4dab5f205a30b8373a8de/gcc%2Fada%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e1dee7c70db3fd4e4dab5f205a30b8373a8de/gcc%2Fada%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2FChangeLog?ref=7f5e1dee7c70db3fd4e4dab5f205a30b8373a8de", "patch": "@@ -1,3 +1,9 @@\n+2016-04-20  Javier Miranda  <miranda@adacore.com>\n+\n+\t* contracts.adb (Build_Postconditions_Procedure): Code cleanup.\n+\t* ghost.adb (Os_OK_Ghost_Context.Is_OK_Declaration): Handle the\n+\tdeclaration of the internally built _postcondition procedure.\n+\n 2016-04-20  Arnaud Charlet  <charlet@adacore.com>\n \n \t* snames.ads-tmpl (Internal_Attribute_Id, Attribute_Class_Array): Fix"}, {"sha": "af6264cd106356ef769c6e6772ec0f8f5856b832", "filename": "gcc/ada/contracts.adb", "status": "modified", "additions": 33, "deletions": 38, "changes": 71, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e1dee7c70db3fd4e4dab5f205a30b8373a8de/gcc%2Fada%2Fcontracts.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e1dee7c70db3fd4e4dab5f205a30b8373a8de/gcc%2Fada%2Fcontracts.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fcontracts.adb?ref=7f5e1dee7c70db3fd4e4dab5f205a30b8373a8de", "patch": "@@ -1749,8 +1749,7 @@ package body Contracts is\n          end if;\n \n          Proc_Id := Make_Defining_Identifier (Loc, Name_uPostconditions);\n-         Set_Debug_Info_Needed   (Proc_Id);\n-         Set_Postconditions_Proc (Subp_Id, Proc_Id);\n+         Set_Debug_Info_Needed (Proc_Id);\n \n          --  The related subprogram is a function: create the specification of\n          --  parameter _Result.\n@@ -1786,51 +1785,47 @@ package body Contracts is\n          --  the postconditions: this would cause confusing debug info to be\n          --  produced, interfering with coverage-analysis tools.\n \n-         Proc_Bod :=\n-           Make_Subprogram_Body (Loc,\n-             Specification              =>\n+         declare\n+            Proc_Decl    : Node_Id;\n+            Proc_Decl_Id : Entity_Id;\n+            Proc_Spec    : Node_Id;\n+         begin\n+            Proc_Spec :=\n                Make_Procedure_Specification (Loc,\n                  Defining_Unit_Name       => Proc_Id,\n-                 Parameter_Specifications => Params),\n-\n-             Declarations               => Empty_List,\n-             Handled_Statement_Sequence =>\n-               Make_Handled_Sequence_Of_Statements (Loc,\n-                 Statements => Stmts,\n-                 End_Label  => Make_Identifier (Loc, Chars (Proc_Id))));\n-\n-         Insert_Before_First_Source_Declaration (Proc_Bod);\n+                 Parameter_Specifications => Params);\n \n-         --  Force the front-end inlining of _PostConditions when generating\n-         --  C code, since its body may have references to itypes defined in\n-         --  the enclosing subprogram, thus causing problems for the unnested\n-         --  routines. For this purpose its declaration with proper decoration\n-         --  for inlining is needed.\n+            Proc_Decl := Make_Subprogram_Declaration (Loc, Proc_Spec);\n+            Proc_Decl_Id := Defining_Entity (Specification (Proc_Decl));\n+            Set_Postconditions_Proc (Subp_Id, Proc_Decl_Id);\n \n-         if Generate_C_Code then\n-            declare\n-               Proc_Decl    : Node_Id;\n-               Proc_Decl_Id : Entity_Id;\n-\n-            begin\n-               Proc_Decl :=\n-                 Make_Subprogram_Declaration (Loc,\n-                   Specification =>\n-                     Copy_Subprogram_Spec (Specification (Proc_Bod)));\n-               Insert_Before (Proc_Bod, Proc_Decl);\n+            --  Force the front end inlining of _PostConditions when generating\n+            --  C code since its body may have references to itypes defined in\n+            --  the enclosing subprogram, thus causing problems to unnesting\n+            --  routines.\n \n-               Proc_Decl_Id := Defining_Entity (Specification (Proc_Decl));\n+            if Generate_C_Code then\n                Set_Has_Pragma_Inline (Proc_Decl_Id);\n                Set_Has_Pragma_Inline_Always (Proc_Decl_Id);\n                Set_Is_Inlined (Proc_Decl_Id);\n+            end if;\n \n-               Set_Postconditions_Proc (Subp_Id, Proc_Decl_Id);\n-\n-               Analyze (Proc_Decl);\n-            end;\n-         end if;\n-\n-         Analyze (Proc_Bod);\n+            Insert_Before_First_Source_Declaration (Proc_Decl);\n+            Analyze (Proc_Decl);\n+\n+            Proc_Bod :=\n+              Make_Subprogram_Body (Loc,\n+                Specification              =>\n+                  Copy_Subprogram_Spec (Proc_Spec),\n+                Declarations               => Empty_List,\n+                Handled_Statement_Sequence =>\n+                  Make_Handled_Sequence_Of_Statements (Loc,\n+                    Statements => Stmts,\n+                    End_Label  => Make_Identifier (Loc, Chars (Proc_Id))));\n+\n+            Insert_Before_First_Source_Declaration (Proc_Bod);\n+            Analyze (Proc_Bod);\n+         end;\n       end Build_Postconditions_Procedure;\n \n       ----------------------------"}, {"sha": "69865b531c9062b1fc870a227ea14e76f23feded", "filename": "gcc/ada/ghost.adb", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/7f5e1dee7c70db3fd4e4dab5f205a30b8373a8de/gcc%2Fada%2Fghost.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/7f5e1dee7c70db3fd4e4dab5f205a30b8373a8de/gcc%2Fada%2Fghost.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fghost.adb?ref=7f5e1dee7c70db3fd4e4dab5f205a30b8373a8de", "patch": "@@ -254,15 +254,26 @@ package body Ghost is\n             then\n                Subp_Id := Corresponding_Spec (Decl);\n \n-               --  The original context is an expression function that has\n-               --  been split into a spec and a body. The context is OK as\n-               --  long as the initial declaration is Ghost.\n-\n                if Present (Subp_Id) then\n-                  Subp_Decl := Original_Node (Unit_Declaration_Node (Subp_Id));\n \n-                  if Nkind (Subp_Decl) = N_Expression_Function then\n-                     return Is_Subject_To_Ghost (Subp_Decl);\n+                  --  The context is the internally built _postconditions\n+                  --  subprogram, which it is OK because the real check was\n+                  --  done before expansion activities.\n+\n+                  if Chars (Subp_Id) = Name_uPostconditions then\n+                     return True;\n+\n+                  else\n+                     Subp_Decl :=\n+                       Original_Node (Unit_Declaration_Node (Subp_Id));\n+\n+                     --  The original context is an expression function that\n+                     --  has been split into a spec and a body. The context is\n+                     --  OK as long as the initial declaration is Ghost.\n+\n+                     if Nkind (Subp_Decl) = N_Expression_Function then\n+                        return Is_Subject_To_Ghost (Subp_Decl);\n+                     end if;\n                   end if;\n \n                --  Otherwise this is either an internal body or an internal"}]}