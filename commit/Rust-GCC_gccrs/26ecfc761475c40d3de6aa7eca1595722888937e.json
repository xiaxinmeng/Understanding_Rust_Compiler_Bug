{"sha": "26ecfc761475c40d3de6aa7eca1595722888937e", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjZlY2ZjNzYxNDc1YzQwZDNkZTZhYTdlY2ExNTk1NzIyODg4OTM3ZQ==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-10-09T11:29:23Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "1992-10-09T11:29:23Z"}, "message": "(subst, case SUBREG): Don't make a new REG for stack, frame, or arg\npointer.\n\nFrom-SVN: r2381", "tree": {"sha": "0d90eab07162fdfa28e7736d43bc11c87f0234f0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0d90eab07162fdfa28e7736d43bc11c87f0234f0"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/26ecfc761475c40d3de6aa7eca1595722888937e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26ecfc761475c40d3de6aa7eca1595722888937e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/26ecfc761475c40d3de6aa7eca1595722888937e", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/26ecfc761475c40d3de6aa7eca1595722888937e/comments", "author": null, "committer": null, "parents": [{"sha": "d9983d6c52ac3af3045ebff7d52de5f47979ac07", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d9983d6c52ac3af3045ebff7d52de5f47979ac07", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d9983d6c52ac3af3045ebff7d52de5f47979ac07"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "cc7f8f8884db45492485c71fe71e071f437f1a66", "filename": "gcc/combine.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/26ecfc761475c40d3de6aa7eca1595722888937e/gcc%2Fcombine.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/26ecfc761475c40d3de6aa7eca1595722888937e/gcc%2Fcombine.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcombine.c?ref=26ecfc761475c40d3de6aa7eca1595722888937e", "patch": "@@ -2900,10 +2900,16 @@ subst (x, from, to, in_dest, unique_copy)\n \n       /* SUBREG of a hard register => just change the register number\n \t and/or mode.  If the hard register is not valid in that mode,\n-\t suppress this combination.  */\n+\t suppress this combination.  If the hard register is the stack,\n+\t frame, or argument pointer, leave this as a SUBREG.  */\n \n       if (GET_CODE (SUBREG_REG (x)) == REG\n-\t  && REGNO (SUBREG_REG (x)) < FIRST_PSEUDO_REGISTER)\n+\t  && REGNO (SUBREG_REG (x)) < FIRST_PSEUDO_REGISTER\n+\t  && REGNO (SUBREG_REG (x)) != FRAME_POINTER_REGNUM\n+#if FRAME_POINTER_REGNUM != ARG_POINTER_REGNUM\n+\t  && REGNO (SUBREG_REG (x)) != ARG_POINTER_REGNUM\n+#endif\n+\t  && REGNO (SUBREG_REG (x)) != STACK_POINTER_REGNUM)\n \t{\n \t  if (HARD_REGNO_MODE_OK (REGNO (SUBREG_REG (x)) + SUBREG_WORD (x),\n \t\t\t\t  mode))"}]}