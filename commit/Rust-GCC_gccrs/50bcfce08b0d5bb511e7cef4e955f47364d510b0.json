{"sha": "50bcfce08b0d5bb511e7cef4e955f47364d510b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTBiY2ZjZTA4YjBkNWJiNTExZTdjZWY0ZTk1NWY0NzM2NGQ1MTBiMA==", "commit": {"author": {"name": "Bernd Schmidt", "email": "bernds@codesourcery.com", "date": "2012-03-05T15:38:06Z"}, "committer": {"name": "Bernd Schmidt", "email": "bernds@gcc.gnu.org", "date": "2012-03-05T15:38:06Z"}, "message": "genautomata.c (parse_automata_opt): New static function.\n\n\t* genautomata.c (parse_automata_opt): New static function.\n\t(initiate_automaton_gen): Remove all option handling code.  Remove\n\targc argument.  All callers changed.\n\t(main): Call init_rtx_reader_args_cb with the new function as\n\targument.\n\nFrom-SVN: r184936", "tree": {"sha": "f6f3c216374969bd4e83b9f5a1d0e00c84972bfe", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f6f3c216374969bd4e83b9f5a1d0e00c84972bfe"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/50bcfce08b0d5bb511e7cef4e955f47364d510b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50bcfce08b0d5bb511e7cef4e955f47364d510b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/50bcfce08b0d5bb511e7cef4e955f47364d510b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/50bcfce08b0d5bb511e7cef4e955f47364d510b0/comments", "author": null, "committer": null, "parents": [{"sha": "c64f8a47d39bbc1290790fa1acadb92b63be66f4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c64f8a47d39bbc1290790fa1acadb92b63be66f4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c64f8a47d39bbc1290790fa1acadb92b63be66f4"}], "stats": {"total": 81, "additions": 44, "deletions": 37}, "files": [{"sha": "6242143782b284a5742436df20072571f2a211ac", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bcfce08b0d5bb511e7cef4e955f47364d510b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bcfce08b0d5bb511e7cef4e955f47364d510b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=50bcfce08b0d5bb511e7cef4e955f47364d510b0", "patch": "@@ -1,3 +1,11 @@\n+2012-03-05  Bernd Schmidt  <bernds@codesourcery.com>\n+\n+\t* genautomata.c (parse_automata_opt): New static function.\n+\t(initiate_automaton_gen): Remove all option handling code.  Remove\n+\targc argument.  All callers changed.\n+\t(main): Call init_rtx_reader_args_cb with the new function as\n+\targument.\n+\n 2012-03-05  Richard Guenther  <rguenther@suse.de>\n \n \t* cfgexpand.c (gimple_expand_cfg): Free dominator info."}, {"sha": "434b42e0ed3a63cd3fb8a9c08c46e6771e486458", "filename": "gcc/genautomata.c", "status": "modified", "additions": 36, "deletions": 37, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/50bcfce08b0d5bb511e7cef4e955f47364d510b0/gcc%2Fgenautomata.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/50bcfce08b0d5bb511e7cef4e955f47364d510b0/gcc%2Fgenautomata.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgenautomata.c?ref=50bcfce08b0d5bb511e7cef4e955f47364d510b0", "patch": "@@ -9285,46 +9285,45 @@ base_file_name (const char *file_name)\n   return file_name + directory_name_length + 1;\n }\n \n+/* A function passed as argument to init_rtx_reader_args_cb.  It parses the\n+   options available for genautomata.  Returns true if the option was\n+   recognized.  */\n+static bool\n+parse_automata_opt (const char *str)\n+{\n+  if (strcmp (str, NO_MINIMIZATION_OPTION) == 0)\n+    no_minimization_flag = 1;\n+  else if (strcmp (str, TIME_OPTION) == 0)\n+    time_flag = 1;\n+  else if (strcmp (str, STATS_OPTION) == 0)\n+    stats_flag = 1;\n+  else if (strcmp (str, V_OPTION) == 0)\n+    v_flag = 1;\n+  else if (strcmp (str, W_OPTION) == 0)\n+    w_flag = 1;\n+  else if (strcmp (str, NDFA_OPTION) == 0)\n+    ndfa_flag = 1;\n+  else if (strcmp (str, COLLAPSE_OPTION) == 0)\n+    collapse_flag = 1;\n+  else if (strcmp (str, PROGRESS_OPTION) == 0)\n+    progress_flag = 1;\n+  else if (strcmp (str, \"-split\") == 0)\n+    {\n+      fatal (\"option `-split' has not been implemented yet\\n\");\n+      /* split_argument = atoi (argument_vect [i + 1]); */\n+    }\n+  else\n+    return false;\n+\n+  return true;\n+}\n+\n /* The following is top level function to initialize the work of\n    pipeline hazards description translator.  */\n static void\n-initiate_automaton_gen (int argc, char **argv)\n+initiate_automaton_gen (char **argv)\n {\n   const char *base_name;\n-  int i;\n-\n-  ndfa_flag = 0;\n-  split_argument = 0;  /* default value */\n-  no_minimization_flag = 0;\n-  time_flag = 0;\n-  stats_flag = 0;\n-  v_flag = 0;\n-  w_flag = 0;\n-  progress_flag = 0;\n-  for (i = 2; i < argc; i++)\n-    if (strcmp (argv [i], NO_MINIMIZATION_OPTION) == 0)\n-      no_minimization_flag = 1;\n-    else if (strcmp (argv [i], TIME_OPTION) == 0)\n-      time_flag = 1;\n-    else if (strcmp (argv [i], STATS_OPTION) == 0)\n-      stats_flag = 1;\n-    else if (strcmp (argv [i], V_OPTION) == 0)\n-      v_flag = 1;\n-    else if (strcmp (argv [i], W_OPTION) == 0)\n-      w_flag = 1;\n-    else if (strcmp (argv [i], NDFA_OPTION) == 0)\n-      ndfa_flag = 1;\n-    else if (strcmp (argv [i], COLLAPSE_OPTION) == 0)\n-      collapse_flag = 1;\n-    else if (strcmp (argv [i], PROGRESS_OPTION) == 0)\n-      progress_flag = 1;\n-    else if (strcmp (argv [i], \"-split\") == 0)\n-      {\n-\tif (i + 1 >= argc)\n-\t  fatal (\"-split has no argument.\");\n-\tfatal (\"option `-split' has not been implemented yet\\n\");\n-\t/* split_argument = atoi (argument_vect [i + 1]); */\n-      }\n \n   /* Initialize IR storage.  */\n   obstack_init (&irp);\n@@ -9620,10 +9619,10 @@ main (int argc, char **argv)\n \n   progname = \"genautomata\";\n \n-  if (!init_rtx_reader_args (argc, argv))\n+  if (!init_rtx_reader_args_cb (argc, argv, parse_automata_opt))\n     return (FATAL_EXIT_CODE);\n \n-  initiate_automaton_gen (argc, argv);\n+  initiate_automaton_gen (argv);\n   while (1)\n     {\n       int lineno;"}]}