{"sha": "b426200a44956b057905abb52df07e763e7e2185", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YjQyNjIwMGE0NDk1NmIwNTc5MDVhYmI1MmRmMDdlNzYzZTdlMjE4NQ==", "commit": {"author": {"name": "Andrew Pinski", "email": "pinskia@physics.uc.edu", "date": "2005-11-02T21:44:17Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-11-02T21:44:17Z"}, "message": "re PR middle-end/22429 (-1073741824 <= n && n <= 1073741823 is true where n is 1073741824)\n\n        PR 22429\n        * fold-const.c (build_range_check): Use unsigned when signed\n        overflow is undefined also.  If etype is subtype, make sure that\n        the subtraction is in the supertype.\n\nFrom-SVN: r106400", "tree": {"sha": "a8a257208152510defaa462a00320fab1c588c5b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a8a257208152510defaa462a00320fab1c588c5b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b426200a44956b057905abb52df07e763e7e2185", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b426200a44956b057905abb52df07e763e7e2185", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b426200a44956b057905abb52df07e763e7e2185", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b426200a44956b057905abb52df07e763e7e2185/comments", "author": null, "committer": null, "parents": [{"sha": "88a33c3406ca21d94db7ca092f3f65c898e23fda", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88a33c3406ca21d94db7ca092f3f65c898e23fda", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88a33c3406ca21d94db7ca092f3f65c898e23fda"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "64a4297da81a9810cf3c78305f6e10a4c9024a9f", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b426200a44956b057905abb52df07e763e7e2185/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b426200a44956b057905abb52df07e763e7e2185/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b426200a44956b057905abb52df07e763e7e2185", "patch": "@@ -1,3 +1,10 @@\n+2005-11-02  Andrew Pinski  <pinskia@physics.uc.edu>\n+\n+\tPR 22429\n+\t* fold-const.c (build_range_check): Use unsigned when signed\n+\toverflow is undefined also.  If etype is subtype, make sure that\n+\tthe subtraction is in the supertype.\n+\n 2005-11-02  Richard Henderson  <rth@redhat.com>\n \n \tPR target/24178"}, {"sha": "6f829adfa7714a6772cc49a549c14ece905a5460", "filename": "gcc/fold-const.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b426200a44956b057905abb52df07e763e7e2185/gcc%2Ffold-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b426200a44956b057905abb52df07e763e7e2185/gcc%2Ffold-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ffold-const.c?ref=b426200a44956b057905abb52df07e763e7e2185", "patch": "@@ -4014,7 +4014,8 @@ build_range_check (tree type, tree exp, int in_p, tree low, tree high)\n     }\n \n   value = const_binop (MINUS_EXPR, high, low, 0);\n-  if (value != 0 && TREE_OVERFLOW (value) && ! TYPE_UNSIGNED (etype))\n+  if (value != 0 && (!flag_wrapv || TREE_OVERFLOW (value))\n+      && ! TYPE_UNSIGNED (etype))\n     {\n       tree utype, minv, maxv;\n \n@@ -4025,6 +4026,11 @@ build_range_check (tree type, tree exp, int in_p, tree low, tree high)\n \tcase INTEGER_TYPE:\n \tcase ENUMERAL_TYPE:\n \tcase CHAR_TYPE:\n+\t  /* There is no requirement that LOW be within the range of ETYPE\n+\t     if the latter is a subtype.  It must, however, be within the base\n+\t     type of ETYPE.  So be sure we do the subtraction in that type.  */\n+\t  if (TREE_TYPE (etype))\n+\t    etype = TREE_TYPE (etype);\n \t  utype = lang_hooks.types.unsigned_type (etype);\n \t  maxv = fold_convert (utype, TYPE_MAX_VALUE (etype));\n \t  maxv = range_binop (PLUS_EXPR, NULL_TREE, maxv, 1,"}, {"sha": "aa55b6e88acc6fdbbf7520aaf39cbc402b9aa219", "filename": "gcc/testsuite/gcc.c-torture/execute/pr22429.c", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b426200a44956b057905abb52df07e763e7e2185/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr22429.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b426200a44956b057905abb52df07e763e7e2185/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr22429.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr22429.c?ref=b426200a44956b057905abb52df07e763e7e2185", "patch": "@@ -0,0 +1,17 @@\n+extern void abort (void);\n+\n+#define N\t(1 << (sizeof(int) * __CHAR_BIT__ - 2))\n+\n+int f(int n)\n+{\n+  if (-N <= n && n <= N-1)\n+    return 1;\n+  return 0;\n+}\n+\n+int main ()\n+{\n+  if (f (N))\n+    abort ();\n+  return 0;\n+}"}]}