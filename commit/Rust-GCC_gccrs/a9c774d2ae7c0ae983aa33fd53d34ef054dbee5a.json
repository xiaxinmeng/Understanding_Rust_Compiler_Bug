{"sha": "a9c774d2ae7c0ae983aa33fd53d34ef054dbee5a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTljNzc0ZDJhZTdjMGFlOTgzYWEzM2ZkNTNkMzRlZjA1NGRiZWU1YQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-02-22T12:11:27Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-02-22T12:11:27Z"}, "message": "re PR tree-optimization/79666 (wrong code (SIGFPE) at -O2 on x86_64-linux-gnu (in both 32-bit and 64-bit modes))\n\n2017-02-22  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/79666\n\t* tree-vrp.c (extract_range_from_binary_expr_1): Make sure\n\tto not symbolically negate if that may introduce undefined\n\toverflow.\n\n\t* gcc.dg/torture/pr79666.c: New testcase.\n\nFrom-SVN: r245648", "tree": {"sha": "8a5ad3859902304523759d96288cf70c11359104", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8a5ad3859902304523759d96288cf70c11359104"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a9c774d2ae7c0ae983aa33fd53d34ef054dbee5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9c774d2ae7c0ae983aa33fd53d34ef054dbee5a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9c774d2ae7c0ae983aa33fd53d34ef054dbee5a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9c774d2ae7c0ae983aa33fd53d34ef054dbee5a/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8f4f841a3e443d7de88fcb76075eb3003f280bd7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f4f841a3e443d7de88fcb76075eb3003f280bd7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f4f841a3e443d7de88fcb76075eb3003f280bd7"}], "stats": {"total": 68, "additions": 64, "deletions": 4}, "files": [{"sha": "aa7a1cfc7e32f4b3730201c0c2244eb8ea995874", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9c774d2ae7c0ae983aa33fd53d34ef054dbee5a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9c774d2ae7c0ae983aa33fd53d34ef054dbee5a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a9c774d2ae7c0ae983aa33fd53d34ef054dbee5a", "patch": "@@ -1,3 +1,10 @@\n+2017-02-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/79666\n+\t* tree-vrp.c (extract_range_from_binary_expr_1): Make sure\n+\tto not symbolically negate if that may introduce undefined\n+\toverflow.\n+\n 2017-02-22  Martin Liska  <mliska@suse.cz>\n \n \tPR lto/79587"}, {"sha": "af56482b5afbf924fb31b179004a136cb4437915", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9c774d2ae7c0ae983aa33fd53d34ef054dbee5a/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9c774d2ae7c0ae983aa33fd53d34ef054dbee5a/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a9c774d2ae7c0ae983aa33fd53d34ef054dbee5a", "patch": "@@ -1,3 +1,8 @@\n+2017-02-22  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/79666\n+\t* gcc.dg/torture/pr79666.c: New testcase.\n+\n 2017-02-22  Martin Liska  <mliska@suse.cz>\n \n \tPR lto/79587"}, {"sha": "3d83229521ced3089014009a8eb91eea4787ebcc", "filename": "gcc/testsuite/gcc.dg/torture/pr79666.c", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9c774d2ae7c0ae983aa33fd53d34ef054dbee5a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr79666.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9c774d2ae7c0ae983aa33fd53d34ef054dbee5a/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr79666.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr79666.c?ref=a9c774d2ae7c0ae983aa33fd53d34ef054dbee5a", "patch": "@@ -0,0 +1,30 @@\n+/* { dg-do run } */\n+\n+struct\n+{\n+  unsigned a:6;\n+} b;\n+\n+int c, e, g = 7;\n+signed char d, f = 6, h = -10;\n+\n+void fn1 ()\n+{\n+  for (; c < 9; c++)\n+    {\n+      if (f)\n+\tg = ~(~0 / (g ^ e));\n+      b.a = ~0;\n+      d = ~((h ^ b.a) & 132 & (~(f && g) | (d && 1)));\n+      e = ~0;\n+      if (d < 127 || f < 1)\n+\tcontinue;\n+      g = 0;\n+    }\n+}\n+\n+int main ()\n+{\n+  fn1 ();\n+  return 0; \n+}"}, {"sha": "6420041fd1381568df8713cbfe7770ee6e83e99d", "filename": "gcc/tree-vrp.c", "status": "modified", "additions": 22, "deletions": 4, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a9c774d2ae7c0ae983aa33fd53d34ef054dbee5a/gcc%2Ftree-vrp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a9c774d2ae7c0ae983aa33fd53d34ef054dbee5a/gcc%2Ftree-vrp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vrp.c?ref=a9c774d2ae7c0ae983aa33fd53d34ef054dbee5a", "patch": "@@ -2631,8 +2631,17 @@ extract_range_from_binary_expr_1 (value_range *vr,\n \t    min = build_symbolic_expr (expr_type, sym_min_op0,\n \t\t\t\t       neg_min_op0, min);\n \t  else if (sym_min_op1)\n-\t    min = build_symbolic_expr (expr_type, sym_min_op1,\n-\t\t\t\t       neg_min_op1 ^ minus_p, min);\n+\t    {\n+\t      /* We may not negate if that might introduce\n+\t\t undefined overflow.  */\n+\t      if (! minus_p\n+\t\t  || neg_min_op1\n+\t\t  || TYPE_OVERFLOW_WRAPS (expr_type))\n+\t\tmin = build_symbolic_expr (expr_type, sym_min_op1,\n+\t\t\t\t\t   neg_min_op1 ^ minus_p, min);\n+\t      else\n+\t\tmin = NULL_TREE;\n+\t    }\n \n \t  /* Likewise for the upper bound.  */\n \t  if (sym_max_op0 == sym_max_op1)\n@@ -2641,8 +2650,17 @@ extract_range_from_binary_expr_1 (value_range *vr,\n \t    max = build_symbolic_expr (expr_type, sym_max_op0,\n \t\t\t\t       neg_max_op0, max);\n \t  else if (sym_max_op1)\n-\t    max = build_symbolic_expr (expr_type, sym_max_op1,\n-\t\t\t\t       neg_max_op1 ^ minus_p, max);\n+\t    {\n+\t      /* We may not negate if that might introduce\n+\t\t undefined overflow.  */\n+\t      if (! minus_p\n+\t\t  || neg_max_op1\n+\t\t  || TYPE_OVERFLOW_WRAPS (expr_type))\n+\t\tmax = build_symbolic_expr (expr_type, sym_max_op1,\n+\t\t\t\t\t   neg_max_op1 ^ minus_p, max);\n+\t      else\n+\t\tmax = NULL_TREE;\n+\t    }\n \t}\n       else\n \t{"}]}