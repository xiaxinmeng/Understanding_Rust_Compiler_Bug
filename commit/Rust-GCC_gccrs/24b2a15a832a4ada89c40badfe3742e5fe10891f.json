{"sha": "24b2a15a832a4ada89c40badfe3742e5fe10891f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjRiMmExNWE4MzJhNGFkYTg5YzQwYmFkZmUzNzQyZTVmZTEwODkxZg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2012-04-30T21:30:06Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2012-04-30T21:30:06Z"}, "message": "re PR target/53141 (gcc.target/i386/bmi2-mulx32-[12]a.c)\n\n\tPR target/53141\n\t* config/i386/i386.md (*umul<mode><dwi>3_1): Switch places of\n\tconstraints 0 and 1.\n\nFrom-SVN: r187000", "tree": {"sha": "ac81b0674e560c6192861aa4e621000978e96b72", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ac81b0674e560c6192861aa4e621000978e96b72"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/24b2a15a832a4ada89c40badfe3742e5fe10891f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24b2a15a832a4ada89c40badfe3742e5fe10891f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/24b2a15a832a4ada89c40badfe3742e5fe10891f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/24b2a15a832a4ada89c40badfe3742e5fe10891f/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "65d630d474e1beedfc6a06a4857c08f2cf781d5e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/65d630d474e1beedfc6a06a4857c08f2cf781d5e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/65d630d474e1beedfc6a06a4857c08f2cf781d5e"}], "stats": {"total": 39, "additions": 23, "deletions": 16}, "files": [{"sha": "a020376d3c4ff51e653d32bbeaecb87af3ecbd63", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24b2a15a832a4ada89c40badfe3742e5fe10891f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24b2a15a832a4ada89c40badfe3742e5fe10891f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=24b2a15a832a4ada89c40badfe3742e5fe10891f", "patch": "@@ -1,3 +1,9 @@\n+2012-04-30  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/53141\n+\t* config/i386/i386.md (*umul<mode><dwi>3_1): Switch places of\n+\tconstraints 0 and 1.\n+\n 012-04-30  Jan Hubicka  <jh@suse.cz>\n \n \t* cgraph.c (ld_plugin_symbol_resolution_names): Move to symtab.c\n@@ -35,8 +41,7 @@\n \t(varpool_remove_unreferenced_decls): Remove.\n \t* ipa-inline-transform.c (clone_inlined_nodes): Dissolve comdat groups.\n \t(preserve_function_body_p): Make static.\n-\t* toplev.c (compile_file): Update comments;\n-\tupdate.\n+\t* toplev.c (compile_file): Update comments; update.\n \t* cgraphunit.c: Update comments.\n \t(cgraph_expand_all_functions): Rename to ...\n \t(expand_all_functions): ... this one; update.\n@@ -66,11 +71,12 @@\n \t* optimize.c (maybe_clone_body): Use symtab_add_to_same_comdat_group.\n \t* method.c (use_thunk): Likewise.\n \t* semantics.c (maybe_add_lambda_conv_op): Likewise.\n-\t* decl2.c (maybe_emit_vtables): Likewise.\t\n+\t* decl2.c (maybe_emit_vtables): Likewise.\n \t(cp_write_global_declarations): Use finalize_compilation_unit.\n \t* parser.c (cp_parser_asm_definition): Use add_asm_node.\n \t* lto-streamer-in.c (lto_input_toplevel_asms): Use add_asm_node\n-\t* c-decl.c (c_write_global_declarations): Use finalize_compilation_unit.\n+\t* c-decl.c (c_write_global_declarations): Use\n+\tfinalize_compilation_unit.\n \t* langhooks.c (write_global_declarations): Update.\n \t* ipa.c (cgraph_externally_visible_p): Update.\n \t(dissolve_same_comdat_group_list): Remove.\n@@ -84,7 +90,8 @@\n \t(symtab_make_decl_local): New.\n \t* passes.c (register_pass): Update comments.\n \t* c-parser.c (c_parser_asm_definition): Update.\n-\t* varpool.c (varpool_analyze_node): Use fixup_same_cpp_alias_visibility.\n+\t* varpool.c (varpool_analyze_node): Use\n+\tfixup_same_cpp_alias_visibility.\n \t(varpool_remove_unreferenced_decls): Make static.\n \t(varpool_assemble_pending_decls): Rename to ...\n \t(varpool_output_variables): ... this one; call"}, {"sha": "ea77c203b490e732e68f35fa99be986156f6503d", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/24b2a15a832a4ada89c40badfe3742e5fe10891f/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/24b2a15a832a4ada89c40badfe3742e5fe10891f/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=24b2a15a832a4ada89c40badfe3742e5fe10891f", "patch": "@@ -6814,29 +6814,29 @@\n    (set_attr \"mode\" \"SI\")])\n \n (define_insn \"*umul<mode><dwi>3_1\"\n-  [(set (match_operand:<DWI> 0 \"register_operand\" \"=A,r\")\n+  [(set (match_operand:<DWI> 0 \"register_operand\" \"=r,A\")\n \t(mult:<DWI>\n \t  (zero_extend:<DWI>\n-\t    (match_operand:DWIH 1 \"nonimmediate_operand\" \"%0,d\"))\n+\t    (match_operand:DWIH 1 \"nonimmediate_operand\" \"%d,0\"))\n \t  (zero_extend:<DWI>\n \t    (match_operand:DWIH 2 \"nonimmediate_operand\" \"rm,rm\"))))\n    (clobber (reg:CC FLAGS_REG))]\n   \"!(MEM_P (operands[1]) && MEM_P (operands[2]))\"\n   \"@\n-   mul{<imodesuffix>}\\t%2\n-   #\"\n-  [(set_attr \"isa\" \"*,bmi2\")\n-   (set_attr \"type\" \"imul,imulx\")\n-   (set_attr \"length_immediate\" \"0,*\")\n+   #\n+   mul{<imodesuffix>}\\t%2\"\n+  [(set_attr \"isa\" \"bmi2,*\")\n+   (set_attr \"type\" \"imulx,imul\")\n+   (set_attr \"length_immediate\" \"*,0\")\n    (set (attr \"athlon_decode\")\n-\t(cond [(eq_attr \"alternative\" \"0\")\n+\t(cond [(eq_attr \"alternative\" \"1\")\n \t\t (if_then_else (eq_attr \"cpu\" \"athlon\")\n \t\t   (const_string \"vector\")\n \t\t   (const_string \"double\"))]\n \t      (const_string \"*\")))\n-   (set_attr \"amdfam10_decode\" \"double,*\")\n-   (set_attr \"bdver1_decode\" \"direct,*\")\n-   (set_attr \"prefix\" \"orig,vex\")\n+   (set_attr \"amdfam10_decode\" \"*,double\")\n+   (set_attr \"bdver1_decode\" \"*,direct\")\n+   (set_attr \"prefix\" \"vex,orig\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n ;; Convert mul to the mulx pattern to avoid flags dependency."}]}