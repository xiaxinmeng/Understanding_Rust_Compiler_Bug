{"sha": "808e68bbc8deda237cfeb2264816fb0c27500fe0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODA4ZTY4YmJjOGRlZGEyMzdjZmViMjI2NDgxNmZiMGMyNzUwMGZlMA==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2008-03-23T12:07:34Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2008-03-23T12:07:34Z"}, "message": "Revert:\n\n        2008-03-05  H.J. Lu  <hongjiu.lu@intel.com>\n\n        * config/i386/i386-modes.def: Use 4 byte alignment on DI for\n        32bit host.\n\n        2008-03-19  Uros Bizjak  <ubizjak@gmail.com>\n\n        PR target/35496\n        * stor-layout.c (update_alignment_for_field): Set minimum alignment\n        of the underlying type of a MS bitfield layout to the natural\n        alignment of the type.\n\n        2008-03-22  Uros Bizjak  <ubizjak@gmail.com>\n\n        * config/i386/i386.c (assign_386_stack_local): Align DImode slots\n        to their natural alignment to avoid store forwarding stalls.\n\nFrom-SVN: r133461", "tree": {"sha": "e2ba9c107e4221b111a7e826953cf4e0f49ccab2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e2ba9c107e4221b111a7e826953cf4e0f49ccab2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/808e68bbc8deda237cfeb2264816fb0c27500fe0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/808e68bbc8deda237cfeb2264816fb0c27500fe0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/808e68bbc8deda237cfeb2264816fb0c27500fe0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/808e68bbc8deda237cfeb2264816fb0c27500fe0/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "47056774217f18dee4804250e5ec5b1e140fcc73", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47056774217f18dee4804250e5ec5b1e140fcc73", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47056774217f18dee4804250e5ec5b1e140fcc73"}], "stats": {"total": 39, "additions": 21, "deletions": 18}, "files": [{"sha": "27dbcb230c1244da973b91d3d3c46e75287257d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/808e68bbc8deda237cfeb2264816fb0c27500fe0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/808e68bbc8deda237cfeb2264816fb0c27500fe0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=808e68bbc8deda237cfeb2264816fb0c27500fe0", "patch": "@@ -1,3 +1,23 @@\n+2008-03-23  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tRevert:\n+\t2008-03-05  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\t* config/i386/i386-modes.def: Use 4 byte alignment on DI for\n+\t32bit host.\n+\n+\t2008-03-19  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/35496\n+\t* stor-layout.c (update_alignment_for_field): Set minimum alignment\n+\tof the underlying type of a MS bitfield layout to the natural\n+\talignment of the type.\n+\n+\t2008-03-22  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\t* config/i386/i386.c (assign_386_stack_local): Align DImode slots\n+\tto their natural alignment to avoid store forwarding stalls.\n+\n 2008-03-22  Richard Guenther  <rguenther@suse.de>\n \n \t* tree-cfg.c (verify_expr): Recurse again for invariant addresses.\n@@ -2680,7 +2700,6 @@\n 2008-02-17  Uros Bizjak  <ubizjak@gmail.com>\n \n \tRevert:\n-\n \t2008-02-15  Uros Bizjak  <ubizjak@gmail.com>\t\n \t* config/i386/sfp-machine.h (CMPtype): Define as typedef using\n \tlibgcc_cmp_return mode."}, {"sha": "9be749821802bdf53fd6ac47793c2baff8c30573", "filename": "gcc/config/i386/i386-modes.def", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/808e68bbc8deda237cfeb2264816fb0c27500fe0/gcc%2Fconfig%2Fi386%2Fi386-modes.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/808e68bbc8deda237cfeb2264816fb0c27500fe0/gcc%2Fconfig%2Fi386%2Fi386-modes.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386-modes.def?ref=808e68bbc8deda237cfeb2264816fb0c27500fe0", "patch": "@@ -17,10 +17,6 @@ You should have received a copy of the GNU General Public License\n along with GCC; see the file COPYING3.  If not see\n <http://www.gnu.org/licenses/>.  */\n \n-/* In 32bit, DI mode uses 32bit registers.  Only 4 byte alignment\n-   is needed.  */\n-ADJUST_ALIGNMENT (DI, (TARGET_64BIT || TARGET_ALIGN_DOUBLE) ? 8 : 4);\n-\n /* The x86_64 ABI specifies both XF and TF modes.\n    XFmode is __float80 is IEEE extended; TFmode is __float128\n    is IEEE quad.  */"}, {"sha": "8ddfa9f183b28c5df331704dcc57917c48c5bad4", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 1, "deletions": 10, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/808e68bbc8deda237cfeb2264816fb0c27500fe0/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/808e68bbc8deda237cfeb2264816fb0c27500fe0/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=808e68bbc8deda237cfeb2264816fb0c27500fe0", "patch": "@@ -16315,7 +16315,6 @@ rtx\n assign_386_stack_local (enum machine_mode mode, enum ix86_stack_slot n)\n {\n   struct stack_local_entry *s;\n-  int align;\n \n   gcc_assert (n < MAX_386_STACK_LOCALS);\n \n@@ -16326,19 +16325,11 @@ assign_386_stack_local (enum machine_mode mode, enum ix86_stack_slot n)\n     if (s->mode == mode && s->n == n)\n       return copy_rtx (s->rtl);\n \n-  /* Align DImode slots to their natural alignment\n-     to avoid store forwarding stalls.  */\n-  if (mode == DImode\n-      && (GET_MODE_BITSIZE (mode) > GET_MODE_ALIGNMENT (mode)))\n-    align = GET_MODE_BITSIZE (mode);\n-  else\n-    align = 0;\n-\n   s = (struct stack_local_entry *)\n     ggc_alloc (sizeof (struct stack_local_entry));\n   s->n = n;\n   s->mode = mode;\n-  s->rtl = assign_stack_local (mode, GET_MODE_SIZE (mode), align);\n+  s->rtl = assign_stack_local (mode, GET_MODE_SIZE (mode), 0);\n \n   s->next = ix86_stack_locals;\n   ix86_stack_locals = s;"}, {"sha": "67e4c25fbdc25104e25947f5c3d20a6026baf888", "filename": "gcc/stor-layout.c", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/808e68bbc8deda237cfeb2264816fb0c27500fe0/gcc%2Fstor-layout.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/808e68bbc8deda237cfeb2264816fb0c27500fe0/gcc%2Fstor-layout.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstor-layout.c?ref=808e68bbc8deda237cfeb2264816fb0c27500fe0", "patch": "@@ -699,9 +699,6 @@ update_alignment_for_field (record_layout_info rli, tree field,\n \t\t && ! integer_zerop (DECL_SIZE (rli->prev_field)))))\n \t{\n \t  unsigned int type_align = TYPE_ALIGN (type);\n-\t  unsigned int type_size\n-\t    = tree_low_cst (TYPE_SIZE (type), 1);\n-\t  type_align = MAX (type_align, type_size);\n \t  type_align = MAX (type_align, desired_align);\n \t  if (maximum_field_alignment != 0)\n \t    type_align = MIN (type_align, maximum_field_alignment);"}]}