{"sha": "ae0fb1b9fb8a105b01a4bc6a3bdb58cbac5ee741", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWUwZmIxYjlmYjhhMTA1YjAxYTRiYzZhM2JkYjU4Y2JhYzVlZTc0MQ==", "commit": {"author": {"name": "John Wehle", "email": "john@feith.com", "date": "2000-09-16T23:38:20Z"}, "committer": {"name": "John Wehle", "email": "wehle@gcc.gnu.org", "date": "2000-09-16T23:38:20Z"}, "message": "rtlanal.c (rtx_varies_p): Volatile asms vary.\n\n\t* rtlanal.c (rtx_varies_p): Volatile asms vary.\n\t(rtx_unstable_p): Restructure code.  Volatile asms\n\tare unstable.\n\nFrom-SVN: r36462", "tree": {"sha": "bc849c501c82961a4386b8600a081e9731f95c64", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc849c501c82961a4386b8600a081e9731f95c64"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ae0fb1b9fb8a105b01a4bc6a3bdb58cbac5ee741", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae0fb1b9fb8a105b01a4bc6a3bdb58cbac5ee741", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ae0fb1b9fb8a105b01a4bc6a3bdb58cbac5ee741", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ae0fb1b9fb8a105b01a4bc6a3bdb58cbac5ee741/comments", "author": {"login": "jlwehle", "id": 46985578, "node_id": "MDQ6VXNlcjQ2OTg1NTc4", "avatar_url": "https://avatars.githubusercontent.com/u/46985578?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jlwehle", "html_url": "https://github.com/jlwehle", "followers_url": "https://api.github.com/users/jlwehle/followers", "following_url": "https://api.github.com/users/jlwehle/following{/other_user}", "gists_url": "https://api.github.com/users/jlwehle/gists{/gist_id}", "starred_url": "https://api.github.com/users/jlwehle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jlwehle/subscriptions", "organizations_url": "https://api.github.com/users/jlwehle/orgs", "repos_url": "https://api.github.com/users/jlwehle/repos", "events_url": "https://api.github.com/users/jlwehle/events{/privacy}", "received_events_url": "https://api.github.com/users/jlwehle/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "f93dacbdefbd440732896d176447c814d61458bf", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f93dacbdefbd440732896d176447c814d61458bf", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f93dacbdefbd440732896d176447c814d61458bf"}], "stats": {"total": 50, "additions": 39, "deletions": 11}, "files": [{"sha": "1a0ccb9836aea0f5ec55dce47331328b588e1bc3", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae0fb1b9fb8a105b01a4bc6a3bdb58cbac5ee741/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae0fb1b9fb8a105b01a4bc6a3bdb58cbac5ee741/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ae0fb1b9fb8a105b01a4bc6a3bdb58cbac5ee741", "patch": "@@ -1,3 +1,9 @@\n+Sat Sep 16 19:42:50 EDT 2000  John Wehle  (john@feith.com)\n+\n+\t* rtlanal.c (rtx_varies_p): Volatile asms vary.\n+\t(rtx_unstable_p): Restructure code.  Volatile asms\n+\tare unstable.\n+\n Sat Sep 16 14:35:55 2000  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n \n \t* stor-layout.c (place_field): Don't do anything if field or"}, {"sha": "c19b3f5fa9720376988de26381470e28410ff8f2", "filename": "gcc/rtlanal.c", "status": "modified", "additions": 33, "deletions": 11, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ae0fb1b9fb8a105b01a4bc6a3bdb58cbac5ee741/gcc%2Frtlanal.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ae0fb1b9fb8a105b01a4bc6a3bdb58cbac5ee741/gcc%2Frtlanal.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Frtlanal.c?ref=ae0fb1b9fb8a105b01a4bc6a3bdb58cbac5ee741", "patch": "@@ -52,20 +52,36 @@ rtx_unstable_p (x)\n   register int i;\n   register const char *fmt;\n \n-  if (code == MEM)\n-    return ! RTX_UNCHANGING_P (x) || rtx_unstable_p (XEXP (x, 0));\n+  switch (code)\n+    {\n+    case MEM:\n+      return ! RTX_UNCHANGING_P (x) || rtx_unstable_p (XEXP (x, 0));\n \n-  if (code == QUEUED)\n-    return 1;\n+    case QUEUED:\n+      return 1;\n \n-  if (CONSTANT_P (x))\n-    return 0;\n+    case CONST:\n+    case CONST_INT:\n+    case CONST_DOUBLE:\n+    case SYMBOL_REF:\n+    case LABEL_REF:\n+      return 0;\n \n-  if (code == REG)\n-    /* As in rtx_varies_p, we have to use the actual rtx, not reg number.  */\n-    return ! (x == frame_pointer_rtx || x == hard_frame_pointer_rtx\n-\t      || x == arg_pointer_rtx || x == pic_offset_table_rtx\n-\t      || RTX_UNCHANGING_P (x));\n+    case REG:\n+      /* As in rtx_varies_p, we have to use the actual rtx, not reg number.  */\n+      return ! (x == frame_pointer_rtx || x == hard_frame_pointer_rtx\n+\t\t|| x == arg_pointer_rtx || x == pic_offset_table_rtx\n+\t\t|| RTX_UNCHANGING_P (x));\n+\n+    case ASM_OPERANDS:\n+      if (MEM_VOLATILE_P (x))\n+\treturn 1;\n+\n+      /* FALLTHROUGH */\n+\n+    default:\n+      break;\n+    }\n \n   fmt = GET_RTX_FORMAT (code);\n   for (i = GET_RTX_LENGTH (code) - 1; i >= 0; i--)\n@@ -126,6 +142,12 @@ rtx_varies_p (x)\n \t (in fact is it related specifically to operand 1).  */\n       return rtx_varies_p (XEXP (x, 1));\n       \n+    case ASM_OPERANDS:\n+      if (MEM_VOLATILE_P (x))\n+\treturn 1;\n+\n+      /* FALLTHROUGH */\n+\n     default:\n       break;\n     }"}]}