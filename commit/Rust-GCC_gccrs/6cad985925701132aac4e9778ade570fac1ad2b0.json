{"sha": "6cad985925701132aac4e9778ade570fac1ad2b0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmNhZDk4NTkyNTcwMTEzMmFhYzRlOTc3OGFkZTU3MGZhYzFhZDJiMA==", "commit": {"author": {"name": "Kenneth Zadeck", "email": "zadeck@naturalbridge.com", "date": "2007-06-23T16:21:43Z"}, "committer": {"name": "Kenneth Zadeck", "email": "zadeck@gcc.gnu.org", "date": "2007-06-23T16:21:43Z"}, "message": "re PR target/32437 (MIPS: FAIL in gcc.dg/cleanup-[8|9|10|11].c)\n\n2007-06-23  Kenneth Zadeck <zadeck@naturalbridge.com>\n\n\tPR middle-end/32437\n\t*dce.c (deletable_insn_p): Add extra parameter and recurse if insn\n\tis a PARALLEL.\n\t(prescan_insns_for_dce): Add extra parameter.\n\nFrom-SVN: r125972", "tree": {"sha": "51f6a4041d86b6d37cb13be4f21fc17db5847368", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/51f6a4041d86b6d37cb13be4f21fc17db5847368"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6cad985925701132aac4e9778ade570fac1ad2b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cad985925701132aac4e9778ade570fac1ad2b0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6cad985925701132aac4e9778ade570fac1ad2b0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6cad985925701132aac4e9778ade570fac1ad2b0/comments", "author": {"login": "zadeck", "id": 42682403, "node_id": "MDQ6VXNlcjQyNjgyNDAz", "avatar_url": "https://avatars.githubusercontent.com/u/42682403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zadeck", "html_url": "https://github.com/zadeck", "followers_url": "https://api.github.com/users/zadeck/followers", "following_url": "https://api.github.com/users/zadeck/following{/other_user}", "gists_url": "https://api.github.com/users/zadeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/zadeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zadeck/subscriptions", "organizations_url": "https://api.github.com/users/zadeck/orgs", "repos_url": "https://api.github.com/users/zadeck/repos", "events_url": "https://api.github.com/users/zadeck/events{/privacy}", "received_events_url": "https://api.github.com/users/zadeck/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "936d04b695e69a1ea5a22bba68c8e37f086f5e96", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/936d04b695e69a1ea5a22bba68c8e37f086f5e96", "html_url": "https://github.com/Rust-GCC/gccrs/commit/936d04b695e69a1ea5a22bba68c8e37f086f5e96"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "eff5188290e24c8d7d617b0b0c46a8b85d8ec182", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cad985925701132aac4e9778ade570fac1ad2b0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cad985925701132aac4e9778ade570fac1ad2b0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6cad985925701132aac4e9778ade570fac1ad2b0", "patch": "@@ -1,3 +1,10 @@\n+2007-06-23  Kenneth Zadeck <zadeck@naturalbridge.com>\n+\n+\tPR middle-end/32437\n+\t*dce.c (deletable_insn_p): Add extra parameter and recurse if insn\n+\tis a PARALLEL.\n+\t(prescan_insns_for_dce): Add extra parameter.\n+\t\n 2007-06-23  Jan Hubicka  <jh@suse.cz>\n \n \tPR middle-end/31541"}, {"sha": "0252d4d5b2423b535c1e25ec9d83f3667bb7a0a6", "filename": "gcc/dce.c", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6cad985925701132aac4e9778ade570fac1ad2b0/gcc%2Fdce.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6cad985925701132aac4e9778ade570fac1ad2b0/gcc%2Fdce.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdce.c?ref=6cad985925701132aac4e9778ade570fac1ad2b0", "patch": "@@ -58,15 +58,14 @@ static bitmap_obstack dce_tmp_bitmap_obstack;\n \n static sbitmap marked = NULL;\n \n-/* Return true if INSN a normal instruction that can be deleted by the\n-   DCE pass.  */\n+/* Return true if INSN with BODY is a normal instruction that can be\n+   deleted by the DCE pass.  */\n \n static bool\n-deletable_insn_p (rtx insn, bool fast)\n+deletable_insn_p (rtx insn, rtx body, bool fast)\n {\n   rtx x;\n-\n-  switch (GET_CODE (PATTERN (insn)))\n+  switch (GET_CODE (body))\n     {\n     case USE:\n     case PREFETCH:\n@@ -86,7 +85,7 @@ deletable_insn_p (rtx insn, bool fast)\n \t  /* A CLOBBER of a dead pseudo register serves no purpose.\n \t     That is not necessarily true for hard registers until\n \t     after reload.  */\n-\t  x = XEXP (PATTERN (insn), 0);\n+\t  x = XEXP (body, 0);\n \t  return REG_P (x) && (!HARD_REGISTER_P (x) || reload_completed);\n \t}\n       else \n@@ -95,14 +94,23 @@ deletable_insn_p (rtx insn, bool fast)\n \t   never be the target of a use-def chain.  */\n \treturn false;\n \n+    case PARALLEL:\n+      {\n+\tint i;\n+\tfor (i = XVECLEN (body, 0) - 1; i >= 0; i--)\n+\t  if (!deletable_insn_p (insn, XVECEXP (body, 0, i), fast))\n+\t    return false;\n+\treturn true;\n+      }\n+\n     default:\n       if (!NONJUMP_INSN_P (insn))\n \treturn false;\n \n-      if (volatile_insn_p (PATTERN (insn)))\n+      if (volatile_insn_p (body))\n \treturn false;\n \n-      if (flag_non_call_exceptions && may_trap_p (PATTERN (insn)))\n+      if (flag_non_call_exceptions && may_trap_p (body))\n \treturn false;\n \n       return true;\n@@ -361,7 +369,7 @@ prescan_insns_for_dce (bool fast)\n         rtx note = find_reg_note (insn, REG_LIBCALL_ID, NULL_RTX);\n         if (note)\n           mark_libcall (insn, fast);\n-        else if (deletable_insn_p (insn, fast))\n+        else if (deletable_insn_p (insn, PATTERN (insn), fast))\n           mark_nonreg_stores (PATTERN (insn), insn, fast);\n         else\n           mark_insn (insn, fast);"}]}