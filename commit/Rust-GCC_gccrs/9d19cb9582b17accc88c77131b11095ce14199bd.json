{"sha": "9d19cb9582b17accc88c77131b11095ce14199bd", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OWQxOWNiOTU4MmIxN2FjY2M4OGM3NzEzMWIxMTA5NWNlMTQxOTliZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-10-02T12:35:48Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2001-10-02T12:35:48Z"}, "message": "New language: Ada\n\nFrom-SVN: r45947", "tree": {"sha": "d2f132b09e883f8860867ba109d06eee6258ec02", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/d2f132b09e883f8860867ba109d06eee6258ec02"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9d19cb9582b17accc88c77131b11095ce14199bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d19cb9582b17accc88c77131b11095ce14199bd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9d19cb9582b17accc88c77131b11095ce14199bd", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9d19cb9582b17accc88c77131b11095ce14199bd/comments", "author": null, "committer": null, "parents": [{"sha": "14f73b5a12d2789e421e4be0484d28a1c18872bc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/14f73b5a12d2789e421e4be0484d28a1c18872bc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/14f73b5a12d2789e421e4be0484d28a1c18872bc"}], "stats": {"total": 158, "additions": 158, "deletions": 0}, "files": [{"sha": "a6f849e27198026e0623ce5e0bd2462c506919cf", "filename": "gcc/ada/system.ads", "status": "added", "additions": 158, "deletions": 0, "changes": 158, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9d19cb9582b17accc88c77131b11095ce14199bd/gcc%2Fada%2Fsystem.ads", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9d19cb9582b17accc88c77131b11095ce14199bd/gcc%2Fada%2Fsystem.ads", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Fsystem.ads?ref=9d19cb9582b17accc88c77131b11095ce14199bd", "patch": "@@ -0,0 +1,158 @@\n+------------------------------------------------------------------------------\n+--                                                                          --\n+--                        GNAT RUN-TIME COMPONENTS                          --\n+--                                                                          --\n+--                               S Y S T E M                                --\n+--                                                                          --\n+--                                 S p e c                                  --\n+--                            (Compiler Version)                             --\n+--                                                                          --\n+--                            $Revision: 1.48 $\n+--                                                                          --\n+--          Copyright (C) 1992-2001 Free Software Foundation, Inc.          --\n+--                                                                          --\n+-- This specification is derived from the Ada Reference Manual for use with --\n+-- GNAT. The copyright notice above, and the license provisions that follow --\n+-- apply solely to the  contents of the part following the private keyword. --\n+--                                                                          --\n+-- GNAT is free software;  you can  redistribute it  and/or modify it under --\n+-- terms of the  GNU General Public License as published  by the Free Soft- --\n+-- ware  Foundation;  either version 2,  or (at your option) any later ver- --\n+-- sion.  GNAT is distributed in the hope that it will be useful, but WITH- --\n+-- OUT ANY WARRANTY;  without even the  implied warranty of MERCHANTABILITY --\n+-- or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License --\n+-- for  more details.  You should have  received  a copy of the GNU General --\n+-- Public License  distributed with GNAT;  see file COPYING.  If not, write --\n+-- to  the Free Software Foundation,  59 Temple Place - Suite 330,  Boston, --\n+-- MA 02111-1307, USA.                                                      --\n+--                                                                          --\n+-- As a special exception,  if other files  instantiate  generics from this --\n+-- unit, or you link  this unit with other files  to produce an executable, --\n+-- this  unit  does not  by itself cause  the resulting  executable  to  be --\n+-- covered  by the  GNU  General  Public  License.  This exception does not --\n+-- however invalidate  any other reasons why  the executable file  might be --\n+-- covered by the  GNU Public License.                                      --\n+--                                                                          --\n+-- GNAT was originally developed  by the GNAT team at  New York University. --\n+-- It is now maintained by Ada Core Technologies Inc (http://www.gnat.com). --\n+--                                                                          --\n+------------------------------------------------------------------------------\n+\n+package System is\n+pragma Pure (System);\n+--  Note that we take advantage of the implementation permission to\n+--  make this unit Pure instead of Preelaborable, see RM 13.7(36)\n+\n+   type Name is (SYSTEM_NAME_GNAT);\n+   System_Name : constant Name := SYSTEM_NAME_GNAT;\n+\n+   --  System-Dependent Named Numbers\n+\n+   Min_Int               : constant := Long_Long_Integer'First;\n+   Max_Int               : constant := Long_Long_Integer'Last;\n+\n+   Max_Binary_Modulus    : constant := 2 ** Long_Long_Integer'Size;\n+   Max_Nonbinary_Modulus : constant := Integer'Last;\n+\n+   Max_Base_Digits       : constant := Long_Long_Float'Digits;\n+   Max_Digits            : constant := Long_Long_Float'Digits;\n+\n+   Max_Mantissa          : constant := 63;\n+   Fine_Delta            : constant := 2.0 ** (-Max_Mantissa);\n+\n+   Tick                  : constant := Standard'Tick;\n+\n+   --  Storage-related Declarations\n+\n+   type Address is private;\n+   Null_Address : constant Address;\n+\n+   Storage_Unit : constant := Standard'Storage_Unit;\n+   Word_Size    : constant := Standard'Word_Size;\n+   Memory_Size  : constant := 2 ** Standard'Address_Size;\n+\n+   --  Address comparison\n+\n+   function \"<\"  (Left, Right : Address) return Boolean;\n+   function \"<=\" (Left, Right : Address) return Boolean;\n+   function \">\"  (Left, Right : Address) return Boolean;\n+   function \">=\" (Left, Right : Address) return Boolean;\n+   function \"=\"  (Left, Right : Address) return Boolean;\n+\n+   pragma Import (Intrinsic, \"<\");\n+   pragma Import (Intrinsic, \"<=\");\n+   pragma Import (Intrinsic, \">\");\n+   pragma Import (Intrinsic, \">=\");\n+   pragma Import (Intrinsic, \"=\");\n+\n+   --  Other System-Dependent Declarations\n+\n+   type Bit_Order is (High_Order_First, Low_Order_First);\n+   Default_Bit_Order : constant Bit_Order :=\n+                         Bit_Order'Val (Standard'Default_Bit_Order);\n+\n+   --  Priority-related Declarations (RM D.1)\n+\n+   Max_Priority : constant Positive := 30;\n+\n+   Max_Interrupt_Priority : constant Positive := 31;\n+\n+   subtype Any_Priority is Integer\n+     range 0 .. Standard'Max_Interrupt_Priority;\n+\n+   subtype Priority is Any_Priority\n+     range 0 .. Standard'Max_Priority;\n+\n+   --  Functional notation is needed in the following to avoid visibility\n+   --  problems when this package is compiled through rtsfind in the middle\n+   --  of another compilation.\n+\n+   subtype Interrupt_Priority is Any_Priority\n+     range\n+       Standard.\"+\" (Standard'Max_Priority,  1) ..\n+         Standard'Max_Interrupt_Priority;\n+\n+   Default_Priority : constant Priority :=\n+     Standard.\"/\" (Standard.\"+\" (Priority'First, Priority'Last), 2);\n+\n+private\n+\n+   type Address is mod Memory_Size;\n+   Null_Address : constant Address := 0;\n+\n+   --------------------------------------\n+   -- System Implementation Parameters --\n+   --------------------------------------\n+\n+   --  These parameters provide information about the target that is used\n+   --  by the compiler. They are in the private part of System, where they\n+   --  can be accessed using the special circuitry in the Targparm unit\n+   --  whose source should be consulted for more detailed descriptions\n+   --  of the individual switch values.\n+\n+   --  This version of system.ads is used only for building the compiler.\n+   --  We really ought to use the proper target system (i.e. the one that\n+   --  corresponds to the host for the compiler), but that causes as yet\n+   --  unsolved makefile problems. For the most part the setting of these\n+   --  parameters is not too critical for the compiler version (e.g. we\n+   --  do not use floating-point anyway in the compiler).\n+\n+   AAMP                      : constant Boolean := False;\n+   Command_Line_Args         : constant Boolean := True;\n+   Denorm                    : constant Boolean := True;\n+   Frontend_Layout           : constant Boolean := False;\n+   Functions_Return_By_DSP   : constant Boolean := False;\n+   Long_Shifts_Inlined       : constant Boolean := True;\n+   High_Integrity_Mode       : constant Boolean := False;\n+   Machine_Overflows         : constant Boolean := False;\n+   Machine_Rounds            : constant Boolean := True;\n+   OpenVMS                   : constant Boolean := False;\n+   Signed_Zeros              : constant Boolean := True;\n+   Stack_Check_Default       : constant Boolean := False;\n+   Stack_Check_Probes        : constant Boolean := False;\n+   Use_Ada_Main_Program_Name : constant Boolean := False;\n+   ZCX_By_Default            : constant Boolean := False;\n+   GCC_ZCX_Support           : constant Boolean := False;\n+   Front_End_ZCX_Support     : constant Boolean := False;\n+\n+end System;"}]}