{"sha": "88b117b74048dfb8fab4ba46a44da3ac995f597b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODhiMTE3Yjc0MDQ4ZGZiOGZhYjRiYTQ2YTQ0ZGEzYWM5OTVmNTk3Yg==", "commit": {"author": {"name": "Mark Mitchell", "email": "mark@codesourcery.com", "date": "1999-05-16T19:31:51Z"}, "committer": {"name": "Mark Mitchell", "email": "mmitchel@gcc.gnu.org", "date": "1999-05-16T19:31:51Z"}, "message": "cp-tree.h (permanent_p): New function.\n\n\t* cp-tree.h (permanent_p): New function.\n\t* init.c (build_new_1): Use mapcar, not copy_node, to copy a\n\tpossibly complex tree node.\n\t* tree.c (mapcar): Adjust comments, and follow coding standards in\n\tconditional.\n\t(permanent_p): New function.\n\nFrom-SVN: r26951", "tree": {"sha": "819488c8eacd22461ed28f5c6d61d39a67dc28ae", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/819488c8eacd22461ed28f5c6d61d39a67dc28ae"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/88b117b74048dfb8fab4ba46a44da3ac995f597b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88b117b74048dfb8fab4ba46a44da3ac995f597b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/88b117b74048dfb8fab4ba46a44da3ac995f597b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/88b117b74048dfb8fab4ba46a44da3ac995f597b/comments", "author": null, "committer": null, "parents": [{"sha": "31146a60e716aa679e2049091805bc007b057ade", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/31146a60e716aa679e2049091805bc007b057ade", "html_url": "https://github.com/Rust-GCC/gccrs/commit/31146a60e716aa679e2049091805bc007b057ade"}], "stats": {"total": 36, "additions": 29, "deletions": 7}, "files": [{"sha": "2a16a395bc48970589413849c58b3f8f46072901", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88b117b74048dfb8fab4ba46a44da3ac995f597b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88b117b74048dfb8fab4ba46a44da3ac995f597b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=88b117b74048dfb8fab4ba46a44da3ac995f597b", "patch": "@@ -1,3 +1,12 @@\n+1999-05-16  Mark Mitchell  <mark@codesourcery.com>\n+\n+\t* cp-tree.h (permanent_p): New function.\n+\t* init.c (build_new_1): Use mapcar, not copy_node, to copy a\n+\tpossibly complex tree node.\n+\t* tree.c (mapcar): Adjust comments, and follow coding standards in\n+\tconditional.\n+\t(permanent_p): New function.\n+\n 1999-05-13  Per Bothner  <bothner@cygnus.com>\n \n \t* class.c (push_lang_context):  Turn off DECL_IGNORED_P for"}, {"sha": "7c517c0dbdc4d960153fa040927c3645449cd373", "filename": "gcc/cp/cp-tree.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88b117b74048dfb8fab4ba46a44da3ac995f597b/gcc%2Fcp%2Fcp-tree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88b117b74048dfb8fab4ba46a44da3ac995f597b/gcc%2Fcp%2Fcp-tree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fcp-tree.h?ref=88b117b74048dfb8fab4ba46a44da3ac995f597b", "patch": "@@ -3357,6 +3357,7 @@ extern char *lang_printable_name\t\tPROTO((tree, int));\n extern tree build_exception_variant\t\tPROTO((tree, tree));\n extern tree copy_template_template_parm\t\tPROTO((tree));\n extern tree copy_to_permanent\t\t\tPROTO((tree));\n+extern tree permanent_p                         PROTO((tree));\n extern void print_lang_statistics\t\tPROTO((void));\n extern void __eprintf\n \tPROTO((const char *, const char *, unsigned, const char *));"}, {"sha": "7fb203007dea9bc2ee6a41272339b376fac3e902", "filename": "gcc/cp/init.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88b117b74048dfb8fab4ba46a44da3ac995f597b/gcc%2Fcp%2Finit.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88b117b74048dfb8fab4ba46a44da3ac995f597b/gcc%2Fcp%2Finit.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Finit.c?ref=88b117b74048dfb8fab4ba46a44da3ac995f597b", "patch": "@@ -2430,7 +2430,7 @@ build_new_1 (exp)\n \t    }\n \n \t  /* Copy size to the saveable obstack.  */\n-\t  size = copy_node (size);\n+\t  size = mapcar (size, permanent_p);\n \n \t  cleanup = build_op_delete_call (dcode, alloc_node, size, flags, fn);\n "}, {"sha": "bf16fe2a0c5ccc53c51f50a4ddaa8b66c66c2f9f", "filename": "gcc/cp/tree.c", "status": "modified", "additions": 18, "deletions": 6, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/88b117b74048dfb8fab4ba46a44da3ac995f597b/gcc%2Fcp%2Ftree.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/88b117b74048dfb8fab4ba46a44da3ac995f597b/gcc%2Fcp%2Ftree.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Ftree.c?ref=88b117b74048dfb8fab4ba46a44da3ac995f597b", "patch": "@@ -1724,10 +1724,8 @@ no_linkage_check (t)\n }\n \n \n-/* Subroutine of copy_to_permanent\n-\n-   Assuming T is a node build bottom-up, make it all exist on\n-   permanent obstack, if it is not permanent already.  */\n+/* Make copies of all the nodes below T.  If FUNC is non-NULL, call it\n+   for each node.  */\n \n tree\n mapcar (t, func)\n@@ -1739,8 +1737,12 @@ mapcar (t, func)\n   if (t == NULL_TREE)\n     return t;\n \n-  if (tmp = func (t), tmp != NULL_TREE)\n-    return tmp;\n+  if (func) \n+    {\n+      tmp = func (t);\n+      if (tmp)\n+\treturn tmp;\n+    }\n \n   switch (TREE_CODE (t))\n     {\n@@ -1984,6 +1986,16 @@ mapcar (t, func)\n   return NULL_TREE;\n }\n \n+/* Returns T if T is allocated on the permanent obstack, NULL_TREE\n+   otherwise.  */\n+\n+tree\n+permanent_p (t)\n+     tree t;\n+{\n+  return TREE_PERMANENT (t) ? t : NULL_TREE;\n+}\n+\n static tree\n perm_manip (t)\n      tree t;"}]}