{"sha": "3de8da2a3cd70176d3b4b7aa544f71ce5eafcd5f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2RlOGRhMmEzY2Q3MDE3NmQzYjRiN2FhNTQ0ZjcxY2U1ZWFmY2Q1Zg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-02-11T08:09:03Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2007-02-11T08:09:03Z"}, "message": "ChangeLog: Whitespace fixes.\n\n\t* ChangeLog: Whitespace fixes.\n\t* gcc/ChangeLog: Ditto.\n\t* gcc/testsuite/ChangeLog: Ditto.\n\nFrom-SVN: r121815", "tree": {"sha": "646cdf9cfd3bea1a69417dd10b4f28fd1427a1ce", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/646cdf9cfd3bea1a69417dd10b4f28fd1427a1ce"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3de8da2a3cd70176d3b4b7aa544f71ce5eafcd5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3de8da2a3cd70176d3b4b7aa544f71ce5eafcd5f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3de8da2a3cd70176d3b4b7aa544f71ce5eafcd5f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3de8da2a3cd70176d3b4b7aa544f71ce5eafcd5f/comments", "author": null, "committer": null, "parents": [{"sha": "617202ac5e7b3345f2a44831bb2d5dd7afd4ba76", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/617202ac5e7b3345f2a44831bb2d5dd7afd4ba76", "html_url": "https://github.com/Rust-GCC/gccrs/commit/617202ac5e7b3345f2a44831bb2d5dd7afd4ba76"}], "stats": {"total": 241, "additions": 123, "deletions": 118}, "files": [{"sha": "514ba1ad0496c1556fe8618fef6d7a52f8bcf2ea", "filename": "ChangeLog", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3de8da2a3cd70176d3b4b7aa544f71ce5eafcd5f/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3de8da2a3cd70176d3b4b7aa544f71ce5eafcd5f/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=3de8da2a3cd70176d3b4b7aa544f71ce5eafcd5f", "patch": "@@ -33,7 +33,7 @@\n \n 2007-02-07  Roman Zippel <zippel@linux-m68k.org>\n \n-        * MAINTAINERS (Write After Approval): Add myself.\n+\t* MAINTAINERS (Write After Approval): Add myself.\n \n 2007-01-31  Andreas Schwab  <schwab@suse.de>\n \n@@ -42,11 +42,11 @@\n \n 2007-01-30 Andrey Belevantsev <abel@ispras.ru>\n \n-        * MAINTAINERS (Write After Approval): Add myself.\n+\t* MAINTAINERS (Write After Approval): Add myself.\n \n 2007-01-28  David Edelsohn  <edelsohn@gnu.org>\n \n-        * MAINTAINERS (spu port): Add myself.\n+\t* MAINTAINERS (spu port): Add myself.\n \n 2007-01-23  Richard Guenther  <rguenther@suse.de>\n \n@@ -63,35 +63,35 @@\n \n \t* configure.in: Re-enable -Werror for gcc builds.\n \n-2007-01-11 Harsha Jagasia <harsha.jagasia@amd.com>\n+2007-01-11  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n-        * MAINTAINERS (Write After Approval): Add myself.\n+\t* MAINTAINERS (Write After Approval): Add myself.\n \n 2007-01-11  Paolo Bonzini  <bonzini@gnu.org>\n \n \t* configure.in: Change == to = in test command.\n-        * configure: Regenerate.\n+\t* configure: Regenerate.\n \n 2007-01-11  Paolo Bonzini  <bonzini@gnu.org>\n-            Nick Clifton  <nickc@redhat.com>\n-            Kaveh R. Ghazi  <ghazi@caip.rutgets.edu>\n-\n-        * configure.in (build_configargs, host_configargs, target_configargs):\n-        Remove build/host/target parameters.\n-        (host_libs): Add gmp and mpfr.\n-        (GMP tests): Reorganize to allow in-tree GMP/MPFR.\n-        * Makefile.def (gmp, mpfr): New.\n-        (gcc): Remove target.\n-        * Makefile.tpl (build_os, build_vendor, host_os, host_vendor,\n-        target_os, target_vendor): New.\n-        (configure): Add host_alias/target_alias arguments.  Adjust invocations.\n-        * configure: Regenerate.\n-        * Makefile.in: Regenerate.\n+\t    Nick Clifton  <nickc@redhat.com>\n+\t    Kaveh R. Ghazi  <ghazi@caip.rutgets.edu>\n+\n+\t* configure.in (build_configargs, host_configargs, target_configargs):\n+\tRemove build/host/target parameters.\n+\t(host_libs): Add gmp and mpfr.\n+\t(GMP tests): Reorganize to allow in-tree GMP/MPFR.\n+\t* Makefile.def (gmp, mpfr): New.\n+\t(gcc): Remove target.\n+\t* Makefile.tpl (build_os, build_vendor, host_os, host_vendor,\n+\ttarget_os, target_vendor): New.\n+\t(configure): Add host_alias/target_alias arguments.  Adjust invocations.\n+\t* configure: Regenerate.\n+\t* Makefile.in: Regenerate.\n \n 2007-01-11  Matt Fago  <fago@earthlink.net>\n \n \t* configure.in: Try to link to functions only in mpfr 2.2.x\n-        to improve robustness of configure tests.\n+\tto improve robustness of configure tests.\n \t* configure: Regenerate.\n \t\n 2007-01-09  Uros Bizjak  <ubizjak@gmail.com>\n@@ -159,8 +159,8 @@\n \n 2006-12-20  Adam Megacz  <megacz@cs.berkeley.edu>\n \n-        * configure.in: add AC_SUBST for *_FOR_TARGET.\n-        * configure: Regenerate.\n+\t* configure.in: add AC_SUBST for *_FOR_TARGET.\n+\t* configure: Regenerate.\n \n 2006-12-19  Paolo Bonzini  <bonzini@gnu.org>\n \n@@ -387,7 +387,7 @@\n 2006-10-25  Chen Liqin  <liqin@sunnorth.com.cn>\n \n \t* MAINTAINERS (Write After Approval): Move myself to\n-        Write After Approval section.\n+\tWrite After Approval section.\n \n 2006-10-21  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n@@ -826,7 +826,7 @@\n \t* configure: Regenerate.\n \n 2006-02-14  Paolo Bonzini  <bonzini@gnu.org>\n-            Andreas Schwab  <schwab@suse.de>\n+\t    Andreas Schwab  <schwab@suse.de>\n \n \t* configure: Regenerate.\n "}, {"sha": "a0078e384df8c3dd0dcfd9c92eeb90cd3814e51d", "filename": "gcc/ChangeLog", "status": "modified", "additions": 85, "deletions": 80, "changes": 165, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3de8da2a3cd70176d3b4b7aa544f71ce5eafcd5f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3de8da2a3cd70176d3b4b7aa544f71ce5eafcd5f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=3de8da2a3cd70176d3b4b7aa544f71ce5eafcd5f", "patch": "@@ -7,7 +7,9 @@\n \tmemory.  Fail if operand 1 is a non-zero CONST_INT and operand 0\n \tis a hard floating-point register.\n \n-2007-02-10  Richard Henderson  <rth@redhat.com>, Jakub Jelinek  <jakub@redhat.com>, Alexandre Oliva  <aoliva@redhat.com>\n+2007-02-10  Richard Henderson  <rth@redhat.com>\n+\t    Jakub Jelinek  <jakub@redhat.com>\n+\t    Alexandre Oliva  <aoliva@redhat.com>\n \n \t* Makefile.in (libgcc-support, libgcc.mvars): Add emutls.c.\n \t* builtin-types.def (BT_WORD): Make unsigned.\n@@ -51,7 +53,7 @@\n \tmode into account when computing the offset.\n \n 2007-02-09  Stuart Hastings  <stuart@apple.com>\n-\tRichard Henderson  <rth@redhat.com>\n+\t    Richard Henderson  <rth@redhat.com>\n \n \t* gcc/config/i386/i386.h (TARGET_KEEPS_VECTOR_ALIGNED_STACK): New.\n \t* gcc/config/i386/darwin.h: (TARGET_KEEPS_VECTOR_ALIGNED_STACK): New.\n@@ -61,15 +63,18 @@\n \t(floatunsdidf2): Call ix86_expand_convert_uns_didf_sse.\n \t(floatunssisf2): Add call to ix86_expand_convert_uns_sisf_sse.\n \t(floatunssidf2): Allow nonimmediate source.\n-\t* gcc/config/i386/sse.md (movdi_to_sse): New.  (vec_concatv2di): Drop '*'.\n+\t* gcc/config/i386/sse.md (movdi_to_sse): New.\n+\t(vec_concatv2di): Drop '*'.\n \t* gcc/config/i386/i386-protos.h (ix86_expand_convert_uns_si_sse,\n \tix86_expand_convert_uns_didf_sse, ix86_expand_convert_uns_sidf_sse,\n-\tix86_expand_convert_uns_sisf_sse, ix86_expand_convert_sign_didf_sse): New.\n+\tix86_expand_convert_uns_sisf_sse, ix86_expand_convert_sign_didf_sse):\n+\tNew.\n \t* gcc/config/i386/i386.c (ix86_expand_convert_uns_si_sse,\n \tix86_expand_convert_uns_didf_sse, ix86_expand_convert_uns_sidf_sse,\n \tix86_expand_convert_uns_sisf_sse, ix86_expand_convert_sign_didf_sse,\n \tix86_build_const_vector, ix86_expand_vector_init_one_nonzero): New.\n-\t(ix86_build_signbit_mask): Fix decl of v, refactor to call ix86_build_const_vector.\n+\t(ix86_build_signbit_mask): Fix decl of v, refactor to call\n+\tix86_build_const_vector.\n \t(x86_emit_floatuns): Rewrite.\n \n 2007-02-10  Manuel Lopez-Ibanez  <manu@gcc.gnu.org>\n@@ -139,10 +144,10 @@\n \t(ix86_secondary_memory_needed): Don't bypass TARGET_INTER_UNIT_MOVES\n \tfor optimize_size.  Remove SF/DFmode hack.\n \n-2007-02-09  Dwarakanath Rajagopal <dwarak.rajagopal@amd.com>\n+2007-02-09  Dwarakanath Rajagopal  <dwarak.rajagopal@amd.com>\n \n-        * config/i386/driver-i386.c: Turn on -mtune=native for AMDFAM10.\n-        (bit_SSE4a): New.\n+\t* config/i386/driver-i386.c: Turn on -mtune=native for AMDFAM10.\n+\t(bit_SSE4a): New.\n \n 2007-02-09  Nathan Sidwell  <nathan@codesourcery.com>\n \t    Richard Sandiford  <richard@codesourcery.com>\n@@ -178,7 +183,7 @@\n \t(M68K_MLIB_CPU, M68K_MLIB_OPTIONS, M68K_MLIB_DIRNAMES): Define.\n \n 2007-02-09  Zdenek Dvorak  <dvorakz@suse.cz>\n-\tRichard Guenther  <rguenther@suse.de>\n+\t    Richard Guenther  <rguenther@suse.de>\n \n \tPR middle-end/23361\n \t* fold-const.c (fold_comparison): Handle obfuscated comparisons\n@@ -454,16 +459,16 @@\n \n 2007-02-06  Paolo Bonzini  <bonzini@gnu.org>\n \n-        * tree.c (tree_int_map_hash, tree_int_map_eq, tree_int_map_marked_p):\n-        Remove prototypes and make them non-static.\n-        (struct tree_int_map): Remove.\n-        * tree.h (struct tree_int_map): Move here, turning TO into an\n-        unsigned int.\n-        (tree_int_map_hash, tree_int_map_eq, tree_int_map_marked_p): Declare.\n+\t* tree.c (tree_int_map_hash, tree_int_map_eq, tree_int_map_marked_p):\n+\tRemove prototypes and make them non-static.\n+\t(struct tree_int_map): Remove.\n+\t* tree.h (struct tree_int_map): Move here, turning TO into an\n+\tunsigned int.\n+\t(tree_int_map_hash, tree_int_map_eq, tree_int_map_marked_p): Declare.\n \n-        * tree.h (TREE_COMPLEXITY): Remove.\n-        (struct tree_exp): Remove complexity field.\n-        * tree.c (build1_stat): Don't set it.\n+\t* tree.h (TREE_COMPLEXITY): Remove.\n+\t(struct tree_exp): Remove complexity field.\n+\t* tree.c (build1_stat): Don't set it.\n \n 2007-02-06  Dorit Nuzman  <dorit@il.ibm.com>\n \t    Victor Kaplansky  <victork@il.ibm.com>\n@@ -513,7 +518,7 @@\n \t* config/rs6000/darwin-tramp.asm (__trampoline_setup): Call\n \t__enable_execute_stack on completion.\n \n-2007-02-05\tHarsha Jagasia\t<harsha.jagasia@amd.com>\n+2007-02-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n \t* config/i386/athlon.md (athlon_fldxf_k8, athlon_fld_k8,\n \tathlon_fstxf_k8, athlon_fst_k8, athlon_fist, athlon_fmov,\n@@ -524,7 +529,7 @@\n \tathlon_fcmov_load_k8, athlon_fcmov_k8, athlon_fcomi_load_k8,\n \tathlon_fcomi, athlon_fcom_load_k8, athlon_fcom): Added amdfam10.\n \n-2007-02-05\tHarsha Jagasia\t<harsha.jagasia@amd.com>\n+2007-02-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n \t* config/i386/i386.md (x86_sahf_1, cmpfp_i_mixed, cmpfp_i_sse,\n \tcmpfp_i_i387, cmpfp_iu_mixed, cmpfp_iu_sse, cmpfp_iu_387,\n@@ -551,7 +556,7 @@\n \t(athlon_idirect_loadmov, athlon_idirect_movstore): Added\n \tamdfam10.\n \n-2007-02-05\tHarsha Jagasia\t<harsha.jagasia@amd.com>\n+2007-02-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n \t* config/i386/athlon.md (athlon_call_amdfam10,\n \tathlon_pop_amdfam10, athlon_lea_amdfam10): New\n@@ -560,13 +565,13 @@\n \tathlon_imul_k8_DI, athlon_imul_mem_k8, athlon_imul_mem_k8_DI,\n \tathlon_idiv, athlon_idiv_mem, athlon_str): Added amdfam10.\n \n-2007-02-05\tHarsha Jagasia\t<harsha.jagasia@amd.com>\n+2007-02-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n \t* config/i386/athlon.md (athlon_sseld_amdfam10,\n \tathlon_mmxld_amdfam10, athlon_ssest_amdfam10,\n \tathlon_mmxssest_short_amdfam10): New define_insn_reservation.\n \n-2007-02-05\tHarsha Jagasia\t<harsha.jagasia@amd.com>\n+2007-02-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n \t* config/i386/athlon.md (athlon_sseins_amdfam10): New\n \tdefine_insn_reservation.\n@@ -575,7 +580,7 @@\n \t* config/i386/sse.md: Set type attribute to sseins for insertq\n \tand insertqi.\n \n-2007-02-05\tHarsha Jagasia\t<harsha.jagasia@amd.com>\n+2007-02-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n \t* config/i386/athlon.md (sselog_load_amdfam10, sselog_amdfam10,\n \tssecmpvector_load_amdfam10, ssecmpvector_amdfam10,\n@@ -584,7 +589,7 @@\n \tdefine_insn_reservation.\n \t(ssecmp_load_k8, ssecmp, sseadd_load_k8, seadd): Added amdfam10.\n \n-2007-02-05\tHarsha Jagasia\t<harsha.jagasia@amd.com>\n+2007-02-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n \t* config/i386/athlon.md (cvtss2sd_load_amdfam10,\n \tcvtss2sd_amdfam10, cvtps2pd_load_amdfam10, cvtps2pd_amdfam10,\n@@ -600,15 +605,15 @@\n \tcvtpd2dq, cvttpd2dq, cvtsd2ss, cvtss2sd,\n \tcvtpd2ps, cvtps2pd): Added amdfam10_decode attribute.\n \n-2007-02-05\tHarsha Jagasia\t<harsha.jagasia@amd.com>\n+2007-02-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n \t* config/i386/athlon.md (athlon_ssedivvector_amdfam10,\n \tathlon_ssedivvector_load_amdfam10, athlon_ssemulvector_amdfam10,\n \tathlon_ssemulvector_load_amdfam10): New define_insn_reservation.\n \t(athlon_ssediv, athlon_ssediv_load_k8, athlon_ssemul,\n \tathlon_ssemul_load_k8): Added amdfam10.\n \n-2007-02-05\tHarsha Jagasia\t<harsha.jagasia@amd.com>\n+2007-02-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n \t* config/i386/i386.h (TARGET_SSE_UNALIGNED_MOVE_OPTIMAL): New macro.\n \t(x86_sse_unaligned_move_optimal): New variable.\n@@ -618,7 +623,7 @@\n \t(ix86_expand_vector_move_misalign): Add code to generate movupd/movups\n \tfor unaligned vector SSE double/single precision loads for AMDFAM10.\n \n-2007-02-05\tHarsha Jagasia\t<harsha.jagasia@amd.com>\n+2007-02-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n \n \t* config/i386/i386.h (TARGET_AMDFAM10): New macro.\n \t(TARGET_CPU_CPP_BUILTINS): Add code for amdfam10.\n@@ -650,7 +655,7 @@\n \t(ix86_issue_rate): Add PROCESSOR_AMDFAM10.\n \t(ix86_adjust_cost): Add code for amdfam10.\n \n-2007-02-05\tHarsha Jagasia\t<harsha.jagasia@amd.com>\n+2007-02-05  Harsha Jagasia  <harsha.jagasia@amd.com>\n \t\n \t* config/i386/i386.opt: Add new Advanced Bit Manipulation (-mabm)\n \tinstruction set feature flag. Add new (-mpopcnt) flag for popcnt \n@@ -685,7 +690,7 @@\n \textra argument.\n \t* targhooks.h (default_builtin_vectorized_function): Likewise.\n \t* target.h (builtin_vectorized_function): Add argument type\n-        argument.\n+\targument.\n \t* config/i386/i386.c (ix86_builtin_vectorized_function): Handle\n \textra argument, allow vectorizing of lrintf.\n \t* doc/tm.texi (TARGET_VECTORIZE_BUILTIN_VECTORIZED_FUNCTION): Adjust\n@@ -1200,9 +1205,9 @@\n \t* config/rs6000/darwin.h (MD_UNWIND_SUPPORT): Don't define for\n \t64-bit.\n \n-2007-2-01   Seongbae Park <seongbae.park@gmail.com>\n+2007-2-01  Seongbae Park  <seongbae.park@gmail.com>\n \n-        PR inline-asm/28686\n+\tPR inline-asm/28686\n \t* global.c (global_alloc): Add mising initialization of\n \tELIMINABLE_REGSET.\n \n@@ -1377,7 +1382,7 @@\n \tPR c++/24745\n \t* doc/invoke.texi (Wpointer-arith): Document warning.\n \n-2007-01-30  Janis Johnson\n+2007-01-30  Janis Johnson  <janis187@us.ibm.com>\n \n \t* doc/extend.texi (Decimal Floating Types): Remove decfloat.h from\n \tthe list of discrepancies from the draft TR.\n@@ -1889,7 +1894,7 @@\n \t* output.h (default_globalize_decl_name): New.\n \t* varasm.c (asm_output_bss): Use globalize_decl_name instead of\n \tglobalize_label.\n-        (globalize_decl): Ditto.\n+\t(globalize_decl): Ditto.\n \t(default_globalize_decl_name): New.\n \t* config/ia64/ia64.c (ia64_globalize_decl_name): New.\n \t(ia64_handle_version_id_attribute): New.\n@@ -2178,11 +2183,11 @@\n \n 2007-01-20  Jan Hubicka  <jh@suse.cz>\n \n-        * tree-ssa.c (init_tree_ssa): Do not call init_alias_heapvars.\n-        * tree-ssa-structalias.c (compute_points_to_sets): Do call\n-        init_alias_heapvars.\n-        (init_alias_heapvars): Initialize only when not already initialized.\n-        (delete_alias_heapvars): Set heapvar_for_stmt to NULL.\n+\t* tree-ssa.c (init_tree_ssa): Do not call init_alias_heapvars.\n+\t* tree-ssa-structalias.c (compute_points_to_sets): Do call\n+\tinit_alias_heapvars.\n+\t(init_alias_heapvars): Initialize only when not already initialized.\n+\t(delete_alias_heapvars): Set heapvar_for_stmt to NULL.\n \n 2007-01-19  Roger Sayle  <roger@eyesopen.com>\n \n@@ -2203,53 +2208,53 @@\n \n 2007-01-19  Tomas Bily  <tbily@suse.cz>\n \n-        * cgraphunit.c (cgraph_finalize_function): Updating of pid\n-        * tree-profile.c:\n-        (tree_init_ic_make_global_vars): New function\n-        (tree_init_edge_profiler): call of tree_init_ic_make_global_vars\n-        (tree_gen_ic_profiler): New function\n-        (tree_gen_ic_func_profiler): New function\n-        (tree_profiling): Added calling of tree_gen_ic_func_profiler\n-        (tree_profile_hooks): Added hook for indirec/virtual calls\n-        * value-prof.c (tree_find_values_to_profile): New case for\n-        indirect calls\n-        (tree_values_to_profile): Call for determining indirect/virtual\n-        counters\n-        (tree_indirect_call_to_profile): New function\n-        (tree_ic_transform): New function\n-        (tree_ic): New function\n-        (find_func_by_pid): New function\n-        (init_pid_map): New function\n-        (tree_value_profile_transformations): Added check for\n-        indirect/virtual call transformation\n-        * value-prof.h (enum hist_type): New counter type for\n-        indirect/virtual calls\n-        (profile_hooks): Added new hook for profiling indirect/virtual\n-        calls\n-        * profile.c (instrument_values): New case for indirect/virtual\n-        call added\n-        * gcov-io.h (GCOV_LAST_VALUE_COUNTER): Changed to 6\n-        (GCOV_COUNTER_V_INDIR): New counter type\n-        (GCOV_COUNTER_NAMES): New name of counter \"indirect\" added\n-        (GCOV_MERGE_FUNCTIONS): New merge function for indirect/virtual\n-        call added\n-        * cgraph.c: Definition of cgraph_max_pid\n-        (cgraph_create_node): Default init of pid attribute\n-        * cgraph.h: Declaration of cgraph_max_pid\n-        (struct cgraph_node): Added pid attribute\n-        * libgcov.c (__gcov_indirect_call_profiler): New function\n+\t* cgraphunit.c (cgraph_finalize_function): Updating of pid\n+\t* tree-profile.c:\n+\t(tree_init_ic_make_global_vars): New function\n+\t(tree_init_edge_profiler): call of tree_init_ic_make_global_vars\n+\t(tree_gen_ic_profiler): New function\n+\t(tree_gen_ic_func_profiler): New function\n+\t(tree_profiling): Added calling of tree_gen_ic_func_profiler\n+\t(tree_profile_hooks): Added hook for indirec/virtual calls\n+\t* value-prof.c (tree_find_values_to_profile): New case for\n+\tindirect calls\n+\t(tree_values_to_profile): Call for determining indirect/virtual\n+\tcounters\n+\t(tree_indirect_call_to_profile): New function\n+\t(tree_ic_transform): New function\n+\t(tree_ic): New function\n+\t(find_func_by_pid): New function\n+\t(init_pid_map): New function\n+\t(tree_value_profile_transformations): Added check for\n+\tindirect/virtual call transformation\n+\t* value-prof.h (enum hist_type): New counter type for\n+\tindirect/virtual calls\n+\t(profile_hooks): Added new hook for profiling indirect/virtual\n+\tcalls\n+\t* profile.c (instrument_values): New case for indirect/virtual\n+\tcall added\n+\t* gcov-io.h (GCOV_LAST_VALUE_COUNTER): Changed to 6\n+\t(GCOV_COUNTER_V_INDIR): New counter type\n+\t(GCOV_COUNTER_NAMES): New name of counter \"indirect\" added\n+\t(GCOV_MERGE_FUNCTIONS): New merge function for indirect/virtual\n+\tcall added\n+\t* cgraph.c: Definition of cgraph_max_pid\n+\t(cgraph_create_node): Default init of pid attribute\n+\t* cgraph.h: Declaration of cgraph_max_pid\n+\t(struct cgraph_node): Added pid attribute\n+\t* libgcov.c (__gcov_indirect_call_profiler): New function\n \t(__gcov_one_value_profiler_body): New function\n \t(__gcov_one_value_profiler): Body was moved to\n \t__gcov_one_value_profiler_body and calls it\n \n 2007-01-19  Basile Starynkevitch  <basile@starynkevitch.net>\n \n \t* doc/gty.texi (Options): Document the mark_hook option to GTY.\n-        * gengtype.c (write_types_data, write_func_for_structure,\n-        write_types, ggc_wtd, pch_wtd): Add skip_hooks to\n-        write_types_data, ggc_wtd, pch_wtd for processing mark_hook.\n-        (walk_type, write_func_for_structure): Generate the mark_hook if\n-        needed.\n+\t* gengtype.c (write_types_data, write_func_for_structure,\n+\twrite_types, ggc_wtd, pch_wtd): Add skip_hooks to\n+\twrite_types_data, ggc_wtd, pch_wtd for processing mark_hook.\n+\t(walk_type, write_func_for_structure): Generate the mark_hook if\n+\tneeded.\n \n 2007-01-19  Jan Hubicka  <jh@suse.cz>\n \n@@ -3029,7 +3034,7 @@\n \tabout long double soft float.\n \n 2007-01-16  Dorit Nuzman  <dorit@il.ibm.com>\n-            Tehila Meyzels  <tehila@il.ibm.com>\n+\t    Tehila Meyzels  <tehila@il.ibm.com>\n \n \t* tree-vectorizer.h (is_pattern_stmt_p): New.\n \t* tree-vect-analyze.c (vect_determine_vectorization_factor): Fix"}, {"sha": "70106bce9fba68a5efa0dc054fb6376afb6e858f", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3de8da2a3cd70176d3b4b7aa544f71ce5eafcd5f/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3de8da2a3cd70176d3b4b7aa544f71ce5eafcd5f/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=3de8da2a3cd70176d3b4b7aa544f71ce5eafcd5f", "patch": "@@ -176,14 +176,14 @@\n \tPR debug/30189\n \t* gcc.dg/pr30189.c: New test.\n \n-2007-02-05      Dwarakanath Rajagopal <dwarak.rajagopal@amd.com>\n+2007-02-05  Dwarakanath Rajagopal  <dwarak.rajagopal@amd.com>\n \n-        * gcc.dg/i386-cpuid.h: Test whether SSE4A is supported\n-        for running tests.\n-        * gcc.target/i386/sse4a-extract.c: New test.\n-        * gcc.target/i386/sse4a-insert.c: New test.\n-        * gcc.target/i386/sse4a-montsd.c: New test.\n-        * gcc.target/i386/sse4a-montss.c: New test.\n+\t* gcc.dg/i386-cpuid.h: Test whether SSE4A is supported\n+\tfor running tests.\n+\t* gcc.target/i386/sse4a-extract.c: New test.\n+\t* gcc.target/i386/sse4a-insert.c: New test.\n+\t* gcc.target/i386/sse4a-montsd.c: New test.\n+\t* gcc.target/i386/sse4a-montss.c: New test.\n \n 2007-02-05  Richard Guenther  <rguenther@suse.de>\n \n@@ -1784,7 +1784,7 @@\n \t* gcc.target/i386/stack-prot-kernel.c: Skip for x86_64-*-darwin.\n \n 2006-12-03  Richard Henderson  <rth@redhat.com>\n-            Andrew Pinski  <pinskia@gmail.com>\n+\t    Andrew Pinski  <pinskia@gmail.com>\n \n \tPR C++/14329\n \t* g++.dg/warn/unit-1.C: New test.\n@@ -1976,7 +1976,7 @@\n \tfail to link due to relocation overflows on spu-*-*.\n \n 2006-11-27  Michael Matz  <matz@suse.de>\n-            Andreas Krebbel  <krebbel1@de.ibm.com>\n+\t    Andreas Krebbel  <krebbel1@de.ibm.com>\n \n \tPR target/29319\n \t* gcc.dg/20061127-1.c: New testcase.\n@@ -2787,7 +2787,7 @@\n \t* gfortran.dg/pr29067.f: New test.\n \n 2006-10-31  Joseph Myers  <joseph@codesourcery.com>\n-            Richard Sandiford  <richard@codesourcery.com>\n+\t    Richard Sandiford  <richard@codesourcery.com>\n \n \t* lib/target-supports.exp (get_compiler_messages): Append options\n \tas a single list element.\n@@ -3106,9 +3106,9 @@\n \n 2006-10-20  Lee Millward  <lee.millward@codesourcery.com>\n \n-        PR c++/28053\n-        * g++.dg/parse/bitfield1.C: Adjust error markers.\n-        * g++.dg/parse/bitfield2.C: New test.\n+\tPR c++/28053\n+\t* g++.dg/parse/bitfield1.C: Adjust error markers.\n+\t* g++.dg/parse/bitfield2.C: New test.\n \n 2006-10-20  Adam Nemet  <anemet@caviumnetworks.com>\n "}]}