{"sha": "79441eca0eb2fc14297a09ac73fde9a629a72941", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Nzk0NDFlY2EwZWIyZmMxNDI5N2EwOWFjNzNmZGU5YTYyOWE3Mjk0MQ==", "commit": {"author": {"name": "Richard Guenther", "email": "rguenther@suse.de", "date": "2009-09-25T12:12:51Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2009-09-25T12:12:51Z"}, "message": "re PR middle-end/41463 (Another get_ref_base_and_extent problem)\n\n2009-09-25  Richard Guenther  <rguenther@suse.de>\n\n\tPR middle-end/41463\n\t* tree-dfa.c (get_ref_base_and_extent): Fix issue with trailing\n\tarrays again.\n\n\t* gcc.c-torture/execute/pr41463.c: New testcase.\n\nFrom-SVN: r152167", "tree": {"sha": "43b83ef28811075b335e9d3175c045885975e100", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/43b83ef28811075b335e9d3175c045885975e100"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/79441eca0eb2fc14297a09ac73fde9a629a72941", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79441eca0eb2fc14297a09ac73fde9a629a72941", "html_url": "https://github.com/Rust-GCC/gccrs/commit/79441eca0eb2fc14297a09ac73fde9a629a72941", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/79441eca0eb2fc14297a09ac73fde9a629a72941/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6ef41fd08f9e000c1842a2309969fb8bb0f347c9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6ef41fd08f9e000c1842a2309969fb8bb0f347c9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6ef41fd08f9e000c1842a2309969fb8bb0f347c9"}], "stats": {"total": 139, "additions": 99, "deletions": 40}, "files": [{"sha": "331faa147e2c9b30842bfd2ac2b6dbbd27b442e9", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79441eca0eb2fc14297a09ac73fde9a629a72941/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79441eca0eb2fc14297a09ac73fde9a629a72941/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=79441eca0eb2fc14297a09ac73fde9a629a72941", "patch": "@@ -1,3 +1,9 @@\n+2009-09-25  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/41463\n+\t* tree-dfa.c (get_ref_base_and_extent): Fix issue with trailing\n+\tarrays again.\n+\n 2009-09-25  Ben Elliston  <bje@au.ibm.com>\n \n \t* doc/invoke.texi (RS/6000 and PowerPC Options): Add missing comma"}, {"sha": "3ad55f87bdd938016cc2e7972783892a89c7bedf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79441eca0eb2fc14297a09ac73fde9a629a72941/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79441eca0eb2fc14297a09ac73fde9a629a72941/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=79441eca0eb2fc14297a09ac73fde9a629a72941", "patch": "@@ -1,3 +1,8 @@\n+2009-09-25  Richard Guenther  <rguenther@suse.de>\n+\n+\tPR middle-end/41463\n+\t* gcc.c-torture/execute/pr41463.c: New testcase.\n+\n 2009-09-25  Olivier Hainque  <hainque@adacore.com>\n \n \t* gnat.dg/sse_nolib.adb: New testcase."}, {"sha": "c410fe0218be09c812e496053e52bc5fe24d4227", "filename": "gcc/testsuite/gcc.c-torture/execute/pr41463.c", "status": "added", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79441eca0eb2fc14297a09ac73fde9a629a72941/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr41463.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79441eca0eb2fc14297a09ac73fde9a629a72941/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr41463.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fexecute%2Fpr41463.c?ref=79441eca0eb2fc14297a09ac73fde9a629a72941", "patch": "@@ -0,0 +1,56 @@\n+#include <stdlib.h>\n+\n+union tree_node;\n+\n+struct tree_common \n+{\n+  int a;\n+  long b;\n+  long c;\n+  void *p;\n+  int d;\n+};\n+\n+struct other_tree\n+{\n+  struct tree_common common;\n+  int arr[14];\n+};\n+\n+struct tree_vec\n+{\n+  struct tree_common common;\n+  int length;\n+  union tree_node *a[1];\n+};\n+\n+union tree_node\n+{\n+  struct other_tree othr;\n+  struct tree_vec vec;\n+};\n+\n+union tree_node global;\n+\n+union tree_node * __attribute__((noinline))\n+foo (union tree_node *p, int i)\n+{\n+  union tree_node **q;\n+  p->vec.a[i] = (union tree_node *) 0;\n+  q = &p->vec.a[1];\n+  *q = &global;\n+  return p->vec.a[i];\n+}\n+\n+extern void abort (void);\n+extern void *malloc (__SIZE_TYPE__);\n+\n+int\n+main()\n+{\n+  union tree_node *p = malloc (sizeof (union tree_node));\n+  if (foo (p, 1) != &global)\n+    abort ();\n+  return 0;\n+}\n+"}, {"sha": "847a6818b1baf63c9d924721d5b4bc69540a66ab", "filename": "gcc/tree-dfa.c", "status": "modified", "additions": 32, "deletions": 40, "changes": 72, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/79441eca0eb2fc14297a09ac73fde9a629a72941/gcc%2Ftree-dfa.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/79441eca0eb2fc14297a09ac73fde9a629a72941/gcc%2Ftree-dfa.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-dfa.c?ref=79441eca0eb2fc14297a09ac73fde9a629a72941", "patch": "@@ -799,8 +799,35 @@ get_ref_base_and_extent (tree exp, HOST_WIDE_INT *poffset,\n \t      {\n \t\tHOST_WIDE_INT hthis_offset = TREE_INT_CST_LOW (this_offset);\n \t\ththis_offset *= BITS_PER_UNIT;\n+\t\ththis_offset\n+\t\t  += TREE_INT_CST_LOW (DECL_FIELD_BIT_OFFSET (field));\n \t\tbit_offset += hthis_offset;\n-\t\tbit_offset += TREE_INT_CST_LOW (DECL_FIELD_BIT_OFFSET (field));\n+\n+\t\t/* If we had seen a variable array ref already and we just\n+\t\t   referenced the last field of a struct or a union member\n+\t\t   then we have to adjust maxsize by the padding at the end\n+\t\t   of our field.  */\n+\t\tif (seen_variable_array_ref\n+\t\t    && maxsize != -1)\n+\t\t  {\n+\t\t    tree stype = TREE_TYPE (TREE_OPERAND (exp, 0));\n+\t\t    tree next = TREE_CHAIN (field);\n+\t\t    while (next && TREE_CODE (next) != FIELD_DECL)\n+\t\t      next = TREE_CHAIN (next);\n+\t\t    if (!next\n+\t\t\t|| TREE_CODE (stype) != RECORD_TYPE)\n+\t\t      {\n+\t\t\ttree fsize = DECL_SIZE_UNIT (field);\n+\t\t\ttree ssize = TYPE_SIZE_UNIT (stype);\n+\t\t\tif (host_integerp (fsize, 0)\n+\t\t\t    && host_integerp (ssize, 0))\n+\t\t\t  maxsize += ((TREE_INT_CST_LOW (ssize)\n+\t\t\t\t       - TREE_INT_CST_LOW (fsize))\n+\t\t\t\t      * BITS_PER_UNIT - hthis_offset);\n+\t\t\telse\n+\t\t\t  maxsize = -1;\n+\t\t      }\n+\t\t  }\n \t      }\n \t    else\n \t      {\n@@ -845,40 +872,6 @@ get_ref_base_and_extent (tree exp, HOST_WIDE_INT *poffset,\n \t    else\n \t      {\n \t\ttree asize = TYPE_SIZE (TREE_TYPE (TREE_OPERAND (exp, 0)));\n-\t\t/* Get at the array size but include trailing padding if\n-\t\t   the array is the last element of a struct or union.  */\n-\t\tif (maxsize != -1\n-\t\t    && TREE_CODE (TREE_OPERAND (exp, 0)) == COMPONENT_REF)\n-\t\t  {\n-\t\t    tree cref = TREE_OPERAND (exp, 0);\n-\t\t    tree field = TREE_OPERAND (cref, 1);\n-\t\t    tree stype = TREE_TYPE (TREE_OPERAND (cref, 0));\n-\t\t    tree next = TREE_CHAIN (field);\n-\t\t    while (next && TREE_CODE (next) != FIELD_DECL)\n-\t\t      next = TREE_CHAIN (next);\n-\t\t    if (!next\n-\t\t\t|| TREE_CODE (stype) != RECORD_TYPE)\n-\t\t      {\n-\t\t\t/* The size including padding is the size of\n-\t\t\t   the whole structure minus the offset of the\n-\t\t\t   array in it.  */\n-\t\t\ttree field_offset = component_ref_field_offset (cref);\n-\t\t\tif (field_offset\n-\t\t\t    && host_integerp (field_offset, 0)\n-\t\t\t    && host_integerp (TYPE_SIZE_UNIT (stype), 0))\n-\t\t\t  {\n-\t\t\t    unsigned HOST_WIDE_INT as;\n-\t\t\t    as = (((TREE_INT_CST_LOW (TYPE_SIZE_UNIT (stype))\n-\t\t\t\t    - TREE_INT_CST_LOW (field_offset))\n-\t\t\t\t   * BITS_PER_UNIT)\n-\t\t\t\t  - TREE_INT_CST_LOW\n-\t\t\t\t      (DECL_FIELD_BIT_OFFSET (field)));\n-\t\t\t    asize = build_int_cstu (sizetype, as);\n-\t\t\t  }\n-\t\t\telse\n-\t\t\t  asize = NULL_TREE;\n-\t\t      }\n-\t\t  }\n \t\t/* We need to adjust maxsize to the whole array bitsize.\n \t\t   But we can subtract any constant offset seen so far,\n \t\t   because that would get us outside of the array otherwise.  */\n@@ -902,7 +895,6 @@ get_ref_base_and_extent (tree exp, HOST_WIDE_INT *poffset,\n \t  break;\n \n \tcase VIEW_CONVERT_EXPR:\n-\t  /* ???  We probably should give up here and bail out.  */\n \t  break;\n \n \tdefault:\n@@ -925,10 +917,10 @@ get_ref_base_and_extent (tree exp, HOST_WIDE_INT *poffset,\n      that is there for alignment purposes.  */\n \n   if (seen_variable_array_ref\n-      && (maxsize != -1\n-\t  && host_integerp (TYPE_SIZE (TREE_TYPE (exp)), 1)\n-\t  && bit_offset + maxsize\n-\t  == (signed) TREE_INT_CST_LOW (TYPE_SIZE (TREE_TYPE (exp)))))\n+      && maxsize != -1\n+      && (!host_integerp (TYPE_SIZE (TREE_TYPE (exp)), 1)\n+\t  || (bit_offset + maxsize\n+\t      == (signed) TREE_INT_CST_LOW (TYPE_SIZE (TREE_TYPE (exp))))))\n     maxsize = -1;\n \n   /* ???  Due to negative offsets in ARRAY_REF we can end up with"}]}