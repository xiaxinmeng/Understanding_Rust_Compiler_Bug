{"sha": "951d7d1319923e5188df3224a9f79ee5804bac80", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUxZDdkMTMxOTkyM2U1MTg4ZGYzMjI0YTlmNzllZTU4MDRiYWM4MA==", "commit": {"author": {"name": "Eric Botcazou", "email": "ebotcazou@adacore.com", "date": "2020-11-23T10:39:05Z"}, "committer": {"name": "Pierre-Marie de Rodat", "email": "derodat@adacore.com", "date": "2020-12-14T15:51:55Z"}, "message": "[Ada] Small adjustments to fixed-point I/O units\n\ngcc/ada/\n\n\t* libgnat/a-tifiio.adb: Adjust documentation.\n\t(OK_Get_32): Compare the object size of the base type.\n\t(OK_Put_32): Likewise.\n\t(OK_Get_64): Likewise.\n\t(OK_Put_64): Likewise.\n\t* libgnat/a-tifiio__128.adb: Adjust documentation.\n\t(OK_Get_32): Compare the object size of the base type.\n\t(OK_Put_32): Likewise.\n\t(OK_Get_64): Likewise.\n\t(OK_Put_64): Likewise.\n\t(OK_Get_128): Likewise.\n\t(OK_Put_128): Likewise.\n\t* libgnat/a-wtfiio.adb (OK_Get_32): Likewise.\n\t(OK_Put_32): Likewise.\n\t(OK_Get_64): Likewise.\n\t(OK_Put_64): Likewise\n\t* libgnat/a-wtfiio__128.adb (OK_Get_32): Likewise.\n\t(OK_Put_32): Likewise.\n\t(OK_Get_64): Likewise.\n\t(OK_Put_64): Likewise.\n\t(OK_Get_128): Likewise.\n\t(OK_Put_128): Likewise.\n\t* libgnat/a-ztfiio.adb (OK_Get_32): Likewise.\n\t(OK_Put_32): Likewise.\n\t(OK_Get_64): Likewise.\n\t(OK_Put_64): Likewise\n\t* libgnat/a-ztfiio__128.adb (OK_Get_32): Likewise.\n\t(OK_Put_32): Likewise.\n\t(OK_Get_64): Likewise.\n\t(OK_Put_64): Likewise.\n\t(OK_Get_128): Likewise.\n\t(OK_Put_128): Likewise.", "tree": {"sha": "b88c429620a3e3d7e05f348dcb984c30be590c7f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b88c429620a3e3d7e05f348dcb984c30be590c7f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/951d7d1319923e5188df3224a9f79ee5804bac80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/951d7d1319923e5188df3224a9f79ee5804bac80", "html_url": "https://github.com/Rust-GCC/gccrs/commit/951d7d1319923e5188df3224a9f79ee5804bac80", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/951d7d1319923e5188df3224a9f79ee5804bac80/comments", "author": null, "committer": {"login": "pmderodat", "id": 758452, "node_id": "MDQ6VXNlcjc1ODQ1Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/758452?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pmderodat", "html_url": "https://github.com/pmderodat", "followers_url": "https://api.github.com/users/pmderodat/followers", "following_url": "https://api.github.com/users/pmderodat/following{/other_user}", "gists_url": "https://api.github.com/users/pmderodat/gists{/gist_id}", "starred_url": "https://api.github.com/users/pmderodat/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pmderodat/subscriptions", "organizations_url": "https://api.github.com/users/pmderodat/orgs", "repos_url": "https://api.github.com/users/pmderodat/repos", "events_url": "https://api.github.com/users/pmderodat/events{/privacy}", "received_events_url": "https://api.github.com/users/pmderodat/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "430dd877b8692d1711d772cf5d19526d7a452bb6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/430dd877b8692d1711d772cf5d19526d7a452bb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/430dd877b8692d1711d772cf5d19526d7a452bb6"}], "stats": {"total": 118, "additions": 72, "deletions": 46}, "files": [{"sha": "61c68ec8ba746b6ae832ab568420e83cc4903ecc", "filename": "gcc/ada/libgnat/a-tifiio.adb", "status": "modified", "additions": 24, "deletions": 11, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/951d7d1319923e5188df3224a9f79ee5804bac80/gcc%2Fada%2Flibgnat%2Fa-tifiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/951d7d1319923e5188df3224a9f79ee5804bac80/gcc%2Fada%2Flibgnat%2Fa-tifiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tifiio.adb?ref=951d7d1319923e5188df3224a9f79ee5804bac80", "patch": "@@ -29,8 +29,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Fixed point I/O\n---  ---------------\n+--  -------------------\n+--  - Fixed point I/O -\n+--  -------------------\n \n --  The following text documents implementation details of the fixed point\n --  input/output routines in the GNAT runtime. The first part describes the\n@@ -40,7 +41,7 @@\n --  Subsequently these are reduced to implementation constraints and the impact\n --  of these constraints on a few possible approaches to input/output is given.\n --  Based on this analysis, a specific implementation is selected for use in\n---  the GNAT runtime. Finally, the chosen algorithm is analyzed numerically in\n+--  the GNAT runtime. Finally the chosen algorithms are analyzed numerically in\n --  order to provide user-level documentation on limits for range and precision\n --  of fixed point types as well as accuracy of input/output conversions.\n \n@@ -68,7 +69,7 @@\n --  Operations\n --  ----------\n \n---  'Image and 'Wide_Image (see RM 3.5(34))\n+--  [Wide_[Wide_]]Image attribute (see RM 3.5(27.1/2))\n \n --          These attributes return a decimal real literal best approximating\n --          the value (rounded away from zero if halfway between) with a\n@@ -88,7 +89,7 @@\n --          attributes, although it would be nice to be able to output more\n --          than S'Aft digits after the decimal point for values of subtype S.\n \n---  'Value and 'Wide_Value attribute (RM 3.5(40-55))\n+--  [Wide_[Wide_]]Value attribute (RM 3.5(39.1/2))\n \n --          Since the input can be given in any base in the range 2..16,\n --          accurate conversion to a fixed point number may require\n@@ -121,7 +122,7 @@\n --  be less than 2.0**(-53).\n \n --  In GNAT, Fine_Delta is 2.0**(-63), and Duration for example is a 64-bit\n---  type. This means that a floating-point type with 63 bits of mantissa needs\n+--  type. This means that a floating-point type with 64 bits of mantissa needs\n --  to be used, which is only generally available on the x86 architecture. It\n --  would still be possible to use multi-precision floating point to perform\n --  calculations using longer mantissas, but this is a much harder approach.\n@@ -137,9 +138,21 @@\n \n --  Fixed-precision integer arithmetic has the advantage of simplicity and\n --  speed. For the most common fixed point types this would be a perfect\n---  solution. The downside however may be a too limited set of acceptable\n+--  solution. The downside however may be a restricted set of acceptable\n --  fixed point types.\n \n+--  Implementation Choices\n+--  ----------------------\n+\n+--  The current implementation in the GNAT runtime uses fixed-precision integer\n+--  arithmetic for fixed point types whose Small is the ratio of two integers\n+--  whose magnitude is bounded relatively to the size of the mantissa, with a\n+--  two-tiered approach for 32-bit and 64-bit fixed point types. For the other\n+--  fixed point types, the implementation uses floating-point arithmetic.\n+\n+--  The exact requirements of the algorithms are analyzed and documented along\n+--  with the implementation in their respective units.\n+\n with Interfaces;\n with Ada.Text_IO.Fixed_Aux;\n with Ada.Text_IO.Float_Aux;\n@@ -171,7 +184,7 @@ package body Ada.Text_IO.Fixed_IO is\n    --  static (although it is not a static expressions in the RM sense).\n \n    OK_Get_32 : constant Boolean :=\n-     Num'Object_Size <= 32\n+     Num'Base'Object_Size <= 32\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n            or else\n@@ -182,7 +195,7 @@ package body Ada.Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Value_F\n \n    OK_Put_32 : constant Boolean :=\n-     Num'Object_Size <= 32\n+     Num'Base'Object_Size <= 32\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n            or else\n@@ -196,7 +209,7 @@ package body Ada.Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Image_F\n \n    OK_Get_64 : constant Boolean :=\n-     Num'Object_Size <= 64\n+     Num'Base'Object_Size <= 64\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n            or else\n@@ -207,7 +220,7 @@ package body Ada.Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Value_F\n \n    OK_Put_64 : constant Boolean :=\n-     Num'Object_Size <= 64\n+     Num'Base'Object_Size <= 64\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n            or else"}, {"sha": "578beb1fb1c56583147d6faeb256363ac9e4635e", "filename": "gcc/ada/libgnat/a-tifiio__128.adb", "status": "modified", "additions": 28, "deletions": 15, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/951d7d1319923e5188df3224a9f79ee5804bac80/gcc%2Fada%2Flibgnat%2Fa-tifiio__128.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/951d7d1319923e5188df3224a9f79ee5804bac80/gcc%2Fada%2Flibgnat%2Fa-tifiio__128.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-tifiio__128.adb?ref=951d7d1319923e5188df3224a9f79ee5804bac80", "patch": "@@ -29,8 +29,9 @@\n --                                                                          --\n ------------------------------------------------------------------------------\n \n---  Fixed point I/O\n---  ---------------\n+--  -------------------\n+--  - Fixed point I/O -\n+--  -------------------\n \n --  The following text documents implementation details of the fixed point\n --  input/output routines in the GNAT runtime. The first part describes the\n@@ -40,7 +41,7 @@\n --  Subsequently these are reduced to implementation constraints and the impact\n --  of these constraints on a few possible approaches to input/output is given.\n --  Based on this analysis, a specific implementation is selected for use in\n---  the GNAT runtime. Finally, the chosen algorithm is analyzed numerically in\n+--  the GNAT runtime. Finally the chosen algorithms are analyzed numerically in\n --  order to provide user-level documentation on limits for range and precision\n --  of fixed point types as well as accuracy of input/output conversions.\n \n@@ -68,7 +69,7 @@\n --  Operations\n --  ----------\n \n---  'Image and 'Wide_Image (see RM 3.5(34))\n+--  [Wide_[Wide_]]Image attribute (see RM 3.5(27.1/2))\n \n --          These attributes return a decimal real literal best approximating\n --          the value (rounded away from zero if halfway between) with a\n@@ -88,7 +89,7 @@\n --          attributes, although it would be nice to be able to output more\n --          than S'Aft digits after the decimal point for values of subtype S.\n \n---  'Value and 'Wide_Value attribute (RM 3.5(40-55))\n+--  [Wide_[Wide_]]Value attribute (RM 3.5(39.1/2))\n \n --          Since the input can be given in any base in the range 2..16,\n --          accurate conversion to a fixed point number may require\n@@ -120,9 +121,9 @@\n --  available has 53 bits of mantissa. This means that Fine_Delta cannot\n --  be less than 2.0**(-53).\n \n---  In GNAT, Fine_Delta is 2.0**(-63), and Duration for example is a 64-bit\n---  type. This means that a floating-point type with 63 bits of mantissa needs\n---  to be used, which is only generally available on the x86 architecture. It\n+--  In GNAT, Fine_Delta is 2.0**(-127), and Duration for example is a 64-bit\n+--  type. This means that a floating-point type with 128 bits of mantissa needs\n+--  to be used, which currently does not exist in any common architecture. It\n --  would still be possible to use multi-precision floating point to perform\n --  calculations using longer mantissas, but this is a much harder approach.\n \n@@ -137,9 +138,21 @@\n \n --  Fixed-precision integer arithmetic has the advantage of simplicity and\n --  speed. For the most common fixed point types this would be a perfect\n---  solution. The downside however may be a too limited set of acceptable\n+--  solution. The downside however may be a restricted set of acceptable\n --  fixed point types.\n \n+--  Implementation Choices\n+--  ----------------------\n+\n+--  The current implementation in the GNAT runtime uses fixed-precision integer\n+--  arithmetic for fixed point types whose Small is the ratio of two integers\n+--  whose magnitude is bounded relatively to the size of the mantissa, with a\n+--  three-tiered approach for 32-bit, 64-bit and 128-bit fixed point types. For\n+--  other fixed point types, the implementation uses floating-point arithmetic.\n+\n+--  The exact requirements of the algorithms are analyzed and documented along\n+--  with the implementation in their respective units.\n+\n with Interfaces;\n with Ada.Text_IO.Fixed_Aux;\n with Ada.Text_IO.Float_Aux;\n@@ -178,7 +191,7 @@ package body Ada.Text_IO.Fixed_IO is\n    --  in the RM sense).\n \n    OK_Get_32 : constant Boolean :=\n-     Num'Object_Size <= 32\n+     Num'Base'Object_Size <= 32\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n            or else\n@@ -189,7 +202,7 @@ package body Ada.Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Value_F\n \n    OK_Put_32 : constant Boolean :=\n-     Num'Object_Size <= 32\n+     Num'Base'Object_Size <= 32\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n            or else\n@@ -203,7 +216,7 @@ package body Ada.Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Image_F\n \n    OK_Get_64 : constant Boolean :=\n-     Num'Object_Size <= 64\n+     Num'Base'Object_Size <= 64\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n            or else\n@@ -214,7 +227,7 @@ package body Ada.Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Value_F\n \n    OK_Put_64 : constant Boolean :=\n-     Num'Object_Size <= 64\n+     Num'Base'Object_Size <= 64\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n            or else\n@@ -228,7 +241,7 @@ package body Ada.Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Image_F\n \n    OK_Get_128 : constant Boolean :=\n-     Num'Object_Size <= 128\n+     Num'Base'Object_Size <= 128\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**127)\n            or else\n@@ -239,7 +252,7 @@ package body Ada.Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Value_F\n \n    OK_Put_128 : constant Boolean :=\n-     Num'Object_Size <= 128\n+     Num'Base'Object_Size <= 128\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**127)\n            or else"}, {"sha": "570c5da72d839b37513148add086e9cd944aeeb4", "filename": "gcc/ada/libgnat/a-wtfiio.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/951d7d1319923e5188df3224a9f79ee5804bac80/gcc%2Fada%2Flibgnat%2Fa-wtfiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/951d7d1319923e5188df3224a9f79ee5804bac80/gcc%2Fada%2Flibgnat%2Fa-wtfiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtfiio.adb?ref=951d7d1319923e5188df3224a9f79ee5804bac80", "patch": "@@ -62,7 +62,7 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n    --  static (although it is not a static expressions in the RM sense).\n \n    OK_Get_32 : constant Boolean :=\n-     Num'Object_Size <= 32\n+     Num'Base'Object_Size <= 32\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n            or else\n@@ -73,7 +73,7 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Value_F\n \n    OK_Put_32 : constant Boolean :=\n-     Num'Object_Size <= 32\n+     Num'Base'Object_Size <= 32\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n            or else\n@@ -87,7 +87,7 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Image_F\n \n    OK_Get_64 : constant Boolean :=\n-     Num'Object_Size <= 64\n+     Num'Base'Object_Size <= 64\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n            or else\n@@ -98,7 +98,7 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Value_F\n \n    OK_Put_64 : constant Boolean :=\n-     Num'Object_Size <= 64\n+     Num'Base'Object_Size <= 64\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n            or else"}, {"sha": "aa45e5d375de1f170d8541bbe1e7ad852367cef1", "filename": "gcc/ada/libgnat/a-wtfiio__128.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/951d7d1319923e5188df3224a9f79ee5804bac80/gcc%2Fada%2Flibgnat%2Fa-wtfiio__128.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/951d7d1319923e5188df3224a9f79ee5804bac80/gcc%2Fada%2Flibgnat%2Fa-wtfiio__128.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-wtfiio__128.adb?ref=951d7d1319923e5188df3224a9f79ee5804bac80", "patch": "@@ -69,7 +69,7 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n    --  in the RM sense).\n \n    OK_Get_32 : constant Boolean :=\n-     Num'Object_Size <= 32\n+     Num'Base'Object_Size <= 32\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n            or else\n@@ -80,7 +80,7 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Value_F\n \n    OK_Put_32 : constant Boolean :=\n-     Num'Object_Size <= 32\n+     Num'Base'Object_Size <= 32\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n            or else\n@@ -94,7 +94,7 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Image_F\n \n    OK_Get_64 : constant Boolean :=\n-     Num'Object_Size <= 64\n+     Num'Base'Object_Size <= 64\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n            or else\n@@ -105,7 +105,7 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Value_F\n \n    OK_Put_64 : constant Boolean :=\n-     Num'Object_Size <= 64\n+     Num'Base'Object_Size <= 64\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n            or else\n@@ -119,7 +119,7 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Image_F\n \n    OK_Get_128 : constant Boolean :=\n-     Num'Object_Size <= 128\n+     Num'Base'Object_Size <= 128\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**127)\n            or else\n@@ -130,7 +130,7 @@ package body Ada.Wide_Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Value_F\n \n    OK_Put_128 : constant Boolean :=\n-     Num'Object_Size <= 128\n+     Num'Base'Object_Size <= 128\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**127)\n            or else"}, {"sha": "3c3224d3c577b36aa6e0353d61444319fd49ef06", "filename": "gcc/ada/libgnat/a-ztfiio.adb", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/951d7d1319923e5188df3224a9f79ee5804bac80/gcc%2Fada%2Flibgnat%2Fa-ztfiio.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/951d7d1319923e5188df3224a9f79ee5804bac80/gcc%2Fada%2Flibgnat%2Fa-ztfiio.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztfiio.adb?ref=951d7d1319923e5188df3224a9f79ee5804bac80", "patch": "@@ -62,7 +62,7 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n    --  static (although it is not a static expressions in the RM sense).\n \n    OK_Get_32 : constant Boolean :=\n-     Num'Object_Size <= 32\n+     Num'Base'Object_Size <= 32\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n            or else\n@@ -73,7 +73,7 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Value_F\n \n    OK_Put_32 : constant Boolean :=\n-     Num'Object_Size <= 32\n+     Num'Base'Object_Size <= 32\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n            or else\n@@ -87,7 +87,7 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Image_F\n \n    OK_Get_64 : constant Boolean :=\n-     Num'Object_Size <= 64\n+     Num'Base'Object_Size <= 64\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n            or else\n@@ -98,7 +98,7 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Value_F\n \n    OK_Put_64 : constant Boolean :=\n-     Num'Object_Size <= 64\n+     Num'Base'Object_Size <= 64\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n            or else"}, {"sha": "3254fb8c7de28592230fa1f131eda13d0702aead", "filename": "gcc/ada/libgnat/a-ztfiio__128.adb", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/951d7d1319923e5188df3224a9f79ee5804bac80/gcc%2Fada%2Flibgnat%2Fa-ztfiio__128.adb", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/951d7d1319923e5188df3224a9f79ee5804bac80/gcc%2Fada%2Flibgnat%2Fa-ztfiio__128.adb", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fada%2Flibgnat%2Fa-ztfiio__128.adb?ref=951d7d1319923e5188df3224a9f79ee5804bac80", "patch": "@@ -70,7 +70,7 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n    --  in the RM sense).\n \n    OK_Get_32 : constant Boolean :=\n-     Num'Object_Size <= 32\n+     Num'Base'Object_Size <= 32\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n            or else\n@@ -81,7 +81,7 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Value_F\n \n    OK_Put_32 : constant Boolean :=\n-     Num'Object_Size <= 32\n+     Num'Base'Object_Size <= 32\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**31)\n            or else\n@@ -95,7 +95,7 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Image_F\n \n    OK_Get_64 : constant Boolean :=\n-     Num'Object_Size <= 64\n+     Num'Base'Object_Size <= 64\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n            or else\n@@ -106,7 +106,7 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Value_F\n \n    OK_Put_64 : constant Boolean :=\n-     Num'Object_Size <= 64\n+     Num'Base'Object_Size <= 64\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**63)\n            or else\n@@ -120,7 +120,7 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Image_F\n \n    OK_Get_128 : constant Boolean :=\n-     Num'Object_Size <= 128\n+     Num'Base'Object_Size <= 128\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**127)\n            or else\n@@ -131,7 +131,7 @@ package body Ada.Wide_Wide_Text_IO.Fixed_IO is\n    --  These conditions are derived from the prerequisites of System.Value_F\n \n    OK_Put_128 : constant Boolean :=\n-     Num'Object_Size <= 128\n+     Num'Base'Object_Size <= 128\n        and then\n          ((Num'Small_Numerator = 1 and then Num'Small_Denominator <= 2**127)\n            or else"}]}