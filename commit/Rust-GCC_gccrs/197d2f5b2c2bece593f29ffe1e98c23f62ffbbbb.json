{"sha": "197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTk3ZDJmNWIyYzJiZWNlNTkzZjI5ZmZlMWU5OGMyM2Y2MmZmYmJiYg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2017-09-19T08:25:17Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2017-09-19T08:25:17Z"}, "message": "re PR tree-optimization/69728 (internal compiler error: in outer_projection_mupa, at graphite-sese-to-poly.c:1175)\n\n2017-09-19  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/69728\n\t* graphite-sese-to-poly.c (schedule_error): New global.\n\t(add_loop_schedule): Handle empty domain by failing the\n\tschedule.\n\t(build_original_schedule): Handle schedule_error.\n\n\t* gfortran.dg/graphite/pr69728.f90: New testcase.\n\t* gcc.dg/graphite/pr69728.c: Likewise.\n\nFrom-SVN: r252968", "tree": {"sha": "46573d7befe8b4b83a43af3b5ac0742ae0bfee13", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/46573d7befe8b4b83a43af3b5ac0742ae0bfee13"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb", "html_url": "https://github.com/Rust-GCC/gccrs/commit/197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "6da7ce80f3845e511bf0c3c5a8c11af5f3def516", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6da7ce80f3845e511bf0c3c5a8c11af5f3def516", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6da7ce80f3845e511bf0c3c5a8c11af5f3def516"}], "stats": {"total": 84, "additions": 83, "deletions": 1}, "files": [{"sha": "a7841b068f736c9f3c2b233bd63a2712467949d1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb", "patch": "@@ -1,3 +1,11 @@\n+2017-09-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69728\n+\t* graphite-sese-to-poly.c (schedule_error): New global.\n+\t(add_loop_schedule): Handle empty domain by failing the\n+\tschedule.\n+\t(build_original_schedule): Handle schedule_error.\n+\n 2017-09-19  Richard Biener  <rguenther@suse.de>\n \n \t* graphite-scop-detection.c (scop_detection::can_represent_loop):"}, {"sha": "6e64f13a77a5701bca4d72560240c9cad7c54a0a", "filename": "gcc/graphite-sese-to-poly.c", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb/gcc%2Fgraphite-sese-to-poly.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb/gcc%2Fgraphite-sese-to-poly.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fgraphite-sese-to-poly.c?ref=197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb", "patch": "@@ -1030,6 +1030,8 @@ outer_projection_mupa (__isl_take isl_union_set *set, int n)\n   return isl_multi_union_pw_aff_from_union_pw_multi_aff (data.res);\n }\n \n+static bool schedule_error;\n+\n /* Embed SCHEDULE in the constraints of the LOOP domain.  */\n \n static isl_schedule *\n@@ -1043,6 +1045,16 @@ add_loop_schedule (__isl_take isl_schedule *schedule, loop_p loop,\n   if (empty < 0 || empty)\n     return empty < 0 ? isl_schedule_free (schedule) : schedule;\n \n+  isl_union_set *domain = isl_schedule_get_domain (schedule);\n+  /* We cannot apply an empty domain to pbbs in this loop so fail.\n+     ??? Somehow drop pbbs in the loop instead.  */\n+  if (isl_union_set_is_empty (domain))\n+    {\n+      schedule_error = true;\n+      isl_union_set_free (domain);\n+      return schedule;\n+    }\n+\n   isl_space *space = isl_set_get_space (iterators);\n   int loop_index = isl_space_dim (space, isl_dim_set) - 1;\n \n@@ -1063,7 +1075,6 @@ add_loop_schedule (__isl_take isl_schedule *schedule, loop_p loop,\n   prefix = isl_multi_aff_set_tuple_id (prefix, isl_dim_out, label);\n \n   int n = isl_multi_aff_dim (prefix, isl_dim_in);\n-  isl_union_set *domain = isl_schedule_get_domain (schedule);\n   isl_multi_union_pw_aff *mupa = outer_projection_mupa (domain, n);\n   mupa = isl_multi_union_pw_aff_apply_multi_aff (mupa, prefix);\n   return isl_schedule_insert_partial_schedule (schedule, mupa);\n@@ -1169,6 +1180,8 @@ build_schedule_loop_nest (scop_p scop, int *index, loop_p context_loop)\n static bool\n build_original_schedule (scop_p scop)\n {\n+  schedule_error = false;\n+\n   int i = 0;\n   int n = scop->pbbs.length ();\n   while (i < n)\n@@ -1183,6 +1196,14 @@ build_original_schedule (scop_p scop)\n       scop->original_schedule = add_in_sequence (scop->original_schedule, s);\n     }\n \n+  if (schedule_error)\n+    {\n+      if (dump_file)\n+\tfprintf (dump_file, \"[sese-to-poly] failed to build \"\n+\t\t \"original schedule\\n\");\n+      return false;\n+    }\n+\n   if (dump_file)\n     {\n       fprintf (dump_file, \"[sese-to-poly] original schedule:\\n\");"}, {"sha": "aa6c7251f0d01b55a1f6adbbdfd185b428a1d8bf", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb", "patch": "@@ -1,3 +1,9 @@\n+2017-09-19  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/69728\n+\t* gfortran.dg/graphite/pr69728.f90: New testcase.\n+\t* gcc.dg/graphite/pr69728.c: Likewise.\n+\n 2017-09-18  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \tPR c++/80947"}, {"sha": "35ea5bd15bb7eccd68ce1db398b0f1a9fc899966", "filename": "gcc/testsuite/gcc.dg/graphite/pr69728.c", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr69728.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr69728.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgraphite%2Fpr69728.c?ref=197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb", "patch": "@@ -0,0 +1,21 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O3 -floop-nest-optimize\" } */\n+\n+int a[1];\n+int b, c, d, e;\n+void\n+fn1 ()\n+{\n+  d = 9;\n+  for (; c; c++)\n+    {\n+      ++d;\n+      b = 8;\n+      for (; b; b--)\n+\t{\n+\t  if (d)\n+\t    break;\n+\t  a[b] = e;\n+\t}\n+    }\n+}"}, {"sha": "6a3aec469caf42fce59a7df13dfb2c6c0f5c55cd", "filename": "gcc/testsuite/gfortran.dg/graphite/pr69728.f90", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr69728.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr69728.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fgraphite%2Fpr69728.f90?ref=197d2f5b2c2bece593f29ffe1e98c23f62ffbbbb", "patch": "@@ -0,0 +1,26 @@\n+! { dg-do compile }\n+! { dg-options \"-O3 -floop-nest-optimize\" }\n+SUBROUTINE rk_addtend_dry ( t_tend, t_tendf, t_save, rk_step, &\n+                            h_diabatic, mut, msft, ide, jde,  &\n+                            ims,ime, jms,jme, kms,kme,        &\n+                            its,ite, jts,jte, kts,kte)\n+   IMPLICIT NONE\n+   INTEGER ,  INTENT(IN   ) :: ide, jde, ims, ime, jms, jme, kms, kme, &\n+                               its, ite, jts, jte, kts, kte\n+   INTEGER ,  INTENT(IN   ) :: rk_step\n+   REAL , DIMENSION( ims:ime , kms:kme, jms:jme  ), &\n+       INTENT(INOUT) :: t_tend, t_tendf\n+   REAL , DIMENSION( ims:ime , kms:kme, jms:jme  ) , &\n+       INTENT(IN   ) ::  t_save, h_diabatic\n+   REAL , DIMENSION( ims:ime , jms:jme ) , INTENT(IN   ) :: mut, msft\n+   INTEGER :: i, j, k\n+   DO j = jts,MIN(jte,jde-1)\n+   DO k = kts,kte-1\n+   DO i = its,MIN(ite,ide-1)\n+     IF(rk_step == 1)t_tendf(i,k,j) = t_tendf(i,k,j) +  t_save(i,k,j)\n+      t_tend(i,k,j) =  t_tend(i,k,j) +  t_tendf(i,k,j)/msft(i,j)  &\n+                                     +  mut(i,j)*h_diabatic(i,k,j)/msft(i,j)\n+   ENDDO\n+   ENDDO\n+   ENDDO\n+END SUBROUTINE rk_addtend_dry"}]}