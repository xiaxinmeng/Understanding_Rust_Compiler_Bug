{"sha": "3d0675f3bb54b58903bc9214d05c8e6d20e5f313", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6M2QwNjc1ZjNiYjU0YjU4OTAzYmM5MjE0ZDA1YzhlNmQyMGU1ZjMxMw==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-29T08:48:40Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2020-05-29T08:48:40Z"}, "message": "openmp: One omp_resolve_declare_variant followup\n\nAs noticed by Arseny, I got the condition when to call the add removal hook\nwrong wrong.  Fixed thusly.\n\n2020-05-28  Jakub Jelinek  <jakub@redhat.com>\n\n\tPR middle-end/95315\n\t* omp-general.c (omp_resolve_declare_variant): Fix up addition of\n\tdeclare variant cgraph node removal callback.\n\n\t* gcc.dg/gomp/pr95315-2.c: New test.", "tree": {"sha": "01a1b75b44a9dd690339303f019ce15030be943a", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/01a1b75b44a9dd690339303f019ce15030be943a"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/3d0675f3bb54b58903bc9214d05c8e6d20e5f313", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d0675f3bb54b58903bc9214d05c8e6d20e5f313", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3d0675f3bb54b58903bc9214d05c8e6d20e5f313", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3d0675f3bb54b58903bc9214d05c8e6d20e5f313/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43a4fc095e30188392cc42299c4081297e321104", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/43a4fc095e30188392cc42299c4081297e321104", "html_url": "https://github.com/Rust-GCC/gccrs/commit/43a4fc095e30188392cc42299c4081297e321104"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "5adbd0e284b8b094c6b4e51ae733640b499b48ef", "filename": "gcc/omp-general.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d0675f3bb54b58903bc9214d05c8e6d20e5f313/gcc%2Fomp-general.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d0675f3bb54b58903bc9214d05c8e6d20e5f313/gcc%2Fomp-general.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-general.c?ref=3d0675f3bb54b58903bc9214d05c8e6d20e5f313", "patch": "@@ -1851,7 +1851,7 @@ omp_resolve_declare_variant (tree base)\n \t}\n \n       static struct cgraph_node_hook_list *node_removal_hook_holder;\n-      if (node_removal_hook_holder)\n+      if (!node_removal_hook_holder)\n \tnode_removal_hook_holder\n \t  = symtab->add_cgraph_removal_hook (omp_declare_variant_remove_hook,\n \t\t\t\t\t     NULL);"}, {"sha": "3a5018a1eee43a1e3f6e1bfcd1c15906e2919780", "filename": "gcc/testsuite/gcc.dg/gomp/pr95315-2.c", "status": "added", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/3d0675f3bb54b58903bc9214d05c8e6d20e5f313/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr95315-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/3d0675f3bb54b58903bc9214d05c8e6d20e5f313/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr95315-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Fgomp%2Fpr95315-2.c?ref=3d0675f3bb54b58903bc9214d05c8e6d20e5f313", "patch": "@@ -0,0 +1,46 @@\n+/* PR middle-end/95315 */\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -fopenmp --param ggc-min-heapsize=0\" } */\n+\n+typedef float __v4sf __attribute__((vector_size (16)));\n+typedef int __v4si __attribute__((vector_size (16)));\n+typedef float __v8sf __attribute__((vector_size (32)));\n+typedef int __v8si __attribute__((vector_size (32)));\n+__v4si f1 (__v4sf, __v4sf, float *);\n+__v8si f2 (__v8sf, __v8sf, float *);\n+__v4si f3 (__v4si, int, __v4si);\n+\n+#pragma omp declare variant (f1) match (construct={parallel,for,simd(simdlen(4),notinbranch,uniform(z),aligned(z:4 * sizeof (*z)))})\n+#pragma omp declare variant (f2) match (construct={for,simd(uniform(z),simdlen(8),notinbranch)})\n+int f4 (float x, float y, float *z);\n+\n+#pragma omp declare variant (f3) match (construct={simd(simdlen(4),inbranch,linear(y:1))})\n+int f5 (int x, int y);\n+\n+static inline __attribute__((always_inline)) int\n+ret_false (void)\n+{\n+  return 0;\n+}\n+\n+void\n+test (int *x, float *y, float *z, float *w)\n+{\n+  #pragma omp parallel\n+  #pragma omp for simd aligned (w:4 * sizeof (float))\n+  for (int i = 0; i < 1024; i++)\n+    if (ret_false ())\n+      x[i] = f4 (y[i], z[i], w);\n+  #pragma omp parallel for simd aligned (w:4 * sizeof (float)) simdlen(4)\n+  for (int i = 1024; i < 2048; i++)\n+    if (ret_false ())\n+      x[i] = f4 (y[i], z[i], w);\n+  #pragma omp simd aligned (w:4 * sizeof (float))\n+  for (int i = 2048; i < 4096; i++)\n+    if (ret_false ())\n+      x[i] = f4 (y[i], z[i], w);\n+  #pragma omp simd\n+  for (int i = 4096; i < 8192; i++)\n+    if (x[i] > 10 && ret_false ())\n+      x[i] = f5 (x[i], i);\n+}"}]}