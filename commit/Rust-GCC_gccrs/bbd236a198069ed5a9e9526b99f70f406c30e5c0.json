{"sha": "bbd236a198069ed5a9e9526b99f70f406c30e5c0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YmJkMjM2YTE5ODA2OWVkNWE5ZTk1MjZiOTlmNzBmNDA2YzMwZTVjMA==", "commit": {"author": {"name": "Jan Hubicka", "email": "jh@suse.cz", "date": "2004-09-25T10:06:18Z"}, "committer": {"name": "Jan Hubicka", "email": "hubicka@gcc.gnu.org", "date": "2004-09-25T10:06:18Z"}, "message": "predict.c (counts_to_freqs): Make glolbal.\n\n\t* predict.c (counts_to_freqs): Make glolbal.\n\t* predict.h (counts_to_freqa): Declare.\n\t* profile.c (compute_branch_probabilities): Compute frequencies\n\t* tree-profile.c (do_tree_profiling): Refine conditional on when\n\ttree profiling pass is needed.\n\nFrom-SVN: r88093", "tree": {"sha": "a844c1a79dda581a3aa0d026ae759027d7ec0a30", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a844c1a79dda581a3aa0d026ae759027d7ec0a30"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/bbd236a198069ed5a9e9526b99f70f406c30e5c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbd236a198069ed5a9e9526b99f70f406c30e5c0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/bbd236a198069ed5a9e9526b99f70f406c30e5c0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/bbd236a198069ed5a9e9526b99f70f406c30e5c0/comments", "author": null, "committer": null, "parents": [{"sha": "70f3cc30aa04ab2f57f156c16a7f1db33084f04e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/70f3cc30aa04ab2f57f156c16a7f1db33084f04e", "html_url": "https://github.com/Rust-GCC/gccrs/commit/70f3cc30aa04ab2f57f156c16a7f1db33084f04e"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "023b449ed37008408bb99f703398f69ffc9c8322", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbd236a198069ed5a9e9526b99f70f406c30e5c0/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbd236a198069ed5a9e9526b99f70f406c30e5c0/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=bbd236a198069ed5a9e9526b99f70f406c30e5c0", "patch": "@@ -1,5 +1,11 @@\n 2004-09-25  Jan Hubicka  <jh@suse.cz>\n \n+\t* predict.c (counts_to_freqs): Make glolbal.\n+\t* predict.h (counts_to_freqa): Declare.\n+\t* profile.c (compute_branch_probabilities): Compute frequencies\n+\t* tree-profile.c (do_tree_profiling): Refine conditional on when\n+\ttree profiling pass is needed.\n+\n \t* passes.c (rest_of_handle_cfg): Disable const/pure function\n \tdetection when doing tree based profiling.\n "}, {"sha": "18b6b90814cd8c219cdcf9e816738d39a0ad499b", "filename": "gcc/predict.c", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbd236a198069ed5a9e9526b99f70f406c30e5c0/gcc%2Fpredict.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbd236a198069ed5a9e9526b99f70f406c30e5c0/gcc%2Fpredict.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.c?ref=bbd236a198069ed5a9e9526b99f70f406c30e5c0", "patch": "@@ -76,7 +76,6 @@ static void dump_prediction (FILE *, enum br_predictor, int, basic_block, int);\n static void estimate_loops_at_level (struct loop *loop);\n static void propagate_freq (struct loop *);\n static void estimate_bb_frequencies (struct loops *);\n-static int counts_to_freqs (void);\n static void predict_paths_leading_to (basic_block, int *, enum br_predictor, enum prediction);\n static bool last_basic_block_p (basic_block);\n static void compute_function_frequency (void);\n@@ -1705,7 +1704,7 @@ estimate_loops_at_level (struct loop *first_loop)\n /* Convert counts measured by profile driven feedback to frequencies.\n    Return nonzero iff there was any nonzero execution count.  */\n \n-static int\n+int\n counts_to_freqs (void)\n {\n   gcov_type count_max, true_count_max = 0;"}, {"sha": "77198118f08507866ac5e84ca62d58adada6627b", "filename": "gcc/predict.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbd236a198069ed5a9e9526b99f70f406c30e5c0/gcc%2Fpredict.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbd236a198069ed5a9e9526b99f70f406c30e5c0/gcc%2Fpredict.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpredict.h?ref=bbd236a198069ed5a9e9526b99f70f406c30e5c0", "patch": "@@ -41,5 +41,6 @@ enum prediction\n \n extern void predict_insn_def (rtx, enum br_predictor, enum prediction);\n extern void predict_insn (rtx, enum br_predictor, int);\n+extern int counts_to_freqs (void);\n \n #endif  /* GCC_PREDICT_H */"}, {"sha": "3f48be623d2d494bac5b600dd414facdf5d79797", "filename": "gcc/profile.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbd236a198069ed5a9e9526b99f70f406c30e5c0/gcc%2Fprofile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbd236a198069ed5a9e9526b99f70f406c30e5c0/gcc%2Fprofile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fprofile.c?ref=bbd236a198069ed5a9e9526b99f70f406c30e5c0", "patch": "@@ -590,6 +590,7 @@ compute_branch_probabilities (void)\n \t    num_branches++, num_never_executed;\n \t}\n     }\n+  counts_to_freqs ();\n \n   if (dump_file)\n     {"}, {"sha": "00c36e233ec52a1c051202fc8c8ac9e4d9f669e7", "filename": "gcc/tree-profile.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/bbd236a198069ed5a9e9526b99f70f406c30e5c0/gcc%2Ftree-profile.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/bbd236a198069ed5a9e9526b99f70f406c30e5c0/gcc%2Ftree-profile.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-profile.c?ref=bbd236a198069ed5a9e9526b99f70f406c30e5c0", "patch": "@@ -160,12 +160,14 @@ tree_gen_const_delta_profiler (histogram_value value ATTRIBUTE_UNUSED,\n \n static bool do_tree_profiling (void)\n {\n-  if (flag_tree_based_profiling)\n+  if (flag_tree_based_profiling\n+      && (profile_arc_flag || flag_test_coverage || flag_branch_probabilities))\n     {\n       tree_register_profile_hooks ();\n       tree_register_value_prof_hooks ();\n+      return true;\n     }\n-  return flag_tree_based_profiling;\n+  return false;\n }\n \n /* Return the file on which profile dump output goes, if any.  */"}]}