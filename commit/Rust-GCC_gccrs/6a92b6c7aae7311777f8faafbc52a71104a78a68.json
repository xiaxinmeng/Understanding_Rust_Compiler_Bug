{"sha": "6a92b6c7aae7311777f8faafbc52a71104a78a68", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmE5MmI2YzdhYWU3MzExNzc3ZjhmYWFmYmM1MmE3MTEwNGE3OGE2OA==", "commit": {"author": {"name": "Dave Korn", "email": "dave.korn.cygwin@gmail.com", "date": "2009-09-22T18:58:13Z"}, "committer": {"name": "Dave Korn", "email": "davek@gcc.gnu.org", "date": "2009-09-22T18:58:13Z"}, "message": "cygming.h (TARGET_USE_JCR_SECTION): Enable.\n\ngcc/ChangeLog\n\n\t* config/i386/cygming.h (TARGET_USE_JCR_SECTION): Enable.\n\t* config/i386/cygwin.h (LIBGCJ_SONAME): Define.\n\t* config/i386/mingw32.h (LIBGCJ_SONAME): Likewise.\n\nlibjava/ChangeLog\n\n\t* configure.host (enable_libgcj_sublibs_default): New variable,\n\tset for Cygwin and MinGW.\n\t* configure.ac (--enable-libgcj-sublibs): New command-line switch.\n\t(BUILD_SUBLIBS): New AM_CONDITIONAL relating to it.\n\t(libgcj_spec_lgcj_override): New variable, define if building sublibs.\n\t(libgcj_spec_lgcj_bc_override): Likewise for when USE_LIBGCJ_BC.\n\t(LIBGCJ_SPEC_LGCJ): New variable to abstract \"-lgcj\" from specs.\n\t(LIBGCJ_SPEC_LGCJ_BC): Likewise for when USE_LIBGCJ_BC.\n\t(LIBGCJ_SPEC): Use them.\n\t* configure: Regenerate.\n\t* Makefile.am (LOWER_PACKAGE_FILES_LO): New variable.\n\t(ALL_PACKAGE_SOURCE_FILES_LO): Likewise.\n\t(NONCORE_PACKAGE_SOURCE_FILES_LO): Likewise.\n\t(CORE_PACKAGE_SOURCE_FILES_LO): Likewise.\n\t(toolexeclib_LTLIBRARIES): Add libgcj-noncore.la if building sublibs.\n\t(libgcj_noncore_la_LIBADD_SUBOBJECTS): New variable.\n\t(libgcj_la_LIBADD_SUBOBJECTS): Likewise.\n\t(libgcj_la_LDFLAGS_NOUNDEF): Likewise.\n\t(libgij_la_LDFLAGS): Add DLL-related options.\n\t(libgcj_la_LDFLAGS): Use libgcj_la_LDFLAGS_NOUNDEF and\n\tlibgcj_la_LIBADD_SUBOBJECTS.\n\t(libgcj_la_DEPENDENCIES): Adjust to match.\n\t(libgcj_noncore_la_SOURCES, libgcj_noncore_la_LDFLAGS,\n\tlibgcj_noncore_la_LIBADD, libgcj_noncore_la_DEPENDENCIES,\n\tlibgcj_noncore_la_LINK): New automake variables for sublibrary.\n\t(libgcj_tools_la_LDFLAGS): Add DLL-related flags.\n\t(libgcj_tools_la_LIBADD): New variable.\n\t(libjvm_la_LDFLAGS): Add DLL-related flags.\n\t(lib_gnu_awt_xlib_la_LDFLAGS): Likewise.\n\t(libgcj_bc_la_LDFLAGS): Likewise.\n\t(libgij_la_DEPENDENCIES): Add dependency on libgcj-noncore.la when\n\tbuilding sublibs.\n\t(libgcj_tools_la_DEPENDENCIES, libjvm_la_DEPENDENCIES,\n\tlib_gnu_awt_xlib_la_DEPENDENCIES, jv_convert_DEPENDENCIES,\n\tgcj_dbtool_DEPENDENCIES, gc_analyze_DEPENDENCIES, ecjx_DEPENDENCIES):\n\tLikewise.\n\t* Makefile.in: Regenerate.\n\t* sysdep/i386/backtrace.h (MAIN_FUNC): New #define for main function,\n\tset appropriately for Cygwin on that platform or to \"main\" elsewhere.\n\t(fallback_backtrace): Use it to limit stack unwind.\n\nlibjava/libltdl/ChangeLog:\n\n\t* ltdl.h (LT_SCOPE): Change conditional to avoid breaking\n\tauto-export during libgcj DLL linking.\n\t* Makefile.am (libltdl_la_LDFLAGS): Remove -bindir switch.\n\t* Makefile.in: Regenerate.\n\nFrom-SVN: r152041", "tree": {"sha": "89fb7aceeab12051629b5e047d3df2ddf3ab2894", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/89fb7aceeab12051629b5e047d3df2ddf3ab2894"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6a92b6c7aae7311777f8faafbc52a71104a78a68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a92b6c7aae7311777f8faafbc52a71104a78a68", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6a92b6c7aae7311777f8faafbc52a71104a78a68", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6a92b6c7aae7311777f8faafbc52a71104a78a68/comments", "author": {"login": "davek-cygwin", "id": 530057, "node_id": "MDQ6VXNlcjUzMDA1Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/530057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davek-cygwin", "html_url": "https://github.com/davek-cygwin", "followers_url": "https://api.github.com/users/davek-cygwin/followers", "following_url": "https://api.github.com/users/davek-cygwin/following{/other_user}", "gists_url": "https://api.github.com/users/davek-cygwin/gists{/gist_id}", "starred_url": "https://api.github.com/users/davek-cygwin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davek-cygwin/subscriptions", "organizations_url": "https://api.github.com/users/davek-cygwin/orgs", "repos_url": "https://api.github.com/users/davek-cygwin/repos", "events_url": "https://api.github.com/users/davek-cygwin/events{/privacy}", "received_events_url": "https://api.github.com/users/davek-cygwin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "502a1e45907d04b3feeec2b3e5e5b80a10e9350f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/502a1e45907d04b3feeec2b3e5e5b80a10e9350f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/502a1e45907d04b3feeec2b3e5e5b80a10e9350f"}], "stats": {"total": 779, "additions": 657, "deletions": 122}, "files": [{"sha": "2da2d4441f10e12077ff2d85e0a1c54e835e8e23", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a92b6c7aae7311777f8faafbc52a71104a78a68/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a92b6c7aae7311777f8faafbc52a71104a78a68/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=6a92b6c7aae7311777f8faafbc52a71104a78a68", "patch": "@@ -1,3 +1,9 @@\n+2009-09-22  Dave Korn  <dave.korn.cygwin@gmail.com>\n+\n+\t* config/i386/cygming.h (TARGET_USE_JCR_SECTION): Enable.\n+\t* config/i386/cygwin.h (LIBGCJ_SONAME): Define.\n+\t* config/i386/mingw32.h (LIBGCJ_SONAME): Likewise.\n+\n 2009-09-22  Alexandre Oliva  <aoliva@redhat.com>\n \n \tPR debug/41295"}, {"sha": "43003cc5cad30de1c95bb1ef75778b180efaa859", "filename": "gcc/config/i386/cygming.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a92b6c7aae7311777f8faafbc52a71104a78a68/gcc%2Fconfig%2Fi386%2Fcygming.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a92b6c7aae7311777f8faafbc52a71104a78a68/gcc%2Fconfig%2Fi386%2Fcygming.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygming.h?ref=6a92b6c7aae7311777f8faafbc52a71104a78a68", "patch": "@@ -383,7 +383,7 @@ do {\t\t\t\t\t\t\\\n /* FIXME: SUPPORTS_WEAK && TARGET_HAVE_NAMED_SECTIONS is true,\n    but for .jcr section to work we also need crtbegin and crtend\n    objects.  */\n-#define TARGET_USE_JCR_SECTION 0\n+#define TARGET_USE_JCR_SECTION 1\n \n /* Decide whether it is safe to use a local alias for a virtual function\n    when constructing thunks.  */"}, {"sha": "933263769f97cc08ad6f371901f9fd359824f10e", "filename": "gcc/config/i386/cygwin.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a92b6c7aae7311777f8faafbc52a71104a78a68/gcc%2Fconfig%2Fi386%2Fcygwin.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a92b6c7aae7311777f8faafbc52a71104a78a68/gcc%2Fconfig%2Fi386%2Fcygwin.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fcygwin.h?ref=6a92b6c7aae7311777f8faafbc52a71104a78a68", "patch": "@@ -267,3 +267,7 @@ while (0)\n #define LIBGCC_EH_EXTN \"-sjlj\"\n #endif\n #define LIBGCC_SONAME \"cyggcc_s\" LIBGCC_EH_EXTN \"-1.dll\"\n+\n+/* We should find a way to not have to update this manually.  */\n+#define LIBGCJ_SONAME \"cyggcj\" /*LIBGCC_EH_EXTN*/ \"-11.dll\"\n+"}, {"sha": "9dcc5ba1f67f1bdfb17bd0988e6c60640378aafc", "filename": "gcc/config/i386/mingw32.h", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a92b6c7aae7311777f8faafbc52a71104a78a68/gcc%2Fconfig%2Fi386%2Fmingw32.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a92b6c7aae7311777f8faafbc52a71104a78a68/gcc%2Fconfig%2Fi386%2Fmingw32.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmingw32.h?ref=6a92b6c7aae7311777f8faafbc52a71104a78a68", "patch": "@@ -221,3 +221,7 @@ __enable_execute_stack (void *addr)\t\t\t\t\t\\\n #define LIBGCC_EH_EXTN \"_sjlj\"\n #endif\n #define LIBGCC_SONAME \"libgcc_s\" LIBGCC_EH_EXTN \"-1.dll\"\n+\n+/* We should find a way to not have to update this manually.  */\n+#define LIBGCJ_SONAME \"cyggcj\" /*LIBGCC_EH_EXTN*/ \"-11.dll\"\n+"}, {"sha": "e8ad3b347ce02e593e272a6ac985db82b563deca", "filename": "libjava/ChangeLog", "status": "modified", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FChangeLog?ref=6a92b6c7aae7311777f8faafbc52a71104a78a68", "patch": "@@ -1,3 +1,46 @@\n+2009-09-22  Dave Korn  <dave.korn.cygwin@gmail.com>\n+\n+\t* configure.host (enable_libgcj_sublibs_default): New variable,\n+\tset for Cygwin and MinGW.\n+\t* configure.ac (--enable-libgcj-sublibs): New command-line switch.\n+\t(BUILD_SUBLIBS): New AM_CONDITIONAL relating to it.\n+\t(libgcj_spec_lgcj_override): New variable, define if building sublibs.\n+\t(libgcj_spec_lgcj_bc_override): Likewise for when USE_LIBGCJ_BC.\n+\t(LIBGCJ_SPEC_LGCJ): New variable to abstract \"-lgcj\" from specs.\n+\t(LIBGCJ_SPEC_LGCJ_BC): Likewise for when USE_LIBGCJ_BC.\n+\t(LIBGCJ_SPEC): Use them.\n+\t* configure: Regenerate.\n+\t* Makefile.am (LOWER_PACKAGE_FILES_LO): New variable.\n+\t(ALL_PACKAGE_SOURCE_FILES_LO): Likewise.\n+\t(NONCORE_PACKAGE_SOURCE_FILES_LO): Likewise.\n+\t(CORE_PACKAGE_SOURCE_FILES_LO): Likewise.\n+\t(toolexeclib_LTLIBRARIES): Add libgcj-noncore.la if building sublibs.\n+\t(libgcj_noncore_la_LIBADD_SUBOBJECTS): New variable.\n+\t(libgcj_la_LIBADD_SUBOBJECTS): Likewise.\n+\t(libgcj_la_LDFLAGS_NOUNDEF): Likewise.\n+\t(libgij_la_LDFLAGS): Add DLL-related options.\n+\t(libgcj_la_LDFLAGS): Use libgcj_la_LDFLAGS_NOUNDEF and\n+\tlibgcj_la_LIBADD_SUBOBJECTS.\n+\t(libgcj_la_DEPENDENCIES): Adjust to match.\n+\t(libgcj_noncore_la_SOURCES, libgcj_noncore_la_LDFLAGS,\n+\tlibgcj_noncore_la_LIBADD, libgcj_noncore_la_DEPENDENCIES,\n+\tlibgcj_noncore_la_LINK): New automake variables for sublibrary.\n+\t(libgcj_tools_la_LDFLAGS): Add DLL-related flags.\n+\t(libgcj_tools_la_LIBADD): New variable.\n+\t(libjvm_la_LDFLAGS): Add DLL-related flags.\n+\t(lib_gnu_awt_xlib_la_LDFLAGS): Likewise.\n+\t(libgcj_bc_la_LDFLAGS): Likewise.\n+\t(libgij_la_DEPENDENCIES): Add dependency on libgcj-noncore.la when\n+\tbuilding sublibs.\n+\t(libgcj_tools_la_DEPENDENCIES, libjvm_la_DEPENDENCIES,\n+\tlib_gnu_awt_xlib_la_DEPENDENCIES, jv_convert_DEPENDENCIES,\n+\tgcj_dbtool_DEPENDENCIES, gc_analyze_DEPENDENCIES, ecjx_DEPENDENCIES):\n+\tLikewise.\n+\t* Makefile.in: Regenerate.\n+\t* sysdep/i386/backtrace.h (MAIN_FUNC): New #define for main function,\n+\tset appropriately for Cygwin on that platform or to \"main\" elsewhere.\n+\t(fallback_backtrace): Use it to limit stack unwind.\n+\n 2009-09-16  Jonathan Yong  <jon_y@users.sourceforge.net>\n \n \t* gnu/java/security/jce/prng/natVMSecureRandomWin32.cc: Correct"}, {"sha": "e923fa30c5ea76dd7650bfefbe43d8849ea55a46", "filename": "libjava/Makefile.am", "status": "modified", "additions": 211, "deletions": 10, "changes": 221, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.am?ref=6a92b6c7aae7311777f8faafbc52a71104a78a68", "patch": "@@ -45,6 +45,170 @@ libexecsubdir = $(libexecdir)/gcc/$(target_noncanonical)/$(gcc_version)\n toolexeclib_LTLIBRARIES = libgcj.la libgij.la libgcj-tools.la\n toolexecmainlib_DATA = libgcj.spec\n \n+##\n+## These files form a closed dependency group at the lower\n+## edge of libjava's dependency graph, so can be separated out.\n+## For details of how the list was generated, see the GCC wiki:\n+##\n+##   http://gcc.gnu.org/wiki/Internal_dependencies_of_libgcj\n+##\n+LOWER_PACKAGE_FILES_LO = \\\n+\t$(propertyo_files) \\\n+\tgnu-CORBA.lo \\\n+\tgnu-java-awt-dnd-peer-gtk.lo \\\n+\tgnu-java-awt-peer-gtk.lo \\\n+\tgnu-java-awt-peer-swing.lo \\\n+\tgnu-java-lang-management.lo \\\n+\tgnu-javax-management.lo \\\n+\tgnu-javax-rmi.lo \\\n+\tgnu-javax-sound-midi.lo \\\n+\tgnu-xml-aelfred2.lo \\\n+\tgnu-xml-dom.lo \\\n+\tgnu-xml-libxmlj.lo \\\n+\tgnu-xml-pipeline.lo \\\n+\tgnu-xml-stream.lo \\\n+\tgnu-xml-transform.lo \\\n+\tgnu-xml-util.lo \\\n+\tgnu-xml-validation.lo \\\n+\tgnu-xml-xpath.lo \\\n+\tjava-lang-management.lo \\\n+\tjavax-imageio.lo \\\n+\tjavax-rmi.lo \\\n+\tjni-libjvm.lo \\\n+\torg-omg-CORBA.lo \\\n+\torg-omg-CORBA_2_3.lo \\\n+\torg-omg-CosNaming.lo \\\n+\torg-omg-Dynamic.lo \\\n+\torg-omg-DynamicAny.lo \\\n+\torg-omg-IOP.lo \\\n+\torg-omg-Messaging.lo \\\n+\torg-omg-PortableInterceptor.lo \\\n+\torg-omg-PortableServer.lo \\\n+\torg-omg-SendingContext.lo \\\n+\torg-omg-stub.lo \\\n+\torg-relaxng.lo \\\n+\torg-xml.lo \\\n+\tMETA-INF/services/java.util.prefs.PreferencesFactory.in.lo \\\n+\tMETA-INF/services/java.util.prefs.PreferencesFactory.lo \\\n+\tMETA-INF/services/javax.sound.midi.spi.MidiDeviceProvider.lo \\\n+\tMETA-INF/services/javax.sound.midi.spi.MidiFileReader.lo \\\n+\tMETA-INF/services/javax.sound.midi.spi.MidiFileWriter.lo \\\n+\tMETA-INF/services/javax.sound.sampled.spi.AudioFileReader.lo \\\n+\tclasspath/native/jni/classpath/jcl.lo \\\n+\tclasspath/native/jni/classpath/jnilink.lo \\\n+\tclasspath/native/jni/java-math/gnu_java_math_GMP.lo \\\n+\tclasspath/tools/libgcj_tools_la-tools.lo \\\n+\tgnu/awt.lo \\\n+\tgnu/awt/j2d.lo \\\n+\tgnu/gcj/io.lo \\\n+\tgnu/gcj/io/natSimpleSHSStream.lo \\\n+\tgnu/gcj/io/shs.lo \\\n+\tgnu/gcj/tools/gcj_dbtool.lo \\\n+\tgnu/gcj/util/natDebug.lo \\\n+\tgnu/gcj/util/natGCInfo.lo \\\n+\tgnu/java/awt/dnd.lo \\\n+\tgnu/java/awt/font.lo \\\n+\tgnu/java/awt/image.lo \\\n+\tgnu/java/awt/print.lo \\\n+\tgnu/java/awt/font/autofit.lo \\\n+\tgnu/java/awt/font/opentype.lo \\\n+\tgnu/java/awt/font/opentype/truetype.lo \\\n+\tgnu/java/lang/management/natVMClassLoadingMXBeanImpl.lo \\\n+\tgnu/java/lang/management/natVMCompilationMXBeanImpl.lo \\\n+\tgnu/java/lang/management/natVMGarbageCollectorMXBeanImpl.lo \\\n+\tgnu/java/lang/management/natVMMemoryMXBeanImpl.lo \\\n+\tgnu/java/lang/management/natVMMemoryManagerMXBeanImpl.lo \\\n+\tgnu/java/lang/management/natVMMemoryPoolMXBeanImpl.lo \\\n+\tgnu/java/lang/management/natVMOperatingSystemMXBeanImpl.lo \\\n+\tgnu/java/lang/management/natVMRuntimeMXBeanImpl.lo \\\n+\tgnu/java/lang/management/natVMThreadMXBeanImpl.lo \\\n+\tgnu/java/net/local.lo \\\n+\tgnu/java/net/protocol/ftp.lo \\\n+\tgnu/java/net/protocol/gcjlib.lo \\\n+\tgnu/java/net/protocol/https.lo \\\n+\tgnu/javax/imageio.lo \\\n+\tgnu/javax/print.lo \\\n+\tgnu/javax/sound.lo \\\n+\tgnu/javax/activation/viewers.lo \\\n+\tgnu/javax/imageio/bmp.lo \\\n+\tgnu/javax/imageio/gif.lo \\\n+\tgnu/javax/imageio/jpeg.lo \\\n+\tgnu/javax/imageio/png.lo \\\n+\tgnu/javax/naming/giop.lo \\\n+\tgnu/javax/naming/ictxImpl/trans.lo \\\n+\tgnu/javax/naming/jndi/url/corbaname.lo \\\n+\tgnu/javax/naming/jndi/url/rmi.lo \\\n+\tgnu/javax/print/ipp.lo \\\n+\tgnu/javax/print/ipp/attribute.lo \\\n+\tgnu/javax/print/ipp/attribute/defaults.lo \\\n+\tgnu/javax/print/ipp/attribute/job.lo \\\n+\tgnu/javax/print/ipp/attribute/printer.lo \\\n+\tgnu/javax/print/ipp/attribute/supported.lo \\\n+\tgnu/javax/security/auth/login.lo \\\n+\tgnu/javax/sound/sampled/AU.lo \\\n+\tgnu/javax/sound/sampled/WAV.lo \\\n+\tgnu/javax/swing/plaf/gnu.lo \\\n+\tgnu/javax/swing/plaf/metal.lo \\\n+\tjava/sql.lo \\\n+\tjava/awt/im.lo \\\n+\tjava/awt/print.lo \\\n+\tjava/awt/im/spi.lo \\\n+\tjava/security/acl.lo \\\n+\tjavax/activation.lo \\\n+\tjavax/activity.lo \\\n+\tjavax/management.lo \\\n+\tjavax/naming.lo \\\n+\tjavax/print.lo \\\n+\tjavax/sql.lo \\\n+\tjavax/tools.lo \\\n+\tjavax/transaction.lo \\\n+\tjavax/management/loading.lo \\\n+\tjavax/management/openmbean.lo \\\n+\tjavax/management/remote.lo \\\n+\tjavax/management/remote/rmi.lo \\\n+\tjavax/naming/directory.lo \\\n+\tjavax/naming/event.lo \\\n+\tjavax/naming/ldap.lo \\\n+\tjavax/naming/spi.lo \\\n+\tjavax/print/attribute.lo \\\n+\tjavax/print/event.lo \\\n+\tjavax/print/attribute/standard.lo \\\n+\tjavax/security/cert.lo \\\n+\tjavax/security/auth/kerberos.lo \\\n+\tjavax/security/auth/login.lo \\\n+\tjavax/security/auth/spi.lo \\\n+\tjavax/sound/midi.lo \\\n+\tjavax/sound/midi/spi.lo \\\n+\tjavax/swing/plaf/multi.lo \\\n+\tjavax/swing/plaf/synth.lo \\\n+\tjavax/swing/text/rtf.lo \\\n+\tjavax/swing/text/html/default.css.lo \\\n+\tjavax/transaction/xa.lo \\\n+\torg/ietf/jgss.lo \\\n+\tsun/awt.lo\n+\n+##\n+## Lists of all .lo files, and filtered core and non-core lists.\n+## \n+ALL_PACKAGE_SOURCE_FILES_LO = $(all_packages_source_files:.list=.lo) $(propertyo_files) $(bc_objects)\n+NONCORE_PACKAGE_SOURCE_FILES_LO = $(filter $(LOWER_PACKAGE_FILES_LO),$(ALL_PACKAGE_SOURCE_FILES_LO))\n+CORE_PACKAGE_SOURCE_FILES_LO = $(filter-out $(LOWER_PACKAGE_FILES_LO),$(ALL_PACKAGE_SOURCE_FILES_LO))\n+\n+##\n+## Assign objects to output libraries.\n+##\n+if BUILD_SUBLIBS\n+toolexeclib_LTLIBRARIES += libgcj-noncore.la\n+libgcj_noncore_la_LIBADD_SUBOBJECTS = $(NONCORE_PACKAGE_SOURCE_FILES_LO)\n+libgcj_la_LIBADD_SUBOBJECTS = $(CORE_PACKAGE_SOURCE_FILES_LO)\n+libgcj_la_LDFLAGS_NOUNDEF = -no-undefined -bindir $(bindir)\n+else\n+# If not building sublibraries, everything goes in libgcj,\n+# and it cannot be usefully built shared on PE platforms.\n+libgcj_la_LIBADD_SUBOBJECTS = $(ALL_PACKAGE_SOURCE_FILES_LO)\n+libgcj_la_LDFLAGS_NOUNDEF = \n+endif\n+\n if USE_LIBGCJ_BC\n toolexeclib_LTLIBRARIES += libgcj_bc.la\n endif\n@@ -218,10 +382,13 @@ BOOTCLASSPATH = $(srcdir)/classpath/lib\n \n libgij_la_SOURCES = gij.cc\n libgij_la_DEPENDENCIES = libgcj.la libgcj.spec\n+if BUILD_SUBLIBS\n+libgij_la_DEPENDENCIES += libgcj-noncore.la\n+endif\n ## See jv_convert_LDADD.\n libgij_la_LIBADD = -L$(here)/.libs libgcj.la\n ## The mysterious backslash in the grep pattern is consumed by make.\n-libgij_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n+libgij_la_LDFLAGS = -rpath $(toolexeclibdir) -no-undefined -bindir $(bindir) \\\n         -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC)\n libgij_la_LINK = $(CXXLINK) $(libgij_la_LDFLAGS)\n \n@@ -278,23 +445,21 @@ xlib_nat_files = $(xlib_nat_source_files:.cc=.lo)\n # certain linuxthread functions get linked:\n ## The mysterious backslash in the grep pattern is consumed by make.\n libgcj_la_LDFLAGS = -rpath $(toolexeclibdir) $(THREADLDFLAGS) $(extra_ldflags) $(THREADLIBS) \\\n-\t$(LIBLTDL) $(SYS_ZLIBS) \\\n+\t$(LIBLTDL) $(SYS_ZLIBS) $(libgcj_la_LDFLAGS_NOUNDEF) \\\n \t-version-info `grep -v '^\\#' $(srcdir)/libtool-version` \\\n \t$(LIBGCJ_LD_SYMBOLIC_FUNCTIONS)\n libgcj_la_LIBADD = \\\n \tclasspath/native/fdlibm/libfdlibm.la \\\n \tjava/lang/Object.lo \\\n \tjava/lang/Class.lo \\\n \tjava/process-$(PLATFORM).lo \\\n-\t$(all_packages_source_files:.list=.lo) \\\n-\t$(bc_objects) \\\n-\t$(propertyo_files) \\\n+\t$(libgcj_la_LIBADD_SUBOBJECTS) \\\n \t$(LIBFFI) $(ZLIBS) $(GCLIBS)\n libgcj_la_DEPENDENCIES = libgcj-$(gcc_version).jar \\\n \tjava/lang/Object.lo \\\n \tjava/lang/Class.lo \\\n \tjava/process-$(PLATFORM).lo \\\n-\t$(all_packages_source_files:.list=.lo) \\\n+\t$(ALL_PACKAGE_SOURCE_FILES_LO) \\\n \t$(LIBLTDL) $(libgcj_la_LIBADD)\n if ANONVERSCRIPT\n libgcj_la_DEPENDENCIES += $(srcdir)/libgcj.ver\n@@ -306,6 +471,19 @@ libgcj_la_LINK = $(LIBLINK) $(libgcj_la_LDFLAGS)\n ## compiled.\n EXTRA_libgcj_la_SOURCES = java/lang/Object.java\n \n+if BUILD_SUBLIBS\n+libgcj_noncore_la_SOURCES =\n+libgcj_noncore_la_LDFLAGS = $(libgcj_la_LDFLAGS)\n+libgcj_noncore_la_LIBADD = $(libgcj_noncore_la_LIBADD_SUBOBJECTS) \\\n+\t\t$(LIBFFI) $(ZLIBS) $(GCLIBS) libgcj.la\n+libgcj_noncore_la_DEPENDENCIES = libgcj-$(gcc_version).jar $(LIBLTDL) \\\n+\t\t$(libgcj_noncore_la_LIBADD) libgcj.la\n+if ANONVERSCRIPT\n+libgcj_noncore_la_DEPENDENCIES += $(srcdir)/libgcj.ver\n+endif\n+libgcj_noncore_la_LINK = $(libgcj_la_LINK)\n+endif\n+\n # We compile libgcj_tools with -findirect-dispatch so that they can\n # depend on external classes: in particular, gjdoc uses antlr.  In\n # addition, -fno-bootstrap-classes ensures that the tools are loaded\n@@ -317,16 +495,24 @@ libgcj_tools_la_GCJFLAGS = $(AM_GCJFLAGS) -findirect-dispatch \\\n  -fsource-filename=$(here)/classpath/tools/all-classes.lst\n libgcj_tools_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n  -version-info `grep -v '^\\#' $(srcdir)/libtool-version` \\\n- $(LIBGCJ_LD_SYMBOLIC_FUNCTIONS)\n+ $(LIBGCJ_LD_SYMBOLIC_FUNCTIONS) -no-undefined -bindir $(bindir)\n+libgcj_tools_la_LIBADD = libgcj.la\n libgcj_tools_la_DEPENDENCIES = libgcj.la libgcj.spec\n+if BUILD_SUBLIBS\n+libgcj_tools_la_DEPENDENCIES += libgcj-noncore.la\n+endif\n libgcj_tools_la_LINK = $(LIBLINK) $(libgcj_tools_la_LDFLAGS)\n \n ## libjvm.so\n libjvm_la_SOURCES = jni-libjvm.cc\n libjvm_la_DEPENDENCIES = libgcj.la libgcj.spec\n+if BUILD_SUBLIBS\n+libjvm_la_DEPENDENCIES += libgcj-noncore.la\n+endif\n ## See jv_convert_LDADD.\n libjvm_la_LIBADD = -L$(here)/.libs libgcj.la\n-libjvm_la_LDFLAGS = -avoid-version $(LIBGCJ_LD_SYMBOLIC)\n+libjvm_la_LDFLAGS = -avoid-version $(LIBGCJ_LD_SYMBOLIC) \\\n+ -no-undefined -bindir $(bindir)\n libjvm_la_LINK = $(CXXLINK) $(libjvm_la_LDFLAGS)\n \n ## The .db file.  This rule is only used for native builds, so it is\n@@ -344,6 +530,9 @@ lib_gnu_awt_xlib_la_LIBADD = gnu/awt/xlib.lo gnu/gcj/xlib.lo\n lib_gnu_awt_xlib_la_DEPENDENCIES = libgcj-$(gcc_version).jar \\\n \tlibgcj.la libgcj.spec \\\n \t$(lib_gnu_awt_xlib_la_LIBADD)\n+if BUILD_SUBLIBS\n+lib_gnu_awt_xlib_la_DEPENDENCIES += libgcj-noncore.la\n+endif\n ## We require libstdc++-v3 to be in the same build tree.\n lib_gnu_awt_xlib_la_CPPFLAGS = \\\n \t$(AM_CPPFLAGS) \\\n@@ -353,7 +542,7 @@ lib_gnu_awt_xlib_la_CPPFLAGS = \\\n ## The mysterious backslash in the grep pattern is consumed by make.\n lib_gnu_awt_xlib_la_LDFLAGS = ../libstdc++-v3/src/libstdc++.la \\\n \t@X_PRE_LIBS@ @X_LIBS@ -lX11 @X_EXTRA_LIBS@ \\\n-        -rpath $(toolexeclibdir) \\\n+        -rpath $(toolexeclibdir) -no-undefined -bindir $(bindir) \\\n         -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC)\n lib_gnu_awt_xlib_la_LINK = $(LIBLINK) $(lib_gnu_awt_xlib_la_LDFLAGS)\n \n@@ -363,7 +552,7 @@ lib_gnu_awt_xlib_la_LINK = $(LIBLINK) $(lib_gnu_awt_xlib_la_LDFLAGS)\n ## This library is not linked against libgcj.\n libgcj_bc_la_SOURCES = libgcj_bc.c\n libgcj_bc_la_LDFLAGS = -rpath $(toolexeclibdir) -no-static -version-info 1:0:0 \\\n-\t$(LIBGCJ_LD_SYMBOLIC_FUNCTIONS)\n+\t$(LIBGCJ_LD_SYMBOLIC_FUNCTIONS) -no-undefined -bindir $(bindir)\n libgcj_bc_la_DEPENDENCIES = libgcj.la\n libgcj_bc_la_LINK = $(LIBLINK) $(libgcj_bc_la_LDFLAGS)\n ## This is specific to Linux/{Free,Net,Open}BSD/Hurd and perhaps few others.\n@@ -826,6 +1015,9 @@ jv_convert_LDADD = -L$(here)/.libs libgcj.la\n ## Depend on the spec file to make sure it is up to date before\n ## linking this program.\n jv_convert_DEPENDENCIES = libgcj.la libgcj.spec\n+if BUILD_SUBLIBS\n+jv_convert_DEPENDENCIES += libgcj-noncore.la\n+endif\n \n gcj_dbtool_SOURCES = \\\n gnu/gcj/tools/gcj_dbtool/natMain.cc\n@@ -847,6 +1039,9 @@ gcj_dbtool_LDADD = gnu/gcj/tools/gcj_dbtool.lo -L$(here)/.libs libgcj.la\n ## Depend on the spec file to make sure it is up to date before\n ## linking this program.\n gcj_dbtool_DEPENDENCIES = gnu/gcj/tools/gcj_dbtool.lo libgcj.la libgcj.spec\n+if BUILD_SUBLIBS\n+gcj_dbtool_DEPENDENCIES += libgcj-noncore.la\n+endif\n \n gc_analyze_SOURCES =\n \n@@ -861,6 +1056,9 @@ gc_analyze_LDADD = -L$(here)/.libs libgcj-tools.la libgcj.la\n ## Depend on the spec file to make sure it is up to date before\n ## linking this program.\n gc_analyze_DEPENDENCIES = libgcj-tools.la libgcj.la libgcj.spec\n+if BUILD_SUBLIBS\n+gc_analyze_DEPENDENCIES += libgcj-noncore.la\n+endif\n \n gij_SOURCES = \n ## We need -nodefaultlibs because we want to avoid gcj's `-lgcj'.  We\n@@ -899,6 +1097,9 @@ endif !ENABLE_SHARED\n \n ecjx_LDADD = -L$(here)/.libs $(extra_ldflags)\n ecjx_DEPENDENCIES = libgcj.la libgcj.spec\n+if BUILD_SUBLIBS\n+ecjx_DEPENDENCIES += libgcj-noncore.la\n+endif\n if USE_LIBGCJ_BC\n ecjx_DEPENDENCIES += libgcj_bc.la\n else"}, {"sha": "83c4c6069752f9e8dfa0b1534b9dd63fa402c339", "filename": "libjava/Makefile.in", "status": "modified", "additions": 249, "deletions": 73, "changes": 322, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2FMakefile.in?ref=6a92b6c7aae7311777f8faafbc52a71104a78a68", "patch": "@@ -39,26 +39,32 @@ build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n @TESTSUBDIR_TRUE@am__append_1 = testsuite\n-@USE_LIBGCJ_BC_TRUE@am__append_2 = libgcj_bc.la\n-@XLIB_AWT_TRUE@am__append_3 = lib-gnu-awt-xlib.la\n-@INSTALL_ECJ_JAR_TRUE@am__append_4 = $(ECJ_BUILD_JAR)\n-@CREATE_GJDOC_TRUE@@NATIVE_TRUE@am__append_5 = gjdoc\n+@BUILD_SUBLIBS_TRUE@am__append_2 = libgcj-noncore.la\n+@USE_LIBGCJ_BC_TRUE@am__append_3 = libgcj_bc.la\n+@XLIB_AWT_TRUE@am__append_4 = lib-gnu-awt-xlib.la\n+@INSTALL_ECJ_JAR_TRUE@am__append_5 = $(ECJ_BUILD_JAR)\n+@CREATE_GJDOC_TRUE@@NATIVE_TRUE@am__append_6 = gjdoc\n @NATIVE_TRUE@noinst_PROGRAMS = $(am__EXEEXT_3) $(am__EXEEXT_4)\n @INSTALL_BINARIES_TRUE@@NATIVE_TRUE@bin_PROGRAMS = $(am__EXEEXT_2)\n-@INSTALL_BINARIES_FALSE@@NATIVE_TRUE@am__append_6 = $(bin_programs)\n-@INSTALL_AOT_RPM_TRUE@am__append_7 = contrib/aot-compile-rpm\n+@INSTALL_BINARIES_FALSE@@NATIVE_TRUE@am__append_7 = $(bin_programs)\n+@INSTALL_AOT_RPM_TRUE@am__append_8 = contrib/aot-compile-rpm\n @BUILD_ECJ1_TRUE@libexecsub_PROGRAMS = ecjx$(EXEEXT)\n-@ANONVERSCRIPT_TRUE@am__append_8 = -Wl,--version-script=$(srcdir)/libgcj.ver\n-@USING_GCC_TRUE@am__append_9 = $(WARNINGS)\n-@USING_BOEHMGC_TRUE@am__append_10 = boehm.cc\n-@USING_NOGC_TRUE@am__append_11 = nogc.cc\n-@USING_POSIX_PLATFORM_TRUE@am__append_12 = posix.cc\n-@USING_WIN32_PLATFORM_TRUE@am__append_13 = win32.cc\n-@USING_DARWIN_CRT_TRUE@am__append_14 = darwin.cc\n-@USING_POSIX_THREADS_TRUE@am__append_15 = posix-threads.cc\n-@USING_WIN32_THREADS_TRUE@am__append_16 = win32-threads.cc\n-@USING_NO_THREADS_TRUE@am__append_17 = no-threads.cc\n-@ANONVERSCRIPT_TRUE@am__append_18 = $(srcdir)/libgcj.ver\n+@ANONVERSCRIPT_TRUE@am__append_9 = -Wl,--version-script=$(srcdir)/libgcj.ver\n+@USING_GCC_TRUE@am__append_10 = $(WARNINGS)\n+@BUILD_SUBLIBS_TRUE@am__append_11 = libgcj-noncore.la\n+@USING_BOEHMGC_TRUE@am__append_12 = boehm.cc\n+@USING_NOGC_TRUE@am__append_13 = nogc.cc\n+@USING_POSIX_PLATFORM_TRUE@am__append_14 = posix.cc\n+@USING_WIN32_PLATFORM_TRUE@am__append_15 = win32.cc\n+@USING_DARWIN_CRT_TRUE@am__append_16 = darwin.cc\n+@USING_POSIX_THREADS_TRUE@am__append_17 = posix-threads.cc\n+@USING_WIN32_THREADS_TRUE@am__append_18 = win32-threads.cc\n+@USING_NO_THREADS_TRUE@am__append_19 = no-threads.cc\n+@ANONVERSCRIPT_TRUE@am__append_20 = $(srcdir)/libgcj.ver\n+@ANONVERSCRIPT_TRUE@@BUILD_SUBLIBS_TRUE@am__append_21 = $(srcdir)/libgcj.ver\n+@BUILD_SUBLIBS_TRUE@am__append_22 = libgcj-noncore.la\n+@BUILD_SUBLIBS_TRUE@am__append_23 = libgcj-noncore.la\n+@BUILD_SUBLIBS_TRUE@am__append_24 = libgcj-noncore.la\n DIST_COMMON = README $(am__configure_deps) $(srcdir)/../compile \\\n \t$(srcdir)/../config.guess $(srcdir)/../config.sub \\\n \t$(srcdir)/../depcomp $(srcdir)/../install-sh \\\n@@ -76,10 +82,14 @@ DIST_COMMON = README $(am__configure_deps) $(srcdir)/../compile \\\n \t$(top_srcdir)/gnu/java/nio/natVMSelector${PLATFORM}.cc \\\n \t$(top_srcdir)/java/lang/nat${PLATFORM}Process.cc \\\n \t$(top_srcdir)/scripts/jar.in COPYING ChangeLog NEWS THANKS\n-@MAINTAINER_MODE_TRUE@@NATIVE_TRUE@am__append_19 = gen-from-JIS\n-@NATIVE_TRUE@@USE_LIBGCJ_BC_TRUE@am__append_20 = libgcj_bc.la\n-@NATIVE_TRUE@@USE_LIBGCJ_BC_FALSE@am__append_21 = libgcj.la\n-@XLIB_AWT_TRUE@am__append_22 = $(xlib_nat_headers)\n+@MAINTAINER_MODE_TRUE@@NATIVE_TRUE@am__append_25 = gen-from-JIS\n+@BUILD_SUBLIBS_TRUE@am__append_26 = libgcj-noncore.la\n+@BUILD_SUBLIBS_TRUE@am__append_27 = libgcj-noncore.la\n+@BUILD_SUBLIBS_TRUE@am__append_28 = libgcj-noncore.la\n+@BUILD_SUBLIBS_TRUE@@NATIVE_TRUE@am__append_29 = libgcj-noncore.la\n+@NATIVE_TRUE@@USE_LIBGCJ_BC_TRUE@am__append_30 = libgcj_bc.la\n+@NATIVE_TRUE@@USE_LIBGCJ_BC_FALSE@am__append_31 = libgcj.la\n+@XLIB_AWT_TRUE@am__append_32 = $(xlib_nat_headers)\n subdir = .\n ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n am__aclocal_m4_deps = $(top_srcdir)/libltdl/acinclude.m4 \\\n@@ -174,10 +184,14 @@ am__objects_1 = gnu/gcj/xlib/lib_gnu_awt_xlib_la-natClip.lo \\\n am_lib_gnu_awt_xlib_la_OBJECTS = $(am__objects_1)\n lib_gnu_awt_xlib_la_OBJECTS = $(am_lib_gnu_awt_xlib_la_OBJECTS)\n @XLIB_AWT_TRUE@am_lib_gnu_awt_xlib_la_rpath = -rpath $(toolexeclibdir)\n-libgcj_tools_la_LIBADD =\n+am__DEPENDENCIES_1 =\n+am_libgcj_noncore_la_OBJECTS =\n+libgcj_noncore_la_OBJECTS = $(am_libgcj_noncore_la_OBJECTS)\n+@BUILD_SUBLIBS_TRUE@am_libgcj_noncore_la_rpath = -rpath \\\n+@BUILD_SUBLIBS_TRUE@\t$(toolexeclibdir)\n am_libgcj_tools_la_OBJECTS = classpath/tools/libgcj_tools_la-tools.lo\n libgcj_tools_la_OBJECTS = $(am_libgcj_tools_la_OBJECTS)\n-@INTERPRETER_TRUE@am__DEPENDENCIES_1 = gnu/classpath/jdwp.lo \\\n+@INTERPRETER_TRUE@am__DEPENDENCIES_2 = gnu/classpath/jdwp.lo \\\n @INTERPRETER_TRUE@\tgnu/classpath/jdwp/event.lo \\\n @INTERPRETER_TRUE@\tgnu/classpath/jdwp/event/filters.lo \\\n @INTERPRETER_TRUE@\tgnu/classpath/jdwp/exception.lo \\\n@@ -186,7 +200,7 @@ libgcj_tools_la_OBJECTS = $(am_libgcj_tools_la_OBJECTS)\n @INTERPRETER_TRUE@\tgnu/classpath/jdwp/transport.lo \\\n @INTERPRETER_TRUE@\tgnu/classpath/jdwp/util.lo \\\n @INTERPRETER_TRUE@\tgnu/classpath/jdwp/value.lo gnu/gcj/jvmti.lo\n-am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n+am__DEPENDENCIES_3 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tgnu/classpath/debug.lo gnu/classpath/toolkit.lo gnu/gcj.lo \\\n \tgnu/gcj/convert.lo gnu/gcj/io.lo gnu/gcj/runtime.lo \\\n \tgnu/gcj/util.lo gnu/java/awt.lo gnu/java/awt/color.lo \\\n@@ -303,8 +317,12 @@ am__DEPENDENCIES_2 = gnu/awt.lo gnu/awt/j2d.lo gnu/classpath.lo \\\n \tjavax/swing/undo.lo javax/tools.lo javax/transaction.lo \\\n \tjavax/transaction/xa.lo org/ietf/jgss.lo sun/awt.lo \\\n \tsun/misc.lo sun/reflect.lo sun/reflect/annotation.lo \\\n-\tsun/reflect/misc.lo $(am__DEPENDENCIES_1)\n-am__DEPENDENCIES_3 =\n+\tsun/reflect/misc.lo $(am__DEPENDENCIES_2)\n+am__DEPENDENCIES_4 = $(am__DEPENDENCIES_3) $(propertyo_files) \\\n+\t$(bc_objects)\n+@BUILD_SUBLIBS_FALSE@am__DEPENDENCIES_5 = $(am__DEPENDENCIES_4)\n+@BUILD_SUBLIBS_TRUE@am__DEPENDENCIES_5 =  \\\n+@BUILD_SUBLIBS_TRUE@\t$(CORE_PACKAGE_SOURCE_FILES_LO)\n am__libgcj_la_SOURCES_DIST = prims.cc jni.cc exception.cc \\\n \tstacktrace.cc link.cc defineclass.cc verify.cc jvmti.cc \\\n \tinterpret.cc gnu/classpath/jdwp/natVMFrame.cc \\\n@@ -538,23 +556,23 @@ GCJCOMPILE = $(GCJ) $(AM_GCJFLAGS) $(GCJFLAGS)\n LTGCJCOMPILE = $(LIBTOOL) --tag=GCJ $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n \t--mode=compile $(GCJ) $(AM_GCJFLAGS) $(GCJFLAGS)\n GCJLD = $(GCJ)\n-SOURCES = $(lib_gnu_awt_xlib_la_SOURCES) $(libgcj_tools_la_SOURCES) \\\n-\t$(libgcj_la_SOURCES) $(EXTRA_libgcj_la_SOURCES) \\\n-\t$(libgcj_bc_la_SOURCES) $(libgij_la_SOURCES) \\\n-\t$(libjvm_la_SOURCES) $(ecjx_SOURCES) $(gappletviewer_SOURCES) \\\n-\t$(gc_analyze_SOURCES) $(gcj_dbtool_SOURCES) $(gcjh_SOURCES) \\\n-\t$(gen_from_JIS_SOURCES) $(gij_SOURCES) $(gjar_SOURCES) \\\n-\t$(gjarsigner_SOURCES) $(gjavah_SOURCES) $(gjdoc_SOURCES) \\\n-\t$(gkeytool_SOURCES) $(gnative2ascii_SOURCES) $(gorbd_SOURCES) \\\n-\t$(grmic_SOURCES) $(grmid_SOURCES) $(grmiregistry_SOURCES) \\\n-\t$(gserialver_SOURCES) $(gtnameserv_SOURCES) \\\n-\t$(jv_convert_SOURCES)\n-DIST_SOURCES = $(lib_gnu_awt_xlib_la_SOURCES) \\\n-\t$(libgcj_tools_la_SOURCES) $(am__libgcj_la_SOURCES_DIST) \\\n+SOURCES = $(lib_gnu_awt_xlib_la_SOURCES) $(libgcj_noncore_la_SOURCES) \\\n+\t$(libgcj_tools_la_SOURCES) $(libgcj_la_SOURCES) \\\n \t$(EXTRA_libgcj_la_SOURCES) $(libgcj_bc_la_SOURCES) \\\n \t$(libgij_la_SOURCES) $(libjvm_la_SOURCES) $(ecjx_SOURCES) \\\n \t$(gappletviewer_SOURCES) $(gc_analyze_SOURCES) \\\n-\t$(gcj_dbtool_SOURCES) $(gcjh_SOURCES) \\\n+\t$(gcj_dbtool_SOURCES) $(gcjh_SOURCES) $(gen_from_JIS_SOURCES) \\\n+\t$(gij_SOURCES) $(gjar_SOURCES) $(gjarsigner_SOURCES) \\\n+\t$(gjavah_SOURCES) $(gjdoc_SOURCES) $(gkeytool_SOURCES) \\\n+\t$(gnative2ascii_SOURCES) $(gorbd_SOURCES) $(grmic_SOURCES) \\\n+\t$(grmid_SOURCES) $(grmiregistry_SOURCES) $(gserialver_SOURCES) \\\n+\t$(gtnameserv_SOURCES) $(jv_convert_SOURCES)\n+DIST_SOURCES = $(lib_gnu_awt_xlib_la_SOURCES) \\\n+\t$(libgcj_noncore_la_SOURCES) $(libgcj_tools_la_SOURCES) \\\n+\t$(am__libgcj_la_SOURCES_DIST) $(EXTRA_libgcj_la_SOURCES) \\\n+\t$(libgcj_bc_la_SOURCES) $(libgij_la_SOURCES) \\\n+\t$(libjvm_la_SOURCES) $(ecjx_SOURCES) $(gappletviewer_SOURCES) \\\n+\t$(gc_analyze_SOURCES) $(gcj_dbtool_SOURCES) $(gcjh_SOURCES) \\\n \t$(am__gen_from_JIS_SOURCES_DIST) $(gij_SOURCES) \\\n \t$(gjar_SOURCES) $(gjarsigner_SOURCES) $(gjavah_SOURCES) \\\n \t$(gjdoc_SOURCES) $(gkeytool_SOURCES) $(gnative2ascii_SOURCES) \\\n@@ -802,7 +820,7 @@ dvidir = @dvidir@\n exec_prefix = @exec_prefix@\n extra_gij_ldflags = @extra_gij_ldflags@\n extra_ldflags = @extra_ldflags@\n-extra_ldflags_libjava = @extra_ldflags_libjava@ $(am__append_8)\n+extra_ldflags_libjava = @extra_ldflags_libjava@ $(am__append_9)\n gcc_suffix = @gcc_suffix@\n gcjsubdir = @gcjsubdir@\n gxx_include_dir = @gxx_include_dir@\n@@ -883,13 +901,158 @@ write_entries_to_file = $(shell rm -f $(2) || :) $(shell touch $(2)) \\\n libsubdir = $(libdir)/gcc/$(target_noncanonical)/$(gcc_version)\n libexecsubdir = $(libexecdir)/gcc/$(target_noncanonical)/$(gcc_version)\n toolexeclib_LTLIBRARIES = libgcj.la libgij.la libgcj-tools.la \\\n-\t$(am__append_2) $(am__append_3)\n+\t$(am__append_2) $(am__append_3) $(am__append_4)\n toolexecmainlib_DATA = libgcj.spec\n+LOWER_PACKAGE_FILES_LO = \\\n+\t$(propertyo_files) \\\n+\tgnu-CORBA.lo \\\n+\tgnu-java-awt-dnd-peer-gtk.lo \\\n+\tgnu-java-awt-peer-gtk.lo \\\n+\tgnu-java-awt-peer-swing.lo \\\n+\tgnu-java-lang-management.lo \\\n+\tgnu-javax-management.lo \\\n+\tgnu-javax-rmi.lo \\\n+\tgnu-javax-sound-midi.lo \\\n+\tgnu-xml-aelfred2.lo \\\n+\tgnu-xml-dom.lo \\\n+\tgnu-xml-libxmlj.lo \\\n+\tgnu-xml-pipeline.lo \\\n+\tgnu-xml-stream.lo \\\n+\tgnu-xml-transform.lo \\\n+\tgnu-xml-util.lo \\\n+\tgnu-xml-validation.lo \\\n+\tgnu-xml-xpath.lo \\\n+\tjava-lang-management.lo \\\n+\tjavax-imageio.lo \\\n+\tjavax-rmi.lo \\\n+\tjni-libjvm.lo \\\n+\torg-omg-CORBA.lo \\\n+\torg-omg-CORBA_2_3.lo \\\n+\torg-omg-CosNaming.lo \\\n+\torg-omg-Dynamic.lo \\\n+\torg-omg-DynamicAny.lo \\\n+\torg-omg-IOP.lo \\\n+\torg-omg-Messaging.lo \\\n+\torg-omg-PortableInterceptor.lo \\\n+\torg-omg-PortableServer.lo \\\n+\torg-omg-SendingContext.lo \\\n+\torg-omg-stub.lo \\\n+\torg-relaxng.lo \\\n+\torg-xml.lo \\\n+\tMETA-INF/services/java.util.prefs.PreferencesFactory.in.lo \\\n+\tMETA-INF/services/java.util.prefs.PreferencesFactory.lo \\\n+\tMETA-INF/services/javax.sound.midi.spi.MidiDeviceProvider.lo \\\n+\tMETA-INF/services/javax.sound.midi.spi.MidiFileReader.lo \\\n+\tMETA-INF/services/javax.sound.midi.spi.MidiFileWriter.lo \\\n+\tMETA-INF/services/javax.sound.sampled.spi.AudioFileReader.lo \\\n+\tclasspath/native/jni/classpath/jcl.lo \\\n+\tclasspath/native/jni/classpath/jnilink.lo \\\n+\tclasspath/native/jni/java-math/gnu_java_math_GMP.lo \\\n+\tclasspath/tools/libgcj_tools_la-tools.lo \\\n+\tgnu/awt.lo \\\n+\tgnu/awt/j2d.lo \\\n+\tgnu/gcj/io.lo \\\n+\tgnu/gcj/io/natSimpleSHSStream.lo \\\n+\tgnu/gcj/io/shs.lo \\\n+\tgnu/gcj/tools/gcj_dbtool.lo \\\n+\tgnu/gcj/util/natDebug.lo \\\n+\tgnu/gcj/util/natGCInfo.lo \\\n+\tgnu/java/awt/dnd.lo \\\n+\tgnu/java/awt/font.lo \\\n+\tgnu/java/awt/image.lo \\\n+\tgnu/java/awt/print.lo \\\n+\tgnu/java/awt/font/autofit.lo \\\n+\tgnu/java/awt/font/opentype.lo \\\n+\tgnu/java/awt/font/opentype/truetype.lo \\\n+\tgnu/java/lang/management/natVMClassLoadingMXBeanImpl.lo \\\n+\tgnu/java/lang/management/natVMCompilationMXBeanImpl.lo \\\n+\tgnu/java/lang/management/natVMGarbageCollectorMXBeanImpl.lo \\\n+\tgnu/java/lang/management/natVMMemoryMXBeanImpl.lo \\\n+\tgnu/java/lang/management/natVMMemoryManagerMXBeanImpl.lo \\\n+\tgnu/java/lang/management/natVMMemoryPoolMXBeanImpl.lo \\\n+\tgnu/java/lang/management/natVMOperatingSystemMXBeanImpl.lo \\\n+\tgnu/java/lang/management/natVMRuntimeMXBeanImpl.lo \\\n+\tgnu/java/lang/management/natVMThreadMXBeanImpl.lo \\\n+\tgnu/java/net/local.lo \\\n+\tgnu/java/net/protocol/ftp.lo \\\n+\tgnu/java/net/protocol/gcjlib.lo \\\n+\tgnu/java/net/protocol/https.lo \\\n+\tgnu/javax/imageio.lo \\\n+\tgnu/javax/print.lo \\\n+\tgnu/javax/sound.lo \\\n+\tgnu/javax/activation/viewers.lo \\\n+\tgnu/javax/imageio/bmp.lo \\\n+\tgnu/javax/imageio/gif.lo \\\n+\tgnu/javax/imageio/jpeg.lo \\\n+\tgnu/javax/imageio/png.lo \\\n+\tgnu/javax/naming/giop.lo \\\n+\tgnu/javax/naming/ictxImpl/trans.lo \\\n+\tgnu/javax/naming/jndi/url/corbaname.lo \\\n+\tgnu/javax/naming/jndi/url/rmi.lo \\\n+\tgnu/javax/print/ipp.lo \\\n+\tgnu/javax/print/ipp/attribute.lo \\\n+\tgnu/javax/print/ipp/attribute/defaults.lo \\\n+\tgnu/javax/print/ipp/attribute/job.lo \\\n+\tgnu/javax/print/ipp/attribute/printer.lo \\\n+\tgnu/javax/print/ipp/attribute/supported.lo \\\n+\tgnu/javax/security/auth/login.lo \\\n+\tgnu/javax/sound/sampled/AU.lo \\\n+\tgnu/javax/sound/sampled/WAV.lo \\\n+\tgnu/javax/swing/plaf/gnu.lo \\\n+\tgnu/javax/swing/plaf/metal.lo \\\n+\tjava/sql.lo \\\n+\tjava/awt/im.lo \\\n+\tjava/awt/print.lo \\\n+\tjava/awt/im/spi.lo \\\n+\tjava/security/acl.lo \\\n+\tjavax/activation.lo \\\n+\tjavax/activity.lo \\\n+\tjavax/management.lo \\\n+\tjavax/naming.lo \\\n+\tjavax/print.lo \\\n+\tjavax/sql.lo \\\n+\tjavax/tools.lo \\\n+\tjavax/transaction.lo \\\n+\tjavax/management/loading.lo \\\n+\tjavax/management/openmbean.lo \\\n+\tjavax/management/remote.lo \\\n+\tjavax/management/remote/rmi.lo \\\n+\tjavax/naming/directory.lo \\\n+\tjavax/naming/event.lo \\\n+\tjavax/naming/ldap.lo \\\n+\tjavax/naming/spi.lo \\\n+\tjavax/print/attribute.lo \\\n+\tjavax/print/event.lo \\\n+\tjavax/print/attribute/standard.lo \\\n+\tjavax/security/cert.lo \\\n+\tjavax/security/auth/kerberos.lo \\\n+\tjavax/security/auth/login.lo \\\n+\tjavax/security/auth/spi.lo \\\n+\tjavax/sound/midi.lo \\\n+\tjavax/sound/midi/spi.lo \\\n+\tjavax/swing/plaf/multi.lo \\\n+\tjavax/swing/plaf/synth.lo \\\n+\tjavax/swing/text/rtf.lo \\\n+\tjavax/swing/text/html/default.css.lo \\\n+\tjavax/transaction/xa.lo \\\n+\torg/ietf/jgss.lo \\\n+\tsun/awt.lo\n+\n+ALL_PACKAGE_SOURCE_FILES_LO = $(all_packages_source_files:.list=.lo) $(propertyo_files) $(bc_objects)\n+NONCORE_PACKAGE_SOURCE_FILES_LO = $(filter $(LOWER_PACKAGE_FILES_LO),$(ALL_PACKAGE_SOURCE_FILES_LO))\n+CORE_PACKAGE_SOURCE_FILES_LO = $(filter-out $(LOWER_PACKAGE_FILES_LO),$(ALL_PACKAGE_SOURCE_FILES_LO))\n+@BUILD_SUBLIBS_TRUE@libgcj_noncore_la_LIBADD_SUBOBJECTS = $(NONCORE_PACKAGE_SOURCE_FILES_LO)\n+# If not building sublibraries, everything goes in libgcj,\n+# and it cannot be usefully built shared on PE platforms.\n+@BUILD_SUBLIBS_FALSE@libgcj_la_LIBADD_SUBOBJECTS = $(ALL_PACKAGE_SOURCE_FILES_LO)\n+@BUILD_SUBLIBS_TRUE@libgcj_la_LIBADD_SUBOBJECTS = $(CORE_PACKAGE_SOURCE_FILES_LO)\n+@BUILD_SUBLIBS_FALSE@libgcj_la_LDFLAGS_NOUNDEF = \n+@BUILD_SUBLIBS_TRUE@libgcj_la_LDFLAGS_NOUNDEF = -no-undefined -bindir $(bindir)\n dbexec_LTLIBRARIES = libjvm.la\n pkgconfigdir = $(libdir)/pkgconfig\n jardir = $(datadir)/java\n jar_DATA = libgcj-$(gcc_version).jar libgcj-tools-$(gcc_version).jar \\\n-\t$(am__append_4)\n+\t$(am__append_5)\n @JAVA_HOME_SET_FALSE@JAVA_HOME_DIR = $(prefix)\n @JAVA_HOME_SET_TRUE@JAVA_HOME_DIR = $(JAVA_HOME)\n @JAVA_HOME_SET_FALSE@BOOT_CLASS_PATH_DIR = $(jardir)/libgcj-$(gcc_version).jar\n@@ -899,10 +1062,10 @@ db_pathtail = $(gcjsubdir)/$(db_name)\n @NATIVE_TRUE@bin_programs = jv-convert gij grmic grmiregistry \\\n @NATIVE_TRUE@\tgcj-dbtool gappletviewer gjarsigner gkeytool gjar \\\n @NATIVE_TRUE@\tgcjh gjavah gnative2ascii gorbd grmid gserialver \\\n-@NATIVE_TRUE@\tgtnameserv gc-analyze $(am__append_5)\n+@NATIVE_TRUE@\tgtnameserv gc-analyze $(am__append_6)\n @NATIVE_TRUE@dbexec_DATA = $(db_name)\n bin_SCRIPTS = contrib/rebuild-gcj-db contrib/aot-compile \\\n-\t$(am__append_7)\n+\t$(am__append_8)\n GCJ_WITH_FLAGS = $(GCJ) --encoding=UTF-8 -Wno-deprecated\n LTLDFLAGS = $(shell $(top_srcdir)/../libtool-ldflags $(LDFLAGS))\n GCJLINK = $(LIBTOOL) --tag=GCJ $(LIBTOOLFLAGS) --mode=link $(GCJ) -L$(here) \\\n@@ -944,7 +1107,7 @@ AM_GCJFLAGS = \\\n \t--encoding=UTF-8 \\\n \t-Wno-deprecated -fbootstrap-classes\n \n-AM_CFLAGS = @LIBGCJ_CFLAGS@ $(am__append_9)\n+AM_CFLAGS = @LIBGCJ_CFLAGS@ $(am__append_10)\n @SUPPRESS_LIBGCJ_BC_FALSE@LIBGCJ_BC_FLAGS = -findirect-dispatch -fno-indirect-classes\n @SUPPRESS_LIBGCJ_BC_TRUE@LIBGCJ_BC_FLAGS = \n @BUILD_LIBGCJ_REDUCED_REFLECTION_FALSE@LIBGCJ_REDUCED_REFLECTION_FLAGS = \n@@ -962,26 +1125,26 @@ AM_CPPFLAGS = -I$(top_srcdir) \\\n \n BOOTCLASSPATH = $(srcdir)/classpath/lib\n libgij_la_SOURCES = gij.cc\n-libgij_la_DEPENDENCIES = libgcj.la libgcj.spec\n+libgij_la_DEPENDENCIES = libgcj.la libgcj.spec $(am__append_11)\n libgij_la_LIBADD = -L$(here)/.libs libgcj.la\n-libgij_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n+libgij_la_LDFLAGS = -rpath $(toolexeclibdir) -no-undefined -bindir $(bindir) \\\n         -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC)\n \n libgij_la_LINK = $(CXXLINK) $(libgij_la_LDFLAGS)\n @INTERPRETER_FALSE@libgcj_interpret_source_files = \n @INTERPRETER_TRUE@libgcj_interpret_source_files = jvmti.cc interpret.cc\n libgcj_la_SOURCES = prims.cc jni.cc exception.cc stacktrace.cc link.cc \\\n \tdefineclass.cc verify.cc $(libgcj_interpret_source_files) \\\n-\t$(nat_source_files) $(am__append_10) $(am__append_11) \\\n-\t$(am__append_12) $(am__append_13) $(am__append_14) \\\n-\t$(am__append_15) $(am__append_16) $(am__append_17)\n+\t$(nat_source_files) $(am__append_12) $(am__append_13) \\\n+\t$(am__append_14) $(am__append_15) $(am__append_16) \\\n+\t$(am__append_17) $(am__append_18) $(am__append_19)\n nat_files = $(nat_source_files:.cc=.lo)\n xlib_nat_files = $(xlib_nat_source_files:.cc=.lo)\n \n # Include THREADLIBS here to ensure that the correct version of\n # certain linuxthread functions get linked:\n libgcj_la_LDFLAGS = -rpath $(toolexeclibdir) $(THREADLDFLAGS) $(extra_ldflags) $(THREADLIBS) \\\n-\t$(LIBLTDL) $(SYS_ZLIBS) \\\n+\t$(LIBLTDL) $(SYS_ZLIBS) $(libgcj_la_LDFLAGS_NOUNDEF) \\\n \t-version-info `grep -v '^\\#' $(srcdir)/libtool-version` \\\n \t$(LIBGCJ_LD_SYMBOLIC_FUNCTIONS)\n \n@@ -990,17 +1153,25 @@ libgcj_la_LIBADD = \\\n \tjava/lang/Object.lo \\\n \tjava/lang/Class.lo \\\n \tjava/process-$(PLATFORM).lo \\\n-\t$(all_packages_source_files:.list=.lo) \\\n-\t$(bc_objects) \\\n-\t$(propertyo_files) \\\n+\t$(libgcj_la_LIBADD_SUBOBJECTS) \\\n \t$(LIBFFI) $(ZLIBS) $(GCLIBS)\n \n libgcj_la_DEPENDENCIES = libgcj-$(gcc_version).jar java/lang/Object.lo \\\n \tjava/lang/Class.lo java/process-$(PLATFORM).lo \\\n-\t$(all_packages_source_files:.list=.lo) $(LIBLTDL) \\\n-\t$(libgcj_la_LIBADD) $(am__append_18)\n+\t$(ALL_PACKAGE_SOURCE_FILES_LO) $(LIBLTDL) $(libgcj_la_LIBADD) \\\n+\t$(am__append_20)\n libgcj_la_LINK = $(LIBLINK) $(libgcj_la_LDFLAGS)\n EXTRA_libgcj_la_SOURCES = java/lang/Object.java\n+@BUILD_SUBLIBS_TRUE@libgcj_noncore_la_SOURCES = \n+@BUILD_SUBLIBS_TRUE@libgcj_noncore_la_LDFLAGS = $(libgcj_la_LDFLAGS)\n+@BUILD_SUBLIBS_TRUE@libgcj_noncore_la_LIBADD = $(libgcj_noncore_la_LIBADD_SUBOBJECTS) \\\n+@BUILD_SUBLIBS_TRUE@\t\t$(LIBFFI) $(ZLIBS) $(GCLIBS) libgcj.la\n+\n+@BUILD_SUBLIBS_TRUE@libgcj_noncore_la_DEPENDENCIES =  \\\n+@BUILD_SUBLIBS_TRUE@\tlibgcj-$(gcc_version).jar $(LIBLTDL) \\\n+@BUILD_SUBLIBS_TRUE@\t$(libgcj_noncore_la_LIBADD) libgcj.la \\\n+@BUILD_SUBLIBS_TRUE@\t$(am__append_21)\n+@BUILD_SUBLIBS_TRUE@libgcj_noncore_la_LINK = $(libgcj_la_LINK)\n \n # We compile libgcj_tools with -findirect-dispatch so that they can\n # depend on external classes: in particular, gjdoc uses antlr.  In\n@@ -1014,21 +1185,22 @@ libgcj_tools_la_GCJFLAGS = $(AM_GCJFLAGS) -findirect-dispatch \\\n \n libgcj_tools_la_LDFLAGS = -rpath $(toolexeclibdir) \\\n  -version-info `grep -v '^\\#' $(srcdir)/libtool-version` \\\n- $(LIBGCJ_LD_SYMBOLIC_FUNCTIONS)\n+ $(LIBGCJ_LD_SYMBOLIC_FUNCTIONS) -no-undefined -bindir $(bindir)\n \n-libgcj_tools_la_DEPENDENCIES = libgcj.la libgcj.spec\n+libgcj_tools_la_LIBADD = libgcj.la\n+libgcj_tools_la_DEPENDENCIES = libgcj.la libgcj.spec $(am__append_22)\n libgcj_tools_la_LINK = $(LIBLINK) $(libgcj_tools_la_LDFLAGS)\n libjvm_la_SOURCES = jni-libjvm.cc\n-libjvm_la_DEPENDENCIES = libgcj.la libgcj.spec\n+libjvm_la_DEPENDENCIES = libgcj.la libgcj.spec $(am__append_23)\n libjvm_la_LIBADD = -L$(here)/.libs libgcj.la\n-libjvm_la_LDFLAGS = -avoid-version $(LIBGCJ_LD_SYMBOLIC)\n+libjvm_la_LDFLAGS = -avoid-version $(LIBGCJ_LD_SYMBOLIC) \\\n+ -no-undefined -bindir $(bindir)\n+\n libjvm_la_LINK = $(CXXLINK) $(libjvm_la_LDFLAGS)\n lib_gnu_awt_xlib_la_SOURCES = $(xlib_nat_source_files)\n lib_gnu_awt_xlib_la_LIBADD = gnu/awt/xlib.lo gnu/gcj/xlib.lo\n-lib_gnu_awt_xlib_la_DEPENDENCIES = libgcj-$(gcc_version).jar \\\n-\tlibgcj.la libgcj.spec \\\n-\t$(lib_gnu_awt_xlib_la_LIBADD)\n-\n+lib_gnu_awt_xlib_la_DEPENDENCIES = libgcj-$(gcc_version).jar libgcj.la \\\n+\tlibgcj.spec $(lib_gnu_awt_xlib_la_LIBADD) $(am__append_24)\n lib_gnu_awt_xlib_la_CPPFLAGS = \\\n \t$(AM_CPPFLAGS) \\\n \t-I../libstdc++-v3/include \\\n@@ -1037,13 +1209,13 @@ lib_gnu_awt_xlib_la_CPPFLAGS = \\\n \n lib_gnu_awt_xlib_la_LDFLAGS = ../libstdc++-v3/src/libstdc++.la \\\n \t@X_PRE_LIBS@ @X_LIBS@ -lX11 @X_EXTRA_LIBS@ \\\n-        -rpath $(toolexeclibdir) \\\n+        -rpath $(toolexeclibdir) -no-undefined -bindir $(bindir) \\\n         -version-info `grep -v '^\\#' $(srcdir)/libtool-version` $(LIBGCJ_LD_SYMBOLIC)\n \n lib_gnu_awt_xlib_la_LINK = $(LIBLINK) $(lib_gnu_awt_xlib_la_LDFLAGS)\n libgcj_bc_la_SOURCES = libgcj_bc.c\n libgcj_bc_la_LDFLAGS = -rpath $(toolexeclibdir) -no-static -version-info 1:0:0 \\\n-\t$(LIBGCJ_LD_SYMBOLIC_FUNCTIONS)\n+\t$(LIBGCJ_LD_SYMBOLIC_FUNCTIONS) -no-undefined -bindir $(bindir)\n \n libgcj_bc_la_DEPENDENCIES = libgcj.la\n libgcj_bc_la_LINK = $(LIBLINK) $(libgcj_bc_la_LDFLAGS)\n@@ -8306,7 +8478,7 @@ jv_convert_LDFLAGS = --main=gnu.gcj.convert.Convert \\\n \n jv_convert_LINK = $(GCJLINK) $(jv_convert_LDFLAGS)\n jv_convert_LDADD = -L$(here)/.libs libgcj.la\n-jv_convert_DEPENDENCIES = libgcj.la libgcj.spec\n+jv_convert_DEPENDENCIES = libgcj.la libgcj.spec $(am__append_26)\n gcj_dbtool_SOURCES = \\\n gnu/gcj/tools/gcj_dbtool/natMain.cc\n \n@@ -8315,14 +8487,16 @@ gcj_dbtool_LDFLAGS = --main=gnu.gcj.tools.gcj_dbtool.Main \\\n \n gcj_dbtool_LINK = $(GCJLINK) $(gcj_dbtool_LDFLAGS)\n gcj_dbtool_LDADD = gnu/gcj/tools/gcj_dbtool.lo -L$(here)/.libs libgcj.la\n-gcj_dbtool_DEPENDENCIES = gnu/gcj/tools/gcj_dbtool.lo libgcj.la libgcj.spec\n+gcj_dbtool_DEPENDENCIES = gnu/gcj/tools/gcj_dbtool.lo libgcj.la \\\n+\tlibgcj.spec $(am__append_27)\n gc_analyze_SOURCES = \n gc_analyze_LDFLAGS = --main=gnu.gcj.tools.gc_analyze.MemoryAnalyze \\\n         -rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n \n gc_analyze_LINK = $(GCJLINK) $(gc_analyze_LDFLAGS)\n gc_analyze_LDADD = -L$(here)/.libs libgcj-tools.la libgcj.la\n-gc_analyze_DEPENDENCIES = libgcj-tools.la libgcj.la libgcj.spec\n+gc_analyze_DEPENDENCIES = libgcj-tools.la libgcj.la libgcj.spec \\\n+\t$(am__append_28)\n gij_SOURCES = \n gij_LDFLAGS = -rpath $(dbexecdir) -rpath $(toolexeclibdir) \\\n \t-shared-libgcc $(THREADLDFLAGS) $(extra_ldflags) \\\n@@ -8342,10 +8516,10 @@ ECJX_BASE_FLAGS = -findirect-dispatch \\\n @NATIVE_FALSE@ecjx_LDFLAGS = $(ECJX_BASE_FLAGS) $(ECJ_BUILD_JAR)\n @NATIVE_FALSE@ecjx_LDADD = \n @NATIVE_TRUE@ecjx_LDADD = -L$(here)/.libs $(extra_ldflags) \\\n-@NATIVE_TRUE@\t$(am__append_21)\n+@NATIVE_TRUE@\t$(am__append_31)\n @NATIVE_FALSE@ecjx_DEPENDENCIES = \n @NATIVE_TRUE@ecjx_DEPENDENCIES = libgcj.la libgcj.spec \\\n-@NATIVE_TRUE@\t$(am__append_20)\n+@NATIVE_TRUE@\t$(am__append_29) $(am__append_30)\n gappletviewer_SOURCES = \n gappletviewer_LDFLAGS = --main=gnu.classpath.tools.appletviewer.Main \\\n \t-rpath $(toolexeclibdir) -shared-libgcc $(THREADLDFLAGS) $(extra_ldflags)\n@@ -8562,7 +8736,7 @@ gnu/gcj/xlib/natXImage.cc \\\n gnu/gcj/xlib/natXUnmapEvent.cc\n \n sourcesdir = $(jardir)\n-headers_to_make = $(nat_headers) $(am__append_22)\n+headers_to_make = $(nat_headers) $(am__append_32)\n \n # Work around what appears to be a GNU make bug handling MAKEFLAGS\n # values defined in terms of make variables, as is the case for CC and\n@@ -8803,6 +8977,8 @@ gnu/gcj/xlib/lib_gnu_awt_xlib_la-natXImage.lo:  \\\n gnu/gcj/xlib/lib_gnu_awt_xlib_la-natXUnmapEvent.lo:  \\\n \tgnu/gcj/xlib/$(am__dirstamp) \\\n \tgnu/gcj/xlib/$(DEPDIR)/$(am__dirstamp)\n+libgcj-noncore.la: $(libgcj_noncore_la_OBJECTS) $(libgcj_noncore_la_DEPENDENCIES) \n+\t$(libgcj_noncore_la_LINK) $(am_libgcj_noncore_la_rpath) $(libgcj_noncore_la_OBJECTS) $(libgcj_noncore_la_LIBADD) $(LIBS)\n classpath/tools/$(am__dirstamp):\n \t@$(MKDIR_P) classpath/tools\n \t@: > classpath/tools/$(am__dirstamp)"}, {"sha": "5e92946deb9219aaf5f41986b929afc2a71a44d6", "filename": "libjava/configure", "status": "modified", "additions": 80, "deletions": 31, "changes": 111, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2Fconfigure", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2Fconfigure", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure?ref=6a92b6c7aae7311777f8faafbc52a71104a78a68", "patch": "@@ -915,6 +915,8 @@ XLIB_AWT_FALSE\n XLIB_AWT_TRUE\n TOOLKIT\n LIBGCJDEBUG\n+BUILD_SUBLIBS_FALSE\n+BUILD_SUBLIBS_TRUE\n LIBGCJ_LD_SYMBOLIC_FUNCTIONS\n LIBGCJ_LD_SYMBOLIC\n LIBGCJ_JAVAFLAGS\n@@ -1054,6 +1056,7 @@ enable_gjdoc\n enable_java_maintainer_mode\n enable_dependency_tracking\n enable_maintainer_mode\n+enable_libgcj_sublibs\n enable_libgcj_debug\n with_escher\n enable_java_awt\n@@ -1745,6 +1748,7 @@ Optional Features:\n   --enable-dependency-tracking   do not reject slow dependency extractors\n   --enable-maintainer-mode  enable make rules and dependencies not useful\n \t\t\t  (and sometimes confusing) to the casual installer\n+  --enable-libgcj-sublibs build libgcj as many sub-libraries\n   --enable-libgcj-debug   enable runtime debugging code\n   --enable-java-awt       list of AWT peer implementations to be built\n   --enable-shared[=PKGS]  build shared libraries [default=yes]\n@@ -5935,6 +5939,7 @@ fi\n #\tlibgcj_cflags    - host specific C compiler flags\n #\tlibgcj_cxxflags  - host specific C++ compiler flags\n #\tlibgcj_javaflags - host specific Java compiler flags\n+# and a number of others; see the list at the start of the file.\n \n libgcj_cflags=\n libgcj_cxxflags=\n@@ -6536,6 +6541,35 @@ fi\n ac_config_headers=\"$ac_config_headers include/config.h gcj/libgcj-config.h\"\n \n \n+# Possibly build libgcj as many sub-libraries.\n+# Check whether --enable-libgcj-sublibs was given.\n+if test \"${enable_libgcj_sublibs+set}\" = set; then :\n+  enableval=$enable_libgcj_sublibs;\n+fi\n+\n+\n+if test -z \"$enable_libgcj_sublibs\"; then\n+   enable_libgcj_sublibs=$enable_libgcj_sublibs_default\n+fi\n+ if test \"$enable_libgcj_sublibs\" = yes; then\n+  BUILD_SUBLIBS_TRUE=\n+  BUILD_SUBLIBS_FALSE='#'\n+else\n+  BUILD_SUBLIBS_TRUE='#'\n+  BUILD_SUBLIBS_FALSE=\n+fi\n+\n+if test \"$enable_libgcj_sublibs\" = yes ; then\n+  # In theory we could make do with only one override and simply\n+  # tag \"_bc\" onto the end of it when we use it to generate the\n+  # spec, but that's an ugly thing to do when there are multiple\n+  # words in the string and you're relying on the ordering to\n+  # append the correct one.\n+  libgcj_spec_lgcj_override=\"-lgcj-noncore -lgcj\"\n+  libgcj_spec_lgcj_bc_override=\"-lgcj-noncore -lgcj_bc\"\n+fi\n+\n+\n # See if the user has requested runtime debugging.\n LIBGCJDEBUG=\"disable\"\n \n@@ -7464,13 +7498,13 @@ if test \"${lt_cv_nm_interface+set}\" = set; then :\n else\n   lt_cv_nm_interface=\"BSD nm\"\n   echo \"int some_variable = 0;\" > conftest.$ac_ext\n-  (eval echo \"\\\"\\$as_me:7467: $ac_compile\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:7501: $ac_compile\\\"\" >&5)\n   (eval \"$ac_compile\" 2>conftest.err)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:7470: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:7504: $NM \\\\\\\"conftest.$ac_objext\\\\\\\"\\\"\" >&5)\n   (eval \"$NM \\\"conftest.$ac_objext\\\"\" 2>conftest.err > conftest.out)\n   cat conftest.err >&5\n-  (eval echo \"\\\"\\$as_me:7473: output\\\"\" >&5)\n+  (eval echo \"\\\"\\$as_me:7507: output\\\"\" >&5)\n   cat conftest.out >&5\n   if $GREP 'External.*some_variable' conftest.out > /dev/null; then\n     lt_cv_nm_interface=\"MS dumpbin\"\n@@ -8665,7 +8699,7 @@ ia64-*-hpux*)\n   ;;\n *-*-irix6*)\n   # Find out which ABI we are using.\n-  echo '#line 8668 \"configure\"' > conftest.$ac_ext\n+  echo '#line 8702 \"configure\"' > conftest.$ac_ext\n   if { { eval echo \"\\\"\\$as_me\\\":${as_lineno-$LINENO}: \\\"$ac_compile\\\"\"; } >&5\n   (eval $ac_compile) 2>&5\n   ac_status=$?\n@@ -10599,11 +10633,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:10602: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:10636: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:10606: \\$? = $ac_status\" >&5\n+   echo \"$as_me:10640: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -10938,11 +10972,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:10941: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:10975: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:10945: \\$? = $ac_status\" >&5\n+   echo \"$as_me:10979: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -11043,11 +11077,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:11046: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:11080: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:11050: \\$? = $ac_status\" >&5\n+   echo \"$as_me:11084: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -11098,11 +11132,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:11101: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:11135: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:11105: \\$? = $ac_status\" >&5\n+   echo \"$as_me:11139: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -13507,7 +13541,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13510 \"configure\"\n+#line 13544 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -13603,7 +13637,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 13606 \"configure\"\n+#line 13640 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -15565,11 +15599,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:15568: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:15602: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:15572: \\$? = $ac_status\" >&5\n+   echo \"$as_me:15606: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -15664,11 +15698,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:15667: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:15701: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:15671: \\$? = $ac_status\" >&5\n+   echo \"$as_me:15705: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -15716,11 +15750,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:15719: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:15753: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:15723: \\$? = $ac_status\" >&5\n+   echo \"$as_me:15757: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -17132,11 +17166,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:17135: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:17169: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:17139: \\$? = $ac_status\" >&5\n+   echo \"$as_me:17173: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -17465,11 +17499,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:17468: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:17502: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>conftest.err)\n    ac_status=$?\n    cat conftest.err >&5\n-   echo \"$as_me:17472: \\$? = $ac_status\" >&5\n+   echo \"$as_me:17506: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s \"$ac_outfile\"; then\n      # The compiler can only warn and ignore the option if not recognized\n      # So say no if there are warnings other than the usual output.\n@@ -17564,11 +17598,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:17567: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:17601: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:17571: \\$? = $ac_status\" >&5\n+   echo \"$as_me:17605: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -17616,11 +17650,11 @@ else\n    -e 's:.*FLAGS}\\{0,1\\} :&$lt_compiler_flag :; t' \\\n    -e 's: [^ ]*conftest\\.: $lt_compiler_flag&:; t' \\\n    -e 's:$: $lt_compiler_flag:'`\n-   (eval echo \"\\\"\\$as_me:17619: $lt_compile\\\"\" >&5)\n+   (eval echo \"\\\"\\$as_me:17653: $lt_compile\\\"\" >&5)\n    (eval \"$lt_compile\" 2>out/conftest.err)\n    ac_status=$?\n    cat out/conftest.err >&5\n-   echo \"$as_me:17623: \\$? = $ac_status\" >&5\n+   echo \"$as_me:17657: \\$? = $ac_status\" >&5\n    if (exit $ac_status) && test -s out/conftest2.$ac_objext\n    then\n      # The compiler can only warn and ignore the option if not recognized\n@@ -19218,7 +19252,7 @@ if test \"${enable_sjlj_exceptions+set}\" = set; then :\n   enableval=$enable_sjlj_exceptions; :\n else\n   cat > conftest.$ac_ext << EOF\n-#line 19221 \"configure\"\n+#line 19255 \"configure\"\n struct S { ~S(); };\n void bar();\n void foo()\n@@ -20310,6 +20344,9 @@ arm*linux*eabi)\n     LIBSTDCXXSPEC=-lstdc++\n     LIBGCJTESTSPEC=\"-L`${PWDCMD-pwd}`/.libs -L`${PWDCMD-pwd}`/../libstdc++-v3/src/.libs -rpath `${PWDCMD-pwd}`/.libs:`${PWDCMD-pwd}`/../libstdc++-v3/src/.libs -lstdc++\"\n     ;;\n+*-*-cygwin)\n+    extra_ldflags_libjava=-liconv\n+    ;;\n esac\n \n \n@@ -20552,9 +20589,17 @@ ac_config_links=\"$ac_config_links sysdep/backtrace.h:$fallback_backtrace_h\"\n ac_config_links=\"$ac_config_links sysdep/descriptor.h:$descriptor_h\"\n \n \n-LIBGCJ_SPEC=\"%{s-bc-abi:} -lgcj\"\n+LIBGCJ_SPEC_LGCJ=-lgcj\n+LIBGCJ_SPEC_LGCJ_BC=-lgcj_bc\n+if test x\"$libgcj_spec_lgcj_override\" != x ; then\n+  LIBGCJ_SPEC_LGCJ=$libgcj_spec_lgcj_override\n+fi\n+if test x\"$libgcj_spec_lgcj_bc_override\" != x ; then\n+  LIBGCJ_SPEC_LGCJ_BC=$libgcj_spec_lgcj_bc_override\n+fi\n+LIBGCJ_SPEC=\"%{s-bc-abi:} $LIBGCJ_SPEC_LGCJ\"\n if test \"$use_libgcj_bc\" = yes; then\n-  LIBGCJ_SPEC=\"%{static|static-libgcj|!s-bc-abi:-lgcj;:-lgcj_bc}\"\n+  LIBGCJ_SPEC=\"%{static|static-libgcj|!s-bc-abi:$LIBGCJ_SPEC_LGCJ;:$LIBGCJ_SPEC_LGCJ_BC}\"\n   LIBGCJ_BC_SPEC=\"%{findirect-dispatch:-fPIC}\"\n fi\n \n@@ -24607,6 +24652,10 @@ if test -z \"${MAINTAINER_MODE_TRUE}\" && test -z \"${MAINTAINER_MODE_FALSE}\"; then\n   as_fn_error \"conditional \\\"MAINTAINER_MODE\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n fi\n+if test -z \"${BUILD_SUBLIBS_TRUE}\" && test -z \"${BUILD_SUBLIBS_FALSE}\"; then\n+  as_fn_error \"conditional \\\"BUILD_SUBLIBS\\\" was never defined.\n+Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5\n+fi\n if test -z \"${XLIB_AWT_TRUE}\" && test -z \"${XLIB_AWT_FALSE}\"; then\n   as_fn_error \"conditional \\\"XLIB_AWT\\\" was never defined.\n Usually this means the macro was only invoked conditionally.\" \"$LINENO\" 5"}, {"sha": "c2418dc2bbae9f8382134af2b7453a577c0b3e44", "filename": "libjava/configure.ac", "status": "modified", "additions": 34, "deletions": 2, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2Fconfigure.ac", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.ac?ref=6a92b6c7aae7311777f8faafbc52a71104a78a68", "patch": "@@ -206,6 +206,7 @@ AC_EXEEXT\n #\tlibgcj_cflags    - host specific C compiler flags\n #\tlibgcj_cxxflags  - host specific C++ compiler flags\n #\tlibgcj_javaflags - host specific Java compiler flags\n+# and a number of others; see the list at the start of the file.\n \n libgcj_cflags=\n libgcj_cxxflags=\n@@ -237,6 +238,26 @@ fi\n \n AC_CONFIG_HEADERS([include/config.h gcj/libgcj-config.h])\n \n+# Possibly build libgcj as many sub-libraries.\n+AC_ARG_ENABLE(libgcj-sublibs,\n+  AS_HELP_STRING([--enable-libgcj-sublibs],\n+                 [build libgcj as many sub-libraries]))\n+\n+if test -z \"$enable_libgcj_sublibs\"; then\n+   enable_libgcj_sublibs=$enable_libgcj_sublibs_default\n+fi\n+AM_CONDITIONAL(BUILD_SUBLIBS, test \"$enable_libgcj_sublibs\" = yes)\n+if test \"$enable_libgcj_sublibs\" = yes ; then\n+  # In theory we could make do with only one override and simply\n+  # tag \"_bc\" onto the end of it when we use it to generate the\n+  # spec, but that's an ugly thing to do when there are multiple\n+  # words in the string and you're relying on the ordering to\n+  # append the correct one.\n+  libgcj_spec_lgcj_override=\"-lgcj-noncore -lgcj\"\n+  libgcj_spec_lgcj_bc_override=\"-lgcj-noncore -lgcj_bc\"\n+fi\n+\n+\n # See if the user has requested runtime debugging.\n LIBGCJDEBUG=\"disable\"\n AC_SUBST(LIBGCJDEBUG)\n@@ -897,6 +918,9 @@ arm*linux*eabi)\n     LIBSTDCXXSPEC=-lstdc++\n     LIBGCJTESTSPEC=\"-L`${PWDCMD-pwd}`/.libs -L`${PWDCMD-pwd}`/../libstdc++-v3/src/.libs -rpath `${PWDCMD-pwd}`/.libs:`${PWDCMD-pwd}`/../libstdc++-v3/src/.libs -lstdc++\"\n     ;;\n+*-*-cygwin)\n+    extra_ldflags_libjava=-liconv\n+    ;;\n esac\n AC_SUBST(extra_ldflags_libjava)\n AC_SUBST(extra_gij_ldflags)\n@@ -1075,9 +1099,17 @@ AC_CONFIG_LINKS(sysdep/locks.h:sysdep/$sysdeps_dir/locks.h)\n AC_CONFIG_LINKS(sysdep/backtrace.h:$fallback_backtrace_h)\n AC_CONFIG_LINKS(sysdep/descriptor.h:$descriptor_h)\n \n-LIBGCJ_SPEC=\"%{s-bc-abi:} -lgcj\"\n+LIBGCJ_SPEC_LGCJ=-lgcj\n+LIBGCJ_SPEC_LGCJ_BC=-lgcj_bc\n+if test x\"$libgcj_spec_lgcj_override\" != x ; then\n+  LIBGCJ_SPEC_LGCJ=$libgcj_spec_lgcj_override\n+fi\n+if test x\"$libgcj_spec_lgcj_bc_override\" != x ; then\n+  LIBGCJ_SPEC_LGCJ_BC=$libgcj_spec_lgcj_bc_override\n+fi\n+LIBGCJ_SPEC=\"%{s-bc-abi:} $LIBGCJ_SPEC_LGCJ\"\n if test \"$use_libgcj_bc\" = yes; then\n-  LIBGCJ_SPEC=\"%{static|static-libgcj|!s-bc-abi:-lgcj;:-lgcj_bc}\"\n+  LIBGCJ_SPEC=\"%{static|static-libgcj|!s-bc-abi:$LIBGCJ_SPEC_LGCJ;:$LIBGCJ_SPEC_LGCJ_BC}\"\n   LIBGCJ_BC_SPEC=\"%{findirect-dispatch:-fPIC}\"\n fi\n AC_SUBST(LIBGCJ_SPEC)"}, {"sha": "2955571b27643b946357f5e1b091a47d070eacf3", "filename": "libjava/configure.host", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2Fconfigure.host", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2Fconfigure.host", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fconfigure.host?ref=6a92b6c7aae7311777f8faafbc52a71104a78a68", "patch": "@@ -23,6 +23,9 @@\n #                            default.\n #   enable_hash_synchronization_default  If hash synchronization should be\n #                                        enabled by default.\n+#   enable_libgcj_sublibs_default  Whether to build libgcj as a bunch of\n+#                                  separate shared libraries or in one \n+#                                  monolithic one.\n #   sysdeps_dir\t\tDirectory containing system-dependent headers\n #   slow_pthread_self   The synchronization code should try to avoid \n #\t\t\tpthread_self calls by caching thread IDs in a hashtable\n@@ -41,6 +44,7 @@ libgcj_javaflags=\n libgcj_interpreter=\n enable_java_net_default=yes\n enable_hash_synchronization_default=no\n+enable_libgcj_sublibs_default=no\n sysdeps_dir=generic\n slow_pthread_self=\n can_unwind_signal=no\n@@ -341,6 +345,8 @@ case \"${host}\" in\n \tfallback_backtrace_h=sysdep/i386/backtrace.h  \n \t# We need a frame pointer on Windows, so override BACKTRACESPEC\n   \tBACKTRACESPEC=\n+\t# Win32 DLLs are limited to 64k exported symbols each.\n+\tenable_libgcj_sublibs_default=yes\n   ;;\n esac\n "}, {"sha": "a2b5499d37deccea0a42deede1076cb4a262ac5d", "filename": "libjava/libltdl/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2Flibltdl%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2Flibltdl%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Flibltdl%2FChangeLog?ref=6a92b6c7aae7311777f8faafbc52a71104a78a68", "patch": "@@ -1,3 +1,10 @@\n+2009-09-22  Dave Korn  <dave.korn.cygwin@gmail.com>\n+\n+\t* ltdl.h (LT_SCOPE): Change conditional to avoid breaking\n+\tauto-export during libgcj DLL linking.\n+\t* Makefile.am (libltdl_la_LDFLAGS): Remove -bindir switch.\n+\t* Makefile.in: Regenerate.\n+\n 2009-08-24  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* configure.ac (AC_PREREQ): Bump to 2.64.  Remove FIXME."}, {"sha": "737290e6c7cea0a7ac11f250fd400e94c31bf872", "filename": "libjava/libltdl/Makefile.am", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2Flibltdl%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2Flibltdl%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Flibltdl%2FMakefile.am?ref=6a92b6c7aae7311777f8faafbc52a71104a78a68", "patch": "@@ -22,7 +22,7 @@ endif\n CLEANFILES = libltdl.la libltdlc.la\n \n libltdl_la_SOURCES = ltdl.c\n-libltdl_la_LDFLAGS = -no-undefined -bindir \"$(bindir)\" -version-info 4:1:1\n+libltdl_la_LDFLAGS = -no-undefined -version-info 4:1:1\n libltdl_la_LIBADD = $(LIBADD_DL)\n \n libltdlc_la_SOURCES = ltdl.c"}, {"sha": "46e139ef7f1b0c0db392efaf9682267ff7fb3f89", "filename": "libjava/libltdl/Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2Flibltdl%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2Flibltdl%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Flibltdl%2FMakefile.in?ref=6a92b6c7aae7311777f8faafbc52a71104a78a68", "patch": "@@ -249,7 +249,7 @@ INCLUDES = $(GCINCS)\n @CONVENIENCE_LTDL_TRUE@noinst_LTLIBRARIES = libltdlc.la\n CLEANFILES = libltdl.la libltdlc.la\n libltdl_la_SOURCES = ltdl.c\n-libltdl_la_LDFLAGS = -no-undefined -bindir \"$(bindir)\" -version-info 4:1:1\n+libltdl_la_LDFLAGS = -no-undefined -version-info 4:1:1\n libltdl_la_LIBADD = $(LIBADD_DL)\n libltdlc_la_SOURCES = ltdl.c\n libltdlc_la_LIBADD = $(LIBADD_DL)"}, {"sha": "c31c579d49de98a97077315f2ee7a50cf614c4c8", "filename": "libjava/libltdl/ltdl.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2Flibltdl%2Fltdl.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2Flibltdl%2Fltdl.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Flibltdl%2Fltdl.h?ref=6a92b6c7aae7311777f8faafbc52a71104a78a68", "patch": "@@ -128,7 +128,7 @@ LT_BEGIN_C_DECLS\n    ridiculous implementation of data symbol exporting. */\n #ifndef LT_SCOPE\n #  ifdef __WINDOWS__\n-#    ifdef DLL_EXPORT\t\t/* defined by libtool (if required) */\n+#    ifdef LIBLTDL_DLL_EXPORT\t/* don't define or ld disables auto-export. */\n #      define LT_SCOPE\t__declspec(dllexport)\n #    endif\n #    ifdef LIBLTDL_DLL_IMPORT\t/* define if linking with this dll */"}, {"sha": "ee793b22a0f402adc7f740cc26a5bae1225e34cc", "filename": "libjava/sysdep/i386/backtrace.h", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2Fsysdep%2Fi386%2Fbacktrace.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6a92b6c7aae7311777f8faafbc52a71104a78a68/libjava%2Fsysdep%2Fi386%2Fbacktrace.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libjava%2Fsysdep%2Fi386%2Fbacktrace.h?ref=6a92b6c7aae7311777f8faafbc52a71104a78a68", "patch": "@@ -13,7 +13,14 @@ details.  */\n \n #include <java-stack.h>\n \n-extern int main (int, char **);\n+#ifdef __CYGWIN__\n+/* To allow this to link as a DLL.  */\n+#define MAIN_FUNC dll_crt0__FP11per_process\n+extern \"C\" int MAIN_FUNC () __declspec(dllimport);\n+#else /* !__CYGWIN__ */\n+#define MAIN_FUNC main\n+extern int MAIN_FUNC (int, char **);\n+#endif /* ?__CYGWIN__ */\n \n /* The context used to keep track of our position while unwinding through\n    the call stack.  */\n@@ -104,7 +111,7 @@ fallback_backtrace (_Unwind_Trace_Fn trace_fn, _Jv_UnwindState *state)\n                             const char **, bool))_Jv_RunMain;\n       if (ctx.meth_addr == (_Jv_uintptr_t)jv_runmain\n           || ctx.meth_addr == (_Jv_uintptr_t)_Jv_ThreadStart\n-          || (ctx.meth_addr - (_Jv_uintptr_t)main) < 16)\n+          || (ctx.meth_addr - (_Jv_uintptr_t)MAIN_FUNC) < 16)\n         break;\n     }\n "}]}