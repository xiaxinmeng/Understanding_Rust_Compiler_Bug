{"sha": "af12f8ea01180c592d6ab79407b0d6781f86eea7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YWYxMmY4ZWEwMTE4MGM1OTJkNmFiNzk0MDdiMGQ2NzgxZjg2ZWVhNw==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2005-06-19T08:51:54Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2005-06-19T08:51:54Z"}, "message": "i386.md (*cmpfp_0_sf, [...]): Remove instruction patterns.\n\n2005-06-19  Uros Bizjak  <uros@kss-loka.si>\n\n        * config/i386/i386.md (*cmpfp_0_sf, *cmpfp_0_df, cmpfp_0_xf):\n        Remove instruction patterns.\n        (*cmpfp_0): New instruction pattern. Set \"unit\" attribute to \"i387\".\n        (*cmpfp_sf, *cmpfp_df, *cmpfp_xf, *cmpfp_u, *_cmpfp_<mode>):\n        Set \"unit\" attribute to \"i387\".\n        (*pushsf, *pushsf_rex64, *pushdf_nointeger, *pushdf_integer)\n        (*pushxf_nointeger, *pushxf_integer): Set \"unit\" attribute to \"i387\"\n        for alternative 0.\n        (*truncdfsf_mixed, *truncdfsf_i387, *truncxfsf2_mixed)\n        (*truncxfsf2_i387, *truncxfdf2_mixed, *truncxfdf2_i387): Set \"unit\"\n        attribute to \"i387\" when \"type\" attribute equals \"multi\".\n        (*floathisf2_i387, *floatsisf2_mixed, *floatsisf2_i387)\n        (*floatdisf2_mixed, *floatdisf2_i387, *floathidf2_i387)\n        (*floatsidf2_mixed, *floatsidf2_i387, *floatdidf2_mixed)\n        (*floatdidf2_i387, floathixf2, floatsixf2, floatdixf2): Set \"unit\"\n        attribute to \"i387\" when \"type\" attribute equals \"multi\".\n        * config/i386/mmx.md (*mov<mode>_internal_rex64)\n        (*mov<mode>_internal, *movv2sf_internal_rex64, *movv2sf_internal):\n        Set \"unit\" attribute to \"mmx\" when \"type\" attribute equals \"ssecvt\".\n        (mmx_pmovmskb): Correct wrong \"type\" and \"mode\" attributes.\n        * config/i386/sse.md (sse_cvtps2pi, sse_cvttps2pi, sse_cvtpd2di)\n        (sse_cvttpd2pi): Set \"unit\" attribute to \"mmx\".\n        (sse2_cvtpi2pd): Split register constraints. Set \"unit\" attribute\n        to \"mmx\" for \"y\" operand 1.\n\nFrom-SVN: r101180", "tree": {"sha": "dcc93a09ca405ae50d45a3e689b4bfc3dcb7e636", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/dcc93a09ca405ae50d45a3e689b4bfc3dcb7e636"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/af12f8ea01180c592d6ab79407b0d6781f86eea7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af12f8ea01180c592d6ab79407b0d6781f86eea7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af12f8ea01180c592d6ab79407b0d6781f86eea7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af12f8ea01180c592d6ab79407b0d6781f86eea7/comments", "author": null, "committer": null, "parents": [{"sha": "aa941a60d7d6f3f8ebfa84731d89b701ff2527be", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/aa941a60d7d6f3f8ebfa84731d89b701ff2527be", "html_url": "https://github.com/Rust-GCC/gccrs/commit/aa941a60d7d6f3f8ebfa84731d89b701ff2527be"}], "stats": {"total": 117, "additions": 84, "deletions": 33}, "files": [{"sha": "cedf800e5f8bc925fcc3b1473cde792a50ee0aaa", "filename": "gcc/ChangeLog", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af12f8ea01180c592d6ab79407b0d6781f86eea7/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af12f8ea01180c592d6ab79407b0d6781f86eea7/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=af12f8ea01180c592d6ab79407b0d6781f86eea7", "patch": "@@ -1,3 +1,30 @@\n+2005-06-19  Uros Bizjak  <uros@kss-loka.si>\n+\n+\t* config/i386/i386.md (*cmpfp_0_sf, *cmpfp_0_df, cmpfp_0_xf):\n+\tRemove instruction patterns.\n+\t(*cmpfp_0): New instruction pattern. Set \"unit\" attribute to \"i387\".\n+\t(*cmpfp_sf, *cmpfp_df, *cmpfp_xf, *cmpfp_u, *_cmpfp_<mode>):\n+\tSet \"unit\" attribute to \"i387\".\n+\t(*pushsf, *pushsf_rex64, *pushdf_nointeger, *pushdf_integer)\n+\t(*pushxf_nointeger, *pushxf_integer): Set \"unit\" attribute to \"i387\"\n+\tfor alternative 0.\n+\t(*truncdfsf_mixed, *truncdfsf_i387, *truncxfsf2_mixed)\n+\t(*truncxfsf2_i387, *truncxfdf2_mixed, *truncxfdf2_i387): Set \"unit\"\n+\tattribute to \"i387\" when \"type\" attribute equals \"multi\".\n+\t(*floathisf2_i387, *floatsisf2_mixed, *floatsisf2_i387)\n+\t(*floatdisf2_mixed, *floatdisf2_i387, *floathidf2_i387)\n+\t(*floatsidf2_mixed, *floatsidf2_i387, *floatdidf2_mixed)\n+\t(*floatdidf2_i387, floathixf2, floatsixf2, floatdixf2): Set \"unit\"\n+\tattribute to \"i387\" when \"type\" attribute equals \"multi\".\n+\t* config/i386/mmx.md (*mov<mode>_internal_rex64)\n+\t(*mov<mode>_internal, *movv2sf_internal_rex64, *movv2sf_internal):\n+\tSet \"unit\" attribute to \"mmx\" when \"type\" attribute equals \"ssecvt\".\n+\t(mmx_pmovmskb): Correct wrong \"type\" and \"mode\" attributes.\n+\t* config/i386/sse.md (sse_cvtps2pi, sse_cvttps2pi, sse_cvtpd2di)\n+\t(sse_cvttpd2pi): Set \"unit\" attribute to \"mmx\".\n+\t(sse2_cvtpi2pd): Split register constraints. Set \"unit\" attribute\n+\tto \"mmx\" for \"y\" operand 1.\n+\n 2005-06-19  Uros Bizjak  <uros@kss-loka.si>\n \n \t* config/i386/i386.c (ix86_function_arg_regno_p): Add MMX_REGNO_P"}, {"sha": "5ab7e848a1d73857d4ac71482b37e341f21b9ae8", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 44, "deletions": 29, "changes": 73, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af12f8ea01180c592d6ab79407b0d6781f86eea7/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af12f8ea01180c592d6ab79407b0d6781f86eea7/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=af12f8ea01180c592d6ab79407b0d6781f86eea7", "patch": "@@ -814,41 +814,26 @@\n ;; We may not use \"#\" to split and emit these, since the REG_DEAD notes\n ;; used to manage the reg stack popping would not be preserved.\n \n-(define_insn \"*cmpfp_0_sf\"\n+(define_insn \"*cmpfp_0\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n \t(unspec:HI\n \t  [(compare:CCFP\n-\t     (match_operand:SF 1 \"register_operand\" \"f\")\n-\t     (match_operand:SF 2 \"const0_operand\" \"X\"))]\n-\tUNSPEC_FNSTSW))]\n-  \"TARGET_80387\"\n-  \"* return output_fp_compare (insn, operands, 0, 0);\"\n-  [(set_attr \"type\" \"multi\")\n-   (set_attr \"mode\" \"SF\")])\n-\n-(define_insn \"*cmpfp_0_df\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n-\t(unspec:HI\n-\t  [(compare:CCFP\n-\t     (match_operand:DF 1 \"register_operand\" \"f\")\n-\t     (match_operand:DF 2 \"const0_operand\" \"X\"))]\n-\tUNSPEC_FNSTSW))]\n-  \"TARGET_80387\"\n-  \"* return output_fp_compare (insn, operands, 0, 0);\"\n-  [(set_attr \"type\" \"multi\")\n-   (set_attr \"mode\" \"DF\")])\n-\n-(define_insn \"*cmpfp_0_xf\"\n-  [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n-\t(unspec:HI\n-\t  [(compare:CCFP\n-\t     (match_operand:XF 1 \"register_operand\" \"f\")\n-\t     (match_operand:XF 2 \"const0_operand\" \"X\"))]\n+\t     (match_operand 1 \"register_operand\" \"f\")\n+\t     (match_operand 2 \"const0_operand\" \"X\"))]\n \tUNSPEC_FNSTSW))]\n-  \"TARGET_80387\"\n+  \"TARGET_80387\n+   && FLOAT_MODE_P (GET_MODE (operands[1]))\n+   && GET_MODE (operands[1]) == GET_MODE (operands[2])\"\n   \"* return output_fp_compare (insn, operands, 0, 0);\"\n   [(set_attr \"type\" \"multi\")\n-   (set_attr \"mode\" \"XF\")])\n+   (set_attr \"unit\" \"i387\")\n+   (set (attr \"mode\")\n+     (cond [(match_operand:SF 1 \"\" \"\")\n+\t      (const_string \"SF\")\n+\t    (match_operand:DF 1 \"\" \"\")\n+\t      (const_string \"DF\")\n+\t   ]\n+\t   (const_string \"XF\")))])\n \n (define_insn \"*cmpfp_sf\"\n   [(set (match_operand:HI 0 \"register_operand\" \"=a\")\n@@ -860,6 +845,7 @@\n   \"TARGET_80387\"\n   \"* return output_fp_compare (insn, operands, 0, 0);\"\n   [(set_attr \"type\" \"multi\")\n+   (set_attr \"unit\" \"i387\")\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"*cmpfp_df\"\n@@ -872,6 +858,7 @@\n   \"TARGET_80387\"\n   \"* return output_fp_compare (insn, operands, 0, 0);\"\n   [(set_attr \"type\" \"multi\")\n+   (set_attr \"unit\" \"i387\")\n    (set_attr \"mode\" \"DF\")])\n \n (define_insn \"*cmpfp_xf\"\n@@ -884,6 +871,7 @@\n   \"TARGET_80387\"\n   \"* return output_fp_compare (insn, operands, 0, 0);\"\n   [(set_attr \"type\" \"multi\")\n+   (set_attr \"unit\" \"i387\")\n    (set_attr \"mode\" \"XF\")])\n \n (define_insn \"*cmpfp_u\"\n@@ -898,6 +886,7 @@\n    && GET_MODE (operands[1]) == GET_MODE (operands[2])\"\n   \"* return output_fp_compare (insn, operands, 0, 1);\"\n   [(set_attr \"type\" \"multi\")\n+   (set_attr \"unit\" \"i387\")\n    (set (attr \"mode\")\n      (cond [(match_operand:SF 1 \"\" \"\")\n \t      (const_string \"SF\")\n@@ -919,6 +908,7 @@\n    && (GET_MODE (operands [3]) == GET_MODE (operands[1]))\"\n   \"* return output_fp_compare (insn, operands, 0, 0);\"\n   [(set_attr \"type\" \"multi\")\n+   (set_attr \"unit\" \"i387\")\n    (set_attr \"fp_int_src\" \"true\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n@@ -2209,6 +2199,7 @@\n   return \"push{l}\\t%1\";\n }\n   [(set_attr \"type\" \"multi,push,multi\")\n+   (set_attr \"unit\" \"i387,*,*\")\n    (set_attr \"mode\" \"SF,SI,SF\")])\n \n (define_insn \"*pushsf_rex64\"\n@@ -2221,6 +2212,7 @@\n   return \"push{q}\\t%q1\";\n }\n   [(set_attr \"type\" \"multi,push,multi\")\n+   (set_attr \"unit\" \"i387,*,*\")\n    (set_attr \"mode\" \"SF,DI,SF\")])\n \n (define_split\n@@ -2374,6 +2366,7 @@\n   gcc_unreachable ();\n }\n   [(set_attr \"type\" \"multi\")\n+   (set_attr \"unit\" \"i387,*,*,*\")\n    (set_attr \"mode\" \"DF,SI,SI,DF\")])\n \n (define_insn \"*pushdf_integer\"\n@@ -2385,6 +2378,7 @@\n   gcc_unreachable ();\n }\n   [(set_attr \"type\" \"multi\")\n+   (set_attr \"unit\" \"i387,*,*\")\n    (set_attr \"mode\" \"DF,SI,DF\")])\n \n ;; %%% Kill this when call knows how to work this out.\n@@ -2707,6 +2701,7 @@\n   gcc_unreachable ();\n }\n   [(set_attr \"type\" \"multi\")\n+   (set_attr \"unit\" \"i387,*,*\")\n    (set_attr \"mode\" \"XF,SI,SI\")])\n \n (define_insn \"*pushxf_integer\"\n@@ -2718,6 +2713,7 @@\n   gcc_unreachable ();\n }\n   [(set_attr \"type\" \"multi\")\n+   (set_attr \"unit\" \"i387,*\")\n    (set_attr \"mode\" \"XF,SI\")])\n \n (define_split\n@@ -3745,6 +3741,7 @@\n     }\n }\n   [(set_attr \"type\" \"fmov,multi,ssecvt\")\n+   (set_attr \"unit\" \"*,i387,*\")\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"*truncdfsf_i387\"\n@@ -3768,6 +3765,7 @@\n     }\n }\n   [(set_attr \"type\" \"fmov,multi\")\n+   (set_attr \"unit\" \"*,i387\")\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"*truncdfsf2_i387_1\"\n@@ -3833,6 +3831,7 @@\n     return \"fst%z0\\t%y0\";\n }\n   [(set_attr \"type\" \"fmov,multi,multi,multi\")\n+   (set_attr \"unit\" \"*,i387,i387,i387\")\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"truncxfsf2_i387_noop\"\n@@ -3859,6 +3858,7 @@\n      return \"fst%z0\\t%y0\";\n }\n   [(set_attr \"type\" \"fmov,multi,multi\")\n+   (set_attr \"unit\" \"*,i387,i387\")\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"*truncxfsf2_i387_1\"\n@@ -3929,6 +3929,7 @@\n     return \"fst%z0\\t%y0\";\n }\n   [(set_attr \"type\" \"fmov,multi,multi,multi\")\n+   (set_attr \"unit\" \"*,i387,i387,i387\")\n    (set_attr \"mode\" \"DF\")])\n \n (define_insn \"truncxfdf2_i387_noop\"\n@@ -3955,6 +3956,7 @@\n     return \"fst%z0\\t%y0\";\n }\n   [(set_attr \"type\" \"fmov,multi,multi\")\n+   (set_attr \"unit\" \"*,i387,i387\")\n    (set_attr \"mode\" \"DF\")])\n \n (define_insn \"*truncxfdf2_i387_1\"\n@@ -4405,6 +4407,7 @@\n    #\"\n   [(set_attr \"type\" \"fmov,multi\")\n    (set_attr \"mode\" \"SF\")\n+   (set_attr \"unit\" \"*,i387\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_expand \"floatsisf2\"\n@@ -4424,6 +4427,7 @@\n    cvtsi2ss\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"fmov,multi,sseicvt,sseicvt\")\n    (set_attr \"mode\" \"SF\")\n+   (set_attr \"unit\" \"*,i387,*,*\")\n    (set_attr \"athlon_decode\" \"*,*,vector,double\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n@@ -4446,6 +4450,7 @@\n    #\"\n   [(set_attr \"type\" \"fmov,multi\")\n    (set_attr \"mode\" \"SF\")\n+   (set_attr \"unit\" \"*,i387\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_expand \"floatdisf2\"\n@@ -4465,6 +4470,7 @@\n    cvtsi2ss{q}\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"fmov,multi,sseicvt,sseicvt\")\n    (set_attr \"mode\" \"SF\")\n+   (set_attr \"unit\" \"*,i387,*,*\")\n    (set_attr \"athlon_decode\" \"*,*,vector,double\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n@@ -4487,6 +4493,7 @@\n    #\"\n   [(set_attr \"type\" \"fmov,multi\")\n    (set_attr \"mode\" \"SF\")\n+   (set_attr \"unit\" \"*,i387\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_expand \"floathidf2\"\n@@ -4511,6 +4518,7 @@\n    #\"\n   [(set_attr \"type\" \"fmov,multi\")\n    (set_attr \"mode\" \"DF\")\n+   (set_attr \"unit\" \"*,i387\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_expand \"floatsidf2\"\n@@ -4530,6 +4538,7 @@\n    cvtsi2sd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"fmov,multi,sseicvt,sseicvt\")\n    (set_attr \"mode\" \"DF\")\n+   (set_attr \"unit\" \"*,i387,*,*\")\n    (set_attr \"athlon_decode\" \"*,*,double,direct\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n@@ -4552,6 +4561,7 @@\n    #\"\n   [(set_attr \"type\" \"fmov,multi\")\n    (set_attr \"mode\" \"DF\")\n+   (set_attr \"unit\" \"*,i387\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_expand \"floatdidf2\"\n@@ -4571,6 +4581,7 @@\n    cvtsi2sd{q}\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"fmov,multi,sseicvt,sseicvt\")\n    (set_attr \"mode\" \"DF\")\n+   (set_attr \"unit\" \"*,i387,*,*\")\n    (set_attr \"athlon_decode\" \"*,*,double,direct\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n@@ -4593,6 +4604,7 @@\n    #\"\n   [(set_attr \"type\" \"fmov,multi\")\n    (set_attr \"mode\" \"DF\")\n+   (set_attr \"unit\" \"*,i387\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_insn \"floathixf2\"\n@@ -4604,6 +4616,7 @@\n    #\"\n   [(set_attr \"type\" \"fmov,multi\")\n    (set_attr \"mode\" \"XF\")\n+   (set_attr \"unit\" \"*,i387\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_insn \"floatsixf2\"\n@@ -4615,6 +4628,7 @@\n    #\"\n   [(set_attr \"type\" \"fmov,multi\")\n    (set_attr \"mode\" \"XF\")\n+   (set_attr \"unit\" \"*,i387\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n (define_insn \"floatdixf2\"\n@@ -4626,6 +4640,7 @@\n    #\"\n   [(set_attr \"type\" \"fmov,multi\")\n    (set_attr \"mode\" \"XF\")\n+   (set_attr \"unit\" \"*,i387\")\n    (set_attr \"fp_int_src\" \"true\")])\n \n ;; %%% Kill these when reload knows how to do it."}, {"sha": "ffb8d541a33a23e68ca85e5c9ad952a11b93f9f5", "filename": "gcc/config/i386/mmx.md", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af12f8ea01180c592d6ab79407b0d6781f86eea7/gcc%2Fconfig%2Fi386%2Fmmx.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af12f8ea01180c592d6ab79407b0d6781f86eea7/gcc%2Fconfig%2Fi386%2Fmmx.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fmmx.md?ref=af12f8ea01180c592d6ab79407b0d6781f86eea7", "patch": "@@ -83,6 +83,7 @@\n     movd\\t{%1, %0|%0, %1}\n     movd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"imov,imov,mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,ssemov,ssemov,ssemov,ssemov,ssemov\")\n+   (set_attr \"unit\" \"*,*,*,*,*,mmx,mmx,*,*,*,*,*\")\n    (set_attr \"mode\" \"DI\")])\n \n (define_insn \"*mov<mode>_internal\"\n@@ -108,6 +109,7 @@\n     #\n     #\"\n   [(set_attr \"type\" \"mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,ssemov,ssemov,ssemov,ssemov,ssemov,ssemov,ssemov,*,*\")\n+   (set_attr \"unit\" \"*,*,*,mmx,mmx,*,*,*,*,*,*,*,*,*\")\n    (set_attr \"mode\" \"DI,DI,DI,DI,DI,TI,DI,DI,V4SF,V4SF,V2SF,V2SF,DI,DI\")])\n \n (define_expand \"movv2sf\"\n@@ -141,6 +143,7 @@\n     movd\\t{%1, %0|%0, %1}\n     movd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"imov,imov,mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,ssemov,ssemov,ssemov,ssemov,ssemov,ssemov\")\n+   (set_attr \"unit\" \"*,*,*,*,*,mmx,mmx,*,*,*,*,*,*\")\n    (set_attr \"mode\" \"DI,DI,DI,DI,DI,DI,DI,V4SF,V4SF,V2SF,V2SF,DI,DI\")])\n \n (define_insn \"*movv2sf_internal\"\n@@ -163,6 +166,7 @@\n     #\n     #\"\n   [(set_attr \"type\" \"mmxmov,mmxmov,mmxmov,ssecvt,ssecvt,ssemov,ssemov,ssemov,ssemov,*,*\")\n+   (set_attr \"unit\" \"*,*,*,mmx,mmx,*,*,*,*,*,*\")\n    (set_attr \"mode\" \"DI,DI,DI,DI,DI,V4SF,V4SF,V2SF,V2SF,DI,DI\")])\n \n ;; %%% This multiword shite has got to go.\n@@ -1346,8 +1350,8 @@\n \t\t   UNSPEC_MOVMSK))]\n   \"TARGET_SSE || TARGET_3DNOW_A\"\n   \"pmovmskb\\t{%1, %0|%0, %1}\"\n-  [(set_attr \"type\" \"ssecvt\")\n-   (set_attr \"mode\" \"V4SF\")])\n+  [(set_attr \"type\" \"mmxcvt\")\n+   (set_attr \"mode\" \"DI\")])\n \n (define_expand \"mmx_maskmovq\"\n   [(set (match_operand:V8QI 0 \"memory_operand\" \"\")"}, {"sha": "35a07cefc1217bca075d88ad817d21b57ef4e6a9", "filename": "gcc/config/i386/sse.md", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/af12f8ea01180c592d6ab79407b0d6781f86eea7/gcc%2Fconfig%2Fi386%2Fsse.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/af12f8ea01180c592d6ab79407b0d6781f86eea7/gcc%2Fconfig%2Fi386%2Fsse.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fsse.md?ref=af12f8ea01180c592d6ab79407b0d6781f86eea7", "patch": "@@ -891,6 +891,7 @@\n   \"TARGET_SSE\"\n   \"cvtps2pi\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"unit\" \"mmx\")\n    (set_attr \"mode\" \"DI\")])\n \n (define_insn \"sse_cvttps2pi\"\n@@ -901,6 +902,7 @@\n   \"TARGET_SSE\"\n   \"cvttps2pi\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"unit\" \"mmx\")\n    (set_attr \"mode\" \"SF\")])\n \n (define_insn \"sse_cvtsi2ss\"\n@@ -1825,11 +1827,12 @@\n ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n \n (define_insn \"sse2_cvtpi2pd\"\n-  [(set (match_operand:V2DF 0 \"register_operand\" \"=x\")\n-\t(float:V2DF (match_operand:V2SI 1 \"nonimmediate_operand\" \"ym\")))]\n+  [(set (match_operand:V2DF 0 \"register_operand\" \"=x,x\")\n+\t(float:V2DF (match_operand:V2SI 1 \"nonimmediate_operand\" \"y,m\")))]\n   \"TARGET_SSE2\"\n   \"cvtpi2pd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"unit\" \"mmx,*\")\n    (set_attr \"mode\" \"V2DF\")])\n \n (define_insn \"sse2_cvtpd2pi\"\n@@ -1839,6 +1842,7 @@\n   \"TARGET_SSE2\"\n   \"cvtpd2pi\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"unit\" \"mmx\")\n    (set_attr \"mode\" \"DI\")])\n \n (define_insn \"sse2_cvttpd2pi\"\n@@ -1847,6 +1851,7 @@\n   \"TARGET_SSE2\"\n   \"cvttpd2pi\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"ssecvt\")\n+   (set_attr \"unit\" \"mmx\")\n    (set_attr \"mode\" \"TI\")])\n \n (define_insn \"sse2_cvtsi2sd\""}]}