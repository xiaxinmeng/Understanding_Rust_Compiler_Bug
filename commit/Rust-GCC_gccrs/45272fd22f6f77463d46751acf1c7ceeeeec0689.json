{"sha": "45272fd22f6f77463d46751acf1c7ceeeeec0689", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDUyNzJmZDIyZjZmNzc0NjNkNDY3NTFhY2YxYzdjZWVlZWVjMDY4OQ==", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2019-02-11T08:13:03Z"}, "committer": {"name": "Martin Liska", "email": "marxin@gcc.gnu.org", "date": "2019-02-11T08:13:03Z"}, "message": "Construct ipa_reduced_postorder always for overwritable (PR ipa/89009).\n\n2019-02-11  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/89009\n\t* ipa-cp.c (build_toporder_info): Remove usage of a param.\n\t* ipa-inline.c (inline_small_functions): Likewise.\n\t* ipa-pure-const.c (propagate_pure_const): Likewise.\n\t(propagate_nothrow): Likewise.\n\t* ipa-reference.c (propagate): Likewise.\n\t* ipa-utils.c (struct searchc_env): Remove unused field.\n\t(searchc): Always search across AVAIL_INTERPOSABLE.\n\t(ipa_reduced_postorder): Always allow AVAIL_INTERPOSABLE as\n\tthe only called IPA pure const can properly not propagate\n\tacross interposable boundary.\n\t* ipa-utils.h (ipa_reduced_postorder): Remove param.\n2019-02-11  Martin Liska  <mliska@suse.cz>\n\n\tPR ipa/89009\n\t* g++.dg/ipa/pr89009.C: New test.\n\nFrom-SVN: r268762", "tree": {"sha": "95f7ce40eb7def7277d7c336333d75586a810a33", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/95f7ce40eb7def7277d7c336333d75586a810a33"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/45272fd22f6f77463d46751acf1c7ceeeeec0689", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45272fd22f6f77463d46751acf1c7ceeeeec0689", "html_url": "https://github.com/Rust-GCC/gccrs/commit/45272fd22f6f77463d46751acf1c7ceeeeec0689", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/45272fd22f6f77463d46751acf1c7ceeeeec0689/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "d29cce74b2f2e5b49d09e8b8ad2b67db21c62ac8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/d29cce74b2f2e5b49d09e8b8ad2b67db21c62ac8", "html_url": "https://github.com/Rust-GCC/gccrs/commit/d29cce74b2f2e5b49d09e8b8ad2b67db21c62ac8"}], "stats": {"total": 53, "additions": 41, "deletions": 12}, "files": [{"sha": "9e938f753b0b0bf707a9a43a3ee5ef9c8c736894", "filename": "gcc/ChangeLog", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45272fd22f6f77463d46751acf1c7ceeeeec0689/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45272fd22f6f77463d46751acf1c7ceeeeec0689/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=45272fd22f6f77463d46751acf1c7ceeeeec0689", "patch": "@@ -1,3 +1,18 @@\n+2019-02-11  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/89009\n+\t* ipa-cp.c (build_toporder_info): Remove usage of a param.\n+\t* ipa-inline.c (inline_small_functions): Likewise.\n+\t* ipa-pure-const.c (propagate_pure_const): Likewise.\n+\t(propagate_nothrow): Likewise.\n+\t* ipa-reference.c (propagate): Likewise.\n+\t* ipa-utils.c (struct searchc_env): Remove unused field.\n+\t(searchc): Always search across AVAIL_INTERPOSABLE.\n+\t(ipa_reduced_postorder): Always allow AVAIL_INTERPOSABLE as\n+\tthe only called IPA pure const can properly not propagate\n+\tacross interposable boundary.\n+\t* ipa-utils.h (ipa_reduced_postorder): Remove param.\n+\n 2019-02-11  Chung-Ju Wu  <jasonwucj@gmail.com>\n \n \t* config/nds32/nds32.md (call_internal, call_value_internal,"}, {"sha": "442d5c63effa0854f2011b0f00f9f16ff062e40d", "filename": "gcc/ipa-cp.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45272fd22f6f77463d46751acf1c7ceeeeec0689/gcc%2Fipa-cp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45272fd22f6f77463d46751acf1c7ceeeeec0689/gcc%2Fipa-cp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-cp.c?ref=45272fd22f6f77463d46751acf1c7ceeeeec0689", "patch": "@@ -815,7 +815,7 @@ build_toporder_info (struct ipa_topo_info *topo)\n   topo->stack = XCNEWVEC (struct cgraph_node *, symtab->cgraph_count);\n \n   gcc_checking_assert (topo->stack_top == 0);\n-  topo->nnodes = ipa_reduced_postorder (topo->order, true, true, NULL);\n+  topo->nnodes = ipa_reduced_postorder (topo->order, true, NULL);\n }\n \n /* Free information about strongly connected components and the arrays in"}, {"sha": "360c3de3289095971f344508e8d84d50fe8313b0", "filename": "gcc/ipa-inline.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45272fd22f6f77463d46751acf1c7ceeeeec0689/gcc%2Fipa-inline.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45272fd22f6f77463d46751acf1c7ceeeeec0689/gcc%2Fipa-inline.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-inline.c?ref=45272fd22f6f77463d46751acf1c7ceeeeec0689", "patch": "@@ -1778,7 +1778,7 @@ inline_small_functions (void)\n      metrics.  */\n \n   max_count = profile_count::uninitialized ();\n-  ipa_reduced_postorder (order, true, true, NULL);\n+  ipa_reduced_postorder (order, true, NULL);\n   free (order);\n \n   FOR_EACH_DEFINED_FUNCTION (node)"}, {"sha": "a8a3956d2d540d653b7735d50ffa01ef97b2cc81", "filename": "gcc/ipa-pure-const.c", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45272fd22f6f77463d46751acf1c7ceeeeec0689/gcc%2Fipa-pure-const.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45272fd22f6f77463d46751acf1c7ceeeeec0689/gcc%2Fipa-pure-const.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-pure-const.c?ref=45272fd22f6f77463d46751acf1c7ceeeeec0689", "patch": "@@ -1422,7 +1422,7 @@ propagate_pure_const (void)\n   bool remove_p = false;\n   bool has_cdtor;\n \n-  order_pos = ipa_reduced_postorder (order, true, false,\n+  order_pos = ipa_reduced_postorder (order, true,\n \t\t\t\t     ignore_edge_for_pure_const);\n   if (dump_file)\n     {\n@@ -1751,7 +1751,7 @@ propagate_nothrow (void)\n   int i;\n   struct ipa_dfs_info * w_info;\n \n-  order_pos = ipa_reduced_postorder (order, true, false,\n+  order_pos = ipa_reduced_postorder (order, true,\n \t\t\t\t     ignore_edge_for_nothrow);\n   if (dump_file)\n     {"}, {"sha": "d1759a374bcf443478bf55d4bf8ae260674ca3c0", "filename": "gcc/ipa-reference.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45272fd22f6f77463d46751acf1c7ceeeeec0689/gcc%2Fipa-reference.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45272fd22f6f77463d46751acf1c7ceeeeec0689/gcc%2Fipa-reference.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-reference.c?ref=45272fd22f6f77463d46751acf1c7ceeeeec0689", "patch": "@@ -712,7 +712,7 @@ propagate (void)\n      the global information.  All the nodes within a cycle will have\n      the same info so we collapse cycles first.  Then we can do the\n      propagation in one pass from the leaves to the roots.  */\n-  order_pos = ipa_reduced_postorder (order, true, true, ignore_edge_p);\n+  order_pos = ipa_reduced_postorder (order, true, ignore_edge_p);\n   if (dump_file)\n     ipa_print_order (dump_file, \"reduced\", order, order_pos);\n "}, {"sha": "79b250c394397b8d7026dec4c415f95fa94dae36", "filename": "gcc/ipa-utils.c", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45272fd22f6f77463d46751acf1c7ceeeeec0689/gcc%2Fipa-utils.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45272fd22f6f77463d46751acf1c7ceeeeec0689/gcc%2Fipa-utils.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-utils.c?ref=45272fd22f6f77463d46751acf1c7ceeeeec0689", "patch": "@@ -63,7 +63,6 @@ struct searchc_env {\n   int order_pos;\n   splay_tree nodes_marked_new;\n   bool reduce;\n-  bool allow_overwritable;\n   int count;\n };\n \n@@ -105,7 +104,7 @@ searchc (struct searchc_env* env, struct cgraph_node *v,\n \n       if (w->aux\n \t  && (avail > AVAIL_INTERPOSABLE\n-\t      || (env->allow_overwritable && avail == AVAIL_INTERPOSABLE)))\n+\t      || avail == AVAIL_INTERPOSABLE))\n \t{\n \t  w_info = (struct ipa_dfs_info *) w->aux;\n \t  if (w_info->new_node)\n@@ -162,7 +161,7 @@ searchc (struct searchc_env* env, struct cgraph_node *v,\n \n int\n ipa_reduced_postorder (struct cgraph_node **order,\n-\t\t       bool reduce, bool allow_overwritable,\n+\t\t       bool reduce,\n \t\t       bool (*ignore_edge) (struct cgraph_edge *))\n {\n   struct cgraph_node *node;\n@@ -175,15 +174,13 @@ ipa_reduced_postorder (struct cgraph_node **order,\n   env.nodes_marked_new = splay_tree_new (splay_tree_compare_ints, 0, 0);\n   env.count = 1;\n   env.reduce = reduce;\n-  env.allow_overwritable = allow_overwritable;\n \n   FOR_EACH_DEFINED_FUNCTION (node)\n     {\n       enum availability avail = node->get_availability ();\n \n       if (avail > AVAIL_INTERPOSABLE\n-\t  || (allow_overwritable\n-\t      && (avail == AVAIL_INTERPOSABLE)))\n+\t  || avail == AVAIL_INTERPOSABLE)\n \t{\n \t  /* Reuse the info if it is already there.  */\n \t  struct ipa_dfs_info *info = (struct ipa_dfs_info *) node->aux;"}, {"sha": "b70e8c571086daae188a78086f4764e69199eade", "filename": "gcc/ipa-utils.h", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45272fd22f6f77463d46751acf1c7ceeeeec0689/gcc%2Fipa-utils.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45272fd22f6f77463d46751acf1c7ceeeeec0689/gcc%2Fipa-utils.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fipa-utils.h?ref=45272fd22f6f77463d46751acf1c7ceeeeec0689", "patch": "@@ -36,7 +36,7 @@ struct ipa_dfs_info {\n \n /* In ipa-utils.c  */\n void ipa_print_order (FILE*, const char *, struct cgraph_node**, int);\n-int ipa_reduced_postorder (struct cgraph_node **, bool, bool,\n+int ipa_reduced_postorder (struct cgraph_node **, bool,\n \t\t\t  bool (*ignore_edge) (struct cgraph_edge *));\n void ipa_free_postorder_info (void);\n vec<cgraph_node *> ipa_get_nodes_in_cycle (struct cgraph_node *);"}, {"sha": "37af06ad0d96247471f6b2635afc2181aac08044", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45272fd22f6f77463d46751acf1c7ceeeeec0689/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45272fd22f6f77463d46751acf1c7ceeeeec0689/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=45272fd22f6f77463d46751acf1c7ceeeeec0689", "patch": "@@ -1,3 +1,8 @@\n+2019-02-11  Martin Liska  <mliska@suse.cz>\n+\n+\tPR ipa/89009\n+\t* g++.dg/ipa/pr89009.C: New test.\n+\n 2019-02-10  Thomas Koenig  <tkoenig@gcc.gnu.org>\n \n \tPR fortran/71723"}, {"sha": "6b4fc65a6414ab12c78b4188a524e27c233f9240", "filename": "gcc/testsuite/g++.dg/ipa/pr89009.C", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/45272fd22f6f77463d46751acf1c7ceeeeec0689/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr89009.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/45272fd22f6f77463d46751acf1c7ceeeeec0689/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr89009.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fipa%2Fpr89009.C?ref=45272fd22f6f77463d46751acf1c7ceeeeec0689", "patch": "@@ -0,0 +1,12 @@\n+/* PR ipa/89009 */\n+/* { dg-do run } */\n+/* { dg-options \"-fvisibility=hidden -fpic -O2 -fno-inline\" } */\n+\n+#pragma GCC visibility push(default)\n+void foo1() { __builtin_printf (\"foo\\n\"); }\n+#pragma GCC visibility pop\n+void foo2() { __builtin_printf (\"foo\\n\"); }\n+\n+int main() { foo2(); return 0; }\n+\n+/* { dg-output \"foo\" } */"}]}