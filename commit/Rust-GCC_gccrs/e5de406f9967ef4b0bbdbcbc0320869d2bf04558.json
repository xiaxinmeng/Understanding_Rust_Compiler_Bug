{"sha": "e5de406f9967ef4b0bbdbcbc0320869d2bf04558", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTVkZTQwNmY5OTY3ZWY0YjBiYmRiY2JjMDMyMDg2OWQyYmYwNDU1OA==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-03-18T12:55:29Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2020-03-18T12:55:29Z"}, "message": "libstdc++ Fix compilation of <stop_token> with Clang\n\nClang 9 supports C++20 via -std=c++2a but doesn't support three-way\ncomparisons, so <stop_token> fails to compile. When the compiler doesn't\nsupport default comparisons, this patch defines operator== and\noperator!= for the _Stop_state_ref class. That is enough for the header\nto be compiled with Clang. It allows operator== for stop_token and\nstop_source to work, but not operator!= because that isn't explicitly\ndefined.\n\n\t* include/std/stop_token (stop_token::_Stop_state_ref): Define\n\tcomparison operators explicitly if the compiler won't synthesize them.", "tree": {"sha": "0734ee3c25b2a35b298eb7205bd098dfdabe8177", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/0734ee3c25b2a35b298eb7205bd098dfdabe8177"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5de406f9967ef4b0bbdbcbc0320869d2bf04558", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5de406f9967ef4b0bbdbcbc0320869d2bf04558", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5de406f9967ef4b0bbdbcbc0320869d2bf04558", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5de406f9967ef4b0bbdbcbc0320869d2bf04558/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07522ae90b5bae2ca95b64f3a4de60bea0cc0567", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07522ae90b5bae2ca95b64f3a4de60bea0cc0567", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07522ae90b5bae2ca95b64f3a4de60bea0cc0567"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "a9cd25992437647498781c3352229c995f6edf9e", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5de406f9967ef4b0bbdbcbc0320869d2bf04558/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5de406f9967ef4b0bbdbcbc0320869d2bf04558/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=e5de406f9967ef4b0bbdbcbc0320869d2bf04558", "patch": "@@ -1,5 +1,8 @@\n 2020-03-18  Jonathan Wakely  <jwakely@redhat.com>\n \n+\t* include/std/stop_token (stop_token::_Stop_state_ref): Define\n+\tcomparison operators explicitly if the compiler won't synthesize them.\n+\n \t* include/bits/stl_algobase.h (__lexicographical_compare_aux): Check\n \t__cpp_lib_concepts before using iter_reference_t.\n \t* include/bits/stream_iterator.h (istream_iterator): Check"}, {"sha": "87beb08c71d908817ee324257a5e12559d6d431f", "filename": "libstdc++-v3/include/std/stop_token", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5de406f9967ef4b0bbdbcbc0320869d2bf04558/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstop_token", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5de406f9967ef4b0bbdbcbc0320869d2bf04558/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstop_token", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fstd%2Fstop_token?ref=e5de406f9967ef4b0bbdbcbc0320869d2bf04558", "patch": "@@ -456,8 +456,20 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n       _Stop_state_t* operator->() const noexcept { return _M_ptr; }\n \n+#if __cpp_impl_three_way_comparison >= 201907L\n       friend bool\n       operator==(const _Stop_state_ref&, const _Stop_state_ref&) = default;\n+#else\n+      friend bool\n+      operator==(const _Stop_state_ref& __lhs, const _Stop_state_ref& __rhs)\n+      noexcept\n+      { return __lhs._M_ptr == __rhs._M_ptr; }\n+\n+      friend bool\n+      operator!=(const _Stop_state_ref& __lhs, const _Stop_state_ref& __rhs)\n+      noexcept\n+      { return __lhs._M_ptr != __rhs._M_ptr; }\n+#endif\n \n     private:\n       _Stop_state_t* _M_ptr = nullptr;"}]}