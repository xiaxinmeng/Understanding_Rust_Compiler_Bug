{"sha": "e50869f7a638328f609afc0cbfa77ccaa2cbe01a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTUwODY5ZjdhNjM4MzI4ZjYwOWFmYzBjYmZhNzdjY2FhMmNiZTAxYQ==", "commit": {"author": {"name": "Nick Clifton", "email": "nickc@redhat.com", "date": "2015-06-08T13:57:58Z"}, "committer": {"name": "Nick Clifton", "email": "nickc@gcc.gnu.org", "date": "2015-06-08T13:57:58Z"}, "message": "rx.c (rx_function_value): Do not promote vector types.\n\n\t* config/rx/rx.c (rx_function_value): Do not promote vector types.\n\t(rx_promote_function_mode): Likewise.\n\t* config/rx/rx.h (LIBCALL_VALUE): Likewise.\n\nFrom-SVN: r224228", "tree": {"sha": "fc186b27117ad066504d7a44e648253e3f72c084", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/fc186b27117ad066504d7a44e648253e3f72c084"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e50869f7a638328f609afc0cbfa77ccaa2cbe01a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e50869f7a638328f609afc0cbfa77ccaa2cbe01a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e50869f7a638328f609afc0cbfa77ccaa2cbe01a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e50869f7a638328f609afc0cbfa77ccaa2cbe01a/comments", "author": {"login": "nickclifton", "id": 31441682, "node_id": "MDQ6VXNlcjMxNDQxNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/31441682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nickclifton", "html_url": "https://github.com/nickclifton", "followers_url": "https://api.github.com/users/nickclifton/followers", "following_url": "https://api.github.com/users/nickclifton/following{/other_user}", "gists_url": "https://api.github.com/users/nickclifton/gists{/gist_id}", "starred_url": "https://api.github.com/users/nickclifton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nickclifton/subscriptions", "organizations_url": "https://api.github.com/users/nickclifton/orgs", "repos_url": "https://api.github.com/users/nickclifton/repos", "events_url": "https://api.github.com/users/nickclifton/events{/privacy}", "received_events_url": "https://api.github.com/users/nickclifton/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "66c277f11b6247750e0206d630bb6d0757e56cec", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/66c277f11b6247750e0206d630bb6d0757e56cec", "html_url": "https://github.com/Rust-GCC/gccrs/commit/66c277f11b6247750e0206d630bb6d0757e56cec"}], "stats": {"total": 27, "additions": 22, "deletions": 5}, "files": [{"sha": "9908efd58d8b0b8a537124460d5f2e29e07d478e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e50869f7a638328f609afc0cbfa77ccaa2cbe01a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e50869f7a638328f609afc0cbfa77ccaa2cbe01a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e50869f7a638328f609afc0cbfa77ccaa2cbe01a", "patch": "@@ -1,3 +1,9 @@\n+2015-06-08  Nick Clifton  <nickc@redhat.com>\n+\n+\t* config/rx/rx.c (rx_function_value): Do not promote vector types.\n+\t(rx_promote_function_mode): Likewise.\n+\t* config/rx/rx.h (LIBCALL_VALUE): Likewise.\n+\n 2015-06-08  Jakub Jelinek  <jakub@redhat.com>\n \n \t* genattrtab.c (insn_alternatives): Change type from int *"}, {"sha": "5bf38dfbb43cd64024c7ad2c41634af32fec082d", "filename": "gcc/config/rx/rx.c", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e50869f7a638328f609afc0cbfa77ccaa2cbe01a/gcc%2Fconfig%2Frx%2Frx.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e50869f7a638328f609afc0cbfa77ccaa2cbe01a/gcc%2Fconfig%2Frx%2Frx.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.c?ref=e50869f7a638328f609afc0cbfa77ccaa2cbe01a", "patch": "@@ -477,11 +477,18 @@ rx_print_operand_address (FILE * file, rtx addr)\n \t  addr = XEXP (addr, 0);\n \t  gcc_assert (XINT (addr, 1) == UNSPEC_CONST);\n \n-\t  /* FIXME: Putting this case label here is an appalling abuse of the C language.  */\n-\tcase UNSPEC:\n           addr = XVECEXP (addr, 0, 0);\n \t  gcc_assert (CONST_INT_P (addr));\n+\t  fprintf (file, \"#\");\n+\t  output_addr_const (file, addr);\n+\t  break;\n \t}\n+      fprintf (file, \"#\");\n+      output_addr_const (file, XEXP (addr, 0));\n+      break;\n+\n+    case UNSPEC:\n+      addr = XVECEXP (addr, 0, 0);\n       /* Fall through.  */\n     case LABEL_REF:\n     case SYMBOL_REF:\n@@ -1174,6 +1181,8 @@ rx_function_value (const_tree ret_type,\n   if (GET_MODE_SIZE (mode) > 0\n       && GET_MODE_SIZE (mode) < 4\n       && ! COMPLEX_MODE_P (mode)\n+      && ! VECTOR_TYPE_P (ret_type)\n+      && ! VECTOR_MODE_P (mode)\n       )\n     return gen_rtx_REG (SImode, FUNC_RETURN_REGNUM);\n     \n@@ -1193,6 +1202,8 @@ rx_promote_function_mode (const_tree type ATTRIBUTE_UNUSED,\n   if (for_return != 1\n       || GET_MODE_SIZE (mode) >= 4\n       || COMPLEX_MODE_P (mode)\n+      || VECTOR_MODE_P (mode)\n+      || VECTOR_TYPE_P (type)\n       || GET_MODE_SIZE (mode) < 1)\n     return mode;\n \n@@ -1712,7 +1723,6 @@ gen_safe_add (rtx dest, rtx src, rtx val, bool is_frame_related)\n \n   if (is_frame_related)\n     RTX_FRAME_RELATED_P (insn) = 1;\n-  return;\n }\n \n static void\n@@ -1746,7 +1756,7 @@ rx_expand_prologue (void)\n \n   if (flag_stack_usage_info)\n     current_function_static_stack_size = frame_size + stack_size;\n-  \n+\n   /* If we use any of the callee-saved registers, save them now.  */\n   if (mask)\n     {\n@@ -1852,7 +1862,7 @@ rx_expand_prologue (void)\n \t\t      GEN_INT (- (HOST_WIDE_INT) frame_size), true);\n       else\n \tgen_safe_add (stack_pointer_rtx, frame_pointer_rtx, NULL_RTX,\n-\t\t      true);\n+\t\t      false /* False because the epilogue will use the FP not the SP.  */);\n     }\n }\n "}, {"sha": "d2d6bce48c808672ad512fdd82f585043ca06f37", "filename": "gcc/config/rx/rx.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e50869f7a638328f609afc0cbfa77ccaa2cbe01a/gcc%2Fconfig%2Frx%2Frx.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e50869f7a638328f609afc0cbfa77ccaa2cbe01a/gcc%2Fconfig%2Frx%2Frx.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Frx%2Frx.h?ref=e50869f7a638328f609afc0cbfa77ccaa2cbe01a", "patch": "@@ -267,6 +267,7 @@ enum reg_class\n #define LIBCALL_VALUE(MODE)\t\t\t\t\\\n   gen_rtx_REG (((GET_MODE_CLASS (MODE) != MODE_INT\t\\\n                  || COMPLEX_MODE_P (MODE)\t\t\\\n+                 || VECTOR_MODE_P (MODE)\t\t\\\n \t\t || GET_MODE_SIZE (MODE) >= 4)\t\t\\\n \t\t? (MODE)\t\t\t\t\\\n \t\t: SImode),\t\t\t\t\\"}]}