{"sha": "55fec44def29854be875ac68c304fc0c55b538ff", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTVmZWM0NGRlZjI5ODU0YmU4NzVhYzY4YzMwNGZjMGM1NWI1MzhmZg==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2015-10-01T19:22:08Z"}, "committer": {"name": "Ville Voutilainen", "email": "ville@gcc.gnu.org", "date": "2015-10-01T19:22:08Z"}, "message": "re PR c++/54430 ([C++11] For-Loop: Scope of iterating variable begins too early)\n\nPR c++/54430\n\n/cp\n2015-10-01  Ville Voutilainen  <ville.voutilainen@gmail.com>\n\n\tPR c++/54430\n\t* name-lookup.c (push_binding): Make non-static.\n\t* name-lookup.h (push_binding): Declare it.\n\t* parser.c (cp_parser_range_for): Use it, get the range\n\tdeclaration away from the scope until the range expression\n\thas been parsed, then restore the declaration.\n\n/testsuite\n2015-10-01  Ville Voutilainen  <ville.voutilainen@gmail.com>\n\n\tPR c++/54430\n\t* g++.dg/cpp0x/range-for30.C: New.\n\nFrom-SVN: r228354", "tree": {"sha": "c64ed0713431721871f5a948d0649009558ae7f7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c64ed0713431721871f5a948d0649009558ae7f7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/55fec44def29854be875ac68c304fc0c55b538ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55fec44def29854be875ac68c304fc0c55b538ff", "html_url": "https://github.com/Rust-GCC/gccrs/commit/55fec44def29854be875ac68c304fc0c55b538ff", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/55fec44def29854be875ac68c304fc0c55b538ff/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d1a8f7517eaed1d38d3827248e007634475bca4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0d1a8f7517eaed1d38d3827248e007634475bca4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0d1a8f7517eaed1d38d3827248e007634475bca4"}], "stats": {"total": 43, "additions": 42, "deletions": 1}, "files": [{"sha": "72c3bf93b09df01d61debb82dafe9833b3bf79fb", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55fec44def29854be875ac68c304fc0c55b538ff/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55fec44def29854be875ac68c304fc0c55b538ff/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=55fec44def29854be875ac68c304fc0c55b538ff", "patch": "@@ -1,3 +1,12 @@\n+2015-10-01  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tPR c++/54430\n+\t* name-lookup.c (push_binding): Make non-static.\n+\t* name-lookup.h (push_binding): Declare it.\n+\t* parser.c (cp_parser_range_for): Use it, get the range\n+\tdeclaration away from the scope until the range expression\n+\thas been parsed, then restore the declaration.\n+\n 2015-09-23  Ville Voutilainen  <ville.voutilainen@gmail.com>\n \n \tFix small typos in the coding rule enforcement warnings."}, {"sha": "bd052a487537cf20cf64357171f7c90621c15a4e", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55fec44def29854be875ac68c304fc0c55b538ff/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55fec44def29854be875ac68c304fc0c55b538ff/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=55fec44def29854be875ac68c304fc0c55b538ff", "patch": "@@ -332,7 +332,7 @@ new_class_binding (tree name, tree value, tree type, cp_binding_level *scope)\n /* Make DECL the innermost binding for ID.  The LEVEL is the binding\n    level at which this declaration is being bound.  */\n \n-static void\n+void\n push_binding (tree id, tree decl, cp_binding_level* level)\n {\n   cxx_binding *binding;"}, {"sha": "82b5e53c7403ce82b6bccf492b4fc6b8a24e9eff", "filename": "gcc/cp/name-lookup.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55fec44def29854be875ac68c304fc0c55b538ff/gcc%2Fcp%2Fname-lookup.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55fec44def29854be875ac68c304fc0c55b538ff/gcc%2Fcp%2Fname-lookup.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.h?ref=55fec44def29854be875ac68c304fc0c55b538ff", "patch": "@@ -88,6 +88,7 @@ struct GTY(()) cxx_saved_binding {\n \n extern tree identifier_type_value (tree);\n extern void set_identifier_type_value (tree, tree);\n+extern void push_binding (tree, tree, cp_binding_level*);\n extern void pop_binding (tree, tree);\n extern void pop_bindings_and_leave_scope (void);\n extern tree constructor_name (tree);"}, {"sha": "8aeca4063dbb8ec491d6841ccb850e8426ec013b", "filename": "gcc/cp/parser.c", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55fec44def29854be875ac68c304fc0c55b538ff/gcc%2Fcp%2Fparser.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55fec44def29854be875ac68c304fc0c55b538ff/gcc%2Fcp%2Fparser.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fparser.c?ref=55fec44def29854be875ac68c304fc0c55b538ff", "patch": "@@ -10725,6 +10725,11 @@ cp_parser_range_for (cp_parser *parser, tree scope, tree init, tree range_decl,\n {\n   tree stmt, range_expr;\n \n+  /* Get the range declaration momentarily out of the way so that\n+     the range expression doesn't clash with it. */\n+  if (range_decl != error_mark_node)\n+    pop_binding (DECL_NAME (range_decl), range_decl);\n+\n   if (cp_lexer_next_token_is (parser->lexer, CPP_OPEN_BRACE))\n     {\n       bool expr_non_constant_p;\n@@ -10733,6 +10738,10 @@ cp_parser_range_for (cp_parser *parser, tree scope, tree init, tree range_decl,\n   else\n     range_expr = cp_parser_expression (parser);\n \n+  /* Put the range declaration back into scope. */\n+  if (range_decl != error_mark_node)\n+    push_binding (DECL_NAME (range_decl), range_decl, current_binding_level);\n+\n   /* If in template, STMT is converted to a normal for-statement\n      at instantiation. If not, it is done just ahead. */\n   if (processing_template_decl)"}, {"sha": "92625b32e56c6a6398728869bdc8c1a8dd840f3e", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55fec44def29854be875ac68c304fc0c55b538ff/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55fec44def29854be875ac68c304fc0c55b538ff/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=55fec44def29854be875ac68c304fc0c55b538ff", "patch": "@@ -1,3 +1,8 @@\n+2015-10-01  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tPR c++/54430\n+\t* g++.dg/cpp0x/range-for30.C: New.\n+\n 2015-10-01  Marek Polacek  <polacek@redhat.com>\n \n \tPR c/65345"}, {"sha": "d559d0f485d7790ee2ad12582c30178b425a21c5", "filename": "gcc/testsuite/g++.dg/cpp0x/range-for30.C", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/55fec44def29854be875ac68c304fc0c55b538ff/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for30.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/55fec44def29854be875ac68c304fc0c55b538ff/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for30.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Frange-for30.C?ref=55fec44def29854be875ac68c304fc0c55b538ff", "patch": "@@ -0,0 +1,17 @@\n+// PR c++/54430\n+// { dg-require-effective-target c++11 }\n+\n+struct A\n+{\n+  A(int) {}\n+  int* begin() {return nullptr;}\n+  int* end() {return nullptr;}\n+};\n+\n+int main()\n+{\n+  int i[] = { 1, 2, 3, 4 };\n+  for (int i : i);\n+  for (auto i : i);\n+  for (A v : v); // { dg-error \"not declared in this scope\" }\n+}"}]}