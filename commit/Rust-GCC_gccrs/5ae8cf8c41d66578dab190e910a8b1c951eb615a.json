{"sha": "5ae8cf8c41d66578dab190e910a8b1c951eb615a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFlOGNmOGM0MWQ2NjU3OGRhYjE5MGU5MTBhOGIxYzk1MWViNjE1YQ==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-03-16T17:13:04Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2008-03-16T17:13:04Z"}, "message": "[multiple changes]\n\n2008-03-16  Paolo Carlini  <pcarlini@suse.de>\n\n\t* testsuite/17_intro/headers/c++200x/all_multiple_inclusion.cc:\n\tUpdate.\n\t* testsuite/17_intro/headers/c++200x/all.cc: Likewise.\n\t* include/precompiled/stdc++.h: Likewise.\n\n2008-03-16  Pedro Lamar\u00e3o  <pedro.lamarao@gmail.com>\n\n\t* include/std/date_time: New file.\n\t* src/date_time.cc: New file.\n \t* config/abi/pre/gnu.ver: Added <date_time> symbols in version\n \tGLIBCXX_3.4.11 and changed two patterns in version GLIBCXX_3.4\n\tthat matched new symbols.\n\t* include/Makefile.am: Add date_time in std headers.\n\t* src/Makefile.am: Add date_time.cc to source files.\n\t* include/Makefile.in: Regenerate.\n\t* src/Makefile.in: Likewise.\n\n2008-03-16  Pedro Lamar\u00e3o  <pedro.lamarao@gmail.com>\n\n      * testsuite/31_date_time/headers/date_time/types_std.cc: New.\n      * testsuite/31_date_time/headers/date_time/std_c++0x_neg.cc: Likewise.\n      * testsuite/31_date_time/headers/date_time/functions_std.cc: Likewise.\n      * testsuite/31_date_time/headers/date_time/synopsis.cc: Likewise.\n      * testsuite/31_date_time/nanoseconds/requirements/traits.cc: Likewise.\n      * testsuite/31_date_time/nanoseconds/requirements/duration.cc: Likewise.\n      * testsuite/31_date_time/system_time/requirements: Likewise.\n      * testsuite/31_date_time/system_time/requirements/traits.cc: Likewise. \t\n\n2008-03-16  Paolo Carlini  <pcarlini@suse.de>\n\n\t* config.h.in: Regenerate.\n\nFrom-SVN: r133276", "tree": {"sha": "16dd08f7b64f9ca7e023c3f9e3ad1bceaddae04b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/16dd08f7b64f9ca7e023c3f9e3ad1bceaddae04b"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ae8cf8c41d66578dab190e910a8b1c951eb615a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ae8cf8c41d66578dab190e910a8b1c951eb615a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ae8cf8c41d66578dab190e910a8b1c951eb615a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ae8cf8c41d66578dab190e910a8b1c951eb615a/comments", "author": null, "committer": null, "parents": [{"sha": "fcb9237b9cc863b563f4b82e04611c98a77dbb67", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fcb9237b9cc863b563f4b82e04611c98a77dbb67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fcb9237b9cc863b563f4b82e04611c98a77dbb67"}], "stats": {"total": 403, "additions": 373, "deletions": 30}, "files": [{"sha": "7ae26c60672f156ac2110891a91552d7e42512e3", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=5ae8cf8c41d66578dab190e910a8b1c951eb615a", "patch": "@@ -1,3 +1,37 @@\n+2008-03-16  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* testsuite/17_intro/headers/c++200x/all_multiple_inclusion.cc:\n+\tUpdate.\n+\t* testsuite/17_intro/headers/c++200x/all.cc: Likewise.\n+\t* include/precompiled/stdc++.h: Likewise.\n+\n+2008-03-16  Pedro Lamar\u00e3o  <pedro.lamarao@gmail.com>\n+\n+\t* include/std/date_time: New file.\n+\t* src/date_time.cc: New file.\n+ \t* config/abi/pre/gnu.ver: Added <date_time> symbols in version\n+ \tGLIBCXX_3.4.11 and changed two patterns in version GLIBCXX_3.4\n+\tthat matched new symbols.\n+\t* include/Makefile.am: Add date_time in std headers.\n+\t* src/Makefile.am: Add date_time.cc to source files.\n+\t* include/Makefile.in: Regenerate.\n+\t* src/Makefile.in: Likewise.\n+\n+2008-03-16  Pedro Lamar\u00e3o  <pedro.lamarao@gmail.com>\n+\n+      * testsuite/31_date_time/headers/date_time/types_std.cc: New.\n+      * testsuite/31_date_time/headers/date_time/std_c++0x_neg.cc: Likewise.\n+      * testsuite/31_date_time/headers/date_time/functions_std.cc: Likewise.\n+      * testsuite/31_date_time/headers/date_time/synopsis.cc: Likewise.\n+      * testsuite/31_date_time/nanoseconds/requirements/traits.cc: Likewise.\n+      * testsuite/31_date_time/nanoseconds/requirements/duration.cc: Likewise.\n+      * testsuite/31_date_time/system_time/requirements: Likewise.\n+      * testsuite/31_date_time/system_time/requirements/traits.cc: Likewise. \t\n+\n+2008-03-16  Paolo Carlini  <pcarlini@suse.de>\n+\n+\t* config.h.in: Regenerate.\n+\n 2008-03-16  Ralf Wildenhues  <Ralf.Wildenhues@gmx.de>\n \n \t* aclocal.m4: Regenerate."}, {"sha": "39ce4a9305c121d04ee9bed7fe3d59eca8f4549a", "filename": "libstdc++-v3/config.h.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Fconfig.h.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Fconfig.h.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig.h.in?ref=5ae8cf8c41d66578dab190e910a8b1c951eb615a", "patch": "@@ -66,6 +66,9 @@\n /* Define if ECANCELED exists. */\n #undef HAVE_ECANCELED\n \n+/* Define if EIDRM exists. */\n+#undef HAVE_EIDRM\n+\n /* Define to 1 if you have the <endian.h> header file. */\n #undef HAVE_ENDIAN_H\n \n@@ -99,6 +102,9 @@\n /* Define if ETIME exists. */\n #undef HAVE_ETIME\n \n+/* Define if ETXTBSY exists. */\n+#undef HAVE_ETXTBSY\n+\n /* Define to 1 if you have the `expf' function. */\n #undef HAVE_EXPF\n "}, {"sha": "1d35bfbbd37dad9997315b7172efb8556b67d129", "filename": "libstdc++-v3/config/abi/pre/gnu.ver", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fconfig%2Fabi%2Fpre%2Fgnu.ver?ref=5ae8cf8c41d66578dab190e910a8b1c951eb615a", "patch": "@@ -60,7 +60,9 @@ GLIBCXX_3.4 {\n #     std::c[i-z]*;\n       std::c[i-s]*;\n       std::c[u-z]*;\n-      std::[d-g]*;\n+#     std::[d-g]*;\n+      std::[d-e]*;\n+      std::gslice*;\n       std::h[^a]*;\n       std::i[a-n]*;\n       std::ios_base::[A-Ha-z]*;\n@@ -95,7 +97,8 @@ GLIBCXX_3.4 {\n       std::locale::_[T-Za-z]*;\n #     std::[A-Zm-r]*;\n       std::[A-Zm]*;\n-      std::n[^u]*;\n+#     std::n[^u]*;\n+      std::n[^au]*;\n       std::nu[^m]*;\n       std::num[^e]*;\n       std::[p-r]*;\n@@ -804,6 +807,17 @@ GLIBCXX_3.4.11 {\n \n     _ZNKSt4hashISt10error_codeEclES0_;\n \n+    # date_time\n+    _ZSt15get_system_timev;\n+ \n+    _ZNSt11nanoseconds16seconds_per_tickE;\n+    _ZNSt11nanoseconds16ticks_per_secondE;\n+    _ZNSt11nanoseconds12is_subsecondE;\n+\n+    _ZNSt11system_time16seconds_per_tickE;\n+    _ZNSt11system_time16ticks_per_secondE;\n+    _ZNSt11system_time12is_subsecondE;\n+\n } GLIBCXX_3.4.10;\n \n # Symbols in the support library (libsupc++) have their own tag."}, {"sha": "68e8e35b3ded7e05df0c93038772a69464519069", "filename": "libstdc++-v3/include/Makefile.am", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Finclude%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.am?ref=5ae8cf8c41d66578dab190e910a8b1c951eb615a", "patch": "@@ -33,6 +33,7 @@ std_headers = \\\n \t${std_srcdir}/bitset \\\n \t${std_srcdir}/c++0x_warning.h \\\n \t${std_srcdir}/complex \\\n+\t${std_srcdir}/date_time \\\n \t${std_srcdir}/deque \\\n \t${std_srcdir}/fstream \\\n \t${std_srcdir}/functional \\"}, {"sha": "6d52f75866e02ca817f2f1e487cad21b594b53a5", "filename": "libstdc++-v3/include/Makefile.in", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Finclude%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2FMakefile.in?ref=5ae8cf8c41d66578dab190e910a8b1c951eb615a", "patch": "@@ -284,6 +284,7 @@ std_headers = \\\n \t${std_srcdir}/bitset \\\n \t${std_srcdir}/c++0x_warning.h \\\n \t${std_srcdir}/complex \\\n+\t${std_srcdir}/date_time \\\n \t${std_srcdir}/deque \\\n \t${std_srcdir}/fstream \\\n \t${std_srcdir}/functional \\"}, {"sha": "e4b611067346376b6905de8a02c84029b4005897", "filename": "libstdc++-v3/include/precompiled/stdc++.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fstdc%2B%2B.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fstdc%2B%2B.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fprecompiled%2Fstdc%2B%2B.h?ref=5ae8cf8c41d66578dab190e910a8b1c951eb615a", "patch": "@@ -98,6 +98,7 @@\n \n #ifdef __GXX_EXPERIMENTAL_CXX0X__\n #include <array>\n+#include <date_time>\n #include <random>\n #include <regex>\n #include <system_error>"}, {"sha": "7bd12aa1f609cde08ba0f7230d2d3135fce44d65", "filename": "libstdc++-v3/src/Makefile.am", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.am?ref=5ae8cf8c41d66578dab190e910a8b1c951eb615a", "patch": "@@ -141,6 +141,7 @@ sources = \\\n \tcompatibility.cc \\\n \tcomplex_io.cc \\\n \tctype.cc \\\n+\tdate_time.cc \\\n \tdebug.cc \\\n \tfunctexcept.cc \\\n \thash.cc \\\n@@ -242,6 +243,11 @@ hashtable_c++0x.lo: hashtable_c++0x.cc\n hashtable_c++0x.o: hashtable_c++0x.cc\n \t$(CXXCOMPILE) -std=gnu++0x -c $<\n \n+date_time.lo: date_time.cc\n+\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n+date_time.o: date_time.cc\n+\t$(CXXCOMPILE) -std=gnu++0x -c $<\n+\n if GLIBCXX_LDBL_COMPAT\n # Use special rules for compatibility-ldbl.cc compilation, as we need to\n # pass -mlong-double-64."}, {"sha": "b115d7ccc2eb23beeb95f3b0bc34ebfa09b370a0", "filename": "libstdc++-v3/src/Makefile.in", "status": "modified", "additions": 33, "deletions": 26, "changes": 59, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Fsrc%2FMakefile.in?ref=5ae8cf8c41d66578dab190e910a8b1c951eb615a", "patch": "@@ -72,20 +72,21 @@ toolexeclibLTLIBRARIES_INSTALL = $(INSTALL)\n LTLIBRARIES = $(toolexeclib_LTLIBRARIES)\n am__libstdc___la_SOURCES_DIST = bitmap_allocator.cc pool_allocator.cc \\\n \tmt_allocator.cc codecvt.cc compatibility.cc complex_io.cc \\\n-\tctype.cc debug.cc functexcept.cc hash.cc hash_c++0x.cc \\\n-\tglobals_io.cc hashtable.cc hashtable_c++0x.cc ios.cc \\\n-\tios_failure.cc ios_init.cc ios_locale.cc limits.cc list.cc \\\n-\tdebug_list.cc locale.cc locale_init.cc locale_facets.cc \\\n-\tlocalename.cc stdexcept.cc strstream.cc system_error.cc \\\n-\ttree.cc allocator-inst.cc concept-inst.cc fstream-inst.cc \\\n-\text-inst.cc ios-inst.cc iostream-inst.cc istream-inst.cc \\\n-\tistream.cc locale-inst.cc misc-inst.cc ostream-inst.cc \\\n-\tsstream-inst.cc streambuf-inst.cc streambuf.cc string-inst.cc \\\n-\tvalarray-inst.cc wlocale-inst.cc wstring-inst.cc atomicity.cc \\\n-\tcodecvt_members.cc collate_members.cc ctype_members.cc \\\n-\tmessages_members.cc monetary_members.cc numeric_members.cc \\\n-\ttime_members.cc basic_file.cc c++locale.cc \\\n-\tcompatibility-ldbl.cc parallel_list.cc parallel_settings.cc\n+\tctype.cc date_time.cc debug.cc functexcept.cc hash.cc \\\n+\thash_c++0x.cc globals_io.cc hashtable.cc hashtable_c++0x.cc \\\n+\tios.cc ios_failure.cc ios_init.cc ios_locale.cc limits.cc \\\n+\tlist.cc debug_list.cc locale.cc locale_init.cc \\\n+\tlocale_facets.cc localename.cc stdexcept.cc strstream.cc \\\n+\tsystem_error.cc tree.cc allocator-inst.cc concept-inst.cc \\\n+\tfstream-inst.cc ext-inst.cc ios-inst.cc iostream-inst.cc \\\n+\tistream-inst.cc istream.cc locale-inst.cc misc-inst.cc \\\n+\tostream-inst.cc sstream-inst.cc streambuf-inst.cc streambuf.cc \\\n+\tstring-inst.cc valarray-inst.cc wlocale-inst.cc \\\n+\twstring-inst.cc atomicity.cc codecvt_members.cc \\\n+\tcollate_members.cc ctype_members.cc messages_members.cc \\\n+\tmonetary_members.cc numeric_members.cc time_members.cc \\\n+\tbasic_file.cc c++locale.cc compatibility-ldbl.cc \\\n+\tparallel_list.cc parallel_settings.cc\n am__objects_1 = atomicity.lo codecvt_members.lo collate_members.lo \\\n \tctype_members.lo messages_members.lo monetary_members.lo \\\n \tnumeric_members.lo time_members.lo\n@@ -95,18 +96,18 @@ am__objects_1 = atomicity.lo codecvt_members.lo collate_members.lo \\\n am__objects_4 = basic_file.lo c++locale.lo $(am__objects_2) \\\n \t$(am__objects_3)\n am__objects_5 = bitmap_allocator.lo pool_allocator.lo mt_allocator.lo \\\n-\tcodecvt.lo compatibility.lo complex_io.lo ctype.lo debug.lo \\\n-\tfunctexcept.lo hash.lo hash_c++0x.lo globals_io.lo \\\n-\thashtable.lo hashtable_c++0x.lo ios.lo ios_failure.lo \\\n-\tios_init.lo ios_locale.lo limits.lo list.lo debug_list.lo \\\n-\tlocale.lo locale_init.lo locale_facets.lo localename.lo \\\n-\tstdexcept.lo strstream.lo system_error.lo tree.lo \\\n-\tallocator-inst.lo concept-inst.lo fstream-inst.lo ext-inst.lo \\\n-\tios-inst.lo iostream-inst.lo istream-inst.lo istream.lo \\\n-\tlocale-inst.lo misc-inst.lo ostream-inst.lo sstream-inst.lo \\\n-\tstreambuf-inst.lo streambuf.lo string-inst.lo valarray-inst.lo \\\n-\twlocale-inst.lo wstring-inst.lo $(am__objects_1) \\\n-\t$(am__objects_4)\n+\tcodecvt.lo compatibility.lo complex_io.lo ctype.lo \\\n+\tdate_time.lo debug.lo functexcept.lo hash.lo hash_c++0x.lo \\\n+\tglobals_io.lo hashtable.lo hashtable_c++0x.lo ios.lo \\\n+\tios_failure.lo ios_init.lo ios_locale.lo limits.lo list.lo \\\n+\tdebug_list.lo locale.lo locale_init.lo locale_facets.lo \\\n+\tlocalename.lo stdexcept.lo strstream.lo system_error.lo \\\n+\ttree.lo allocator-inst.lo concept-inst.lo fstream-inst.lo \\\n+\text-inst.lo ios-inst.lo iostream-inst.lo istream-inst.lo \\\n+\tistream.lo locale-inst.lo misc-inst.lo ostream-inst.lo \\\n+\tsstream-inst.lo streambuf-inst.lo streambuf.lo string-inst.lo \\\n+\tvalarray-inst.lo wlocale-inst.lo wstring-inst.lo \\\n+\t$(am__objects_1) $(am__objects_4)\n am_libstdc___la_OBJECTS = $(am__objects_5)\n libstdc___la_OBJECTS = $(am_libstdc___la_OBJECTS)\n DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)\n@@ -374,6 +375,7 @@ sources = \\\n \tcompatibility.cc \\\n \tcomplex_io.cc \\\n \tctype.cc \\\n+\tdate_time.cc \\\n \tdebug.cc \\\n \tfunctexcept.cc \\\n \thash.cc \\\n@@ -833,6 +835,11 @@ hashtable_c++0x.lo: hashtable_c++0x.cc\n hashtable_c++0x.o: hashtable_c++0x.cc\n \t$(CXXCOMPILE) -std=gnu++0x -c $<\n \n+date_time.lo: date_time.cc\n+\t$(LTCXXCOMPILE) -std=gnu++0x -c $<\n+date_time.o: date_time.cc\n+\t$(CXXCOMPILE) -std=gnu++0x -c $<\n+\n # Use special rules for compatibility-ldbl.cc compilation, as we need to\n # pass -mlong-double-64.\n @GLIBCXX_LDBL_COMPAT_TRUE@compatibility-ldbl.lo: compatibility-ldbl.cc"}, {"sha": "1bc1e6acd7afbfea1f62ad4a2e6c2eff7dc73e13", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++200x/all.cc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fall.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fall.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fall.cc?ref=5ae8cf8c41d66578dab190e910a8b1c951eb615a", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do compile }\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -94,6 +94,7 @@\n #include <array>\n #include <bitset>\n #include <complex>\n+#include <date_time>\n #include <deque>\n #include <exception>\n #include <fstream>"}, {"sha": "869fa02675c393963be50c1d44b1f88cd90e0141", "filename": "libstdc++-v3/testsuite/17_intro/headers/c++200x/all_multiple_inclusion.cc", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fall_multiple_inclusion.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fall_multiple_inclusion.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F17_intro%2Fheaders%2Fc%2B%2B200x%2Fall_multiple_inclusion.cc?ref=5ae8cf8c41d66578dab190e910a8b1c951eb615a", "patch": "@@ -1,7 +1,7 @@\n // { dg-options \"-std=gnu++0x\" }\n // { dg-do compile }\n \n-// Copyright (C) 2007 Free Software Foundation, Inc.\n+// Copyright (C) 2007, 2008 Free Software Foundation, Inc.\n //\n // This file is part of the GNU ISO C++ Library.  This library is free\n // software; you can redistribute it and/or modify it under the\n@@ -94,6 +94,7 @@\n #include <array>\n #include <bitset>\n #include <complex>\n+#include <date_time>\n #include <deque>\n #include <exception>\n #include <fstream>\n@@ -204,6 +205,7 @@\n #include <array>\n #include <bitset>\n #include <complex>\n+#include <date_time>\n #include <deque>\n #include <exception>\n #include <fstream>"}, {"sha": "49b4ecac83b82342bd8231f76ddf1798d695e5ad", "filename": "libstdc++-v3/testsuite/31_date_time/headers/date_time/functions_std.cc", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Ffunctions_std.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Ffunctions_std.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Ffunctions_std.cc?ref=5ae8cf8c41d66578dab190e910a8b1c951eb615a", "patch": "@@ -0,0 +1,27 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <date_time>\n+\n+namespace gnu\n+{\n+  using std::get_system_time;\n+}"}, {"sha": "9b98b628c77d4ebd3647f2380a9f4060607bdcef", "filename": "libstdc++-v3/testsuite/31_date_time/headers/date_time/std_c++0x_neg.cc", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Fstd_c%2B%2B0x_neg.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Fstd_c%2B%2B0x_neg.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Fstd_c%2B%2B0x_neg.cc?ref=5ae8cf8c41d66578dab190e910a8b1c951eb615a", "patch": "@@ -0,0 +1,24 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++98\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <date_time>  // { dg-excess-errors \"In file included from\" }\n+\n+// { dg-error \"upcoming ISO\" \"\" { target *-*-* } 36 } "}, {"sha": "e86c9b784bf021e86db1e214536c9b38b069b62d", "filename": "libstdc++-v3/testsuite/31_date_time/headers/date_time/synopsis.cc", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Fsynopsis.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Fsynopsis.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Fsynopsis.cc?ref=5ae8cf8c41d66578dab190e910a8b1c951eb615a", "patch": "@@ -0,0 +1,70 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <date_time>\n+\n+namespace std {\n+  // duration types\n+  class nanoseconds;\n+  class microseconds;\n+  class milliseconds;\n+  class seconds;\n+  class minutes;\n+  class hours;\n+\n+  // timepoint type\n+  class system_time;\n+\n+  // non-member functions\n+  system_time get_system_time();\n+\n+  template<typename Duration>\n+    system_time operator+(const Duration& td, const system_time& rhs);\n+\n+  template <class LhsDuration, class RhsDuration>\n+    bool operator==(const LhsDuration& lhs, const RhsDuration& rhs);\n+  template <class LhsDuration, class RhsDuration>\n+    bool operator!=(const LhsDuration& lhs, const RhsDuration& rhs);\n+\n+  template <class LhsDuration, class RhsDuration>\n+    bool operator< (const LhsDuration& lhs, const RhsDuration& rhs);\n+  template <class LhsDuration, class RhsDuration>\n+    bool operator<=(const LhsDuration& lhs, const RhsDuration& rhs);\n+  template <class LhsDuration, class RhsDuration>\n+    bool operator> (const LhsDuration& lhs, const RhsDuration& rhs);\n+  template <class LhsDuration, class RhsDuration>\n+    bool operator>=(const LhsDuration& lhs, const RhsDuration& rhs);\n+\n+/*\n+  template <class LhsDuration, class RhsDuration>\n+    FinestDuration operator+(const LhsDuration& lhs, const RhsDuration& rhs);\n+  template <class LhsDuration, class RhsDuration>\n+    FinestDuration operator-(const LhsDuration& lhs, const RhsDuration& rhs);\n+*/\n+  \n+  template <class Duration>\n+    Duration operator*(Duration lhs, long rhs);\n+  template <class Duration>\n+    Duration operator*(long lhs, Duration rhs);\n+\n+  template <class Duration>\n+    Duration operator/(Duration lhs, long rhs);\n+}"}, {"sha": "f8fc5953c5b929a397badbb3e4ff2e0cdec80499", "filename": "libstdc++-v3/testsuite/31_date_time/headers/date_time/types_std.cc", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Ftypes_std.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Ftypes_std.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fheaders%2Fdate_time%2Ftypes_std.cc?ref=5ae8cf8c41d66578dab190e910a8b1c951eb615a", "patch": "@@ -0,0 +1,33 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <date_time>\n+\n+namespace gnu\n+{\n+  typedef std::nanoseconds t1;\n+  typedef std::microseconds t2;\n+  typedef std::milliseconds t3;\n+  typedef std::seconds t4;\n+  typedef std::minutes t5;\n+  typedef std::hours t6;\n+  typedef std::system_time t7;\n+}"}, {"sha": "ca6e2cf374aafe5cd4dde75ca49c5ac51ac97261", "filename": "libstdc++-v3/testsuite/31_date_time/nanoseconds/requirements/duration.cc", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fnanoseconds%2Frequirements%2Fduration.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fnanoseconds%2Frequirements%2Fduration.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fnanoseconds%2Frequirements%2Fduration.cc?ref=5ae8cf8c41d66578dab190e910a8b1c951eb615a", "patch": "@@ -0,0 +1,50 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <date_time>\n+\n+namespace gnu\n+{\n+  bool\n+  test_nanoseconds_is_duration()\n+  {\n+    typedef std::nanoseconds D;\n+    D d;\n+    D e(d);\n+    d == e;\n+    d < e;\n+    d = e;\n+\n+    typedef D::tick_type tick_type;\n+    tick_type t1 = D::ticks_per_second;\n+    tick_type t2 = D::seconds_per_tick;\n+    bool b1 = D::is_subsecond;\n+    tick_type t3 = d.count();\n+    -d;\n+\n+    d += e;\n+    d -= e;\n+    d *= static_cast<long>(1);\n+    d /= static_cast<long>(1);\n+\n+    return b1 || t1 || t2 || t3;\n+  }\n+}"}, {"sha": "53f36180ea4af74808fafc7e397c508b9cb27bb8", "filename": "libstdc++-v3/testsuite/31_date_time/nanoseconds/requirements/traits.cc", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fnanoseconds%2Frequirements%2Ftraits.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fnanoseconds%2Frequirements%2Ftraits.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fnanoseconds%2Frequirements%2Ftraits.cc?ref=5ae8cf8c41d66578dab190e910a8b1c951eb615a", "patch": "@@ -0,0 +1,33 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <date_time>\n+\n+namespace gnu\n+{\n+  void\n+  test_nanoseconds_traits()\n+  {\n+    static_assert(std::nanoseconds::ticks_per_second == 1000L * 1000 * 1000, \"FIXME\");\n+    static_assert(std::nanoseconds::seconds_per_tick == 0, \"FIXME\");\n+    static_assert(std::nanoseconds::is_subsecond == true, \"FIXME\");\n+  }\n+}"}, {"sha": "0310333a6203d52766f6230320ddb7c96f4d1264", "filename": "libstdc++-v3/testsuite/31_date_time/system_time/requirements/traits.cc", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fsystem_time%2Frequirements%2Ftraits.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ae8cf8c41d66578dab190e910a8b1c951eb615a/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fsystem_time%2Frequirements%2Ftraits.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F31_date_time%2Fsystem_time%2Frequirements%2Ftraits.cc?ref=5ae8cf8c41d66578dab190e910a8b1c951eb615a", "patch": "@@ -0,0 +1,33 @@\n+// { dg-do compile }\n+// { dg-options \"-std=gnu++0x\" }\n+\n+// Copyright (C) 2008 Free Software Foundation, Inc.\n+//\n+// This file is part of the GNU ISO C++ Library.  This library is free\n+// software; you can redistribute it and/or modify it under the\n+// terms of the GNU General Public License as published by the\n+// Free Software Foundation; either version 2, or (at your option)\n+// any later version.\n+\n+// This library is distributed in the hope that it will be useful,\n+// but WITHOUT ANY WARRANTY; without even the implied warranty of\n+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+// GNU General Public License for more details.\n+\n+// You should have received a copy of the GNU General Public License along\n+// with this library; see the file COPYING.  If not, write to the Free\n+// Software Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301,\n+// USA.\n+\n+#include <date_time>\n+\n+namespace gnu\n+{\n+  void\n+  test_system_time_traits()\n+  {\n+    static_assert(std::nanoseconds::ticks_per_second == std::nanoseconds::ticks_per_second, \"FIXME\");\n+    static_assert(std::system_time::seconds_per_tick == 0, \"FIXME\");\n+    static_assert(std::system_time::is_subsecond == true, \"FIXME\");\n+  }\n+}"}]}