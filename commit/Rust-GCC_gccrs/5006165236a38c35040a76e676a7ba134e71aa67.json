{"sha": "5006165236a38c35040a76e676a7ba134e71aa67", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAwNjE2NTIzNmEzOGMzNTA0MGE3NmU2NzZhN2JhMTM0ZTcxYWE2Nw==", "commit": {"author": {"name": "Richard Earnshaw", "email": "rearnsha@arm.com", "date": "2017-07-04T14:49:38Z"}, "committer": {"name": "Richard Earnshaw", "email": "rearnsha@gcc.gnu.org", "date": "2017-07-04T14:49:38Z"}, "message": "[arm] Move some generated files out of the source tree\n\nWhen I originally started work on the new options framework for ARM\nI'd worked on the assumption that AWK might not be available on every\nbuild machine (only on developer's machines).  However, looking again\nI notice that all the options framework relies on it being present for\nevery build.  This means that some of the generated files that come\nfrom running parsecpu.awk do not need to be kept under revision\ncontrol.\n\nUnfortunately, it's not _all_ generated files.  The build\ninfrastructure assumes that all .md fragments are in the source tree\nand similarly that all .opt fragments are there as well.\n\nStill, eliminating the very big .h files is a step forward as they are\nvery regular in structure and diff/patch/merge tools can sometimes\nmake mistakes when resolving conflicts.\n\nSo this patch removes the generated .h files from the source tree and\ntweaks the make rules accordingly.  I've also changed the build rules\nto use the stamp technique to eliminate some false dependencies in a\nrebuild.\n\nTop-level:\n\n* contrib/gcc_update (files_and_dependencies): Remove stamp rules for\narm-specific auto-generated header files.\n\ngcc:\n* common/config/arm/arm-common.c: Adjust include path for\narm-cpu-cdata.h\n* t-arm (TM_H): Adjust path for arm-cpu.h.\n(arm-cpu.h): Create in build directory.  Adjust dependency rules.\n(arm-cpu-data.h): Likewise.\n(arm-cpu-cdata.h): Likewise.\n* config/arm/arm-cpu.h: Delete.\n* config/arm/arm-cpu-cdata.h: Delete.\n* config/arm/arm-cpu-data.h: Delete.\n\nFrom-SVN: r249971", "tree": {"sha": "ef2eafd4c6b6340d98e484b4de578bf34fc72b1f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef2eafd4c6b6340d98e484b4de578bf34fc72b1f"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5006165236a38c35040a76e676a7ba134e71aa67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5006165236a38c35040a76e676a7ba134e71aa67", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5006165236a38c35040a76e676a7ba134e71aa67", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5006165236a38c35040a76e676a7ba134e71aa67/comments", "author": null, "committer": null, "parents": [{"sha": "1d79dcb813b30ba64c111c2157e06deeac5fb691", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1d79dcb813b30ba64c111c2157e06deeac5fb691", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1d79dcb813b30ba64c111c2157e06deeac5fb691"}], "stats": {"total": 3522, "additions": 38, "deletions": 3484}, "files": [{"sha": "d6e47e880f45203a6a13ce387ef8b1a2f97dae29", "filename": "ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5006165236a38c35040a76e676a7ba134e71aa67/ChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5006165236a38c35040a76e676a7ba134e71aa67/ChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/ChangeLog?ref=5006165236a38c35040a76e676a7ba134e71aa67", "patch": "@@ -1,3 +1,8 @@\n+2017-07-04  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* contrib/gcc_update (files_and_dependencies): Remove stamp rules for\n+\tarm-specific auto-generated header files.\n+\n 2017-07-03  Nathan Sidwell  <nathan@acm.org>\n \n \t* configure.ac: Set srcdir when sourcing config-lang.in fragments."}, {"sha": "082462fd4229cbebc089be325f065407e518e4c0", "filename": "contrib/gcc_update", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5006165236a38c35040a76e676a7ba134e71aa67/contrib%2Fgcc_update", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5006165236a38c35040a76e676a7ba134e71aa67/contrib%2Fgcc_update", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/contrib%2Fgcc_update?ref=5006165236a38c35040a76e676a7ba134e71aa67", "patch": "@@ -82,9 +82,6 @@ gcc/fixinc/fixincl.x: gcc/fixinc/fixincl.tpl gcc/fixinc/inclhack.def\n gcc/config/aarch64/aarch64-tune.md: gcc/config/aarch64/aarch64-cores.def gcc/config/aarch64/gentune.sh\n gcc/config/arm/arm-tune.md: gcc/config/arm/arm-cpus.in gcc/config/arm/parsecpu.awk\n gcc/config/arm/arm-tables.opt: gcc/config/arm/arm-cpus.in gcc/config/arm/parsecpu.awk\n-gcc/config/arm/arm-cpu.h: gcc/config/arm/arm-cpus.in gcc/config/arm/parsecpu.awk\n-gcc/config/arm/arm-cpu-data.h: gcc/config/arm/arm-cpus.in gcc/config/arm/parsecpu.awk\n-gcc/config/arm/arm-cpu-cdata.h: gcc/config/arm/arm-cpus.in gcc/config/arm/parsecpu.awk\n gcc/config/avr/avr-tables.opt: gcc/config/avr/avr-mcus.def gcc/config/avr/genopt.sh\n gcc/config/avr/t-multilib: gcc/config/avr/avr-mcus.def gcc/config/avr/genmultilib.awk\n gcc/config/c6x/c6x-tables.opt: gcc/config/c6x/c6x-isas.def gcc/config/c6x/genopt.sh"}, {"sha": "ccb1bd476057ecbda58941758ddaa66ed504f2d5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5006165236a38c35040a76e676a7ba134e71aa67/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5006165236a38c35040a76e676a7ba134e71aa67/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5006165236a38c35040a76e676a7ba134e71aa67", "patch": "@@ -1,3 +1,15 @@\n+2017-07-04  Richard Earnshaw  <rearnsha@arm.com>\n+\n+\t* common/config/arm/arm-common.c: Adjust include path for\n+\tarm-cpu-cdata.h\n+\t* config/arm/t-arm (TM_H): Adjust path for arm-cpu.h.\n+\t(arm-cpu.h): Create in build directory.  Adjust dependency rules.\n+\t(arm-cpu-data.h): Likewise.\n+\t(arm-cpu-cdata.h): Likewise.\n+\t* config/arm/arm-cpu.h: Delete.\n+\t* config/arm/arm-cpu-cdata.h: Delete.\n+\t* config/arm/arm-cpu-data.h: Delete.\n+\n 2017-07-04  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/arm/arm-cpus.in (cortex-a55): New."}, {"sha": "38bd3a725b1442eaff1742cb3464806b1d58fa1b", "filename": "gcc/common/config/arm/arm-common.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5006165236a38c35040a76e676a7ba134e71aa67/gcc%2Fcommon%2Fconfig%2Farm%2Farm-common.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5006165236a38c35040a76e676a7ba134e71aa67/gcc%2Fcommon%2Fconfig%2Farm%2Farm-common.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcommon%2Fconfig%2Farm%2Farm-common.c?ref=5006165236a38c35040a76e676a7ba134e71aa67", "patch": "@@ -144,7 +144,7 @@ arm_rewrite_march (int argc, const char **argv)\n   return arm_rewrite_selected_arch (argv[argc - 1]);\n }\n \n-#include \"config/arm/arm-cpu-cdata.h\"\n+#include \"arm-cpu-cdata.h\"\n \n /* Scan over a raw feature array BITS checking for BIT being present.\n    This is slower than the normal bitmask checks, but we would spend longer"}, {"sha": "acd36d44a2cc4c8851cec8c48807ca0d0b0e13d5", "filename": "gcc/config/arm/arm-cpu-cdata.h", "status": "removed", "additions": 0, "deletions": 2684, "changes": 2684, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Farm-cpu-cdata.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Farm-cpu-cdata.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpu-cdata.h?ref=1d79dcb813b30ba64c111c2157e06deeac5fb691", "patch": "@@ -1,2684 +0,0 @@\n-/* -*- buffer-read-only: t -*-\n-   Generated automatically by parsecpu.awk from arm-cpus.in.\n-   Do not edit.\n-\n-   Copyright (C) 2011-2017 Free Software Foundation, Inc.\n-\n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as\n-   published by the Free Software Foundation; either version 3,\n-   or (at your option) any later version.\n-\n-   GCC is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public\n-   License along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-static const cpu_arch_extension cpu_opttab_arm9e[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_arm946es[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_arm966es[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_arm968es[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_arm10e[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_arm1020e[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_arm1022e[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_arm926ejs[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_arm1026ejs[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_genericv7a[] = {\n-  {\n-    \"vfpv3-d16\", false, false,\n-    { ISA_VFPv3,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"vfpv3\", false, false,\n-    { ISA_VFPv3,ISA_FP_D32, isa_nobit }\n-  },\n-  {\n-    \"vfpv3-d16-fp16\", false, false,\n-    { ISA_VFPv3,ISA_FP_DBL,isa_bit_fp16conv, isa_nobit }\n-  },\n-  {\n-    \"vfpv3-fp16\", false, false,\n-    { ISA_VFPv3,ISA_FP_D32,isa_bit_fp16conv, isa_nobit }\n-  },\n-  {\n-    \"vfpv4-d16\", false, false,\n-    { ISA_VFPv4,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"vfpv4\", false, false,\n-    { ISA_VFPv4,ISA_FP_D32, isa_nobit }\n-  },\n-  {\n-    \"simd\", false, false,\n-    { ISA_VFPv3,ISA_NEON, isa_nobit }\n-  },\n-  {\n-    \"neon-fp16\", false, false,\n-    { ISA_VFPv3,ISA_NEON,isa_bit_fp16conv, isa_nobit }\n-  },\n-  {\n-    \"neon-vfpv4\", false, false,\n-    { ISA_VFPv4,ISA_NEON, isa_nobit }\n-  },\n-  {\n-    \"nosimd\", true, false,\n-    { ISA_ALL_SIMD, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  {\n-    \"neon\", false, true, \n-    { ISA_VFPv3,ISA_NEON, isa_nobit }\n-  },\n-  {\n-    \"neon-vfpv3\", false, true, \n-    { ISA_VFPv3,ISA_NEON, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa5[] = {\n-  {\n-    \"nosimd\", true, false,\n-    { ISA_ALL_SIMD, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa7[] = {\n-  {\n-    \"nosimd\", true, false,\n-    { ISA_ALL_SIMD, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa8[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa9[] = {\n-  {\n-    \"nosimd\", true, false,\n-    { ISA_ALL_SIMD, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa12[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa15[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa17[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexr5[] = {\n-  {\n-    \"nofp.dp\", true, false,\n-    { ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexr7[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexr8[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexm7[] = {\n-  {\n-    \"nofp.dp\", true, false,\n-    { ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexm4[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa15cortexa7[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa17cortexa7[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa32[] = {\n-  {\n-    \"crypto\", false, false,\n-    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa35[] = {\n-  {\n-    \"crypto\", false, false,\n-    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa53[] = {\n-  {\n-    \"crypto\", false, false,\n-    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa57[] = {\n-  {\n-    \"crypto\", false, false,\n-    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa72[] = {\n-  {\n-    \"crypto\", false, false,\n-    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa73[] = {\n-  {\n-    \"crypto\", false, false,\n-    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_exynosm1[] = {\n-  {\n-    \"crypto\", false, false,\n-    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_xgene1[] = {\n-  {\n-    \"crypto\", false, false,\n-    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa57cortexa53[] = {\n-  {\n-    \"crypto\", false, false,\n-    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa72cortexa53[] = {\n-  {\n-    \"crypto\", false, false,\n-    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa73cortexa35[] = {\n-  {\n-    \"crypto\", false, false,\n-    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa73cortexa53[] = {\n-  {\n-    \"crypto\", false, false,\n-    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa55[] = {\n-  {\n-    \"crypto\", false, false,\n-    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa75[] = {\n-  {\n-    \"crypto\", false, false,\n-    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexa75cortexa55[] = {\n-  {\n-    \"crypto\", false, false,\n-    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const cpu_arch_extension cpu_opttab_cortexm33[] = {\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-const cpu_option all_cores[] =\n-{\n-  {\n-    {\n-      \"arm2\",\n-      NULL,\n-      {\n-        ISA_ARMv2,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv2\n-  },\n-  {\n-    {\n-      \"arm250\",\n-      NULL,\n-      {\n-        ISA_ARMv2,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv2\n-  },\n-  {\n-    {\n-      \"arm3\",\n-      NULL,\n-      {\n-        ISA_ARMv2,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv2\n-  },\n-  {\n-    {\n-      \"arm6\",\n-      NULL,\n-      {\n-        ISA_ARMv3,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3\n-  },\n-  {\n-    {\n-      \"arm60\",\n-      NULL,\n-      {\n-        ISA_ARMv3,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3\n-  },\n-  {\n-    {\n-      \"arm600\",\n-      NULL,\n-      {\n-        ISA_ARMv3,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3\n-  },\n-  {\n-    {\n-      \"arm610\",\n-      NULL,\n-      {\n-        ISA_ARMv3,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3\n-  },\n-  {\n-    {\n-      \"arm620\",\n-      NULL,\n-      {\n-        ISA_ARMv3,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3\n-  },\n-  {\n-    {\n-      \"arm7\",\n-      NULL,\n-      {\n-        ISA_ARMv3,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3\n-  },\n-  {\n-    {\n-      \"arm7d\",\n-      NULL,\n-      {\n-        ISA_ARMv3,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3\n-  },\n-  {\n-    {\n-      \"arm7di\",\n-      NULL,\n-      {\n-        ISA_ARMv3,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3\n-  },\n-  {\n-    {\n-      \"arm70\",\n-      NULL,\n-      {\n-        ISA_ARMv3,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3\n-  },\n-  {\n-    {\n-      \"arm700\",\n-      NULL,\n-      {\n-        ISA_ARMv3,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3\n-  },\n-  {\n-    {\n-      \"arm700i\",\n-      NULL,\n-      {\n-        ISA_ARMv3,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3\n-  },\n-  {\n-    {\n-      \"arm710\",\n-      NULL,\n-      {\n-        ISA_ARMv3,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3\n-  },\n-  {\n-    {\n-      \"arm720\",\n-      NULL,\n-      {\n-        ISA_ARMv3,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3\n-  },\n-  {\n-    {\n-      \"arm710c\",\n-      NULL,\n-      {\n-        ISA_ARMv3,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3\n-  },\n-  {\n-    {\n-      \"arm7100\",\n-      NULL,\n-      {\n-        ISA_ARMv3,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3\n-  },\n-  {\n-    {\n-      \"arm7500\",\n-      NULL,\n-      {\n-        ISA_ARMv3,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3\n-  },\n-  {\n-    {\n-      \"arm7500fe\",\n-      NULL,\n-      {\n-        ISA_ARMv3,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3\n-  },\n-  {\n-    {\n-      \"arm7m\",\n-      NULL,\n-      {\n-        ISA_ARMv3m,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3m\n-  },\n-  {\n-    {\n-      \"arm7dm\",\n-      NULL,\n-      {\n-        ISA_ARMv3m,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3m\n-  },\n-  {\n-    {\n-      \"arm7dmi\",\n-      NULL,\n-      {\n-        ISA_ARMv3m,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv3m\n-  },\n-  {\n-    {\n-      \"arm8\",\n-      NULL,\n-      {\n-        ISA_ARMv4,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4\n-  },\n-  {\n-    {\n-      \"arm810\",\n-      NULL,\n-      {\n-        ISA_ARMv4,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4\n-  },\n-  {\n-    {\n-      \"strongarm\",\n-      NULL,\n-      {\n-        ISA_ARMv4,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4\n-  },\n-  {\n-    {\n-      \"strongarm110\",\n-      NULL,\n-      {\n-        ISA_ARMv4,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4\n-  },\n-  {\n-    {\n-      \"strongarm1100\",\n-      NULL,\n-      {\n-        ISA_ARMv4,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4\n-  },\n-  {\n-    {\n-      \"strongarm1110\",\n-      NULL,\n-      {\n-        ISA_ARMv4,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4\n-  },\n-  {\n-    {\n-      \"fa526\",\n-      NULL,\n-      {\n-        ISA_ARMv4,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4\n-  },\n-  {\n-    {\n-      \"fa626\",\n-      NULL,\n-      {\n-        ISA_ARMv4,isa_bit_mode26,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4\n-  },\n-  {\n-    {\n-      \"arm7tdmi\",\n-      NULL,\n-      {\n-        ISA_ARMv4t,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4t\n-  },\n-  {\n-    {\n-      \"arm7tdmi-s\",\n-      NULL,\n-      {\n-        ISA_ARMv4t,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4t\n-  },\n-  {\n-    {\n-      \"arm710t\",\n-      NULL,\n-      {\n-        ISA_ARMv4t,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4t\n-  },\n-  {\n-    {\n-      \"arm720t\",\n-      NULL,\n-      {\n-        ISA_ARMv4t,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4t\n-  },\n-  {\n-    {\n-      \"arm740t\",\n-      NULL,\n-      {\n-        ISA_ARMv4t,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4t\n-  },\n-  {\n-    {\n-      \"arm9\",\n-      NULL,\n-      {\n-        ISA_ARMv4t,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4t\n-  },\n-  {\n-    {\n-      \"arm9tdmi\",\n-      NULL,\n-      {\n-        ISA_ARMv4t,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4t\n-  },\n-  {\n-    {\n-      \"arm920\",\n-      NULL,\n-      {\n-        ISA_ARMv4t,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4t\n-  },\n-  {\n-    {\n-      \"arm920t\",\n-      NULL,\n-      {\n-        ISA_ARMv4t,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4t\n-  },\n-  {\n-    {\n-      \"arm922t\",\n-      NULL,\n-      {\n-        ISA_ARMv4t,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4t\n-  },\n-  {\n-    {\n-      \"arm940t\",\n-      NULL,\n-      {\n-        ISA_ARMv4t,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4t\n-  },\n-  {\n-    {\n-      \"ep9312\",\n-      NULL,\n-      {\n-        ISA_ARMv4t,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv4t\n-  },\n-  {\n-    {\n-      \"arm10tdmi\",\n-      NULL,\n-      {\n-        ISA_ARMv5t,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv5t\n-  },\n-  {\n-    {\n-      \"arm1020t\",\n-      NULL,\n-      {\n-        ISA_ARMv5t,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv5t\n-  },\n-  {\n-    {\n-      \"arm9e\",\n-      cpu_opttab_arm9e,\n-      {\n-        ISA_ARMv5te,\n-        ISA_VFPv2,ISA_FP_DBL,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv5te\n-  },\n-  {\n-    {\n-      \"arm946e-s\",\n-      cpu_opttab_arm946es,\n-      {\n-        ISA_ARMv5te,\n-        ISA_VFPv2,ISA_FP_DBL,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv5te\n-  },\n-  {\n-    {\n-      \"arm966e-s\",\n-      cpu_opttab_arm966es,\n-      {\n-        ISA_ARMv5te,\n-        ISA_VFPv2,ISA_FP_DBL,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv5te\n-  },\n-  {\n-    {\n-      \"arm968e-s\",\n-      cpu_opttab_arm968es,\n-      {\n-        ISA_ARMv5te,\n-        ISA_VFPv2,ISA_FP_DBL,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv5te\n-  },\n-  {\n-    {\n-      \"arm10e\",\n-      cpu_opttab_arm10e,\n-      {\n-        ISA_ARMv5te,\n-        ISA_VFPv2,ISA_FP_DBL,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv5te\n-  },\n-  {\n-    {\n-      \"arm1020e\",\n-      cpu_opttab_arm1020e,\n-      {\n-        ISA_ARMv5te,\n-        ISA_VFPv2,ISA_FP_DBL,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv5te\n-  },\n-  {\n-    {\n-      \"arm1022e\",\n-      cpu_opttab_arm1022e,\n-      {\n-        ISA_ARMv5te,\n-        ISA_VFPv2,ISA_FP_DBL,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv5te\n-  },\n-  {\n-    {\n-      \"xscale\",\n-      NULL,\n-      {\n-        ISA_ARMv5te,\n-        isa_bit_xscale,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv5te\n-  },\n-  {\n-    {\n-      \"iwmmxt\",\n-      NULL,\n-      {\n-        ISA_ARMv5te,isa_bit_xscale,isa_bit_iwmmxt,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_iwmmxt\n-  },\n-  {\n-    {\n-      \"iwmmxt2\",\n-      NULL,\n-      {\n-        ISA_ARMv5te,isa_bit_xscale,isa_bit_iwmmxt,isa_bit_iwmmxt2,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_iwmmxt2\n-  },\n-  {\n-    {\n-      \"fa606te\",\n-      NULL,\n-      {\n-        ISA_ARMv5te,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv5te\n-  },\n-  {\n-    {\n-      \"fa626te\",\n-      NULL,\n-      {\n-        ISA_ARMv5te,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv5te\n-  },\n-  {\n-    {\n-      \"fmp626\",\n-      NULL,\n-      {\n-        ISA_ARMv5te,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv5te\n-  },\n-  {\n-    {\n-      \"fa726te\",\n-      NULL,\n-      {\n-        ISA_ARMv5te,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv5te\n-  },\n-  {\n-    {\n-      \"arm926ej-s\",\n-      cpu_opttab_arm926ejs,\n-      {\n-        ISA_ARMv5tej,\n-        ISA_VFPv2,ISA_FP_DBL,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv5tej\n-  },\n-  {\n-    {\n-      \"arm1026ej-s\",\n-      cpu_opttab_arm1026ejs,\n-      {\n-        ISA_ARMv5tej,\n-        ISA_VFPv2,ISA_FP_DBL,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv5tej\n-  },\n-  {\n-    {\n-      \"arm1136j-s\",\n-      NULL,\n-      {\n-        ISA_ARMv6j,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv6j\n-  },\n-  {\n-    {\n-      \"arm1136jf-s\",\n-      NULL,\n-      {\n-        ISA_ARMv6j,\n-        ISA_VFPv2,ISA_FP_DBL,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv6j\n-  },\n-  {\n-    {\n-      \"arm1176jz-s\",\n-      NULL,\n-      {\n-        ISA_ARMv6kz,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv6kz\n-  },\n-  {\n-    {\n-      \"arm1176jzf-s\",\n-      NULL,\n-      {\n-        ISA_ARMv6kz,\n-        ISA_VFPv2,ISA_FP_DBL,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv6kz\n-  },\n-  {\n-    {\n-      \"mpcorenovfp\",\n-      NULL,\n-      {\n-        ISA_ARMv6k,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv6k\n-  },\n-  {\n-    {\n-      \"mpcore\",\n-      NULL,\n-      {\n-        ISA_ARMv6k,\n-        ISA_VFPv2,ISA_FP_DBL,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv6k\n-  },\n-  {\n-    {\n-      \"arm1156t2-s\",\n-      NULL,\n-      {\n-        ISA_ARMv6t2,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv6t2\n-  },\n-  {\n-    {\n-      \"arm1156t2f-s\",\n-      NULL,\n-      {\n-        ISA_ARMv6t2,\n-        ISA_VFPv2,ISA_FP_DBL,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv6t2\n-  },\n-  {\n-    {\n-      \"cortex-m1\",\n-      NULL,\n-      {\n-        ISA_ARMv6m,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv6_m\n-  },\n-  {\n-    {\n-      \"cortex-m0\",\n-      NULL,\n-      {\n-        ISA_ARMv6m,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv6_m\n-  },\n-  {\n-    {\n-      \"cortex-m0plus\",\n-      NULL,\n-      {\n-        ISA_ARMv6m,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv6_m\n-  },\n-  {\n-    {\n-      \"cortex-m1.small-multiply\",\n-      NULL,\n-      {\n-        ISA_ARMv6m,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv6_m\n-  },\n-  {\n-    {\n-      \"cortex-m0.small-multiply\",\n-      NULL,\n-      {\n-        ISA_ARMv6m,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv6_m\n-  },\n-  {\n-    {\n-      \"cortex-m0plus.small-multiply\",\n-      NULL,\n-      {\n-        ISA_ARMv6m,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv6_m\n-  },\n-  {\n-    {\n-      \"generic-armv7-a\",\n-      cpu_opttab_genericv7a,\n-      {\n-        ISA_ARMv7a,\n-        ISA_VFPv3,ISA_FP_DBL,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7_a\n-  },\n-  {\n-    {\n-      \"cortex-a5\",\n-      cpu_opttab_cortexa5,\n-      {\n-        ISA_ARMv7a,\n-        ISA_VFPv3,ISA_NEON,isa_bit_fp16conv,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7_a\n-  },\n-  {\n-    {\n-      \"cortex-a7\",\n-      cpu_opttab_cortexa7,\n-      {\n-        ISA_ARMv7ve,\n-        ISA_VFPv4,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7ve\n-  },\n-  {\n-    {\n-      \"cortex-a8\",\n-      cpu_opttab_cortexa8,\n-      {\n-        ISA_ARMv7a,\n-        ISA_VFPv3,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7_a\n-  },\n-  {\n-    {\n-      \"cortex-a9\",\n-      cpu_opttab_cortexa9,\n-      {\n-        ISA_ARMv7a,\n-        ISA_VFPv3,ISA_NEON,isa_bit_fp16conv,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7_a\n-  },\n-  {\n-    {\n-      \"cortex-a12\",\n-      cpu_opttab_cortexa12,\n-      {\n-        ISA_ARMv7ve,\n-        ISA_VFPv4,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7ve\n-  },\n-  {\n-    {\n-      \"cortex-a15\",\n-      cpu_opttab_cortexa15,\n-      {\n-        ISA_ARMv7ve,\n-        ISA_VFPv4,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7ve\n-  },\n-  {\n-    {\n-      \"cortex-a17\",\n-      cpu_opttab_cortexa17,\n-      {\n-        ISA_ARMv7ve,\n-        ISA_VFPv4,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7ve\n-  },\n-  {\n-    {\n-      \"cortex-r4\",\n-      NULL,\n-      {\n-        ISA_ARMv7r,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7_r\n-  },\n-  {\n-    {\n-      \"cortex-r4f\",\n-      NULL,\n-      {\n-        ISA_ARMv7r,\n-        ISA_VFPv3,ISA_FP_DBL,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7_r\n-  },\n-  {\n-    {\n-      \"cortex-r5\",\n-      cpu_opttab_cortexr5,\n-      {\n-        ISA_ARMv7r,\n-        isa_bit_adiv,\n-        ISA_VFPv3,ISA_FP_DBL,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7_r\n-  },\n-  {\n-    {\n-      \"cortex-r7\",\n-      cpu_opttab_cortexr7,\n-      {\n-        ISA_ARMv7r,\n-        isa_bit_adiv,\n-        ISA_VFPv3,ISA_FP_DBL,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7_r\n-  },\n-  {\n-    {\n-      \"cortex-r8\",\n-      cpu_opttab_cortexr8,\n-      {\n-        ISA_ARMv7r,\n-        isa_bit_adiv,\n-        ISA_VFPv3,ISA_FP_DBL,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7_r\n-  },\n-  {\n-    {\n-      \"cortex-m7\",\n-      cpu_opttab_cortexm7,\n-      {\n-        ISA_ARMv7em,\n-        ISA_FPv5,ISA_FP_DBL,\n-        isa_quirk_no_volatile_ce,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7e_m\n-  },\n-  {\n-    {\n-      \"cortex-m4\",\n-      cpu_opttab_cortexm4,\n-      {\n-        ISA_ARMv7em,\n-        ISA_VFPv4,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7e_m\n-  },\n-  {\n-    {\n-      \"cortex-m3\",\n-      NULL,\n-      {\n-        ISA_ARMv7m,\n-        isa_quirk_cm3_ldrd,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7_m\n-  },\n-  {\n-    {\n-      \"marvell-pj4\",\n-      NULL,\n-      {\n-        ISA_ARMv7a,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7_a\n-  },\n-  {\n-    {\n-      \"cortex-a15.cortex-a7\",\n-      cpu_opttab_cortexa15cortexa7,\n-      {\n-        ISA_ARMv7ve,\n-        ISA_VFPv4,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7ve\n-  },\n-  {\n-    {\n-      \"cortex-a17.cortex-a7\",\n-      cpu_opttab_cortexa17cortexa7,\n-      {\n-        ISA_ARMv7ve,\n-        ISA_VFPv4,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv7ve\n-  },\n-  {\n-    {\n-      \"cortex-a32\",\n-      cpu_opttab_cortexa32,\n-      {\n-        ISA_ARMv8a,\n-        isa_bit_crc32,\n-        ISA_FP_ARMv8,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv8_a\n-  },\n-  {\n-    {\n-      \"cortex-a35\",\n-      cpu_opttab_cortexa35,\n-      {\n-        ISA_ARMv8a,\n-        isa_bit_crc32,\n-        ISA_FP_ARMv8,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv8_a\n-  },\n-  {\n-    {\n-      \"cortex-a53\",\n-      cpu_opttab_cortexa53,\n-      {\n-        ISA_ARMv8a,\n-        isa_bit_crc32,\n-        ISA_FP_ARMv8,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv8_a\n-  },\n-  {\n-    {\n-      \"cortex-a57\",\n-      cpu_opttab_cortexa57,\n-      {\n-        ISA_ARMv8a,\n-        isa_bit_crc32,\n-        ISA_FP_ARMv8,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv8_a\n-  },\n-  {\n-    {\n-      \"cortex-a72\",\n-      cpu_opttab_cortexa72,\n-      {\n-        ISA_ARMv8a,\n-        isa_bit_crc32,\n-        ISA_FP_ARMv8,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv8_a\n-  },\n-  {\n-    {\n-      \"cortex-a73\",\n-      cpu_opttab_cortexa73,\n-      {\n-        ISA_ARMv8a,\n-        isa_bit_crc32,\n-        ISA_FP_ARMv8,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv8_a\n-  },\n-  {\n-    {\n-      \"exynos-m1\",\n-      cpu_opttab_exynosm1,\n-      {\n-        ISA_ARMv8a,\n-        isa_bit_crc32,\n-        ISA_FP_ARMv8,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv8_a\n-  },\n-  {\n-    {\n-      \"xgene1\",\n-      cpu_opttab_xgene1,\n-      {\n-        ISA_ARMv8a,\n-        ISA_FP_ARMv8,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv8_a\n-  },\n-  {\n-    {\n-      \"cortex-a57.cortex-a53\",\n-      cpu_opttab_cortexa57cortexa53,\n-      {\n-        ISA_ARMv8a,\n-        isa_bit_crc32,\n-        ISA_FP_ARMv8,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv8_a\n-  },\n-  {\n-    {\n-      \"cortex-a72.cortex-a53\",\n-      cpu_opttab_cortexa72cortexa53,\n-      {\n-        ISA_ARMv8a,\n-        isa_bit_crc32,\n-        ISA_FP_ARMv8,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv8_a\n-  },\n-  {\n-    {\n-      \"cortex-a73.cortex-a35\",\n-      cpu_opttab_cortexa73cortexa35,\n-      {\n-        ISA_ARMv8a,\n-        isa_bit_crc32,\n-        ISA_FP_ARMv8,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv8_a\n-  },\n-  {\n-    {\n-      \"cortex-a73.cortex-a53\",\n-      cpu_opttab_cortexa73cortexa53,\n-      {\n-        ISA_ARMv8a,\n-        isa_bit_crc32,\n-        ISA_FP_ARMv8,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv8_a\n-  },\n-  {\n-    {\n-      \"cortex-a55\",\n-      cpu_opttab_cortexa55,\n-      {\n-        ISA_ARMv8_2a,\n-        isa_bit_fp16,ISA_FP_ARMv8,ISA_NEON,\n-        ISA_FP_ARMv8,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv8_2_a\n-  },\n-  {\n-    {\n-      \"cortex-a75\",\n-      cpu_opttab_cortexa75,\n-      {\n-        ISA_ARMv8_2a,\n-        isa_bit_fp16,ISA_FP_ARMv8,ISA_NEON,\n-        ISA_FP_ARMv8,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv8_2_a\n-  },\n-  {\n-    {\n-      \"cortex-a75.cortex-a55\",\n-      cpu_opttab_cortexa75cortexa55,\n-      {\n-        ISA_ARMv8_2a,\n-        isa_bit_fp16,ISA_FP_ARMv8,ISA_NEON,\n-        ISA_FP_ARMv8,ISA_NEON,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv8_2_a\n-  },\n-  {\n-    {\n-      \"cortex-m23\",\n-      NULL,\n-      {\n-        ISA_ARMv8m_base,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv8_m_base\n-  },\n-  {\n-    {\n-      \"cortex-m33\",\n-      cpu_opttab_cortexm33,\n-      {\n-        ISA_ARMv8m_main,\n-        isa_bit_ARMv7em,\n-        ISA_FPv5,\n-        isa_nobit\n-      }\n-    },\n-    TARGET_ARCH_armv8_m_main\n-  },\n-  {{NULL, NULL, {isa_nobit}}, TARGET_ARCH_arm_none}\n-};\n-static const struct cpu_arch_extension arch_opttab_armv5e[] = {\n-  {\n-    \"fp\", false, false,\n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  {\n-    \"vfpv2\", false, true, \n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const struct cpu_arch_extension arch_opttab_armv5te[] = {\n-  {\n-    \"fp\", false, false,\n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  {\n-    \"vfpv2\", false, true, \n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const struct cpu_arch_extension arch_opttab_armv5tej[] = {\n-  {\n-    \"fp\", false, false,\n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  {\n-    \"vfpv2\", false, true, \n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const struct cpu_arch_extension arch_opttab_armv6[] = {\n-  {\n-    \"fp\", false, false,\n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  {\n-    \"vfpv2\", false, true, \n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const struct cpu_arch_extension arch_opttab_armv6j[] = {\n-  {\n-    \"fp\", false, false,\n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  {\n-    \"vfpv2\", false, true, \n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const struct cpu_arch_extension arch_opttab_armv6k[] = {\n-  {\n-    \"fp\", false, false,\n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  {\n-    \"vfpv2\", false, true, \n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const struct cpu_arch_extension arch_opttab_armv6z[] = {\n-  {\n-    \"fp\", false, false,\n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  {\n-    \"vfpv2\", false, true, \n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const struct cpu_arch_extension arch_opttab_armv6kz[] = {\n-  {\n-    \"fp\", false, false,\n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  {\n-    \"vfpv2\", false, true, \n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const struct cpu_arch_extension arch_opttab_armv6zk[] = {\n-  {\n-    \"fp\", false, false,\n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  {\n-    \"vfpv2\", false, true, \n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const struct cpu_arch_extension arch_opttab_armv6t2[] = {\n-  {\n-    \"fp\", false, false,\n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  {\n-    \"vfpv2\", false, true, \n-    { ISA_VFPv2,ISA_FP_DBL, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const struct cpu_arch_extension arch_opttab_armv7[] = {\n-  {\n-    \"fp\", false, false,\n-    { ISA_VFPv3,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  {\n-    \"vfpv3-d16\", false, true, \n-    { ISA_VFPv3,ISA_FP_DBL, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const struct cpu_arch_extension arch_opttab_armv7_a[] = {\n-  {\n-    \"fp\", false, false,\n-    { ISA_VFPv3,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"vfpv3\", false, false,\n-    { ISA_VFPv3,ISA_FP_D32, isa_nobit }\n-  },\n-  {\n-    \"vfpv3-d16-fp16\", false, false,\n-    { ISA_VFPv3,ISA_FP_DBL,isa_bit_fp16conv, isa_nobit }\n-  },\n-  {\n-    \"vfpv3-fp16\", false, false,\n-    { ISA_VFPv3,ISA_FP_DBL,ISA_FP_D32,isa_bit_fp16conv, isa_nobit }\n-  },\n-  {\n-    \"vfpv4-d16\", false, false,\n-    { ISA_VFPv4,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"vfpv4\", false, false,\n-    { ISA_VFPv4,ISA_FP_D32, isa_nobit }\n-  },\n-  {\n-    \"simd\", false, false,\n-    { ISA_VFPv3,ISA_NEON, isa_nobit }\n-  },\n-  {\n-    \"neon-fp16\", false, false,\n-    { ISA_VFPv3,ISA_NEON,isa_bit_fp16conv, isa_nobit }\n-  },\n-  {\n-    \"neon-vfpv4\", false, false,\n-    { ISA_VFPv4,ISA_NEON, isa_nobit }\n-  },\n-  {\n-    \"nosimd\", true, false,\n-    { ISA_ALL_SIMD, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  {\n-    \"vfpv3-d16\", false, true, \n-    { ISA_VFPv3,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"neon\", false, true, \n-    { ISA_VFPv3,ISA_NEON, isa_nobit }\n-  },\n-  {\n-    \"neon-vfpv3\", false, true, \n-    { ISA_VFPv3,ISA_NEON, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const struct cpu_arch_extension arch_opttab_armv7ve[] = {\n-  {\n-    \"vfpv3-d16\", false, false,\n-    { ISA_VFPv3,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"vfpv3\", false, false,\n-    { ISA_VFPv3,ISA_FP_D32, isa_nobit }\n-  },\n-  {\n-    \"vfpv3-d16-fp16\", false, false,\n-    { ISA_VFPv3,ISA_FP_DBL,isa_bit_fp16conv, isa_nobit }\n-  },\n-  {\n-    \"vfpv3-fp16\", false, false,\n-    { ISA_VFPv3,ISA_FP_DBL,ISA_FP_D32,isa_bit_fp16conv, isa_nobit }\n-  },\n-  {\n-    \"fp\", false, false,\n-    { ISA_VFPv4,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"vfpv4\", false, false,\n-    { ISA_VFPv4,ISA_FP_D32, isa_nobit }\n-  },\n-  {\n-    \"neon\", false, false,\n-    { ISA_VFPv3,ISA_NEON, isa_nobit }\n-  },\n-  {\n-    \"neon-fp16\", false, false,\n-    { ISA_VFPv3,ISA_NEON,isa_bit_fp16conv, isa_nobit }\n-  },\n-  {\n-    \"simd\", false, false,\n-    { ISA_VFPv4,ISA_NEON, isa_nobit }\n-  },\n-  {\n-    \"nosimd\", true, false,\n-    { ISA_ALL_SIMD, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  {\n-    \"vfpv4-d16\", false, true, \n-    { ISA_VFPv4,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"neon-vfpv3\", false, true, \n-    { ISA_VFPv3,ISA_NEON, isa_nobit }\n-  },\n-  {\n-    \"neon-vfpv4\", false, true, \n-    { ISA_VFPv4,ISA_NEON, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const struct cpu_arch_extension arch_opttab_armv7_r[] = {\n-  {\n-    \"fp.sp\", false, false,\n-    { ISA_VFPv3, isa_nobit }\n-  },\n-  {\n-    \"fp\", false, false,\n-    { ISA_VFPv3,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"idiv\", false, false,\n-    { isa_bit_adiv, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  {\n-    \"noidiv\", true, false,\n-    { isa_bit_adiv, isa_nobit }\n-  },\n-  {\n-    \"vfpv3xd\", false, true, \n-    { ISA_VFPv3, isa_nobit }\n-  },\n-  {\n-    \"vfpv3-d16\", false, true, \n-    { ISA_VFPv3,ISA_FP_DBL, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const struct cpu_arch_extension arch_opttab_armv7e_m[] = {\n-  {\n-    \"fp\", false, false,\n-    { ISA_VFPv4, isa_nobit }\n-  },\n-  {\n-    \"fpv5\", false, false,\n-    { ISA_FPv5, isa_nobit }\n-  },\n-  {\n-    \"fp.dp\", false, false,\n-    { ISA_FPv5,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  {\n-    \"vfpv4-sp-d16\", false, true, \n-    { ISA_VFPv4, isa_nobit }\n-  },\n-  {\n-    \"fpv5-d16\", false, true, \n-    { ISA_FPv5,ISA_FP_DBL, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const struct cpu_arch_extension arch_opttab_armv8_a[] = {\n-  {\n-    \"crc\", false, false,\n-    { isa_bit_crc32, isa_nobit }\n-  },\n-  {\n-    \"simd\", false, false,\n-    { ISA_FP_ARMv8,ISA_NEON, isa_nobit }\n-  },\n-  {\n-    \"crypto\", false, false,\n-    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n-  },\n-  {\n-    \"nocrypto\", true, false,\n-    { ISA_ALL_CRYPTO, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const struct cpu_arch_extension arch_opttab_armv8_1_a[] = {\n-  {\n-    \"simd\", false, false,\n-    { ISA_FP_ARMv8,ISA_NEON, isa_nobit }\n-  },\n-  {\n-    \"crypto\", false, false,\n-    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n-  },\n-  {\n-    \"nocrypto\", true, false,\n-    { ISA_ALL_CRYPTO, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const struct cpu_arch_extension arch_opttab_armv8_2_a[] = {\n-  {\n-    \"simd\", false, false,\n-    { ISA_FP_ARMv8,ISA_NEON, isa_nobit }\n-  },\n-  {\n-    \"fp16\", false, false,\n-    { isa_bit_fp16,ISA_FP_ARMv8,ISA_NEON, isa_nobit }\n-  },\n-  {\n-    \"crypto\", false, false,\n-    { ISA_FP_ARMv8,ISA_CRYPTO, isa_nobit }\n-  },\n-  {\n-    \"nocrypto\", true, false,\n-    { ISA_ALL_CRYPTO, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-static const struct cpu_arch_extension arch_opttab_armv8_m_main[] = {\n-  {\n-    \"dsp\", false, false,\n-    { isa_bit_ARMv7em, isa_nobit }\n-  },\n-  {\n-    \"fp\", false, false,\n-    { ISA_FPv5, isa_nobit }\n-  },\n-  {\n-    \"fp.dp\", false, false,\n-    { ISA_FPv5,ISA_FP_DBL, isa_nobit }\n-  },\n-  {\n-    \"nofp\", true, false,\n-    { ISA_ALL_FP, isa_nobit }\n-  },\n-  {\n-    \"nodsp\", true, false,\n-    { isa_bit_ARMv7em, isa_nobit }\n-  },\n-  { NULL, false, false, {isa_nobit}}\n-};\n-\n-const arch_option all_architectures[] =\n-{\n-  {\n-    \"armv2\",\n-    NULL,\n-    {\n-      ISA_ARMv2,isa_bit_mode26,\n-      isa_nobit\n-    },\n-    \"2\", BASE_ARCH_2,\n-    0,\n-    TARGET_CPU_arm2,\n-  },\n-  {\n-    \"armv2a\",\n-    NULL,\n-    {\n-      ISA_ARMv2,isa_bit_mode26,\n-      isa_nobit\n-    },\n-    \"2\", BASE_ARCH_2,\n-    0,\n-    TARGET_CPU_arm2,\n-  },\n-  {\n-    \"armv3\",\n-    NULL,\n-    {\n-      ISA_ARMv3,isa_bit_mode26,\n-      isa_nobit\n-    },\n-    \"3\", BASE_ARCH_3,\n-    0,\n-    TARGET_CPU_arm6,\n-  },\n-  {\n-    \"armv3m\",\n-    NULL,\n-    {\n-      ISA_ARMv3m,isa_bit_mode26,\n-      isa_nobit\n-    },\n-    \"3M\", BASE_ARCH_3M,\n-    0,\n-    TARGET_CPU_arm7m,\n-  },\n-  {\n-    \"armv4\",\n-    NULL,\n-    {\n-      ISA_ARMv4,isa_bit_mode26,\n-      isa_nobit\n-    },\n-    \"4\", BASE_ARCH_4,\n-    0,\n-    TARGET_CPU_arm7tdmi,\n-  },\n-  {\n-    \"armv4t\",\n-    NULL,\n-    {\n-      ISA_ARMv4t,\n-      isa_nobit\n-    },\n-    \"4T\", BASE_ARCH_4T,\n-    0,\n-    TARGET_CPU_arm7tdmi,\n-  },\n-  {\n-    \"armv5\",\n-    NULL,\n-    {\n-      ISA_ARMv5,\n-      isa_nobit\n-    },\n-    \"5\", BASE_ARCH_5,\n-    0,\n-    TARGET_CPU_arm10tdmi,\n-  },\n-  {\n-    \"armv5t\",\n-    NULL,\n-    {\n-      ISA_ARMv5t,\n-      isa_nobit\n-    },\n-    \"5T\", BASE_ARCH_5T,\n-    0,\n-    TARGET_CPU_arm10tdmi,\n-  },\n-  {\n-    \"armv5e\",\n-    arch_opttab_armv5e,\n-    {\n-      ISA_ARMv5e,\n-      isa_nobit\n-    },\n-    \"5E\", BASE_ARCH_5E,\n-    0,\n-    TARGET_CPU_arm1026ejs,\n-  },\n-  {\n-    \"armv5te\",\n-    arch_opttab_armv5te,\n-    {\n-      ISA_ARMv5te,\n-      isa_nobit\n-    },\n-    \"5TE\", BASE_ARCH_5TE,\n-    0,\n-    TARGET_CPU_arm1026ejs,\n-  },\n-  {\n-    \"armv5tej\",\n-    arch_opttab_armv5tej,\n-    {\n-      ISA_ARMv5tej,\n-      isa_nobit\n-    },\n-    \"5TEJ\", BASE_ARCH_5TEJ,\n-    0,\n-    TARGET_CPU_arm1026ejs,\n-  },\n-  {\n-    \"armv6\",\n-    arch_opttab_armv6,\n-    {\n-      ISA_ARMv6,\n-      isa_nobit\n-    },\n-    \"6\", BASE_ARCH_6,\n-    0,\n-    TARGET_CPU_arm1136js,\n-  },\n-  {\n-    \"armv6j\",\n-    arch_opttab_armv6j,\n-    {\n-      ISA_ARMv6j,\n-      isa_nobit\n-    },\n-    \"6J\", BASE_ARCH_6J,\n-    0,\n-    TARGET_CPU_arm1136js,\n-  },\n-  {\n-    \"armv6k\",\n-    arch_opttab_armv6k,\n-    {\n-      ISA_ARMv6k,\n-      isa_nobit\n-    },\n-    \"6K\", BASE_ARCH_6K,\n-    0,\n-    TARGET_CPU_mpcore,\n-  },\n-  {\n-    \"armv6z\",\n-    arch_opttab_armv6z,\n-    {\n-      ISA_ARMv6z,\n-      isa_nobit\n-    },\n-    \"6Z\", BASE_ARCH_6Z,\n-    0,\n-    TARGET_CPU_arm1176jzs,\n-  },\n-  {\n-    \"armv6kz\",\n-    arch_opttab_armv6kz,\n-    {\n-      ISA_ARMv6kz,\n-      isa_nobit\n-    },\n-    \"6KZ\", BASE_ARCH_6KZ,\n-    0,\n-    TARGET_CPU_arm1176jzs,\n-  },\n-  {\n-    \"armv6zk\",\n-    arch_opttab_armv6zk,\n-    {\n-      ISA_ARMv6kz,\n-      isa_nobit\n-    },\n-    \"6KZ\", BASE_ARCH_6KZ,\n-    0,\n-    TARGET_CPU_arm1176jzs,\n-  },\n-  {\n-    \"armv6t2\",\n-    arch_opttab_armv6t2,\n-    {\n-      ISA_ARMv6t2,\n-      isa_nobit\n-    },\n-    \"6T2\", BASE_ARCH_6T2,\n-    0,\n-    TARGET_CPU_arm1156t2s,\n-  },\n-  {\n-    \"armv6-m\",\n-    NULL,\n-    {\n-      ISA_ARMv6m,\n-      isa_nobit\n-    },\n-    \"6M\", BASE_ARCH_6M,\n-    'M',\n-    TARGET_CPU_cortexm1,\n-  },\n-  {\n-    \"armv6s-m\",\n-    NULL,\n-    {\n-      ISA_ARMv6m,\n-      isa_nobit\n-    },\n-    \"6M\", BASE_ARCH_6M,\n-    'M',\n-    TARGET_CPU_cortexm1,\n-  },\n-  {\n-    \"armv7\",\n-    arch_opttab_armv7,\n-    {\n-      ISA_ARMv7,\n-      isa_nobit\n-    },\n-    \"7\", BASE_ARCH_7,\n-    0,\n-    TARGET_CPU_cortexa8,\n-  },\n-  {\n-    \"armv7-a\",\n-    arch_opttab_armv7_a,\n-    {\n-      ISA_ARMv7a,\n-      isa_nobit\n-    },\n-    \"7A\", BASE_ARCH_7A,\n-    'A',\n-    TARGET_CPU_cortexa8,\n-  },\n-  {\n-    \"armv7ve\",\n-    arch_opttab_armv7ve,\n-    {\n-      ISA_ARMv7ve,\n-      isa_nobit\n-    },\n-    \"7A\", BASE_ARCH_7A,\n-    'A',\n-    TARGET_CPU_cortexa8,\n-  },\n-  {\n-    \"armv7-r\",\n-    arch_opttab_armv7_r,\n-    {\n-      ISA_ARMv7r,\n-      isa_nobit\n-    },\n-    \"7R\", BASE_ARCH_7R,\n-    'R',\n-    TARGET_CPU_cortexr4,\n-  },\n-  {\n-    \"armv7-m\",\n-    NULL,\n-    {\n-      ISA_ARMv7m,\n-      isa_nobit\n-    },\n-    \"7M\", BASE_ARCH_7M,\n-    'M',\n-    TARGET_CPU_cortexm3,\n-  },\n-  {\n-    \"armv7e-m\",\n-    arch_opttab_armv7e_m,\n-    {\n-      ISA_ARMv7em,\n-      isa_nobit\n-    },\n-    \"7EM\", BASE_ARCH_7EM,\n-    'M',\n-    TARGET_CPU_cortexm4,\n-  },\n-  {\n-    \"armv8-a\",\n-    arch_opttab_armv8_a,\n-    {\n-      ISA_ARMv8a,\n-      isa_nobit\n-    },\n-    \"8A\", BASE_ARCH_8A,\n-    'A',\n-    TARGET_CPU_cortexa53,\n-  },\n-  {\n-    \"armv8.1-a\",\n-    arch_opttab_armv8_1_a,\n-    {\n-      ISA_ARMv8_1a,\n-      isa_nobit\n-    },\n-    \"8A\", BASE_ARCH_8A,\n-    'A',\n-    TARGET_CPU_cortexa53,\n-  },\n-  {\n-    \"armv8.2-a\",\n-    arch_opttab_armv8_2_a,\n-    {\n-      ISA_ARMv8_2a,\n-      isa_nobit\n-    },\n-    \"8A\", BASE_ARCH_8A,\n-    'A',\n-    TARGET_CPU_cortexa53,\n-  },\n-  {\n-    \"armv8-m.base\",\n-    NULL,\n-    {\n-      ISA_ARMv8m_base,\n-      isa_nobit\n-    },\n-    \"8M_BASE\", BASE_ARCH_8M_BASE,\n-    'M',\n-    TARGET_CPU_cortexm23,\n-  },\n-  {\n-    \"armv8-m.main\",\n-    arch_opttab_armv8_m_main,\n-    {\n-      ISA_ARMv8m_main,\n-      isa_nobit\n-    },\n-    \"8M_MAIN\", BASE_ARCH_8M_MAIN,\n-    'M',\n-    TARGET_CPU_cortexm7,\n-  },\n-  {\n-    \"iwmmxt\",\n-    NULL,\n-    {\n-      ISA_ARMv5te,isa_bit_xscale,isa_bit_iwmmxt,\n-      isa_nobit\n-    },\n-    \"5TE\", BASE_ARCH_5TE,\n-    0,\n-    TARGET_CPU_iwmmxt,\n-  },\n-  {\n-    \"iwmmxt2\",\n-    NULL,\n-    {\n-      ISA_ARMv5te,isa_bit_xscale,isa_bit_iwmmxt,isa_bit_iwmmxt2,\n-      isa_nobit\n-    },\n-    \"5TE\", BASE_ARCH_5TE,\n-    0,\n-    TARGET_CPU_iwmmxt2,\n-  },\n-  {{NULL, NULL, {isa_nobit}},\n-   NULL, BASE_ARCH_0, 0, TARGET_CPU_arm_none}\n-};\n-\n-const arm_fpu_desc all_fpus[] =\n-{\n-  {\n-    \"vfp\",\n-    {\n-      ISA_VFPv2,ISA_FP_DBL,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"vfpv2\",\n-    {\n-      ISA_VFPv2,ISA_FP_DBL,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"vfpv3\",\n-    {\n-      ISA_VFPv3,ISA_FP_D32,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"vfpv3-fp16\",\n-    {\n-      ISA_VFPv3,ISA_FP_D32,isa_bit_fp16conv,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"vfpv3-d16\",\n-    {\n-      ISA_VFPv3,ISA_FP_DBL,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"vfpv3-d16-fp16\",\n-    {\n-      ISA_VFPv3,ISA_FP_DBL,isa_bit_fp16conv,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"vfpv3xd\",\n-    {\n-      ISA_VFPv3,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"vfpv3xd-fp16\",\n-    {\n-      ISA_VFPv3,isa_bit_fp16conv,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"neon\",\n-    {\n-      ISA_VFPv3,ISA_NEON,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"neon-vfpv3\",\n-    {\n-      ISA_VFPv3,ISA_NEON,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"neon-fp16\",\n-    {\n-      ISA_VFPv3,ISA_NEON,isa_bit_fp16conv,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"vfpv4\",\n-    {\n-      ISA_VFPv4,ISA_FP_D32,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"neon-vfpv4\",\n-    {\n-      ISA_VFPv4,ISA_NEON,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"vfpv4-d16\",\n-    {\n-      ISA_VFPv4,ISA_FP_DBL,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"fpv4-sp-d16\",\n-    {\n-      ISA_VFPv4,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"fpv5-sp-d16\",\n-    {\n-      ISA_FPv5,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"fpv5-d16\",\n-    {\n-      ISA_FPv5,ISA_FP_DBL,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"fp-armv8\",\n-    {\n-      ISA_FP_ARMv8,ISA_FP_D32,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"neon-fp-armv8\",\n-    {\n-      ISA_FP_ARMv8,ISA_NEON,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"crypto-neon-fp-armv8\",\n-    {\n-      ISA_FP_ARMv8,ISA_CRYPTO,\n-      isa_nobit\n-    }\n-  },\n-  {\n-    \"vfp3\",\n-    {\n-      ISA_VFPv3,ISA_FP_D32,\n-      isa_nobit\n-    }\n-  },\n-};"}, {"sha": "1e0552245cfb454a90f4eb77a3cc8884a56dcf2c", "filename": "gcc/config/arm/arm-cpu-data.h", "status": "removed", "additions": 0, "deletions": 581, "changes": 581, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Farm-cpu-data.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Farm-cpu-data.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpu-data.h?ref=1d79dcb813b30ba64c111c2157e06deeac5fb691", "patch": "@@ -1,581 +0,0 @@\n-/* -*- buffer-read-only: t -*-\n-   Generated automatically by parsecpu.awk from arm-cpus.in.\n-   Do not edit.\n-\n-   Copyright (C) 2011-2017 Free Software Foundation, Inc.\n-\n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as\n-   published by the Free Software Foundation; either version 3,\n-   or (at your option) any later version.\n-\n-   GCC is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public\n-   License along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-static const cpu_tune all_tunes[] =\n-{\n-  { /* arm2.  */\n-    TARGET_CPU_arm2,\n-    (TF_CO_PROC | TF_NO_MODE32),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm250.  */\n-    TARGET_CPU_arm250,\n-    (TF_CO_PROC | TF_NO_MODE32),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm3.  */\n-    TARGET_CPU_arm3,\n-    (TF_CO_PROC | TF_NO_MODE32),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm6.  */\n-    TARGET_CPU_arm6,\n-    (TF_CO_PROC),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm60.  */\n-    TARGET_CPU_arm60,\n-    (TF_CO_PROC),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm600.  */\n-    TARGET_CPU_arm600,\n-    (TF_CO_PROC | TF_WBUF),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm610.  */\n-    TARGET_CPU_arm610,\n-    (TF_WBUF),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm620.  */\n-    TARGET_CPU_arm620,\n-    (TF_CO_PROC | TF_WBUF),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm7.  */\n-    TARGET_CPU_arm7,\n-    (TF_CO_PROC),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm7d.  */\n-    TARGET_CPU_arm7d,\n-    (TF_CO_PROC),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm7di.  */\n-    TARGET_CPU_arm7di,\n-    (TF_CO_PROC),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm70.  */\n-    TARGET_CPU_arm70,\n-    (TF_CO_PROC),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm700.  */\n-    TARGET_CPU_arm700,\n-    (TF_CO_PROC | TF_WBUF),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm700i.  */\n-    TARGET_CPU_arm700i,\n-    (TF_CO_PROC | TF_WBUF),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm710.  */\n-    TARGET_CPU_arm710,\n-    (TF_WBUF),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm720.  */\n-    TARGET_CPU_arm720,\n-    (TF_WBUF),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm710c.  */\n-    TARGET_CPU_arm710c,\n-    (TF_WBUF),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm7100.  */\n-    TARGET_CPU_arm7100,\n-    (TF_WBUF),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm7500.  */\n-    TARGET_CPU_arm7500,\n-    (TF_WBUF),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm7500fe.  */\n-    TARGET_CPU_arm7500fe,\n-    (TF_CO_PROC | TF_WBUF),\n-    &arm_slowmul_tune\n-  },\n-  { /* arm7m.  */\n-    TARGET_CPU_arm7m,\n-    (TF_CO_PROC),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm7dm.  */\n-    TARGET_CPU_arm7dm,\n-    (TF_CO_PROC),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm7dmi.  */\n-    TARGET_CPU_arm7dmi,\n-    (TF_CO_PROC),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm8.  */\n-    TARGET_CPU_arm8,\n-    (TF_LDSCHED),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm810.  */\n-    TARGET_CPU_arm810,\n-    (TF_LDSCHED),\n-    &arm_fastmul_tune\n-  },\n-  { /* strongarm.  */\n-    TARGET_CPU_strongarm,\n-    (TF_LDSCHED | TF_STRONG),\n-    &arm_strongarm_tune\n-  },\n-  { /* strongarm110.  */\n-    TARGET_CPU_strongarm110,\n-    (TF_LDSCHED | TF_STRONG),\n-    &arm_strongarm_tune\n-  },\n-  { /* strongarm1100.  */\n-    TARGET_CPU_strongarm1100,\n-    (TF_LDSCHED | TF_STRONG),\n-    &arm_strongarm_tune\n-  },\n-  { /* strongarm1110.  */\n-    TARGET_CPU_strongarm1110,\n-    (TF_LDSCHED | TF_STRONG),\n-    &arm_strongarm_tune\n-  },\n-  { /* fa526.  */\n-    TARGET_CPU_fa526,\n-    (TF_LDSCHED),\n-    &arm_fastmul_tune\n-  },\n-  { /* fa626.  */\n-    TARGET_CPU_fa626,\n-    (TF_LDSCHED),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm7tdmi.  */\n-    TARGET_CPU_arm7tdmi,\n-    (TF_CO_PROC),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm7tdmi-s.  */\n-    TARGET_CPU_arm7tdmis,\n-    (TF_CO_PROC),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm710t.  */\n-    TARGET_CPU_arm710t,\n-    (TF_WBUF),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm720t.  */\n-    TARGET_CPU_arm720t,\n-    (TF_WBUF),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm740t.  */\n-    TARGET_CPU_arm740t,\n-    (TF_WBUF),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm9.  */\n-    TARGET_CPU_arm9,\n-    (TF_LDSCHED),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm9tdmi.  */\n-    TARGET_CPU_arm9tdmi,\n-    (TF_LDSCHED),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm920.  */\n-    TARGET_CPU_arm920,\n-    (TF_LDSCHED),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm920t.  */\n-    TARGET_CPU_arm920t,\n-    (TF_LDSCHED),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm922t.  */\n-    TARGET_CPU_arm922t,\n-    (TF_LDSCHED),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm940t.  */\n-    TARGET_CPU_arm940t,\n-    (TF_LDSCHED),\n-    &arm_fastmul_tune\n-  },\n-  { /* ep9312.  */\n-    TARGET_CPU_ep9312,\n-    (TF_LDSCHED),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm10tdmi.  */\n-    TARGET_CPU_arm10tdmi,\n-    (TF_LDSCHED),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm1020t.  */\n-    TARGET_CPU_arm1020t,\n-    (TF_LDSCHED),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm9e.  */\n-    TARGET_CPU_arm9e,\n-    (TF_LDSCHED),\n-    &arm_9e_tune\n-  },\n-  { /* arm946e-s.  */\n-    TARGET_CPU_arm946es,\n-    (TF_LDSCHED),\n-    &arm_9e_tune\n-  },\n-  { /* arm966e-s.  */\n-    TARGET_CPU_arm966es,\n-    (TF_LDSCHED),\n-    &arm_9e_tune\n-  },\n-  { /* arm968e-s.  */\n-    TARGET_CPU_arm968es,\n-    (TF_LDSCHED),\n-    &arm_9e_tune\n-  },\n-  { /* arm10e.  */\n-    TARGET_CPU_arm10e,\n-    (TF_LDSCHED),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm1020e.  */\n-    TARGET_CPU_arm1020e,\n-    (TF_LDSCHED),\n-    &arm_fastmul_tune\n-  },\n-  { /* arm1022e.  */\n-    TARGET_CPU_arm1022e,\n-    (TF_LDSCHED),\n-    &arm_fastmul_tune\n-  },\n-  { /* xscale.  */\n-    TARGET_CPU_xscale,\n-    (TF_LDSCHED | TF_XSCALE),\n-    &arm_xscale_tune\n-  },\n-  { /* iwmmxt.  */\n-    TARGET_CPU_iwmmxt,\n-    (TF_LDSCHED | TF_XSCALE),\n-    &arm_xscale_tune\n-  },\n-  { /* iwmmxt2.  */\n-    TARGET_CPU_iwmmxt2,\n-    (TF_LDSCHED | TF_XSCALE),\n-    &arm_xscale_tune\n-  },\n-  { /* fa606te.  */\n-    TARGET_CPU_fa606te,\n-    (TF_LDSCHED),\n-    &arm_9e_tune\n-  },\n-  { /* fa626te.  */\n-    TARGET_CPU_fa626te,\n-    (TF_LDSCHED),\n-    &arm_9e_tune\n-  },\n-  { /* fmp626.  */\n-    TARGET_CPU_fmp626,\n-    (TF_LDSCHED),\n-    &arm_9e_tune\n-  },\n-  { /* fa726te.  */\n-    TARGET_CPU_fa726te,\n-    (TF_LDSCHED),\n-    &arm_fa726te_tune\n-  },\n-  { /* arm926ej-s.  */\n-    TARGET_CPU_arm926ejs,\n-    (TF_LDSCHED),\n-    &arm_9e_tune\n-  },\n-  { /* arm1026ej-s.  */\n-    TARGET_CPU_arm1026ejs,\n-    (TF_LDSCHED),\n-    &arm_9e_tune\n-  },\n-  { /* arm1136j-s.  */\n-    TARGET_CPU_arm1136js,\n-    (TF_LDSCHED),\n-    &arm_9e_tune\n-  },\n-  { /* arm1136jf-s.  */\n-    TARGET_CPU_arm1136jfs,\n-    (TF_LDSCHED),\n-    &arm_9e_tune\n-  },\n-  { /* arm1176jz-s.  */\n-    TARGET_CPU_arm1176jzs,\n-    (TF_LDSCHED),\n-    &arm_9e_tune\n-  },\n-  { /* arm1176jzf-s.  */\n-    TARGET_CPU_arm1176jzfs,\n-    (TF_LDSCHED),\n-    &arm_9e_tune\n-  },\n-  { /* mpcorenovfp.  */\n-    TARGET_CPU_mpcorenovfp,\n-    (TF_LDSCHED),\n-    &arm_9e_tune\n-  },\n-  { /* mpcore.  */\n-    TARGET_CPU_mpcore,\n-    (TF_LDSCHED),\n-    &arm_9e_tune\n-  },\n-  { /* arm1156t2-s.  */\n-    TARGET_CPU_arm1156t2s,\n-    (TF_LDSCHED),\n-    &arm_v6t2_tune\n-  },\n-  { /* arm1156t2f-s.  */\n-    TARGET_CPU_arm1156t2fs,\n-    (TF_LDSCHED),\n-    &arm_v6t2_tune\n-  },\n-  { /* cortex-m1.  */\n-    TARGET_CPU_cortexm1,\n-    (TF_LDSCHED),\n-    &arm_v6m_tune\n-  },\n-  { /* cortex-m0.  */\n-    TARGET_CPU_cortexm0,\n-    (TF_LDSCHED),\n-    &arm_v6m_tune\n-  },\n-  { /* cortex-m0plus.  */\n-    TARGET_CPU_cortexm0plus,\n-    (TF_LDSCHED),\n-    &arm_v6m_tune\n-  },\n-  { /* cortex-m1.small-multiply.  */\n-    TARGET_CPU_cortexm1,\n-    (TF_LDSCHED | TF_SMALLMUL),\n-    &arm_v6m_tune\n-  },\n-  { /* cortex-m0.small-multiply.  */\n-    TARGET_CPU_cortexm0,\n-    (TF_LDSCHED | TF_SMALLMUL),\n-    &arm_v6m_tune\n-  },\n-  { /* cortex-m0plus.small-multiply.  */\n-    TARGET_CPU_cortexm0plus,\n-    (TF_LDSCHED | TF_SMALLMUL),\n-    &arm_v6m_tune\n-  },\n-  { /* generic-armv7-a.  */\n-    TARGET_CPU_genericv7a,\n-    (TF_LDSCHED),\n-    &arm_cortex_tune\n-  },\n-  { /* cortex-a5.  */\n-    TARGET_CPU_cortexa5,\n-    (TF_LDSCHED),\n-    &arm_cortex_a5_tune\n-  },\n-  { /* cortex-a7.  */\n-    TARGET_CPU_cortexa7,\n-    (TF_LDSCHED),\n-    &arm_cortex_a7_tune\n-  },\n-  { /* cortex-a8.  */\n-    TARGET_CPU_cortexa8,\n-    (TF_LDSCHED),\n-    &arm_cortex_a8_tune\n-  },\n-  { /* cortex-a9.  */\n-    TARGET_CPU_cortexa9,\n-    (TF_LDSCHED),\n-    &arm_cortex_a9_tune\n-  },\n-  { /* cortex-a12.  */\n-    TARGET_CPU_cortexa17,\n-    (TF_LDSCHED),\n-    &arm_cortex_a12_tune\n-  },\n-  { /* cortex-a15.  */\n-    TARGET_CPU_cortexa15,\n-    (TF_LDSCHED),\n-    &arm_cortex_a15_tune\n-  },\n-  { /* cortex-a17.  */\n-    TARGET_CPU_cortexa17,\n-    (TF_LDSCHED),\n-    &arm_cortex_a12_tune\n-  },\n-  { /* cortex-r4.  */\n-    TARGET_CPU_cortexr4,\n-    (TF_LDSCHED),\n-    &arm_cortex_tune\n-  },\n-  { /* cortex-r4f.  */\n-    TARGET_CPU_cortexr4f,\n-    (TF_LDSCHED),\n-    &arm_cortex_tune\n-  },\n-  { /* cortex-r5.  */\n-    TARGET_CPU_cortexr5,\n-    (TF_LDSCHED),\n-    &arm_cortex_tune\n-  },\n-  { /* cortex-r7.  */\n-    TARGET_CPU_cortexr7,\n-    (TF_LDSCHED),\n-    &arm_cortex_tune\n-  },\n-  { /* cortex-r8.  */\n-    TARGET_CPU_cortexr7,\n-    (TF_LDSCHED),\n-    &arm_cortex_tune\n-  },\n-  { /* cortex-m7.  */\n-    TARGET_CPU_cortexm7,\n-    (TF_LDSCHED),\n-    &arm_cortex_m7_tune\n-  },\n-  { /* cortex-m4.  */\n-    TARGET_CPU_cortexm4,\n-    (TF_LDSCHED),\n-    &arm_v7m_tune\n-  },\n-  { /* cortex-m3.  */\n-    TARGET_CPU_cortexm3,\n-    (TF_LDSCHED),\n-    &arm_v7m_tune\n-  },\n-  { /* marvell-pj4.  */\n-    TARGET_CPU_marvell_pj4,\n-    (TF_LDSCHED),\n-    &arm_marvell_pj4_tune\n-  },\n-  { /* cortex-a15.cortex-a7.  */\n-    TARGET_CPU_cortexa7,\n-    (TF_LDSCHED),\n-    &arm_cortex_a15_tune\n-  },\n-  { /* cortex-a17.cortex-a7.  */\n-    TARGET_CPU_cortexa7,\n-    (TF_LDSCHED),\n-    &arm_cortex_a12_tune\n-  },\n-  { /* cortex-a32.  */\n-    TARGET_CPU_cortexa53,\n-    (TF_LDSCHED),\n-    &arm_cortex_a35_tune\n-  },\n-  { /* cortex-a35.  */\n-    TARGET_CPU_cortexa53,\n-    (TF_LDSCHED),\n-    &arm_cortex_a35_tune\n-  },\n-  { /* cortex-a53.  */\n-    TARGET_CPU_cortexa53,\n-    (TF_LDSCHED),\n-    &arm_cortex_a53_tune\n-  },\n-  { /* cortex-a57.  */\n-    TARGET_CPU_cortexa57,\n-    (TF_LDSCHED),\n-    &arm_cortex_a57_tune\n-  },\n-  { /* cortex-a72.  */\n-    TARGET_CPU_cortexa57,\n-    (TF_LDSCHED),\n-    &arm_cortex_a57_tune\n-  },\n-  { /* cortex-a73.  */\n-    TARGET_CPU_cortexa57,\n-    (TF_LDSCHED),\n-    &arm_cortex_a73_tune\n-  },\n-  { /* exynos-m1.  */\n-    TARGET_CPU_exynosm1,\n-    (TF_LDSCHED),\n-    &arm_exynosm1_tune\n-  },\n-  { /* xgene1.  */\n-    TARGET_CPU_xgene1,\n-    (TF_LDSCHED),\n-    &arm_xgene1_tune\n-  },\n-  { /* cortex-a57.cortex-a53.  */\n-    TARGET_CPU_cortexa53,\n-    (TF_LDSCHED),\n-    &arm_cortex_a57_tune\n-  },\n-  { /* cortex-a72.cortex-a53.  */\n-    TARGET_CPU_cortexa53,\n-    (TF_LDSCHED),\n-    &arm_cortex_a57_tune\n-  },\n-  { /* cortex-a73.cortex-a35.  */\n-    TARGET_CPU_cortexa53,\n-    (TF_LDSCHED),\n-    &arm_cortex_a73_tune\n-  },\n-  { /* cortex-a73.cortex-a53.  */\n-    TARGET_CPU_cortexa53,\n-    (TF_LDSCHED),\n-    &arm_cortex_a73_tune\n-  },\n-  { /* cortex-a55.  */\n-    TARGET_CPU_cortexa53,\n-    (TF_LDSCHED),\n-    &arm_cortex_a53_tune\n-  },\n-  { /* cortex-a75.  */\n-    TARGET_CPU_cortexa57,\n-    (TF_LDSCHED),\n-    &arm_cortex_a73_tune\n-  },\n-  { /* cortex-a75.cortex-a55.  */\n-    TARGET_CPU_cortexa53,\n-    (TF_LDSCHED),\n-    &arm_cortex_a73_tune\n-  },\n-  { /* cortex-m23.  */\n-    TARGET_CPU_cortexm23,\n-    (TF_LDSCHED),\n-    &arm_v6m_tune\n-  },\n-  { /* cortex-m33.  */\n-    TARGET_CPU_cortexm33,\n-    (TF_LDSCHED),\n-    &arm_v7m_tune\n-  },\n-  {TARGET_CPU_arm_none, 0, NULL}\n-};"}, {"sha": "8fda7174dc26aa17e1603ef6b628f9edcd1c6243", "filename": "gcc/config/arm/arm-cpu.h", "status": "removed", "additions": 0, "deletions": 201, "changes": 201, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Farm-cpu.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1d79dcb813b30ba64c111c2157e06deeac5fb691/gcc%2Fconfig%2Farm%2Farm-cpu.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm-cpu.h?ref=1d79dcb813b30ba64c111c2157e06deeac5fb691", "patch": "@@ -1,201 +0,0 @@\n-/* -*- buffer-read-only: t -*-\n-   Generated automatically by parsecpu.awk from arm-cpus.in.\n-   Do not edit.\n-\n-   Copyright (C) 2011-2017 Free Software Foundation, Inc.\n-\n-   This file is part of GCC.\n-\n-   GCC is free software; you can redistribute it and/or modify\n-   it under the terms of the GNU General Public License as\n-   published by the Free Software Foundation; either version 3,\n-   or (at your option) any later version.\n-\n-   GCC is distributed in the hope that it will be useful,\n-   but WITHOUT ANY WARRANTY; without even the implied warranty of\n-   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-   GNU General Public License for more details.\n-\n-   You should have received a copy of the GNU General Public\n-   License along with GCC; see the file COPYING3.  If not see\n-   <http://www.gnu.org/licenses/>.  */\n-\n-enum processor_type\n-{\n-  TARGET_CPU_arm2,\n-  TARGET_CPU_arm250,\n-  TARGET_CPU_arm3,\n-  TARGET_CPU_arm6,\n-  TARGET_CPU_arm60,\n-  TARGET_CPU_arm600,\n-  TARGET_CPU_arm610,\n-  TARGET_CPU_arm620,\n-  TARGET_CPU_arm7,\n-  TARGET_CPU_arm7d,\n-  TARGET_CPU_arm7di,\n-  TARGET_CPU_arm70,\n-  TARGET_CPU_arm700,\n-  TARGET_CPU_arm700i,\n-  TARGET_CPU_arm710,\n-  TARGET_CPU_arm720,\n-  TARGET_CPU_arm710c,\n-  TARGET_CPU_arm7100,\n-  TARGET_CPU_arm7500,\n-  TARGET_CPU_arm7500fe,\n-  TARGET_CPU_arm7m,\n-  TARGET_CPU_arm7dm,\n-  TARGET_CPU_arm7dmi,\n-  TARGET_CPU_arm8,\n-  TARGET_CPU_arm810,\n-  TARGET_CPU_strongarm,\n-  TARGET_CPU_strongarm110,\n-  TARGET_CPU_strongarm1100,\n-  TARGET_CPU_strongarm1110,\n-  TARGET_CPU_fa526,\n-  TARGET_CPU_fa626,\n-  TARGET_CPU_arm7tdmi,\n-  TARGET_CPU_arm7tdmis,\n-  TARGET_CPU_arm710t,\n-  TARGET_CPU_arm720t,\n-  TARGET_CPU_arm740t,\n-  TARGET_CPU_arm9,\n-  TARGET_CPU_arm9tdmi,\n-  TARGET_CPU_arm920,\n-  TARGET_CPU_arm920t,\n-  TARGET_CPU_arm922t,\n-  TARGET_CPU_arm940t,\n-  TARGET_CPU_ep9312,\n-  TARGET_CPU_arm10tdmi,\n-  TARGET_CPU_arm1020t,\n-  TARGET_CPU_arm9e,\n-  TARGET_CPU_arm946es,\n-  TARGET_CPU_arm966es,\n-  TARGET_CPU_arm968es,\n-  TARGET_CPU_arm10e,\n-  TARGET_CPU_arm1020e,\n-  TARGET_CPU_arm1022e,\n-  TARGET_CPU_xscale,\n-  TARGET_CPU_iwmmxt,\n-  TARGET_CPU_iwmmxt2,\n-  TARGET_CPU_fa606te,\n-  TARGET_CPU_fa626te,\n-  TARGET_CPU_fmp626,\n-  TARGET_CPU_fa726te,\n-  TARGET_CPU_arm926ejs,\n-  TARGET_CPU_arm1026ejs,\n-  TARGET_CPU_arm1136js,\n-  TARGET_CPU_arm1136jfs,\n-  TARGET_CPU_arm1176jzs,\n-  TARGET_CPU_arm1176jzfs,\n-  TARGET_CPU_mpcorenovfp,\n-  TARGET_CPU_mpcore,\n-  TARGET_CPU_arm1156t2s,\n-  TARGET_CPU_arm1156t2fs,\n-  TARGET_CPU_cortexm1,\n-  TARGET_CPU_cortexm0,\n-  TARGET_CPU_cortexm0plus,\n-  TARGET_CPU_cortexm1smallmultiply,\n-  TARGET_CPU_cortexm0smallmultiply,\n-  TARGET_CPU_cortexm0plussmallmultiply,\n-  TARGET_CPU_genericv7a,\n-  TARGET_CPU_cortexa5,\n-  TARGET_CPU_cortexa7,\n-  TARGET_CPU_cortexa8,\n-  TARGET_CPU_cortexa9,\n-  TARGET_CPU_cortexa12,\n-  TARGET_CPU_cortexa15,\n-  TARGET_CPU_cortexa17,\n-  TARGET_CPU_cortexr4,\n-  TARGET_CPU_cortexr4f,\n-  TARGET_CPU_cortexr5,\n-  TARGET_CPU_cortexr7,\n-  TARGET_CPU_cortexr8,\n-  TARGET_CPU_cortexm7,\n-  TARGET_CPU_cortexm4,\n-  TARGET_CPU_cortexm3,\n-  TARGET_CPU_marvell_pj4,\n-  TARGET_CPU_cortexa15cortexa7,\n-  TARGET_CPU_cortexa17cortexa7,\n-  TARGET_CPU_cortexa32,\n-  TARGET_CPU_cortexa35,\n-  TARGET_CPU_cortexa53,\n-  TARGET_CPU_cortexa57,\n-  TARGET_CPU_cortexa72,\n-  TARGET_CPU_cortexa73,\n-  TARGET_CPU_exynosm1,\n-  TARGET_CPU_xgene1,\n-  TARGET_CPU_cortexa57cortexa53,\n-  TARGET_CPU_cortexa72cortexa53,\n-  TARGET_CPU_cortexa73cortexa35,\n-  TARGET_CPU_cortexa73cortexa53,\n-  TARGET_CPU_cortexa55,\n-  TARGET_CPU_cortexa75,\n-  TARGET_CPU_cortexa75cortexa55,\n-  TARGET_CPU_cortexm23,\n-  TARGET_CPU_cortexm33,\n-  TARGET_CPU_arm_none\n-};\n-\n-enum arch_type\n-{\n-  TARGET_ARCH_armv2,\n-  TARGET_ARCH_armv2a,\n-  TARGET_ARCH_armv3,\n-  TARGET_ARCH_armv3m,\n-  TARGET_ARCH_armv4,\n-  TARGET_ARCH_armv4t,\n-  TARGET_ARCH_armv5,\n-  TARGET_ARCH_armv5t,\n-  TARGET_ARCH_armv5e,\n-  TARGET_ARCH_armv5te,\n-  TARGET_ARCH_armv5tej,\n-  TARGET_ARCH_armv6,\n-  TARGET_ARCH_armv6j,\n-  TARGET_ARCH_armv6k,\n-  TARGET_ARCH_armv6z,\n-  TARGET_ARCH_armv6kz,\n-  TARGET_ARCH_armv6zk,\n-  TARGET_ARCH_armv6t2,\n-  TARGET_ARCH_armv6_m,\n-  TARGET_ARCH_armv6s_m,\n-  TARGET_ARCH_armv7,\n-  TARGET_ARCH_armv7_a,\n-  TARGET_ARCH_armv7ve,\n-  TARGET_ARCH_armv7_r,\n-  TARGET_ARCH_armv7_m,\n-  TARGET_ARCH_armv7e_m,\n-  TARGET_ARCH_armv8_a,\n-  TARGET_ARCH_armv8_1_a,\n-  TARGET_ARCH_armv8_2_a,\n-  TARGET_ARCH_armv8_m_base,\n-  TARGET_ARCH_armv8_m_main,\n-  TARGET_ARCH_iwmmxt,\n-  TARGET_ARCH_iwmmxt2,\n-  TARGET_ARCH_arm_none\n-};\n-\n-enum fpu_type\n-{\n-  TARGET_FPU_vfp,\n-  TARGET_FPU_vfpv2,\n-  TARGET_FPU_vfpv3,\n-  TARGET_FPU_vfpv3_fp16,\n-  TARGET_FPU_vfpv3_d16,\n-  TARGET_FPU_vfpv3_d16_fp16,\n-  TARGET_FPU_vfpv3xd,\n-  TARGET_FPU_vfpv3xd_fp16,\n-  TARGET_FPU_neon,\n-  TARGET_FPU_neon_vfpv3,\n-  TARGET_FPU_neon_fp16,\n-  TARGET_FPU_vfpv4,\n-  TARGET_FPU_neon_vfpv4,\n-  TARGET_FPU_vfpv4_d16,\n-  TARGET_FPU_fpv4_sp_d16,\n-  TARGET_FPU_fpv5_sp_d16,\n-  TARGET_FPU_fpv5_d16,\n-  TARGET_FPU_fp_armv8,\n-  TARGET_FPU_neon_fp_armv8,\n-  TARGET_FPU_crypto_neon_fp_armv8,\n-  TARGET_FPU_vfp3,\n-  TARGET_FPU_auto\n-};"}, {"sha": "38772321341e70fbbb4a00abf9adbd2bd7d1b11f", "filename": "gcc/config/arm/t-arm", "status": "modified", "additions": 20, "deletions": 14, "changes": 34, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5006165236a38c35040a76e676a7ba134e71aa67/gcc%2Fconfig%2Farm%2Ft-arm", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5006165236a38c35040a76e676a7ba134e71aa67/gcc%2Fconfig%2Farm%2Ft-arm", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Ft-arm?ref=5006165236a38c35040a76e676a7ba134e71aa67", "patch": "@@ -18,7 +18,7 @@\n # along with GCC; see the file COPYING3.  If not see\n # <http://www.gnu.org/licenses/>.\n \n-TM_H += $(srcdir)/config/arm/arm-cpu.h\n+TM_H += arm-cpu.h\n \n # All md files - except for arm.md.\n # This list should be kept in alphabetical order and updated whenever an md\n@@ -75,26 +75,32 @@ $(srcdir)/config/arm/arm-tune.md: $(srcdir)/config/arm/parsecpu.awk \\\n $(srcdir)/config/arm/arm-tables.opt: $(srcdir)/config/arm/parsecpu.awk \\\n   $(srcdir)/config/arm/arm-cpus.in\n \t$(AWK) -f $(srcdir)/config/arm/parsecpu.awk -v cmd=opt \\\n-\t\t$(srcdir)/config/arm/arm-cpus.in > \\\n-\t\t$(srcdir)/config/arm/arm-tables.opt\n+\t\t$(srcdir)/config/arm/arm-cpus.in > arm-tables.new\n+\tmv arm-tables.new $(srcdir)/config/arm/arm-tables.opt\n \n-$(srcdir)/config/arm/arm-cpu.h: $(srcdir)/config/arm/parsecpu.awk \\\n+arm-cpu.h: s-arm-cpu ; @true\n+s-arm-cpu: $(srcdir)/config/arm/parsecpu.awk \\\n   $(srcdir)/config/arm/arm-cpus.in\n \t$(AWK) -f $(srcdir)/config/arm/parsecpu.awk -v cmd=headers \\\n-\t\t$(srcdir)/config/arm/arm-cpus.in > arm-cpu.new\n-\tmv arm-cpu.new $(srcdir)/config/arm/arm-cpu.h\n+\t\t$(srcdir)/config/arm/arm-cpus.in > tmp-arm-cpu.h\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-arm-cpu.h arm-cpu.h\n+\t$(STAMP) s-arm-cpu\n \n-$(srcdir)/config/arm/arm-cpu-data.h: $(srcdir)/config/arm/parsecpu.awk \\\n+arm-cpu-data.h: s-arm-data ; @true\n+s-arm-data: $(srcdir)/config/arm/parsecpu.awk \\\n   $(srcdir)/config/arm/arm-cpus.in\n \t$(AWK) -f $(srcdir)/config/arm/parsecpu.awk -v cmd=data \\\n-\t\t$(srcdir)/config/arm/arm-cpus.in > arm-cpu-data.new\n-\tmv arm-cpu-data.new $(srcdir)/config/arm/arm-cpu-data.h\n+\t\t$(srcdir)/config/arm/arm-cpus.in > tmp-arm-cpu-data.h\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-arm-cpu-data.h arm-cpu-data.h\n+\t$(STAMP) s-arm-data\n \n-$(srcdir)/config/arm/arm-cpu-cdata.h: $(srcdir)/config/arm/parsecpu.awk \\\n+arm-cpu-cdata.h: s-arm-cdata ; @true\n+s-arm-cdata: $(srcdir)/config/arm/parsecpu.awk \\\n   $(srcdir)/config/arm/arm-cpus.in\n \t$(AWK) -f $(srcdir)/config/arm/parsecpu.awk -v cmd=common-data \\\n-\t\t$(srcdir)/config/arm/arm-cpus.in > arm-cpu-cdata.new\n-\tmv arm-cpu-cdata.new $(srcdir)/config/arm/arm-cpu-cdata.h\n+\t\t$(srcdir)/config/arm/arm-cpus.in > tmp-arm-cpu-cdata.h\n+\t$(SHELL) $(srcdir)/../move-if-change tmp-arm-cpu-cdata.h arm-cpu-cdata.h\n+\t$(STAMP) s-arm-cdata\n \n aarch-common.o: $(srcdir)/config/arm/aarch-common.c $(CONFIG_H) $(SYSTEM_H) \\\n     coretypes.h $(TM_H) $(TM_P_H) $(RTL_H) $(TREE_H) output.h $(C_COMMON_H)\n@@ -109,7 +115,7 @@ arm.o: $(srcdir)/config/arm/arm.c $(CONFIG_H) $(SYSTEM_H) coretypes.h $(TM_H) \\\n   $(GGC_H) except.h $(C_PRAGMA_H) $(TM_P_H) \\\n   $(TARGET_H) $(TARGET_DEF_H) debug.h langhooks.h $(DF_H) \\\n   intl.h libfuncs.h $(PARAMS_H) $(OPTS_H) sched-int.h \\\n-  $(srcdir)/config/arm/arm-cpu-data.h \\\n+  arm-cpu-data.h \\\n   $(srcdir)/config/arm/arm-protos.h \\\n   $(srcdir)/config/arm/arm_neon_builtins.def \\\n   $(srcdir)/config/arm/arm_vfp_builtins.def\n@@ -130,4 +136,4 @@ arm-c.o: $(srcdir)/config/arm/arm-c.c $(CONFIG_H) $(SYSTEM_H) \\\n \t$(COMPILER) -c $(ALL_COMPILERFLAGS) $(ALL_CPPFLAGS) $(INCLUDES) \\\n \t\t$(srcdir)/config/arm/arm-c.c\n \n-arm-common.o: $(srcdir)/config/arm/arm-cpu-cdata.h\n+arm-common.o: arm-cpu-cdata.h"}]}