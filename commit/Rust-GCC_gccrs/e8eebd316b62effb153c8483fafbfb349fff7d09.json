{"sha": "e8eebd316b62effb153c8483fafbfb349fff7d09", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZThlZWJkMzE2YjYyZWZmYjE1M2M4NDgzZmFmYmZiMzQ5ZmZmN2QwOQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-02-26T23:49:17Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-02-26T23:49:17Z"}, "message": "stmt.c (expand_start_case_dummy): Remove.\n\n\t* stmt.c (expand_start_case_dummy): Remove.\n\t* tree.h: Remove the corresponding prototype.\n\nFrom-SVN: r78534", "tree": {"sha": "71bac986b09f540f856661d7e559ba1374cfc816", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/71bac986b09f540f856661d7e559ba1374cfc816"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e8eebd316b62effb153c8483fafbfb349fff7d09", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8eebd316b62effb153c8483fafbfb349fff7d09", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e8eebd316b62effb153c8483fafbfb349fff7d09", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e8eebd316b62effb153c8483fafbfb349fff7d09/comments", "author": null, "committer": null, "parents": [{"sha": "8f2de5f1d65d9da2352dffeb7096c749d1acf01b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8f2de5f1d65d9da2352dffeb7096c749d1acf01b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8f2de5f1d65d9da2352dffeb7096c749d1acf01b"}], "stats": {"total": 35, "additions": 6, "deletions": 29}, "files": [{"sha": "48af072a4d173b597b66d77a3c9445819fe83ef0", "filename": "gcc/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8eebd316b62effb153c8483fafbfb349fff7d09/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8eebd316b62effb153c8483fafbfb349fff7d09/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e8eebd316b62effb153c8483fafbfb349fff7d09", "patch": "@@ -1,3 +1,8 @@\n+2004-02-26  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* stmt.c (expand_start_case_dummy): Remove.\n+\t* tree.h: Remove the corresponding prototype.\n+\n 2004-02-26  Kazu Hirata  <kazu@cs.umass.edu>\n \n \t* builtins.c (apply_args_register_offset): Remove."}, {"sha": "b3b1f1b5b6bb0127b123060a285a7fcdd19ddfc2", "filename": "gcc/stmt.c", "status": "modified", "additions": 1, "deletions": 28, "changes": 29, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8eebd316b62effb153c8483fafbfb349fff7d09/gcc%2Fstmt.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8eebd316b62effb153c8483fafbfb349fff7d09/gcc%2Fstmt.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fstmt.c?ref=e8eebd316b62effb153c8483fafbfb349fff7d09", "patch": "@@ -220,8 +220,7 @@ struct nesting GTY(())\n \t     conditional branch points.  */\n \t  rtx last_unconditional_cleanup;\n \t} GTY ((tag (\"BLOCK_NESTING\"))) block;\n-      /* For switch (C) or case (Pascal) statements,\n-\t and also for dummies (see `expand_start_case_dummy').  */\n+      /* For switch (C) or case (Pascal) statements.  */\n       struct nesting_case\n \t{\n \t  /* The insn after which the case dispatch should finally\n@@ -4443,32 +4442,6 @@ expand_start_case (int exit_flag, tree expr, tree type,\n \n   start_cleanup_deferral ();\n }\n-\n-/* Start a \"dummy case statement\" within which case labels are invalid\n-   and are not connected to any larger real case statement.\n-   This can be used if you don't want to let a case statement jump\n-   into the middle of certain kinds of constructs.  */\n-\n-void\n-expand_start_case_dummy (void)\n-{\n-  struct nesting *thiscase = ALLOC_NESTING ();\n-\n-  /* Make an entry on case_stack for the dummy.  */\n-\n-  thiscase->desc = CASE_NESTING;\n-  thiscase->next = case_stack;\n-  thiscase->all = nesting_stack;\n-  thiscase->depth = ++nesting_depth;\n-  thiscase->exit_label = 0;\n-  thiscase->data.case_stmt.case_list = 0;\n-  thiscase->data.case_stmt.start = 0;\n-  thiscase->data.case_stmt.nominal_type = 0;\n-  thiscase->data.case_stmt.default_label = 0;\n-  case_stack = thiscase;\n-  nesting_stack = thiscase;\n-  start_cleanup_deferral ();\n-}\n \f\n static void\n check_seenlabel (void)"}, {"sha": "2fe847e7be73bec31192f04c031e62dc00216144", "filename": "gcc/tree.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e8eebd316b62effb153c8483fafbfb349fff7d09/gcc%2Ftree.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e8eebd316b62effb153c8483fafbfb349fff7d09/gcc%2Ftree.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree.h?ref=e8eebd316b62effb153c8483fafbfb349fff7d09", "patch": "@@ -3026,7 +3026,6 @@ extern void expand_decl (tree);\n extern int expand_decl_cleanup (tree, tree);\n extern int expand_decl_cleanup_eh (tree, tree, int);\n extern void expand_anon_union_decl (tree, tree, tree);\n-extern void expand_start_case_dummy (void);\n extern HOST_WIDE_INT all_cases_count (tree, int *);\n extern void check_for_full_enumeration_handling (tree);\n extern void declare_nonlocal_label (tree);"}]}