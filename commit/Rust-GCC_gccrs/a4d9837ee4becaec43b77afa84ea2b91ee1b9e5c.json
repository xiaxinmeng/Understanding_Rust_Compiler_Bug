{"sha": "a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTRkOTgzN2VlNGJlY2FlYzQzYjc3YWZhODRlYTJiOTFlZTFiOWU1Yw==", "commit": {"author": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-11-25T16:14:20Z"}, "committer": {"name": "Richard Sandiford", "email": "richard.sandiford@arm.com", "date": "2020-11-25T16:14:20Z"}, "message": "aarch64: Avoid false dependencies for SVE unary operations\n\nFor calls like:\n\n        z0 = svabs_s8_x (p0, z1)\n\nwe previously generated:\n\n        abs     z0.b, p0/m, z1.b\n\nHowever, this creates a false dependency on z0 (the merge input).\nThis can lead to strange results in some cases, e.g. serialising\nthe operation behind arbitrary earlier operations, or preventing\ntwo iterations of a loop from being executed in parallel.\n\nThis patch therefore ties the input to the output, using a MOVPRFX\nif necessary and possible.  (The SVE2 unary long instructions do\nnot support MOVPRFX.)\n\nWhen testing the patch, I hit a bug in the big-endian SVE move\noptimisation in aarch64_maybe_expand_sve_subreg_move.  I don't\nhave an indepenedent testcase for it, so I didn't split it out\ninto a separate patch.\n\ngcc/\n\t* config/aarch64/aarch64.c (aarch64_maybe_expand_sve_subreg_move):\n\tDo not optimize LRA subregs.\n\t* config/aarch64/aarch64-sve.md\n\t(@aarch64_pred_<SVE_INT_UNARY:optab><mode>): Tie the input to the\n\toutput.\n\t(@aarch64_sve_revbhw_<SVE_ALL:mode><PRED_HSD:mode>): Likewise.\n\t(*<ANY_EXTEND:optab><SVE_PARTIAL_I:mode><SVE_HSDI:mode>2): Likewise.\n\t(@aarch64_pred_sxt<SVE_FULL_HSDI:mode><SVE_PARTIAL_I:mode>): Likewise.\n\t(*cnot<mode>): Likewise.\n\t(@aarch64_pred_<SVE_COND_FP_UNARY:optab><mode>): Likewise.\n\t(@aarch64_sve_<optab>_nontrunc<SVE_FULL_F:mode><SVE_FULL_HSDI:mode>):\n\tLikewise.\n\t(@aarch64_sve_<optab>_trunc<VNx2DF_ONLY:mode><VNx4SI_ONLY:mode>):\n\tLikewise.\n\t(@aarch64_sve_<optab>_nonextend<SVE_FULL_HSDI:mode><SVE_FULL_F:mode>):\n\tLikewise.\n\t(@aarch64_sve_<optab>_extend<VNx4SI_ONLY:mode><VNx2DF_ONLY:mode>):\n\tLikewise.\n\t(@aarch64_sve_<optab>_trunc<SVE_FULL_SDF:mode><SVE_FULL_HSF:mode>):\n\tLikewise.\n\t(@aarch64_sve_<optab>_trunc<VNx4SF_ONLY:mode><VNx8BF_ONLY:mode>):\n\tLikewise.\n\t(@aarch64_sve_<optab>_nontrunc<SVE_FULL_HSF:mode><SVE_FULL_SDF:mode>):\n\tLikewise.\n\t* config/aarch64/aarch64-sve2.md\n\t(@aarch64_pred_<SVE2_COND_FP_UNARY_LONG:sve_fp_op><mode>): Likewise.\n\t(@aarch64_pred_<SVE2_COND_FP_UNARY_NARROWB:sve_fp_op><mode>): Likewise.\n\t(@aarch64_pred_<SVE2_U32_UNARY:sve_int_op><mode>): Likewise.\n\t(@aarch64_pred_<SVE2_COND_INT_UNARY_FP:sve_fp_op><mode>): Likewise.\n\ngcc/testsuite/\n\t* gcc.target/aarch64/sve/acle/asm/abs_f16.c (abs_f16_x_untied): Expect\n\ta MOVPRFX instruction.\n\t* gcc.target/aarch64/sve/acle/asm/abs_f32.c (abs_f32_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/abs_f64.c (abs_f64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/abs_s16.c (abs_s16_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/abs_s32.c (abs_s32_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/abs_s64.c (abs_s64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/abs_s8.c (abs_s8_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cls_s16.c (cls_s16_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cls_s32.c (cls_s32_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cls_s64.c (cls_s64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cls_s8.c (cls_s8_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/clz_s16.c (clz_s16_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/clz_s32.c (clz_s32_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/clz_s64.c (clz_s64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/clz_s8.c (clz_s8_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/clz_u16.c (clz_u16_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/clz_u32.c (clz_u32_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/clz_u64.c (clz_u64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/clz_u8.c (clz_u8_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cnot_s16.c (cnot_s16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/cnot_s32.c (cnot_s32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/cnot_s64.c (cnot_s64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/cnot_s8.c (cnot_s8_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cnot_u16.c (cnot_u16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/cnot_u32.c (cnot_u32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/cnot_u64.c (cnot_u64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/cnot_u8.c (cnot_u8_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cnt_bf16.c (cnt_bf16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/cnt_f16.c (cnt_f16_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cnt_f32.c (cnt_f32_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cnt_f64.c (cnt_f64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cnt_s16.c (cnt_s16_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cnt_s32.c (cnt_s32_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cnt_s64.c (cnt_s64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cnt_s8.c (cnt_s8_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cnt_u16.c (cnt_u16_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cnt_u32.c (cnt_u32_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cnt_u64.c (cnt_u64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cnt_u8.c (cnt_u8_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cvt_bf16.c (cvt_bf16_f32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/cvt_f16.c (cvt_f16_f32_x_untied)\n\t(cvt_f16_f64_x_untied, cvt_f16_s16_x_untied, cvt_f16_s32_x_untied)\n\t(cvt_f16_s64_x_untied, cvt_f16_u16_x_untied, cvt_f16_u32_x_untied)\n\t(cvt_f16_u64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cvt_f32.c (cvt_f32_f16_x_untied)\n\t(cvt_f32_f64_x_untied, cvt_f32_s16_x_untied, cvt_f32_s32_x_untied)\n\t(cvt_f32_s64_x_untied, cvt_f32_u16_x_untied, cvt_f32_u32_x_untied)\n\t(cvt_f32_u64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cvt_f64.c (cvt_f64_f16_x_untied)\n\t(cvt_f64_f32_x_untied, cvt_f64_s16_x_untied, cvt_f64_s32_x_untied)\n\t(cvt_f64_s64_x_untied, cvt_f64_u16_x_untied, cvt_f64_u32_x_untied)\n\t(cvt_f64_u64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cvt_s16.c (cvt_s16_f16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/cvt_s32.c (cvt_s32_f16_x_untied)\n\t(cvt_s32_f32_x_untied, cvt_s32_s64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cvt_s64.c (cvt_s64_f16_x_untied)\n\t(cvt_s64_f32_x_untied, cvt_s64_s64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cvt_u16.c (cvt_u16_f16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/cvt_u32.c (cvt_u32_f16_x_untied)\n\t(cvt_u32_f32_x_untied, cvt_u32_u64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/cvt_u64.c (cvt_u64_f16_x_untied)\n\t(cvt_u64_f32_x_untied, cvt_u64_u64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/extb_s16.c (extb_s16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/extb_s32.c (extb_s32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/extb_s64.c (extb_s64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/exth_s32.c (exth_s32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/exth_s64.c (exth_s64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/extw_s64.c (extw_s64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/neg_f16.c (neg_f16_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/neg_f32.c (neg_f32_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/neg_f64.c (neg_f64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/neg_s16.c (neg_s16_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/neg_s32.c (neg_s32_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/neg_s64.c (neg_s64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/neg_s8.c (neg_s8_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/not_s16.c (not_s16_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/not_s32.c (not_s32_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/not_s64.c (not_s64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/not_s8.c (not_s8_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/not_u16.c (not_u16_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/not_u32.c (not_u32_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/not_u64.c (not_u64_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/not_u8.c (not_u8_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/rbit_s16.c (rbit_s16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rbit_s32.c (rbit_s32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rbit_s64.c (rbit_s64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rbit_s8.c (rbit_s8_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/rbit_u16.c (rbit_u16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rbit_u32.c (rbit_u32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rbit_u64.c (rbit_u64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rbit_u8.c (rbit_u8_x_untied): Ditto.\n\t* gcc.target/aarch64/sve/acle/asm/recpx_f16.c (recpx_f16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/recpx_f32.c (recpx_f32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/recpx_f64.c (recpx_f64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/revb_s16.c (revb_s16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/revb_s32.c (revb_s32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/revb_s64.c (revb_s64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/revb_u16.c (revb_u16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/revb_u32.c (revb_u32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/revb_u64.c (revb_u64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/revh_s32.c (revh_s32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/revh_s64.c (revh_s64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/revh_u32.c (revh_u32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/revh_u64.c (revh_u64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/revw_s64.c (revw_s64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/revw_u64.c (revw_u64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rinta_f16.c (rinta_f16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rinta_f32.c (rinta_f32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rinta_f64.c (rinta_f64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rinti_f16.c (rinti_f16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rinti_f32.c (rinti_f32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rinti_f64.c (rinti_f64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rintm_f16.c (rintm_f16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rintm_f32.c (rintm_f32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rintm_f64.c (rintm_f64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rintn_f16.c (rintn_f16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rintn_f32.c (rintn_f32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rintn_f64.c (rintn_f64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rintp_f16.c (rintp_f16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rintp_f32.c (rintp_f32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rintp_f64.c (rintp_f64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rintx_f16.c (rintx_f16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rintx_f32.c (rintx_f32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rintx_f64.c (rintx_f64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rintz_f16.c (rintz_f16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rintz_f32.c (rintz_f32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/rintz_f64.c (rintz_f64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/sqrt_f16.c (sqrt_f16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/sqrt_f32.c (sqrt_f32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve/acle/asm/sqrt_f64.c (sqrt_f64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve2/acle/asm/cvtx_f32.c (cvtx_f32_f64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve2/acle/asm/logb_f16.c (logb_f16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve2/acle/asm/logb_f32.c (logb_f32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve2/acle/asm/logb_f64.c (logb_f64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve2/acle/asm/qabs_s16.c (qabs_s16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve2/acle/asm/qabs_s32.c (qabs_s32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve2/acle/asm/qabs_s64.c (qabs_s64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve2/acle/asm/qabs_s8.c (qabs_s8_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve2/acle/asm/qneg_s16.c (qneg_s16_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve2/acle/asm/qneg_s32.c (qneg_s32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve2/acle/asm/qneg_s64.c (qneg_s64_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve2/acle/asm/qneg_s8.c (qneg_s8_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve2/acle/asm/recpe_u32.c (recpe_u32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve2/acle/asm/rsqrte_u32.c (rsqrte_u32_x_untied):\n\tDitto.\n\t* gcc.target/aarch64/sve2/acle/asm/cvtlt_f32.c\n\t(cvtlt_f32_f16_x_untied): Expect a MOV instruction.\n\t* gcc.target/aarch64/sve2/acle/asm/cvtlt_f64.c\n\t(cvtlt_f64_f32_x_untied): Likewise.", "tree": {"sha": "5c486722b4551b6236463608f6c267398e3e7a36", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5c486722b4551b6236463608f6c267398e3e7a36"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/comments", "author": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rsandifo-arm", "id": 28043039, "node_id": "MDQ6VXNlcjI4MDQzMDM5", "avatar_url": "https://avatars.githubusercontent.com/u/28043039?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rsandifo-arm", "html_url": "https://github.com/rsandifo-arm", "followers_url": "https://api.github.com/users/rsandifo-arm/followers", "following_url": "https://api.github.com/users/rsandifo-arm/following{/other_user}", "gists_url": "https://api.github.com/users/rsandifo-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/rsandifo-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rsandifo-arm/subscriptions", "organizations_url": "https://api.github.com/users/rsandifo-arm/orgs", "repos_url": "https://api.github.com/users/rsandifo-arm/repos", "events_url": "https://api.github.com/users/rsandifo-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/rsandifo-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4aff491ffcb1312c7745758301df6d22c0c70200", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/4aff491ffcb1312c7745758301df6d22c0c70200", "html_url": "https://github.com/Rust-GCC/gccrs/commit/4aff491ffcb1312c7745758301df6d22c0c70200"}], "stats": {"total": 393, "additions": 319, "deletions": 74}, "files": [{"sha": "6359c40bdecda6c126bd70bef66561dd1da44dc9", "filename": "gcc/config/aarch64/aarch64-sve.md", "status": "modified", "additions": 98, "deletions": 56, "changes": 154, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve.md?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -2925,14 +2925,17 @@\n \n ;; Integer unary arithmetic predicated with a PTRUE.\n (define_insn \"@aarch64_pred_<optab><mode>\"\n-  [(set (match_operand:SVE_I 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:SVE_I 0 \"register_operand\" \"=w, ?&w\")\n \t(unspec:SVE_I\n-\t  [(match_operand:<VPRED> 1 \"register_operand\" \"Upl\")\n+\t  [(match_operand:<VPRED> 1 \"register_operand\" \"Upl, Upl\")\n \t   (SVE_INT_UNARY:SVE_I\n-\t     (match_operand:SVE_I 2 \"register_operand\" \"w\"))]\n+\t     (match_operand:SVE_I 2 \"register_operand\" \"0, w\"))]\n \t  UNSPEC_PRED_X))]\n   \"TARGET_SVE\"\n-  \"<sve_int_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>\"\n+  \"@\n+   <sve_int_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>\n+   movprfx\\t%0, %2\\;<sve_int_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>\"\n+  [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n ;; Predicated integer unary arithmetic with merging.\n@@ -2998,31 +3001,37 @@\n \n ;; Predicated integer unary operations.\n (define_insn \"@aarch64_pred_<optab><mode>\"\n-  [(set (match_operand:SVE_FULL_I 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:SVE_FULL_I 0 \"register_operand\" \"=w, ?&w\")\n \t(unspec:SVE_FULL_I\n-\t  [(match_operand:<VPRED> 1 \"register_operand\" \"Upl\")\n+\t  [(match_operand:<VPRED> 1 \"register_operand\" \"Upl, Upl\")\n \t   (unspec:SVE_FULL_I\n-\t     [(match_operand:SVE_FULL_I 2 \"register_operand\" \"w\")]\n+\t     [(match_operand:SVE_FULL_I 2 \"register_operand\" \"0, w\")]\n \t     SVE_INT_UNARY)]\n \t  UNSPEC_PRED_X))]\n   \"TARGET_SVE && <elem_bits> >= <min_elem_bits>\"\n-  \"<sve_int_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>\"\n+  \"@\n+   <sve_int_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>\n+   movprfx\\t%0, %2\\;<sve_int_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>\"\n+  [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n ;; Another way of expressing the REVB, REVH and REVW patterns, with this\n ;; form being easier for permutes.  The predicate mode determines the number\n ;; of lanes and the data mode decides the granularity of the reversal within\n ;; each lane.\n (define_insn \"@aarch64_sve_revbhw_<SVE_ALL:mode><PRED_HSD:mode>\"\n-  [(set (match_operand:SVE_ALL 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:SVE_ALL 0 \"register_operand\" \"=w, ?&w\")\n \t(unspec:SVE_ALL\n-\t  [(match_operand:PRED_HSD 1 \"register_operand\" \"Upl\")\n+\t  [(match_operand:PRED_HSD 1 \"register_operand\" \"Upl, Upl\")\n \t   (unspec:SVE_ALL\n-\t     [(match_operand:SVE_ALL 2 \"register_operand\" \"w\")]\n+\t     [(match_operand:SVE_ALL 2 \"register_operand\" \"0, w\")]\n \t     UNSPEC_REVBHW)]\n \t  UNSPEC_PRED_X))]\n   \"TARGET_SVE && <PRED_HSD:elem_bits> > <SVE_ALL:container_bits>\"\n-  \"rev<SVE_ALL:Vcwtype>\\t%0.<PRED_HSD:Vetype>, %1/m, %2.<PRED_HSD:Vetype>\"\n+  \"@\n+   rev<SVE_ALL:Vcwtype>\\t%0.<PRED_HSD:Vetype>, %1/m, %2.<PRED_HSD:Vetype>\n+   movprfx\\t%0, %2\\;rev<SVE_ALL:Vcwtype>\\t%0.<PRED_HSD:Vetype>, %1/m, %2.<PRED_HSD:Vetype>\"\n+  [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n ;; Predicated integer unary operations with merging.\n@@ -3071,28 +3080,34 @@\n \n ;; Predicated sign and zero extension from a narrower mode.\n (define_insn \"*<optab><SVE_PARTIAL_I:mode><SVE_HSDI:mode>2\"\n-  [(set (match_operand:SVE_HSDI 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:SVE_HSDI 0 \"register_operand\" \"=w, ?&w\")\n \t(unspec:SVE_HSDI\n-\t  [(match_operand:<SVE_HSDI:VPRED> 1 \"register_operand\" \"Upl\")\n+\t  [(match_operand:<SVE_HSDI:VPRED> 1 \"register_operand\" \"Upl, Upl\")\n \t   (ANY_EXTEND:SVE_HSDI\n-\t     (match_operand:SVE_PARTIAL_I 2 \"register_operand\" \"w\"))]\n+\t     (match_operand:SVE_PARTIAL_I 2 \"register_operand\" \"0, w\"))]\n \t  UNSPEC_PRED_X))]\n   \"TARGET_SVE && (~<SVE_HSDI:narrower_mask> & <SVE_PARTIAL_I:self_mask>) == 0\"\n-  \"<su>xt<SVE_PARTIAL_I:Vesize>\\t%0.<SVE_HSDI:Vetype>, %1/m, %2.<SVE_HSDI:Vetype>\"\n+  \"@\n+   <su>xt<SVE_PARTIAL_I:Vesize>\\t%0.<SVE_HSDI:Vetype>, %1/m, %2.<SVE_HSDI:Vetype>\n+   movprfx\\t%0, %2\\;<su>xt<SVE_PARTIAL_I:Vesize>\\t%0.<SVE_HSDI:Vetype>, %1/m, %2.<SVE_HSDI:Vetype>\"\n+  [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n ;; Predicated truncate-and-sign-extend operations.\n (define_insn \"@aarch64_pred_sxt<SVE_FULL_HSDI:mode><SVE_PARTIAL_I:mode>\"\n-  [(set (match_operand:SVE_FULL_HSDI 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:SVE_FULL_HSDI 0 \"register_operand\" \"=w, ?&w\")\n \t(unspec:SVE_FULL_HSDI\n-\t  [(match_operand:<SVE_FULL_HSDI:VPRED> 1 \"register_operand\" \"Upl\")\n+\t  [(match_operand:<SVE_FULL_HSDI:VPRED> 1 \"register_operand\" \"Upl, Upl\")\n \t   (sign_extend:SVE_FULL_HSDI\n \t     (truncate:SVE_PARTIAL_I\n-\t       (match_operand:SVE_FULL_HSDI 2 \"register_operand\" \"w\")))]\n+\t       (match_operand:SVE_FULL_HSDI 2 \"register_operand\" \"0, w\")))]\n \t  UNSPEC_PRED_X))]\n   \"TARGET_SVE\n    && (~<SVE_FULL_HSDI:narrower_mask> & <SVE_PARTIAL_I:self_mask>) == 0\"\n-  \"sxt<SVE_PARTIAL_I:Vesize>\\t%0.<SVE_FULL_HSDI:Vetype>, %1/m, %2.<SVE_FULL_HSDI:Vetype>\"\n+  \"@\n+   sxt<SVE_PARTIAL_I:Vesize>\\t%0.<SVE_FULL_HSDI:Vetype>, %1/m, %2.<SVE_FULL_HSDI:Vetype>\n+   movprfx\\t%0, %2\\;sxt<SVE_PARTIAL_I:Vesize>\\t%0.<SVE_FULL_HSDI:Vetype>, %1/m, %2.<SVE_FULL_HSDI:Vetype>\"\n+  [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n ;; Predicated truncate-and-sign-extend operations with merging.\n@@ -3212,20 +3227,23 @@\n )\n \n (define_insn \"*cnot<mode>\"\n-  [(set (match_operand:SVE_FULL_I 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:SVE_FULL_I 0 \"register_operand\" \"=w, ?&w\")\n \t(unspec:SVE_FULL_I\n \t  [(unspec:<VPRED>\n-\t     [(match_operand:<VPRED> 1 \"register_operand\" \"Upl\")\n+\t     [(match_operand:<VPRED> 1 \"register_operand\" \"Upl, Upl\")\n \t      (match_operand:SI 5 \"aarch64_sve_ptrue_flag\")\n \t      (eq:<VPRED>\n-\t\t(match_operand:SVE_FULL_I 2 \"register_operand\" \"w\")\n+\t\t(match_operand:SVE_FULL_I 2 \"register_operand\" \"0, w\")\n \t\t(match_operand:SVE_FULL_I 3 \"aarch64_simd_imm_zero\"))]\n \t     UNSPEC_PRED_Z)\n \t   (match_operand:SVE_FULL_I 4 \"aarch64_simd_imm_one\")\n \t   (match_dup 3)]\n \t  UNSPEC_SEL))]\n   \"TARGET_SVE\"\n-  \"cnot\\t%0.<Vetype>, %1/m, %2.<Vetype>\"\n+  \"@\n+   cnot\\t%0.<Vetype>, %1/m, %2.<Vetype>\n+   movprfx\\t%0, %2\\;cnot\\t%0.<Vetype>, %1/m, %2.<Vetype>\"\n+  [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n ;; Predicated logical inverse with merging.\n@@ -3383,14 +3401,17 @@\n \n ;; Predicated floating-point unary operations.\n (define_insn \"@aarch64_pred_<optab><mode>\"\n-  [(set (match_operand:SVE_FULL_F 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:SVE_FULL_F 0 \"register_operand\" \"=w, ?&w\")\n \t(unspec:SVE_FULL_F\n-\t  [(match_operand:<VPRED> 1 \"register_operand\" \"Upl\")\n+\t  [(match_operand:<VPRED> 1 \"register_operand\" \"Upl, Upl\")\n \t   (match_operand:SI 3 \"aarch64_sve_gp_strictness\")\n-\t   (match_operand:SVE_FULL_F 2 \"register_operand\" \"w\")]\n+\t   (match_operand:SVE_FULL_F 2 \"register_operand\" \"0, w\")]\n \t  SVE_COND_FP_UNARY))]\n   \"TARGET_SVE\"\n-  \"<sve_fp_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>\"\n+  \"@\n+   <sve_fp_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>\n+   movprfx\\t%0, %2\\;<sve_fp_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>\"\n+  [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n ;; Predicated floating-point unary arithmetic with merging.\n@@ -8575,26 +8596,32 @@\n \n ;; Predicated float-to-integer conversion, either to the same width or wider.\n (define_insn \"@aarch64_sve_<optab>_nontrunc<SVE_FULL_F:mode><SVE_FULL_HSDI:mode>\"\n-  [(set (match_operand:SVE_FULL_HSDI 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:SVE_FULL_HSDI 0 \"register_operand\" \"=w, ?&w\")\n \t(unspec:SVE_FULL_HSDI\n-\t  [(match_operand:<SVE_FULL_HSDI:VPRED> 1 \"register_operand\" \"Upl\")\n+\t  [(match_operand:<SVE_FULL_HSDI:VPRED> 1 \"register_operand\" \"Upl, Upl\")\n \t   (match_operand:SI 3 \"aarch64_sve_gp_strictness\")\n-\t   (match_operand:SVE_FULL_F 2 \"register_operand\" \"w\")]\n+\t   (match_operand:SVE_FULL_F 2 \"register_operand\" \"0, w\")]\n \t  SVE_COND_FCVTI))]\n   \"TARGET_SVE && <SVE_FULL_HSDI:elem_bits> >= <SVE_FULL_F:elem_bits>\"\n-  \"fcvtz<su>\\t%0.<SVE_FULL_HSDI:Vetype>, %1/m, %2.<SVE_FULL_F:Vetype>\"\n+  \"@\n+   fcvtz<su>\\t%0.<SVE_FULL_HSDI:Vetype>, %1/m, %2.<SVE_FULL_F:Vetype>\n+   movprfx\\t%0, %2\\;fcvtz<su>\\t%0.<SVE_FULL_HSDI:Vetype>, %1/m, %2.<SVE_FULL_F:Vetype>\"\n+  [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n ;; Predicated narrowing float-to-integer conversion.\n (define_insn \"@aarch64_sve_<optab>_trunc<VNx2DF_ONLY:mode><VNx4SI_ONLY:mode>\"\n-  [(set (match_operand:VNx4SI_ONLY 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:VNx4SI_ONLY 0 \"register_operand\" \"=w, ?&w\")\n \t(unspec:VNx4SI_ONLY\n-\t  [(match_operand:VNx2BI 1 \"register_operand\" \"Upl\")\n+\t  [(match_operand:VNx2BI 1 \"register_operand\" \"Upl, Upl\")\n \t   (match_operand:SI 3 \"aarch64_sve_gp_strictness\")\n-\t   (match_operand:VNx2DF_ONLY 2 \"register_operand\" \"w\")]\n+\t   (match_operand:VNx2DF_ONLY 2 \"register_operand\" \"0, w\")]\n \t  SVE_COND_FCVTI))]\n   \"TARGET_SVE\"\n-  \"fcvtz<su>\\t%0.<VNx4SI_ONLY:Vetype>, %1/m, %2.<VNx2DF_ONLY:Vetype>\"\n+  \"@\n+   fcvtz<su>\\t%0.<VNx4SI_ONLY:Vetype>, %1/m, %2.<VNx2DF_ONLY:Vetype>\n+   movprfx\\t%0, %2\\;fcvtz<su>\\t%0.<VNx4SI_ONLY:Vetype>, %1/m, %2.<VNx2DF_ONLY:Vetype>\"\n+  [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n ;; Predicated float-to-integer conversion with merging, either to the same\n@@ -8756,26 +8783,32 @@\n ;; Predicated integer-to-float conversion, either to the same width or\n ;; narrower.\n (define_insn \"@aarch64_sve_<optab>_nonextend<SVE_FULL_HSDI:mode><SVE_FULL_F:mode>\"\n-  [(set (match_operand:SVE_FULL_F 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:SVE_FULL_F 0 \"register_operand\" \"=w, ?&w\")\n \t(unspec:SVE_FULL_F\n-\t  [(match_operand:<SVE_FULL_HSDI:VPRED> 1 \"register_operand\" \"Upl\")\n+\t  [(match_operand:<SVE_FULL_HSDI:VPRED> 1 \"register_operand\" \"Upl, Upl\")\n \t   (match_operand:SI 3 \"aarch64_sve_gp_strictness\")\n-\t   (match_operand:SVE_FULL_HSDI 2 \"register_operand\" \"w\")]\n+\t   (match_operand:SVE_FULL_HSDI 2 \"register_operand\" \"0, w\")]\n \t  SVE_COND_ICVTF))]\n   \"TARGET_SVE && <SVE_FULL_HSDI:elem_bits> >= <SVE_FULL_F:elem_bits>\"\n-  \"<su>cvtf\\t%0.<SVE_FULL_F:Vetype>, %1/m, %2.<SVE_FULL_HSDI:Vetype>\"\n+  \"@\n+   <su>cvtf\\t%0.<SVE_FULL_F:Vetype>, %1/m, %2.<SVE_FULL_HSDI:Vetype>\n+   movprfx\\t%0, %2\\;<su>cvtf\\t%0.<SVE_FULL_F:Vetype>, %1/m, %2.<SVE_FULL_HSDI:Vetype>\"\n+  [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n ;; Predicated widening integer-to-float conversion.\n (define_insn \"@aarch64_sve_<optab>_extend<VNx4SI_ONLY:mode><VNx2DF_ONLY:mode>\"\n-  [(set (match_operand:VNx2DF_ONLY 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:VNx2DF_ONLY 0 \"register_operand\" \"=w, ?&w\")\n \t(unspec:VNx2DF_ONLY\n-\t  [(match_operand:VNx2BI 1 \"register_operand\" \"Upl\")\n+\t  [(match_operand:VNx2BI 1 \"register_operand\" \"Upl, Upl\")\n \t   (match_operand:SI 3 \"aarch64_sve_gp_strictness\")\n-\t   (match_operand:VNx4SI_ONLY 2 \"register_operand\" \"w\")]\n+\t   (match_operand:VNx4SI_ONLY 2 \"register_operand\" \"0, w\")]\n \t  SVE_COND_ICVTF))]\n   \"TARGET_SVE\"\n-  \"<su>cvtf\\t%0.<VNx2DF_ONLY:Vetype>, %1/m, %2.<VNx4SI_ONLY:Vetype>\"\n+  \"@\n+   <su>cvtf\\t%0.<VNx2DF_ONLY:Vetype>, %1/m, %2.<VNx4SI_ONLY:Vetype>\n+   movprfx\\t%0, %2\\;<su>cvtf\\t%0.<VNx2DF_ONLY:Vetype>, %1/m, %2.<VNx4SI_ONLY:Vetype>\"\n+  [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n ;; Predicated integer-to-float conversion with merging, either to the same\n@@ -8948,14 +8981,17 @@\n \n ;; Predicated float-to-float truncation.\n (define_insn \"@aarch64_sve_<optab>_trunc<SVE_FULL_SDF:mode><SVE_FULL_HSF:mode>\"\n-  [(set (match_operand:SVE_FULL_HSF 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:SVE_FULL_HSF 0 \"register_operand\" \"=w, ?&w\")\n \t(unspec:SVE_FULL_HSF\n-\t  [(match_operand:<SVE_FULL_SDF:VPRED> 1 \"register_operand\" \"Upl\")\n+\t  [(match_operand:<SVE_FULL_SDF:VPRED> 1 \"register_operand\" \"Upl, Upl\")\n \t   (match_operand:SI 3 \"aarch64_sve_gp_strictness\")\n-\t   (match_operand:SVE_FULL_SDF 2 \"register_operand\" \"w\")]\n+\t   (match_operand:SVE_FULL_SDF 2 \"register_operand\" \"0, w\")]\n \t  SVE_COND_FCVT))]\n   \"TARGET_SVE && <SVE_FULL_SDF:elem_bits> > <SVE_FULL_HSF:elem_bits>\"\n-  \"fcvt\\t%0.<SVE_FULL_HSF:Vetype>, %1/m, %2.<SVE_FULL_SDF:Vetype>\"\n+  \"@\n+   fcvt\\t%0.<SVE_FULL_HSF:Vetype>, %1/m, %2.<SVE_FULL_SDF:Vetype>\n+   movprfx\\t%0, %2\\;fcvt\\t%0.<SVE_FULL_HSF:Vetype>, %1/m, %2.<SVE_FULL_SDF:Vetype>\"\n+  [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n ;; Predicated float-to-float truncation with merging.\n@@ -9002,14 +9038,17 @@\n \n ;; Predicated BFCVT.\n (define_insn \"@aarch64_sve_<optab>_trunc<VNx4SF_ONLY:mode><VNx8BF_ONLY:mode>\"\n-  [(set (match_operand:VNx8BF_ONLY 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:VNx8BF_ONLY 0 \"register_operand\" \"=w, ?&w\")\n \t(unspec:VNx8BF_ONLY\n-\t  [(match_operand:VNx4BI 1 \"register_operand\" \"Upl\")\n+\t  [(match_operand:VNx4BI 1 \"register_operand\" \"Upl, Upl\")\n \t   (match_operand:SI 3 \"aarch64_sve_gp_strictness\")\n-\t   (match_operand:VNx4SF_ONLY 2 \"register_operand\" \"w\")]\n+\t   (match_operand:VNx4SF_ONLY 2 \"register_operand\" \"0, w\")]\n \t  SVE_COND_FCVT))]\n   \"TARGET_SVE_BF16\"\n-  \"bfcvt\\t%0.h, %1/m, %2.s\"\n+  \"@\n+   bfcvt\\t%0.h, %1/m, %2.s\n+   movprfx\\t%0, %2\\;bfcvt\\t%0.h, %1/m, %2.s\"\n+  [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n ;; Predicated BFCVT with merging.\n@@ -9099,14 +9138,17 @@\n \n ;; Predicated float-to-float extension.\n (define_insn \"@aarch64_sve_<optab>_nontrunc<SVE_FULL_HSF:mode><SVE_FULL_SDF:mode>\"\n-  [(set (match_operand:SVE_FULL_SDF 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:SVE_FULL_SDF 0 \"register_operand\" \"=w, ?&w\")\n \t(unspec:SVE_FULL_SDF\n-\t  [(match_operand:<SVE_FULL_SDF:VPRED> 1 \"register_operand\" \"Upl\")\n+\t  [(match_operand:<SVE_FULL_SDF:VPRED> 1 \"register_operand\" \"Upl, Upl\")\n \t   (match_operand:SI 3 \"aarch64_sve_gp_strictness\")\n-\t   (match_operand:SVE_FULL_HSF 2 \"register_operand\" \"w\")]\n+\t   (match_operand:SVE_FULL_HSF 2 \"register_operand\" \"0, w\")]\n \t  SVE_COND_FCVT))]\n   \"TARGET_SVE && <SVE_FULL_SDF:elem_bits> > <SVE_FULL_HSF:elem_bits>\"\n-  \"fcvt\\t%0.<SVE_FULL_SDF:Vetype>, %1/m, %2.<SVE_FULL_HSF:Vetype>\"\n+  \"@\n+   fcvt\\t%0.<SVE_FULL_SDF:Vetype>, %1/m, %2.<SVE_FULL_HSF:Vetype>\n+   movprfx\\t%0, %2\\;fcvt\\t%0.<SVE_FULL_SDF:Vetype>, %1/m, %2.<SVE_FULL_HSF:Vetype>\"\n+  [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n ;; Predicated float-to-float extension with merging."}, {"sha": "772c35079c9441448534471fba4dba622322b8fc", "filename": "gcc/config/aarch64/aarch64-sve2.md", "status": "modified", "additions": 23, "deletions": 14, "changes": 37, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Fconfig%2Faarch64%2Faarch64-sve2.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Fconfig%2Faarch64%2Faarch64-sve2.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-sve2.md?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -1893,10 +1893,10 @@\n \t(unspec:SVE_FULL_SDF\n \t  [(match_operand:<VPRED> 1 \"register_operand\" \"Upl\")\n \t   (match_operand:SI 3 \"aarch64_sve_gp_strictness\")\n-\t   (match_operand:<VNARROW> 2 \"register_operand\" \"w\")]\n+\t   (match_operand:<VNARROW> 2 \"register_operand\" \"0\")]\n \t  SVE2_COND_FP_UNARY_LONG))]\n   \"TARGET_SVE2\"\n-  \"<sve_fp_op>\\t%0.<Vetype>, %1/m, %2.<Ventype>\"\n+  \"<sve_fp_op>\\t%0.<Vetype>, %1/m, %0.<Ventype>\"\n )\n \n ;; Predicated convert long top with merging.\n@@ -1978,14 +1978,17 @@\n ;; Predicated FCVTX (equivalent to what would be FCVTXNB, except that\n ;; it supports MOVPRFX).\n (define_insn \"@aarch64_pred_<sve_fp_op><mode>\"\n-  [(set (match_operand:VNx4SF_ONLY 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:VNx4SF_ONLY 0 \"register_operand\" \"=w, ?&w\")\n \t(unspec:VNx4SF_ONLY\n-\t  [(match_operand:<VWIDE_PRED> 1 \"register_operand\" \"Upl\")\n+\t  [(match_operand:<VWIDE_PRED> 1 \"register_operand\" \"Upl, Upl\")\n \t   (match_operand:SI 3 \"aarch64_sve_gp_strictness\")\n-\t   (match_operand:<VWIDE> 2 \"register_operand\" \"w\")]\n+\t   (match_operand:<VWIDE> 2 \"register_operand\" \"0, w\")]\n \t  SVE2_COND_FP_UNARY_NARROWB))]\n   \"TARGET_SVE2\"\n-  \"<sve_fp_op>\\t%0.<Vetype>, %1/m, %2.<Vewtype>\"\n+  \"@\n+   <sve_fp_op>\\t%0.<Vetype>, %1/m, %2.<Vewtype>\n+   movprfx\\t%0, %2\\;<sve_fp_op>\\t%0.<Vetype>, %1/m, %2.<Vewtype>\"\n+  [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n ;; Predicated FCVTX with merging.\n@@ -2076,15 +2079,18 @@\n \n ;; Predicated integer unary operations.\n (define_insn \"@aarch64_pred_<sve_int_op><mode>\"\n-  [(set (match_operand:VNx4SI_ONLY 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:VNx4SI_ONLY 0 \"register_operand\" \"=w, ?&w\")\n \t(unspec:VNx4SI_ONLY\n-\t  [(match_operand:<VPRED> 1 \"register_operand\" \"Upl\")\n+\t  [(match_operand:<VPRED> 1 \"register_operand\" \"Upl, Upl\")\n \t   (unspec:VNx4SI_ONLY\n-\t     [(match_operand:VNx4SI_ONLY 2 \"register_operand\" \"w\")]\n+\t     [(match_operand:VNx4SI_ONLY 2 \"register_operand\" \"0, w\")]\n \t     SVE2_U32_UNARY)]\n \t  UNSPEC_PRED_X))]\n   \"TARGET_SVE2\"\n-  \"<sve_int_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>\"\n+  \"@\n+   <sve_int_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>\n+   movprfx\\t%0, %2\\;<sve_int_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>\"\n+  [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n ;; Predicated integer unary operations with merging.\n@@ -2139,14 +2145,17 @@\n \n ;; Predicated FLOGB.\n (define_insn \"@aarch64_pred_<sve_fp_op><mode>\"\n-  [(set (match_operand:<V_INT_EQUIV> 0 \"register_operand\" \"=w\")\n+  [(set (match_operand:<V_INT_EQUIV> 0 \"register_operand\" \"=w, ?&w\")\n \t(unspec:<V_INT_EQUIV>\n-\t  [(match_operand:<VPRED> 1 \"register_operand\" \"Upl\")\n+\t  [(match_operand:<VPRED> 1 \"register_operand\" \"Upl, Upl\")\n \t   (match_operand:SI 3 \"aarch64_sve_gp_strictness\")\n-\t   (match_operand:SVE_FULL_F 2 \"register_operand\" \"w\")]\n+\t   (match_operand:SVE_FULL_F 2 \"register_operand\" \"0, w\")]\n \t  SVE2_COND_INT_UNARY_FP))]\n   \"TARGET_SVE2\"\n-  \"<sve_fp_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>\"\n+  \"@\n+   <sve_fp_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>\n+   movprfx\\t%0, %2\\;<sve_fp_op>\\t%0.<Vetype>, %1/m, %2.<Vetype>\"\n+  [(set_attr \"movprfx\" \"*,yes\")]\n )\n \n ;; Predicated FLOGB with merging."}, {"sha": "3189dfb90f93706034634a3fe686a10961607d0c", "filename": "gcc/config/aarch64/aarch64.c", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Fconfig%2Faarch64%2Faarch64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Fconfig%2Faarch64%2Faarch64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -5390,9 +5390,35 @@ bool\n aarch64_maybe_expand_sve_subreg_move (rtx dest, rtx src)\n {\n   gcc_assert (BYTES_BIG_ENDIAN);\n-  if (SUBREG_P (dest))\n+\n+  /* Do not try to optimize subregs that LRA has created for matched\n+     reloads.  These subregs only exist as a temporary measure to make\n+     the RTL well-formed, but they are exempt from the usual\n+     TARGET_CAN_CHANGE_MODE_CLASS rules.\n+\n+     For example, if we have:\n+\n+       (set (reg:VNx8HI R1) (foo:VNx8HI (reg:VNx4SI R2)))\n+\n+     and the constraints require R1 and R2 to be in the same register,\n+     LRA may need to create RTL such as:\n+\n+       (set (subreg:VNx4SI (reg:VNx8HI TMP) 0) (reg:VNx4SI R2))\n+       (set (reg:VNx8HI TMP) (foo:VNx8HI (subreg:VNx4SI (reg:VNx8HI TMP) 0)))\n+       (set (reg:VNx8HI R1) (reg:VNx8HI TMP))\n+\n+     which forces both the input and output of the original instruction\n+     to use the same hard register.  But for this to work, the normal\n+     rules have to be suppressed on the subreg input, otherwise LRA\n+     would need to reload that input too, meaning that the process\n+     would never terminate.  To compensate for this, the normal rules\n+     are also suppressed for the subreg output of the first move.\n+     Ignoring the special case and handling the first move normally\n+     would therefore generate wrong code: we would reverse the elements\n+     for the first subreg but not reverse them back for the second subreg.  */\n+  if (SUBREG_P (dest) && !LRA_SUBREG_P (dest))\n     dest = SUBREG_REG (dest);\n-  if (SUBREG_P (src))\n+  if (SUBREG_P (src) && !LRA_SUBREG_P (src))\n     src = SUBREG_REG (src);\n \n   /* The optimization handles two single SVE REGs with different element"}, {"sha": "09605324cd2a0e3c40d22fd34ad666d0bd98cf2c", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/abs_f16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_f16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (abs_f16_x_tied1, svfloat16_t,\n \n /*\n ** abs_f16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfabs\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "797a4187af941858a7cd603d10c3f5bac9b67715", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/abs_f32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_f32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (abs_f32_x_tied1, svfloat32_t,\n \n /*\n ** abs_f32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfabs\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "4290ac390d1bc4b5a542ac536b9705cb25b2156f", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/abs_f64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_f64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_f64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_f64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (abs_f64_x_tied1, svfloat64_t,\n \n /*\n ** abs_f64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfabs\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "fcd5c3413bfdc6274bff006d42f0e869f9750f47", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/abs_s16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_s16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (abs_s16_x_tied1, svint16_t,\n \n /*\n ** abs_s16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tabs\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "58d183ed9403060f474fc2e970e1008767cd609b", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/abs_s32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_s32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (abs_s32_x_tied1, svint32_t,\n \n /*\n ** abs_s32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tabs\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "2842048d4eb8548015d25a05499e5079e6e8924c", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/abs_s64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_s64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (abs_s64_x_tied1, svint64_t,\n \n /*\n ** abs_s64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tabs\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "ec0d89d8ba9c0ba806a6842ca59c632fdd33cdc9", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/abs_s8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fabs_s8.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (abs_s8_x_tied1, svint8_t,\n \n /*\n ** abs_s8_x_untied:\n+**\tmovprfx\tz0, z1\n **\tabs\tz0\\.b, p0/m, z1\\.b\n **\tret\n */"}, {"sha": "5f82612c97a1c6db14ac69521f80bca6dc53c27d", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cls_s16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcls_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcls_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcls_s16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (cls_s16_z, svuint16_t, svint16_t,\n \n /*\n ** cls_s16_x:\n+**\tmovprfx\tz0, z4\n **\tcls\tz0\\.h, p0/m, z4\\.h\n **\tret\n */"}, {"sha": "0db651f2e290966b057b8b4b48f3b5cd9dd3c0c9", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cls_s32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcls_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcls_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcls_s32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (cls_s32_z, svuint32_t, svint32_t,\n \n /*\n ** cls_s32_x:\n+**\tmovprfx\tz0, z4\n **\tcls\tz0\\.s, p0/m, z4\\.s\n **\tret\n */"}, {"sha": "e809e2fb2ab2f0d66f645dda139d1d3db39f9e59", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cls_s64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcls_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcls_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcls_s64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (cls_s64_z, svuint64_t, svint64_t,\n \n /*\n ** cls_s64_x:\n+**\tmovprfx\tz0, z4\n **\tcls\tz0\\.d, p0/m, z4\\.d\n **\tret\n */"}, {"sha": "f296c9f932ff320cb8b9a07fbaff9c10e26082db", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cls_s8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcls_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcls_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcls_s8.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (cls_s8_z, svuint8_t, svint8_t,\n \n /*\n ** cls_s8_x:\n+**\tmovprfx\tz0, z4\n **\tcls\tz0\\.b, p0/m, z4\\.b\n **\tret\n */"}, {"sha": "dc2c4e952f7514dcd0b3fd8fa85ff38d22d9ecbc", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/clz_s16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_s16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (clz_s16_z, svuint16_t, svint16_t,\n \n /*\n ** clz_s16_x:\n+**\tmovprfx\tz0, z4\n **\tclz\tz0\\.h, p0/m, z4\\.h\n **\tret\n */"}, {"sha": "17f54bcd05673610d3f13165540e05771597e58d", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/clz_s32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_s32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (clz_s32_z, svuint32_t, svint32_t,\n \n /*\n ** clz_s32_x:\n+**\tmovprfx\tz0, z4\n **\tclz\tz0\\.s, p0/m, z4\\.s\n **\tret\n */"}, {"sha": "a42b730c5641ae1a26b2341e00f97a892c7245c3", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/clz_s64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_s64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (clz_s64_z, svuint64_t, svint64_t,\n \n /*\n ** clz_s64_x:\n+**\tmovprfx\tz0, z4\n **\tclz\tz0\\.d, p0/m, z4\\.d\n **\tret\n */"}, {"sha": "66c23594f0535a8d365a3f736cee28657679fd2d", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/clz_s8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_s8.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (clz_s8_z, svuint8_t, svint8_t,\n \n /*\n ** clz_s8_x:\n+**\tmovprfx\tz0, z4\n **\tclz\tz0\\.b, p0/m, z4\\.b\n **\tret\n */"}, {"sha": "ab31f567aee603b94cb38d09d3a4d174f38cd521", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/clz_u16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_u16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (clz_u16_x_tied1, svuint16_t,\n \n /*\n ** clz_u16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tclz\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "2a7440455a82394b638781e0d30d1104ae75a363", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/clz_u32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_u32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (clz_u32_x_tied1, svuint32_t,\n \n /*\n ** clz_u32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tclz\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "8ff73c424098c8f5005ee7697a64e5310c9e7e6e", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/clz_u64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_u64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_u64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_u64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (clz_u64_x_tied1, svuint64_t,\n \n /*\n ** clz_u64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tclz\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "89d8c54079c9d4bf22df75e4e79187c11c26790b", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/clz_u8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fclz_u8.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (clz_u8_x_tied1, svuint8_t,\n \n /*\n ** clz_u8_x_untied:\n+**\tmovprfx\tz0, z1\n **\tclz\tz0\\.b, p0/m, z1\\.b\n **\tret\n */"}, {"sha": "8f047fbbc0a8d75e3db559f8f035f22657415603", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnot_s16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_s16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (cnot_s16_x_tied1, svint16_t,\n \n /*\n ** cnot_s16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tcnot\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "f5b33959da27c3069099c83b7bcdb4afe1018d35", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnot_s32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_s32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (cnot_s32_x_tied1, svint32_t,\n \n /*\n ** cnot_s32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tcnot\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "64121e3f0e189b4782048a180f93cb2fe6652ef5", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnot_s64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_s64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (cnot_s64_x_tied1, svint64_t,\n \n /*\n ** cnot_s64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tcnot\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "e5dab42ad5ec2ffa04bf888188423214ea44cd7e", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnot_s8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_s8.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (cnot_s8_x_tied1, svint8_t,\n \n /*\n ** cnot_s8_x_untied:\n+**\tmovprfx\tz0, z1\n **\tcnot\tz0\\.b, p0/m, z1\\.b\n **\tret\n */"}, {"sha": "74c72c9ee0f9da49f94045e433f25d2c7682f7cc", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnot_u16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_u16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (cnot_u16_x_tied1, svuint16_t,\n \n /*\n ** cnot_u16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tcnot\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "b0f7531ee08704e3cb6920e299b8151e0fd1b202", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnot_u32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_u32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (cnot_u32_x_tied1, svuint32_t,\n \n /*\n ** cnot_u32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tcnot\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "9aa698dfbbf86e80dcbab5be816ff15421a91a52", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnot_u64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_u64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_u64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_u64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (cnot_u64_x_tied1, svuint64_t,\n \n /*\n ** cnot_u64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tcnot\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "67c46a2dd81d8835fadf19a1e7cb95a85b47cdd4", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnot_u8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnot_u8.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (cnot_u8_x_tied1, svuint8_t,\n \n /*\n ** cnot_u8_x_untied:\n+**\tmovprfx\tz0, z1\n **\tcnot\tz0\\.b, p0/m, z1\\.b\n **\tret\n */"}, {"sha": "bebf361283440a3679241cf4d4761fd58a66ef8d", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnt_bf16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_bf16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_bf16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_bf16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (cnt_bf16_z, svuint16_t, svbfloat16_t,\n \n /*\n ** cnt_bf16_x:\n+**\tmovprfx\tz0, z4\n **\tcnt\tz0\\.h, p0/m, z4\\.h\n **\tret\n */"}, {"sha": "20c95d62121a203a61d73a8e21d613ffd9975382", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnt_f16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_f16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (cnt_f16_z, svuint16_t, svfloat16_t,\n \n /*\n ** cnt_f16_x:\n+**\tmovprfx\tz0, z4\n **\tcnt\tz0\\.h, p0/m, z4\\.h\n **\tret\n */"}, {"sha": "8afeb49da4f9bd75a2bb1a1e7053c9a590acb40c", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnt_f32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_f32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (cnt_f32_z, svuint32_t, svfloat32_t,\n \n /*\n ** cnt_f32_x:\n+**\tmovprfx\tz0, z4\n **\tcnt\tz0\\.s, p0/m, z4\\.s\n **\tret\n */"}, {"sha": "b7683a97f68e51e1aa60832e453973c700edb4b6", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnt_f64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_f64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_f64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_f64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (cnt_f64_z, svuint64_t, svfloat64_t,\n \n /*\n ** cnt_f64_x:\n+**\tmovprfx\tz0, z4\n **\tcnt\tz0\\.d, p0/m, z4\\.d\n **\tret\n */"}, {"sha": "824c42ad549dacb12be1c594fa16d45dde5b59b7", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnt_s16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_s16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (cnt_s16_z, svuint16_t, svint16_t,\n \n /*\n ** cnt_s16_x:\n+**\tmovprfx\tz0, z4\n **\tcnt\tz0\\.h, p0/m, z4\\.h\n **\tret\n */"}, {"sha": "d6653d57e00b323044701294b28b80cb717f33ea", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnt_s32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_s32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (cnt_s32_z, svuint32_t, svint32_t,\n \n /*\n ** cnt_s32_x:\n+**\tmovprfx\tz0, z4\n **\tcnt\tz0\\.s, p0/m, z4\\.s\n **\tret\n */"}, {"sha": "c28db82dc2144f08104690cf6eae0bf7327841d6", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnt_s64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_s64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (cnt_s64_z, svuint64_t, svint64_t,\n \n /*\n ** cnt_s64_x:\n+**\tmovprfx\tz0, z4\n **\tcnt\tz0\\.d, p0/m, z4\\.d\n **\tret\n */"}, {"sha": "e741b4c93327d54bb76216431212d6a47547b220", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnt_s8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_s8.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (cnt_s8_z, svuint8_t, svint8_t,\n \n /*\n ** cnt_s8_x:\n+**\tmovprfx\tz0, z4\n **\tcnt\tz0\\.b, p0/m, z4\\.b\n **\tret\n */"}, {"sha": "49236cd2cdcd4c1a245a19d46be4a2c0ac954c22", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnt_u16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_u16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (cnt_u16_x_tied1, svuint16_t,\n \n /*\n ** cnt_u16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tcnt\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "d302e323023da39f379cb9290c30733f127f526d", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnt_u32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_u32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (cnt_u32_x_tied1, svuint32_t,\n \n /*\n ** cnt_u32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tcnt\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "b6e26ba1725cb15a58084f30b19496b6a07f0d1c", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnt_u64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_u64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_u64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_u64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (cnt_u64_x_tied1, svuint64_t,\n \n /*\n ** cnt_u64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tcnt\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "464dc4e8c31dc6d15306883122c0ec747406d3a9", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cnt_u8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcnt_u8.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (cnt_u8_x_tied1, svuint8_t,\n \n /*\n ** cnt_u8_x_untied:\n+**\tmovprfx\tz0, z1\n **\tcnt\tz0\\.b, p0/m, z1\\.b\n **\tret\n */"}, {"sha": "d4f9150728a8af4ef0c1312274a8abb68ea788c3", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cvt_bf16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_bf16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_bf16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_bf16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -66,6 +66,7 @@ TEST_DUAL_Z_REV (cvt_bf16_f32_x_tied1, svbfloat16_t, svfloat32_t,\n \n /*\n ** cvt_bf16_f32_x_untied:\n+**\tmovprfx\tz0, z4\n **\tbfcvt\tz0\\.h, p0/m, z4\\.s\n **\tret\n */"}, {"sha": "dbb042d46dfd8e352a8d071288e4fcbe4ad574bd", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cvt_f16.c", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_f16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -421,6 +421,7 @@ TEST_DUAL_Z_REV (cvt_f16_f32_x_tied1, svfloat16_t, svfloat32_t,\n \n /*\n ** cvt_f16_f32_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvt\tz0\\.h, p0/m, z4\\.s\n **\tret\n */\n@@ -439,6 +440,7 @@ TEST_DUAL_Z_REV (cvt_f16_f64_x_tied1, svfloat16_t, svfloat64_t,\n \n /*\n ** cvt_f16_f64_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvt\tz0\\.h, p0/m, z4\\.d\n **\tret\n */\n@@ -457,6 +459,7 @@ TEST_DUAL_Z_REV (cvt_f16_s16_x_tied1, svfloat16_t, svint16_t,\n \n /*\n ** cvt_f16_s16_x_untied:\n+**\tmovprfx\tz0, z4\n **\tscvtf\tz0\\.h, p0/m, z4\\.h\n **\tret\n */\n@@ -475,6 +478,7 @@ TEST_DUAL_Z_REV (cvt_f16_s32_x_tied1, svfloat16_t, svint32_t,\n \n /*\n ** cvt_f16_s32_x_untied:\n+**\tmovprfx\tz0, z4\n **\tscvtf\tz0\\.h, p0/m, z4\\.s\n **\tret\n */\n@@ -493,6 +497,7 @@ TEST_DUAL_Z_REV (cvt_f16_s64_x_tied1, svfloat16_t, svint64_t,\n \n /*\n ** cvt_f16_s64_x_untied:\n+**\tmovprfx\tz0, z4\n **\tscvtf\tz0\\.h, p0/m, z4\\.d\n **\tret\n */\n@@ -511,6 +516,7 @@ TEST_DUAL_Z_REV (cvt_f16_u16_x_tied1, svfloat16_t, svuint16_t,\n \n /*\n ** cvt_f16_u16_x_untied:\n+**\tmovprfx\tz0, z4\n **\tucvtf\tz0\\.h, p0/m, z4\\.h\n **\tret\n */\n@@ -529,6 +535,7 @@ TEST_DUAL_Z_REV (cvt_f16_u32_x_tied1, svfloat16_t, svuint32_t,\n \n /*\n ** cvt_f16_u32_x_untied:\n+**\tmovprfx\tz0, z4\n **\tucvtf\tz0\\.h, p0/m, z4\\.s\n **\tret\n */\n@@ -547,6 +554,7 @@ TEST_DUAL_Z_REV (cvt_f16_u64_x_tied1, svfloat16_t, svuint64_t,\n \n /*\n ** cvt_f16_u64_x_untied:\n+**\tmovprfx\tz0, z4\n **\tucvtf\tz0\\.h, p0/m, z4\\.d\n **\tret\n */"}, {"sha": "f7bfe57ada4c5c6a152c497b9e997e73118264f4", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cvt_f32.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_f32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -319,6 +319,7 @@ TEST_DUAL_Z_REV (cvt_f32_f16_x_tied1, svfloat32_t, svfloat16_t,\n \n /*\n ** cvt_f32_f16_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvt\tz0\\.s, p0/m, z4\\.h\n **\tret\n */\n@@ -337,6 +338,7 @@ TEST_DUAL_Z_REV (cvt_f32_f64_x_tied1, svfloat32_t, svfloat64_t,\n \n /*\n ** cvt_f32_f64_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvt\tz0\\.s, p0/m, z4\\.d\n **\tret\n */\n@@ -355,6 +357,7 @@ TEST_DUAL_Z_REV (cvt_f32_s32_x_tied1, svfloat32_t, svint32_t,\n \n /*\n ** cvt_f32_s32_x_untied:\n+**\tmovprfx\tz0, z4\n **\tscvtf\tz0\\.s, p0/m, z4\\.s\n **\tret\n */\n@@ -373,6 +376,7 @@ TEST_DUAL_Z_REV (cvt_f32_s64_x_tied1, svfloat32_t, svint64_t,\n \n /*\n ** cvt_f32_s64_x_untied:\n+**\tmovprfx\tz0, z4\n **\tscvtf\tz0\\.s, p0/m, z4\\.d\n **\tret\n */\n@@ -391,6 +395,7 @@ TEST_DUAL_Z_REV (cvt_f32_u32_x_tied1, svfloat32_t, svuint32_t,\n \n /*\n ** cvt_f32_u32_x_untied:\n+**\tmovprfx\tz0, z4\n **\tucvtf\tz0\\.s, p0/m, z4\\.s\n **\tret\n */\n@@ -409,6 +414,7 @@ TEST_DUAL_Z_REV (cvt_f32_u64_x_tied1, svfloat32_t, svuint64_t,\n \n /*\n ** cvt_f32_u64_x_untied:\n+**\tmovprfx\tz0, z4\n **\tucvtf\tz0\\.s, p0/m, z4\\.d\n **\tret\n */"}, {"sha": "bfa36baf2807dc8d9b83e3d13afb81376edf85c9", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cvt_f64.c", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_f64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_f64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_f64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -319,6 +319,7 @@ TEST_DUAL_Z_REV (cvt_f64_f16_x_tied1, svfloat64_t, svfloat16_t,\n \n /*\n ** cvt_f64_f16_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvt\tz0\\.d, p0/m, z4\\.h\n **\tret\n */\n@@ -337,6 +338,7 @@ TEST_DUAL_Z_REV (cvt_f64_f32_x_tied1, svfloat64_t, svfloat32_t,\n \n /*\n ** cvt_f64_f32_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvt\tz0\\.d, p0/m, z4\\.s\n **\tret\n */\n@@ -355,6 +357,7 @@ TEST_DUAL_Z_REV (cvt_f64_s32_x_tied1, svfloat64_t, svint32_t,\n \n /*\n ** cvt_f64_s32_x_untied:\n+**\tmovprfx\tz0, z4\n **\tscvtf\tz0\\.d, p0/m, z4\\.s\n **\tret\n */\n@@ -373,6 +376,7 @@ TEST_DUAL_Z_REV (cvt_f64_s64_x_tied1, svfloat64_t, svint64_t,\n \n /*\n ** cvt_f64_s64_x_untied:\n+**\tmovprfx\tz0, z4\n **\tscvtf\tz0\\.d, p0/m, z4\\.d\n **\tret\n */\n@@ -391,6 +395,7 @@ TEST_DUAL_Z_REV (cvt_f64_u32_x_tied1, svfloat64_t, svuint32_t,\n \n /*\n ** cvt_f64_u32_x_untied:\n+**\tmovprfx\tz0, z4\n **\tucvtf\tz0\\.d, p0/m, z4\\.s\n **\tret\n */\n@@ -409,6 +414,7 @@ TEST_DUAL_Z_REV (cvt_f64_u64_x_tied1, svfloat64_t, svuint64_t,\n \n /*\n ** cvt_f64_u64_x_untied:\n+**\tmovprfx\tz0, z4\n **\tucvtf\tz0\\.d, p0/m, z4\\.d\n **\tret\n */"}, {"sha": "6b6883be8dbf005de689ebc2a65bdb20a84cc59e", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cvt_s16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_s16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -64,6 +64,7 @@ TEST_DUAL_Z_REV (cvt_s16_f16_x_tied1, svint16_t, svfloat16_t,\n \n /*\n ** cvt_s16_f16_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvtzs\tz0\\.h, p0/m, z4\\.h\n **\tret\n */"}, {"sha": "bf87356d505c7765a26109e1c6b115a4e8bd95af", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cvt_s32.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_s32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -166,6 +166,7 @@ TEST_DUAL_Z_REV (cvt_s32_f16_x_tied1, svint32_t, svfloat16_t,\n \n /*\n ** cvt_s32_f16_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvtzs\tz0\\.s, p0/m, z4\\.h\n **\tret\n */\n@@ -184,6 +185,7 @@ TEST_DUAL_Z_REV (cvt_s32_f32_x_tied1, svint32_t, svfloat32_t,\n \n /*\n ** cvt_s32_f32_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvtzs\tz0\\.s, p0/m, z4\\.s\n **\tret\n */\n@@ -202,6 +204,7 @@ TEST_DUAL_Z_REV (cvt_s32_f64_x_tied1, svint32_t, svfloat64_t,\n \n /*\n ** cvt_s32_f64_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvtzs\tz0\\.s, p0/m, z4\\.d\n **\tret\n */"}, {"sha": "9be3e05386fe2c984da95688458ce500c30945b8", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cvt_s64.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_s64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -166,6 +166,7 @@ TEST_DUAL_Z_REV (cvt_s64_f16_x_tied1, svint64_t, svfloat16_t,\n \n /*\n ** cvt_s64_f16_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvtzs\tz0\\.d, p0/m, z4\\.h\n **\tret\n */\n@@ -184,6 +185,7 @@ TEST_DUAL_Z_REV (cvt_s64_f32_x_tied1, svint64_t, svfloat32_t,\n \n /*\n ** cvt_s64_f32_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvtzs\tz0\\.d, p0/m, z4\\.s\n **\tret\n */\n@@ -202,6 +204,7 @@ TEST_DUAL_Z_REV (cvt_s64_f64_x_tied1, svint64_t, svfloat64_t,\n \n /*\n ** cvt_s64_f64_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvtzs\tz0\\.d, p0/m, z4\\.d\n **\tret\n */"}, {"sha": "33a608b01fbb1f2a29c649284673f2695f5a6fe6", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cvt_u16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_u16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -64,6 +64,7 @@ TEST_DUAL_Z_REV (cvt_u16_f16_x_tied1, svuint16_t, svfloat16_t,\n \n /*\n ** cvt_u16_f16_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvtzu\tz0\\.h, p0/m, z4\\.h\n **\tret\n */"}, {"sha": "4791d2798fc31a3bc5cb231ca1720eea3cbd9bda", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cvt_u32.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_u32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -166,6 +166,7 @@ TEST_DUAL_Z_REV (cvt_u32_f16_x_tied1, svuint32_t, svfloat16_t,\n \n /*\n ** cvt_u32_f16_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvtzu\tz0\\.s, p0/m, z4\\.h\n **\tret\n */\n@@ -184,6 +185,7 @@ TEST_DUAL_Z_REV (cvt_u32_f32_x_tied1, svuint32_t, svfloat32_t,\n \n /*\n ** cvt_u32_f32_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvtzu\tz0\\.s, p0/m, z4\\.s\n **\tret\n */\n@@ -202,6 +204,7 @@ TEST_DUAL_Z_REV (cvt_u32_f64_x_tied1, svuint32_t, svfloat64_t,\n \n /*\n ** cvt_u32_f64_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvtzu\tz0\\.s, p0/m, z4\\.d\n **\tret\n */"}, {"sha": "e6c10c19b658fc2eb802608f2910b6048242d180", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/cvt_u64.c", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_u64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_u64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fcvt_u64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -166,6 +166,7 @@ TEST_DUAL_Z_REV (cvt_u64_f16_x_tied1, svuint64_t, svfloat16_t,\n \n /*\n ** cvt_u64_f16_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvtzu\tz0\\.d, p0/m, z4\\.h\n **\tret\n */\n@@ -184,6 +185,7 @@ TEST_DUAL_Z_REV (cvt_u64_f32_x_tied1, svuint64_t, svfloat32_t,\n \n /*\n ** cvt_u64_f32_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvtzu\tz0\\.d, p0/m, z4\\.s\n **\tret\n */\n@@ -202,6 +204,7 @@ TEST_DUAL_Z_REV (cvt_u64_f64_x_tied1, svuint64_t, svfloat64_t,\n \n /*\n ** cvt_u64_f64_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvtzu\tz0\\.d, p0/m, z4\\.d\n **\tret\n */"}, {"sha": "76c71437dc1b4409fbae4bed204f1e4e26a69a31", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/extb_s16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fextb_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fextb_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fextb_s16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (extb_s16_x_tied1, svint16_t,\n \n /*\n ** extb_s16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tsxtb\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "084c1c19b32ebf5365c9f249daf1452434fc416c", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/extb_s32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fextb_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fextb_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fextb_s32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (extb_s32_x_tied1, svint32_t,\n \n /*\n ** extb_s32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tsxtb\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "8f3ee8d053bb31457af8e633d064fc0e1524517c", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/extb_s64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fextb_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fextb_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fextb_s64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (extb_s64_x_tied1, svint64_t,\n \n /*\n ** extb_s64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tsxtb\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "d15cf7a62cd24d1bf1f2857b800e63253d11538e", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/exth_s32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fexth_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fexth_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fexth_s32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (exth_s32_x_tied1, svint32_t,\n \n /*\n ** exth_s32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tsxth\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "d8adf52efa20f5814845f073fda19316f92eea97", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/exth_s64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fexth_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fexth_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fexth_s64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (exth_s64_x_tied1, svint64_t,\n \n /*\n ** exth_s64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tsxth\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "978a622e09f80afd3f22045533a0aa5b41246e3a", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/extw_s64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fextw_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fextw_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fextw_s64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (extw_s64_x_tied1, svint64_t,\n \n /*\n ** extw_s64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tsxtw\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "c43c6eb7a196e9baf69a52a7080262d5d0545618", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/neg_f16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_f16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (neg_f16_x_tied1, svfloat16_t,\n \n /*\n ** neg_f16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfneg\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "3e9fd5b46f57bb4fa0e945019a09f4fe985dc796", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/neg_f32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_f32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (neg_f32_x_tied1, svfloat32_t,\n \n /*\n ** neg_f32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfneg\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "880f5e8867f61868936c6842525809c5146ba30a", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/neg_f64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_f64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_f64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_f64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (neg_f64_x_tied1, svfloat64_t,\n \n /*\n ** neg_f64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfneg\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "6a43bb20c37fa6dcce0ed06cbe2b9a3d11836733", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/neg_s16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_s16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (neg_s16_x_tied1, svint16_t,\n \n /*\n ** neg_s16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tneg\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "ea92412b5f8fe5f9b27958056ad39ad80aa7d445", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/neg_s32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_s32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (neg_s32_x_tied1, svint32_t,\n \n /*\n ** neg_s32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tneg\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "911d1f3db16b5f18dac8839f8e8017a38dee9ca8", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/neg_s64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_s64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (neg_s64_x_tied1, svint64_t,\n \n /*\n ** neg_s64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tneg\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "ace74b747b2dc7b3df85b626fd68d41e63fcc809", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/neg_s8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fneg_s8.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (neg_s8_x_tied1, svint8_t,\n \n /*\n ** neg_s8_x_untied:\n+**\tmovprfx\tz0, z1\n **\tneg\tz0\\.b, p0/m, z1\\.b\n **\tret\n */"}, {"sha": "9cafba96ea5a41bfc65f4077473f24af67093760", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/not_s16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_s16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (not_s16_x_tied1, svint16_t,\n \n /*\n ** not_s16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tnot\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "2185b783125181f41a6a667a0b46fdb5cdb5af5b", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/not_s32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_s32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (not_s32_x_tied1, svint32_t,\n \n /*\n ** not_s32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tnot\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "09b3c2558527014f1ea70abae800846827b960e2", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/not_s64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_s64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (not_s64_x_tied1, svint64_t,\n \n /*\n ** not_s64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tnot\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "029909e5cfd8f81c453d103f00efa950da056233", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/not_s8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_s8.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (not_s8_x_tied1, svint8_t,\n \n /*\n ** not_s8_x_untied:\n+**\tmovprfx\tz0, z1\n **\tnot\tz0\\.b, p0/m, z1\\.b\n **\tret\n */"}, {"sha": "fc33c99fffb3e214147164c883508f9c4d0244c6", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/not_u16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_u16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (not_u16_x_tied1, svuint16_t,\n \n /*\n ** not_u16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tnot\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "3f5e822ac94fe8b7402a4e19be10f2fe2c330110", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/not_u32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_u32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (not_u32_x_tied1, svuint32_t,\n \n /*\n ** not_u32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tnot\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "01dde36ec43ba2db23c7b5341e20aba7c63b0919", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/not_u64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_u64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_u64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_u64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (not_u64_x_tied1, svuint64_t,\n \n /*\n ** not_u64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tnot\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "e8553e3935ca99cd3ce29a69d7769393f701a970", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/not_u8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fnot_u8.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (not_u8_x_tied1, svuint8_t,\n \n /*\n ** not_u8_x_untied:\n+**\tmovprfx\tz0, z1\n **\tnot\tz0\\.b, p0/m, z1\\.b\n **\tret\n */"}, {"sha": "5889c92ff6d10f198fb093bf0abeb4136e0d39d2", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rbit_s16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_s16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rbit_s16_x_tied1, svint16_t,\n \n /*\n ** rbit_s16_x_untied:\n+**\tmovprfx\tz0, z1\n **\trbit\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "1414e3e35ecdff3fddaf7b3770347126c42eab1d", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rbit_s32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_s32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rbit_s32_x_tied1, svint32_t,\n \n /*\n ** rbit_s32_x_untied:\n+**\tmovprfx\tz0, z1\n **\trbit\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "3b76f5483a02c19d0d92aab5f40e5a8b3c0fd111", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rbit_s64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_s64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rbit_s64_x_tied1, svint64_t,\n \n /*\n ** rbit_s64_x_untied:\n+**\tmovprfx\tz0, z1\n **\trbit\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "1fc80e34ce74159a891652933ef6ef5eb4954c66", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rbit_s8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_s8.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rbit_s8_x_tied1, svint8_t,\n \n /*\n ** rbit_s8_x_untied:\n+**\tmovprfx\tz0, z1\n **\trbit\tz0\\.b, p0/m, z1\\.b\n **\tret\n */"}, {"sha": "647933723472bc4c3397db8d4f05bf5555246f92", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rbit_u16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_u16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rbit_u16_x_tied1, svuint16_t,\n \n /*\n ** rbit_u16_x_untied:\n+**\tmovprfx\tz0, z1\n **\trbit\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "3e959642a33420cd158dbcb96ea63e59612c0806", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rbit_u32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_u32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rbit_u32_x_tied1, svuint32_t,\n \n /*\n ** rbit_u32_x_untied:\n+**\tmovprfx\tz0, z1\n **\trbit\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "5163b82b35c7ab354d915569d28ea4d0f9a1be1c", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rbit_u64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_u64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_u64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_u64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rbit_u64_x_tied1, svuint64_t,\n \n /*\n ** rbit_u64_x_untied:\n+**\tmovprfx\tz0, z1\n **\trbit\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "2372398c7e14751424a717feee47d5e19539d3c0", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rbit_u8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_u8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_u8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frbit_u8.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rbit_u8_x_tied1, svuint8_t,\n \n /*\n ** rbit_u8_x_untied:\n+**\tmovprfx\tz0, z1\n **\trbit\tz0\\.b, p0/m, z1\\.b\n **\tret\n */"}, {"sha": "da63f267dd3238dde08db95cc6972dcba4485a31", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/recpx_f16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frecpx_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frecpx_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frecpx_f16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (recpx_f16_x_tied1, svfloat16_t,\n \n /*\n ** recpx_f16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrecpx\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "ea8cb785367b2474c4626aeab728892e337b6ea4", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/recpx_f32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frecpx_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frecpx_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frecpx_f32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (recpx_f32_x_tied1, svfloat32_t,\n \n /*\n ** recpx_f32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrecpx\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "1eaca67a2d23d59578711f35019488b711fd171f", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/recpx_f64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frecpx_f64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frecpx_f64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frecpx_f64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (recpx_f64_x_tied1, svfloat64_t,\n \n /*\n ** recpx_f64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrecpx\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "a99260f0f30e12e251ef174b89684dcbe9eaf6da", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/revb_s16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevb_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevb_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevb_s16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (revb_s16_x_tied1, svint16_t,\n \n /*\n ** revb_s16_x_untied:\n+**\tmovprfx\tz0, z1\n **\trevb\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "adbf1286129ac602a7602a8f1e941fc82d9d7bc1", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/revb_s32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevb_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevb_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevb_s32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (revb_s32_x_tied1, svint32_t,\n \n /*\n ** revb_s32_x_untied:\n+**\tmovprfx\tz0, z1\n **\trevb\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "d21db75bf20cbb00496630d34c21460f35b8621c", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/revb_s64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevb_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevb_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevb_s64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (revb_s64_x_tied1, svint64_t,\n \n /*\n ** revb_s64_x_untied:\n+**\tmovprfx\tz0, z1\n **\trevb\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "d48704f819ddbc9b5f80fc42befe9f46fd8c2d3e", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/revb_u16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevb_u16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevb_u16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevb_u16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (revb_u16_x_tied1, svuint16_t,\n \n /*\n ** revb_u16_x_untied:\n+**\tmovprfx\tz0, z1\n **\trevb\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "cf9293bfb33284a8408be027a3d1eda50feab658", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/revb_u32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevb_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevb_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevb_u32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (revb_u32_x_tied1, svuint32_t,\n \n /*\n ** revb_u32_x_untied:\n+**\tmovprfx\tz0, z1\n **\trevb\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "54db72dab2f4fffdfb582b30e4f282b44c2af6f7", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/revb_u64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevb_u64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevb_u64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevb_u64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (revb_u64_x_tied1, svuint64_t,\n \n /*\n ** revb_u64_x_untied:\n+**\tmovprfx\tz0, z1\n **\trevb\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "fb63c17d70235482c80cf78131f2e5ce015cfeba", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/revh_s32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevh_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevh_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevh_s32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (revh_s32_x_tied1, svint32_t,\n \n /*\n ** revh_s32_x_untied:\n+**\tmovprfx\tz0, z1\n **\trevh\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "967600ad6236597668f899e3ce7b34fdfea0f007", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/revh_s64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevh_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevh_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevh_s64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (revh_s64_x_tied1, svint64_t,\n \n /*\n ** revh_s64_x_untied:\n+**\tmovprfx\tz0, z1\n **\trevh\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "265f865b57f492ba11d198c2f693d05e70ae27d0", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/revh_u32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevh_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevh_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevh_u32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (revh_u32_x_tied1, svuint32_t,\n \n /*\n ** revh_u32_x_untied:\n+**\tmovprfx\tz0, z1\n **\trevh\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "733b229b9ecfecc2b7c2b9be41ae0f0dad650393", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/revh_u64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevh_u64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevh_u64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevh_u64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (revh_u64_x_tied1, svuint64_t,\n \n /*\n ** revh_u64_x_untied:\n+**\tmovprfx\tz0, z1\n **\trevh\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "08941314c5a388ceebb6ce703bfbb7acf70221f7", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/revw_s64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevw_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevw_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevw_s64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (revw_s64_x_tied1, svint64_t,\n \n /*\n ** revw_s64_x_untied:\n+**\tmovprfx\tz0, z1\n **\trevw\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "ebde929b2c61ab438f3b08c58e7d18c145a93526", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/revw_u64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevw_u64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevw_u64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frevw_u64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (revw_u64_x_tied1, svuint64_t,\n \n /*\n ** revw_u64_x_untied:\n+**\tmovprfx\tz0, z1\n **\trevw\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "3e1a788045c3f4b13d0a584773c1647c6f120152", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rinta_f16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frinta_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frinta_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frinta_f16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rinta_f16_x_tied1, svfloat16_t,\n \n /*\n ** rinta_f16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrinta\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "ae6fe659cbebc4d13febbf851a2920a4363ebfed", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rinta_f32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frinta_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frinta_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frinta_f32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rinta_f32_x_tied1, svfloat32_t,\n \n /*\n ** rinta_f32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrinta\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "2f7be6c46de3bc43101ba41de2c378f45e76cda5", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rinta_f64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frinta_f64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frinta_f64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frinta_f64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rinta_f64_x_tied1, svfloat64_t,\n \n /*\n ** rinta_f64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrinta\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "ec3b908f9fc11e992a9ba0d1e0bc070938b6fcd5", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rinti_f16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frinti_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frinti_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frinti_f16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rinti_f16_x_tied1, svfloat16_t,\n \n /*\n ** rinti_f16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrinti\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "061f5c8253db4fc13c1217c397cdfb99dbbdb299", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rinti_f32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frinti_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frinti_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frinti_f32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rinti_f32_x_tied1, svfloat32_t,\n \n /*\n ** rinti_f32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrinti\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "eca3be0816ef417fedc177de7f9afa0d730c8e22", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rinti_f64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frinti_f64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frinti_f64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frinti_f64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rinti_f64_x_tied1, svfloat64_t,\n \n /*\n ** rinti_f64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrinti\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "35cb97610d09f6171f265d89ad848f3617628e28", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rintm_f16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintm_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintm_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintm_f16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rintm_f16_x_tied1, svfloat16_t,\n \n /*\n ** rintm_f16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrintm\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "d65baf562c5384d9c1de1c713c882b816e02ffaa", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rintm_f32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintm_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintm_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintm_f32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rintm_f32_x_tied1, svfloat32_t,\n \n /*\n ** rintm_f32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrintm\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "d3824ecd3bd52023600b2a9bba5321a987600dd4", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rintm_f64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintm_f64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintm_f64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintm_f64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rintm_f64_x_tied1, svfloat64_t,\n \n /*\n ** rintm_f64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrintm\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "cc2bf0ee281db84d918b93349a70f85dec5c83e8", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rintn_f16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintn_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintn_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintn_f16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rintn_f16_x_tied1, svfloat16_t,\n \n /*\n ** rintn_f16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrintn\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "aa0c65acdaa6e731a7a7dcd8fa4a43395e8ebf62", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rintn_f32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintn_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintn_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintn_f32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rintn_f32_x_tied1, svfloat32_t,\n \n /*\n ** rintn_f32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrintn\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "a9317adec15b6b535aafb7a0d0d030343c29cf67", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rintn_f64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintn_f64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintn_f64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintn_f64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rintn_f64_x_tied1, svfloat64_t,\n \n /*\n ** rintn_f64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrintn\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "f511452e9a72783634b5b355122dc2ce3ed497fe", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rintp_f16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintp_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintp_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintp_f16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rintp_f16_x_tied1, svfloat16_t,\n \n /*\n ** rintp_f16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrintp\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "34596c4b07f9f1bb4786c239ec32f6ee976f5e81", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rintp_f32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintp_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintp_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintp_f32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rintp_f32_x_tied1, svfloat32_t,\n \n /*\n ** rintp_f32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrintp\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "a68a5791bbc9d6543ef9ec652cea28282dfaac35", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rintp_f64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintp_f64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintp_f64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintp_f64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rintp_f64_x_tied1, svfloat64_t,\n \n /*\n ** rintp_f64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrintp\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "a86e0630d3a24ce6256df439b6145deaedb3cb24", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rintx_f16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintx_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintx_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintx_f16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rintx_f16_x_tied1, svfloat16_t,\n \n /*\n ** rintx_f16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrintx\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "956515025c3f6ba7d1eeab83fbe7206bbdb25ec6", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rintx_f32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintx_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintx_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintx_f32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rintx_f32_x_tied1, svfloat32_t,\n \n /*\n ** rintx_f32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrintx\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "a5c7a01ac773087533b0bb5de4422b0a93af35fc", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rintx_f64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintx_f64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintx_f64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintx_f64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rintx_f64_x_tied1, svfloat64_t,\n \n /*\n ** rintx_f64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrintx\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "cb61080db286c7f127bb441405d6790e010db5af", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rintz_f16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintz_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintz_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintz_f16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rintz_f16_x_tied1, svfloat16_t,\n \n /*\n ** rintz_f16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrintz\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "a479909b96e2427fe9dc68185da1f0f97decd3fe", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rintz_f32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintz_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintz_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintz_f32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rintz_f32_x_tied1, svfloat32_t,\n \n /*\n ** rintz_f32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrintz\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "f80f9078263af75b1f612d22b611e5ea3b677661", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/rintz_f64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintz_f64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintz_f64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Frintz_f64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rintz_f64_x_tied1, svfloat64_t,\n \n /*\n ** rintz_f64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfrintz\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "335fb86bc9d33143dfc150f03948ccd1773d6e11", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/sqrt_f16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fsqrt_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fsqrt_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fsqrt_f16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (sqrt_f16_x_tied1, svfloat16_t,\n \n /*\n ** sqrt_f16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfsqrt\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "0887996799db0c86951393a89b4fd2c56883471c", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/sqrt_f32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fsqrt_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fsqrt_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fsqrt_f32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (sqrt_f32_x_tied1, svfloat32_t,\n \n /*\n ** sqrt_f32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfsqrt\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "7dbab87919dc92e740cfad203334d544b7d08583", "filename": "gcc/testsuite/gcc.target/aarch64/sve/acle/asm/sqrt_f64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fsqrt_f64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fsqrt_f64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve%2Facle%2Fasm%2Fsqrt_f64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (sqrt_f64_x_tied1, svfloat64_t,\n \n /*\n ** sqrt_f64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tfsqrt\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "f66fa901340cdb8e6d27ef4772d402950a44e2c1", "filename": "gcc/testsuite/gcc.target/aarch64/sve2/acle/asm/cvtlt_f32.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fcvtlt_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fcvtlt_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fcvtlt_f32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -42,7 +42,13 @@ TEST_DUAL_Z_REV (cvtlt_f32_f16_x_tied1, svfloat32_t, svfloat16_t,\n \n /*\n ** cvtlt_f32_f16_x_untied:\n-**\tfcvtlt\tz0\\.s, p0/m, z4\\.h\n+** (\n+**\tmov\tz0\\.d, z4\\.d\n+**\tfcvtlt\tz0\\.s, p0/m, z0\\.h\n+** |\n+**\tfcvtlt\tz4\\.s, p0/m, z4\\.h\n+**\tmov\tz0\\.d, z4\\.d\n+** )\n **\tret\n */\n TEST_DUAL_Z (cvtlt_f32_f16_x_untied, svfloat32_t, svfloat16_t,"}, {"sha": "b262e2533cf7d7156b5e08d667e518fc4c770225", "filename": "gcc/testsuite/gcc.target/aarch64/sve2/acle/asm/cvtlt_f64.c", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fcvtlt_f64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fcvtlt_f64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fcvtlt_f64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -42,7 +42,13 @@ TEST_DUAL_Z_REV (cvtlt_f64_f32_x_tied1, svfloat64_t, svfloat32_t,\n \n /*\n ** cvtlt_f64_f32_x_untied:\n-**\tfcvtlt\tz0\\.d, p0/m, z4\\.s\n+** (\n+**\tmov\tz0\\.d, z4\\.d\n+**\tfcvtlt\tz0\\.d, p0/m, z0\\.s\n+** |\n+**\tfcvtlt\tz4\\.d, p0/m, z4\\.s\n+**\tmov\tz0\\.d, z4\\.d\n+** )\n **\tret\n */\n TEST_DUAL_Z (cvtlt_f64_f32_x_untied, svfloat64_t, svfloat32_t,"}, {"sha": "85fbc79387582f6a5938e106b71e8b65764a8e0c", "filename": "gcc/testsuite/gcc.target/aarch64/sve2/acle/asm/cvtx_f32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fcvtx_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fcvtx_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fcvtx_f32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -64,6 +64,7 @@ TEST_DUAL_Z_REV (cvtx_f32_f64_x_tied1, svfloat32_t, svfloat64_t,\n \n /*\n ** cvtx_f32_f64_x_untied:\n+**\tmovprfx\tz0, z4\n **\tfcvtx\tz0\\.s, p0/m, z4\\.d\n **\tret\n */"}, {"sha": "fe65e640facb1b5e7d7ef33341d4440bba012c72", "filename": "gcc/testsuite/gcc.target/aarch64/sve2/acle/asm/logb_f16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Flogb_f16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Flogb_f16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Flogb_f16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (logb_f16_z, svint16_t, svfloat16_t,\n \n /*\n ** logb_f16_x:\n+**\tmovprfx\tz0, z4\n **\tflogb\tz0\\.h, p0/m, z4\\.h\n **\tret\n */"}, {"sha": "847e1b13507da3064ca0a4f2bb5484da9ad6b0aa", "filename": "gcc/testsuite/gcc.target/aarch64/sve2/acle/asm/logb_f32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Flogb_f32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Flogb_f32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Flogb_f32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (logb_f32_z, svint32_t, svfloat32_t,\n \n /*\n ** logb_f32_x:\n+**\tmovprfx\tz0, z4\n **\tflogb\tz0\\.s, p0/m, z4\\.s\n **\tret\n */"}, {"sha": "4113a37a6120e4ac7178b72c3fd7d8f2a72ee0d5", "filename": "gcc/testsuite/gcc.target/aarch64/sve2/acle/asm/logb_f64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Flogb_f64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Flogb_f64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Flogb_f64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -33,6 +33,7 @@ TEST_DUAL_Z (logb_f64_z, svint64_t, svfloat64_t,\n \n /*\n ** logb_f64_x:\n+**\tmovprfx\tz0, z4\n **\tflogb\tz0\\.d, p0/m, z4\\.d\n **\tret\n */"}, {"sha": "d7acf47c48fa383ecded38054b1cf539419408ea", "filename": "gcc/testsuite/gcc.target/aarch64/sve2/acle/asm/qabs_s16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqabs_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqabs_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqabs_s16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (qabs_s16_x_tied1, svint16_t,\n \n /*\n ** qabs_s16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tsqabs\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "fc35d1043a2a46e97919eb5eb24ac31ef4f91d4e", "filename": "gcc/testsuite/gcc.target/aarch64/sve2/acle/asm/qabs_s32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqabs_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqabs_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqabs_s32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (qabs_s32_x_tied1, svint32_t,\n \n /*\n ** qabs_s32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tsqabs\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "b572785c965b351ae150723261d9c1fcb51818af", "filename": "gcc/testsuite/gcc.target/aarch64/sve2/acle/asm/qabs_s64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqabs_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqabs_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqabs_s64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (qabs_s64_x_tied1, svint64_t,\n \n /*\n ** qabs_s64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tsqabs\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "48b85605e15af75cb2e541d02af2582c3d512b0e", "filename": "gcc/testsuite/gcc.target/aarch64/sve2/acle/asm/qabs_s8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqabs_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqabs_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqabs_s8.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (qabs_s8_x_tied1, svint8_t,\n \n /*\n ** qabs_s8_x_untied:\n+**\tmovprfx\tz0, z1\n **\tsqabs\tz0\\.b, p0/m, z1\\.b\n **\tret\n */"}, {"sha": "d8b6c87ed7c2e9088af12e4a42a0d8926d1255a7", "filename": "gcc/testsuite/gcc.target/aarch64/sve2/acle/asm/qneg_s16.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqneg_s16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqneg_s16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqneg_s16.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (qneg_s16_x_tied1, svint16_t,\n \n /*\n ** qneg_s16_x_untied:\n+**\tmovprfx\tz0, z1\n **\tsqneg\tz0\\.h, p0/m, z1\\.h\n **\tret\n */"}, {"sha": "2342504f4d928c744b7e288427d801a666c6baca", "filename": "gcc/testsuite/gcc.target/aarch64/sve2/acle/asm/qneg_s32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqneg_s32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqneg_s32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqneg_s32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (qneg_s32_x_tied1, svint32_t,\n \n /*\n ** qneg_s32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tsqneg\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "61ccb981fce3c26b2554989821357a9c36655650", "filename": "gcc/testsuite/gcc.target/aarch64/sve2/acle/asm/qneg_s64.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqneg_s64.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqneg_s64.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqneg_s64.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (qneg_s64_x_tied1, svint64_t,\n \n /*\n ** qneg_s64_x_untied:\n+**\tmovprfx\tz0, z1\n **\tsqneg\tz0\\.d, p0/m, z1\\.d\n **\tret\n */"}, {"sha": "c7ec6116bb6482949d9befb67e1f4cdf1b2eebae", "filename": "gcc/testsuite/gcc.target/aarch64/sve2/acle/asm/qneg_s8.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqneg_s8.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqneg_s8.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Fqneg_s8.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (qneg_s8_x_tied1, svint8_t,\n \n /*\n ** qneg_s8_x_untied:\n+**\tmovprfx\tz0, z1\n **\tsqneg\tz0\\.b, p0/m, z1\\.b\n **\tret\n */"}, {"sha": "c484cec63daf7d4d64cf1a1b907aa71c809d0a67", "filename": "gcc/testsuite/gcc.target/aarch64/sve2/acle/asm/recpe_u32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Frecpe_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Frecpe_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Frecpe_u32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (recpe_u32_x_tied1, svuint32_t,\n \n /*\n ** recpe_u32_x_untied:\n+**\tmovprfx\tz0, z1\n **\turecpe\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}, {"sha": "082a810722ec2fe903912486e21970b9bd66322c", "filename": "gcc/testsuite/gcc.target/aarch64/sve2/acle/asm/rsqrte_u32.c", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Frsqrte_u32.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Frsqrte_u32.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fsve2%2Facle%2Fasm%2Frsqrte_u32.c?ref=a4d9837ee4becaec43b77afa84ea2b91ee1b9e5c", "patch": "@@ -73,6 +73,7 @@ TEST_UNIFORM_Z (rsqrte_u32_x_tied1, svuint32_t,\n \n /*\n ** rsqrte_u32_x_untied:\n+**\tmovprfx\tz0, z1\n **\tursqrte\tz0\\.s, p0/m, z1\\.s\n **\tret\n */"}]}