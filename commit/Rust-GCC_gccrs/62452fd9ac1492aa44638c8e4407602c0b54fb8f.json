{"sha": "62452fd9ac1492aa44638c8e4407602c0b54fb8f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjI0NTJmZDlhYzE0OTJhYTQ0NjM4YzhlNDQwNzYwMmMwYjU0ZmI4Zg==", "commit": {"author": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-16T06:46:56Z"}, "committer": {"name": "Richard Stallman", "email": "rms@gnu.org", "date": "1992-03-16T06:46:56Z"}, "message": "*** empty log message ***\n\nFrom-SVN: r498", "tree": {"sha": "e6994580d1eb26599f4506092f5df5cbde80b500", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/e6994580d1eb26599f4506092f5df5cbde80b500"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/62452fd9ac1492aa44638c8e4407602c0b54fb8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62452fd9ac1492aa44638c8e4407602c0b54fb8f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/62452fd9ac1492aa44638c8e4407602c0b54fb8f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/62452fd9ac1492aa44638c8e4407602c0b54fb8f/comments", "author": null, "committer": null, "parents": [{"sha": "af35aeb289edbb673349d8ee865140c9bf86263f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/af35aeb289edbb673349d8ee865140c9bf86263f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/af35aeb289edbb673349d8ee865140c9bf86263f"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "e377d83ab7c54ac0b3f0ee30cd837158fae14b6d", "filename": "gcc/crtstuff.c", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/62452fd9ac1492aa44638c8e4407602c0b54fb8f/gcc%2Fcrtstuff.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/62452fd9ac1492aa44638c8e4407602c0b54fb8f/gcc%2Fcrtstuff.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcrtstuff.c?ref=62452fd9ac1492aa44638c8e4407602c0b54fb8f", "patch": "@@ -74,6 +74,16 @@ static void force_to_text () { }\n \n asm (INIT_SECTION_ASM_OP);\t/* cc1 doesn't know that we are switching! */\n \n+/* On some svr4 systems, the .init section preamble code provided in\n+   crti.o may do some evil things which we have to undo before we reach\n+   the function prologue code for __do_global_ctors (directly below).\n+   For such systems, define the macro INIT_SECTION_PREAMBLE to\n+   expand into the code needed to undo the actions of the crti.o file.  */\n+   \n+#ifdef INIT_SECTION_PREAMBLE\n+  INIT_SECTION_PREAMBLE;\n+#endif\n+\n /* A routine to invoke all of the global constructors upon entry to the\n    program.  We put this into the .init section (for systems that have\n    such a thing) so that we can properly perform the construction of"}]}