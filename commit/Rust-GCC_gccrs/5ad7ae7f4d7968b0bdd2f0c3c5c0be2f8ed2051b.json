{"sha": "5ad7ae7f4d7968b0bdd2f0c3c5c0be2f8ed2051b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWFkN2FlN2Y0ZDc5NjhiMGJkZDJmMGMzYzVjMGJlMmY4ZWQyMDUxYg==", "commit": {"author": {"name": "Ben Elliston", "email": "bje@au.ibm.com", "date": "2004-04-29T04:26:51Z"}, "committer": {"name": "Ben Elliston", "email": "bje@gcc.gnu.org", "date": "2004-04-29T04:26:51Z"}, "message": "invoke.texi (Objective-C Dialect Options): Don't prefix options with \"-\" in the option index.\n\n\t* doc/invoke.texi (Objective-C Dialect Options): Don't prefix\n\toptions with \"-\" in the option index.\n\t(SPARC Options): Likewise.\n\t(M32R/D Options): Likewise.\n\nFrom-SVN: r81272", "tree": {"sha": "38c4e4bb63d69d1f9b2619058322e7500d71e4e6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/38c4e4bb63d69d1f9b2619058322e7500d71e4e6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5ad7ae7f4d7968b0bdd2f0c3c5c0be2f8ed2051b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ad7ae7f4d7968b0bdd2f0c3c5c0be2f8ed2051b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5ad7ae7f4d7968b0bdd2f0c3c5c0be2f8ed2051b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5ad7ae7f4d7968b0bdd2f0c3c5c0be2f8ed2051b/comments", "author": null, "committer": null, "parents": [{"sha": "c4b8e5de4bcdbe7d9769b047e3d9ac8a4a6bf512", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c4b8e5de4bcdbe7d9769b047e3d9ac8a4a6bf512", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c4b8e5de4bcdbe7d9769b047e3d9ac8a4a6bf512"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "317e6fe5481f56de714736cb34f4cce8ad795645", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ad7ae7f4d7968b0bdd2f0c3c5c0be2f8ed2051b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ad7ae7f4d7968b0bdd2f0c3c5c0be2f8ed2051b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5ad7ae7f4d7968b0bdd2f0c3c5c0be2f8ed2051b", "patch": "@@ -1,3 +1,10 @@\n+2004-04-28  Ben Elliston  <bje@au.ibm.com>\n+\n+\t* doc/invoke.texi (Objective-C Dialect Options): Don't prefix\n+\toptions with \"-\" in the option index.\n+\t(SPARC Options): Likewise.\n+\t(M32R/D Options): Likewise.\n+\n 2004-04-28  Kaveh R. Ghazi  <ghazi@caip.rutgers.edu>\n \n \t* convert.c (convert_to_integer): Convert (long)round -> lround,"}, {"sha": "7cba693f4c67fa8de9efa5fb3ad8426690c00644", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5ad7ae7f4d7968b0bdd2f0c3c5c0be2f8ed2051b/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5ad7ae7f4d7968b0bdd2f0c3c5c0be2f8ed2051b/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=5ad7ae7f4d7968b0bdd2f0c3c5c0be2f8ed2051b", "patch": "@@ -1764,15 +1764,15 @@ for NeXT-based systems, including Darwin and Mac OS X@.  The macro\n used.\n \n @item -fno-nil-receivers\n-@opindex -fno-nil-receivers\n+@opindex fno-nil-receivers\n Assume that all Objective-C message dispatches (e.g.,\n @code{[receiver message:arg]}) in this translation unit ensure that the receiver\n is not @code{nil}.  This allows for more efficient entry points in the runtime to be\n used.  Currently, this option is only available in conjunction with\n the NeXT runtime on Mac OS X 10.3 and later.\n \n @item -fobjc-exceptions\n-@opindex -fobjc-exceptions\n+@opindex fobjc-exceptions\n Enable syntactic support for structured exception handling in Objective-C,\n similar to what is offered by C++ and Java.  Currently, this option is only\n available in conjunction with the NeXT runtime on Mac OS X 10.3 and later.\n@@ -1864,7 +1864,7 @@ Unlike Java, Objective-C does not allow for entire methods to be marked\n to be unlocked properly.\n \n @item -freplace-objc-classes\n-@opindex -freplace-objc-classes\n+@opindex freplace-objc-classes\n Emit a special marker instructing @command{ld(1)} not to statically link in\n the resulting object file, and allow @command{dyld(1)} to load it in at\n run time instead.  This is used in conjunction with the Fix-and-Continue\n@@ -1875,7 +1875,7 @@ is only available in conjunction with the NeXT runtime on Mac OS X 10.3\n and later.\n \n @item -fzero-link\n-@opindex -fzero-link\n+@opindex fzero-link\n When compiling for the NeXT runtime, the compiler ordinarily replaces calls\n to @code{objc_getClass(\"@dots{}\")} (when the name of the class is known at\n compile time) with static class references that get initialized at load time,\n@@ -1926,7 +1926,7 @@ compilation.  This also enforces the coding style convention\n that methods and selectors must be declared before being used.\n \n @item -print-objc-runtime-info\n-@opindex -print-objc-runtime-info\n+@opindex print-objc-runtime-info\n Generate C header describing the largest structure that is passed by\n value, if any.\n \n@@ -6393,17 +6393,17 @@ that select a particular cpu implementation.  Those are @samp{cypress},\n \n @item -mv8plus\n @itemx -mno-v8plus\n-@opindex -mv8plus\n-@opindex -mno-v8plus\n+@opindex mv8plus\n+@opindex mno-v8plus\n With @option{-mv8plus}, GCC generates code for the SPARC-V8+ ABI.  The\n difference from the V8 ABI is that the global and out registers are\n considered 64-bit wide.  This is enabled by default on Solaris in 32-bit\n mode for all SPARC-V9 processors.\n \n @item -mvis\n @itemx -mno-vis\n-@opindex -mvis\n-@opindex -mno-vis\n+@opindex mvis\n+@opindex mno-vis\n With @option{-mvis}, GCC generates code that takes advantage of the UltraSPARC\n Visual Instruction Set extensions.  The default is @option{-mno-vis}.\n @end table\n@@ -6947,7 +6947,7 @@ doesn't the linker will give an error message---incorrect code will not be\n generated.\n \n @item -mdebug\n-@opindex -mdebug\n+@opindex mdebug\n Makes the M32R specific code in the compiler display some statistics\n that might help in debugging programs.\n "}]}