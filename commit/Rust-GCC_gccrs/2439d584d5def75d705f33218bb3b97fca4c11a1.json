{"sha": "2439d584d5def75d705f33218bb3b97fca4c11a1", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjQzOWQ1ODRkNWRlZjc1ZDcwNWYzMzIxOGJiM2I5N2ZjYTRjMTFhMQ==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2019-11-20T10:40:09Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2019-11-20T10:40:09Z"}, "message": "re PR tree-optimization/92537 (ICE in vect_slp_analyze_node_operations, at tree-vect-slp.c:2775)\n\n2019-11-20  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/92537\n\t* tree-vect-slp.c (vect_analyze_slp_instance): Move CTOR\n\tvectorization validity check...\n\t(vect_slp_analyze_operations): ... here.\n\n\t* gfortran.dg/pr92537.f90: New testcase.\n\nFrom-SVN: r278494", "tree": {"sha": "07fae0689db0680a112fbd2041a35ce49b536373", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/07fae0689db0680a112fbd2041a35ce49b536373"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2439d584d5def75d705f33218bb3b97fca4c11a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2439d584d5def75d705f33218bb3b97fca4c11a1", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2439d584d5def75d705f33218bb3b97fca4c11a1", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2439d584d5def75d705f33218bb3b97fca4c11a1/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "8d8ae265dcabd1c864bdab7139558cc131a980d9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8d8ae265dcabd1c864bdab7139558cc131a980d9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8d8ae265dcabd1c864bdab7139558cc131a980d9"}], "stats": {"total": 63, "additions": 50, "deletions": 13}, "files": [{"sha": "796056ed9458e4efe93cba6a6b6d2019aed200a6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2439d584d5def75d705f33218bb3b97fca4c11a1/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2439d584d5def75d705f33218bb3b97fca4c11a1/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2439d584d5def75d705f33218bb3b97fca4c11a1", "patch": "@@ -1,3 +1,10 @@\n+2019-11-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/92537\n+\t* tree-vect-slp.c (vect_analyze_slp_instance): Move CTOR\n+\tvectorization validity check...\n+\t(vect_slp_analyze_operations): ... here.\n+\n 2019-11-20  Claudiu Zissulescu  <claziss@synopsys.com>\n \n \t* config/arc/arc-protos.h (make_pass_arc_ifcvt): Declare."}, {"sha": "a4de5d1e0b730e08365e591054c5696841b4f73c", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2439d584d5def75d705f33218bb3b97fca4c11a1/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2439d584d5def75d705f33218bb3b97fca4c11a1/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2439d584d5def75d705f33218bb3b97fca4c11a1", "patch": "@@ -1,3 +1,8 @@\n+2019-11-20  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/92537\n+\t* gfortran.dg/pr92537.f90: New testcase.\n+\n 2019-11-20  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/arm/asm-flag-4.c: Replace dg-error with dg-message."}, {"sha": "50dd026c2ec64e58bef40d120fdb0309207701e0", "filename": "gcc/testsuite/gfortran.dg/pr92537.f90", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2439d584d5def75d705f33218bb3b97fca4c11a1/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr92537.f90", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2439d584d5def75d705f33218bb3b97fca4c11a1/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr92537.f90", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgfortran.dg%2Fpr92537.f90?ref=2439d584d5def75d705f33218bb3b97fca4c11a1", "patch": "@@ -0,0 +1,32 @@\n+! { dg-do compile }\n+! { dg-options \"-O2 -ftree-vectorize -fno-inline\" }\n+! { dg-additional-options \"-march=skylake\" { target x86_64-*-* i?86-*-* } }\n+MODULE pr93527\n+  implicit none\n+  integer, parameter :: wp = kind (1.d0)\n+  interface p_min\n+     module procedure p_min_wp\n+  end interface\n+contains\n+  subroutine foo (pr)\n+    real(wp), pointer     :: pr(:)\n+    integer  ::  nzd\n+    real(wp) ::  pmin\n+    real(wp) ::  pmin_diag\n+    integer  ::  i\n+    nzd  = 15\n+    allocate (pr(nzd))\n+    pmin_diag = 4000._wp\n+    pmin = p_min(pmin_diag)\n+    pmin = min (pmin,pmin_diag)\n+    pr(1) = log(pmin)\n+    do i=1,nzd-1\n+       pr(i+1) = log(pmin) + i\n+    end do\n+  end subroutine foo\n+  function p_min_wp (x) result (p_min)\n+    real(wp), intent(in) :: x\n+    real(wp)             :: p_min\n+    p_min = x\n+  end function p_min_wp\n+end module pr93527"}, {"sha": "75d788051c1a3e64c0e59a583caecc456cdb0164", "filename": "gcc/tree-vect-slp.c", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2439d584d5def75d705f33218bb3b97fca4c11a1/gcc%2Ftree-vect-slp.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2439d584d5def75d705f33218bb3b97fca4c11a1/gcc%2Ftree-vect-slp.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-vect-slp.c?ref=2439d584d5def75d705f33218bb3b97fca4c11a1", "patch": "@@ -2253,18 +2253,6 @@ vect_analyze_slp_instance (vec_info *vinfo,\n \t  matches[group_size / const_max_nunits * const_max_nunits] = false;\n \t  vect_free_slp_tree (node, false);\n \t}\n-      else if (constructor\n-\t       && SLP_TREE_DEF_TYPE (node) != vect_internal_def)\n-\t{\n-\t  /* CONSTRUCTOR vectorization relies on a vector stmt being\n-\t     generated, that doesn't work for fully external ones.  */\n-\t  if (dump_enabled_p ())\n-\t    dump_printf_loc (MSG_MISSED_OPTIMIZATION, vect_location,\n-\t\t\t     \"Build SLP failed: CONSTRUCTOR of external \"\n-\t\t\t     \"or constant elements\\n\");\n-\t  vect_free_slp_tree (node, false);\n-\t  return false;\n-\t}\n       else\n \t{\n \t  /* Create a new SLP instance.  */\n@@ -2939,7 +2927,12 @@ vect_slp_analyze_operations (vec_info *vinfo)\n       if (!vect_slp_analyze_node_operations (vinfo,\n \t\t\t\t\t     SLP_INSTANCE_TREE (instance),\n \t\t\t\t\t     instance, visited, lvisited,\n-\t\t\t\t\t     &cost_vec))\n+\t\t\t\t\t     &cost_vec)\n+\t  /* Instances with a root stmt require vectorized defs for the\n+\t     SLP tree root.  */\n+\t  || (SLP_INSTANCE_ROOT_STMT (instance)\n+\t      && (SLP_TREE_DEF_TYPE (SLP_INSTANCE_TREE (instance))\n+\t\t  != vect_internal_def)))\n         {\n \t  slp_tree node = SLP_INSTANCE_TREE (instance);\n \t  stmt_vec_info stmt_info = SLP_TREE_SCALAR_STMTS (node)[0];"}]}