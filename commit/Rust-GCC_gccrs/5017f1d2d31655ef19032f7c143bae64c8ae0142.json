{"sha": "5017f1d2d31655ef19032f7c143bae64c8ae0142", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTAxN2YxZDJkMzE2NTVlZjE5MDMyZjdjMTQzYmFlNjRjOGFlMDE0Mg==", "commit": {"author": {"name": "Kyrylo Tkachov", "email": "kyrylo.tkachov@arm.com", "date": "2013-04-09T16:08:47Z"}, "committer": {"name": "Kyrylo Tkachov", "email": "ktkachov@gcc.gnu.org", "date": "2013-04-09T16:08:47Z"}, "message": "arm.md (minmax_arithsi_non_canon): New pattern.\n\n2013-04-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n\n\t* config/arm/arm.md (minmax_arithsi_non_canon): New pattern.\n\n\t* gcc.target/arm/minmax_minus.c: New test.\n\nFrom-SVN: r197642", "tree": {"sha": "ee14a68be7931b23713baea17406995d381461ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ee14a68be7931b23713baea17406995d381461ac"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5017f1d2d31655ef19032f7c143bae64c8ae0142", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5017f1d2d31655ef19032f7c143bae64c8ae0142", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5017f1d2d31655ef19032f7c143bae64c8ae0142", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5017f1d2d31655ef19032f7c143bae64c8ae0142/comments", "author": {"login": "ktkachov-arm", "id": 74917949, "node_id": "MDQ6VXNlcjc0OTE3OTQ5", "avatar_url": "https://avatars.githubusercontent.com/u/74917949?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ktkachov-arm", "html_url": "https://github.com/ktkachov-arm", "followers_url": "https://api.github.com/users/ktkachov-arm/followers", "following_url": "https://api.github.com/users/ktkachov-arm/following{/other_user}", "gists_url": "https://api.github.com/users/ktkachov-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/ktkachov-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ktkachov-arm/subscriptions", "organizations_url": "https://api.github.com/users/ktkachov-arm/orgs", "repos_url": "https://api.github.com/users/ktkachov-arm/repos", "events_url": "https://api.github.com/users/ktkachov-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/ktkachov-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a949cf1c752e2a711c1794e8f511f118ab927b40", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a949cf1c752e2a711c1794e8f511f118ab927b40", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a949cf1c752e2a711c1794e8f511f118ab927b40"}], "stats": {"total": 64, "additions": 64, "deletions": 0}, "files": [{"sha": "dddf37eb21ddf8471c9858c6e2cb98abb55e7754", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5017f1d2d31655ef19032f7c143bae64c8ae0142/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5017f1d2d31655ef19032f7c143bae64c8ae0142/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5017f1d2d31655ef19032f7c143bae64c8ae0142", "patch": "@@ -1,3 +1,7 @@\n+2013-04-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* config/arm/arm.md (minmax_arithsi_non_canon): New pattern.\n+\n 2013-04-09  Steven Bosscher  <steven@gcc.gnu.org>\n \n \t* sched-vis.c (print_pattern): Print SEQUENCE of insns as insns."}, {"sha": "073ee6b6fa3420932fd0ed077e50fbf4663ed90e", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5017f1d2d31655ef19032f7c143bae64c8ae0142/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5017f1d2d31655ef19032f7c143bae64c8ae0142/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=5017f1d2d31655ef19032f7c143bae64c8ae0142", "patch": "@@ -3597,6 +3597,50 @@\n \t\t      (const_int 12)))]\n )\n \n+; Reject the frame pointer in operand[1], since reloading this after\n+; it has been eliminated can cause carnage.\n+(define_insn_and_split \"*minmax_arithsi_non_canon\"\n+  [(set (match_operand:SI 0 \"s_register_operand\" \"=r,r\")\n+\t(minus:SI\n+\t (match_operand:SI 1 \"s_register_operand\" \"0,?r\")\n+\t  (match_operator:SI 4 \"minmax_operator\"\n+\t   [(match_operand:SI 2 \"s_register_operand\" \"r,r\")\n+\t    (match_operand:SI 3 \"arm_rhs_operand\" \"rI,rI\")])))\n+   (clobber (reg:CC CC_REGNUM))]\n+  \"TARGET_32BIT && !arm_eliminable_register (operands[1])\"\n+  \"#\"\n+  \"TARGET_32BIT && !arm_eliminable_register (operands[1]) && reload_completed\"\n+  [(set (reg:CC CC_REGNUM)\n+        (compare:CC (match_dup 2) (match_dup 3)))\n+\n+   (cond_exec (match_op_dup 4 [(reg:CC CC_REGNUM) (const_int 0)])\n+              (set (match_dup 0)\n+                   (minus:SI (match_dup 1)\n+                             (match_dup 2))))\n+   (cond_exec (match_op_dup 5 [(reg:CC CC_REGNUM) (const_int 0)])\n+              (set (match_dup 0)\n+                   (minus:SI (match_dup 1)\n+                             (match_dup 3))))]\n+  {\n+  enum machine_mode mode = SELECT_CC_MODE (GET_CODE (operands[1]),\n+                                           operands[2], operands[3]);\n+  enum rtx_code rc = minmax_code (operands[4]);\n+  operands[4] = gen_rtx_fmt_ee (rc, VOIDmode,\n+                                operands[2], operands[3]);\n+\n+  if (mode == CCFPmode || mode == CCFPEmode)\n+    rc = reverse_condition_maybe_unordered (rc);\n+  else\n+    rc = reverse_condition (rc);\n+  operands[5] = gen_rtx_fmt_ee (rc, SImode, operands[2], operands[3]);\n+  }\n+  [(set_attr \"conds\" \"clob\")\n+   (set (attr \"length\")\n+\t(if_then_else (eq_attr \"is_thumb\" \"yes\")\n+\t\t      (const_int 14)\n+\t\t      (const_int 12)))]\n+)\n+\n (define_code_iterator SAT [smin smax])\n (define_code_iterator SATrev [smin smax])\n (define_code_attr SATlo [(smin \"1\") (smax \"2\")])"}, {"sha": "3f2b55b389855bb1cde5f5929f58c11638d090a2", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5017f1d2d31655ef19032f7c143bae64c8ae0142/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5017f1d2d31655ef19032f7c143bae64c8ae0142/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=5017f1d2d31655ef19032f7c143bae64c8ae0142", "patch": "@@ -1,3 +1,7 @@\n+2013-04-09  Kyrylo Tkachov  <kyrylo.tkachov@arm.com>\n+\n+\t* gcc.target/arm/minmax_minus.c: New test.\n+\n 2013-04-09  Jakub Jelinek  <jakub@redhat.com>\n \n \tPR middle-end/56883"}, {"sha": "050c8475d6d4f23e903a24dd93aff2ba321f74dd", "filename": "gcc/testsuite/gcc.target/arm/minmax_minus.c", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5017f1d2d31655ef19032f7c143bae64c8ae0142/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fminmax_minus.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5017f1d2d31655ef19032f7c143bae64c8ae0142/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fminmax_minus.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Farm%2Fminmax_minus.c?ref=5017f1d2d31655ef19032f7c143bae64c8ae0142", "patch": "@@ -0,0 +1,12 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2\" } */\n+\n+#define MAX(a, b) (a > b ? a : b)\n+int\n+foo (int a, int b, int c)\n+{\n+  return c - MAX (a, b);\n+}\n+\n+/* { dg-final { scan-assembler \"rsbge\" } } */\n+/* { dg-final { scan-assembler \"rsblt\" } } */"}]}