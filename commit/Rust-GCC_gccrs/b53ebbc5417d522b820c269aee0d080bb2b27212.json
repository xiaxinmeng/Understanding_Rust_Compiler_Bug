{"sha": "b53ebbc5417d522b820c269aee0d080bb2b27212", "node_id": "C_kwDOANBUbNoAKGI1M2ViYmM1NDE3ZDUyMmI4MjBjMjY5YWVlMGQwODBiYjJiMjcyMTI", "commit": {"author": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-07-11T00:16:25Z"}, "committer": {"name": "GCC Administrator", "email": "gccadmin@gcc.gnu.org", "date": "2022-07-11T00:16:25Z"}, "message": "Daily bump.", "tree": {"sha": "3ed71d2dccf56874a218d1579d332fa43332d434", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3ed71d2dccf56874a218d1579d332fa43332d434"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/b53ebbc5417d522b820c269aee0d080bb2b27212", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b53ebbc5417d522b820c269aee0d080bb2b27212", "html_url": "https://github.com/Rust-GCC/gccrs/commit/b53ebbc5417d522b820c269aee0d080bb2b27212", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/b53ebbc5417d522b820c269aee0d080bb2b27212/comments", "author": null, "committer": null, "parents": [{"sha": "0587cef3d7962a8b0f44779589ba2920dd3d71e5", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/0587cef3d7962a8b0f44779589ba2920dd3d71e5", "html_url": "https://github.com/Rust-GCC/gccrs/commit/0587cef3d7962a8b0f44779589ba2920dd3d71e5"}], "stats": {"total": 93, "additions": 92, "deletions": 1}, "files": [{"sha": "d66115fa014b7e4cf1dd4a1cb798c19867bf1bcf", "filename": "gcc/ChangeLog", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53ebbc5417d522b820c269aee0d080bb2b27212/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53ebbc5417d522b820c269aee0d080bb2b27212/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=b53ebbc5417d522b820c269aee0d080bb2b27212", "patch": "@@ -1,3 +1,47 @@\n+2022-07-10  Aldy Hernandez  <aldyh@redhat.com>\n+\n+\t* value-range.cc (irange::operator=): Call verify_range.\n+\t(irange::irange_set): Normalize kind after everything else has\n+\tbeen set.\n+\t(irange::irange_set_anti_range): Same.\n+\t(irange::set): Same.\n+\t(irange::verify_range): Disallow nonzero masks for VARYING.\n+\t(irange::irange_union): Call verify_range.\n+\tHandle nonzero masks better.\n+\t(irange::irange_intersect): Same.\n+\t(irange::set_nonzero_bits): Calculate mask if either range has an\n+\texplicit mask.\n+\t(irange::intersect_nonzero_bits): Same.\n+\t(irange::union_nonzero_bits): Same.\n+\t(range_tests_nonzero_bits): New.\n+\t(range_tests): Call range_tests_nonzero_bits.\n+\t* value-range.h (class irange): Remove set_nonzero_bits method\n+\twith trees.\n+\t(irange::varying_compatible_p): Set nonzero mask.\n+\n+2022-07-10  Xi Ruoyao  <xry111@xry111.site>\n+\n+\t* config/loongarch/loongarch.md (<any_div>di3_fake): Describe\n+\tthe sign-extend of result in the RTL template.\n+\t(<any_div><mode>3): Adjust for <any_div>di3_fake change.\n+\n+2022-07-10  Xi Ruoyao  <xry111@xry111.site>\n+\n+\t* config/loongarch/loongarch.cc (loongarch_check_zero_div_p):\n+\tRemove static, for use in the machine description file.\n+\t* config/loongarch/loongarch-protos.h:\n+\t(loongarch_check_zero_div_p): Add prototype.\n+\t* config/loongarch/loongarch.md (enabled): New attr.\n+\t(*<optab><mode>3): Add (=r,r,r) and (=&r,0,r) alternatives for\n+\tidiv.  Conditionally enable the alternatives using\n+\tloongarch_check_zero_div_p.\n+\t(<optab>di3_fake): Likewise.\n+\n+2022-07-10  Xi Ruoyao  <xry111@xry111.site>\n+\n+\t* config/loongarch/loongarch.md (mulsidi3_64bit): Use mulw.d.w\n+\tinstead of mul.d.\n+\n 2022-07-09  Aldy Hernandez  <aldyh@redhat.com>\n \n \t* value-range.cc (irange::irange_single_pair_union): Set"}, {"sha": "691f2ec33d6b274295db47f3eb9e0a2284074db2", "filename": "gcc/DATESTAMP", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53ebbc5417d522b820c269aee0d080bb2b27212/gcc%2FDATESTAMP", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53ebbc5417d522b820c269aee0d080bb2b27212/gcc%2FDATESTAMP", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FDATESTAMP?ref=b53ebbc5417d522b820c269aee0d080bb2b27212", "patch": "@@ -1 +1 @@\n-20220710\n+20220711"}, {"sha": "3aa672b0b79f59366e59b27e3031da42cc63a701", "filename": "gcc/c/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53ebbc5417d522b820c269aee0d080bb2b27212/gcc%2Fc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53ebbc5417d522b820c269aee0d080bb2b27212/gcc%2Fc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc%2FChangeLog?ref=b53ebbc5417d522b820c269aee0d080bb2b27212", "patch": "@@ -1,3 +1,9 @@\n+2022-07-10  Lewis Hyatt  <lhyatt@gmail.com>\n+\n+\tPR preprocessor/97498\n+\t* c-parser.cc (c_parser_pragma): Set input_location to the\n+\tlocation of the pragma, rather than the start of the line.\n+\n 2022-07-04  Tobias Burnus  <tobias@codesourcery.com>\n \t    Chung-Lin Tang  <cltang@codesourcery.com>\n \t    Thomas Schwinge  <thomas@codesourcery.com>"}, {"sha": "d156840b9d6a4cb9f6b6ed93021fac6ddee90291", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53ebbc5417d522b820c269aee0d080bb2b27212/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53ebbc5417d522b820c269aee0d080bb2b27212/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=b53ebbc5417d522b820c269aee0d080bb2b27212", "patch": "@@ -1,3 +1,31 @@\n+2022-07-10  Lewis Hyatt  <lhyatt@gmail.com>\n+\n+\tPR preprocessor/97498\n+\t* c-c++-common/pr97498.c: New test.\n+\t* c-c++-common/gomp/pragma-3.c: Adapt for improved warning locations.\n+\t* c-c++-common/gomp/pragma-5.c: Likewise.\n+\t* gcc.dg/pragma-message.c: Likewise.\n+\n+2022-07-10  Dimitar Dimitrov  <dimitar@dinux.eu>\n+\n+\tPR tree-optimization/106063\n+\t* gcc.dg/pr106063.c: Require effective target int128.\n+\n+2022-07-10  Xi Ruoyao  <xry111@xry111.site>\n+\n+\t* gcc.target/loongarch/div-4.c: New test.\n+\n+2022-07-10  Xi Ruoyao  <xry111@xry111.site>\n+\n+\t* gcc.target/loongarch/div-1.c: New test.\n+\t* gcc.target/loongarch/div-2.c: New test.\n+\t* gcc.target/loongarch/div-3.c: New test.\n+\n+2022-07-10  Xi Ruoyao  <xry111@xry111.site>\n+\n+\t* gcc.target/loongarch/mulw_d_w.c: New test.\n+\t* gcc.c-torture/execute/mul-sext.c: New test.\n+\n 2022-07-09  Vit Kabele  <vit.kabele@sysgo.com>\n \n \t* c-c++-common/Wpadded.c: New test."}, {"sha": "1a211f32f770c6b6bb16a11b6ce0b4892f665a03", "filename": "libcpp/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53ebbc5417d522b820c269aee0d080bb2b27212/libcpp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53ebbc5417d522b820c269aee0d080bb2b27212/libcpp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libcpp%2FChangeLog?ref=b53ebbc5417d522b820c269aee0d080bb2b27212", "patch": "@@ -1,3 +1,10 @@\n+2022-07-10  Lewis Hyatt  <lhyatt@gmail.com>\n+\n+\tPR preprocessor/97498\n+\t* directives.cc (destringize_and_run): Override the location of\n+\tthe CPP_PRAGMA token from a _Pragma directive to the location of\n+\tthe expansion point, as is done for the tokens lexed from it.\n+\n 2022-07-07  David Malcolm  <dmalcolm@redhat.com>\n \n \t* include/line-map.h: Include <utility>."}, {"sha": "a64f0e05de8e04f76c71039301fef618a16b9b8e", "filename": "libgomp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/b53ebbc5417d522b820c269aee0d080bb2b27212/libgomp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/b53ebbc5417d522b820c269aee0d080bb2b27212/libgomp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libgomp%2FChangeLog?ref=b53ebbc5417d522b820c269aee0d080bb2b27212", "patch": "@@ -1,3 +1,9 @@\n+2022-07-10  Lewis Hyatt  <lhyatt@gmail.com>\n+\n+\t* testsuite/libgomp.oacc-c-c++-common/reduction-5.c: Adapt for\n+\timproved warning locations.\n+\t* testsuite/libgomp.oacc-c-c++-common/vred2d-128.c: Likewise.\n+\n 2022-07-08  Thomas Schwinge  <thomas@codesourcery.com>\n \n \t* testsuite/libgomp.c-c++-common/requires-1.c: Add 'dg-note's."}]}