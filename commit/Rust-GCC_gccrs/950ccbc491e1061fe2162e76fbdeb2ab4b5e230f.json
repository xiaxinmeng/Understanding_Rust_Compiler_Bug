{"sha": "950ccbc491e1061fe2162e76fbdeb2ab4b5e230f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTUwY2NiYzQ5MWUxMDYxZmUyMTYyZTc2ZmJkZWIyYWI0YjVlMjMwZg==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2005-06-14T08:25:18Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2005-06-14T08:25:18Z"}, "message": "unwind-dw2-fde-darwin.c (examine_objects): Fix aliasing in read_encoded_value_with_base call.\n\n\t* unwind-dw2-fde-darwin.c (examine_objects): Fix aliasing in\n\tread_encoded_value_with_base call.\n\t* unwind-dw2-fde-glibc.c (_Unwind_IteratePhdrCallback): Likewise.\n\t* unwind-dw2-fde.c (_Unwind_Find_FDE): Likewise.\n\t* unwind-dw2.c (extract_cie_info): Fix aliasing in\n\tread_encoded_value call.\n\t(execute_cfa_program, uw_frame_state_for): Likewise.\n\nFrom-SVN: r100927", "tree": {"sha": "5f52bb32e96bf7b8a9892d3acb3d434648793276", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5f52bb32e96bf7b8a9892d3acb3d434648793276"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/950ccbc491e1061fe2162e76fbdeb2ab4b5e230f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/950ccbc491e1061fe2162e76fbdeb2ab4b5e230f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/950ccbc491e1061fe2162e76fbdeb2ab4b5e230f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/950ccbc491e1061fe2162e76fbdeb2ab4b5e230f/comments", "author": null, "committer": null, "parents": [{"sha": "6f7e2c0c96d06c08555d84dadda568a01ff6a79c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6f7e2c0c96d06c08555d84dadda568a01ff6a79c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6f7e2c0c96d06c08555d84dadda568a01ff6a79c"}], "stats": {"total": 48, "additions": 37, "deletions": 11}, "files": [{"sha": "3bd677781ffb3496ddc5e18ef57d35cb7e875921", "filename": "gcc/ChangeLog", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/950ccbc491e1061fe2162e76fbdeb2ab4b5e230f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/950ccbc491e1061fe2162e76fbdeb2ab4b5e230f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=950ccbc491e1061fe2162e76fbdeb2ab4b5e230f", "patch": "@@ -1,3 +1,13 @@\n+2005-06-14  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* unwind-dw2-fde-darwin.c (examine_objects): Fix aliasing in\n+\tread_encoded_value_with_base call.\n+\t* unwind-dw2-fde-glibc.c (_Unwind_IteratePhdrCallback): Likewise.\n+\t* unwind-dw2-fde.c (_Unwind_Find_FDE): Likewise.\n+\t* unwind-dw2.c (extract_cie_info): Fix aliasing in\n+\tread_encoded_value call.\n+\t(execute_cfa_program, uw_frame_state_for): Likewise.\n+\n 2005-06-13  Roger Sayle  <roger@eyesopen.com>\n \n \tPR rtl-optimization/22053"}, {"sha": "f242654baf9458a37c1c505d7b759822f0511d60", "filename": "gcc/unwind-dw2-fde-darwin.c", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/950ccbc491e1061fe2162e76fbdeb2ab4b5e230f/gcc%2Funwind-dw2-fde-darwin.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/950ccbc491e1061fe2162e76fbdeb2ab4b5e230f/gcc%2Funwind-dw2-fde-darwin.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2-fde-darwin.c?ref=950ccbc491e1061fe2162e76fbdeb2ab4b5e230f", "patch": "@@ -220,6 +220,7 @@ examine_objects (void *pc, struct dwarf_eh_bases *bases, int dont_alloc)\n \t    if (result)\n \t      {\n \t\tint encoding;\n+\t\t_Unwind_Ptr func;\n \n \t\tbases->tbase = ob->tbase;\n \t\tbases->dbase = ob->dbase;\n@@ -229,8 +230,8 @@ examine_objects (void *pc, struct dwarf_eh_bases *bases, int dont_alloc)\n \t\t  encoding = get_fde_encoding (result);\n \t\tread_encoded_value_with_base (encoding,\n \t\t\t\t\t      base_from_object (encoding, ob),\n-\t\t\t\t\t      result->pc_begin,\n-\t\t\t\t\t      (_Unwind_Ptr *)&bases->func);\n+\t\t\t\t\t      result->pc_begin, &func);\n+\t\tbases->func = (void *) func;\n \t\tbreak;\n \t      }\n \t  }"}, {"sha": "ebc2d9c37f22716c6754bd8d0d9d4ac039d2657a", "filename": "gcc/unwind-dw2-fde-glibc.c", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/950ccbc491e1061fe2162e76fbdeb2ab4b5e230f/gcc%2Funwind-dw2-fde-glibc.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/950ccbc491e1061fe2162e76fbdeb2ab4b5e230f/gcc%2Funwind-dw2-fde-glibc.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2-fde-glibc.c?ref=950ccbc491e1061fe2162e76fbdeb2ab4b5e230f", "patch": "@@ -386,11 +386,13 @@ _Unwind_IteratePhdrCallback (struct dl_phdr_info *info, size_t size, void *ptr)\n   data->ret = linear_search_fdes (&ob, (fde *) eh_frame, (void *) data->pc);\n   if (data->ret != NULL)\n     {\n+      _Unwind_Ptr func;\n       unsigned int encoding = get_fde_encoding (data->ret);\n+      \n       read_encoded_value_with_base (encoding,\n \t\t\t\t    base_from_cb_data (encoding, data),\n-\t\t\t\t    data->ret->pc_begin,\n-\t\t\t\t    (_Unwind_Ptr *)&data->func);\n+\t\t\t\t    data->ret->pc_begin, &func);\n+      data->func = (void *) func;\n     }\n   return 1;\n }"}, {"sha": "d6b3a5870bc495a3bc46bfc1f60d1b35d0cf80de", "filename": "gcc/unwind-dw2-fde.c", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/950ccbc491e1061fe2162e76fbdeb2ab4b5e230f/gcc%2Funwind-dw2-fde.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/950ccbc491e1061fe2162e76fbdeb2ab4b5e230f/gcc%2Funwind-dw2-fde.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2-fde.c?ref=950ccbc491e1061fe2162e76fbdeb2ab4b5e230f", "patch": "@@ -1013,6 +1013,7 @@ _Unwind_Find_FDE (void *pc, struct dwarf_eh_bases *bases)\n   if (f)\n     {\n       int encoding;\n+      _Unwind_Ptr func;\n \n       bases->tbase = ob->tbase;\n       bases->dbase = ob->dbase;\n@@ -1021,7 +1022,8 @@ _Unwind_Find_FDE (void *pc, struct dwarf_eh_bases *bases)\n       if (ob->s.b.mixed_encoding)\n \tencoding = get_fde_encoding (f);\n       read_encoded_value_with_base (encoding, base_from_object (encoding, ob),\n-\t\t\t\t    f->pc_begin, (_Unwind_Ptr *)&bases->func);\n+\t\t\t\t    f->pc_begin, &func);\n+      bases->func = (void *) func;\n     }\n \n   return f;"}, {"sha": "55764fee545049b528ff042a55848b944608583c", "filename": "gcc/unwind-dw2.c", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/950ccbc491e1061fe2162e76fbdeb2ab4b5e230f/gcc%2Funwind-dw2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/950ccbc491e1061fe2162e76fbdeb2ab4b5e230f/gcc%2Funwind-dw2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Funwind-dw2.c?ref=950ccbc491e1061fe2162e76fbdeb2ab4b5e230f", "patch": "@@ -320,8 +320,10 @@ extract_cie_info (const struct dwarf_cie *cie, struct _Unwind_Context *context,\n       /* \"P\" indicates a personality routine in the CIE augmentation.  */\n       else if (aug[0] == 'P')\n \t{\n-\t  p = read_encoded_value (context, *p, p + 1,\n-\t\t\t\t  (_Unwind_Ptr *) &fs->personality);\n+\t  _Unwind_Ptr personality;\n+\t  \n+\t  p = read_encoded_value (context, *p, p + 1, &personality);\n+\t  fs->personality = (_Unwind_Personality_Fn) personality;\n \t  aug += 1;\n \t}\n \n@@ -785,8 +787,13 @@ execute_cfa_program (const unsigned char *insn_ptr,\n       else switch (insn)\n \t{\n \tcase DW_CFA_set_loc:\n-\t  insn_ptr = read_encoded_value (context, fs->fde_encoding,\n-\t\t\t\t\t insn_ptr, (_Unwind_Ptr *) &fs->pc);\n+\t  {\n+\t    _Unwind_Ptr pc;\n+\t    \n+\t    insn_ptr = read_encoded_value (context, fs->fde_encoding,\n+\t\t\t\t\t   insn_ptr, &pc);\n+\t    fs->pc = (void *) pc;\n+\t  }\n \t  break;\n \n \tcase DW_CFA_advance_loc1:\n@@ -1001,8 +1008,12 @@ uw_frame_state_for (struct _Unwind_Context *context, _Unwind_FrameState *fs)\n       insn = aug + i;\n     }\n   if (fs->lsda_encoding != DW_EH_PE_omit)\n-    aug = read_encoded_value (context, fs->lsda_encoding, aug,\n-\t\t\t      (_Unwind_Ptr *) &context->lsda);\n+    {\n+      _Unwind_Ptr lsda;\n+      \n+      aug = read_encoded_value (context, fs->lsda_encoding, aug, &lsda);\n+      context->lsda = (void *) lsda;\n+    }\n \n   /* Then the insns in the FDE up to our target PC.  */\n   if (insn == NULL)"}]}