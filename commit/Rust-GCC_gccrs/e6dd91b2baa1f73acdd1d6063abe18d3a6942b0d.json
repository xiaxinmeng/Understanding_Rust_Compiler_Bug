{"sha": "e6dd91b2baa1f73acdd1d6063abe18d3a6942b0d", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTZkZDkxYjJiYWExZjczYWNkZDFkNjA2M2FiZTE4ZDNhNjk0MmIwZA==", "commit": {"author": {"name": "Sebastian Pop", "email": "sebastian.pop@amd.com", "date": "2009-11-25T05:23:45Z"}, "committer": {"name": "Sebastian Pop", "email": "spop@gcc.gnu.org", "date": "2009-11-25T05:23:45Z"}, "message": "graphite.exp: Add the same rules as in gcc.dg/graphite/graphite.exp.\n\n2009-10-22  Sebastian Pop  <sebastian.pop@amd.com>\n\n\t* g++.dg/graphite/graphite.exp: Add the same rules as in\n\tgcc.dg/graphite/graphite.exp.\n\nFrom-SVN: r154623", "tree": {"sha": "a4b0543f6c45bca2fe52a22a201b536d90a06e2c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/a4b0543f6c45bca2fe52a22a201b536d90a06e2c"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e6dd91b2baa1f73acdd1d6063abe18d3a6942b0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6dd91b2baa1f73acdd1d6063abe18d3a6942b0d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e6dd91b2baa1f73acdd1d6063abe18d3a6942b0d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e6dd91b2baa1f73acdd1d6063abe18d3a6942b0d/comments", "author": null, "committer": {"login": "sebpop", "id": 568397, "node_id": "MDQ6VXNlcjU2ODM5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/568397?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sebpop", "html_url": "https://github.com/sebpop", "followers_url": "https://api.github.com/users/sebpop/followers", "following_url": "https://api.github.com/users/sebpop/following{/other_user}", "gists_url": "https://api.github.com/users/sebpop/gists{/gist_id}", "starred_url": "https://api.github.com/users/sebpop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sebpop/subscriptions", "organizations_url": "https://api.github.com/users/sebpop/orgs", "repos_url": "https://api.github.com/users/sebpop/repos", "events_url": "https://api.github.com/users/sebpop/events{/privacy}", "received_events_url": "https://api.github.com/users/sebpop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47fb473faddb688efd535d662038664777e86e0b", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/47fb473faddb688efd535d662038664777e86e0b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/47fb473faddb688efd535d662038664777e86e0b"}], "stats": {"total": 66, "additions": 58, "deletions": 8}, "files": [{"sha": "e26c71769f110df096d114c30acb40e26c88fa91", "filename": "gcc/ChangeLog.graphite", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6dd91b2baa1f73acdd1d6063abe18d3a6942b0d/gcc%2FChangeLog.graphite", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6dd91b2baa1f73acdd1d6063abe18d3a6942b0d/gcc%2FChangeLog.graphite", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog.graphite?ref=e6dd91b2baa1f73acdd1d6063abe18d3a6942b0d", "patch": "@@ -1,3 +1,8 @@\n+2009-10-22  Sebastian Pop  <sebastian.pop@amd.com>\n+\n+\t* g++.dg/graphite/graphite.exp: Add the same rules as in\n+\tgcc.dg/graphite/graphite.exp.\n+\n 2009-10-22  Sebastian Pop  <sebastian.pop@amd.com>\n \n \t* g++.dg/graphite/id-1.C: New."}, {"sha": "ba7c8ccec89ebe9ae88ffa5926237567fe19f6bf", "filename": "gcc/testsuite/g++.dg/graphite/graphite.exp", "status": "modified", "additions": 53, "deletions": 8, "changes": 61, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e6dd91b2baa1f73acdd1d6063abe18d3a6942b0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgraphite%2Fgraphite.exp", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e6dd91b2baa1f73acdd1d6063abe18d3a6942b0d/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgraphite%2Fgraphite.exp", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fgraphite%2Fgraphite.exp?ref=e6dd91b2baa1f73acdd1d6063abe18d3a6942b0d", "patch": "@@ -23,23 +23,68 @@ if ![check_effective_target_fgraphite] {\n   return\n }\n \n+# Remove VALUE from LIST_VARIABLE.\n+proc lremove {list_variable value} {\n+    upvar 1 $list_variable var\n+    set idx [lsearch -exact $var $value]\n+    set var [lreplace $var $idx $idx]\n+}\n+\n # The default action for a test is 'compile'.  Save current default.\n global dg-do-what-default\n set save-dg-do-what-default ${dg-do-what-default}\n set dg-do-what-default compile\n \n-# If a testcase doesn't have special options, use these.\n-global DEFAULT_CFLAGS\n-if ![info exists DEFAULT_CFLAGS] then {\n-    set DEFAULT_CFLAGS \" -ansi -pedantic-errors\"\n-}\n-\n # Initialize `dg'.\n dg-init\n \n # Main loop.\n-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.C]] \\\n-\t\"\" $DEFAULT_CFLAGS\n+\n+set wait_to_run_files [lsort [glob -nocomplain $srcdir/$subdir/*.C ] ]\n+\n+# Flags using for block-* files.\n+set DEFAULT_FLAGS_GRAPHITE_BLOCK \"-O2 -floop-block -fno-loop-strip-mine \\\n+ -fno-loop-interchange -fdump-tree-graphite-all\"\n+set block_files [lsort [glob -nocomplain $srcdir/$subdir/block-*.C ] ]\n+dg-runtest $block_files \"\" $DEFAULT_FLAGS_GRAPHITE_BLOCK\n+foreach block_file $block_files {lremove wait_to_run_files $block_file}\n+\n+# Flags using for id-* files.\n+set DEFAULT_FLAGS_GRAPHITE_IDENTITY \"-O2 -fgraphite-identity\"\n+set id_files [lsort [glob -nocomplain $srcdir/$subdir/id-*.C ] ]\n+dg-runtest $id_files \"\" $DEFAULT_FLAGS_GRAPHITE_IDENTITY\n+foreach id_file $id_files {lremove wait_to_run_files $id_file}\n+\n+# Flags using for interchange-* files.\n+set DEFAULT_FLAGS_GRAPHITE_INTERCHANGE \"-O2 -fdump-tree-graphite-all \\\n+ -floop-interchange -fno-loop-block -fno-loop-strip-mine -ffast-math\"\n+set interchange_files [lsort [glob -nocomplain $srcdir/$subdir/interchange-*.C ] ]\n+dg-runtest $interchange_files \"\" $DEFAULT_FLAGS_GRAPHITE_INTERCHANGE\n+foreach interchange_file $interchange_files {lremove wait_to_run_files $interchange_file}\n+\n+# Flags using for scop-* files.\n+set DEFAULT_FLAGS_GRAPHITE_SCOP \"-O2 -fgraphite -fdump-tree-graphite-all\"\n+set scop_files [lsort [glob -nocomplain $srcdir/$subdir/scop-*.C ] ]\n+dg-runtest $scop_files \"\" $DEFAULT_FLAGS_GRAPHITE_SCOP\n+foreach scop_file $scop_files {lremove wait_to_run_files $scop_file}\n+\n+\n+# Schedule now the tests to be run.\n+set dg-do-what-default run\n+\n+# Flags using for run-id-* files.\n+set DEFAULT_FLAGS_RUN_ID \"-O2 -fgraphite-identity\"\n+set run_id_files [lsort [glob -nocomplain $srcdir/$subdir/run-id-*.C ] ]\n+dg-runtest $run_id_files \"\" $DEFAULT_FLAGS_RUN_ID\n+foreach run_id_file $run_id_files {lremove wait_to_run_files $run_id_file}\n+\n+\n+# The default action for the rest of the files is 'compile'.\n+set dg-do-what-default compile\n+\n+# Flags using for other files.\n+set DEFAULT_FLAGS_GRAPHITE \"-ansi -pedantic-errors\"\n+dg-runtest $wait_to_run_files \"\" $DEFAULT_FLAGS_GRAPHITE\n \n # Clean up.\n set dg-do-what-default ${save-dg-do-what-default}"}]}