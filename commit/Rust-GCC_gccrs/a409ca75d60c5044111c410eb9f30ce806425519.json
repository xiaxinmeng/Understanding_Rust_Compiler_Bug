{"sha": "a409ca75d60c5044111c410eb9f30ce806425519", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTQwOWNhNzVkNjBjNTA0NDExMWM0MTBlYjlmMzBjZTgwNjQyNTUxOQ==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2015-10-14T21:18:19Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2015-10-14T21:18:19Z"}, "message": "re PR target/67967 (ICE in i386_pe_seh_unwind_emit)\n\n\tPR target/67967\n\t* config/i386/i386.c (ix86_emit_save_reg_using_mov): Do not add\n\tREG_CFA_EXPRESSION to aligned SSE stores.\n\nFrom-SVN: r228826", "tree": {"sha": "ff8ab093e181895ad9bc63d0365ea27f4e00b855", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ff8ab093e181895ad9bc63d0365ea27f4e00b855"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a409ca75d60c5044111c410eb9f30ce806425519", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a409ca75d60c5044111c410eb9f30ce806425519", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a409ca75d60c5044111c410eb9f30ce806425519", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a409ca75d60c5044111c410eb9f30ce806425519/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "3837c6d66f4db682dfb2862529fddd354bb6b7ef", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/3837c6d66f4db682dfb2862529fddd354bb6b7ef", "html_url": "https://github.com/Rust-GCC/gccrs/commit/3837c6d66f4db682dfb2862529fddd354bb6b7ef"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "8b6ed9a040e55be33d1c9d1a46f11e6a5a2acab1", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a409ca75d60c5044111c410eb9f30ce806425519/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a409ca75d60c5044111c410eb9f30ce806425519/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a409ca75d60c5044111c410eb9f30ce806425519", "patch": "@@ -1,3 +1,9 @@\n+2015-10-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/67967\n+\t* config/i386/i386.c (ix86_emit_save_reg_using_mov): Do not add\n+\tREG_CFA_EXPRESSION to aligned SSE stores.\n+\n 2015-10-14  Jeff Law  <law@redhat.com>\n \n \t* tree-ssa-threadupdate.c (thread_through_all_blocks): Bump"}, {"sha": "ebe2b0aa8abbdf2eb243b52865237a342b3ac706", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a409ca75d60c5044111c410eb9f30ce806425519/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a409ca75d60c5044111c410eb9f30ce806425519/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=a409ca75d60c5044111c410eb9f30ce806425519", "patch": "@@ -11612,6 +11612,7 @@ ix86_emit_save_reg_using_mov (machine_mode mode, unsigned int regno,\n {\n   struct machine_function *m = cfun->machine;\n   rtx reg = gen_rtx_REG (mode, regno);\n+  rtx unspec = NULL_RTX;\n   rtx mem, addr, base, insn;\n   unsigned int align;\n \n@@ -11626,13 +11627,9 @@ ix86_emit_save_reg_using_mov (machine_mode mode, unsigned int regno,\n      In case INCOMING_STACK_BOUNDARY is misaligned, we have\n      to emit unaligned store.  */\n   if (mode == V4SFmode && align < 128)\n-    {\n-      rtx unspec = gen_rtx_UNSPEC (mode, gen_rtvec (1, reg), UNSPEC_STOREU);\n-      insn = emit_insn (gen_rtx_SET (mem, unspec));\n-    }\n-  else\n-    insn = emit_insn (gen_rtx_SET (mem, reg));\n+    unspec = gen_rtx_UNSPEC (mode, gen_rtvec (1, reg), UNSPEC_STOREU);\n \n+  insn = emit_insn (gen_rtx_SET (mem, unspec ? unspec : reg));\n   RTX_FRAME_RELATED_P (insn) = 1;\n \n   base = addr;\n@@ -11679,7 +11676,7 @@ ix86_emit_save_reg_using_mov (machine_mode mode, unsigned int regno,\n       mem = gen_rtx_MEM (mode, addr);\n       add_reg_note (insn, REG_CFA_OFFSET, gen_rtx_SET (mem, reg));\n     }\n-  else\n+  else if (unspec)\n     add_reg_note (insn, REG_CFA_EXPRESSION, gen_rtx_SET (mem, reg));\n }\n "}]}