{"sha": "9702143f274f9dbaa4eecb55540b6e952a6903ad", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6OTcwMjE0M2YyNzRmOWRiYWE0ZWVjYjU1NTQwYjZlOTUyYTY5MDNhZA==", "commit": {"author": {"name": "Richard Kenner", "email": "kenner@vlsi1.ultra.nyu.edu", "date": "2002-01-20T23:46:30Z"}, "committer": {"name": "Richard Kenner", "email": "kenner@gcc.gnu.org", "date": "2002-01-20T23:46:30Z"}, "message": "dwarf2out.c (loc_descriptor_from_tree): Add TRUTH_*_EXPR cases.\n\n\t* dwarf2out.c (loc_descriptor_from_tree): Add TRUTH_*_EXPR cases.\n\t(gen_struct_or_union_type_die): Don't SIGSEGV if no TYPE_STUB_DECL\n\tin incomplete case.\n\nFrom-SVN: r49022", "tree": {"sha": "bc0e94a3b168a48f8a7f630b35bd1acc7b956b83", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bc0e94a3b168a48f8a7f630b35bd1acc7b956b83"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/9702143f274f9dbaa4eecb55540b6e952a6903ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9702143f274f9dbaa4eecb55540b6e952a6903ad", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9702143f274f9dbaa4eecb55540b6e952a6903ad", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9702143f274f9dbaa4eecb55540b6e952a6903ad/comments", "author": null, "committer": null, "parents": [{"sha": "01dae62a3ade63acef6de8413a2fcfbb1309de78", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/01dae62a3ade63acef6de8413a2fcfbb1309de78", "html_url": "https://github.com/Rust-GCC/gccrs/commit/01dae62a3ade63acef6de8413a2fcfbb1309de78"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "ce2700050ac51d926f8714e279acfb87a255d369", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9702143f274f9dbaa4eecb55540b6e952a6903ad/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9702143f274f9dbaa4eecb55540b6e952a6903ad/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=9702143f274f9dbaa4eecb55540b6e952a6903ad", "patch": "@@ -1,3 +1,9 @@\n+Sun Jan 20 18:40:14 2002  Richard Kenner  <kenner@vlsi1.ultra.nyu.edu>\n+\n+\t* dwarf2out.c (loc_descriptor_from_tree): Add TRUTH_*_EXPR cases.\n+\t(gen_struct_or_union_type_die): Don't SIGSEGV if no TYPE_STUB_DECL\n+\tin incomplete case.\n+\n 2002-01-20  Graham Stott  <grahams@redhat.com>\n \n \t* cfgloop.c (flow_loop_preheader_scan): Fix typo."}, {"sha": "c0b9958b2c727b84c9ced4d907dc0a144e05dc42", "filename": "gcc/dwarf2out.c", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/9702143f274f9dbaa4eecb55540b6e952a6903ad/gcc%2Fdwarf2out.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/9702143f274f9dbaa4eecb55540b6e952a6903ad/gcc%2Fdwarf2out.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdwarf2out.c?ref=9702143f274f9dbaa4eecb55540b6e952a6903ad", "patch": "@@ -8066,14 +8066,19 @@ loc_descriptor_from_tree (loc, addressp)\n \treturn 0;\n       break;\n \n+    case TRUTH_AND_EXPR: \n+    case TRUTH_ANDIF_EXPR:\n     case BIT_AND_EXPR:\n       op = DW_OP_and;\n       goto do_binop;\n \n+    case TRUTH_XOR_EXPR:\n     case BIT_XOR_EXPR:\n       op = DW_OP_xor;\n       goto do_binop;\n \n+    case TRUTH_OR_EXPR:\n+    case TRUTH_ORIF_EXPR:\n     case BIT_IOR_EXPR:\n       op = DW_OP_or;\n       goto do_binop;\n@@ -8167,6 +8172,7 @@ loc_descriptor_from_tree (loc, addressp)\n       add_loc_descr (&ret, new_loc_descr (op, 0, 0));\n       break;\n \n+    case TRUTH_NOT_EXPR:\n     case BIT_NOT_EXPR:\n       op = DW_OP_not;\n       goto do_unop;\n@@ -10829,7 +10835,8 @@ gen_struct_or_union_type_die (type, context_die)\n       add_AT_flag (type_die, DW_AT_declaration, 1);\n \n       /* We don't need to do this for function-local types.  */\n-      if (! decl_function_context (TYPE_STUB_DECL (type)))\n+      if (TYPE_STUB_DECL (type)\n+\t  && ! decl_function_context (TYPE_STUB_DECL (type)))\n \tVARRAY_PUSH_TREE (incomplete_types, type);\n     }\n }"}]}