{"sha": "2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjkxMmRiMDRjMTA5MWU1YjZhMGZkOGE0NjRkOWVjOGEyYzVhMWZiNg==", "commit": {"author": {"name": "Uros Bizjak", "email": "ubizjak@gmail.com", "date": "2017-08-14T16:42:15Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2017-08-14T16:42:15Z"}, "message": "re PR target/46091 (missed optimization: x86 bt/btc/bts instructions)\n\n\tPR target/46091\n\t* config/i386/i386.md (*anddi_1_btr): New insn_and_split pattern.\n\t(*iordi_1_bts): Ditto.\n\t(*xordi_1_btc): Ditto.\n\ntestsuite/ChangeLog:\n\n\tPR target/46091\n\t* gcc.target/i386/pr46091-1.c: New test.\n\t* gcc.target/i386/pr46091-2.c: Ditto.\n\t* gcc.target/i386/pr46091-3.c: Ditto.\n\nFrom-SVN: r251095", "tree": {"sha": "ef84b6e0b05dce8ae6c9c2c51519caf478c49d19", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ef84b6e0b05dce8ae6c9c2c51519caf478c49d19"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6/comments", "author": {"login": "ubizjak", "id": 55479990, "node_id": "MDQ6VXNlcjU1NDc5OTkw", "avatar_url": "https://avatars.githubusercontent.com/u/55479990?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ubizjak", "html_url": "https://github.com/ubizjak", "followers_url": "https://api.github.com/users/ubizjak/followers", "following_url": "https://api.github.com/users/ubizjak/following{/other_user}", "gists_url": "https://api.github.com/users/ubizjak/gists{/gist_id}", "starred_url": "https://api.github.com/users/ubizjak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ubizjak/subscriptions", "organizations_url": "https://api.github.com/users/ubizjak/orgs", "repos_url": "https://api.github.com/users/ubizjak/repos", "events_url": "https://api.github.com/users/ubizjak/events{/privacy}", "received_events_url": "https://api.github.com/users/ubizjak/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "c7fd21762de653a19dabf837917a8ad6f9491bc0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c7fd21762de653a19dabf837917a8ad6f9491bc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c7fd21762de653a19dabf837917a8ad6f9491bc0"}], "stats": {"total": 106, "additions": 106, "deletions": 0}, "files": [{"sha": "4c147b06d11dc88bf36f4a53b62512e2905bbaab", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6", "patch": "@@ -1,3 +1,10 @@\n+2017-08-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/46091\n+\t* config/i386/i386.md (*anddi_1_btr): New insn_and_split pattern.\n+\t(*iordi_1_bts): Ditto.\n+\t(*xordi_1_btc): Ditto.\n+\n 2017-08-14  Bill Schmidt  <wschmidt@linux.vnet.ibm.com>\n \n \tPR target/79845"}, {"sha": "059a51832deccfefc825b9b2d6476557593c97b7", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 65, "deletions": 0, "changes": 65, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6", "patch": "@@ -8267,6 +8267,27 @@\n        (const_string \"*\")))\n    (set_attr \"mode\" \"SI,DI,DI,SI\")])\n \n+(define_insn_and_split \"*anddi_1_btr\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(and:DI\n+\t (match_operand:DI 1 \"register_operand\" \"%0\")\n+\t (match_operand:DI 2 \"const_int_operand\" \"n\")))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_64BIT && TARGET_USE_BT\n+   && IN_RANGE (exact_log2 (~INTVAL (operands[2])), 31, 63)\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(parallel [(set (zero_extract:DI (match_dup 0)\n+\t\t\t\t    (const_int 1)\n+\t\t\t\t    (match_dup 3))\n+\t\t   (const_int 0))\n+\t      (clobber (reg:CC FLAGS_REG))])]\n+  \"operands[3] = GEN_INT (exact_log2 (~INTVAL (operands[2])));\"\n+  [(set_attr \"type\" \"alu1\")\n+   (set_attr \"prefix_0f\" \"1\")\n+   (set_attr \"znver1_decode\" \"double\")\n+   (set_attr \"mode\" \"DI\")])\n+\n ;; Turn *anddi_1 into *andsi_1_zext if possible.\n (define_split\n   [(set (match_operand:DI 0 \"register_operand\")\n@@ -8791,6 +8812,50 @@\n   [(set_attr \"type\" \"alu\")\n    (set_attr \"mode\" \"<MODE>\")])\n \n+(define_insn_and_split \"*iordi_1_bts\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(ior:DI\n+\t (match_operand:DI 1 \"register_operand\" \"%0\")\n+\t (match_operand:DI 2 \"const_int_operand\" \"n\")))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_64BIT && TARGET_USE_BT\n+   && IN_RANGE (exact_log2 (INTVAL (operands[2])), 31, 63)\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(parallel [(set (zero_extract:DI (match_dup 0)\n+\t\t\t\t    (const_int 1)\n+\t\t\t\t    (match_dup 3))\n+\t\t   (const_int 1))\n+\t      (clobber (reg:CC FLAGS_REG))])]\n+  \"operands[3] = GEN_INT (exact_log2 (INTVAL (operands[2])));\"\n+  [(set_attr \"type\" \"alu1\")\n+   (set_attr \"prefix_0f\" \"1\")\n+   (set_attr \"znver1_decode\" \"double\")\n+   (set_attr \"mode\" \"DI\")])\n+\n+(define_insn_and_split \"*xordi_1_btc\"\n+  [(set (match_operand:DI 0 \"register_operand\" \"=r\")\n+\t(xor:DI\n+\t (match_operand:DI 1 \"register_operand\" \"%0\")\n+\t (match_operand:DI 2 \"const_int_operand\" \"n\")))\n+   (clobber (reg:CC FLAGS_REG))]\n+  \"TARGET_64BIT && TARGET_USE_BT\n+   && IN_RANGE (exact_log2 (INTVAL (operands[2])), 31, 63)\"\n+  \"#\"\n+  \"&& reload_completed\"\n+  [(parallel [(set (zero_extract:DI (match_dup 0)\n+\t\t\t\t    (const_int 1)\n+\t\t\t\t    (match_dup 3))\n+\t\t   (not:DI (zero_extract:DI (match_dup 0)\n+\t\t\t\t\t    (const_int 1)\n+\t\t\t\t\t    (match_dup 3))))\n+\t      (clobber (reg:CC FLAGS_REG))])]\n+  \"operands[3] = GEN_INT (exact_log2 (INTVAL (operands[2])));\"\n+  [(set_attr \"type\" \"alu1\")\n+   (set_attr \"prefix_0f\" \"1\")\n+   (set_attr \"znver1_decode\" \"double\")\n+   (set_attr \"mode\" \"DI\")])\n+\n ;; See comment for addsi_1_zext why we do use nonimmediate_operand\n (define_insn \"*<code>si_1_zext\"\n   [(set (match_operand:DI 0 \"register_operand\" \"=r\")"}, {"sha": "18dac95e7e8b54f70def9b16d1074ce39bdf058d", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6", "patch": "@@ -1,3 +1,10 @@\n+2017-08-14  Uros Bizjak  <ubizjak@gmail.com>\n+\n+\tPR target/46091\n+\t* gcc.target/i386/pr46091-1.c: New test.\n+\t* gcc.target/i386/pr46091-2.c: Ditto.\n+\t* gcc.target/i386/pr46091-3.c: Ditto.\n+\n 2017-08-14  Wilco Dijkstra  <wdijkstr@arm.com>\n \n \tPR target/81643"}, {"sha": "adca01f294c19835c6a2076ce6c9d214e8999c10", "filename": "gcc/testsuite/gcc.target/i386/pr46091-1.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46091-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46091-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46091-1.c?ref=2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2\" } */\n+\n+unsigned long long test (unsigned long long a)\n+{\n+  return a & ~(1ull << 55);\n+}\n+\n+/* { dg-final { scan-assembler \"btr\" } } */"}, {"sha": "174375393cf572ec3464fa8e9b5340a7c0cc92bd", "filename": "gcc/testsuite/gcc.target/i386/pr46091-2.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46091-2.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46091-2.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46091-2.c?ref=2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2\" } */\n+\n+unsigned long long test (unsigned long long a)\n+{\n+  return a | (1ull << 55);\n+}\n+\n+/* { dg-final { scan-assembler \"bts\" } } */"}, {"sha": "c8091e9f41c02660c5b50eb9fb92ef725369e8ac", "filename": "gcc/testsuite/gcc.target/i386/pr46091-3.c", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46091-3.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46091-3.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr46091-3.c?ref=2912db04c1091e5b6a0fd8a464d9ec8a2c5a1fb6", "patch": "@@ -0,0 +1,9 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2\" } */\n+\n+unsigned long long test (unsigned long long a)\n+{\n+  return a ^ (1ull << 55);\n+}\n+\n+/* { dg-final { scan-assembler \"btc\" } } */"}]}