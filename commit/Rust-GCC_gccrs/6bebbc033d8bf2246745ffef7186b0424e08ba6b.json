{"sha": "6bebbc033d8bf2246745ffef7186b0424e08ba6b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NmJlYmJjMDMzZDhiZjIyNDY3NDVmZmVmNzE4NmIwNDI0ZTA4YmE2Yg==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-07-24T11:49:37Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2020-08-18T07:55:09Z"}, "message": "d: Fix ICE Segmentation fault during RTL pass: expand on armhf/armel/s390x\n\ngcc/d/ChangeLog:\n\n\tPR d/96301\n\t* decl.cc (DeclVisitor::visit (FuncDeclaration *)): Only return\n\tnon-trivial structs by invisible reference.\n\ngcc/testsuite/ChangeLog:\n\n\tPR d/96301\n\t* gdc.dg/pr96301a.d: New test.\n\t* gdc.dg/pr96301b.d: New test.\n\t* gdc.dg/pr96301c.d: New test.", "tree": {"sha": "2a07be3b566746ca87d8939d771fa26214aecb28", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2a07be3b566746ca87d8939d771fa26214aecb28"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/6bebbc033d8bf2246745ffef7186b0424e08ba6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bebbc033d8bf2246745ffef7186b0424e08ba6b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/6bebbc033d8bf2246745ffef7186b0424e08ba6b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/6bebbc033d8bf2246745ffef7186b0424e08ba6b/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d5de349d21479d7ec61dd0153e6f0958ad7384f", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/7d5de349d21479d7ec61dd0153e6f0958ad7384f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/7d5de349d21479d7ec61dd0153e6f0958ad7384f"}], "stats": {"total": 98, "additions": 92, "deletions": 6}, "files": [{"sha": "295f780170a800e7aac9f056492b9e4264fc5871", "filename": "gcc/d/decl.cc", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bebbc033d8bf2246745ffef7186b0424e08ba6b/gcc%2Fd%2Fdecl.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bebbc033d8bf2246745ffef7186b0424e08ba6b/gcc%2Fd%2Fdecl.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fdecl.cc?ref=6bebbc033d8bf2246745ffef7186b0424e08ba6b", "patch": "@@ -958,11 +958,14 @@ class DeclVisitor : public Visitor\n       {\n \ttree resdecl = DECL_RESULT (fndecl);\n \n-\tTREE_TYPE (resdecl)\n-\t  = build_reference_type (TREE_TYPE (resdecl));\n-\tDECL_BY_REFERENCE (resdecl) = 1;\n-\tTREE_ADDRESSABLE (resdecl) = 0;\n-\trelayout_decl (resdecl);\n+\t/* Return non-trivial structs by invisible reference.  */\n+\tif (TREE_ADDRESSABLE (TREE_TYPE (resdecl)))\n+\t  {\n+\t    TREE_TYPE (resdecl) = build_reference_type (TREE_TYPE (resdecl));\n+\t    DECL_BY_REFERENCE (resdecl) = 1;\n+\t    TREE_ADDRESSABLE (resdecl) = 0;\n+\t    relayout_decl (resdecl);\n+\t  }\n \n \tif (d->nrvo_var)\n \t  {\n@@ -972,7 +975,9 @@ class DeclVisitor : public Visitor\n \t    DECL_NAME (resdecl) = DECL_NAME (var);\n \t    /* Don't forget that we take its address.  */\n \t    TREE_ADDRESSABLE (var) = 1;\n-\t    resdecl = build_deref (resdecl);\n+\n+\t    if (DECL_BY_REFERENCE (resdecl))\n+\t      resdecl = build_deref (resdecl);\n \n \t    SET_DECL_VALUE_EXPR (var, resdecl);\n \t    DECL_HAS_VALUE_EXPR_P (var) = 1;"}, {"sha": "314904bbd06e138d66b0a965daf808c30dbf274b", "filename": "gcc/testsuite/gdc.dg/pr96301a.d", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bebbc033d8bf2246745ffef7186b0424e08ba6b/gcc%2Ftestsuite%2Fgdc.dg%2Fpr96301a.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bebbc033d8bf2246745ffef7186b0424e08ba6b/gcc%2Ftestsuite%2Fgdc.dg%2Fpr96301a.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fpr96301a.d?ref=6bebbc033d8bf2246745ffef7186b0424e08ba6b", "patch": "@@ -0,0 +1,31 @@\n+// https://gcc.gnu.org/bugzilla/show_bug.cgi?id=96301\n+// { dg-additional-options \"-fPIC\" { target fpic } }\n+// { dg-do compile }\n+struct Type\n+{\n+    size_t length;\n+    int* ptr;\n+}\n+\n+class Container\n+{\n+    Type children;\n+\n+    void remove(void* data)\n+    {\n+        Type remove(Type range)\n+        {\n+            auto result = range;\n+            if (result.front)\n+                return result;\n+            assert(0);\n+        }\n+        if (data)\n+            remove(children);\n+    }\n+}\n+\n+int front(Type a)\n+{\n+    return a.ptr[0];\n+}"}, {"sha": "3d978beebc8fa9e2a076dec578eadc42a6b54f6f", "filename": "gcc/testsuite/gdc.dg/pr96301b.d", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bebbc033d8bf2246745ffef7186b0424e08ba6b/gcc%2Ftestsuite%2Fgdc.dg%2Fpr96301b.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bebbc033d8bf2246745ffef7186b0424e08ba6b/gcc%2Ftestsuite%2Fgdc.dg%2Fpr96301b.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fpr96301b.d?ref=6bebbc033d8bf2246745ffef7186b0424e08ba6b", "patch": "@@ -0,0 +1,25 @@\n+// https://gcc.gnu.org/bugzilla/show_bug.cgi?id=96301\n+// { dg-additional-options \"-fPIC\" { target fpic } }\n+// { dg-do compile }\n+class Container\n+{\n+    int[100] children;\n+\n+    void remove(void* data)\n+    {\n+        int[100] remove(int[100] range)\n+        {\n+            auto result = range;\n+            if (result.front)\n+                return result;\n+            assert(0);\n+        }\n+        if (data)\n+            remove(children);\n+    }\n+}\n+\n+int front(int[100] a)\n+{\n+    return a.ptr[0];\n+}"}, {"sha": "c90946250160a5d0e884b3f013c61b2ac7f562d1", "filename": "gcc/testsuite/gdc.dg/pr96301c.d", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/6bebbc033d8bf2246745ffef7186b0424e08ba6b/gcc%2Ftestsuite%2Fgdc.dg%2Fpr96301c.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/6bebbc033d8bf2246745ffef7186b0424e08ba6b/gcc%2Ftestsuite%2Fgdc.dg%2Fpr96301c.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fpr96301c.d?ref=6bebbc033d8bf2246745ffef7186b0424e08ba6b", "patch": "@@ -0,0 +1,25 @@\n+// https://gcc.gnu.org/bugzilla/show_bug.cgi?id=96301\n+// { dg-additional-options \"-fPIC\" { target fpic } }\n+// { dg-do compile }\n+class Container\n+{\n+    int[] children;\n+\n+    void remove(void* data)\n+    {\n+        int[] remove(int[] range)\n+        {\n+            auto result = range;\n+            if (result.front)\n+                return result;\n+            assert(0);\n+        }\n+        if (data)\n+            remove(children);\n+    }\n+}\n+\n+int front(int[] a)\n+{\n+    return a.ptr[0];\n+}"}]}