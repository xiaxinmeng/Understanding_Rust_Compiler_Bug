{"sha": "44404b8b955d9e7dc9932eca92991d925847ece9", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NDQ0MDRiOGI5NTVkOWU3ZGM5OTMyZWNhOTI5OTFkOTI1ODQ3ZWNlOQ==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl@gnu.org", "date": "2001-04-26T16:02:05Z"}, "committer": {"name": "H.J. Lu", "email": "hjl@gcc.gnu.org", "date": "2001-04-26T16:02:05Z"}, "message": "config.gcc (mips*-*-linux*): Add elfos.h to tm_file.\n\n2001-04-26  H.J. Lu  (hjl@gnu.org)\n\n\t* config.gcc (mips*-*-linux*): Add elfos.h to tm_file.\n\n\t* config/mips/ecoff.h (STARTFILE_SPEC): Undefine before\n\tdefine.\n\t* config/mips/elf64.h (MAX_OFILE_ALIGNMENT): Likewise.\n\t(ASM_OUTPUT_SECTION_NAME): Likewise.\n\t(ASM_WEAKEN_LABEL): Likewise.\n\t(UNIQUE_SECTION): Likewise.\n\t(ASM_OUTPUT_CONSTRUCTOR): Likewise.\n\t(ASM_OUTPUT_DESTRUCTOR): Likewise.\n\t* config/mips/elf.h (MAX_OFILE_ALIGNMENT): Likewise.\n\t(ASM_OUTPUT_SECTION_NAME): Likewise.\n\t(ASM_WEAKEN_LABEL): Likewise.\n\t(UNIQUE_SECTION): Likewise.\n\t(ASM_OUTPUT_CONSTRUCTOR): Likewise.\n\t(ASM_OUTPUT_DESTRUCTOR): Likewise.\n\t* config/mips/linux.h (HANDLE_SYSV_PRAGMA): Likewise.\n\t* config/mips/mips.h (DBX_CONTIN_LENGTH): Likewise.\n\t(ASM_FILE_START): Likewise.\n\t(ASM_OUTPUT_SOURCE_LINE): Likewise.\n\t(ASM_DECLARE_OBJECT_NAME): Likewise.\n\t(ASM_FILE_END): Likewise.\n\t(ASM_DECLARE_FUNCTION_NAME): Likewise.\n\t(ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n\t(ASM_GENERATE_INTERNAL_LABEL): Likewise.\n\t(ASM_OUTPUT_CASE_LABEL): Likewise.\n\t(ASM_OUTPUT_SKIP): Likewise.\n\t(ASM_OUTPUT_ASCII): Likewise.\n\t(ASM_OUTPUT_IDENT): Likewise.\n\t(READONLY_DATA_SECTION): Likewise.\n\t(EXTRA_SECTIONS): Likewise.\n\t(EXTRA_SECTION_FUNCTIONS): Likewise.\n\t(SELECT_RTX_SECTION): Likewise.\n\t(SELECT_SECTION): Likewise.\n\n\t* config/mips/linux.h (INVOKE__main): Undefine.\n\t(CTOR_LIST_BEGIN): Likewise.\n\t(CTOR_LIST_END): Likewise.\n\t(DTOR_LIST_BEGIN): Likewise.\n\t(DTOR_LIST_END): Likewise.\n\t(SET_ASM_OP): Defined it to \".dummy\".\n\t(ASM_OUTPUT_DEF): Defined.\n\t(ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL): Defined.\n\nFrom-SVN: r41592", "tree": {"sha": "f1f71c5f61c413ccd780272aefd4018984c6e7fb", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f1f71c5f61c413ccd780272aefd4018984c6e7fb"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/44404b8b955d9e7dc9932eca92991d925847ece9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44404b8b955d9e7dc9932eca92991d925847ece9", "html_url": "https://github.com/Rust-GCC/gccrs/commit/44404b8b955d9e7dc9932eca92991d925847ece9", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/44404b8b955d9e7dc9932eca92991d925847ece9/comments", "author": null, "committer": null, "parents": [{"sha": "fdc2d3b0f976b17b61ec5d3b4df3a86693250982", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/fdc2d3b0f976b17b61ec5d3b4df3a86693250982", "html_url": "https://github.com/Rust-GCC/gccrs/commit/fdc2d3b0f976b17b61ec5d3b4df3a86693250982"}], "stats": {"total": 116, "additions": 114, "deletions": 2}, "files": [{"sha": "3c8e684780c508bac2acc8acd35aa5159a0a114b", "filename": "gcc/ChangeLog", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44404b8b955d9e7dc9932eca92991d925847ece9/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44404b8b955d9e7dc9932eca92991d925847ece9/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=44404b8b955d9e7dc9932eca92991d925847ece9", "patch": "@@ -1,3 +1,49 @@\n+2001-04-26  H.J. Lu  (hjl@gnu.org)\n+\n+\t* config.gcc (mips*-*-linux*): Add elfos.h to tm_file.\n+\n+\t* config/mips/ecoff.h (STARTFILE_SPEC): Undefine before\n+\tdefine.\n+\t* config/mips/elf64.h (MAX_OFILE_ALIGNMENT): Likewise.\n+\t(ASM_OUTPUT_SECTION_NAME): Likewise.\n+\t(ASM_WEAKEN_LABEL): Likewise.\n+\t(UNIQUE_SECTION): Likewise.\n+\t(ASM_OUTPUT_CONSTRUCTOR): Likewise.\n+\t(ASM_OUTPUT_DESTRUCTOR): Likewise.\n+\t* config/mips/elf.h (MAX_OFILE_ALIGNMENT): Likewise.\n+\t(ASM_OUTPUT_SECTION_NAME): Likewise.\n+\t(ASM_WEAKEN_LABEL): Likewise.\n+\t(UNIQUE_SECTION): Likewise.\n+\t(ASM_OUTPUT_CONSTRUCTOR): Likewise.\n+\t(ASM_OUTPUT_DESTRUCTOR): Likewise.\n+\t* config/mips/linux.h (HANDLE_SYSV_PRAGMA): Likewise.\n+\t* config/mips/mips.h (DBX_CONTIN_LENGTH): Likewise.\n+\t(ASM_FILE_START): Likewise.\n+\t(ASM_OUTPUT_SOURCE_LINE): Likewise.\n+\t(ASM_DECLARE_OBJECT_NAME): Likewise.\n+\t(ASM_FILE_END): Likewise.\n+\t(ASM_DECLARE_FUNCTION_NAME): Likewise.\n+\t(ASM_OUTPUT_INTERNAL_LABEL): Likewise.\n+\t(ASM_GENERATE_INTERNAL_LABEL): Likewise.\n+\t(ASM_OUTPUT_CASE_LABEL): Likewise.\n+\t(ASM_OUTPUT_SKIP): Likewise.\n+\t(ASM_OUTPUT_ASCII): Likewise.\n+\t(ASM_OUTPUT_IDENT): Likewise.\n+\t(READONLY_DATA_SECTION): Likewise.\n+\t(EXTRA_SECTIONS): Likewise.\n+\t(EXTRA_SECTION_FUNCTIONS): Likewise.\n+\t(SELECT_RTX_SECTION): Likewise.\n+\t(SELECT_SECTION): Likewise.\n+\n+\t* config/mips/linux.h (INVOKE__main): Undefine.\n+\t(CTOR_LIST_BEGIN): Likewise.\n+\t(CTOR_LIST_END): Likewise.\n+\t(DTOR_LIST_BEGIN): Likewise.\n+\t(DTOR_LIST_END): Likewise.\n+\t(SET_ASM_OP): Defined it to \".dummy\".\n+\t(ASM_OUTPUT_DEF): Defined.\n+\t(ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL): Defined.\n+\n 2001-04-26  Nick Clifton  <nickc@cambridge.redhat.com>\n \n \t* config/arm/arm.h (ASM_OUTPUT_MAX_SKIP_ALIGN): Define, if the"}, {"sha": "29e8d0a98195556c96f3f35a78b044ff1c60ce54", "filename": "gcc/config.gcc", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44404b8b955d9e7dc9932eca92991d925847ece9/gcc%2Fconfig.gcc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44404b8b955d9e7dc9932eca92991d925847ece9/gcc%2Fconfig.gcc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig.gcc?ref=44404b8b955d9e7dc9932eca92991d925847ece9", "patch": "@@ -2219,8 +2219,8 @@ mipsel-*-netbsd* | mips-dec-netbsd*)    # Decstation running NetBSD\n mips*-*-linux*)\t\t\t\t# Linux MIPS, either endian.\n \txmake_file=x-linux\n \tcase $machine in\n-\t       mips*el-*)  tm_file=\"mips/elfl.h mips/linux.h\" ;;\n-\t       *)\t  tm_file=\"mips/elf.h mips/linux.h\" ;;\n+\t       mips*el-*)  tm_file=\"elfos.h mips/elfl.h mips/linux.h\" ;;\n+\t       *)\t  tm_file=\"elfos.h mips/elf.h mips/linux.h\" ;;\n \tesac\n \ttmake_file=t-linux\n \textra_parts=\"crtbegin.o crtbeginS.o crtend.o crtendS.o\""}, {"sha": "3297d7d4321da15bf0a0c95ca59aae1f6b9039c3", "filename": "gcc/config/mips/ecoff.h", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44404b8b955d9e7dc9932eca92991d925847ece9/gcc%2Fconfig%2Fmips%2Fecoff.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44404b8b955d9e7dc9932eca92991d925847ece9/gcc%2Fconfig%2Fmips%2Fecoff.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fecoff.h?ref=44404b8b955d9e7dc9932eca92991d925847ece9", "patch": "@@ -32,4 +32,5 @@ Boston, MA 02111-1307, USA.  */\n \n /* Don't assume anything about startfiles.  The linker script will load the\n    appropriate startfiles.  */\n+#undef STARTFILE_SPEC\n #define STARTFILE_SPEC \"\""}, {"sha": "34d26c773da5c387934269db3f121da80ee4da4a", "filename": "gcc/config/mips/elf.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44404b8b955d9e7dc9932eca92991d925847ece9/gcc%2Fconfig%2Fmips%2Felf.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44404b8b955d9e7dc9932eca92991d925847ece9/gcc%2Fconfig%2Fmips%2Felf.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felf.h?ref=44404b8b955d9e7dc9932eca92991d925847ece9", "patch": "@@ -53,13 +53,15 @@ do {\t\t\t\t\t\t\t\\\n    specified using the `__attribute__ ((aligned (N)))' construct.  If\n    not defined, the default value is `BIGGEST_ALIGNMENT'.  */\n \n+#undef MAX_OFILE_ALIGNMENT\n #define MAX_OFILE_ALIGNMENT (32768*8)\n \n /* A C statement to output something to the assembler file to switch to section\n    NAME for object DECL which is either a FUNCTION_DECL, a VAR_DECL or\n    NULL_TREE.  Some target formats do not support arbitrary sections.  Do not\n    define this macro in such cases.  */\n \n+#undef ASM_OUTPUT_SECTION_NAME\n #define ASM_OUTPUT_SECTION_NAME(F, DECL, NAME, RELOC) \\\n do {\t\t\t\t\t\t\t\t\\\n   extern FILE *asm_out_text_file;\t\t\t\t\\\n@@ -191,6 +193,7 @@ do {\t\t\t\t\t\t\t\t\t \\\n    but until that support is generally available, the 'if' below\n    should serve. */\n \n+#undef ASM_WEAKEN_LABEL\n #define ASM_WEAKEN_LABEL(FILE,NAME) ASM_OUTPUT_WEAK_ALIAS(FILE,NAME,0)\n #define ASM_OUTPUT_WEAK_ALIAS(FILE,NAME,VALUE)\t\\\n  do {\t\t\t\t\t\t\\\n@@ -210,6 +213,7 @@ do {\t\t\t\t\t\t\t\t\t \\\n #define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)\n #undef UNIQUE_SECTION_P\n #define UNIQUE_SECTION_P(DECL) (DECL_ONE_ONLY (DECL))\n+#undef UNIQUE_SECTION\n #define UNIQUE_SECTION(DECL,RELOC)\t\t\t\t\t   \\\n do {\t\t\t\t\t\t\t\t\t   \\\n   int len, size, sec;\t\t\t\t\t\t\t   \\\n@@ -331,6 +335,7 @@ void FN ()                                                            \\\n \n /* A C statement (sans semicolon) to output an element in the table of\n    global constructors.  */\n+#undef ASM_OUTPUT_CONSTRUCTOR\n #define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)                             \\\n   do {                                                                \\\n     ctors_section ();                                                 \\\n@@ -342,6 +347,7 @@ void FN ()                                                            \\\n \n /* A C statement (sans semicolon) to output an element in the table of\n    global destructors.  */\n+#undef ASM_OUTPUT_DESTRUCTOR\n #define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)                              \\\n   do {                                                                \\\n     dtors_section ();                                                 \\"}, {"sha": "0636200ed4b7ced0b10d13562d24aeab09db5589", "filename": "gcc/config/mips/elf64.h", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44404b8b955d9e7dc9932eca92991d925847ece9/gcc%2Fconfig%2Fmips%2Felf64.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44404b8b955d9e7dc9932eca92991d925847ece9/gcc%2Fconfig%2Fmips%2Felf64.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Felf64.h?ref=44404b8b955d9e7dc9932eca92991d925847ece9", "patch": "@@ -54,6 +54,7 @@ Boston, MA 02111-1307, USA.  */\n    specified using the `__attribute__ ((aligned (N)))' construct.  If\n    not defined, the default value is `BIGGEST_ALIGNMENT'.  */\n \n+#undef MAX_OFILE_ALIGNMENT\n #define MAX_OFILE_ALIGNMENT (32768*8)\n \n /* We need to use .esize and .etype instead of .size and .type to\n@@ -77,6 +78,7 @@ do {\t\t\t\t\t\t\t\\\n    NULL_TREE.  Some target formats do not support arbitrary sections.  Do not\n    define this macro in such cases.  */\n \n+#undef ASM_OUTPUT_SECTION_NAME\n #define ASM_OUTPUT_SECTION_NAME(F, DECL, NAME, RELOC) \\\n do {\t\t\t\t\t\t\t\t\\\n   extern FILE *asm_out_text_file;\t\t\t\t\\\n@@ -172,6 +174,7 @@ do {\t\t\t\t\t\t\t\t\t \\\n    but until that support is generally available, the 'if' below\n    should serve. */\n \n+#undef ASM_WEAKEN_LABEL\n #define ASM_WEAKEN_LABEL(FILE,NAME) ASM_OUTPUT_WEAK_ALIAS(FILE,NAME,0)\n #define ASM_OUTPUT_WEAK_ALIAS(FILE,NAME,VALUE)\t\\\n  do {\t\t\t\t\t\t\\\n@@ -191,6 +194,7 @@ do {\t\t\t\t\t\t\t\t\t \\\n #define MAKE_DECL_ONE_ONLY(DECL) (DECL_WEAK (DECL) = 1)\n #undef UNIQUE_SECTION_P\n #define UNIQUE_SECTION_P(DECL) (DECL_ONE_ONLY (DECL))\n+#undef UNIQUE_SECTION\n #define UNIQUE_SECTION(DECL,RELOC)\t\t\t\t\t   \\\n do {\t\t\t\t\t\t\t\t\t   \\\n   int len, size, sec;\t\t\t\t\t\t\t   \\\n@@ -311,6 +315,7 @@ void FN ()                                                            \\\n \n /* A C statement (sans semicolon) to output an element in the table of\n    global constructors.  */\n+#undef ASM_OUTPUT_CONSTRUCTOR\n #define ASM_OUTPUT_CONSTRUCTOR(FILE,NAME)                             \\\n   do {                                                                \\\n     ctors_section ();                                                 \\\n@@ -322,6 +327,7 @@ void FN ()                                                            \\\n \n /* A C statement (sans semicolon) to output an element in the table of\n    global destructors.  */\n+#undef ASM_OUTPUT_DESTRUCTOR\n #define ASM_OUTPUT_DESTRUCTOR(FILE,NAME)                              \\\n   do {                                                                \\\n     dtors_section ();                                                 \\"}, {"sha": "fc4c237c89d982085aee93f033f2d5efd8f14707", "filename": "gcc/config/mips/linux.h", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44404b8b955d9e7dc9932eca92991d925847ece9/gcc%2Fconfig%2Fmips%2Flinux.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44404b8b955d9e7dc9932eca92991d925847ece9/gcc%2Fconfig%2Fmips%2Flinux.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Flinux.h?ref=44404b8b955d9e7dc9932eca92991d925847ece9", "patch": "@@ -37,6 +37,7 @@ Boston, MA 02111-1307, USA.  */\n \n \n /* Handle #pragma weak and #pragma pack.  */\n+#undef HANDLE_SYSV_PRAGMA\n #define HANDLE_SYSV_PRAGMA 1\n \n /* Use more efficient ``thunks'' to implement C++ vtables. */\n@@ -160,3 +161,38 @@ Boston, MA 02111-1307, USA.  */\n %{mabi=64: -64} \\\n %{!fno-PIC:%{!fno-pic:-KPIC}} \\\n %{fno-PIC:-non_shared} %{fno-pic:-non_shared}\"\n+\n+/* We don't need those nonsenses.  */\n+#undef INVOKE__main\n+#undef CTOR_LIST_BEGIN\n+#undef CTOR_LIST_END\n+#undef DTOR_LIST_BEGIN\n+#undef DTOR_LIST_END\n+\n+/* The MIPS assembler has different syntax for .set. We set it to\n+   .dummy to trap any errors.  */\n+#undef SET_ASM_OP\n+#define SET_ASM_OP \"\\t.dummy\\t\"\n+\n+/* This is how we tell the assembler that two symbols have the\n+   same value.  */\n+#undef ASM_OUTPUT_DEF\n+#define ASM_OUTPUT_DEF(FILE,LABEL1,LABEL2)\t\t\t\t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+\tfprintf ((FILE), \"\\t\");\t\t\t\t\t\t\\\n+\tassemble_name (FILE, LABEL1);\t\t\t\t\t\\\n+\tfprintf (FILE, \"=\");\t\t\t\t\t\t\\\n+\tassemble_name (FILE, LABEL2);\t\t\t\t\t\\\n+\tfprintf (FILE, \"\\n\");\t\t\t\t\t\t\\\n+ } while (0)\n+\n+#undef ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL\n+#define ASM_OUTPUT_DEFINE_LABEL_DIFFERENCE_SYMBOL(FILE, SY, HI, LO)    \t\\\n+  do {\t\t\t\t\t\t\t\t\t\\\n+\tfputc ('\\t', FILE);\t\t\t\t\t\t\\\n+\tassemble_name (FILE, SY);\t\t\t\t\t\\\n+\tfputc ('=', FILE);\t\t\t\t\t\t\\\n+\tassemble_name (FILE, HI);\t\t\t\t\t\\\n+\tfputc ('-', FILE);\t\t\t\t\t\t\\\n+\tassemble_name (FILE, LO);\t\t\t\t\t\\\n+  } while (0)"}, {"sha": "08f35fa7c2de7cedfb361dae692c6ceee0151f36", "filename": "gcc/config/mips/mips.h", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/44404b8b955d9e7dc9932eca92991d925847ece9/gcc%2Fconfig%2Fmips%2Fmips.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/44404b8b955d9e7dc9932eca92991d925847ece9/gcc%2Fconfig%2Fmips%2Fmips.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmips%2Fmips.h?ref=44404b8b955d9e7dc9932eca92991d925847ece9", "patch": "@@ -1086,6 +1086,7 @@ while (0)\n \n /* On Sun 4, this limit is 2048.  We use 1500 to be safe,\n    since the length can run past this up to a continuation point.  */\n+#undef DBX_CONTIN_LENGTH\n #define DBX_CONTIN_LENGTH 1500\n \n /* How to renumber registers for dbx and gdb. */\n@@ -3789,6 +3790,7 @@ while (0)\n    declaration when the code is processed, it generates a two\n    instruction sequence.  */\n \n+#undef ASM_FILE_START\n #define ASM_FILE_START(STREAM) mips_asm_file_start (STREAM)\n \n /* Output to assembler file text saying following lines\n@@ -4100,6 +4102,7 @@ while (0)\n #define LABEL_AFTER_LOC(STREAM)\n #endif\n \n+#undef ASM_OUTPUT_SOURCE_LINE\n #define ASM_OUTPUT_SOURCE_LINE(STREAM, LINE)\t\t\t\t\\\n   mips_output_lineno (STREAM, LINE)\n \n@@ -4140,6 +4143,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n    If this macro is not defined, then the variable name is defined\n    in the usual manner as a label (by means of `ASM_OUTPUT_LABEL').  */\n \n+#undef ASM_DECLARE_OBJECT_NAME\n #define ASM_DECLARE_OBJECT_NAME(STREAM, NAME, DECL)\t\t\t\\\n do\t\t\t\t\t\t\t\t\t\\\n  {\t\t\t\t\t\t\t\t\t\\\n@@ -4200,6 +4204,7 @@ while (0)\n   mips_output_external(STREAM,DECL,NAME)\n \n /* This says what to print at the end of the assembly file */\n+#undef ASM_FILE_END\n #define ASM_FILE_END(STREAM) mips_asm_file_end(STREAM)\n \n \n@@ -4210,6 +4215,7 @@ while (0)\n \n    Also, switch files if we are optimizing the global pointer.  */\n \n+#undef ASM_DECLARE_FUNCTION_NAME\n #define ASM_DECLARE_FUNCTION_NAME(STREAM,NAME,DECL)\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   extern FILE *asm_out_text_file;\t\t\t\t\t\\\n@@ -4232,6 +4238,7 @@ while (0)\n /* This is how to output an internal numbered label where\n    PREFIX is the class of label and NUM is the number within the class.  */\n \n+#undef ASM_OUTPUT_INTERNAL_LABEL\n #define ASM_OUTPUT_INTERNAL_LABEL(STREAM,PREFIX,NUM)\t\t\t\\\n   fprintf (STREAM, \"%s%s%d:\\n\", LOCAL_LABEL_PREFIX, PREFIX, NUM)\n \n@@ -4240,6 +4247,7 @@ while (0)\n    PREFIX is the class of label and NUM is the number within the class.\n    This is suitable for output with `assemble_name'.  */\n \n+#undef ASM_GENERATE_INTERNAL_LABEL\n #define ASM_GENERATE_INTERNAL_LABEL(LABEL,PREFIX,NUM)\t\t\t\\\n   sprintf ((LABEL), \"*%s%s%ld\", (LOCAL_LABEL_PREFIX), (PREFIX), (long)(NUM))\n \n@@ -4355,6 +4363,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n    JUMP_TABLES_IN_TEXT_SECTION, because it is not conditional.\n    Instead, we use ASM_OUTPUT_CASE_LABEL to switch back to the .text\n    section if appropriate.  */\n+#undef ASM_OUTPUT_CASE_LABEL\n #define ASM_OUTPUT_CASE_LABEL(FILE, PREFIX, NUM, INSN)\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   if (TARGET_EMBEDDED_PIC || TARGET_MIPS16)\t\t\t\t\\\n@@ -4372,10 +4381,12 @@ do {\t\t\t\t\t\t\t\t\t\\\n /* This is how to output an assembler line to advance the location\n    counter by SIZE bytes.  */\n \n+#undef ASM_OUTPUT_SKIP\n #define ASM_OUTPUT_SKIP(STREAM,SIZE)\t\t\t\t\t\\\n   fprintf (STREAM, \"\\t.space\\t%u\\n\", (SIZE))\n \n /* This is how to output a string.  */\n+#undef ASM_OUTPUT_ASCII\n #define ASM_OUTPUT_ASCII(STREAM, STRING, LEN)\t\t\t\t\\\n do {\t\t\t\t\t\t\t\t\t\\\n   register int i, c, len = (LEN), cur_pos = 17;\t\t\t\t\\\n@@ -4451,6 +4462,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define SCCS_DIRECTIVE\n \n /* Output #ident as a in the read-only data section.  */\n+#undef ASM_OUTPUT_IDENT\n #define ASM_OUTPUT_IDENT(FILE, STRING)\t\t\t\t\t\\\n {\t\t\t\t\t\t\t\t\t\\\n   const char *p = STRING;\t\t\t\t\t\t\\\n@@ -4469,11 +4481,13 @@ do {\t\t\t\t\t\t\t\t\t\\\n #define DATA_SECTION_ASM_OP\t\"\\t.data\"\t/* large data */\n #define SDATA_SECTION_ASM_OP\t\"\\t.sdata\"\t/* small data */\n #define RDATA_SECTION_ASM_OP\t\"\\t.rdata\"\t/* read-only data */\n+#undef READONLY_DATA_SECTION\n #define READONLY_DATA_SECTION\trdata_section\n #define SMALL_DATA_SECTION\tsdata_section\n \n /* What other sections we support other than the normal .data/.text.  */\n \n+#undef EXTRA_SECTIONS\n #define EXTRA_SECTIONS in_sdata, in_rdata\n \n /* Define the additional functions to select our additional sections.  */\n@@ -4486,6 +4500,7 @@ do {\t\t\t\t\t\t\t\t\t\\\n    if the constant is too large for sdata, and it's readonly, it\n    will go into the .rdata section. */\n \n+#undef EXTRA_SECTION_FUNCTIONS\n #define EXTRA_SECTION_FUNCTIONS\t\t\t\t\t\t\\\n void\t\t\t\t\t\t\t\t\t\\\n sdata_section ()\t\t\t\t\t\t\t\\\n@@ -4510,8 +4525,10 @@ rdata_section ()\t\t\t\t\t\t\t\\\n /* Given a decl node or constant node, choose the section to output it in\n    and select that section.  */\n \n+#undef SELECT_RTX_SECTION\n #define SELECT_RTX_SECTION(MODE,RTX)\tmips_select_rtx_section (MODE, RTX)\n \n+#undef SELECT_SECTION\n #define SELECT_SECTION(DECL, RELOC)\tmips_select_section (DECL, RELOC)\n \n \f"}]}