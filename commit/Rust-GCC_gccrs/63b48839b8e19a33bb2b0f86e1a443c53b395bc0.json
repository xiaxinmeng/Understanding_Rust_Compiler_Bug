{"sha": "63b48839b8e19a33bb2b0f86e1a443c53b395bc0", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NjNiNDg4MzliOGUxOWEzM2JiMmIwZjg2ZTFhNDQzYzUzYjM5NWJjMA==", "commit": {"author": {"name": "Ville Voutilainen", "email": "ville.voutilainen@gmail.com", "date": "2018-08-07T13:46:16Z"}, "committer": {"name": "Ville Voutilainen", "email": "ville@gcc.gnu.org", "date": "2018-08-07T13:46:16Z"}, "message": "re PR c++/79133 (lambda capture shadowing parameter & decltype confusion)\n\nPR c++/79133\n\ngcc/cp/\n\nPR c++/79133\n* name-lookup.c (check_local_shadow): Reject captures and parameters\nwith the same name.\n\ntestsuite/\n\nPR c++/79133\n* g++.dg/cpp0x/lambda/lambda-shadow3.C: New.\n* g++.dg/cpp1y/lambda-generic-variadic18.C: Likewise.\n\nFrom-SVN: r263357", "tree": {"sha": "9e8a087ee849a02f9143bf2caa45d45d81af9bb9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/9e8a087ee849a02f9143bf2caa45d45d81af9bb9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/63b48839b8e19a33bb2b0f86e1a443c53b395bc0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63b48839b8e19a33bb2b0f86e1a443c53b395bc0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/63b48839b8e19a33bb2b0f86e1a443c53b395bc0", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/63b48839b8e19a33bb2b0f86e1a443c53b395bc0/comments", "author": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "villevoutilainen", "id": 963599, "node_id": "MDQ6VXNlcjk2MzU5OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/963599?v=4", "gravatar_id": "", "url": "https://api.github.com/users/villevoutilainen", "html_url": "https://github.com/villevoutilainen", "followers_url": "https://api.github.com/users/villevoutilainen/followers", "following_url": "https://api.github.com/users/villevoutilainen/following{/other_user}", "gists_url": "https://api.github.com/users/villevoutilainen/gists{/gist_id}", "starred_url": "https://api.github.com/users/villevoutilainen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/villevoutilainen/subscriptions", "organizations_url": "https://api.github.com/users/villevoutilainen/orgs", "repos_url": "https://api.github.com/users/villevoutilainen/repos", "events_url": "https://api.github.com/users/villevoutilainen/events{/privacy}", "received_events_url": "https://api.github.com/users/villevoutilainen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "806562fd6269a3d7e0651d5bbf9085c7708fb5cd", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/806562fd6269a3d7e0651d5bbf9085c7708fb5cd", "html_url": "https://github.com/Rust-GCC/gccrs/commit/806562fd6269a3d7e0651d5bbf9085c7708fb5cd"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "159fc37454f4a754a07be56f29586a95564126ff", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63b48839b8e19a33bb2b0f86e1a443c53b395bc0/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63b48839b8e19a33bb2b0f86e1a443c53b395bc0/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=63b48839b8e19a33bb2b0f86e1a443c53b395bc0", "patch": "@@ -1,3 +1,9 @@\n+2018-08-07  Ville Voutilainen  <ville.voutilainen@gmail.com>\n+\n+\tPR c++/79133\n+\t* name-lookup.c (check_local_shadow): Reject captures and parameters\n+\twith the same name.\n+\n 2018-08-06  Marek Polacek  <polacek@redhat.com>\n \n \tPR c++/86767"}, {"sha": "0faf739cd6a88ea2210dce371b08b36e46c54611", "filename": "gcc/cp/name-lookup.c", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63b48839b8e19a33bb2b0f86e1a443c53b395bc0/gcc%2Fcp%2Fname-lookup.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63b48839b8e19a33bb2b0f86e1a443c53b395bc0/gcc%2Fcp%2Fname-lookup.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Fname-lookup.c?ref=63b48839b8e19a33bb2b0f86e1a443c53b395bc0", "patch": "@@ -2640,13 +2640,29 @@ check_local_shadow (tree decl)\n \t\t  || TREE_CODE (decl) == TYPE_DECL)))\n       && DECL_FUNCTION_SCOPE_P (old)\n       && (!DECL_ARTIFICIAL (decl)\n+\t  || is_capture_proxy (decl)\n \t  || DECL_IMPLICIT_TYPEDEF_P (decl)\n \t  || (VAR_P (decl) && DECL_ANON_UNION_VAR_P (decl))))\n     {\n       /* DECL shadows a local thing possibly of interest.  */\n \n+      /* DR 2211: check that captures and parameters\n+\t do not have the same name. */\n+      if (is_capture_proxy (decl))\n+\t{\n+\t  if (current_lambda_expr ()\n+\t      && DECL_CONTEXT (old) == lambda_function (current_lambda_expr ())\n+\t      && TREE_CODE (old) == PARM_DECL\n+\t      && DECL_NAME (decl) != this_identifier)\n+\t    {\n+\t      error_at (DECL_SOURCE_LOCATION (old),\n+\t\t\t\"lambda parameter %qD \"\n+\t\t\t\"previously declared as a capture\", old);\n+\t    }\n+\t  return;\n+\t}\n       /* Don't complain if it's from an enclosing function.  */\n-      if (DECL_CONTEXT (old) == current_function_decl\n+      else if (DECL_CONTEXT (old) == current_function_decl\n \t  && TREE_CODE (decl) != PARM_DECL\n \t  && TREE_CODE (old) == PARM_DECL)\n \t{"}, {"sha": "836432191c71ca5cc34aa714fea95feee8aabbf8", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-shadow3.C", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63b48839b8e19a33bb2b0f86e1a443c53b395bc0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-shadow3.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63b48839b8e19a33bb2b0f86e1a443c53b395bc0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-shadow3.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-shadow3.C?ref=63b48839b8e19a33bb2b0f86e1a443c53b395bc0", "patch": "@@ -0,0 +1,6 @@\n+// { dg-do compile { target c++11 } }\n+\n+int main() {\n+  int x = 42;\n+  auto lambda = [x](int x) {}; // { dg-error \"previously declared as a capture\" }\n+}"}, {"sha": "1eb9cceff176f804e41a085ef8e6535c25449ccd", "filename": "gcc/testsuite/g++.dg/cpp1y/lambda-generic-variadic18.C", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/63b48839b8e19a33bb2b0f86e1a443c53b395bc0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-variadic18.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/63b48839b8e19a33bb2b0f86e1a443c53b395bc0/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-variadic18.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp1y%2Flambda-generic-variadic18.C?ref=63b48839b8e19a33bb2b0f86e1a443c53b395bc0", "patch": "@@ -0,0 +1,11 @@\n+// { dg-do compile { target c++14 } }\n+\n+int main() {\n+  int x = 42;\n+  auto lambda2 = [x=x](int x) {}; // { dg-error \"previously declared as a capture\" }\n+  auto lambda3 = [x](auto... x) {}; // { dg-error \"previously declared as a capture\" }\n+  auto lambda4 = [](auto... x) {\n+    auto lambda5 = [x...](auto... x) {};  // { dg-error \"previously declared as a capture\" }\n+    auto lambda6 = [x...](int x) {};  // { dg-error \"previously declared as a capture\" }\n+  };\n+}"}]}