{"sha": "1bee034e012d1146d34b0d767fe28a485c210e4b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MWJlZTAzNGUwMTJkMTE0NmQzNGIwZDc2N2ZlMjhhNDg1YzIxMGU0Yg==", "commit": {"author": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-08-02T17:01:46Z"}, "committer": {"name": "H.J. Lu", "email": "hjl.tools@gmail.com", "date": "2021-08-02T17:38:06Z"}, "message": "x86: Add TARGET_GEN_MEMSET_SCRATCH_RTX\n\nDefine TARGET_GEN_MEMSET_SCRATCH_RTX to ix86_gen_scratch_sse_rtx to\nreturn a scratch SSE register for memset.\n\ngcc/\n\n\tPR middle-end/90773\n\t* config/i386/i386.c (TARGET_GEN_MEMSET_SCRATCH_RTX): New.\n\ngcc/testsuite/\n\n\tPR middle-end/90773\n\t* gcc.target/i386/pr90773-5.c: Updated to expect XMM register.\n\t* gcc.target/i386/pr90773-14.c: Likewise.\n\t* gcc.target/i386/pr90773-15.c: New test.\n\t* gcc.target/i386/pr90773-16.c: Likewise.\n\t* gcc.target/i386/pr90773-17.c: Likewise.\n\t* gcc.target/i386/pr90773-18.c: Likewise.\n\t* gcc.target/i386/pr90773-19.c: Likewise.", "tree": {"sha": "7942e821cc0c2cc1204b56da5af6994935ed03d1", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/7942e821cc0c2cc1204b56da5af6994935ed03d1"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/1bee034e012d1146d34b0d767fe28a485c210e4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bee034e012d1146d34b0d767fe28a485c210e4b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/1bee034e012d1146d34b0d767fe28a485c210e4b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/1bee034e012d1146d34b0d767fe28a485c210e4b/comments", "author": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hjl-tools", "id": 1072356, "node_id": "MDQ6VXNlcjEwNzIzNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1072356?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hjl-tools", "html_url": "https://github.com/hjl-tools", "followers_url": "https://api.github.com/users/hjl-tools/followers", "following_url": "https://api.github.com/users/hjl-tools/following{/other_user}", "gists_url": "https://api.github.com/users/hjl-tools/gists{/gist_id}", "starred_url": "https://api.github.com/users/hjl-tools/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hjl-tools/subscriptions", "organizations_url": "https://api.github.com/users/hjl-tools/orgs", "repos_url": "https://api.github.com/users/hjl-tools/repos", "events_url": "https://api.github.com/users/hjl-tools/events{/privacy}", "received_events_url": "https://api.github.com/users/hjl-tools/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38fb24ba4d67254cea78731fc8d961903dad9646", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/38fb24ba4d67254cea78731fc8d961903dad9646", "html_url": "https://github.com/Rust-GCC/gccrs/commit/38fb24ba4d67254cea78731fc8d961903dad9646"}], "stats": {"total": 81, "additions": 78, "deletions": 3}, "files": [{"sha": "5d20ca2067fbe56490c0985f6e24654010cf9d92", "filename": "gcc/config/i386/i386.c", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bee034e012d1146d34b0d767fe28a485c210e4b/gcc%2Fconfig%2Fi386%2Fi386.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bee034e012d1146d34b0d767fe28a485c210e4b/gcc%2Fconfig%2Fi386%2Fi386.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.c?ref=1bee034e012d1146d34b0d767fe28a485c210e4b", "patch": "@@ -23313,7 +23313,8 @@ ix86_optab_supported_p (int op, machine_mode mode1, machine_mode,\n     }\n }\n \n-/* Return a scratch register in MODE for vector load and store.  */\n+/* Implement the TARGET_GEN_MEMSET_SCRATCH_RTX hook.  Return a scratch\n+   register in MODE for vector load and store.  */\n \n rtx\n ix86_gen_scratch_sse_rtx (machine_mode mode)\n@@ -24232,6 +24233,9 @@ static bool ix86_libc_has_fast_function (int fcode ATTRIBUTE_UNUSED)\n #undef TARGET_LIBC_HAS_FAST_FUNCTION\n #define TARGET_LIBC_HAS_FAST_FUNCTION ix86_libc_has_fast_function\n \n+#undef TARGET_GEN_MEMSET_SCRATCH_RTX\n+#define TARGET_GEN_MEMSET_SCRATCH_RTX ix86_gen_scratch_sse_rtx\n+\n #if CHECKING_P\n #undef TARGET_RUN_TARGET_SELFTESTS\n #define TARGET_RUN_TARGET_SELFTESTS selftest::ix86_run_selftests"}, {"sha": "e5c19f49cf575120129803e8f241ed3cb68adf56", "filename": "gcc/testsuite/gcc.target/i386/pr90773-14.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bee034e012d1146d34b0d767fe28a485c210e4b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-14.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bee034e012d1146d34b0d767fe28a485c210e4b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-14.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-14.c?ref=1bee034e012d1146d34b0d767fe28a485c210e4b", "patch": "@@ -10,4 +10,4 @@ foo (void)\n }\n \n /* { dg-final { scan-assembler-times \"movups\\[\\\\t \\]+%xmm\\[0-9\\]+, \\\\(%\\[\\^,\\]+\\\\)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"movl\\[\\\\t \\]+\\\\\\$16843009, 16\\\\(%\\[\\^,\\]+\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movd\\[\\\\t \\]+%xmm\\[0-9\\]+, 16\\\\(%\\[\\^,\\]+\\\\)\" 1 } } */"}, {"sha": "185ea60e1d2f12a76356e27cc01edc29108f864c", "filename": "gcc/testsuite/gcc.target/i386/pr90773-15.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bee034e012d1146d34b0d767fe28a485c210e4b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-15.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bee034e012d1146d34b0d767fe28a485c210e4b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-15.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-15.c?ref=1bee034e012d1146d34b0d767fe28a485c210e4b", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -march=skylake-avx512\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (int c)\n+{\n+  __builtin_memset (dst, c, 17);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpbroadcastb\\[\\\\t \\]+%edi, %xmm\\[0-9\\]+\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu8\\[\\\\t \\]+%xmm\\[0-9\\]+, \\\\(%\\[\\^,\\]+\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movb\\[\\\\t \\]+%dil, 16\\\\(%\\[\\^,\\]+\\\\)\" 1 } } */"}, {"sha": "d820cc318c3d85d7153588abbddfc584747f15ff", "filename": "gcc/testsuite/gcc.target/i386/pr90773-16.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bee034e012d1146d34b0d767fe28a485c210e4b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-16.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bee034e012d1146d34b0d767fe28a485c210e4b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-16.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-16.c?ref=1bee034e012d1146d34b0d767fe28a485c210e4b", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -march=skylake-avx512\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, -1, 17);\n+}\n+\n+/* { dg-final { scan-assembler-times \"(?:vpcmpeqd|vpternlogd)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu8\\[\\\\t \\]+%xmm\\[0-9\\]+, \\\\(%\\[\\^,\\]+\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movb\\[\\\\t \\]+\\\\\\$-1, 16\\\\(%\\[\\^,\\]+\\\\)\" 1 } } */"}, {"sha": "f6f179e9b5b13ca857a843e6347b241f9d151e3a", "filename": "gcc/testsuite/gcc.target/i386/pr90773-17.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bee034e012d1146d34b0d767fe28a485c210e4b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-17.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bee034e012d1146d34b0d767fe28a485c210e4b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-17.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-17.c?ref=1bee034e012d1146d34b0d767fe28a485c210e4b", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile { target { ! ia32 } } } */\n+/* { dg-options \"-O2 -march=skylake-avx512\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 12, 19);\n+}\n+\n+/* { dg-final { scan-assembler-times \"vpbroadcastb\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovdqu8\\[\\\\t \\]+%xmm\\[0-9\\]+, \\\\(%\\[\\^,\\]+\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"vmovd\\[\\\\t \\]+%xmm\\[0-9\\]+, 15\\\\(%\\[\\^,\\]+\\\\)\" 1 } } */"}, {"sha": "b0687abbe01295731db617f43a9c048b6331445e", "filename": "gcc/testsuite/gcc.target/i386/pr90773-18.c", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bee034e012d1146d34b0d767fe28a485c210e4b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-18.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bee034e012d1146d34b0d767fe28a485c210e4b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-18.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-18.c?ref=1bee034e012d1146d34b0d767fe28a485c210e4b", "patch": "@@ -0,0 +1,15 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=skylake-avx512\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 12, 9);\n+}\n+\n+/* { dg-final { scan-assembler-times \"movabsq\\[\\\\t \\]+\\\\\\$868082074056920076, %r\" 1 { target { ! ia32 } } } } */\n+/* { dg-final { scan-assembler-times \"movl\\[\\\\t \\]+\\\\\\$202116108, \\\\(%\\[\\^,\\]+\\\\)\" 1 { target ia32 } } } */\n+/* { dg-final { scan-assembler-times \"movl\\[\\\\t \\]+\\\\\\$202116108, 4\\\\(%\\[\\^,\\]+\\\\)\" 1 { target ia32 } } } */\n+/* { dg-final { scan-assembler-times \"movb\\[\\\\t \\]+\\\\\\$12, 8\\\\(%\\[\\^,\\]+\\\\)\" 1 } } */"}, {"sha": "8aa5540bacc7e875e166b42d4ce38bc5318be64c", "filename": "gcc/testsuite/gcc.target/i386/pr90773-19.c", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bee034e012d1146d34b0d767fe28a485c210e4b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-19.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bee034e012d1146d34b0d767fe28a485c210e4b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-19.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-19.c?ref=1bee034e012d1146d34b0d767fe28a485c210e4b", "patch": "@@ -0,0 +1,14 @@\n+/* { dg-do compile } */\n+/* { dg-options \"-O2 -march=skylake\" } */\n+\n+extern char *dst;\n+\n+void\n+foo (void)\n+{\n+  __builtin_memset (dst, 12, 9);\n+}\n+\n+/* { dg-final { scan-assembler-times \"movabsq\\[\\\\t \\]+\\\\\\$868082074056920076, %r\" 1 { target { ! ia32 } } } } */\n+/* { dg-final { scan-assembler-times \"movl\\[\\\\t \\]+\\\\\\$202116108, \\\\(%\\[\\^,\\]+\\\\)\" 1 { target ia32 } } } */\n+/* { dg-final { scan-assembler-times \"movl\\[\\\\t \\]+\\\\\\$202116108, 4\\\\(%\\[\\^,\\]+\\\\)\" 1 { target ia32 } } } */"}, {"sha": "27185a236a7eeaa7e765e5f577ad3aab0b933928", "filename": "gcc/testsuite/gcc.target/i386/pr90773-5.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/1bee034e012d1146d34b0d767fe28a485c210e4b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-5.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/1bee034e012d1146d34b0d767fe28a485c210e4b/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-5.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Fi386%2Fpr90773-5.c?ref=1bee034e012d1146d34b0d767fe28a485c210e4b", "patch": "@@ -10,4 +10,4 @@ foo (void)\n }\n \n /* { dg-final { scan-assembler-times \"movups\\[\\\\t \\]+%xmm\\[0-9\\]+, \\\\(%\\[\\^,\\]+\\\\)\" 1 } } */\n-/* { dg-final { scan-assembler-times \"movq\\[\\\\t \\]+\\\\\\$0+, 13\\\\(%\\[\\^,\\]+\\\\)\" 1 } } */\n+/* { dg-final { scan-assembler-times \"movq\\[\\\\t \\]+%xmm\\[0-9\\]+, 13\\\\(%\\[\\^,\\]+\\\\)\" 1 } } */"}]}