{"sha": "134c2de3336b55561bb73a743dd5368ffef71716", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MTM0YzJkZTMzMzZiNTU1NjFiYjczYTc0M2RkNTM2OGZmZWY3MTcxNg==", "commit": {"author": {"name": "Jakub Jelinek", "email": "jakub@redhat.com", "date": "2008-01-24T15:13:17Z"}, "committer": {"name": "Jakub Jelinek", "email": "jakub@gcc.gnu.org", "date": "2008-01-24T15:13:17Z"}, "message": "re PR middle-end/34934 (-O1 crash compile *** glibc detected *** /usr/lib/gcc/i486-linux-gnu/4.2.3/cc1: double free or corruption (!prev))\n\n\tPR middle-end/34934\n\t* tree-stdarg.c (reachable_at_most_once): Use VEC vector instead of\n\ta fixed vector for stack.\n\n\t* gcc.c-torture/compile/20080124-1.c: New test.\n\nFrom-SVN: r131780", "tree": {"sha": "f8fcf51e57edbc14ce3bd08506bcad307e4a35a9", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f8fcf51e57edbc14ce3bd08506bcad307e4a35a9"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/134c2de3336b55561bb73a743dd5368ffef71716", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/134c2de3336b55561bb73a743dd5368ffef71716", "html_url": "https://github.com/Rust-GCC/gccrs/commit/134c2de3336b55561bb73a743dd5368ffef71716", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/134c2de3336b55561bb73a743dd5368ffef71716/comments", "author": {"login": "jakubjelinek", "id": 9370665, "node_id": "MDQ6VXNlcjkzNzA2NjU=", "avatar_url": "https://avatars.githubusercontent.com/u/9370665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakubjelinek", "html_url": "https://github.com/jakubjelinek", "followers_url": "https://api.github.com/users/jakubjelinek/followers", "following_url": "https://api.github.com/users/jakubjelinek/following{/other_user}", "gists_url": "https://api.github.com/users/jakubjelinek/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakubjelinek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakubjelinek/subscriptions", "organizations_url": "https://api.github.com/users/jakubjelinek/orgs", "repos_url": "https://api.github.com/users/jakubjelinek/repos", "events_url": "https://api.github.com/users/jakubjelinek/events{/privacy}", "received_events_url": "https://api.github.com/users/jakubjelinek/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "160b8b8014c02e0863633caec43bb5f322cfc0db", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/160b8b8014c02e0863633caec43bb5f322cfc0db", "html_url": "https://github.com/Rust-GCC/gccrs/commit/160b8b8014c02e0863633caec43bb5f322cfc0db"}], "stats": {"total": 83, "additions": 71, "deletions": 12}, "files": [{"sha": "b4668e752ff727d0d0d9e9ac8192a4e1de9ae8e6", "filename": "gcc/ChangeLog", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134c2de3336b55561bb73a743dd5368ffef71716/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134c2de3336b55561bb73a743dd5368ffef71716/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=134c2de3336b55561bb73a743dd5368ffef71716", "patch": "@@ -1,3 +1,9 @@\n+2008-01-24  Jakub Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/34934\n+\t* tree-stdarg.c (reachable_at_most_once): Use VEC vector instead of\n+\ta fixed vector for stack.\n+\n 2008-01-24  Ben Elliston  <bje@au.ibm.com>\n \n \tPR c++/25701"}, {"sha": "899cfdca808a1e197ffcf384e8c9391195c64846", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134c2de3336b55561bb73a743dd5368ffef71716/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134c2de3336b55561bb73a743dd5368ffef71716/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=134c2de3336b55561bb73a743dd5368ffef71716", "patch": "@@ -1,3 +1,8 @@\n+2008-01-24  Jakub Jakub Jelinek  <jakub@redhat.com>\n+\n+\tPR middle-end/34934\n+\t* gcc.c-torture/compile/20080124-1.c: New test.\n+\n 2008-01-24  Paul Thomas  <pault@gcc.gnu.org>\r\n \r\n \tPR fortran/34872\r"}, {"sha": "a20937c294e7f4426d88295b381e62e0c4abfd05", "filename": "gcc/testsuite/gcc.c-torture/compile/20080124-1.c", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134c2de3336b55561bb73a743dd5368ffef71716/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080124-1.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134c2de3336b55561bb73a743dd5368ffef71716/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080124-1.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.c-torture%2Fcompile%2F20080124-1.c?ref=134c2de3336b55561bb73a743dd5368ffef71716", "patch": "@@ -0,0 +1,52 @@\n+/* PR middle-end/34934 */\n+\n+#include <stdarg.h>\n+\n+typedef struct\n+{\n+  int e[1024];\n+  int f;\n+} S;\n+\n+void foo (long *, va_list);\n+\n+void\n+bar (long *x, S *y, int z, ...)\n+{\n+  int i, j;\n+  va_list ap;\n+  va_start (ap, z);\n+  for (j = y->e[i = 1]; i <= y->f; j = y->e[++i])\n+    {\n+      switch (z)\n+\t{\n+\tcase 1:\n+\t  if (!(*x & 0x00000020))\n+\t    continue;\n+\tcase 3:\n+\t  if (!(*x & 0x00000080))\n+\t    continue;\n+\tcase 9:\n+\t  if (!(*x & 0x04000000))\n+\t    continue;\n+\tcase 4:\n+\t  if (!(*x & 0x00000200))\n+\t    continue;\n+\tcase 8:\n+\t  if (!(*x & 0x00100000))\n+\t    continue;\n+\tcase 6:\n+\t  if (!(*x & 0x00000100))\n+\t    continue;\n+\tcase 7:\n+\t  if (!(*x & 0x00040000))\n+\t    continue;\n+\tcase 10:\n+\t  if (!(*x & 0x00000020)\n+\t      && ((*x & 0x00008000) || (*x & 0x08000000)))\n+\t    continue;\n+\t}\n+      foo (x, ap);\n+    }\n+  va_end (ap);\n+}"}, {"sha": "8df09ec4979c2d8fc74684d2cd69f7f3554feed9", "filename": "gcc/tree-stdarg.c", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/134c2de3336b55561bb73a743dd5368ffef71716/gcc%2Ftree-stdarg.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/134c2de3336b55561bb73a743dd5368ffef71716/gcc%2Ftree-stdarg.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-stdarg.c?ref=134c2de3336b55561bb73a743dd5368ffef71716", "patch": "@@ -1,5 +1,5 @@\n /* Pass computing data for optimizing stdarg functions.\n-   Copyright (C) 2004, 2005, 2007 Free Software Foundation, Inc.\n+   Copyright (C) 2004, 2005, 2007, 2008 Free Software Foundation, Inc.\n    Contributed by Jakub Jelinek <jakub@redhat.com>\n \n This file is part of GCC.\n@@ -46,9 +46,9 @@ along with GCC; see the file COPYING3.  If not see\n static bool\n reachable_at_most_once (basic_block va_arg_bb, basic_block va_start_bb)\n {\n-  edge *stack, e;\n+  VEC (edge, heap) *stack = NULL;\n+  edge e;\n   edge_iterator ei;\n-  int sp;\n   sbitmap visited;\n   bool ret;\n \n@@ -58,22 +58,18 @@ reachable_at_most_once (basic_block va_arg_bb, basic_block va_start_bb)\n   if (! dominated_by_p (CDI_DOMINATORS, va_arg_bb, va_start_bb))\n     return false;\n \n-  stack = XNEWVEC (edge, n_basic_blocks + 1);\n-  sp = 0;\n-\n   visited = sbitmap_alloc (last_basic_block);\n   sbitmap_zero (visited);\n   ret = true;\n \n   FOR_EACH_EDGE (e, ei, va_arg_bb->preds)\n-    stack[sp++] = e;\n+    VEC_safe_push (edge, heap, stack, e);\n \n-  while (sp)\n+  while (! VEC_empty (edge, stack))\n     {\n       basic_block src;\n \n-      --sp;\n-      e = stack[sp];\n+      e = VEC_pop (edge, stack);\n       src = e->src;\n \n       if (e->flags & EDGE_COMPLEX)\n@@ -98,11 +94,11 @@ reachable_at_most_once (basic_block va_arg_bb, basic_block va_start_bb)\n \t{\n \t  SET_BIT (visited, src->index);\n \t  FOR_EACH_EDGE (e, ei, src->preds)\n-\t    stack[sp++] = e;\n+\t    VEC_safe_push (edge, heap, stack, e);\n \t}\n     }\n \n-  free (stack);\n+  VEC_free (edge, heap, stack);\n   sbitmap_free (visited);\n   return ret;\n }"}]}