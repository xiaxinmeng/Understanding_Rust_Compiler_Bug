{"sha": "ffaeb9dc58ea51ad99e82c6734e74c82e0a1cc5d", "node_id": "C_kwDOANBUbNoAKGZmYWViOWRjNThlYTUxYWQ5OWU4MmM2NzM0ZTc0YzgyZTBhMWNjNWQ", "commit": {"author": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-09-12T07:12:37Z"}, "committer": {"name": "Martin Liska", "email": "mliska@suse.cz", "date": "2022-09-12T07:12:37Z"}, "message": "analyzer: remove unused fields\n\nFixes:\ngcc/analyzer/region-model.cc:5918:8: warning: private field 'm_record_type' is not used [-Wunused-private-field]\ngcc/analyzer/region-model.cc:6305:25: warning: private field 'm_mgr' is not used [-Wunused-private-field]\n\ngcc/analyzer/ChangeLog:\n\n\t* region-model.cc (region_model::maybe_complain_about_infoleak):\n\t  Remove unused fields.", "tree": {"sha": "72ffbc67c994a879cc3d2411751d5595a1c68585", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/72ffbc67c994a879cc3d2411751d5595a1c68585"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ffaeb9dc58ea51ad99e82c6734e74c82e0a1cc5d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffaeb9dc58ea51ad99e82c6734e74c82e0a1cc5d", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ffaeb9dc58ea51ad99e82c6734e74c82e0a1cc5d", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ffaeb9dc58ea51ad99e82c6734e74c82e0a1cc5d/comments", "author": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marxin", "id": 2658545, "node_id": "MDQ6VXNlcjI2NTg1NDU=", "avatar_url": "https://avatars.githubusercontent.com/u/2658545?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marxin", "html_url": "https://github.com/marxin", "followers_url": "https://api.github.com/users/marxin/followers", "following_url": "https://api.github.com/users/marxin/following{/other_user}", "gists_url": "https://api.github.com/users/marxin/gists{/gist_id}", "starred_url": "https://api.github.com/users/marxin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marxin/subscriptions", "organizations_url": "https://api.github.com/users/marxin/orgs", "repos_url": "https://api.github.com/users/marxin/repos", "events_url": "https://api.github.com/users/marxin/events{/privacy}", "received_events_url": "https://api.github.com/users/marxin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b9111db573c55dbe7730582d23d0e4c4959abf7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5b9111db573c55dbe7730582d23d0e4c4959abf7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5b9111db573c55dbe7730582d23d0e4c4959abf7"}], "stats": {"total": 12, "additions": 3, "deletions": 9}, "files": [{"sha": "22c52872c3e33d10814fbd2c126204a5ca25d828", "filename": "gcc/analyzer/region-model.cc", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ffaeb9dc58ea51ad99e82c6734e74c82e0a1cc5d/gcc%2Fanalyzer%2Fregion-model.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ffaeb9dc58ea51ad99e82c6734e74c82e0a1cc5d/gcc%2Fanalyzer%2Fregion-model.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fanalyzer%2Fregion-model.cc?ref=ffaeb9dc58ea51ad99e82c6734e74c82e0a1cc5d", "patch": "@@ -5838,7 +5838,6 @@ class record_layout\n   };\n \n   record_layout (tree record_type)\n-  : m_record_type (record_type)\n   {\n     gcc_assert (TREE_CODE (record_type) == RECORD_TYPE);\n \n@@ -5918,7 +5917,6 @@ class record_layout\n       }\n   }\n \n-  tree m_record_type;\n   auto_vec<item> m_items;\n };\n \n@@ -5932,12 +5930,10 @@ class exposure_through_uninit_copy\n public:\n   exposure_through_uninit_copy (const region *src_region,\n \t\t\t\tconst region *dest_region,\n-\t\t\t\tconst svalue *copied_sval,\n-\t\t\t\tregion_model_manager *mgr)\n+\t\t\t\tconst svalue *copied_sval)\n   : m_src_region (src_region),\n     m_dest_region (dest_region),\n-    m_copied_sval (copied_sval),\n-    m_mgr (mgr)\n+    m_copied_sval (copied_sval)\n   {\n     gcc_assert (m_copied_sval->get_kind () == SK_POISONED\n \t\t|| m_copied_sval->get_kind () == SK_COMPOUND);\n@@ -6305,7 +6301,6 @@ class exposure_through_uninit_copy\n   const region *m_src_region;\n   const region *m_dest_region;\n   const svalue *m_copied_sval;\n-  region_model_manager *m_mgr;\n };\n \n /* Return true if any part of SVAL is uninitialized.  */\n@@ -6351,8 +6346,7 @@ region_model::maybe_complain_about_infoleak (const region *dst_reg,\n   if (contains_uninit_p (copied_sval))\n     ctxt->warn (new exposure_through_uninit_copy (src_reg,\n \t\t\t\t\t\t  dst_reg,\n-\t\t\t\t\t\t  copied_sval,\n-\t\t\t\t\t\t  m_mgr));\n+\t\t\t\t\t\t  copied_sval));\n }\n \n /* class noop_region_model_context : public region_model_context.  */"}]}