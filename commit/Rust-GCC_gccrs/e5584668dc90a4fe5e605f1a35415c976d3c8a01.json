{"sha": "e5584668dc90a4fe5e605f1a35415c976d3c8a01", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTU1ODQ2NjhkYzkwYTRmZTVlNjA1ZjFhMzU0MTVjOTc2ZDNjOGEwMQ==", "commit": {"author": {"name": "Christophe Lyon", "email": "christophe.lyon@linaro.org", "date": "2015-01-21T11:18:57Z"}, "committer": {"name": "Christophe Lyon", "email": "clyon@gcc.gnu.org", "date": "2015-01-21T11:18:57Z"}, "message": "[ARM/AArch64][testsuite] Add vmull tests.\n\n2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n\n\t* gcc.target/aarch64/advsimd-intrinsics/vmull.c: New file.\n\nFrom-SVN: r219942", "tree": {"sha": "508113bcdb571eeb35ae02f9796b97d926e35911", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/508113bcdb571eeb35ae02f9796b97d926e35911"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e5584668dc90a4fe5e605f1a35415c976d3c8a01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5584668dc90a4fe5e605f1a35415c976d3c8a01", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e5584668dc90a4fe5e605f1a35415c976d3c8a01", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e5584668dc90a4fe5e605f1a35415c976d3c8a01/comments", "author": null, "committer": null, "parents": [{"sha": "8afb62ac1cf65af126dc4566a05fff3143f76808", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8afb62ac1cf65af126dc4566a05fff3143f76808", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8afb62ac1cf65af126dc4566a05fff3143f76808"}], "stats": {"total": 79, "additions": 79, "deletions": 0}, "files": [{"sha": "d2338ab9166fbaf1b05fad7d6e1706cfb5a1ff27", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5584668dc90a4fe5e605f1a35415c976d3c8a01/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5584668dc90a4fe5e605f1a35415c976d3c8a01/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=e5584668dc90a4fe5e605f1a35415c976d3c8a01", "patch": "@@ -1,3 +1,7 @@\n+2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n+\n+\t* gcc.target/aarch64/advsimd-intrinsics/vmull.c: New file.\n+\n 2015-01-21  Christophe Lyon  <christophe.lyon@linaro.org>\n \n \t* gcc.target/aarch64/advsimd-intrinsics/vmul_n.c: New file."}, {"sha": "3fdd51e1d1c301280683f83fcaa958cbd79321ba", "filename": "gcc/testsuite/gcc.target/aarch64/advsimd-intrinsics/vmull.c", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e5584668dc90a4fe5e605f1a35415c976d3c8a01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmull.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e5584668dc90a4fe5e605f1a35415c976d3c8a01/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmull.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.target%2Faarch64%2Fadvsimd-intrinsics%2Fvmull.c?ref=e5584668dc90a4fe5e605f1a35415c976d3c8a01", "patch": "@@ -0,0 +1,75 @@\n+#include <arm_neon.h>\n+#include \"arm-neon-ref.h\"\n+#include \"compute-ref-data.h\"\n+\n+/* Expected results.  */\n+VECT_VAR_DECL(expected,int,16,8) [] = { 0x100, 0xe1, 0xc4, 0xa9,\n+\t\t\t\t\t0x90, 0x79, 0x64, 0x51 };\n+VECT_VAR_DECL(expected,int,32,4) [] = { 0x100, 0xe1, 0xc4, 0xa9 };\n+VECT_VAR_DECL(expected,int,64,2) [] = { 0x100, 0xe1 };\n+VECT_VAR_DECL(expected,uint,16,8) [] = { 0xe100, 0xe2e1, 0xe4c4, 0xe6a9,\n+\t\t\t\t\t 0xe890, 0xea79, 0xec64, 0xee51 };\n+VECT_VAR_DECL(expected,uint,32,4) [] = { 0xffe00100, 0xffe200e1,\n+\t\t\t\t\t 0xffe400c4, 0xffe600a9 };\n+VECT_VAR_DECL(expected,uint,64,2) [] = { 0xffffffe000000100,\n+\t\t\t\t\t 0xffffffe2000000e1 };\n+VECT_VAR_DECL(expected,poly,16,8) [] = { 0x5500, 0x5501, 0x5504, 0x5505,\n+\t\t\t\t\t 0x5510, 0x5511, 0x5514, 0x5515 };\n+\n+#define TEST_MSG \"VMULL\"\n+void exec_vmull (void)\n+{\n+  /* Basic test: y=vmull(x,x), then store the result.  */\n+#define TEST_VMULL(T1, T2, W, W2, N)\t\t\t\t\t\\\n+  VECT_VAR(vector_res, T1, W2, N) =\t\t\t\t\t\\\n+    vmull_##T2##W(VECT_VAR(vector, T1, W, N),\t\t\t\t\\\n+\t\t  VECT_VAR(vector, T1, W, N));\t\t\t\t\\\n+  vst1q_##T2##W2(VECT_VAR(result, T1, W2, N), VECT_VAR(vector_res, T1, W2, N))\n+\n+  DECL_VARIABLE(vector, int, 8, 8);\n+  DECL_VARIABLE(vector, int, 16, 4);\n+  DECL_VARIABLE(vector, int, 32, 2);\n+  DECL_VARIABLE(vector, uint, 8, 8);\n+  DECL_VARIABLE(vector, uint, 16, 4);\n+  DECL_VARIABLE(vector, uint, 32, 2);\n+  DECL_VARIABLE(vector, poly, 8, 8);\n+  DECL_VARIABLE(vector_res, int, 16, 8);\n+  DECL_VARIABLE(vector_res, int, 32, 4);\n+  DECL_VARIABLE(vector_res, int, 64, 2);\n+  DECL_VARIABLE(vector_res, uint, 16, 8);\n+  DECL_VARIABLE(vector_res, uint, 32, 4);\n+  DECL_VARIABLE(vector_res, uint, 64, 2);\n+  DECL_VARIABLE(vector_res, poly, 16, 8);\n+\n+  clean_results ();\n+\n+  VLOAD(vector, buffer, , int, s, 8, 8);\n+  VLOAD(vector, buffer, , int, s, 16, 4);\n+  VLOAD(vector, buffer, , int, s, 32, 2);\n+  VLOAD(vector, buffer, , uint, u, 8, 8);\n+  VLOAD(vector, buffer, , uint, u, 16, 4);\n+  VLOAD(vector, buffer, , uint, u, 32, 2);\n+  VLOAD(vector, buffer, , poly, p, 8, 8);\n+\n+  TEST_VMULL(int, s, 8, 16, 8);\n+  TEST_VMULL(int, s, 16, 32, 4);\n+  TEST_VMULL(int, s, 32, 64, 2);\n+  TEST_VMULL(uint, u, 8, 16, 8);\n+  TEST_VMULL(uint, u, 16, 32, 4);\n+  TEST_VMULL(uint, u, 32, 64, 2);\n+  TEST_VMULL(poly, p, 8, 16, 8);\n+\n+  CHECK(TEST_MSG, int, 16, 8, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, int, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, int, 64, 2, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 16, 8, PRIx64, expected, \"\");\n+  CHECK(TEST_MSG, uint, 32, 4, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, uint, 64, 2, PRIx32, expected, \"\");\n+  CHECK(TEST_MSG, poly, 16, 8, PRIx16, expected, \"\");\n+}\n+\n+int main (void)\n+{\n+  exec_vmull ();\n+  return 0;\n+}"}]}