{"sha": "c22bcfd2f7dc9bb5ad394720f4a612327dc898ba", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzIyYmNmZDJmN2RjOWJiNWFkMzk0NzIwZjRhNjEyMzI3ZGM4OThiYQ==", "commit": {"author": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-07-22T10:57:38Z"}, "committer": {"name": "Jonathan Wakely", "email": "jwakely@redhat.com", "date": "2021-07-22T12:53:57Z"}, "message": "libstdc++: Initialize all subobjects of std::function\n\nThe std::function::swap member swaps each data member unconditionally,\nresulting in -Wmaybe-uninitialized warnings for a default constructed\nobject. This happens because the _M_invoker and _M_functor members are\nonly initialized if the function has a target.\n\nThis change ensures that all subobjects are zero-initialized on\nconstruction.\n\nSigned-off-by: Jonathan Wakely <jwakely@redhat.com>\n\nlibstdc++-v3/ChangeLog:\n\n\t* include/bits/std_function.h (_Function_base): Add\n\tdefault member initializers and define constructor as defaulted.\n\t(function::_M_invoker): Add default member initializer.", "tree": {"sha": "f051ba6cb3a52092342455843db90b1b3ae8d0a6", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f051ba6cb3a52092342455843db90b1b3ae8d0a6"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c22bcfd2f7dc9bb5ad394720f4a612327dc898ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c22bcfd2f7dc9bb5ad394720f4a612327dc898ba", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c22bcfd2f7dc9bb5ad394720f4a612327dc898ba", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c22bcfd2f7dc9bb5ad394720f4a612327dc898ba/comments", "author": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jwakely", "id": 1254480, "node_id": "MDQ6VXNlcjEyNTQ0ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/1254480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jwakely", "html_url": "https://github.com/jwakely", "followers_url": "https://api.github.com/users/jwakely/followers", "following_url": "https://api.github.com/users/jwakely/following{/other_user}", "gists_url": "https://api.github.com/users/jwakely/gists{/gist_id}", "starred_url": "https://api.github.com/users/jwakely/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jwakely/subscriptions", "organizations_url": "https://api.github.com/users/jwakely/orgs", "repos_url": "https://api.github.com/users/jwakely/repos", "events_url": "https://api.github.com/users/jwakely/events{/privacy}", "received_events_url": "https://api.github.com/users/jwakely/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "254e5d19a177af23a77b67fd51d0d1a25eaabfc7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/254e5d19a177af23a77b67fd51d0d1a25eaabfc7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/254e5d19a177af23a77b67fd51d0d1a25eaabfc7"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "c08484465c95bb8b71d7a4e3010541040995d649", "filename": "libstdc++-v3/include/bits/std_function.h", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c22bcfd2f7dc9bb5ad394720f4a612327dc898ba/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_function.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c22bcfd2f7dc9bb5ad394720f4a612327dc898ba/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_function.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fstd_function.h?ref=c22bcfd2f7dc9bb5ad394720f4a612327dc898ba", "patch": "@@ -237,7 +237,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \t{ __functor._M_access<_Functor*>() = new _Functor(std::move(__f)); }\n       };\n \n-    _Function_base() : _M_manager(nullptr) { }\n+    _Function_base() = default;\n \n     ~_Function_base()\n     {\n@@ -247,11 +247,11 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     bool _M_empty() const { return !_M_manager; }\n \n-    typedef bool (*_Manager_type)(_Any_data&, const _Any_data&,\n-\t\t\t\t  _Manager_operation);\n+    using _Manager_type\n+      = bool (*)(_Any_data&, const _Any_data&, _Manager_operation);\n \n-    _Any_data     _M_functor;\n-    _Manager_type _M_manager;\n+    _Any_data     _M_functor{};\n+    _Manager_type _M_manager{};\n   };\n \n   template<typename _Signature, typename _Functor>\n@@ -261,7 +261,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n     class _Function_handler<_Res(_ArgTypes...), _Functor>\n     : public _Function_base::_Base_manager<_Functor>\n     {\n-      typedef _Function_base::_Base_manager<_Functor> _Base;\n+      using _Base = _Function_base::_Base_manager<_Functor>;\n \n     public:\n       static bool\n@@ -414,7 +414,7 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \tfunction(_Functor __f)\n \t: _Function_base()\n \t{\n-\t  typedef _Function_handler<_Res(_ArgTypes...), _Functor> _My_handler;\n+\t  using _My_handler = _Function_handler<_Res(_ArgTypes...), _Functor>;\n \n \t  if (_My_handler::_M_not_empty_function(__f))\n \t    {\n@@ -634,8 +634,8 @@ _GLIBCXX_BEGIN_NAMESPACE_VERSION\n \n     private:\n       using _Invoker_type = _Res (*)(const _Any_data&, _ArgTypes&&...);\n-      _Invoker_type _M_invoker;\n-  };\n+      _Invoker_type _M_invoker = nullptr;\n+    };\n \n #if __cpp_deduction_guides >= 201606\n   template<typename>"}]}