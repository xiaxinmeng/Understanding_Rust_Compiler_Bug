{"sha": "2cc7f90b6e4906efd9cd909d7182630dbf9e819b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MmNjN2Y5MGI2ZTQ5MDZlZmQ5Y2Q5MDlkNzE4MjYzMGRiZjllODE5Yg==", "commit": {"author": {"name": "Jason Merrill", "email": "jason@redhat.com", "date": "2015-01-27T21:40:45Z"}, "committer": {"name": "Jason Merrill", "email": "jason@gcc.gnu.org", "date": "2015-01-27T21:40:45Z"}, "message": "re PR c++/58597 (ICE with lambda in default argument of template function)\n\n\tPR c++/58597\n\t* lambda.c (maybe_add_lambda_conv_op): Check cfun rather than\n\tcurrent_function_decl.\n\nFrom-SVN: r220192", "tree": {"sha": "5a56e487c0acb4630d95d68c8581667225c6c537", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5a56e487c0acb4630d95d68c8581667225c6c537"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/2cc7f90b6e4906efd9cd909d7182630dbf9e819b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cc7f90b6e4906efd9cd909d7182630dbf9e819b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/2cc7f90b6e4906efd9cd909d7182630dbf9e819b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/2cc7f90b6e4906efd9cd909d7182630dbf9e819b/comments", "author": {"login": "jicama", "id": 266146, "node_id": "MDQ6VXNlcjI2NjE0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/266146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jicama", "html_url": "https://github.com/jicama", "followers_url": "https://api.github.com/users/jicama/followers", "following_url": "https://api.github.com/users/jicama/following{/other_user}", "gists_url": "https://api.github.com/users/jicama/gists{/gist_id}", "starred_url": "https://api.github.com/users/jicama/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jicama/subscriptions", "organizations_url": "https://api.github.com/users/jicama/orgs", "repos_url": "https://api.github.com/users/jicama/repos", "events_url": "https://api.github.com/users/jicama/events{/privacy}", "received_events_url": "https://api.github.com/users/jicama/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "53c04ec92a37b35a7f37e00bd5a4b611cf470e3c", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c", "html_url": "https://github.com/Rust-GCC/gccrs/commit/53c04ec92a37b35a7f37e00bd5a4b611cf470e3c"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "2ae15d027d8329e74b9989e494f203c76a7ff73b", "filename": "gcc/cp/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7f90b6e4906efd9cd909d7182630dbf9e819b/gcc%2Fcp%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7f90b6e4906efd9cd909d7182630dbf9e819b/gcc%2Fcp%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2FChangeLog?ref=2cc7f90b6e4906efd9cd909d7182630dbf9e819b", "patch": "@@ -1,5 +1,9 @@\n 2015-01-27  Jason Merrill  <jason@redhat.com>\n \n+\tPR c++/58597\n+\t* lambda.c (maybe_add_lambda_conv_op): Check cfun rather than\n+\tcurrent_function_decl.\n+\n \tPR c++/63889\n \t* pt.c (finish_template_variable): Move from semantics.c.\n \tHandle multiple template arg levels.  Handle coercion here."}, {"sha": "b160c8cb7ae16578d0090b7f804017f7c8ad3aa0", "filename": "gcc/cp/lambda.c", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7f90b6e4906efd9cd909d7182630dbf9e819b/gcc%2Fcp%2Flambda.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7f90b6e4906efd9cd909d7182630dbf9e819b/gcc%2Fcp%2Flambda.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fcp%2Flambda.c?ref=2cc7f90b6e4906efd9cd909d7182630dbf9e819b", "patch": "@@ -854,7 +854,7 @@ prepare_op_call (tree fn, int nargs)\n void\n maybe_add_lambda_conv_op (tree type)\n {\n-  bool nested = (current_function_decl != NULL_TREE);\n+  bool nested = (cfun != NULL);\n   bool nested_def = decl_function_context (TYPE_MAIN_DECL (type));\n   tree callop = lambda_function (type);\n "}, {"sha": "fe8767ac605f365d5e5ff216579b2026d1579a66", "filename": "gcc/testsuite/g++.dg/cpp0x/lambda/lambda-defarg6.C", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/2cc7f90b6e4906efd9cd909d7182630dbf9e819b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-defarg6.C", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/2cc7f90b6e4906efd9cd909d7182630dbf9e819b/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-defarg6.C", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fg%2B%2B.dg%2Fcpp0x%2Flambda%2Flambda-defarg6.C?ref=2cc7f90b6e4906efd9cd909d7182630dbf9e819b", "patch": "@@ -0,0 +1,9 @@\n+// PR c++/58597\n+// { dg-do compile { target c++11 } }\n+\n+template<typename> struct A\n+{\n+  template<typename T> A(T, int = []{ return 0; }()) {}\n+};\n+\n+A<int> a = 0;"}]}