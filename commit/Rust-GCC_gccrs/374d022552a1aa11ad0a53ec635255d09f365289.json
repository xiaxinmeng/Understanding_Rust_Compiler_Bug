{"sha": "374d022552a1aa11ad0a53ec635255d09f365289", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Mzc0ZDAyMjU1MmExYWExMWFkMGE1M2VjNjM1MjU1ZDA5ZjM2NTI4OQ==", "commit": {"author": {"name": "Nathan Sidwell", "email": "nathan@codesourcery.com", "date": "2015-11-09T21:56:42Z"}, "committer": {"name": "Nathan Sidwell", "email": "nathan@gcc.gnu.org", "date": "2015-11-09T21:56:42Z"}, "message": "omp-low.c: Fix some OpenACC comment typos.\n\n\t* omp-low.c: Fix some OpenACC comment typos.\n\t(lower_reduction_clauses): Remove BUILT_IN_GOACC_GET_THREAD_NUM call.\n\t* omp-builtins.def (BUILT_IN_GOACC_GET_THREAD_NUM,\n\tBUILT_IN_GOACC_GET_NUM_THREADS): Delete.\n\nFrom-SVN: r230054", "tree": {"sha": "bcc8ecd2264c7f2fb154d3cf279a6beafc71b794", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/bcc8ecd2264c7f2fb154d3cf279a6beafc71b794"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/374d022552a1aa11ad0a53ec635255d09f365289", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/374d022552a1aa11ad0a53ec635255d09f365289", "html_url": "https://github.com/Rust-GCC/gccrs/commit/374d022552a1aa11ad0a53ec635255d09f365289", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/374d022552a1aa11ad0a53ec635255d09f365289/comments", "author": null, "committer": null, "parents": [{"sha": "ec494945a91a617332b243b0eaaa5d6a4653e702", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ec494945a91a617332b243b0eaaa5d6a4653e702", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ec494945a91a617332b243b0eaaa5d6a4653e702"}], "stats": {"total": 32, "additions": 12, "deletions": 20}, "files": [{"sha": "1f513ecdab6c7dd8892ed421e034f0fd76ccae3e", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/374d022552a1aa11ad0a53ec635255d09f365289/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/374d022552a1aa11ad0a53ec635255d09f365289/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=374d022552a1aa11ad0a53ec635255d09f365289", "patch": "@@ -1,3 +1,10 @@\n+2015-11-09  Nathan Sidwell  <nathan@codesourcery.com>\n+\n+\t* omp-low.c: Fix some OpenACC comment typos.\n+\t(lower_reduction_clauses): Remove BUILT_IN_GOACC_GET_THREAD_NUM call.\n+\t* omp-builtins.def (BUILT_IN_GOACC_GET_THREAD_NUM,\n+\tBUILT_IN_GOACC_GET_NUM_THREADS): Delete.\n+\n 2015-11-09  Uros Bizjak  <ubizjak@gmail.com>\n \n \t* config/i386/i386.md (*strmovqi_1): Fix insn enable condition."}, {"sha": "0b6bd58e1b37e206d2abe953e5d512a6e1108cbd", "filename": "gcc/omp-builtins.def", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/374d022552a1aa11ad0a53ec635255d09f365289/gcc%2Fomp-builtins.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/374d022552a1aa11ad0a53ec635255d09f365289/gcc%2Fomp-builtins.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-builtins.def?ref=374d022552a1aa11ad0a53ec635255d09f365289", "patch": "@@ -47,10 +47,6 @@ DEF_GOACC_BUILTIN (BUILT_IN_GOACC_UPDATE, \"GOACC_update\",\n DEF_GOACC_BUILTIN (BUILT_IN_GOACC_WAIT, \"GOACC_wait\",\n \t\t   BT_FN_VOID_INT_INT_VAR,\n \t\t   ATTR_NOTHROW_LIST)\n-DEF_GOACC_BUILTIN (BUILT_IN_GOACC_GET_THREAD_NUM, \"GOACC_get_thread_num\",\n-\t\t   BT_FN_INT, ATTR_CONST_NOTHROW_LEAF_LIST)\n-DEF_GOACC_BUILTIN (BUILT_IN_GOACC_GET_NUM_THREADS, \"GOACC_get_num_threads\",\n-\t\t   BT_FN_INT, ATTR_CONST_NOTHROW_LEAF_LIST)\n \n DEF_GOACC_BUILTIN_COMPILER (BUILT_IN_ACC_ON_DEVICE, \"acc_on_device\",\n \t\t\t    BT_FN_INT_INT, ATTR_CONST_NOTHROW_LEAF_LIST)"}, {"sha": "159f78483cf2855435291f99400be06a3425526f", "filename": "gcc/omp-low.c", "status": "modified", "additions": 5, "deletions": 16, "changes": 21, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/374d022552a1aa11ad0a53ec635255d09f365289/gcc%2Fomp-low.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/374d022552a1aa11ad0a53ec635255d09f365289/gcc%2Fomp-low.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fomp-low.c?ref=374d022552a1aa11ad0a53ec635255d09f365289", "patch": "@@ -5559,7 +5559,7 @@ lower_reduction_clauses (tree clauses, gimple_seq *stmt_seqp, omp_context *ctx)\n {\n   gimple_seq sub_seq = NULL;\n   gimple *stmt;\n-  tree x, c, tid = NULL_TREE;\n+  tree x, c;\n   int count = 0;\n \n   /* OpenACC loop reductions are handled elsewhere.  */\n@@ -5589,17 +5589,6 @@ lower_reduction_clauses (tree clauses, gimple_seq *stmt_seqp, omp_context *ctx)\n   if (count == 0)\n     return;\n \n-  /* Initialize thread info for OpenACC.  */\n-  if (is_gimple_omp_oacc (ctx->stmt))\n-    {\n-      /* Get the current thread id.  */\n-      tree call = builtin_decl_explicit (BUILT_IN_GOACC_GET_THREAD_NUM);\n-      tid = create_tmp_var (TREE_TYPE (TREE_TYPE (call)));\n-      gimple *stmt = gimple_build_call (call, 0);\n-      gimple_call_set_lhs (stmt, tid);\n-      gimple_seq_add_stmt (stmt_seqp, stmt);\n-    }\n-\n   for (c = clauses; c ; c = OMP_CLAUSE_CHAIN (c))\n     {\n       tree var, ref, new_var, orig_var;\n@@ -12266,7 +12255,7 @@ expand_omp_atomic (struct omp_region *region)\n }\n \n \n-/* Encode an oacc launc argument.  This matches the GOMP_LAUNCH_PACK\n+/* Encode an oacc launch argument.  This matches the GOMP_LAUNCH_PACK\n    macro on gomp-constants.h.  We do not check for overflow.  */\n \n static tree\n@@ -12292,7 +12281,7 @@ oacc_launch_pack (unsigned code, tree device, unsigned op)\n \n    The attribute value is a TREE_LIST.  A set of dimensions is\n    represented as a list of INTEGER_CST.  Those that are runtime\n-   expres are represented as an INTEGER_CST of zero.\n+   exprs are represented as an INTEGER_CST of zero.\n \n    TOOO. Normally the attribute will just contain a single such list.  If\n    however it contains a list of lists, this will represent the use of\n@@ -14311,7 +14300,7 @@ lower_omp_for (gimple_stmt_iterator *gsi_p, omp_context *ctx)\n \t\t\t  gimple_omp_for_clauses (stmt),\n \t\t\t  &oacc_head, &oacc_tail, ctx);\n \n-  /* Add OpenACC partitioning markers just before the loop  */\n+  /* Add OpenACC partitioning and reduction markers just before the loop  */\n   if (oacc_head)\n     gimple_seq_add_seq (&body, oacc_head);\n   \n@@ -19524,7 +19513,7 @@ class pass_oacc_device_lower : public gimple_opt_pass\n       return execute_oacc_device_lower ();\n     }\n \n-}; // class pass_oacc_transform\n+}; // class pass_oacc_device_lower\n \n } // anon namespace\n "}]}