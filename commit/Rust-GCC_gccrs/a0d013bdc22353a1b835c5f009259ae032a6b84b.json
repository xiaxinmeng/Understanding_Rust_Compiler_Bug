{"sha": "a0d013bdc22353a1b835c5f009259ae032a6b84b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YTBkMDEzYmRjMjIzNTNhMWI4MzVjNWYwMDkyNTlhZTAzMmE2Yjg0Yg==", "commit": {"author": {"name": "Richard Biener", "email": "rguenther@suse.de", "date": "2018-09-25T12:51:57Z"}, "committer": {"name": "Richard Biener", "email": "rguenth@gcc.gnu.org", "date": "2018-09-25T12:51:57Z"}, "message": "re PR tree-optimization/87402 (ICE in set_ssa_val_to, at tree-ssa-sccvn.c:3645)\n\n2018-09-25  Richard Biener  <rguenther@suse.de>\n\n\tPR tree-optimization/87402\n\t* tree-ssa-sccvn.c (SSA_VISITED): Remove unused function.\n\t(visit_phi): Re-instantiate handling of supposed to be VARYING\n\tbut non-VARYING backedge value.\n\n\t* gcc.dg/torture/pr87402.c: New testcase.\n\nFrom-SVN: r264566", "tree": {"sha": "b154d7d697ee8d70b7b640b709975ef67447d3c7", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/b154d7d697ee8d70b7b640b709975ef67447d3c7"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/a0d013bdc22353a1b835c5f009259ae032a6b84b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d013bdc22353a1b835c5f009259ae032a6b84b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a0d013bdc22353a1b835c5f009259ae032a6b84b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a0d013bdc22353a1b835c5f009259ae032a6b84b/comments", "author": {"login": "rguenth", "id": 2046526, "node_id": "MDQ6VXNlcjIwNDY1MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2046526?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rguenth", "html_url": "https://github.com/rguenth", "followers_url": "https://api.github.com/users/rguenth/followers", "following_url": "https://api.github.com/users/rguenth/following{/other_user}", "gists_url": "https://api.github.com/users/rguenth/gists{/gist_id}", "starred_url": "https://api.github.com/users/rguenth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rguenth/subscriptions", "organizations_url": "https://api.github.com/users/rguenth/orgs", "repos_url": "https://api.github.com/users/rguenth/repos", "events_url": "https://api.github.com/users/rguenth/events{/privacy}", "received_events_url": "https://api.github.com/users/rguenth/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "5d6749d1f241223353cba6cb637738bb5b698756", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5d6749d1f241223353cba6cb637738bb5b698756", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5d6749d1f241223353cba6cb637738bb5b698756"}], "stats": {"total": 62, "additions": 51, "deletions": 11}, "files": [{"sha": "b81172f2900987b74e63f0e00520c329d9e4bd97", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d013bdc22353a1b835c5f009259ae032a6b84b/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d013bdc22353a1b835c5f009259ae032a6b84b/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=a0d013bdc22353a1b835c5f009259ae032a6b84b", "patch": "@@ -1,3 +1,10 @@\n+2018-09-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87402\n+\t* tree-ssa-sccvn.c (SSA_VISITED): Remove unused function.\n+\t(visit_phi): Re-instantiate handling of supposed to be VARYING\n+\tbut non-VARYING backedge value.\n+\n 2018-09-25  Richard Biener  <rguenther@suse.de>\n \n \tPR debug/83941"}, {"sha": "76a8a86330905b77865d84ca3affe88ea9294a04", "filename": "gcc/testsuite/ChangeLog", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d013bdc22353a1b835c5f009259ae032a6b84b/gcc%2Ftestsuite%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d013bdc22353a1b835c5f009259ae032a6b84b/gcc%2Ftestsuite%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2FChangeLog?ref=a0d013bdc22353a1b835c5f009259ae032a6b84b", "patch": "@@ -1,3 +1,8 @@\n+2018-09-25  Richard Biener  <rguenther@suse.de>\n+\n+\tPR tree-optimization/87402\n+\t* gcc.dg/torture/pr87402.c: New testcase.\n+\n 2018-09-25  H.J. Lu  <hongjiu.lu@intel.com>\n \n \tPR testsuite/70150"}, {"sha": "a27ac4fd21c1eafa6b2d5948ba5e625c0190daaf", "filename": "gcc/testsuite/gcc.dg/torture/pr87402.c", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d013bdc22353a1b835c5f009259ae032a6b84b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87402.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d013bdc22353a1b835c5f009259ae032a6b84b/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87402.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgcc.dg%2Ftorture%2Fpr87402.c?ref=a0d013bdc22353a1b835c5f009259ae032a6b84b", "patch": "@@ -0,0 +1,33 @@\n+/* { dg-do compile } */\n+\n+void\n+xl (int co)\n+{\n+  int ar = 0;\n+\n+  if (ar != 0)\n+    {\n+      int pp, ll = 0;\n+      int *zx;\n+\n+      if (co == 0)\n+\t{\n+\t}\n+      else\n+\t{\n+\t  zx = &pp;\n+\n+\t  if (co < 0)\n+\t    while (co < 1)\n+\t      {\n+to:\n+\t\twhile (ll < 1)\n+\t\t  ++ll;\n+\t      }\n+\n+\t  *zx = (__INTPTR_TYPE__)&ar;\n+\t}\n+    }\n+\n+  goto to;\n+}"}, {"sha": "5a05dfb564062b5090fbdbadd6f06729d8ab396a", "filename": "gcc/tree-ssa-sccvn.c", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/a0d013bdc22353a1b835c5f009259ae032a6b84b/gcc%2Ftree-ssa-sccvn.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/a0d013bdc22353a1b835c5f009259ae032a6b84b/gcc%2Ftree-ssa-sccvn.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftree-ssa-sccvn.c?ref=a0d013bdc22353a1b835c5f009259ae032a6b84b", "patch": "@@ -464,15 +464,6 @@ SSA_VAL (tree x, bool *visited = NULL)\n   return tem && tem->visited ? tem->valnum : x;\n }\n \n-/* Return whether X was visited.  */\n-\n-inline bool\n-SSA_VISITED (tree x)\n-{\n-  vn_ssa_aux_t tem = vn_ssa_aux_hash->find_with_hash (x, SSA_NAME_VERSION (x));\n-  return tem && tem->visited;\n-}\n-\n /* Return the SSA value of the VUSE x, supporting released VDEFs\n    during elimination which will value-number the VDEF to the\n    associated VUSE (but not substitute in the whole lattice).  */\n@@ -4196,15 +4187,19 @@ visit_phi (gimple *phi, bool *inserted, bool backedges_varying_p)\n \t  }\n       }\n \n-  /* If we value-number a virtual operand never value-number to the\n+  /* If the value we want to use is flowing over the backedge and we\n+     should take it as VARYING but it has a non-VARYING value drop to\n+     VARYING.\n+     If we value-number a virtual operand never value-number to the\n      value from the backedge as that confuses the alias-walking code.\n      See gcc.dg/torture/pr87176.c.  If the value is the same on a\n      non-backedge everything is OK though.  */\n   if (backedge_val\n       && !seen_non_backedge\n       && TREE_CODE (backedge_val) == SSA_NAME\n       && sameval == backedge_val\n-      && SSA_NAME_IS_VIRTUAL_OPERAND (backedge_val))\n+      && (SSA_NAME_IS_VIRTUAL_OPERAND (backedge_val)\n+\t  || SSA_VAL (backedge_val) != backedge_val))\n     /* Note this just drops to VARYING without inserting the PHI into\n        the hashes.  */\n     result = PHI_RESULT (phi);"}]}