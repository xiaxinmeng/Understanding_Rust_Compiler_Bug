{"sha": "22b768d410526a52a16943b4ad31b77622f1931f", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6MjJiNzY4ZDQxMDUyNmE1MmExNjk0M2I0YWQzMWI3NzYyMmYxOTMxZg==", "commit": {"author": {"name": "Uros Bizjak", "email": "uros@kss-loka.si", "date": "2004-12-16T09:29:57Z"}, "committer": {"name": "Uros Bizjak", "email": "uros@gcc.gnu.org", "date": "2004-12-16T09:29:57Z"}, "message": "i386.md (sqrt{s,d}f2_1, [...]): Unify enable constraint with respect to TARGET_SSE...\n\n\t* config/i386/i386.md (sqrt{s,d}f2_1, sqrt{s,d}f2_1_sse_only,\n\tsqrt{s,d}f2_i387): Unify enable constraint with respect to\n\tTARGET_SSE, TARGET_SSE2, TARGET_USE_FANCY_MATH_387,\n\tTARGET_SSE_MATH and TARGET_MIX_SSE_I387.\n\t(sqrt{s,d}f2_1): Rename to *sqrt{s,d}f2_mixed.\n\t(sqrt{s,d}f2_1_sse_only): Rename to *sqrt{s,d}f2_sse.\n\t(sqrt{s,d}f2_i387): Rename to *sqrt{s,d}f2_i387.\n\t(*sqrtextendsfdf2): Also enable for TARGET_MIX_SSE_I387.\n\t(*sqrtextend?f?f2): Rename to *sqrtextendsfdf2_i387.\n\nFrom-SVN: r92247", "tree": {"sha": "c1513ca439ed173144c7a5a3d8db8b71390f2675", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/c1513ca439ed173144c7a5a3d8db8b71390f2675"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/22b768d410526a52a16943b4ad31b77622f1931f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22b768d410526a52a16943b4ad31b77622f1931f", "html_url": "https://github.com/Rust-GCC/gccrs/commit/22b768d410526a52a16943b4ad31b77622f1931f", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/22b768d410526a52a16943b4ad31b77622f1931f/comments", "author": null, "committer": null, "parents": [{"sha": "cfa185b8ac368a23c9e3207f02420d3843f020fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cfa185b8ac368a23c9e3207f02420d3843f020fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cfa185b8ac368a23c9e3207f02420d3843f020fc"}], "stats": {"total": 57, "additions": 32, "deletions": 25}, "files": [{"sha": "31d471f8d65404ba6e7ba21b17afd3414ea24210", "filename": "gcc/ChangeLog", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b768d410526a52a16943b4ad31b77622f1931f/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b768d410526a52a16943b4ad31b77622f1931f/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=22b768d410526a52a16943b4ad31b77622f1931f", "patch": "@@ -1,3 +1,15 @@\n+2004-12-16  Uros Bizjak  <uros@kss-loka.si>\n+\n+\t* config/i386/i386.md (sqrt{s,d}f2_1, sqrt{s,d}f2_1_sse_only,\n+\tsqrt{s,d}f2_i387): Unify enable constraint with respect to \n+\tTARGET_SSE, TARGET_SSE2, TARGET_USE_FANCY_MATH_387,\n+\tTARGET_SSE_MATH and TARGET_MIX_SSE_I387.\n+\t(sqrt{s,d}f2_1): Rename to *sqrt{s,d}f2_mixed.\n+\t(sqrt{s,d}f2_1_sse_only): Rename to *sqrt{s,d}f2_sse.\n+\t(sqrt{s,d}f2_i387): Rename to *sqrt{s,d}f2_i387.\n+\t(*sqrtextendsfdf2): Also enable for TARGET_MIX_SSE_I387.\n+\t(*sqrtextend?f?f2): Rename to *sqrtextendsfdf2_i387.\n+\n 2004-12-16  Uros Bizjak  <uros@kss-loka.si>\n \n \t* config/i386/i386.md (*fop_?f_comm_{,sse,nosse},"}, {"sha": "d5f5a866013d1118596909a3a396ba00186ed492", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 20, "deletions": 25, "changes": 45, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/22b768d410526a52a16943b4ad31b77622f1931f/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/22b768d410526a52a16943b4ad31b77622f1931f/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=22b768d410526a52a16943b4ad31b77622f1931f", "patch": "@@ -14647,32 +14647,30 @@\n     operands[1] = force_reg (SFmode, operands[1]);\n })\n \n-(define_insn \"sqrtsf2_1\"\n+(define_insn \"*sqrtsf2_mixed\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f#x,x#f\")\n \t(sqrt:SF (match_operand:SF 1 \"nonimmediate_operand\" \"0#x,xm#f\")))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (TARGET_SSE_MATH && TARGET_MIX_SSE_I387)\"\n+  \"TARGET_USE_FANCY_MATH_387 && TARGET_MIX_SSE_I387\"\n   \"@\n    fsqrt\n    sqrtss\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"fpspc,sse\")\n    (set_attr \"mode\" \"SF,SF\")\n    (set_attr \"athlon_decode\" \"direct,*\")])\n \n-(define_insn \"sqrtsf2_1_sse_only\"\n+(define_insn \"*sqrtsf2_sse\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=x\")\n \t(sqrt:SF (match_operand:SF 1 \"nonimmediate_operand\" \"xm\")))]\n-  \"TARGET_SSE_MATH && (!TARGET_80387 || !TARGET_MIX_SSE_I387)\"\n+  \"TARGET_SSE_MATH\"\n   \"sqrtss\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"mode\" \"SF\")\n    (set_attr \"athlon_decode\" \"*\")])\n \n-(define_insn \"sqrtsf2_i387\"\n+(define_insn \"*sqrtsf2_i387\"\n   [(set (match_operand:SF 0 \"register_operand\" \"=f\")\n \t(sqrt:SF (match_operand:SF 1 \"register_operand\" \"0\")))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && !TARGET_SSE_MATH\"\n+  \"TARGET_USE_FANCY_MATH_387\"\n   \"fsqrt\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"SF\")\n@@ -14681,50 +14679,47 @@\n (define_expand \"sqrtdf2\"\n   [(set (match_operand:DF 0 \"register_operand\" \"\")\n \t(sqrt:DF (match_operand:DF 1 \"nonimmediate_operand\" \"\")))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   || (TARGET_SSE2 && TARGET_SSE_MATH)\"\n+  \"TARGET_USE_FANCY_MATH_387 || (TARGET_SSE2 && TARGET_SSE_MATH)\"\n {\n-  if (!TARGET_SSE2 || !TARGET_SSE_MATH)\n+  if (!(TARGET_SSE2 && TARGET_SSE_MATH))\n     operands[1] = force_reg (DFmode, operands[1]);\n })\n \n-(define_insn \"sqrtdf2_1\"\n+(define_insn \"*sqrtdf2_mixed\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f#Y,Y#f\")\n \t(sqrt:DF (match_operand:DF 1 \"nonimmediate_operand\" \"0#Y,Ym#f\")))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (TARGET_SSE2 && TARGET_SSE_MATH && TARGET_MIX_SSE_I387)\"\n+  \"TARGET_USE_FANCY_MATH_387 && TARGET_SSE2 && TARGET_MIX_SSE_I387\"\n   \"@\n    fsqrt\n    sqrtsd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"fpspc,sse\")\n    (set_attr \"mode\" \"DF,DF\")\n    (set_attr \"athlon_decode\" \"direct,*\")])\n \n-(define_insn \"sqrtdf2_1_sse_only\"\n+(define_insn \"*sqrtdf2_sse\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=Y\")\n \t(sqrt:DF (match_operand:DF 1 \"nonimmediate_operand\" \"Ym\")))]\n-  \"TARGET_SSE2 && TARGET_SSE_MATH && (!TARGET_80387 || !TARGET_MIX_SSE_I387)\"\n+  \"TARGET_SSE2 && TARGET_SSE_MATH\"\n   \"sqrtsd\\t{%1, %0|%0, %1}\"\n   [(set_attr \"type\" \"sse\")\n    (set_attr \"mode\" \"DF\")\n    (set_attr \"athlon_decode\" \"*\")])\n \n-(define_insn \"sqrtdf2_i387\"\n+(define_insn \"*sqrtdf2_i387\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(sqrt:DF (match_operand:DF 1 \"register_operand\" \"0\")))]\n-  \"TARGET_USE_FANCY_MATH_387\n-   && (!TARGET_SSE2 || !TARGET_SSE_MATH)\"\n+  \"TARGET_USE_FANCY_MATH_387\"\n   \"fsqrt\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"DF\")\n    (set_attr \"athlon_decode\" \"direct\")])\n \n-(define_insn \"*sqrtextendsfdf2\"\n+(define_insn \"*sqrtextendsfdf2_i387\"\n   [(set (match_operand:DF 0 \"register_operand\" \"=f\")\n \t(sqrt:DF (float_extend:DF\n \t\t  (match_operand:SF 1 \"register_operand\" \"0\"))))]\n   \"TARGET_USE_FANCY_MATH_387\n-   && !(TARGET_SSE2 && TARGET_SSE_MATH)\"\n+   && (!(TARGET_SSE2 && TARGET_SSE_MATH) || TARGET_MIX_SSE_I387)\"\n   \"fsqrt\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"DF\")\n@@ -14740,20 +14735,20 @@\n    (set_attr \"mode\" \"XF\")\n    (set_attr \"athlon_decode\" \"direct\")])\n \n-(define_insn \"*sqrtextenddfxf2\"\n+(define_insn \"*sqrtextendsfxf2_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(sqrt:XF (float_extend:XF\n-\t\t  (match_operand:DF 1 \"register_operand\" \"0\"))))]\n+\t\t  (match_operand:SF 1 \"register_operand\" \"0\"))))]\n   \"TARGET_USE_FANCY_MATH_387\"\n   \"fsqrt\"\n   [(set_attr \"type\" \"fpspc\")\n    (set_attr \"mode\" \"XF\")\n    (set_attr \"athlon_decode\" \"direct\")])\n \n-(define_insn \"*sqrtextendsfxf2\"\n+(define_insn \"*sqrtextenddfxf2_i387\"\n   [(set (match_operand:XF 0 \"register_operand\" \"=f\")\n \t(sqrt:XF (float_extend:XF\n-\t\t  (match_operand:SF 1 \"register_operand\" \"0\"))))]\n+\t\t  (match_operand:DF 1 \"register_operand\" \"0\"))))]\n   \"TARGET_USE_FANCY_MATH_387\"\n   \"fsqrt\"\n   [(set_attr \"type\" \"fpspc\")"}]}