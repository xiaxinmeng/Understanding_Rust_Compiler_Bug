{"sha": "574f366488bbe1bf3075735278242a92be85f40b", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NTc0ZjM2NjQ4OGJiZTFiZjMwNzU3MzUyNzgyNDJhOTJiZTg1ZjQwYg==", "commit": {"author": {"name": "Paolo Carlini", "email": "paolo.carlini@oracle.com", "date": "2009-12-10T17:17:41Z"}, "committer": {"name": "Paolo Carlini", "email": "paolo@gcc.gnu.org", "date": "2009-12-10T17:17:41Z"}, "message": "revert: re PR libstdc++/42261 (infinite recursion from string(string::size_type(6), string::size_type('f')))\n\n2009-12-10  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tRevert:\n        2009-12-03  Paolo Carlini  <paolo.carlini@oracle.com>\n\n\tPR libstdc++/42261\n\t* include/bits/basic_string.h (_S_construct_aux(_Integer, _Integer,\n\tconst _Alloc&, __true_type)): Cast the second argument to value_type.\n\t* include/ext/sso_string_base.h (_M_construct_aux(_Integer, _Integer,\n\tstd::__true_type)): Likewise.\n\t* include/ext/rc_string_base.h (_S_construct_aux(_Integer, _Integer,\n\tconst _Alloc&, std::__true_type)): Likewise.\n\t* testsuite/21_strings/basic_string/cons/char/42261.cc: New.\n\t* testsuite/21_strings/basic_string/cons/wchar_t/42261.cc: Likewise.\n\nFrom-SVN: r155132", "tree": {"sha": "f4257a360746fb0d218931cd67170528eae68722", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/f4257a360746fb0d218931cd67170528eae68722"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/574f366488bbe1bf3075735278242a92be85f40b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/574f366488bbe1bf3075735278242a92be85f40b", "html_url": "https://github.com/Rust-GCC/gccrs/commit/574f366488bbe1bf3075735278242a92be85f40b", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/574f366488bbe1bf3075735278242a92be85f40b/comments", "author": null, "committer": null, "parents": [{"sha": "788d04b2b499af9cbcb8ef0f2ffdd7359825c1e0", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/788d04b2b499af9cbcb8ef0f2ffdd7359825c1e0", "html_url": "https://github.com/Rust-GCC/gccrs/commit/788d04b2b499af9cbcb8ef0f2ffdd7359825c1e0"}], "stats": {"total": 96, "additions": 19, "deletions": 77}, "files": [{"sha": "756632022528767fc751c12e792eabe1e72fe85d", "filename": "libstdc++-v3/ChangeLog", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/574f366488bbe1bf3075735278242a92be85f40b/libstdc%2B%2B-v3%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/574f366488bbe1bf3075735278242a92be85f40b/libstdc%2B%2B-v3%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2FChangeLog?ref=574f366488bbe1bf3075735278242a92be85f40b", "patch": "@@ -1,7 +1,22 @@\n+2009-12-10  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tRevert:\n+        2009-12-03  Paolo Carlini  <paolo.carlini@oracle.com>\n+\n+\tPR libstdc++/42261\n+\t* include/bits/basic_string.h (_S_construct_aux(_Integer, _Integer,\n+\tconst _Alloc&, __true_type)): Cast the second argument to value_type.\n+\t* include/ext/sso_string_base.h (_M_construct_aux(_Integer, _Integer,\n+\tstd::__true_type)): Likewise.\n+\t* include/ext/rc_string_base.h (_S_construct_aux(_Integer, _Integer,\n+\tconst _Alloc&, std::__true_type)): Likewise.\n+\t* testsuite/21_strings/basic_string/cons/char/42261.cc: New.\n+\t* testsuite/21_strings/basic_string/cons/wchar_t/42261.cc: Likewise.\n+\n 2009-12-10  Paolo Carlini  <paolo.carlini@oracle.com>\n \n \t* testsuite/util/testsuite_containers.h (populate<>::populate(_Tp&)):\n-\tAvoid used uninitialized warning. \n+\tAvoid used uninitialized warning.\n \t* include/ext/pb_ds/detail/cc_hash_table_map_/\n \tconstructor_destructor_fn_imps.hpp: Fix typo causing sequence point\n \twarning."}, {"sha": "269a75ed46817a51f9701d14f05db4b1ecf67eae", "filename": "libstdc++-v3/include/bits/basic_string.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/574f366488bbe1bf3075735278242a92be85f40b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/574f366488bbe1bf3075735278242a92be85f40b/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fbits%2Fbasic_string.h?ref=574f366488bbe1bf3075735278242a92be85f40b", "patch": "@@ -1588,8 +1588,7 @@ _GLIBCXX_BEGIN_NAMESPACE(std)\n         static _CharT*\n         _S_construct_aux(_Integer __beg, _Integer __end,\n \t\t\t const _Alloc& __a, __true_type)\n-        { return _S_construct(static_cast<size_type>(__beg),\n-\t\t\t      static_cast<value_type>(__end), __a); }\n+        { return _S_construct(static_cast<size_type>(__beg), __end, __a); }\n \n       template<class _InIterator>\n         static _CharT*"}, {"sha": "6d8c430d57503e718a0958fea04cadb291c7baab", "filename": "libstdc++-v3/include/ext/rc_string_base.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/574f366488bbe1bf3075735278242a92be85f40b/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/574f366488bbe1bf3075735278242a92be85f40b/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Frc_string_base.h?ref=574f366488bbe1bf3075735278242a92be85f40b", "patch": "@@ -231,8 +231,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n         static _CharT*\n         _S_construct_aux(_Integer __beg, _Integer __end,\n \t\t\t const _Alloc& __a, std::__true_type)\n-\t{ return _S_construct(static_cast<size_type>(__beg),\n-\t\t\t      static_cast<value_type>(__end), __a); }\n+\t{ return _S_construct(static_cast<size_type>(__beg), __end, __a); }\n \n       template<typename _InIterator>\n         static _CharT*"}, {"sha": "d88297fc36e55ba249ef92fb793e7fe78100245b", "filename": "libstdc++-v3/include/ext/sso_string_base.h", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/574f366488bbe1bf3075735278242a92be85f40b/libstdc%2B%2B-v3%2Finclude%2Fext%2Fsso_string_base.h", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/574f366488bbe1bf3075735278242a92be85f40b/libstdc%2B%2B-v3%2Finclude%2Fext%2Fsso_string_base.h", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Finclude%2Fext%2Fsso_string_base.h?ref=574f366488bbe1bf3075735278242a92be85f40b", "patch": "@@ -106,8 +106,7 @@ _GLIBCXX_BEGIN_NAMESPACE(__gnu_cxx)\n       template<typename _Integer>\n         void\n         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)\n-      { _M_construct(static_cast<size_type>(__beg),\n-\t\t     static_cast<value_type>(__end)); }\n+\t{ _M_construct(static_cast<size_type>(__beg), __end); }\n \n       template<typename _InIterator>\n         void"}, {"sha": "a83b74ac73599631c7f4923db9fa737b43c3963b", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/char/42261.cc", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/788d04b2b499af9cbcb8ef0f2ffdd7359825c1e0/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F42261.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/788d04b2b499af9cbcb8ef0f2ffdd7359825c1e0/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F42261.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fchar%2F42261.cc?ref=788d04b2b499af9cbcb8ef0f2ffdd7359825c1e0", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <string>\n-#include <testsuite_hooks.h>\n-\n-// libstdc++/42261\n-void test01()\n-{\n-  bool test __attribute__((unused)) = true;\n-  using namespace std;\n-\n-  const string s(string::size_type(6), string::size_type('f'));\n-  VERIFY( s == \"ffffff\" );\n-}\n-\n-int main()\n-{\n-  test01();\n-  return 0;\n-}"}, {"sha": "8782e8cafe90db7de10d8ddf2a6156a6c6ec01a6", "filename": "libstdc++-v3/testsuite/21_strings/basic_string/cons/wchar_t/42261.cc", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/788d04b2b499af9cbcb8ef0f2ffdd7359825c1e0/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F42261.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/788d04b2b499af9cbcb8ef0f2ffdd7359825c1e0/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F42261.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/libstdc%2B%2B-v3%2Ftestsuite%2F21_strings%2Fbasic_string%2Fcons%2Fwchar_t%2F42261.cc?ref=788d04b2b499af9cbcb8ef0f2ffdd7359825c1e0", "patch": "@@ -1,35 +0,0 @@\n-// Copyright (C) 2009 Free Software Foundation, Inc.\n-//\n-// This file is part of the GNU ISO C++ Library.  This library is free\n-// software; you can redistribute it and/or modify it under the\n-// terms of the GNU General Public License as published by the\n-// Free Software Foundation; either version 3, or (at your option)\n-// any later version.\n-\n-// This library is distributed in the hope that it will be useful,\n-// but WITHOUT ANY WARRANTY; without even the implied warranty of\n-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n-// GNU General Public License for more details.\n-\n-// You should have received a copy of the GNU General Public License along\n-// with this library; see the file COPYING3.  If not see\n-// <http://www.gnu.org/licenses/>.\n-\n-#include <string>\n-#include <testsuite_hooks.h>\n-\n-// libstdc++/42261\n-void test01()\n-{\n-  bool test __attribute__((unused)) = true;\n-  using namespace std;\n-\n-  const wstring s(wstring::size_type(6), wstring::size_type(L'f'));\n-  VERIFY( s == L\"ffffff\" );\n-}\n-\n-int main()\n-{\n-  test01();\n-  return 0;\n-}"}]}