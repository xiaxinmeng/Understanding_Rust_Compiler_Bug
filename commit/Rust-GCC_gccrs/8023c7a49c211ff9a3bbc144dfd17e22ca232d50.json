{"sha": "8023c7a49c211ff9a3bbc144dfd17e22ca232d50", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ODAyM2M3YTQ5YzIxMWZmOWEzYmJjMTQ0ZGZkMTdlMjJjYTIzMmQ1MA==", "commit": {"author": {"name": "Hans-Peter Nilsson", "email": "hp@bitrange.com", "date": "2018-09-09T18:12:14Z"}, "committer": {"name": "Hans-Peter Nilsson", "email": "hp@gcc.gnu.org", "date": "2018-09-09T18:12:14Z"}, "message": "re PR target/85666 (gcc-8.0.1 fails to build mmix target: gcc/libgcc/libgcc2.h:203:20: internal compiler error: in leaf_function_p, at final.c:4488)\n\n\tPR target/85666\n\t* config/mmix/mmix.c (mmix_assemble_integer): Handle byte-size\n\tnon-CONST_INT rtx:es using assemble_integer_with_op \".byte\".\n\nFrom-SVN: r264183", "tree": {"sha": "3239a2f8048949234449d05522d984395583c056", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/3239a2f8048949234449d05522d984395583c056"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/8023c7a49c211ff9a3bbc144dfd17e22ca232d50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8023c7a49c211ff9a3bbc144dfd17e22ca232d50", "html_url": "https://github.com/Rust-GCC/gccrs/commit/8023c7a49c211ff9a3bbc144dfd17e22ca232d50", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/8023c7a49c211ff9a3bbc144dfd17e22ca232d50/comments", "author": null, "committer": null, "parents": [{"sha": "a236f9d6402901a67d6e41797e6be5a9ab24e865", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a236f9d6402901a67d6e41797e6be5a9ab24e865", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a236f9d6402901a67d6e41797e6be5a9ab24e865"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "57725badf7a6b1b567d775f8ea4bcd90fc4fb4b5", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8023c7a49c211ff9a3bbc144dfd17e22ca232d50/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8023c7a49c211ff9a3bbc144dfd17e22ca232d50/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=8023c7a49c211ff9a3bbc144dfd17e22ca232d50", "patch": "@@ -1,8 +1,10 @@\n 2018-09-09  Hans-Peter Nilsson  <hp@bitrange.com>\n \n \tPR target/85666\n-\t* config/mmix/mmix.c (MMIX_CFUN_NEEDS_SAVED_EH_RETURN_ADDRESS): Don't\n-\tcall leaf_function_p, instead use has_hard_reg_initial_val.\n+\t* config/mmix/mmix.c (mmix_assemble_integer): Handle byte-size\n+\tnon-CONST_INT rtx:es using assemble_integer_with_op \".byte\".\n+\t(MMIX_CFUN_NEEDS_SAVED_EH_RETURN_ADDRESS): Don't call\n+\tleaf_function_p, instead use has_hard_reg_initial_val.\n \n 2018-09-09  Nathan Sidwell  <nathan@acm.org>\n "}, {"sha": "9e3bc9437ce9da74fe2b02029680ffb770d2b851", "filename": "gcc/config/mmix/mmix.c", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/8023c7a49c211ff9a3bbc144dfd17e22ca232d50/gcc%2Fconfig%2Fmmix%2Fmmix.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/8023c7a49c211ff9a3bbc144dfd17e22ca232d50/gcc%2Fconfig%2Fmmix%2Fmmix.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fmmix%2Fmmix.c?ref=8023c7a49c211ff9a3bbc144dfd17e22ca232d50", "patch": "@@ -1370,8 +1370,14 @@ mmix_assemble_integer (rtx x, unsigned int size, int aligned_p)\n       case 1:\n \tif (GET_CODE (x) != CONST_INT)\n \t  {\n-\t    aligned_p = 0;\n-\t    break;\n+\t    /* There is no \"unaligned byte\" op or generic function to\n+\t       which we can punt, so we have to handle this here.  As\n+\t       the expression isn't a plain literal, the generated\n+\t       assembly-code can't be mmixal-equivalent (i.e. \"BYTE\"\n+\t       won't work) and thus it's ok to emit the default op\n+\t       \".byte\". */\n+\t    assemble_integer_with_op (\"\\t.byte\\t\", x);\n+\t    return true;\n \t  }\n \tfputs (\"\\tBYTE\\t\", asm_out_file);\n \tmmix_print_operand (asm_out_file, x, 'B');"}]}