{"sha": "ca09cd34f1e976658a5cc60abaf880b2c4901e10", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6Y2EwOWNkMzRmMWU5NzY2NThhNWNjNjBhYmFmODgwYjJjNDkwMWUxMA==", "commit": {"author": {"name": "Joseph Myers", "email": "jsm@polyomino.org.uk", "date": "2004-05-29T20:10:10Z"}, "committer": {"name": "Joseph Myers", "email": "jsm28@gcc.gnu.org", "date": "2004-05-29T20:10:10Z"}, "message": "pretty-print.c (pp_base_format_text): Support %< instead of %` and %> as well as %'.\n\n\t* pretty-print.c (pp_base_format_text): Support %< instead of %`\n\tand %> as well as %'.\n\t* c-format.c: Use %< and %>.\n\t(gcc_diag_char_table, gcc_cdiag_char_table,\n\tgcc_cxxdiag_char_table): Update.\n\nFrom-SVN: r82428", "tree": {"sha": "761e9b7042c62d0dc2411e072afe2de5abaaa91e", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/761e9b7042c62d0dc2411e072afe2de5abaaa91e"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/ca09cd34f1e976658a5cc60abaf880b2c4901e10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca09cd34f1e976658a5cc60abaf880b2c4901e10", "html_url": "https://github.com/Rust-GCC/gccrs/commit/ca09cd34f1e976658a5cc60abaf880b2c4901e10", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/ca09cd34f1e976658a5cc60abaf880b2c4901e10/comments", "author": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsm28", "id": 10537793, "node_id": "MDQ6VXNlcjEwNTM3Nzkz", "avatar_url": "https://avatars.githubusercontent.com/u/10537793?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsm28", "html_url": "https://github.com/jsm28", "followers_url": "https://api.github.com/users/jsm28/followers", "following_url": "https://api.github.com/users/jsm28/following{/other_user}", "gists_url": "https://api.github.com/users/jsm28/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsm28/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsm28/subscriptions", "organizations_url": "https://api.github.com/users/jsm28/orgs", "repos_url": "https://api.github.com/users/jsm28/repos", "events_url": "https://api.github.com/users/jsm28/events{/privacy}", "received_events_url": "https://api.github.com/users/jsm28/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e953fed92f75f63acb652eb8b2c3b3245ca24fc", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/9e953fed92f75f63acb652eb8b2c3b3245ca24fc", "html_url": "https://github.com/Rust-GCC/gccrs/commit/9e953fed92f75f63acb652eb8b2c3b3245ca24fc"}], "stats": {"total": 48, "additions": 28, "deletions": 20}, "files": [{"sha": "3081c84b09992a0453f32e2ae92ffd8166253d4a", "filename": "gcc/ChangeLog", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca09cd34f1e976658a5cc60abaf880b2c4901e10/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca09cd34f1e976658a5cc60abaf880b2c4901e10/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=ca09cd34f1e976658a5cc60abaf880b2c4901e10", "patch": "@@ -1,3 +1,11 @@\n+2004-05-29  Joseph S. Myers  <jsm@polyomino.org.uk>\n+\n+\t* pretty-print.c (pp_base_format_text): Support %< instead of %`\n+\tand %> as well as %'.\n+\t* c-format.c: Use %< and %>.\n+\t(gcc_diag_char_table, gcc_cdiag_char_table,\n+\tgcc_cxxdiag_char_table): Update.\n+\n 2004-05-29  Joseph S. Myers  <jsm@polyomino.org.uk>\n \n \t* c-typeck.c (common_type): Correct comment."}, {"sha": "0b27741184a1f4b51c12f5dbc9440cb795d15f3d", "filename": "gcc/c-format.c", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca09cd34f1e976658a5cc60abaf880b2c4901e10/gcc%2Fc-format.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca09cd34f1e976658a5cc60abaf880b2c4901e10/gcc%2Fc-format.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fc-format.c?ref=ca09cd34f1e976658a5cc60abaf880b2c4901e10", "patch": "@@ -815,8 +815,7 @@ static const format_char_info gcc_diag_char_table[] =\n   /* These will require a \"tree\" at runtime.  */\n   { \"J\", 0, STD_C89, { T89_V,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q\",    \"\"   },\n \n-  { \"`\",   0, STD_C89, NOARGUMENTS, \"\",      \"\"   },\n-  { \"'\",   0, STD_C89, NOARGUMENTS, \"\",      \"\"   },\n+  { \"<>'\", 0, STD_C89, NOARGUMENTS, \"\",      \"\"   },\n   { \"m\",   0, STD_C89, NOARGUMENTS, \"q\",     \"\"   },\n   { NULL,  0, 0, NOLENGTHS, NULL, NULL }\n };\n@@ -839,8 +838,7 @@ static const format_char_info gcc_cdiag_char_table[] =\n   /* These will require a \"tree\" at runtime.  */\n   { \"DEFJT\", 0, STD_C89, { T89_V,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q\", \"\"   },\n \n-  { \"`\",   0, STD_C89, NOARGUMENTS, \"\",      \"\"   },\n-  { \"'\",   0, STD_C89, NOARGUMENTS, \"\",      \"\"   },\n+  { \"<>'\", 0, STD_C89, NOARGUMENTS, \"\",      \"\"   },\n   { \"m\",   0, STD_C89, NOARGUMENTS, \"q\",     \"\"   },\n   { NULL,  0, 0, NOLENGTHS, NULL, NULL }\n };\n@@ -866,8 +864,7 @@ static const format_char_info gcc_cxxdiag_char_table[] =\n   /* These accept either an `int' or an `enum tree_code' (which is handled as an `int'.)  */\n   { \"CLOPQ\",0,STD_C89, { T89_I,   BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN,  BADLEN  }, \"q\",  \"\"   },\n \n-  { \"`\",   0, STD_C89, NOARGUMENTS, \"\",      \"\"   },\n-  { \"'\",   0, STD_C89, NOARGUMENTS, \"\",      \"\"   },\n+  { \"<>'\", 0, STD_C89, NOARGUMENTS, \"\",      \"\"   },\n   { \"m\",   0, STD_C89, NOARGUMENTS, \"q\",     \"\"   },\n   { NULL,  0, 0, NOLENGTHS, NULL, NULL }\n };\n@@ -1707,7 +1704,7 @@ check_format_info_main (int *status, format_check_results *res,\n       if (*format_chars == 0)\n \t{\n \t  if (format_chars - orig_format_chars != format_length)\n-\t    status_warning (status, \"embedded %`\\\\0%' in format\");\n+\t    status_warning (status, \"embedded %<\\\\0%> in format\");\n \t  if (info->first_arg_num != 0 && params != 0\n \t      && has_operand_number <= 0)\n \t    {\n@@ -1722,7 +1719,7 @@ check_format_info_main (int *status, format_check_results *res,\n \tcontinue;\n       if (*format_chars == 0)\n \t{\n-\t  status_warning (status, \"spurious trailing %`%%%' in format\");\n+\t  status_warning (status, \"spurious trailing %<%%%> in format\");\n \t  continue;\n \t}\n       if (*format_chars == '%')\n@@ -2068,7 +2065,7 @@ check_format_info_main (int *status, format_check_results *res,\n       if (pedantic)\n \t{\n \t  if (ADJ_STD (fci->std) > C_STD_VER)\n-\t    status_warning (status, \"%s does not support the %`%%%c%' %s format\",\n+\t    status_warning (status, \"%s does not support the %<%%%c%> %s format\",\n \t\t\t    C_STD_NAME (fci->std), format_char, fki->name);\n \t}\n \n@@ -2084,7 +2081,7 @@ check_format_info_main (int *status, format_check_results *res,\n \t      continue;\n \t    if (strchr (fci->flag_chars, flag_chars[i]) == 0)\n \t      {\n-\t\tstatus_warning (status, \"%s used with %`%%%c%' %s format\",\n+\t\tstatus_warning (status, \"%s used with %<%%%c%> %s format\",\n \t\t\t\t_(s->name), format_char, fki->name);\n \t\td++;\n \t\tcontinue;\n@@ -2102,7 +2099,7 @@ check_format_info_main (int *status, format_check_results *res,\n \t\t\t\t\t     ? t->long_name\n \t\t\t\t\t     : s->long_name);\n \t\t    if (ADJ_STD (t->std) > C_STD_VER)\n-\t\t      status_warning (status, \"%s does not support %s with the %`%%%c%' %s format\",\n+\t\t      status_warning (status, \"%s does not support %s with the %<%%%c%> %s format\",\n \t\t\t\t      C_STD_NAME (t->std), _(long_name),\n \t\t\t\t      format_char, fki->name);\n \t\t  }\n@@ -2135,7 +2132,7 @@ check_format_info_main (int *status, format_check_results *res,\n \t  if (bad_flag_pairs[i].ignored)\n \t    {\n \t      if (bad_flag_pairs[i].predicate != 0)\n-\t\tstatus_warning (status, \"%s ignored with %s and %`%%%c%' %s format\",\n+\t\tstatus_warning (status, \"%s ignored with %s and %<%%%c%> %s format\",\n \t\t\t\t_(s->name), _(t->name), format_char,\n \t\t\t\tfki->name);\n \t      else\n@@ -2145,7 +2142,7 @@ check_format_info_main (int *status, format_check_results *res,\n \t  else\n \t    {\n \t      if (bad_flag_pairs[i].predicate != 0)\n-\t\tstatus_warning (status, \"use of %s and %s together with %`%%%c%' %s format\",\n+\t\tstatus_warning (status, \"use of %s and %s together with %<%%%c%> %s format\",\n \t\t\t\t_(s->name), _(t->name), format_char,\n \t\t\t\tfki->name);\n \t      else\n@@ -2168,10 +2165,10 @@ check_format_info_main (int *status, format_check_results *res,\n \t  else if (strchr (fci->flags2, '2') != 0)\n \t    y2k_level = 2;\n \t  if (y2k_level == 3)\n-\t    status_warning (status, \"%`%%%c%' yields only last 2 digits of year in some locales\",\n+\t    status_warning (status, \"%<%%%c%> yields only last 2 digits of year in some locales\",\n \t\t\t    format_char);\n \t  else if (y2k_level == 2)\n-\t    status_warning (status, \"%`%%%c%' yields only last 2 digits of year\", format_char);\n+\t    status_warning (status, \"%<%%%c%> yields only last 2 digits of year\", format_char);\n \t}\n \n       if (strchr (fci->flags2, '[') != 0)\n@@ -2187,7 +2184,7 @@ check_format_info_main (int *status, format_check_results *res,\n \t    ++format_chars;\n \t  if (*format_chars != ']')\n \t    /* The end of the format string was reached.  */\n-\t    status_warning (status, \"no closing %`]%' for %`%%[%' format\");\n+\t    status_warning (status, \"no closing %<]%> for %<%%[%> format\");\n \t}\n \n       wanted_type = 0;\n@@ -2221,7 +2218,7 @@ check_format_info_main (int *status, format_check_results *res,\n \t\t   && ADJ_STD (wanted_type_std) > ADJ_STD (fci->std))\n \t    {\n \t      if (ADJ_STD (wanted_type_std) > C_STD_VER)\n-\t\tstatus_warning (status, \"%s does not support the %`%%%s%c%' %s format\",\n+\t\tstatus_warning (status, \"%s does not support the %<%%%s%c%> %s format\",\n \t\t\t\tC_STD_NAME (wanted_type_std), length_chars,\n \t\t\t\tformat_char, fki->name);\n \t    }"}, {"sha": "f5a1a77490b6349f8566561288a42709d9a102e4", "filename": "gcc/pretty-print.c", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/ca09cd34f1e976658a5cc60abaf880b2c4901e10/gcc%2Fpretty-print.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/ca09cd34f1e976658a5cc60abaf880b2c4901e10/gcc%2Fpretty-print.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fpretty-print.c?ref=ca09cd34f1e976658a5cc60abaf880b2c4901e10", "patch": "@@ -179,8 +179,10 @@ pp_base_indent (pretty_printer *pp)\n    %p: pointer.\n    %m: strerror(text->err_no) - does not consume a value from args_ptr.\n    %%: '%'.\n-   %`: opening quote.\n-   %': closing quote.\n+   %<: opening quote.\n+   %>: closing quote.\n+   %': apostrophe (should only be used in untranslated messages;\n+       translations should use appropriate punctuation directly).\n    %.*s: a substring the length of which is specified by an integer.\n    %H: location_t.\n    Flag 'q': quote formatted text (must come immediately after '%').  */\n@@ -292,10 +294,11 @@ pp_base_format_text (pretty_printer *pp, text_info *text)\n \t  pp_character (pp, '%');\n \t  break;\n \n-\tcase '`':\n+\tcase '<':\n \t  pp_string (pp, open_quote);\n \t  break;\n \n+\tcase '>':\n \tcase '\\'':\n \t  pp_string (pp, close_quote);\n \t  break;"}]}