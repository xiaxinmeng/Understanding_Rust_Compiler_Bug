{"sha": "e0a24727f28754045955bb801d664ef123c0568a", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZTBhMjQ3MjdmMjg3NTQwNDU5NTViYjgwMWQ2NjRlZjEyM2MwNTY4YQ==", "commit": {"author": {"name": "Kazu Hirata", "email": "kazu@cs.umass.edu", "date": "2004-02-01T17:01:34Z"}, "committer": {"name": "Kazu Hirata", "email": "kazu@gcc.gnu.org", "date": "2004-02-01T17:01:34Z"}, "message": "* config/h8300/h8300.md (two peephole2's): New.\n\nFrom-SVN: r77076", "tree": {"sha": "2d56cdee303713f4fdbccfc9f2e737e30f59d1c2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/2d56cdee303713f4fdbccfc9f2e737e30f59d1c2"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/e0a24727f28754045955bb801d664ef123c0568a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0a24727f28754045955bb801d664ef123c0568a", "html_url": "https://github.com/Rust-GCC/gccrs/commit/e0a24727f28754045955bb801d664ef123c0568a", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/e0a24727f28754045955bb801d664ef123c0568a/comments", "author": null, "committer": null, "parents": [{"sha": "5202c5fea43373ecc71110db9b660358168a6ae4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5202c5fea43373ecc71110db9b660358168a6ae4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5202c5fea43373ecc71110db9b660358168a6ae4"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "6c5796290989adc9419f92d0baec8d6df817c1d4", "filename": "gcc/ChangeLog", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a24727f28754045955bb801d664ef123c0568a/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a24727f28754045955bb801d664ef123c0568a/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=e0a24727f28754045955bb801d664ef123c0568a", "patch": "@@ -1,3 +1,7 @@\n+2004-02-01  Kazu Hirata  <kazu@cs.umass.edu>\n+\n+\t* config/h8300/h8300.md (two peephole2's): New.\n+\n 2004-02-01  Eric Botcazou  <ebotcazou@libertysurf.fr>\n \n \t* config/sparc/sol2-bi.h: Handle TARGET_CPU_ultrasparc3."}, {"sha": "c0a9575f4cdfcab7c3d33074a607ce1758c441bd", "filename": "gcc/config/h8300/h8300.md", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/e0a24727f28754045955bb801d664ef123c0568a/gcc%2Fconfig%2Fh8300%2Fh8300.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/e0a24727f28754045955bb801d664ef123c0568a/gcc%2Fconfig%2Fh8300%2Fh8300.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fh8300%2Fh8300.md?ref=e0a24727f28754045955bb801d664ef123c0568a", "patch": "@@ -4969,3 +4969,38 @@\n   \"operands[5] = gen_rtx_REG (QImode, REGNO (operands[0]));\n    operands[6] = gen_int_mode (INTVAL (operands[1]), QImode);\n    operands[7] = gen_int_mode (INTVAL (operands[2]), QImode);\")\n+\n+;; These triggers right at the end of allocation of locals in the\n+;; prologue.  The only profitable cases are when we have stack\n+;; adjustment of -4 or -12.  That of -8 won't happen because it is\n+;; always split into two consecutive subtractions of -4.\n+\n+(define_peephole2\n+  [(set (reg:SI SP_REG)\n+\t(plus:SI (reg:SI SP_REG)\n+\t\t (const_int -4)))\n+   (set (mem:SI (reg:SI SP_REG))\n+\t(match_operand:SI 0 \"register_operand\" \"\"))]\n+  \"(TARGET_H8300H || TARGET_H8300S) && !TARGET_NORMAL_MODE\n+   && REGNO (operands[0]) != SP_REG\"\n+  [(set (mem:SI (pre_dec:SI (reg:SI SP_REG)))\n+\t(match_dup 0))]\n+  \"\")\n+\n+(define_peephole2\n+  [(set (reg:SI SP_REG)\n+\t(plus:SI (reg:SI SP_REG)\n+\t\t (const_int -12)))\n+   (set (mem:SI (reg:SI SP_REG))\n+\t(match_operand:SI 0 \"register_operand\" \"\"))]\n+  \"(TARGET_H8300H || TARGET_H8300S) && !TARGET_NORMAL_MODE\n+   && REGNO (operands[0]) != SP_REG\"\n+  [(set (reg:SI SP_REG)\n+\t(plus:SI (reg:SI SP_REG)\n+\t\t (const_int -4)))\n+   (set (reg:SI SP_REG)\n+\t(plus:SI (reg:SI SP_REG)\n+\t\t (const_int -4)))\n+   (set (mem:SI (pre_dec:SI (reg:SI SP_REG)))\n+\t(match_dup 0))]\n+  \"\")"}]}