{"sha": "c9d56eb777552ac5ee0c281e1f6e34b6fe929b77", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6YzlkNTZlYjc3NzU1MmFjNWVlMGMyODFlMWY2ZTM0YjZmZTkyOWI3Nw==", "commit": {"author": {"name": "Alex Coplan", "email": "alex.coplan@arm.com", "date": "2020-09-23T14:20:19Z"}, "committer": {"name": "Alex Coplan", "email": "alex.coplan@arm.com", "date": "2020-09-23T14:20:19Z"}, "message": "aarch64: Add support for Neoverse V1 CPU\n\nThis adds support for Arm's Neoverse V1 CPU to the AArch64 backend.\n\n---\n\ngcc/ChangeLog:\n\n\t* config/aarch64/aarch64-cores.def: Add Neoverse V1.\n\t* config/aarch64/aarch64-tune.md: Regenerate.\n\t* doc/invoke.texi: Document support for Neoverse V1.", "tree": {"sha": "8e3cdb01479410b5e6d571bbf31ecdbbd7a30db8", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/8e3cdb01479410b5e6d571bbf31ecdbbd7a30db8"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/c9d56eb777552ac5ee0c281e1f6e34b6fe929b77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9d56eb777552ac5ee0c281e1f6e34b6fe929b77", "html_url": "https://github.com/Rust-GCC/gccrs/commit/c9d56eb777552ac5ee0c281e1f6e34b6fe929b77", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/c9d56eb777552ac5ee0c281e1f6e34b6fe929b77/comments", "author": {"login": "acoplan-arm", "id": 86676934, "node_id": "MDQ6VXNlcjg2Njc2OTM0", "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acoplan-arm", "html_url": "https://github.com/acoplan-arm", "followers_url": "https://api.github.com/users/acoplan-arm/followers", "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}", "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions", "organizations_url": "https://api.github.com/users/acoplan-arm/orgs", "repos_url": "https://api.github.com/users/acoplan-arm/repos", "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/acoplan-arm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "acoplan-arm", "id": 86676934, "node_id": "MDQ6VXNlcjg2Njc2OTM0", "avatar_url": "https://avatars.githubusercontent.com/u/86676934?v=4", "gravatar_id": "", "url": "https://api.github.com/users/acoplan-arm", "html_url": "https://github.com/acoplan-arm", "followers_url": "https://api.github.com/users/acoplan-arm/followers", "following_url": "https://api.github.com/users/acoplan-arm/following{/other_user}", "gists_url": "https://api.github.com/users/acoplan-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/acoplan-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/acoplan-arm/subscriptions", "organizations_url": "https://api.github.com/users/acoplan-arm/orgs", "repos_url": "https://api.github.com/users/acoplan-arm/repos", "events_url": "https://api.github.com/users/acoplan-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/acoplan-arm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13f7c5d504b5fe6c233f2e68acd10bd4fc9007ac", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/13f7c5d504b5fe6c233f2e68acd10bd4fc9007ac", "html_url": "https://github.com/Rust-GCC/gccrs/commit/13f7c5d504b5fe6c233f2e68acd10bd4fc9007ac"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "04dc587681ef229563a417a4d9840752518fe6c6", "filename": "gcc/config/aarch64/aarch64-cores.def", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d56eb777552ac5ee0c281e1f6e34b6fe929b77/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d56eb777552ac5ee0c281e1f6e34b6fe929b77/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-cores.def?ref=c9d56eb777552ac5ee0c281e1f6e34b6fe929b77", "patch": "@@ -134,6 +134,7 @@ AARCH64_CORE(\"thunderx3t110\",  thunderx3t110,  thunderx3t110, 8_3A,  AARCH64_FL_\n \n /* Arm ('A') cores.  */\n AARCH64_CORE(\"zeus\", zeus, cortexa57, 8_4A,  AARCH64_FL_FOR_ARCH8_4 | AARCH64_FL_SVE | AARCH64_FL_RCPC | AARCH64_FL_I8MM | AARCH64_FL_BF16 | AARCH64_FL_F16 | AARCH64_FL_PROFILE | AARCH64_FL_SSBS | AARCH64_FL_RNG, neoversen1, 0x41, 0xd40, -1)\n+AARCH64_CORE(\"neoverse-v1\", neoversev1, cortexa57, 8_4A,  AARCH64_FL_FOR_ARCH8_4 | AARCH64_FL_SVE | AARCH64_FL_RCPC | AARCH64_FL_I8MM | AARCH64_FL_BF16 | AARCH64_FL_F16 | AARCH64_FL_PROFILE | AARCH64_FL_SSBS | AARCH64_FL_RNG, neoversen1, 0x41, 0xd40, -1)\n \n /* Qualcomm ('Q') cores. */\n AARCH64_CORE(\"saphira\",     saphira,    saphira,    8_4A,  AARCH64_FL_FOR_ARCH8_4 | AARCH64_FL_CRYPTO | AARCH64_FL_RCPC, saphira,   0x51, 0xC01, -1)"}, {"sha": "729eb3ec2c7741481dcce156ed937ac146d64a78", "filename": "gcc/config/aarch64/aarch64-tune.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d56eb777552ac5ee0c281e1f6e34b6fe929b77/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d56eb777552ac5ee0c281e1f6e34b6fe929b77/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Faarch64%2Faarch64-tune.md?ref=c9d56eb777552ac5ee0c281e1f6e34b6fe929b77", "patch": "@@ -1,5 +1,5 @@\n ;; -*- buffer-read-only: t -*-\n ;; Generated automatically by gentune.sh from aarch64-cores.def\n (define_attr \"tune\"\n-\t\"cortexa34,cortexa35,cortexa53,cortexa57,cortexa72,cortexa73,thunderx,thunderxt88p1,thunderxt88,octeontx,octeontxt81,octeontxt83,thunderxt81,thunderxt83,emag,xgene1,falkor,qdf24xx,exynosm1,phecda,thunderx2t99p1,vulcan,thunderx2t99,cortexa55,cortexa75,cortexa76,cortexa76ae,cortexa77,cortexa65,cortexa65ae,ares,neoversen1,neoversee1,octeontx2,octeontx2t98,octeontx2t96,octeontx2t93,octeontx2f95,octeontx2f95n,octeontx2f95mm,a64fx,tsv110,thunderx3t110,zeus,saphira,cortexa57cortexa53,cortexa72cortexa53,cortexa73cortexa35,cortexa73cortexa53,cortexa75cortexa55,cortexa76cortexa55,cortexr82\"\n+\t\"cortexa34,cortexa35,cortexa53,cortexa57,cortexa72,cortexa73,thunderx,thunderxt88p1,thunderxt88,octeontx,octeontxt81,octeontxt83,thunderxt81,thunderxt83,emag,xgene1,falkor,qdf24xx,exynosm1,phecda,thunderx2t99p1,vulcan,thunderx2t99,cortexa55,cortexa75,cortexa76,cortexa76ae,cortexa77,cortexa65,cortexa65ae,ares,neoversen1,neoversee1,octeontx2,octeontx2t98,octeontx2t96,octeontx2t93,octeontx2f95,octeontx2f95n,octeontx2f95mm,a64fx,tsv110,thunderx3t110,zeus,neoversev1,saphira,cortexa57cortexa53,cortexa72cortexa53,cortexa73cortexa35,cortexa73cortexa53,cortexa75cortexa55,cortexa76cortexa55,cortexr82\"\n \t(const (symbol_ref \"((enum attr_tune) aarch64_tune)\")))"}, {"sha": "1380146c574aa193de6f0a3fe0b2086ad2ea23c0", "filename": "gcc/doc/invoke.texi", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/c9d56eb777552ac5ee0c281e1f6e34b6fe929b77/gcc%2Fdoc%2Finvoke.texi", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/c9d56eb777552ac5ee0c281e1f6e34b6fe929b77/gcc%2Fdoc%2Finvoke.texi", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fdoc%2Finvoke.texi?ref=c9d56eb777552ac5ee0c281e1f6e34b6fe929b77", "patch": "@@ -17505,7 +17505,8 @@ performance of the code.  Permissible values for this option are:\n @samp{cortex-a76}, @samp{cortex-a76ae}, @samp{cortex-a77},\n @samp{cortex-a65}, @samp{cortex-a65ae}, @samp{cortex-a34},\n @samp{ares}, @samp{exynos-m1}, @samp{emag}, @samp{falkor},\n-@samp{neoverse-e1},@samp{neoverse-n1},@samp{qdf24xx}, @samp{saphira},\n+@samp{neoverse-e1},@samp{neoverse-n1},@samp{neoverse-v1},@samp{qdf24xx},\n+@samp{saphira},\n @samp{phecda}, @samp{xgene1}, @samp{vulcan}, @samp{octeontx},\n @samp{octeontx81},  @samp{octeontx83},\n @samp{octeontx2}, @samp{octeontx2t98}, @samp{octeontx2t96}"}]}