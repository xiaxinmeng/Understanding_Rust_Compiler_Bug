{"sha": "f7379e5eb940dc3f0c4580ced0eaefe2610fdf74", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6ZjczNzllNWViOTQwZGMzZjBjNDU4MGNlZDBlYWVmZTI2MTBmZGY3NA==", "commit": {"author": {"name": "James Greenhalgh", "email": "james.greenhalgh@arm.com", "date": "2013-10-15T15:28:04Z"}, "committer": {"name": "James Greenhalgh", "email": "jgreenhalgh@gcc.gnu.org", "date": "2013-10-15T15:28:04Z"}, "message": "[ARM] [Neon types 3/10] Update Current type attributes to new Neon Types.\n\ngcc/\n\t* config/arm/iterators.md (V_elem_ch): New.\n\t(q): Likewise.\n\t(VQH_type): Likewise.\n\t* config/arm/arm.md (is_neon_type): New.\n\t(conds): Use is_neon_type.\n\t(anddi3_insn): Update type attribute.\n\t(xordi3_insn): Likewise.\n\t(one_cmpldi2): Likewise.\n\t* gcc/config/arm/vfp.md (movhf_vfp_neon): Update type attribute.\n\t* gcc/config/arm/neon.md (neon_mov): Update type attributes for\n\tall patterns.\n\nFrom-SVN: r203613", "tree": {"sha": "08158bcb7c75f8dab07a5a26b425274459368fea", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/08158bcb7c75f8dab07a5a26b425274459368fea"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/f7379e5eb940dc3f0c4580ced0eaefe2610fdf74", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7379e5eb940dc3f0c4580ced0eaefe2610fdf74", "html_url": "https://github.com/Rust-GCC/gccrs/commit/f7379e5eb940dc3f0c4580ced0eaefe2610fdf74", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/f7379e5eb940dc3f0c4580ced0eaefe2610fdf74/comments", "author": {"login": "jgreenhalgh-arm", "id": 6104025, "node_id": "MDQ6VXNlcjYxMDQwMjU=", "avatar_url": "https://avatars.githubusercontent.com/u/6104025?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jgreenhalgh-arm", "html_url": "https://github.com/jgreenhalgh-arm", "followers_url": "https://api.github.com/users/jgreenhalgh-arm/followers", "following_url": "https://api.github.com/users/jgreenhalgh-arm/following{/other_user}", "gists_url": "https://api.github.com/users/jgreenhalgh-arm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jgreenhalgh-arm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jgreenhalgh-arm/subscriptions", "organizations_url": "https://api.github.com/users/jgreenhalgh-arm/orgs", "repos_url": "https://api.github.com/users/jgreenhalgh-arm/repos", "events_url": "https://api.github.com/users/jgreenhalgh-arm/events{/privacy}", "received_events_url": "https://api.github.com/users/jgreenhalgh-arm/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "a9e66678ca96517de9a5b4780e8ed160c01c18b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/a9e66678ca96517de9a5b4780e8ed160c01c18b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/a9e66678ca96517de9a5b4780e8ed160c01c18b2"}], "stats": {"total": 1315, "additions": 699, "deletions": 616}, "files": [{"sha": "c7e55c323be18a41f9404b222d295df2491dc073", "filename": "gcc/ChangeLog", "status": "modified", "additions": 244, "deletions": 0, "changes": 244, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7379e5eb940dc3f0c4580ced0eaefe2610fdf74/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7379e5eb940dc3f0c4580ced0eaefe2610fdf74/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=f7379e5eb940dc3f0c4580ced0eaefe2610fdf74", "patch": "@@ -1,3 +1,247 @@\n+2013-10-15  James Greenhalgh  <james.greenhalgh@arm.com>\n+\n+\t* config/arm/iterators.md (V_elem_ch): New.\n+\t(q): Likewise.\n+\t(VQH_type): Likewise.\n+\t* config/arm/arm.md (is_neon_type): New.\n+\t(conds): Use is_neon_type.\n+\t(anddi3_insn): Update type attribute.\n+\t(xordi3_insn): Likewise.\n+\t(one_cmpldi2): Likewise.\n+\t* gcc/config/arm/vfp.md (movhf_vfp_neon): Update type attribute.\n+\t* gcc/config/arm/neon.md (neon_mov): Update type attribute.\n+\t(*movmisalign<mode>_neon_store): Likewise.\n+\t(*movmisalign<mode>_neon_load): Likewise.\n+\t(vec_set<mode>_internal): Likewise.\n+\t(vec_set<mode>_internal): Likewise.\n+\t(vec_setv2di_internal): Likewise.\n+\t(vec_extract<mode>): Likewise.\n+\t(vec_extract<mode>): Likewise.\n+\t(vec_extractv2di): Likewise.\n+\t(*add<mode>3_neon): Likewise.\n+\t(adddi3_neon): Likewise.\n+\t(*sub<mode>3_neon): Likewise.\n+\t(subdi3_neon): Likewise.\n+\t(fma<VCVTF:mode>4): Likewise.\n+\t(fma<VCVTF:mode>4_intrinsic): Likewise.\n+\t(*fmsub<VCVTF:mode>4): Likewise.\n+\t(fmsub<VCVTF:mode>4_intrinsic): Likewise.\n+\t(neon_vrint<NEON_VRINT:nvrint_variant><VCVTF:mode>): Likewise.\n+\t(ior<mode>3): Likewise.\n+\t(and<mode>3): Likewise.\n+\t(orn<mode>3_neon): Likewise.\n+\t(orndi3_neon): Likewise.\n+\t(bic<mode>3_neon): Likewise.\n+\t(bicdi3_neon): Likewise.\n+\t(xor<mode>3): Likewise.\n+\t(one_cmpl<mode>2): Likewise.\n+\t(abs<mode>2): Likewise.\n+\t(neg<mode>2): Likewise.\n+\t(negdi2_neon): Likewise.\n+\t(*umin<mode>3_neon): Likewise.\n+\t(*umax<mode>3_neon): Likewise.\n+\t(*smin<mode>3_neon): Likewise.\n+\t(*smax<mode>3_neon): Likewise.\n+\t(vashl<mode>3): Likewise.\n+\t(vashr<mode>3_imm): Likewise.\n+\t(vlshr<mode>3_imm): Likewise.\n+\t(ashl<mode>3_signed): Likewise.\n+\t(ashl<mode>3_unsigned): Likewise.\n+\t(neon_load_count): Likewise.\n+\t(ashldi3_neon_noclobber): Likewise.\n+\t(ashldi3_neon): Likewise.\n+\t(signed_shift_di3_neon): Likewise.\n+\t(unsigned_shift_di3_neon): Likewise.\n+\t(ashrdi3_neon_imm_noclobber): Likewise.\n+\t(lshrdi3_neon_imm_noclobber): Likewise.\n+\t(<shift>di3_neon): Likewise.\n+\t(widen_ssum<mode>3): Likewise.\n+\t(widen_usum<mode>3): Likewise.\n+\t(quad_halves_<code>v4si): Likewise.\n+\t(quad_halves_<code>v4sf): Likewise.\n+\t(quad_halves_<code>v8hi): Likewise.\n+\t(quad_halves_<code>v16qi): Likewise.\n+\t(reduc_splus_v2di): Likewise.\n+\t(neon_vpadd_internal<mode>): Likewise.\n+\t(neon_vpsmin<mode>): Likewise.\n+\t(neon_vpsmax<mode>): Likewise.\n+\t(neon_vpumin<mode>): Likewise.\n+\t(neon_vpumax<mode>): Likewise.\n+\t(*ss_add<mode>_neon): Likewise.\n+\t(*us_add<mode>_neon): Likewise.\n+\t(*ss_sub<mode>_neon): Likewise.\n+\t(*us_sub<mode>_neon): Likewise.\n+\t(neon_vadd<mode>_unspec): Likewise.\n+\t(neon_vaddl<mode>): Likewise.\n+\t(neon_vaddw<mode>): Likewise.\n+\t(neon_vhadd<mode>): Likewise.\n+\t(neon_vqadd<mode>): Likewise.\n+\t(neon_vaddhn<mode>): Likewise.\n+\t(neon_vmul<mode>): Likewise.\n+\t(neon_vfms<VCVTF:mode>): Likewise.\n+\t(neon_vmlal<mode>): Likewise.\n+\t(neon_vmls<mode>): Likewise.\n+\t(neon_vmlsl<mode>): Likewise.\n+\t(neon_vqdmulh<mode>): Likewise.\n+\t(neon_vqdmlal<mode>): Likewise.\n+\t(neon_vqdmlsl<mode>): Likewise.\n+\t(neon_vmull<mode>): Likewise.\n+\t(neon_vqdmull<mode>): Likewise.\n+\t(neon_vsub<mode>_unspec): Likewise.\n+\t(neon_vsubl<mode>): Likewise.\n+\t(neon_vsubw<mode>): Likewise.\n+\t(neon_vqsub<mode>): Likewise.\n+\t(neon_vhsub<mode>): Likewise.\n+\t(neon_vsubhn<mode>): Likewise.\n+\t(neon_vceq<mode>): Likewise.\n+\t(neon_vcge<mode>): Likewise.\n+\t(neon_vcgeu<mode>): Likewise.\n+\t(neon_vcgt<mode>): Likewise.\n+\t(neon_vcgtu<mode>): Likewise.\n+\t(neon_vcle<mode>): Likewise.\n+\t(neon_vclt<mode>): Likewise.\n+\t(neon_vcage<mode>): Likewise.\n+\t(neon_vcagt<mode>): Likewise.\n+\t(neon_vtst<mode>): Likewise.\n+\t(neon_vabd<mode>): Likewise.\n+\t(neon_vabdl<mode>): Likewise.\n+\t(neon_vaba<mode>): Likewise.\n+\t(neon_vabal<mode>): Likewise.\n+\t(neon_vmax<mode>): Likewise.\n+\t(neon_vmin<mode>): Likewise.\n+\t(neon_vpaddl<mode>): Likewise.\n+\t(neon_vpadal<mode>): Likewise.\n+\t(neon_vpmax<mode>): Likewise.\n+\t(neon_vpmin<mode>): Likewise.\n+\t(neon_vrecps<mode>): Likewise.\n+\t(neon_vrsqrts<mode>): Likewise.\n+\t(neon_vqabs<mode>): Likewise.\n+\t(neon_vqneg<mode>): Likewise.\n+\t(neon_vcls<mode>): Likewise.\n+\t(clz<mode>2): Likewise.\n+\t(popcount<mode>2): Likewise.\n+\t(neon_vrecpe<mode>): Likewise.\n+\t(neon_vrsqrte<mode>): Likewise.\n+\t(neon_vget_lane<mode>_sext_internal): Likewise.\n+\t(neon_vget_lane<mode>_zext_internal): Likewise.\n+\t(neon_vdup_n<mode>): Likewise.\n+\t(neon_vdup_n<mode>): Likewise.\n+\t(neon_vdup_nv2di): Likewise.\n+\t(neon_vdup_lane<mode>_interal): Likewise.\n+\t(*neon_vswp<mode>): Likewise.\n+\t(neon_vcombine<mode>): Likewise.\n+\t(float<mode><V_cvtto>2): Likewise.\n+\t(floatuns<mode><V_cvtto>2): Likewise.\n+\t(fix_trunc<mode><V_cvtto>2): Likewise.\n+\t(fixuns_trunc<mode><V_cvtto>2\n+\t(neon_vcvt<mode>): Likewise.\n+\t(neon_vcvt<mode>): Likewise.\n+\t(neon_vcvtv4sfv4hf): Likewise.\n+\t(neon_vcvtv4hfv4sf): Likewise.\n+\t(neon_vcvt_n<mode>): Likewise.\n+\t(neon_vcvt_n<mode>): Likewise.\n+\t(neon_vmovn<mode>): Likewise.\n+\t(neon_vqmovn<mode>): Likewise.\n+\t(neon_vqmovun<mode>): Likewise.\n+\t(neon_vmovl<mode>): Likewise.\n+\t(neon_vmul_lane<mode>): Likewise.\n+\t(neon_vmul_lane<mode>): Likewise.\n+\t(neon_vmull_lane<mode>): Likewise.\n+\t(neon_vqdmull_lane<mode>): Likewise.\n+\t(neon_vqdmulh_lane<mode>): Likewise.\n+\t(neon_vqdmulh_lane<mode>): Likewise.\n+\t(neon_vmla_lane<mode>): Likewise.\n+\t(neon_vmla_lane<mode>): Likewise.\n+\t(neon_vmlal_lane<mode>): Likewise.\n+\t(neon_vqdmlal_lane<mode>): Likewise.\n+\t(neon_vmls_lane<mode>): Likewise.\n+\t(neon_vmls_lane<mode>): Likewise.\n+\t(neon_vmlsl_lane<mode>): Likewise.\n+\t(neon_vqdmlsl_lane<mode>): Likewise.\n+\t(neon_vext<mode>): Likewise.\n+\t(neon_vrev64<mode>): Likewise.\n+\t(neon_vrev32<mode>): Likewise.\n+\t(neon_vrev16<mode>): Likewise.\n+\t(neon_vbsl<mode>_internal): Likewise.\n+\t(neon_vshl<mode>): Likewise.\n+\t(neon_vqshl<mode>): Likewise.\n+\t(neon_vshr_n<mode>): Likewise.\n+\t(neon_vshrn_n<mode>): Likewise.\n+\t(neon_vqshrn_n<mode>): Likewise.\n+\t(neon_vqshrun_n<mode>): Likewise.\n+\t(neon_vshl_n<mode>): Likewise.\n+\t(neon_vqshl_n<mode>): Likewise.\n+\t(neon_vqshlu_n<mode>): Likewise.\n+\t(neon_vshll_n<mode>): Likewise.\n+\t(neon_vsra_n<mode>): Likewise.\n+\t(neon_vsri_n<mode>): Likewise.\n+\t(neon_vsli_n<mode>): Likewise.\n+\t(neon_vtbl1v8qi): Likewise.\n+\t(neon_vtbl2v8qi): Likewise.\n+\t(neon_vtbl3v8qi): Likewise.\n+\t(neon_vtbl4v8qi): Likewise.\n+\t(neon_vtbl1v16qi): Likewise.\n+\t(neon_vtbl2v16qi): Likewise.\n+\t(neon_vcombinev16qi): Likewise.\n+\t(neon_vtbx1v8qi): Likewise.\n+\t(neon_vtbx2v8qi): Likewise.\n+\t(neon_vtbx3v8qi): Likewise.\n+\t(neon_vtbx4v8qi): Likewise.\n+\t(*neon_vtrn<mode>_insn): Likewise.\n+\t(*neon_vzip<mode>_insn): Likewise.\n+\t(*neon_vuzp<mode>_insn): Likewise.\n+\t(neon_vld1<mode>): Likewise.\n+\t(neon_vld1_lane<mode>): Likewise.\n+\t(neon_vld1_lane<mode>): Likewise.\n+\t(neon_vld1_dup<mode>): Likewise.\n+\t(neon_vld1_dup<mode>): Likewise.\n+\t(neon_vld1_dupv2di): Likewise.\n+\t(neon_vst1<mode>): Likewise.\n+\t(neon_vst1_lane<mode>): Likewise.\n+\t(neon_vst1_lane<mode>): Likewise.\n+\t(neon_vld2<mode>): Likewise.\n+\t(neon_vld2<mode>): Likewise.\n+\t(neon_vld2_lane<mode>): Likewise.\n+\t(neon_vld2_lane<mode>): Likewise.\n+\t(neon_vld2_dup<mode>): Likewise.\n+\t(neon_vst2<mode>): Likewise.\n+\t(neon_vst2<mode>): Likewise.\n+\t(neon_vst2_lane<mode>): Likewise.\n+\t(neon_vst2_lane<mode>): Likewise.\n+\t(neon_vld3<mode>): Likewise.\n+\t(neon_vld3qa<mode>): Likewise.\n+\t(neon_vld3qb<mode>): Likewise.\n+\t(neon_vld3_lane<mode>): Likewise.\n+\t(neon_vld3_lane<mode>): Likewise.\n+\t(neon_vld3_dup<mode>): Likewise.\n+\t(neon_vst3<mode>): Likewise.\n+\t(neon_vst3qa<mode>): Likewise.\n+\t(neon_vst3qb<mode>): Likewise.\n+\t(neon_vst3_lane<mode>): Likewise.\n+\t(neon_vst3_lane<mode>): Likewise.\n+\t(neon_vld4<mode>): Likewise.\n+\t(neon_vld4qa<mode>): Likewise.\n+\t(neon_vld4qb<mode>): Likewise.\n+\t(neon_vld4_lane<mode>): Likewise.\n+\t(neon_vld4_lane<mode>): Likewise.\n+\t(neon_vld4_dup<mode>): Likewise.\n+\t(neon_vst4<mode>): Likewise.\n+\t(neon_vst4qa<mode>): Likewise.\n+\t(neon_vst4qb<mode>): Likewise.\n+\t(neon_vst4_lane<mode>): Likewise.\n+\t(neon_vst4_lane<mode>): Likewise.\n+\t(neon_vec_unpack<US>_lo_<mode>): Likewise.\n+\t(neon_vec_unpack<US>_hi_<mode>): Likewise.\n+\t(neon_vec_<US>mult_lo_<mode>): Likewise.\n+\t(neon_vec_<US>mult_hi_<mode>): Likewise.\n+\t(neon_vec_<US>shiftl_<mode>): Likewise.\n+\t(neon_unpack<US>_<mode>): Likewise.\n+\t(neon_vec_<US>mult_<mode>): Likewise.\n+\t(vec_pack_trunc_<mode>): Likewise.\n+\t(neon_vec_pack_trunc_<mode>): Likewise.\n+\t(neon_vabd<mode>_2): Likewise.\n+\t(neon_vabd<mode>_3): Likewise.\n+\n 2013-10-15  James Greenhalgh  <james.greenhalgh@arm.com>\n \n \t* config/aarch64/aarch64.md (movtf_aarch64): Update type attribute."}, {"sha": "3726201dd4f8201854810de2604906f0ff5ffc46", "filename": "gcc/config/arm/arm.md", "status": "modified", "additions": 104, "deletions": 30, "changes": 134, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7379e5eb940dc3f0c4580ced0eaefe2610fdf74/gcc%2Fconfig%2Farm%2Farm.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7379e5eb940dc3f0c4580ced0eaefe2610fdf74/gcc%2Fconfig%2Farm%2Farm.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Farm.md?ref=f7379e5eb940dc3f0c4580ced0eaefe2610fdf74", "patch": "@@ -252,6 +252,103 @@\n ; initialized by arm_option_override()\n (define_attr \"ldsched\" \"no,yes\" (const (symbol_ref \"arm_ld_sched\")))\n \n+; YES if the \"type\" attribute assigned to the insn denotes an\n+; Advanced SIMD instruction, NO otherwise.\n+(define_attr \"is_neon_type\" \"yes,no\"\n+\t (if_then_else (eq_attr \"type\"\n+\t \"neon_add, neon_add_q, neon_add_widen, neon_add_long,\\\n+          neon_qadd, neon_qadd_q, neon_add_halve, neon_add_halve_q,\\\n+          neon_add_halve_narrow_q,\\\n+          neon_sub, neon_sub_q, neon_sub_widen, neon_sub_long, neon_qsub,\\\n+          neon_qsub_q, neon_sub_halve, neon_sub_halve_q,\\\n+          neon_sub_halve_narrow_q,\\\n+          neon_abs, neon_abs_q, neon_neg, neon_neg_q, neon_qneg,\\\n+          neon_qneg_q, neon_qabs, neon_qabs_q, neon_abd, neon_abd_q,\\\n+          neon_abd_long, neon_minmax, neon_minmax_q, neon_compare,\\\n+          neon_compare_q, neon_compare_zero, neon_compare_zero_q,\\\n+          neon_arith_acc, neon_arith_acc_q, neon_reduc_add,\\\n+          neon_reduc_add_q, neon_reduc_add_long, neon_reduc_add_acc,\\\n+          neon_reduc_add_acc_q, neon_reduc_minmax, neon_reduc_minmax_q,\\\n+          neon_logic, neon_logic_q, neon_tst, neon_tst_q,\\\n+          neon_shift_imm, neon_shift_imm_q, neon_shift_imm_narrow_q,\\\n+          neon_shift_imm_long, neon_shift_reg, neon_shift_reg_q,\\\n+          neon_shift_acc, neon_shift_acc_q, neon_sat_shift_imm,\\\n+          neon_sat_shift_imm_q, neon_sat_shift_imm_narrow_q,\\\n+          neon_sat_shift_reg, neon_sat_shift_reg_q,\\\n+          neon_ins, neon_ins_q, neon_move, neon_move_q, neon_move_narrow_q,\\\n+          neon_permute, neon_permute_q, neon_zip, neon_zip_q, neon_tbl1,\\\n+          neon_tbl1_q, neon_tbl2, neon_tbl2_q, neon_tbl3, neon_tbl3_q,\\\n+          neon_tbl4, neon_tbl4_q, neon_bsl, neon_bsl_q, neon_cls,\\\n+          neon_cls_q, neon_cnt, neon_cnt_q, neon_dup, neon_dup_q,\\\n+          neon_ext, neon_ext_q, neon_rbit, neon_rbit_q,\\\n+          neon_rev, neon_rev_q, neon_mul_b, neon_mul_b_q, neon_mul_h,\\\n+          neon_mul_h_q, neon_mul_s, neon_mul_s_q, neon_mul_b_long,\\\n+          neon_mul_h_long, neon_mul_s_long, neon_mul_h_scalar,\\\n+          neon_mul_h_scalar_q, neon_mul_s_scalar, neon_mul_s_scalar_q,\\\n+          neon_mul_h_scalar_long, neon_mul_s_scalar_long, neon_sat_mul_b,\\\n+          neon_sat_mul_b_q, neon_sat_mul_h, neon_sat_mul_h_q,\\\n+          neon_sat_mul_s, neon_sat_mul_s_q, neon_sat_mul_b_long,\\\n+          neon_sat_mul_h_long, neon_sat_mul_s_long, neon_sat_mul_h_scalar,\\\n+          neon_sat_mul_h_scalar_q, neon_sat_mul_s_scalar,\\\n+          neon_sat_mul_s_scalar_q, neon_sat_mul_h_scalar_long,\\\n+          neon_sat_mul_s_scalar_long, neon_mla_b, neon_mla_b_q, neon_mla_h,\\\n+          neon_mla_h_q, neon_mla_s, neon_mla_s_q, neon_mla_b_long,\\\n+          neon_mla_h_long, neon_mla_s_long, neon_mla_h_scalar,\\\n+          neon_mla_h_scalar_q, neon_mla_s_scalar, neon_mla_s_scalar_q,\\\n+          neon_mla_h_scalar_long, neon_mla_s_scalar_long,\\\n+          neon_sat_mla_b_long, neon_sat_mla_h_long,\\\n+          neon_sat_mla_s_long, neon_sat_mla_h_scalar_long,\\\n+          neon_sat_mla_s_scalar_long,\\\n+          neon_to_gp, neon_to_gp_q, neon_from_gp, neon_from_gp_q,\\\n+          neon_ldr, neon_load1_1reg, neon_load1_1reg_q, neon_load1_2reg,\\\n+          neon_load1_2reg_q, neon_load1_3reg, neon_load1_3reg_q,\\\n+          neon_load1_4reg, neon_load1_4reg_q, neon_load1_all_lanes,\\\n+          neon_load1_all_lanes_q, neon_load1_one_lane, neon_load1_one_lane_q,\\\n+          neon_load2_2reg, neon_load2_2reg_q, neon_load2_4reg,\\\n+          neon_load2_4reg_q, neon_load2_all_lanes, neon_load2_all_lanes_q,\\\n+          neon_load2_one_lane, neon_load2_one_lane_q,\\\n+          neon_load3_3reg, neon_load3_3reg_q, neon_load3_all_lanes,\\\n+          neon_load3_all_lanes_q, neon_load3_one_lane, neon_load3_one_lane_q,\\\n+          neon_load4_4reg, neon_load4_4reg_q, neon_load4_all_lanes,\\\n+          neon_load4_all_lanes_q, neon_load4_one_lane, neon_load4_one_lane_q,\\\n+          neon_str, neon_store1_1reg, neon_store1_1reg_q, neon_store1_2reg,\\\n+          neon_store1_2reg_q, neon_store1_3reg, neon_store1_3reg_q,\\\n+          neon_store1_4reg, neon_store1_4reg_q, neon_store1_one_lane,\\\n+          neon_store1_one_lane_q, neon_store2_2reg, neon_store2_2reg_q,\\\n+          neon_store2_4reg, neon_store2_4reg_q, neon_store2_one_lane,\\\n+          neon_store2_one_lane_q, neon_store3_3reg, neon_store3_3reg_q,\\\n+          neon_store3_one_lane, neon_store3_one_lane_q, neon_store4_4reg,\\\n+          neon_store4_4reg_q, neon_store4_one_lane, neon_store4_one_lane_q,\\\n+          neon_fp_abd_s, neon_fp_abd_s_q, neon_fp_abd_d, neon_fp_abd_d_q,\\\n+          neon_fp_addsub_s, neon_fp_addsub_s_q, neon_fp_addsub_d,\\\n+          neon_fp_addsub_d_q, neon_fp_compare_s, neon_fp_compare_s_q,\\\n+          neon_fp_compare_d, neon_fp_compare_d_q, neon_fp_minmax_s,\\\n+          neon_fp_minmax_s_q, neon_fp_minmax_d, neon_fp_minmax_d_q,\\\n+          neon_fp_reduc_add_s, neon_fp_reduc_add_s_q, neon_fp_reduc_add_d,\\\n+          neon_fp_reduc_add_d_q, neon_fp_reduc_minmax_s,\n+          neon_fp_reduc_minmax_s_q, neon_fp_reduc_minmax_d,\\\n+          neon_fp_reduc_minmax_d_q,\\\n+          neon_fp_cvt_narrow_s_q, neon_fp_cvt_narrow_d_q,\\\n+          neon_fp_cvt_widen_h, neon_fp_cvt_widen_s, neon_fp_to_int_s,\\\n+          neon_fp_to_int_s_q, neon_int_to_fp_s, neon_int_to_fp_s_q,\\\n+          neon_fp_round_s, neon_fp_round_s_q, neon_fp_recpe_s,\\\n+          neon_fp_recpe_s_q,\\\n+          neon_fp_recpe_d, neon_fp_recpe_d_q, neon_fp_recps_s,\\\n+          neon_fp_recps_s_q, neon_fp_recps_d, neon_fp_recps_d_q,\\\n+          neon_fp_recpx_s, neon_fp_recpx_s_q, neon_fp_recpx_d,\\\n+          neon_fp_recpx_d_q, neon_fp_rsqrte_s, neon_fp_rsqrte_s_q,\\\n+          neon_fp_rsqrte_d, neon_fp_rsqrte_d_q, neon_fp_rsqrts_s,\\\n+          neon_fp_rsqrts_s_q, neon_fp_rsqrts_d, neon_fp_rsqrts_d_q,\\\n+          neon_fp_mul_s, neon_fp_mul_s_q, neon_fp_mul_s_scalar,\\\n+          neon_fp_mul_s_scalar_q, neon_fp_mul_d, neon_fp_mul_d_q,\\\n+          neon_fp_mul_d_scalar_q, neon_fp_mla_s, neon_fp_mla_s_q,\\\n+          neon_fp_mla_s_scalar, neon_fp_mla_s_scalar_q, neon_fp_mla_d,\\\n+          neon_fp_mla_d_q, neon_fp_mla_d_scalar_q, neon_fp_sqrt_s,\\\n+          neon_fp_sqrt_s_q, neon_fp_sqrt_d, neon_fp_sqrt_d_q,\\\n+          neon_fp_div_s, neon_fp_div_s_q, neon_fp_div_d, neon_fp_div_d_q\")\n+        (const_string \"yes\")\n+        (const_string \"no\")))\n+\n ; condition codes: this one is used by final_prescan_insn to speed up\n ; conditionalizing instructions.  It saves having to scan the rtl to see if\n ; it uses or alters the condition codes.\n@@ -277,32 +374,7 @@\n \t (ior (eq_attr \"is_thumb1\" \"yes\")\n \t      (eq_attr \"type\" \"call\"))\n \t (const_string \"clob\")\n-\t (if_then_else (eq_attr \"type\" \n-\t \"!neon_int_1, neon_int_2, neon_int_3, neon_int_4, neon_int_5,\\\n-\t  neon_vqneg_vqabs, neon_vmov, neon_vaba, neon_vsma, neon_vaba_qqq,\\\n-\t  neon_mul_ddd_8_16_qdd_16_8_long_32_16_long,\\\n-\t  neon_mul_qqq_8_16_32_ddd_32,\\\n-\t  neon_mul_qdd_64_32_long_qqd_16_ddd_32_scalar_64_32_long_scalar,\\\n-\t  neon_mla_ddd_8_16_qdd_16_8_long_32_16_long,\\\n-\t  neon_mla_qqq_8_16,\\\n-\t  neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long,\\\n-\t  neon_mla_qqq_32_qqd_32_scalar,\\\n-\t  neon_mul_ddd_16_scalar_32_16_long_scalar, neon_mul_qqd_32_scalar,\\\n-\t  neon_mla_ddd_16_scalar_qdd_32_16_long_scalar, neon_shift_1,\\\n-\t  neon_shift_2, neon_shift_3, neon_vshl_ddd,\\\n-\t  neon_vqshl_vrshl_vqrshl_qqq, neon_vsra_vrsra,\\\n-\t  neon_fp_vadd_ddd_vabs_dd, neon_fp_vadd_qqq_vabs_qq, neon_fp_vsum,\\\n-\t  neon_fp_vmul_ddd, neon_fp_vmul_qqd, neon_fp_vmla_ddd,\\\n-\t  neon_fp_vmla_qqq, neon_fp_vmla_ddd_scalar, neon_fp_vmla_qqq_scalar,\\\n-\t  neon_fp_vrecps_vrsqrts_ddd, neon_fp_vrecps_vrsqrts_qqq,\\\n-\t  neon_bp_simple, neon_bp_2cycle, neon_bp_3cycle, neon_ldr, neon_str,\\\n-\t  neon_vld1_1_2_regs, neon_vld1_3_4_regs,\\\n-\t  neon_vld2_2_regs_vld1_vld2_all_lanes, neon_vld2_4_regs,\\\n-\t  neon_vld3_vld4, neon_vst1_1_2_regs_vst2_2_regs, neon_vst1_3_4_regs,\\\n-\t  neon_vst2_4_regs_vst3_vst4, neon_vst3_vst4, neon_vld1_vld2_lane,\\\n-\t  neon_vld3_vld4_lane, neon_vst1_vst2_lane, neon_vst3_vst4_lane,\\\n-\t  neon_vld3_vld4_all_lanes, neon_mcr, neon_mcr_2_mcrr, neon_mrc,\\\n-\t  neon_mrrc, neon_ldm_2, neon_stm_2\")\n+\t (if_then_else (eq_attr \"is_neon_type\" \"no\")\n \t (const_string \"nocond\")\n \t (const_string \"unconditional\"))))\n \n@@ -2162,7 +2234,8 @@\n                                            gen_highpart_mode (SImode, DImode, operands[2]));\n \n   }\"\n-  [(set_attr \"type\" \"neon_int_1,neon_int_1,multiple,multiple,multiple,multiple,neon_int_1,neon_int_1\")\n+  [(set_attr \"type\" \"neon_logic,neon_logic,multiple,multiple,\\\n+                     multiple,multiple,neon_logic,neon_logic\")\n    (set_attr \"arch\" \"neon_for_64bits,neon_for_64bits,*,*,*,*,\n                      avoid_neon_for_64bits,avoid_neon_for_64bits\")\n    (set_attr \"length\" \"*,*,8,8,8,8,*,*\")\n@@ -3012,7 +3085,8 @@\n                                            gen_highpart_mode (SImode, DImode, operands[2]));\n \n   }\"\n-  [(set_attr \"type\" \"neon_int_1,neon_int_1,multiple,multiple,multiple,multiple,neon_int_1,neon_int_1\")\n+  [(set_attr \"type\" \"neon_logic,neon_logic,multiple,multiple,multiple,\\\n+                     multiple,neon_logic,neon_logic\")\n    (set_attr \"length\" \"*,*,8,8,8,8,*,*\")\n    (set_attr \"arch\" \"neon_for_64bits,neon_for_64bits,*,*,*,*,avoid_neon_for_64bits,avoid_neon_for_64bits\")]\n )\n@@ -3194,7 +3268,7 @@\n \n   }\"\n   [(set_attr \"length\" \"*,8,8,8,8,*\")\n-   (set_attr \"type\" \"neon_int_1,multiple,multiple,multiple,multiple,neon_int_1\")\n+   (set_attr \"type\" \"neon_logic,multiple,multiple,multiple,multiple,neon_logic\")\n    (set_attr \"arch\" \"neon_for_64bits,*,*,*,*,avoid_neon_for_64bits\")]\n )\n \n@@ -4922,7 +4996,7 @@\n   }\"\n   [(set_attr \"length\" \"*,8,8,*\")\n    (set_attr \"predicable\" \"no,yes,yes,no\")\n-   (set_attr \"type\" \"neon_int_1,multiple,multiple,neon_int_1\")\n+   (set_attr \"type\" \"neon_move,multiple,multiple,neon_move\")\n    (set_attr \"arch\" \"neon_for_64bits,*,*,avoid_neon_for_64bits\")]\n )\n "}, {"sha": "38777b89a8773901bf7b63b5e2eba2d624f092cb", "filename": "gcc/config/arm/iterators.md", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7379e5eb940dc3f0c4580ced0eaefe2610fdf74/gcc%2Fconfig%2Farm%2Fiterators.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7379e5eb940dc3f0c4580ced0eaefe2610fdf74/gcc%2Fconfig%2Farm%2Fiterators.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fiterators.md?ref=f7379e5eb940dc3f0c4580ced0eaefe2610fdf74", "patch": "@@ -355,6 +355,12 @@\n                              (DI   \"64\") (V2DI  \"64\")\n                  (V2SF \"32\") (V4SF  \"32\")])\n \n+(define_mode_attr V_elem_ch [(V8QI \"b\")  (V16QI \"b\")\n+                             (V4HI \"h\") (V8HI  \"h\")\n+                             (V2SI \"s\") (V4SI  \"s\")\n+                             (DI   \"d\") (V2DI  \"d\")\n+                             (V2SF \"s\") (V4SF  \"s\")])\n+\n ;; Element sizes for duplicating ARM registers to all elements of a vector.\n (define_mode_attr VD_dup [(V8QI \"8\") (V4HI \"16\") (V2SI \"32\") (V2SF \"32\")])\n \n@@ -452,6 +458,14 @@\n (define_mode_attr vfp_type [(SF \"s\") (DF \"d\")])\n (define_mode_attr vfp_double_cond [(SF \"\") (DF \"&& TARGET_VFP_DOUBLE\")])\n \n+;; Mode attribute used to build the \"type\" attribute.\n+(define_mode_attr q [(V8QI \"\") (V16QI \"_q\")\n+                     (V4HI \"\") (V8HI \"_q\")\n+                     (V2SI \"\") (V4SI \"_q\")\n+                     (V2SF \"\") (V4SF \"_q\")\n+                     (DI \"\")   (V2DI \"_q\")\n+                     (DF \"\")   (V2DF \"_q\")])\n+\n ;;----------------------------------------------------------------------------\n ;; Code attributes\n ;;----------------------------------------------------------------------------\n@@ -460,6 +474,10 @@\n (define_code_attr VQH_mnem [(plus \"vadd\") (smin \"vmin\") (smax \"vmax\")\n                 (umin \"vmin\") (umax \"vmax\")])\n \n+;; Type attributes for vqh_ops and vqhs_ops iterators.\n+(define_code_attr VQH_type [(plus \"add\") (smin \"minmax\") (smax \"minmax\")\n+                (umin \"minmax\") (umax \"minmax\")])\n+\n ;; Signs of above, where relevant.\n (define_code_attr VQH_sign [(plus \"i\") (smin \"s\") (smax \"s\") (umin \"u\")\n                 (umax \"u\")])"}, {"sha": "b2ac45e65f91b25176fe50989f9fcee772faa408", "filename": "gcc/config/arm/neon.md", "status": "modified", "additions": 332, "deletions": 585, "changes": 917, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7379e5eb940dc3f0c4580ced0eaefe2610fdf74/gcc%2Fconfig%2Farm%2Fneon.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7379e5eb940dc3f0c4580ced0eaefe2610fdf74/gcc%2Fconfig%2Farm%2Fneon.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fneon.md?ref=f7379e5eb940dc3f0c4580ced0eaefe2610fdf74", "patch": "@@ -60,8 +60,9 @@\n     default: return output_move_double (operands, true, NULL);\n     }\n }\n- [(set_attr \"type\" \"neon_int_1,f_stored,neon_vmov,f_loadd,neon_mrrc,\\\n-                    neon_mcr_2_mcrr,mov_reg,load2,store2\")\n+ [(set_attr \"type\" \"neon_move<q>,neon_store1_1reg,neon_move<q>,\\\n+                    neon_load1_1reg, neon_to_gp<q>,neon_from_gp<q>,mov_reg,\\\n+                    neon_load1_2reg, neon_store1_2reg\")\n   (set_attr \"length\" \"4,4,4,4,4,4,8,8,8\")\n   (set_attr \"arm_pool_range\"     \"*,*,*,1020,*,*,*,1020,*\")\n   (set_attr \"thumb2_pool_range\"     \"*,*,*,1018,*,*,*,1018,*\")\n@@ -104,8 +105,9 @@\n     default: return output_move_quad (operands);\n     }\n }\n-  [(set_attr \"type\" \"neon_int_1,neon_stm_2,neon_vmov,neon_ldm_2,\\\n-                     neon_mrrc,neon_mcr_2_mcrr,mov_reg,load4,store4\")\n+  [(set_attr \"type\" \"neon_move_q,neon_store2_2reg_q,neon_move_q,\\\n+                     neon_load2_2reg_q,neon_to_gp_q,neon_from_gp_q,\\\n+                     mov_reg,neon_load1_4reg,neon_store1_4reg\")\n    (set_attr \"length\" \"4,8,4,8,8,8,16,8,16\")\n    (set_attr \"arm_pool_range\" \"*,*,*,1020,*,*,*,1020,*\")\n    (set_attr \"thumb2_pool_range\" \"*,*,*,1018,*,*,*,1018,*\")\n@@ -149,7 +151,7 @@\n     default: gcc_unreachable ();\n     }\n }\n-  [(set_attr \"type\" \"neon_int_1,neon_stm_2,neon_ldm_2\")\n+  [(set_attr \"type\" \"neon_move_q,neon_store2_2reg_q,neon_load2_2reg_q\")\n    (set (attr \"length\") (symbol_ref \"arm_attr_length_move_neon (insn)\"))])\n \n (define_split\n@@ -257,7 +259,7 @@\n \t\t    UNSPEC_MISALIGNED_ACCESS))]\n   \"TARGET_NEON && !BYTES_BIG_ENDIAN && unaligned_access\"\n   \"vst1.<V_sz_elem>\\t{%P1}, %A0\"\n-  [(set_attr \"type\" \"neon_vst1_1_2_regs_vst2_2_regs\")])\n+  [(set_attr \"type\" \"neon_store1_1reg<q>\")])\n \n (define_insn \"*movmisalign<mode>_neon_load\"\n   [(set (match_operand:VDX 0 \"s_register_operand\"\t\t\t\"=w\")\n@@ -266,15 +268,15 @@\n \t\t    UNSPEC_MISALIGNED_ACCESS))]\n   \"TARGET_NEON && !BYTES_BIG_ENDIAN && unaligned_access\"\n   \"vld1.<V_sz_elem>\\t{%P0}, %A1\"\n-  [(set_attr \"type\" \"neon_vld1_1_2_regs\")])\n+  [(set_attr \"type\" \"neon_load1_1reg<q>\")])\n \n (define_insn \"*movmisalign<mode>_neon_store\"\n   [(set (match_operand:VQX 0 \"neon_permissive_struct_operand\"  \"=Um\")\n \t(unspec:VQX [(match_operand:VQX 1 \"s_register_operand\" \" w\")]\n \t\t    UNSPEC_MISALIGNED_ACCESS))]\n   \"TARGET_NEON && !BYTES_BIG_ENDIAN && unaligned_access\"\n   \"vst1.<V_sz_elem>\\t{%q1}, %A0\"\n-  [(set_attr \"type\" \"neon_vst1_1_2_regs_vst2_2_regs\")])\n+  [(set_attr \"type\" \"neon_store1_1reg<q>\")])\n \n (define_insn \"*movmisalign<mode>_neon_load\"\n   [(set (match_operand:VQX 0 \"s_register_operand\"\t\t\t\"=w\")\n@@ -283,7 +285,7 @@\n \t\t    UNSPEC_MISALIGNED_ACCESS))]\n   \"TARGET_NEON && !BYTES_BIG_ENDIAN && unaligned_access\"\n   \"vld1.<V_sz_elem>\\t{%q0}, %A1\"\n-  [(set_attr \"type\" \"neon_vld1_1_2_regs\")])\n+  [(set_attr \"type\" \"neon_store1_1reg<q>\")])\n \n (define_insn \"vec_set<mode>_internal\"\n   [(set (match_operand:VD 0 \"s_register_operand\" \"=w,w\")\n@@ -304,7 +306,7 @@\n   else\n     return \"vmov.<V_sz_elem>\\t%P0[%c2], %1\";\n }\n-  [(set_attr \"type\" \"neon_vld1_vld2_lane,neon_mcr\")])\n+  [(set_attr \"type\" \"neon_load1_all_lanes<q>,neon_from_gp<q>\")])\n \n (define_insn \"vec_set<mode>_internal\"\n   [(set (match_operand:VQ 0 \"s_register_operand\" \"=w,w\")\n@@ -332,7 +334,7 @@\n   else\n     return \"vmov.<V_sz_elem>\\t%P0[%c2], %1\";\n }\n-  [(set_attr \"type\" \"neon_vld1_vld2_lane,neon_mcr\")]\n+  [(set_attr \"type\" \"neon_load1_all_lanes<q>,neon_from_gp<q>\")]\n )\n \n (define_insn \"vec_setv2di_internal\"\n@@ -354,7 +356,7 @@\n   else\n     return \"vmov\\t%P0, %Q1, %R1\";\n }\n-  [(set_attr \"type\" \"neon_vld1_1_2_regs,neon_mcr_2_mcrr\")]\n+  [(set_attr \"type\" \"neon_load1_all_lanes_q,neon_from_gp_q\")]\n )\n \n (define_expand \"vec_set<mode>\"\n@@ -388,7 +390,7 @@\n   else\n     return \"vmov.<V_uf_sclr>\\t%0, %P1[%c2]\";\n }\n-  [(set_attr \"type\" \"neon_vst1_vst2_lane,neon_bp_simple\")]\n+  [(set_attr \"type\" \"neon_store1_one_lane<q>,neon_to_gp<q>\")]\n )\n \n (define_insn \"vec_extract<mode>\"\n@@ -414,7 +416,7 @@\n   else\n     return \"vmov.<V_uf_sclr>\\t%0, %P1[%c2]\";\n }\n-  [(set_attr \"type\" \"neon_vst1_vst2_lane,neon_bp_simple\")]\n+  [(set_attr \"type\" \"neon_store1_one_lane<q>,neon_to_gp<q>\")]\n )\n \n (define_insn \"vec_extractv2di\"\n@@ -433,7 +435,7 @@\n   else\n     return \"vmov\\t%Q0, %R0, %P1  @ v2di\";\n }\n-  [(set_attr \"type\" \"neon_vst1_vst2_lane,neon_int_1\")]\n+  [(set_attr \"type\" \"neon_store1_one_lane_q,neon_to_gp_q\")]\n )\n \n (define_expand \"vec_init<mode>\"\n@@ -458,10 +460,8 @@\n   \"vadd.<V_if_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                  (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                    (const_string \"neon_int_1\")))]\n+                    (const_string \"neon_fp_addsub_s<q>\")\n+                    (const_string \"neon_add<q>\")))]\n )\n \n (define_insn \"adddi3_neon\"\n@@ -483,7 +483,8 @@\n     default: gcc_unreachable ();\n     }\n }\n-  [(set_attr \"type\" \"neon_int_1,*,*,neon_int_1,*,*,*\")\n+  [(set_attr \"type\" \"neon_add,multiple,multiple,neon_add,\\\n+\t\t     multiple,multiple,multiple\")\n    (set_attr \"conds\" \"*,clob,clob,*,clob,clob,clob\")\n    (set_attr \"length\" \"*,8,8,*,8,8,8\")\n    (set_attr \"arch\" \"neon_for_64bits,*,*,avoid_neon_for_64bits,*,*,*\")]\n@@ -497,10 +498,8 @@\n   \"vsub.<V_if_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                  (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                    (const_string \"neon_int_2\")))]\n+                    (const_string \"neon_fp_addsub_s<q>\")\n+                    (const_string \"neon_sub<q>\")))]\n )\n \n (define_insn \"subdi3_neon\"\n@@ -520,75 +519,48 @@\n     default: gcc_unreachable ();\n     }\n }\n-  [(set_attr \"type\" \"neon_int_2,*,*,*,neon_int_2\")\n+  [(set_attr \"type\" \"neon_sub,multiple,multiple,multiple,neon_sub\")\n    (set_attr \"conds\" \"*,clob,clob,clob,*\")\n    (set_attr \"length\" \"*,8,8,8,*\")\n    (set_attr \"arch\" \"neon_for_64bits,*,*,*,avoid_neon_for_64bits\")]\n )\n \n (define_insn \"*mul<mode>3_neon\"\n-  [(set (match_operand:VDQ 0 \"s_register_operand\" \"=w\")\n-        (mult:VDQ (match_operand:VDQ 1 \"s_register_operand\" \"w\")\n-                  (match_operand:VDQ 2 \"s_register_operand\" \"w\")))]\n+  [(set (match_operand:VDQW 0 \"s_register_operand\" \"=w\")\n+        (mult:VDQW (match_operand:VDQW 1 \"s_register_operand\" \"w\")\n+                   (match_operand:VDQW 2 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON && (!<Is_float_mode> || flag_unsafe_math_optimizations)\"\n   \"vmul.<V_if_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                  (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (if_then_else\n-                                    (match_test \"<Scalar_mul_8_16>\")\n-                                    (const_string \"neon_mul_ddd_8_16_qdd_16_8_long_32_16_long\")\n-                                    (const_string \"neon_mul_qqq_8_16_32_ddd_32\"))\n-                                  (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                                    (const_string \"neon_mul_qqq_8_16_32_ddd_32\")\n-                                    (const_string \"neon_mul_qqq_8_16_32_ddd_32\")))))]\n+\t\t    (const_string \"neon_fp_mul_s<q>\")\n+                    (const_string \"neon_mul_<V_elem_ch><q>\")))]\n )\n \n (define_insn \"mul<mode>3add<mode>_neon\"\n-  [(set (match_operand:VDQ 0 \"s_register_operand\" \"=w\")\n-        (plus:VDQ (mult:VDQ (match_operand:VDQ 2 \"s_register_operand\" \"w\")\n-                            (match_operand:VDQ 3 \"s_register_operand\" \"w\"))\n-\t\t  (match_operand:VDQ 1 \"s_register_operand\" \"0\")))]\n+  [(set (match_operand:VDQW 0 \"s_register_operand\" \"=w\")\n+        (plus:VDQW (mult:VDQW (match_operand:VDQW 2 \"s_register_operand\" \"w\")\n+                            (match_operand:VDQW 3 \"s_register_operand\" \"w\"))\n+\t\t  (match_operand:VDQW 1 \"s_register_operand\" \"0\")))]\n   \"TARGET_NEON && (!<Is_float_mode> || flag_unsafe_math_optimizations)\"\n   \"vmla.<V_if_elem>\\t%<V_reg>0, %<V_reg>2, %<V_reg>3\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (const_string \"neon_fp_vmla_ddd\")\n-                                  (const_string \"neon_fp_vmla_qqq\"))\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (if_then_else\n-                                    (match_test \"<Scalar_mul_8_16>\")\n-                                    (const_string \"neon_mla_ddd_8_16_qdd_16_8_long_32_16_long\")\n-                                    (const_string \"neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long\"))\n-                                  (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                                    (const_string \"neon_mla_qqq_8_16\")\n-                                    (const_string \"neon_mla_qqq_32_qqd_32_scalar\")))))]\n+\t\t    (const_string \"neon_fp_mla_s<q>\")\n+\t\t    (const_string \"neon_mla_<V_elem_ch><q>\")))]\n )\n \n (define_insn \"mul<mode>3neg<mode>add<mode>_neon\"\n-  [(set (match_operand:VDQ 0 \"s_register_operand\" \"=w\")\n-        (minus:VDQ (match_operand:VDQ 1 \"s_register_operand\" \"0\")\n-                   (mult:VDQ (match_operand:VDQ 2 \"s_register_operand\" \"w\")\n-                             (match_operand:VDQ 3 \"s_register_operand\" \"w\"))))]\n+  [(set (match_operand:VDQW 0 \"s_register_operand\" \"=w\")\n+        (minus:VDQW (match_operand:VDQW 1 \"s_register_operand\" \"0\")\n+                    (mult:VDQW (match_operand:VDQW 2 \"s_register_operand\" \"w\")\n+                               (match_operand:VDQW 3 \"s_register_operand\" \"w\"))))]\n   \"TARGET_NEON && (!<Is_float_mode> || flag_unsafe_math_optimizations)\"\n   \"vmls.<V_if_elem>\\t%<V_reg>0, %<V_reg>2, %<V_reg>3\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (const_string \"neon_fp_vmla_ddd\")\n-                                  (const_string \"neon_fp_vmla_qqq\"))\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (if_then_else\n-                                    (match_test \"<Scalar_mul_8_16>\")\n-                                    (const_string \"neon_mla_ddd_8_16_qdd_16_8_long_32_16_long\")\n-                                    (const_string \"neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long\"))\n-                                  (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                                    (const_string \"neon_mla_qqq_8_16\")\n-                                    (const_string \"neon_mla_qqq_32_qqd_32_scalar\")))))]\n+\t\t    (const_string \"neon_fp_mla_s<q>\")\n+\t\t    (const_string \"neon_mla_<V_elem_ch><q>\")))]\n )\n \n ;; Fused multiply-accumulate\n@@ -603,10 +575,7 @@\n \t\t (match_operand:VCVTF 3 \"register_operand\" \"0\")))]\n   \"TARGET_NEON && TARGET_FMA && flag_unsafe_math_optimizations\"\n   \"vfma%?.<V_if_elem>\\\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set (attr \"type\")\n-\t(if_then_else (match_test \"<Is_d_reg>\")\n-\t\t      (const_string \"neon_fp_vmla_ddd\")\n-\t\t      (const_string \"neon_fp_vmla_qqq\")))]\n+  [(set_attr \"type\" \"neon_fp_mla_s<q>\")]\n )\n \n (define_insn \"fma<VCVTF:mode>4_intrinsic\"\n@@ -616,10 +585,7 @@\n \t\t (match_operand:VCVTF 3 \"register_operand\" \"0\")))]\n   \"TARGET_NEON && TARGET_FMA\"\n   \"vfma%?.<V_if_elem>\\\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set (attr \"type\")\n-\t(if_then_else (match_test \"<Is_d_reg>\")\n-\t\t      (const_string \"neon_fp_vmla_ddd\")\n-\t\t      (const_string \"neon_fp_vmla_qqq\")))]\n+  [(set_attr \"type\" \"neon_fp_mla_s<q>\")]\n )\n \n (define_insn \"*fmsub<VCVTF:mode>4\"\n@@ -629,10 +595,7 @@\n \t\t   (match_operand:VCVTF 3 \"register_operand\" \"0\")))]\n   \"TARGET_NEON && TARGET_FMA && flag_unsafe_math_optimizations\"\n   \"vfms%?.<V_if_elem>\\\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set (attr \"type\")\n-\t(if_then_else (match_test \"<Is_d_reg>\")\n-\t\t      (const_string \"neon_fp_vmla_ddd\")\n-\t\t      (const_string \"neon_fp_vmla_qqq\")))]\n+  [(set_attr \"type\" \"neon_fp_mla_s<q>\")]\n )\n \n (define_insn \"fmsub<VCVTF:mode>4_intrinsic\"\n@@ -642,10 +605,7 @@\n \t\t   (match_operand:VCVTF 3 \"register_operand\" \"0\")))]\n   \"TARGET_NEON && TARGET_FMA\"\n   \"vfms%?.<V_if_elem>\\\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set (attr \"type\")\n-\t(if_then_else (match_test \"<Is_d_reg>\")\n-\t\t      (const_string \"neon_fp_vmla_ddd\")\n-\t\t      (const_string \"neon_fp_vmla_qqq\")))]\n+  [(set_attr \"type\" \"neon_fp_mla_s<q>\")]\n )\n \n (define_insn \"neon_vrint<NEON_VRINT:nvrint_variant><VCVTF:mode>\"\n@@ -655,10 +615,7 @@\n \t\tNEON_VRINT))]\n   \"TARGET_NEON && TARGET_FPU_ARMV8\"\n   \"vrint<nvrint_variant>%?.f32\\\\t%<V_reg>0, %<V_reg>1\"\n-  [(set (attr \"type\")\n-\t(if_then_else (match_test \"<Is_d_reg>\")\n-\t\t(const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-\t\t(const_string \"neon_fp_vadd_qqq_vabs_qq\")))]\n+  [(set_attr \"type\" \"neon_fp_round_<V_elem_ch><q>\")]\n )\n \n (define_insn \"ior<mode>3\"\n@@ -675,7 +632,7 @@\n     default: gcc_unreachable ();\n     }\n }\n-  [(set_attr \"type\" \"neon_int_1\")]\n+  [(set_attr \"type\" \"neon_logic<q>\")]\n )\n \n ;; The concrete forms of the Neon immediate-logic instructions are vbic and\n@@ -697,7 +654,7 @@\n     default: gcc_unreachable ();\n     }\n }\n-  [(set_attr \"type\" \"neon_int_1\")]\n+  [(set_attr \"type\" \"neon_logic<q>\")]\n )\n \n (define_insn \"orn<mode>3_neon\"\n@@ -706,7 +663,7 @@\n \t\t (match_operand:VDQ 1 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON\"\n   \"vorn\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set_attr \"type\" \"neon_int_1\")]\n+  [(set_attr \"type\" \"neon_logic<q>\")]\n )\n \n ;; TODO: investigate whether we should disable \n@@ -744,7 +701,7 @@\n         DONE;\n       }\n   }\"\n-  [(set_attr \"type\" \"neon_int_1,*,*,*\")\n+  [(set_attr \"type\" \"neon_logic,multiple,multiple,multiple\")\n    (set_attr \"length\" \"*,16,8,8\")\n    (set_attr \"arch\" \"any,a,t2,t2\")]\n )\n@@ -755,7 +712,7 @@\n \t\t (match_operand:VDQ 1 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON\"\n   \"vbic\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set_attr \"type\" \"neon_int_1\")]\n+  [(set_attr \"type\" \"neon_logic<q>\")]\n )\n \n ;; Compare to *anddi_notdi_di.\n@@ -768,7 +725,7 @@\n    vbic\\t%P0, %P1, %P2\n    #\n    #\"\n-  [(set_attr \"type\" \"neon_int_1,*,*\")\n+  [(set_attr \"type\" \"neon_logic,multiple,multiple\")\n    (set_attr \"length\" \"*,8,8\")]\n )\n \n@@ -778,15 +735,15 @@\n \t\t (match_operand:VDQ 2 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON\"\n   \"veor\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set_attr \"type\" \"neon_int_1\")]\n+  [(set_attr \"type\" \"neon_logic<q>\")]\n )\n \n (define_insn \"one_cmpl<mode>2\"\n   [(set (match_operand:VDQ 0 \"s_register_operand\" \"=w\")\n         (not:VDQ (match_operand:VDQ 1 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON\"\n   \"vmvn\\t%<V_reg>0, %<V_reg>1\"\n-  [(set_attr \"type\" \"neon_int_1\")]\n+  [(set_attr \"type\" \"neon_move<q>\")]\n )\n \n (define_insn \"abs<mode>2\"\n@@ -796,10 +753,8 @@\n   \"vabs.<V_s_elem>\\t%<V_reg>0, %<V_reg>1\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                  (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                    (const_string \"neon_int_3\")))]\n+                    (const_string \"neon_fp_abs_s<q>\")\n+                    (const_string \"neon_abs<q>\")))]\n )\n \n (define_insn \"neg<mode>2\"\n@@ -809,10 +764,8 @@\n   \"vneg.<V_s_elem>\\t%<V_reg>0, %<V_reg>1\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                  (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                    (const_string \"neon_int_3\")))]\n+                    (const_string \"neon_fp_neg_s<q>\")\n+                    (const_string \"neon_neg<q>\")))]\n )\n \n (define_insn \"negdi2_neon\"\n@@ -822,7 +775,8 @@\n    (clobber (reg:CC CC_REGNUM))]\n   \"TARGET_NEON\"\n   \"#\"\n-  [(set_attr \"length\" \"8\")]\n+  [(set_attr \"length\" \"8\")\n+   (set_attr \"type\" \"multiple\")]\n )\n \n ; Split negdi2_neon for vfp registers\n@@ -860,7 +814,7 @@\n \t\t    (match_operand:VDQIW 2 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON\"\n   \"vmin.<V_u_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set_attr \"type\" \"neon_int_5\")]\n+  [(set_attr \"type\" \"neon_minmax<q>\")]\n )\n \n (define_insn \"*umax<mode>3_neon\"\n@@ -869,7 +823,7 @@\n \t\t    (match_operand:VDQIW 2 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON\"\n   \"vmax.<V_u_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set_attr \"type\" \"neon_int_5\")]\n+  [(set_attr \"type\" \"neon_minmax<q>\")]\n )\n \n (define_insn \"*smin<mode>3_neon\"\n@@ -880,8 +834,8 @@\n   \"vmin.<V_s_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                    (const_string \"neon_int_5\")))]\n+                    (const_string \"neon_fp_minmax_s<q>\")\n+                    (const_string \"neon_minmax<q>\")))]\n )\n \n (define_insn \"*smax<mode>3_neon\"\n@@ -892,8 +846,8 @@\n   \"vmax.<V_s_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                    (const_string \"neon_int_5\")))]\n+                    (const_string \"neon_fp_minmax_s<q>\")\n+                    (const_string \"neon_minmax<q>\")))]\n )\n \n ; TODO: V2DI shifts are current disabled because there are bugs in the\n@@ -916,10 +870,7 @@\n         default: gcc_unreachable ();\n       }\n   }\n-  [(set (attr \"type\")\n-      (if_then_else (match_test \"<Is_d_reg>\")\n-                    (const_string \"neon_vshl_ddd\")\n-                    (const_string \"neon_shift_3\")))]\n+  [(set_attr \"type\" \"neon_shift_reg<q>, neon_shift_imm<q>\")]\n )\n \n (define_insn \"vashr<mode>3_imm\"\n@@ -932,10 +883,7 @@\n \t\t\t\t\t<MODE>mode, VALID_NEON_QREG_MODE (<MODE>mode),\n \t\t\t\t\tfalse);\n   }\n-  [(set (attr \"type\")\n-      (if_then_else (match_test \"<Is_d_reg>\")\n-                    (const_string \"neon_vshl_ddd\")\n-                    (const_string \"neon_shift_3\")))]\n+  [(set_attr \"type\" \"neon_shift_imm<q>\")]\n )\n \n (define_insn \"vlshr<mode>3_imm\"\n@@ -948,10 +896,7 @@\n \t\t\t\t\t<MODE>mode, VALID_NEON_QREG_MODE (<MODE>mode),\n \t\t\t\t\tfalse);\n   }              \n-  [(set (attr \"type\")\n-\t(if_then_else (match_test \"<Is_d_reg>\")\n-\t\t      (const_string \"neon_vshl_ddd\")\n-\t\t      (const_string \"neon_shift_3\")))]\n+  [(set_attr \"type\" \"neon_shift_imm<q>\")]\n )\n \n ; Used for implementing logical shift-right, which is a left-shift by a negative\n@@ -966,10 +911,7 @@\n \t\t     UNSPEC_ASHIFT_SIGNED))]\n   \"TARGET_NEON\"\n   \"vshl.<V_s_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set (attr \"type\")\n-      (if_then_else (match_test \"<Is_d_reg>\")\n-                    (const_string \"neon_vshl_ddd\")\n-                    (const_string \"neon_shift_3\")))]\n+  [(set_attr \"type\" \"neon_shift_reg<q>\")]\n )\n \n ; Used for implementing logical shift-right, which is a left-shift by a negative\n@@ -982,10 +924,7 @@\n \t\t     UNSPEC_ASHIFT_UNSIGNED))]\n   \"TARGET_NEON\"\n   \"vshl.<V_u_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set (attr \"type\")\n-      (if_then_else (match_test \"<Is_d_reg>\")\n-                    (const_string \"neon_vshl_ddd\")\n-                    (const_string \"neon_shift_3\")))]\n+  [(set_attr \"type\" \"neon_shift_reg<q>\")]\n )\n \n (define_expand \"vashr<mode>3\"\n@@ -1037,7 +976,7 @@\n   \"@\n    vld1.32\\t{%P0[0]}, %A1\n    vmov.32\\t%P0[0], %1\"\n-  [(set_attr \"type\" \"neon_vld1_vld2_lane,neon_mcr\")]\n+  [(set_attr \"type\" \"neon_load1_1reg,neon_from_gp\")]\n )\n \n (define_insn \"ashldi3_neon_noclobber\"\n@@ -1050,7 +989,7 @@\n   \"@\n    vshl.u64\\t%P0, %P1, %2\n    vshl.u64\\t%P0, %P1, %P2\"\n-  [(set_attr \"type\" \"neon_vshl_ddd,neon_vshl_ddd\")]\n+  [(set_attr \"type\" \"neon_shift_imm, neon_shift_reg\")]\n )\n \n (define_insn_and_split \"ashldi3_neon\"\n@@ -1101,7 +1040,8 @@\n     DONE;\n   }\"\n   [(set_attr \"arch\" \"neon_for_64bits,neon_for_64bits,*,*,avoid_neon_for_64bits,avoid_neon_for_64bits\")\n-   (set_attr \"opt\" \"*,*,speed,speed,*,*\")]\n+   (set_attr \"opt\" \"*,*,speed,speed,*,*\")\n+   (set_attr \"type\" \"multiple\")]\n )\n \n ; The shift amount needs to be negated for right-shifts\n@@ -1112,7 +1052,7 @@\n \t\t   UNSPEC_ASHIFT_SIGNED))]\n   \"TARGET_NEON && reload_completed\"\n   \"vshl.s64\\t%P0, %P1, %P2\"\n-  [(set_attr \"type\" \"neon_vshl_ddd\")]\n+  [(set_attr \"type\" \"neon_shift_reg\")]\n )\n \n ; The shift amount needs to be negated for right-shifts\n@@ -1123,7 +1063,7 @@\n \t\t   UNSPEC_ASHIFT_UNSIGNED))]\n   \"TARGET_NEON && reload_completed\"\n   \"vshl.u64\\t%P0, %P1, %P2\"\n-  [(set_attr \"type\" \"neon_vshl_ddd\")]\n+  [(set_attr \"type\" \"neon_shift_reg\")]\n )\n \n (define_insn \"ashrdi3_neon_imm_noclobber\"\n@@ -1133,7 +1073,7 @@\n   \"TARGET_NEON && reload_completed\n    && INTVAL (operands[2]) > 0 && INTVAL (operands[2]) <= 64\"\n   \"vshr.s64\\t%P0, %P1, %2\"\n-  [(set_attr \"type\" \"neon_vshl_ddd\")]\n+  [(set_attr \"type\" \"neon_shift_imm\")]\n )\n \n (define_insn \"lshrdi3_neon_imm_noclobber\"\n@@ -1143,7 +1083,7 @@\n   \"TARGET_NEON && reload_completed\n    && INTVAL (operands[2]) > 0 && INTVAL (operands[2]) <= 64\"\n   \"vshr.u64\\t%P0, %P1, %2\"\n-  [(set_attr \"type\" \"neon_vshl_ddd\")]\n+  [(set_attr \"type\" \"neon_shift_imm\")]\n )\n \n ;; ashrdi3_neon\n@@ -1202,7 +1142,8 @@\n     DONE;\n   }\"\n   [(set_attr \"arch\" \"neon_for_64bits,neon_for_64bits,*,*,avoid_neon_for_64bits,avoid_neon_for_64bits\")\n-   (set_attr \"opt\" \"*,*,speed,speed,*,*\")]\n+   (set_attr \"opt\" \"*,*,speed,speed,*,*\")\n+   (set_attr \"type\" \"multiple\")]\n )\n \n ;; Widening operations\n@@ -1214,7 +1155,7 @@\n \t\t        (match_operand:<V_widen> 2 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON\"\n   \"vaddw.<V_s_elem>\\t%q0, %q2, %P1\"\n-  [(set_attr \"type\" \"neon_int_3\")]\n+  [(set_attr \"type\" \"neon_add_widen\")]\n )\n \n (define_insn \"widen_usum<mode>3\"\n@@ -1224,7 +1165,7 @@\n \t\t        (match_operand:<V_widen> 2 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON\"\n   \"vaddw.<V_u_elem>\\t%q0, %q2, %P1\"\n-  [(set_attr \"type\" \"neon_int_3\")]\n+  [(set_attr \"type\" \"neon_add_widen\")]\n )\n \n ;; VEXT can be used to synthesize coarse whole-vector shifts with 8-bit\n@@ -1308,9 +1249,7 @@\n   \"TARGET_NEON\"\n   \"<VQH_mnem>.<VQH_sign>32\\t%P0, %e1, %f1\"\n   [(set_attr \"vqh_mnem\" \"<VQH_mnem>\")\n-   (set (attr \"type\")\n-      (if_then_else (eq_attr \"vqh_mnem\" \"vadd\")\n-                    (const_string \"neon_int_1\") (const_string \"neon_int_5\")))]\n+   (set_attr \"type\" \"neon_reduc_<VQH_type>_q\")]\n )\n \n (define_insn \"quad_halves_<code>v4sf\"\n@@ -1323,9 +1262,7 @@\n   \"TARGET_NEON && flag_unsafe_math_optimizations\"\n   \"<VQH_mnem>.f32\\t%P0, %e1, %f1\"\n   [(set_attr \"vqh_mnem\" \"<VQH_mnem>\")\n-   (set (attr \"type\")\n-      (if_then_else (eq_attr \"vqh_mnem\" \"vadd\")\n-                    (const_string \"neon_int_1\") (const_string \"neon_int_5\")))]\n+   (set_attr \"type\" \"neon_fp_reduc_<VQH_type>_s_q\")]\n )\n \n (define_insn \"quad_halves_<code>v8hi\"\n@@ -1340,9 +1277,7 @@\n   \"TARGET_NEON\"\n   \"<VQH_mnem>.<VQH_sign>16\\t%P0, %e1, %f1\"\n   [(set_attr \"vqh_mnem\" \"<VQH_mnem>\")\n-   (set (attr \"type\")\n-      (if_then_else (eq_attr \"vqh_mnem\" \"vadd\")\n-                    (const_string \"neon_int_1\") (const_string \"neon_int_5\")))]\n+   (set_attr \"type\" \"neon_reduc_<VQH_type>_q\")]\n )\n \n (define_insn \"quad_halves_<code>v16qi\"\n@@ -1361,9 +1296,7 @@\n   \"TARGET_NEON\"\n   \"<VQH_mnem>.<VQH_sign>8\\t%P0, %e1, %f1\"\n   [(set_attr \"vqh_mnem\" \"<VQH_mnem>\")\n-   (set (attr \"type\")\n-      (if_then_else (eq_attr \"vqh_mnem\" \"vadd\")\n-                    (const_string \"neon_int_1\") (const_string \"neon_int_5\")))]\n+   (set_attr \"type\" \"neon_reduc_<VQH_type>_q\")]\n )\n \n (define_expand \"move_hi_quad_<mode>\"\n@@ -1422,7 +1355,7 @@\n \t\t     UNSPEC_VPADD))]\n   \"TARGET_NEON && !BYTES_BIG_ENDIAN\"\n   \"vadd.i64\\t%e0, %e1, %f1\"\n-  [(set_attr \"type\" \"neon_int_1\")]\n+  [(set_attr \"type\" \"neon_add_q\")]\n )\n \n ;; NEON does not distinguish between signed and unsigned addition except on\n@@ -1548,10 +1481,8 @@\n   ;; Assume this schedules like vadd.\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                  (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                    (const_string \"neon_int_1\")))]\n+                    (const_string \"neon_fp_reduc_add_s<q>\")\n+                    (const_string \"neon_reduc_add<q>\")))]\n )\n \n (define_insn \"neon_vpsmin<mode>\"\n@@ -1561,11 +1492,10 @@\n                    UNSPEC_VPSMIN))]\n   \"TARGET_NEON\"\n   \"vpmin.<V_s_elem>\\t%P0, %P1, %P2\"\n-  ;; Assume this schedules like vmin.\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                    (const_string \"neon_int_5\")))]\n+                    (const_string \"neon_fp_reduc_minmax_s<q>\")\n+                    (const_string \"neon_reduc_minmax<q>\")))]\n )\n \n (define_insn \"neon_vpsmax<mode>\"\n@@ -1575,11 +1505,10 @@\n                    UNSPEC_VPSMAX))]\n   \"TARGET_NEON\"\n   \"vpmax.<V_s_elem>\\t%P0, %P1, %P2\"\n-  ;; Assume this schedules like vmax.\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                    (const_string \"neon_int_5\")))]\n+                    (const_string \"neon_fp_reduc_minmax_s<q>\")\n+                    (const_string \"neon_reduc_minmax<q>\")))]\n )\n \n (define_insn \"neon_vpumin<mode>\"\n@@ -1589,8 +1518,7 @@\n                    UNSPEC_VPUMIN))]\n   \"TARGET_NEON\"\n   \"vpmin.<V_u_elem>\\t%P0, %P1, %P2\"\n-  ;; Assume this schedules like umin.\n-  [(set_attr \"type\" \"neon_int_5\")]\n+  [(set_attr \"type\" \"neon_reduc_minmax<q>\")]\n )\n \n (define_insn \"neon_vpumax<mode>\"\n@@ -1600,8 +1528,7 @@\n                    UNSPEC_VPUMAX))]\n   \"TARGET_NEON\"\n   \"vpmax.<V_u_elem>\\t%P0, %P1, %P2\"\n-  ;; Assume this schedules like umax.\n-  [(set_attr \"type\" \"neon_int_5\")]\n+  [(set_attr \"type\" \"neon_reduc_minmax<q>\")]\n )\n \n ;; Saturating arithmetic\n@@ -1618,7 +1545,7 @@\n                    (match_operand:VD 2 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON\"\n   \"vqadd.<V_s_elem>\\t%P0, %P1, %P2\"\n-  [(set_attr \"type\" \"neon_int_4\")]\n+  [(set_attr \"type\" \"neon_qadd<q>\")]\n )\n \n (define_insn \"*us_add<mode>_neon\"\n@@ -1627,7 +1554,7 @@\n                    (match_operand:VD 2 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON\"\n   \"vqadd.<V_u_elem>\\t%P0, %P1, %P2\"\n-  [(set_attr \"type\" \"neon_int_4\")]\n+  [(set_attr \"type\" \"neon_qadd<q>\")]\n )\n \n (define_insn \"*ss_sub<mode>_neon\"\n@@ -1636,7 +1563,7 @@\n                     (match_operand:VD 2 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON\"\n   \"vqsub.<V_s_elem>\\t%P0, %P1, %P2\"\n-  [(set_attr \"type\" \"neon_int_5\")]\n+  [(set_attr \"type\" \"neon_qsub<q>\")]\n )\n \n (define_insn \"*us_sub<mode>_neon\"\n@@ -1645,7 +1572,7 @@\n                     (match_operand:VD 2 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON\"\n   \"vqsub.<V_u_elem>\\t%P0, %P1, %P2\"\n-  [(set_attr \"type\" \"neon_int_5\")]\n+  [(set_attr \"type\" \"neon_qsub<q>\")]\n )\n \n ;; Conditional instructions.  These are comparisons with conditional moves for\n@@ -1939,10 +1866,8 @@\n   \"vadd.<V_if_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                  (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                    (const_string \"neon_int_1\")))]\n+                    (const_string \"neon_fp_addsub_s<q>\")\n+                    (const_string \"neon_add<q>\")))]\n )\n \n ; operand 3 represents in bits:\n@@ -1957,7 +1882,7 @@\n                           UNSPEC_VADDL))]\n   \"TARGET_NEON\"\n   \"vaddl.%T3%#<V_sz_elem>\\t%q0, %P1, %P2\"\n-  [(set_attr \"type\" \"neon_int_3\")]\n+  [(set_attr \"type\" \"neon_add_long\")]\n )\n \n (define_insn \"neon_vaddw<mode>\"\n@@ -1968,7 +1893,7 @@\n                           UNSPEC_VADDW))]\n   \"TARGET_NEON\"\n   \"vaddw.%T3%#<V_sz_elem>\\t%q0, %q1, %P2\"\n-  [(set_attr \"type\" \"neon_int_2\")]\n+  [(set_attr \"type\" \"neon_add_widen\")]\n )\n \n ; vhadd and vrhadd.\n@@ -1981,7 +1906,7 @@\n \t\t      UNSPEC_VHADD))]\n   \"TARGET_NEON\"\n   \"v%O3hadd.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set_attr \"type\" \"neon_int_4\")]\n+  [(set_attr \"type\" \"neon_add_halve_q\")]\n )\n \n (define_insn \"neon_vqadd<mode>\"\n@@ -1992,7 +1917,7 @@\n                      UNSPEC_VQADD))]\n   \"TARGET_NEON\"\n   \"vqadd.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set_attr \"type\" \"neon_int_4\")]\n+  [(set_attr \"type\" \"neon_qadd<q>\")]\n )\n \n (define_insn \"neon_vaddhn<mode>\"\n@@ -2003,7 +1928,7 @@\n                            UNSPEC_VADDHN))]\n   \"TARGET_NEON\"\n   \"v%O3addhn.<V_if_elem>\\t%P0, %q1, %q2\"\n-  [(set_attr \"type\" \"neon_int_4\")]\n+  [(set_attr \"type\" \"neon_add_halve_narrow_q\")]\n )\n \n ;; We cannot replace this unspec with mul<mode>3 because of the odd \n@@ -2018,17 +1943,8 @@\n   \"vmul.%F3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                  (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (if_then_else\n-                                    (match_test \"<Scalar_mul_8_16>\")\n-                                    (const_string \"neon_mul_ddd_8_16_qdd_16_8_long_32_16_long\")\n-                                    (const_string \"neon_mul_qqq_8_16_32_ddd_32\"))\n-                                  (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                                    (const_string \"neon_mul_qqq_8_16_32_ddd_32\")\n-                                    (const_string \"neon_mul_qqq_8_16_32_ddd_32\")))))]\n+                    (const_string \"neon_fp_mul_s<q>\")\n+                    (const_string \"neon_mul_<V_elem_ch><q>\")))]\n )\n \n (define_expand \"neon_vmla<mode>\"\n@@ -2077,26 +1993,17 @@\n ; Used for intrinsics when flag_unsafe_math_optimizations is false.\n \n (define_insn \"neon_vmla<mode>_unspec\"\n-  [(set (match_operand:VDQ 0 \"s_register_operand\" \"=w\")\n-\t(unspec:VDQ [(match_operand:VDQ 1 \"s_register_operand\" \"0\")\n-\t\t     (match_operand:VDQ 2 \"s_register_operand\" \"w\")\n-\t\t     (match_operand:VDQ 3 \"s_register_operand\" \"w\")]\n+  [(set (match_operand:VDQW 0 \"s_register_operand\" \"=w\")\n+\t(unspec:VDQW [(match_operand:VDQW 1 \"s_register_operand\" \"0\")\n+\t\t      (match_operand:VDQW 2 \"s_register_operand\" \"w\")\n+\t\t      (match_operand:VDQW 3 \"s_register_operand\" \"w\")]\n \t\t    UNSPEC_VMLA))]\n   \"TARGET_NEON\"\n   \"vmla.<V_if_elem>\\t%<V_reg>0, %<V_reg>2, %<V_reg>3\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (const_string \"neon_fp_vmla_ddd\")\n-                                  (const_string \"neon_fp_vmla_qqq\"))\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (if_then_else\n-                                    (match_test \"<Scalar_mul_8_16>\")\n-                                    (const_string \"neon_mla_ddd_8_16_qdd_16_8_long_32_16_long\")\n-                                    (const_string \"neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long\"))\n-                                  (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                                    (const_string \"neon_mla_qqq_8_16\")\n-                                    (const_string \"neon_mla_qqq_32_qqd_32_scalar\")))))]\n+                    (const_string \"neon_fp_mla_s<q>\")\n+                    (const_string \"neon_mla_<V_elem_ch><q>\")))]\n )\n \n (define_insn \"neon_vmlal<mode>\"\n@@ -2108,10 +2015,7 @@\n                           UNSPEC_VMLAL))]\n   \"TARGET_NEON\"\n   \"vmlal.%T4%#<V_sz_elem>\\t%q0, %P2, %P3\"\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                   (const_string \"neon_mla_ddd_8_16_qdd_16_8_long_32_16_long\")\n-                   (const_string \"neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long\")))]\n+  [(set_attr \"type\" \"neon_mla_<V_elem_ch>_long\")]\n )\n \n (define_expand \"neon_vmls<mode>\"\n@@ -2134,27 +2038,17 @@\n ; Used for intrinsics when flag_unsafe_math_optimizations is false.\n \n (define_insn \"neon_vmls<mode>_unspec\"\n-  [(set (match_operand:VDQ 0 \"s_register_operand\" \"=w\")\n-\t(unspec:VDQ [(match_operand:VDQ 1 \"s_register_operand\" \"0\")\n-\t\t     (match_operand:VDQ 2 \"s_register_operand\" \"w\")\n-\t\t     (match_operand:VDQ 3 \"s_register_operand\" \"w\")]\n+  [(set (match_operand:VDQW 0 \"s_register_operand\" \"=w\")\n+\t(unspec:VDQW [(match_operand:VDQW 1 \"s_register_operand\" \"0\")\n+\t\t      (match_operand:VDQW 2 \"s_register_operand\" \"w\")\n+\t\t      (match_operand:VDQW 3 \"s_register_operand\" \"w\")]\n \t\t    UNSPEC_VMLS))]\n   \"TARGET_NEON\"\n   \"vmls.<V_if_elem>\\t%<V_reg>0, %<V_reg>2, %<V_reg>3\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (const_string \"neon_fp_vmla_ddd\")\n-                                  (const_string \"neon_fp_vmla_qqq\"))\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (if_then_else\n-                                    (match_test \"<Scalar_mul_8_16>\")\n-                                    (const_string \"neon_mla_ddd_8_16_qdd_16_8_long_32_16_long\")\n-                                    (const_string \"neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long\"))\n-                                  (if_then_else\n-                                    (match_test \"<Scalar_mul_8_16>\")\n-                                    (const_string \"neon_mla_qqq_8_16\")\n-                                    (const_string \"neon_mla_qqq_32_qqd_32_scalar\")))))]\n+                    (const_string \"neon_fp_mla_s<q>\")\n+                    (const_string \"neon_mla_<V_elem_ch><q>\")))]\n )\n \n (define_insn \"neon_vmlsl<mode>\"\n@@ -2166,10 +2060,7 @@\n                           UNSPEC_VMLSL))]\n   \"TARGET_NEON\"\n   \"vmlsl.%T4%#<V_sz_elem>\\t%q0, %P2, %P3\"\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                   (const_string \"neon_mla_ddd_8_16_qdd_16_8_long_32_16_long\")\n-                   (const_string \"neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long\")))]\n+  [(set_attr \"type\" \"neon_mla_<V_elem_ch>_long\")]\n )\n \n (define_insn \"neon_vqdmulh<mode>\"\n@@ -2180,14 +2071,7 @@\n                       UNSPEC_VQDMULH))]\n   \"TARGET_NEON\"\n   \"vq%O3dmulh.<V_s_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Is_d_reg>\")\n-        (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                      (const_string \"neon_mul_ddd_8_16_qdd_16_8_long_32_16_long\")\n-                      (const_string \"neon_mul_qqq_8_16_32_ddd_32\"))\n-        (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                      (const_string \"neon_mul_qqq_8_16_32_ddd_32\")\n-                      (const_string \"neon_mul_qqq_8_16_32_ddd_32\"))))]\n+  [(set_attr \"type\" \"neon_sat_mul_<V_elem_ch><q>\")]\n )\n \n (define_insn \"neon_vqdmlal<mode>\"\n@@ -2199,10 +2083,7 @@\n                           UNSPEC_VQDMLAL))]\n   \"TARGET_NEON\"\n   \"vqdmlal.<V_s_elem>\\t%q0, %P2, %P3\"\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                   (const_string \"neon_mla_ddd_8_16_qdd_16_8_long_32_16_long\")\n-                   (const_string \"neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long\")))]\n+  [(set_attr \"type\" \"neon_sat_mla_<V_elem_ch>_long\")]\n )\n \n (define_insn \"neon_vqdmlsl<mode>\"\n@@ -2214,10 +2095,7 @@\n                           UNSPEC_VQDMLSL))]\n   \"TARGET_NEON\"\n   \"vqdmlsl.<V_s_elem>\\t%q0, %P2, %P3\"\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                   (const_string \"neon_mla_ddd_8_16_qdd_16_8_long_32_16_long\")\n-                   (const_string \"neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long\")))]\n+  [(set_attr \"type\" \"neon_sat_mla_<V_elem_ch>_long\")]\n )\n \n (define_insn \"neon_vmull<mode>\"\n@@ -2228,10 +2106,7 @@\n                           UNSPEC_VMULL))]\n   \"TARGET_NEON\"\n   \"vmull.%T3%#<V_sz_elem>\\t%q0, %P1, %P2\"\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                   (const_string \"neon_mul_ddd_8_16_qdd_16_8_long_32_16_long\")\n-                   (const_string \"neon_mul_qdd_64_32_long_qqd_16_ddd_32_scalar_64_32_long_scalar\")))]\n+  [(set_attr \"type\" \"neon_mul_<V_elem_ch>_long\")]\n )\n \n (define_insn \"neon_vqdmull<mode>\"\n@@ -2242,10 +2117,7 @@\n                           UNSPEC_VQDMULL))]\n   \"TARGET_NEON\"\n   \"vqdmull.<V_s_elem>\\t%q0, %P1, %P2\"\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                   (const_string \"neon_mul_ddd_8_16_qdd_16_8_long_32_16_long\")\n-                   (const_string \"neon_mul_qdd_64_32_long_qqd_16_ddd_32_scalar_64_32_long_scalar\")))]\n+  [(set_attr \"type\" \"neon_sat_mul_<V_elem_ch>_long\")]\n )\n \n (define_expand \"neon_vsub<mode>\"\n@@ -2274,10 +2146,8 @@\n   \"vsub.<V_if_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                  (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                    (const_string \"neon_int_2\")))]\n+                    (const_string \"neon_fp_addsub_s<q>\")\n+                    (const_string \"neon_sub<q>\")))]\n )\n \n (define_insn \"neon_vsubl<mode>\"\n@@ -2288,7 +2158,7 @@\n                           UNSPEC_VSUBL))]\n   \"TARGET_NEON\"\n   \"vsubl.%T3%#<V_sz_elem>\\t%q0, %P1, %P2\"\n-  [(set_attr \"type\" \"neon_int_2\")]\n+  [(set_attr \"type\" \"neon_sub_long\")]\n )\n \n (define_insn \"neon_vsubw<mode>\"\n@@ -2299,7 +2169,7 @@\n \t\t\t  UNSPEC_VSUBW))]\n   \"TARGET_NEON\"\n   \"vsubw.%T3%#<V_sz_elem>\\t%q0, %q1, %P2\"\n-  [(set_attr \"type\" \"neon_int_2\")]\n+  [(set_attr \"type\" \"neon_sub_widen\")]\n )\n \n (define_insn \"neon_vqsub<mode>\"\n@@ -2310,7 +2180,7 @@\n \t\t      UNSPEC_VQSUB))]\n   \"TARGET_NEON\"\n   \"vqsub.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set_attr \"type\" \"neon_int_5\")]\n+  [(set_attr \"type\" \"neon_qsub<q>\")]\n )\n \n (define_insn \"neon_vhsub<mode>\"\n@@ -2321,7 +2191,7 @@\n \t\t      UNSPEC_VHSUB))]\n   \"TARGET_NEON\"\n   \"vhsub.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set_attr \"type\" \"neon_int_5\")]\n+  [(set_attr \"type\" \"neon_sub_halve<q>\")]\n )\n \n (define_insn \"neon_vsubhn<mode>\"\n@@ -2332,7 +2202,7 @@\n                            UNSPEC_VSUBHN))]\n   \"TARGET_NEON\"\n   \"v%O3subhn.<V_if_elem>\\t%P0, %q1, %q2\"\n-  [(set_attr \"type\" \"neon_int_4\")]\n+  [(set_attr \"type\" \"neon_sub_halve_narrow_q\")]\n )\n \n (define_insn \"neon_vceq<mode>\"\n@@ -2348,10 +2218,10 @@\n   vceq.<V_if_elem>\\t%<V_reg>0, %<V_reg>1, #0\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                  (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                    (const_string \"neon_int_5\")))]\n+                    (const_string \"neon_fp_compare_s<q>\")\n+                    (if_then_else (match_operand 2 \"zero_operand\")\n+                      (const_string \"neon_compare_zero<q>\")\n+                      (const_string \"neon_compare<q>\"))))]\n )\n \n (define_insn \"neon_vcge<mode>\"\n@@ -2367,10 +2237,10 @@\n   vcge.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, #0\"\n   [(set (attr \"type\")\n      (if_then_else (match_test \"<Is_float_mode>\")\n-                   (if_then_else (match_test \"<Is_d_reg>\")\n-                                 (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                 (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                   (const_string \"neon_int_5\")))]\n+                   (const_string \"neon_fp_compare_s<q>\")\n+                    (if_then_else (match_operand 2 \"zero_operand\")\n+                      (const_string \"neon_compare_zero<q>\")\n+                      (const_string \"neon_compare<q>\"))))]\n )\n \n (define_insn \"neon_vcgeu<mode>\"\n@@ -2382,7 +2252,7 @@\n           UNSPEC_VCGEU))]\n   \"TARGET_NEON\"\n   \"vcge.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set_attr \"type\" \"neon_int_5\")]\n+  [(set_attr \"type\" \"neon_compare<q>\")]\n )\n \n (define_insn \"neon_vcgt<mode>\"\n@@ -2398,10 +2268,10 @@\n   vcgt.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, #0\"\n   [(set (attr \"type\")\n      (if_then_else (match_test \"<Is_float_mode>\")\n-                   (if_then_else (match_test \"<Is_d_reg>\")\n-                                 (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                 (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                   (const_string \"neon_int_5\")))]\n+                   (const_string \"neon_fp_compare_s<q>\")\n+                    (if_then_else (match_operand 2 \"zero_operand\")\n+                      (const_string \"neon_compare_zero<q>\")\n+                      (const_string \"neon_compare<q>\"))))]\n )\n \n (define_insn \"neon_vcgtu<mode>\"\n@@ -2413,7 +2283,7 @@\n           UNSPEC_VCGTU))]\n   \"TARGET_NEON\"\n   \"vcgt.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set_attr \"type\" \"neon_int_5\")]\n+  [(set_attr \"type\" \"neon_compare<q>\")]\n )\n \n ;; VCLE and VCLT only support comparisons with immediate zero (register\n@@ -2430,10 +2300,10 @@\n   \"vcle.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, #0\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                  (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                    (const_string \"neon_int_5\")))]\n+                    (const_string \"neon_fp_compare_s<q>\")\n+                    (if_then_else (match_operand 2 \"zero_operand\")\n+                      (const_string \"neon_compare_zero<q>\")\n+                      (const_string \"neon_compare<q>\"))))]\n )\n \n (define_insn \"neon_vclt<mode>\"\n@@ -2447,10 +2317,10 @@\n   \"vclt.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, #0\"\n   [(set (attr \"type\")\n       (if_then_else (match_test \"<Is_float_mode>\")\n-                    (if_then_else (match_test \"<Is_d_reg>\")\n-                                  (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                  (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                    (const_string \"neon_int_5\")))]\n+                    (const_string \"neon_fp_compare_s<q>\")\n+                    (if_then_else (match_operand 2 \"zero_operand\")\n+                      (const_string \"neon_compare_zero<q>\")\n+                      (const_string \"neon_compare<q>\"))))]\n )\n \n (define_insn \"neon_vcage<mode>\"\n@@ -2461,10 +2331,7 @@\n                                UNSPEC_VCAGE))]\n   \"TARGET_NEON\"\n   \"vacge.<V_if_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Is_d_reg>\")\n-                   (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                   (const_string \"neon_fp_vadd_qqq_vabs_qq\")))]\n+  [(set_attr \"type\" \"neon_fp_compare_s<q>\")]\n )\n \n (define_insn \"neon_vcagt<mode>\"\n@@ -2475,10 +2342,7 @@\n                                UNSPEC_VCAGT))]\n   \"TARGET_NEON\"\n   \"vacgt.<V_if_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Is_d_reg>\")\n-                   (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                   (const_string \"neon_fp_vadd_qqq_vabs_qq\")))]\n+  [(set_attr \"type\" \"neon_fp_compare_s<q>\")]\n )\n \n (define_insn \"neon_vtst<mode>\"\n@@ -2489,7 +2353,7 @@\n \t\t      UNSPEC_VTST))]\n   \"TARGET_NEON\"\n   \"vtst.<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set_attr \"type\" \"neon_int_4\")]\n+  [(set_attr \"type\" \"neon_tst<q>\")]\n )\n \n (define_insn \"neon_vabd<mode>\"\n@@ -2502,10 +2366,8 @@\n   \"vabd.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set (attr \"type\")\n      (if_then_else (match_test \"<Is_float_mode>\")\n-                   (if_then_else (match_test \"<Is_d_reg>\")\n-                                 (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                 (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                   (const_string \"neon_int_5\")))]\n+                   (const_string \"neon_fp_abd_s<q>\")\n+                   (const_string \"neon_abd<q>\")))]\n )\n \n (define_insn \"neon_vabdl<mode>\"\n@@ -2516,7 +2378,7 @@\n                           UNSPEC_VABDL))]\n   \"TARGET_NEON\"\n   \"vabdl.%T3%#<V_sz_elem>\\t%q0, %P1, %P2\"\n-  [(set_attr \"type\" \"neon_int_5\")]\n+  [(set_attr \"type\" \"neon_abd_long\")]\n )\n \n (define_insn \"neon_vaba<mode>\"\n@@ -2528,9 +2390,7 @@\n \t\t    (match_operand:VDQIW 1 \"s_register_operand\" \"0\")))]\n   \"TARGET_NEON\"\n   \"vaba.%T4%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>2, %<V_reg>3\"\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Is_d_reg>\")\n-                   (const_string \"neon_vaba\") (const_string \"neon_vaba_qqq\")))]\n+  [(set_attr \"type\" \"neon_arith_acc<q>\")]\n )\n \n (define_insn \"neon_vabal<mode>\"\n@@ -2542,7 +2402,7 @@\n \t\t\t (match_operand:<V_widen> 1 \"s_register_operand\" \"0\")))]\n   \"TARGET_NEON\"\n   \"vabal.%T4%#<V_sz_elem>\\t%q0, %P2, %P3\"\n-  [(set_attr \"type\" \"neon_vaba\")]\n+  [(set_attr \"type\" \"neon_arith_acc<q>\")]\n )\n \n (define_insn \"neon_vmax<mode>\"\n@@ -2555,10 +2415,8 @@\n   \"vmax.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set (attr \"type\")\n     (if_then_else (match_test \"<Is_float_mode>\")\n-                  (if_then_else (match_test \"<Is_d_reg>\")\n-                                (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                  (const_string \"neon_int_5\")))]\n+                  (const_string \"neon_fp_minmax_s<q>\")\n+                  (const_string \"neon_minmax<q>\")))]\n )\n \n (define_insn \"neon_vmin<mode>\"\n@@ -2571,10 +2429,8 @@\n   \"vmin.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n   [(set (attr \"type\")\n     (if_then_else (match_test \"<Is_float_mode>\")\n-                  (if_then_else (match_test \"<Is_d_reg>\")\n-                                (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                  (const_string \"neon_int_5\")))]\n+                  (const_string \"neon_fp_minmax_s<q>\")\n+                  (const_string \"neon_minmax<q>\")))]\n )\n \n (define_expand \"neon_vpadd<mode>\"\n@@ -2596,8 +2452,7 @@\n                                  UNSPEC_VPADDL))]\n   \"TARGET_NEON\"\n   \"vpaddl.%T2%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1\"\n-  ;; Assume this schedules like vaddl.\n-  [(set_attr \"type\" \"neon_int_3\")]\n+  [(set_attr \"type\" \"neon_reduc_add_long\")]\n )\n \n (define_insn \"neon_vpadal<mode>\"\n@@ -2608,8 +2463,7 @@\n                                  UNSPEC_VPADAL))]\n   \"TARGET_NEON\"\n   \"vpadal.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>2\"\n-  ;; Assume this schedules like vpadd.\n-  [(set_attr \"type\" \"neon_int_1\")]\n+  [(set_attr \"type\" \"neon_reduc_add_acc\")]\n )\n \n (define_insn \"neon_vpmax<mode>\"\n@@ -2620,11 +2474,10 @@\n                    UNSPEC_VPMAX))]\n   \"TARGET_NEON\"\n   \"vpmax.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  ;; Assume this schedules like vmax.\n   [(set (attr \"type\")\n     (if_then_else (match_test \"<Is_float_mode>\")\n-                  (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                  (const_string \"neon_int_5\")))]\n+                  (const_string \"neon_fp_reduc_minmax_s<q>\")\n+                  (const_string \"neon_reduc_minmax<q>\")))]\n )\n \n (define_insn \"neon_vpmin<mode>\"\n@@ -2635,11 +2488,10 @@\n                    UNSPEC_VPMIN))]\n   \"TARGET_NEON\"\n   \"vpmin.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  ;; Assume this schedules like vmin.\n   [(set (attr \"type\")\n     (if_then_else (match_test \"<Is_float_mode>\")\n-                  (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                  (const_string \"neon_int_5\")))]\n+                  (const_string \"neon_fp_reduc_minmax_s<q>\")\n+                  (const_string \"neon_reduc_minmax<q>\")))]\n )\n \n (define_insn \"neon_vrecps<mode>\"\n@@ -2650,10 +2502,7 @@\n                       UNSPEC_VRECPS))]\n   \"TARGET_NEON\"\n   \"vrecps.<V_if_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set (attr \"type\")\n-      (if_then_else (match_test \"<Is_d_reg>\")\n-                    (const_string \"neon_fp_vrecps_vrsqrts_ddd\")\n-                    (const_string \"neon_fp_vrecps_vrsqrts_qqq\")))]\n+  [(set_attr \"type\" \"neon_fp_recps_s<q>\")]\n )\n \n (define_insn \"neon_vrsqrts<mode>\"\n@@ -2664,10 +2513,7 @@\n                       UNSPEC_VRSQRTS))]\n   \"TARGET_NEON\"\n   \"vrsqrts.<V_if_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set (attr \"type\")\n-      (if_then_else (match_test \"<Is_d_reg>\")\n-                    (const_string \"neon_fp_vrecps_vrsqrts_ddd\")\n-                    (const_string \"neon_fp_vrecps_vrsqrts_qqq\")))]\n+  [(set_attr \"type\" \"neon_fp_rsqrts_s<q>\")]\n )\n \n (define_expand \"neon_vabs<mode>\"\n@@ -2687,7 +2533,7 @@\n \t\t      UNSPEC_VQABS))]\n   \"TARGET_NEON\"\n   \"vqabs.<V_s_elem>\\t%<V_reg>0, %<V_reg>1\"\n-  [(set_attr \"type\" \"neon_vqneg_vqabs\")]\n+  [(set_attr \"type\" \"neon_qabs<q>\")]\n )\n \n (define_expand \"neon_vneg<mode>\"\n@@ -2707,7 +2553,7 @@\n \t\t      UNSPEC_VQNEG))]\n   \"TARGET_NEON\"\n   \"vqneg.<V_s_elem>\\t%<V_reg>0, %<V_reg>1\"\n-  [(set_attr \"type\" \"neon_vqneg_vqabs\")]\n+  [(set_attr \"type\" \"neon_qneg<q>\")]\n )\n \n (define_insn \"neon_vcls<mode>\"\n@@ -2717,15 +2563,15 @@\n \t\t      UNSPEC_VCLS))]\n   \"TARGET_NEON\"\n   \"vcls.<V_s_elem>\\t%<V_reg>0, %<V_reg>1\"\n-  [(set_attr \"type\" \"neon_int_1\")]\n+  [(set_attr \"type\" \"neon_cls<q>\")]\n )\n \n (define_insn \"clz<mode>2\"\n   [(set (match_operand:VDQIW 0 \"s_register_operand\" \"=w\")\n         (clz:VDQIW (match_operand:VDQIW 1 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON\"\n   \"vclz.<V_if_elem>\\t%<V_reg>0, %<V_reg>1\"\n-  [(set_attr \"type\" \"neon_int_1\")]\n+  [(set_attr \"type\" \"neon_cnt<q>\")]\n )\n \n (define_expand \"neon_vclz<mode>\"\n@@ -2743,7 +2589,7 @@\n         (popcount:VE (match_operand:VE 1 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON\"\n   \"vcnt.<V_sz_elem>\\t%<V_reg>0, %<V_reg>1\"\n-  [(set_attr \"type\" \"neon_int_1\")]\n+  [(set_attr \"type\" \"neon_cnt<q>\")]\n )\n \n (define_expand \"neon_vcnt<mode>\"\n@@ -2763,10 +2609,7 @@\n                     UNSPEC_VRECPE))]\n   \"TARGET_NEON\"\n   \"vrecpe.<V_u_elem>\\t%<V_reg>0, %<V_reg>1\"\n-  [(set (attr \"type\")\n-      (if_then_else (match_test \"<Is_d_reg>\")\n-                    (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                    (const_string \"neon_fp_vadd_qqq_vabs_qq\")))]\n+  [(set_attr \"type\" \"neon_fp_recpe_s<q>\")]\n )\n \n (define_insn \"neon_vrsqrte<mode>\"\n@@ -2776,10 +2619,7 @@\n                     UNSPEC_VRSQRTE))]\n   \"TARGET_NEON\"\n   \"vrsqrte.<V_u_elem>\\t%<V_reg>0, %<V_reg>1\"\n-  [(set (attr \"type\")\n-      (if_then_else (match_test \"<Is_d_reg>\")\n-                    (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                    (const_string \"neon_fp_vadd_qqq_vabs_qq\")))]\n+  [(set_attr \"type\" \"neon_fp_rsqrte_s<q>\")]\n )\n \n (define_expand \"neon_vmvn<mode>\"\n@@ -2808,7 +2648,7 @@\n     }\n   return \"vmov.s<V_sz_elem>\\t%0, %P1[%c2]\";\n }\n-  [(set_attr \"type\" \"neon_bp_simple\")]\n+  [(set_attr \"type\" \"neon_to_gp\")]\n )\n \n (define_insn \"neon_vget_lane<mode>_zext_internal\"\n@@ -2827,7 +2667,7 @@\n     }\n   return \"vmov.u<V_sz_elem>\\t%0, %P1[%c2]\";\n }\n-  [(set_attr \"type\" \"neon_bp_simple\")]\n+  [(set_attr \"type\" \"neon_to_gp\")]\n )\n \n (define_insn \"neon_vget_lane<mode>_sext_internal\"\n@@ -2854,7 +2694,7 @@\n \n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_bp_simple\")]\n+  [(set_attr \"type\" \"neon_to_gp_q\")]\n )\n \n (define_insn \"neon_vget_lane<mode>_zext_internal\"\n@@ -2881,7 +2721,7 @@\n \n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_bp_simple\")]\n+  [(set_attr \"type\" \"neon_to_gp_q\")]\n )\n \n (define_expand \"neon_vget_lane<mode>\"\n@@ -3013,8 +2853,7 @@\n         (vec_duplicate:VX (match_operand:<V_elem> 1 \"s_register_operand\" \"r\")))]\n   \"TARGET_NEON\"\n   \"vdup.<V_sz_elem>\\t%<V_reg>0, %1\"\n-  ;; Assume this schedules like vmov.\n-  [(set_attr \"type\" \"neon_bp_simple\")]\n+  [(set_attr \"type\" \"neon_from_gp<q>\")]\n )\n \n (define_insn \"neon_vdup_n<mode>\"\n@@ -3024,8 +2863,7 @@\n   \"@\n   vdup.<V_sz_elem>\\t%<V_reg>0, %1\n   vdup.<V_sz_elem>\\t%<V_reg>0, %y1\"\n-  ;; Assume this schedules like vmov.\n-  [(set_attr \"type\" \"neon_bp_simple\")]\n+  [(set_attr \"type\" \"neon_from_gp<q>,neon_dup<q>\")]\n )\n \n (define_expand \"neon_vdup_ndi\"\n@@ -3046,7 +2884,7 @@\n   vmov\\t%e0, %Q1, %R1\\;vmov\\t%f0, %Q1, %R1\n   vmov\\t%e0, %P1\\;vmov\\t%f0, %P1\"\n   [(set_attr \"length\" \"8\")\n-   (set_attr \"type\" \"neon_bp_simple\")]\n+   (set_attr \"type\" \"multiple\")]\n )\n \n (define_insn \"neon_vdup_lane<mode>_internal\"\n@@ -3068,8 +2906,7 @@\n   else\n     return \"vdup.<V_sz_elem>\\t%q0, %P1[%c2]\";\n }\n-  ;; Assume this schedules like vmov.\n-  [(set_attr \"type\" \"neon_bp_simple\")]\n+  [(set_attr \"type\" \"neon_dup<q>\")]\n )\n \n (define_expand \"neon_vdup_lane<mode>\"\n@@ -3124,10 +2961,7 @@\n    (set (match_dup 1) (match_dup 0))]\n   \"TARGET_NEON && reload_completed\"\n   \"vswp\\t%<V_reg>0, %<V_reg>1\"\n-  [(set (attr \"type\")\n-\t(if_then_else (match_test \"<Is_d_reg>\")\n-\t\t      (const_string \"neon_bp_simple\")\n-\t\t      (const_string \"neon_bp_2cycle\")))]\n+  [(set_attr \"type\" \"neon_permute<q>\")]\n )\n \n ;; In this insn, operand 1 should be low, and operand 2 the high part of the\n@@ -3149,7 +2983,9 @@\n {\n   neon_split_vcombine (operands);\n   DONE;\n-})\n+}\n+[(set_attr \"type\" \"multiple\")]\n+)\n \n (define_expand \"neon_vget_high<mode>\"\n   [(match_operand:<V_HALF> 0 \"s_register_operand\")\n@@ -3178,43 +3014,31 @@\n         (float:<V_CVTTO> (match_operand:VCVTI 1 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON && !flag_rounding_math\"\n   \"vcvt.f32.s32\\t%<V_reg>0, %<V_reg>1\"\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Is_d_reg>\")\n-                   (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                   (const_string \"neon_fp_vadd_qqq_vabs_qq\")))]\n+  [(set_attr \"type\" \"neon_int_to_fp_<V_elem_ch><q>\")]\n )\n \n (define_insn \"floatuns<mode><V_cvtto>2\"\n   [(set (match_operand:<V_CVTTO> 0 \"s_register_operand\" \"=w\")\n         (unsigned_float:<V_CVTTO> (match_operand:VCVTI 1 \"s_register_operand\" \"w\")))] \n   \"TARGET_NEON && !flag_rounding_math\"\n   \"vcvt.f32.u32\\t%<V_reg>0, %<V_reg>1\"\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Is_d_reg>\")\n-                   (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                   (const_string \"neon_fp_vadd_qqq_vabs_qq\")))]\n+  [(set_attr \"type\" \"neon_int_to_fp_<V_elem_ch><q>\")]\n )\n \n (define_insn \"fix_trunc<mode><V_cvtto>2\"\n   [(set (match_operand:<V_CVTTO> 0 \"s_register_operand\" \"=w\")\n         (fix:<V_CVTTO> (match_operand:VCVTF 1 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON\"\n   \"vcvt.s32.f32\\t%<V_reg>0, %<V_reg>1\"\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Is_d_reg>\")\n-                   (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                   (const_string \"neon_fp_vadd_qqq_vabs_qq\")))]\n+  [(set_attr \"type\" \"neon_fp_to_int_<V_elem_ch><q>\")]\n )\n \n (define_insn \"fixuns_trunc<mode><V_cvtto>2\"\n   [(set (match_operand:<V_CVTTO> 0 \"s_register_operand\" \"=w\")\n         (unsigned_fix:<V_CVTTO> (match_operand:VCVTF 1 \"s_register_operand\" \"w\")))]\n   \"TARGET_NEON\"\n   \"vcvt.u32.f32\\t%<V_reg>0, %<V_reg>1\"\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Is_d_reg>\")\n-                   (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                   (const_string \"neon_fp_vadd_qqq_vabs_qq\")))]\n+  [(set_attr \"type\" \"neon_fp_to_int_<V_elem_ch><q>\")]\n )\n \n (define_insn \"neon_vcvt<mode>\"\n@@ -3224,10 +3048,7 @@\n \t\t\t  UNSPEC_VCVT))]\n   \"TARGET_NEON\"\n   \"vcvt.%T2%#32.f32\\t%<V_reg>0, %<V_reg>1\"\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Is_d_reg>\")\n-                   (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                   (const_string \"neon_fp_vadd_qqq_vabs_qq\")))]\n+  [(set_attr \"type\" \"neon_fp_to_int_<V_elem_ch><q>\")]\n )\n \n (define_insn \"neon_vcvt<mode>\"\n@@ -3237,10 +3058,7 @@\n \t\t\t  UNSPEC_VCVT))]\n   \"TARGET_NEON\"\n   \"vcvt.f32.%T2%#32\\t%<V_reg>0, %<V_reg>1\"\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Is_d_reg>\")\n-                   (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                   (const_string \"neon_fp_vadd_qqq_vabs_qq\")))]\n+  [(set_attr \"type\" \"neon_int_to_fp_<V_elem_ch><q>\")]\n )\n \n (define_insn \"neon_vcvtv4sfv4hf\"\n@@ -3249,7 +3067,7 @@\n \t\t\t  UNSPEC_VCVT))]\n   \"TARGET_NEON && TARGET_FP16\"\n   \"vcvt.f32.f16\\t%q0, %P1\"\n-  [(set_attr \"type\" \"neon_fp_vadd_ddd_vabs_dd\")]\n+  [(set_attr \"type\" \"neon_fp_cvt_widen_h\")]\n )\n \n (define_insn \"neon_vcvtv4hfv4sf\"\n@@ -3258,7 +3076,7 @@\n \t\t\t  UNSPEC_VCVT))]\n   \"TARGET_NEON && TARGET_FP16\"\n   \"vcvt.f16.f32\\t%P0, %q1\"\n-  [(set_attr \"type\" \"neon_fp_vadd_ddd_vabs_dd\")]\n+  [(set_attr \"type\" \"neon_fp_cvt_narrow_s_q\")]\n )\n \n (define_insn \"neon_vcvt_n<mode>\"\n@@ -3272,10 +3090,7 @@\n   neon_const_bounds (operands[2], 1, 33);\n   return \"vcvt.%T3%#32.f32\\t%<V_reg>0, %<V_reg>1, %2\";\n }\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Is_d_reg>\")\n-                   (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                   (const_string \"neon_fp_vadd_qqq_vabs_qq\")))]\n+  [(set_attr \"type\" \"neon_fp_to_int_<V_elem_ch><q>\")]\n )\n \n (define_insn \"neon_vcvt_n<mode>\"\n@@ -3289,10 +3104,7 @@\n   neon_const_bounds (operands[2], 1, 33);\n   return \"vcvt.f32.%T3%#32\\t%<V_reg>0, %<V_reg>1, %2\";\n }\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Is_d_reg>\")\n-                   (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                   (const_string \"neon_fp_vadd_qqq_vabs_qq\")))]\n+  [(set_attr \"type\" \"neon_int_to_fp_<V_elem_ch><q>\")]\n )\n \n (define_insn \"neon_vmovn<mode>\"\n@@ -3302,7 +3114,7 @@\n                            UNSPEC_VMOVN))]\n   \"TARGET_NEON\"\n   \"vmovn.<V_if_elem>\\t%P0, %q1\"\n-  [(set_attr \"type\" \"neon_bp_simple\")]\n+  [(set_attr \"type\" \"neon_shift_imm_narrow_q\")]\n )\n \n (define_insn \"neon_vqmovn<mode>\"\n@@ -3312,7 +3124,7 @@\n                            UNSPEC_VQMOVN))]\n   \"TARGET_NEON\"\n   \"vqmovn.%T2%#<V_sz_elem>\\t%P0, %q1\"\n-  [(set_attr \"type\" \"neon_shift_2\")]\n+  [(set_attr \"type\" \"neon_sat_shift_imm_narrow_q\")]\n )\n \n (define_insn \"neon_vqmovun<mode>\"\n@@ -3322,7 +3134,7 @@\n                            UNSPEC_VQMOVUN))]\n   \"TARGET_NEON\"\n   \"vqmovun.<V_s_elem>\\t%P0, %q1\"\n-  [(set_attr \"type\" \"neon_shift_2\")]\n+  [(set_attr \"type\" \"neon_sat_shift_imm_narrow_q\")]\n )\n \n (define_insn \"neon_vmovl<mode>\"\n@@ -3332,7 +3144,7 @@\n                           UNSPEC_VMOVL))]\n   \"TARGET_NEON\"\n   \"vmovl.%T2%#<V_sz_elem>\\t%q0, %P1\"\n-  [(set_attr \"type\" \"neon_shift_1\")]\n+  [(set_attr \"type\" \"neon_shift_imm_long\")]\n )\n \n (define_insn \"neon_vmul_lane<mode>\"\n@@ -3350,10 +3162,8 @@\n }\n   [(set (attr \"type\")\n      (if_then_else (match_test \"<Is_float_mode>\")\n-                   (const_string \"neon_fp_vmul_ddd\")\n-                   (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                                 (const_string \"neon_mul_ddd_16_scalar_32_16_long_scalar\")\n-                                 (const_string \"neon_mul_qdd_64_32_long_qqd_16_ddd_32_scalar_64_32_long_scalar\"))))]\n+                   (const_string \"neon_fp_mul_s_scalar<q>\")\n+                   (const_string \"neon_mul_<V_elem_ch>_scalar<q>\")))]\n )\n \n (define_insn \"neon_vmul_lane<mode>\"\n@@ -3371,10 +3181,8 @@\n }\n   [(set (attr \"type\")\n      (if_then_else (match_test \"<Is_float_mode>\")\n-                   (const_string \"neon_fp_vmul_qqd\")\n-                   (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                                 (const_string \"neon_mul_qdd_64_32_long_qqd_16_ddd_32_scalar_64_32_long_scalar\")\n-                                 (const_string \"neon_mul_qqd_32_scalar\"))))]\n+                   (const_string \"neon_fp_mul_s_scalar<q>\")\n+                   (const_string \"neon_mul_<V_elem_ch>_scalar<q>\")))]\n )\n \n (define_insn \"neon_vmull_lane<mode>\"\n@@ -3390,10 +3198,7 @@\n   neon_lane_bounds (operands[3], 0, GET_MODE_NUNITS (<MODE>mode));\n   return \"vmull.%T4%#<V_sz_elem>\\t%q0, %P1, %P2[%c3]\";\n }\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                   (const_string \"neon_mul_ddd_16_scalar_32_16_long_scalar\")\n-                   (const_string \"neon_mul_qdd_64_32_long_qqd_16_ddd_32_scalar_64_32_long_scalar\")))]\n+  [(set_attr \"type\" \"neon_mul_<V_elem_ch>_scalar_long\")]\n )\n \n (define_insn \"neon_vqdmull_lane<mode>\"\n@@ -3409,10 +3214,7 @@\n   neon_lane_bounds (operands[3], 0, GET_MODE_NUNITS (<MODE>mode));\n   return \"vqdmull.<V_s_elem>\\t%q0, %P1, %P2[%c3]\";\n }\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                   (const_string \"neon_mul_ddd_16_scalar_32_16_long_scalar\")\n-                   (const_string \"neon_mul_qdd_64_32_long_qqd_16_ddd_32_scalar_64_32_long_scalar\")))]\n+  [(set_attr \"type\" \"neon_sat_mul_<V_elem_ch>_scalar_long\")]\n )\n \n (define_insn \"neon_vqdmulh_lane<mode>\"\n@@ -3428,10 +3230,7 @@\n   neon_lane_bounds (operands[3], 0, GET_MODE_NUNITS (<MODE>mode));\n   return \"vq%O4dmulh.%T4%#<V_sz_elem>\\t%q0, %q1, %P2[%c3]\";\n }\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                   (const_string \"neon_mul_qdd_64_32_long_qqd_16_ddd_32_scalar_64_32_long_scalar\")\n-                   (const_string \"neon_mul_qqd_32_scalar\")))]\n+  [(set_attr \"type\" \"neon_sat_mul_<V_elem_ch>_scalar_q\")]\n )\n \n (define_insn \"neon_vqdmulh_lane<mode>\"\n@@ -3447,10 +3246,7 @@\n   neon_lane_bounds (operands[3], 0, GET_MODE_NUNITS (<MODE>mode));\n   return \"vq%O4dmulh.%T4%#<V_sz_elem>\\t%P0, %P1, %P2[%c3]\";\n }\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                   (const_string \"neon_mul_ddd_16_scalar_32_16_long_scalar\")\n-                   (const_string \"neon_mul_qdd_64_32_long_qqd_16_ddd_32_scalar_64_32_long_scalar\")))]\n+  [(set_attr \"type\" \"neon_sat_mul_<V_elem_ch>_scalar_q\")]\n )\n \n (define_insn \"neon_vmla_lane<mode>\"\n@@ -3469,10 +3265,8 @@\n }\n   [(set (attr \"type\")\n      (if_then_else (match_test \"<Is_float_mode>\")\n-                   (const_string \"neon_fp_vmla_ddd_scalar\")\n-                   (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                                 (const_string \"neon_mla_ddd_16_scalar_qdd_32_16_long_scalar\")\n-                                 (const_string \"neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long\"))))]\n+                   (const_string \"neon_fp_mla_s_scalar<q>\")\n+                   (const_string \"neon_mla_<V_elem_ch>_scalar<q>\")))]\n )\n \n (define_insn \"neon_vmla_lane<mode>\"\n@@ -3491,10 +3285,8 @@\n }\n   [(set (attr \"type\")\n      (if_then_else (match_test \"<Is_float_mode>\")\n-                   (const_string \"neon_fp_vmla_qqq_scalar\")\n-                   (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                                 (const_string \"neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long\")\n-                                 (const_string \"neon_mla_qqq_32_qqd_32_scalar\"))))]\n+                   (const_string \"neon_fp_mla_s_scalar<q>\")\n+                   (const_string \"neon_mla_<V_elem_ch>_scalar<q>\")))]\n )\n \n (define_insn \"neon_vmlal_lane<mode>\"\n@@ -3511,10 +3303,7 @@\n   neon_lane_bounds (operands[4], 0, GET_MODE_NUNITS (<MODE>mode));\n   return \"vmlal.%T5%#<V_sz_elem>\\t%q0, %P2, %P3[%c4]\";\n }\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                   (const_string \"neon_mla_ddd_16_scalar_qdd_32_16_long_scalar\")\n-                   (const_string \"neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long\")))]\n+  [(set_attr \"type\" \"neon_mla_<V_elem_ch>_scalar_long\")]\n )\n \n (define_insn \"neon_vqdmlal_lane<mode>\"\n@@ -3531,10 +3320,7 @@\n   neon_lane_bounds (operands[4], 0, GET_MODE_NUNITS (<MODE>mode));\n   return \"vqdmlal.<V_s_elem>\\t%q0, %P2, %P3[%c4]\";\n }\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                   (const_string \"neon_mla_ddd_16_scalar_qdd_32_16_long_scalar\")\n-                   (const_string \"neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long\")))]\n+  [(set_attr \"type\" \"neon_sat_mla_<V_elem_ch>_scalar_long\")]\n )\n \n (define_insn \"neon_vmls_lane<mode>\"\n@@ -3553,10 +3339,8 @@\n }\n   [(set (attr \"type\")\n      (if_then_else (match_test \"<Is_float_mode>\")\n-                   (const_string \"neon_fp_vmla_ddd_scalar\")\n-                   (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                                 (const_string \"neon_mla_ddd_16_scalar_qdd_32_16_long_scalar\")\n-                                 (const_string \"neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long\"))))]\n+                   (const_string \"neon_fp_mla_s_scalar<q>\")\n+                   (const_string \"neon_mla_<V_elem_ch>_scalar<q>\")))]\n )\n \n (define_insn \"neon_vmls_lane<mode>\"\n@@ -3575,10 +3359,8 @@\n }\n   [(set (attr \"type\")\n      (if_then_else (match_test \"<Is_float_mode>\")\n-                   (const_string \"neon_fp_vmla_qqq_scalar\")\n-                   (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                                 (const_string \"neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long\")\n-                                 (const_string \"neon_mla_qqq_32_qqd_32_scalar\"))))]\n+                   (const_string \"neon_fp_mla_s_scalar<q>\")\n+                   (const_string \"neon_mla_<V_elem_ch>_scalar<q>\")))]\n )\n \n (define_insn \"neon_vmlsl_lane<mode>\"\n@@ -3595,10 +3377,7 @@\n   neon_lane_bounds (operands[4], 0, GET_MODE_NUNITS (<MODE>mode));\n   return \"vmlsl.%T5%#<V_sz_elem>\\t%q0, %P2, %P3[%c4]\";\n }\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                   (const_string \"neon_mla_ddd_16_scalar_qdd_32_16_long_scalar\")\n-                   (const_string \"neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long\")))]\n+  [(set_attr \"type\" \"neon_mla_<V_elem_ch>_scalar_long\")]\n )\n \n (define_insn \"neon_vqdmlsl_lane<mode>\"\n@@ -3615,10 +3394,7 @@\n   neon_lane_bounds (operands[4], 0, GET_MODE_NUNITS (<MODE>mode));\n   return \"vqdmlsl.<V_s_elem>\\t%q0, %P2, %P3[%c4]\";\n }\n-  [(set (attr \"type\")\n-     (if_then_else (match_test \"<Scalar_mul_8_16>\")\n-                   (const_string \"neon_mla_ddd_16_scalar_qdd_32_16_long_scalar\")\n-                   (const_string \"neon_mla_ddd_32_qqd_16_ddd_32_scalar_qdd_64_32_long_scalar_qdd_64_32_long\")))]\n+  [(set_attr \"type\" \"neon_sat_mla_<V_elem_ch>_scalar_long\")]\n )\n \n ; FIXME: For the \"_n\" multiply/multiply-accumulate insns, we copy a value in a\n@@ -3843,10 +3619,7 @@\n   neon_const_bounds (operands[3], 0, GET_MODE_NUNITS (<MODE>mode));\n   return \"vext.<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2, %3\";\n }\n-  [(set (attr \"type\")\n-      (if_then_else (match_test \"<Is_d_reg>\")\n-                    (const_string \"neon_bp_simple\")\n-                    (const_string \"neon_bp_2cycle\")))]\n+  [(set_attr \"type\" \"neon_ext<q>\")]\n )\n \n (define_insn \"neon_vrev64<mode>\"\n@@ -3856,7 +3629,7 @@\n                     UNSPEC_VREV64))]\n   \"TARGET_NEON\"\n   \"vrev64.<V_sz_elem>\\t%<V_reg>0, %<V_reg>1\"\n-  [(set_attr \"type\" \"neon_bp_simple\")]\n+  [(set_attr \"type\" \"neon_rev<q>\")]\n )\n \n (define_insn \"neon_vrev32<mode>\"\n@@ -3866,7 +3639,7 @@\n                    UNSPEC_VREV32))]\n   \"TARGET_NEON\"\n   \"vrev32.<V_sz_elem>\\t%<V_reg>0, %<V_reg>1\"\n-  [(set_attr \"type\" \"neon_bp_simple\")]\n+  [(set_attr \"type\" \"neon_rev<q>\")]\n )\n \n (define_insn \"neon_vrev16<mode>\"\n@@ -3876,7 +3649,7 @@\n                    UNSPEC_VREV16))]\n   \"TARGET_NEON\"\n   \"vrev16.<V_sz_elem>\\t%<V_reg>0, %<V_reg>1\"\n-  [(set_attr \"type\" \"neon_bp_simple\")]\n+  [(set_attr \"type\" \"neon_rev<q>\")]\n )\n \n ; vbsl_* intrinsics may compile to any of vbsl/vbif/vbit depending on register\n@@ -3898,7 +3671,7 @@\n   vbsl\\t%<V_reg>0, %<V_reg>2, %<V_reg>3\n   vbit\\t%<V_reg>0, %<V_reg>2, %<V_reg>1\n   vbif\\t%<V_reg>0, %<V_reg>3, %<V_reg>1\"\n-  [(set_attr \"type\" \"neon_int_1\")]\n+  [(set_attr \"type\" \"neon_bsl<q>\")]\n )\n \n (define_expand \"neon_vbsl<mode>\"\n@@ -3921,10 +3694,7 @@\n                       UNSPEC_VSHL))]\n   \"TARGET_NEON\"\n   \"v%O3shl.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set (attr \"type\")\n-      (if_then_else (match_test \"<Is_d_reg>\")\n-                    (const_string \"neon_vshl_ddd\")\n-                    (const_string \"neon_shift_3\")))]\n+  [(set_attr \"type\" \"neon_shift_imm<q>\")]\n )\n \n (define_insn \"neon_vqshl<mode>\"\n@@ -3935,10 +3705,7 @@\n                       UNSPEC_VQSHL))]\n   \"TARGET_NEON\"\n   \"vq%O3shl.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %<V_reg>2\"\n-  [(set (attr \"type\")\n-      (if_then_else (match_test \"<Is_d_reg>\")\n-                    (const_string \"neon_shift_2\")\n-                    (const_string \"neon_vqshl_vrshl_vqrshl_qqq\")))]\n+  [(set_attr \"type\" \"neon_sat_shift_imm<q>\")]\n )\n \n (define_insn \"neon_vshr_n<mode>\"\n@@ -3952,7 +3719,7 @@\n   neon_const_bounds (operands[2], 1, neon_element_bits (<MODE>mode) + 1);\n   return \"v%O3shr.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %2\";\n }\n-  [(set_attr \"type\" \"neon_shift_1\")]\n+  [(set_attr \"type\" \"neon_shift_imm<q>\")]\n )\n \n (define_insn \"neon_vshrn_n<mode>\"\n@@ -3966,7 +3733,7 @@\n   neon_const_bounds (operands[2], 1, neon_element_bits (<MODE>mode) / 2 + 1);\n   return \"v%O3shrn.<V_if_elem>\\t%P0, %q1, %2\";\n }\n-  [(set_attr \"type\" \"neon_shift_1\")]\n+  [(set_attr \"type\" \"neon_shift_imm_narrow_q\")]\n )\n \n (define_insn \"neon_vqshrn_n<mode>\"\n@@ -3980,7 +3747,7 @@\n   neon_const_bounds (operands[2], 1, neon_element_bits (<MODE>mode) / 2 + 1);\n   return \"vq%O3shrn.%T3%#<V_sz_elem>\\t%P0, %q1, %2\";\n }\n-  [(set_attr \"type\" \"neon_shift_2\")]\n+  [(set_attr \"type\" \"neon_sat_shift_imm_narrow_q\")]\n )\n \n (define_insn \"neon_vqshrun_n<mode>\"\n@@ -3994,7 +3761,7 @@\n   neon_const_bounds (operands[2], 1, neon_element_bits (<MODE>mode) / 2 + 1);\n   return \"vq%O3shrun.%T3%#<V_sz_elem>\\t%P0, %q1, %2\";\n }\n-  [(set_attr \"type\" \"neon_shift_2\")]\n+  [(set_attr \"type\" \"neon_sat_shift_imm_narrow_q\")]\n )\n \n (define_insn \"neon_vshl_n<mode>\"\n@@ -4008,7 +3775,7 @@\n   neon_const_bounds (operands[2], 0, neon_element_bits (<MODE>mode));\n   return \"vshl.<V_if_elem>\\t%<V_reg>0, %<V_reg>1, %2\";\n }\n-  [(set_attr \"type\" \"neon_shift_1\")]\n+  [(set_attr \"type\" \"neon_shift_imm<q>\")]\n )\n \n (define_insn \"neon_vqshl_n<mode>\"\n@@ -4022,7 +3789,7 @@\n   neon_const_bounds (operands[2], 0, neon_element_bits (<MODE>mode));\n   return \"vqshl.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %2\";\n }\n-  [(set_attr \"type\" \"neon_shift_2\")]\n+  [(set_attr \"type\" \"neon_sat_shift_imm<q>\")]\n )\n \n (define_insn \"neon_vqshlu_n<mode>\"\n@@ -4036,7 +3803,7 @@\n   neon_const_bounds (operands[2], 0, neon_element_bits (<MODE>mode));\n   return \"vqshlu.%T3%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>1, %2\";\n }\n-  [(set_attr \"type\" \"neon_shift_2\")]\n+  [(set_attr \"type\" \"neon_sat_shift_imm<q>\")]\n )\n \n (define_insn \"neon_vshll_n<mode>\"\n@@ -4051,7 +3818,7 @@\n   neon_const_bounds (operands[2], 0, neon_element_bits (<MODE>mode) + 1);\n   return \"vshll.%T3%#<V_sz_elem>\\t%q0, %P1, %2\";\n }\n-  [(set_attr \"type\" \"neon_shift_1\")]\n+  [(set_attr \"type\" \"neon_shift_imm_long\")]\n )\n \n (define_insn \"neon_vsra_n<mode>\"\n@@ -4066,7 +3833,7 @@\n   neon_const_bounds (operands[3], 1, neon_element_bits (<MODE>mode) + 1);\n   return \"v%O4sra.%T4%#<V_sz_elem>\\t%<V_reg>0, %<V_reg>2, %3\";\n }\n-  [(set_attr \"type\" \"neon_vsra_vrsra\")]\n+  [(set_attr \"type\" \"neon_shift_acc<q>\")]\n )\n \n (define_insn \"neon_vsri_n<mode>\"\n@@ -4080,10 +3847,7 @@\n   neon_const_bounds (operands[3], 1, neon_element_bits (<MODE>mode) + 1);\n   return \"vsri.<V_sz_elem>\\t%<V_reg>0, %<V_reg>2, %3\";\n }\n-  [(set (attr \"type\")\n-      (if_then_else (match_test \"<Is_d_reg>\")\n-                    (const_string \"neon_shift_1\")\n-                    (const_string \"neon_shift_3\")))]\n+  [(set_attr \"type\" \"neon_shift_reg<q>\")]\n )\n \n (define_insn \"neon_vsli_n<mode>\"\n@@ -4097,10 +3861,7 @@\n   neon_const_bounds (operands[3], 0, neon_element_bits (<MODE>mode));\n   return \"vsli.<V_sz_elem>\\t%<V_reg>0, %<V_reg>2, %3\";\n }\n-  [(set (attr \"type\")\n-      (if_then_else (match_test \"<Is_d_reg>\")\n-                    (const_string \"neon_shift_1\")\n-                    (const_string \"neon_shift_3\")))]\n+  [(set_attr \"type\" \"neon_shift_reg<q>\")]\n )\n \n (define_insn \"neon_vtbl1v8qi\"\n@@ -4110,7 +3871,7 @@\n                      UNSPEC_VTBL))]\n   \"TARGET_NEON\"\n   \"vtbl.8\\t%P0, {%P1}, %P2\"\n-  [(set_attr \"type\" \"neon_bp_2cycle\")]\n+  [(set_attr \"type\" \"neon_tbl1\")]\n )\n \n (define_insn \"neon_vtbl2v8qi\"\n@@ -4131,7 +3892,7 @@\n \n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_bp_2cycle\")]\n+  [(set_attr \"type\" \"neon_tbl2\")]\n )\n \n (define_insn \"neon_vtbl3v8qi\"\n@@ -4153,7 +3914,7 @@\n \n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_bp_3cycle\")]\n+  [(set_attr \"type\" \"neon_tbl3\")]\n )\n \n (define_insn \"neon_vtbl4v8qi\"\n@@ -4176,7 +3937,7 @@\n \n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_bp_3cycle\")]\n+  [(set_attr \"type\" \"neon_tbl4\")]\n )\n \n ;; These three are used by the vec_perm infrastructure for V16QImode.\n@@ -4207,7 +3968,9 @@\n   part2 = simplify_subreg (V8QImode, op2, V16QImode, ofs);\n   emit_insn (gen_neon_vtbl2v8qi (part0, op1, part2));\n   DONE;\n-})\n+}\n+  [(set_attr \"type\" \"multiple\")]\n+)\n \n (define_insn_and_split \"neon_vtbl2v16qi\"\n   [(set (match_operand:V16QI 0 \"s_register_operand\" \"=&w\")\n@@ -4236,7 +3999,9 @@\n   part2 = simplify_subreg (V8QImode, op2, V16QImode, ofs);\n   emit_insn (gen_neon_vtbl2v8qi (part0, op1, part2));\n   DONE;\n-})\n+}\n+  [(set_attr \"type\" \"multiple\")]\n+)\n \n ;; ??? Logically we should extend the regular neon_vcombine pattern to\n ;; handle quad-word input modes, producing octa-word output modes.  But\n@@ -4254,7 +4019,9 @@\n {\n   neon_split_vcombine (operands);\n   DONE;\n-})\n+}\n+[(set_attr \"type\" \"multiple\")]\n+)\n \n (define_insn \"neon_vtbx1v8qi\"\n   [(set (match_operand:V8QI 0 \"s_register_operand\" \"=w\")\n@@ -4264,7 +4031,7 @@\n                      UNSPEC_VTBX))]\n   \"TARGET_NEON\"\n   \"vtbx.8\\t%P0, {%P2}, %P3\"\n-  [(set_attr \"type\" \"neon_bp_2cycle\")]\n+  [(set_attr \"type\" \"neon_tbl1\")]\n )\n \n (define_insn \"neon_vtbx2v8qi\"\n@@ -4286,7 +4053,7 @@\n \n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_bp_2cycle\")]\n+  [(set_attr \"type\" \"neon_tbl2\")]\n )\n \n (define_insn \"neon_vtbx3v8qi\"\n@@ -4309,7 +4076,7 @@\n \n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_bp_3cycle\")]\n+  [(set_attr \"type\" \"neon_tbl3\")]\n )\n \n (define_insn \"neon_vtbx4v8qi\"\n@@ -4333,7 +4100,7 @@\n \n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_bp_3cycle\")]\n+  [(set_attr \"type\" \"neon_tbl4\")]\n )\n \n (define_expand \"neon_vtrn<mode>_internal\"\n@@ -4359,10 +4126,7 @@\n                      UNSPEC_VTRN2))]\n   \"TARGET_NEON\"\n   \"vtrn.<V_sz_elem>\\t%<V_reg>0, %<V_reg>2\"\n-  [(set (attr \"type\")\n-      (if_then_else (match_test \"<Is_d_reg>\")\n-                    (const_string \"neon_bp_simple\")\n-                    (const_string \"neon_bp_3cycle\")))]\n+  [(set_attr \"type\" \"neon_permute<q>\")]\n )\n \n (define_expand \"neon_vtrn<mode>\"\n@@ -4399,10 +4163,7 @@\n                      UNSPEC_VZIP2))]\n   \"TARGET_NEON\"\n   \"vzip.<V_sz_elem>\\t%<V_reg>0, %<V_reg>2\"\n-  [(set (attr \"type\")\n-      (if_then_else (match_test \"<Is_d_reg>\")\n-                    (const_string \"neon_bp_simple\")\n-                    (const_string \"neon_bp_3cycle\")))]\n+  [(set_attr \"type\" \"neon_zip<q>\")]\n )\n \n (define_expand \"neon_vzip<mode>\"\n@@ -4439,10 +4200,7 @@\n                      UNSPEC_VUZP2))]\n   \"TARGET_NEON\"\n   \"vuzp.<V_sz_elem>\\t%<V_reg>0, %<V_reg>2\"\n-  [(set (attr \"type\")\n-      (if_then_else (match_test \"<Is_d_reg>\")\n-                    (const_string \"neon_bp_simple\")\n-                    (const_string \"neon_bp_3cycle\")))]\n+  [(set_attr \"type\" \"neon_zip<q>\")]\n )\n \n (define_expand \"neon_vuzp<mode>\"\n@@ -4558,7 +4316,7 @@\n                     UNSPEC_VLD1))]\n   \"TARGET_NEON\"\n   \"vld1.<V_sz_elem>\\t%h0, %A1\"\n-  [(set_attr \"type\" \"neon_vld1_1_2_regs\")]\n+  [(set_attr \"type\" \"neon_load1_1reg<q>\")]\n )\n \n (define_insn \"neon_vld1_lane<mode>\"\n@@ -4578,10 +4336,7 @@\n   else\n     return \"vld1.<V_sz_elem>\\t{%P0[%c3]}, %A1\";\n }\n-  [(set (attr \"type\")\n-      (if_then_else (eq (const_string \"<V_mode_nunits>\") (const_int 2))\n-                    (const_string \"neon_vld1_1_2_regs\")\n-                    (const_string \"neon_vld1_vld2_lane\")))]\n+  [(set_attr \"type\" \"neon_load1_one_lane<q>\")]\n )\n \n (define_insn \"neon_vld1_lane<mode>\"\n@@ -4609,18 +4364,15 @@\n   else\n     return \"vld1.<V_sz_elem>\\t{%P0[%c3]}, %A1\";\n }\n-  [(set (attr \"type\")\n-      (if_then_else (eq (const_string \"<V_mode_nunits>\") (const_int 2))\n-                    (const_string \"neon_vld1_1_2_regs\")\n-                    (const_string \"neon_vld1_vld2_lane\")))]\n+  [(set_attr \"type\" \"neon_load1_one_lane<q>\")]\n )\n \n (define_insn \"neon_vld1_dup<mode>\"\n   [(set (match_operand:VD 0 \"s_register_operand\" \"=w\")\n         (vec_duplicate:VD (match_operand:<V_elem> 1 \"neon_struct_operand\" \"Um\")))]\n   \"TARGET_NEON\"\n   \"vld1.<V_sz_elem>\\t{%P0[]}, %A1\"\n-  [(set_attr \"type\" \"neon_vld2_2_regs_vld1_vld2_all_lanes\")]\n+  [(set_attr \"type\" \"neon_load1_all_lanes<q>\")]\n )\n \n ;; Special case for DImode.  Treat it exactly like a simple load.\n@@ -4639,7 +4391,7 @@\n {\n   return \"vld1.<V_sz_elem>\\t{%e0[], %f0[]}, %A1\";\n }\n-  [(set_attr \"type\" \"neon_vld2_2_regs_vld1_vld2_all_lanes\")]\n+  [(set_attr \"type\" \"neon_load1_all_lanes<q>\")]\n )\n \n (define_insn_and_split \"neon_vld1_dupv2di\"\n@@ -4656,7 +4408,7 @@\n     DONE;\n     }\n   [(set_attr \"length\" \"8\")\n-   (set_attr \"type\" \"neon_vld2_2_regs_vld1_vld2_all_lanes\")]\n+   (set_attr \"type\" \"neon_load1_all_lanes_q\")]\n )\n \n (define_expand \"vec_store_lanes<mode><mode>\"\n@@ -4671,7 +4423,7 @@\n \t\t     UNSPEC_VST1))]\n   \"TARGET_NEON\"\n   \"vst1.<V_sz_elem>\\t%h1, %A0\"\n-  [(set_attr \"type\" \"neon_vst1_1_2_regs_vst2_2_regs\")])\n+  [(set_attr \"type\" \"neon_store1_1reg<q>\")])\n \n (define_insn \"neon_vst1_lane<mode>\"\n   [(set (match_operand:<V_elem> 0 \"neon_struct_operand\" \"=Um\")\n@@ -4690,10 +4442,8 @@\n   else\n     return \"vst1.<V_sz_elem>\\t{%P1[%c2]}, %A0\";\n }\n-  [(set (attr \"type\")\n-      (if_then_else (eq (const_string \"<V_mode_nunits>\") (const_int 1))\n-                    (const_string \"neon_vst1_1_2_regs_vst2_2_regs\")\n-                    (const_string \"neon_vst1_vst2_lane\")))])\n+  [(set_attr \"type\" \"neon_store1_one_lane<q>\")]\n+)\n \n (define_insn \"neon_vst1_lane<mode>\"\n   [(set (match_operand:<V_elem> 0 \"neon_struct_operand\" \"=Um\")\n@@ -4720,7 +4470,7 @@\n   else\n     return \"vst1.<V_sz_elem>\\t{%P1[%c2]}, %A0\";\n }\n-  [(set_attr \"type\" \"neon_vst1_vst2_lane\")]\n+  [(set_attr \"type\" \"neon_store1_one_lane<q>\")]\n )\n \n (define_expand \"vec_load_lanesti<mode>\"\n@@ -4744,8 +4494,8 @@\n }\n   [(set (attr \"type\")\n       (if_then_else (eq (const_string \"<V_sz_elem>\") (const_string \"64\"))\n-                    (const_string \"neon_vld1_1_2_regs\")\n-                    (const_string \"neon_vld2_2_regs_vld1_vld2_all_lanes\")))]\n+                    (const_string \"neon_load1_2reg<q>\")\n+                    (const_string \"neon_load2_2reg<q>\")))]\n )\n \n (define_expand \"vec_load_lanesoi<mode>\"\n@@ -4762,7 +4512,7 @@\n                    UNSPEC_VLD2))]\n   \"TARGET_NEON\"\n   \"vld2.<V_sz_elem>\\t%h0, %A1\"\n-  [(set_attr \"type\" \"neon_vld2_2_regs_vld1_vld2_all_lanes\")])\n+  [(set_attr \"type\" \"neon_load2_2reg_q\")])\n \n (define_insn \"neon_vld2_lane<mode>\"\n   [(set (match_operand:TI 0 \"s_register_operand\" \"=w\")\n@@ -4786,7 +4536,7 @@\n   output_asm_insn (\"vld2.<V_sz_elem>\\t{%P0[%c3], %P1[%c3]}, %A2\", ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vld1_vld2_lane\")]\n+  [(set_attr \"type\" \"neon_load2_one_lane<q>\")]\n )\n \n (define_insn \"neon_vld2_lane<mode>\"\n@@ -4816,7 +4566,7 @@\n   output_asm_insn (\"vld2.<V_sz_elem>\\t{%P0[%c3], %P1[%c3]}, %A2\", ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vld1_vld2_lane\")]\n+  [(set_attr \"type\" \"neon_load2_one_lane<q>\")]\n )\n \n (define_insn \"neon_vld2_dup<mode>\"\n@@ -4833,8 +4583,8 @@\n }\n   [(set (attr \"type\")\n       (if_then_else (gt (const_string \"<V_mode_nunits>\") (const_string \"1\"))\n-                    (const_string \"neon_vld2_2_regs_vld1_vld2_all_lanes\")\n-                    (const_string \"neon_vld1_1_2_regs\")))]\n+                    (const_string \"neon_load2_all_lanes<q>\")\n+                    (const_string \"neon_load1_1reg<q>\")))]\n )\n \n (define_expand \"vec_store_lanesti<mode>\"\n@@ -4858,8 +4608,8 @@\n }\n   [(set (attr \"type\")\n       (if_then_else (eq (const_string \"<V_sz_elem>\") (const_string \"64\"))\n-                    (const_string \"neon_vst1_1_2_regs_vst2_2_regs\")\n-                    (const_string \"neon_vst1_1_2_regs_vst2_2_regs\")))]\n+                    (const_string \"neon_store1_2reg<q>\")\n+                    (const_string \"neon_store2_one_lane<q>\")))]\n )\n \n (define_expand \"vec_store_lanesoi<mode>\"\n@@ -4876,7 +4626,7 @@\n \t\t   UNSPEC_VST2))]\n   \"TARGET_NEON\"\n   \"vst2.<V_sz_elem>\\t%h1, %A0\"\n-  [(set_attr \"type\" \"neon_vst1_1_2_regs_vst2_2_regs\")]\n+  [(set_attr \"type\" \"neon_store2_4reg<q>\")]\n )\n \n (define_insn \"neon_vst2_lane<mode>\"\n@@ -4901,7 +4651,7 @@\n   output_asm_insn (\"vst2.<V_sz_elem>\\t{%P1[%c3], %P2[%c3]}, %A0\", ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vst1_vst2_lane\")]\n+  [(set_attr \"type\" \"neon_store2_one_lane<q>\")]\n )\n \n (define_insn \"neon_vst2_lane<mode>\"\n@@ -4931,7 +4681,7 @@\n   output_asm_insn (\"vst2.<V_sz_elem>\\t{%P1[%c3], %P2[%c3]}, %A0\", ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vst1_vst2_lane\")]\n+  [(set_attr \"type\" \"neon_store2_one_lane<q>\")]\n )\n \n (define_expand \"vec_load_lanesei<mode>\"\n@@ -4955,8 +4705,8 @@\n }\n   [(set (attr \"type\")\n       (if_then_else (eq (const_string \"<V_sz_elem>\") (const_string \"64\"))\n-                    (const_string \"neon_vld1_1_2_regs\")\n-                    (const_string \"neon_vld3_vld4\")))]\n+                    (const_string \"neon_load1_3reg<q>\")\n+                    (const_string \"neon_load3_3reg<q>\")))]\n )\n \n (define_expand \"vec_load_lanesci<mode>\"\n@@ -5000,7 +4750,7 @@\n   output_asm_insn (\"vld3.<V_sz_elem>\\t{%P0, %P1, %P2}, %A3\", ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vld3_vld4\")]\n+  [(set_attr \"type\" \"neon_load3_3reg<q>\")]\n )\n \n (define_insn \"neon_vld3qb<mode>\"\n@@ -5020,7 +4770,7 @@\n   output_asm_insn (\"vld3.<V_sz_elem>\\t{%P0, %P1, %P2}, %A3\", ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vld3_vld4\")]\n+  [(set_attr \"type\" \"neon_load3_3reg<q>\")]\n )\n \n (define_insn \"neon_vld3_lane<mode>\"\n@@ -5047,7 +4797,7 @@\n                    ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vld3_vld4_lane\")]\n+  [(set_attr \"type\" \"neon_load3_one_lane<q>\")]\n )\n \n (define_insn \"neon_vld3_lane<mode>\"\n@@ -5079,7 +4829,7 @@\n                    ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vld3_vld4_lane\")]\n+  [(set_attr \"type\" \"neon_load3_one_lane<q>\")]\n )\n \n (define_insn \"neon_vld3_dup<mode>\"\n@@ -5105,8 +4855,8 @@\n }\n   [(set (attr \"type\")\n       (if_then_else (gt (const_string \"<V_mode_nunits>\") (const_string \"1\"))\n-                    (const_string \"neon_vld3_vld4_all_lanes\")\n-                    (const_string \"neon_vld1_1_2_regs\")))])\n+                    (const_string \"neon_load3_all_lanes<q>\")\n+                    (const_string \"neon_load1_1reg<q>\")))])\n \n (define_expand \"vec_store_lanesei<mode>\"\n   [(set (match_operand:EI 0 \"neon_struct_operand\")\n@@ -5129,8 +4879,8 @@\n }\n   [(set (attr \"type\")\n       (if_then_else (eq (const_string \"<V_sz_elem>\") (const_string \"64\"))\n-                    (const_string \"neon_vst1_1_2_regs_vst2_2_regs\")\n-                    (const_string \"neon_vst2_4_regs_vst3_vst4\")))])\n+                    (const_string \"neon_store1_3reg<q>\")\n+                    (const_string \"neon_store3_one_lane<q>\")))])\n \n (define_expand \"vec_store_lanesci<mode>\"\n   [(match_operand:CI 0 \"neon_struct_operand\")\n@@ -5173,7 +4923,7 @@\n   output_asm_insn (\"vst3.<V_sz_elem>\\t{%P1, %P2, %P3}, %A0\", ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vst2_4_regs_vst3_vst4\")]\n+  [(set_attr \"type\" \"neon_store3_3reg<q>\")]\n )\n \n (define_insn \"neon_vst3qb<mode>\"\n@@ -5192,7 +4942,7 @@\n   output_asm_insn (\"vst3.<V_sz_elem>\\t{%P1, %P2, %P3}, %A0\", ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vst2_4_regs_vst3_vst4\")]\n+  [(set_attr \"type\" \"neon_store3_3reg<q>\")]\n )\n \n (define_insn \"neon_vst3_lane<mode>\"\n@@ -5219,7 +4969,7 @@\n                    ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vst3_vst4_lane\")]\n+  [(set_attr \"type\" \"neon_store3_one_lane<q>\")]\n )\n \n (define_insn \"neon_vst3_lane<mode>\"\n@@ -5251,7 +5001,8 @@\n                    ops);\n   return \"\";\n }\n-[(set_attr \"type\" \"neon_vst3_vst4_lane\")])\n+  [(set_attr \"type\" \"neon_store3_one_lane<q>\")]\n+)\n \n (define_expand \"vec_load_lanesoi<mode>\"\n   [(set (match_operand:OI 0 \"s_register_operand\")\n@@ -5274,8 +5025,8 @@\n }\n   [(set (attr \"type\")\n       (if_then_else (eq (const_string \"<V_sz_elem>\") (const_string \"64\"))\n-                    (const_string \"neon_vld1_1_2_regs\")\n-                    (const_string \"neon_vld3_vld4\")))]\n+                    (const_string \"neon_load1_4reg<q>\")\n+                    (const_string \"neon_load4_4reg<q>\")))]\n )\n \n (define_expand \"vec_load_lanesxi<mode>\"\n@@ -5320,7 +5071,7 @@\n   output_asm_insn (\"vld4.<V_sz_elem>\\t{%P0, %P1, %P2, %P3}, %A4\", ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vld3_vld4\")]\n+  [(set_attr \"type\" \"neon_load4_4reg<q>\")]\n )\n \n (define_insn \"neon_vld4qb<mode>\"\n@@ -5341,7 +5092,7 @@\n   output_asm_insn (\"vld4.<V_sz_elem>\\t{%P0, %P1, %P2, %P3}, %A4\", ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vld3_vld4\")]\n+  [(set_attr \"type\" \"neon_load4_4reg<q>\")]\n )\n \n (define_insn \"neon_vld4_lane<mode>\"\n@@ -5369,7 +5120,7 @@\n                    ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vld3_vld4_lane\")]\n+  [(set_attr \"type\" \"neon_load4_one_lane<q>\")]\n )\n \n (define_insn \"neon_vld4_lane<mode>\"\n@@ -5402,7 +5153,7 @@\n                    ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vld3_vld4_lane\")]\n+  [(set_attr \"type\" \"neon_load4_one_lane<q>\")]\n )\n \n (define_insn \"neon_vld4_dup<mode>\"\n@@ -5430,8 +5181,8 @@\n }\n   [(set (attr \"type\")\n       (if_then_else (gt (const_string \"<V_mode_nunits>\") (const_string \"1\"))\n-                    (const_string \"neon_vld3_vld4_all_lanes\")\n-                    (const_string \"neon_vld1_1_2_regs\")))]\n+                    (const_string \"neon_load4_all_lanes<q>\")\n+                    (const_string \"neon_load1_1reg<q>\")))]\n )\n \n (define_expand \"vec_store_lanesoi<mode>\"\n@@ -5455,8 +5206,8 @@\n }\n   [(set (attr \"type\")\n       (if_then_else (eq (const_string \"<V_sz_elem>\") (const_string \"64\"))\n-                    (const_string \"neon_vst1_1_2_regs_vst2_2_regs\")\n-                    (const_string \"neon_vst2_4_regs_vst3_vst4\")))]\n+                    (const_string \"neon_store1_4reg<q>\")\n+                    (const_string \"neon_store4_4reg<q>\")))]\n )\n \n (define_expand \"vec_store_lanesxi<mode>\"\n@@ -5501,7 +5252,7 @@\n   output_asm_insn (\"vst4.<V_sz_elem>\\t{%P1, %P2, %P3, %P4}, %A0\", ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vst2_4_regs_vst3_vst4\")]\n+  [(set_attr \"type\" \"neon_store4_4reg<q>\")]\n )\n \n (define_insn \"neon_vst4qb<mode>\"\n@@ -5521,7 +5272,7 @@\n   output_asm_insn (\"vst4.<V_sz_elem>\\t{%P1, %P2, %P3, %P4}, %A0\", ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vst2_4_regs_vst3_vst4\")]\n+  [(set_attr \"type\" \"neon_store4_4reg<q>\")]\n )\n \n (define_insn \"neon_vst4_lane<mode>\"\n@@ -5549,7 +5300,7 @@\n                    ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vst3_vst4_lane\")]\n+  [(set_attr \"type\" \"neon_store4_one_lane<q>\")]\n )\n \n (define_insn \"neon_vst4_lane<mode>\"\n@@ -5582,7 +5333,7 @@\n                    ops);\n   return \"\";\n }\n-  [(set_attr \"type\" \"neon_vst3_vst4_lane\")]\n+  [(set_attr \"type\" \"neon_store4_4reg<q>\")]\n )\n \n (define_expand \"neon_vand<mode>\"\n@@ -5647,7 +5398,7 @@\n \t\t\t  (match_operand:VU 2 \"vect_par_constant_low\" \"\"))))]\n   \"TARGET_NEON && !BYTES_BIG_ENDIAN\"\n   \"vmovl.<US><V_sz_elem> %q0, %e1\"\n-  [(set_attr \"type\" \"neon_shift_1\")]\n+  [(set_attr \"type\" \"neon_shift_imm_long\")]\n )\n \n (define_insn \"neon_vec_unpack<US>_hi_<mode>\"\n@@ -5657,7 +5408,7 @@\n \t\t\t  (match_operand:VU 2 \"vect_par_constant_high\" \"\"))))]\n   \"TARGET_NEON && !BYTES_BIG_ENDIAN\"\n   \"vmovl.<US><V_sz_elem> %q0, %f1\"\n-  [(set_attr \"type\" \"neon_shift_1\")]\n+  [(set_attr \"type\" \"neon_shift_imm_long\")]\n )\n \n (define_expand \"vec_unpack<US>_hi_<mode>\"\n@@ -5707,7 +5458,7 @@\n                            (match_dup 2)))))]\n   \"TARGET_NEON && !BYTES_BIG_ENDIAN\"\n   \"vmull.<US><V_sz_elem> %q0, %e1, %e3\"\n-  [(set_attr \"type\" \"neon_shift_1\")]\n+  [(set_attr \"type\" \"neon_mul_<V_elem_ch>_long\")]\n )\n \n (define_expand \"vec_widen_<US>mult_lo_<mode>\"\n@@ -5741,7 +5492,7 @@\n \t\t\t    (match_dup 2)))))]\n   \"TARGET_NEON && !BYTES_BIG_ENDIAN\"\n   \"vmull.<US><V_sz_elem> %q0, %f1, %f3\"\n-  [(set_attr \"type\" \"neon_shift_1\")]\n+  [(set_attr \"type\" \"neon_mul_<V_elem_ch>_long\")]\n )\n \n (define_expand \"vec_widen_<US>mult_hi_<mode>\"\n@@ -5774,7 +5525,7 @@\n {\n   return \"vshll.<US><V_sz_elem> %q0, %P1, %2\";\n }\n-  [(set_attr \"type\" \"neon_shift_1\")]\n+  [(set_attr \"type\" \"neon_shift_imm_long\")]\n )\n \n (define_expand \"vec_widen_<US>shiftl_lo_<mode>\"\n@@ -5810,7 +5561,7 @@\n        (SE:<V_widen> (match_operand:VDI 1 \"register_operand\" \"w\")))]\n  \"TARGET_NEON\"\n  \"vmovl.<US><V_sz_elem> %q0, %P1\"\n-  [(set_attr \"type\" \"neon_shift_1\")]\n+  [(set_attr \"type\" \"neon_move\")]\n )\n \n (define_expand \"vec_unpack<US>_lo_<mode>\"\n@@ -5847,7 +5598,7 @@\n \t\t\t   (match_operand:VDI 2 \"register_operand\" \"w\"))))]\n   \"TARGET_NEON\"\n   \"vmull.<US><V_sz_elem> %q0, %P1, %P2\"\n-  [(set_attr \"type\" \"neon_shift_1\")]\n+  [(set_attr \"type\" \"neon_mul_<V_elem_ch>_long\")]\n )\n \n (define_expand \"vec_widen_<US>mult_hi_<mode>\"\n@@ -5921,7 +5672,7 @@\n \t\t\t(match_operand:VN 2 \"register_operand\" \"w\"))))]\n  \"TARGET_NEON && !BYTES_BIG_ENDIAN\"\n  \"vmovn.i<V_sz_elem>\\t%e0, %q1\\;vmovn.i<V_sz_elem>\\t%f0, %q2\"\n- [(set_attr \"type\" \"neon_shift_1\")\n+ [(set_attr \"type\" \"multiple\")\n   (set_attr \"length\" \"8\")]\n )\n \n@@ -5931,7 +5682,7 @@\n        (truncate:<V_narrow> (match_operand:VN 1 \"register_operand\" \"w\")))]\n  \"TARGET_NEON && !BYTES_BIG_ENDIAN\"\n  \"vmovn.i<V_sz_elem>\\t%P0, %q1\"\n- [(set_attr \"type\" \"neon_shift_1\")]\n+ [(set_attr \"type\" \"neon_move_narrow_q\")]\n )\n \n (define_expand \"vec_pack_trunc_<mode>\"\n@@ -5956,10 +5707,8 @@\n  \"vabd.<V_s_elem> %<V_reg>0, %<V_reg>1, %<V_reg>2\"\n  [(set (attr \"type\")\n        (if_then_else (ne (symbol_ref \"<Is_float_mode>\") (const_int 0))\n-                     (if_then_else (ne (symbol_ref \"<Is_d_reg>\") (const_int 0))\n-                                   (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                   (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                     (const_string \"neon_int_5\")))]\n+                     (const_string \"neon_fp_abd_s<q>\")\n+                     (const_string \"neon_abd<q>\")))]\n )\n \n (define_insn \"neon_vabd<mode>_3\"\n@@ -5971,10 +5720,8 @@\n  \"vabd.<V_if_elem> %<V_reg>0, %<V_reg>1, %<V_reg>2\"\n  [(set (attr \"type\")\n        (if_then_else (ne (symbol_ref \"<Is_float_mode>\") (const_int 0))\n-                     (if_then_else (ne (symbol_ref \"<Is_d_reg>\") (const_int 0))\n-                                   (const_string \"neon_fp_vadd_ddd_vabs_dd\")\n-                                   (const_string \"neon_fp_vadd_qqq_vabs_qq\"))\n-                     (const_string \"neon_int_5\")))]\n+                     (const_string \"neon_fp_abd_s<q>\")\n+                     (const_string \"neon_abd<q>\")))]\n )\n \n ;; Copy from core-to-neon regs, then extend, not vice-versa"}, {"sha": "22b63251a87398f0756671c541e2bb51eefdd721", "filename": "gcc/config/arm/vfp.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/f7379e5eb940dc3f0c4580ced0eaefe2610fdf74/gcc%2Fconfig%2Farm%2Fvfp.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/f7379e5eb940dc3f0c4580ced0eaefe2610fdf74/gcc%2Fconfig%2Farm%2Fvfp.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Farm%2Fvfp.md?ref=f7379e5eb940dc3f0c4580ced0eaefe2610fdf74", "patch": "@@ -260,7 +260,7 @@\n     }\n   \"\n   [(set_attr \"conds\" \"unconditional\")\n-   (set_attr \"type\" \"neon_vld1_1_2_regs,neon_vst1_1_2_regs_vst2_2_regs,\\\n+   (set_attr \"type\" \"neon_load1_1reg,neon_store1_1reg,\\\n                      load1,store1,fmov,mov_reg,f_mcr,f_mrc,multiple\")\n    (set_attr \"length\" \"4,4,4,4,4,4,4,4,8\")]\n )"}]}