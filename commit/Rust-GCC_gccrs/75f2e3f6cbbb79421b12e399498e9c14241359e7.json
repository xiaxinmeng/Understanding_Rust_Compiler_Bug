{"sha": "75f2e3f6cbbb79421b12e399498e9c14241359e7", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NzVmMmUzZjZjYmJiNzk0MjFiMTJlMzk5NDk4ZTljMTQyNDEzNTllNw==", "commit": {"author": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-07-26T15:24:38Z"}, "committer": {"name": "Iain Buclaw", "email": "ibuclaw@gdcproject.org", "date": "2021-07-29T14:16:19Z"}, "message": "d: Remove generated D header files on error (PR101657)\n\nIf an error occurs later during compilation, remember that we generated\nthe headers, so that they can be removed before exit.\n\n\tPR d/101657\n\ngcc/d/ChangeLog:\n\n\t* d-lang.cc (d_parse_file): Remove generated D header files on error.\n\ngcc/testsuite/ChangeLog:\n\n\t* gdc.dg/pr101657.d: New test.", "tree": {"sha": "ab0e65acc0edaf0959a2f23fdc3a3a4f2c66c1b4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/ab0e65acc0edaf0959a2f23fdc3a3a4f2c66c1b4"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/75f2e3f6cbbb79421b12e399498e9c14241359e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75f2e3f6cbbb79421b12e399498e9c14241359e7", "html_url": "https://github.com/Rust-GCC/gccrs/commit/75f2e3f6cbbb79421b12e399498e9c14241359e7", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/75f2e3f6cbbb79421b12e399498e9c14241359e7/comments", "author": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ibuclaw", "id": 397929, "node_id": "MDQ6VXNlcjM5NzkyOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/397929?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ibuclaw", "html_url": "https://github.com/ibuclaw", "followers_url": "https://api.github.com/users/ibuclaw/followers", "following_url": "https://api.github.com/users/ibuclaw/following{/other_user}", "gists_url": "https://api.github.com/users/ibuclaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/ibuclaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ibuclaw/subscriptions", "organizations_url": "https://api.github.com/users/ibuclaw/orgs", "repos_url": "https://api.github.com/users/ibuclaw/repos", "events_url": "https://api.github.com/users/ibuclaw/events{/privacy}", "received_events_url": "https://api.github.com/users/ibuclaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd4bda42979cb40860a9cd2c0ed188b9a0948cd4", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/cd4bda42979cb40860a9cd2c0ed188b9a0948cd4", "html_url": "https://github.com/Rust-GCC/gccrs/commit/cd4bda42979cb40860a9cd2c0ed188b9a0948cd4"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "ac0945b1f3444886735443c3ebdbaf48ae8b2e3e", "filename": "gcc/d/d-lang.cc", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75f2e3f6cbbb79421b12e399498e9c14241359e7/gcc%2Fd%2Fd-lang.cc", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75f2e3f6cbbb79421b12e399498e9c14241359e7/gcc%2Fd%2Fd-lang.cc", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fd%2Fd-lang.cc?ref=75f2e3f6cbbb79421b12e399498e9c14241359e7", "patch": "@@ -1000,6 +1000,10 @@ d_parse_file (void)\n \t}\n     }\n \n+  /* If an error occurs later during compilation, remember that we generated\n+     the headers, so that they can be removed before exit.  */\n+  bool dump_headers = false;\n+\n   if (global.errors)\n     goto had_errors;\n \n@@ -1019,6 +1023,8 @@ d_parse_file (void)\n \n \t  genhdrfile (m);\n \t}\n+\n+      dump_headers = true;\n     }\n \n   if (global.errors)\n@@ -1243,6 +1249,19 @@ d_parse_file (void)\n      exit with an error status.  */\n   errorcount += (global.errors + global.warnings);\n \n+  /* Remove generated .di files on error.  */\n+  if (errorcount && dump_headers)\n+    {\n+      for (size_t i = 0; i < modules.length; i++)\n+\t{\n+\t  Module *m = modules[i];\n+\t  if (d_option.fonly && m != Module::rootModule)\n+\t    continue;\n+\n+\t  remove (m->hdrfile->toChars ());\n+\t}\n+    }\n+\n   /* Write out globals.  */\n   d_finish_compilation (vec_safe_address (global_declarations),\n \t\t\tvec_safe_length (global_declarations));"}, {"sha": "0d77c36f0306fe0fba6acdf9f20a3ec73264f7c1", "filename": "gcc/testsuite/gdc.dg/pr101657.d", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/75f2e3f6cbbb79421b12e399498e9c14241359e7/gcc%2Ftestsuite%2Fgdc.dg%2Fpr101657.d", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/75f2e3f6cbbb79421b12e399498e9c14241359e7/gcc%2Ftestsuite%2Fgdc.dg%2Fpr101657.d", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Ftestsuite%2Fgdc.dg%2Fpr101657.d?ref=75f2e3f6cbbb79421b12e399498e9c14241359e7", "patch": "@@ -0,0 +1,14 @@\n+// https://gcc.gnu.org/bugzilla/show_bug.cgi?id=101657\n+// { dg-do compile }\n+// { dg-additional-options \"-H\" }\n+\n+void fun101657()\n+{\n+    fail; // { dg-error \"undefined identifier 'fail'\" }\n+}\n+\n+// { dg-final { if ![file exists pr101657.di] \\{                } }\n+// { dg-final {     pass \"gdc.dg/pr101657.d   (file exists pr101657.di)\" } }\n+// { dg-final { \\} else \\{                                      } }\n+// { dg-final {     fail \"gdc.dg/pr101657.d   (file exists pr101657.di)\" } }\n+// { dg-final { \\}                                              } }"}]}