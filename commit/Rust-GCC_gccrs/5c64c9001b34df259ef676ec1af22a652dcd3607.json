{"sha": "5c64c9001b34df259ef676ec1af22a652dcd3607", "node_id": "MDY6Q29tbWl0MTM2NTMxMDA6NWM2NGM5MDAxYjM0ZGYyNTllZjY3NmVjMWFmMjJhNjUyZGNkMzYwNw==", "commit": {"author": {"name": "Richard Henderson", "email": "rth@redhat.com", "date": "2004-06-07T17:21:05Z"}, "committer": {"name": "Richard Henderson", "email": "rth@gcc.gnu.org", "date": "2004-06-07T17:21:05Z"}, "message": "re PR rtl-optimization/15193 (Unary minus using pointer to V4SF vector causes -fforce-mem to exhaust all memory)\n\n        PR rtl-opt/15193\n        * expmed.c (extract_bit_field): Fix vector_extract return.\n        * config/i386/i386.md (negv4sf2): New pattern.\n\nFrom-SVN: r82699", "tree": {"sha": "5e74f52ca677863288bf42f1e90e033f30e5e686", "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/trees/5e74f52ca677863288bf42f1e90e033f30e5e686"}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/git/commits/5c64c9001b34df259ef676ec1af22a652dcd3607", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c64c9001b34df259ef676ec1af22a652dcd3607", "html_url": "https://github.com/Rust-GCC/gccrs/commit/5c64c9001b34df259ef676ec1af22a652dcd3607", "comments_url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/5c64c9001b34df259ef676ec1af22a652dcd3607/comments", "author": null, "committer": null, "parents": [{"sha": "07d5edd25f93b247c49250803a3e37b8f17027b2", "url": "https://api.github.com/repos/Rust-GCC/gccrs/commits/07d5edd25f93b247c49250803a3e37b8f17027b2", "html_url": "https://github.com/Rust-GCC/gccrs/commit/07d5edd25f93b247c49250803a3e37b8f17027b2"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "a096a8ac2f7e2169830cf8882376807405c04779", "filename": "gcc/ChangeLog", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c64c9001b34df259ef676ec1af22a652dcd3607/gcc%2FChangeLog", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c64c9001b34df259ef676ec1af22a652dcd3607/gcc%2FChangeLog", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2FChangeLog?ref=5c64c9001b34df259ef676ec1af22a652dcd3607", "patch": "@@ -1,3 +1,10 @@\n+2004-06-07  Richard Henderson  <rth@redhat.com>\n+\n+\tPR rtl-opt/15193\n+\t* expmed.c (extract_bit_field): Fix vector_extract return.\n+\n+\t* config/i386/i386.md (negv4sf2): New pattern.\n+\n 2004-06-07  Mark Mitchell  <mark@codesourcery.com>\n \n \tPR c++/15337"}, {"sha": "ed2c579330b579121ad22f7d0ece655e092dd5dd", "filename": "gcc/config/i386/i386.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c64c9001b34df259ef676ec1af22a652dcd3607/gcc%2Fconfig%2Fi386%2Fi386.md", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c64c9001b34df259ef676ec1af22a652dcd3607/gcc%2Fconfig%2Fi386%2Fi386.md", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fconfig%2Fi386%2Fi386.md?ref=5c64c9001b34df259ef676ec1af22a652dcd3607", "patch": "@@ -20404,6 +20404,18 @@\n   [(set_attr \"type\" \"sseadd\")\n    (set_attr \"mode\" \"SF\")])\n \n+;; ??? Should probably be done by generic code instead.\n+(define_expand \"negv4sf2\"\n+  [(set (match_operand:V4SF 0 \"register_operand\" \"\")\n+\t(xor:V4SF (match_operand:V4SF 1 \"nonimmediate_operand\" \"\")\n+\t          (match_dup 2)))]\n+  \"TARGET_SSE\"\n+{\n+  rtx m0 = gen_lowpart (SFmode, gen_int_mode (0x80000000, SImode));\n+  rtx vm0 = gen_rtx_CONST_VECTOR (V4SFmode, gen_rtvec (4, m0, m0, m0, m0));\n+  operands[2] = force_reg (V4SFmode, vm0);\n+})\n+\n (define_insn \"mulv4sf3\"\n   [(set (match_operand:V4SF 0 \"register_operand\" \"=x\")\n         (mult:V4SF (match_operand:V4SF 1 \"register_operand\" \"0\")"}, {"sha": "9679b71bd71a0910c4e0d19e71548f76475ac504", "filename": "gcc/expmed.c", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/Rust-GCC/gccrs/blob/5c64c9001b34df259ef676ec1af22a652dcd3607/gcc%2Fexpmed.c", "raw_url": "https://github.com/Rust-GCC/gccrs/raw/5c64c9001b34df259ef676ec1af22a652dcd3607/gcc%2Fexpmed.c", "contents_url": "https://api.github.com/repos/Rust-GCC/gccrs/contents/gcc%2Fexpmed.c?ref=5c64c9001b34df259ef676ec1af22a652dcd3607", "patch": "@@ -1125,16 +1125,15 @@ extract_bit_field (rtx str_rtx, unsigned HOST_WIDE_INT bitsize,\n \t  || ! (*insn_data[icode].operand[1].predicate) (src, mode1)\n \t  || ! (*insn_data[icode].operand[2].predicate) (rtxpos, mode2))\n \tabort ();\n+\n       pat = GEN_FCN (icode) (dest, src, rtxpos);\n       seq = get_insns ();\n       end_sequence ();\n       if (pat)\n \t{\n \t  emit_insn (seq);\n \t  emit_insn (pat);\n-\t  return extract_bit_field (dest, bitsize,\n-\t\t\t\t    bitnum - pos * GET_MODE_BITSIZE (innermode),\n-\t\t\t\t    unsignedp, target, mode, tmode, total_size);\n+\t  return dest;\n \t}\n     }\n "}]}